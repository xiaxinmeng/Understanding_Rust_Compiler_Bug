{"sha": "ba4f4e5d1cc4bf5dc19167c5fd2179e100cdf5f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE0ZjRlNWQxY2M0YmY1ZGMxOTE2N2M1ZmQyMTc5ZTEwMGNkZjVmMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-29T20:18:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-29T20:18:48Z"}, "message": "* pt.c (push_template_decl_real):Remove unused var.\n\n\t(is_member_template_class): #if 0.\n\nFrom-SVN: r23432", "tree": {"sha": "9f3178feaaeaf520dd3283b31fc0b168a44a3a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f3178feaaeaf520dd3283b31fc0b168a44a3a73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba4f4e5d1cc4bf5dc19167c5fd2179e100cdf5f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba4f4e5d1cc4bf5dc19167c5fd2179e100cdf5f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba4f4e5d1cc4bf5dc19167c5fd2179e100cdf5f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba4f4e5d1cc4bf5dc19167c5fd2179e100cdf5f0/comments", "author": null, "committer": null, "parents": [{"sha": "faff4ab8c58604e4d521dabf3ae33a4ab0481d7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faff4ab8c58604e4d521dabf3ae33a4ab0481d7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faff4ab8c58604e4d521dabf3ae33a4ab0481d7e"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "a8b2e8f88b3feca0273fa62a9563f0093bb569a7", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4f4e5d1cc4bf5dc19167c5fd2179e100cdf5f0/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4f4e5d1cc4bf5dc19167c5fd2179e100cdf5f0/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ba4f4e5d1cc4bf5dc19167c5fd2179e100cdf5f0", "patch": "@@ -469,6 +469,7 @@ is_member_template (t)\n   return 0;\n }\n \n+#if 0 /* UNUSED */\n /* Returns non-zero iff T is a member template class.  See\n    is_member_template for a description of what precisely constitutes\n    a member template.  */\n@@ -493,6 +494,7 @@ is_member_template_class (t)\n   return  (TMPL_PARMS_DEPTH (DECL_TEMPLATE_PARMS (t)) > \n \t   template_class_depth (DECL_CONTEXT (t)));\n }\n+#endif\n \n /* Return a new template argument vector which contains all of ARGS,\n    but has as its innermost set of arguments the EXTRA_ARGS.  The\n@@ -2167,7 +2169,7 @@ push_template_decl_real (decl, is_friend)\n   else\n     {\n       tree a, t, current, parms;\n-      int mem, i;\n+      int i;\n \n       if (CLASSTYPE_TEMPLATE_INSTANTIATION (ctx))\n \tcp_error (\"must specialize `%#T' before defining member `%#D'\",\n@@ -2222,7 +2224,6 @@ push_template_decl_real (decl, is_friend)\n \n       /* Make sure the template headers we got make sense.  */\n \n-      mem = (is_member_template (tmpl) || is_member_template_class (tmpl));\n       parms = DECL_TEMPLATE_PARMS (tmpl);\n       i = TMPL_PARMS_DEPTH (parms);\n       if (TMPL_ARGS_DEPTH (args) != i)"}]}