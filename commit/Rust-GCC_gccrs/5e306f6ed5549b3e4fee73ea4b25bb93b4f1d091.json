{"sha": "5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUzMDZmNmVkNTU0OWIzZTRmZWU3M2VhNGIyNWJiOTNiNGYxZDA5MQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-01-15T09:53:55Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-01-15T09:53:55Z"}, "message": "Target optimization nodes: add support for arrays.\n\n\tPR target/64377\n\t* optc-save-gen.awk: Add support for array types.\n\nFrom-SVN: r219636", "tree": {"sha": "2ae6536d21b88aa30134c4c533042320e3f1536c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ae6536d21b88aa30134c4c533042320e3f1536c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d679e96bbecf5a59940c99dfec883d9dd5ba81ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d679e96bbecf5a59940c99dfec883d9dd5ba81ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d679e96bbecf5a59940c99dfec883d9dd5ba81ea"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "388bc84ac724791243587091ce58d17575454fd5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091", "patch": "@@ -1,3 +1,8 @@\n+2015-01-15  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/64377\n+\t* optc-save-gen.awk: Add support for array types.\n+\n 2015-01-15  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/64365"}, {"sha": "add09496faa2f202616566a6b80de0d08484faf3", "filename": "gcc/optc-save-gen.awk", "status": "modified", "additions": 42, "deletions": 2, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091/gcc%2Foptc-save-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091/gcc%2Foptc-save-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-save-gen.awk?ref=5e306f6ed5549b3e4fee73ea4b25bb93b4f1d091", "patch": "@@ -580,6 +580,7 @@ print \"                     struct cl_target_option const *ptr2 ATTRIBUTE_UNUSED\n print \"{\";\n n_target_val = 0;\n n_target_str = 0;\n+n_target_array = 0;\n \n for (i = 0; i < n_target_save; i++) {\n \tvar = target_save_decl[i];\n@@ -591,8 +592,20 @@ for (i = 0; i < n_target_save; i++) {\n \tif (target_save_decl[i] ~ \"^const char \\\\*+[_\" alnum \"]+$\")\n \t\tvar_target_str[n_target_str++] = name;\n \telse {\n-\t\tvar_target_val_type[n_target_val] = type;\n-\t\tvar_target_val[n_target_val++] = name;\n+\t\tif (target_save_decl[i] ~ \" .*\\\\[.+\\\\]+$\") {\n+\t\t\tsize = name;\n+\t\t\tsub(\"[^\\\\[]+\\\\[\", \"\", size);\n+\t\t\tsub(\"\\\\]$\", \"\", size);\n+\t\t\tsub(\"\\\\[.+\", \"\", name)\n+\t\t\tsub(\" [^ ]+$\", \"\", type)\n+\t\t\tvar_target_array[n_target_array] = name\n+\t\t\tvar_target_array_type[n_target_array] = type\n+\t\t\tvar_target_array_size[n_target_array++] = size\n+\t\t}\n+\t\telse {\n+\t\t\tvar_target_val_type[n_target_val] = type;\n+\t\t\tvar_target_val[n_target_val++] = name;\n+\t\t}\n \t}\n }\n if (have_save) {\n@@ -627,6 +640,14 @@ for (i = 0; i < n_target_str; i++) {\n \tprint \"          || strcmp (ptr1->\" name\", ptr2->\" name \")))\";\n \tprint \"    return false;\";\n }\n+for (i = 0; i < n_target_array; i++) {\n+\tname = var_target_array[i]\n+\tsize = var_target_array_size[i]\n+\ttype = var_target_array_type[i]\n+\tprint \"  if (ptr1->\" name\" != ptr2->\" name \"\";\n+\tprint \"      || memcmp (ptr1->\" name \", ptr2->\" name \", \" size \" * sizeof(\" type \")))\"\n+\tprint \"    return false;\";\n+}\n for (i = 0; i < n_target_val; i++) {\n \tname = var_target_val[i]\n \tprint \"  if (ptr1->\" name\" != ptr2->\" name \")\";\n@@ -650,6 +671,13 @@ for (i = 0; i < n_target_str; i++) {\n \tprint \"  else\";\n \tprint \"    hstate.add_int (0);\";\n }\n+for (i = 0; i < n_target_array; i++) {\n+\tname= var_target_array[i]\n+\tsize = var_target_array_size[i]\n+\ttype = var_target_array_type[i]\n+\tprint \"  hstate.add_int (\" size \");\";\n+\tprint \"  hstate.add (ptr->\" name \", sizeof (\" type \") * \" size \");\";\n+}\n for (i = 0; i < n_target_val; i++) {\n \tname = var_target_val[i]\n \tprint \"  hstate.add_wide_int (ptr->\" name\");\";\n@@ -668,6 +696,12 @@ for (i = 0; i < n_target_str; i++) {\n \tname = var_target_str[i]\n \tprint \"  bp_pack_string (ob, bp, ptr->\" name\", true);\";\n }\n+for (i = 0; i < n_target_array; i++) {\n+\tname = var_target_array[i]\n+\tsize = var_target_array_size[i]\n+\tprint \"  for (unsigned i = 0; i < \" size \"; i++)\"\n+\tprint \"    bp_pack_value (bp, ptr->\" name \"[i], 64);\";\n+}\n for (i = 0; i < n_target_val; i++) {\n \tname = var_target_val[i]\n \tprint \"  bp_pack_value (bp, ptr->\" name\", 64);\";\n@@ -687,6 +721,12 @@ for (i = 0; i < n_target_str; i++) {\n \tprint \"  if (ptr->\" name\")\";\n \tprint \"    ptr->\" name\" = xstrdup (ptr->\" name\");\";\n }\n+for (i = 0; i < n_target_array; i++) {\n+\tname = var_target_array[i]\n+\tsize = var_target_array_size[i]\n+\tprint \"  for (int i = \" size \" - 1; i >= 0; i--)\"\n+\tprint \"    ptr->\" name \"[i] = (\" var_target_array_type[i] \") bp_unpack_value (bp, 64);\";\n+}\n for (i = 0; i < n_target_val; i++) {\n \tname = var_target_val[i]\n \tprint \"  ptr->\" name\" = (\" var_target_val_type[i] \") bp_unpack_value (bp, 64);\";"}]}