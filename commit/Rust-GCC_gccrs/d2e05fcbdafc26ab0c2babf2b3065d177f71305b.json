{"sha": "d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJlMDVmY2JkYWZjMjZhYjBjMmJhYmYyYjMwNjVkMTc3ZjcxMzA1Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-09-01T11:25:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-09-01T11:25:39Z"}, "message": "re PR c/81887 (pragma omp ordered simd ignored under -fopenmp-simd)\n\n\tPR c/81887\nc-family/\n\t* c-pragma.c (omp_pragmas): Move \"ordered\" entry from here to ...\n\t(omp_pragmas_simd): ... here.\n\t* c-omp.c (c_finish_omp_ordered): If clauses isn't simd clause alone,\n\tcreate new clauses list containing just simd clause.\nc/\n\t* c-parser.c (c_parser_omp_ordered): Handle -fopenmp-simd.\ncp/\n\t* parser.c (cp_parser_omp_ordered): Handle -fopenmp-simd.\nfortran/\n\t* parse.c (decode_omp_directive): Use matchs instead of matcho for\n\tend ordered and ordered directives, except for ordered depend.  For\n\t-fopenmp-simd and ordered depend, reject the stmt.\n\t* trans-openmp.c (gfc_trans_omp_ordered): For -fopenmp-simd ignore\n\tthreads clause and if simd clause isn't present, just translate the\n\tbody.\ntestsuite/\n\t* c-c++-common/gomp/pr81887.c: New test.\n\t* gfortran.dg/gomp/pr81887.f90: New test.\n\nFrom-SVN: r251585", "tree": {"sha": "cb173e95c3a681699e55211508d33bb13bbe064a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb173e95c3a681699e55211508d33bb13bbe064a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39baa1d35e4f4157616abf6b1d8e0507e69cbfdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39baa1d35e4f4157616abf6b1d8e0507e69cbfdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39baa1d35e4f4157616abf6b1d8e0507e69cbfdc"}], "stats": {"total": 196, "additions": 192, "deletions": 4}, "files": [{"sha": "e1a051f95ee2a2e0258bafbd1b5b568d47a70486", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -1,3 +1,11 @@\n+2017-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/81887\n+\t* c-pragma.c (omp_pragmas): Move \"ordered\" entry from here to ...\n+\t(omp_pragmas_simd): ... here.\n+\t* c-omp.c (c_finish_omp_ordered): If clauses isn't simd clause alone,\n+\tcreate new clauses list containing just simd clause.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "8e045093adb00a7dd80cb98eece93d3e71caacd1", "filename": "gcc/c-family/c-omp.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -116,6 +116,10 @@ c_finish_omp_ordered (location_t loc, tree clauses, tree stmt)\n   tree t = make_node (OMP_ORDERED);\n   TREE_TYPE (t) = void_type_node;\n   OMP_ORDERED_BODY (t) = stmt;\n+  if (!flag_openmp\t/* flag_openmp_simd */\n+      && (OMP_CLAUSE_CODE (clauses) != OMP_CLAUSE_SIMD\n+\t  || OMP_CLAUSE_CHAIN (clauses)))\n+    clauses = build_omp_clause (loc, OMP_CLAUSE_SIMD);\n   OMP_ORDERED_CLAUSES (t) = clauses;\n   SET_EXPR_LOCATION (t, loc);\n   return add_stmt (t);"}, {"sha": "a2ffdbacbbbb6916d791b82bec84980c048da20d", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -1277,7 +1277,6 @@ static const struct omp_pragma_def omp_pragmas[] = {\n   { \"end\", PRAGMA_OMP_END_DECLARE_TARGET },\n   { \"flush\", PRAGMA_OMP_FLUSH },\n   { \"master\", PRAGMA_OMP_MASTER },\n-  { \"ordered\", PRAGMA_OMP_ORDERED },\n   { \"section\", PRAGMA_OMP_SECTION },\n   { \"sections\", PRAGMA_OMP_SECTIONS },\n   { \"single\", PRAGMA_OMP_SINGLE },\n@@ -1291,6 +1290,7 @@ static const struct omp_pragma_def omp_pragmas_simd[] = {\n   { \"declare\", PRAGMA_OMP_DECLARE },\n   { \"distribute\", PRAGMA_OMP_DISTRIBUTE },\n   { \"for\", PRAGMA_OMP_FOR },\n+  { \"ordered\", PRAGMA_OMP_ORDERED },\n   { \"parallel\", PRAGMA_OMP_PARALLEL },\n   { \"simd\", PRAGMA_OMP_SIMD },\n   { \"target\", PRAGMA_OMP_TARGET },"}, {"sha": "6f8c272397b85285e4fcbc6ab0ebe8bac3d1499b", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -1,3 +1,8 @@\n+2017-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/81887\n+\t* c-parser.c (c_parser_omp_ordered): Handle -fopenmp-simd.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "f4e1cf6aa0c68acec414458a522cc0ed7c6bdf67", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -15647,6 +15647,11 @@ c_parser_omp_ordered (c_parser *parser, enum pragma_context context,\n \n       if (!strcmp (\"depend\", p))\n \t{\n+\t  if (!flag_openmp)\t/* flag_openmp_simd  */\n+\t    {\n+\t      c_parser_skip_to_pragma_eol (parser, false);\n+\t      return false;\n+\t    }\n \t  if (context == pragma_stmt)\n \t    {\n \t      error_at (loc,\n@@ -15667,6 +15672,11 @@ c_parser_omp_ordered (c_parser *parser, enum pragma_context context,\n \n   tree clauses = c_parser_omp_all_clauses (parser, OMP_ORDERED_CLAUSE_MASK,\n \t\t\t\t\t   \"#pragma omp ordered\");\n+\n+  if (!flag_openmp\t/* flag_openmp_simd  */\n+      && omp_find_clause (clauses, OMP_CLAUSE_SIMD) == NULL_TREE)\n+    return false;\n+\n   c_finish_omp_ordered (loc, clauses,\n \t\t\tc_parser_omp_structured_block (parser, if_p));\n   return true;"}, {"sha": "906448b6285c09b1f4bde5907d8eb7ecfe0a6762", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -1,3 +1,8 @@\n+2017-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/81887\n+\t* parser.c (cp_parser_omp_ordered): Handle -fopenmp-simd.\n+\n 2017-09-01  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/82040"}, {"sha": "4bfae3655d5b1d7f41d8ba6454fca0775fa48f9d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -35301,6 +35301,11 @@ cp_parser_omp_ordered (cp_parser *parser, cp_token *pragma_tok,\n \n       if (strcmp (p, \"depend\") == 0)\n \t{\n+\t  if (!flag_openmp)\t/* flag_openmp_simd */\n+\t    {\n+\t      cp_parser_skip_to_pragma_eol (parser, pragma_tok);\n+\t      return false;\n+\t    }\n \t  if (context == pragma_stmt)\n \t    {\n \t      error_at (pragma_tok->location, \"%<#pragma omp ordered%> with \"\n@@ -35321,6 +35326,11 @@ cp_parser_omp_ordered (cp_parser *parser, cp_token *pragma_tok,\n   tree clauses\n     = cp_parser_omp_all_clauses (parser, OMP_ORDERED_CLAUSE_MASK,\n \t\t\t\t \"#pragma omp ordered\", pragma_tok);\n+\n+  if (!flag_openmp     /* flag_openmp_simd  */\n+      && omp_find_clause (clauses, OMP_CLAUSE_SIMD) == NULL_TREE)\n+    return false;\n+\n   c_finish_omp_ordered (loc, clauses,\n \t\t\tcp_parser_omp_structured_block (parser, if_p));\n   return true;"}, {"sha": "a3d36e32b3c95472ebd4da39201d5b7d3a8b43bd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -1,3 +1,13 @@\n+2017-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/81887\n+\t* parse.c (decode_omp_directive): Use matchs instead of matcho for\n+\tend ordered and ordered directives, except for ordered depend.  For\n+\t-fopenmp-simd and ordered depend, reject the stmt.\n+\t* trans-openmp.c (gfc_trans_omp_ordered): For -fopenmp-simd ignore\n+\tthreads clause and if simd clause isn't present, just translate the\n+\tbody.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "e958e6db31ee39aa2b5810fdf99d91d992610c47", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -875,7 +875,7 @@ decode_omp_directive (void)\n       matcho (\"end do\", gfc_match_omp_end_nowait, ST_OMP_END_DO);\n       matchs (\"end simd\", gfc_match_omp_eos, ST_OMP_END_SIMD);\n       matcho (\"end master\", gfc_match_omp_eos, ST_OMP_END_MASTER);\n-      matcho (\"end ordered\", gfc_match_omp_eos, ST_OMP_END_ORDERED);\n+      matchs (\"end ordered\", gfc_match_omp_eos, ST_OMP_END_ORDERED);\n       matchs (\"end parallel do simd\", gfc_match_omp_eos,\n \t      ST_OMP_END_PARALLEL_DO_SIMD);\n       matcho (\"end parallel do\", gfc_match_omp_eos, ST_OMP_END_PARALLEL_DO);\n@@ -929,14 +929,16 @@ decode_omp_directive (void)\n       matcho (\"master\", gfc_match_omp_master, ST_OMP_MASTER);\n       break;\n     case 'o':\n-      if (flag_openmp && gfc_match (\"ordered depend (\") == MATCH_YES)\n+      if (gfc_match (\"ordered depend (\") == MATCH_YES)\n \t{\n \t  gfc_current_locus = old_locus;\n+\t  if (!flag_openmp)\n+\t    break;\n \t  matcho (\"ordered\", gfc_match_omp_ordered_depend,\n \t\t  ST_OMP_ORDERED_DEPEND);\n \t}\n       else\n-\tmatcho (\"ordered\", gfc_match_omp_ordered, ST_OMP_ORDERED);\n+\tmatchs (\"ordered\", gfc_match_omp_ordered, ST_OMP_ORDERED);\n       break;\n     case 'p':\n       matchs (\"parallel do simd\", gfc_match_omp_parallel_do_simd,"}, {"sha": "00c02a75d1814a7adcb962c47700965938e298af", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -3925,6 +3925,12 @@ gfc_trans_omp_master (gfc_code *code)\n static tree\n gfc_trans_omp_ordered (gfc_code *code)\n {\n+  if (!flag_openmp)\n+    {\n+      if (!code->ext.omp_clauses->simd)\n+\treturn gfc_trans_code (code->block ? code->block->next : NULL);\n+      code->ext.omp_clauses->threads = 0;\n+    }\n   tree omp_clauses = gfc_trans_omp_clauses (NULL, code->ext.omp_clauses,\n \t\t\t\t\t    code->loc);\n   return build2_loc (input_location, OMP_ORDERED, void_type_node,"}, {"sha": "5600d2c6bf9248de4c59811a13a7ec660a895a09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -1,3 +1,9 @@\n+2017-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/81887\n+\t* c-c++-common/gomp/pr81887.c: New test.\n+\t* gfortran.dg/gomp/pr81887.f90: New test.\n+\n 2017-09-01  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/82040"}, {"sha": "1dcf26f82f9512ea6cc873ba20f78af6bc8562e6", "filename": "gcc/testsuite/c-c++-common/gomp/pr81887.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr81887.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr81887.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr81887.c?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -0,0 +1,61 @@\n+/* PR c/81887 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fno-openmp -fopenmp-simd -fdump-tree-gimple\" } */\n+/* { dg-final { scan-tree-dump-times \"#pragma omp simd\" 2 \"gimple\" } } */\n+/* { dg-final { scan-tree-dump-times \"#pragma omp ordered simd\\[ \\t]*\\[\\n\\r]\" 2 \"gimple\" } } */\n+/* { dg-final { scan-tree-dump-times \"#pragma omp\" 4 \"gimple\" } } */\n+\n+void\n+f1 (int *x)\n+{\n+  int i;\n+#pragma omp simd\n+  for (i = 0; i < 100; i++)\n+  #pragma omp ordered simd\n+    x[i / 2] = i;\n+}\n+\n+void\n+f2 (int *x)\n+{\n+  int i;\n+#pragma omp parallel for simd ordered\n+  for (i = 0; i < 100; i++)\n+    #pragma omp ordered threads simd\n+      x[i / 2] = i;\n+}\n+\n+void\n+f3 (int *x)\n+{\n+  int i;\n+#pragma omp parallel for ordered\n+  for (i = 0; i < 100; i++)\n+    #pragma omp ordered\n+      x[i / 2] = i;\n+}\n+\n+void\n+f4 (int *x)\n+{\n+  int i;\n+#pragma omp parallel for ordered\n+  for (i = 0; i < 100; i++)\n+    #pragma omp ordered threads\n+      x[i / 2] = i;\n+}\n+\n+void\n+f5 (int n, int ***x)\n+{\n+  int i, j, k;\n+#pragma omp parallel for ordered(3)\n+  for (i=0; i < n; i++)\n+    for (j=0; j < n; ++j)\n+      for (k=0; k < n; ++k)\n+\t{\n+#pragma omp ordered depend(sink:i-8,j-2,k+2) depend(sink:i, j-1,k) depend(sink:i-4,j-3,k+6) depend(sink:i-6,j-4,k-6)\n+\t  x[i][j][k] = i + j + k;\n+#pragma omp ordered depend(source)\n+\t}\n+}"}, {"sha": "d303f44a225be2373c3b6111d4b3b8c665899e18", "filename": "gcc/testsuite/gfortran.dg/gomp/pr81887.f90", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr81887.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2e05fcbdafc26ab0c2babf2b3065d177f71305b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr81887.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr81887.f90?ref=d2e05fcbdafc26ab0c2babf2b3065d177f71305b", "patch": "@@ -0,0 +1,61 @@\n+! PR c/81887\n+! { dg-do compile }\n+! { dg-options \"-fno-openmp -fopenmp-simd -fdump-tree-gimple\" }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd\" 2 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp ordered simd\\[ \\t]*\\[\\n\\r]\" 2 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp\" 4 \"gimple\" } }\n+\n+subroutine f1 (x)\n+  integer :: i, x(100)\n+  !$omp simd\n+  do i = 2, 101\n+    !$omp ordered simd\n+    x(i / 2) = i\n+    !$omp end ordered\n+  end do\n+end subroutine\n+\n+subroutine f2 (x)\n+  integer :: i, x(100)\n+  !$omp parallel do simd ordered\n+  do i = 2, 101\n+    !$omp ordered threads simd\n+    x(i / 2) = i\n+    !$omp end ordered\n+  end do\n+end subroutine\n+\n+subroutine f3 (x)\n+  integer :: i, x(100)\n+  !$omp parallel do ordered\n+  do i = 2, 101\n+    !$omp ordered\n+    x(i / 2) = i\n+    !$omp end ordered\n+  end do\n+end subroutine\n+\n+subroutine f4 (x)\n+  integer :: i, x(100)\n+  !$omp parallel do ordered\n+  do i = 2, 101\n+    !$omp ordered threads\n+    x(i / 2) = i\n+    !$omp end ordered\n+  end do\n+end subroutine\n+\n+subroutine f5(x, n)\n+  integer :: i, j, k, n, x(100,100,100)\n+  !$omp parallel do ordered(3)\n+  do i = 1, n\n+    do j = 1, n\n+      do k = 1, n\n+\t!$omp ordered depend(sink:i-8,j-2,k+2) depend(sink:i, j-1,k) depend(sink:i-4,j-3,k+6) depend(sink:i-6,j-4,k-6)\n+\tx(i, j, k) = i + j + k\n+\t!$omp ordered depend(source)\n+      end do\n+    end do\n+  end do\n+  !$omp end parallel do\n+end subroutine"}]}