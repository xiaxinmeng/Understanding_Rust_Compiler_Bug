{"sha": "46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZmZjExZmRhMmYyODBiM2Q3MWU4ZWFlM2UyYjZkMjQzY2Q2YzJkNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-04-12T23:57:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-04-12T23:57:36Z"}, "message": "parse.y (absdcl_intern): New nonterminal.\n\n\t* parse.y (absdcl_intern): New nonterminal.\n\t(absdcl, direct_abstract_declarator): Use it.\n\nFrom-SVN: r26390", "tree": {"sha": "dcac34afffdb4626774a4d33c4e47ae1bfad722d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcac34afffdb4626774a4d33c4e47ae1bfad722d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7/comments", "author": null, "committer": null, "parents": [{"sha": "a11f18898acd2b9a0a58cd0207e267d49f31f975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a11f18898acd2b9a0a58cd0207e267d49f31f975", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a11f18898acd2b9a0a58cd0207e267d49f31f975"}], "stats": {"total": 6022, "additions": 3112, "deletions": 2910}, "files": [{"sha": "a2fe0ce43e35b72c18d65f9d45497d5c2044ed3c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7", "patch": "@@ -1,5 +1,8 @@\n 1999-04-12  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* parse.y (absdcl_intern): New nonterminal.\n+\t(absdcl, direct_abstract_declarator): Use it.\n+\n \t* pt.c (lookup_template_class): Look through implict typename.\n \n 1999-04-11  Mark Mitchell  <mark@codesourcery.com>"}, {"sha": "6fe630cfdbca86fea2eb5ca556ba509f72cda36c", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 3092, "deletions": 2903, "changes": 5995, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7"}, {"sha": "618a7d30531b43cf0ce92406319a5e1f0a994875", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=46ff11fda2f280b3d71e8eae3e2b6d243cd6c2d7", "patch": "@@ -204,7 +204,7 @@ empty_parms ()\n %type <ttype> compstmt implicitly_scoped_stmt\n \n %type <ttype> declarator notype_declarator after_type_declarator\n-%type <ttype> notype_declarator_intern\n+%type <ttype> notype_declarator_intern absdcl_intern\n %type <ttype> direct_notype_declarator direct_after_type_declarator\n %type <itype> components notype_components\n %type <ttype> component_decl component_decl_1 \n@@ -3090,19 +3090,29 @@ direct_new_declarator:\n \t\t{ $$ = build_parse_node (ARRAY_REF, $$, $3); }\n \t;\n \n+absdcl_intern:\n+\t  absdcl\n+\t| attributes absdcl\n+                {\n+\t\t  /* Provide support for '(' attributes '*' declarator ')'\n+\t\t     etc */\n+\t\t  $$ = decl_tree_cons ($1, $2, NULL_TREE);\n+\t\t}\n+\t;\n+\t\n /* ANSI abstract-declarator (8.1) */\n absdcl:\n-\t  '*' nonempty_cv_qualifiers absdcl\n+\t  '*' nonempty_cv_qualifiers absdcl_intern\n \t\t{ $$ = make_pointer_declarator ($2.t, $3); }\n-\t| '*' absdcl\n+\t| '*' absdcl_intern\n \t\t{ $$ = make_pointer_declarator (NULL_TREE, $2); }\n \t| '*' nonempty_cv_qualifiers  %prec EMPTY\n \t\t{ $$ = make_pointer_declarator ($2.t, NULL_TREE); }\n \t| '*'  %prec EMPTY\n \t\t{ $$ = make_pointer_declarator (NULL_TREE, NULL_TREE); }\n-\t| '&' nonempty_cv_qualifiers absdcl\n+\t| '&' nonempty_cv_qualifiers absdcl_intern\n \t\t{ $$ = make_reference_declarator ($2.t, $3); }\n-\t| '&' absdcl\n+\t| '&' absdcl_intern\n \t\t{ $$ = make_reference_declarator (NULL_TREE, $2); }\n \t| '&' nonempty_cv_qualifiers  %prec EMPTY\n \t\t{ $$ = make_reference_declarator ($2.t, NULL_TREE); }\n@@ -3112,7 +3122,7 @@ absdcl:\n \t\t{ tree arg = make_pointer_declarator ($2, NULL_TREE);\n \t\t  $$ = build_parse_node (SCOPE_REF, $1, arg);\n \t\t}\n-\t| ptr_to_mem cv_qualifiers absdcl\n+\t| ptr_to_mem cv_qualifiers absdcl_intern\n \t\t{ tree arg = make_pointer_declarator ($2, $3);\n \t\t  $$ = build_parse_node (SCOPE_REF, $1, arg);\n \t\t}\n@@ -3121,7 +3131,7 @@ absdcl:\n \n /* ANSI direct-abstract-declarator (8.1) */\n direct_abstract_declarator:\n-\t  '(' absdcl ')'\n+\t  '(' absdcl_intern ')'\n \t\t{ $$ = $2; }\n \t  /* `(typedef)1' is `int'.  */\n \t| PAREN_STAR_PAREN"}]}