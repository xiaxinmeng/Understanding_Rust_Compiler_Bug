{"sha": "5681c208fa990b5f827b3fc97ff33c076376e44d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY4MWMyMDhmYTk5MGI1ZjgyN2IzZmM5N2ZmMzNjMDc2Mzc2ZTQ0ZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-12-02T02:06:52Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-12-02T02:06:52Z"}, "message": "* doc/extend.texi, doc/invoke.texi, doc/md.texi: Fix typos.\n\nFrom-SVN: r119441", "tree": {"sha": "856c6bc763bfc4d57cd3132bce970311605b2753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/856c6bc763bfc4d57cd3132bce970311605b2753"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5681c208fa990b5f827b3fc97ff33c076376e44d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5681c208fa990b5f827b3fc97ff33c076376e44d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5681c208fa990b5f827b3fc97ff33c076376e44d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5681c208fa990b5f827b3fc97ff33c076376e44d/comments", "author": null, "committer": null, "parents": [{"sha": "811895d518686b0c148ef720e62f3d6ead91fd58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/811895d518686b0c148ef720e62f3d6ead91fd58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/811895d518686b0c148ef720e62f3d6ead91fd58"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "b61564c941fe1e96e08f6e891fb70767198906ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5681c208fa990b5f827b3fc97ff33c076376e44d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5681c208fa990b5f827b3fc97ff33c076376e44d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5681c208fa990b5f827b3fc97ff33c076376e44d", "patch": "@@ -1,3 +1,7 @@\n+2006-12-02  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* doc/extend.texi, doc/invoke.texi, doc/md.texi: Fix typos.\n+\n 2006-12-01  Trevor Smigiel  <trevor_smigiel@playstation.sony.com>\n \n \t* config/spu/spu.c (spu_immediate): Remove trailing comma."}, {"sha": "68a1391ba42b5bb24a58aa97d6b17bc07f4d7699", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5681c208fa990b5f827b3fc97ff33c076376e44d/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5681c208fa990b5f827b3fc97ff33c076376e44d/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=5681c208fa990b5f827b3fc97ff33c076376e44d", "patch": "@@ -9803,7 +9803,7 @@ The extended version of @code{__builtin_expect} is not supported.\n \n @end itemize\n \n-@emph{Note:} Only the interface descibed in the aforementioned\n+@emph{Note:} Only the interface described in the aforementioned\n specification is supported. Internally, GCC uses built-in functions to\n implement the required functionality, but these are not supported and\n are subject to change without notice."}, {"sha": "cd03c92b7aa8dc501aaf3125eb087d38b88c535c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5681c208fa990b5f827b3fc97ff33c076376e44d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5681c208fa990b5f827b3fc97ff33c076376e44d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5681c208fa990b5f827b3fc97ff33c076376e44d", "patch": "@@ -9733,12 +9733,12 @@ and memset for short lengths.\n @item -minline-stringops-dynamically\n @opindex minline-stringops-dynamically\n For string operation of unknown size, inline runtime checks so for small\n-blocks inline code is used, while for large blocks librarly call is used.\n+blocks inline code is used, while for large blocks library call is used.\n \n @item -mstringop-strategy=@var{alg}\n @opindex mstringop-strategy=@var{alg}\n Overwrite internal decision heuristic about particular algorithm to inline\n-string opteration with.  The allowed values are @code{rep_byte},\n+string operation with.  The allowed values are @code{rep_byte},\n @code{rep_4byte}, @code{rep_8byte} for expanding using i386 @code{rep} prefix\n of specified size, @code{loop}, @code{unrolled_loop} for expanding inline loop,\n @code{libcall} for always expanding library call."}, {"sha": "355c10623799bfa7a153999a2012eb639d9ddbcd", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5681c208fa990b5f827b3fc97ff33c076376e44d/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5681c208fa990b5f827b3fc97ff33c076376e44d/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=5681c208fa990b5f827b3fc97ff33c076376e44d", "patch": "@@ -3621,7 +3621,7 @@ and place the resulting N/2 values of size 2*S in the output vector (operand 0).\n Signed/Unsigned widening multiplication. \n The two inputs (operands 1 and 2) are vectors with N \n signed/unsigned elements of size S. Multiply the high/low elements of the two \n-vectors, and put the N/2 products of size 2*S in the output vector (opernad 0). \n+vectors, and put the N/2 products of size 2*S in the output vector (operand 0). \n \n @cindex @code{mulhisi3} instruction pattern\n @item @samp{mulhisi3}"}]}