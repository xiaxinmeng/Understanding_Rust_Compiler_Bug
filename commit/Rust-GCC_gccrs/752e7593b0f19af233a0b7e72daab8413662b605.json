{"sha": "752e7593b0f19af233a0b7e72daab8413662b605", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUyZTc1OTNiMGYxOWFmMjMzYTBiN2U3MmRhYWI4NDEzNjYyYjYwNQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2018-05-30T19:33:38Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2018-05-30T19:33:38Z"}, "message": "Do not warn about zero-as-null when NULL is used.\n\ngcc/cp/\n\nDo not warn about zero-as-null when NULL is used.\n* call.c (conversion_null_warnings): Check for pointer\ntypes converted from zero constants.\n(convert_like_real): Add a warning sentinel at the end.\n* tree.c (maybe_warn_zero_as_null_pointer_constant): Also\ncheck null_node_p.\n\ntestsuite/\n\nDo not warn about zero-as-null when NULL is used.\n* g++.dg/warn/Wzero-as-null-pointer-constant-7.C: New.\n\nFrom-SVN: r260973", "tree": {"sha": "345bd42020e2f7a5f8d90544d04251d807f7db9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/345bd42020e2f7a5f8d90544d04251d807f7db9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/752e7593b0f19af233a0b7e72daab8413662b605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/752e7593b0f19af233a0b7e72daab8413662b605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/752e7593b0f19af233a0b7e72daab8413662b605", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/752e7593b0f19af233a0b7e72daab8413662b605/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "298434c916c14e8adca2cab8a746aee29038c5b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/298434c916c14e8adca2cab8a746aee29038c5b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/298434c916c14e8adca2cab8a746aee29038c5b3"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "70554be6f87740ca25d7bded9109cf022082d417", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/752e7593b0f19af233a0b7e72daab8413662b605/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/752e7593b0f19af233a0b7e72daab8413662b605/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=752e7593b0f19af233a0b7e72daab8413662b605", "patch": "@@ -1,3 +1,12 @@\n+2018-05-30  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tDo not warn about zero-as-null when NULL is used.\n+\t* call.c (conversion_null_warnings): Check for pointer\n+\ttypes converted from zero constants.\n+\t(convert_like_real): Add a warning sentinel at the end.\n+\t* tree.c (maybe_warn_zero_as_null_pointer_constant): Also\n+\tcheck null_node_p.\n+\n 2018-05-24  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/85807 - ICE with call in template NSDMI."}, {"sha": "98319f98c7d50ec3b0ba6932654eae5a433804c5", "filename": "gcc/cp/call.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/752e7593b0f19af233a0b7e72daab8413662b605/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/752e7593b0f19af233a0b7e72daab8413662b605/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=752e7593b0f19af233a0b7e72daab8413662b605", "patch": "@@ -6517,6 +6517,7 @@ build_temp (tree expr, tree type, int flags,\n }\n \n /* Perform warnings about peculiar, but valid, conversions from/to NULL.\n+   Also handle a subset of zero as null warnings.\n    EXPR is implicitly converted to type TOTYPE.\n    FN and ARGNUM are used for diagnostics.  */\n \n@@ -6551,6 +6552,15 @@ conversion_null_warnings (tree totype, tree expr, tree fn, int argnum)\n \twarning_at (input_location, OPT_Wconversion_null,\n \t\t    \"converting %<false%> to pointer type %qT\", totype);\n     }\n+  /* Handle zero as null pointer warnings for cases other\n+     than EQ_EXPR and NE_EXPR */\n+  else if (null_ptr_cst_p (expr) &&\n+\t   (TYPE_PTR_OR_PTRMEM_P (totype) || NULLPTR_TYPE_P (totype)))\n+    {\n+      source_location loc =\n+       expansion_point_location_if_in_system_header (input_location);\n+      maybe_warn_zero_as_null_pointer_constant (expr, loc);\n+    }\n }\n \n /* We gave a diagnostic during a conversion.  If this was in the second\n@@ -7101,6 +7111,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n       && !check_narrowing (totype, expr, complain))\n     return error_mark_node;\n \n+  warning_sentinel w (warn_zero_as_null_pointer_constant);\n   if (issue_conversion_warnings)\n     expr = cp_convert_and_check (totype, expr, complain);\n   else"}, {"sha": "c5b6e9689b68739f89d6459ea328c6fad7088890", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/752e7593b0f19af233a0b7e72daab8413662b605/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/752e7593b0f19af233a0b7e72daab8413662b605/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=752e7593b0f19af233a0b7e72daab8413662b605", "patch": "@@ -5432,7 +5432,7 @@ bool\n maybe_warn_zero_as_null_pointer_constant (tree expr, location_t loc)\n {\n   if (c_inhibit_evaluation_warnings == 0\n-      && !NULLPTR_TYPE_P (TREE_TYPE (expr)))\n+      && !null_node_p (expr) && !NULLPTR_TYPE_P (TREE_TYPE (expr)))\n     {\n       warning_at (loc, OPT_Wzero_as_null_pointer_constant,\n \t\t  \"zero as null pointer constant\");"}, {"sha": "0d06dbf0ec74bd506d64f7b966d01b509e777634", "filename": "gcc/testsuite/g++.dg/warn/Wzero-as-null-pointer-constant-7.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/752e7593b0f19af233a0b7e72daab8413662b605/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWzero-as-null-pointer-constant-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/752e7593b0f19af233a0b7e72daab8413662b605/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWzero-as-null-pointer-constant-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWzero-as-null-pointer-constant-7.C?ref=752e7593b0f19af233a0b7e72daab8413662b605", "patch": "@@ -0,0 +1,13 @@\n+// { dg-options \"-Wzero-as-null-pointer-constant\" }\n+// { dg-do compile { target c++11 } }\n+\n+#include <cstddef>\n+\n+void test01()\n+{\n+  char* x(NULL);\n+  char* x2{NULL};\n+  char* x3 = NULL;\n+  char* x4(0); // { dg-warning \"zero as null pointer\" }\n+  char* x5 = 0; // { dg-warning \"zero as null pointer\" }\n+}"}]}