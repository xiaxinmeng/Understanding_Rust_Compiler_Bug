{"sha": "a508e1a8cb73ecd40946610bb612d8296ae2156c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwOGUxYThjYjczZWNkNDA5NDY2MTBiYjYxMmQ4Mjk2YWUyMTU2Yw==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2012-08-17T15:06:06Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2012-08-17T15:06:06Z"}, "message": "Makefile.in (LIB2_DIVMOD_EXCEPTION_FLAGS): Default to -fexceptions -fnon-call-exceptions if not defined.\n\n    libgcc/\n    * Makefile.in (LIB2_DIVMOD_EXCEPTION_FLAGS): Default to\n    -fexceptions -fnon-call-exceptions if not defined.\n    ($(lib2-divmod-o), $(lib2-divmod-s-o)): Use above.\n    * config/arm/t-bpabi (LIB2_DIVMOD_EXCEPTION_FLAGS): Define.\n\n    gcc/testsuite/\n    * gcc.target/arm/div64-unwinding.c: New test.\n\nFrom-SVN: r190483", "tree": {"sha": "a4aab7b6801f4dae3cd156e8ea735e4383a8807b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4aab7b6801f4dae3cd156e8ea735e4383a8807b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a508e1a8cb73ecd40946610bb612d8296ae2156c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a508e1a8cb73ecd40946610bb612d8296ae2156c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a508e1a8cb73ecd40946610bb612d8296ae2156c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a508e1a8cb73ecd40946610bb612d8296ae2156c/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5615a07d0ca68ca60d096661ff8c618b666eaba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5615a07d0ca68ca60d096661ff8c618b666eaba0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5615a07d0ca68ca60d096661ff8c618b666eaba0"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "3936642d60f61fd03cec382241af0dd915475cc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508e1a8cb73ecd40946610bb612d8296ae2156c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508e1a8cb73ecd40946610bb612d8296ae2156c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a508e1a8cb73ecd40946610bb612d8296ae2156c", "patch": "@@ -1,3 +1,7 @@\n+2012-08-17  Julian Brown  <julian@codesourcery.com>\n+\n+\t* gcc.target/arm/div64-unwinding.c: New test.\n+\n 2012-08-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/torture/Wsizeof-pointer-memaccess1.c: New test."}, {"sha": "b7ed89178cedb82b8807e9e22856d66f63760e2b", "filename": "gcc/testsuite/gcc.target/arm/div64-unwinding.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508e1a8cb73ecd40946610bb612d8296ae2156c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdiv64-unwinding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508e1a8cb73ecd40946610bb612d8296ae2156c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdiv64-unwinding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fdiv64-unwinding.c?ref=a508e1a8cb73ecd40946610bb612d8296ae2156c", "patch": "@@ -0,0 +1,24 @@\n+/* Performing a 64-bit division should not pull in the unwinder.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O0\" } */\n+\n+#include <stdlib.h>\n+\n+long long\n+foo (long long c, long long d)\n+{\n+  return c/d;\n+}\n+\n+long long x = 0;\n+long long y = 1;\n+\n+extern int (*_Unwind_RaiseException) (void *) __attribute__((weak));\n+\n+int main(void)\n+{\n+  if (&_Unwind_RaiseException != NULL)\n+    abort ();;\n+  return foo (x, y);\n+}"}, {"sha": "3ec62d6a3eb8c54627f00fa2592ea24a53b34f8d", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508e1a8cb73ecd40946610bb612d8296ae2156c/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508e1a8cb73ecd40946610bb612d8296ae2156c/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=a508e1a8cb73ecd40946610bb612d8296ae2156c", "patch": "@@ -1,3 +1,10 @@\n+2012-08-17  Julian Brown  <julian@codesourcery.com>\n+\n+\t* Makefile.in (LIB2_DIVMOD_EXCEPTION_FLAGS): Default to\n+\t-fexceptions -fnon-call-exceptions if not defined.\n+\t($(lib2-divmod-o), $(lib2-divmod-s-o)): Use above.\n+\t* config/arm/t-bpabi (LIB2_DIVMOD_EXCEPTION_FLAGS): Define.\n+\n 2012-08-17  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* config/m68k/linux-atomic.c (__sync_lock_test_and_set_1): Fix"}, {"sha": "73f57d6565899ce3eea4359596858901caf1d10b", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508e1a8cb73ecd40946610bb612d8296ae2156c/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508e1a8cb73ecd40946610bb612d8296ae2156c/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=a508e1a8cb73ecd40946610bb612d8296ae2156c", "patch": "@@ -497,18 +497,24 @@ libgcc-s-objects += $(patsubst %,%_s$(objext),$(sifuncs) $(difuncs) $(tifuncs))\n endif\n endif\n \n+ifeq ($(LIB2_DIVMOD_EXCEPTION_FLAGS),)\n+# Provide default flags for compiling divmod functions, if they haven't been\n+# set already by a target-specific Makefile fragment.\n+LIB2_DIVMOD_EXCEPTION_FLAGS := -fexceptions -fnon-call-exceptions\n+endif\n+\n # Build LIB2_DIVMOD_FUNCS.\n lib2-divmod-o = $(patsubst %,%$(objext),$(LIB2_DIVMOD_FUNCS))\n $(lib2-divmod-o): %$(objext): $(srcdir)/libgcc2.c\n \t$(gcc_compile) -DL$* -c $< \\\n-\t  -fexceptions -fnon-call-exceptions $(vis_hide)\n+\t  $(LIB2_DIVMOD_EXCEPTION_FLAGS) $(vis_hide)\n libgcc-objects += $(lib2-divmod-o)\n \n ifeq ($(enable_shared),yes)\n lib2-divmod-s-o = $(patsubst %,%_s$(objext),$(LIB2_DIVMOD_FUNCS))\n $(lib2-divmod-s-o): %_s$(objext): $(srcdir)/libgcc2.c\n \t$(gcc_s_compile) -DL$* -c $< \\\n-\t  -fexceptions -fnon-call-exceptions\n+\t  $(LIB2_DIVMOD_EXCEPTION_FLAGS)\n libgcc-s-objects += $(lib2-divmod-s-o)\n endif\n "}, {"sha": "dddddc7c444ba19093e710512c9a86af6df8877a", "filename": "libgcc/config/arm/t-bpabi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a508e1a8cb73ecd40946610bb612d8296ae2156c/libgcc%2Fconfig%2Farm%2Ft-bpabi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a508e1a8cb73ecd40946610bb612d8296ae2156c/libgcc%2Fconfig%2Farm%2Ft-bpabi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ft-bpabi?ref=a508e1a8cb73ecd40946610bb612d8296ae2156c", "patch": "@@ -13,3 +13,8 @@ LIB2ADDEH = $(srcdir)/config/arm/unwind-arm.c \\\n \n # Add the BPABI names.\n SHLIB_MAPFILES += $(srcdir)/config/arm/libgcc-bpabi.ver\n+\n+# On ARM, specifying -fnon-call-exceptions will needlessly pull in\n+# the unwinder in simple programs which use 64-bit division.  Omitting\n+# the option is safe.\n+LIB2_DIVMOD_EXCEPTION_FLAGS := -fexceptions"}]}