{"sha": "89711ff6cbe5455fb5f4b42038e072d764b30579", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk3MTFmZjZjYmU1NDU1ZmI1ZjRiNDIwMzhlMDcyZDc2NGIzMDU3OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-08-13T07:52:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-08-13T07:52:06Z"}, "message": "tree-ssa-sccvn.c (vn_nary_op_compute_hash): Also canonicalize comparison operand order and commutative ternary op operand order.\n\n2015-08-12  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (vn_nary_op_compute_hash): Also canonicalize\n\tcomparison operand order and commutative ternary op operand order.\n\t(sccvn_dom_walker::cond_stack): New state to track temporary\n\texpressions.\n\t(sccvn_dom_walker::after_dom_children): Remove tempoary expressions\n\tno longer valid.\n\t(sccvn_dom_walker::record_cond): Add a single temporary conditional\n\texpression.\n\t(sccvn_dom_walker::record_conds): Add a temporary conditional\n\texpressions and all related expressions also true/false.\n\t(sccvn_dom_walker::before_dom_children): Record temporary\n\texpressions based on the controlling condition of a single\n\tpredecessor.  When trying to simplify a conditional statement\n\tlookup expressions we might have inserted earlier.\n\n\t* testsuite/gcc.dg/tree-ssa/ssa-fre-47.c: New testcase.\n\t* testsuite/gcc.dg/tree-ssa/ssa-fre-48.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/ssa-fre-49.c: Likewise.\n\t* testsuite/g++.dg/tree-ssa/pr61034.C: Adjust.\n\t* testsuite/gcc.dg/fold-compare-2.c: Likewise.\n\t* testsuite/gcc.dg/pr50763.c: Likewise.\n\t* testsuite/gcc.dg/predict-3.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/20030709-2.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/pr19831-3.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/pr20657.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/pr21001.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/pr37508.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/vrp04.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/vrp07.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/vrp09.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/vrp16.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/vrp20.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/vrp25.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/vrp87.c: Likewise.\n\nFrom-SVN: r226852", "tree": {"sha": "cbd5db5047b994e2bedcf1c6beb4048214b7af95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbd5db5047b994e2bedcf1c6beb4048214b7af95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89711ff6cbe5455fb5f4b42038e072d764b30579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89711ff6cbe5455fb5f4b42038e072d764b30579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89711ff6cbe5455fb5f4b42038e072d764b30579", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89711ff6cbe5455fb5f4b42038e072d764b30579/comments", "author": null, "committer": null, "parents": [{"sha": "43eb7f8acdf8ce81e5bb4934744be21f3587b115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43eb7f8acdf8ce81e5bb4934744be21f3587b115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43eb7f8acdf8ce81e5bb4934744be21f3587b115"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "feee8ceb707840e1d58cd3fe3e380a70fc33b3a3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-47.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89711ff6cbe5455fb5f4b42038e072d764b30579/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89711ff6cbe5455fb5f4b42038e072d764b30579/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-47.c?ref=89711ff6cbe5455fb5f4b42038e072d764b30579", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n+\n+int foo (int i)\n+{\n+  if (i)\n+    {\n+      if (i)\n+\treturn 0;\n+      else\n+\treturn 1;\n+    }\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"return 0;\" \"fre1\" } } */"}, {"sha": "b3d610204daf5d63e0fc978747e7f0acd911c49e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-48.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89711ff6cbe5455fb5f4b42038e072d764b30579/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89711ff6cbe5455fb5f4b42038e072d764b30579/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-48.c?ref=89711ff6cbe5455fb5f4b42038e072d764b30579", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-fre1-details\" } */\n+\n+int foo (int i)\n+{\n+  if (i)\n+    {\n+      if (i)\n+\treturn 1;\n+      else\n+\treturn 0;\n+    }\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Removing unexecutable edge\" \"fre1\" } } */"}, {"sha": "d64fb250920adc269e9b21f769aaa97522ffe27c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-49.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89711ff6cbe5455fb5f4b42038e072d764b30579/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-49.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89711ff6cbe5455fb5f4b42038e072d764b30579/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-49.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-49.c?ref=89711ff6cbe5455fb5f4b42038e072d764b30579", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n+\n+int foo (int i, int j)\n+{\n+  if (i < j)\n+    {\n+      if (i <= j)\n+\treturn j > i;\n+      else\n+\treturn 0;\n+    }\n+  return 1;\n+}\n+\n+/* { dg-final { scan-tree-dump \"return 1;\" \"fre1\" } }  */"}]}