{"sha": "3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NlYmQxYzBhZmU4YzhiMWU3MTIwYTBkMmE1ZDBlZDUxYTQwY2VjOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-14T10:39:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-14T10:39:51Z"}, "message": "[multiple changes]\n\n2012-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Is_Object_Reference): in Ada 2012, qualified\n\texpressions are valid names.\n\n2012-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Analyze_Compilation_Unit): If the unit is an\n\tinstantiation do not emit warnings for obsolescent units. The\n\twarnings belong on the corresponding generic.\n\n2012-06-14  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb: Update the usage of Node15.\n\t(Return_Flag_Or_Transient_Decl): Removed.\n\t(Set_Return_Flag_Or_Transient_Decl): Removed.\n\t(Set_Status_Flag_Or_Transient_Decl): New routine.\n\t(Status_Flag_Or_Transient_Decl): New routine.\n\t(Write_Field15_Name): Update the output for variables and constants.\n\t* einfo.ads: Remove attribute\n\tReturn_Flag_Or_Transient_Decl along with occurrences in nodes.\n\t(Return_Flag_Or_Transient_Decl): Removed along with pragma Inline.\n\t(Set_Return_Flag_Or_Transient_Decl): Removed along with pragma Inline.\n\t(Set_Status_Flag_Or_Transient_Decl): New routine along with pragma\n\tInline.\n\t(Status_Flag_Or_Transient_Decl): New routine along with pragma Inline.\n\t* exp_ch4.adb (Create_Alternative): New routine.\n\t(Expand_N_Conditional_Expression): Handle the case\n\twhere at least one of the conditional expression\n\talternatives prodices a controlled temporary by means of a function\n\tcall.\n\t(Is_Controlled_Function_Call): New routine.\n\t(Process_Transient_Object): Update the call to\n\tSet_Return_Flag_Or_Transient_Decl.\n\t* exp_ch6.adb (Enclosing_Context): New routine.\n\t(Expand_N_Extended_Return_Statement): Update all calls to\n\tSet_Return_Flag_Or_Transient_Decl.\n\t(Expand_Ctrl_Function_Call): Prohibit the finalization of a controlled\n\tfunction result when the context is a conditional expression.\n\t* exp_ch7.adb (Process_Declarations): Update all calls to\n\tReturn_Flag_Or_Transient_Decl. Add processing for intermediate\n\tresults of conditional expressions where one of the alternatives\n\tuses a controlled function call.\n\t(Process_Object_Declaration): Update all calls to\n\tReturn_Flag_Or_Transient_Decl and rearrange the logic to process\n\t\"hook\" objects first.\n\t(Process_Transient_Objects): Update the call to\n\tSet_Return_Flag_Or_Transient_Decl.\n\t* exp_util.adb (Requires_Cleanup_Actions (List_Id, Boolean,\n\tBoolean)): Update all calls to Return_Flag_Or_Transient_Decl. Add\n\tdetection for intermediate results of conditional expressions\n\twhere one of the alternatives uses a controlled function call.\n\nFrom-SVN: r188606", "tree": {"sha": "df31352cebc8ee001b9527d20aac722ee3717d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df31352cebc8ee001b9527d20aac722ee3717d81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/comments", "author": null, "committer": null, "parents": [{"sha": "7579786c459a4acb3be7624e606828e6a2439857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7579786c459a4acb3be7624e606828e6a2439857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7579786c459a4acb3be7624e606828e6a2439857"}], "stats": {"total": 448, "additions": 337, "deletions": 111}, "files": [{"sha": "6ced520d92b5e1c3998dd006b6874de4452cc0e4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "patch": "@@ -1,3 +1,56 @@\n+2012-06-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Is_Object_Reference): in Ada 2012, qualified\n+\texpressions are valid names.\n+\n+2012-06-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_Compilation_Unit): If the unit is an\n+\tinstantiation do not emit warnings for obsolescent units. The\n+\twarnings belong on the corresponding generic.\n+\n+2012-06-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb: Update the usage of Node15.\n+\t(Return_Flag_Or_Transient_Decl): Removed.\n+\t(Set_Return_Flag_Or_Transient_Decl): Removed.\n+\t(Set_Status_Flag_Or_Transient_Decl): New routine.\n+\t(Status_Flag_Or_Transient_Decl): New routine.\n+\t(Write_Field15_Name): Update the output for variables and constants.\n+\t* einfo.ads: Remove attribute\n+\tReturn_Flag_Or_Transient_Decl along with occurrences in nodes.\n+\t(Return_Flag_Or_Transient_Decl): Removed along with pragma Inline.\n+\t(Set_Return_Flag_Or_Transient_Decl): Removed along with pragma Inline.\n+\t(Set_Status_Flag_Or_Transient_Decl): New routine along with pragma\n+\tInline.\n+\t(Status_Flag_Or_Transient_Decl): New routine along with pragma Inline.\n+\t* exp_ch4.adb (Create_Alternative): New routine.\n+\t(Expand_N_Conditional_Expression): Handle the case\n+\twhere at least one of the conditional expression\n+\talternatives prodices a controlled temporary by means of a function\n+\tcall.\n+\t(Is_Controlled_Function_Call): New routine.\n+\t(Process_Transient_Object): Update the call to\n+\tSet_Return_Flag_Or_Transient_Decl.\n+\t* exp_ch6.adb (Enclosing_Context): New routine.\n+\t(Expand_N_Extended_Return_Statement): Update all calls to\n+\tSet_Return_Flag_Or_Transient_Decl.\n+\t(Expand_Ctrl_Function_Call): Prohibit the finalization of a controlled\n+\tfunction result when the context is a conditional expression.\n+\t* exp_ch7.adb (Process_Declarations): Update all calls to\n+\tReturn_Flag_Or_Transient_Decl. Add processing for intermediate\n+\tresults of conditional expressions where one of the alternatives\n+\tuses a controlled function call.\n+\t(Process_Object_Declaration): Update all calls to\n+\tReturn_Flag_Or_Transient_Decl and rearrange the logic to process\n+\t\"hook\" objects first.\n+\t(Process_Transient_Objects): Update the call to\n+\tSet_Return_Flag_Or_Transient_Decl.\n+\t* exp_util.adb (Requires_Cleanup_Actions (List_Id, Boolean,\n+\tBoolean)): Update all calls to Return_Flag_Or_Transient_Decl. Add\n+\tdetection for intermediate results of conditional expressions\n+\twhere one of the alternatives uses a controlled function call.\n+\n 2012-06-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tRevert"}, {"sha": "eef6ef05cee6b64bc4e5777e9caf2447d4356163", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "patch": "@@ -124,7 +124,7 @@ package body Einfo is\n    --    Extra_Formal                    Node15\n    --    Lit_Indexes                     Node15\n    --    Related_Instance                Node15\n-   --    Return_Flag_Or_Transient_Decl   Node15\n+   --    Status_Flag_Or_Transient_Decl   Node15\n    --    Scale_Value                     Uint15\n    --    Storage_Size_Variable           Node15\n    --    String_Literal_Low_Bound        Node15\n@@ -2579,12 +2579,6 @@ package body Einfo is\n       return Flag213 (Id);\n    end Requires_Overriding;\n \n-   function Return_Flag_Or_Transient_Decl (Id : E) return N is\n-   begin\n-      pragma Assert (Ekind_In (Id, E_Constant, E_Variable));\n-      return Node15 (Id);\n-   end Return_Flag_Or_Transient_Decl;\n-\n    function Return_Present (Id : E) return B is\n    begin\n       return Flag54 (Id);\n@@ -2684,6 +2678,12 @@ package body Einfo is\n       return List25 (Id);\n    end Static_Predicate;\n \n+   function Status_Flag_Or_Transient_Decl (Id : E) return N is\n+   begin\n+      pragma Assert (Ekind_In (Id, E_Constant, E_Variable));\n+      return Node15 (Id);\n+   end Status_Flag_Or_Transient_Decl;\n+\n    function Storage_Size_Variable (Id : E) return E is\n    begin\n       pragma Assert (Is_Access_Type (Id) or else Is_Task_Type (Id));\n@@ -5138,12 +5138,6 @@ package body Einfo is\n       Set_Flag213 (Id, V);\n    end Set_Requires_Overriding;\n \n-   procedure Set_Return_Flag_Or_Transient_Decl (Id : E; V : E) is\n-   begin\n-      pragma Assert (Ekind_In (Id, E_Constant, E_Variable));\n-      Set_Node15 (Id, V);\n-   end Set_Return_Flag_Or_Transient_Decl;\n-\n    procedure Set_Return_Present (Id : E; V : B := True) is\n    begin\n       Set_Flag54 (Id, V);\n@@ -5250,6 +5244,12 @@ package body Einfo is\n       Set_List25 (Id, V);\n    end Set_Static_Predicate;\n \n+   procedure Set_Status_Flag_Or_Transient_Decl (Id : E; V : E) is\n+   begin\n+      pragma Assert (Ekind_In (Id, E_Constant, E_Variable));\n+      Set_Node15 (Id, V);\n+   end Set_Status_Flag_Or_Transient_Decl;\n+\n    procedure Set_Storage_Size_Variable (Id : E; V : E) is\n    begin\n       pragma Assert (Is_Access_Type (Id) or else Is_Task_Type (Id));\n@@ -8238,13 +8238,13 @@ package body Einfo is\n               E_Package_Body                               =>\n             Write_Str (\"Related_Instance\");\n \n-         when E_Constant                                   |\n-              E_Variable                                   =>\n-            Write_Str (\"Return_Flag_Or_Transient_Decl\");\n-\n          when Decimal_Fixed_Point_Kind                     =>\n             Write_Str (\"Scale_Value\");\n \n+         when E_Constant                                   |\n+              E_Variable                                   =>\n+            Write_Str (\"Status_Flag_Or_Transient_Decl\");\n+\n          when Access_Kind                                  |\n               Task_Kind                                    =>\n             Write_Str (\"Storage_Size_Variable\");"}, {"sha": "c6c80ff93835afebde43e83295c5852bc0df0c72", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "patch": "@@ -3508,15 +3508,6 @@ package Einfo is\n --       is True only for implicitly declare subprograms; it is not set on the\n --       parent type's subprogram. See also Is_Abstract_Subprogram.\n \n---    Return_Flag_Or_Transient_Decl (Node15)\n---       Applies to variables and constants. Set for objects which act as the\n---       return value of an extended return statement. The node contains the\n---       entity of a locally declared flag which controls the finalization of\n---       the return object should the function fail. Also set for access-to-\n---       controlled objects used to provide a hook to controlled transients\n---       declared inside an Expression_With_Actions. The node contains the\n---       object declaration of the controlled transient.\n-\n --    Return_Present (Flag54)\n --       Present in function and generic function entities. Set if the\n --       function contains a return statement (used for error checking).\n@@ -3687,6 +3678,14 @@ package Einfo is\n --       type of the subtype. Note that all entries are static and have values\n --       within the subtype range.\n \n+--    Status_Flag_Or_Transient_Decl (Node15)\n+--       Present in variables and constants. Applies to objects that require\n+--       special treatment by the finalization machinery. Such examples are\n+--       extended return results, conditional expression results and objects\n+--       inside N_Expression_With_Actions nodes. The attribute contains the\n+--       entity of a flag which specifies particular behavior over a region\n+--       of code or the declaration of a \"hook\" object.\n+\n --    Storage_Size_Variable (Node15) [implementation base type only]\n --       Present in access types and task type entities. This flag is set\n --       if a valid and effective pragma Storage_Size applies to the base\n@@ -5086,7 +5085,7 @@ package Einfo is\n    --    Esize                               (Uint12)\n    --    Extra_Accessibility                 (Node13)   (constants only)\n    --    Alignment                           (Uint14)\n-   --    Return_Flag_Or_Transient_Decl       (Node15)   (constants only)\n+   --    Status_Flag_Or_Transient_Decl       (Node15)   (constants only)\n    --    Actual_Subtype                      (Node17)\n    --    Renamed_Object                      (Node18)\n    --    Size_Check_Code                     (Node19)   (constants only)\n@@ -5747,7 +5746,7 @@ package Einfo is\n    --    Esize                               (Uint12)\n    --    Extra_Accessibility                 (Node13)\n    --    Alignment                           (Uint14)\n-   --    Return_Flag_Or_Transient_Decl       (Node15)   (transient object only)\n+   --    Status_Flag_Or_Transient_Decl       (Node15)   (transient object only)\n    --    Unset_Reference                     (Node16)\n    --    Actual_Subtype                      (Node17)\n    --    Renamed_Object                      (Node18)\n@@ -6367,7 +6366,6 @@ package Einfo is\n    function Renaming_Map                        (Id : E) return U;\n    function Requires_Overriding                 (Id : E) return B;\n    function Return_Applies_To                   (Id : E) return N;\n-   function Return_Flag_Or_Transient_Decl       (Id : E) return E;\n    function Return_Present                      (Id : E) return B;\n    function Returns_By_Ref                      (Id : E) return B;\n    function Reverse_Bit_Order                   (Id : E) return B;\n@@ -6386,6 +6384,7 @@ package Einfo is\n    function Static_Elaboration_Desired          (Id : E) return B;\n    function Static_Initialization               (Id : E) return N;\n    function Static_Predicate                    (Id : E) return S;\n+   function Status_Flag_Or_Transient_Decl       (Id : E) return E;\n    function Storage_Size_Variable               (Id : E) return E;\n    function Stored_Constraint                   (Id : E) return L;\n    function Strict_Alignment                    (Id : E) return B;\n@@ -6963,7 +6962,6 @@ package Einfo is\n    procedure Set_Renaming_Map                    (Id : E; V : U);\n    procedure Set_Requires_Overriding             (Id : E; V : B := True);\n    procedure Set_Return_Applies_To               (Id : E; V : N);\n-   procedure Set_Return_Flag_Or_Transient_Decl   (Id : E; V : E);\n    procedure Set_Return_Present                  (Id : E; V : B := True);\n    procedure Set_Returns_By_Ref                  (Id : E; V : B := True);\n    procedure Set_Reverse_Bit_Order               (Id : E; V : B := True);\n@@ -6982,6 +6980,7 @@ package Einfo is\n    procedure Set_Static_Elaboration_Desired      (Id : E; V : B);\n    procedure Set_Static_Initialization           (Id : E; V : N);\n    procedure Set_Static_Predicate                (Id : E; V : S);\n+   procedure Set_Status_Flag_Or_Transient_Decl   (Id : E; V : E);\n    procedure Set_Storage_Size_Variable           (Id : E; V : E);\n    procedure Set_Stored_Constraint               (Id : E; V : L);\n    procedure Set_Strict_Alignment                (Id : E; V : B := True);\n@@ -7740,7 +7739,6 @@ package Einfo is\n    pragma Inline (Renaming_Map);\n    pragma Inline (Requires_Overriding);\n    pragma Inline (Return_Applies_To);\n-   pragma Inline (Return_Flag_Or_Transient_Decl);\n    pragma Inline (Return_Present);\n    pragma Inline (Returns_By_Ref);\n    pragma Inline (Reverse_Bit_Order);\n@@ -7759,6 +7757,7 @@ package Einfo is\n    pragma Inline (Static_Elaboration_Desired);\n    pragma Inline (Static_Initialization);\n    pragma Inline (Static_Predicate);\n+   pragma Inline (Status_Flag_Or_Transient_Decl);\n    pragma Inline (Storage_Size_Variable);\n    pragma Inline (Stored_Constraint);\n    pragma Inline (Strict_Alignment);\n@@ -8142,7 +8141,6 @@ package Einfo is\n    pragma Inline (Set_Renaming_Map);\n    pragma Inline (Set_Requires_Overriding);\n    pragma Inline (Set_Return_Applies_To);\n-   pragma Inline (Set_Return_Flag_Or_Transient_Decl);\n    pragma Inline (Set_Return_Present);\n    pragma Inline (Set_Returns_By_Ref);\n    pragma Inline (Set_Reverse_Bit_Order);\n@@ -8161,6 +8159,7 @@ package Einfo is\n    pragma Inline (Set_Static_Elaboration_Desired);\n    pragma Inline (Set_Static_Initialization);\n    pragma Inline (Set_Static_Predicate);\n+   pragma Inline (Set_Status_Flag_Or_Transient_Decl);\n    pragma Inline (Set_Storage_Size_Variable);\n    pragma Inline (Set_Stored_Constraint);\n    pragma Inline (Set_Strict_Alignment);"}, {"sha": "fefd6389897a37ca9b829ff6a9d0775668b916d8", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 126, "deletions": 41, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "patch": "@@ -4267,19 +4267,83 @@ package body Exp_Ch4 is\n    --  Deal with limited types and condition actions\n \n    procedure Expand_N_Conditional_Expression (N : Node_Id) is\n+      function Create_Alternative\n+        (Loc     : Source_Ptr;\n+         Temp_Id : Entity_Id;\n+         Flag_Id : Entity_Id;\n+         Expr    : Node_Id) return List_Id;\n+      --  Build the statements of a \"then\" or \"else\" conditional expression\n+      --  alternative. Temp_Id is the conditional expression result, Flag_Id\n+      --  is a finalization flag created to service expression Expr.\n+\n+      function Is_Controlled_Function_Call (Expr : Node_Id) return Boolean;\n+      --  Determine whether an expression is a rewritten controlled function\n+      --  call.\n+\n+      ------------------------\n+      -- Create_Alternative --\n+      ------------------------\n+\n+      function Create_Alternative\n+        (Loc     : Source_Ptr;\n+         Temp_Id : Entity_Id;\n+         Flag_Id : Entity_Id;\n+         Expr    : Node_Id) return List_Id\n+      is\n+         Result : constant List_Id := New_List;\n+\n+      begin\n+         --  Generate:\n+         --    Fnn := True;\n+\n+         if Present (Flag_Id)\n+           and then not Is_Controlled_Function_Call (Expr)\n+         then\n+            Append_To (Result,\n+              Make_Assignment_Statement (Loc,\n+                Name       => New_Reference_To (Flag_Id, Loc),\n+                Expression => New_Reference_To (Standard_True, Loc)));\n+         end if;\n+\n+         --  Generate:\n+         --    Cnn := <expr>'Unrestricted_Access;\n+\n+         Append_To (Result,\n+           Make_Assignment_Statement (Loc,\n+             Name       => New_Reference_To (Temp_Id, Loc),\n+             Expression =>\n+               Make_Attribute_Reference (Loc,\n+                 Prefix         => Relocate_Node (Expr),\n+                 Attribute_Name => Name_Unrestricted_Access)));\n+\n+         return Result;\n+      end Create_Alternative;\n+\n+      ---------------------------------\n+      -- Is_Controlled_Function_Call --\n+      ---------------------------------\n+\n+      function Is_Controlled_Function_Call (Expr : Node_Id) return Boolean is\n+      begin\n+         return\n+           Nkind (Original_Node (Expr)) = N_Function_Call\n+             and then Needs_Finalization (Etype (Expr));\n+      end Is_Controlled_Function_Call;\n+\n+      --  Local variables\n+\n       Loc    : constant Source_Ptr := Sloc (N);\n       Cond   : constant Node_Id    := First (Expressions (N));\n       Thenx  : constant Node_Id    := Next (Cond);\n       Elsex  : constant Node_Id    := Next (Thenx);\n       Typ    : constant Entity_Id  := Etype (N);\n \n+      Actions : List_Id;\n       Cnn     : Entity_Id;\n       Decl    : Node_Id;\n+      Expr    : Node_Id;\n       New_If  : Node_Id;\n       New_N   : Node_Id;\n-      P_Decl  : Node_Id;\n-      Expr    : Node_Id;\n-      Actions : List_Id;\n \n    begin\n       --  Fold at compile time if condition known. We have already folded\n@@ -4354,48 +4418,69 @@ package body Exp_Ch4 is\n       if Is_By_Reference_Type (Typ)\n         and then not Back_End_Handles_Limited_Types\n       then\n-         Cnn := Make_Temporary (Loc, 'C', N);\n+         declare\n+            Flag_Id : Entity_Id;\n+            Ptr_Typ : Entity_Id;\n \n-         P_Decl :=\n-           Make_Full_Type_Declaration (Loc,\n-             Defining_Identifier =>\n-               Make_Temporary (Loc, 'A'),\n-             Type_Definition =>\n-               Make_Access_To_Object_Definition (Loc,\n-                 All_Present        => True,\n-                 Subtype_Indication => New_Reference_To (Typ, Loc)));\n+         begin\n+            Flag_Id := Empty;\n \n-         Insert_Action (N, P_Decl);\n+            --  At least one of the conditional expression alternatives uses a\n+            --  controlled function to provide the result. Create a status flag\n+            --  to signal the finalization machinery that Cnn needs special\n+            --  handling.\n \n-         Decl :=\n-            Make_Object_Declaration (Loc,\n-              Defining_Identifier => Cnn,\n-              Object_Definition   =>\n-                   New_Occurrence_Of (Defining_Identifier (P_Decl), Loc));\n-\n-         New_If :=\n-           Make_Implicit_If_Statement (N,\n-             Condition => Relocate_Node (Cond),\n-\n-             Then_Statements => New_List (\n-               Make_Assignment_Statement (Sloc (Thenx),\n-                 Name       => New_Occurrence_Of (Cnn, Sloc (Thenx)),\n-                 Expression =>\n-                   Make_Attribute_Reference (Loc,\n-                     Attribute_Name => Name_Unrestricted_Access,\n-                     Prefix         =>  Relocate_Node (Thenx)))),\n+            if Is_Controlled_Function_Call (Thenx)\n+              or else Is_Controlled_Function_Call (Elsex)\n+            then\n+               Flag_Id := Make_Temporary (Loc, 'F');\n \n-             Else_Statements => New_List (\n-               Make_Assignment_Statement (Sloc (Elsex),\n-                 Name       => New_Occurrence_Of (Cnn, Sloc (Elsex)),\n-                 Expression =>\n-                   Make_Attribute_Reference (Loc,\n-                     Attribute_Name => Name_Unrestricted_Access,\n-                     Prefix         => Relocate_Node (Elsex)))));\n+               Insert_Action (N,\n+                 Make_Object_Declaration (Loc,\n+                   Defining_Identifier => Flag_Id,\n+                   Object_Definition   =>\n+                     New_Reference_To (Standard_Boolean, Loc),\n+                   Expression          =>\n+                     New_Reference_To (Standard_False, Loc)));\n+            end if;\n \n-         New_N :=\n-           Make_Explicit_Dereference (Loc,\n-             Prefix => New_Occurrence_Of (Cnn, Loc));\n+            --  Generate:\n+            --    type Ann is access all Typ;\n+\n+            Ptr_Typ := Make_Temporary (Loc, 'A');\n+\n+            Insert_Action (N,\n+              Make_Full_Type_Declaration (Loc,\n+                Defining_Identifier => Ptr_Typ,\n+                Type_Definition     =>\n+                  Make_Access_To_Object_Definition (Loc,\n+                    All_Present        => True,\n+                    Subtype_Indication => New_Reference_To (Typ, Loc))));\n+\n+            --  Generate:\n+            --    Cnn : Ann;\n+\n+            Cnn := Make_Temporary (Loc, 'C', N);\n+            Set_Ekind (Cnn, E_Variable);\n+            Set_Status_Flag_Or_Transient_Decl (Cnn, Flag_Id);\n+\n+            Decl :=\n+               Make_Object_Declaration (Loc,\n+                 Defining_Identifier => Cnn,\n+                 Object_Definition   => New_Occurrence_Of (Ptr_Typ, Loc));\n+\n+            New_If :=\n+              Make_Implicit_If_Statement (N,\n+                Condition       => Relocate_Node (Cond),\n+                Then_Statements =>\n+                  Create_Alternative (Sloc (Thenx), Cnn, Flag_Id, Thenx),\n+                Else_Statements =>\n+                  Create_Alternative (Sloc (Elsex), Cnn, Flag_Id, Elsex));\n+\n+            New_N :=\n+              Make_Explicit_Dereference (Loc,\n+                Prefix => New_Occurrence_Of (Cnn, Loc));\n+         end;\n \n       --  For other types, we only need to expand if there are other actions\n       --  associated with either branch.\n@@ -4632,7 +4717,7 @@ package body Exp_Ch4 is\n          --  transient declaration out of the Actions list. This signals the\n          --  machinery in Build_Finalizer to recognize this special case.\n \n-         Set_Return_Flag_Or_Transient_Decl (Temp_Id, Decl);\n+         Set_Status_Flag_Or_Transient_Decl (Temp_Id, Decl);\n \n          --  Step 3: Hook the transient object to the temporary\n "}, {"sha": "da89f70a45d4cb78ee494c2127752809425502fc", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 50, "deletions": 2, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "patch": "@@ -4031,6 +4031,42 @@ package body Exp_Ch6 is\n    -------------------------------\n \n    procedure Expand_Ctrl_Function_Call (N : Node_Id) is\n+      function Enclosing_Context return Node_Id;\n+      --  Find the enclosing context where the function call appears\n+\n+      -----------------------\n+      -- Enclosing_Context --\n+      -----------------------\n+\n+      function Enclosing_Context return Node_Id is\n+         Context : Node_Id;\n+\n+      begin\n+         Context := Parent (N);\n+         while Present (Context) loop\n+\n+            if Nkind (Context) = N_Conditional_Expression then\n+               exit;\n+\n+            --  Stop the search when reaching any statement because we have\n+            --  gone too far up the tree.\n+\n+            elsif Nkind (Context) = N_Procedure_Call_Statement\n+              or else Nkind (Context) in N_Statement_Other_Than_Procedure_Call\n+            then\n+               exit;\n+            end if;\n+\n+            Context := Parent (Context);\n+         end loop;\n+\n+         return Context;\n+      end Enclosing_Context;\n+\n+      --  Local variables\n+\n+      Context : constant Node_Id := Enclosing_Context;\n+\n    begin\n       --  Optimization, if the returned value (which is on the sec-stack) is\n       --  returned again, no need to copy/readjust/finalize, we can just pass\n@@ -4051,6 +4087,18 @@ package body Exp_Ch6 is\n       --  the function using 'reference.\n \n       Remove_Side_Effects (N);\n+\n+      --  The function call is part of a conditional expression alternative.\n+      --  The temporary result must live as long as the conditional expression\n+      --  itself, otherwise it will be finalized too early. Mark the transient\n+      --  as processed to avoid untimely finalization.\n+\n+      if Present (Context)\n+        and then Nkind (Context) = N_Conditional_Expression\n+        and then Nkind (N) = N_Explicit_Dereference\n+      then\n+         Set_Is_Processed_Transient (Entity (Prefix (N)));\n+      end if;\n    end Expand_Ctrl_Function_Call;\n \n    -------------------------\n@@ -5503,7 +5551,7 @@ package body Exp_Ch6 is\n             --  Create a flag to track the function state\n \n             Flag_Id := Make_Temporary (Loc, 'F');\n-            Set_Return_Flag_Or_Transient_Decl (Ret_Obj_Id, Flag_Id);\n+            Set_Status_Flag_Or_Transient_Decl (Ret_Obj_Id, Flag_Id);\n \n             --  Insert the flag at the beginning of the function declarations,\n             --  generate:\n@@ -5582,7 +5630,7 @@ package body Exp_Ch6 is\n          then\n             declare\n                Flag_Id : constant Entity_Id :=\n-                           Return_Flag_Or_Transient_Decl (Ret_Obj_Id);\n+                           Status_Flag_Or_Transient_Decl (Ret_Obj_Id);\n \n             begin\n                --  Generate:"}, {"sha": "4c2af31e7a98b43d9ea4510091fad6c021192cb4", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 41, "deletions": 30, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "patch": "@@ -1884,11 +1884,24 @@ package body Exp_Ch7 is\n                --  transients declared inside an Expression_With_Actions.\n \n                elsif Is_Access_Type (Obj_Typ)\n-                 and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n-                 and then Nkind (Return_Flag_Or_Transient_Decl (Obj_Id)) =\n+                 and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n+                 and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n                                    N_Object_Declaration\n                  and then Is_Finalizable_Transient\n-                            (Return_Flag_Or_Transient_Decl (Obj_Id), Decl)\n+                            (Status_Flag_Or_Transient_Decl (Obj_Id), Decl)\n+               then\n+                  Processing_Actions (Has_No_Init => True);\n+\n+               --  Processing for intermediate results of conditional\n+               --  expressions where one of the alternatives uses a controlled\n+               --  function call.\n+\n+               elsif Is_Access_Type (Obj_Typ)\n+                 and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n+                 and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n+                            N_Defining_Identifier\n+                 and then Present (Expr)\n+                 and then Nkind (Expr) = N_Null\n                then\n                   Processing_Actions (Has_No_Init => True);\n \n@@ -1954,7 +1967,7 @@ package body Exp_Ch7 is\n \n                elsif Needs_Finalization (Obj_Typ)\n                  and then Is_Return_Object (Obj_Id)\n-                 and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n+                 and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n                then\n                   Processing_Actions (Has_No_Init => True);\n \n@@ -2685,27 +2698,8 @@ package body Exp_Ch7 is\n             end if;\n \n             if Ekind_In (Obj_Id, E_Constant, E_Variable)\n-              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n+              and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n             then\n-               --  Return objects use a flag to aid their potential\n-               --  finalization when the enclosing function fails to return\n-               --  properly. Generate:\n-\n-               --    if not Flag then\n-               --       <object finalization statements>\n-               --    end if;\n-\n-               if Is_Return_Object (Obj_Id) then\n-                  Fin_Stmts := New_List (\n-                    Make_If_Statement (Loc,\n-                      Condition     =>\n-                        Make_Op_Not (Loc,\n-                          Right_Opnd =>\n-                            New_Reference_To\n-                              (Return_Flag_Or_Transient_Decl (Obj_Id), Loc)),\n-\n-                    Then_Statements => Fin_Stmts));\n-\n                --  Temporaries created for the purpose of \"exporting\" a\n                --  controlled transient out of an Expression_With_Actions (EWA)\n                --  need guards. The following illustrates the usage of such\n@@ -2733,11 +2727,9 @@ package body Exp_Ch7 is\n                --       <object finalization statements>\n                --    end if;\n \n-               else\n-                  pragma Assert\n-                    (Nkind (Return_Flag_Or_Transient_Decl (Obj_Id)) =\n-                       N_Object_Declaration);\n-\n+               if Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n+                    N_Object_Declaration\n+               then\n                   Fin_Stmts := New_List (\n                     Make_If_Statement (Loc,\n                       Condition       =>\n@@ -2746,6 +2738,25 @@ package body Exp_Ch7 is\n                           Right_Opnd => Make_Null (Loc)),\n \n                       Then_Statements => Fin_Stmts));\n+\n+               --  Return objects use a flag to aid their potential\n+               --  finalization when the enclosing function fails to return\n+               --  properly. Generate:\n+\n+               --    if not Flag then\n+               --       <object finalization statements>\n+               --    end if;\n+\n+               else\n+                  Fin_Stmts := New_List (\n+                    Make_If_Statement (Loc,\n+                      Condition     =>\n+                        Make_Op_Not (Loc,\n+                          Right_Opnd =>\n+                            New_Reference_To\n+                              (Status_Flag_Or_Transient_Decl (Obj_Id), Loc)),\n+\n+                    Then_Statements => Fin_Stmts));\n                end if;\n             end if;\n          end if;\n@@ -4475,7 +4486,7 @@ package body Exp_Ch7 is\n                      --  the machinery in Build_Finalizer to recognize this\n                      --  special case.\n \n-                     Set_Return_Flag_Or_Transient_Decl (Temp_Id, Stmt);\n+                     Set_Status_Flag_Or_Transient_Decl (Temp_Id, Stmt);\n \n                      --  Step 3: Hook the transient object to the temporary\n "}, {"sha": "3ebec4f97d00d84d451c73aa033a3e99b93f6794", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "patch": "@@ -7179,11 +7179,23 @@ package body Exp_Util is\n             --  transients declared inside an Expression_With_Actions.\n \n             elsif Is_Access_Type (Obj_Typ)\n-              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n-              and then Nkind (Return_Flag_Or_Transient_Decl (Obj_Id)) =\n+              and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n+              and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n                          N_Object_Declaration\n               and then Is_Finalizable_Transient\n-                         (Return_Flag_Or_Transient_Decl (Obj_Id), Decl)\n+                         (Status_Flag_Or_Transient_Decl (Obj_Id), Decl)\n+            then\n+               return True;\n+\n+            --  Processing for intermediate results of conditional expressions\n+            --  where one of the alternatives uses a controlled function call.\n+\n+            elsif Is_Access_Type (Obj_Typ)\n+              and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n+              and then Nkind (Status_Flag_Or_Transient_Decl (Obj_Id)) =\n+                         N_Defining_Identifier\n+              and then Present (Expr)\n+              and then Nkind (Expr) = N_Null\n             then\n                return True;\n \n@@ -7218,7 +7230,7 @@ package body Exp_Util is\n \n             elsif Needs_Finalization (Obj_Typ)\n               and then Is_Return_Object (Obj_Id)\n-              and then Present (Return_Flag_Or_Transient_Decl (Obj_Id))\n+              and then Present (Status_Flag_Or_Transient_Decl (Obj_Id))\n             then\n                return True;\n "}, {"sha": "82fde3f7191fb2e5be59b6fd6c50738791935a22", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "patch": "@@ -1257,10 +1257,15 @@ package body Sem_Ch10 is\n       --  know if the with'ing unit is itself obsolescent (which suppresses\n       --  the warnings).\n \n-      if not GNAT_Mode and then Warn_On_Obsolescent_Feature then\n+      if not GNAT_Mode\n+        and then Warn_On_Obsolescent_Feature\n+        and then Nkind (Unit_Node) not in N_Generic_Instantiation\n+      then\n \n          --  Push current compilation unit as scope, so that the test for\n-         --  being within an obsolescent unit will work correctly.\n+         --  being within an obsolescent unit will work correctly. The check\n+         --  is not performed within an instantiation, because the warning\n+         --  will have been emitted in the corresponding generic unit.\n \n          Push_Scope (Defining_Entity (Unit_Node));\n "}, {"sha": "017be8368dcdcf8268e4fd4e7823793974c877a5", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=3cebd1c0afe8c8b1e7120a0d2a5d0ed51a40cec9", "patch": "@@ -7745,6 +7745,19 @@ package body Sem_Util is\n             when N_String_Literal =>\n                return Is_Internally_Generated_Renaming (Parent (N));\n \n+            --  AI05-0003:  in Ada 2012, a qualified expression is a name.\n+            --  This allows disambiguation of function calls and the use of\n+            --  aggregates in more contexts.\n+\n+            when N_Qualified_Expression =>\n+               if Ada_Version <  Ada_2012 then\n+                  return False;\n+\n+               else\n+                  return Is_Object_Reference (Expression (N))\n+                    or else Nkind (Expression (N)) = N_Aggregate;\n+               end if;\n+\n             when others =>\n                return False;\n          end case;"}]}