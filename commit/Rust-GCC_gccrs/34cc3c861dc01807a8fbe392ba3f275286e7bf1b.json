{"sha": "34cc3c861dc01807a8fbe392ba3f275286e7bf1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRjYzNjODYxZGMwMTgwN2E4ZmJlMzkyYmEzZjI3NTI4NmU3YmYxYg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2011-05-10T11:01:49Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2011-05-10T11:01:49Z"}, "message": "rx.h (JUMP_ALIGN, [...]): Define.\n\n\t* config/rx/rx.h (JUMP_ALIGN, LABEL_ALIGN, LOOP_ALIGN): Define.\n\t(LABEL_ALIGN_AFTER_BARRIER): Pass label to rx_align_for_label\n\t* config/rx/rx.c (rx_align_for_label): Add label and\n\tuses_threshold parameters.  Do not align when the label is not\n\tused enough.\n\t* config/rx/rx-protos.h (rx_align_for_label): Update prototype.\n\nFrom-SVN: r173615", "tree": {"sha": "72b4a0484c2689bf0a43ccd949c9e078168caaf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72b4a0484c2689bf0a43ccd949c9e078168caaf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34cc3c861dc01807a8fbe392ba3f275286e7bf1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34cc3c861dc01807a8fbe392ba3f275286e7bf1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34cc3c861dc01807a8fbe392ba3f275286e7bf1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34cc3c861dc01807a8fbe392ba3f275286e7bf1b/comments", "author": null, "committer": null, "parents": [{"sha": "be17328916770319a04f236f42aaf12404bad162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be17328916770319a04f236f42aaf12404bad162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be17328916770319a04f236f42aaf12404bad162"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "43784a6d08743587c1490ebca1d9cc8cc310b677", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34cc3c861dc01807a8fbe392ba3f275286e7bf1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34cc3c861dc01807a8fbe392ba3f275286e7bf1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34cc3c861dc01807a8fbe392ba3f275286e7bf1b", "patch": "@@ -1,3 +1,12 @@\n+2011-05-10  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/rx/rx.h (JUMP_ALIGN, LABEL_ALIGN, LOOP_ALIGN): Define.\n+\t(LABEL_ALIGN_AFTER_BARRIER): Pass label to rx_align_for_label\n+\t* config/rx/rx.c (rx_align_for_label): Add label and\n+\tuses_threshold parameters.  Do not align when the label is not\n+\tused enough.\n+\t* config/rx/rx-protos.h (rx_align_for_label): Update prototype.\n+\n 2011-05-10  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-forwprop.c (combine_conversions): Pattern-match"}, {"sha": "72cb199ce3052d776112cff474b6703cae00020f", "filename": "gcc/config/rx/rx-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34cc3c861dc01807a8fbe392ba3f275286e7bf1b/gcc%2Fconfig%2Frx%2Frx-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34cc3c861dc01807a8fbe392ba3f275286e7bf1b/gcc%2Fconfig%2Frx%2Frx-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx-protos.h?ref=34cc3c861dc01807a8fbe392ba3f275286e7bf1b", "patch": "@@ -21,12 +21,12 @@\n #ifndef GCC_RX_PROTOS_H\n #define GCC_RX_PROTOS_H\n \n-extern int\t\trx_align_for_label (void);\n extern void\t\trx_expand_prologue (void);\n extern int\t\trx_initial_elimination_offset (int, int);\n \n #ifdef RTX_CODE\n extern int\t\trx_adjust_insn_length (rtx, int);\n+extern int \t\trx_align_for_label (rtx, int);\n extern void             rx_emit_stack_popm (rtx *, bool);\n extern void             rx_emit_stack_pushm (rtx *);\n extern void\t\trx_expand_epilogue (bool);\n@@ -35,7 +35,7 @@ extern bool\t\trx_legitimate_constant_p (enum machine_mode, rtx);\n extern bool\t\trx_is_restricted_memory_address (rtx,\n \t\t\t\t\t\t\t enum machine_mode);\n extern bool\t\trx_match_ccmode (rtx, enum machine_mode);\n-extern void\t\trx_notice_update_cc (rtx body, rtx insn);\n+extern void\t\trx_notice_update_cc (rtx, rtx);\n extern void\t\trx_split_cbranch (enum machine_mode, enum rtx_code,\n \t\t\t\t\t  rtx, rtx, rtx);\n extern enum machine_mode\trx_select_cc_mode (enum rtx_code, rtx, rtx);"}, {"sha": "30886dc3bc2dc04ed527376b3d88c5c4932ea1f7", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34cc3c861dc01807a8fbe392ba3f275286e7bf1b/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34cc3c861dc01807a8fbe392ba3f275286e7bf1b/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=34cc3c861dc01807a8fbe392ba3f275286e7bf1b", "patch": "@@ -2776,8 +2776,15 @@ rx_match_ccmode (rtx insn, enum machine_mode cc_mode)\n }\n \f\n int\n-rx_align_for_label (void)\n+rx_align_for_label (rtx lab, int uses_threshold)\n {\n+  /* This is a simple heuristic to guess when an alignment would not be useful\n+     because the delay due to the inserted NOPs would be greater than the delay\n+     due to the misaligned branch.  If uses_threshold is zero then the alignment\n+     is always useful.  */\n+  if (LABEL_NUSES (lab) < uses_threshold)\n+    return 0;\n+\n   return optimize_size ? 1 : 3;\n }\n "}, {"sha": "1780867dcbfd7a28ce5a71399144ca64d7bb3700", "filename": "gcc/config/rx/rx.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34cc3c861dc01807a8fbe392ba3f275286e7bf1b/gcc%2Fconfig%2Frx%2Frx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34cc3c861dc01807a8fbe392ba3f275286e7bf1b/gcc%2Fconfig%2Frx%2Frx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.h?ref=34cc3c861dc01807a8fbe392ba3f275286e7bf1b", "patch": "@@ -397,7 +397,13 @@ typedef unsigned int CUMULATIVE_ARGS;\n #undef  USER_LABEL_PREFIX\n #define USER_LABEL_PREFIX\t\"_\"\n \n-#define LABEL_ALIGN_AFTER_BARRIER(x)\t\trx_align_for_label ()\n+/* Compute the alignment needed for label X in various situations.\n+   If the user has specified an alignment then honour that, otherwise\n+   use rx_align_for_label.  */\n+#define JUMP_ALIGN(x)\t\t\t\t(align_jumps ? align_jumps : rx_align_for_label (x, 0))\n+#define LABEL_ALIGN(x)\t\t\t\t(align_labels ? align_labels : rx_align_for_label (x, 3))\n+#define LOOP_ALIGN(x)\t\t\t\t(align_loops ? align_loops : rx_align_for_label (x, 2))\n+#define LABEL_ALIGN_AFTER_BARRIER(x)\t\trx_align_for_label (x, 0)\n \n #define ASM_OUTPUT_MAX_SKIP_ALIGN(STREAM, LOG, MAX_SKIP)\t\\\n   do\t\t\t\t\t\t\\"}]}