{"sha": "411ffa02ae4de4b478884f7e23b68475a3c1efa4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDExZmZhMDJhZTRkZTRiNDc4ODg0ZjdlMjNiNjg0NzVhM2MxZWZhNA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-03-20T01:52:35Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-03-20T01:52:35Z"}, "message": "c-decl.c (check_bitfield_type_and_width): Require bit-field width to have integer type.\n\n\t* c-decl.c (check_bitfield_type_and_width): Require bit-field\n\twidth to have integer type.\n\t(build_enumerator): Require enumerator value to have integer type.\n\ntestsuite:\n\t* gcc.dg/bitfld-14.c, gcc.dg/enum3.c: New tests.\n\nFrom-SVN: r96755", "tree": {"sha": "574e34ee47b0d94b71393462d7e047501eb6adfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/574e34ee47b0d94b71393462d7e047501eb6adfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/411ffa02ae4de4b478884f7e23b68475a3c1efa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411ffa02ae4de4b478884f7e23b68475a3c1efa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/411ffa02ae4de4b478884f7e23b68475a3c1efa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/411ffa02ae4de4b478884f7e23b68475a3c1efa4/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57e4253f85133ca7cf211ea60f66230cbf032991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e4253f85133ca7cf211ea60f66230cbf032991", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e4253f85133ca7cf211ea60f66230cbf032991"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "a3ab05c3552e30460e320b7b42b32e1fcb512af3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=411ffa02ae4de4b478884f7e23b68475a3c1efa4", "patch": "@@ -1,3 +1,9 @@\n+2005-03-20  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* c-decl.c (check_bitfield_type_and_width): Require bit-field\n+\twidth to have integer type.\n+\t(build_enumerator): Require enumerator value to have integer type.\n+\n 2005-03-19  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* doc/extend.texi (__builtin_inf): Move statement about INFINITY"}, {"sha": "42f6561e4986b083b10e2c0aa91cc1a55a001d2f", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=411ffa02ae4de4b478884f7e23b68475a3c1efa4", "patch": "@@ -3642,7 +3642,8 @@ check_bitfield_type_and_width (tree *type, tree *width, const char *orig_name)\n \n   /* Detect and ignore out of range field width and process valid\n      field widths.  */\n-  if (TREE_CODE (*width) != INTEGER_CST)\n+  if (!INTEGRAL_TYPE_P (TREE_TYPE (*width))\n+      || TREE_CODE (*width) != INTEGER_CST)\n     {\n       error (\"bit-field %qs width not an integer constant\", name);\n       *width = integer_one_node;\n@@ -5633,7 +5634,8 @@ build_enumerator (tree name, tree value)\n \t undeclared identifier) - just ignore the value expression.  */\n       if (value == error_mark_node)\n \tvalue = 0;\n-      else if (TREE_CODE (value) != INTEGER_CST)\n+      else if (!INTEGRAL_TYPE_P (TREE_TYPE (value))\n+\t       || TREE_CODE (value) != INTEGER_CST)\n \t{\n \t  error (\"enumerator value for %qE is not an integer constant\", name);\n \t  value = 0;"}, {"sha": "7921dd4ff161116062681e695b43fdad329f2dff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=411ffa02ae4de4b478884f7e23b68475a3c1efa4", "patch": "@@ -1,3 +1,7 @@\n+2005-03-20  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/bitfld-14.c, gcc.dg/enum3.c: New tests.\n+\n 2005-03-19  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/18525"}, {"sha": "eca0b03def04fa2354611608a3bebd923c472071", "filename": "gcc/testsuite/gcc.dg/bitfld-14.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-14.c?ref=411ffa02ae4de4b478884f7e23b68475a3c1efa4", "patch": "@@ -0,0 +1,11 @@\n+/* Test for non-integer bit-field widths.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+enum e { E, F };\n+struct s {\n+  int a : (void *)4; /* { dg-error \"error: bit-field 'a' width not an integer constant\" } */\n+  int b : (enum e)F;\n+  int c : (_Bool)1;\n+};"}, {"sha": "ba3c1da15e3e1c1bba2610284c79144425c321d4", "filename": "gcc/testsuite/gcc.dg/enum3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2Ftestsuite%2Fgcc.dg%2Fenum3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/411ffa02ae4de4b478884f7e23b68475a3c1efa4/gcc%2Ftestsuite%2Fgcc.dg%2Fenum3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fenum3.c?ref=411ffa02ae4de4b478884f7e23b68475a3c1efa4", "patch": "@@ -0,0 +1,11 @@\n+/* Test for non-integer enum values.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+enum e { E, F };\n+enum e2 {\n+  E1 = (void *)4, /* { dg-error \"error: enumerator value for 'E1' is not an integer constant\" } */\n+  E2 = (enum e)F,\n+  E3 = (_Bool)1\n+};"}]}