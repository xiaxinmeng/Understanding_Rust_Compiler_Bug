{"sha": "f9b5a8e58dfd0642bea932d449ad46da9e57396f", "node_id": "C_kwDOANBUbNoAKGY5YjVhOGU1OGRmZDA2NDJiZWE5MzJkNDQ5YWQ0NmRhOWU1NzM5NmY", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-06-10T20:09:58Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-06-10T20:09:58Z"}, "message": "c++: optimize specialization of templated member functions\n\nThis applies one of the lookup_template_class optimizations from the\nprevious patch to instantiate_template as well.\n\ngcc/cp/ChangeLog:\n\n\t* pt.cc (instantiate_template): Don't substitute the context\n\tof the most general template if that of the partially\n\tinstantiated template is already non-dependent.", "tree": {"sha": "49669abea358ff708234ce2b3a6389a05c83d6d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49669abea358ff708234ce2b3a6389a05c83d6d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9b5a8e58dfd0642bea932d449ad46da9e57396f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b5a8e58dfd0642bea932d449ad46da9e57396f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9b5a8e58dfd0642bea932d449ad46da9e57396f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b5a8e58dfd0642bea932d449ad46da9e57396f/comments", "author": null, "committer": null, "parents": [{"sha": "cb7fd1ea85feea7ef65328330fc2577a95e99400", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7fd1ea85feea7ef65328330fc2577a95e99400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb7fd1ea85feea7ef65328330fc2577a95e99400"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "1f91fc20f7f0009f2146f071eef00acf6331cce1", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b5a8e58dfd0642bea932d449ad46da9e57396f/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b5a8e58dfd0642bea932d449ad46da9e57396f/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=f9b5a8e58dfd0642bea932d449ad46da9e57396f", "patch": "@@ -21714,8 +21714,14 @@ instantiate_template (tree tmpl, tree orig_args, tsubst_flags_t complain)\n     ++processing_template_decl;\n   if (DECL_CLASS_SCOPE_P (gen_tmpl))\n     {\n-      tree ctx = tsubst_aggr_type (DECL_CONTEXT (gen_tmpl), targ_ptr,\n-\t\t\t\t   complain, gen_tmpl, true);\n+      tree ctx;\n+      if (!uses_template_parms (DECL_CONTEXT (tmpl)))\n+\t/* If the context of the partially instantiated template is\n+\t   already non-dependent, then we might as well use it.  */\n+\tctx = DECL_CONTEXT (tmpl);\n+      else\n+\tctx = tsubst_aggr_type (DECL_CONTEXT (gen_tmpl), targ_ptr,\n+\t\t\t\tcomplain, gen_tmpl, true);\n       push_nested_class (ctx);\n     }\n "}]}