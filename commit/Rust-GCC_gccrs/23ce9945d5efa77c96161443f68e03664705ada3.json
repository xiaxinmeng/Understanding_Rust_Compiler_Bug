{"sha": "23ce9945d5efa77c96161443f68e03664705ada3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjZTk5NDVkNWVmYTc3Yzk2MTYxNDQzZjY4ZTAzNjY0NzA1YWRhMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-03-31T18:10:31Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-03-31T18:10:31Z"}, "message": "Fix overvactive check in cgraph_node::release_body\n\ngcc/ChangeLog:\n\n\tPR lto/99447\n\t* cgraph.c (cgraph_node::release_body): Fix overactive check.", "tree": {"sha": "c5ad360fd11d1f43cb1ef87edbeacf2df1b79ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5ad360fd11d1f43cb1ef87edbeacf2df1b79ccb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23ce9945d5efa77c96161443f68e03664705ada3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ce9945d5efa77c96161443f68e03664705ada3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23ce9945d5efa77c96161443f68e03664705ada3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23ce9945d5efa77c96161443f68e03664705ada3/comments", "author": null, "committer": null, "parents": [{"sha": "31199d95de1304e200554bbf98b2d8a6a7298bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31199d95de1304e200554bbf98b2d8a6a7298bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31199d95de1304e200554bbf98b2d8a6a7298bec"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "d7c78d518bc4955dde877f9b6eaab04bd66b9734", "filename": "gcc/cgraph.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23ce9945d5efa77c96161443f68e03664705ada3/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23ce9945d5efa77c96161443f68e03664705ada3/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=23ce9945d5efa77c96161443f68e03664705ada3", "patch": "@@ -1860,7 +1860,15 @@ cgraph_node::release_body (bool keep_arguments)\n       lto_free_function_in_decl_state_for_node (this);\n       lto_file_data = NULL;\n     }\n-  gcc_assert (!clones);\n+  if (flag_checking && clones)\n+    {\n+      /* It is invalid to release body before materializing clones except\n+\t for thunks that don't really need a body.  Verify also that we do\n+\t not leak pointers to the call statements.  */\n+      for (cgraph_node *node = clones; node;\n+\t   node = node->next_sibling_clone)\n+\tgcc_assert (node->thunk && !node->callees->call_stmt);\n+    }\n   remove_callees ();\n   remove_all_references ();\n }"}]}