{"sha": "ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU0ZGJkNDRiYWFlYThiMTk1ZTc5MmMxODY1ZDAyZThiZjZjMzZiOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-12-14T14:21:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-12-14T14:21:41Z"}, "message": "re PR middle-end/34462 (tree check: expected ssa_name, have struct_field_tag in vuses_compare, at tree-vn.c:118)\n\n2007-12-14  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/34462\n\t* tree-ssa-operands.h (create_ssa_artificial_load_stmt): Add\n\tparameter to say whether to unlink immediate uses.\n\t* tree-ssa-operands.c (create_ssa_artificial_load_stmt): Do not\n\tmark the artificial stmt as modified.  Unlink immediate uses\n\tonly if requested.\n\t* tree-ssa-dom.c (record_equivalences_from_stmt): Update caller.\n\t* tree-ssa-pre.c (insert_fake_stores): Likewise.\n\n\t* gcc.c-torture/compile/20071214-1.c: New testcase.\n\nFrom-SVN: r130931", "tree": {"sha": "21ef4ec05b828e6f1466e7a77d7a896095ce86bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21ef4ec05b828e6f1466e7a77d7a896095ce86bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c9fd13e905b68909db52d6868645790f935e35a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9fd13e905b68909db52d6868645790f935e35a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c9fd13e905b68909db52d6868645790f935e35a"}], "stats": {"total": 54, "additions": 46, "deletions": 8}, "files": [{"sha": "8a742f9253be8d8ed32929459ecb8872e7436d4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "patch": "@@ -1,3 +1,14 @@\n+2007-12-14  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/34462\n+\t* tree-ssa-operands.h (create_ssa_artificial_load_stmt): Add\n+\tparameter to say whether to unlink immediate uses.\n+\t* tree-ssa-operands.c (create_ssa_artificial_load_stmt): Do not\n+\tmark the artificial stmt as modified.  Unlink immediate uses\n+\tonly if requested.\n+\t* tree-ssa-dom.c (record_equivalences_from_stmt): Update caller.\n+\t* tree-ssa-pre.c (insert_fake_stores): Likewise.\n+\n 2007-12-13  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR middle-end/33088"}, {"sha": "56448f4202c8feba98b7e4dd49db36da2b20b44b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "patch": "@@ -1,3 +1,8 @@\n+2007-12-14  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/34462\n+\t* gcc.c-torture/compile/20071214-1.c: New testcase.\n+\n 2007-12-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/sse-14.c (test_1, test_2, test_2x, test_4): New"}, {"sha": "f30af930630f315fc5b39124b83a343593b6dae3", "filename": "gcc/testsuite/gcc.c-torture/compile/20071214-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071214-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071214-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20071214-1.c?ref=ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "patch": "@@ -0,0 +1,15 @@\n+typedef __builtin_va_list va_list;\n+void gftp_config_parse_args (int numargs, char **first, ...)\n+{\n+  char **dest = first;\n+  va_list argp;\n+  __builtin_va_start (argp, first);\n+  while (numargs-- > 0)\n+    {\n+      *dest = __builtin_malloc (1);\n+      dest = __builtin_va_arg(argp, char **);\n+      *dest = ((void *)0);\n+    }\n+  __builtin_va_end(argp);\n+}\n+"}, {"sha": "bc9809edfc2981386bf70df38234122793bf94d3", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "patch": "@@ -1618,7 +1618,7 @@ record_equivalences_from_stmt (tree stmt, int may_optimize_p, stmt_ann_t ann)\n \t  /* Build a new statement with the RHS and LHS exchanged.  */\n \t  new_stmt = build_gimple_modify_stmt (rhs, lhs);\n \n-\t  create_ssa_artificial_load_stmt (new_stmt, stmt);\n+\t  create_ssa_artificial_load_stmt (new_stmt, stmt, true);\n \n \t  /* Finally enter the statement into the available expression\n \t     table.  */"}, {"sha": "72f44338b2d09463bc6c847214641880cf5bb5ef", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "patch": "@@ -2647,17 +2647,23 @@ copy_virtual_operands (tree dest, tree src)\n    create an artificial stmt which looks like a load from the store, this can\n    be used to eliminate redundant loads.  OLD_OPS are the operands from the \n    store stmt, and NEW_STMT is the new load which represents a load of the\n-   values stored.  */\n+   values stored.  If DELINK_IMM_USES_P is specified, the immediate\n+   uses of this stmt will be de-linked.  */\n \n void\n-create_ssa_artificial_load_stmt (tree new_stmt, tree old_stmt)\n+create_ssa_artificial_load_stmt (tree new_stmt, tree old_stmt,\n+\t\t\t\t bool delink_imm_uses_p)\n {\n   tree op;\n   ssa_op_iter iter;\n   use_operand_p use_p;\n   unsigned i;\n+  stmt_ann_t ann;\n \n-  get_stmt_ann (new_stmt);\n+  /* Create the stmt annotation but make sure to not mark the stmt\n+     as modified as we will build operands ourselves.  */\n+  ann = get_stmt_ann (new_stmt);\n+  ann->modified = 0;\n \n   /* Process NEW_STMT looking for operands.  */\n   start_ssa_stmt_operands ();\n@@ -2687,8 +2693,9 @@ create_ssa_artificial_load_stmt (tree new_stmt, tree old_stmt)\n   finalize_ssa_stmt_operands (new_stmt);\n \n   /* All uses in this fake stmt must not be in the immediate use lists.  */\n-  FOR_EACH_SSA_USE_OPERAND (use_p, new_stmt, iter, SSA_OP_ALL_USES)\n-    delink_imm_use (use_p);\n+  if (delink_imm_uses_p)\n+    FOR_EACH_SSA_USE_OPERAND (use_p, new_stmt, iter, SSA_OP_ALL_USES)\n+      delink_imm_use (use_p);\n }\n \n "}, {"sha": "f48245f7da6f9ac53bd7e59193607d86beb7e425", "filename": "gcc/tree-ssa-operands.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftree-ssa-operands.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftree-ssa-operands.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.h?ref=ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "patch": "@@ -210,7 +210,7 @@ extern void free_stmt_operands (tree);\n extern bool verify_imm_links (FILE *f, tree var);\n \n extern void copy_virtual_operands (tree, tree);\n-extern void create_ssa_artificial_load_stmt (tree, tree);\n+extern void create_ssa_artificial_load_stmt (tree, tree, bool);\n \n extern void dump_immediate_uses (FILE *file);\n extern void dump_immediate_uses_for (FILE *file, tree var);"}, {"sha": "6a06b2a80047f56545328b5a72178482f7348676", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4dbd44baaea8b195e792c1865d02e8bf6c36b8/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=ae4dbd44baaea8b195e792c1865d02e8bf6c36b8", "patch": "@@ -3171,7 +3171,7 @@ insert_fake_stores (void)\n \n \t      lhs = make_ssa_name (storetemp, new_tree);\n \t      GIMPLE_STMT_OPERAND (new_tree, 0) = lhs;\n-\t      create_ssa_artificial_load_stmt (new_tree, stmt);\n+\t      create_ssa_artificial_load_stmt (new_tree, stmt, false);\n \n \t      NECESSARY (new_tree) = 0;\n \t      VEC_safe_push (tree, heap, inserted_exprs, new_tree);"}]}