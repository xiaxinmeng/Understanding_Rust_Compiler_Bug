{"sha": "50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBjMmRmOTNhNmE0NTAyMjhiNzU5MDFmYWQ3ZTIwY2QyZTdhOGVlNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-07-29T14:27:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-07-29T14:27:19Z"}, "message": "PR libstdc++/51333 Define recursive_init_error constructor non-inline\n\nThe recursive_init_error class is defined in a header, with an inline\nconstructor, but the definition of the vtable and destructor are not\nexported from the shared library. With -fkeep-inline-functions the\nconstructor gets emitted in user code, and requires the (non-exported)\nvtable. This fails to link.\n\nAs far as I can tell, the recursive_init_error class definition was\nmoved into <cxxabi.h> so it could be documented with Doxygen, not for\nany technical reason. But now it's there (and documented), somebody\ncould be relying on it, by catching that type and possibly performing\nderived-to-base conversions to the std::exception base class. So the\nconservative fix is to leave the class definition in the header but make\nthe constructor non-inline. This still allows the type to be caught and\nstill defines its base class. User code can no longer construct objects\nof that type, but that's not something we need to support.\n\n\tPR libstdc++/51333\n\t* libsupc++/cxxabi.h (__gnu_cxx::recursive_init_error): Do not define\n\tconstructor inline.\n\t* libsupc++/guard_error.cc (__gnu_cxx::recursive_init_error): Define\n\tconstructor.\n\t* testsuite/18_support/51333.cc: New test.\n\nFrom-SVN: r273878", "tree": {"sha": "81c6660b7e989411cd2d0e87e10131e089614cfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81c6660b7e989411cd2d0e87e10131e089614cfd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50c2df93a6a450228b75901fad7e20cd2e7a8ee7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "390c0dd61dc36a6eca8262b9814aa00e1bba5483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/390c0dd61dc36a6eca8262b9814aa00e1bba5483", "html_url": "https://github.com/Rust-GCC/gccrs/commit/390c0dd61dc36a6eca8262b9814aa00e1bba5483"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "84fc03b048ba6ba78fe3090602cd8c8c94f1d15c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50c2df93a6a450228b75901fad7e20cd2e7a8ee7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50c2df93a6a450228b75901fad7e20cd2e7a8ee7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "patch": "@@ -1,3 +1,12 @@\n+2019-07-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/51333\n+\t* libsupc++/cxxabi.h (__gnu_cxx::recursive_init_error): Do not define\n+\tconstructor inline.\n+\t* libsupc++/guard_error.cc (__gnu_cxx::recursive_init_error): Define\n+\tconstructor.\n+\t* testsuite/18_support/51333.cc: New test.\n+\n 2019-07-28  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/documentation_hacking.xml: Fix broken reference"}, {"sha": "4d9f829ffed8625b32f6553a67a87c4f4a1e28c8", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50c2df93a6a450228b75901fad7e20cd2e7a8ee7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50c2df93a6a450228b75901fad7e20cd2e7a8ee7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "patch": "@@ -684,8 +684,9 @@ namespace __gnu_cxx\n    *  @brief Exception thrown by __cxa_guard_acquire.\n    *  @ingroup exceptions\n    *\n-   *  6.7[stmt.dcl]/4: If control re-enters the declaration (recursively)\n-   *  while the object is being initialized, the behavior is undefined.\n+   *  C++ 2011 6.7 [stmt.dcl]/4: If control re-enters the declaration\n+   *  recursively while the variable is being initialized, the behavior\n+   *  is undefined.\n    *\n    *  Since we already have a library function to handle locking, we might\n    *  as well check for this situation and throw an exception.\n@@ -695,8 +696,8 @@ namespace __gnu_cxx\n   class recursive_init_error: public std::exception\n   {\n   public:\n-    recursive_init_error() throw() { }\n-    virtual ~recursive_init_error() throw ();\n+    recursive_init_error() _GLIBCXX_NOTHROW;\n+    virtual ~recursive_init_error() _GLIBCXX_NOTHROW;\n   };\n }\n #endif // __cplusplus"}, {"sha": "d7625af4d5456710388c58370fd4027f4b8bb1cd", "filename": "libstdc++-v3/libsupc++/guard_error.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50c2df93a6a450228b75901fad7e20cd2e7a8ee7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fguard_error.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50c2df93a6a450228b75901fad7e20cd2e7a8ee7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fguard_error.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fguard_error.cc?ref=50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "patch": "@@ -26,6 +26,6 @@\n \n namespace __gnu_cxx\n {\n-  recursive_init_error::~recursive_init_error() throw() { }\n+  recursive_init_error::recursive_init_error() noexcept { }\n+  recursive_init_error::~recursive_init_error() noexcept { }\n }\n-"}, {"sha": "0fb7c338f8bcfc005f32223e188e06a8599e6a4c", "filename": "libstdc++-v3/testsuite/18_support/51333.cc", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50c2df93a6a450228b75901fad7e20cd2e7a8ee7/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F51333.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50c2df93a6a450228b75901fad7e20cd2e7a8ee7/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F51333.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2F51333.cc?ref=50c2df93a6a450228b75901fad7e20cd2e7a8ee7", "patch": "@@ -0,0 +1,22 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-fkeep-inline-functions\" }\n+// { dg-do link }\n+\n+#include <cxxabi.h>\n+int main() { } // PR libstdc++/51333"}]}