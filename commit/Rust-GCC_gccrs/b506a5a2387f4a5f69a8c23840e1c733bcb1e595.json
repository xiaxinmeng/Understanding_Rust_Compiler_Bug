{"sha": "b506a5a2387f4a5f69a8c23840e1c733bcb1e595", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUwNmE1YTIzODdmNGE1ZjY5YThjMjM4NDBlMWM3MzNiY2IxZTU5NQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-06-18T15:10:23Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-06-18T15:10:23Z"}, "message": "expr.c (num_div_op): Take explicit location.\n\n2009-06-18  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\nlibcpp/\t\n\t* expr.c (num_div_op): Take explicit location.\ntestsuite/\t\n\t* gcc.dg/cpp/arith-3.c: Add column info.\n\nFrom-SVN: r148662", "tree": {"sha": "18edd293d0c14435ca25ef1e53b3051f9a051794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18edd293d0c14435ca25ef1e53b3051f9a051794"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b506a5a2387f4a5f69a8c23840e1c733bcb1e595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b506a5a2387f4a5f69a8c23840e1c733bcb1e595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b506a5a2387f4a5f69a8c23840e1c733bcb1e595", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b506a5a2387f4a5f69a8c23840e1c733bcb1e595/comments", "author": null, "committer": null, "parents": [{"sha": "4c1a901679c2dbb549916f260f3f878dcb48390a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1a901679c2dbb549916f260f3f878dcb48390a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c1a901679c2dbb549916f260f3f878dcb48390a"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "caf69f55c34169f0a4b1571038ee152c8218777a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b506a5a2387f4a5f69a8c23840e1c733bcb1e595/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b506a5a2387f4a5f69a8c23840e1c733bcb1e595/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b506a5a2387f4a5f69a8c23840e1c733bcb1e595", "patch": "@@ -1,3 +1,7 @@\n+2009-06-18  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* gcc.dg/cpp/arith-3.c: Add column info.\n+\t\n 2009-06-18  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.target/arm/fp16-compile-none-2.c: New."}, {"sha": "2f94e981162b122e3ceb74faa44d3b6128fffdb1", "filename": "gcc/testsuite/gcc.dg/cpp/arith-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b506a5a2387f4a5f69a8c23840e1c733bcb1e595/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Farith-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b506a5a2387f4a5f69a8c23840e1c733bcb1e595/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Farith-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Farith-3.c?ref=b506a5a2387f4a5f69a8c23840e1c733bcb1e595", "patch": "@@ -9,7 +9,7 @@\n    Please keep changes to arith-2.c and arith-3.c in sync.  */\n \n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fshow-column\" } */\n \n #include <limits.h>\n \n@@ -274,7 +274,7 @@\n # error\t\t/* { dg-bogus \"error\" }  */\n #endif\n \n-#if -5 / (2 - 2) /* { dg-error \"division by zero\" } */\n+#if -5 / (2 - 2) /* { dg-error \"13:division by zero\" } */\n #endif\n \n #if LONG_UDIVISION != LONG_UDIVISION_ANSWER\n@@ -286,7 +286,7 @@\n #endif\n \n /* Binary %.  Cannot overflow.  */\n-#if -5 % (2 - 2) /* { dg-error \"division by zero\" } */\n+#if -5 % (2 - 2) /* { dg-error \"13:division by zero\" } */\n #endif\n \n #if TARG_MIN % 1 /* { dg-bogus \"overflow\" } */"}, {"sha": "d7146588f092c386beeb5fd1b55c5b301dc68cb0", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b506a5a2387f4a5f69a8c23840e1c733bcb1e595/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b506a5a2387f4a5f69a8c23840e1c733bcb1e595/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=b506a5a2387f4a5f69a8c23840e1c733bcb1e595", "patch": "@@ -1,3 +1,7 @@\n+2009-06-18  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* expr.c (num_div_op): Take explicit location.\n+\n 2009-06-17  Ian Lance Taylor  <iant@google.com>\n \n \t* include/cpplib.h (progname): Don't declare."}, {"sha": "96dd2fde24ca93e538b3a40083c4fa59dc70fbce", "filename": "libcpp/expr.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b506a5a2387f4a5f69a8c23840e1c733bcb1e595/libcpp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b506a5a2387f4a5f69a8c23840e1c733bcb1e595/libcpp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fexpr.c?ref=b506a5a2387f4a5f69a8c23840e1c733bcb1e595", "patch": "@@ -52,7 +52,8 @@ static cpp_num num_inequality_op (cpp_reader *, cpp_num, cpp_num,\n static cpp_num num_equality_op (cpp_reader *, cpp_num, cpp_num,\n \t\t\t\tenum cpp_ttype);\n static cpp_num num_mul (cpp_reader *, cpp_num, cpp_num);\n-static cpp_num num_div_op (cpp_reader *, cpp_num, cpp_num, enum cpp_ttype);\n+static cpp_num num_div_op (cpp_reader *, cpp_num, cpp_num, enum cpp_ttype,\n+\t\t\t   source_location);\n static cpp_num num_lshift (cpp_num, size_t, size_t);\n static cpp_num num_rshift (cpp_num, size_t, size_t);\n \n@@ -1123,7 +1124,7 @@ reduce (cpp_reader *pfile, struct op *top, enum cpp_ttype op)\n \tcase CPP_DIV:\n \tcase CPP_MOD:\n \t  top[-1].value = num_div_op (pfile, top[-1].value,\n-\t\t\t\t      top->value, top->op);\n+\t\t\t\t      top->value, top->op, top->loc);\n \t  top[-1].loc = top->loc;\n \t  break;\n \n@@ -1668,10 +1669,13 @@ num_mul (cpp_reader *pfile, cpp_num lhs, cpp_num rhs)\n   return result;\n }\n \n-/* Divide two preprocessing numbers, returning the answer or the\n-   remainder depending upon OP.  */\n+/* Divide two preprocessing numbers, LHS and RHS, returning the answer\n+   or the remainder depending upon OP. LOCATION is the source location\n+   of this operator (for diagnostics).  */\n+\n static cpp_num\n-num_div_op (cpp_reader *pfile, cpp_num lhs, cpp_num rhs, enum cpp_ttype op)\n+num_div_op (cpp_reader *pfile, cpp_num lhs, cpp_num rhs, enum cpp_ttype op,\n+\t    source_location location)\n {\n   cpp_num result, sub;\n   cpp_num_part mask;\n@@ -1711,7 +1715,8 @@ num_div_op (cpp_reader *pfile, cpp_num lhs, cpp_num rhs, enum cpp_ttype op)\n   else\n     {\n       if (!pfile->state.skip_eval)\n-\tcpp_error (pfile, CPP_DL_ERROR, \"division by zero in #if\");\n+\tcpp_error_with_line (pfile, CPP_DL_ERROR, location, 0,\n+\t\t\t     \"division by zero in #if\");\n       return lhs;\n     }\n "}]}