{"sha": "254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU0YThmMGRiZTk2MWY5NGQ2ZTIzYWU3YmEwMTNhZmQ2N2RmYzdhMA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-01-14T09:28:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-01-14T09:28:10Z"}, "message": "fr30.h (TRAMPOLINE_TEMPLATE): Use nops to ensure the static chain and destination functions are 32bit aligned...\n\n        * fr30.h (TRAMPOLINE_TEMPLATE): Use nops to ensure the static chain\n        and destination functions are 32bit aligned within the trampoline.\n        (TRAMPOLINE_SIZE, INITIALIZE_TRAMPOLINE): Corresponding changes.\n        (TRAMPOLINE_ALIGNMENT): Define.\n\nFrom-SVN: r31409", "tree": {"sha": "6d003ccced778fcf56c848339488708e9294935f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d003ccced778fcf56c848339488708e9294935f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0/comments", "author": null, "committer": null, "parents": [{"sha": "b2eadaa20146c45631e6cc9ffef0bb2a65748241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2eadaa20146c45631e6cc9ffef0bb2a65748241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2eadaa20146c45631e6cc9ffef0bb2a65748241"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "c52c015d94048202c4128e38465a568710b19268", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0", "patch": "@@ -1,5 +1,10 @@\n Fri Jan 14 00:28:06 2000  Jeffrey A Law  (law@cygnus.com)\n \n+\t* fr30.h (TRAMPOLINE_TEMPLATE): Use nops to ensure the static chain\n+\tand destination functions are 32bit aligned within the trampoline.\n+\t(TRAMPOLINE_SIZE, INITIALIZE_TRAMPOLINE): Corresponding changes.\n+\t(TRAMPOLINE_ALIGNMENT): Define.\n+\n \t* cse.c (cse_insn): When changing (set (pc) (reg)) to\n \t(set (pc) (label_ref)), verify the change creates a valid insn.\n "}, {"sha": "b7ea8b2239ec9863ada0453ae64d3f92f13ed6c7", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=254a8f0dbe961f94d6e23ae7ba013afd67dfc7a0", "patch": "@@ -1139,22 +1139,36 @@ typedef int CUMULATIVE_ARGS;\n \n /* On the FR30, the trampoline is:\n \n+   nop\n    ldi:32 STATIC, r12\n+   nop\n    ldi:32 FUNCTION, r0\n-   jmp    @r0 */\n+   jmp    @r0\n+\n+   The no-ops are to guarantee that the the static chain and final\n+   target are 32 bit ailgned within the trampoline.  That allows us to\n+   initialize those locations with simple SImode stores.   The alternative\n+   would be to use HImode stores.  */\n    \n /* A C statement to output, on the stream FILE, assembler code for a block of\n    data that contains the constant parts of a trampoline.  This code should not\n    include a label--the label is taken care of automatically.  */\n #define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\tnop\\n\");\t\t\t\t\t\t\t\\\n   fprintf (FILE, \"\\tldi:32\\t#0, %s\\n\", reg_names [STATIC_CHAIN_REGNUM]);\t\\\n+  fprintf (FILE, \"\\tnop\\n\");\t\t\t\t\t\t\t\\\n   fprintf (FILE, \"\\tldi:32\\t#0, %s\\n\", reg_names [COMPILER_SCRATCH_REGISTER]);\t\\\n   fprintf (FILE, \"\\tjmp\\t@%s\\n\", reg_names [COMPILER_SCRATCH_REGISTER]);\t\\\n }\n \n /* A C expression for the size in bytes of the trampoline, as an integer.  */\n-#define TRAMPOLINE_SIZE 14\n+#define TRAMPOLINE_SIZE 18\n+\n+/* We want the trampoline to be aligned on a 32bit boundary so that we can\n+   make sure the location of the static chain & target function within\n+   the trampoline is also aligned on a 32bit boundary.  */\n+#define TRAMPOLINE_ALIGNMENT 32\n \n /* A C statement to initialize the variable parts of a trampoline.  ADDR is an\n    RTX for the address of the trampoline; FNADDR is an RTX for the address of\n@@ -1163,8 +1177,8 @@ typedef int CUMULATIVE_ARGS;\n #define INITIALIZE_TRAMPOLINE(ADDR, FNADDR, STATIC_CHAIN)\t\t\t\\\n do\t\t\t\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (ADDR, 2)), STATIC_CHAIN);\\\n-  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (ADDR, 8)), FNADDR);\t\\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (ADDR, 4)), STATIC_CHAIN);\\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (ADDR, 12)), FNADDR);\t\\\n } while (0);\n \n /*}}}*/ \f"}]}