{"sha": "1f6237e3ddfba881d87d9c62d0b806717a71fbe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY2MjM3ZTNkZGZiYTg4MWQ4N2Q5YzYyZDBiODA2NzE3YTcxZmJlNQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-25T09:04:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:04:59Z"}, "message": "[Ada] Fix expansion of quantified expressions as part of \"others\" associations\n\n2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_aggr.adb (Flatten): A quantified expression cannot be duplicated\n\tin an others clause to prevent visibility issues with the generated\n\tloop variable.\n\t(Component_OK_For_Backend): Return false for a quantified expression.\n\t(Check_Static_Component): Ditto.\n\nFrom-SVN: r260737", "tree": {"sha": "b2c9d056b3c4c603f2a8144c66b1691350cb08ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2c9d056b3c4c603f2a8144c66b1691350cb08ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f6237e3ddfba881d87d9c62d0b806717a71fbe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f6237e3ddfba881d87d9c62d0b806717a71fbe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f6237e3ddfba881d87d9c62d0b806717a71fbe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f6237e3ddfba881d87d9c62d0b806717a71fbe5/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25eadeeaa2a0da50bd591c38de899140a413323e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25eadeeaa2a0da50bd591c38de899140a413323e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25eadeeaa2a0da50bd591c38de899140a413323e"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "dfe117ad9c592148b6c0b3f0b58036c5d362c7de", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6237e3ddfba881d87d9c62d0b806717a71fbe5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6237e3ddfba881d87d9c62d0b806717a71fbe5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1f6237e3ddfba881d87d9c62d0b806717a71fbe5", "patch": "@@ -1,3 +1,11 @@\n+2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Flatten): A quantified expression cannot be duplicated\n+\tin an others clause to prevent visibility issues with the generated\n+\tloop variable.\n+\t(Component_OK_For_Backend): Return false for a quantified expression.\n+\t(Check_Static_Component): Ditto.\n+\n 2018-05-25  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* libgnat/s-secsta.adb (SS_Allocate): Reimplemented."}, {"sha": "f4619a8b9e12540e2fcdd643475a9142262cf30d", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6237e3ddfba881d87d9c62d0b806717a71fbe5/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6237e3ddfba881d87d9c62d0b806717a71fbe5/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=1f6237e3ddfba881d87d9c62d0b806717a71fbe5", "patch": "@@ -4373,6 +4373,7 @@ package body Exp_Aggr is\n                  or else not Compile_Time_Known_Aggregate (Expression (Expr))\n                  or else Expansion_Delayed (Expression (Expr))\n                  or else Nkind (Expr) = N_Iterated_Component_Association\n+                 or else Nkind (Expr) = N_Quantified_Expression\n                then\n                   Static_Components := False;\n                   exit;\n@@ -4523,10 +4524,20 @@ package body Exp_Aggr is\n \n                   --  If we have an others choice, fill in the missing elements\n                   --  subject to the limit established by Max_Others_Replicate.\n+                  --  If the expression involves a construct that generates\n+                  --  a loop, we must generate individual assignmentw and\n+                  --  no flattening is possible.\n \n                   if Nkind (Choice) = N_Others_Choice then\n                      Rep_Count := 0;\n \n+                     if Nkind_In  (Expression (Elmt),\n+                         N_Quantified_Expression,\n+                         N_Iterated_Component_Association)\n+                     then\n+                        return False;\n+                     end if;\n+\n                      for J in Vals'Range loop\n                         if No (Vals (J)) then\n                            Vals (J) := New_Copy_Tree (Expression (Elmt));\n@@ -7235,6 +7246,10 @@ package body Exp_Aggr is\n                Static_Components := False;\n                return False;\n \n+            elsif Nkind (Expr_Q) = N_Quantified_Expression then\n+               Static_Components := False;\n+               return False;\n+\n             elsif Possible_Bit_Aligned_Component (Expr_Q) then\n                Static_Components := False;\n                return False;"}]}