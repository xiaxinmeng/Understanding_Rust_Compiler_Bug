{"sha": "8b1106fbc36341b04477ee593ea0de92ecd16964", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIxMTA2ZmJjMzYzNDFiMDQ0NzdlZTU5M2VhMGRlOTJlY2QxNjk2NA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-03-03T17:04:49Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-03-03T17:04:49Z"}, "message": "Add Linux/x32 support to Ada\n\n2012-03-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* init.c (__gnat_adjust_context_for_raise): Also check\n\t\"orq $0x0,(%esp)\" for x32.\n\n\t* link.c (__gnat_default_libgcc_subdir): set to libx32 for x32.\n\n\t* gcc-interface/Makefile.in (arch): Set to x32 if MULTISUBDIR\n\tis /x32.\n\tSupport x32.\n\nFrom-SVN: r184859", "tree": {"sha": "85b4d2e3bed245e2ce2b3cfbce99eccec9880473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85b4d2e3bed245e2ce2b3cfbce99eccec9880473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b1106fbc36341b04477ee593ea0de92ecd16964", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b1106fbc36341b04477ee593ea0de92ecd16964", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b1106fbc36341b04477ee593ea0de92ecd16964", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b1106fbc36341b04477ee593ea0de92ecd16964/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e193637243a877226db68773c0735f88e4d9aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e193637243a877226db68773c0735f88e4d9aab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e193637243a877226db68773c0735f88e4d9aab"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "a6aefc56ce6a4d7e0e3cc888a8966d1aea287ae8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1106fbc36341b04477ee593ea0de92ecd16964/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1106fbc36341b04477ee593ea0de92ecd16964/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8b1106fbc36341b04477ee593ea0de92ecd16964", "patch": "@@ -1,3 +1,14 @@\n+2012-03-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* init.c (__gnat_adjust_context_for_raise): Also check\n+\t\"orq $0x0,(%esp)\" for x32.\n+\n+\t* link.c (__gnat_default_libgcc_subdir): set to libx32 for x32.\n+\n+\t* gcc-interface/Makefile.in (arch): Set to x32 if MULTISUBDIR\n+\tis /x32.\n+\tSupport x32.\n+\n 2012-02-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (components_to_record): Add ARTIFICIAL parameter"}, {"sha": "19d9eb0e939c533650220edc037ee7eac41b9365", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1106fbc36341b04477ee593ea0de92ecd16964/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1106fbc36341b04477ee593ea0de92ecd16964/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=8b1106fbc36341b04477ee593ea0de92ecd16964", "patch": "@@ -349,6 +349,10 @@ GNATMAKE_OBJS = a-except.o ali.o ali-util.o aspects.o s-casuti.o alloc.o \\\n ifeq ($(strip $(filter-out %x86_64, $(arch))),)\n   ifeq ($(strip $(MULTISUBDIR)),/32)\n     arch:=i686\n+  else\n+    ifeq ($(strip $(MULTISUBDIR)),/x32)\n+      arch:=x32\n+    endif\n   endif\n endif\n \n@@ -2134,6 +2138,43 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+ifeq ($(strip $(filter-out %x32 linux%,$(arch) $(osys))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-exetim.adb<a-exetim-posix.adb \\\n+  a-exetim.ads<a-exetim-default.ads \\\n+  a-intnam.ads<a-intnam-linux.ads \\\n+  a-synbar.adb<a-synbar-posix.adb \\\n+  a-synbar.ads<a-synbar-posix.ads \\\n+  s-inmaop.adb<s-inmaop-posix.adb \\\n+  s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux.ads \\\n+  s-mudido.adb<s-mudido-affinity.adb \\\n+  s-osinte.ads<s-osinte-linux.ads \\\n+  s-osinte.adb<s-osinte-posix.adb \\\n+  s-osprim.adb<s-osprim-posix.adb \\\n+  s-taprop.adb<s-taprop-linux.adb \\\n+  s-tasinf.ads<s-tasinf-linux.ads \\\n+  s-tasinf.adb<s-tasinf-linux.adb \\\n+  s-tpopsp.adb<s-tpopsp-tls.adb \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n+  g-sercom.adb<g-sercom-linux.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(X86_64_TARGET_PAIRS) \\\n+  system.ads<system-linux-x86.ads\n+\n+  TOOLS_TARGET_PAIRS =  \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n+    indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB=-lpthread -lrt\n+  GNATLIB_SHARED=gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n ifeq ($(strip $(filter-out darwin%,$(osys))),)\n   SO_OPTS = -shared-libgcc\n   LIBGNAT_TARGET_PAIRS = \\"}, {"sha": "80a02b1734fd2e95813cbabe02fdab9d6a1ff3e4", "filename": "gcc/ada/init.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1106fbc36341b04477ee593ea0de92ecd16964/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1106fbc36341b04477ee593ea0de92ecd16964/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=8b1106fbc36341b04477ee593ea0de92ecd16964", "patch": "@@ -615,9 +615,13 @@ __gnat_adjust_context_for_raise (int signo ATTRIBUTE_UNUSED, void *ucontext)\n   if (signo == SIGSEGV && pc && *pc == 0x00240c83)\n     mcontext->gregs[REG_ESP] += 4096 + 4 * sizeof (unsigned long);\n #elif defined (__x86_64__)\n-  unsigned long *pc = (unsigned long *)mcontext->gregs[REG_RIP];\n-  /* The pattern is \"orq $0x0,(%rsp)\" for a probe in 64-bit mode.  */\n-  if (signo == SIGSEGV && pc && (*pc & 0xffffffffff) == 0x00240c8348)\n+  unsigned long long *pc = (unsigned long long *)mcontext->gregs[REG_RIP];\n+  if (signo == SIGSEGV && pc\n+      /* The pattern is \"orq $0x0,(%rsp)\" for a probe in 64-bit mode.  */\n+      && ((*pc & 0xffffffffffLL) == 0x00240c8348LL\n+\t  /* The pattern may also be \"orl $0x0,(%esp)\" for a probe in\n+\t     x32 mode.  */\n+\t  || (*pc & 0xffffffffLL) == 0x00240c83LL))\n     mcontext->gregs[REG_RSP] += 4096 + 4 * sizeof (unsigned long);\n #elif defined (__ia64__)\n   /* ??? The IA-64 unwinder doesn't compensate for signals.  */"}, {"sha": "cb1a928584ae69d3571dcdee99f28027f49abeeb", "filename": "gcc/ada/link.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b1106fbc36341b04477ee593ea0de92ecd16964/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b1106fbc36341b04477ee593ea0de92ecd16964/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=8b1106fbc36341b04477ee593ea0de92ecd16964", "patch": "@@ -187,7 +187,11 @@ unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n #if defined (__x86_64)\n+# if defined (__LP64__)\n const char *__gnat_default_libgcc_subdir = \"lib64\";\n+# else\n+const char *__gnat_default_libgcc_subdir = \"libx32\";\n+# endif\n #else\n const char *__gnat_default_libgcc_subdir = \"lib\";\n #endif"}]}