{"sha": "0c316b201f9ba9e2627615d8dc9860297fb7c8c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMzMTZiMjAxZjliYTllMjYyNzYxNWQ4ZGM5ODYwMjk3ZmI3YzhjOA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-31T18:33:12Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-10-31T18:33:12Z"}, "message": "(do_store_flag): For equality test of a single bit, use\nsubtarget instead of target in calls.\n\nFrom-SVN: r5956", "tree": {"sha": "1074e329467654e9a14375c70ee6b81d7efc1e1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1074e329467654e9a14375c70ee6b81d7efc1e1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c316b201f9ba9e2627615d8dc9860297fb7c8c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c316b201f9ba9e2627615d8dc9860297fb7c8c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c316b201f9ba9e2627615d8dc9860297fb7c8c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c316b201f9ba9e2627615d8dc9860297fb7c8c8/comments", "author": null, "committer": null, "parents": [{"sha": "c88aeaf8f3597395a8c5118817b61c6555ace6fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c88aeaf8f3597395a8c5118817b61c6555ace6fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c88aeaf8f3597395a8c5118817b61c6555ace6fd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "32d5ef8f7663a94bb385a3683837fcc642bb2dd7", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c316b201f9ba9e2627615d8dc9860297fb7c8c8/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c316b201f9ba9e2627615d8dc9860297fb7c8c8/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=0c316b201f9ba9e2627615d8dc9860297fb7c8c8", "patch": "@@ -8941,18 +8941,18 @@ do_store_flag (exp, target, mode, only_cheap)\n \n       if (bitnum != 0)\n \top0 = expand_shift (RSHIFT_EXPR, GET_MODE (op0), op0,\n-\t\t\t    size_int (bitnum), target, ops_unsignedp);\n+\t\t\t    size_int (bitnum), subtarget, ops_unsignedp);\n \n       if (GET_MODE (op0) != mode)\n \top0 = convert_to_mode (mode, op0, ops_unsignedp);\n \n       if ((code == EQ && ! invert) || (code == NE && invert))\n-\top0 = expand_binop (mode, xor_optab, op0, const1_rtx, target,\n+\top0 = expand_binop (mode, xor_optab, op0, const1_rtx, subtarget,\n \t\t\t    ops_unsignedp, OPTAB_LIB_WIDEN);\n \n       /* Put the AND last so it can combine with more things.  */\n       if (bitnum != TYPE_PRECISION (type) - 1)\n-\top0 = expand_and (op0, const1_rtx, target);\n+\top0 = expand_and (op0, const1_rtx, subtarget);\n \n       return op0;\n     }"}]}