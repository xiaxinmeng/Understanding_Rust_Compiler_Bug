{"sha": "1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZhN2UwZmQ1MmQxMTViYmU2OGYxMzhhMDZkMTJlN2E4YWRjNGJlNQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-12-01T15:50:23Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-12-01T15:50:23Z"}, "message": "2003-12-01  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/net/protocol/file/Connection.java\n\t(fileIn): Documentation added.\n\t(inputStream): Likewise.\n\t(outputStream): Likewise.\n\t(Connection): Likewise.\n\t(connect): Simplified.\n\nFrom-SVN: r74106", "tree": {"sha": "b5fdc38d9379b15233362f18f7b3d559d32a8c46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5fdc38d9379b15233362f18f7b3d559d32a8c46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5/comments", "author": null, "committer": null, "parents": [{"sha": "3066a15c13e5276734c91eeb573ec17915fed89b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3066a15c13e5276734c91eeb573ec17915fed89b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3066a15c13e5276734c91eeb573ec17915fed89b"}], "stats": {"total": 70, "additions": 62, "deletions": 8}, "files": [{"sha": "61aa598bba16bef065d188e0f81ad39c766838eb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5", "patch": "@@ -1,3 +1,12 @@\n+2003-12-01  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/net/protocol/file/Connection.java\n+\t(fileIn): Documentation added.\n+\t(inputStream): Likewise.\n+\t(outputStream): Likewise.\n+\t(Connection): Likewise.\n+\t(connect): Simplified.\n+\n 2003-12-01  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GtkImage.java (setDimensions,"}, {"sha": "dddbd309482bbe9f9cba53a2ed809cec6d05a20f", "filename": "libjava/gnu/java/net/protocol/file/Connection.java", "status": "modified", "additions": 53, "deletions": 8, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java?ref=1fa7e0fd52d115bbe68f138a06d12e7a8adc4be5", "patch": "@@ -38,38 +38,71 @@\n */\n package gnu.java.net.protocol.file;\n \n-import java.net.URL;\n-import java.net.URLConnection;\n import java.io.BufferedInputStream;\n import java.io.BufferedOutputStream;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n+import java.io.FilePermission;\n import java.io.InputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n import java.net.ProtocolException;\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.security.Permission;\n import java.util.Map;\n import java.util.Vector;\n import java.util.Hashtable;\n import java.util.Enumeration;\n \n /**\n+ * This subclass of java.net.URLConnection models a URLConnection via\n+ * the \"file\" protocol.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Nic Ferrier <nferrier@tapsellferrier.co.uk>\n  * @author Warren Levy <warrenl@cygnus.com>\n- * @date April 13, 1999.\n  */\n public class Connection extends URLConnection\n {\n-  private Hashtable hdrHash = new Hashtable();\n-  private Vector hdrVec = new Vector();\n-  private boolean gotHeaders = false;\n+  /**\n+   * Default permission for a file\n+   */\n+  private static final String DEFAULT_PERMISSION = \"read\";\n+\n+  /**\n+   * This is a File object for this connection\n+   */\n   private File fileIn;\n+\n+  /**\n+   * InputStream if we are reading from the file\n+   */\n   private InputStream inputStream;\n+\n+  /**\n+   * OutputStream if we are writing to the file\n+   */\n   private OutputStream outputStream;\n+  \n+  private Hashtable hdrHash = new Hashtable();\n+  private Vector hdrVec = new Vector();\n+  private boolean gotHeaders = false;\n \n+  /**\n+   * FilePermission to read the file\n+   */\n+  private FilePermission permission;\n+\n+  /**\n+   * Calls superclass constructor to initialize.\n+   */\n   public Connection(URL url)\n   {\n     super (url);\n+\n+    permission = new FilePermission(getURL().getFile(), DEFAULT_PERMISSION);\n   }\n   \n   /**\n@@ -82,8 +115,7 @@ public void connect() throws IOException\n       return;\n     \n     // If not connected, then file needs to be openned.\n-    String fname = url.getFile();\n-    fileIn = new File(fname);\n+    fileIn = new File(getURL().getFile());\n     if (doInput)\n       inputStream = new BufferedInputStream(new FileInputStream(fileIn));\n     if (doOutput)\n@@ -238,4 +270,17 @@ private void getHeaders() throws IOException\n     hdrHash.put(key.toLowerCase(), Long.toString(len));\n   }\n   \n+  /**\n+   * This method returns a <code>Permission</code> object representing the\n+   * permissions required to access this URL.  This method returns a\n+   * <code>java.io.FilePermission</code> for the file's path with a read\n+   * permission.\n+   *\n+   * @return A Permission object\n+   */\n+  public Permission getPermission() throws IOException\n+  {\n+    return permission;\n+  }\n+\n } // class FileURLConnection"}]}