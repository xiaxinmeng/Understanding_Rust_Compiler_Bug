{"sha": "36f896c7728d0d0f39cea1f064a809c2e684db45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZmODk2Yzc3MjhkMGQwZjM5Y2VhMWYwNjRhODA5YzJlNjg0ZGI0NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-04-05T05:25:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-04-05T05:25:18Z"}, "message": "re PR target/80310 (Bogus -Wpsabi warning with -fsanitize=signed-integer-overflow)\n\n\tPR target/80310\n\t* tree-nvr.c: Include internal-fn.h.\n\t(pass_return_slot::execute): Ignore internal calls without\n\tdirect optab.\n\n\t* c-c++-common/ubsan/pr80310.c: New test.\n\nFrom-SVN: r246699", "tree": {"sha": "e33a8dee4a33fe4fdf2bf3811fa6c87ed9b76b78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e33a8dee4a33fe4fdf2bf3811fa6c87ed9b76b78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36f896c7728d0d0f39cea1f064a809c2e684db45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f896c7728d0d0f39cea1f064a809c2e684db45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36f896c7728d0d0f39cea1f064a809c2e684db45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f896c7728d0d0f39cea1f064a809c2e684db45/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "451522116c1dffcd12e86b03eec9eeb3bda2ee1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451522116c1dffcd12e86b03eec9eeb3bda2ee1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/451522116c1dffcd12e86b03eec9eeb3bda2ee1c"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "3e1e0701e441d697a95f9fd1cba79dbec2e69c3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f896c7728d0d0f39cea1f064a809c2e684db45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f896c7728d0d0f39cea1f064a809c2e684db45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36f896c7728d0d0f39cea1f064a809c2e684db45", "patch": "@@ -1,3 +1,10 @@\n+2017-04-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/80310\n+\t* tree-nvr.c: Include internal-fn.h.\n+\t(pass_return_slot::execute): Ignore internal calls without\n+\tdirect optab.\n+\n 2017-04-04  Jakub Jelinek  <jakub@redhat.com>\n \t    Richard Biener  <rguenther@suse.de>\n "}, {"sha": "b030d22daf0b3013ebdef516805710f9081f9cec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f896c7728d0d0f39cea1f064a809c2e684db45/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f896c7728d0d0f39cea1f064a809c2e684db45/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=36f896c7728d0d0f39cea1f064a809c2e684db45", "patch": "@@ -1,3 +1,8 @@\n+2017-04-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/80310\n+\t* c-c++-common/ubsan/pr80310.c: New test.\n+\n 2017-04-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/80297"}, {"sha": "529f32ae9af1d2f24bace2bcef4b04b0e94381d9", "filename": "gcc/testsuite/c-c++-common/ubsan/pr80310.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f896c7728d0d0f39cea1f064a809c2e684db45/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80310.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f896c7728d0d0f39cea1f064a809c2e684db45/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80310.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr80310.c?ref=36f896c7728d0d0f39cea1f064a809c2e684db45", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/80310 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fsanitize=signed-integer-overflow\" } */\n+/* { dg-additional-options \"-mno-avx\" { target i?86-*-* x86_64-*-* } } */\n+\n+typedef int V __attribute__((vector_size (32)));\n+\n+void\n+foo (V *a, V *b, V *c)\n+{\n+  *a = *b + *c;\t\t/* { dg-bogus \"AVX vector return without AVX enabled changes the ABI\" \"\" { target i?86-*-* x86_64-*-* } } */\n+}"}, {"sha": "953135b037525538fee5b13847c9cd6120577624", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f896c7728d0d0f39cea1f064a809c2e684db45/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f896c7728d0d0f39cea1f064a809c2e684db45/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=36f896c7728d0d0f39cea1f064a809c2e684db45", "patch": "@@ -28,6 +28,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pretty-print.h\"\n #include \"gimple-iterator.h\"\n #include \"gimple-walk.h\"\n+#include \"internal-fn.h\"\n \n /* This file implements return value optimizations for functions which\n    return aggregate types.\n@@ -377,6 +378,12 @@ pass_return_slot::execute (function *fun)\n \t  if (stmt\n \t      && gimple_call_lhs (stmt)\n \t      && !gimple_call_return_slot_opt_p (stmt)\n+\t      /* Ignore internal functions without direct optabs,\n+\t\t those are expanded specially and aggregate_value_p\n+\t\t on their result might result in undesirable warnings\n+\t\t with some backends.  */\n+\t      && (!gimple_call_internal_p (stmt)\n+\t\t  || direct_internal_fn_p (gimple_call_internal_fn (stmt)))\n \t      && aggregate_value_p (TREE_TYPE (gimple_call_lhs (stmt)),\n \t\t\t\t    gimple_call_fndecl (stmt)))\n \t    {"}]}