{"sha": "daa956d01f8342ee901c510f2c1b456b4e4b6394", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFhOTU2ZDAxZjgzNDJlZTkwMWM1MTBmMmMxYjQ1NmI0ZTRiNjM5NA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-14T13:05:19Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-14T13:05:19Z"}, "message": "* cselib.c, expr.c: Fix comment typos.\n\nFrom-SVN: r90620", "tree": {"sha": "c49018889381b60860e9b3d78de310db9de5d2c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c49018889381b60860e9b3d78de310db9de5d2c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daa956d01f8342ee901c510f2c1b456b4e4b6394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa956d01f8342ee901c510f2c1b456b4e4b6394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daa956d01f8342ee901c510f2c1b456b4e4b6394", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa956d01f8342ee901c510f2c1b456b4e4b6394/comments", "author": null, "committer": null, "parents": [{"sha": "c1dc94c40a609cea5b695ebb43e5a02dc70aed27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1dc94c40a609cea5b695ebb43e5a02dc70aed27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1dc94c40a609cea5b695ebb43e5a02dc70aed27"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "3f7f38fb2cb585a09be699accb2aa85949cef0f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa956d01f8342ee901c510f2c1b456b4e4b6394/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa956d01f8342ee901c510f2c1b456b4e4b6394/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=daa956d01f8342ee901c510f2c1b456b4e4b6394", "patch": "@@ -6,6 +6,8 @@\n \t* emit-rtl.c (push_to_full_sequence): Remove.\n \t* rtl.h: Remove the corresponding prototype.\n \n+\t* cselib.c, expr.c: Fix comment typos.\n+\n 2004-11-13  Richard Henderson  <rth@redhat.com>\n \n \t* calls.c (precompute_register_parameters): Force all PARALLELs"}, {"sha": "b57125bf9fa890b8aaac741392f77edb30f2755b", "filename": "gcc/cselib.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa956d01f8342ee901c510f2c1b456b4e4b6394/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa956d01f8342ee901c510f2c1b456b4e4b6394/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=daa956d01f8342ee901c510f2c1b456b4e4b6394", "patch": "@@ -707,7 +707,7 @@ new_cselib_val (unsigned int value, enum machine_mode mode)\n   /* We use an alloc pool to allocate this RTL construct because it\n      accounts for about 8% of the overall memory usage.  We know\n      precisely when we can have VALUE RTXen (when cselib is active)\n-     so we don't need to put them in garbave collected memory.\n+     so we don't need to put them in garbage collected memory.\n      ??? Why should a VALUE be an RTX in the first place?  */\n   e->u.val_rtx = pool_alloc (value_pool);\n   memset (e->u.val_rtx, 0, RTX_HDR_SIZE);"}, {"sha": "f94993085cfdf5ca5a4c25a4aa00b7e1efb56ef4", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa956d01f8342ee901c510f2c1b456b4e4b6394/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa956d01f8342ee901c510f2c1b456b4e4b6394/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=daa956d01f8342ee901c510f2c1b456b4e4b6394", "patch": "@@ -1559,7 +1559,7 @@ gen_group_rtx (rtx orig)\n \n /* A subroutine of emit_group_load.  Arguments as for emit_group_load,\n    except that values are placed in TMPS[i], and must later be moved\n-   into corrosponding XEXP (XVECEXP (DST, 0, i), 0) element.  */\n+   into corresponding XEXP (XVECEXP (DST, 0, i), 0) element.  */\n \n static void\n emit_group_load_1 (rtx *tmps, rtx dst, rtx orig_src, tree type, int ssize)"}]}