{"sha": "ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ExYTk3NjNhMWY2MzVkMjY4N2ViZDUwMDlkZDYxZDRmZDBhYjVmYg==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-04-10T09:20:18Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-05-19T06:31:56Z"}, "message": "RISC-V: Update march parser\n\n - The arch string rule has changed in latest spec, it introduced new\n   multi-letter extension prefix with 'h' and 'z', and drop `sx`. also\n   adjust parsing order for 's' and 'x'.\n\ngcc/ChangeLog\n\n\t* riscv-common.c (parse_sv_or_non_std_ext): Rename to\n\tparse_multiletter_ext.\n\t(parse_multiletter_ext): Add parsing `h` and `z`, drop `sx`,\n\tadjust parsing order for 's' and 'x'.\n\ngcc/testsuite/ChangeLog\n\n\t* gcc.target/riscv/arch-3.c: Adjust option.\n\t* gcc.target/riscv/arch-5.c: New.\n\t* gcc.target/riscv/attribute-9.c: Adjust option and test\n\tcondition.", "tree": {"sha": "3f4524f3639d4c08b0d7be3a8d99f4a016491c9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f4524f3639d4c08b0d7be3a8d99f4a016491c9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4b48fc47c3406b6f41be093c4615879b7006710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4b48fc47c3406b6f41be093c4615879b7006710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4b48fc47c3406b6f41be093c4615879b7006710"}], "stats": {"total": 65, "additions": 42, "deletions": 23}, "files": [{"sha": "e40d159cfebf249aeebb18a5e783416e4bee818a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "patch": "@@ -1,3 +1,10 @@\n+2020-05-19  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* riscv-common.c (parse_sv_or_non_std_ext): Rename to\n+\tparse_multiletter_ext.\n+\t(parse_multiletter_ext): Add parsing `h` and `z`, drop `sx`,\n+\tadjust parsing order for 's' and 'x'.\n+\n 2020-05-19  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vectorizer.h (_slp_tree::vectype): Add field."}, {"sha": "a2e8d7003cc8a5512059cf1b2c3a2beb2428c6f9", "filename": "gcc/common/config/riscv/riscv-common.c", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c?ref=ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "patch": "@@ -70,8 +70,8 @@ class riscv_subset_list\n \n   const char *parse_std_ext (const char *);\n \n-  const char *parse_sv_or_non_std_ext (const char *, const char *,\n-\t\t\t\t       const char *);\n+  const char *parse_multiletter_ext (const char *, const char *,\n+\t\t\t\t     const char *);\n \n public:\n   ~riscv_subset_list ();\n@@ -357,7 +357,7 @@ riscv_subset_list::parse_std_ext (const char *p)\n     {\n       char subset[2] = {0, 0};\n \n-      if (*p == 'x' || *p == 's')\n+      if (*p == 'x' || *p == 's' || *p == 'h' || *p == 'z')\n \tbreak;\n \n       if (*p == '_')\n@@ -399,20 +399,20 @@ riscv_subset_list::parse_std_ext (const char *p)\n   return p;\n }\n \n-/* Parsing function for non-standard and supervisor extensions.\n+/* Parsing function for multi-letter extensions.\n \n    Return Value:\n      Points to the end of extensions.\n \n    Arguments:\n      `p`: Current parsing position.\n-     `ext_type`: What kind of extensions, 'x', 's' or 'sx'.\n+     `ext_type`: What kind of extensions, 's', 'h', 'z' or 'x'.\n      `ext_type_str`: Full name for kind of extension.  */\n \n const char *\n-riscv_subset_list::parse_sv_or_non_std_ext (const char *p,\n-\t\t\t\t\t    const char *ext_type,\n-\t\t\t\t\t    const char *ext_type_str)\n+riscv_subset_list::parse_multiletter_ext (const char *p,\n+\t\t\t\t\t  const char *ext_type,\n+\t\t\t\t\t  const char *ext_type_str)\n {\n   unsigned major_version = 0;\n   unsigned minor_version = 0;\n@@ -429,11 +429,6 @@ riscv_subset_list::parse_sv_or_non_std_ext (const char *p,\n       if (strncmp (p, ext_type, ext_type_len) != 0)\n \tbreak;\n \n-      /* It's non-standard supervisor extension if it prefix with sx.  */\n-      if ((ext_type[0] == 's') && (ext_type_len == 1)\n-\t  && (*(p + 1) == 'x'))\n-\tbreak;\n-\n       char *subset = xstrdup (p);\n       char *q = subset;\n       const char *end_of_version;\n@@ -494,21 +489,26 @@ riscv_subset_list::parse (const char *arch, location_t loc)\n   if (p == NULL)\n     goto fail;\n \n-  /* Parsing non-standard extension.  */\n-  p = subset_list->parse_sv_or_non_std_ext (p, \"x\", \"non-standard extension\");\n+  /* Parsing supervisor extension.  */\n+  p = subset_list->parse_multiletter_ext (p, \"s\", \"supervisor extension\");\n \n   if (p == NULL)\n     goto fail;\n \n-  /* Parsing supervisor extension.  */\n-  p = subset_list->parse_sv_or_non_std_ext (p, \"s\", \"supervisor extension\");\n+  /* Parsing hypervisor extension.  */\n+  p = subset_list->parse_multiletter_ext (p, \"h\", \"hypervisor extension\");\n \n   if (p == NULL)\n     goto fail;\n \n-  /* Parsing non-standard supervisor extension.  */\n-  p = subset_list->parse_sv_or_non_std_ext\n-    (p, \"sx\", \"non-standard supervisor extension\");\n+  /* Parsing sub-extensions.  */\n+  p = subset_list->parse_multiletter_ext (p, \"z\", \"sub-extension\");\n+\n+  if (p == NULL)\n+    goto fail;\n+\n+  /* Parsing non-standard extension.  */\n+  p = subset_list->parse_multiletter_ext (p, \"x\", \"non-standard extension\");\n \n   if (p == NULL)\n     goto fail;"}, {"sha": "9c91be3ab3a480478521a664e016dfe6cd8ebccb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "patch": "@@ -1,3 +1,10 @@\n+2020-05-19  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/arch-3.c: Adjust option.\n+\t* gcc.target/riscv/arch-5.c: New.\n+\t* gcc.target/riscv/attribute-9.c: Adjust option and test\n+\tcondition.\n+\n 2020-05-19  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/66439"}, {"sha": "124699405c5c4c91ec791ea1dc8c3c8da861fb3b", "filename": "gcc/testsuite/gcc.target/riscv/arch-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-3.c?ref=ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -march=rv32ixbar_sabc_sxfoo -mabi=ilp32\" } */\n+/* { dg-options \"-O -march=rv32isabc_xbar -mabi=ilp32\" } */\n int foo()\n {\n }"}, {"sha": "b0a1bd445fed677daeb2bfef61e60bb46a8d2784", "filename": "gcc/testsuite/gcc.target/riscv/arch-5.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-5.c?ref=ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -march=rv32isabc_hghi_zfoo_xbar -mabi=ilp32\" } */\n+int foo()\n+{\n+}"}, {"sha": "bc4db0eb6472d164ee1933104cc04b2fa37e62b4", "filename": "gcc/testsuite/gcc.target/riscv/attribute-9.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fattribute-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fattribute-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fattribute-9.c?ref=ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -mriscv-attribute -march=rv32i2p0xbar_sabc_sxfoo -mabi=ilp32e\" } */\n+/* { dg-options \"-O -mriscv-attribute -march=rv32i2p0sabc_xbar -mabi=ilp32e\" } */\n int foo()\n {\n }\n-/* { dg-final { scan-assembler \".attribute arch, \\\"rv32i2p0_xbar2p0_sabc2p0_sxfoo2p0\\\"\" } } */\n+/* { dg-final { scan-assembler \".attribute arch, \\\"rv32i2p0_sabc2p0_xbar2p0\\\"\" } } */"}]}