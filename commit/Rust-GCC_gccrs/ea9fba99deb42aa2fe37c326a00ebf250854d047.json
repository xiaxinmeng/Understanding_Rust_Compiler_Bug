{"sha": "ea9fba99deb42aa2fe37c326a00ebf250854d047", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE5ZmJhOTlkZWI0MmFhMmZlMzdjMzI2YTAwZWJmMjUwODU0ZDA0Nw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-05-27T11:55:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-27T11:55:41Z"}, "message": "2008-05-27  Vincent Celier  <celier@adacore.com>\n\n\t* prj-part.adb:\n\t(Project_Path_Name_Of.Try_Path): Do not use Locate_Regular_File to find\n\ta project file, so that symbolic links are not resolved.\n\nFrom-SVN: r136019", "tree": {"sha": "990e06f453ce3bd4a49c95173178615867800483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/990e06f453ce3bd4a49c95173178615867800483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea9fba99deb42aa2fe37c326a00ebf250854d047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9fba99deb42aa2fe37c326a00ebf250854d047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea9fba99deb42aa2fe37c326a00ebf250854d047", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9fba99deb42aa2fe37c326a00ebf250854d047/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3aa62371fc687f7075e7f61ca167788ae48c6bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aa62371fc687f7075e7f61ca167788ae48c6bee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aa62371fc687f7075e7f61ca167788ae48c6bee"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "a1d655bbcbd3e5c950780b365ec275d75e12ca00", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 54, "deletions": 3, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9fba99deb42aa2fe37c326a00ebf250854d047/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9fba99deb42aa2fe37c326a00ebf250854d047/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=ea9fba99deb42aa2fe37c326a00ebf250854d047", "patch": "@@ -39,6 +39,8 @@ with Table;\n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n with Ada.Exceptions;             use Ada.Exceptions;\n \n+with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n+\n with System.HTable;              use System.HTable;\n \n package body Prj.Part is\n@@ -1864,15 +1866,64 @@ package body Prj.Part is\n       -------------------\n \n       function Try_Path_Name (Path : String) return String_Access is\n+         Prj_Path : constant String := Project_Path;\n+         First    : Natural := Prj_Path'First;\n+         Last     : Natural;\n+         Result   : String_Access := null;\n+\n       begin\n          if Current_Verbosity = High then\n             Write_Str  (\"   Trying \");\n             Write_Line (Path);\n          end if;\n \n-         return Locate_Regular_File\n-           (File_Name => Path,\n-            Path      => Project_Path);\n+         if Is_Absolute_Path (Path) then\n+            if Is_Regular_File (Path) then\n+               Result := new String'(Path);\n+            end if;\n+\n+         else\n+            --  Because we don't want to resolve symbolic links, we cannot use\n+            --  Locate_Regular_File. So, we try each possible path\n+            --  successively.\n+\n+            while First <= Prj_Path'Last loop\n+               while First <= Prj_Path'Last\n+                 and then Prj_Path (First) = Path_Separator\n+               loop\n+                  First := First + 1;\n+               end loop;\n+\n+               exit when First > Prj_Path'Last;\n+\n+               Last := First;\n+               while Last < Prj_Path'Last\n+                 and then Prj_Path (Last + 1) /= Path_Separator\n+               loop\n+                  Last := Last + 1;\n+               end loop;\n+\n+               Name_Len := 0;\n+\n+               if not Is_Absolute_Path (Prj_Path (First .. Last)) then\n+                  Add_Str_To_Name_Buffer (Get_Current_Dir);\n+                  Add_Char_To_Name_Buffer (Directory_Separator);\n+               end if;\n+\n+               Add_Str_To_Name_Buffer (Prj_Path (First .. Last));\n+               Add_Char_To_Name_Buffer (Directory_Separator);\n+               Add_Str_To_Name_Buffer (Path);\n+\n+               if Is_Regular_File (Name_Buffer (1 .. Name_Len)) then\n+                  Result := new String'(Name_Buffer (1 .. Name_Len));\n+                  exit;\n+               end if;\n+\n+               First := Last + 1;\n+            end loop;\n+         end if;\n+\n+         return Result;\n       end Try_Path_Name;\n \n       --  Local Declarations"}]}