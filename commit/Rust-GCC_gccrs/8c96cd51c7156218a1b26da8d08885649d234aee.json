{"sha": "8c96cd51c7156218a1b26da8d08885649d234aee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5NmNkNTFjNzE1NjIxOGExYjI2ZGE4ZDA4ODg1NjQ5ZDIzNGFlZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-01-18T23:06:59Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-01-18T23:06:59Z"}, "message": "calls.c (expand_call): Check DECL_BUILT_IN_CLASS before accessing DECL_FUNCTION_CODE.\n\n\t* calls.c (expand_call): Check DECL_BUILT_IN_CLASS before\n\taccessing DECL_FUNCTION_CODE.\n\t* dojump.c (do_jump): Likewise.\n\t* gimplify.c (gimplify_call_expr): Likewise.\n\t* predict.c (expr_expected_value): Likewise.\n\t(strip_builtin_expect): Likewise.\n\t* tree-inline.c (estimate_num_insns_1): Likewise.\n\t* tree-ssa-loop-im.c (stmt_cost): Likewise\n\t* fold-const.c (fold): Test for BUILT_IN_NORMAL.\n\t(tree_expr_nonnegative_p): Likewise.\n\nFrom-SVN: r93864", "tree": {"sha": "b422c0dfed9c70d016f242be350aaef240a4c22d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b422c0dfed9c70d016f242be350aaef240a4c22d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c96cd51c7156218a1b26da8d08885649d234aee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c96cd51c7156218a1b26da8d08885649d234aee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c96cd51c7156218a1b26da8d08885649d234aee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c96cd51c7156218a1b26da8d08885649d234aee/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b009f5f3fed9f56a332929f38a04718d66673a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b009f5f3fed9f56a332929f38a04718d66673a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b009f5f3fed9f56a332929f38a04718d66673a3"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "aa1a18106dd826b7c2335f09198b3056936f9ef6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c96cd51c7156218a1b26da8d08885649d234aee", "patch": "@@ -1,3 +1,16 @@\n+2005-01-18  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* calls.c (expand_call): Check DECL_BUILT_IN_CLASS before\n+\taccessing DECL_FUNCTION_CODE.\n+\t* dojump.c (do_jump): Likewise.\n+\t* gimplify.c (gimplify_call_expr): Likewise.\n+\t* predict.c (expr_expected_value): Likewise.\n+\t(strip_builtin_expect): Likewise.\n+\t* tree-inline.c (estimate_num_insns_1): Likewise.\n+\t* tree-ssa-loop-im.c (stmt_cost): Likewise\n+\t* fold-const.c (fold): Test for BUILT_IN_NORMAL.\n+\t(tree_expr_nonnegative_p): Likewise.\n+\n 2005-01-18  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* config/sparc/sparc.c (load_pic_register): Emit the appropriate"}, {"sha": "9e228ac0e3f2671deb0e05b44e01812a39f80165", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=8c96cd51c7156218a1b26da8d08885649d234aee", "patch": "@@ -2722,7 +2722,7 @@ expand_call (tree exp, rtx target, int ignore)\n \t      end_sequence ();\n \t      if (flag_unsafe_math_optimizations\n \t\t  && fndecl\n-\t\t  && DECL_BUILT_IN (fndecl)\n+\t\t  && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL\n \t\t  && (DECL_FUNCTION_CODE (fndecl) == BUILT_IN_SQRT\n \t\t      || DECL_FUNCTION_CODE (fndecl) == BUILT_IN_SQRTF\n \t\t      || DECL_FUNCTION_CODE (fndecl) == BUILT_IN_SQRTL))"}, {"sha": "c10ea39c36684be855359288e0b9142ab4c1d478", "filename": "gcc/dojump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=8c96cd51c7156218a1b26da8d08885649d234aee", "patch": "@@ -527,7 +527,7 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n \ttree arglist = TREE_OPERAND (exp, 1);\n \n \tif (fndecl\n-\t    && DECL_BUILT_IN (fndecl)\n+\t    && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL\n \t    && DECL_FUNCTION_CODE (fndecl) == BUILT_IN_EXPECT\n \t    && arglist != NULL_TREE\n \t    && TREE_CHAIN (arglist) != NULL_TREE)"}, {"sha": "cdefe7611fb2f1408209b990dde8c6a3d4425b7c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=8c96cd51c7156218a1b26da8d08885649d234aee", "patch": "@@ -8982,8 +8982,7 @@ fold (tree expr)\n \t  tree arglist;\n \n \t  if (fndecl\n-\t      && DECL_BUILT_IN (fndecl)\n-\t      && DECL_BUILT_IN_CLASS (fndecl) != BUILT_IN_MD\n+\t      && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL\n \t      && DECL_FUNCTION_CODE (fndecl) == BUILT_IN_STRLEN\n \t      && (arglist = TREE_OPERAND (arg0, 1))\n \t      && TREE_CODE (TREE_TYPE (TREE_VALUE (arglist))) == POINTER_TYPE\n@@ -9809,9 +9808,7 @@ tree_expr_nonnegative_p (tree t)\n       {\n \ttree fndecl = get_callee_fndecl (t);\n \ttree arglist = TREE_OPERAND (t, 1);\n-\tif (fndecl\n-\t    && DECL_BUILT_IN (fndecl)\n-\t    && DECL_BUILT_IN_CLASS (fndecl) != BUILT_IN_MD)\n+\tif (fndecl && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL)\n \t  switch (DECL_FUNCTION_CODE (fndecl))\n \t    {\n #define CASE_BUILTIN_F(BUILT_IN_FN) \\"}, {"sha": "d86379ca2c82886600bf7ba53750a22418ae4e26", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=8c96cd51c7156218a1b26da8d08885649d234aee", "patch": "@@ -1748,7 +1748,8 @@ gimplify_call_expr (tree *expr_p, tree *pre_p, bool want_value)\n \t  return GS_OK;\n \t}\n \n-      if (DECL_FUNCTION_CODE (decl) == BUILT_IN_VA_START)\n+      if (DECL_BUILT_IN_CLASS (decl) == BUILT_IN_NORMAL\n+\t  && DECL_FUNCTION_CODE (decl) == BUILT_IN_VA_START)\n         {\n \t  tree arglist = TREE_OPERAND (*expr_p, 1);\n \t  "}, {"sha": "c6e9b7dfe71f2fdc5dc1fdc1b5d0817205a9c8a6", "filename": "gcc/predict.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=8c96cd51c7156218a1b26da8d08885649d234aee", "patch": "@@ -947,7 +947,8 @@ expr_expected_value (tree expr, bitmap visited)\n       tree decl = get_callee_fndecl (expr);\n       if (!decl)\n \treturn NULL;\n-      if (DECL_BUILT_IN (decl) && DECL_FUNCTION_CODE (decl) == BUILT_IN_EXPECT)\n+      if (DECL_BUILT_IN_CLASS (decl) == BUILT_IN_NORMAL\n+\t  && DECL_FUNCTION_CODE (decl) == BUILT_IN_EXPECT)\n \t{\n \t  tree arglist = TREE_OPERAND (expr, 1);\n \t  tree val;\n@@ -1006,7 +1007,7 @@ strip_builtin_expect (void)\n \t  if (TREE_CODE (stmt) == MODIFY_EXPR\n \t      && TREE_CODE (TREE_OPERAND (stmt, 1)) == CALL_EXPR\n \t      && (fndecl = get_callee_fndecl (TREE_OPERAND (stmt, 1)))\n-\t      && DECL_BUILT_IN (fndecl)\n+\t      && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL\n \t      && DECL_FUNCTION_CODE (fndecl) == BUILT_IN_EXPECT\n \t      && (arglist = TREE_OPERAND (TREE_OPERAND (stmt, 1), 1))\n \t      && TREE_CHAIN (arglist))"}, {"sha": "247c6873e4d465fced01fc87d263e8ea0458e299", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=8c96cd51c7156218a1b26da8d08885649d234aee", "patch": "@@ -1348,7 +1348,7 @@ estimate_num_insns_1 (tree *tp, int *walk_subtrees, void *data)\n       {\n \ttree decl = get_callee_fndecl (x);\n \n-\tif (decl && DECL_BUILT_IN (decl))\n+\tif (decl && DECL_BUILT_IN_CLASS (decl) == BUILT_IN_NORMAL)\n \t  switch (DECL_FUNCTION_CODE (decl))\n \t    {\n \t    case BUILT_IN_CONSTANT_P:"}, {"sha": "d032fee28e8d772562f3b5bd314b3e043069bd76", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c96cd51c7156218a1b26da8d08885649d234aee/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=8c96cd51c7156218a1b26da8d08885649d234aee", "patch": "@@ -376,7 +376,7 @@ stmt_cost (tree stmt)\n       /* Unless the call is a builtin_constant_p; this always folds to a\n \t constant, so moving it is useless.  */\n       rhs = get_callee_fndecl (rhs);\n-      if (DECL_BUILT_IN (rhs)\n+      if (DECL_BUILT_IN_CLASS (rhs) == BUILT_IN_NORMAL\n \t  && DECL_FUNCTION_CODE (rhs) == BUILT_IN_CONSTANT_P)\n \treturn 0;\n "}]}