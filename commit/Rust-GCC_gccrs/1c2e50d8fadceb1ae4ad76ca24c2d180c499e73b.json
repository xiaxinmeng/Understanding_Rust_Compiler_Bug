{"sha": "1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMyZTUwZDhmYWRjZWIxYWU0YWQ3NmNhMjRjMmQxODBjNDk5ZTczYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-03-28T15:01:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-03-28T15:01:08Z"}, "message": "tree.c (is_global_var): Move ...\n\n2007-03-28  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.c (is_global_var): Move ...\n\t* tree-flow-inline.h (is_global_var): ... here.\n\t* tree.h (is_global_var): Remove declaration.\n\nFrom-SVN: r123303", "tree": {"sha": "c8b542c52ebd389d49caa0af70a3ae7838edfcb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8b542c52ebd389d49caa0af70a3ae7838edfcb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2ca1ab2e999dadb5ef64af9a9adb06527e73b07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ca1ab2e999dadb5ef64af9a9adb06527e73b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ca1ab2e999dadb5ef64af9a9adb06527e73b07"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "5f29dbebff917093013ff1396ee2a338589e6341", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b", "patch": "@@ -1,3 +1,9 @@\n+2007-03-28  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.c (is_global_var): Move ...\n+\t* tree-flow-inline.h (is_global_var): ... here.\n+\t* tree.h (is_global_var): Remove declaration.\n+\n 2007-03-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.h (X86_TUNE_PROMOTE_HIMODE_IMUL): New tuning"}, {"sha": "f7728e43ed8fc9ae46c12f431bf064f9b02f8c3f", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b", "patch": "@@ -718,6 +718,17 @@ is_label_stmt (tree t)\n   return false;\n }\n \n+/* Return true if T (assumed to be a DECL) is a global variable.  */\n+\n+static inline bool\n+is_global_var (tree t)\n+{\n+  if (MTAG_P (t))\n+    return (TREE_STATIC (t) || MTAG_GLOBAL (t));\n+  else\n+    return (TREE_STATIC (t) || DECL_EXTERNAL (t));\n+}\n+\n /* PHI nodes should contain only ssa_names and invariants.  A test\n    for ssa_name is definitely simpler; don't let invalid contents\n    slip in in the meantime.  */"}, {"sha": "c0cd2ae2ba50a2e4897207a43467d3f4a2e9cac6", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b", "patch": "@@ -7602,17 +7602,6 @@ range_in_array_bounds_p (tree ref)\n   return true;\n }\n \n-/* Return true if T (assumed to be a DECL) is a global variable.  */\n-\n-bool\n-is_global_var (tree t)\n-{\n-  if (MTAG_P (t))\n-    return (TREE_STATIC (t) || MTAG_GLOBAL (t));\n-  else\n-    return (TREE_STATIC (t) || DECL_EXTERNAL (t));\n-}\n-\n /* Return true if T (assumed to be a DECL) must be assigned a memory\n    location.  */\n "}, {"sha": "c3512960be266fb759f2cc2cbbf029e42ea282e1", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=1c2e50d8fadceb1ae4ad76ca24c2d180c499e73b", "patch": "@@ -4542,7 +4542,6 @@ extern void expand_function_start (tree);\n extern void stack_protect_prologue (void);\n extern void stack_protect_epilogue (void);\n extern void recompute_tree_invariant_for_addr_expr (tree);\n-extern bool is_global_var (tree t);\n extern bool needs_to_live_in_memory (tree);\n extern tree reconstruct_complex_type (tree, tree);\n "}]}