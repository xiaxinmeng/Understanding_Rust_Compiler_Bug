{"sha": "ae20388c7d5fea2bbea463fa0057468aa4a3b311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUyMDM4OGM3ZDVmZWEyYmJlYTQ2M2ZhMDA1NzQ2OGFhNGEzYjMxMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-01-28T21:21:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-01-28T21:21:49Z"}, "message": "Makefile.in (flow.o): Revert 24 Jan change.\n\n        * Makefile.in (flow.o): Revert 24 Jan change.\n        * flow.c (mark_regs_live_at_end): Likewise.  Force BLKmode\n        FUNCTION_VALUE result to DECL_RESULT's mode.\n\nFrom-SVN: r31674", "tree": {"sha": "e15d1b8e09e399a4cb2f7ac75ac84465d4d558a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e15d1b8e09e399a4cb2f7ac75ac84465d4d558a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae20388c7d5fea2bbea463fa0057468aa4a3b311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae20388c7d5fea2bbea463fa0057468aa4a3b311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae20388c7d5fea2bbea463fa0057468aa4a3b311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae20388c7d5fea2bbea463fa0057468aa4a3b311/comments", "author": null, "committer": null, "parents": [{"sha": "a3e0a73bd7eb20ac5121a946486713f694373eda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3e0a73bd7eb20ac5121a946486713f694373eda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3e0a73bd7eb20ac5121a946486713f694373eda"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "c39ab7fd81907b90e649cf56fbe139e73020f06a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae20388c7d5fea2bbea463fa0057468aa4a3b311/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae20388c7d5fea2bbea463fa0057468aa4a3b311/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae20388c7d5fea2bbea463fa0057468aa4a3b311", "patch": "@@ -1,3 +1,9 @@\n+2000-01-28  Richard Henderson  <rth@cygnus.com>\n+\n+\t* Makefile.in (flow.o): Revert 24 Jan change.\n+\t* flow.c (mark_regs_live_at_end): Likewise.  Force BLKmode\n+\tFUNCTION_VALUE result to DECL_RESULT's mode.\n+\n 2000-01-28  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* configure.in: Make --enable-cpplib the default."}, {"sha": "328611af2e8f51831577a698bab1f2181a9d0c83", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae20388c7d5fea2bbea463fa0057468aa4a3b311/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae20388c7d5fea2bbea463fa0057468aa4a3b311/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ae20388c7d5fea2bbea463fa0057468aa4a3b311", "patch": "@@ -1573,7 +1573,7 @@ unroll.o : unroll.c $(CONFIG_H) system.h $(RTL_H) insn-config.h function.h \\\n    varray.h \n flow.o : flow.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n-   insn-flags.h function.h except.h $(EXPR_H)\n+   insn-flags.h function.h except.h\n combine.o : combine.c $(CONFIG_H) system.h $(RTL_H) flags.h function.h \\\n    insn-config.h insn-flags.h insn-codes.h insn-attr.h $(REGS_H) $(EXPR_H) \\\n    $(BASIC_BLOCK_H) $(RECOG_H) real.h hard-reg-set.h toplev.h"}, {"sha": "008f0c2753f57b24db5977e66bfbc2a29cd272c8", "filename": "gcc/flow.c", "status": "modified", "additions": 25, "deletions": 19, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae20388c7d5fea2bbea463fa0057468aa4a3b311/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae20388c7d5fea2bbea463fa0057468aa4a3b311/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=ae20388c7d5fea2bbea463fa0057468aa4a3b311", "patch": "@@ -133,7 +133,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"except.h\"\n #include \"toplev.h\"\n #include \"recog.h\"\n-#include \"expr.h\"\n #include \"insn-flags.h\"\n \n #include \"obstack.h\"\n@@ -2783,8 +2782,7 @@ static void\n mark_regs_live_at_end (set)\n      regset set;\n {\n-  tree return_decl, return_type;\n-  rtx return_reg;\n+  tree type;\n   int i;\n \n   /* If exiting needs the right stack value, consider the stack pointer\n@@ -2843,34 +2841,42 @@ mark_regs_live_at_end (set)\n \n   /* Mark function return value.  */\n \n-  return_decl = DECL_RESULT (current_function_decl);\n-  return_type = TREE_TYPE (return_decl);\n-  return_reg = DECL_RTL (return_decl);\n-  if (return_reg)\n+  type = TREE_TYPE (DECL_RESULT (current_function_decl));\n+  if (type != void_type_node)\n     {\n-      if (GET_CODE (return_reg) == REG\n-\t  && REGNO (return_reg) < FIRST_PSEUDO_REGISTER)\n-\t{\n-\t  /* Use hard_function_value to avoid examining a BLKmode register.  */\n-\t  return_reg\n-\t    = hard_function_value (return_type, current_function_decl, 1);\n-\t  mark_reg (set, return_reg);\n-\t}\n-      else if (GET_CODE (return_reg) == PARALLEL)\n+      rtx outgoing;\n+\n+      if (current_function_returns_struct\n+\t  || current_function_returns_pcc_struct)\n+\ttype = build_pointer_type (type);\n+\n+#ifdef FUNCTION_OUTGOING_VALUE\n+      outgoing = FUNCTION_OUTGOING_VALUE (type, current_function_decl);\n+#else\n+      outgoing = FUNCTION_VALUE (type, current_function_decl);\n+#endif\n+      if (GET_MODE (outgoing) == BLKmode)\n+\tPUT_MODE (outgoing, DECL_RTL (DECL_RESULT (current_function_decl)));\n+\n+      if (GET_CODE (outgoing) == REG)\n+\tmark_reg (set, outgoing);\n+      else if (GET_CODE (outgoing) == PARALLEL)\n \t{\n-\t  int len = XVECLEN (return_reg, 0);\n+\t  int len = XVECLEN (outgoing, 0);\n \n \t  /* Check for a NULL entry, used to indicate that the parameter\n \t     goes on the stack and in registers.  */\n-\t  i = (XEXP (XVECEXP (return_reg, 0, 0), 0) ? 0 : 1);\n+\t  i = (XEXP (XVECEXP (outgoing, 0, 0), 0) ? 0 : 1);\n \n \t  for ( ; i < len; ++i)\n \t    {\n-\t      rtx r = XVECEXP (return_reg, 0, i);\n+\t      rtx r = XVECEXP (outgoing, 0, i);\n \t      if (GET_CODE (r) == REG)\n \t\tmark_reg (set, r);\n \t    }\n \t}\n+      else\n+\tabort ();\n     }\n }\n "}]}