{"sha": "2ef0a555115b893fcd775844882435e07552b4b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmMGE1NTUxMTViODkzZmNkNzc1ODQ0ODgyNDM1ZTA3NTUyYjRiOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-06-03T21:29:48Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-06-03T21:29:48Z"}, "message": "optabs.c (expand_abs_nojump): Split out from ...\n\n        * optabs.c (expand_abs_nojump): Split out from ...\n        (expand_abs): ... here.\n        * optabs.h (expand_abs_nojump): Declare.\n        * ifcvt.c: (noce_try_abs): Use expand_abs_nojump.\n        * Makefile.in (ifcvt.o): Depend on optabs.h.\n\nFrom-SVN: r67404", "tree": {"sha": "474d4af43e85adcdc142a5e4c94f30a48a445a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/474d4af43e85adcdc142a5e4c94f30a48a445a94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ef0a555115b893fcd775844882435e07552b4b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef0a555115b893fcd775844882435e07552b4b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef0a555115b893fcd775844882435e07552b4b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef0a555115b893fcd775844882435e07552b4b9/comments", "author": null, "committer": null, "parents": [{"sha": "b0c242c02902036570dc8c65f76361cc27f2f119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c242c02902036570dc8c65f76361cc27f2f119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c242c02902036570dc8c65f76361cc27f2f119"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "dfc37dd3d3fcb22026ac091beeca39f3b49ebb17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ef0a555115b893fcd775844882435e07552b4b9", "patch": "@@ -1,3 +1,11 @@\n+2003-06-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* optabs.c (expand_abs_nojump): Split out from ...\n+\t(expand_abs): ... here.\n+\t* optabs.h (expand_abs_nojump): Declare.\n+\t* ifcvt.c: (noce_try_abs): Use expand_abs_nojump.\n+\t* Makefile.in (ifcvt.o): Depend on optabs.h.\n+\n 2003-06-03  Alan Modra  <amodra@bigpond.net.au>\n \n \t* dwarf2out.c (DEBUG_STR_SECTION_FLAGS): Heed flag_merge_constants."}, {"sha": "b2f99b4d79e3740f6a0d28135fcff7d21a2b27ce", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2ef0a555115b893fcd775844882435e07552b4b9", "patch": "@@ -1776,9 +1776,9 @@ timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TIMEVAR_H) f\n regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h $(RECOG_H) function.h \\\n    resource.h $(OBSTACK_H) flags.h $(TM_P_H)\n-ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(REGS_H) toplev.h \\\n-   flags.h insn-config.h function.h $(RECOG_H) $(BASIC_BLOCK_H) $(EXPR_H) \\\n-   output.h except.h $(TM_P_H) real.h\n+ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   $(REGS_H) toplev.h flags.h insn-config.h function.h $(RECOG_H) \\\n+   $(BASIC_BLOCK_H) $(EXPR_H) output.h except.h $(TM_P_H) real.h optabs.h\n params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) toplev.h\n hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n "}, {"sha": "caa54c56b1379d400ea2a2729bd4eda70e9c99f0", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=2ef0a555115b893fcd775844882435e07552b4b9", "patch": "@@ -35,6 +35,7 @@\n #include \"expr.h\"\n #include \"real.h\"\n #include \"output.h\"\n+#include \"optabs.h\"\n #include \"toplev.h\"\n #include \"tm_p.h\"\n \n@@ -1602,7 +1603,7 @@ noce_try_abs (if_info)\n \n   start_sequence ();\n \n-  target = expand_simple_unop (GET_MODE (if_info->x), ABS, b, if_info->x, 0);\n+  target = expand_abs_nojump (GET_MODE (if_info->x), b, if_info->x, 1);\n \n   /* ??? It's a quandry whether cmove would be better here, especially\n      for integers.  Perhaps combine will clean things up.  */"}, {"sha": "b59f89ca8c0d0a2c0730df46331ad96fa619eabb", "filename": "gcc/optabs.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=2ef0a555115b893fcd775844882435e07552b4b9", "patch": "@@ -2773,14 +2773,13 @@ expand_unop (mode, unoptab, op0, target, unsignedp)\n  */\n \n rtx\n-expand_abs (mode, op0, target, result_unsignedp, safe)\n+expand_abs_nojump (mode, op0, target, result_unsignedp)\n      enum machine_mode mode;\n      rtx op0;\n      rtx target;\n      int result_unsignedp;\n-     int safe;\n {\n-  rtx temp, op1;\n+  rtx temp;\n \n   if (! flag_trapv)\n     result_unsignedp = 1;\n@@ -2868,6 +2867,23 @@ expand_abs (mode, op0, target, result_unsignedp, safe)\n \treturn temp;\n     }\n \n+  return NULL_RTX;\n+}\n+\n+rtx\n+expand_abs (mode, op0, target, result_unsignedp, safe)\n+     enum machine_mode mode;\n+     rtx op0;\n+     rtx target;\n+     int result_unsignedp;\n+     int safe;\n+{\n+  rtx temp, op1;\n+\n+  temp = expand_abs_nojump (mode, op0, target, result_unsignedp);\n+  if (temp != 0)\n+    return temp;\n+\n   /* If that does not win, use conditional jump and negate.  */\n \n   /* It is safe to use the target if it is the same"}, {"sha": "22e2422ccd1e906996ecf132fa6b7033b1320985", "filename": "gcc/optabs.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2Foptabs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef0a555115b893fcd775844882435e07552b4b9/gcc%2Foptabs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.h?ref=2ef0a555115b893fcd775844882435e07552b4b9", "patch": "@@ -306,6 +306,7 @@ extern int expand_twoval_binop PARAMS ((optab, rtx, rtx, rtx, rtx, int));\n extern rtx expand_unop PARAMS ((enum machine_mode, optab, rtx, rtx, int));\n \n /* Expand the absolute value operation.  */\n+extern rtx expand_abs_nojump PARAMS ((enum machine_mode, rtx, rtx, int));\n extern rtx expand_abs PARAMS ((enum machine_mode, rtx, rtx, int, int));\n \n /* Expand the complex absolute value operation.  */"}]}