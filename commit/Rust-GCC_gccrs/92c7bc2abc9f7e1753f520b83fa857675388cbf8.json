{"sha": "92c7bc2abc9f7e1753f520b83fa857675388cbf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJjN2JjMmFiYzlmN2UxNzUzZjUyMGI4M2ZhODU3Njc1Mzg4Y2JmOA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-01-23T18:37:16Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-01-23T18:37:16Z"}, "message": "* gcc.dg/builtins-29.c: New test case.\n\nFrom-SVN: r76444", "tree": {"sha": "7f1e5ebbd185294c70a871585d99b45e02a50edf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f1e5ebbd185294c70a871585d99b45e02a50edf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92c7bc2abc9f7e1753f520b83fa857675388cbf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92c7bc2abc9f7e1753f520b83fa857675388cbf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92c7bc2abc9f7e1753f520b83fa857675388cbf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92c7bc2abc9f7e1753f520b83fa857675388cbf8/comments", "author": null, "committer": null, "parents": [{"sha": "04b8f97f29948de584315b23a38d8d1cfc85bd17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b8f97f29948de584315b23a38d8d1cfc85bd17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b8f97f29948de584315b23a38d8d1cfc85bd17"}], "stats": {"total": 102, "additions": 100, "deletions": 2}, "files": [{"sha": "84fa8aa9098464f3cdc5beb6698eab933837fa00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c7bc2abc9f7e1753f520b83fa857675388cbf8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c7bc2abc9f7e1753f520b83fa857675388cbf8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92c7bc2abc9f7e1753f520b83fa857675388cbf8", "patch": "@@ -36,8 +36,6 @@\n \tround, roundf and roundl.\n \t(fold_builtin): Call fold_builtin_round for BUILT_IN_ROUND{,F,L}.\n \n-\t* gcc.dg/builtins-29.c: New test case.\n-\n 2004-01-23  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR optimization/13819"}, {"sha": "0e37a5880c64c20b235e1df5b780a582f7e3c0d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c7bc2abc9f7e1753f520b83fa857675388cbf8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c7bc2abc9f7e1753f520b83fa857675388cbf8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92c7bc2abc9f7e1753f520b83fa857675388cbf8", "patch": "@@ -1,3 +1,7 @@\n+2004-01-23  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gcc.dg/builtins-29.c: New test case.\n+\n 2004-01-23  Zack Weinberg  <zack@codesourcery.com>\n \n \tPR 18314"}, {"sha": "30f9bad4ef7dbd4d6cb0d0471639a6c4e3f6c7f5", "filename": "gcc/testsuite/gcc.dg/builtins-29.c", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92c7bc2abc9f7e1753f520b83fa857675388cbf8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92c7bc2abc9f7e1753f520b83fa857675388cbf8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-29.c?ref=92c7bc2abc9f7e1753f520b83fa857675388cbf8", "patch": "@@ -0,0 +1,96 @@\n+/* Copyright (C) 2004 Free Software Foundation.\n+\n+   Check that constant folding of round, roundf and roundl math functions\n+   doesn't break anything and produces the expected results.\n+\n+   Written by Roger Sayle, 22nd January 2004.  */\n+\n+/* { dg-do link } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void link_error(void);\n+\n+extern double round(double);\n+extern float roundf(float);\n+extern long double roundl(long double);\n+\n+void test()\n+{\n+  if (round (0.0) != 0.0)\n+    link_error ();\n+  if (round (6.0) != 6.0)\n+    link_error ();\n+  if (round (-8.0) != -8.0)\n+    link_error ();\n+\n+  if (round (3.2) != 3.0)\n+    link_error ();\n+  if (round (-2.8) != -3.0)\n+    link_error ();\n+  if (round (0.01) != 0.0)\n+    link_error ();\n+  if (round (-0.7) != -1.0)\n+    link_error ();\n+\n+  if (round (2.5) != 3.0)\n+    link_error ();\n+  if (round (-1.5) != -2.0)\n+    link_error ();\n+}\n+\n+void testf()\n+{\n+  if (roundf (0.0f) != 0.0f)\n+    link_error ();\n+  if (roundf (6.0f) != 6.0f)\n+    link_error ();\n+  if (roundf (-8.0f) != -8.0f)\n+    link_error ();\n+\n+  if (roundf (3.2f) != 3.0f)\n+    link_error ();\n+  if (roundf (-2.8f) != -3.0f)\n+    link_error ();\n+  if (roundf (0.01f) != 0.0f)\n+    link_error ();\n+  if (roundf (-0.7f) != -1.0f)\n+    link_error ();\n+\n+  if (roundf (2.5f) != 3.0f)\n+    link_error ();\n+  if (roundf (-1.5f) != -2.0f)\n+    link_error ();\n+}\n+\n+void testl()\n+{\n+  if (roundl (0.0l) != 0.0l)\n+    link_error ();\n+  if (roundl (6.0l) != 6.0l)\n+    link_error ();\n+  if (roundl (-8.0l) != -8.0l)\n+    link_error ();\n+\n+  if (roundl (3.2l) != 3.0l)\n+    link_error ();\n+  if (roundl (-2.8l) != -3.0l)\n+    link_error ();\n+  if (roundl (0.01l) != 0.0l)\n+    link_error ();\n+  if (roundl (-0.7l) != -1.0l)\n+    link_error ();\n+\n+  if (roundl (2.5l) != 3.0l)\n+    link_error ();\n+  if (roundl (-1.5l) != -2.0l)\n+    link_error ();\n+}\n+\n+int main()\n+{\n+  test ();\n+  testf ();\n+  testl ();\n+  return 0;\n+}\n+"}]}