{"sha": "af814dfa9b6e3e598bbcf2ee4615aae0e886fef4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY4MTRkZmE5YjZlM2U1OThiYmNmMmVlNDYxNWFhZTBlODg2ZmVmNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-11-29T13:49:44Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-11-29T13:49:44Z"}, "message": "Fortran] OpenACC \u2013 permit common blocks in some clauses\n\n        * fortran.dg/goacc/common-block-3.f90: Check that unused common-block\n        variables do not get mapped.\n\nReviewed-by: Thomas Schwinge <thomas@codesourcery.com>\n\nFrom-SVN: r278843", "tree": {"sha": "ca29ca22790e9093d1aaecf3e4ea7494d74a46d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca29ca22790e9093d1aaecf3e4ea7494d74a46d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af814dfa9b6e3e598bbcf2ee4615aae0e886fef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af814dfa9b6e3e598bbcf2ee4615aae0e886fef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af814dfa9b6e3e598bbcf2ee4615aae0e886fef4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af814dfa9b6e3e598bbcf2ee4615aae0e886fef4/comments", "author": null, "committer": null, "parents": [{"sha": "e1b580335491398ed4f74a7db0c64704a0432804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b580335491398ed4f74a7db0c64704a0432804", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1b580335491398ed4f74a7db0c64704a0432804"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "a096fa635f19c8738a52b23cb5765a4f9a946bf5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af814dfa9b6e3e598bbcf2ee4615aae0e886fef4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af814dfa9b6e3e598bbcf2ee4615aae0e886fef4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af814dfa9b6e3e598bbcf2ee4615aae0e886fef4", "patch": "@@ -1,7 +1,12 @@\n+2019-11-29 Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* fortran.dg/goacc/common-block-3.f90: Check that unused common-block\n+\tvariables do not get mapped.\n+\n 2019-11-29  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/92476\n-        * g++.dg/lto/pr92476_[01].C: New test.\n+\t* g++.dg/lto/pr92476_[01].C: New test.\n \n 2019-11-29  Richard Sandiford  <richard.sandiford@arm.com>\n "}, {"sha": "5defe2ea85deb953e771b91652433a7cd73b7122", "filename": "gcc/testsuite/gfortran.dg/goacc/common-block-3.f90", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af814dfa9b6e3e598bbcf2ee4615aae0e886fef4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcommon-block-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af814dfa9b6e3e598bbcf2ee4615aae0e886fef4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcommon-block-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcommon-block-3.f90?ref=af814dfa9b6e3e598bbcf2ee4615aae0e886fef4", "patch": "@@ -9,7 +9,7 @@ program main\n   implicit none\n \n   integer :: i, j\n-  real ::  a(n) = 0, b(n) = 0, c, d\n+  real ::  a(n) = 0, b(n) = 0, c, d, e(n)\n   real ::  x(n) = 0, y(n), z\n   common /BLOCK/ a, b, c, j, d\n   common /KERNELS_BLOCK/ x, y, z\n@@ -35,5 +35,10 @@ end program main\n ! { dg-final { scan-tree-dump-times \"omp target oacc_kernels .*map\\\\(tofrom:y \\\\\\[len: 400\\\\\\]\\\\\\)\" 1 \"omplower\" } }\n ! { dg-final { scan-tree-dump-times \"omp target oacc_kernels .*map\\\\(force_tofrom:c \\\\\\[len: 4\\\\\\]\\\\)\" 1 \"omplower\" } }\n \n-! { dg-final { scan-tree-dump-not \"map\\\\(.*:block\\\\)\" \"omplower\" } }\n-! { dg-final { scan-tree-dump-not \"map\\\\(.*:kernels_block\\\\)\" \"omplower\" } }\n+! Expecting no mapping of un-referenced common-blocks variables\n+\n+! { dg-final { scan-tree-dump-not \"map\\\\(.*:block\" \"omplower\" } }\n+! { dg-final { scan-tree-dump-not \"map\\\\(.*:kernels_block\" \"omplower\" } }\n+! { dg-final { scan-tree-dump-not \"map\\\\(.*:d \" \"omplower\" } }\n+! { dg-final { scan-tree-dump-not \"map\\\\(.*:e \" \"omplower\" } }\n+! { dg-final { scan-tree-dump-not \"map\\\\(.*:z \" \"omplower\" } }"}]}