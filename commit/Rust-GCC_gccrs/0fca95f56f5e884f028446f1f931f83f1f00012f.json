{"sha": "0fca95f56f5e884f028446f1f931f83f1f00012f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZjYTk1ZjU2ZjVlODg0ZjAyODQ0NmYxZjkzMWY4M2YxZjAwMDEyZg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-03-20T00:24:49Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-03-20T00:24:49Z"}, "message": "Input_UnicodeBig.java: New class..\n\n\n\t* gnu/gcj/convert/Input_UnicodeBig.java:  New class..\n\t* gnu/gcj/convert/Input_UnicodeLittle.java:  New class.\n\t* Makefile.am:  Update accordingly.\n\t* gnu/gcj/convert/IOConverter.java:  Define \"utf-16le\" and \"utf16be\"\n\tas aliases for UnicodeLittle and UnicodeBig.\n\nFrom-SVN: r79723", "tree": {"sha": "66bf9bc23927e73393e9fb69545698a9b5149acb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66bf9bc23927e73393e9fb69545698a9b5149acb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fca95f56f5e884f028446f1f931f83f1f00012f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fca95f56f5e884f028446f1f931f83f1f00012f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fca95f56f5e884f028446f1f931f83f1f00012f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fca95f56f5e884f028446f1f931f83f1f00012f/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4546865e5b18963ce661d5053a6b4b7b15adfe7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4546865e5b18963ce661d5053a6b4b7b15adfe7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4546865e5b18963ce661d5053a6b4b7b15adfe7d"}], "stats": {"total": 124, "additions": 119, "deletions": 5}, "files": [{"sha": "1b96246bff81f36f5415a571026c56b38464aec7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0fca95f56f5e884f028446f1f931f83f1f00012f", "patch": "@@ -1,3 +1,11 @@\n+2004-03-19  Per Bothner  <per@bothner.com>\n+\n+\t* gnu/gcj/convert/Input_UnicodeBig.java:  New class..\n+\t* gnu/gcj/convert/Input_UnicodeLittle.java:  New class.\n+\t* Makefile.am:  Update accordingly.\n+\t* gnu/gcj/convert/IOConverter.java:  Define \"utf-16le\" and \"utf16be\"\n+\tas aliases for UnicodeLittle and UnicodeBig.\n+\n 2004-03-20  Mark Wielaard  <mark@klomp.org>\n \n \t* native/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c"}, {"sha": "254c9ca53f799587173b10c40ca3e632ff7ce62f", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=0fca95f56f5e884f028446f1f931f83f1f00012f", "patch": "@@ -882,6 +882,8 @@ gnu/gcj/convert/Input_ASCII.java \\\n gnu/gcj/convert/Input_EUCJIS.java \\\n gnu/gcj/convert/Input_JavaSrc.java \\\n gnu/gcj/convert/Input_SJIS.java \\\n+gnu/gcj/convert/Input_UnicodeBig.java \\\n+gnu/gcj/convert/Input_UnicodeLittle.java \\\n gnu/gcj/convert/Input_UTF8.java\t\\\n gnu/gcj/convert/Input_iconv.java \\\n gnu/gcj/convert/IOConverter.java \\"}, {"sha": "e664a10fbbdb7ab698423b1ba2cc68e0d6183801", "filename": "libjava/Makefile.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=0fca95f56f5e884f028446f1f931f83f1f00012f", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -565,6 +565,8 @@ gnu/gcj/convert/Input_ASCII.java \\\n gnu/gcj/convert/Input_EUCJIS.java \\\n gnu/gcj/convert/Input_JavaSrc.java \\\n gnu/gcj/convert/Input_SJIS.java \\\n+gnu/gcj/convert/Input_UnicodeBig.java \\\n+gnu/gcj/convert/Input_UnicodeLittle.java \\\n gnu/gcj/convert/Input_UTF8.java\t\\\n gnu/gcj/convert/Input_iconv.java \\\n gnu/gcj/convert/IOConverter.java \\\n@@ -3007,6 +3009,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/convert/Input_EUCJIS.P \\\n .deps/gnu/gcj/convert/Input_JavaSrc.P \\\n .deps/gnu/gcj/convert/Input_SJIS.P .deps/gnu/gcj/convert/Input_UTF8.P \\\n+.deps/gnu/gcj/convert/Input_UnicodeBig.P \\\n+.deps/gnu/gcj/convert/Input_UnicodeLittle.P \\\n .deps/gnu/gcj/convert/Input_iconv.P \\\n .deps/gnu/gcj/convert/JIS0208_to_Unicode.P \\\n .deps/gnu/gcj/convert/JIS0212_to_Unicode.P \\\n@@ -4977,7 +4981,7 @@ maintainer-clean-recursive:\n \tdot_seen=no; \\\n \trev=''; list='$(SUBDIRS)'; for subdir in $$list; do \\\n \t  rev=\"$$subdir $$rev\"; \\\n-\t  test \"$$subdir\" != \".\" || dot_seen=yes; \\\n+\t  test \"$$subdir\" = \".\" && dot_seen=yes; \\\n \tdone; \\\n \ttest \"$$dot_seen\" = \"no\" && rev=\". $$rev\"; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n@@ -5019,7 +5023,7 @@ TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)\n \t  awk '    { files[$$0] = 1; } \\\n \t       END { for (i in files) print i; }'`; \\\n \ttest -z \"$(ETAGS_ARGS)$$unique$(LISP)$$tags\" \\\n-\t  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))\n+\t  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)\n \n mostlyclean-tags:\n "}, {"sha": "ba3260ac17e425278cc9043e957543b4619d78c1", "filename": "libjava/gnu/gcj/convert/IOConverter.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2Fgnu%2Fgcj%2Fconvert%2FIOConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2Fgnu%2Fgcj%2Fconvert%2FIOConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FIOConverter.java?ref=0fca95f56f5e884f028446f1f931f83f1f00012f", "patch": "@@ -63,7 +63,9 @@\n     hash.put (\"extended_unix_code_packed_format_for_japanese\", \"EUCJIS\");\n     hash.put (\"cseucpkdfmtjapanese\", \"EUCJIS\");\n     hash.put (\"euc-jp\", \"EUCJIS\");\n-\n+    hash.put (\"euc-jp\", \"EUCJIS\");\n+    hash.put (\"utf-16le\", \"UnicodeLittle\");\n+    hash.put (\"utf-16be\", \"UnicodeBig\");\n     iconv_byte_swap = iconv_init ();\n   }\n "}, {"sha": "c8da2b9976fd28a1728ed03da785d823ee092bc6", "filename": "libjava/gnu/gcj/convert/Input_UnicodeBig.java", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_UnicodeBig.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_UnicodeBig.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_UnicodeBig.java?ref=0fca95f56f5e884f028446f1f931f83f1f00012f", "patch": "@@ -0,0 +1,49 @@\n+/* Copyright (C) 2004  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package gnu.gcj.convert;\n+\n+public class Input_UnicodeBig extends BytesToUnicode\n+{\n+  /** 0, 8, or 16 bits of a partially constructed character. */\n+  char partial;\n+  /** How many bytes of partial are valid. */\n+  int partial_count;\n+\n+  public String getName() { return \"UnicodeBig\"; }\n+\n+  public int read (char[] outbuffer, int outpos, int count)\n+  {\n+    int origcount = count;\n+    for (;;)\n+      {\n+\tif (partial_count == 2)\n+\t  {\n+\t    if (count == 0)\n+\t      break;\n+\t    if (partial == 0xFEFF)\n+\t      ; // drop byte order mark\n+\t    // else if (partial >= 0xFFFe)  ERROR;\n+\t    else\n+\t      outbuffer[outpos++] = partial;\n+\t    count--;\n+\t    partial_count = 0;\n+\t    partial = 0;\n+\t  }\n+\telse if (inpos >= inlength)\n+\t  break;\n+\telse\n+\t  {\n+\t    int b = inbuffer[inpos++] & 0xFF;\n+\t    partial = (char) (((int) partial << 8) + b);\n+\t    partial_count++;\n+\t  }\n+      }\n+    return origcount - count;\n+  }\n+}"}, {"sha": "89d9c53cd567260923cf0b89ab3bc2b542fbe654", "filename": "libjava/gnu/gcj/convert/Input_UnicodeLittle.java", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_UnicodeLittle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fca95f56f5e884f028446f1f931f83f1f00012f/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_UnicodeLittle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FInput_UnicodeLittle.java?ref=0fca95f56f5e884f028446f1f931f83f1f00012f", "patch": "@@ -0,0 +1,49 @@\n+/* Copyright (C) 2004  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package gnu.gcj.convert;\n+\n+public class Input_UnicodeLittle extends BytesToUnicode\n+{\n+  /** 0, 8, or 16 bits of a partially constructed character. */\n+  char partial;\n+  /** How many bytes of partial are valid. */\n+  int partial_count;\n+\n+  public String getName() { return \"UnicodeLittle\"; }\n+\n+  public int read (char[] outbuffer, int outpos, int count)\n+  {\n+    int origcount = count;\n+    for (;;)\n+      {\n+\tif (partial_count == 2)\n+\t  {\n+\t    if (count == 0)\n+\t      break;\n+\t    if (partial == 0xFEFF)\n+\t      ; // drop byte order mark\n+\t    // else if (partial >= 0xFFFe)  ERROR;\n+\t    else\n+\t      outbuffer[outpos++] = partial;\n+\t    count--;\n+\t    partial_count = 0;\n+\t    partial = 0;\n+\t  }\n+\telse if (inpos >= inlength)\n+\t  break;\n+\telse\n+\t  {\n+\t    int b = inbuffer[inpos++] & 0xFF;\n+\t    partial = (char) (partial | (b << (8 * partial_count)));\n+\t    partial_count++;\n+\t  }\n+      }\n+    return origcount - count;\n+  }\n+}"}]}