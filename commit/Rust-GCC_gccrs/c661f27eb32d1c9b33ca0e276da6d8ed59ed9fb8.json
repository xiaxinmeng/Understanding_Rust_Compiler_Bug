{"sha": "c661f27eb32d1c9b33ca0e276da6d8ed59ed9fb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY2MWYyN2ViMzJkMWM5YjMzY2EwZTI3NmRhNmQ4ZWQ1OWVkOWZiOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1997-06-06T00:14:22Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1997-06-06T00:14:22Z"}, "message": "(*:Linux:*:*): Recognize sparclinux.\n\nDon't recognize UNAME_MACHINE = sparc.\nMake the sample program check for libc version\nand handle various machine types.\n\nFrom-SVN: r14155", "tree": {"sha": "829b639a0ce3645bfeb594bb6cea077ea36e0af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/829b639a0ce3645bfeb594bb6cea077ea36e0af2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c661f27eb32d1c9b33ca0e276da6d8ed59ed9fb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c661f27eb32d1c9b33ca0e276da6d8ed59ed9fb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c661f27eb32d1c9b33ca0e276da6d8ed59ed9fb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c661f27eb32d1c9b33ca0e276da6d8ed59ed9fb8/comments", "author": null, "committer": null, "parents": [{"sha": "e2b95588c87b9fae0fdf8f732ca8083deb587e9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b95588c87b9fae0fdf8f732ca8083deb587e9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2b95588c87b9fae0fdf8f732ca8083deb587e9e"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "7be7aea7f80970cc4840f61d394a12aa3df092aa", "filename": "gcc/config.guess", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c661f27eb32d1c9b33ca0e276da6d8ed59ed9fb8/gcc%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c661f27eb32d1c9b33ca0e276da6d8ed59ed9fb8/gcc%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.guess?ref=c661f27eb32d1c9b33ca0e276da6d8ed59ed9fb8", "patch": "@@ -442,6 +442,8 @@ EOF\n \t  echo \"${UNAME_MACHINE}-pc-linux-gnuaout\" ; exit 0\n \telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: i.86coff\"; then\n \t  echo \"${UNAME_MACHINE}-pc-linux-gnucoff\" ; exit 0\n+\telif echo $ld_help_string | grep >/dev/null 2>&1 \"supported emulations:sparclinux\"; then\n+\t  echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0\n \telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: m68kelf\"; then\n \t  echo \"${UNAME_MACHINE}-unknown-linux-gnu\" ; exit 0\n \telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: m68klinux\"; then\n@@ -450,13 +452,11 @@ EOF\n \t  echo \"powerpc-unknown-linux-gnu\" ; exit 0\n \telif test \"${UNAME_MACHINE}\" = \"alpha\" ; then\n \t  echo alpha-unknown-linux-gnu ; exit 0\n-\telif test \"${UNAME_MACHINE}\" = \"sparc\" ; then\n-\t  echo sparc-unknown-linux-gnu ; exit 0\n \telif test \"${UNAME_MACHINE}\" = \"mips\" ; then\n \t  cat >dummy.c <<EOF\n main(argc, argv)\n-int argc;\n-char *argv[];\n+     int argc;\n+     char *argv[];\n {\n #ifdef __MIPSEB__\n   printf (\"%s-unknown-linux-gnu\\n\", argv[1]);\n@@ -470,18 +470,36 @@ EOF\n \t  ${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy \"${UNAME_MACHINE}\" && rm dummy.c dummy && exit 0\n \t  rm -f dummy.c dummy\n \telse\n-\t  # Either a pre-BFD a.out linker (linux-gnuoldld) or one that does not give us\n-\t  # useful --help.  Gcc wants to distinguish between linux-gnuoldld and linux-gnuaout.\n+\t  # Either a pre-BFD a.out linker (linux-gnuoldld)\n+\t  # or one that does not give us useful --help.\n+\t  # Gcc wants to distinguish between linux-gnuoldld and linux-gnuaout.\n \t  test ! -d /usr/lib/ldscripts/. \\\n \t    && echo \"${UNAME_MACHINE}-pc-linux-gnuoldld\" && exit 0\n+\t  case \"${UNAME_MACHINE}\" in\n+\t  i.86)\n+\t    VENDOR=pc;\n+\t    ;;\n+\t  *)\n+\t    VENDOR=unknown;\n+\t    ;;\n+\t  esac\n \t  # Determine whether the default compiler is a.out or elf\n \t  cat >dummy.c <<EOF\n+#include <features.h>\n main(argc, argv)\n-int argc;\n-char *argv[];\n+     int argc;\n+     char *argv[];\n {\n #ifdef __ELF__\n-  printf (\"%s-pc-linux-gnu\\n\", argv[1]);\n+# ifdef __GLIBC__\n+#  if __GLIBC__ >= 2\n+    printf (\"%s-${VENDOR}-linux-gnu\\n\", argv[1]);\n+#  else\n+    printf (\"%s-${VENDOR}-linux-gnulibc1\\n\", argv[1]);\n+#  endif\n+# else\n+   printf (\"%s-${VENDOR}-linux-gnulibc1\\n\", argv[1]);\n+# endif\n #else\n   printf (\"%s-pc-linux-gnuaout\\n\", argv[1]);\n #endif"}]}