{"sha": "473fa8ccce8bb50c9ff8c591520cd8aadc7691d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDczZmE4Y2NjZThiYjUwYzlmZjhjNTkxNTIwY2Q4YWFkYzc2OTFkMQ==", "commit": {"author": {"name": "Jeffrey A. Law", "email": "law@snake.cs.utah.edu", "date": "1995-05-02T05:27:01Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1995-05-02T05:27:01Z"}, "message": "pa.c (hppa_expand_epilogue): Correctly handle restore of %rp for functions with a stack size of exactly...\n\nTue May  2 01:25:29 1995  Jeffrey A. Law  <law@snake.cs.utah.edu>\n\n\t* pa.c (hppa_expand_epilogue): Correctly handle restore of %rp\n\tfor functions with a stack size of exactly 8kbytes and no frame\n\tpointer.\n\nFrom-SVN: r9561", "tree": {"sha": "84502c63e195294f2ce994c446282ae40f201f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84502c63e195294f2ce994c446282ae40f201f05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/473fa8ccce8bb50c9ff8c591520cd8aadc7691d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473fa8ccce8bb50c9ff8c591520cd8aadc7691d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/473fa8ccce8bb50c9ff8c591520cd8aadc7691d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473fa8ccce8bb50c9ff8c591520cd8aadc7691d1/comments", "author": null, "committer": null, "parents": [{"sha": "509b12e0c5a11970115b5d61ac4081f1a6f6d90e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509b12e0c5a11970115b5d61ac4081f1a6f6d90e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509b12e0c5a11970115b5d61ac4081f1a6f6d90e"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "f6a6960ca472df1a291d4956509ed9fb5d275d8d", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473fa8ccce8bb50c9ff8c591520cd8aadc7691d1/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473fa8ccce8bb50c9ff8c591520cd8aadc7691d1/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=473fa8ccce8bb50c9ff8c591520cd8aadc7691d1", "patch": "@@ -2439,8 +2439,15 @@ hppa_expand_epilogue ()\n       set_reg_plus_d (STACK_POINTER_REGNUM,\n \t\t      STACK_POINTER_REGNUM,\n \t\t      - actual_fsize);\n-      /* Uses value left over in %r1 by set_reg_plus_d.  */\n-      load_reg (2, - (actual_fsize + 20 + ((- actual_fsize) & ~0x7ff)), 1);\n+\n+      /* This used to try and be clever by not depending on the value in\n+\t %r30 and instead use the value held in %r1 (so that the 2nd insn\n+\t which sets %r30 could be put in the delay slot of the return insn).\n+\t\n+\t That won't work since if the stack is exactly 8k set_reg_plus_d\n+\t doesn't set %r1, just %r30.  */\n+      load_reg (2, - (actual_fsize + 20 + ((- actual_fsize) & ~0x7ff)),\n+\t\tSTACK_POINTER_REGNUM);\n     }\n \n   /* Reset stack pointer (and possibly frame pointer).  The stack */"}]}