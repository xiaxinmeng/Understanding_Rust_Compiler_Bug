{"sha": "a866509aeb4f15738fe362a113265c2fcfe943d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg2NjUwOWFlYjRmMTU3MzhmZTM2MmExMTMyNjVjMmZjZmU5NDNkNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-02-21T14:00:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-02-21T14:00:44Z"}, "message": "re PR c++/60167 (Bogus error: conflicting declaration)\n\n\tPR c++/60167\n\tPR c++/60222\n\tPR c++/58606\n\t* parser.c (cp_parser_template_argument): Restore dereference.\n\t* pt.c (template_parm_to_arg): Dereference non-pack expansions too.\n\t(process_partial_specialization): Handle deref.\n\t(unify): Likewise.\n\nFrom-SVN: r207994", "tree": {"sha": "f6725d3d90a3c35c4a4c999a049320a7790a6ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6725d3d90a3c35c4a4c999a049320a7790a6ab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a866509aeb4f15738fe362a113265c2fcfe943d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a866509aeb4f15738fe362a113265c2fcfe943d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a866509aeb4f15738fe362a113265c2fcfe943d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a866509aeb4f15738fe362a113265c2fcfe943d5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a39d07b814b70f3f498368e6c0579fb56a87e2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a39d07b814b70f3f498368e6c0579fb56a87e2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a39d07b814b70f3f498368e6c0579fb56a87e2a"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "be248e1f400a368812a2eaa2b7ef2c1c1ab6beff", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a866509aeb4f15738fe362a113265c2fcfe943d5", "patch": "@@ -1,3 +1,13 @@\n+2014-02-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/60167\n+\tPR c++/60222\n+\tPR c++/58606\n+\t* parser.c (cp_parser_template_argument): Restore dereference.\n+\t* pt.c (template_parm_to_arg): Dereference non-pack expansions too.\n+\t(process_partial_specialization): Handle deref.\n+\t(unify): Likewise.\n+\n 2014-02-21  Adam Butcher  <adam@jessamine.co.uk>\n \n \tPR c++/60052"}, {"sha": "e067a0264ec7ae9f2e6e45266b10c3998718990f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=a866509aeb4f15738fe362a113265c2fcfe943d5", "patch": "@@ -13937,6 +13937,7 @@ cp_parser_template_argument (cp_parser* parser)\n \n \t  if (INDIRECT_REF_P (argument))\n \t    {\n+\t      /* Strip the dereference temporarily.  */\n \t      gcc_assert (REFERENCE_REF_P (argument));\n \t      argument = TREE_OPERAND (argument, 0);\n \t    }\n@@ -13975,6 +13976,8 @@ cp_parser_template_argument (cp_parser* parser)\n \t      if (address_p)\n \t\targument = build_x_unary_op (loc, ADDR_EXPR, argument,\n \t\t\t\t\t     tf_warning_or_error);\n+\t      else\n+\t\targument = convert_from_reference (argument);\n \t      return argument;\n \t    }\n \t}"}, {"sha": "4cf387a1d6886b7ce9ac047307e41790ebfa806a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a866509aeb4f15738fe362a113265c2fcfe943d5", "patch": "@@ -3861,6 +3861,8 @@ template_parm_to_arg (tree t)\n \t  SET_ARGUMENT_PACK_ARGS (t, vec);\n \t  TREE_TYPE (t) = type;\n \t}\n+      else\n+\tt = convert_from_reference (t);\n     }\n   return t;\n }\n@@ -4218,10 +4220,12 @@ process_partial_specialization (tree decl)\n           if (/* These first two lines are the `non-type' bit.  */\n               !TYPE_P (arg)\n               && TREE_CODE (arg) != TEMPLATE_DECL\n-              /* This next line is the `argument expression is not just a\n+              /* This next two lines are the `argument expression is not just a\n                  simple identifier' condition and also the `specialized\n                  non-type argument' bit.  */\n-              && TREE_CODE (arg) != TEMPLATE_PARM_INDEX)\n+              && TREE_CODE (arg) != TEMPLATE_PARM_INDEX\n+\t      && !(REFERENCE_REF_P (arg)\n+\t\t   && TREE_CODE (TREE_OPERAND (arg, 0)) == TEMPLATE_PARM_INDEX))\n             {\n               if ((!packed_args && tpd.arg_uses_template_parms[i])\n                   || (packed_args && uses_template_parms (arg)))\n@@ -17893,6 +17897,12 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict,\n       /* Unification fails if we hit an error node.  */\n       return unify_invalid (explain_p);\n \n+    case INDIRECT_REF:\n+      if (REFERENCE_REF_P (parm))\n+\treturn unify (tparms, targs, TREE_OPERAND (parm, 0), arg,\n+\t\t      strict, explain_p);\n+      /* FALLTHRU */\n+\n     default:\n       /* An unresolved overload is a nondeduced context.  */\n       if (is_overloaded_fn (parm) || type_unknown_p (parm))"}, {"sha": "f6395e2c35f1c2d9b2792cc4d255517a3d5debe1", "filename": "gcc/testsuite/g++.dg/template/ref7.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref7.C?ref=a866509aeb4f15738fe362a113265c2fcfe943d5", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/60167\n+\n+template <int& F>\n+struct Foo {\n+  typedef int Bar;\n+\n+  static Bar cache;\n+};\n+\n+template <int& F> typename Foo<F>::Bar Foo<F>::cache;"}, {"sha": "a2fc8471996c1adeb057a9299ff4d22353c8d141", "filename": "gcc/testsuite/g++.dg/template/ref8.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a866509aeb4f15738fe362a113265c2fcfe943d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref8.C?ref=a866509aeb4f15738fe362a113265c2fcfe943d5", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/60222\n+\n+template<int&> struct A\n+{\n+  template<typename> struct B;\n+\n+  template<typename T> struct B<T*> {};\n+};"}]}