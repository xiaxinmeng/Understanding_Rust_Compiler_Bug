{"sha": "834452d2f4f96aaaa048f2e50197f9c01fdcfdfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM0NDUyZDJmNGY5NmFhYWEwNDhmMmU1MDE5N2Y5YzAxZmRjZmRmZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-05-23T07:56:45Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-05-23T07:56:45Z"}, "message": "* jump.c (mark_jump_label): Fix thinko in 2001-05-19 change.\n\nFrom-SVN: r42491", "tree": {"sha": "0f668e548692a55576ec043973b22c6c8d4a8607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f668e548692a55576ec043973b22c6c8d4a8607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/834452d2f4f96aaaa048f2e50197f9c01fdcfdfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834452d2f4f96aaaa048f2e50197f9c01fdcfdfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834452d2f4f96aaaa048f2e50197f9c01fdcfdfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834452d2f4f96aaaa048f2e50197f9c01fdcfdfe/comments", "author": null, "committer": null, "parents": [{"sha": "7cc72e9c81f82626c07b645b1b9d4d71c37746f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc72e9c81f82626c07b645b1b9d4d71c37746f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc72e9c81f82626c07b645b1b9d4d71c37746f6"}], "stats": {"total": 71, "additions": 32, "deletions": 39}, "files": [{"sha": "0bb7521f65badde412fcd09f9c4fb4c3121bd17c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834452d2f4f96aaaa048f2e50197f9c01fdcfdfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834452d2f4f96aaaa048f2e50197f9c01fdcfdfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=834452d2f4f96aaaa048f2e50197f9c01fdcfdfe", "patch": "@@ -1,3 +1,7 @@\n+2001-05-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* jump.c (mark_jump_label): Fix thinko in 2001-05-19 change.\n+\n 2001-05-23  Richard Henderson  <rth@redhat.com>\n \n \t* function.c (expand_function_start): Always use a pseudo"}, {"sha": "5d5c6d6e796dc6bdb7e02e9101cac2275d508c76", "filename": "gcc/jump.c", "status": "modified", "additions": 28, "deletions": 39, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834452d2f4f96aaaa048f2e50197f9c01fdcfdfe/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834452d2f4f96aaaa048f2e50197f9c01fdcfdfe/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=834452d2f4f96aaaa048f2e50197f9c01fdcfdfe", "patch": "@@ -2542,47 +2542,36 @@ mark_jump_label (x, insn, cross_jump, in_mem)\n \t  {\n \t    if (GET_CODE (insn) == JUMP_INSN)\n \t      JUMP_LABEL (insn) = label;\n-\n-\t    /* If we've changed the label, update notes accordingly.  */\n-\t    else if (label != olabel)\n+\t    else\n \t      {\n-\t\trtx note;\n-\n-\t\t/* We may have a REG_LABEL note to indicate that this\n-\t\t   instruction uses the label.  */\n-\t\tnote = find_reg_note (insn, REG_LABEL, olabel);\n-\t\tif (note)\n-\t\t  XEXP (note, 0) = label;\n-\n-\t\t/* We may also have a REG_EQUAL note to indicate that\n-\t\t   a register is being set to the address of the\n-\t\t   label.  */\n-\t\tnote = find_reg_note (insn, REG_EQUAL, NULL_RTX);\n-\t\tif (note \n-\t\t    && GET_CODE (XEXP (note, 0)) == LABEL_REF\n-\t\t    && XEXP (XEXP (note, 0), 0) == olabel)\n-\t\t  XEXP (XEXP (note, 0), 0) = label;\n-\t      }\n+\t\t/* If we've changed the label, update notes accordingly.  */\n+\t\tif (label != olabel)\n+\t\t  {\n+\t\t    rtx note;\n+\n+\t\t    /* We may have a REG_LABEL note to indicate that this\n+\t\t       instruction uses the label.  */\n+\t\t    note = find_reg_note (insn, REG_LABEL, olabel);\n+\t\t    if (note)\n+\t\t      XEXP (note, 0) = label;\n+\n+\t\t    /* We may also have a REG_EQUAL note to indicate that\n+\t\t       a register is being set to the address of the\n+\t\t       label.  */\n+\t\t    note = find_reg_note (insn, REG_EQUAL, NULL_RTX);\n+\t\t    if (note \n+\t\t\t&& GET_CODE (XEXP (note, 0)) == LABEL_REF\n+\t\t\t&& XEXP (XEXP (note, 0), 0) == olabel)\n+\t\t      XEXP (XEXP (note, 0), 0) = label;\n+\t\t  }\n \n-\t    /* Otherwise, add a REG_LABEL note for LABEL unless there already\n-\t       is one.  */\n-\t    else if (! find_reg_note (insn, REG_LABEL, label))\n-\t      {\n-\t\t/* This code used to ignore labels which refered to dispatch\n-\t\t   tables to avoid flow.c generating worse code.\n-\n-\t\t   However, in the presense of global optimizations like\n-\t\t   gcse which call find_basic_blocks without calling\n-\t\t   life_analysis, not recording such labels will lead\n-\t\t   to compiler aborts because of inconsistencies in the\n-\t\t   flow graph.  So we go ahead and record the label.\n-\n-\t\t   It may also be the case that the optimization argument\n-\t\t   is no longer valid because of the more accurate cfg\n-\t\t   we build in find_basic_blocks -- it no longer pessimizes\n-\t\t   code when it finds a REG_LABEL note.  */\n-\t\tREG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL, label,\n-\t\t\t\t\t\t      REG_NOTES (insn));\n+\t\t/* Add a REG_LABEL note for LABEL unless there already\n+\t\t   is one.  All uses of a label, except for labels\n+\t\t   that are the targets of jumps, must have a\n+\t\t   REG_LABEL note.  */\n+\t\tif (! find_reg_note (insn, REG_LABEL, label))\n+\t\t  REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL, label,\n+\t\t\t\t\t\t\tREG_NOTES (insn));\n \t      }\n \t  }\n \treturn;"}]}