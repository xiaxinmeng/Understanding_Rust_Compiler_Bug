{"sha": "790ac0e12ab9a3d704f89d3480af437c550badc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkwYWMwZTEyYWI5YTNkNzA0Zjg5ZDM0ODBhZjQzN2M1NTBiYWRjNg==", "commit": {"author": {"name": "Caroline Tice", "email": "ctice@gcc.gnu.org", "date": "2004-08-18T16:22:53Z"}, "committer": {"name": "Caroline Tice", "email": "ctice@gcc.gnu.org", "date": "2004-08-18T16:22:53Z"}, "message": "Forgot to commit ChangeLog for rest of hot/cold partitioning update patch.\n\nFrom-SVN: r86190", "tree": {"sha": "4a7dc0774797c125574c669efbbdc5492610a861", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a7dc0774797c125574c669efbbdc5492610a861"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/790ac0e12ab9a3d704f89d3480af437c550badc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/790ac0e12ab9a3d704f89d3480af437c550badc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/790ac0e12ab9a3d704f89d3480af437c550badc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/790ac0e12ab9a3d704f89d3480af437c550badc6/comments", "author": null, "committer": null, "parents": [{"sha": "9fb32434113c28e3f8f2346be2609a4f6fd136ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fb32434113c28e3f8f2346be2609a4f6fd136ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fb32434113c28e3f8f2346be2609a4f6fd136ea"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "3bb39234550d8af14fc6928adac2c150c300893b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/790ac0e12ab9a3d704f89d3480af437c550badc6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/790ac0e12ab9a3d704f89d3480af437c550badc6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=790ac0e12ab9a3d704f89d3480af437c550badc6", "patch": "@@ -1,3 +1,100 @@\n+2004-08-18  Caroline Tice  <ctice@apple.com>\n+\n+        * Makefile.in (STAGEFEEDBACK_FLAGS_TO_PASS) Add\n+\t\"-freorder-blocks-and-partition\" to the flags used in second\n+\tstage of profiledbootstrap.\n+\t* bb-reorder.c (push_to_next_round_p): Add new variable,\n+\tnext_round_is_last; set and use variable to make sure, when\n+\tpartitioning, that the last trace construction round consists\n+\tof all (and only) cold basic blocks.\n+\t(rotate_loop): Don't copy blocks that end in a section\n+\tcrossing jump.\n+\t(copy_bb): Correctly initialize \"partition\" of duplicated bb.\n+\t(add_unlikely_executed_notes): Add a comment.\n+\t(find_rarely_executed_basic_blocks_and_crossing_edges): Modify\n+\tto make sure, if function contains hot blocks, that the\n+\tsuccessors of ENTRY_BLOCK_PTR are hot; also, only look for\n+\tcrossing edges if the architecture supports named sections.\n+\t(mark_bb_for_unlikely_executed_section): Modify to always\n+\tinsert the NOTE_INSN_UNLIKELY_EXECUTED_CODE immediately after\n+\tthe basic block note insn.\n+\t(fix_crossing_unconditional_branches): Remove extra space.\n+\t(fix_edges_for_rarely_executed_code): Modify to only do\n+\tpartitioning work if the architecture supports named sections.\n+\t(reorder_basic_blocks): Modify to only add\n+\tNOTE_INSN_UNLIKELY_EXECUTED_CODE notes if the architecture\n+\tsupports named sections.\n+\t* c-common.c (handle_section_attribute): Initialize new global\n+\tvariable, user_defined_section_attribute, to true if user has\n+\tspecified one.\n+\t* cfgcleanup.c (try_forward_edges): Modify to not attempt to\n+\tforward edges that cross section boundaries.\n+\t* cfglayout.c (fixup_reorder_chain): Modify to only fix up\n+\tpartitioning information if the architecture supports named\n+\tsections.\n+\t* cfgrtl.c (target.h): Add statement to include this.\n+\t(rtl_split_block): Make sure newly created bb gets correct\n+\tpartition.\n+\t(try_redirect_by_replacing_jump): Make sure redirection isn't\n+\tattempting to cross section boundaries.\n+\t(force_nonfallthru_and_redirect): Only do partition fix up if\n+\tarchitecture supports named sections.\n+\t(rtl_split_edge): Make sure newly created bb ends up in\n+\tcorrect partition.\n+\t(commit_one_edge_insertion): Remove code that incorrectly\n+\tupdated basic block partition; Make sure partition fix up only\n+\thappens if architecture supports named sections and it's not\n+\talready done.\n+\t(rtl_verify_flow_info_1): Fix if-condition on test/error\n+\tcondition that fallthru edges are not allowed to cross section\n+\tboundaries.\n+\t* defaults.h (NORMAL_TEXT_SECTION_NAME): Remove this.\n+\t* final.c (final_scan_insn): Remove redundant test from if-statement;\n+\tchange calls to text_section into calls to function_section; add code\n+\tto only to partitioning fix up if architecture supports named\n+\tsections.\n+\t* ifcvt.c (find_if_case_1): Make sure newly created bb has correct\n+\tpartition.\n+\t(if_convert): Add targetm.have_named_sections to test.\n+\t* output.h (unlikely_section_label): Extern declaration for new global\n+\tvariable.\n+\t(unlikely_text_section_name): Likewise.\n+\t* opts.c (decode_options): If both partitioning and DWARF debugging\n+\tare turned on, issue a warning that this doesn't work, and change\n+\tpartitiong to basic block reordering (without hot/cold partitions).\n+\t* passes.c (rest_of_handle_final): Re-set new global variable, \n+\tuser_defined_section_attribute, to false.\n+\t(rest_of_compilation): Change options for calling partitioning\n+\tfunction: Don't call if the user defined the section attribute, and\n+\tdon't call if DECL_ONE_ONLY is true for the current function.\n+\t* predict.c (choose_function_section): Return immediately if we\n+\tare doing hot/cold partitioning (i.e. let the basic block partitioning\n+\tdetermine where the function belongs).\n+\t* reg-stack.c (emit_swap_insn): Add condition to step over\n+\tNOTE_INSN_UNLIKELY_EXECUTED_CODE notes.\n+\t* toplev.c (user_defined_section_attribute): New global variable.\n+\t* toplev.h (user_defined_section_attribute): Extern declaration for new\n+\tglobal variable.\n+\t* varasm.c (unlikely_section_label): New global variable.\n+\t(unlikely_text_section_name): New global variable.\n+\t(unlikely_text_section): Add code to initialize unlikely_text_section_name\n+\tif necessary; modify to use unlikely_text_section_name and \n+\tunlikely_section_label; also to use named_section properly.\n+\t(in_unlikely_text_section):  Modify to work correctly with named_section\n+\tand to use unlikely_text_section_name.\n+\t(named_section):  Add code to work properly with cold section.\n+\t(function_section): Clean up if-statement.\n+\t* config/darwin.c (darwin_asm_named_section): Return to original code,\n+\tremoving use of SECTION_FORMAT_STRING.\n+\t* config/arm/pe.h (switch_to_section):  Add case for \n+\tin_unlikely_executed_text to switch statement.\n+\t* config/i386/cygming.h (switch_to_section): Likewise.\n+\t* config/i386/darwin.h (NORMAL_TEXT_SECTION_NAME): Remove.\n+\t(SECTION_FORMAT_STRING): Likewise.\n+\t* config/mcore/mcore.h (switch_to_section): Likewise.\n+\t* config/rs6000/darwin.h (NORMAL_TEXT_SECTION_NAME): Remove.\n+\t(SECTION_FORMAT_STRING): Remove.\n+\n 2004-08-18  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/i386/i386.h (FIXED_REGISTERS): Update encoding to be"}]}