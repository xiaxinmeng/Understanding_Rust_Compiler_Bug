{"sha": "7ff6ca3899e0cae8460f7dc30770002559bc0553", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZmNmNhMzg5OWUwY2FlODQ2MGY3ZGMzMDc3MDAwMjU1OWJjMDU1Mw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-03-04T13:26:25Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-03-04T13:26:25Z"}, "message": "re PR c/69798 (ICE on invalid code on x86_64-linux-gnu in c_parser_braced_init, at c/c-parser.c:4338)\n\n\tPR c/69798\n\t* c-parser.c (c_parser_postfix_expression): Call\n\tc_parser_cast_expression rather than c_parser_postfix_expression.\n\n\t* gcc.dg/cilk-plus/pr69798-1.c: New test.\n\t* gcc.dg/cilk-plus/pr69798-2.c: New test.\n\nFrom-SVN: r233965", "tree": {"sha": "4ca9771c72769236beaba3b26955cd20839b2e53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ca9771c72769236beaba3b26955cd20839b2e53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ff6ca3899e0cae8460f7dc30770002559bc0553", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ff6ca3899e0cae8460f7dc30770002559bc0553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ff6ca3899e0cae8460f7dc30770002559bc0553", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ff6ca3899e0cae8460f7dc30770002559bc0553/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6bf62d5f85e91c7545bfc5cf2f8a5364814423b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bf62d5f85e91c7545bfc5cf2f8a5364814423b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bf62d5f85e91c7545bfc5cf2f8a5364814423b"}], "stats": {"total": 167, "additions": 162, "deletions": 5}, "files": [{"sha": "1fe4f820c856f220763f98f18cd75b21c255b9a6", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=7ff6ca3899e0cae8460f7dc30770002559bc0553", "patch": "@@ -1,3 +1,9 @@\n+2016-03-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/69798\n+\t* c-parser.c (c_parser_postfix_expression): Call\n+\tc_parser_cast_expression rather than c_parser_postfix_expression.\n+\n 2016-03-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/69796"}, {"sha": "a7d58270eae995b28f3da0ddfc682c66fb6b82ac", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=7ff6ca3899e0cae8460f7dc30770002559bc0553", "patch": "@@ -8024,8 +8024,8 @@ c_parser_postfix_expression (c_parser *parser)\n \t    {\n \t      error_at (loc, \"-fcilkplus must be enabled to use \"\n \t\t\t\"%<_Cilk_spawn%>\");\n-\t      expr = c_parser_postfix_expression (parser);\n-\t      expr.value = error_mark_node;\t      \n+\t      expr = c_parser_cast_expression (parser, NULL);\n+\t      expr.value = error_mark_node;\n \t    }\n \t  else if (c_parser_peek_token (parser)->keyword == RID_CILK_SPAWN)\n \t    {\n@@ -8034,14 +8034,14 @@ c_parser_postfix_expression (c_parser *parser)\n \t      /* Now flush out all the _Cilk_spawns.  */\n \t      while (c_parser_peek_token (parser)->keyword == RID_CILK_SPAWN)\n \t\tc_parser_consume_token (parser);\n-\t      expr = c_parser_postfix_expression (parser);\n+\t      expr = c_parser_cast_expression (parser, NULL);\n \t    }\n \t  else\n \t    {\n-\t      expr = c_parser_postfix_expression (parser);\n+\t      expr = c_parser_cast_expression (parser, NULL);\n \t      expr.value = build_cilk_spawn (loc, expr.value);\n \t    }\n-\t  break; \n+\t  break;\n \tdefault:\n \t  c_parser_error (parser, \"expected expression\");\n \t  expr.value = error_mark_node;"}, {"sha": "7a05cd30a4f9296b6d41a72a5e3c4b208c9a5aef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ff6ca3899e0cae8460f7dc30770002559bc0553", "patch": "@@ -1,3 +1,9 @@\n+2016-03-04  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/69798\n+\t* gcc.dg/cilk-plus/pr69798-1.c: New test.\n+\t* gcc.dg/cilk-plus/pr69798-2.c: New test.\n+\n 2016-03-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/70004"}, {"sha": "c5a37a86a21ecd91b7a29b6e6d75e21bd8ef1fe3", "filename": "gcc/testsuite/gcc.dg/cilk-plus/pr69798-1.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fpr69798-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fpr69798-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fpr69798-1.c?ref=7ff6ca3899e0cae8460f7dc30770002559bc0553", "patch": "@@ -0,0 +1,73 @@\n+/* PR c/69798 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fcilkplus\" } */\n+\n+extern int foo (void);\n+\n+void\n+fn1 (int i, int *p)\n+{\n+l:\n+  _Cilk_spawn (void); /* { dg-error \"expected expression\" } */\n+  _Cilk_spawn (char []); /* { dg-error \"expected expression\" } */\n+  _Cilk_spawn (int *); /* { dg-error \"expected expression\" } */\n+  _Cilk_spawn (int) 1; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn ({}); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn ++i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn i++; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn --i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn i--; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn &i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn +i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn -i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn ~i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn !i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn *p; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn &&l; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn sizeof (i); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn sizeof (short); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __alignof__ (i); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __alignof__ (short); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __extension__ i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __func__; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn p[0]; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __real__ i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __imag__ i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn !foo (); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn ~foo (); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn (unsigned) foo (); /* { dg-error \"only function calls can be spawned\" } */\n+}\n+\n+void\n+fn2 (int i, int *p)\n+{\n+l:\n+  _Cilk_spawn _Cilk_spawn (void); /* { dg-error \"consecutive|expected expression\" } */\n+  _Cilk_spawn _Cilk_spawn (char []); /* { dg-error \"consecutive|expected expression\" } */\n+  _Cilk_spawn _Cilk_spawn (int *); /* { dg-error \"consecutive|expected expression\" } */\n+  _Cilk_spawn _Cilk_spawn (int) 1; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn ({}); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn ++i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn i++; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn --i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn i--; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn &i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn +i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn -i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn ~i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn !i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn *p; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn &&l; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn sizeof (i); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn sizeof (short); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __alignof__ (i); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __alignof__ (short); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __extension__ i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __func__; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn p[0]; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __real__ i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __imag__ i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn !foo (); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn ~foo (); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn (unsigned) foo (); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+}"}, {"sha": "6719225dd7a6fc22100258130cd14b19575fe81f", "filename": "gcc/testsuite/gcc.dg/cilk-plus/pr69798-2.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fpr69798-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ff6ca3899e0cae8460f7dc30770002559bc0553/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fpr69798-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fpr69798-2.c?ref=7ff6ca3899e0cae8460f7dc30770002559bc0553", "patch": "@@ -0,0 +1,72 @@\n+/* PR c/69798 */\n+/* { dg-do compile } */\n+\n+extern int foo (void);\n+\n+void\n+fn1 (int i, int *p)\n+{\n+l:\n+  _Cilk_spawn (void); /* { dg-error \"expected expression\" } */\n+  _Cilk_spawn (char []); /* { dg-error \"expected expression\" } */\n+  _Cilk_spawn (int *); /* { dg-error \"expected expression\" } */\n+  _Cilk_spawn (int) 1; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn ({}); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn ++i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn i++; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn --i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn i--; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn &i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn +i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn -i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn ~i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn !i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn *p; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn &&l; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn sizeof (i); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn sizeof (short); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __alignof__ (i); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __alignof__ (short); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __extension__ i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __func__; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn p[0]; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __real__ i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn __imag__ i; /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn !foo (); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn ~foo (); /* { dg-error \"only function calls can be spawned\" } */\n+  _Cilk_spawn (unsigned) foo (); /* { dg-error \"only function calls can be spawned\" } */\n+}\n+\n+void\n+fn2 (int i, int *p)\n+{\n+l:\n+  _Cilk_spawn _Cilk_spawn (void); /* { dg-error \"consecutive|expected expression\" } */\n+  _Cilk_spawn _Cilk_spawn (char []); /* { dg-error \"consecutive|expected expression\" } */\n+  _Cilk_spawn _Cilk_spawn (int *); /* { dg-error \"consecutive|expected expression\" } */\n+  _Cilk_spawn _Cilk_spawn (int) 1; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn ({}); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn ++i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn i++; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn --i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn i--; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn &i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn +i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn -i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn ~i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn !i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn *p; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn &&l; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn sizeof (i); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn sizeof (short); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __alignof__ (i); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __alignof__ (short); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __extension__ i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __func__; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn p[0]; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __real__ i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn __imag__ i; /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn !foo (); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn ~foo (); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+  _Cilk_spawn _Cilk_spawn (unsigned) foo (); /* { dg-error \"consecutive ._Cilk_spawn. keywords are not permitted\" } */\n+}"}]}