{"sha": "e2a14becd6bdc68e1d2fbe084079f7472434488e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJhMTRiZWNkNmJkYzY4ZTFkMmZiZTA4NDA3OWY3NDcyNDM0NDg4ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-01-25T10:39:06Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-01-27T15:13:00Z"}, "message": "aarch64: Fix failure in cmpimm_branch_1.c\n\ngcc.target/aarch64/cmpimm_branch_1.c started failing after Bernd's\nfix to make combine take the costs of jumps into account\n(g:391500af1932e696a007).  This is because the rtx costs\nof *compare_condjump<GPI:mode> were higher than the costs\nof the instructions it combines.\n\n2020-01-27  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_if_then_else_costs): Match\n\tjump conditions for *compare_condjump<GPI:mode>.", "tree": {"sha": "d4e925314bcc327a352ce0b3e2369bb00e600b07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4e925314bcc327a352ce0b3e2369bb00e600b07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2a14becd6bdc68e1d2fbe084079f7472434488e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a14becd6bdc68e1d2fbe084079f7472434488e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2a14becd6bdc68e1d2fbe084079f7472434488e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a14becd6bdc68e1d2fbe084079f7472434488e/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "342e14ffa30e9163a1a75e0a4fb21b6883d58dbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342e14ffa30e9163a1a75e0a4fb21b6883d58dbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342e14ffa30e9163a1a75e0a4fb21b6883d58dbe"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "5bbe0e313518aa9e5f19eacaec3c94c088019a5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2a14becd6bdc68e1d2fbe084079f7472434488e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2a14becd6bdc68e1d2fbe084079f7472434488e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2a14becd6bdc68e1d2fbe084079f7472434488e", "patch": "@@ -1,3 +1,8 @@\n+2020-01-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_if_then_else_costs): Match\n+\tjump conditions for *compare_condjump<GPI:mode>.\n+\n 2020-01-27  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93276"}, {"sha": "11197bd033ea17cdfb709cd6ad266d61fe2b1746", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2a14becd6bdc68e1d2fbe084079f7472434488e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2a14becd6bdc68e1d2fbe084079f7472434488e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e2a14becd6bdc68e1d2fbe084079f7472434488e", "patch": "@@ -11020,6 +11020,8 @@ aarch64_if_then_else_costs (rtx op0, rtx op1, rtx op2, int *cost, bool speed)\n   rtx inner;\n   rtx comparator;\n   enum rtx_code cmpcode;\n+  const struct cpu_cost_table *extra_cost\n+    = aarch64_tune_params.insn_extra_cost;\n \n   if (COMPARISON_P (op0))\n     {\n@@ -11054,8 +11056,17 @@ aarch64_if_then_else_costs (rtx op0, rtx op1, rtx op2, int *cost, bool speed)\n \t\t    /* CBZ/CBNZ.  */\n \t\t    *cost += rtx_cost (inner, VOIDmode, cmpcode, 0, speed);\n \n-\t        return true;\n-\t      }\n+\t\t  return true;\n+\t\t}\n+\t      if (register_operand (inner, VOIDmode)\n+\t\t  && aarch64_imm24 (comparator, VOIDmode))\n+\t\t{\n+\t\t  /* SUB and SUBS.  */\n+\t\t  *cost += COSTS_N_INSNS (2);\n+\t\t  if (speed)\n+\t\t    *cost += extra_cost->alu.arith * 2;\n+\t\t  return true;\n+\t\t}\n \t    }\n \t  else if (cmpcode == LT || cmpcode == GE)\n \t    {"}]}