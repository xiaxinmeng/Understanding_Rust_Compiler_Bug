{"sha": "2604de9d9fe19e7a210273e67b3236fa82c571b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYwNGRlOWQ5ZmUxOWU3YTIxMDI3M2U2N2IzMjM2ZmE4MmM1NzFiMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-02-23T20:28:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-02-23T20:28:50Z"}, "message": "pt.c (unify): Call maybe_adjust_types_for_deduction when deducing from an initializer list.\n\n        * pt.c (unify): Call maybe_adjust_types_for_deduction when\n        deducing from an initializer list.\n\nFrom-SVN: r144392", "tree": {"sha": "1a3cc7b1623659c123b5235692551fce6b5a1b3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a3cc7b1623659c123b5235692551fce6b5a1b3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2604de9d9fe19e7a210273e67b3236fa82c571b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2604de9d9fe19e7a210273e67b3236fa82c571b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2604de9d9fe19e7a210273e67b3236fa82c571b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2604de9d9fe19e7a210273e67b3236fa82c571b2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9283b5133201311b5b62d7f139f3eaa279c2e87d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9283b5133201311b5b62d7f139f3eaa279c2e87d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9283b5133201311b5b62d7f139f3eaa279c2e87d"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "d2b2dbea0a6c19e665a2ccc7848b0fd4345b5cab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2604de9d9fe19e7a210273e67b3236fa82c571b2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2604de9d9fe19e7a210273e67b3236fa82c571b2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2604de9d9fe19e7a210273e67b3236fa82c571b2", "patch": "@@ -1,3 +1,8 @@\n+2009-02-23  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (unify): Call maybe_adjust_types_for_deduction when\n+\tdeducing from an initializer list.\n+\n 2009-02-20  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/39225"}, {"sha": "7246b13c3d6ab498b0edd54c1302cb3fe984b061", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2604de9d9fe19e7a210273e67b3236fa82c571b2/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2604de9d9fe19e7a210273e67b3236fa82c571b2/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=2604de9d9fe19e7a210273e67b3236fa82c571b2", "patch": "@@ -13204,9 +13204,18 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict)\n \n       FOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (arg), i, elt)\n \t{\n+\t  int elt_strict = strict;\n \t  if (!BRACE_ENCLOSED_INITIALIZER_P (elt))\n-\t    elt = TREE_TYPE (elt);\n-\t  if (unify (tparms, targs, elttype, elt, UNIFY_ALLOW_NONE))\n+\t    {\n+\t      tree type = TREE_TYPE (elt);\n+\t      /* It should only be possible to get here for a call.  */\n+\t      gcc_assert (elt_strict & UNIFY_ALLOW_OUTER_LEVEL);\n+\t      elt_strict |= maybe_adjust_types_for_deduction\n+\t\t(DEDUCE_CALL, &elttype, &type, elt);\n+\t      elt = type;\n+\t    }\n+\n+\t  if (unify (tparms, targs, elttype, elt, elt_strict))\n \t    return 1;\n \t}\n       return 0;"}, {"sha": "3ca4282565530e97a4c4f0c50283ca39a3e62e31", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2604de9d9fe19e7a210273e67b3236fa82c571b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2604de9d9fe19e7a210273e67b3236fa82c571b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2604de9d9fe19e7a210273e67b3236fa82c571b2", "patch": "@@ -1,3 +1,7 @@\n+2009-02-23  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/initlist14.C: New test.\n+\n 2008-02-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/38914"}, {"sha": "bb67f3e54da92b2bcb87b7b77aacbed22763ad43", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist14.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2604de9d9fe19e7a210273e67b3236fa82c571b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2604de9d9fe19e7a210273e67b3236fa82c571b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist14.C?ref=2604de9d9fe19e7a210273e67b3236fa82c571b2", "patch": "@@ -0,0 +1,19 @@\n+// Bug: We weren't doing the normal replacement of array with pointer\n+// for deduction in the context of a call because of the initializer list.\n+// { dg-options \"-std=c++0x\" }\n+\n+#include <initializer_list>\n+\n+struct string\n+{\n+  string (const char *);\n+};\n+\n+template <class T>\n+struct vector\n+{\n+  template <class U>\n+  vector (std::initializer_list<U>);\n+};\n+\n+vector<string> v = { \"a\", \"b\", \"c\" };"}]}