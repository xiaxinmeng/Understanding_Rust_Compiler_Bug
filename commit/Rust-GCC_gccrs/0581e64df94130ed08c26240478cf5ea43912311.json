{"sha": "0581e64df94130ed08c26240478cf5ea43912311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU4MWU2NGRmOTQxMzBlZDA4YzI2MjQwNDc4Y2Y1ZWE0MzkxMjMxMQ==", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-03-17T14:03:55Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-03-18T09:21:13Z"}, "message": "Fix Backend:: mark 2 methods pure\n\nvirtual loop_expression and exit_expression were not marked pure and do not have\na default impl, causing error during linking when optimisation are disabled.", "tree": {"sha": "f0d86f71ce64fbc3a4f83fff6058deb50068f235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0d86f71ce64fbc3a4f83fff6058deb50068f235"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0581e64df94130ed08c26240478cf5ea43912311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0581e64df94130ed08c26240478cf5ea43912311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0581e64df94130ed08c26240478cf5ea43912311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0581e64df94130ed08c26240478cf5ea43912311/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "837e9d75b75361dfc205c0c2320ea05af2605aa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837e9d75b75361dfc205c0c2320ea05af2605aa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/837e9d75b75361dfc205c0c2320ea05af2605aa6"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e42081beee73def597b8d2dfc12a9916301f44f8", "filename": "gcc/rust/rust-backend.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0581e64df94130ed08c26240478cf5ea43912311/gcc%2Frust%2Frust-backend.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0581e64df94130ed08c26240478cf5ea43912311/gcc%2Frust%2Frust-backend.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-backend.h?ref=0581e64df94130ed08c26240478cf5ea43912311", "patch": "@@ -468,10 +468,10 @@ class Backend\n     = 0;\n \n   // infinite loop expressions\n-  virtual Bexpression *loop_expression (Bblock *body, Location);\n+  virtual Bexpression *loop_expression (Bblock *body, Location) = 0;\n \n   // exit expressions\n-  virtual Bexpression *exit_expression (Bexpression *condition, Location);\n+  virtual Bexpression *exit_expression (Bexpression *condition, Location) = 0;\n \n   // Create a switch statement where the case values are constants.\n   // CASES and STATEMENTS must have the same number of entries.  If"}]}