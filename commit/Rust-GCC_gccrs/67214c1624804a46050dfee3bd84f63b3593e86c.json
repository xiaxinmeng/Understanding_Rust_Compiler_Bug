{"sha": "67214c1624804a46050dfee3bd84f63b3593e86c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcyMTRjMTYyNDgwNGE0NjA1MGRmZWUzYmQ4NGY2M2IzNTkzZTg2Yw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2007-01-11T14:11:32Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2007-01-11T14:11:32Z"}, "message": "warnings.m4: Add second parameter with name of variable.\n\nconfig:\n2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* config/warnings.m4: Add second parameter with name of variable.\n\tAlways append to the variable if it exists.\n\nlibcpp:\n2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* configure: Regenerate.\n\nFrom-SVN: r120673", "tree": {"sha": "54de7115c239001c030a270b3fd53a086416c611", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54de7115c239001c030a270b3fd53a086416c611"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67214c1624804a46050dfee3bd84f63b3593e86c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67214c1624804a46050dfee3bd84f63b3593e86c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67214c1624804a46050dfee3bd84f63b3593e86c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67214c1624804a46050dfee3bd84f63b3593e86c/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d5b51ff57093d6f49583ad96363b45a26db59dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5b51ff57093d6f49583ad96363b45a26db59dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d5b51ff57093d6f49583ad96363b45a26db59dc"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "8b0aa1d429f445fc8abe5f3c56c95596fe9eadf3", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67214c1624804a46050dfee3bd84f63b3593e86c/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67214c1624804a46050dfee3bd84f63b3593e86c/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=67214c1624804a46050dfee3bd84f63b3593e86c", "patch": "@@ -1,3 +1,8 @@\n+2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* config/warnings.m4: Add second parameter with name of variable.\n+\tAlways append to the variable if it exists.\n+\n 2007-01-01  Mike Stump  <mrs@apple.com>\n \n \t* mh-ppc-darwin: Remove support for building with Apple's gcc-3.1."}, {"sha": "af99ffec08349c37251b401bcb916000079e096d", "filename": "config/warnings.m4", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67214c1624804a46050dfee3bd84f63b3593e86c/config%2Fwarnings.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67214c1624804a46050dfee3bd84f63b3593e86c/config%2Fwarnings.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fwarnings.m4?ref=67214c1624804a46050dfee3bd84f63b3593e86c", "patch": "@@ -1,6 +1,6 @@\n # Autoconf include file defining macros related to compile-time warnings.\n \n-# Copyright 2004, 2005 Free Software Foundation, Inc.\n+# Copyright 2004, 2005, 2007 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -19,13 +19,14 @@\n #Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #02110-1301, USA.\n \n-# ACX_PROG_CC_WARNING_OPTS([-Wfoo -Wbar -Wbaz])\n-#   Sets @WARN_CFLAGS@ to the subset of the given options which the\n+# ACX_PROG_CC_WARNING_OPTS(WARNINGS, [VARIABLE = WARN_CFLAGS@)\n+#   Sets @VARIABLE@ to the subset of the given options which the\n #   compiler accepts.\n AC_DEFUN([ACX_PROG_CC_WARNING_OPTS],\n [AC_REQUIRE([AC_PROG_CC])dnl\n-AC_SUBST([WARN_CFLAGS])dnl\n-WARN_CFLAGS=\n+m4_pushdef([acx_Var], [m4_default([$2], [WARN_CFLAGS])])dnl\n+AC_SUBST(acx_Var)dnl\n+acx_Var=\n save_CFLAGS=\"$CFLAGS\"\n for option in $1; do\n   AS_VAR_PUSHDEF([acx_Woption], [acx_cv_prog_cc_warning_$option])\n@@ -36,20 +37,22 @@ for option in $1; do\n       [AS_VAR_SET(acx_Woption, no)])\n   ])\n   AS_IF([test AS_VAR_GET(acx_Woption) = yes],\n-        [WARN_CFLAGS=\"$WARN_CFLAGS${WARN_CFLAGS:+ }$option\"])\n+        [acx_Var=\"$acx_Var${acx_Var:+ }$option\"])\n   AS_VAR_POPDEF([acx_Woption])dnl\n done\n CFLAGS=\"$save_CFLAGS\"\n+m4_popdef([acx_Var])dnl\n ])# ACX_PROG_CC_WARNING_OPTS\n \n-# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC([-Wno-long-long ...])\n-#   Sets WARN_PEDANTIC to \"-pedantic\" + the argument, if the compiler is GCC\n+# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC(WARNINGS, [VARIABLE = WARN_PEDANTIC)\n+#   Append to VARIABLE \"-pedantic\" + the argument, if the compiler is GCC\n #   and accepts all of those options simultaneously, otherwise to nothing.\n AC_DEFUN([ACX_PROG_CC_WARNING_ALMOST_PEDANTIC],\n [AC_REQUIRE([AC_PROG_CC])dnl\n-AC_SUBST([WARN_PEDANTIC])dnl\n+m4_pushdef([acx_Var], [m4_default([$2], [WARN_PEDANTIC])])dnl\n+AC_SUBST(acx_Var)dnl\n AS_VAR_PUSHDEF([acx_Pedantic], [acx_cv_prog_cc_pedantic_$1])dnl\n-WARN_PEDANTIC=\n+acx_Var=\n AS_IF([test \"$GCC\" = yes],\n [AC_CACHE_CHECK([whether $CC supports -pedantic $1], acx_Pedantic,\n [save_CFLAGS=\"$CFLAGS\"\n@@ -59,9 +62,10 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])],\n    [AS_VAR_SET(acx_Pedantic, no)])\n CFLAGS=\"$save_CFLAGS\"])\n AS_IF([test AS_VAR_GET(acx_Pedantic) = yes],\n-      [WARN_PEDANTIC=\"-pedantic $1\"])\n+      [acx_Var=\"$acx_Var${acx_Var:+ }-pedantic $1\"])\n ])\n AS_VAR_POPDEF([acx_Pedantic])dnl\n+m4_popdef([acx_Var])dnl\n ])# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC\n \n # ACX_PROG_CC_WARNINGS_ARE_ERRORS([x.y.z])"}, {"sha": "11a165f853a857310fb2e4eb98f055d1a0b8ddab", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67214c1624804a46050dfee3bd84f63b3593e86c/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67214c1624804a46050dfee3bd84f63b3593e86c/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=67214c1624804a46050dfee3bd84f63b3593e86c", "patch": "@@ -1,3 +1,7 @@\n+2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* configure: Regenerate.\n+\n 2007-01-04  Tom Tromey  <tromey@redhat.com>\n \n \tPR preprocessor/28165:"}, {"sha": "26ed11015ba5c18ceb9c7b3104c26a9e106d578f", "filename": "libcpp/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67214c1624804a46050dfee3bd84f63b3593e86c/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67214c1624804a46050dfee3bd84f63b3593e86c/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=67214c1624804a46050dfee3bd84f63b3593e86c", "patch": "@@ -2816,7 +2816,7 @@ fi\n echo \"$as_me:$LINENO: result: $acx_cv_prog_cc_pedantic__Wno_long_long\" >&5\n echo \"${ECHO_T}$acx_cv_prog_cc_pedantic__Wno_long_long\" >&6\n if test $acx_cv_prog_cc_pedantic__Wno_long_long = yes; then\n-  WARN_PEDANTIC=\"-pedantic -Wno-long-long\"\n+  WARN_PEDANTIC=\"$WARN_PEDANTIC${WARN_PEDANTIC:+ }-pedantic -Wno-long-long\"\n fi\n \n "}]}