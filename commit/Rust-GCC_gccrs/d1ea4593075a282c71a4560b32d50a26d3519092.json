{"sha": "d1ea4593075a282c71a4560b32d50a26d3519092", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFlYTQ1OTMwNzVhMjgyYzcxYTQ1NjBiMzJkNTBhMjZkMzUxOTA5Mg==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2004-10-29T02:42:54Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2004-10-29T02:42:54Z"}, "message": "inclhack.def (stdio_va_list): Don't fix if stdarg.h is included or ifdef va_start.\n\n\t* inclhack.def (stdio_va_list): Don't fix if stdarg.h is\n          included or ifdef va_start.\n\nFrom-SVN: r89803", "tree": {"sha": "a1e1ee1792e7ba51745321429ecda36cac31b3d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1e1ee1792e7ba51745321429ecda36cac31b3d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1ea4593075a282c71a4560b32d50a26d3519092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ea4593075a282c71a4560b32d50a26d3519092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ea4593075a282c71a4560b32d50a26d3519092", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ea4593075a282c71a4560b32d50a26d3519092/comments", "author": null, "committer": null, "parents": [{"sha": "8618ff53631f91de70fe5c8496eeab830c8470ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8618ff53631f91de70fe5c8496eeab830c8470ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8618ff53631f91de70fe5c8496eeab830c8470ff"}], "stats": {"total": 42, "additions": 27, "deletions": 15}, "files": [{"sha": "6fba0c3d455d8d1470b76134d902b268f985a78a", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ea4593075a282c71a4560b32d50a26d3519092/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ea4593075a282c71a4560b32d50a26d3519092/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=d1ea4593075a282c71a4560b32d50a26d3519092", "patch": "@@ -1,6 +1,13 @@\n 2004-10-28  Mike Stump  <mrs@apple.com>\n \n-\t* inclhack.def: Avoid changing NULL on C++ friendly systems.\n+\t* inclhack.def (stdio_va_list): Don't fix if stdarg.h is\n+        included or ifdef va_start.\n+\t* fixincl.x: Regenerate.\n+\t\n+2004-10-28  Mike Stump  <mrs@apple.com>\n+\n+\t* inclhack.def (void_null): Avoid changing NULL on C++ friendly\n+\tsystems.\n \t* fixincl.x: Regenerate.\n \n 2004-10-27  Geoffrey Keating  <geoffk@apple.com>"}, {"sha": "781c9383f09c833f58edf19f3fda92874d441622", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ea4593075a282c71a4560b32d50a26d3519092/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ea4593075a282c71a4560b32d50a26d3519092/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=d1ea4593075a282c71a4560b32d50a26d3519092", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Thursday October 28, 2004 at 01:52:23 PM PDT\n+ * It has been AutoGen-ed  Thursday October 28, 2004 at 07:37:27 PM PDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Thu Oct 28 13:52:23 PDT 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Thu Oct 28 19:37:27 PDT 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -4927,10 +4927,13 @@ tSCC zStdio_Va_ListList[] =\n  */\n tSCC zStdio_Va_ListBypass0[] =\n        \"__gnuc_va_list|_BSD_VA_LIST_|__DJ_va_list|_G_va_list\";\n+tSCC zStdio_Va_ListBypass1[] =\n+       \"include <stdarg\\\\.h>|#ifdef va_start\";\n \n-#define    STDIO_VA_LIST_TEST_CT  1\n+#define    STDIO_VA_LIST_TEST_CT  2\n static tTestDesc aStdio_Va_ListTests[] = {\n-  { TT_NEGREP,   zStdio_Va_ListBypass0, (regex_t*)NULL }, };\n+  { TT_NEGREP,   zStdio_Va_ListBypass0, (regex_t*)NULL },\n+  { TT_NEGREP,   zStdio_Va_ListBypass1, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Stdio_Va_List\n@@ -7146,7 +7149,7 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          204\n+#define REGEX_COUNT          205\n #define MACH_LIST_SIZE_LIMIT 261\n #define FIX_COUNT            180\n "}, {"sha": "30d8065db45330cc89c47f32fe419700da0e5511", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ea4593075a282c71a4560b32d50a26d3519092/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ea4593075a282c71a4560b32d50a26d3519092/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=d1ea4593075a282c71a4560b32d50a26d3519092", "patch": "@@ -2692,15 +2692,14 @@ fix = {\n \n \n /*\n- *  Don't use or define the name va_list in stdio.h.\n- *  This is for ANSI and also to interoperate properly with gcc's\n- *  varargs.h.  Note _BSD_VA_LIST_ is dealt with elsewhere.  The\n- *  presence of __gnuc_va_list, __DJ_va_list, or _G_va_list is taken\n- *  to indicate that the header knows what it's doing -- under SUSv2,\n- *  stdio.h is required to define va_list, and we shouldn't break that.\n- *  On IRIX 6.5, internal/wchar_core.h used to get its definition of\n- *  va_list from stdio.h.  Since this doesn't happen any longer, use\n- *  __gnuc_va_list there, too.\n+ *  Don't use or define the name va_list in stdio.h.  This is for\n+ *  ANSI.  Note _BSD_VA_LIST_ is dealt with elsewhere.  The presence\n+ *  of __gnuc_va_list, __DJ_va_list, or _G_va_list is taken to\n+ *  indicate that the header knows what it's doing -- under SUSv2,\n+ *  stdio.h is required to define va_list, and we shouldn't break\n+ *  that.  On IRIX 6.5, internal/wchar_core.h used to get its\n+ *  definition of va_list from stdio.h.  Since this doesn't happen any\n+ *  longer, use __gnuc_va_list there, too.\n  */\n fix = {\n     hackname = stdio_va_list;\n@@ -2716,6 +2715,9 @@ fix = {\n     files    = wchar.h;\n     files    = curses_colr/curses.h;\n     bypass   = '__gnuc_va_list|_BSD_VA_LIST_|__DJ_va_list|_G_va_list';\n+    /* Don't fix, if we use va_list from stdarg.h, or if the use is\n+       otherwise protected.  */\n+    bypass   = 'include <stdarg\\.h>|#ifdef va_start';\n \n     /*\n      * Use __gnuc_va_list in arg types in place of va_list."}]}