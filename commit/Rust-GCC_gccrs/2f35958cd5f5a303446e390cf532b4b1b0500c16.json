{"sha": "2f35958cd5f5a303446e390cf532b4b1b0500c16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYzNTk1OGNkNWY1YTMwMzQ0NmUzOTBjZjUzMmI0YjFiMDUwMGMxNg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2014-12-03T14:05:51Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2014-12-03T14:05:51Z"}, "message": "re PR ipa/64153 (r218205 miscompiles libgomp)\n\n2014-12-03  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/64153\n\t* ipa-inline-analysis.c (evaluate_conditions_for_known_args): Check\n\ttype sizes before view_converting.\n\nFrom-SVN: r218316", "tree": {"sha": "5849eb6e7b0fc6f5091cb31612a3f52530482136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5849eb6e7b0fc6f5091cb31612a3f52530482136"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f35958cd5f5a303446e390cf532b4b1b0500c16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f35958cd5f5a303446e390cf532b4b1b0500c16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f35958cd5f5a303446e390cf532b4b1b0500c16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f35958cd5f5a303446e390cf532b4b1b0500c16/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68bc92704f6e3cb332fa96601379f4f2bf933e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68bc92704f6e3cb332fa96601379f4f2bf933e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68bc92704f6e3cb332fa96601379f4f2bf933e93"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "610606494cd931a7d012ae11c30ba813e62e6f49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f35958cd5f5a303446e390cf532b4b1b0500c16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f35958cd5f5a303446e390cf532b4b1b0500c16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f35958cd5f5a303446e390cf532b4b1b0500c16", "patch": "@@ -1,3 +1,9 @@\n+2014-12-03  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/64153\n+\t* ipa-inline-analysis.c (evaluate_conditions_for_known_args): Check\n+\ttype sizes before view_converting.\n+\n 2014-12-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/64151"}, {"sha": "a2500d0c06ba5e64967060012dc875483212e3b3", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f35958cd5f5a303446e390cf532b4b1b0500c16/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f35958cd5f5a303446e390cf532b4b1b0500c16/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=2f35958cd5f5a303446e390cf532b4b1b0500c16", "patch": "@@ -880,12 +880,19 @@ evaluate_conditions_for_known_args (struct cgraph_node *node,\n \t}\n       if (c->code == IS_NOT_CONSTANT || c->code == CHANGED)\n \tcontinue;\n-      val = fold_unary (VIEW_CONVERT_EXPR, TREE_TYPE (c->val), val);\n-      res = val\n-\t? fold_binary_to_constant (c->code, boolean_type_node, val, c->val)\n-\t: NULL;\n-      if (res && integer_zerop (res))\n-\tcontinue;\n+\n+      if (operand_equal_p (TYPE_SIZE (TREE_TYPE (c->val)),\n+\t\t\t   TYPE_SIZE (TREE_TYPE (val)), 0))\n+\t{\n+\t  val = fold_unary (VIEW_CONVERT_EXPR, TREE_TYPE (c->val), val);\n+\n+\t  res = val\n+\t    ? fold_binary_to_constant (c->code, boolean_type_node, val, c->val)\n+\t    : NULL;\n+\n+\t  if (res && integer_zerop (res))\n+\t    continue;\n+\t}\n       clause |= 1 << (i + predicate_first_dynamic_condition);\n     }\n   return clause;"}]}