{"sha": "3a580f967e55733303d2aa29d1f9e75bed81af83", "node_id": "C_kwDOANBUbNoAKDNhNTgwZjk2N2U1NTczMzMwM2QyYWEyOWQxZjllNzViZWQ4MWFmODM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-07T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-07T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "6806c6973be87208b5eb487a0c00ffab315b29fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6806c6973be87208b5eb487a0c00ffab315b29fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a580f967e55733303d2aa29d1f9e75bed81af83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a580f967e55733303d2aa29d1f9e75bed81af83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a580f967e55733303d2aa29d1f9e75bed81af83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a580f967e55733303d2aa29d1f9e75bed81af83/comments", "author": null, "committer": null, "parents": [{"sha": "c9543403c19fdc3c3b5a8db8546340de085bd14e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9543403c19fdc3c3b5a8db8546340de085bd14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9543403c19fdc3c3b5a8db8546340de085bd14e"}], "stats": {"total": 136, "additions": 135, "deletions": 1}, "files": [{"sha": "2232f41977938b2feb2c1e5b1e35a7d2e139572a", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a580f967e55733303d2aa29d1f9e75bed81af83/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a580f967e55733303d2aa29d1f9e75bed81af83/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3a580f967e55733303d2aa29d1f9e75bed81af83", "patch": "@@ -1,3 +1,7 @@\n+2021-12-06  Navid Rahimi  <navidrahimi@microsoft.com>\n+\n+\t* MAINTAINERS: Adding myself.\n+\n 2021-12-02  Pekka Sepp\u00e4nen  <pexu@gcc.mail.kapsi.fi>\n \n \t* configure: Regenerate."}, {"sha": "682732556494d2aee602c075f36759bc6348d80e", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a580f967e55733303d2aa29d1f9e75bed81af83/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a580f967e55733303d2aa29d1f9e75bed81af83/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=3a580f967e55733303d2aa29d1f9e75bed81af83", "patch": "@@ -1,3 +1,7 @@\n+2021-12-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Filter out one warning.\n+\n 2021-11-24  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* download_prerequisites: Update to gmp-6.2.1, mpfr-4.1.0,"}, {"sha": "0665d9b51e905301d8d9e37ab3a2844909056c4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a580f967e55733303d2aa29d1f9e75bed81af83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a580f967e55733303d2aa29d1f9e75bed81af83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a580f967e55733303d2aa29d1f9e75bed81af83", "patch": "@@ -1,3 +1,79 @@\n+2021-12-06  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\tPR target/103545\n+\t* config/rs6000/xmmintrin.h (_mm_movemask_ps): Replace \"vector\" with\n+\t\"__vector\".\n+\n+2021-12-06  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* config/bpf/bpf.c (bpf_handle_preserve_access_index_attribute):\n+\tMark arguments `args' and flags' as unused.\n+\t(bpf_core_newdecl): Remove unused local `newdecl'.\n+\t(bpf_core_newdecl): Remove unused argument `loc'.\n+\t(ctfc_debuginfo_early_finish_p): Remove unused function.\n+\t(TARGET_CTFC_DEBUGINFO_EARLY_FINISH_P): Remove definition.\n+\t(bpf_core_walk): Do not pass a location to bpf_core_newdecl.\n+\n+2021-12-06  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gimple-range-edge.cc (gimple_outgoing_range::edge_range_p): Add\n+\ta shortcut for blocks with single successors.\n+\t* gimple-range-gori.cc (gori_map::calculate_gori): Likewise.\n+\n+2021-12-06  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* value-range.cc (irange::irange_union): Use quick_push rather\n+\tthan safe_push.  Use widest_int rather than wide_int.  Avoid\n+\tassigning wi::to_* results to wide*_int temporaries.\n+\n+2021-12-06  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-cache.cc (ranger_cache::fill_block_cache): Check for\n+\ta range from dominators before filling the cache.\n+\t(ranger_cache::range_from_dom): New.\n+\t* gimple-range-cache.h (ranger_cache::range_from_dom): Add prototype.\n+\n+2021-12-06  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-gori.h (class gori_compute):: Add prototypes.\n+\t* gimple-range-gori.cc (gori_compute::has_edge_range_p): Add alternate\n+\tAPI for basic block.  Call for edge alterantive.\n+\t(gori_compute::may_recompute_p): Ditto.\n+\n+2021-12-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103581\n+\t* tree-vect-stmts.c (vect_build_gather_load_calls): Properly\n+\tguard all the AVX512 mask cases.\n+\n+2021-12-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103544\n+\t* tree-vect-slp.c (vect_analyze_slp): Only add a SLP reduction\n+\topportunity if the stmt in question is the reduction root.\n+\t(dot_slp_tree): Add missing check for NULL child.\n+\n+2021-12-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR pch/71934\n+\t* config/avr/avr.c (avr_output_data_section_asm_op,\n+\tavr_output_bss_section_asm_op): Change argument type from const void *\n+\tto const char *.\n+\n+2021-12-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR rtl-optimization/103404\n+\t* cse.c (find_sets_in_insn): Don't select elements out of a V1 mode\n+\tsubreg.\n+\n+2021-12-06  Hongtao Liu  <Hongtao.liu@intel.com>\n+\t    Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/95740\n+\t* config/i386/i386.c (ix86_preferred_reload_class): Allow\n+\tinteger regs when moves between register units are cheap.\n+\t* config/i386/i386.h (INT_SSE_CLASS_P): New.\n+\n 2021-12-05  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/rs6000-call.c (rs6000_init_builtins): Move"}, {"sha": "3254226c45b1fa7bb4b8091dd79aa1c8ad1d52c7", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a580f967e55733303d2aa29d1f9e75bed81af83/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a580f967e55733303d2aa29d1f9e75bed81af83/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=3a580f967e55733303d2aa29d1f9e75bed81af83", "patch": "@@ -1 +1 @@\n-20211206\n+20211207"}, {"sha": "bcbd8de572eafb8f91150e4eb57ce726b7b58118", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a580f967e55733303d2aa29d1f9e75bed81af83/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a580f967e55733303d2aa29d1f9e75bed81af83/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=3a580f967e55733303d2aa29d1f9e75bed81af83", "patch": "@@ -1,3 +1,15 @@\n+2021-12-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/103533\n+\t* constraint-manager.cc (equiv_class::contains_non_constant_p):\n+\tNew.\n+\t(constraint_manager::canonicalize): Call it when determining\n+\tredundant ECs.\n+\t(selftest::test_purging): New selftest.\n+\t(selftest::run_constraint_manager_tests): Likewise.\n+\t* constraint-manager.h (equiv_class::contains_non_constant_p):\n+\tNew decl.\n+\n 2021-12-01  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/102471"}, {"sha": "eb3b22516c64e4b33286fe93a4c64fa1a30bcd74", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a580f967e55733303d2aa29d1f9e75bed81af83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a580f967e55733303d2aa29d1f9e75bed81af83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a580f967e55733303d2aa29d1f9e75bed81af83", "patch": "@@ -1,3 +1,23 @@\n+2021-12-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103581\n+\t* gcc.dg/vect/pr103581.c: New testcase.\n+\n+2021-12-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103544\n+\t* gcc.dg/vect/pr103544.c: New testcase.\n+\n+2021-12-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR rtl-optimization/103404\n+\t* gcc.target/i386/pr103404.c: New test.\n+\n+2021-12-06  Hongtao Liu  <Hongtao.liu@intel.com>\n+\t    Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/pr95740.c: New test.\n+\n 2021-12-04  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/93614"}, {"sha": "377f1fa699503de5505d3b3eca339841060ff0a6", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a580f967e55733303d2aa29d1f9e75bed81af83/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a580f967e55733303d2aa29d1f9e75bed81af83/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=3a580f967e55733303d2aa29d1f9e75bed81af83", "patch": "@@ -1,3 +1,10 @@\n+2021-12-06  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* config/riscv/div.S: Add the hidden alias symbol for __udivdi3, and\n+\tthen use HIDDEN_JUMPTARGET to target it since it is non-preemptible.\n+\t* config/riscv/riscv-asm.h: Added new macros HIDDEN_JUMPTARGET and\n+\tHIDDEN_DEF.\n+\n 2021-11-30  Rasmus Villemoes  <rasmus.villemoes@prevas.dk>\n \n \t* config/vxcrtstuff.c: Undefine caddr_t, pid_t, rlim_t,"}, {"sha": "aea2def37dfc8f68d208974e59eea37e7ec1bba7", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a580f967e55733303d2aa29d1f9e75bed81af83/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a580f967e55733303d2aa29d1f9e75bed81af83/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=3a580f967e55733303d2aa29d1f9e75bed81af83", "patch": "@@ -1,3 +1,14 @@\n+2021-12-06  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* LOCAL_PATCHES: Add commit 70b043845d7.\n+\n+2021-12-06  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR sanitizer/103466\n+\t* tsan/tsan_rtl_amd64.S (__tsan_trace_switch_thunk): Replace\n+\tvmovdqu with movdqu.\n+\t(__tsan_report_race_thunk): Likewise.\n+\n 2021-11-28  Andrew Pinski  <apinski@marvell.com>\n \n \tPR sanitizer/62157"}]}