{"sha": "e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVkYzYxMGU2ZGQ0Njk1MzQ5YTA5ZDAyZTkyM2FjNmI0NWJhMGNiYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T09:31:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T09:31:02Z"}, "message": "[multiple changes]\n\n2010-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* g-pehage.ads: Minor reformatting\n\n\t* gnat_ugn.texi: Clarifying comment on -gnatyc\n\t* exp_ch6.adb (Expand_N_Subprogram_Body): Reset Is_Pure if limited\n\targuments.\n\n2010-09-10  Tristan Gingold  <gingold@adacore.com>\n\n\t* Make-generated.in (gnat.hlp): New rule.\n\n2010-09-10  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-util.adb, prj-util.ads (Executable_Of): New parameter\n\tInclude_Suffix.\n\nFrom-SVN: r164146", "tree": {"sha": "e76c03390d624bc43460270253077c503970e322", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e76c03390d624bc43460270253077c503970e322"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/comments", "author": null, "committer": null, "parents": [{"sha": "2bc58d4d59d22e8e8dacd5ab60d802e32fd2954c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc58d4d59d22e8e8dacd5ab60d802e32fd2954c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bc58d4d59d22e8e8dacd5ab60d802e32fd2954c"}], "stats": {"total": 143, "additions": 87, "deletions": 56}, "files": [{"sha": "e718fc06ed72c24928c0ca31b9c5444c66cd9234", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "patch": "@@ -1,3 +1,20 @@\n+2010-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-pehage.ads: Minor reformatting\n+\n+\t* gnat_ugn.texi: Clarifying comment on -gnatyc\n+\t* exp_ch6.adb (Expand_N_Subprogram_Body): Reset Is_Pure if limited\n+\targuments.\n+\n+2010-09-10  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* Make-generated.in (gnat.hlp): New rule.\n+\n+2010-09-10  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-util.adb, prj-util.ads (Executable_Of): New parameter\n+\tInclude_Suffix.\n+\n 2010-09-10  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.adb: Minor code cleanup: Add assertion to"}, {"sha": "6942d7a5fccd5f383095f751687836d3480541e2", "filename": "gcc/ada/Make-generated.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "patch": "@@ -124,3 +124,11 @@ $(ADA_GEN_SUBDIR)/stamp-sdefault : $(srcdir)/version.c Makefile\n \t$(ECHO) \"end Sdefault;\" >> tmp-sdefault.adb\n \t$(MOVE_IF_CHANGE) tmp-sdefault.adb $(ADA_GEN_SUBDIR)/sdefault.adb\n \ttouch $(ADA_GEN_SUBDIR)/stamp-sdefault\n+\n+$(ADA_GEN_SUBDIR)/gnat.hlp :  $(ADA_GEN_SUBDIR)/vms_help.adb $(ADA_GEN_SUBDIR)/vms_cmds.ads $(ADA_GEN_SUBDIR)/gnat.help_in $(ADA_GEN_SUBDIR)/vms_data.ads\n+\t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/gnat_hlp\n+\t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/gnat_hlp/,$(notdir $^))\n+\t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/gnat_hlp\n+\t(cd $(ADA_GEN_SUBDIR)/bldtools/gnat_hlp; \\\n+\t  gnatmake -q vms_help; \\\n+\t  ./vms_help$(build_exeext) gnat.help_in vms_data.ads ../../gnat.hlp)"}, {"sha": "a2b6c16a08fe510b06231a39e8682dccd001da43", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "patch": "@@ -4096,6 +4096,7 @@ package body Exp_Ch6 is\n    --  Initialize scalar out parameters if Initialize/Normalize_Scalars\n \n    --  Reset Pure indication if any parameter has root type System.Address\n+   --  or has any parameters of limited types.\n \n    --  Wrap thread body\n \n@@ -4287,7 +4288,9 @@ package body Exp_Ch6 is\n          begin\n             F := First_Formal (Spec_Id);\n             while Present (F) loop\n-               if Is_Descendent_Of_Address (Etype (F)) then\n+               if Is_Descendent_Of_Address (Etype (F))\n+                 or else Is_Limited_Type (Etype (F))\n+               then\n                   Set_Is_Pure (Spec_Id, False);\n \n                   if Spec_Id /= Body_Id then"}, {"sha": "8e72088e36da8eeb2eaf5e4bcd7b4c31c74ea5a9", "filename": "gcc/ada/g-pehage.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fg-pehage.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fg-pehage.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.ads?ref=e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "patch": "@@ -132,7 +132,8 @@ package GNAT.Perfect_Hash_Generators is\n    --  attempts (see Initialize).\n \n    procedure Produce\n-     (Pkg_Name : String := Default_Pkg_Name; Use_Stdout : Boolean := False);\n+     (Pkg_Name   : String  := Default_Pkg_Name;\n+      Use_Stdout : Boolean := False);\n    --  Generate the hash function package Pkg_Name. This package includes the\n    --  minimal perfect Hash function. The output is normally placed in the\n    --  current directory, in files X.ads and X.adb, where X is the standard"}, {"sha": "a8b3b5bec83a5727a2b015e467b7d3310f601a63", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "patch": "@@ -6208,8 +6208,8 @@ Comments that follow other tokens on a line must have at least one blank\n following the ``@code{--}'' at the start of the comment.\n \n @item\n-Full line comments must have two blanks following the ``@code{--}'' that\n-starts the comment, with the following exceptions.\n+Full line comments must have at least two blanks following the\n+``@code{--}'' that starts the comment, with the following exceptions.\n \n @item\n A line consisting only of the ``@code{--}'' characters, possibly preceded"}, {"sha": "76387b7923c07c7865d305c56aa732df606d1eb9", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 37, "deletions": 41, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -105,12 +105,13 @@ package body Prj.Util is\n    -------------------\n \n    function Executable_Of\n-     (Project  : Project_Id;\n-      In_Tree  : Project_Tree_Ref;\n-      Main     : File_Name_Type;\n-      Index    : Int;\n-      Ada_Main : Boolean := True;\n-      Language : String := \"\") return File_Name_Type\n+     (Project        : Project_Id;\n+      In_Tree        : Project_Tree_Ref;\n+      Main           : File_Name_Type;\n+      Index          : Int;\n+      Ada_Main       : Boolean := True;\n+      Language       : String := \"\";\n+      Include_Suffix : Boolean := True) return File_Name_Type\n    is\n       pragma Assert (Project /= No_Project);\n \n@@ -145,6 +146,10 @@ package body Prj.Util is\n          S_Suffix : File_Name_Type);\n       --  Get the non empty suffixes in variables Spec_Suffix and Body_Suffix\n \n+      function Add_Suffix (File : File_Name_Type) return File_Name_Type;\n+      --  Return the name of the executable, based on File, and adding the\n+      --  executable suffix if needed.\n+\n       ------------------\n       -- Get_Suffixes --\n       ------------------\n@@ -165,6 +170,29 @@ package body Prj.Util is\n          end if;\n       end Get_Suffixes;\n \n+      ----------------\n+      -- Add_Suffix --\n+      ----------------\n+\n+      function Add_Suffix (File : File_Name_Type) return File_Name_Type is\n+         Saved_EEOT : constant Name_Id := Executable_Extension_On_Target;\n+         Result     : File_Name_Type;\n+\n+      begin\n+         if Include_Suffix then\n+            if Executable_Suffix_Name /= No_Name then\n+               Executable_Extension_On_Target := Executable_Suffix_Name;\n+            end if;\n+\n+            Result :=  Executable_Name (File_Name_Type (Executable.Value));\n+            Executable_Extension_On_Target := Saved_EEOT;\n+            return Result;\n+\n+         else\n+            return File;\n+         end if;\n+      end Add_Suffix;\n+\n    --  Start of processing for Executable_Of\n \n    begin\n@@ -237,22 +265,7 @@ package body Prj.Util is\n            and then Executable.Value /= No_Name\n            and then Length_Of_Name (Executable.Value) /= 0\n          then\n-            --  Get the executable name. If Executable_Suffix is defined,\n-            --  make sure that it will be the extension of the executable.\n-\n-            declare\n-               Saved_EEOT : constant Name_Id := Executable_Extension_On_Target;\n-               Result     : File_Name_Type;\n-\n-            begin\n-               if Executable_Suffix_Name /= No_Name then\n-                  Executable_Extension_On_Target := Executable_Suffix_Name;\n-               end if;\n-\n-               Result :=  Executable_Name (File_Name_Type (Executable.Value));\n-               Executable_Extension_On_Target := Saved_EEOT;\n-               return Result;\n-            end;\n+            return Add_Suffix (File_Name_Type (Executable.Value));\n          end if;\n       end if;\n \n@@ -287,24 +300,7 @@ package body Prj.Util is\n          Get_Name_String (Strip_Suffix (Main));\n       end if;\n \n-      --  Get the executable name. If Executable_Suffix is defined in the\n-      --  configuration, make sure that it will be the extension of the\n-      --  executable.\n-\n-      declare\n-         Saved_EEOT : constant Name_Id := Executable_Extension_On_Target;\n-         Result     : File_Name_Type;\n-\n-      begin\n-         if Project.Config.Executable_Suffix /= No_Name then\n-            Executable_Extension_On_Target :=\n-              Project.Config.Executable_Suffix;\n-         end if;\n-\n-         Result := Executable_Name (Name_Find);\n-         Executable_Extension_On_Target := Saved_EEOT;\n-         return Result;\n-      end;\n+      return Add_Suffix (Name_Find);\n    end Executable_Of;\n \n    --------------"}, {"sha": "02d2cea6808c16f867309a5baf99c35d449b68ff", "filename": "gcc/ada/prj-util.ads", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fprj-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5dc610e6dd4695349a09d02e923ac6b45ba0cbb/gcc%2Fada%2Fprj-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.ads?ref=e5dc610e6dd4695349a09d02e923ac6b45ba0cbb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,20 +27,26 @@\n \n package Prj.Util is\n \n-   --  ??? throughout this spec, parameters are not well enough documented\n-\n    function Executable_Of\n-     (Project  : Project_Id;\n-      In_Tree  : Project_Tree_Ref;\n-      Main     : File_Name_Type;\n-      Index    : Int;\n-      Ada_Main : Boolean := True;\n-      Language : String := \"\") return File_Name_Type;\n+     (Project        : Project_Id;\n+      In_Tree        : Project_Tree_Ref;\n+      Main           : File_Name_Type;\n+      Index          : Int;\n+      Ada_Main       : Boolean := True;\n+      Language       : String := \"\";\n+      Include_Suffix : Boolean := True) return File_Name_Type;\n    --  Return the value of the attribute Builder'Executable for file Main in\n    --  the project Project, if it exists. If there is no attribute Executable\n    --  for Main, remove the suffix from Main; then, if the attribute\n    --  Executable_Suffix is specified, add this suffix, otherwise add the\n    --  standard executable suffix for the platform.\n+   --\n+   --  If Include_Suffix is true, then the \".exe\" suffix (or any suffix defined\n+   --  in the config and project files) will be added. Otherwise, such a suffix\n+   --  is not added. In particular, the prefix should not be added if you are\n+   --  potentially testing for cross-platforms, since the suffix might not be\n+   --  known (its default value comes from the ...-gnatmake prefix).\n+   --\n    --  What is Ada_Main???\n    --  What is Language???\n \n@@ -60,8 +66,8 @@ package Prj.Util is\n    function Value_Of\n      (Variable : Variable_Value;\n       Default  : String) return String;\n-   --  Get the value of a single string variable. If Variable is\n-   --  Nil_Variable_Value, is a string list or is defaulted, return Default.\n+   --  Get the value of a single string variable. If Variable is a string list,\n+   --  is Nil_Variable_Value,or is defaulted, return Default.\n \n    function Value_Of\n      (Index    : Name_Id;"}]}