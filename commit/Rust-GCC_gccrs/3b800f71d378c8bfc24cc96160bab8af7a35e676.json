{"sha": "3b800f71d378c8bfc24cc96160bab8af7a35e676", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I4MDBmNzFkMzc4YzhiZmMyNGNjOTYxNjBiYWI4YWY3YTM1ZTY3Ng==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-03-20T19:25:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-03-20T19:25:46Z"}, "message": "mn10300.md (cmpsi): Handle comparing a register with itself by adding zero to the reg.\n\n        * mn10300/mn10300.md (cmpsi): Handle comparing a register with\n        itself by adding zero to the reg.  Z bit for such an insn is\n        inverted.\n        * mn10300/mn10300.c (notice_update_cc): Handle CC_INVERT.\n\nFrom-SVN: r13755", "tree": {"sha": "ad34ecc354c75e53df6b3450dedf3b0c43e7e5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad34ecc354c75e53df6b3450dedf3b0c43e7e5da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b800f71d378c8bfc24cc96160bab8af7a35e676", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b800f71d378c8bfc24cc96160bab8af7a35e676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b800f71d378c8bfc24cc96160bab8af7a35e676", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b800f71d378c8bfc24cc96160bab8af7a35e676/comments", "author": null, "committer": null, "parents": [{"sha": "5ae4759c1c78d6d92aaa51e65a249fbc43696267", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae4759c1c78d6d92aaa51e65a249fbc43696267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae4759c1c78d6d92aaa51e65a249fbc43696267"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "517a560d2c4d897294ddc19524b505e1c4fb2c0e", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b800f71d378c8bfc24cc96160bab8af7a35e676/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b800f71d378c8bfc24cc96160bab8af7a35e676/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=3b800f71d378c8bfc24cc96160bab8af7a35e676", "patch": "@@ -442,6 +442,13 @@ notice_update_cc (body, insn)\n       cc_status.value1 = SET_SRC (body);\n       break;\n \n+    case CC_INVERT:\n+      /* The insn is a compare instruction.  */\n+      CC_STATUS_INIT;\n+      cc_status.value1 = SET_SRC (body);\n+      cc_status.flags |= CC_INVERTED;\n+      break;\n+\n     case CC_CLOBBER:\n       /* Insn doesn't leave CC in a usable state.  */\n       CC_STATUS_INIT;"}, {"sha": "477e99f3c9ccad41ed909487d54902e0bb1af664", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b800f71d378c8bfc24cc96160bab8af7a35e676/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b800f71d378c8bfc24cc96160bab8af7a35e676/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=3b800f71d378c8bfc24cc96160bab8af7a35e676", "patch": "@@ -35,8 +35,9 @@\n ;; set_zn_c0 - insn sets z,n to usable values.  v is unknown.  c may or may not\n ;;\tbe known (if it isn't that's ok, we don't need it anyway).\n ;; compare - compare instruction\n+;; invert -- like compare, but flags are inverted.\n ;; clobber - value of cc is unknown\n-(define_attr \"cc\" \"none,none_0hit,tst,set_zn_c0,compare,clobber\"\n+(define_attr \"cc\" \"none,none_0hit,tst,set_zn_c0,compare,clobber,invert\"\n   (const_string \"clobber\"))\n \f\n ;; ----------------------------------------------------------------------\n@@ -243,11 +244,13 @@\n \n (define_insn \"cmpsi\"\n   [(set (cc0)\n-\t(compare (match_operand:SI 0 \"register_operand\" \"da\")\n-\t\t (match_operand:SI 1 \"nonmemory_operand\" \"dai\")))]\n+\t(compare (match_operand:SI 0 \"register_operand\" \"!*d*a,da\")\n+\t\t (match_operand:SI 1 \"nonmemory_operand\" \"!*0,dai\")))]\n   \"\"\n-  \"cmp %1,%0\"\n-  [(set_attr \"cc\" \"compare\")])\n+  \"@\n+  add 0,%0\n+  cmp %1,%0\"\n+  [(set_attr \"cc\" \"invert,compare\")])\n \f\n ;; ----------------------------------------------------------------------\n ;; ADD INSTRUCTIONS"}]}