{"sha": "93d046861d42e9779905f7db3c575923290eedf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNkMDQ2ODYxZDQyZTk3Nzk5MDVmN2RiM2M1NzU5MjMyOTBlZWRmMg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-10-09T16:53:54Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-10-09T16:53:54Z"}, "message": "[multiple changes]\n\n\n2003-10-09  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* src/string-inst.cc: Prune.\n\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust line numbers.\n\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Same.\n\n2003-10-09  Petur Runolfsson  <peturr02@ru.is>\n\n\t* src/io-inst.cc: Don't include iostream.\n\t* include/bits/ios_base.h (ios_base::failure): Use string.\n\t* src/Makefile.am: Add ios_failure.cc.\n\t* src/Makefile.in: Regenerate.\n\t* src/ios.cc: Move ios_base::failure definitions to...\n\t* src/ios_failure.cc: ...here. New.\n\nFrom-SVN: r72272", "tree": {"sha": "d66520149afd41bf890245116855af0b2dccbd95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d66520149afd41bf890245116855af0b2dccbd95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93d046861d42e9779905f7db3c575923290eedf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93d046861d42e9779905f7db3c575923290eedf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93d046861d42e9779905f7db3c575923290eedf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93d046861d42e9779905f7db3c575923290eedf2/comments", "author": null, "committer": null, "parents": [{"sha": "b379e7b0e97d9355f3965c740270d9196efe1b2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b379e7b0e97d9355f3965c740270d9196efe1b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b379e7b0e97d9355f3965c740270d9196efe1b2b"}], "stats": {"total": 131, "additions": 73, "deletions": 58}, "files": [{"sha": "f4a6f5b268259d1b0a4778c6f4afe6596011ef18", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -1,3 +1,18 @@\n+2003-10-09  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* src/string-inst.cc: Prune.\n+\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust line numbers.\n+\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Same.\n+\t\n+2003-10-09  Petur Runolfsson  <peturr02@ru.is>\n+\n+\t* src/io-inst.cc: Don't include iostream.\n+\t* include/bits/ios_base.h (ios_base::failure): Use string.\n+\t* src/Makefile.am: Add ios_failure.cc.\n+\t* src/Makefile.in: Regenerate.\n+\t* src/ios.cc: Move ios_base::failure definitions to...\n+\t* src/ios_failure.cc: ...here. New.\n+\n 2003-10-09  Petur Runolfsson  <peturr02@ru.is>\n \n \tPR libstdc++/9874"}, {"sha": "43e5f9db93645fc72d3e06a2e90b350597eb4f39", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -29,7 +29,7 @@\n // the GNU General Public License.\n \n //\n-// ISO C++ 14882: 27.8  File-based streams\n+// ISO C++ 14882: 27.4  Iostreams base classes\n //\n \n /** @file ios_base.h\n@@ -178,8 +178,7 @@ namespace std\n       what() const throw();\n       \n     private:\n-      enum { _S_bufsize = 256 };\n-      char _M_name[_S_bufsize];\n+      string _M_msg;\n #endif\n     };\n "}, {"sha": "a79b6df0d2bb436a5dab153aad56a1a4499e3f82", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -103,6 +103,7 @@ sources = \\\n \tglobals.cc \\\n \tio-inst.cc \\\n \tios.cc \\\n+\tios_failure.cc \\\n \tistream-inst.cc \\\n \tlimits.cc \\\n \tlocale.cc \\"}, {"sha": "7a10f85535238f81b9136581e7c2fc18ade287e9", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -262,6 +262,7 @@ sources = \\\n \tglobals.cc \\\n \tio-inst.cc \\\n \tios.cc \\\n+\tios_failure.cc \\\n \tistream-inst.cc \\\n \tlimits.cc \\\n \tlocale.cc \\\n@@ -357,7 +358,7 @@ am__objects_2 = basic_file.lo c++locale.lo\n am__objects_3 = allocator-inst.lo codecvt.lo complex_io.lo \\\n \tconcept-inst.lo ctype.lo demangle.lo ext-inst.lo \\\n \tfstream-inst.lo functexcept.lo globals.lo io-inst.lo ios.lo \\\n-\tistream-inst.lo limits.lo locale.lo locale-inst.lo \\\n+\tios_failure.lo istream-inst.lo limits.lo locale.lo locale-inst.lo \\\n \tlocalename.lo misc-inst.lo ostream-inst.lo sstream-inst.lo \\\n \tstdexcept.lo stl_tree.lo streambuf-inst.lo string-inst.lo \\\n \tstrstream.lo valarray-inst.lo wstring-inst.lo $(am__objects_1) \\"}, {"sha": "0b407ef36309c42ed6100a14fcb5877bf2ee4db2", "filename": "libstdc++-v3/src/io-inst.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2Fio-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2Fio-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fio-inst.cc?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -1,6 +1,6 @@\n // Explicit instantiation file.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -34,7 +34,6 @@\n \n #include <ios>\n #include <iomanip>\n-#include <iostream>\n \n namespace std\n {"}, {"sha": "ee282053aeac0b0446f3f2b3f55488358213a852", "filename": "libstdc++-v3/src/ios.cc", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios.cc?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -149,19 +149,6 @@ namespace std\n   int ios_base::Init::_S_ios_base_init = 0;\n   bool ios_base::Init::_S_synced_with_stdio = true;\n \n-  ios_base::failure::failure(const string& __str) throw()\n-  {\n-    strncpy(_M_name, __str.c_str(), _S_bufsize);\n-    _M_name[_S_bufsize - 1] = '\\0';\n-  }\n-\n-  ios_base::failure::~failure() throw()\n-  { }\n-\n-  const char*\n-  ios_base::failure::what() const throw()\n-  { return _M_name; }\n-\n   ios_base::Init::Init()\n   {\n     if (_S_ios_base_init == 0)\n@@ -398,4 +385,4 @@ namespace std\n       }\n     return __ret; \n   }\n-}  // namespace std\n+} // namespace std"}, {"sha": "0d99ba303b8beec543f8556a27c0b5e3fc692486", "filename": "libstdc++-v3/src/ios_failure.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2Fios_failure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2Fios_failure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios_failure.cc?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -0,0 +1,48 @@\n+// Iostreams base classes -*- C++ -*-\n+\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 27.4.2.1.1  Class ios_base::failure\n+//\n+\n+#include <ios>\n+\n+namespace std \n+{\n+  ios_base::failure::failure(const string& __str) throw()\n+  : _M_msg(__str) { }\n+\n+  ios_base::failure::~failure() throw()\n+  { }\n+  \n+  const char*\n+  ios_base::failure::what() const throw()\n+  { return _M_msg.c_str(); }\n+} // namespace std"}, {"sha": "ec17e54c3d24d567a9740222264511ce409b38d4", "filename": "libstdc++-v3/src/string-inst.cc", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -1,6 +1,6 @@\n // Components for manipulating sequences of characters -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -73,23 +73,6 @@ namespace std\n   template \n     S::basic_string(S::iterator, S::iterator, const allocator<C>&);\n \n-  template \n-    S::basic_string(S::const_iterator, S::const_iterator, const allocator<C>&);\n-\n-  template \n-    S& \n-    S::_M_replace(S::iterator, S::iterator, S::iterator, S::iterator, \n-\t\t  input_iterator_tag);\n-\n-  template \n-    S& \n-    S::_M_replace(S::iterator, S::iterator, S::const_iterator, \n-\t\t  S::const_iterator, input_iterator_tag);\n-\n-  template\n-    S&\n-    S::_M_replace(S::iterator, S::iterator, C*, C*, input_iterator_tag); \n-\n   template\n     S&\n     S::_M_replace(S::iterator, S::iterator, const C*, const C*, \n@@ -99,15 +82,6 @@ namespace std\n     S& \n     S::_M_replace_safe(S::iterator, S::iterator, S::iterator, S::iterator);\n \n-  template \n-    S& \n-    S::_M_replace_safe(S::iterator, S::iterator, S::const_iterator, \n-\t\t  S::const_iterator);\n-\n-  template\n-    S&\n-    S::_M_replace_safe(S::iterator, S::iterator, C*, C*); \n-\n   template\n     S&\n     S::_M_replace_safe(S::iterator, S::iterator, const C*, const C*);  \n@@ -117,11 +91,6 @@ namespace std\n     S::_S_construct(S::iterator, S::iterator, \n \t\t    const allocator<C>&, forward_iterator_tag);\n \n-  template \n-    C* \n-    S::_S_construct(S::const_iterator, S::const_iterator, \n-\t\t    const allocator<C>&, forward_iterator_tag);\n-\n   template\n     C*\n     S::_S_construct(C*, C*, const allocator<C>&, forward_iterator_tag);\n@@ -130,8 +99,4 @@ namespace std\n     C*\n     S::_S_construct(const C*, const C*, const allocator<C>&,\n \t\t    forward_iterator_tag);\n-\n-  template\n-    void\n-    __destroy_aux<S*>(S*, S*, __false_type);\n } // namespace std"}, {"sha": "fe7a8ef9cc893b1f78f5ecfa8a803184a4715186", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -41,5 +41,5 @@ void test01()\n   io1 = io2;\n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 41 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 748 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 747 } \n // { dg-error \"operator=\" \"\" { target *-*-* } 0 } "}, {"sha": "55033f950d186d0ca89dcc2d78e2c97d5b51d8e4", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93d046861d42e9779905f7db3c575923290eedf2/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc?ref=93d046861d42e9779905f7db3c575923290eedf2", "patch": "@@ -41,5 +41,5 @@ void test02()\n   test_base io2 = io1; \n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 41 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 745 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 744 } \n // { dg-error \"copy constructor\" \"\" { target *-*-* } 0 } "}]}