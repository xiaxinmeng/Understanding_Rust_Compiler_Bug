{"sha": "446703ccc2ce09e9710964f781a21030bf3c2d54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ2NzAzY2NjMmNlMDllOTcxMDk2NGY3ODFhMjEwMzBiZjNjMmQ1NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-15T13:20:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-15T14:07:43Z"}, "message": "tree-optimization/96376 - do not check alignment for invariant loads\n\nThe testcases show that we fail to disregard alignment for invariant\nloads.  The patch handles them like we handle gather and scatter.\n\n2021-01-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/96376\n\t* tree-vect-stmts.c (get_load_store_type): Disregard alignment\n\tfor VMAT_INVARIANT.", "tree": {"sha": "0480e330b41566cac5233685f672f32fb77817fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0480e330b41566cac5233685f672f32fb77817fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/446703ccc2ce09e9710964f781a21030bf3c2d54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/446703ccc2ce09e9710964f781a21030bf3c2d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/446703ccc2ce09e9710964f781a21030bf3c2d54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/446703ccc2ce09e9710964f781a21030bf3c2d54/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc8475e3348405ce3113364746b64d029a05c343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc8475e3348405ce3113364746b64d029a05c343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc8475e3348405ce3113364746b64d029a05c343"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "f180ced312443ba1e698932d5e8362208690b3fc", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446703ccc2ce09e9710964f781a21030bf3c2d54/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446703ccc2ce09e9710964f781a21030bf3c2d54/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=446703ccc2ce09e9710964f781a21030bf3c2d54", "patch": "@@ -2378,19 +2378,26 @@ get_load_store_type (vec_info  *vinfo, stmt_vec_info stmt_info,\n   else\n     {\n       int cmp = compare_step_with_zero (vinfo, stmt_info);\n-      if (cmp < 0)\n-\t*memory_access_type = get_negative_load_store_type\n-\t  (vinfo, stmt_info, vectype, vls_type, ncopies);\n-      else if (cmp == 0)\n+      if (cmp == 0)\n \t{\n \t  gcc_assert (vls_type == VLS_LOAD);\n \t  *memory_access_type = VMAT_INVARIANT;\n+\t  /* Invariant accesses perform only component accesses, alignment\n+\t     is irrelevant for them.  */\n+\t  *alignment_support_scheme = dr_unaligned_supported;\n \t}\n       else\n-\t*memory_access_type = VMAT_CONTIGUOUS;\n-      *alignment_support_scheme\n-\t= vect_supportable_dr_alignment (vinfo,\n-\t\t\t\t\t STMT_VINFO_DR_INFO (stmt_info), false);\n+\t{\n+\t  if (cmp < 0)\n+\t    *memory_access_type = get_negative_load_store_type\n+\t       (vinfo, stmt_info, vectype, vls_type, ncopies);\n+\t  else\n+\t    *memory_access_type = VMAT_CONTIGUOUS;\n+\t  *alignment_support_scheme\n+\t    = vect_supportable_dr_alignment (vinfo,\n+\t\t\t\t\t     STMT_VINFO_DR_INFO (stmt_info),\n+\t\t\t\t\t     false);\n+\t}\n     }\n \n   if ((*memory_access_type == VMAT_ELEMENTWISE"}]}