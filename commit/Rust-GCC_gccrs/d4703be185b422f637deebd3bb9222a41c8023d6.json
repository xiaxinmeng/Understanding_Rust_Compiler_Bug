{"sha": "d4703be185b422f637deebd3bb9222a41c8023d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ3MDNiZTE4NWI0MjJmNjM3ZGVlYmQzYmI5MjIyYTQxYzgwMjNkNg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-09-22T11:00:38Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-09-22T11:00:38Z"}, "message": "AArch64: Implement missing vceq*_p* intrinsics\n\nThis patch implements some missing vceq* intrinsics on poly types.\nThe behaviour is to produce the appropriate CMEQ instruction as for the unsigned types.\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\ngcc/\n\tPR target/71233\n\t* config/aarch64/arm_neon.h (vceqq_p64, vceqz_p64, vceqzq_p64): Define.\n\ngcc/testsuite/\n\n\tPR target/71233\n\t* gcc.target/aarch64/simd/vceq_poly_1.c: New test.", "tree": {"sha": "8bdead459e0e8a5281254bcf86d977509d657f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bdead459e0e8a5281254bcf86d977509d657f1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4703be185b422f637deebd3bb9222a41c8023d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4703be185b422f637deebd3bb9222a41c8023d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4703be185b422f637deebd3bb9222a41c8023d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4703be185b422f637deebd3bb9222a41c8023d6/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa9ad35dae03dcb20c4ccb50ba1b351a8ab77970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9ad35dae03dcb20c4ccb50ba1b351a8ab77970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9ad35dae03dcb20c4ccb50ba1b351a8ab77970"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "caeba10d435393b7a98fcb4946fdc60ada6159ec", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4703be185b422f637deebd3bb9222a41c8023d6/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4703be185b422f637deebd3bb9222a41c8023d6/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=d4703be185b422f637deebd3bb9222a41c8023d6", "patch": "@@ -12670,6 +12670,13 @@ vceqq_u64 (uint64x2_t __a, uint64x2_t __b)\n   return (__a == __b);\n }\n \n+__extension__ extern __inline uint64x2_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vceqq_p64 (poly64x2_t __a, poly64x2_t __b)\n+{\n+  return (__a == __b);\n+}\n+\n /* vceq - scalar.  */\n \n __extension__ extern __inline uint32_t\n@@ -12779,6 +12786,13 @@ vceqz_u64 (uint64x1_t __a)\n   return (__a == __AARCH64_UINT64_C (0));\n }\n \n+__extension__ extern __inline uint64x1_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vceqz_p64 (poly64x1_t __a)\n+{\n+  return (__a == __AARCH64_UINT64_C (0));\n+}\n+\n __extension__ extern __inline uint32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vceqzq_f32 (float32x4_t __a)\n@@ -12856,6 +12870,13 @@ vceqzq_u64 (uint64x2_t __a)\n   return (__a == __AARCH64_UINT64_C (0));\n }\n \n+__extension__ extern __inline uint64x2_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vceqzq_p64 (poly64x2_t __a)\n+{\n+  return (__a == __AARCH64_UINT64_C (0));\n+}\n+\n /* vceqz - scalar.  */\n \n __extension__ extern __inline uint32_t"}, {"sha": "7d43352266c29f2c076dcd0b49b992495f3edb19", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vceq_poly_1.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4703be185b422f637deebd3bb9222a41c8023d6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvceq_poly_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4703be185b422f637deebd3bb9222a41c8023d6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvceq_poly_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvceq_poly_1.c?ref=d4703be185b422f637deebd3bb9222a41c8023d6", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+#include <arm_neon.h>\n+\n+uint64x2_t\n+foo (poly64x2_t a, poly64x2_t b)\n+{\n+  return vceqq_p64 (a, b);\n+}\n+\n+/* { dg-final { scan-assembler-times \"cmeq\\\\tv\\[0-9\\]+\\.2d, v\\[0-9\\]+\\.2d, v\\[0-9\\]+\\.2d\" 1 } } */\n+\n+uint64x1_t\n+fooz (poly64x1_t a)\n+{\n+  return vceqz_p64 (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"cmeq\\\\td\\[0-9\\]+, d\\[0-9\\]+, #0\" 1 } } */\n+\n+uint64x2_t\n+fooqz (poly64x2_t a)\n+{\n+  return vceqzq_p64 (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"cmeq\\\\tv\\[0-9\\]+\\.2d, v\\[0-9\\]+\\.2d, #0\" 1 } } */\n+"}]}