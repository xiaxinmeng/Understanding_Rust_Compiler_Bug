{"sha": "473e10621f06ef6cfd82f3875224c4b82c2eb7cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDczZTEwNjIxZjA2ZWY2Y2ZkODJmMzg3NTIyNGM0YjgyYzJlYjdjZg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2008-07-30T07:44:09Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2008-07-30T07:44:09Z"}, "message": "scan.c (make_sstring_space): Add explicit conversions of allocator's return value.\n\n\t* scan.c (make_sstring_space): Add explicit conversions of\n\tallocator's return value.\n\t* fix-header.c (recognized_function): Likewise.\n\nFrom-SVN: r138295", "tree": {"sha": "5e51c8843a15f222aee2c5686f72ccdd40da0109", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e51c8843a15f222aee2c5686f72ccdd40da0109"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/473e10621f06ef6cfd82f3875224c4b82c2eb7cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473e10621f06ef6cfd82f3875224c4b82c2eb7cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/473e10621f06ef6cfd82f3875224c4b82c2eb7cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473e10621f06ef6cfd82f3875224c4b82c2eb7cf/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "19e2f3b0f26bb3f943c948f2e179375a99f1c7c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473e10621f06ef6cfd82f3875224c4b82c2eb7cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473e10621f06ef6cfd82f3875224c4b82c2eb7cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=473e10621f06ef6cfd82f3875224c4b82c2eb7cf", "patch": "@@ -1,3 +1,9 @@\n+2008-07-30  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* scan.c (make_sstring_space): Add explicit conversions of\n+\tallocator's return value.\n+\t* fix-header.c (recognized_function): Likewise.\n+\n 2008-07-30  Laurent Guerby  <laurent@guerby.net>\n \n         PR ada/5911"}, {"sha": "5402e949db47288d6b680fa043859324d1856e57", "filename": "gcc/fix-header.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473e10621f06ef6cfd82f3875224c4b82c2eb7cf/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473e10621f06ef6cfd82f3875224c4b82c2eb7cf/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=473e10621f06ef6cfd82f3875224c4b82c2eb7cf", "patch": "@@ -562,7 +562,10 @@ recognized_function (const cpp_token *fname, unsigned int line, int kind,\n   /* We only have a partial function declaration,\n      so remember that we have to add a complete prototype.  */\n   partial_count++;\n-  partial = obstack_alloc (&scan_file_obstack, sizeof (struct partial_proto));\n+  partial\n+    = (struct partial_proto *)\n+      obstack_alloc (&scan_file_obstack,\n+\t \t     sizeof (struct partial_proto));\n   partial->line_seen = line;\n   partial->fn = fn;\n   fn->partial = partial;"}, {"sha": "c6d04716271f3c22995d8338421c9f8b1458fec5", "filename": "gcc/scan.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473e10621f06ef6cfd82f3875224c4b82c2eb7cf/gcc%2Fscan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473e10621f06ef6cfd82f3875224c4b82c2eb7cf/gcc%2Fscan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan.c?ref=473e10621f06ef6cfd82f3875224c4b82c2eb7cf", "patch": "@@ -35,7 +35,7 @@ make_sstring_space (sstring *str, int count)\n   if (new_size <= cur_size)\n     return;\n \n-  str->base = xrealloc (str->base, new_size);\n+  str->base = (char *) xrealloc (str->base, new_size);\n   str->ptr = str->base + cur_size;\n   str->limit = str->base + new_size;\n }"}]}