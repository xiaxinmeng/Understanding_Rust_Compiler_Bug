{"sha": "897bb55fe36f6908d336f79c9853f1dd16058790", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk3YmI1NWZlMzZmNjkwOGQzMzZmNzljOTg1M2YxZGQxNjA1ODc5MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2001-12-13T00:41:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2001-12-13T00:41:03Z"}, "message": "ropeimpl.h (rope::_S_leaf_concat_char_iter, [...]): Adjust implicit typename.\n\n2001-12-12  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/ext/ropeimpl.h (rope::_S_leaf_concat_char_iter,\n\t_S_destr_leaf_concat_char_iter, _S_tree_concat, _S_concat_char_iter,\n\t_S_destr_concat_char_iter, _S_concat, _S_substring, _S_balance)\n\t: Adjust implicit typename.\n\t* include/ext/stl_rope.h (_Rope_iterator::operator=, rope::npos):\n\tAdjust implicit typename.\n\t* testsuite/27_io/streambuf.cc: Adjust implicit typename.\n\nFrom-SVN: r47958", "tree": {"sha": "a931c7e0dc998672b77babd59b21fa472394dd63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a931c7e0dc998672b77babd59b21fa472394dd63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/897bb55fe36f6908d336f79c9853f1dd16058790", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/897bb55fe36f6908d336f79c9853f1dd16058790", "html_url": "https://github.com/Rust-GCC/gccrs/commit/897bb55fe36f6908d336f79c9853f1dd16058790", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/897bb55fe36f6908d336f79c9853f1dd16058790/comments", "author": null, "committer": null, "parents": [{"sha": "5742588d23cb1e1409c780e71e2b4b2ac8093190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5742588d23cb1e1409c780e71e2b4b2ac8093190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5742588d23cb1e1409c780e71e2b4b2ac8093190"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "25078d4f101a5c877c73ca66e0cba627d330d045", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897bb55fe36f6908d336f79c9853f1dd16058790/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897bb55fe36f6908d336f79c9853f1dd16058790/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=897bb55fe36f6908d336f79c9853f1dd16058790", "patch": "@@ -1,3 +1,13 @@\n+2001-12-12  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/ext/ropeimpl.h (rope::_S_leaf_concat_char_iter,\n+\t_S_destr_leaf_concat_char_iter, _S_tree_concat, _S_concat_char_iter,\n+\t_S_destr_concat_char_iter, _S_concat, _S_substring, _S_balance)\n+\t: Adjust implicit typename.\n+\t* include/ext/stl_rope.h (_Rope_iterator::operator=, rope::npos):\n+\tAdjust implicit typename.\n+\t* testsuite/27_io/streambuf.cc: Adjust implicit typename.\n+\n 2001-12-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tNamed locale support for ctype<char>."}, {"sha": "f1e84edc976e76734d7d991d047aa8b383c0d349", "filename": "libstdc++-v3/include/ext/ropeimpl.h", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897bb55fe36f6908d336f79c9853f1dd16058790/libstdc%2B%2B-v3%2Finclude%2Fext%2Fropeimpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897bb55fe36f6908d336f79c9853f1dd16058790/libstdc%2B%2B-v3%2Finclude%2Fext%2Fropeimpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fropeimpl.h?ref=897bb55fe36f6908d336f79c9853f1dd16058790", "patch": "@@ -390,7 +390,7 @@ template <class _CharT, class _Alloc>\n // Concatenate a C string onto a leaf rope by copying the rope data.\n // Used for short ropes.\n template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeLeaf*\n+typename rope<_CharT,_Alloc>::_RopeLeaf*\n rope<_CharT,_Alloc>::_S_leaf_concat_char_iter\n \t\t(_RopeLeaf* __r, const _CharT* __iter, size_t __len)\n {\n@@ -418,7 +418,7 @@ rope<_CharT,_Alloc>::_S_leaf_concat_char_iter\n #ifndef __GC\n // As above, but it's OK to clobber original if refcount is 1\n template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeLeaf*\n+typename rope<_CharT,_Alloc>::_RopeLeaf*\n rope<_CharT,_Alloc>::_S_destr_leaf_concat_char_iter\n \t\t(_RopeLeaf* __r, const _CharT* __iter, size_t __len)\n {\n@@ -449,7 +449,7 @@ rope<_CharT,_Alloc>::_S_destr_leaf_concat_char_iter\n // Does not increment (nor decrement on exception) child reference counts.\n // Result has ref count 1.\n template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep*\n+typename rope<_CharT,_Alloc>::_RopeRep*\n rope<_CharT,_Alloc>::_S_tree_concat (_RopeRep* __left, _RopeRep* __right)\n {\n   _RopeConcatenation* __result = _S_new_RopeConcatenation(__left, __right, \n@@ -482,6 +482,7 @@ rope<_CharT,_Alloc>::_S_tree_concat (_RopeRep* __left, _RopeRep* __right)\n }\n \n template <class _CharT, class _Alloc>\n+typename\n rope<_CharT,_Alloc>::_RopeRep* rope<_CharT,_Alloc>::_S_concat_char_iter\n \t\t(_RopeRep* __r, const _CharT*__s, size_t __slen)\n {\n@@ -536,7 +537,7 @@ rope<_CharT,_Alloc>::_RopeRep* rope<_CharT,_Alloc>::_S_concat_char_iter\n \n #ifndef __GC\n template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep* \n+typename rope<_CharT,_Alloc>::_RopeRep* \n rope<_CharT,_Alloc>::_S_destr_concat_char_iter(\n   _RopeRep* __r, const _CharT* __s, size_t __slen)\n {\n@@ -593,7 +594,7 @@ rope<_CharT,_Alloc>::_S_destr_concat_char_iter(\n #endif /* !__GC */\n \n template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep*\n+typename rope<_CharT,_Alloc>::_RopeRep*\n rope<_CharT,_Alloc>::_S_concat(_RopeRep* __left, _RopeRep* __right)\n {\n     if (0 == __left) {\n@@ -648,7 +649,7 @@ rope<_CharT,_Alloc>::_S_concat(_RopeRep* __left, _RopeRep* __right)\n }\n \n template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep*\n+typename rope<_CharT,_Alloc>::_RopeRep*\n rope<_CharT,_Alloc>::_S_substring(_RopeRep* __base, \n                                size_t __start, size_t __endp1)\n {\n@@ -1073,7 +1074,7 @@ rope<_CharT,_Alloc>::_S_min_len[\n // These are Fibonacci numbers < 2**32.\n \n template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep*\n+typename rope<_CharT,_Alloc>::_RopeRep*\n rope<_CharT,_Alloc>::_S_balance(_RopeRep* __r)\n {\n     _RopeRep* __forest[_RopeRep::_S_max_rope_depth + 1];"}, {"sha": "23cc7e40f724e38abaf31ed4976b9ff9a1fe22ce", "filename": "libstdc++-v3/include/ext/stl_rope.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897bb55fe36f6908d336f79c9853f1dd16058790/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstl_rope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897bb55fe36f6908d336f79c9853f1dd16058790/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstl_rope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstl_rope.h?ref=897bb55fe36f6908d336f79c9853f1dd16058790", "patch": "@@ -1055,7 +1055,8 @@ class _Rope_iterator : public _Rope_iterator_base<_CharT,_Alloc> {\n         _RopeRep::_S_unref(_M_root);\n     }\n     _Rope_iterator& operator= (const _Rope_iterator& __x) {\n-        _RopeRep* __old = _M_root;\n+        typename\n+\t  _Rope_iterator_base<_CharT,_Alloc>::_RopeRep* __old = _M_root;\n \n         _RopeRep::_S_ref(__x._M_root);\n         if (0 != __x._M_buf_ptr) {\n@@ -2183,7 +2184,7 @@ class rope : public _Rope_base<_CharT,_Alloc> {\n };\n \n template <class _CharT, class _Alloc>\n-const rope<_CharT, _Alloc>::size_type rope<_CharT, _Alloc>::npos =\n+const typename rope<_CharT, _Alloc>::size_type rope<_CharT, _Alloc>::npos =\n                         (size_type)(-1);\n \n template <class _CharT, class _Alloc>"}, {"sha": "a560390fdc71cf478f76f7318242f5cf0d5798a8", "filename": "libstdc++-v3/testsuite/27_io/streambuf.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/897bb55fe36f6908d336f79c9853f1dd16058790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstreambuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/897bb55fe36f6908d336f79c9853f1dd16058790/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstreambuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstreambuf.cc?ref=897bb55fe36f6908d336f79c9853f1dd16058790", "patch": "@@ -197,6 +197,8 @@ template<typename charT, typename traits = std::char_traits<charT> >\n   class basic_nullbuf : public std::basic_streambuf<charT, traits>\n   {\n   protected:\n+    typedef typename\n+      std::basic_streambuf<charT, traits>::int_type int_type;\n     virtual int_type \n     overflow(int_type c) \n     {  return traits::not_eof(c); }"}]}