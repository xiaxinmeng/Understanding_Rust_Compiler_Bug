{"sha": "8202c8c4e940420fcbed15cf0397323e9131e15a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIwMmM4YzRlOTQwNDIwZmNiZWQxNWNmMDM5NzMyM2U5MTMxZTE1YQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-08-13T16:52:27Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-08-13T16:52:27Z"}, "message": "sh.c (sh_init_builtins): Add PARAMS to declaration.\n\n\t* sh.c (sh_init_builtins): Add PARAMS to declaration.\n\t(sh_media_init_builtins, sh_expand_builtin): Likewise.\n\t(sh_expand_unop_v2sf): Use PARAMS for variable declaration.\n\t(sh_expand_binop_v2sf): Likewise.\n\t* sh-protos.h (sh_expand_unop_v2sf): Add PARAMS to declaration.\n\t(sh_expand_binop_v2sf, sh_cfun_interrupt_handler_p): Likewise.\n\t(sh_initialize_trampoline): Likewise.\n\nFrom-SVN: r56259", "tree": {"sha": "9c55a42675a2cf4361aa571c25d55866da0495bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c55a42675a2cf4361aa571c25d55866da0495bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8202c8c4e940420fcbed15cf0397323e9131e15a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8202c8c4e940420fcbed15cf0397323e9131e15a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8202c8c4e940420fcbed15cf0397323e9131e15a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8202c8c4e940420fcbed15cf0397323e9131e15a/comments", "author": null, "committer": null, "parents": [{"sha": "22eadedb9d1c48bf20b21d2f71c7e5815317a0cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22eadedb9d1c48bf20b21d2f71c7e5815317a0cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22eadedb9d1c48bf20b21d2f71c7e5815317a0cb"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "cd38b3c950408ca5eb66af45d928f9e836309ff6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202c8c4e940420fcbed15cf0397323e9131e15a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202c8c4e940420fcbed15cf0397323e9131e15a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8202c8c4e940420fcbed15cf0397323e9131e15a", "patch": "@@ -1,3 +1,13 @@\n+Tue Aug 13 17:40:25 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.c (sh_init_builtins): Add PARAMS to declaration.\n+\t(sh_media_init_builtins, sh_expand_builtin): Likewise.\n+\t(sh_expand_unop_v2sf): Use PARAMS for variable declaration.\n+\t(sh_expand_binop_v2sf): Likewise.\n+\t* sh-protos.h (sh_expand_unop_v2sf): Add PARAMS to declaration.\n+\t(sh_expand_binop_v2sf, sh_cfun_interrupt_handler_p): Likewise.\n+\t(sh_initialize_trampoline): Likewise.\n+\n 2002-08-13  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* s390-modes.def [CCL1, CCL2, CCT1, CCT2, CCT3, CCUR, CCSR]: Declare"}, {"sha": "a2152efa2f41c8f4c39284eb0c912a8c1109fab5", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202c8c4e940420fcbed15cf0397323e9131e15a/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202c8c4e940420fcbed15cf0397323e9131e15a/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=8202c8c4e940420fcbed15cf0397323e9131e15a", "patch": "@@ -100,8 +100,8 @@ extern void expand_df_binop PARAMS ((rtx (*)(rtx, rtx, rtx, rtx), rtx *));\n extern void expand_fp_branch PARAMS ((rtx (*)(void), rtx (*)(void)));\n extern int sh_insn_length_adjustment PARAMS ((rtx));\n extern int sh_can_redirect_branch PARAMS ((rtx, rtx));\n-extern void sh_expand_unop_v2sf (enum rtx_code, rtx, rtx);\n-extern void sh_expand_binop_v2sf (enum rtx_code, rtx, rtx, rtx);\n+extern void sh_expand_unop_v2sf PARAMS ((enum rtx_code, rtx, rtx));\n+extern void sh_expand_binop_v2sf PARAMS ((enum rtx_code, rtx, rtx, rtx));\n #ifdef TREE_CODE\n extern void sh_va_start PARAMS ((tree, rtx));\n extern rtx sh_va_arg PARAMS ((tree, tree));\n@@ -124,8 +124,8 @@ extern int initial_elimination_offset PARAMS ((int, int));\n extern int fldi_ok PARAMS ((void));\n extern int sh_pr_n_sets PARAMS ((void));\n extern int sh_hard_regno_rename_ok PARAMS ((unsigned int, unsigned int));\n-extern int sh_cfun_interrupt_handler_p (void);\n-extern void sh_initialize_trampoline (rtx, rtx, rtx);\n+extern int sh_cfun_interrupt_handler_p PARAMS ((void));\n+extern void sh_initialize_trampoline PARAMS ((rtx, rtx, rtx));\n \n #ifdef HARD_CONST\n extern void fpscr_set_from_mem PARAMS ((int, HARD_REG_SET));"}, {"sha": "3512b970d4d535c0a31631d7094140eb0fb78e2a", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8202c8c4e940420fcbed15cf0397323e9131e15a/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8202c8c4e940420fcbed15cf0397323e9131e15a/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=8202c8c4e940420fcbed15cf0397323e9131e15a", "patch": "@@ -205,9 +205,9 @@ static bool sh_ms_bitfield_layout_p PARAMS ((tree));\n \n static void sh_encode_section_info PARAMS ((tree, int));\n static const char *sh_strip_name_encoding PARAMS ((const char *));\n-static void sh_init_builtins (void);\n-static void sh_media_init_builtins (void);\n-static rtx sh_expand_builtin (tree, rtx, rtx, enum machine_mode, int);\n+static void sh_init_builtins PARAMS ((void));\n+static void sh_media_init_builtins PARAMS ((void));\n+static rtx sh_expand_builtin PARAMS ((tree, rtx, rtx, enum machine_mode, int));\n \n \f\n /* Initialize the GCC target structure.  */\n@@ -7615,7 +7615,7 @@ sh_expand_unop_v2sf (code, op0, op1)\n {\n   rtx sel0 = const0_rtx;\n   rtx sel1 = const1_rtx;\n-  rtx (*fn) (rtx, rtx, rtx, rtx, rtx) = gen_unary_sf_op;\n+  rtx (*fn) PARAMS ((rtx, rtx, rtx, rtx, rtx)) = gen_unary_sf_op;\n   rtx op = gen_rtx_fmt_e (code, SFmode, op1);\n \n   emit_insn ((*fn) (op0, op1, op, sel0, sel0));\n@@ -7629,7 +7629,7 @@ sh_expand_binop_v2sf (code, op0, op1, op2)\n {\n   rtx sel0 = const0_rtx;\n   rtx sel1 = const1_rtx;\n-  rtx (*fn) (rtx, rtx, rtx, rtx, rtx, rtx, rtx) = gen_binary_sf_op;\n+  rtx (*fn) PARAMS ((rtx, rtx, rtx, rtx, rtx, rtx, rtx)) = gen_binary_sf_op;\n   rtx op = gen_rtx_fmt_ee (code, SFmode, op1, op2);\n \n   emit_insn ((*fn) (op0, op1, op2, op, sel0, sel0, sel0));"}]}