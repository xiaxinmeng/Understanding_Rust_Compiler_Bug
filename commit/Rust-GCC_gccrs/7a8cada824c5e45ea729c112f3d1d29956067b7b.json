{"sha": "7a8cada824c5e45ea729c112f3d1d29956067b7b", "node_id": "C_kwDOANBUbNoAKDdhOGNhZGE4MjRjNWU0NWVhNzI5YzExMmYzZDFkMjk5NTYwNjdiN2I", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-02-15T10:23:31Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-02-15T10:23:31Z"}, "message": "OpenMP/Fortran: Fix loop-iter var privatization with !$OMP LOOP [PR108512]\n\nFor 'parallel', loop-iteration variables are marked are marked as 'private',\nunless they either appear in an omp do/simd loop or an data-sharing clause\nalready exists for those on 'parallel'. 'omp loop' wasn't handled, leading\nto (potentially) multiple data-sharing clauses in gfc_resolve_do_iterator\nas omp_current_ctx pointed to the 'parallel' directive, ignoring the\nin-betwen 'loop' directive.\n\nThe latter lead to a bogus diagnostic - or rather an ICE as the source\nlocation var contained only '\\0'.\n\nAdditionally, several 'case EXEC_OMP...LOOP' have been added to call the\nright resolution function and likewise for '{masked,master} taskloop'.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/108512\n\t* openmp.cc (gfc_resolve_omp_parallel_blocks): Handle combined 'loop'\n\tdirectives.\n\t(gfc_resolve_do_iterator): Set a source location for added\n\t'private'-clause arguments.\n\t* resolve.cc (gfc_resolve_code): Call gfc_resolve_omp_do_blocks\n\talso for EXEC_OMP_LOOP and gfc_resolve_omp_parallel_blocks for\n\tcombined directives with loop + '{masked,master} taskloop (simd)'.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/108512\n\t* gfortran.dg/gomp/loop-5.f90: New test.\n\t* gfortran.dg/gomp/loop-2.f90: Update dg-error.\n\t* gfortran.dg/gomp/taskloop-2.f90: Update dg-error.", "tree": {"sha": "4ad4f28e47da996b5803a51a6379a609e80c6119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ad4f28e47da996b5803a51a6379a609e80c6119"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a8cada824c5e45ea729c112f3d1d29956067b7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a8cada824c5e45ea729c112f3d1d29956067b7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a8cada824c5e45ea729c112f3d1d29956067b7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a8cada824c5e45ea729c112f3d1d29956067b7b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edaf1d607860075c5ff4ade20c58b3f578ed5489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edaf1d607860075c5ff4ade20c58b3f578ed5489", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edaf1d607860075c5ff4ade20c58b3f578ed5489"}], "stats": {"total": 113, "additions": 109, "deletions": 4}, "files": [{"sha": "abca146d78ee2222c524a498a6d84e5f8f5170a7", "filename": "gcc/fortran/openmp.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ffortran%2Fopenmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ffortran%2Fopenmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.cc?ref=7a8cada824c5e45ea729c112f3d1d29956067b7b", "patch": "@@ -9125,28 +9125,32 @@ gfc_resolve_omp_parallel_blocks (gfc_code *code, gfc_namespace *ns)\n     {\n     case EXEC_OMP_DISTRIBUTE_PARALLEL_DO:\n     case EXEC_OMP_DISTRIBUTE_PARALLEL_DO_SIMD:\n+    case EXEC_OMP_MASKED_TASKLOOP:\n+    case EXEC_OMP_MASKED_TASKLOOP_SIMD:\n+    case EXEC_OMP_MASTER_TASKLOOP:\n+    case EXEC_OMP_MASTER_TASKLOOP_SIMD:\n     case EXEC_OMP_PARALLEL_DO:\n     case EXEC_OMP_PARALLEL_DO_SIMD:\n+    case EXEC_OMP_PARALLEL_LOOP:\n     case EXEC_OMP_PARALLEL_MASKED_TASKLOOP:\n     case EXEC_OMP_PARALLEL_MASKED_TASKLOOP_SIMD:\n     case EXEC_OMP_PARALLEL_MASTER_TASKLOOP:\n     case EXEC_OMP_PARALLEL_MASTER_TASKLOOP_SIMD:\n-    case EXEC_OMP_MASKED_TASKLOOP:\n-    case EXEC_OMP_MASKED_TASKLOOP_SIMD:\n-    case EXEC_OMP_MASTER_TASKLOOP:\n-    case EXEC_OMP_MASTER_TASKLOOP_SIMD:\n     case EXEC_OMP_TARGET_PARALLEL_DO:\n     case EXEC_OMP_TARGET_PARALLEL_DO_SIMD:\n+    case EXEC_OMP_TARGET_PARALLEL_LOOP:\n     case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE:\n     case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO:\n     case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n     case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_SIMD:\n+    case EXEC_OMP_TARGET_TEAMS_LOOP:\n     case EXEC_OMP_TASKLOOP:\n     case EXEC_OMP_TASKLOOP_SIMD:\n     case EXEC_OMP_TEAMS_DISTRIBUTE:\n     case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO:\n     case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n     case EXEC_OMP_TEAMS_DISTRIBUTE_SIMD:\n+    case EXEC_OMP_TEAMS_LOOP:\n       gfc_resolve_omp_do_blocks (code, ns);\n       break;\n     default:\n@@ -9225,6 +9229,7 @@ gfc_resolve_do_iterator (gfc_code *code, gfc_symbol *sym, bool add_clause)\n \n       p = gfc_get_omp_namelist ();\n       p->sym = sym;\n+      p->where = omp_current_ctx->code->loc;\n       p->next = omp_clauses->lists[OMP_LIST_PRIVATE];\n       omp_clauses->lists[OMP_LIST_PRIVATE] = p;\n     }"}, {"sha": "96c34065691a8cc8d7dbc3510f52dbc38fbb1e8f", "filename": "gcc/fortran/resolve.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ffortran%2Fresolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ffortran%2Fresolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.cc?ref=7a8cada824c5e45ea729c112f3d1d29956067b7b", "patch": "@@ -11923,9 +11923,14 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t      break;\n \t    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO:\n \t    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO_SIMD:\n+\t    case EXEC_OMP_MASKED_TASKLOOP:\n+\t    case EXEC_OMP_MASKED_TASKLOOP_SIMD:\n+\t    case EXEC_OMP_MASTER_TASKLOOP:\n+\t    case EXEC_OMP_MASTER_TASKLOOP_SIMD:\n \t    case EXEC_OMP_PARALLEL:\n \t    case EXEC_OMP_PARALLEL_DO:\n \t    case EXEC_OMP_PARALLEL_DO_SIMD:\n+\t    case EXEC_OMP_PARALLEL_LOOP:\n \t    case EXEC_OMP_PARALLEL_MASKED:\n \t    case EXEC_OMP_PARALLEL_MASKED_TASKLOOP:\n \t    case EXEC_OMP_PARALLEL_MASKED_TASKLOOP_SIMD:\n@@ -11936,11 +11941,13 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t    case EXEC_OMP_TARGET_PARALLEL:\n \t    case EXEC_OMP_TARGET_PARALLEL_DO:\n \t    case EXEC_OMP_TARGET_PARALLEL_DO_SIMD:\n+\t    case EXEC_OMP_TARGET_PARALLEL_LOOP:\n \t    case EXEC_OMP_TARGET_TEAMS:\n \t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE:\n \t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO:\n \t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n \t    case EXEC_OMP_TARGET_TEAMS_DISTRIBUTE_SIMD:\n+\t    case EXEC_OMP_TARGET_TEAMS_LOOP:\n \t    case EXEC_OMP_TASK:\n \t    case EXEC_OMP_TASKLOOP:\n \t    case EXEC_OMP_TASKLOOP_SIMD:\n@@ -11949,6 +11956,7 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t    case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO:\n \t    case EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD:\n \t    case EXEC_OMP_TEAMS_DISTRIBUTE_SIMD:\n+\t    case EXEC_OMP_TEAMS_LOOP:\n \t      omp_workshare_save = omp_workshare_flag;\n \t      omp_workshare_flag = 0;\n \t      gfc_resolve_omp_parallel_blocks (code, ns);\n@@ -11957,6 +11965,7 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t    case EXEC_OMP_DISTRIBUTE_SIMD:\n \t    case EXEC_OMP_DO:\n \t    case EXEC_OMP_DO_SIMD:\n+\t    case EXEC_OMP_LOOP:\n \t    case EXEC_OMP_SIMD:\n \t    case EXEC_OMP_TARGET_SIMD:\n \t      gfc_resolve_omp_do_blocks (code, ns);"}, {"sha": "2d83e3a750733c4a92183301698edce0fae30e12", "filename": "gcc/testsuite/gfortran.dg/gomp/loop-2.f90", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Floop-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Floop-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Floop-2.f90?ref=7a8cada824c5e45ea729c112f3d1d29956067b7b", "patch": "@@ -18,18 +18,23 @@ subroutine foo()\n end do\n \n !$omp loop reduction(inscan, +: r)  ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" }\n+  ! { dg-error \"With INSCAN at .1., expected loop body with ..OMP SCAN between two structured-block-sequences\" \"\" { target *-*-* } .-1 }\n do i = 1, 64\n end do\n !$omp teams loop reduction(inscan, +: r)  ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" }\n+  ! { dg-error \"With INSCAN at .1., expected loop body with ..OMP SCAN between two structured-block-sequences\" \"\" { target *-*-* } .-1 }\n do i = 1, 64\n end do\n !$omp parallel loop reduction(inscan, +: r) ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" }\n+  ! { dg-error \"With INSCAN at .1., expected loop body with ..OMP SCAN between two structured-block-sequences\" \"\" { target *-*-* } .-1 }\n do i = 1, 64\n end do\n !$omp target teams loop reduction(inscan, +: r)  ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" }\n+  ! { dg-error \"With INSCAN at .1., expected loop body with ..OMP SCAN between two structured-block-sequences\" \"\" { target *-*-* } .-1 }\n do i = 1, 64\n end do\n !$omp target parallel loop reduction(inscan, +: r)  ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" }\n+  ! { dg-error \"With INSCAN at .1., expected loop body with ..OMP SCAN between two structured-block-sequences\" \"\" { target *-*-* } .-1 }\n do i = 1, 64\n end do\n "}, {"sha": "1948e782653a8ea2b4526e29c93dad80e2b456dc", "filename": "gcc/testsuite/gfortran.dg/gomp/loop-5.f90", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Floop-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Floop-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Floop-5.f90?ref=7a8cada824c5e45ea729c112f3d1d29956067b7b", "patch": "@@ -0,0 +1,84 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/108512\n+\n+! The problem was that the context wasn't reset for the 'LOOP'\n+! such that the clauses of the loops weren't seen when adding\n+! PRIVATE clauses.\n+!\n+! In the following, only the loop variable of the non-OpenMP loop\n+! in 'subroutine four' should get a front-end addded PRIVATE clause\n+\n+implicit none\n+integer :: x, a(10), b(10), n\n+    n = 10\n+    a = -42\n+    b = [(2*x, x=1,10)]\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp target map\\\\(tofrom:a\\\\) map\\\\(tofrom:b\\\\) map\\\\(tofrom:x\\\\)\\[\\r\\n\\]\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp parallel\\[\\r\\n\\]\" 2 \"original\" } }\n+!  ^- shows up twice; checked only here.\n+! { dg-final { scan-tree-dump-times \"#pragma omp loop lastprivate\\\\(x\\\\)\\[\\r\\n\\]\" 1 \"original\" } }\n+\n+    !$omp target parallel map(tofrom: a, b, x)\n+    !$omp loop lastprivate(x)\n+    DO x = 1, n\n+      a(x) = a(x) + b(x)\n+    END DO\n+    !$omp end loop\n+    !$omp end target parallel\n+    if (x /= 11) error stop\n+    if (any (a /= [(2*x - 42, x=1,10)])) error stop\n+    call two()\n+    call three()\n+    call four()\n+end\n+\n+subroutine two\n+  implicit none\n+  integer :: ii, mm, arr(10)\n+  mm = 10\n+  arr = 0\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp target map\\\\(tofrom:arr\\\\) map\\\\(tofrom:ii\\\\)\\[\\r\\n\\]\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp parallel shared\\\\(ii\\\\)\\[\\r\\n\\]\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp loop lastprivate\\\\(ii\\\\)\\[\\r\\n\\]\" 1 \"original\" } }\n+\n+  !$omp target parallel loop map(tofrom: arr) lastprivate(ii)\n+    DO ii = 1, mm\n+      arr(ii) = arr(ii) + ii\n+    END DO\n+end\n+\n+subroutine three\n+  implicit none\n+  integer :: kk, zz, var(10)\n+  zz = 10\n+  var = 0\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp target map\\\\(tofrom:var\\\\)\\[\\r\\n\\]\" 1 \"original\" } }\n+! \"#pragma omp parallel\\[\\r\\n\\]\" - shows up twice, dump checked above\n+! { dg-final { scan-tree-dump-times \"#pragma omp loop\\[\\r\\n\\]\" 1 \"original\" } }\n+\n+  !$omp target parallel loop map(tofrom: var)\n+    DO kk = 1, zz\n+      var(kk) = var(kk) + kk\n+    END DO\n+end\n+\n+subroutine four\n+  implicit none\n+  integer :: jj, qq, dist(10)\n+  qq = 10\n+  dist = 0\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp target map\\\\(tofrom:dist\\\\)\\[\\r\\n\\]\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp parallel private\\\\(jj\\\\)\\[\\r\\n\\]\" 1 \"original\" } }\n+\n+  !$omp target parallel map(tofrom: dist)\n+    ! *no* '!$omp do/loop/simd'\n+    DO jj = 1, qq\n+      dist(qq) = dist(qq) + qq\n+    END DO\n+  !$omp end target parallel\n+end"}, {"sha": "41b4d6d21913c5fcdf5d9a977f29512eeaedf3db", "filename": "gcc/testsuite/gfortran.dg/gomp/taskloop-2.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftaskloop-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a8cada824c5e45ea729c112f3d1d29956067b7b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftaskloop-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Ftaskloop-2.f90?ref=7a8cada824c5e45ea729c112f3d1d29956067b7b", "patch": "@@ -27,9 +27,11 @@ subroutine foo()\n do i = 1, 64                                 ! { dg-error \"OMP SCAN between two structured-block-sequences\" \"\" { target *-*-* } .-1 }\n end do\n !$omp master taskloop reduction(inscan, +: r) ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" }\n+  ! { dg-error \"With INSCAN at .1., expected loop body with ..OMP SCAN between two structured-block-sequences\" \"\" { target *-*-* } .-1 }\n do i = 1, 64\n end do\n !$omp master taskloop simd reduction(inscan, +: r)  ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" }\n+  ! { dg-error \"With INSCAN at .1., expected loop body with ..OMP SCAN between two structured-block-sequences\" \"\" { target *-*-* } .-1 }\n do i = 1, 64\n end do\n !$omp parallel master taskloop reduction(inscan, +: r)  ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" }"}]}