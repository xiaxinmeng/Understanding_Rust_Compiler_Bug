{"sha": "2c40d56347f84df78a2cd54c4755189208bc21ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM0MGQ1NjM0N2Y4NGRmNzhhMmNkNTRjNDc1NTE4OTIwOGJjMjFhYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-06-21T16:10:29Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-06-21T16:10:29Z"}, "message": "s/imposisble/impossible in predict.c\n\n\t* predict.c (force_edge_cold): Replace imposisble with\n\timpossible.\n\nFrom-SVN: r237651", "tree": {"sha": "ab2495f161f3f790531e5bc226742b2b20520a01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab2495f161f3f790531e5bc226742b2b20520a01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c40d56347f84df78a2cd54c4755189208bc21ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c40d56347f84df78a2cd54c4755189208bc21ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c40d56347f84df78a2cd54c4755189208bc21ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c40d56347f84df78a2cd54c4755189208bc21ab/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6252b5db4acf7f34c114366bafe3dd0024120ee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6252b5db4acf7f34c114366bafe3dd0024120ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6252b5db4acf7f34c114366bafe3dd0024120ee7"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "06179d1f748343ea033bfd944a7dc352c62b9838", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c40d56347f84df78a2cd54c4755189208bc21ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c40d56347f84df78a2cd54c4755189208bc21ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c40d56347f84df78a2cd54c4755189208bc21ab", "patch": "@@ -1,3 +1,8 @@\n+2016-06-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* predict.c (force_edge_cold): Replace imposisble with\n+\timpossible.\n+\n 2016-06-21  Ilya Verbin  <ilya.verbin@intel.com>\n \n \t* config/i386/i386.c (ix86_emit_swsqrtsf): Emit vrsqrt28ps."}, {"sha": "470de8a6e373a00e686664790b745e76d7c94042", "filename": "gcc/predict.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c40d56347f84df78a2cd54c4755189208bc21ab/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c40d56347f84df78a2cd54c4755189208bc21ab/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=2c40d56347f84df78a2cd54c4755189208bc21ab", "patch": "@@ -3507,7 +3507,7 @@ force_edge_cold (edge e, bool impossible)\n \tfprintf (dump_file, \"Making edge %i->%i %s by redistributing \"\n \t\t \"probability to other edges.\\n\",\n \t\t e->src->index, e->dest->index,\n-\t\t impossible ? \"imposisble\" : \"cold\");\n+\t\t impossible ? \"impossible\" : \"cold\");\n       FOR_EACH_EDGE (e2, ei, e->src->succs)\n \tif (e2 != e)\n \t  {\n@@ -3533,7 +3533,7 @@ force_edge_cold (edge e, bool impossible)\n \t  int old_frequency = e->src->frequency;\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    fprintf (dump_file, \"Making bb %i %s.\\n\", e->src->index,\n-\t\t     impossible ? \"imposisble\" : \"cold\");\n+\t\t     impossible ? \"impossible\" : \"cold\");\n \t  e->src->frequency = MIN (e->src->frequency, impossible ? 0 : 1);\n \t  e->src->count = e->count = RDIV (e->src->count * e->src->frequency,\n \t\t\t\t\t   old_frequency);\n@@ -3542,6 +3542,6 @@ force_edge_cold (edge e, bool impossible)\n       else if (dump_file && (dump_flags & TDF_DETAILS)\n \t       && maybe_hot_bb_p (cfun, e->src))\n \tfprintf (dump_file, \"Giving up on making bb %i %s.\\n\", e->src->index,\n-\t\t impossible ? \"imposisble\" : \"cold\");\n+\t\t impossible ? \"impossible\" : \"cold\");\n     }\n }"}]}