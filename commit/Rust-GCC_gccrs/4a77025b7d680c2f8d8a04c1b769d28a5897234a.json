{"sha": "4a77025b7d680c2f8d8a04c1b769d28a5897234a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE3NzAyNWI3ZDY4MGMyZjhkOGEwNGMxYjc2OWQyOGE1ODk3MjM0YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-21T16:01:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-21T16:01:53Z"}, "message": "re PR target/88522 (Error: operand size mismatch for `vpgatherqq')\n\n\tPR target/88522\n\t* config/i386/sse.md (*avx512pf_gatherpf<mode>sf_mask,\n\t*avx512pf_gatherpf<mode>df_mask, *avx512pf_scatterpf<mode>sf_mask,\n\t*avx512pf_scatterpf<mode>df_mask): Use %X5 instead of %5 for\n\t-masm=intel.\n\t(gatherq_mode): Remove mode iterator.\n\t(*avx512f_gathersi<mode>, *avx512f_gathersi<mode>_2): Use X instead\n\tof <xtg_mode>.\n\t(*avx512f_gatherdi<mode>): Use X instead of <gatherq_mode>.\n\t(*avx512f_gatherdi<mode>_2, *avx512f_scattersi<mode>,\n\t*avx512f_scatterdi<mode>): Use %X5 for -masm=intel.\n\nFrom-SVN: r267327", "tree": {"sha": "5605860622ddb8cb3818fc6a56ee46412fb55310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5605860622ddb8cb3818fc6a56ee46412fb55310"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a77025b7d680c2f8d8a04c1b769d28a5897234a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a77025b7d680c2f8d8a04c1b769d28a5897234a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a77025b7d680c2f8d8a04c1b769d28a5897234a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a77025b7d680c2f8d8a04c1b769d28a5897234a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9f248c8b86bbc5c69d4c3083d617736a65d7244", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f248c8b86bbc5c69d4c3083d617736a65d7244", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f248c8b86bbc5c69d4c3083d617736a65d7244"}], "stats": {"total": 76, "additions": 48, "deletions": 28}, "files": [{"sha": "0fc3225ee2f246c18ac2f8dd44fd7aadde24e967", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a77025b7d680c2f8d8a04c1b769d28a5897234a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a77025b7d680c2f8d8a04c1b769d28a5897234a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a77025b7d680c2f8d8a04c1b769d28a5897234a", "patch": "@@ -1,5 +1,17 @@\n 2018-12-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/88522\n+\t* config/i386/sse.md (*avx512pf_gatherpf<mode>sf_mask,\n+\t*avx512pf_gatherpf<mode>df_mask, *avx512pf_scatterpf<mode>sf_mask,\n+\t*avx512pf_scatterpf<mode>df_mask): Use %X5 instead of %5 for\n+\t-masm=intel.\n+\t(gatherq_mode): Remove mode iterator.\n+\t(*avx512f_gathersi<mode>, *avx512f_gathersi<mode>_2): Use X instead\n+\tof <xtg_mode>.\n+\t(*avx512f_gatherdi<mode>): Use X instead of <gatherq_mode>.\n+\t(*avx512f_gatherdi<mode>_2, *avx512f_scattersi<mode>,\n+\t*avx512f_scatterdi<mode>): Use %X5 for -masm=intel.\n+\n \tPR rtl-optimization/88563\n \t* expr.c (expand_expr_real_2) <case WIDEN_MULT_EXPR>: Swap innermode\n \tand mode arguments to convert_modes.  Likewise swap mode and word_mode"}, {"sha": "6ec9896ab6fc2f47ca38f0dcac31b503a703f4ee", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 36, "deletions": 28, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a77025b7d680c2f8d8a04c1b769d28a5897234a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a77025b7d680c2f8d8a04c1b769d28a5897234a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=4a77025b7d680c2f8d8a04c1b769d28a5897234a", "patch": "@@ -17269,9 +17269,11 @@\n   switch (INTVAL (operands[4]))\n     {\n     case 3:\n-      return \"vgatherpf0<ssemodesuffix>ps\\t{%5%{%0%}|%5%{%0%}}\";\n+      /* %X5 so that we don't emit any *WORD PTR for -masm=intel, as\n+\t gas changed what it requires incompatibly.  */\n+      return \"vgatherpf0<ssemodesuffix>ps\\t{%5%{%0%}|%X5%{%0%}}\";\n     case 2:\n-      return \"vgatherpf1<ssemodesuffix>ps\\t{%5%{%0%}|%5%{%0%}}\";\n+      return \"vgatherpf1<ssemodesuffix>ps\\t{%5%{%0%}|%X5%{%0%}}\";\n     default:\n       gcc_unreachable ();\n     }\n@@ -17314,9 +17316,11 @@\n   switch (INTVAL (operands[4]))\n     {\n     case 3:\n-      return \"vgatherpf0<ssemodesuffix>pd\\t{%5%{%0%}|%5%{%0%}}\";\n+      /* %X5 so that we don't emit any *WORD PTR for -masm=intel, as\n+\t gas changed what it requires incompatibly.  */\n+      return \"vgatherpf0<ssemodesuffix>pd\\t{%5%{%0%}|%X5%{%0%}}\";\n     case 2:\n-      return \"vgatherpf1<ssemodesuffix>pd\\t{%5%{%0%}|%5%{%0%}}\";\n+      return \"vgatherpf1<ssemodesuffix>pd\\t{%5%{%0%}|%X5%{%0%}}\";\n     default:\n       gcc_unreachable ();\n     }\n@@ -17360,10 +17364,12 @@\n     {\n     case 3:\n     case 7:\n-      return \"vscatterpf0<ssemodesuffix>ps\\t{%5%{%0%}|%5%{%0%}}\";\n+      /* %X5 so that we don't emit any *WORD PTR for -masm=intel, as\n+\t gas changed what it requires incompatibly.  */\n+      return \"vscatterpf0<ssemodesuffix>ps\\t{%5%{%0%}|%X5%{%0%}}\";\n     case 2:\n     case 6:\n-      return \"vscatterpf1<ssemodesuffix>ps\\t{%5%{%0%}|%5%{%0%}}\";\n+      return \"vscatterpf1<ssemodesuffix>ps\\t{%5%{%0%}|%X5%{%0%}}\";\n     default:\n       gcc_unreachable ();\n     }\n@@ -17407,10 +17413,12 @@\n     {\n     case 3:\n     case 7:\n-      return \"vscatterpf0<ssemodesuffix>pd\\t{%5%{%0%}|%5%{%0%}}\";\n+      /* %X5 so that we don't emit any *WORD PTR for -masm=intel, as\n+\t gas changed what it requires incompatibly.  */\n+      return \"vscatterpf0<ssemodesuffix>pd\\t{%5%{%0%}|%X5%{%0%}}\";\n     case 2:\n     case 6:\n-      return \"vscatterpf1<ssemodesuffix>pd\\t{%5%{%0%}|%5%{%0%}}\";\n+      return \"vscatterpf1<ssemodesuffix>pd\\t{%5%{%0%}|%X5%{%0%}}\";\n     default:\n       gcc_unreachable ();\n     }\n@@ -20290,12 +20298,6 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-;; Memory operand override for -masm=intel of the v*gatherq* patterns.\n-(define_mode_attr gatherq_mode\n-  [(V4SI \"q\") (V2DI \"x\") (V4SF \"q\") (V2DF \"x\")\n-   (V8SI \"x\") (V4DI \"t\") (V8SF \"x\") (V4DF \"t\")\n-   (V16SI \"t\") (V8DI \"g\") (V16SF \"t\") (V8DF \"g\")])\n-\n (define_expand \"<avx512>_gathersi<mode>\"\n   [(parallel [(set (match_operand:VI48F 0 \"register_operand\")\n \t\t   (unspec:VI48F\n@@ -20329,7 +20331,9 @@\n \t  UNSPEC_GATHER))\n    (clobber (match_scratch:<avx512fmaskmode> 2 \"=&Yk\"))]\n   \"TARGET_AVX512F\"\n-  \"v<sseintprefix>gatherd<ssemodesuffix>\\t{%6, %0%{%2%}|%0%{%2%}, %<xtg_mode>6}\"\n+;; %X6 so that we don't emit any *WORD PTR for -masm=intel, as\n+;; gas changed what it requires incompatibly.\n+  \"v<sseintprefix>gatherd<ssemodesuffix>\\t{%6, %0%{%2%}|%0%{%2%}, %X6}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n@@ -20348,7 +20352,9 @@\n \t  UNSPEC_GATHER))\n    (clobber (match_scratch:<avx512fmaskmode> 1 \"=&Yk\"))]\n   \"TARGET_AVX512F\"\n-  \"v<sseintprefix>gatherd<ssemodesuffix>\\t{%5, %0%{%1%}|%0%{%1%}, %<xtg_mode>5}\"\n+;; %X5 so that we don't emit any *WORD PTR for -masm=intel, as\n+;; gas changed what it requires incompatibly.\n+  \"v<sseintprefix>gatherd<ssemodesuffix>\\t{%5, %0%{%1%}|%0%{%1%}, %X5}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n@@ -20387,9 +20393,9 @@\n \t  UNSPEC_GATHER))\n    (clobber (match_scratch:QI 2 \"=&Yk\"))]\n   \"TARGET_AVX512F\"\n-{\n-  return \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%6, %1%{%2%}|%1%{%2%}, %<gatherq_mode>6}\";\n-}\n+;; %X6 so that we don't emit any *WORD PTR for -masm=intel, as\n+;; gas changed what it requires incompatibly.\n+  \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%6, %1%{%2%}|%1%{%2%}, %X6}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n@@ -20409,14 +20415,16 @@\n    (clobber (match_scratch:QI 1 \"=&Yk\"))]\n   \"TARGET_AVX512F\"\n {\n+  /* %X5 so that we don't emit any *WORD PTR for -masm=intel, as\n+     gas changed what it requires incompatibly.  */\n   if (<MODE>mode != <VEC_GATHER_SRCDI>mode)\n     {\n       if (<MODE_SIZE> != 64)\n-\treturn \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %x0%{%1%}|%x0%{%1%}, %<gatherq_mode>5}\";\n+\treturn \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %x0%{%1%}|%x0%{%1%}, %X5}\";\n       else\n-\treturn \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %t0%{%1%}|%t0%{%1%}, %t5}\";\n+\treturn \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %t0%{%1%}|%t0%{%1%}, %X5}\";\n     }\n-  return \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %0%{%1%}|%0%{%1%}, %<gatherq_mode>5}\";\n+  return \"v<sseintprefix>gatherq<ssemodesuffix>\\t{%5, %0%{%1%}|%0%{%1%}, %X5}\";\n }\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n@@ -20453,7 +20461,9 @@\n \t  UNSPEC_SCATTER))\n    (clobber (match_scratch:<avx512fmaskmode> 1 \"=&Yk\"))]\n   \"TARGET_AVX512F\"\n-  \"v<sseintprefix>scatterd<ssemodesuffix>\\t{%3, %5%{%1%}|%5%{%1%}, %3}\"\n+;; %X5 so that we don't emit any *WORD PTR for -masm=intel, as\n+;; gas changed what it requires incompatibly.\n+  \"v<sseintprefix>scatterd<ssemodesuffix>\\t{%3, %5%{%1%}|%X5%{%1%}, %3}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n@@ -20489,11 +20499,9 @@\n \t  UNSPEC_SCATTER))\n    (clobber (match_scratch:QI 1 \"=&Yk\"))]\n   \"TARGET_AVX512F\"\n-{\n-  if (GET_MODE_SIZE (GET_MODE_INNER (<MODE>mode)) == 8)\n-    return \"v<sseintprefix>scatterq<ssemodesuffix>\\t{%3, %5%{%1%}|%5%{%1%}, %3}\";\n-  return \"v<sseintprefix>scatterq<ssemodesuffix>\\t{%3, %5%{%1%}|%t5%{%1%}, %3}\";\n-}\n+;; %X5 so that we don't emit any *WORD PTR for -masm=intel, as\n+;; gas changed what it requires incompatibly.\n+  \"v<sseintprefix>scatterq<ssemodesuffix>\\t{%3, %5%{%1%}|%X5%{%1%}, %3}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])"}]}