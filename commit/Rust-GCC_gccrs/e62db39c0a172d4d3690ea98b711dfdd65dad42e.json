{"sha": "e62db39c0a172d4d3690ea98b711dfdd65dad42e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYyZGIzOWMwYTE3MmQ0ZDM2OTBlYTk4YjcxMWRmZGQ2NWRhZDQyZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-19T22:17:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-19T22:17:16Z"}, "message": "(rot[lr][shq]i3): Allow 'N', 'O' or 'P' operands.\n\nFrom-SVN: r13524", "tree": {"sha": "3c3a01090062197736f2e63fd533a0f21f90c015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c3a01090062197736f2e63fd533a0f21f90c015"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e62db39c0a172d4d3690ea98b711dfdd65dad42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62db39c0a172d4d3690ea98b711dfdd65dad42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62db39c0a172d4d3690ea98b711dfdd65dad42e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62db39c0a172d4d3690ea98b711dfdd65dad42e/comments", "author": null, "committer": null, "parents": [{"sha": "a388a7aa66fbd80bd69945b0461d69de7d94c610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a388a7aa66fbd80bd69945b0461d69de7d94c610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a388a7aa66fbd80bd69945b0461d69de7d94c610"}], "stats": {"total": 67, "additions": 58, "deletions": 9}, "files": [{"sha": "877f4423cab3f78c910005b89a67a3d08acd45c9", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 58, "deletions": 9, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62db39c0a172d4d3690ea98b711dfdd65dad42e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62db39c0a172d4d3690ea98b711dfdd65dad42e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=e62db39c0a172d4d3690ea98b711dfdd65dad42e", "patch": "@@ -64,6 +64,9 @@\n ;;- 'K'  all integers EXCEPT -128 .. 127\n ;;- 'L'  -8 .. -1\n ;;- 'M'  all integers EXCEPT -256 .. 255\n+;;- 'N'  24 .. 31\n+;;- 'O'  16\n+;;- 'P'  8 .. 15\n \n ;;- Assembler specs:\n ;;- \"%.\"    size separator (\".\" or \"\")\t\t\tmove%.l d0,d1\n@@ -4712,38 +4715,84 @@\n (define_insn \"rotlsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(rotate:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t   (match_operand:SI 2 \"general_operand\" \"dI\")))]\n+\t\t   (match_operand:SI 2 \"general_operand\" \"dINO\")))]\n   \"!TARGET_5200\"\n-  \"rol%.l %2,%0\")\n+  \"*\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) == 16)\n+    return \\\"swap %0\\\";\n+  else if (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) >= 16)\n+    {\n+      INTVAL (operands[2]) = 32 - INTVAL (operands[2]);\n+      return \\\"ror%.l %2,%0\\\";\n+    }\n+  else\n+    return \\\"rol%.l %2,%0\\\";\n+}\")\n \n (define_insn \"rotlhi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=d\")\n \t(rotate:HI (match_operand:HI 1 \"register_operand\" \"0\")\n-\t\t   (match_operand:HI 2 \"general_operand\" \"dI\")))]\n+\t\t   (match_operand:HI 2 \"general_operand\" \"dIP\")))]\n   \"!TARGET_5200\"\n-  \"rol%.w %2,%0\")\n-\n+  \"*\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) >= 8)\n+    {\n+      INTVAL (operands[2]) = 16 - INTVAL (operands[2]);\n+      return \\\"ror%.w %2,%0\\\";\n+    }\n+  else\n+    return \\\"rol%.w %2,%0\\\";\n+}\")\n \n (define_insn \"\"\n   [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d\"))\n \t(rotate:HI (match_dup 0)\n-\t\t   (match_operand:HI 1 \"general_operand\" \"dI\")))]\n+\t\t   (match_operand:HI 1 \"general_operand\" \"dIP\")))]\n   \"!TARGET_5200\"\n-  \"rol%.w %1,%0\")\n+  \"*\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) >= 8)\n+    {\n+      INTVAL (operands[2]) = 16 - INTVAL (operands[2]);\n+      return \\\"ror%.w %2,%0\\\";\n+    }\n+  else\n+    return \\\"rol%.w %2,%0\\\";\n+}\")\n \n (define_insn \"rotlqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d\")\n \t(rotate:QI (match_operand:QI 1 \"register_operand\" \"0\")\n \t\t   (match_operand:QI 2 \"general_operand\" \"dI\")))]\n   \"!TARGET_5200\"\n-  \"rol%.b %2,%0\")\n+  \"*\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) >= 4)\n+    {\n+      INTVAL (operands[2]) = 8 - INTVAL (operands[2]);\n+      return \\\"ror%.b %2,%0\\\";\n+    }\n+  else\n+    return \\\"rol%.b %2,%0\\\";\n+}\")\n \n (define_insn \"\"\n   [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d\"))\n \t(rotate:QI (match_dup 0)\n \t\t   (match_operand:QI 1 \"general_operand\" \"dI\")))]\n   \"!TARGET_5200\"\n-  \"rol%.b %1,%0\")\n+  \"*\n+{\n+  if (GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) >= 4)\n+    {\n+      INTVAL (operands[2]) = 8 - INTVAL (operands[2]);\n+      return \\\"ror%.b %2,%0\\\";\n+    }\n+  else\n+    return \\\"rol%.b %2,%0\\\";\n+}\")\n \n (define_insn \"rotrsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")"}]}