{"sha": "f075b8c5adcf9cb6336563c472c8d624c54184db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA3NWI4YzVhZGNmOWNiNjMzNjU2M2M0NzJjOGQ2MjRjNTQxODRkYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2021-08-26T13:33:56Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2021-08-26T13:33:56Z"}, "message": "Fix off-by-one error in try_merge_with\n\ngcc/ChangeLog:\n\n\t* ipa-modref-tree.h (modref_ref_node::verify): New member\n\tfunctoin.\n\t(modref_ref_node::insert): Use it.\n\t(modref_ref_node::try_mere_with): Fix off by one error.", "tree": {"sha": "079f402801f6af76f644a43c2ccbd0062c69a64d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/079f402801f6af76f644a43c2ccbd0062c69a64d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f075b8c5adcf9cb6336563c472c8d624c54184db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f075b8c5adcf9cb6336563c472c8d624c54184db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f075b8c5adcf9cb6336563c472c8d624c54184db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f075b8c5adcf9cb6336563c472c8d624c54184db/comments", "author": null, "committer": null, "parents": [{"sha": "cd67d138ec6006d650d1ba96c8a1322b285723cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd67d138ec6006d650d1ba96c8a1322b285723cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd67d138ec6006d650d1ba96c8a1322b285723cd"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "4edec4efded5cf6bd5e4988df1aa9f60823eca3a", "filename": "gcc/ipa-modref-tree.h", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f075b8c5adcf9cb6336563c472c8d624c54184db/gcc%2Fipa-modref-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f075b8c5adcf9cb6336563c472c8d624c54184db/gcc%2Fipa-modref-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref-tree.h?ref=f075b8c5adcf9cb6336563c472c8d624c54184db", "patch": "@@ -322,6 +322,20 @@ struct GTY((user)) modref_ref_node\n     every_access = true;\n   }\n \n+  /* Verify that list does not contain redundant accesses.  */\n+  void verify ()\n+  {\n+    size_t i, i2;\n+    modref_access_node *a, *a2;\n+\n+    FOR_EACH_VEC_SAFE_ELT (accesses, i, a)\n+      {\n+\tFOR_EACH_VEC_SAFE_ELT (accesses, i2, a2)\n+\t  if (i != i2)\n+\t    gcc_assert (!a->contains (*a2));\n+      }\n+  }\n+\n   /* Insert access with OFFSET and SIZE.\n      Collapse tree if it has more than MAX_ACCESSES entries.\n      If RECORD_ADJUSTMENTs is true avoid too many interval extensions.\n@@ -337,6 +351,9 @@ struct GTY((user)) modref_ref_node\n     size_t i;\n     modref_access_node *a2;\n \n+    if (flag_checking)\n+      verify ();\n+\n     if (!a.useful_p ())\n       {\n \tif (!every_access)\n@@ -392,13 +409,15 @@ struct GTY((user)) modref_ref_node\n     size_t i;\n \n     FOR_EACH_VEC_SAFE_ELT (accesses, i, a2)\n-      if (i != index)\n-\tif ((*accesses)[index].contains (*a2)\n-\t    || (*accesses)[index].merge (*a2, false))\n+      if (i != index\n+\t  && ((*accesses)[index].contains (*a2)\n+\t      || (*accesses)[index].merge (*a2, false)))\n \t{\n-\t  if (index == accesses->length () - 1)\n-\t    index = i;\n \t  accesses->unordered_remove (i);\n+\t  if (index == accesses->length ())\n+\t    index = i;\n+\t  else\n+\t    i--;\n \t}\n   }\n };"}]}