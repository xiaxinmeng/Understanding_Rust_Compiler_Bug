{"sha": "ef7a9fb869cbaa03880946613b63e4dbe611470c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3YTlmYjg2OWNiYWEwMzg4MDk0NjYxM2I2M2U0ZGJlNjExNDcwYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2012-12-17T14:55:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-12-17T14:55:53Z"}, "message": "re PR target/54781 (ICE in refs_may_alias_p_1, at tree-ssa-alias.c:1124)\n\n2012-12-17  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/54781\n\t* alias.c (ao_ref_from_mem): More appropriately constrain the\n\tbase object we feed to the tree oracle.  Remove dead code.\n\nFrom-SVN: r194554", "tree": {"sha": "c13fb20ea4bbddf5565973cd7b0caace2b987580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c13fb20ea4bbddf5565973cd7b0caace2b987580"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef7a9fb869cbaa03880946613b63e4dbe611470c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7a9fb869cbaa03880946613b63e4dbe611470c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef7a9fb869cbaa03880946613b63e4dbe611470c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7a9fb869cbaa03880946613b63e4dbe611470c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b3572643d2dc3b94e90fa2f3eada2def470ffd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b3572643d2dc3b94e90fa2f3eada2def470ffd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b3572643d2dc3b94e90fa2f3eada2def470ffd1"}], "stats": {"total": 43, "additions": 15, "deletions": 28}, "files": [{"sha": "47f5a01e0ce75c7b48233759f44d5aa79d74b2d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7a9fb869cbaa03880946613b63e4dbe611470c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7a9fb869cbaa03880946613b63e4dbe611470c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef7a9fb869cbaa03880946613b63e4dbe611470c", "patch": "@@ -1,3 +1,9 @@\n+2012-12-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/54781\n+\t* alias.c (ao_ref_from_mem): More appropriately constrain the\n+\tbase object we feed to the tree oracle.  Remove dead code.\n+\n 2012-12-17  James Greenhalgh  <james.greenhalgh@arm.com>\n \t    Tejas Belagod  <tejas.belagod@arm.com>\n "}, {"sha": "5fa34249ecdf68a53475918c060dabb0d9235bb2", "filename": "gcc/alias.c", "status": "modified", "additions": 9, "deletions": 28, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7a9fb869cbaa03880946613b63e4dbe611470c/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7a9fb869cbaa03880946613b63e4dbe611470c/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=ef7a9fb869cbaa03880946613b63e4dbe611470c", "patch": "@@ -283,46 +283,27 @@ ao_ref_from_mem (ao_ref *ref, const_rtx mem)\n   if (base == NULL_TREE)\n     return false;\n \n-  /* The tree oracle doesn't like to have these.  */\n-  if (TREE_CODE (base) == FUNCTION_DECL\n-      || TREE_CODE (base) == LABEL_DECL)\n-    return false;\n-\n-  /* If this is a pointer dereference of a non-SSA_NAME punt.\n-     ???  We could replace it with a pointer to anything.  */\n-  if ((INDIRECT_REF_P (base)\n-       || TREE_CODE (base) == MEM_REF)\n-      && TREE_CODE (TREE_OPERAND (base, 0)) != SSA_NAME)\n-    return false;\n-  if (TREE_CODE (base) == TARGET_MEM_REF\n-      && TMR_BASE (base)\n-      && TREE_CODE (TMR_BASE (base)) != SSA_NAME)\n+  /* The tree oracle doesn't like bases that are neither decls\n+     nor indirect references of SSA names.  */\n+  if (!(DECL_P (base)\n+\t|| (TREE_CODE (base) == MEM_REF\n+\t    && TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME)\n+\t|| (TREE_CODE (base) == TARGET_MEM_REF\n+\t    && TREE_CODE (TMR_BASE (base)) == SSA_NAME)))\n     return false;\n \n   /* If this is a reference based on a partitioned decl replace the\n-     base with an INDIRECT_REF of the pointer representative we\n+     base with a MEM_REF of the pointer representative we\n      created during stack slot partitioning.  */\n   if (TREE_CODE (base) == VAR_DECL\n-      && ! TREE_STATIC (base)\n+      && ! is_global_var (base)\n       && cfun->gimple_df->decls_to_pointers != NULL)\n     {\n       void *namep;\n       namep = pointer_map_contains (cfun->gimple_df->decls_to_pointers, base);\n       if (namep)\n \tref->base = build_simple_mem_ref (*(tree *)namep);\n     }\n-  else if (TREE_CODE (base) == TARGET_MEM_REF\n-\t   && TREE_CODE (TMR_BASE (base)) == ADDR_EXPR\n-\t   && TREE_CODE (TREE_OPERAND (TMR_BASE (base), 0)) == VAR_DECL\n-\t   && ! TREE_STATIC (TREE_OPERAND (TMR_BASE (base), 0))\n-\t   && cfun->gimple_df->decls_to_pointers != NULL)\n-    {\n-      void *namep;\n-      namep = pointer_map_contains (cfun->gimple_df->decls_to_pointers,\n-\t\t\t\t    TREE_OPERAND (TMR_BASE (base), 0));\n-      if (namep)\n-\tref->base = build_simple_mem_ref (*(tree *)namep);\n-    }\n \n   ref->ref_alias_set = MEM_ALIAS_SET (mem);\n "}]}