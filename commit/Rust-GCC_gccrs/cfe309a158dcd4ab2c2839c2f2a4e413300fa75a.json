{"sha": "cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZlMzA5YTE1OGRjZDRhYjJjMjgzOWMyZjJhNGU0MTMzMDBmYTc1YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-07-17T08:32:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-07-17T08:32:18Z"}, "message": "re PR c++/61804 (rejects-valid if parenthesized temporary is incremented)\n\n/cp\n2014-07-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/61804\n\t* parser.c (cp_parser_tokens_start_cast_expression): Return -1\n\tfor '++' and '--'.\n\n/testsuite\n2014-07-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/61804\n\t* g++.dg/parse/pr61804.C: New.\n\nFrom-SVN: r212743", "tree": {"sha": "ed9b2975d2f2d8b46d2610823a8eb1290e52c4a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed9b2975d2f2d8b46d2610823a8eb1290e52c4a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a/comments", "author": null, "committer": null, "parents": [{"sha": "bf95b6295ca8a76eec569791cfa3c8de19513204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf95b6295ca8a76eec569791cfa3c8de19513204", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf95b6295ca8a76eec569791cfa3c8de19513204"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "e4b27f4112bdb431e7dff1bb4c0fb57b97893528", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "patch": "@@ -1,3 +1,9 @@\n+2014-07-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/61804\n+\t* parser.c (cp_parser_tokens_start_cast_expression): Return -1\n+\tfor '++' and '--'.\n+\n 2014-07-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/61811"}, {"sha": "178114d2c840880ec3648fcdb7225c52633f6947", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "patch": "@@ -7700,8 +7700,9 @@ cp_parser_delete_expression (cp_parser* parser)\n \t\t\ttf_warning_or_error);\n }\n \n-/* Returns 1 if TOKEN may start a cast-expression and, in C++11,\n-   isn't '[', -1 if TOKEN is '[' in C++11, 0 otherwise.  */\n+/* Returns 1 if TOKEN may start a cast-expression and isn't '++', '--',\n+   neither '[' in C++11; -1 if TOKEN is '++', '--', or '[' in C++11;\n+   0 otherwise.  */\n \n static int\n cp_parser_tokens_start_cast_expression (cp_parser *parser)\n@@ -7755,13 +7756,26 @@ cp_parser_tokens_start_cast_expression (cp_parser *parser)\n       return cp_lexer_peek_nth_token (parser->lexer, 2)->type\n \t     != CPP_CLOSE_PAREN;\n \n+    case CPP_OPEN_SQUARE:\n       /* '[' may start a primary-expression in obj-c++ and in C++11,\n \t as a lambda-expression, eg, '(void)[]{}'.  */\n-    case CPP_OPEN_SQUARE:\n       if (cxx_dialect >= cxx11)\n \treturn -1;\n       return c_dialect_objc ();\n \n+    case CPP_PLUS_PLUS:\n+    case CPP_MINUS_MINUS:\n+      /* '++' and '--' may or may not start a cast-expression:\n+\n+\t struct T { void operator++(int); };\n+\t void f() { (T())++; }\n+\n+\t vs\n+\n+\t int a;\n+\t (int)++a;  */\n+      return -1;\n+\n     default:\n       return 1;\n     }\n@@ -7874,8 +7888,8 @@ cp_parser_cast_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t function returning T.  */\n       if (!cp_parser_error_occurred (parser))\n \t{\n-\t  /* Only commit if the cast-expression doesn't start with '[' in\n-\t     C++11, which may or may not start a lambda-expression.  */\n+\t  /* Only commit if the cast-expression doesn't start with\n+\t     '++', '--', or '[' in C++11.  */\n \t  if (cast_expression > 0)\n \t    cp_parser_commit_to_topmost_tentative_parse (parser);\n "}, {"sha": "8e656fef2971f969f72649927717a2b698e261fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "patch": "@@ -1,3 +1,8 @@\n+2014-07-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/61804\n+\t* g++.dg/parse/pr61804.C: New.\n+\n 2014-07-16  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnat.db/specs/alignment2.ads, gnat.db/specs/size_clause1.ads,"}, {"sha": "898dc09984e2cb195b31a29496063b6518287cc4", "filename": "gcc/testsuite/g++.dg/parse/pr61804.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr61804.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr61804.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr61804.C?ref=cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/61804\n+\n+struct T { void operator++(int); };\n+void f() { (T())++; }\n+\n+struct U { void operator--(int); };\n+void g() { (U())--; }\n+\n+void h() { int a; (int)++a; (int)--a; }"}]}