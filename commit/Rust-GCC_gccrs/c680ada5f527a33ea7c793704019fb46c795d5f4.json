{"sha": "c680ada5f527a33ea7c793704019fb46c795d5f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4MGFkYTVmNTI3YTMzZWE3Yzc5MzcwNDAxOWZiNDZjNzk1ZDVmNA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-10-18T04:14:25Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-10-18T04:14:25Z"}, "message": "re PR fortran/48298 ([F03] User-Defined Derived-Type IO (DTIO))\n\n2016-10-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/48298\n\t* io/io.h: Move size_used from dtp to unit structure. Add bool\n\thas_size to unit structure.\n\t* read.c (read_x): Use has_size and size_used.\n\t* transfer.c (read_sf_internal,read_sf,read_block_form,\n\tread_block_form4): Likewise.\n\t(data_transfer_init): If parent, initialize the size variables.\n\t(finalize_transfer): Set the size variable using size_used in\n\tgfc_unit. (write_block): Delete bogus/dead code.\n\n\t* gfortran.dg/dtio_17.f90: New test.\n\nFrom-SVN: r241294", "tree": {"sha": "1999f935b9407f3f6f2dea1eb9f1e478784747f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1999f935b9407f3f6f2dea1eb9f1e478784747f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c680ada5f527a33ea7c793704019fb46c795d5f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c680ada5f527a33ea7c793704019fb46c795d5f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c680ada5f527a33ea7c793704019fb46c795d5f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c680ada5f527a33ea7c793704019fb46c795d5f4/comments", "author": null, "committer": null, "parents": [{"sha": "b78027d1a3f9a8fdf3386e24dcfd6679006dd154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78027d1a3f9a8fdf3386e24dcfd6679006dd154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b78027d1a3f9a8fdf3386e24dcfd6679006dd154"}], "stats": {"total": 143, "additions": 126, "deletions": 17}, "files": [{"sha": "6d57099bfc51d1a5832cb61b13d999105d380169", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c680ada5f527a33ea7c793704019fb46c795d5f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c680ada5f527a33ea7c793704019fb46c795d5f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c680ada5f527a33ea7c793704019fb46c795d5f4", "patch": "@@ -1,3 +1,7 @@\n+2016-10-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* gfortran.dg/dtio_17.f90: New test.\n+\n 2016-10-18  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* gcc.dg/ipa/vrp4.c: Adjust testcase."}, {"sha": "a6b1fb3988806691536a4467dc46d1b6dd03e740", "filename": "gcc/testsuite/gfortran.dg/dtio_17.f90", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c680ada5f527a33ea7c793704019fb46c795d5f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c680ada5f527a33ea7c793704019fb46c795d5f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_17.f90?ref=c680ada5f527a33ea7c793704019fb46c795d5f4", "patch": "@@ -0,0 +1,77 @@\n+! { dg-do run }\n+! PR48298, this tests function of size= specifier with DTIO.\n+MODULE p\n+  USE ISO_FORTRAN_ENV\n+  TYPE :: person\n+    CHARACTER (LEN=20) :: name\n+    INTEGER(4) :: age\n+    CONTAINS\n+      procedure :: pwf\n+      procedure :: prf\n+      GENERIC :: WRITE(FORMATTED) => pwf\n+      GENERIC :: READ(FORMATTED) => prf\n+  END TYPE person\n+CONTAINS\n+  SUBROUTINE pwf (dtv,unit,iotype,vlist,iostat,iomsg)\n+    CLASS(person), INTENT(IN) :: dtv\n+    INTEGER, INTENT(IN) :: unit\n+    CHARACTER (LEN=*), INTENT(IN) :: iotype\n+    INTEGER, INTENT(IN) :: vlist(:)\n+    INTEGER, INTENT(OUT) :: iostat\n+    CHARACTER (LEN=*), INTENT(INOUT) :: iomsg\n+    CHARACTER (LEN=30) :: udfmt\n+    INTEGER :: myios\n+\n+    iomsg = \"SUCCESS\"\n+    iostat=0\n+    if (iotype.eq.\"DT\") then\n+      WRITE(unit, FMT = '(a20,i2)', IOSTAT=iostat, advance='no') dtv%name, dtv%age\n+      if (iostat.ne.0) iomsg = \"Fail PWF DT\"\n+    endif\n+    if (iotype.eq.\"LISTDIRECTED\") then\n+      WRITE(unit, '(*(g0))', IOSTAT=iostat) dtv%name, dtv%age\n+      if (iostat.ne.0) iomsg = \"Fail PWF DT\"\n+    endif\n+  END SUBROUTINE pwf\n+\n+  SUBROUTINE prf (dtv,unit,iotype,vlist,iostat,iomsg)\n+    CLASS(person), INTENT(INOUT) :: dtv\n+    INTEGER, INTENT(IN) :: unit\n+    CHARACTER (LEN=*), INTENT(IN) :: iotype\n+    INTEGER, INTENT(IN) :: vlist(:)\n+    INTEGER, INTENT(OUT) :: iostat\n+    CHARACTER (LEN=*), INTENT(INOUT) :: iomsg\n+    CHARACTER (LEN=30) :: udfmt\n+    INTEGER :: myios\n+    real :: areal\n+    udfmt='(*(g0))'\n+    iomsg = \"SUCCESS\"\n+    iostat=0\n+    if (iotype.eq.\"DT\") then\n+      READ(unit, FMT = '(a20,i2)', IOSTAT=iostat) dtv%name, dtv%age\n+      if (iostat.ne.0) iomsg = \"Fail PWF DT\"\n+    endif\n+  END SUBROUTINE prf\n+\n+END MODULE p\n+\n+PROGRAM test\n+  USE p\n+  implicit none\n+  TYPE (person) :: chairman\n+  integer(4) :: rl, tl, kl, thesize\n+\n+  chairman%name=\"Charlie\"\n+  chairman%age=62\n+\n+  open(28, status='scratch')\n+  write(28, '(i10,i10,DT,i15,DT,i12)') rl, kl, chairman, rl, chairman, tl\n+  rewind(28)\n+  chairman%name=\"bogus\"\n+  chairman%age=99\n+  !print *, chairman\n+  read(28, '(i10,i10,DT,i15,DT,i12)', advance='no', size=thesize) rl, &\n+                          & kl, chairman, rl, chairman, tl\n+  if (thesize.ne.91) call abort\n+  close(28)\n+END PROGRAM test"}, {"sha": "9662df891f5bf19485bfa995859f2b67e8b4d82d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c680ada5f527a33ea7c793704019fb46c795d5f4/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c680ada5f527a33ea7c793704019fb46c795d5f4/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c680ada5f527a33ea7c793704019fb46c795d5f4", "patch": "@@ -1,3 +1,15 @@\n+2016-10-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/48298\n+\t* io/io.h: Move size_used from dtp to unit structure. Add bool\n+\thas_size to unit structure.\n+\t* read.c (read_x): Use has_size and size_used.\n+\t* transfer.c (read_sf_internal,read_sf,read_block_form,\n+\tread_block_form4): Likewise.\n+\t(data_transfer_init): If parent, initialize the size variables.\n+\t(finalize_transfer): Set the size variable using size_used in\n+\tgfc_unit. (write_block): Delete bogus/dead code.\n+\n 2016-10-16  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/48587"}, {"sha": "edc520a920fb17b960666ec9b3fb580095cc9c40", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c680ada5f527a33ea7c793704019fb46c795d5f4/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c680ada5f527a33ea7c793704019fb46c795d5f4/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=c680ada5f527a33ea7c793704019fb46c795d5f4", "patch": "@@ -514,7 +514,6 @@ typedef struct st_parameter_dt\n \t     large enough to hold a complex value (two reals) of the\n \t     largest kind.  */\n \t  char value[32];\n-\t  GFC_IO_INT size_used;\n \t  formatted_dtio fdtio_ptr;\n \t  unformatted_dtio ufdtio_ptr;\n \t} p;\n@@ -650,6 +649,8 @@ typedef struct gfc_unit\n   /* DTIO Parent/Child procedure, 0 = parent, >0 = child level.  */\n   int child_dtio;\n   int last_char;\n+  bool has_size;\n+  GFC_IO_INT size_used;\n }\n gfc_unit;\n "}, {"sha": "d72cdb37e113c340cb1d887c1bbe87a1de06d792", "filename": "libgfortran/io/read.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c680ada5f527a33ea7c793704019fb46c795d5f4/libgfortran%2Fio%2Fread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c680ada5f527a33ea7c793704019fb46c795d5f4/libgfortran%2Fio%2Fread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fread.c?ref=c680ada5f527a33ea7c793704019fb46c795d5f4", "patch": "@@ -1282,8 +1282,9 @@ read_x (st_parameter_dt *dtp, int n)\n     } \n \n  done:\n-  if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used += (GFC_IO_INT) n;\n+  if (((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0) ||\n+      dtp->u.p.current_unit->has_size)\n+    dtp->u.p.current_unit->size_used += (GFC_IO_INT) n;\n   dtp->u.p.current_unit->bytes_left -= n;\n   dtp->u.p.current_unit->strm_pos += (gfc_offset) n;\n }"}, {"sha": "1f46ca64cf12244995162ae0ee330c4c1979957f", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c680ada5f527a33ea7c793704019fb46c795d5f4/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c680ada5f527a33ea7c793704019fb46c795d5f4/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=c680ada5f527a33ea7c793704019fb46c795d5f4", "patch": "@@ -267,8 +267,9 @@ read_sf_internal (st_parameter_dt *dtp, int * length)\n \n   dtp->u.p.current_unit->bytes_left -= *length;\n \n-  if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used += (GFC_IO_INT) *length;\n+  if (((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0) ||\n+      dtp->u.p.current_unit->has_size)\n+    dtp->u.p.current_unit->size_used += (GFC_IO_INT) *length;\n \n   return base;\n \n@@ -397,8 +398,9 @@ read_sf (st_parameter_dt *dtp, int * length)\n \n   dtp->u.p.current_unit->bytes_left -= n;\n \n-  if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used += (GFC_IO_INT) n;\n+  if (((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0) ||\n+      dtp->u.p.current_unit->has_size)\n+    dtp->u.p.current_unit->size_used += (GFC_IO_INT) n;\n \n   /* We can't call fbuf_getptr before the loop doing fbuf_getc, because\n      fbuf_getc might reallocate the buffer.  So return current pointer\n@@ -478,8 +480,9 @@ read_block_form (st_parameter_dt *dtp, int * nbytes)\n   source = fbuf_read (dtp->u.p.current_unit, nbytes);\n   fbuf_seek (dtp->u.p.current_unit, *nbytes, SEEK_CUR);\n \n-  if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used += (GFC_IO_INT) *nbytes;\n+  if (((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0) ||\n+      dtp->u.p.current_unit->has_size)\n+    dtp->u.p.current_unit->size_used += (GFC_IO_INT) *nbytes;\n \n   if (norig != *nbytes)\n     {\n@@ -536,8 +539,9 @@ read_block_form4 (st_parameter_dt *dtp, int * nbytes)\n \n   dtp->u.p.current_unit->bytes_left -= *nbytes;\n \n-  if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used += (GFC_IO_INT) *nbytes;\n+  if (((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0) ||\n+      dtp->u.p.current_unit->has_size)\n+    dtp->u.p.current_unit->size_used += (GFC_IO_INT) *nbytes;\n \n   return source;\n }\n@@ -770,8 +774,9 @@ write_block (st_parameter_dt *dtp, int length)\n \t}\n     }\n \n-  if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used += (GFC_IO_INT) length;\n+  if (((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0) ||\n+      dtp->u.p.current_unit->has_size)\n+    dtp->u.p.current_unit->size_used += (GFC_IO_INT) length;\n \n   dtp->u.p.current_unit->strm_pos += (gfc_offset) length;\n \n@@ -2596,9 +2601,6 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n   if ((dtp->common.flags & IOPARM_LIBRETURN_MASK) != IOPARM_LIBRETURN_OK)\n     return;\n \n-  if ((cf & IOPARM_DT_HAS_SIZE) != 0)\n-    dtp->u.p.size_used = 0;  /* Initialize the count.  */\n-\n   dtp->u.p.current_unit = get_unit (dtp, 1);\n \n   if (dtp->u.p.current_unit == NULL)\n@@ -2674,6 +2676,18 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n \treturn;\n     }\n \n+  if (dtp->u.p.current_unit->child_dtio == 0)\n+    {\n+      if ((cf & IOPARM_DT_HAS_SIZE) != 0)\n+\t{\n+\t  dtp->u.p.current_unit->has_size = true;\n+\t  /* Initialize the count.  */\n+\t  dtp->u.p.current_unit->size_used = 0;\n+\t}\n+      else\n+\tdtp->u.p.current_unit->has_size = false;\n+    }\n+\n   /* Check the action.  */\n \n   if (read_flag && dtp->u.p.current_unit->flags.action == ACTION_WRITE)\n@@ -3772,7 +3786,7 @@ finalize_transfer (st_parameter_dt *dtp)\n     return;\n \n   if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n-    *dtp->size = dtp->u.p.size_used;\n+    *dtp->size = dtp->u.p.current_unit->size_used;\n \n   if (dtp->u.p.eor_condition)\n     {"}]}