{"sha": "de955a690b7b888c63ef9f97e8deceba8e9b0f82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU5NTVhNjkwYjdiODg4YzYzZWY5Zjk3ZThkZWNlYmE4ZTliMGY4Mg==", "commit": {"author": {"name": "Matthew Wahab", "email": "matthew.wahab@arm.com", "date": "2016-09-23T10:46:26Z"}, "committer": {"name": "Matthew Wahab", "email": "mwahab@gcc.gnu.org", "date": "2016-09-23T10:46:26Z"}, "message": "[PATCH 14/17][ARM] Add NEON FP16 instrinsics.\n\ngcc/\n2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n\n\t* config/arm/arm_neon.h (vabd_f16): New.\n\t(vabdq_f16): New.\n\t(vabs_f16): New.\n\t(vabsq_f16): New.\n\t(vadd_f16): New.\n\t(vaddq_f16): New.\n\t(vcage_f16): New.\n\t(vcageq_f16): New.\n\t(vcagt_f16): New.\n\t(vcagtq_f16): New.\n\t(vcale_f16): New.\n\t(vcaleq_f16): New.\n\t(vcalt_f16): New.\n\t(vcaltq_f16): New.\n\t(vceq_f16): New.\n\t(vceqq_f16): New.\n\t(vceqz_f16): New.\n\t(vceqzq_f16): New.\n\t(vcge_f16): New.\n\t(vcgeq_f16): New.\n\t(vcgez_f16): New.\n\t(vcgezq_f16): New.\n\t(vcgt_f16): New.\n\t(vcgtq_f16): New.\n\t(vcgtz_f16): New.\n\t(vcgtzq_f16): New.\n\t(vcle_f16): New.\n\t(vcleq_f16): New.\n\t(vclez_f16): New.\n\t(vclezq_f16): New.\n\t(vclt_f16): New.\n\t(vcltq_f16): New.\n\t(vcltz_f16): New.\n\t(vcltzq_f16): New.\n\t(vcvt_f16_s16): New.\n\t(vcvt_f16_u16): New.\n\t(vcvt_s16_f16): New.\n\t(vcvt_u16_f16): New.\n\t(vcvtq_f16_s16): New.\n\t(vcvtq_f16_u16): New.\n\t(vcvtq_s16_f16): New.\n\t(vcvtq_u16_f16): New.\n\t(vcvta_s16_f16): New.\n\t(vcvta_u16_f16): New.\n\t(vcvtaq_s16_f16): New.\n\t(vcvtaq_u16_f16): New.\n\t(vcvtm_s16_f16): New.\n\t(vcvtm_u16_f16): New.\n\t(vcvtmq_s16_f16): New.\n\t(vcvtmq_u16_f16): New.\n\t(vcvtn_s16_f16): New.\n\t(vcvtn_u16_f16): New.\n\t(vcvtnq_s16_f16): New.\n\t(vcvtnq_u16_f16): New.\n\t(vcvtp_s16_f16): New.\n\t(vcvtp_u16_f16): New.\n\t(vcvtpq_s16_f16): New.\n\t(vcvtpq_u16_f16): New.\n\t(vcvt_n_f16_s16): New.\n\t(vcvt_n_f16_u16): New.\n\t(vcvtq_n_f16_s16): New.\n\t(vcvtq_n_f16_u16): New.\n\t(vcvt_n_s16_f16): New.\n\t(vcvt_n_u16_f16): New.\n\t(vcvtq_n_s16_f16): New.\n\t(vcvtq_n_u16_f16): New.\n\t(vfma_f16): New.\n\t(vfmaq_f16): New.\n\t(vfms_f16): New.\n\t(vfmsq_f16): New.\n\t(vmax_f16): New.\n\t(vmaxq_f16): New.\n\t(vmaxnm_f16): New.\n\t(vmaxnmq_f16): New.\n\t(vmin_f16): New.\n\t(vminq_f16): New.\n\t(vminnm_f16): New.\n\t(vminnmq_f16): New.\n\t(vmul_f16): New.\n\t(vmul_lane_f16): New.\n\t(vmul_n_f16): New.\n\t(vmulq_f16): New.\n\t(vmulq_lane_f16): New.\n\t(vmulq_n_f16): New.\n\t(vneg_f16): New.\n\t(vnegq_f16): New.\n\t(vpadd_f16): New.\n\t(vpmax_f16): New.\n\t(vpmin_f16): New.\n\t(vrecpe_f16): New.\n\t(vrecpeq_f16): New.\n\t(vrnd_f16): New.\n\t(vrndq_f16): New.\n\t(vrnda_f16): New.\n\t(vrndaq_f16): New.\n\t(vrndm_f16): New.\n\t(vrndmq_f16): New.\n\t(vrndn_f16): New.\n\t(vrndnq_f16): New.\n\t(vrndp_f16): New.\n\t(vrndpq_f16): New.\n\t(vrndx_f16): New.\n\t(vrndxq_f16): New.\n\t(vrsqrte_f16): New.\n\t(vrsqrteq_f16): New.\n\t(vrecps_f16): New.\n\t(vrecpsq_f16): New.\n\t(vrsqrts_f16): New.\n\t(vrsqrtsq_f16): New.\n\t(vsub_f16): New.\n\t(vsubq_f16): New.\n\nFrom-SVN: r240424", "tree": {"sha": "d2db6cf1334cb45132c84142cc198cfa581c7300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2db6cf1334cb45132c84142cc198cfa581c7300"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de955a690b7b888c63ef9f97e8deceba8e9b0f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de955a690b7b888c63ef9f97e8deceba8e9b0f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de955a690b7b888c63ef9f97e8deceba8e9b0f82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de955a690b7b888c63ef9f97e8deceba8e9b0f82/comments", "author": null, "committer": null, "parents": [{"sha": "29c3d574af087966662b30fe33b3727f9bb504df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c3d574af087966662b30fe33b3727f9bb504df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c3d574af087966662b30fe33b3727f9bb504df"}], "stats": {"total": 788, "additions": 788, "deletions": 0}, "files": [{"sha": "3bc2c8254d1db71d8c6f51159a15430689d3590c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de955a690b7b888c63ef9f97e8deceba8e9b0f82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de955a690b7b888c63ef9f97e8deceba8e9b0f82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de955a690b7b888c63ef9f97e8deceba8e9b0f82", "patch": "@@ -1,3 +1,117 @@\n+2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n+\n+\t* config/arm/arm_neon.h (vabd_f16): New.\n+\t(vabdq_f16): New.\n+\t(vabs_f16): New.\n+\t(vabsq_f16): New.\n+\t(vadd_f16): New.\n+\t(vaddq_f16): New.\n+\t(vcage_f16): New.\n+\t(vcageq_f16): New.\n+\t(vcagt_f16): New.\n+\t(vcagtq_f16): New.\n+\t(vcale_f16): New.\n+\t(vcaleq_f16): New.\n+\t(vcalt_f16): New.\n+\t(vcaltq_f16): New.\n+\t(vceq_f16): New.\n+\t(vceqq_f16): New.\n+\t(vceqz_f16): New.\n+\t(vceqzq_f16): New.\n+\t(vcge_f16): New.\n+\t(vcgeq_f16): New.\n+\t(vcgez_f16): New.\n+\t(vcgezq_f16): New.\n+\t(vcgt_f16): New.\n+\t(vcgtq_f16): New.\n+\t(vcgtz_f16): New.\n+\t(vcgtzq_f16): New.\n+\t(vcle_f16): New.\n+\t(vcleq_f16): New.\n+\t(vclez_f16): New.\n+\t(vclezq_f16): New.\n+\t(vclt_f16): New.\n+\t(vcltq_f16): New.\n+\t(vcltz_f16): New.\n+\t(vcltzq_f16): New.\n+\t(vcvt_f16_s16): New.\n+\t(vcvt_f16_u16): New.\n+\t(vcvt_s16_f16): New.\n+\t(vcvt_u16_f16): New.\n+\t(vcvtq_f16_s16): New.\n+\t(vcvtq_f16_u16): New.\n+\t(vcvtq_s16_f16): New.\n+\t(vcvtq_u16_f16): New.\n+\t(vcvta_s16_f16): New.\n+\t(vcvta_u16_f16): New.\n+\t(vcvtaq_s16_f16): New.\n+\t(vcvtaq_u16_f16): New.\n+\t(vcvtm_s16_f16): New.\n+\t(vcvtm_u16_f16): New.\n+\t(vcvtmq_s16_f16): New.\n+\t(vcvtmq_u16_f16): New.\n+\t(vcvtn_s16_f16): New.\n+\t(vcvtn_u16_f16): New.\n+\t(vcvtnq_s16_f16): New.\n+\t(vcvtnq_u16_f16): New.\n+\t(vcvtp_s16_f16): New.\n+\t(vcvtp_u16_f16): New.\n+\t(vcvtpq_s16_f16): New.\n+\t(vcvtpq_u16_f16): New.\n+\t(vcvt_n_f16_s16): New.\n+\t(vcvt_n_f16_u16): New.\n+\t(vcvtq_n_f16_s16): New.\n+\t(vcvtq_n_f16_u16): New.\n+\t(vcvt_n_s16_f16): New.\n+\t(vcvt_n_u16_f16): New.\n+\t(vcvtq_n_s16_f16): New.\n+\t(vcvtq_n_u16_f16): New.\n+\t(vfma_f16): New.\n+\t(vfmaq_f16): New.\n+\t(vfms_f16): New.\n+\t(vfmsq_f16): New.\n+\t(vmax_f16): New.\n+\t(vmaxq_f16): New.\n+\t(vmaxnm_f16): New.\n+\t(vmaxnmq_f16): New.\n+\t(vmin_f16): New.\n+\t(vminq_f16): New.\n+\t(vminnm_f16): New.\n+\t(vminnmq_f16): New.\n+\t(vmul_f16): New.\n+\t(vmul_lane_f16): New.\n+\t(vmul_n_f16): New.\n+\t(vmulq_f16): New.\n+\t(vmulq_lane_f16): New.\n+\t(vmulq_n_f16): New.\n+\t(vneg_f16): New.\n+\t(vnegq_f16): New.\n+\t(vpadd_f16): New.\n+\t(vpmax_f16): New.\n+\t(vpmin_f16): New.\n+\t(vrecpe_f16): New.\n+\t(vrecpeq_f16): New.\n+\t(vrnd_f16): New.\n+\t(vrndq_f16): New.\n+\t(vrnda_f16): New.\n+\t(vrndaq_f16): New.\n+\t(vrndm_f16): New.\n+\t(vrndmq_f16): New.\n+\t(vrndn_f16): New.\n+\t(vrndnq_f16): New.\n+\t(vrndp_f16): New.\n+\t(vrndpq_f16): New.\n+\t(vrndx_f16): New.\n+\t(vrndxq_f16): New.\n+\t(vrsqrte_f16): New.\n+\t(vrsqrteq_f16): New.\n+\t(vrecps_f16): New.\n+\t(vrecpsq_f16): New.\n+\t(vrsqrts_f16): New.\n+\t(vrsqrtsq_f16): New.\n+\t(vsub_f16): New.\n+\t(vsubq_f16): New.\n+\n 2016-09-23  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* config.gcc (extra_headers): Add arm_fp16.h"}, {"sha": "54bbc7dd83cf979b6fad7724ba1d4b327b311f5c", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 674, "deletions": 0, "changes": 674, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de955a690b7b888c63ef9f97e8deceba8e9b0f82/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de955a690b7b888c63ef9f97e8deceba8e9b0f82/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=de955a690b7b888c63ef9f97e8deceba8e9b0f82", "patch": "@@ -14841,6 +14841,680 @@ vmull_high_p64 (poly64x2_t __a, poly64x2_t __b)\n   return (poly128_t) __builtin_arm_crypto_vmullp64 ((uint64_t) __t1, (uint64_t) __t2);\n }\n \n+#pragma GCC pop_options\n+\n+  /* Intrinsics for FP16 instructions.  */\n+#pragma GCC push_options\n+#pragma GCC target (\"fpu=neon-fp-armv8\")\n+#if defined (__ARM_FEATURE_FP16_VECTOR_ARITHMETIC)\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vabd_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vabdv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vabdq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vabdv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vabs_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vabsv4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vabsq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vabsv8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vadd_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vaddv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vaddq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vaddv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcage_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vcagev4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcageq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vcagev8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcagt_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vcagtv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcagtq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vcagtv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcale_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vcalev4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcaleq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vcalev8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcalt_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vcaltv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcaltq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vcaltv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vceq_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vceqv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vceqq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vceqv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vceqz_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vceqzv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vceqzq_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vceqzv8hf (__a);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcge_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vcgev4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcgeq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vcgev8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcgez_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vcgezv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcgezq_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vcgezv8hf (__a);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcgt_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vcgtv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcgtq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vcgtv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcgtz_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vcgtzv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcgtzq_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vcgtzv8hf (__a);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcle_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vclev4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcleq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vclev8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vclez_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vclezv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vclezq_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vclezv8hf (__a);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vclt_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vcltv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcltq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vcltv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcltz_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vcltzv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcltzq_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vcltzv8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vcvt_f16_s16 (int16x4_t __a)\n+{\n+  return (float16x4_t)__builtin_neon_vcvtsv4hi (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vcvt_f16_u16 (uint16x4_t __a)\n+{\n+  return (float16x4_t)__builtin_neon_vcvtuv4hi ((int16x4_t)__a);\n+}\n+\n+__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n+vcvt_s16_f16 (float16x4_t __a)\n+{\n+  return (int16x4_t)__builtin_neon_vcvtsv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcvt_u16_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vcvtuv4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vcvtq_f16_s16 (int16x8_t __a)\n+{\n+  return (float16x8_t)__builtin_neon_vcvtsv8hi (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vcvtq_f16_u16 (uint16x8_t __a)\n+{\n+  return (float16x8_t)__builtin_neon_vcvtuv8hi ((int16x8_t)__a);\n+}\n+\n+__extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n+vcvtq_s16_f16 (float16x8_t __a)\n+{\n+  return (int16x8_t)__builtin_neon_vcvtsv8hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcvtq_u16_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vcvtuv8hf (__a);\n+}\n+\n+__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n+vcvta_s16_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vcvtasv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcvta_u16_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vcvtauv4hf (__a);\n+}\n+\n+__extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n+vcvtaq_s16_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vcvtasv8hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcvtaq_u16_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vcvtauv8hf (__a);\n+}\n+\n+__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n+vcvtm_s16_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vcvtmsv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcvtm_u16_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vcvtmuv4hf (__a);\n+}\n+\n+__extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n+vcvtmq_s16_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vcvtmsv8hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcvtmq_u16_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vcvtmuv8hf (__a);\n+}\n+\n+__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n+vcvtn_s16_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vcvtnsv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcvtn_u16_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vcvtnuv4hf (__a);\n+}\n+\n+__extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n+vcvtnq_s16_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vcvtnsv8hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcvtnq_u16_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vcvtnuv8hf (__a);\n+}\n+\n+__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n+vcvtp_s16_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vcvtpsv4hf (__a);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcvtp_u16_f16 (float16x4_t __a)\n+{\n+  return (uint16x4_t)__builtin_neon_vcvtpuv4hf (__a);\n+}\n+\n+__extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n+vcvtpq_s16_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vcvtpsv8hf (__a);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcvtpq_u16_f16 (float16x8_t __a)\n+{\n+  return (uint16x8_t)__builtin_neon_vcvtpuv8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vcvt_n_f16_s16 (int16x4_t __a, const int __b)\n+{\n+  return __builtin_neon_vcvts_nv4hi (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vcvt_n_f16_u16 (uint16x4_t __a, const int __b)\n+{\n+  return __builtin_neon_vcvtu_nv4hi ((int16x4_t)__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vcvtq_n_f16_s16 (int16x8_t __a, const int __b)\n+{\n+  return __builtin_neon_vcvts_nv8hi (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vcvtq_n_f16_u16 (uint16x8_t __a, const int __b)\n+{\n+  return __builtin_neon_vcvtu_nv8hi ((int16x8_t)__a, __b);\n+}\n+\n+__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n+vcvt_n_s16_f16 (float16x4_t __a, const int __b)\n+{\n+  return __builtin_neon_vcvts_nv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vcvt_n_u16_f16 (float16x4_t __a, const int __b)\n+{\n+  return (uint16x4_t)__builtin_neon_vcvtu_nv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline int16x8_t __attribute__ ((__always_inline__))\n+vcvtq_n_s16_f16 (float16x8_t __a, const int __b)\n+{\n+  return __builtin_neon_vcvts_nv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline uint16x8_t __attribute__ ((__always_inline__))\n+vcvtq_n_u16_f16 (float16x8_t __a, const int __b)\n+{\n+  return (uint16x8_t)__builtin_neon_vcvtu_nv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vfma_f16 (float16x4_t __a, float16x4_t __b, float16x4_t __c)\n+{\n+  return __builtin_neon_vfmav4hf (__a, __b, __c);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vfmaq_f16 (float16x8_t __a, float16x8_t __b, float16x8_t __c)\n+{\n+  return __builtin_neon_vfmav8hf (__a, __b, __c);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vfms_f16 (float16x4_t __a, float16x4_t __b, float16x4_t __c)\n+{\n+  return __builtin_neon_vfmsv4hf (__a, __b, __c);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vfmsq_f16 (float16x8_t __a, float16x8_t __b, float16x8_t __c)\n+{\n+  return __builtin_neon_vfmsv8hf (__a, __b, __c);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vmax_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vmaxfv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vmaxq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vmaxfv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vmaxnm_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vmaxnmv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vmaxnmq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vmaxnmv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vmin_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vminfv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vminq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vminfv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vminnm_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vminnmv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vminnmq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vminnmv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vmul_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vmulfv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vmul_lane_f16 (float16x4_t __a, float16x4_t __b, const int __c)\n+{\n+  return __builtin_neon_vmul_lanev4hf (__a, __b, __c);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vmul_n_f16 (float16x4_t __a, float16_t __b)\n+{\n+  return __builtin_neon_vmul_nv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vmulq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vmulfv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vmulq_lane_f16 (float16x8_t __a, float16x4_t __b, const int __c)\n+{\n+  return __builtin_neon_vmul_lanev8hf (__a, __b, __c);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vmulq_n_f16 (float16x8_t __a, float16_t __b)\n+{\n+  return __builtin_neon_vmul_nv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vneg_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vnegv4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vnegq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vnegv8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vpadd_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vpaddv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vpmax_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vpmaxfv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vpmin_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vpminfv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrecpe_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vrecpev4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrecpeq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vrecpev8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrnd_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vrndv4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrndq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vrndv8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrnda_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vrndav4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrndaq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vrndav8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrndm_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vrndmv4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrndmq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vrndmv8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrndn_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vrndnv4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrndnq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vrndnv8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrndp_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vrndpv4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrndpq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vrndpv8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrndx_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vrndxv4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrndxq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vrndxv8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrsqrte_f16 (float16x4_t __a)\n+{\n+  return __builtin_neon_vrsqrtev4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrsqrteq_f16 (float16x8_t __a)\n+{\n+  return __builtin_neon_vrsqrtev8hf (__a);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrecps_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vrecpsv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrecpsq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vrecpsv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vrsqrts_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vrsqrtsv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vrsqrtsq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vrsqrtsv8hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vsub_f16 (float16x4_t __a, float16x4_t __b)\n+{\n+  return __builtin_neon_vsubv4hf (__a, __b);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vsubq_f16 (float16x8_t __a, float16x8_t __b)\n+{\n+  return __builtin_neon_vsubv8hf (__a, __b);\n+}\n+\n+#endif /* __ARM_FEATURE_VECTOR_FP16_ARITHMETIC.  */\n #pragma GCC pop_options\n \n   /* Half-precision data processing intrinsics.  */"}]}