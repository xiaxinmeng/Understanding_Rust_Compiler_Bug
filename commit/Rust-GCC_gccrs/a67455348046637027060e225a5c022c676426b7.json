{"sha": "a67455348046637027060e225a5c022c676426b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY3NDU1MzQ4MDQ2NjM3MDI3MDYwZTIyNWE1YzAyMmM2NzY0MjZiNw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2017-05-24T13:23:45Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2017-05-24T13:23:45Z"}, "message": "Translate libgomp.oacc-c-c++-common/lib-32.c into Fortran\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-fortran/lib-32-1.f: New file.\n\t* testsuite/libgomp.oacc-fortran/lib-32-2.f: Likewise.\n\nFrom-SVN: r248411", "tree": {"sha": "b588d5d4e4a4a327e0d3991c9c752b215128b21c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b588d5d4e4a4a327e0d3991c9c752b215128b21c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a67455348046637027060e225a5c022c676426b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a67455348046637027060e225a5c022c676426b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a67455348046637027060e225a5c022c676426b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a67455348046637027060e225a5c022c676426b7/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b94fbc7e485117a931dbf438b2dab31bb3f8f13"}], "stats": {"total": 356, "additions": 356, "deletions": 0}, "files": [{"sha": "af8c5ca07fc2ed9d1535d445b1e50ef03f3112bf", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a67455348046637027060e225a5c022c676426b7/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a67455348046637027060e225a5c022c676426b7/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a67455348046637027060e225a5c022c676426b7", "patch": "@@ -1,5 +1,8 @@\n 2017-05-24  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* testsuite/libgomp.oacc-fortran/lib-32-1.f: New file.\n+\t* testsuite/libgomp.oacc-fortran/lib-32-2.f: Likewise.\n+\n \t* openacc.h (acc_pcopyin, acc_pcreate): Provide prototypes instead\n \tof preprocessor definitions.\n \t* libgomp.h (strong_alias): Guard by \"#ifdef"}, {"sha": "1696fb6f9ef7ca7bcbb62ab064530c2ff7f19db4", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a67455348046637027060e225a5c022c676426b7/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a67455348046637027060e225a5c022c676426b7/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-32.c?ref=a67455348046637027060e225a5c022c676426b7", "patch": "@@ -1,4 +1,5 @@\n /* acc_present_or_create, acc_present_or_copyin, etc.  */\n+/* See also Fortran variants in \"../libgomp.oacc-fortran/lib-32*\".  */\n \n #include <stdbool.h>\n #include <stdlib.h>"}, {"sha": "4606d7732ec331caa155db2ccd03f239f2513279", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-32-1.f", "status": "added", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a67455348046637027060e225a5c022c676426b7/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a67455348046637027060e225a5c022c676426b7/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-1.f?ref=a67455348046637027060e225a5c022c676426b7", "patch": "@@ -0,0 +1,179 @@\n+!     ACC_PRESENT_OR_CREATE, ACC_PRESENT_OR_COPYIN, etc.\n+!     Variant of \"../libgomp.oacc-c-c++-common/lib-32.c\".\n+!     Variant using \"openacc_lib.h\".\n+\n+!     { dg-do run }\n+\n+      PROGRAM MAIN\n+      IMPLICIT NONE\n+      INCLUDE \"openacc_lib.h\"\n+\n+      INTEGER, PARAMETER :: N = 10000\n+      INTEGER, ALLOCATABLE :: H(:)\n+      INTEGER :: I\n+      LOGICAL :: SHARED_MEM\n+\n+      ALLOCATE (H(N))\n+      DO I = 1, N\n+         H(I) = I + 0\n+      END DO\n+\n+      SHARED_MEM = ACC_IS_PRESENT (H)\n+\n+      CALL ACC_PRESENT_OR_CREATE (H)\n+      IF (.NOT. ACC_IS_PRESENT (H)) CALL ABORT\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         H(I) = I + 1\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (1, 0, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 2\n+      END DO\n+\n+      CALL ACC_PRESENT_OR_CREATE (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (2, 1, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 3\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (3, 2, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 4\n+      END DO\n+\n+!      CALL ACC_PCREATE (H)\n+      CALL ACC_PRESENT_OR_CREATE (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (4, 3, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 5\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (5, 4, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 6\n+      END DO\n+\n+      CALL ACC_PRESENT_OR_COPYIN (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (6, 5, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 7\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (7, 6, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 8\n+      END DO\n+\n+!      CALL ACC_PCOPYIN (H)\n+      CALL ACC_PRESENT_OR_COPYIN (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (8, 7, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 9\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (9, 8, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 10\n+      END DO\n+\n+      CALL ACC_COPYOUT (H)\n+      IF (.NOT. SHARED_MEM) THEN\n+         IF (ACC_IS_PRESENT (H)) CALL ABORT\n+      ENDIF\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) CALL ABORT\n+      END DO\n+\n+!      CALL ACC_PCOPYIN (H)\n+      CALL ACC_PRESENT_OR_COPYIN (H)\n+      IF (.NOT. ACC_IS_PRESENT (H)) CALL ABORT\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 11\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (11, 9, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 12\n+      END DO\n+\n+!      CALL ACC_PCOPYIN (H)\n+      CALL ACC_PRESENT_OR_COPYIN (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (12, 11, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 13\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (13, 12, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 14\n+      END DO\n+\n+!      CALL ACC_PCREATE (H)\n+      CALL ACC_PRESENT_OR_CREATE (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (14, 13, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 15\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (15, 14, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 16\n+      END DO\n+\n+!      CALL ACC_PCREATE (H)\n+      CALL ACC_PRESENT_OR_CREATE (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (16, 15, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 17\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (17, 16, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 18\n+      END DO\n+\n+      CALL ACC_UPDATE_SELF (H)\n+      IF (.NOT. ACC_IS_PRESENT (H)) CALL ABORT\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (18, 17, SHARED_MEM)) CALL ABORT\n+      END DO\n+\n+      CALL ACC_DELETE (H)\n+      IF (.NOT. SHARED_MEM) THEN\n+         IF (ACC_IS_PRESENT (H)) CALL ABORT\n+      ENDIF\n+\n+      DEALLOCATE (H)\n+\n+      END PROGRAM MAIN"}, {"sha": "88f55667ab51a96d875871c09f8a68def268cfa1", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-32-2.f", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a67455348046637027060e225a5c022c676426b7/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a67455348046637027060e225a5c022c676426b7/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-2.f?ref=a67455348046637027060e225a5c022c676426b7", "patch": "@@ -0,0 +1,173 @@\n+!     ACC_PRESENT_OR_CREATE, ACC_PRESENT_OR_COPYIN, etc.\n+!     Variant of \"../libgomp.oacc-c-c++-common/lib-32.c\".\n+!     Variant using the \"openacc\" module.\n+\n+!     { dg-do run }\n+\n+      PROGRAM MAIN\n+      USE OPENACC\n+      IMPLICIT NONE\n+\n+      INTEGER, PARAMETER :: N = 10000\n+      INTEGER, ALLOCATABLE :: H(:)\n+      INTEGER :: I\n+      LOGICAL :: SHARED_MEM\n+\n+      ALLOCATE (H(N))\n+      DO I = 1, N\n+         H(I) = I + 0\n+      END DO\n+\n+      SHARED_MEM = ACC_IS_PRESENT (H)\n+\n+      CALL ACC_PRESENT_OR_CREATE (H)\n+      IF (.NOT. ACC_IS_PRESENT (H)) CALL ABORT\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         H(I) = I + 1\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (1, 0, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 2\n+      END DO\n+\n+      CALL ACC_PRESENT_OR_CREATE (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (2, 1, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 3\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (3, 2, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 4\n+      END DO\n+\n+      CALL ACC_PCREATE (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (4, 3, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 5\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (5, 4, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 6\n+      END DO\n+\n+      CALL ACC_PRESENT_OR_COPYIN (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (6, 5, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 7\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (7, 6, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 8\n+      END DO\n+\n+      CALL ACC_PCOPYIN (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (8, 7, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 9\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (9, 8, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 10\n+      END DO\n+\n+      CALL ACC_COPYOUT (H)\n+      IF (.NOT. SHARED_MEM) THEN\n+         IF (ACC_IS_PRESENT (H)) CALL ABORT\n+      ENDIF\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) CALL ABORT\n+      END DO\n+\n+      CALL ACC_PCOPYIN (H)\n+      IF (.NOT. ACC_IS_PRESENT (H)) CALL ABORT\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (10, 9, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 11\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (11, 9, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 12\n+      END DO\n+\n+      CALL ACC_PCOPYIN (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (12, 11, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 13\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (13, 12, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 14\n+      END DO\n+\n+      CALL ACC_PCREATE (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (14, 13, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 15\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (15, 14, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 16\n+      END DO\n+\n+      CALL ACC_PCREATE (H)\n+\n+!$ACC PARALLEL LOOP DEFAULT (PRESENT)\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (16, 15, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 17\n+      END DO\n+!$ACC END PARALLEL LOOP\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (17, 16, SHARED_MEM)) CALL ABORT\n+         H(I) = I + 18\n+      END DO\n+\n+      CALL ACC_UPDATE_SELF (H)\n+      IF (.NOT. ACC_IS_PRESENT (H)) CALL ABORT\n+\n+      DO I = 1, N\n+         IF (H(I) .NE. I + MERGE (18, 17, SHARED_MEM)) CALL ABORT\n+      END DO\n+\n+      CALL ACC_DELETE (H)\n+      IF (.NOT. SHARED_MEM) THEN\n+         IF (ACC_IS_PRESENT (H)) CALL ABORT\n+      ENDIF\n+\n+      DEALLOCATE (H)\n+\n+      END PROGRAM MAIN"}]}