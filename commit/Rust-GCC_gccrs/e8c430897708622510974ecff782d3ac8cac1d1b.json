{"sha": "e8c430897708622510974ecff782d3ac8cac1d1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThjNDMwODk3NzA4NjIyNTEwOTc0ZWNmZjc4MmQzYWM4Y2FjMWQxYg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-11-18T09:33:25Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-11-18T09:33:25Z"}, "message": "[ARM] Handle simple SImode PLUS and MINUS cases in rtx costs\n\n\t* config/arm/arm.c (arm_new_rtx_costs, case PLUS, MINUS):\n\tAdd cost of alu.arith in simple SImode case.\n\nFrom-SVN: r217692", "tree": {"sha": "d916cbc1cd3c172ccf908a67c905cf1dd99df20f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d916cbc1cd3c172ccf908a67c905cf1dd99df20f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8c430897708622510974ecff782d3ac8cac1d1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c430897708622510974ecff782d3ac8cac1d1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8c430897708622510974ecff782d3ac8cac1d1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8c430897708622510974ecff782d3ac8cac1d1b/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddcfa953fc03ed582dfac5c51870fb3df27b6aff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddcfa953fc03ed582dfac5c51870fb3df27b6aff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddcfa953fc03ed582dfac5c51870fb3df27b6aff"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "95f5fa308b5f97c810fe969ce1dfdfa5942ba914", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c430897708622510974ecff782d3ac8cac1d1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c430897708622510974ecff782d3ac8cac1d1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8c430897708622510974ecff782d3ac8cac1d1b", "patch": "@@ -1,3 +1,8 @@\n+2014-11-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_new_rtx_costs, case PLUS, MINUS):\n+\tAdd cost of alu.arith in simple SImode case.\n+\n 2014-11-18  Jiong Wang  <jiong.wang@arm.com>\n \n \t* lra-eliminations.c (update_reg_eliminate): Relax gcc_assert for fixed"}, {"sha": "f9c82a5e5b11c2046bcc135d045778144d7daa06", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8c430897708622510974ecff782d3ac8cac1d1b/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8c430897708622510974ecff782d3ac8cac1d1b/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=e8c430897708622510974ecff782d3ac8cac1d1b", "patch": "@@ -9822,6 +9822,8 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t      *cost += rtx_cost (XEXP (x, 1), code, 1, speed_p);\n \t      return true;\n \t    }\n+\t  else if (speed_p)\n+\t    *cost += extra_cost->alu.arith;\n \n \t  return false;\n \t}\n@@ -10057,6 +10059,9 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t      *cost += rtx_cost (XEXP (x, 0), PLUS, 0, speed_p);\n \t      return true;\n \t    }\n+\t  else if (speed_p)\n+\t    *cost += extra_cost->alu.arith;\n+\n \t  return false;\n \t}\n "}]}