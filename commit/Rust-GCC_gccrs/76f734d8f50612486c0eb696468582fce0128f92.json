{"sha": "76f734d8f50612486c0eb696468582fce0128f92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZmNzM0ZDhmNTA2MTI0ODZjMGViNjk2NDY4NTgyZmNlMDEyOGY5Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-21T11:50:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-21T11:50:02Z"}, "message": "[multiple changes]\n\n2011-12-21  Pascal Obry  <obry@adacore.com>\n\n\t* prj-attr.adb, snames.ads-tmpl: Add Library_Standalone,\n\tLibrary_Fully_Standalone_Options and\n\tLibrary_Fully_Standalone_Supported attributes.\n\t* prj-nmsc.adb (Check_Library): Update check to take into\n\taccount fully standalone libraries. Such shared libraries can\n\tonly depend on static libraries.\n\t(Check_Stand_Alone_Library): Add support for fully standalone libraries.\n\t(Process_Project_Level_Simple_Attributes): Store value for\n\tconfiguration attribute Library_Fully_Standalone_Supported.\n\t* prj.ads, makeutl.adb (Standalone): New enumeration type.\n\t(Project_Data): Standalone_Library now of type Standlone.\n\t(Project_Configuration): Add Lib_Fully_Standalone_Supported\n\tfield.\n\t(Default_Project_Config): Initialize new Lib_Fully_Standalone_Supported\n\tfield.\n\t* clean.adb (Clean_Project): Adjust to new type for Standalone.\n\t* make.adb (Library_Phase): Adjust to new type for Standalone.\n\t(Gnatmake): Likewise.\n\t* mlib-prj.adb (Build_Library): Adjust to new type for\n\tStandalone.\n\n2011-12-21  Thomas Quinot  <quinot@adacore.com>\n\n\t* gnatls.adb (Gnatls): Call Set_Standard_Error at startup, and then\n\tSet_Standard_Output just before producing normal (non-diagnostic)\n\toutput.\n\t* gnatcmd.adb (Gnatcmd): Call Set_Standard_Error at initialization\n\t(and again after parsing project files).\n\n2011-12-21  Vincent Celier  <celier@adacore.com>\n\n\t* prj-conf.adb (Do_Autoconf): When the object directory does\n\tnot exist, create auto.cgpr in the directory where temporary\n\tfiles are created.\n\nFrom-SVN: r182573", "tree": {"sha": "63f6709f6bf7f6b0777b446a6e923af90c5c130b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63f6709f6bf7f6b0777b446a6e923af90c5c130b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76f734d8f50612486c0eb696468582fce0128f92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f734d8f50612486c0eb696468582fce0128f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f734d8f50612486c0eb696468582fce0128f92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f734d8f50612486c0eb696468582fce0128f92/comments", "author": null, "committer": null, "parents": [{"sha": "916e8d27947d5f0590d31bb1c5529e82dc2136e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916e8d27947d5f0590d31bb1c5529e82dc2136e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/916e8d27947d5f0590d31bb1c5529e82dc2136e9"}], "stats": {"total": 610, "additions": 405, "deletions": 205}, "files": [{"sha": "50a0ba86d372cf1ba0a73be756012e3edae96462", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -1,3 +1,40 @@\n+2011-12-21  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-attr.adb, snames.ads-tmpl: Add Library_Standalone,\n+\tLibrary_Fully_Standalone_Options and\n+\tLibrary_Fully_Standalone_Supported attributes.\n+\t* prj-nmsc.adb (Check_Library): Update check to take into\n+\taccount fully standalone libraries. Such shared libraries can\n+\tonly depend on static libraries.\n+\t(Check_Stand_Alone_Library): Add support for fully standalone libraries.\n+\t(Process_Project_Level_Simple_Attributes): Store value for\n+\tconfiguration attribute Library_Fully_Standalone_Supported.\n+\t* prj.ads, makeutl.adb (Standalone): New enumeration type.\n+\t(Project_Data): Standalone_Library now of type Standlone.\n+\t(Project_Configuration): Add Lib_Fully_Standalone_Supported\n+\tfield.\n+\t(Default_Project_Config): Initialize new Lib_Fully_Standalone_Supported\n+\tfield.\n+\t* clean.adb (Clean_Project): Adjust to new type for Standalone.\n+\t* make.adb (Library_Phase): Adjust to new type for Standalone.\n+\t(Gnatmake): Likewise.\n+\t* mlib-prj.adb (Build_Library): Adjust to new type for\n+\tStandalone.\n+\n+2011-12-21  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gnatls.adb (Gnatls): Call Set_Standard_Error at startup, and then\n+\tSet_Standard_Output just before producing normal (non-diagnostic)\n+\toutput.\n+\t* gnatcmd.adb (Gnatcmd): Call Set_Standard_Error at initialization\n+\t(and again after parsing project files).\n+\n+2011-12-21  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-conf.adb (Do_Autoconf): When the object directory does\n+\tnot exist, create auto.cgpr in the directory where temporary\n+\tfiles are created.\n+\n 2011-12-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Insert_Freeze_Node_For_Instance):  Further"}, {"sha": "276fcc656a666d2fe16fc81b231ae4f3b7e77ced", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -1088,8 +1088,8 @@ package body Clean is\n                end if;\n             end if;\n \n-            if Project.Standalone_Library and then\n-              Project.Object_Directory /= No_Path_Information\n+            if Project.Standalone_Library /= No\n+              and then Project.Object_Directory /= No_Path_Information\n             then\n                Delete_Binder_Generated_Files\n                  (Get_Name_String (Project.Object_Directory.Display_Name),"}, {"sha": "02a577ccd72e39d1fe6a3d55fc8685320799801e", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -16359,6 +16359,28 @@ the Library Directory. As a consequence, only the Interface Units may be\n imported from Ada units outside of the library. If other units are imported,\n the binding phase will fail.\n \n+@noindent\n+It is also possible to build a fully standalone library where not only\n+the code to elaborate and finalize the library is embedded but also\n+ensuring that the library is linked only against static\n+libraries. So a fully standalone library only depends on system\n+libraries, all other code, including the GNAT runtime, is embedded. To\n+build a fully standalone library the attribute\n+@code{Library_Standalone} must be set to @code{full}:\n+\n+@smallexample @c projectfile\n+@group\n+   for Library_Dir use \"lib_dir\";\n+   for Library_Name use \"dummy\";\n+   for Library_Interface use (\"int1\", \"int1.child\");\n+   for Library_Standalone use \"full\";\n+@end group\n+@end smallexample\n+\n+@noindent\n+The default value for this attribute is @code{standard} in which case\n+a not fully standalone library is built.\n+\n The attribute @code{Library_Src_Dir} may be specified for a\n Stand-Alone Library. @code{Library_Src_Dir} is a simple attribute that has a\n single string value. Its value must be the path (absolute or relative to the"}, {"sha": "2e1b8dd818299d9e99688696984047abfa4cedcb", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -34,7 +34,7 @@ with MLib.Fil;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Osint;    use Osint;\n-with Output;\n+with Output;   use Output;\n with Prj;      use Prj;\n with Prj.Env;\n with Prj.Ext;  use Prj.Ext;\n@@ -1375,6 +1375,10 @@ procedure GNATCmd is\n --  Start of processing for GNATCmd\n \n begin\n+   --  All output from GNATCmd is debugging or error output: send to stderr\n+\n+   Set_Standard_Error;\n+\n    --  Initializations\n \n    Csets.Initialize;\n@@ -1901,6 +1905,10 @@ begin\n             Env               => Root_Environment,\n             Packages_To_Check => Packages_To_Check);\n \n+         --  Prj.Pars.Parse calls Set_Standard_Output, reset to stderr\n+\n+         Set_Standard_Error;\n+\n          if Project = Prj.No_Project then\n             Fail (\"\"\"\" & Project_File.all & \"\"\" processing failed\");\n          end if;"}, {"sha": "a98aba56c6a3d698e7358292aa7b6b744a06609f", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -1553,6 +1553,7 @@ begin\n    --  If -l (output license information) is given, it must be the only switch\n \n    if License and then Arg_Count /= 2 then\n+      Set_Standard_Error;\n       Write_Str (\"Can't use -l with another switch\");\n       Write_Eol;\n       Usage;\n@@ -1713,6 +1714,7 @@ begin\n             GNATDIST.Output_No_ALI (Lib_File_Name (Main_File));\n \n          else\n+            Set_Standard_Error;\n             Write_Str (\"Can't find library info for \");\n             Get_Name_String (Main_File);\n             Write_Char ('\"'); -- \"\n@@ -1745,6 +1747,10 @@ begin\n       end if;\n    end loop;\n \n+   --  Reset default output file descriptor, if needed\n+\n+   Set_Standard_Output;\n+\n    if Very_Verbose_Mode then\n       for A in ALIs.First .. ALIs.Last loop\n          GNATDIST.Output_ALI (A);"}, {"sha": "dd211cb4857d3d22f7240102e54b2b4525bacf2d", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -4647,7 +4647,7 @@ package body Make is\n       Proj1 := Project_Tree.Projects;\n       while Proj1 /= null loop\n          if Proj1.Project.Extended_By = No_Project then\n-            if Proj1.Project.Standalone_Library then\n+            if Proj1.Project.Standalone_Library /= No then\n                Stand_Alone_Libraries := True;\n             end if;\n \n@@ -5791,7 +5791,7 @@ package body Make is\n       if Osint.Number_Of_Files = 0 then\n          if Main_Project /= No_Project and then Main_Project.Library then\n             if Do_Bind_Step\n-              and then not Main_Project.Standalone_Library\n+              and then Main_Project.Standalone_Library = No\n             then\n                Make_Failed (\"only stand-alone libraries may be bound\");\n             end if;"}, {"sha": "f09c0ad9d6bcca5b853e3a57656201dfa3703959", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -2896,7 +2896,7 @@ package body Makeutl is\n \n                   if Src_Id /= No_Source\n                     and then (not Excluding_Shared_SALs\n-                               or else not Src_Id.Project.Standalone_Library\n+                               or else Src_Id.Project.Standalone_Library = No\n                                or else Src_Id.Project.Library_Kind = Static)\n                   then\n                      Queue.Insert"}, {"sha": "3101354d14a8ff83202caaa7beedca80c077f504", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -317,7 +317,7 @@ package body MLib.Prj is\n                                 Get_Name_String\n                                   (For_Project.Object_Directory.Display_Name);\n \n-      Standalone   : constant Boolean := For_Project.Standalone_Library;\n+      Standalone   : constant Boolean := For_Project.Standalone_Library /= No;\n \n       Project_Name : constant String := Get_Name_String (For_Project.Name);\n "}, {"sha": "4682051f54eeed9a25bdcf545303a851b91fc093", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -105,6 +105,9 @@ package body Prj.Attr is\n    \"SVlibrary_kind#\" &\n    \"SVlibrary_version#\" &\n    \"LVlibrary_interface#\" &\n+   \"SVlibrary_standalone#\" &\n+   \"LVlibrary_fully_standalone_options#\" &\n+   \"SVlibrary_fully_standalone_supported#\" &\n    \"SVlibrary_auto_init#\" &\n    \"LVleading_library_options#\" &\n    \"LVlibrary_options#\" &"}, {"sha": "42afa1b5454f7df0a795a7770044f065e79d71d4", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -1155,8 +1155,18 @@ package body Prj.Conf is\n                         File_Use  => \"configuration file\");\n \n                      if Path_FD /= Invalid_FD then\n-                        Args (3) := new String'(Get_Name_String (Path_Name));\n-                        GNAT.OS_Lib.Close (Path_FD);\n+                        declare\n+                           Temp_Dir : constant String :=\n+                             Containing_Directory\n+                               (Get_Name_String (Path_Name));\n+                        begin\n+                           GNAT.OS_Lib.Close (Path_FD);\n+                           Args (3) :=\n+                             new String'(Temp_Dir &\n+                                         Directory_Separator &\n+                                         Auto_Cgpr);\n+                           Delete_File (Get_Name_String (Path_Name));\n+                        end;\n \n                      else\n                         --  We'll have an error message later on"}, {"sha": "678b6e9f9914bdaf9bc46ee45a64a7cc6897746d", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 109, "deletions": 24, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -2155,6 +2155,24 @@ package body Prj.Nmsc is\n                            Attribute.Value.Location, Project);\n                   end;\n \n+               elsif\n+                 Attribute.Name = Name_Library_Fully_Standalone_Supported\n+               then\n+                  declare\n+                     pragma Unsuppress (All_Checks);\n+                  begin\n+                     Project.Config.Lib_Fully_Standalone_Supported :=\n+                       Boolean'Value (Get_Name_String (Attribute.Value.Value));\n+                  exception\n+                     when Constraint_Error =>\n+                        Error_Msg\n+                          (Data.Flags,\n+                           \"invalid value \"\"\"\n+                             & Get_Name_String (Attribute.Value.Value)\n+                             & \"\"\" for Library_Fully_Standalone_Supported\",\n+                           Attribute.Value.Location, Project);\n+                  end;\n+\n                elsif Attribute.Name = Name_Shared_Library_Prefix then\n                   Project.Config.Shared_Lib_Prefix :=\n                     File_Name_Type (Attribute.Value.Value);\n@@ -2778,36 +2796,39 @@ package body Prj.Nmsc is\n    is\n       Shared : constant Shared_Project_Tree_Data_Access := Data.Tree.Shared;\n \n-      Attributes   : constant Prj.Variable_Id := Project.Decl.Attributes;\n+      Attributes     : constant Prj.Variable_Id := Project.Decl.Attributes;\n \n-      Lib_Dir      : constant Prj.Variable_Value :=\n-                       Prj.Util.Value_Of\n-                         (Snames.Name_Library_Dir, Attributes, Shared);\n+      Lib_Dir        : constant Prj.Variable_Value :=\n+                         Prj.Util.Value_Of\n+                           (Snames.Name_Library_Dir, Attributes, Shared);\n \n-      Lib_Name     : constant Prj.Variable_Value :=\n-                       Prj.Util.Value_Of\n-                         (Snames.Name_Library_Name, Attributes, Shared);\n+      Lib_Name       : constant Prj.Variable_Value :=\n+                         Prj.Util.Value_Of\n+                           (Snames.Name_Library_Name, Attributes, Shared);\n \n-      Lib_Version  : constant Prj.Variable_Value :=\n-                       Prj.Util.Value_Of\n-                         (Snames.Name_Library_Version, Attributes, Shared);\n+      Lib_Standalone : constant Prj.Variable_Value :=\n+                         Prj.Util.Value_Of\n+                           (Snames.Name_Library_Standalone,\n+                            Attributes, Shared);\n \n-      Lib_ALI_Dir  : constant Prj.Variable_Value :=\n-                       Prj.Util.Value_Of\n-                         (Snames.Name_Library_Ali_Dir, Attributes, Shared);\n+      Lib_Version    : constant Prj.Variable_Value :=\n+                         Prj.Util.Value_Of\n+                           (Snames.Name_Library_Version, Attributes, Shared);\n \n-      Lib_GCC      : constant Prj.Variable_Value :=\n-                       Prj.Util.Value_Of\n-                         (Snames.Name_Library_GCC, Attributes, Shared);\n+      Lib_ALI_Dir    : constant Prj.Variable_Value :=\n+                         Prj.Util.Value_Of\n+                           (Snames.Name_Library_Ali_Dir, Attributes, Shared);\n \n-      The_Lib_Kind : constant Prj.Variable_Value :=\n-                       Prj.Util.Value_Of\n-                         (Snames.Name_Library_Kind, Attributes, Shared);\n-\n-      Imported_Project_List : Project_List;\n+      Lib_GCC        : constant Prj.Variable_Value :=\n+                         Prj.Util.Value_Of\n+                           (Snames.Name_Library_GCC, Attributes, Shared);\n \n-      Continuation : String_Access := No_Continuation_String'Access;\n+      The_Lib_Kind   : constant Prj.Variable_Value :=\n+                         Prj.Util.Value_Of\n+                           (Snames.Name_Library_Kind, Attributes, Shared);\n \n+      Imported_Project_List : Project_List;\n+      Continuation          : String_Access := No_Continuation_String'Access;\n       Support_For_Libraries : Library_Support;\n \n       Library_Directory_Present : Boolean;\n@@ -2868,8 +2889,30 @@ package body Prj.Nmsc is\n                   end if;\n                end if;\n \n+            elsif Project.Library_Kind /= Static\n+              and then not Lib_Standalone.Default\n+              and then Get_Name_String (Lib_Standalone.Value) = \"full\"\n+              and then Proj.Library_Kind /= Static\n+            then\n+               --  A fully standalone library must depend only on static\n+               --  libraries.\n+\n+               Error_Msg_Name_1 := Project.Name;\n+               Error_Msg_Name_2 := Proj.Name;\n+\n+               Error_Msg\n+                 (Data.Flags,\n+                  Continuation.all &\n+                    \"standalone library project %% cannot import shared \" &\n+                    \"library project %%\",\n+                  Project.Location, Project);\n+               Continuation := Continuation_String'Access;\n+\n             elsif Project.Library_Kind /= Static\n               and then Proj.Library_Kind = Static\n+              and then (Lib_Standalone.Default\n+                         or else\n+                           Get_Name_String (Lib_Standalone.Value) /= \"full\")\n             then\n                Error_Msg_Name_1 := Project.Name;\n                Error_Msg_Name_2 := Proj.Name;\n@@ -4309,6 +4352,12 @@ package body Prj.Nmsc is\n                                  Project.Decl.Attributes,\n                                  Shared);\n \n+      Lib_Standalone      : constant Prj.Variable_Value :=\n+                              Prj.Util.Value_Of\n+                                (Snames.Name_Library_Standalone,\n+                                 Project.Decl.Attributes,\n+                                 Shared);\n+\n       Lib_Auto_Init       : constant Prj.Variable_Value :=\n                               Prj.Util.Value_Of\n                                 (Snames.Name_Library_Auto_Init,\n@@ -4353,8 +4402,17 @@ package body Prj.Nmsc is\n       --  It is a stand-alone library project file if attribute\n       --  Library_Interface is defined.\n \n-      if not Lib_Interfaces.Default then\n+      if Lib_Interfaces.Default then\n+         if not Lib_Standalone.Default\n+           and then Get_Name_String (Lib_Standalone.Value) /= \"no\"\n+         then\n+            Error_Msg\n+              (Data.Flags,\n+               \"Library_Standalone valid only if Library_Interface is set\",\n+               Lib_Standalone.Location, Project);\n+         end if;\n \n+      else\n          --  The name of a stand-alone library needs to have the syntax of an\n          --  Ada identifier.\n \n@@ -4400,7 +4458,34 @@ package body Prj.Nmsc is\n             Unit           : Name_Id;\n \n          begin\n-            Project.Standalone_Library := True;\n+            if Lib_Standalone.Default then\n+               Project.Standalone_Library := Standard;\n+\n+            else\n+               Get_Name_String (Lib_Standalone.Value);\n+               To_Lower (Name_Buffer (1 .. Name_Len));\n+\n+               if Name_Buffer (1 .. Name_Len) = \"standard\" then\n+                  Project.Standalone_Library := Standard;\n+\n+               elsif Name_Buffer (1 .. Name_Len) = \"full\" then\n+                  Project.Standalone_Library := Full;\n+\n+               elsif Name_Buffer (1 .. Name_Len) = \"no\" then\n+                  Project.Standalone_Library := No;\n+                  Error_Msg\n+                    (Data.Flags,\n+                     \"wrong value for Library_Standalone \"\n+                     & \"when Library_Interface defined\",\n+                     Lib_Standalone.Location, Project);\n+\n+               else\n+                  Error_Msg\n+                    (Data.Flags,\n+                     \"invalid value for attribute Library_Standalone\",\n+                     Lib_Standalone.Location, Project);\n+               end if;\n+            end if;\n \n             --  Library_Interface cannot be an empty list\n "}, {"sha": "7b9c0db7d943075d9c7eb5865e3a5a71b55bf4b0", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 36, "deletions": 30, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -1025,6 +1025,9 @@ package Prj is\n       --  The level of library support. Specified in the configuration. Support\n       --  is none, static libraries only or both static and shared libraries.\n \n+      Lib_Fully_Standalone_Supported : Boolean := False;\n+      --  True when building fully standalone libraries supported on the target\n+\n       Archive_Builder : Name_List_Index := No_Name_List;\n       --  The name of the executable to build archives, with the minimum\n       --  switches. Specified in the configuration.\n@@ -1077,37 +1080,38 @@ package Prj is\n    end record;\n \n    Default_Project_Config : constant Project_Configuration :=\n-                              (Target                        => No_Name,\n-                               Run_Path_Option               => No_Name_List,\n-                               Run_Path_Origin               => No_Name,\n-                               Library_Install_Name_Option   => No_Name,\n-                               Separate_Run_Path_Options     => False,\n-                               Executable_Suffix             => No_Name,\n-                               Linker                        => No_Path,\n-                               Map_File_Option               => No_Name,\n+                              (Target                         => No_Name,\n+                               Run_Path_Option                => No_Name_List,\n+                               Run_Path_Origin                => No_Name,\n+                               Library_Install_Name_Option    => No_Name,\n+                               Separate_Run_Path_Options      => False,\n+                               Executable_Suffix              => No_Name,\n+                               Linker                         => No_Path,\n+                               Map_File_Option                => No_Name,\n                                Trailing_Linker_Required_Switches =>\n                                  No_Name_List,\n-                               Linker_Executable_Option      => No_Name_List,\n-                               Linker_Lib_Dir_Option         => No_Name,\n-                               Linker_Lib_Name_Option        => No_Name,\n-                               Library_Builder               => No_Path,\n-                               Max_Command_Line_Length       => 0,\n-                               Resp_File_Format              => None,\n-                               Resp_File_Options             => No_Name_List,\n-                               Lib_Support                   => None,\n-                               Archive_Builder               => No_Name_List,\n-                               Archive_Builder_Append_Option => No_Name_List,\n-                               Archive_Indexer               => No_Name_List,\n-                               Archive_Suffix                => No_File,\n-                               Lib_Partial_Linker            => No_Name_List,\n-                               Shared_Lib_Driver             => No_File,\n-                               Shared_Lib_Prefix             => No_File,\n-                               Shared_Lib_Suffix             => No_File,\n-                               Shared_Lib_Min_Options        => No_Name_List,\n-                               Lib_Version_Options           => No_Name_List,\n-                               Symbolic_Link_Supported       => False,\n-                               Lib_Maj_Min_Id_Supported      => False,\n-                               Auto_Init_Supported           => False);\n+                               Linker_Executable_Option       => No_Name_List,\n+                               Linker_Lib_Dir_Option          => No_Name,\n+                               Linker_Lib_Name_Option         => No_Name,\n+                               Library_Builder                => No_Path,\n+                               Max_Command_Line_Length        => 0,\n+                               Resp_File_Format               => None,\n+                               Resp_File_Options              => No_Name_List,\n+                               Lib_Support                    => None,\n+                               Lib_Fully_Standalone_Supported => False,\n+                               Archive_Builder                => No_Name_List,\n+                               Archive_Builder_Append_Option  => No_Name_List,\n+                               Archive_Indexer                => No_Name_List,\n+                               Archive_Suffix                 => No_File,\n+                               Lib_Partial_Linker             => No_Name_List,\n+                               Shared_Lib_Driver              => No_File,\n+                               Shared_Lib_Prefix              => No_File,\n+                               Shared_Lib_Suffix              => No_File,\n+                               Shared_Lib_Min_Options         => No_Name_List,\n+                               Lib_Version_Options            => No_Name_List,\n+                               Symbolic_Link_Supported        => False,\n+                               Lib_Maj_Min_Id_Supported       => False,\n+                               Auto_Init_Supported            => False);\n \n    -------------------------\n    -- Aggregated projects --\n@@ -1139,6 +1143,8 @@ package Prj is\n \n    --  The following record describes a project file representation\n \n+   type Standalone is (No, Standard, Full);\n+\n    type Project_Data (Qualifier : Project_Qualifier := Unspecified) is record\n \n       -------------\n@@ -1251,7 +1257,7 @@ package Prj is\n       Lib_Internal_Name : Name_Id := No_Name;\n       --  If a library project, internal name store inside the library\n \n-      Standalone_Library : Boolean := False;\n+      Standalone_Library : Standalone := No;\n       --  Indicate that this is a Standalone Library Project File\n \n       Lib_Interface_ALIs : String_List_Id := Nil_String;"}, {"sha": "8e37751b2dc72fed514ed6fd85d4a2c53229e772", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -1777,6 +1777,26 @@ two attributes that make a project a Library Project (@code{Library_Name} and\n @end group\n @end smallexample\n \n+@item @b{Library_Standalone}:\n+@cindex @code{Library_Standalone}\n+  This attribute defines the kind of standalone library to\n+  build. Values are either @code{standard} (the default), @code{no} or\n+  @code{full}. When @code{standard} is used the code to elaborate and\n+  finalize the library is embedded, when @code{full} is used the\n+  library can furthermore only depends on static libraries (including\n+  the GNAT runtime). This attribute can be set to @code{no} to make it clear\n+  that the library should not be standalone in which case the\n+  @code{Library_Interface} should not defined.\n+\n+@smallexample @c projectfile\n+@group\n+     for Library_Dir use \"lib\";\n+     for Library_Name use \"loggin\";\n+     for Library_Interface use (\"lib1\", \"lib2\");  --  unit names\n+     for Library_Standalone use \"full\";\n+@end group\n+@end smallexample\n+\n @end table\n \n In order to include the elaboration code in the stand-alone library, the binder"}, {"sha": "f29490f263272a00f1138a678b742999cc5eec8b", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 145, "deletions": 142, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f734d8f50612486c0eb696468582fce0128f92/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=76f734d8f50612486c0eb696468582fce0128f92", "patch": "@@ -1089,148 +1089,151 @@ package Snames is\n \n    --  Additional reserved words and identifiers used in GNAT Project Files\n    --  Note that Name_External is already previously declared\n-   --  The names with the --  GPR annotation are only used in gprbuild\n-\n-   Name_Aggregate                        : constant Name_Id := N + $;\n-   Name_Archive_Builder                  : constant Name_Id := N + $;\n-   Name_Archive_Builder_Append_Option    : constant Name_Id := N + $;\n-   Name_Archive_Indexer                  : constant Name_Id := N + $;\n-   Name_Archive_Suffix                   : constant Name_Id := N + $;\n-   Name_Binder                           : constant Name_Id := N + $;\n-   Name_Body_Suffix                      : constant Name_Id := N + $;\n-   Name_Builder                          : constant Name_Id := N + $;\n-   Name_Compiler                         : constant Name_Id := N + $;\n-   Name_Compiler_Command                 : constant Name_Id := N + $; --  GPR\n-   Name_Config_Body_File_Name            : constant Name_Id := N + $;\n-   Name_Config_Body_File_Name_Index      : constant Name_Id := N + $;\n-   Name_Config_Body_File_Name_Pattern    : constant Name_Id := N + $;\n-   Name_Config_File_Switches             : constant Name_Id := N + $;\n-   Name_Config_File_Unique               : constant Name_Id := N + $;\n-   Name_Config_Spec_File_Name            : constant Name_Id := N + $;\n-   Name_Config_Spec_File_Name_Index      : constant Name_Id := N + $;\n-   Name_Config_Spec_File_Name_Pattern    : constant Name_Id := N + $;\n-   Name_Configuration                    : constant Name_Id := N + $;\n-   Name_Cross_Reference                  : constant Name_Id := N + $;\n-   Name_Default_Language                 : constant Name_Id := N + $;\n-   Name_Default_Switches                 : constant Name_Id := N + $;\n-   Name_Dependency_Driver                : constant Name_Id := N + $;\n-   Name_Dependency_Kind                  : constant Name_Id := N + $;\n-   Name_Dependency_Switches              : constant Name_Id := N + $;\n-   Name_Driver                           : constant Name_Id := N + $;\n-   Name_Excluded_Source_Dirs             : constant Name_Id := N + $;\n-   Name_Excluded_Source_Files            : constant Name_Id := N + $;\n-   Name_Excluded_Source_List_File        : constant Name_Id := N + $;\n-   Name_Exec_Dir                         : constant Name_Id := N + $;\n-   Name_Executable                       : constant Name_Id := N + $;\n-   Name_Executable_Suffix                : constant Name_Id := N + $;\n-   Name_Extends                          : constant Name_Id := N + $;\n-   Name_External_As_List                 : constant Name_Id := N + $;\n-   Name_Externally_Built                 : constant Name_Id := N + $;\n-   Name_Finder                           : constant Name_Id := N + $;\n-   Name_Global_Compilation_Switches      : constant Name_Id := N + $;\n-   Name_Global_Configuration_Pragmas     : constant Name_Id := N + $;\n-   Name_Global_Config_File               : constant Name_Id := N + $; --  GPR\n-   Name_Gnatls                           : constant Name_Id := N + $;\n-   Name_Gnatstub                         : constant Name_Id := N + $;\n-   Name_Gnu                              : constant Name_Id := N + $;\n-   Name_Ide                              : constant Name_Id := N + $;\n-   Name_Ignore_Source_Sub_Dirs           : constant Name_Id := N + $;\n-   Name_Implementation                   : constant Name_Id := N + $;\n-   Name_Implementation_Exceptions        : constant Name_Id := N + $;\n-   Name_Implementation_Suffix            : constant Name_Id := N + $;\n-   Name_Include_Switches                 : constant Name_Id := N + $;\n-   Name_Include_Path                     : constant Name_Id := N + $;\n-   Name_Include_Path_File                : constant Name_Id := N + $;\n-   Name_Inherit_Source_Path              : constant Name_Id := N + $;\n-   Name_Languages                        : constant Name_Id := N + $;\n-   Name_Language_Kind                    : constant Name_Id := N + $;\n-   Name_Leading_Library_Options          : constant Name_Id := N + $;\n-   Name_Leading_Required_Switches        : constant Name_Id := N + $;\n-   Name_Leading_Switches                 : constant Name_Id := N + $;\n-   Name_Library                          : constant Name_Id := N + $;\n-   Name_Library_Ali_Dir                  : constant Name_Id := N + $;\n-   Name_Library_Auto_Init                : constant Name_Id := N + $;\n-   Name_Library_Auto_Init_Supported      : constant Name_Id := N + $;\n-   Name_Library_Builder                  : constant Name_Id := N + $;\n-   Name_Library_Dir                      : constant Name_Id := N + $;\n-   Name_Library_GCC                      : constant Name_Id := N + $;\n-   Name_Library_Install_Name_Option      : constant Name_Id := N + $;\n-   Name_Library_Interface                : constant Name_Id := N + $;\n-   Name_Library_Kind                     : constant Name_Id := N + $;\n-   Name_Library_Name                     : constant Name_Id := N + $;\n-   Name_Library_Major_Minor_Id_Supported : constant Name_Id := N + $;\n-   Name_Library_Options                  : constant Name_Id := N + $;\n-   Name_Library_Partial_Linker           : constant Name_Id := N + $;\n-   Name_Library_Reference_Symbol_File    : constant Name_Id := N + $;\n-   Name_Library_Src_Dir                  : constant Name_Id := N + $;\n-   Name_Library_Support                  : constant Name_Id := N + $;\n-   Name_Library_Symbol_File              : constant Name_Id := N + $;\n-   Name_Library_Symbol_Policy            : constant Name_Id := N + $;\n-   Name_Library_Version                  : constant Name_Id := N + $;\n-   Name_Library_Version_Switches         : constant Name_Id := N + $;\n-   Name_Linker                           : constant Name_Id := N + $;\n-   Name_Linker_Executable_Option         : constant Name_Id := N + $;\n-   Name_Linker_Lib_Dir_Option            : constant Name_Id := N + $;\n-   Name_Linker_Lib_Name_Option           : constant Name_Id := N + $;\n-   Name_Local_Config_File                : constant Name_Id := N + $; --  GPR\n-   Name_Local_Configuration_Pragmas      : constant Name_Id := N + $;\n-   Name_Locally_Removed_Files            : constant Name_Id := N + $;\n-   Name_Map_File_Option                  : constant Name_Id := N + $;\n-   Name_Mapping_File_Switches            : constant Name_Id := N + $;\n-   Name_Mapping_Spec_Suffix              : constant Name_Id := N + $;\n-   Name_Mapping_Body_Suffix              : constant Name_Id := N + $;\n-   Name_Max_Command_Line_Length          : constant Name_Id := N + $;\n-   Name_Metrics                          : constant Name_Id := N + $;\n-   Name_Multi_Unit_Object_Separator      : constant Name_Id := N + $;\n-   Name_Multi_Unit_Switches              : constant Name_Id := N + $;\n-   Name_Naming                           : constant Name_Id := N + $;\n-   Name_None                             : constant Name_Id := N + $;\n-   Name_Object_File_Suffix               : constant Name_Id := N + $;\n-   Name_Object_File_Switches             : constant Name_Id := N + $;\n-   Name_Object_Generated                 : constant Name_Id := N + $;\n-   Name_Object_List                      : constant Name_Id := N + $;\n-   Name_Objects_Linked                   : constant Name_Id := N + $;\n-   Name_Objects_Path                     : constant Name_Id := N + $;\n-   Name_Objects_Path_File                : constant Name_Id := N + $;\n-   Name_Object_Dir                       : constant Name_Id := N + $;\n-   Name_Option_List                      : constant Name_Id := N + $;\n-   Name_Path_Syntax                      : constant Name_Id := N + $;\n-   Name_Pic_Option                       : constant Name_Id := N + $;\n-   Name_Pretty_Printer                   : constant Name_Id := N + $;\n-   Name_Prefix                           : constant Name_Id := N + $;\n-   Name_Project                          : constant Name_Id := N + $;\n-   Name_Project_Dir                      : constant Name_Id := N + $;\n-   Name_Project_Files                    : constant Name_Id := N + $;\n-   Name_Project_Path                     : constant Name_Id := N + $;\n-   Name_Response_File_Format             : constant Name_Id := N + $;\n-   Name_Response_File_Switches           : constant Name_Id := N + $;\n-   Name_Roots                            : constant Name_Id := N + $; --  GPR\n-   Name_Required_Switches                : constant Name_Id := N + $;\n-   Name_Run_Path_Option                  : constant Name_Id := N + $;\n-   Name_Run_Path_Origin                  : constant Name_Id := N + $;\n-   Name_Separate_Run_Path_Options        : constant Name_Id := N + $;\n-   Name_Shared_Library_Minimum_Switches  : constant Name_Id := N + $;\n-   Name_Shared_Library_Prefix            : constant Name_Id := N + $;\n-   Name_Shared_Library_Suffix            : constant Name_Id := N + $;\n-   Name_Separate_Suffix                  : constant Name_Id := N + $;\n-   Name_Source_Dirs                      : constant Name_Id := N + $;\n-   Name_Source_File_Switches             : constant Name_Id := N + $;\n-   Name_Source_Files                     : constant Name_Id := N + $;\n-   Name_Source_List_File                 : constant Name_Id := N + $;\n-   Name_Spec                             : constant Name_Id := N + $;\n-   Name_Spec_Suffix                      : constant Name_Id := N + $;\n-   Name_Specification                    : constant Name_Id := N + $;\n-   Name_Specification_Exceptions         : constant Name_Id := N + $;\n-   Name_Specification_Suffix             : constant Name_Id := N + $;\n-   Name_Stack                            : constant Name_Id := N + $;\n-   Name_Switches                         : constant Name_Id := N + $;\n-   Name_Symbolic_Link_Supported          : constant Name_Id := N + $;\n-   Name_Synchronize                      : constant Name_Id := N + $;\n-   Name_Toolchain_Description            : constant Name_Id := N + $;\n-   Name_Toolchain_Version                : constant Name_Id := N + $;\n-   Name_Trailing_Required_Switches       : constant Name_Id := N + $;\n-   Name_Runtime_Library_Dir              : constant Name_Id := N + $;\n-   Name_Runtime_Source_Dir               : constant Name_Id := N + $;\n+   --  The names with the -- GB annotation are only used in gprbuild\n+\n+   Name_Aggregate                          : constant Name_Id := N + $;\n+   Name_Archive_Builder                    : constant Name_Id := N + $;\n+   Name_Archive_Builder_Append_Option      : constant Name_Id := N + $;\n+   Name_Archive_Indexer                    : constant Name_Id := N + $;\n+   Name_Archive_Suffix                     : constant Name_Id := N + $;\n+   Name_Binder                             : constant Name_Id := N + $;\n+   Name_Body_Suffix                        : constant Name_Id := N + $;\n+   Name_Builder                            : constant Name_Id := N + $;\n+   Name_Compiler                           : constant Name_Id := N + $;\n+   Name_Compiler_Command                   : constant Name_Id := N + $; -- GB\n+   Name_Config_Body_File_Name              : constant Name_Id := N + $;\n+   Name_Config_Body_File_Name_Index        : constant Name_Id := N + $;\n+   Name_Config_Body_File_Name_Pattern      : constant Name_Id := N + $;\n+   Name_Config_File_Switches               : constant Name_Id := N + $;\n+   Name_Config_File_Unique                 : constant Name_Id := N + $;\n+   Name_Config_Spec_File_Name              : constant Name_Id := N + $;\n+   Name_Config_Spec_File_Name_Index        : constant Name_Id := N + $;\n+   Name_Config_Spec_File_Name_Pattern      : constant Name_Id := N + $;\n+   Name_Configuration                      : constant Name_Id := N + $;\n+   Name_Cross_Reference                    : constant Name_Id := N + $;\n+   Name_Default_Language                   : constant Name_Id := N + $;\n+   Name_Default_Switches                   : constant Name_Id := N + $;\n+   Name_Dependency_Driver                  : constant Name_Id := N + $;\n+   Name_Dependency_Kind                    : constant Name_Id := N + $;\n+   Name_Dependency_Switches                : constant Name_Id := N + $;\n+   Name_Driver                             : constant Name_Id := N + $;\n+   Name_Excluded_Source_Dirs               : constant Name_Id := N + $;\n+   Name_Excluded_Source_Files              : constant Name_Id := N + $;\n+   Name_Excluded_Source_List_File          : constant Name_Id := N + $;\n+   Name_Exec_Dir                           : constant Name_Id := N + $;\n+   Name_Executable                         : constant Name_Id := N + $;\n+   Name_Executable_Suffix                  : constant Name_Id := N + $;\n+   Name_Extends                            : constant Name_Id := N + $;\n+   Name_External_As_List                   : constant Name_Id := N + $;\n+   Name_Externally_Built                   : constant Name_Id := N + $;\n+   Name_Finder                             : constant Name_Id := N + $;\n+   Name_Global_Compilation_Switches        : constant Name_Id := N + $;\n+   Name_Global_Configuration_Pragmas       : constant Name_Id := N + $;\n+   Name_Global_Config_File                 : constant Name_Id := N + $; -- GB\n+   Name_Gnatls                             : constant Name_Id := N + $;\n+   Name_Gnatstub                           : constant Name_Id := N + $;\n+   Name_Gnu                                : constant Name_Id := N + $;\n+   Name_Ide                                : constant Name_Id := N + $;\n+   Name_Ignore_Source_Sub_Dirs             : constant Name_Id := N + $;\n+   Name_Implementation                     : constant Name_Id := N + $;\n+   Name_Implementation_Exceptions          : constant Name_Id := N + $;\n+   Name_Implementation_Suffix              : constant Name_Id := N + $;\n+   Name_Include_Switches                   : constant Name_Id := N + $;\n+   Name_Include_Path                       : constant Name_Id := N + $;\n+   Name_Include_Path_File                  : constant Name_Id := N + $;\n+   Name_Inherit_Source_Path                : constant Name_Id := N + $;\n+   Name_Languages                          : constant Name_Id := N + $;\n+   Name_Language_Kind                      : constant Name_Id := N + $;\n+   Name_Leading_Library_Options            : constant Name_Id := N + $;\n+   Name_Leading_Required_Switches          : constant Name_Id := N + $;\n+   Name_Leading_Switches                   : constant Name_Id := N + $;\n+   Name_Library                            : constant Name_Id := N + $;\n+   Name_Library_Ali_Dir                    : constant Name_Id := N + $;\n+   Name_Library_Auto_Init                  : constant Name_Id := N + $;\n+   Name_Library_Auto_Init_Supported        : constant Name_Id := N + $;\n+   Name_Library_Builder                    : constant Name_Id := N + $;\n+   Name_Library_Dir                        : constant Name_Id := N + $;\n+   Name_Library_GCC                        : constant Name_Id := N + $;\n+   Name_Library_Install_Name_Option        : constant Name_Id := N + $;\n+   Name_Library_Interface                  : constant Name_Id := N + $;\n+   Name_Library_Kind                       : constant Name_Id := N + $;\n+   Name_Library_Name                       : constant Name_Id := N + $;\n+   Name_Library_Major_Minor_Id_Supported   : constant Name_Id := N + $;\n+   Name_Library_Options                    : constant Name_Id := N + $;\n+   Name_Library_Partial_Linker             : constant Name_Id := N + $;\n+   Name_Library_Reference_Symbol_File      : constant Name_Id := N + $;\n+   Name_Library_Standalone                 : constant Name_Id := N + $;\n+   Name_Library_Fully_Standalone_Options   : constant Name_Id := N + $;\n+   Name_Library_Fully_Standalone_Supported : constant Name_Id := N + $; -- GB\n+   Name_Library_Src_Dir                    : constant Name_Id := N + $;\n+   Name_Library_Support                    : constant Name_Id := N + $;\n+   Name_Library_Symbol_File                : constant Name_Id := N + $;\n+   Name_Library_Symbol_Policy              : constant Name_Id := N + $;\n+   Name_Library_Version                    : constant Name_Id := N + $;\n+   Name_Library_Version_Switches           : constant Name_Id := N + $;\n+   Name_Linker                             : constant Name_Id := N + $;\n+   Name_Linker_Executable_Option           : constant Name_Id := N + $;\n+   Name_Linker_Lib_Dir_Option              : constant Name_Id := N + $;\n+   Name_Linker_Lib_Name_Option             : constant Name_Id := N + $;\n+   Name_Local_Config_File                  : constant Name_Id := N + $; -- GB\n+   Name_Local_Configuration_Pragmas        : constant Name_Id := N + $;\n+   Name_Locally_Removed_Files              : constant Name_Id := N + $;\n+   Name_Map_File_Option                    : constant Name_Id := N + $;\n+   Name_Mapping_File_Switches              : constant Name_Id := N + $;\n+   Name_Mapping_Spec_Suffix                : constant Name_Id := N + $;\n+   Name_Mapping_Body_Suffix                : constant Name_Id := N + $;\n+   Name_Max_Command_Line_Length            : constant Name_Id := N + $;\n+   Name_Metrics                            : constant Name_Id := N + $;\n+   Name_Multi_Unit_Object_Separator        : constant Name_Id := N + $;\n+   Name_Multi_Unit_Switches                : constant Name_Id := N + $;\n+   Name_Naming                             : constant Name_Id := N + $;\n+   Name_None                               : constant Name_Id := N + $;\n+   Name_Object_File_Suffix                 : constant Name_Id := N + $;\n+   Name_Object_File_Switches               : constant Name_Id := N + $;\n+   Name_Object_Generated                   : constant Name_Id := N + $;\n+   Name_Object_List                        : constant Name_Id := N + $;\n+   Name_Objects_Linked                     : constant Name_Id := N + $;\n+   Name_Objects_Path                       : constant Name_Id := N + $;\n+   Name_Objects_Path_File                  : constant Name_Id := N + $;\n+   Name_Object_Dir                         : constant Name_Id := N + $;\n+   Name_Option_List                        : constant Name_Id := N + $;\n+   Name_Path_Syntax                        : constant Name_Id := N + $;\n+   Name_Pic_Option                         : constant Name_Id := N + $;\n+   Name_Pretty_Printer                     : constant Name_Id := N + $;\n+   Name_Prefix                             : constant Name_Id := N + $;\n+   Name_Project                            : constant Name_Id := N + $;\n+   Name_Project_Dir                        : constant Name_Id := N + $;\n+   Name_Project_Files                      : constant Name_Id := N + $;\n+   Name_Project_Path                       : constant Name_Id := N + $;\n+   Name_Response_File_Format               : constant Name_Id := N + $;\n+   Name_Response_File_Switches             : constant Name_Id := N + $;\n+   Name_Roots                              : constant Name_Id := N + $; -- GB\n+   Name_Required_Switches                  : constant Name_Id := N + $;\n+   Name_Run_Path_Option                    : constant Name_Id := N + $;\n+   Name_Run_Path_Origin                    : constant Name_Id := N + $;\n+   Name_Separate_Run_Path_Options          : constant Name_Id := N + $;\n+   Name_Shared_Library_Minimum_Switches    : constant Name_Id := N + $;\n+   Name_Shared_Library_Prefix              : constant Name_Id := N + $;\n+   Name_Shared_Library_Suffix              : constant Name_Id := N + $;\n+   Name_Separate_Suffix                    : constant Name_Id := N + $;\n+   Name_Source_Dirs                        : constant Name_Id := N + $;\n+   Name_Source_File_Switches               : constant Name_Id := N + $;\n+   Name_Source_Files                       : constant Name_Id := N + $;\n+   Name_Source_List_File                   : constant Name_Id := N + $;\n+   Name_Spec                               : constant Name_Id := N + $;\n+   Name_Spec_Suffix                        : constant Name_Id := N + $;\n+   Name_Specification                      : constant Name_Id := N + $;\n+   Name_Specification_Exceptions           : constant Name_Id := N + $;\n+   Name_Specification_Suffix               : constant Name_Id := N + $;\n+   Name_Stack                              : constant Name_Id := N + $;\n+   Name_Switches                           : constant Name_Id := N + $;\n+   Name_Symbolic_Link_Supported            : constant Name_Id := N + $;\n+   Name_Synchronize                        : constant Name_Id := N + $;\n+   Name_Toolchain_Description              : constant Name_Id := N + $;\n+   Name_Toolchain_Version                  : constant Name_Id := N + $;\n+   Name_Trailing_Required_Switches         : constant Name_Id := N + $;\n+   Name_Runtime_Library_Dir                : constant Name_Id := N + $;\n+   Name_Runtime_Source_Dir                 : constant Name_Id := N + $;\n \n    --  Other miscellaneous names used in front end\n "}]}