{"sha": "48cf0e51e9cd4a78488dc216ed6f190df4c5b481", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhjZjBlNTFlOWNkNGE3ODQ4OGRjMjE2ZWQ2ZjE5MGRmNGM1YjQ4MQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-11-29T01:48:30Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-11-29T01:48:30Z"}, "message": "simplify-rtx: Handle truncate of extract\n\nsimplify_truncation changes the truncation of many operations into\nthe operation on the truncation.  This patch makes this code also\nhandle extracts.\n\n\n\t* simplify-rtx.c (simplify_truncation): Handle truncate of zero_extract\n\tand sign_extract.\n\nFrom-SVN: r242946", "tree": {"sha": "2c9d73fb0ca8669cbec06f9357fe5860c278ac14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c9d73fb0ca8669cbec06f9357fe5860c278ac14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48cf0e51e9cd4a78488dc216ed6f190df4c5b481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48cf0e51e9cd4a78488dc216ed6f190df4c5b481", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48cf0e51e9cd4a78488dc216ed6f190df4c5b481", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48cf0e51e9cd4a78488dc216ed6f190df4c5b481/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "deb2bb610eae556f5337458b1ac14fdf95a4e070", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb2bb610eae556f5337458b1ac14fdf95a4e070", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deb2bb610eae556f5337458b1ac14fdf95a4e070"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "900f9b355d74ca1a49b2fbcb42ba2fd3957edae0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48cf0e51e9cd4a78488dc216ed6f190df4c5b481/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48cf0e51e9cd4a78488dc216ed6f190df4c5b481/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48cf0e51e9cd4a78488dc216ed6f190df4c5b481", "patch": "@@ -1,3 +1,8 @@\n+2016-11-28  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* simplify-rtx.c (simplify_truncation): Handle truncate of zero_extract\n+\tand sign_extract.\n+\n 2016-11-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*and<mode>_1): Merge insn pattern from"}, {"sha": "7778db55a24a37aaf6185457f40cbee847b442b3", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48cf0e51e9cd4a78488dc216ed6f190df4c5b481/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48cf0e51e9cd4a78488dc216ed6f190df4c5b481/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=48cf0e51e9cd4a78488dc216ed6f190df4c5b481", "patch": "@@ -747,6 +747,36 @@ simplify_truncation (machine_mode mode, rtx op,\n \t}\n     }\n \n+  /* Turn (truncate:M1 (*_extract:M2 (reg:M2) (len) (pos))) into\n+     (*_extract:M1 (truncate:M1 (reg:M2)) (len) (pos')) if possible without\n+     changing len.  */\n+  if ((GET_CODE (op) == ZERO_EXTRACT || GET_CODE (op) == SIGN_EXTRACT)\n+      && REG_P (XEXP (op, 0))\n+      && CONST_INT_P (XEXP (op, 1))\n+      && CONST_INT_P (XEXP (op, 2)))\n+    {\n+      rtx op0 = XEXP (op, 0);\n+      unsigned HOST_WIDE_INT len = UINTVAL (XEXP (op, 1));\n+      unsigned HOST_WIDE_INT pos = UINTVAL (XEXP (op, 2));\n+      if (BITS_BIG_ENDIAN && pos >= op_precision - precision)\n+\t{\n+\t  op0 = simplify_gen_unary (TRUNCATE, mode, op0, GET_MODE (op0));\n+\t  if (op0)\n+\t    {\n+\t      pos -= op_precision - precision;\n+\t      return simplify_gen_ternary (GET_CODE (op), mode, mode, op0,\n+\t\t\t\t\t   XEXP (op, 1), GEN_INT (pos));\n+\t    }\n+\t}\n+      else if (!BITS_BIG_ENDIAN && precision >= len + pos)\n+\t{\n+\t  op0 = simplify_gen_unary (TRUNCATE, mode, op0, GET_MODE (op0));\n+\t  if (op0)\n+\t    return simplify_gen_ternary (GET_CODE (op), mode, mode, op0,\n+\t\t\t\t\t XEXP (op, 1), XEXP (op, 2));\n+\t}\n+    }\n+\n   /* Recognize a word extraction from a multi-word subreg.  */\n   if ((GET_CODE (op) == LSHIFTRT\n        || GET_CODE (op) == ASHIFTRT)"}]}