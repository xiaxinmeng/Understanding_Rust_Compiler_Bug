{"sha": "cf16d179d570e9a5535267b92e0f9e71756483b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YxNmQxNzlkNTcwZTlhNTUzNTI2N2I5MmUwZjllNzE3NTY0ODNiMA==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2018-09-20T01:46:28Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2018-09-20T01:46:28Z"}, "message": "pa.c (pa_adjust_priority): Delete.\n\n\t* config/pa/pa.c (pa_adjust_priority): Delete.\n\t(TARGET_SCHED_ADJUST_PRIORITY): Delete define.\n\nFrom-SVN: r264437", "tree": {"sha": "524113510ad64e6104e7faed85455a578e96f127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/524113510ad64e6104e7faed85455a578e96f127"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf16d179d570e9a5535267b92e0f9e71756483b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf16d179d570e9a5535267b92e0f9e71756483b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf16d179d570e9a5535267b92e0f9e71756483b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf16d179d570e9a5535267b92e0f9e71756483b0/comments", "author": null, "committer": null, "parents": [{"sha": "bad4408cadddb199556e7da9fb4b267a4eb42805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bad4408cadddb199556e7da9fb4b267a4eb42805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bad4408cadddb199556e7da9fb4b267a4eb42805"}], "stats": {"total": 37, "additions": 3, "deletions": 34}, "files": [{"sha": "729fb57fe855cc56333ca252b156427250378c6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf16d179d570e9a5535267b92e0f9e71756483b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf16d179d570e9a5535267b92e0f9e71756483b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf16d179d570e9a5535267b92e0f9e71756483b0", "patch": "@@ -1,5 +1,8 @@\n 2018-09-19  John David Anglin  <danglin@gcc.gnu.org>\n \n+\t* config/pa/pa.c (pa_adjust_priority): Delete.\n+\t(TARGET_SCHED_ADJUST_PRIORITY): Delete define.\n+\n \t* config/pa/pa.md (atomic_storeqi): Restore deleted expander.\n \t(atomic_storehi): Likewise.\n \t(atomic_storesi): Likewise."}, {"sha": "2bf48e40a67333060f053e490cbd43596a4ad6a7", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf16d179d570e9a5535267b92e0f9e71756483b0/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf16d179d570e9a5535267b92e0f9e71756483b0/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=cf16d179d570e9a5535267b92e0f9e71756483b0", "patch": "@@ -122,7 +122,6 @@ static void pa_output_function_prologue (FILE *);\n static void update_total_code_bytes (unsigned int);\n static void pa_output_function_epilogue (FILE *);\n static int pa_adjust_cost (rtx_insn *, int, rtx_insn *, int, unsigned int);\n-static int pa_adjust_priority (rtx_insn *, int);\n static int pa_issue_rate (void);\n static int pa_reloc_rw_mask (void);\n static void pa_som_asm_init_sections (void) ATTRIBUTE_UNUSED;\n@@ -280,8 +279,6 @@ static size_t n_deferred_plabels = 0;\n \n #undef TARGET_SCHED_ADJUST_COST\n #define TARGET_SCHED_ADJUST_COST pa_adjust_cost\n-#undef TARGET_SCHED_ADJUST_PRIORITY\n-#define TARGET_SCHED_ADJUST_PRIORITY pa_adjust_priority\n #undef TARGET_SCHED_ISSUE_RATE\n #define TARGET_SCHED_ISSUE_RATE pa_issue_rate\n \n@@ -4995,37 +4992,6 @@ pa_adjust_cost (rtx_insn *insn, int dep_type, rtx_insn *dep_insn, int cost,\n     }\n }\n \n-/* Adjust scheduling priorities.  We use this to try and keep addil\n-   and the next use of %r1 close together.  */\n-static int\n-pa_adjust_priority (rtx_insn *insn, int priority)\n-{\n-  rtx set = single_set (insn);\n-  rtx src, dest;\n-  if (set)\n-    {\n-      src = SET_SRC (set);\n-      dest = SET_DEST (set);\n-      if (GET_CODE (src) == LO_SUM\n-\t  && symbolic_operand (XEXP (src, 1), VOIDmode)\n-\t  && ! read_only_operand (XEXP (src, 1), VOIDmode))\n-\tpriority >>= 3;\n-\n-      else if (GET_CODE (src) == MEM\n-\t       && GET_CODE (XEXP (src, 0)) == LO_SUM\n-\t       && symbolic_operand (XEXP (XEXP (src, 0), 1), VOIDmode)\n-\t       && ! read_only_operand (XEXP (XEXP (src, 0), 1), VOIDmode))\n-\tpriority >>= 1;\n-\n-      else if (GET_CODE (dest) == MEM\n-\t       && GET_CODE (XEXP (dest, 0)) == LO_SUM\n-\t       && symbolic_operand (XEXP (XEXP (dest, 0), 1), VOIDmode)\n-\t       && ! read_only_operand (XEXP (XEXP (dest, 0), 1), VOIDmode))\n-\tpriority >>= 3;\n-    }\n-  return priority;\n-}\n-\n /* The 700 can only issue a single insn at a time.\n    The 7XXX processors can issue two insns at a time.\n    The 8000 can issue 4 insns at a time.  */"}]}