{"sha": "5c389a5c36f1c82fef82115270109f19c1237eaa", "node_id": "C_kwDOANBUbNoAKDVjMzg5YTVjMzZmMWM4MmZlZjgyMTE1MjcwMTA5ZjE5YzEyMzdlYWE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-17T00:17:03Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-17T00:17:03Z"}, "message": "Daily bump.", "tree": {"sha": "0dedab550e6a2f6004b92c987d816f03dfcbe7c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dedab550e6a2f6004b92c987d816f03dfcbe7c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c389a5c36f1c82fef82115270109f19c1237eaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c389a5c36f1c82fef82115270109f19c1237eaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c389a5c36f1c82fef82115270109f19c1237eaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c389a5c36f1c82fef82115270109f19c1237eaa/comments", "author": null, "committer": null, "parents": [{"sha": "fa4d0ab533cc2bc9cb6f512b3d4bd0bbc01ee797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4d0ab533cc2bc9cb6f512b3d4bd0bbc01ee797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa4d0ab533cc2bc9cb6f512b3d4bd0bbc01ee797"}], "stats": {"total": 322, "additions": 321, "deletions": 1}, "files": [{"sha": "169ba9ae38dc1c3266a1913b856e84fe9e86d7b9", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,8 @@\n+2023-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* unicode/README: Update to mention also makeuname2c.\n+\t* unicode/NameAliases.txt: New file.\n+\n 2023-03-13  Lewis Hyatt  <lhyatt@gmail.com>\n \n \t* unicode/DerivedCoreProperties.txt: Update to Unicode 15."}, {"sha": "998f0e79970580de4912de81432b666be92ac525", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,36 @@\n+2023-03-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386-expand.cc (expand_vec_perm_pblendv):\n+\tHandle 8-byte modes only with TARGET_MMX_WITH_SSE.\n+\t(expand_vec_perm_2perm_pblendv): Ditto.\n+\n+2023-03-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/106133\n+\t* gcc.cc (driver_handle_option): Use x_main_input_basename\n+\tif x_dump_base_name is null.\n+\t* opts.cc (common_handle_option): Likewise.\n+\n+2023-03-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109123\n+\t* gimple-ssa-warn-access.cc (pass_waccess::warn_invalid_pointer):\n+\tDo not emit -Wuse-after-free late.\n+\t(pass_waccess::check_call): Always check call pointer uses.\n+\n+2023-03-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109141\n+\t* tree-dfa.h (renumber_gimple_stmt_uids_in_block): New.\n+\t* tree-dfa.cc (renumber_gimple_stmt_uids_in_block): Split\n+\tout from ...\n+\t(renumber_gimple_stmt_uids): ... here and\n+\t(renumber_gimple_stmt_uids_in_blocks): ... here.\n+\t* gimple-ssa-warn-access.cc (pass_waccess::use_after_inval_p):\n+\tUse renumber_gimple_stmt_uids_in_block to also assign UIDs\n+\tto PHIs.\n+\t(pass_waccess::check_pointer_uses): Process all PHIs.\n+\n 2023-03-15  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/109097"}, {"sha": "348f4b8a133c8b626f4e2add3d8b0011dbe34166", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1 +1 @@\n-20230316\n+20230317"}, {"sha": "893d4e9bd3b1b045dce5473b9770bee714650170", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,40 @@\n+2023-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105809\n+\t* init.cc (get_nsdmi): Split out...\n+\t(maybe_instantiate_nsdmi_init): ...this function.\n+\t* cp-tree.h: Declare it.\n+\t* pt.cc (tsubst_expr): Use it.\n+\n+2023-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108242\n+\t* pt.cc (tsubst_expr) [TAG_DEFN]: Handle partial instantiation.\n+\n+2023-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101869\n+\t* semantics.cc (finish_qualified_id_expr): Don't try to build a\n+\tpointer-to-member if the scope is an enumeration.\n+\n+2023-03-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/109030\n+\t* constexpr.cc (maybe_constant_init_1): For an unevaluated\n+\tnon-manifestly-constant operand, don't constant evaluate\n+\tand instead call fold_to_constant as in maybe_constant_value.\n+\n+2023-03-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100288\n+\t* constraint.cc (satisfaction_cache::get): Relax overly strict\n+\tchecking assert in the constraint recursion case.\n+\n+2023-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105406\n+\t* coroutines.cc (build_co_await): Handle lvalue 'o'.\n+\n 2023-03-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/103871"}, {"sha": "7c340f68c840f90bcfca36ab849520cfb677d7f8", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,40 @@\n+2023-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd 4ca4140e58.\n+\t* dmd/VERSION: Bump version to v2.103.0-beta.1.\n+\t* Make-lang.in (D_FRONTEND_OBJS): Add d/errorsink.o.\n+\t* d-ctfloat.cc (CTFloat::sprint): Update signature for new front-end\n+\tinterface.\n+\t* d-frontend.cc (getTypeInfoType): Likewise.\n+\t* d-lang.cc (d_handle_option): Remove handling of -fpreview=dip25 and\n+\t-frevert=dip25.\n+\t(d_post_options): Remove enabling of sealed references language\n+\tfeature when scoped pointers is enabled.\n+\t* d-tree.h (create_typeinfo): Update signature.\n+\t* decl.cc (DeclVisitor::finish_vtable): Update for new front-end\n+\tinterface.\n+\t(DeclVisitor::visit (VarDeclaration *)): Likewise.\n+\t(DeclVisitor::visit (FuncDeclaration *)): Check skipCodegen to see if\n+\tfront-end explicitly requested not to generate code.\n+\t* expr.cc (ExprVisitor::visit (NewExp *)): Update for new front-end\n+\tinterface.\n+\t* lang.opt (fpreview=dip25): Remove.\n+\t(frevert=dip25): Remove.\n+\t* modules.cc (layout_moduleinfo_fields): Update for new front-end\n+\tinterface.\n+\t(layout_moduleinfo): Likewise.\n+\t* runtime.def (NEWCLASS): Remove.\n+\t* toir.cc (IRVisitor::visit (IfStatement *)): Don't generate IR for if\n+\tstatement list when condition is `__ctfe'.\n+\t* typeinfo.cc (create_typeinfo): Add generate parameter.\n+\t* types.cc (layout_aggregate_members): Update for new front-end\n+\tinterface.\n+\n+2023-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/109144\n+\t* d-codegen.cc (build_frame_type): Set frame field and type alignment.\n+\n 2023-03-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/109108"}, {"sha": "4a188723d2a11a407d3eda6f1b799e2f8a33ec80", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,89 @@\n+2023-03-16  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2-compiler/SymbolKey.mod (PutSymKey): Halt parameters\n+\treordered.\n+\t(DelSymKey): Ditto.\n+\t* gm2-compiler/ppg.mod (GetEpsilon): Ditto.\n+\t(GetReachEnd): Ditto.\n+\t(GetFollow): Ditto.\n+\t(CodeCondition): Ditto.\n+\t(CodeThenDo): Ditto.\n+\t(CodeEnd): Ditto.\n+\t(RecoverCondition): Ditto.\n+\t(ConditionIndent): Ditto.\n+\t* gm2-libs-ch/m2rts.h (M2RTS_Halt): Ditto.\n+\t* gm2-libs-coroutines/Executive.mod (Assert): Ditto.\n+\t(Resume): Remove redundant comments.\n+\t(Wait): Remove redundant comments.\n+\t* gm2-libs-coroutines/SYSTEM.mod (TRANSFER): Halt parameters\n+\treordered.\n+\t(IOTransferHandler): Ditto.\n+\t(Finished): Ditto.\n+\t(localInit): Ditto.\n+\t* gm2-libs-coroutines/TimerHandler.mod (WaitOn): Halt parameters\n+\treordered.\n+\t(Cancel): Ditto.\n+\t(ReArmEvent): Ditto.\n+\t(OnActiveQueue): Ditto.\n+\t* gm2-libs-iso/COROUTINES.mod (NEWCOROUTINE): Ditto.\n+\t(Transfer): Ditto.\n+\t(IOTRANSFER): Ditto.\n+\t* gm2-libs-iso/EXCEPTIONS.mod (RAISE): Correct Halt parameters.\n+\t* gm2-libs-iso/M2RTS.def (Halt): Halt parameters reordered.\n+\t(HaltC): Ditto.\n+\t* gm2-libs-iso/M2RTS.mod: Ditto.\n+\t* gm2-libs-iso/RTentity.mod (PutKey): Ditto.\n+\t(DelKey): Ditto.\n+\t(findChildAndParent): Ditto.\n+\t(assert): Ditto.\n+\t* gm2-libs-iso/Storage.mod (ALLOCATE): Add DebugTrace.\n+\tAdd UseMallocFree test.\n+\t(DEALLOCATE): Add DebugTrace.  Add UseMallocFree test.\n+\t(assert): Halt parameters reordered.\n+\t* gm2-libs-log/Termbase.mod (Read): Ditto.\n+\t(KeyPressed): Ditto.\n+\t(Write): Ditto.\n+\t(Init): Ditto.\n+\t* gm2-libs/Debug.def (Halt): Halt parameters reordered.\n+\t* gm2-libs/Debug.mod (Halt): Ditto.\n+\t* gm2-libs/DynamicStrings.def (PopAllocation): Improve comment.\n+\t* gm2-libs/DynamicStrings.mod (PopAllocation): Improve comment.\n+\tHalt parameters reordered.\n+\t* gm2-libs/M2RTS.def (Halt): Ditto.\n+\t(HaltC): Ditto.\n+\t* gm2-libs/M2RTS.mod (Halt): Ditto.\n+\t(HaltC): Ditto.\n+\t* gm2-libs/PushBackInput.mod (PutStr): Ditto.\n+\t(PutString): Ditto.\n+\t(PutCh): Ditto.\n+\t* gm2-libs/RTExceptions.mod (GetBaseExceptionBlock): Ditto.\n+\t* gm2-libs/RTint.mod (ReArmTimeVector): Ditto.\n+\t(GetTimeVector): Ditto.\n+\t(AttachVector): Ditto.\n+\t(IncludeVector): Ditto.\n+\t(Listen): Ditto.\n+\t* gm2-libs/SysStorage.mod (ALLOCATE): Ditto.\n+\t(DEALLOCATE): Ditto.\n+\t(REALLOCATE): Ditto.\n+\t* gm2-libs-coroutines/Debug.def: Removed.\n+\t* gm2-libs-coroutines/Debug.mod: Removed.\n+\n+2023-03-16  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* Make-lang.in: Rename target-independent to\n+\ttarget-independent/m2.\n+\t* target-independent/readme.txt: Update.\n+\t* target-independent/m2/gm2-ebnf.texi: New file.\n+\t* target-independent/m2/gpl_v3_without_node.texi: New file.\n+\t* target-independent/Builtins.texi: Rename ...\n+\t* target-independent/m2/Builtins.texi: ... to this.\n+\t* target-independent/SYSTEM-iso.texi: Rename ...\n+\t* target-independent/m2/SYSTEM-iso.texi: ... to this.\n+\t* target-independent/SYSTEM-pim.texi: Rename ...\n+\t* target-independent/m2/SYSTEM-pim.texi: ... to this.\n+\t* target-independent/gm2-libs.texi: Rename ...\n+\t* target-independent/m2/gm2-libs.texi: ... to this.\n+\n 2023-03-15  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/109125"}, {"sha": "a285f923cfb04a4953deeeff79c5b7981b3dee9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,87 @@\n+2023-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105809\n+\t* g++.dg/cpp0x/constexpr-__func__3.C: New test.\n+\n+2023-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108242\n+\t* g++.dg/cpp1y/lambda-generic-func2.C: New test.\n+\n+2023-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101869\n+\t* g++.dg/cpp0x/enum43.C: New test.\n+\n+2023-03-16  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2/types/run/pass/d.c: Add missing include <stdbool.h>.\n+\n+2023-03-16  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/109125\n+\t* gm2/types/run/pass/d.c: Convert data structure from\n+\tBOOLEAN int to bool and cast int to bool in test function.\n+\n+2023-03-16  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2/complex/pass/arith3.mod: Halt parameters reordered.\n+\t* gm2/complex/run/pass/arith3.mod: Ditto.\n+\t* gm2/complex/run/pass/arith4.mod: Ditto.\n+\t* gm2/complex/run/pass/arith5.mod: Ditto.\n+\t* gm2/isolib/run/pass/real2.mod: Ditto.\n+\t* gm2/isolib/run/pass/real3.mod: Ditto.\n+\t* gm2/isolib/run/pass/realconv.mod: Ditto.\n+\t* gm2/isolib/run/pass/realconv2.mod: Ditto.\n+\t* gm2/pim/pass/testshort.mod: Ditto.\n+\t* gm2/projects/pim/run/pass/tower/AdvSystem.mod: Ditto.\n+\t* gm2/projects/pim/run/pass/tower/DrawL.mod: Ditto.\n+\t* gm2/warnings/returntype/pass/Termbase.mod: Ditto.\n+\t* gm2/warnings/returntype/pass/keypressedsimple.mod: Ditto.\n+\n+2023-03-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/109030\n+\t* g++.dg/cpp2a/constexpr-inst2.C: New test.\n+\n+2023-03-16  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100288\n+\t* g++.dg/cpp2a/concepts-recursive-sat5.C: New test.\n+\n+2023-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.dg/torture/simd23084.d: New test.\n+\t* gdc.dg/torture/simd23085.d: New test.\n+\t* gdc.dg/torture/simd23218.d: New test.\n+\n+2023-03-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/106133\n+\t* c-c++-common/pr106133.c: New test.\n+\n+2023-03-16  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gcc.dg/vect/pr103116-2.c (x): Fix array size.\n+\n+2023-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105406\n+\t* g++.dg/coroutines/co-await-moveonly1.C: New test.\n+\n+2023-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/109144\n+\t* gdc.dg/torture/pr109144.d: New test.\n+\n+2023-03-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109123\n+\t* gcc.dg/Wuse-after-free-pr109123.c: New testcase.\n+\t* gcc.dg/Wuse-after-free-2.c: Amend expected diagnostic with\n+\tthe name of the pointer.\n+\t* c-c++-common/Wuse-after-free-6.c: Un-XFAIL case.\n+\n 2023-03-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/103871"}, {"sha": "e1410129679e0e6cd205fffcd8b341e3959de017", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,11 @@\n+2023-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* makeucnid.cc (write_copyright): Update Unicode copyright years\n+\tup to 2022.\n+\t* makeuname2c.cc (write_copyright): Likewise.\n+\t* ucnid.h: Regenerated.\n+\t* uname2c.h: Regenerated.\n+\n 2023-03-13  Lewis Hyatt  <lhyatt@gmail.com>\n \n \tPR preprocessor/67046"}, {"sha": "098ce0e510fda65187c58d4fd490f25a3574900a", "filename": "libgm2/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/libgm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/libgm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,14 @@\n+2023-03-16  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* libm2cor/Makefile.am: Remove\n+\t* libm2cor/Makefile.in: Rebuild.\n+\t* libm2iso/RTco.cc (newSem): Halt parameters reordered.\n+\t(currentThread): Ditto.\n+\t(never): Ditto.\n+\t(defined): Ditto.\n+\t(initThread): Ditto.\n+\t* libm2iso/m2rts.h (m2iso_M2RTS_HaltC): Ditto.\n+\n 2023-03-15  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \tPR modula2/109125"}, {"sha": "ff51a6b0dad526c3888757062c44c7551fb25358", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,13 @@\n+2023-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/MERGE: Merge upstream druntime 4ca4140e58.\n+\t* libdruntime/Makefile.am (DRUNTIME_DSOURCES): Add core/factory.d.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\t* src/MERGE: Merge upstream phobos 454dff14d.\n+\t* testsuite/libphobos.hash/test_hash.d: Update test.\n+\t* testsuite/libphobos.shared/finalize.d: Update test.\n+\t* libdruntime/core/factory.d: New file.\n+\n 2023-02-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* src/MERGE: Merge upstream phobos e5a521ab2."}, {"sha": "12b8c621aed528841b96215c544bd07d10569760", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c389a5c36f1c82fef82115270109f19c1237eaa/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c389a5c36f1c82fef82115270109f19c1237eaa/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=5c389a5c36f1c82fef82115270109f19c1237eaa", "patch": "@@ -1,3 +1,12 @@\n+2023-03-16  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* update_web_docs_git (MANUALS): Add gm2.\n+\tAdd include path for gm2 manual.\n+\n+2023-03-16  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* update_web_docs_git (BUGURL): Introduce and use throughout.\n+\n 2022-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR web/107749"}]}