{"sha": "c6ad27a7f35f4c2c4431fee9f0648989854c79ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZhZDI3YTdmMzVmNGMyYzQ0MzFmZWU5ZjA2NDg5ODk4NTRjNzllYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-20T01:07:34Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-20T01:07:34Z"}, "message": "(emit_cmp_insn, emit_float_lib_cmp): libcall comparisons return word_mode.\n\nFrom-SVN: r3289", "tree": {"sha": "587484bc96e23f9e45ceb8085f449a3cbd84f99a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/587484bc96e23f9e45ceb8085f449a3cbd84f99a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6ad27a7f35f4c2c4431fee9f0648989854c79ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6ad27a7f35f4c2c4431fee9f0648989854c79ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6ad27a7f35f4c2c4431fee9f0648989854c79ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6ad27a7f35f4c2c4431fee9f0648989854c79ec/comments", "author": null, "committer": null, "parents": [{"sha": "4be7c28fddff322a9634a25ddf0b26b70115ce62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be7c28fddff322a9634a25ddf0b26b70115ce62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be7c28fddff322a9634a25ddf0b26b70115ce62"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "c0fc2996277ca7a094589ef2a77d692ac9eedba3", "filename": "gcc/optabs.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6ad27a7f35f4c2c4431fee9f0648989854c79ec/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6ad27a7f35f4c2c4431fee9f0648989854c79ec/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=c6ad27a7f35f4c2c4431fee9f0648989854c79ec", "patch": "@@ -2307,14 +2307,14 @@ emit_cmp_insn (x, y, comparison, size, mode, unsignedp, align)\n \tlibfunc = ucmp_optab->handlers[(int) mode].libfunc;\n \n       emit_library_call (libfunc, 1,\n-\t\t\t SImode, 2, x, mode, y, mode);\n+\t\t\t word_mode, 2, x, mode, y, mode);\n \n       /* Integer comparison returns a result that must be compared against 1,\n \t so that even if we do an unsigned compare afterward,\n \t there is still a value that can represent the result \"less than\".  */\n \n-      emit_cmp_insn (hard_libcall_value (SImode), const1_rtx,\n-\t\t     comparison, NULL_RTX, SImode, unsignedp, 0);\n+      emit_cmp_insn (hard_libcall_value (word_mode), const1_rtx,\n+\t\t     comparison, NULL_RTX, word_mode, unsignedp, 0);\n       return;\n     }\n \n@@ -2484,10 +2484,10 @@ emit_float_lib_cmp (x, y, comparison)\n     }\n \n   emit_library_call (libfunc, 1,\n-\t\t     SImode, 2, x, mode, y, mode);\n+\t\t     word_mode, 2, x, mode, y, mode);\n \n-  emit_cmp_insn (hard_libcall_value (SImode), const0_rtx, comparison,\n-\t\t NULL_RTX, SImode, 0, 0);\n+  emit_cmp_insn (hard_libcall_value (word_mode), const0_rtx, comparison,\n+\t\t NULL_RTX, word_mode, 0, 0);\n }\n \f\n /* Generate code to indirectly jump to a location given in the rtx LOC.  */"}]}