{"sha": "834032457972caee7d4ae113c2201080178a229e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM0MDMyNDU3OTcyY2FlZTdkNGFlMTEzYzIyMDEwODAxNzhhMjI5ZQ==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2019-08-15T11:37:21Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2019-08-15T11:37:21Z"}, "message": "function.c (assign_parm_setup_reg): Handle misaligned stack arguments.\n\n2019-08-15  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * function.c (assign_parm_setup_reg): Handle misaligned stack arguments.\n\nFrom-SVN: r274531", "tree": {"sha": "a71101a7803f603ae78d10b5723ebc0c80b2a9f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a71101a7803f603ae78d10b5723ebc0c80b2a9f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/834032457972caee7d4ae113c2201080178a229e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834032457972caee7d4ae113c2201080178a229e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834032457972caee7d4ae113c2201080178a229e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834032457972caee7d4ae113c2201080178a229e/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbedc1ae06a2b1e8ac5e687c754618d56e417d6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "2aa7a8cba19984bcef550cc5ece3b623edaeb073", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834032457972caee7d4ae113c2201080178a229e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834032457972caee7d4ae113c2201080178a229e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=834032457972caee7d4ae113c2201080178a229e", "patch": "@@ -1,3 +1,7 @@\n+2019-08-15  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* function.c (assign_parm_setup_reg): Handle misaligned stack arguments.\n+\n 2019-08-15  Martin Liska  <mliska@suse.cz>\n \n \t* tree-ssa-dce.c (propagate_necessity): We can't reach now"}, {"sha": "e368f7c013ea143408f391deaaef473a73f34446", "filename": "gcc/function.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/834032457972caee7d4ae113c2201080178a229e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/834032457972caee7d4ae113c2201080178a229e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=834032457972caee7d4ae113c2201080178a229e", "patch": "@@ -3127,6 +3127,7 @@ assign_parm_setup_reg (struct assign_parm_data_all *all, tree parm,\n   int unsignedp = TYPE_UNSIGNED (TREE_TYPE (parm));\n   bool did_conversion = false;\n   bool need_conversion, moved;\n+  enum insn_code icode;\n   rtx rtl;\n \n   /* Store the parm in a pseudoregister during the function, but we may\n@@ -3188,7 +3189,6 @@ assign_parm_setup_reg (struct assign_parm_data_all *all, tree parm,\n \t conversion.  We verify that this insn does not clobber any\n \t hard registers.  */\n \n-      enum insn_code icode;\n       rtx op0, op1;\n \n       icode = can_extend_p (promoted_nominal_mode, data->passed_mode,\n@@ -3291,6 +3291,23 @@ assign_parm_setup_reg (struct assign_parm_data_all *all, tree parm,\n \n       did_conversion = true;\n     }\n+  else if (MEM_P (data->entry_parm)\n+\t   && GET_MODE_ALIGNMENT (promoted_nominal_mode)\n+\t      > MEM_ALIGN (data->entry_parm)\n+\t   && (((icode = optab_handler (movmisalign_optab,\n+\t\t\t\t\tpromoted_nominal_mode))\n+\t\t!= CODE_FOR_nothing)\n+\t       || targetm.slow_unaligned_access (promoted_nominal_mode,\n+\t\t\t\t\t\t MEM_ALIGN (data->entry_parm))))\n+    {\n+      if (icode != CODE_FOR_nothing)\n+\temit_insn (GEN_FCN (icode) (parmreg, validated_mem));\n+      else\n+\trtl = parmreg = extract_bit_field (validated_mem,\n+\t\t\tGET_MODE_BITSIZE (promoted_nominal_mode), 0,\n+\t\t\tunsignedp, parmreg,\n+\t\t\tpromoted_nominal_mode, VOIDmode, false, NULL);\n+    }\n   else\n     emit_move_insn (parmreg, validated_mem);\n "}]}