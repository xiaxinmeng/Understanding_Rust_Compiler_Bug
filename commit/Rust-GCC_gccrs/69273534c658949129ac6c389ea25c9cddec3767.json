{"sha": "69273534c658949129ac6c389ea25c9cddec3767", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkyNzM1MzRjNjU4OTQ5MTI5YWM2YzM4OWVhMjVjOWNkZGVjMzc2Nw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-29T00:16:29Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-29T00:16:29Z"}, "message": "Daily bump.", "tree": {"sha": "b996a1345edf0dc2d684b6fefab10f868221f61a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b996a1345edf0dc2d684b6fefab10f868221f61a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69273534c658949129ac6c389ea25c9cddec3767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69273534c658949129ac6c389ea25c9cddec3767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69273534c658949129ac6c389ea25c9cddec3767", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69273534c658949129ac6c389ea25c9cddec3767/comments", "author": null, "committer": null, "parents": [{"sha": "b26fd416fb0a734d3f3e56629b6dff2e3c25dd40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b26fd416fb0a734d3f3e56629b6dff2e3c25dd40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b26fd416fb0a734d3f3e56629b6dff2e3c25dd40"}], "stats": {"total": 134, "additions": 133, "deletions": 1}, "files": [{"sha": "3f3ef4c11d23cc972e991c6bf6a0dc41eaafb96e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69273534c658949129ac6c389ea25c9cddec3767/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69273534c658949129ac6c389ea25c9cddec3767/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69273534c658949129ac6c389ea25c9cddec3767", "patch": "@@ -1,3 +1,22 @@\n+2020-06-28  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/86568\n+\t* calls.c (maybe_warn_rdwr_sizes): Use location of argument if\n+\tavailable.\n+\t* tree-ssa-ccp.c (pass_post_ipa_warn::execute): Same.  Adjust\n+\tindentation.\n+\t* tree.c (get_nonnull_args): Consider the this pointer implicitly\n+\tnonnull.\n+\t* var-tracking.c (deps_vec): New type.\n+\t(var_loc_dep_vec): New function.\n+\t(VAR_LOC_DEP_VEC): Use it.\n+\n+2020-06-28  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* internal-fn.c (direct_mask_load_optab_supported_p): Use\n+\tconvert_optab_supported_p instead of direct_optab_supported_p.\n+\t(direct_mask_store_optab_supported_p): Likewise.\n+\n 2020-06-27  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* gimple-ssa-evrp-analyze.h (vrp_visit_cond_stmt): Use"}, {"sha": "39082fd9fabd13bf579488bb1c10c72440c3f976", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69273534c658949129ac6c389ea25c9cddec3767/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69273534c658949129ac6c389ea25c9cddec3767/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=69273534c658949129ac6c389ea25c9cddec3767", "patch": "@@ -1 +1 @@\n-20200628\n+20200629"}, {"sha": "e3813d9bf491e3a869f202f904b3f5606333d7b3", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=69273534c658949129ac6c389ea25c9cddec3767", "patch": "@@ -1,3 +1,13 @@\n+2020-06-28  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/86568\n+\t* c-common.c (struct nonnull_arg_ctx): Add members.\n+\t(check_function_nonnull): Use nonnull_arg_ctx as argument.  Handle\n+\tC++ member functions specially.  Consider the this pointer implicitly\n+\tnonnull.\n+\t(check_nonnull_arg): Use location of argument when available.\n+\t(check_function_arguments): Use nonnull_arg_ctx as argument.\n+\n 2020-06-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/95903"}, {"sha": "82fb0d062e83475e61a06d816cb3d15274feabf7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=69273534c658949129ac6c389ea25c9cddec3767", "patch": "@@ -1,3 +1,9 @@\n+2020-06-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/95711\n+\t* coroutines.cc (register_local_var_uses): Skip past\n+\tnamespace decls.\n+\n 2020-06-27  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/95736"}, {"sha": "d3ba4ca1e2616163bea3f6ac008d262fa9077a95", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=69273534c658949129ac6c389ea25c9cddec3767", "patch": "@@ -1,3 +1,7 @@\n+2020-06-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd 8508c4e68.\n+\n 2020-06-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* decl.cc (get_symbol_decl): Do not implicitly set"}, {"sha": "bcdd3beef21da184de57c5f957b9f157ae9702e2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=69273534c658949129ac6c389ea25c9cddec3767", "patch": "@@ -1,3 +1,14 @@\n+2020-06-28  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95340\n+\t* match.c (gfc_match_select_rank): Do not dereference NULL pointer.\n+\n+2020-06-28  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95880\n+\t* symbol.c (gfc_add_type): If sym->ns->proc_name is set, use it,\n+\totherwise fall back to sym->name.\n+\n 2020-06-27  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/95881"}, {"sha": "7b624d8e50e9373a77404c598ec83dfaf017439e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69273534c658949129ac6c389ea25c9cddec3767/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69273534c658949129ac6c389ea25c9cddec3767", "patch": "@@ -1,3 +1,53 @@\n+2020-06-28  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/86568\n+\t* g++.dg/warn/Wnonnull5.C: New test.\n+\t* c-c++-common/pr28656.c: Adjust text of expected warning.\n+\t* c-c++-common/pr66208.c: Same.\n+\t* g++.dg/cpp0x/nullptr22.C: Same.\n+\t* g++.dg/ext/attr-nonnull.C: Same.\n+\t* g++.dg/ext/attrib49.C: Same.\n+\t* g++.dg/pr71973-2.C: Same.\n+\t* g++.dg/warn/Wnonnull3.C: Same.\n+\t* g++.dg/warn/Wnonnull4.C: Same.\n+\t* obj-c++.dg/attributes/method-nonnull-1.mm: Same.\n+\t* objc.dg/attributes/method-nonnull-1.m: Same.\n+\n+2020-06-28  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95340\n+\t* gfortran.dg/pr95340.f90: New file.\n+\n+2020-06-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/95711\n+\t* g++.dg/coroutines/pr95711.C: New test.\n+\n+2020-06-28  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95880\n+\t* gfortran.dg/pr95880.f90: New file.\n+\n+2020-06-28  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/95519\n+\t* g++.dg/coroutines/torture/pr95519-02-final_suspend.C:\n+\tAmend log messages.\n+\t* g++.dg/coroutines/torture/pr95519-03-return-value.C:\n+\tLikewise.\n+\t* g++.dg/coroutines/torture/pr95519-04-yield-value.C:\n+\tLikewise.\n+\t* g++.dg/coroutines/torture/pr95519-05-gro.C: Likewise.\n+\n+2020-06-28  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gcc.target/powerpc/prefix-large-dd.c: Require DFP.\n+\t* gcc.target/powerpc/prefix-large-sd.c: Require DFP.\n+\t* gcc.target/powerpc/prefix-large-kf.c: Require float128.\n+\t* gcc.target/powerpc/prefix-pcrel-dd.c: Require DFP.\n+\t* gcc.target/powerpc/prefix-pcrel-sd.c: Require DFP.\n+\t* gcc.target/powerpc/prefix-pcrel-kf.c: Require float128.\n+\n 2020-06-27  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/95881"}, {"sha": "d4c6a22635156b1be857ce6f7fb8fba7f6f7bfaf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69273534c658949129ac6c389ea25c9cddec3767/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69273534c658949129ac6c389ea25c9cddec3767/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=69273534c658949129ac6c389ea25c9cddec3767", "patch": "@@ -1,3 +1,35 @@\n+2020-06-28  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\t* include/bits/basic_string.h (string(_CharT*, const _Alloc&)):\n+\tAdd a __nonnull__ attribute.\n+\t* testsuite/21_strings/basic_string/cons/char/nonnull.cc: New.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/nonnull.cc: Likewise.\n+\n+2020-06-28  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR libstdc++/95915\n+\t* include/std/type_traits (is_literal_type, is_literal_type_v):\n+\tDeprecate in C++17.\n+\t* include/std/variant (_Uninitialized):\n+\tAdjust the condition and the comment.\n+\t* testsuite/20_util/is_literal_type/deprecated-1z.cc: New.\n+\t* testsuite/20_util/is_literal_type/requirements/explicit_instantiation.cc:\n+\tAdjust.\n+\t* testsuite/20_util/is_literal_type/requirements/typedefs.cc: Likewise.\n+\t* testsuite/20_util/is_literal_type/value.cc: Likewise.\n+\t* testsuite/20_util/optional/constexpr/nullopt.cc:\n+\tUse __is_literal_type directly.\n+\t* testsuite/20_util/optional/nullopt.cc: Likewise.\n+\t* testsuite/20_util/variable_templates_for_traits.cc: Adjust.\n+\t* testsuite/20_util/variant/95915.cc: New.\n+\t* testsuite/20_util/variant/compile.cc: Add new test.\n+\t* testsuite/experimental/optional/constexpr/nullopt.cc:\n+\tUse __is_literal_type directly.\n+\t* testsuite/experimental/optional/nullopt.cc: Likewise.\n+\t* testsuite/experimental/type_traits/value.cc: Adjust.\n+\t* testsuite/util/testsuite_common_types.h:\n+\tUse __is_literal_type directly.\n+\n 2020-06-24  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/charconv (__from_chars_binary): Ignore leading zeros."}]}