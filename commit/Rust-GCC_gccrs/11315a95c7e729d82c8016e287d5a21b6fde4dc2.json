{"sha": "11315a95c7e729d82c8016e287d5a21b6fde4dc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEzMTVhOTVjN2U3MjlkODJjODAxNmUyODdkNWEyMWI2ZmRlNGRjMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:25:10Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:25:10Z"}, "message": "varasm.c: Include rtl-iter.h.\n\ngcc/\n\t* varasm.c: Include rtl-iter.h.\n\t(const_rtx_hash_1): Take a const_rtx rather than an rtx *.\n\tRemove the pointer to the cumulative hashval_t and just return\n\tthe hash for this rtx instead.  Remove recursive CONST_VECTOR case.\n\t(const_rtx_hash): Use FOR_EACH_SUBRTX instead of for_each_rtx.\n\tAccumulate the hashval_ts here instead of const_rtx_hash_1.\n\nFrom-SVN: r214665", "tree": {"sha": "cec2e33317f60d89708c6088802bc8f8a92a7582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cec2e33317f60d89708c6088802bc8f8a92a7582"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11315a95c7e729d82c8016e287d5a21b6fde4dc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11315a95c7e729d82c8016e287d5a21b6fde4dc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11315a95c7e729d82c8016e287d5a21b6fde4dc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11315a95c7e729d82c8016e287d5a21b6fde4dc2/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b4459f903c6da3b6c6e867bf1c62d6471ba5702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4459f903c6da3b6c6e867bf1c62d6471ba5702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4459f903c6da3b6c6e867bf1c62d6471ba5702"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "30093936eada42d6462ae47d4d4ce880e00a208d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11315a95c7e729d82c8016e287d5a21b6fde4dc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11315a95c7e729d82c8016e287d5a21b6fde4dc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11315a95c7e729d82c8016e287d5a21b6fde4dc2", "patch": "@@ -1,3 +1,12 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* varasm.c: Include rtl-iter.h.\n+\t(const_rtx_hash_1): Take a const_rtx rather than an rtx *.\n+\tRemove the pointer to the cumulative hashval_t and just return\n+\tthe hash for this rtx instead.  Remove recursive CONST_VECTOR case.\n+\t(const_rtx_hash): Use FOR_EACH_SUBRTX instead of for_each_rtx.\n+\tAccumulate the hashval_ts here instead of const_rtx_hash_1.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* var-tracking.c (add_uses): Take an rtx rather than an rtx *."}, {"sha": "ce3442a50dc94117bf7eb66116b5e3bc3607bf03", "filename": "gcc/varasm.c", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11315a95c7e729d82c8016e287d5a21b6fde4dc2/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11315a95c7e729d82c8016e287d5a21b6fde4dc2/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=11315a95c7e729d82c8016e287d5a21b6fde4dc2", "patch": "@@ -53,6 +53,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-set.h\"\n #include \"asan.h\"\n #include \"basic-block.h\"\n+#include \"rtl-iter.h\"\n \n #ifdef XCOFF_DEBUGGING_INFO\n #include \"xcoffout.h\"\t\t/* Needed for external data\n@@ -3485,19 +3486,17 @@ const_desc_rtx_eq (const void *a, const void *b)\n   return rtx_equal_p (x->constant, y->constant);\n }\n \n-/* This is the worker function for const_rtx_hash, called via for_each_rtx.  */\n+/* Hash one component of a constant.  */\n \n-static int\n-const_rtx_hash_1 (rtx *xp, void *data)\n+static hashval_t\n+const_rtx_hash_1 (const_rtx x)\n {\n   unsigned HOST_WIDE_INT hwi;\n   enum machine_mode mode;\n   enum rtx_code code;\n-  hashval_t h, *hp;\n-  rtx x;\n+  hashval_t h;\n   int i;\n \n-  x = *xp;\n   code = GET_CODE (x);\n   mode = GET_MODE (x);\n   h = (hashval_t) code * 1048573 + mode;\n@@ -3543,14 +3542,6 @@ const_rtx_hash_1 (rtx *xp, void *data)\n       h ^= fixed_hash (CONST_FIXED_VALUE (x));\n       break;\n \n-    case CONST_VECTOR:\n-      {\n-\tint i;\n-\tfor (i = XVECLEN (x, 0); i-- > 0; )\n-\t  h = h * 251 + const_rtx_hash_1 (&XVECEXP (x, 0, i), data);\n-      }\n-      break;\n-\n     case SYMBOL_REF:\n       h ^= htab_hash_string (XSTR (x, 0));\n       break;\n@@ -3568,9 +3559,7 @@ const_rtx_hash_1 (rtx *xp, void *data)\n       break;\n     }\n \n-  hp = (hashval_t *) data;\n-  *hp = *hp * 509 + h;\n-  return 0;\n+  return h;\n }\n \n /* Compute a hash value for X, which should be a constant.  */\n@@ -3579,7 +3568,9 @@ static hashval_t\n const_rtx_hash (rtx x)\n {\n   hashval_t h = 0;\n-  for_each_rtx (&x, const_rtx_hash_1, &h);\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, x, ALL)\n+    h = h * 509 + const_rtx_hash_1 (*iter);\n   return h;\n }\n "}]}