{"sha": "f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU0ZmI3NjllYzI1OTc2ODU4ZTZiZGVhOWM2YTFiZWViNzBmOTFmYQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-03-03T21:12:54Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-17T14:32:09Z"}, "message": "[Ada] Fix varsize node name conflict\n\ngcc/ada/\n\n\t* gen_il-gen.adb, gen_il-internals.ads: Generate field\n\tenumeration literals with \"F_\" prefix.  Update all generated\n\treferences accordingly.\n\t* atree.adb, einfo-utils.adb, sem_ch3.adb, sem_ch5.adb,\n\tsem_ch6.adb, sem_ch8.adb, sinfo-cn.adb, sinfo-utils.adb,\n\tsinfo-utils.ads, treepr.adb: Add \"F_\" prefix to all uses of the\n\tfield enumeration literals.", "tree": {"sha": "166ffd986b9f22a55ed672686760f0aa1c4f2c26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/166ffd986b9f22a55ed672686760f0aa1c4f2c26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b96f017cd4c6eb36afe95c7e7683928274c47fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b96f017cd4c6eb36afe95c7e7683928274c47fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b96f017cd4c6eb36afe95c7e7683928274c47fc"}], "stats": {"total": 265, "additions": 141, "deletions": 124}, "files": [{"sha": "6ef099806fe125eda0ef238b360b2036445e2e6a", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -900,12 +900,12 @@ package body Atree is\n    end Check_Vanishing_Fields;\n \n    Nkind_Offset : constant Field_Offset :=\n-     Node_Field_Descriptors (Nkind).Offset;\n+     Node_Field_Descriptors (F_Nkind).Offset;\n \n    procedure Set_Node_Kind_Type is new Set_8_Bit_Field (Node_Kind) with Inline;\n \n    procedure Init_Nkind (N : Node_Id; Val : Node_Kind) is\n-      pragma Assert (Field_Is_Initial_Zero (N, Nkind));\n+      pragma Assert (Field_Is_Initial_Zero (N, F_Nkind));\n    begin\n       Set_Node_Kind_Type (N, Nkind_Offset, Val);\n    end Init_Nkind;\n@@ -953,7 +953,7 @@ package body Atree is\n    end Mutate_Nkind;\n \n    Ekind_Offset : constant Field_Offset :=\n-     Entity_Field_Descriptors (Ekind).Offset;\n+     Entity_Field_Descriptors (F_Ekind).Offset;\n \n    procedure Set_Entity_Kind_Type is new Set_8_Bit_Field (Entity_Kind)\n      with Inline;\n@@ -1323,11 +1323,11 @@ package body Atree is\n             --  we can't just call Set_Chars, because Empty is of the wrong\n             --  type, and is outside the range of Name_Id.\n \n-            Reinit_Field_To_Zero (New_Id, Chars);\n-            Reinit_Field_To_Zero (New_Id, Has_Private_View);\n-            Reinit_Field_To_Zero (New_Id, Is_Elaboration_Checks_OK_Node);\n-            Reinit_Field_To_Zero (New_Id, Is_Elaboration_Warnings_OK_Node);\n-            Reinit_Field_To_Zero (New_Id, Is_SPARK_Mode_On_Node);\n+            Reinit_Field_To_Zero (New_Id, F_Chars);\n+            Reinit_Field_To_Zero (New_Id, F_Has_Private_View);\n+            Reinit_Field_To_Zero (New_Id, F_Is_Elaboration_Checks_OK_Node);\n+            Reinit_Field_To_Zero (New_Id, F_Is_Elaboration_Warnings_OK_Node);\n+            Reinit_Field_To_Zero (New_Id, F_Is_SPARK_Mode_On_Node);\n \n             --  Change the node type\n "}, {"sha": "0ef5e1d09c728f719a993c06595f18ac21a4fae1", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -2676,7 +2676,7 @@ package body Einfo.Utils is\n    function Scope_Depth_Set (Id : E) return B is\n    begin\n       return not Is_Record_Type (Id)\n-        and then not Field_Is_Initial_Zero (Id, Scope_Depth_Value);\n+        and then not Field_Is_Initial_Zero (Id, F_Scope_Depth_Value);\n       --  We can't call Scope_Depth_Value here, because Empty is not a valid\n       --  value of type Uint.\n    end Scope_Depth_Set;"}, {"sha": "346e624c6b96b91da6265dcc4676e5681673ada5", "filename": "gcc/ada/gen_il-gen.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fgen_il-gen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fgen_il-gen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -2019,7 +2019,7 @@ package body Gen_IL.Gen is\n                      Put (S, \",\\n\");\n                   end if;\n \n-                  Put (S, \"\\1\", Image (F));\n+                  Put (S, \"\\1\", F_Image (F));\n                end if;\n             end loop;\n          end Put_Field_Array;\n@@ -2081,7 +2081,7 @@ package body Gen_IL.Gen is\n                   Put (S, \",\\n\");\n                end if;\n \n-               Put (S, \"\\1\", Image (F));\n+               Put (S, \"\\1\", F_Image (F));\n             end loop;\n \n             Outdent (S, 1);\n@@ -2161,7 +2161,7 @@ package body Gen_IL.Gen is\n                   Put (S, \",\\n\");\n                end if;\n \n-               Put (S, \"\\1 => (\\2_Field, \\3)\", Image (F),\n+               Put (S, \"\\1 => (\\2_Field, \\3)\", F_Image (F),\n                     Image (Field_Table (F).Field_Type), Image (Field_Table (F).Offset));\n             end loop;\n \n@@ -2283,6 +2283,8 @@ package body Gen_IL.Gen is\n             Put (B, \"end Set_\\1_Id_With_Parent;\\n\", Kind);\n          end Put_Setter_With_Parent;\n \n+      --  Start of processing for Put_Nodes\n+\n       begin\n          Put (S, \"with Seinfo; use Seinfo;\\n\");\n          Put (S, \"pragma Warnings (Off);\\n\");"}, {"sha": "27022a079f9310572f1ce00e82a5388c7b305f45", "filename": "gcc/ada/gen_il-internals.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fgen_il-internals.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fgen_il-internals.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-internals.ads?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -189,6 +189,13 @@ package Gen_IL.Internals is\n \n    function Image (F : Opt_Field_Enum) return String;\n \n+   function F_Image (F : Opt_Field_Enum) return String is\n+     (\"F_\" & Image (F));\n+   --  Prepends \"F_\" to Image (F). This is used for the enumeration literals in\n+   --  the generated Sinfo.Nodes.Node_Field and Einfo.Entities.Entity_Field\n+   --  types. If we used Image (F), these enumeration literals would overload\n+   --  the getter functions, which confuses gdb.\n+\n    procedure Nil (T : Node_Or_Entity_Type);\n    --  Null procedure\n "}, {"sha": "7194f354610545c50104b8f65452396c34107499", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -4760,7 +4760,7 @@ package body Sem_Ch3 is\n       --  Now establish the proper kind and type of the object\n \n       if Ekind (Id) = E_Void then\n-         Reinit_Field_To_Zero (Id, Next_Inlined_Subprogram);\n+         Reinit_Field_To_Zero (Id, F_Next_Inlined_Subprogram);\n       end if;\n \n       if Constant_Present (N) then\n@@ -6181,7 +6181,7 @@ package body Sem_Ch3 is\n       if Nkind (Def) = N_Constrained_Array_Definition then\n \n          if Ekind (T) in Incomplete_Or_Private_Kind then\n-            Reinit_Field_To_Zero (T, Stored_Constraint);\n+            Reinit_Field_To_Zero (T, F_Stored_Constraint);\n          else\n             pragma Assert (Ekind (T) = E_Void);\n          end if;\n@@ -6228,7 +6228,7 @@ package body Sem_Ch3 is\n       else pragma Assert (Nkind (Def) = N_Unconstrained_Array_Definition);\n \n          if Ekind (T) in Incomplete_Or_Private_Kind then\n-            Reinit_Field_To_Zero (T, Stored_Constraint);\n+            Reinit_Field_To_Zero (T, F_Stored_Constraint);\n          else\n             pragma Assert (Ekind (T) = E_Void);\n          end if;\n@@ -9747,7 +9747,7 @@ package body Sem_Ch3 is\n       if Ekind (Derived_Type) in Incomplete_Or_Private_Kind\n         and then Ekind (Parent_Base) in Modular_Integer_Kind | Array_Kind\n       then\n-         Reinit_Field_To_Zero (Derived_Type, Stored_Constraint);\n+         Reinit_Field_To_Zero (Derived_Type, F_Stored_Constraint);\n       end if;\n \n       Set_Scope                  (Derived_Type, Current_Scope);\n@@ -12532,7 +12532,7 @@ package body Sem_Ch3 is\n       Set_Associated_Node_For_Itype (Full, Related_Nod);\n \n       if Ekind (Full) in Incomplete_Or_Private_Kind then\n-         Reinit_Field_To_Zero (Full, Private_Dependents);\n+         Reinit_Field_To_Zero (Full, F_Private_Dependents);\n       end if;\n \n       --  Set common attributes for all subtypes: kind, convention, etc.\n@@ -19225,19 +19225,19 @@ package body Sem_Ch3 is\n       --  cannot have any invariants.\n \n       if Ekind (CW_Type) in Incomplete_Or_Private_Kind then\n-         Reinit_Field_To_Zero (CW_Type, Private_Dependents);\n+         Reinit_Field_To_Zero (CW_Type, F_Private_Dependents);\n \n       elsif Ekind (CW_Type) in Concurrent_Kind then\n-         Reinit_Field_To_Zero (CW_Type, First_Private_Entity);\n-         Reinit_Field_To_Zero (CW_Type, Scope_Depth_Value);\n+         Reinit_Field_To_Zero (CW_Type, F_First_Private_Entity);\n+         Reinit_Field_To_Zero (CW_Type, F_Scope_Depth_Value);\n \n          if Ekind (CW_Type) in Task_Kind then\n-            Reinit_Field_To_Zero (CW_Type, Is_Elaboration_Checks_OK_Id);\n-            Reinit_Field_To_Zero (CW_Type, Is_Elaboration_Warnings_OK_Id);\n+            Reinit_Field_To_Zero (CW_Type, F_Is_Elaboration_Checks_OK_Id);\n+            Reinit_Field_To_Zero (CW_Type, F_Is_Elaboration_Warnings_OK_Id);\n          end if;\n \n          if Ekind (CW_Type) in E_Task_Type | E_Protected_Type then\n-            Reinit_Field_To_Zero (CW_Type, SPARK_Aux_Pragma_Inherited);\n+            Reinit_Field_To_Zero (CW_Type, F_SPARK_Aux_Pragma_Inherited);\n          end if;\n       end if;\n \n@@ -19624,7 +19624,7 @@ package body Sem_Ch3 is\n       Analyze_And_Resolve (Mod_Expr, Any_Integer);\n \n       if Ekind (T) in Incomplete_Or_Private_Kind then\n-         Reinit_Field_To_Zero (T, Stored_Constraint);\n+         Reinit_Field_To_Zero (T, F_Stored_Constraint);\n       end if;\n \n       Set_Etype (T, T);\n@@ -20428,7 +20428,7 @@ package body Sem_Ch3 is\n          Id := Defining_Identifier (Discr);\n \n          if Ekind (Id) = E_In_Parameter then\n-            Reinit_Field_To_Zero (Id, Discriminal_Link);\n+            Reinit_Field_To_Zero (Id, F_Discriminal_Link);\n          end if;\n \n          Mutate_Ekind (Id, E_Discriminant);\n@@ -21316,7 +21316,7 @@ package body Sem_Ch3 is\n             Set_Subtype_Indication\n               (Parent (Priv_Dep), New_Occurrence_Of (Full_T, Sloc (Priv_Dep)));\n             Reinit_Field_To_Zero\n-              (Priv_Dep, Private_Dependents,\n+              (Priv_Dep, F_Private_Dependents,\n                Old_Ekind => E_Incomplete_Subtype);\n             Mutate_Ekind (Priv_Dep, Subtype_Kind (Ekind (Full_T)));\n             Set_Etype (Priv_Dep, Full_T);"}, {"sha": "2c0bb5f97cd83d9ffc5c0f51a95e2b1b1af039bc", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -1320,7 +1320,7 @@ package body Sem_Ch5 is\n \n             else\n                if Ekind (Ent) = E_Label then\n-                  Reinit_Field_To_Zero (Ent, Enclosing_Scope);\n+                  Reinit_Field_To_Zero (Ent, F_Enclosing_Scope);\n                end if;\n \n                Mutate_Ekind (Ent, E_Block);\n@@ -3760,7 +3760,7 @@ package body Sem_Ch5 is\n             --  parser for generic units.\n \n             if Ekind (Ent) = E_Label then\n-               Reinit_Field_To_Zero (Ent, Enclosing_Scope);\n+               Reinit_Field_To_Zero (Ent, F_Enclosing_Scope);\n                Mutate_Ekind (Ent, E_Loop);\n \n                if Nkind (Parent (Ent)) = N_Implicit_Label_Declaration then"}, {"sha": "8bf309f95f91a4d1883274d73d0e1710e3c441cc", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -1848,7 +1848,7 @@ package body Sem_Ch6 is\n          --  Visible generic entity is callable within its own body\n \n          Mutate_Ekind       (Gen_Id,  Ekind (Body_Id));\n-         Reinit_Field_To_Zero (Body_Id, Has_Out_Or_In_Out_Parameter,\n+         Reinit_Field_To_Zero (Body_Id, F_Has_Out_Or_In_Out_Parameter,\n            Old_Ekind =>\n              (E_Function | E_Procedure |\n                 E_Generic_Function | E_Generic_Procedure => True,\n@@ -1929,7 +1929,7 @@ package body Sem_Ch6 is\n \n       --  Outside of its body, unit is generic again\n \n-      Reinit_Field_To_Zero (Gen_Id, Has_Nested_Subprogram,\n+      Reinit_Field_To_Zero (Gen_Id, F_Has_Nested_Subprogram,\n         Old_Ekind => (E_Function | E_Procedure => True, others => False));\n       Mutate_Ekind (Gen_Id, Kind);\n       Generate_Reference (Gen_Id, Body_Id, 'b', Set_Ref => False);\n@@ -4610,16 +4610,16 @@ package body Sem_Ch6 is\n             Reference_Body_Formals (Spec_Id, Body_Id);\n          end if;\n \n-         Reinit_Field_To_Zero (Body_Id, Has_Out_Or_In_Out_Parameter);\n-         Reinit_Field_To_Zero (Body_Id, Needs_No_Actuals,\n+         Reinit_Field_To_Zero (Body_Id, F_Has_Out_Or_In_Out_Parameter);\n+         Reinit_Field_To_Zero (Body_Id, F_Needs_No_Actuals,\n            Old_Ekind => (E_Function | E_Procedure => True, others => False));\n-         Reinit_Field_To_Zero (Body_Id, Is_Predicate_Function,\n+         Reinit_Field_To_Zero (Body_Id, F_Is_Predicate_Function,\n            Old_Ekind => (E_Function | E_Procedure => True, others => False));\n-         Reinit_Field_To_Zero (Body_Id, Protected_Subprogram,\n+         Reinit_Field_To_Zero (Body_Id, F_Protected_Subprogram,\n            Old_Ekind => (E_Function | E_Procedure => True, others => False));\n \n          if Ekind (Body_Id) = E_Procedure then\n-            Reinit_Field_To_Zero (Body_Id, Receiving_Entry);\n+            Reinit_Field_To_Zero (Body_Id, F_Receiving_Entry);\n          end if;\n \n          Mutate_Ekind (Body_Id, E_Subprogram_Body);"}, {"sha": "238e6701d8e92e8c48631c7f5fbb27b04c0c9df2", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -3278,8 +3278,8 @@ package body Sem_Ch8 is\n          --  constructed later at the freeze point, so indicate that the\n          --  completion has not been seen yet.\n \n-         Reinit_Field_To_Zero (New_S, Has_Out_Or_In_Out_Parameter);\n-         Reinit_Field_To_Zero (New_S, Needs_No_Actuals,\n+         Reinit_Field_To_Zero (New_S, F_Has_Out_Or_In_Out_Parameter);\n+         Reinit_Field_To_Zero (New_S, F_Needs_No_Actuals,\n            Old_Ekind => (E_Function | E_Procedure => True, others => False));\n          Mutate_Ekind (New_S, E_Subprogram_Body);\n          New_S := Rename_Spec;\n@@ -6835,7 +6835,7 @@ package body Sem_Ch8 is\n \n       case Nkind (N) is\n          when N_Selected_Component =>\n-            Reinit_Field_To_Zero (N, Is_Prefixed_Call);\n+            Reinit_Field_To_Zero (N, F_Is_Prefixed_Call);\n             Change_Selected_Component_To_Expanded_Name (N);\n \n          when N_Expanded_Name =>"}, {"sha": "9a9af9b08f69e8e205ddbc42bacb38e721a32253", "filename": "gcc/ada/sinfo-cn.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsinfo-cn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsinfo-cn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo-cn.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -45,7 +45,7 @@ package body Sinfo.CN is\n      (N : Node_Id)\n    is\n    begin\n-      Reinit_Field_To_Zero (N, Char_Literal_Value);\n+      Reinit_Field_To_Zero (N, F_Char_Literal_Value);\n       Extend_Node (N);\n    end Change_Character_Literal_To_Defining_Character_Literal;\n \n@@ -130,7 +130,7 @@ package body Sinfo.CN is\n      (N : Node_Id)\n    is\n    begin\n-      Reinit_Field_To_Zero (N, Strval);\n+      Reinit_Field_To_Zero (N, F_Strval);\n       Extend_Node (N);\n    end Change_Operator_Symbol_To_Defining_Operator_Symbol;\n \n@@ -140,7 +140,7 @@ package body Sinfo.CN is\n \n    procedure Change_Operator_Symbol_To_String_Literal (N : Node_Id) is\n    begin\n-      Reinit_Field_To_Zero (N, Chars);\n+      Reinit_Field_To_Zero (N, F_Chars);\n       Set_Entity (N, Empty);\n       Mutate_Nkind (N, N_String_Literal);\n    end Change_Operator_Symbol_To_String_Literal;"}, {"sha": "f9db66982b08cb856752f5e52b5f0ad0376da8b1", "filename": "gcc/ada/sinfo-utils.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo-utils.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -239,7 +239,7 @@ package body Sinfo.Utils is\n \n    begin\n       for J in Fields'Range loop\n-         if Fields (J) /= Link then -- Don't walk Parent!\n+         if Fields (J) /= F_Link then -- Don't walk Parent!\n             declare\n                Desc : Field_Descriptor renames\n                  Node_Field_Descriptors (Fields (J));\n@@ -264,7 +264,7 @@ package body Sinfo.Utils is\n \n    begin\n       for J in Fields'Range loop\n-         if Fields (J) /= Link then -- Don't walk Parent!\n+         if Fields (J) /= F_Link then -- Don't walk Parent!\n             declare\n                Desc : Field_Descriptor renames\n                  Node_Field_Descriptors (Fields (J));"}, {"sha": "dce659232f470f06b591276c0e45e41ada5c720b", "filename": "gcc/ada/sinfo-utils.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsinfo-utils.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Fsinfo-utils.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo-utils.ads?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -139,10 +139,10 @@ package Sinfo.Utils is\n      (N : N_Inclusive_Has_Entity; Val : Node_Id)\n       renames Set_Entity_Or_Associated_Node;\n \n-   function Associated_Node return Node_Field renames\n-     Entity_Or_Associated_Node;\n-   function Entity return Node_Field renames\n-     Entity_Or_Associated_Node;\n+   function F_Associated_Node return Node_Field renames\n+     F_Entity_Or_Associated_Node;\n+   function F_Entity return Node_Field renames\n+     F_Entity_Or_Associated_Node;\n    --  Note that we are renaming the enumeration literals here\n \n    ---------------"}, {"sha": "50d4ca3ccbddb86da64bfddb03fefd0389da2d79", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 85, "deletions": 77, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54fb769ec25976858e6bdea9c6a1beeb70f91fa/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=f54fb769ec25976858e6bdea9c6a1beeb70f91fa", "patch": "@@ -284,110 +284,118 @@ package body Treepr is\n    function Image (F : Node_Field) return String is\n    begin\n       case F is\n-         when Alloc_For_BIP_Return =>\n+         when F_Alloc_For_BIP_Return =>\n             return \"Alloc_For_BIP_Return\";\n-         when Assignment_OK =>\n+         when F_Assignment_OK =>\n             return \"Assignment_OK\";\n-         when Backwards_OK =>\n+         when F_Backwards_OK =>\n             return \"Backwards_OK\";\n-         when Conversion_OK =>\n+         when F_Conversion_OK =>\n             return \"Conversion_OK\";\n-         when Forwards_OK =>\n+         when F_Forwards_OK =>\n             return \"Forwards_OK\";\n-         when Has_SP_Choice =>\n+         when F_Has_SP_Choice =>\n             return \"Has_SP_Choice\";\n-         when Is_Elaboration_Checks_OK_Node =>\n+         when F_Is_Elaboration_Checks_OK_Node =>\n             return \"Is_Elaboration_Checks_OK_Node\";\n-         when Is_Elaboration_Warnings_OK_Node =>\n+         when F_Is_Elaboration_Warnings_OK_Node =>\n             return \"Is_Elaboration_Warnings_OK_Node\";\n-         when Is_Known_Guaranteed_ABE =>\n+         when F_Is_Known_Guaranteed_ABE =>\n             return \"Is_Known_Guaranteed_ABE\";\n-         when Is_SPARK_Mode_On_Node =>\n+         when F_Is_SPARK_Mode_On_Node =>\n             return \"Is_SPARK_Mode_On_Node\";\n-         when Local_Raise_Not_OK =>\n+         when F_Local_Raise_Not_OK =>\n             return \"Local_Raise_Not_OK\";\n-         when SCIL_Controlling_Tag =>\n+         when F_SCIL_Controlling_Tag =>\n             return \"SCIL_Controlling_Tag\";\n-         when SCIL_Entity =>\n+         when F_SCIL_Entity =>\n             return \"SCIL_Entity\";\n-         when SCIL_Tag_Value =>\n+         when F_SCIL_Tag_Value =>\n             return \"SCIL_Tag_Value\";\n-         when SCIL_Target_Prim =>\n+         when F_SCIL_Target_Prim =>\n             return \"SCIL_Target_Prim\";\n-         when Shift_Count_OK =>\n+         when F_Shift_Count_OK =>\n             return \"Shift_Count_OK\";\n-         when Split_PPC =>\n+         when F_Split_PPC =>\n             return \"Split_PPC\";\n-         when TSS_Elist =>\n+         when F_TSS_Elist =>\n             return \"TSS_Elist\";\n \n          when others =>\n-            return Capitalize (F'Img);\n+            declare\n+               Result : constant String := Capitalize (F'Img);\n+            begin\n+               return Result (3 .. Result'Last); -- Remove \"F_\"\n+            end;\n       end case;\n    end Image;\n \n    function Image (F : Entity_Field) return String is\n    begin\n       case F is\n-         when BIP_Initialization_Call =>\n+         when F_BIP_Initialization_Call =>\n             return \"BIP_Initialization_Call\";\n-         when Body_Needed_For_SAL =>\n+         when F_Body_Needed_For_SAL =>\n             return \"Body_Needed_For_SAL\";\n-         when CR_Discriminant =>\n+         when F_CR_Discriminant =>\n             return \"CR_Discriminant\";\n-         when DT_Entry_Count =>\n+         when F_DT_Entry_Count =>\n             return \"DT_Entry_Count\";\n-         when DT_Offset_To_Top_Func =>\n+         when F_DT_Offset_To_Top_Func =>\n             return \"DT_Offset_To_Top_Func\";\n-         when DT_Position =>\n+         when F_DT_Position =>\n             return \"DT_Position\";\n-         when DTC_Entity =>\n+         when F_DTC_Entity =>\n             return \"DTC_Entity\";\n-         when Has_Inherited_DIC =>\n+         when F_Has_Inherited_DIC =>\n             return \"Has_Inherited_DIC\";\n-         when Has_Own_DIC =>\n+         when F_Has_Own_DIC =>\n             return \"Has_Own_DIC\";\n-         when Has_RACW =>\n+         when F_Has_RACW =>\n             return \"Has_RACW\";\n-         when Ignore_SPARK_Mode_Pragmas =>\n+         when F_Ignore_SPARK_Mode_Pragmas =>\n             return \"Ignore_SPARK_Mode_Pragmas\";\n-         when Is_Constr_Subt_For_UN_Aliased =>\n+         when F_Is_Constr_Subt_For_UN_Aliased =>\n             return \"Is_Constr_Subt_For_UN_Aliased\";\n-         when Is_CPP_Class =>\n+         when F_Is_CPP_Class =>\n             return \"Is_CPP_Class\";\n-         when Is_CUDA_Kernel =>\n+         when F_Is_CUDA_Kernel =>\n             return \"Is_CUDA_Kernel\";\n-         when Is_DIC_Procedure =>\n+         when F_Is_DIC_Procedure =>\n             return \"Is_DIC_Procedure\";\n-         when Is_Discrim_SO_Function =>\n+         when F_Is_Discrim_SO_Function =>\n             return \"Is_Discrim_SO_Function\";\n-         when Is_Elaboration_Checks_OK_Id =>\n+         when F_Is_Elaboration_Checks_OK_Id =>\n             return \"Is_Elaboration_Checks_OK_Id\";\n-         when Is_Elaboration_Warnings_OK_Id =>\n+         when F_Is_Elaboration_Warnings_OK_Id =>\n             return \"Is_Elaboration_Warnings_OK_Id\";\n-         when Is_RACW_Stub_Type =>\n+         when F_Is_RACW_Stub_Type =>\n             return \"Is_RACW_Stub_Type\";\n-         when OK_To_Rename =>\n+         when F_OK_To_Rename =>\n             return \"OK_To_Rename\";\n-         when Referenced_As_LHS =>\n+         when F_Referenced_As_LHS =>\n             return \"Referenced_As_LHS\";\n-         when RM_Size =>\n+         when F_RM_Size =>\n             return \"RM_Size\";\n-         when SPARK_Aux_Pragma =>\n+         when F_SPARK_Aux_Pragma =>\n             return \"SPARK_Aux_Pragma\";\n-         when SPARK_Aux_Pragma_Inherited =>\n+         when F_SPARK_Aux_Pragma_Inherited =>\n             return \"SPARK_Aux_Pragma_Inherited\";\n-         when SPARK_Pragma =>\n+         when F_SPARK_Pragma =>\n             return \"SPARK_Pragma\";\n-         when SPARK_Pragma_Inherited =>\n+         when F_SPARK_Pragma_Inherited =>\n             return \"SPARK_Pragma_Inherited\";\n-         when SSO_Set_High_By_Default =>\n+         when F_SSO_Set_High_By_Default =>\n             return \"SSO_Set_High_By_Default\";\n-         when SSO_Set_Low_By_Default =>\n+         when F_SSO_Set_Low_By_Default =>\n             return \"SSO_Set_Low_By_Default\";\n \n          when others =>\n-            return Capitalize (F'Img);\n+            declare\n+               Result : constant String := Capitalize (F'Img);\n+            begin\n+               return Result (3 .. Result'Last); -- Remove \"F_\"\n+            end;\n       end case;\n    end Image;\n \n@@ -646,8 +654,8 @@ package body Treepr is\n          Should_Print : constant Entity_Field_Set :=\n            --  Set of fields that should be printed. False for fields that were\n            --  already printed above.\n-           (Ekind\n-            | Basic_Convention => False, -- Convention was printed\n+           (F_Ekind\n+            | F_Basic_Convention => False, -- Convention was printed\n             others => True);\n       begin\n          --  Outer loop makes flags come out last\n@@ -1372,31 +1380,31 @@ package body Treepr is\n            --  Set of fields that should be printed. False for fields that were\n            --  already printed above, and for In_List, which we don't bother\n            --  printing.\n-           (Nkind\n-            | Chars\n-            | Comes_From_Source\n-            | Analyzed\n-            | Error_Posted\n-            | Is_Ignored_Ghost_Node\n-            | Check_Actuals\n-            | Link -- Parent was printed\n-            | Sloc\n-            | Left_Opnd\n-            | Right_Opnd\n-            | Entity\n-            | Assignment_OK\n-            | Do_Range_Check\n-            | Has_Dynamic_Length_Check\n-            | Has_Aspects\n-            | Is_Controlling_Actual\n-            | Is_Overloaded\n-            | Is_Static_Expression\n-            | Must_Not_Freeze\n-            | Small_Paren_Count -- Paren_Count was printed\n-            | Raises_Constraint_Error\n-            | Do_Overflow_Check\n-            | Etype\n-            | In_List\n+           (F_Nkind\n+            | F_Chars\n+            | F_Comes_From_Source\n+            | F_Analyzed\n+            | F_Error_Posted\n+            | F_Is_Ignored_Ghost_Node\n+            | F_Check_Actuals\n+            | F_Link -- Parent was printed\n+            | F_Sloc\n+            | F_Left_Opnd\n+            | F_Right_Opnd\n+            | F_Entity\n+            | F_Assignment_OK\n+            | F_Do_Range_Check\n+            | F_Has_Dynamic_Length_Check\n+            | F_Has_Aspects\n+            | F_Is_Controlling_Actual\n+            | F_Is_Overloaded\n+            | F_Is_Static_Expression\n+            | F_Must_Not_Freeze\n+            | F_Small_Paren_Count -- Paren_Count was printed\n+            | F_Raises_Constraint_Error\n+            | F_Do_Overflow_Check\n+            | F_Etype\n+            | F_In_List\n               => False,\n \n             others => True);\n@@ -1415,7 +1423,7 @@ package body Treepr is\n                      --  Special case for End_Span, which also prints the\n                      --  End_Location.\n \n-                     if Fields (Field_Index) = End_Span then\n+                     if Fields (Field_Index) = F_End_Span then\n                         Print_End_Span (N);\n \n                      else\n@@ -2227,7 +2235,7 @@ package body Treepr is\n                   --  but what concerns us now is looking for descendants in\n                   --  the tree.\n \n-                 and then F /= Next_Entity -- See below for why we skip this\n+                 and then F /= F_Next_Entity -- See below for why we skip this\n                then\n                   Visit_Descendant (Get_Union_Id (N, FD.Offset));\n                end if;"}]}