{"sha": "9ec227134b783359551d2449e1044bd7eca269e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVjMjI3MTM0Yjc4MzM1OTU1MWQyNDQ5ZTEwNDRiZDdlY2EyNjllMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-12-18T06:36:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-12-18T06:36:51Z"}, "message": "tree.c (make_node): Don't set TREE_TYPE on 's' class nodes.\n\n        * tree.c (make_node): Don't set TREE_TYPE on 's' class nodes.\n        (build1): Always set TREE_SIDE_EFFECTS on 's' class nodes.\n\nFrom-SVN: r60237", "tree": {"sha": "6edec40cfde7985e0af06529474d5616700e21e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6edec40cfde7985e0af06529474d5616700e21e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ec227134b783359551d2449e1044bd7eca269e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec227134b783359551d2449e1044bd7eca269e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ec227134b783359551d2449e1044bd7eca269e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec227134b783359551d2449e1044bd7eca269e0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efc7052de7e511d905b02d6a5b3ab0723c8d7184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc7052de7e511d905b02d6a5b3ab0723c8d7184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc7052de7e511d905b02d6a5b3ab0723c8d7184"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "dca13eff81a4744a2783b3db8e5bceaab022f755", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec227134b783359551d2449e1044bd7eca269e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec227134b783359551d2449e1044bd7eca269e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ec227134b783359551d2449e1044bd7eca269e0", "patch": "@@ -1,5 +1,8 @@\n 2002-12-17  Jason Merrill  <jason@redhat.com>\n \n+\t* tree.c (make_node): Don't set TREE_TYPE on 's' class nodes.\n+\t(build1): Always set TREE_SIDE_EFFECTS on 's' class nodes.\n+\n         * gcc.c (do_spec_1) ['W']: End any pending argument from the braces.\n \n \t* calls.c (expand_call): Don't try to be clever about expanding"}, {"sha": "736e38d399726ef8f2de5145063285f7a7da8b3b", "filename": "gcc/tree.c", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec227134b783359551d2449e1044bd7eca269e0/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec227134b783359551d2449e1044bd7eca269e0/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=9ec227134b783359551d2449e1044bd7eca269e0", "patch": "@@ -297,7 +297,6 @@ make_node (code)\n     {\n     case 's':\n       TREE_SIDE_EFFECTS (t) = 1;\n-      TREE_TYPE (t) = void_type_node;\n       break;\n \n     case 'd':\n@@ -2269,17 +2268,28 @@ build1 (code, type, node)\n      tree type;\n      tree node;\n {\n-  int length;\n+  int length = sizeof (struct tree_exp);\n #ifdef GATHER_STATISTICS\n   tree_node_kind kind;\n #endif\n   tree t;\n \n #ifdef GATHER_STATISTICS\n-  if (TREE_CODE_CLASS (code) == 'r')\n-    kind = r_kind;\n-  else\n-    kind = e_kind;\n+  switch (TREE_CODE_CLASS (code))\n+    {\n+    case 's':  /* an expression with side effects */\n+      kind = s_kind;\n+      break;\n+    case 'r':  /* a reference */\n+      kind = r_kind;\n+      break;\n+    default:\n+      kind = e_kind;\n+      break;\n+    }\n+\n+  tree_node_counts[(int) kind]++;\n+  tree_node_sizes[(int) kind] += length;\n #endif\n \n #ifdef ENABLE_CHECKING\n@@ -2289,17 +2299,10 @@ build1 (code, type, node)\n     abort ();\n #endif /* ENABLE_CHECKING */\n \n-  length = sizeof (struct tree_exp);\n-\n   t = ggc_alloc_tree (length);\n \n   memset ((PTR) t, 0, sizeof (struct tree_common));\n \n-#ifdef GATHER_STATISTICS\n-  tree_node_counts[(int) kind]++;\n-  tree_node_sizes[(int) kind] += length;\n-#endif\n-\n   TREE_SET_CODE (t, code);\n \n   TREE_TYPE (t) = type;\n@@ -2311,7 +2314,11 @@ build1 (code, type, node)\n       TREE_READONLY (t) = TREE_READONLY (node);\n     }\n \n-  switch (code)\n+  if (TREE_CODE_CLASS (code) == 's')\n+    {\n+      TREE_SIDE_EFFECTS (t) = 1;\n+    }\n+  else switch (code)\n     {\n     case INIT_EXPR:\n     case MODIFY_EXPR:"}]}