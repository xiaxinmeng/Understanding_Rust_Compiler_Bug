{"sha": "87ace7279eb8af4417a5853ca4717f9d86857c77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdhY2U3Mjc5ZWI4YWY0NDE3YTU4NTNjYTQ3MTdmOWQ4Njg1N2M3Nw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-04-06T09:29:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:29:20Z"}, "message": "a-diroro.ads: Inserted the pragma Unimplemented_Unit\n\n2007-04-06  Robert Dewar  <dewar@adacore.com>\n\t    Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-diroro.ads: Inserted the pragma Unimplemented_Unit\n\n\t* bindgen.adb (Gen_Output_File_Ada): Generate pragma Ada_95 at start\n\tof files\n\tAdd mention of -Sev (set initialize_scalars option from environment\n\tvariable at run time) in gnatbind usage message.\n\n\t* elists.ads, elists.adb: (Append_Unique_Elmt): New procedure\n\n\t* fname-uf.ads: Minor comment fix\n\n\t* osint.ads: Change pragma Elaborate to Elaborate_All\n\n\t* par-load.adb: Add documentation.\n\n\t* sem_cat.ads, sem_cat.adb: Minor code reorganization\n\n\t* s-parint.ads (RCI_Locator) : Add 'Version' generic formal\n\n\t* s-secsta.ads: Extra comments\n\n\t* s-soflin.ads: Minor comment fixes\n\n\t* s-stratt.ads (Block_Stream_Ops_OK): Removed.\n\n\t* s-wchcon.ads: Minor comment addition\n\n\t* treepr.adb: Minor change in message\n\t(Print_Name,Print_Node): Make these debug printouts more robust: print\n\t\"no such...\" instead of crashing on bad input.\n\nFrom-SVN: r123606", "tree": {"sha": "defb84df2af89396c0b0e9e24f0de9b74e6f261f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/defb84df2af89396c0b0e9e24f0de9b74e6f261f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87ace7279eb8af4417a5853ca4717f9d86857c77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87ace7279eb8af4417a5853ca4717f9d86857c77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87ace7279eb8af4417a5853ca4717f9d86857c77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87ace7279eb8af4417a5853ca4717f9d86857c77/comments", "author": null, "committer": null, "parents": [{"sha": "7a56c3bc6225aee179323067e2df21d122cac00c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a56c3bc6225aee179323067e2df21d122cac00c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a56c3bc6225aee179323067e2df21d122cac00c"}], "stats": {"total": 185, "additions": 110, "deletions": 75}, "files": [{"sha": "2cdaeb1f2b1f96fd605a9765ecc601c663b2c799", "filename": "gcc/ada/a-diroro.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fa-diroro.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fa-diroro.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-diroro.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -6,9 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2006, Free Software Foundation, Inc.            --\n---                                                                          --\n--- This specification is adapted from the Ada Reference Manual for use with --\n+-- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT.  In accordance with the copyright of that document, you can freely --\n -- copy and modify this specification,  provided that if you redistribute a --\n -- modified version,  any changes that you have made are clearly indicated. --\n@@ -20,6 +18,8 @@ with Ada.Real_Time;\n \n package Ada.Dispatching.Round_Robin is\n \n+   pragma Unimplemented_Unit;\n+\n    Default_Quantum : constant Ada.Real_Time.Time_Span :=\n                        Ada.Real_Time.Milliseconds (10);\n "}, {"sha": "65e952ad406ea013ff88345b572843d045df7667", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -1964,6 +1964,12 @@ package body Bindgen is\n \n       Create_Binder_Output (Filename, 's', Bfiles);\n \n+      --  We always compile the binder file in Ada 95 mode so that we properly\n+      --  handle use of Ada 2005 keywords as identifiers in Ada 95 mode. None\n+      --  of the Ada 2005 constructs are needed by the binder file.\n+\n+      WBI (\"pragma Ada_95;\");\n+\n       --  If we are operating in Restrictions (No_Exception_Handlers) mode,\n       --  then we need to make sure that the binder program is compiled with\n       --  the same restriction, so that no exception tables are generated.\n@@ -2153,6 +2159,12 @@ package body Bindgen is\n \n       Create_Binder_Output (Filename, 'b', Bfileb);\n \n+      --  We always compile the binder file in Ada 95 mode so that we properly\n+      --  handle use of Ada 2005 keywords as identifiers in Ada 95 mode. None\n+      --  of the Ada 2005 constructs are needed by the binder file.\n+\n+      WBI (\"pragma Ada_95;\");\n+\n       --  Output Source_File_Name pragmas which look like\n \n       --    pragma Source_File_Name (Ada_Main, Spec_File_Name => \"sss\");"}, {"sha": "831f95242ca3929a47d538898e62b84960397948", "filename": "gcc/ada/elists.adb", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Felists.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Felists.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.adb?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -97,7 +97,7 @@ package body Elists is\n      Table_Name           => \"Elists\");\n \n    type Elmt_Item is record\n-      Node : Node_Id;\n+      Node : Node_Or_Entity_Id;\n       Next : Union_Id;\n    end record;\n \n@@ -113,12 +113,12 @@ package body Elists is\n    -- Append_Elmt --\n    -----------------\n \n-   procedure Append_Elmt (Node : Node_Id; To : Elist_Id) is\n+   procedure Append_Elmt (N : Node_Or_Entity_Id; To : Elist_Id) is\n       L : constant Elmt_Id := Elists.Table (To).Last;\n \n    begin\n       Elmts.Increment_Last;\n-      Elmts.Table (Elmts.Last).Node := Node;\n+      Elmts.Table (Elmts.Last).Node := N;\n       Elmts.Table (Elmts.Last).Next := Union_Id (To);\n \n       if L = No_Elmt then\n@@ -134,12 +134,32 @@ package body Elists is\n          Write_Int (Int (Elmts.Last));\n          Write_Str (\" to list Elist_Id = \");\n          Write_Int (Int (To));\n-         Write_Str (\" referencing Node_Id = \");\n-         Write_Int (Int (Node));\n+         Write_Str (\" referencing Node_Or_Entity_Id = \");\n+         Write_Int (Int (N));\n          Write_Eol;\n       end if;\n    end Append_Elmt;\n \n+   ------------------------\n+   -- Append_Unique_Elmt --\n+   ------------------------\n+\n+   procedure Append_Unique_Elmt (N : Node_Or_Entity_Id; To : Elist_Id) is\n+      Elmt : Elmt_Id;\n+   begin\n+      Elmt := First_Elmt (To);\n+      loop\n+         if No (Elmt) then\n+            Append_Elmt (N, To);\n+            return;\n+         elsif Node (Elmt) = N then\n+            return;\n+         else\n+            Next_Elmt (Elmt);\n+         end if;\n+      end loop;\n+   end Append_Unique_Elmt;\n+\n    --------------------\n    -- Elists_Address --\n    --------------------\n@@ -182,20 +202,20 @@ package body Elists is\n    -- Insert_Elmt_After --\n    -----------------------\n \n-   procedure Insert_Elmt_After (Node : Node_Id; Elmt : Elmt_Id) is\n-      N : constant Union_Id := Elmts.Table (Elmt).Next;\n+   procedure Insert_Elmt_After (N : Node_Or_Entity_Id; Elmt : Elmt_Id) is\n+      Nxt : constant Union_Id := Elmts.Table (Elmt).Next;\n \n    begin\n       pragma Assert (Elmt /= No_Elmt);\n \n       Elmts.Increment_Last;\n-      Elmts.Table (Elmts.Last).Node := Node;\n-      Elmts.Table (Elmts.Last).Next := N;\n+      Elmts.Table (Elmts.Last).Node := N;\n+      Elmts.Table (Elmts.Last).Next := Nxt;\n \n       Elmts.Table (Elmt).Next := Union_Id (Elmts.Last);\n \n-      if N in Elist_Range then\n-         Elists.Table (Elist_Id (N)).Last := Elmts.Last;\n+      if Nxt in Elist_Range then\n+         Elists.Table (Elist_Id (Nxt)).Last := Elmts.Last;\n       end if;\n    end Insert_Elmt_After;\n \n@@ -326,12 +346,12 @@ package body Elists is\n    -- Prepend_Elmt --\n    ------------------\n \n-   procedure Prepend_Elmt (Node : Node_Id; To : Elist_Id) is\n+   procedure Prepend_Elmt (N : Node_Or_Entity_Id; To : Elist_Id) is\n       F : constant Elmt_Id := Elists.Table (To).First;\n \n    begin\n       Elmts.Increment_Last;\n-      Elmts.Table (Elmts.Last).Node := Node;\n+      Elmts.Table (Elmts.Last).Node := N;\n \n       if F = No_Elmt then\n          Elists.Table (To).Last := Elmts.Last;\n@@ -341,7 +361,6 @@ package body Elists is\n       end if;\n \n       Elists.Table (To).First  := Elmts.Last;\n-\n    end Prepend_Elmt;\n \n    -------------\n@@ -438,7 +457,7 @@ package body Elists is\n    -- Replace_Elmt --\n    ------------------\n \n-   procedure Replace_Elmt (Elmt : Elmt_Id; New_Node : Node_Id) is\n+   procedure Replace_Elmt (Elmt : Elmt_Id; New_Node : Node_Or_Entity_Id) is\n    begin\n       Elmts.Table (Elmt).Node := New_Node;\n    end Replace_Elmt;"}, {"sha": "6ddb45871a094639a700fde15fc940fe5979ce46", "filename": "gcc/ada/elists.ads", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Felists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Felists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -121,17 +121,22 @@ package Elists is\n    --  This function determines if a given tree id references an element list\n    --  that contains no items.\n \n-   procedure Append_Elmt (Node : Node_Id; To : Elist_Id);\n-   --  Appends Node at the end of To, allocating a new element\n+   procedure Append_Elmt (N : Node_Or_Entity_Id; To : Elist_Id);\n+   --  Appends N at the end of To, allocating a new element. N must be a\n+   --  non-empty node or entity Id, and To must be an Elist (not No_Elist).\n \n-   procedure Prepend_Elmt (Node : Node_Id; To : Elist_Id);\n-   --  Appends Node at the beginning of To, allocating a new element\n+   procedure Append_Unique_Elmt (N : Node_Or_Entity_Id; To : Elist_Id);\n+   --  Like Append_Elmt, except that a check is made to see if To already\n+   --  contains N and if so the call has no effect.\n \n-   procedure Insert_Elmt_After (Node : Node_Id; Elmt : Elmt_Id);\n-   --  Add a new element (Node) right after the pre-existing element Elmt\n+   procedure Prepend_Elmt (N : Node_Or_Entity_Id; To : Elist_Id);\n+   --  Appends N at the beginning of To, allocating a new element\n+\n+   procedure Insert_Elmt_After (N : Node_Or_Entity_Id; Elmt : Elmt_Id);\n+   --  Add a new element (N) right after the pre-existing element Elmt\n    --  It is invalid to call this subprogram with Elmt = No_Elmt.\n \n-   procedure Replace_Elmt (Elmt : Elmt_Id; New_Node : Node_Id);\n+   procedure Replace_Elmt (Elmt : Elmt_Id; New_Node : Node_Or_Entity_Id);\n    pragma Inline (Replace_Elmt);\n    --  Causes the given element of the list to refer to New_Node, the node\n    --  which was previously referred to by Elmt is effectively removed from"}, {"sha": "bf047704231245181f16b6bf9f70ca55c7505a4f", "filename": "gcc/ada/fname-uf.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Ffname-uf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Ffname-uf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -58,10 +58,9 @@ package Fname.UF is\n       Subunit  : Boolean;\n       May_Fail : Boolean := False) return File_Name_Type;\n    --  This function returns the file name that corresponds to a given unit\n-   --  name, Uname. The Subunit parameter is set True for subunits, and\n-   --  false for all other kinds of units. The caller is responsible for\n-   --  ensuring that the unit name meets the requirements given in package\n-   --  Uname and described above.\n+   --  name, Uname. The Subunit parameter is set True for subunits, and false\n+   --  for all other kinds of units. The caller must ensure that the unit name\n+   --  meets the requirements given in package Uname.\n    --\n    --  When May_Fail is True, if the file cannot be found, this function\n    --  returns No_File. When it is False, if the file cannot be found,"}, {"sha": "8af2ef64608532831f7e2a7f5f818dcf8eb546de", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,8 @@ with GNAT.OS_Lib; use GNAT.OS_Lib;\n with System;      use System;\n with Types;       use Types;\n \n-pragma Elaborate (GNAT.OS_Lib);\n+pragma Elaborate_All (GNAT.OS_Lib);\n+--  For the call to function Get_Target_Object_Suffix in the private part\n \n package Osint is\n "}, {"sha": "d73546843bb373b81429db034fd2c9c7ee2e3b52", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -84,7 +84,12 @@ procedure Load is\n    --  Unit number of loaded unit\n \n    Limited_With_Found : Boolean := False;\n-   --  Set True if a limited WITH is found, used to ???\n+   --  We load the context items in two rounds: the first round handles normal\n+   --  withed units and the second round handles Ada 2005 limited-withed units.\n+   --  This is required to allow the low-level circuitry that detects circular\n+   --  dependencies of units the correct notification of errors (see comment\n+   --  bellow). This variable is used to indicate that the second round is\n+   --  required.\n \n    function Same_File_Name_Except_For_Case\n      (Expected_File_Name : File_Name_Type;"}, {"sha": "07d7d7c11d380796c5a77032bf0c2160e3c12c78", "filename": "gcc/ada/s-parint.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-parint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-parint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1995-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -112,8 +112,8 @@ package System.Partition_Interface is\n    --  unit has has the same version than the caller's one.\n \n    function Same_Partition\n-      (Left  : access RACW_Stub_Type;\n-       Right : access RACW_Stub_Type) return Boolean;\n+      (Left  : not null access RACW_Stub_Type;\n+       Right : not null access RACW_Stub_Type) return Boolean;\n    --  Determine whether Left and Right correspond to objects instantiated\n    --  on the same partition, for enforcement of E.4(19).\n \n@@ -171,7 +171,10 @@ package System.Partition_Interface is\n \n    generic\n       RCI_Name : String;\n+      Version  : String;\n    package RCI_Locator is\n+      pragma Unreferenced (Version);\n+\n       function Get_RCI_Package_Receiver return Interfaces.Unsigned_64;\n       function Get_Active_Partition_ID return RPC.Partition_ID;\n    end RCI_Locator;"}, {"sha": "c5a2fadf5021bbed16eaf1e9d0eb66f9fcd1c408", "filename": "gcc/ada/s-secsta.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-secsta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-secsta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,6 +39,8 @@ package System.Secondary_Stack is\n \n    Default_Secondary_Stack_Size : Natural := 10 * 1024;\n    --  Default size of a secondary stack. May be modified by binder -D switch\n+   --  which causes the binder to generate an appropriate assignment in the\n+   --  binder generated file.\n \n    procedure SS_Init\n      (Stk  : in out Address;"}, {"sha": "6da5c586a9c044d7ef68571b76c251fe4961de71", "filename": "gcc/ada/s-soflin.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-soflin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-soflin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,12 +32,12 @@\n ------------------------------------------------------------------------------\n \n --  This package contains a set of subprogram access variables that access\n---  some low-level primitives that are called different depending whether\n---  tasking is involved or not (e.g. the Get/Set_Jmpbuf_Address that needs\n---  to provide a different value for each task). To avoid dragging in the\n---  tasking all the time, we use a system of soft links where the links are\n---  initialized to non-tasking versions, and then if the tasking is\n---  initialized, they are reset to the real tasking versions.\n+--  some low-level primitives that are different depending whether tasking is\n+--  involved or not (e.g. the Get/Set_Jmpbuf_Address that needs to provide a\n+--  different value for each task). To avoid dragging in the tasking runtimes\n+--  all the time, we use a system of soft links where the links are\n+--  initialized to non-tasking versions, and then if the tasking support is\n+--  initialized, they are set to the real tasking versions.\n \n with Ada.Exceptions;\n with System.Stack_Checking;\n@@ -58,7 +58,7 @@ package System.Soft_Links is\n \n    --  First we have the access subprogram types used to establish the links.\n    --  The approach is to establish variables containing access subprogram\n-   --  values which by default point to dummy no tasking versions of routines.\n+   --  values, which by default point to dummy no tasking versions of routines.\n \n    type No_Param_Proc     is access procedure;\n    type Addr_Param_Proc   is access procedure (Addr : Address);\n@@ -88,7 +88,7 @@ package System.Soft_Links is\n    type Task_Name_Call is access\n      function return String;\n \n-   --  Suppress checks on all these types, since we know corrresponding\n+   --  Suppress checks on all these types, since we know the corrresponding\n    --  values can never be null (the soft links are always initialized).\n \n    pragma Suppress (Access_Check, No_Param_Proc);\n@@ -126,7 +126,7 @@ package System.Soft_Links is\n    --  uses this.\n \n    procedure Update_Exception_NT (X : EO := Current_Target_Exception);\n-   --  Handle exception setting. This routine is provided for targets which\n+   --  Handle exception setting. This routine is provided for targets that\n    --  have built-in exception handling such as the Java Virtual Machine.\n    --  Currently, only JGNAT uses this. See 4jexcept.ads for an explanation on\n    --  how this routine is used.\n@@ -241,7 +241,7 @@ package System.Soft_Links is\n    -- Master_Id Soft-Links --\n    --------------------------\n \n-   --  Soft-Links are used for procedures that manipulate  Master_Ids because\n+   --  Soft-Links are used for procedures that manipulate Master_Ids because\n    --  a Master_Id must be generated for access to limited class-wide types,\n    --  whose root may be extended with task components.\n "}, {"sha": "e1b5960d84e5cf2dd96079f7e47d55866956c134", "filename": "gcc/ada/s-stratt.ads", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-stratt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-stratt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stratt.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -155,28 +155,6 @@ package System.Stream_Attributes is\n    procedure W_U   (Stream : not null access RST; Item : UST.Unsigned);\n    procedure W_WC  (Stream : not null access RST; Item : Wide_Character);\n \n-   ----------------------------\n-   -- Composite Input/Output --\n-   ----------------------------\n-\n-   --  The following Boolean constant is defined and set to True only if the\n-   --  stream representation of a series of elementary items of the same\n-   --  type (one of the types handled by the above procedures) has the same\n-   --  representation as an array of such items in memory. This allows such\n-   --  a series of items to be read or written as a block, instead of\n-   --  element by element.\n-\n-   --  If the stream representation does not have this property for all the\n-   --  above types, then this constant can be omitted or set to False,\n-   --  and the front end will generate element-by-element operations.\n-\n-   --  This interface assumes that a Stream_Element has the same size as\n-   --  a Storage_Unit. If that is not the case, then this flag should\n-   --  also be omitted (or set to False).\n-\n-   Block_Stream_Ops_OK : constant Boolean := True;\n-   --  Set to False if block stream operations not permitted\n-\n private\n    pragma Inline (I_AD);\n    pragma Inline (I_AS);"}, {"sha": "38b952f3c100fa7f303ec6e770b1c9993d93b00e", "filename": "gcc/ada/s-wchcon.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-wchcon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fs-wchcon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcon.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -81,6 +81,7 @@ package System.WCh_Con is\n    --     4.  Adjust definition of WC_Longest_Sequence if necessary\n    --     5.  Add an entry in WC_Encoding_Letters for the new method\n    --     6.  Add proper code to s-wchstw.adb, s-wchwts.adb, s-widwch.adb\n+   --     7.  Update documentation (remember section on form strings)\n \n    --  Note that the WC_Encoding_Method values must be kept ordered so that\n    --  the definitions of the subtypes WC_Upper_Half_Encoding_Method and"}, {"sha": "581aad7080e9a51d2ecb6cce36fc77e7717462c5", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -663,9 +663,9 @@ package body Sem_Cat is\n          if Ekind (E) in Subprogram_Kind then\n             Declaration := Unit_Declaration_Node (E);\n \n-            if False\n-              or else Nkind (Declaration) = N_Subprogram_Body\n-              or else Nkind (Declaration) = N_Subprogram_Renaming_Declaration\n+            if Nkind (Declaration) = N_Subprogram_Body\n+                 or else\n+               Nkind (Declaration) = N_Subprogram_Renaming_Declaration\n             then\n                Specification := Corresponding_Spec (Declaration);\n             end if;"}, {"sha": "fb5837890144de35706c653222bc1723f0f903c4", "filename": "gcc/ada/sem_cat.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fsem_cat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Fsem_cat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.ads?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -152,6 +152,6 @@ package Sem_Cat is\n    --  Enforce constraints on primitive operations of the designated type of\n    --  an RACW. Note that since the complete set of primitive operations of the\n    --  designated type needs to be known, we must defer these checks until the\n-   --  desgianted type is frozen.\n+   --  designated type is frozen.\n \n end Sem_Cat;"}, {"sha": "4c26fd6ca810cbe0062b3818c6cf025513bbab48", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ace7279eb8af4417a5853ca4717f9d86857c77/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=87ace7279eb8af4417a5853ca4717f9d86857c77", "patch": "@@ -744,11 +744,14 @@ package body Treepr is\n          elsif N = Error_Name then\n             Print_Str (\"<Error_Name>\");\n \n-         else\n+         elsif Is_Valid_Name (N) then\n             Get_Name_String (N);\n             Print_Char ('\"');\n             Write_Name (N);\n             Print_Char ('\"');\n+\n+         else\n+            Print_Str (\"<invalid name ???>\");\n          end if;\n       end if;\n    end Print_Name;\n@@ -793,6 +796,13 @@ package body Treepr is\n \n       Notes := False;\n \n+      if N not in\n+        Atree_Private_Part.Nodes.First .. Atree_Private_Part.Nodes.Last then\n+         Print_Str (\" (no such node)\");\n+         Print_Eol;\n+         return;\n+      end if;\n+\n       if Comes_From_Source (N) then\n          Notes := True;\n          Print_Str (\" (source\");"}]}