{"sha": "ed80f8590c13ae01cece8759f2842fcd7410135c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ4MGY4NTkwYzEzYWUwMWNlY2U4NzU5ZjI4NDJmY2Q3NDEwMTM1Yw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-10-27T12:33:22Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2011-10-27T12:33:22Z"}, "message": "c6x.c (unit_req_imbalance, res_mii): Cast the first arg to unit_req_factor to the right enum type.\n\n\t* config/c6x/c6x.c (unit_req_imbalance, res_mii): Cast the first arg\n\tto unit_req_factor to the right enum type.\n\t(get_unit_operand_masks, reshuffle_units, try_rename_operands,\n\thwloop_optimize): Remove unused variables.\n\nFrom-SVN: r180565", "tree": {"sha": "8fa936e011a25543ed4f351298fe8a3fc5786687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fa936e011a25543ed4f351298fe8a3fc5786687"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed80f8590c13ae01cece8759f2842fcd7410135c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed80f8590c13ae01cece8759f2842fcd7410135c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed80f8590c13ae01cece8759f2842fcd7410135c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed80f8590c13ae01cece8759f2842fcd7410135c/comments", "author": null, "committer": null, "parents": [{"sha": "362235e98342824833da5ea37af0878ee2eb41cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362235e98342824833da5ea37af0878ee2eb41cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/362235e98342824833da5ea37af0878ee2eb41cd"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "7a31a550a464f754b67ac272864c91755a96cb91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed80f8590c13ae01cece8759f2842fcd7410135c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed80f8590c13ae01cece8759f2842fcd7410135c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed80f8590c13ae01cece8759f2842fcd7410135c", "patch": "@@ -1,3 +1,10 @@\n+2011-10-27  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* config/c6x/c6x.c (unit_req_imbalance, res_mii): Cast the first arg\n+\tto unit_req_factor to the right enum type.\n+\t(get_unit_operand_masks, reshuffle_units, try_rename_operands,\n+\thwloop_optimize): Remove unused variables.\n+\n 2010-10-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/50731"}, {"sha": "c128890d929287719b288d855813ff255b5e3b07", "filename": "gcc/config/c6x/c6x.c", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed80f8590c13ae01cece8759f2842fcd7410135c/gcc%2Fconfig%2Fc6x%2Fc6x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed80f8590c13ae01cece8759f2842fcd7410135c/gcc%2Fconfig%2Fc6x%2Fc6x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.c?ref=ed80f8590c13ae01cece8759f2842fcd7410135c", "patch": "@@ -3325,7 +3325,7 @@ unit_req_imbalance (unit_req_table reqs)\n \n   for (i = 0; i < UNIT_REQ_MAX; i++)\n     {\n-      int factor = unit_req_factor (i);\n+      int factor = unit_req_factor ((enum unitreqs) i);\n       int diff = abs (reqs[0][i] - reqs[1][i]);\n       val += (diff + factor - 1) / factor / 2;\n     }\n@@ -3343,7 +3343,7 @@ res_mii (unit_req_table reqs)\n   for (side = 0; side < 2; side++)\n     for (req = 0; req < UNIT_REQ_MAX; req++)\n       {\n-\tint factor = unit_req_factor (req);\n+\tint factor = unit_req_factor ((enum unitreqs) req);\n \tworst = MAX ((reqs[side][UNIT_REQ_D] + factor - 1) / factor, worst);\n       }\n \n@@ -3357,8 +3357,6 @@ res_mii (unit_req_table reqs)\n static bool\n get_unit_operand_masks (rtx insn, unsigned int *pmask1, unsigned int *pmask2)\n {\n-  enum attr_units units;\n-  enum attr_type type;\n   enum attr_op_pattern op_pat;\n \n   if (recog_memoized (insn) < 0)\n@@ -3417,7 +3415,6 @@ try_rename_operands (rtx head, rtx tail, unit_req_table reqs, rtx insn,\n {\n   enum reg_class super_class = orig_side == 0 ? B_REGS : A_REGS;\n   HARD_REG_SET unavailable;\n-  unit_req_table new_unit_reqs;\n   du_head_p this_head;\n   struct du_chain *chain;\n   int i;\n@@ -3520,11 +3517,9 @@ reshuffle_units (basic_block loop)\n   rtx head = BB_HEAD (loop);\n   rtx tail = BB_END (loop);\n   rtx insn;\n-  int side;\n   unit_req_table reqs;\n   edge e;\n   edge_iterator ei;\n-  basic_block first = NULL;\n   bitmap_head bbs;\n \n   count_unit_reqs (reqs, head, PREV_INSN (tail));\n@@ -3535,17 +3530,14 @@ reshuffle_units (basic_block loop)\n   bitmap_initialize (&bbs, &bitmap_default_obstack);\n \n   FOR_EACH_EDGE (e, ei, loop->preds)\n-    {\n-      bitmap_set_bit (&bbs, e->src->index);\n-      first = e->src;\n-    }\n+    bitmap_set_bit (&bbs, e->src->index);\n+\n   bitmap_set_bit (&bbs, loop->index);\n   regrename_analyze (&bbs);\n \n   for (insn = head; insn != NEXT_INSN (tail); insn = NEXT_INSN (insn))\n     {\n       enum attr_units units;\n-      enum attr_cross cross;\n       int count, side1, side2, req1, req2;\n       unsigned int mask1, mask2;\n       insn_rr_info *info;\n@@ -5507,7 +5499,7 @@ hwloop_optimize (hwloop_info loop)\n   basic_block entry_bb, bb;\n   rtx seq, insn, prev, entry_after, end_packet;\n   rtx head_insn, tail_insn, new_insns, last_insn;\n-  int loop_earliest, entry_earliest, entry_end_cycle;\n+  int loop_earliest;\n   int n_execute_packets;\n   edge entry_edge;\n   unsigned ix;"}]}