{"sha": "134ef63846ab66e47efb86eedae8c506d7baf93e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM0ZWY2Mzg0NmFiNjZlNDdlZmI4NmVlZGFlOGM1MDZkN2JhZjkzZQ==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2009-05-22T06:08:04Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2009-05-22T06:08:04Z"}, "message": "Makefile.in (bversion.h, s-bversion): New targets.\n\n\t* Makefile.in (bversion.h, s-bversion): New targets.\n\t(TOPLEV_H): Add bversion.h.\n\t* toplev.h: Include \"bversion.h\".\n\t(ATTRIBUTE_GCC_DIAG): When building with checking disabled, use\n\tthe __format__ attribute only if compiling with the same version\n\tof GCC as the sources (the \"build version\").\n\nFrom-SVN: r147792", "tree": {"sha": "4b432e3152a94643e4565b9c28ed77c00540b565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b432e3152a94643e4565b9c28ed77c00540b565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/134ef63846ab66e47efb86eedae8c506d7baf93e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134ef63846ab66e47efb86eedae8c506d7baf93e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/134ef63846ab66e47efb86eedae8c506d7baf93e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134ef63846ab66e47efb86eedae8c506d7baf93e/comments", "author": null, "committer": null, "parents": [{"sha": "52fc669ddf3dce75979ba8f4a348e7be0b89af1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52fc669ddf3dce75979ba8f4a348e7be0b89af1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52fc669ddf3dce75979ba8f4a348e7be0b89af1b"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "2dbe9ef40f0ea083a3fc99513095e2f9c73b8ee5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134ef63846ab66e47efb86eedae8c506d7baf93e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134ef63846ab66e47efb86eedae8c506d7baf93e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=134ef63846ab66e47efb86eedae8c506d7baf93e", "patch": "@@ -1,3 +1,12 @@\n+2009-05-22  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* Makefile.in (bversion.h, s-bversion): New targets.\n+\t(TOPLEV_H): Add bversion.h.\n+\t* toplev.h: Include \"bversion.h\".\n+\t(ATTRIBUTE_GCC_DIAG): When building with checking disabled, use\n+\tthe __format__ attribute only if compiling with the same version\n+\tof GCC as the sources (the \"build version\").\n+\n 2009-05-22  Ben Elliston  <bje@au.ibm.com>\n \n \t* c-format.c (handle_format_attribute): Fix comment typo."}, {"sha": "63bf744c56c697bec45758b817a495a283339491", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134ef63846ab66e47efb86eedae8c506d7baf93e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134ef63846ab66e47efb86eedae8c506d7baf93e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=134ef63846ab66e47efb86eedae8c506d7baf93e", "patch": "@@ -792,7 +792,7 @@ endif\n \n # Shorthand variables for dependency lists.\n EXCEPT_H = except.h sbitmap.h vecprim.h\n-TOPLEV_H = toplev.h input.h\n+TOPLEV_H = toplev.h input.h bversion.h\n TARGET_H = $(TM_H) target.h insn-modes.h\n MACHMODE_H = machmode.h mode-classes.def insn-modes.h\n HOOKS_H = hooks.h $(MACHMODE_H)\n@@ -2455,6 +2455,14 @@ targhooks.o : targhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n    $(MACHMODE_H) $(TARGET_DEF_H) $(TARGET_H) $(GGC_H) gt-targhooks.h \\\n    $(OPTABS_H) $(RECOG_H) reload.h\n \n+bversion.h: s-bversion; @true\n+s-bversion: BASE-VER\n+\techo \"#define BUILDING_GCC_MAJOR `echo $(BASEVER_c) | sed -e 's/^\\([0-9]*\\).*$$/\\1/'`\" > bversion.h\n+\techo \"#define BUILDING_GCC_MINOR `echo $(BASEVER_c) | sed -e 's/^[0-9]*\\.\\([0-9]*\\).*$$/\\1/'`\" >> bversion.h\n+\techo \"#define BUILDING_GCC_PATCHLEVEL `echo $(BASEVER_c) | sed -e 's/^[0-9]*\\.[0-9]*\\.\\([0-9]*\\)$$/\\1/'`\" >> bversion.h\n+\techo \"#define BUILDING_GCC_VERSION (BUILDING_GCC_MAJOR * 1000 + BUILDING_GCC_MINOR)\" >> bversion.h\n+\t$(STAMP) s-bversion\n+\n toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    version.h $(RTL_H) $(FUNCTION_H) $(FLAGS_H) xcoffout.h $(INPUT_H) \\\n    $(INSN_ATTR_H) output.h $(DIAGNOSTIC_H) debug.h insn-config.h intl.h \\"}, {"sha": "e62aa727606f65d64c6d0604ec47c84c899757a0", "filename": "gcc/toplev.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134ef63846ab66e47efb86eedae8c506d7baf93e/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134ef63846ab66e47efb86eedae8c506d7baf93e/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=134ef63846ab66e47efb86eedae8c506d7baf93e", "patch": "@@ -21,6 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_TOPLEV_H\n #define GCC_TOPLEV_H\n #include \"input.h\"\n+#include \"bversion.h\"\n \n /* If non-NULL, return one past-the-end of the matching SUBPART of\n    the WHOLE string.  */\n@@ -49,7 +50,7 @@ extern void _fatal_insn (const char *, const_rtx, const char *, int, const char\n /* None of these functions are suitable for ATTRIBUTE_PRINTF, because\n    each language front end can extend them with its own set of format\n    specifiers.  We must use custom format checks.  */\n-#if GCC_VERSION >= 4001\n+#if (ENABLE_CHECKING && GCC_VERSION >= 4001) || GCC_VERSION == BUILDING_GCC_VERSION\n #define ATTRIBUTE_GCC_DIAG(m, n) __attribute__ ((__format__ (GCC_DIAG_STYLE, m, n))) ATTRIBUTE_NONNULL(m)\n #else\n #define ATTRIBUTE_GCC_DIAG(m, n) ATTRIBUTE_NONNULL(m)"}]}