{"sha": "d5ace3059cbf0130403b356a97a34f8103cadf36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhY2UzMDU5Y2JmMDEzMDQwM2IzNTZhOTdhMzRmODEwM2NhZGYzNg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-18T08:59:06Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-18T08:59:06Z"}, "message": "re PR fortran/80945 (Invalid code with allocatable character array in READ/WRITE statement)\n\n2018-02-18  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/80945\n\t* trans-array.c (gfc_conv_expr_descriptor): Set parmtype from\n\tthe typenode in the case of deferred length characters.\n\n2018-02-18  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/80945\n\t* gfortran.dg/associate_35.f90: Remove error, add stop n's and\n\tchange to run.\n\nFrom-SVN: r257788", "tree": {"sha": "b26a3232a0db08437d16e829fb863760f9474eaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b26a3232a0db08437d16e829fb863760f9474eaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5ace3059cbf0130403b356a97a34f8103cadf36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ace3059cbf0130403b356a97a34f8103cadf36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ace3059cbf0130403b356a97a34f8103cadf36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ace3059cbf0130403b356a97a34f8103cadf36/comments", "author": null, "committer": null, "parents": [{"sha": "c83aacaecf39fbc8ce21830c54bfa090a621b7d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83aacaecf39fbc8ce21830c54bfa090a621b7d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83aacaecf39fbc8ce21830c54bfa090a621b7d5"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "8ecc90af879225b224f2a32833754ad10cb2ff2c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ace3059cbf0130403b356a97a34f8103cadf36/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ace3059cbf0130403b356a97a34f8103cadf36/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d5ace3059cbf0130403b356a97a34f8103cadf36", "patch": "@@ -1,3 +1,9 @@\n+2018-02-18  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/80945\n+\t* trans-array.c (gfc_conv_expr_descriptor): Set parmtype from\n+\tthe typenode in the case of deferred length characters.\n+\n 2018-02-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/84270"}, {"sha": "e321db35ac206d17d79420379424bba874fd3e1b", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ace3059cbf0130403b356a97a34f8103cadf36/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ace3059cbf0130403b356a97a34f8103cadf36/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=d5ace3059cbf0130403b356a97a34f8103cadf36", "patch": "@@ -7341,7 +7341,11 @@ gfc_conv_expr_descriptor (gfc_se *se, gfc_expr *expr)\n       else\n \t{\n \t  /* Otherwise make a new one.  */\n-\t  parmtype = gfc_get_element_type (TREE_TYPE (desc));\n+\t  if (expr->ts.type == BT_CHARACTER && expr->ts.deferred)\n+\t    parmtype = gfc_typenode_for_spec (&expr->ts);\n+\t  else\n+\t    parmtype = gfc_get_element_type (TREE_TYPE (desc));\n+\n \t  parmtype = gfc_get_array_type_bounds (parmtype, loop.dimen, codim,\n \t\t\t\t\t\tloop.from, loop.to, 0,\n \t\t\t\t\t\tGFC_ARRAY_UNKNOWN, false);"}, {"sha": "207a3bad7629be088fbb06694723104d167c53fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ace3059cbf0130403b356a97a34f8103cadf36/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ace3059cbf0130403b356a97a34f8103cadf36/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5ace3059cbf0130403b356a97a34f8103cadf36", "patch": "@@ -1,3 +1,9 @@\n+2018-02-18  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/80945\n+\t* gfortran.dg/associate_35.f90: Remove error, add stop n's and\n+\tchange to run.\n+\n 2018-02-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/84270"}, {"sha": "96722a144f6aeb3564635a5cd4533ea3545d5cfb", "filename": "gcc/testsuite/gfortran.dg/deferred_character_19.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ace3059cbf0130403b356a97a34f8103cadf36/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ace3059cbf0130403b356a97a34f8103cadf36/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_19.f90?ref=d5ace3059cbf0130403b356a97a34f8103cadf36", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+!\n+! Test fix for PR80945, in which the character length was fixed at zero.\n+!\n+! Contributed by Nicolas Koenig  <koenigni@gcc.gnu.org>\n+!\n+program main\n+    implicit none\n+    integer:: i\n+    integer, parameter:: N = 10\n+    character(20) :: buffer\n+    character(len=:), dimension(:),allocatable:: ca\n+    character(len=:), dimension(:,:),allocatable:: cb\n+    allocate(character(len=N) :: ca(3))\n+    ca(1) = \"foo\"\n+    ca(2) = \"bar\"\n+    ca(3) = \"xyzzy\"\n+    write (buffer, '(3A5)') ca(1:3)\n+    if (trim (buffer) .ne. \"foo  bar  xyzzy\") stop 1\n+end program"}]}