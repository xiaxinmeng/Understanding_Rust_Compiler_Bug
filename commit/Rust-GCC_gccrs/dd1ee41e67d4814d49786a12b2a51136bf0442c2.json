{"sha": "dd1ee41e67d4814d49786a12b2a51136bf0442c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQxZWU0MWU2N2Q0ODE0ZDQ5Nzg2YTEyYjJhNTExMzZiZjA0NDJjMg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@sourceware.cygnus.com", "date": "2000-07-07T21:13:28Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2000-07-07T21:13:28Z"}, "message": "download.html: Mention gcc_update.\n\n2000-07-07  Phil Edwards  <pme@sourceware.cygnus.com>\n\n\t* docs/download.html:  Mention gcc_update.\n\t* docs/configopts.html:  Minor updates.\n\t* docs/gccrebuild.html:  Ditto.\n\t* docs/18_support/howto.html:  More tips, explanations, and reminders.\n\t* docs/19_diagnostics/howto.html:  Ditto.\n\t* docs/21_strings/howto.html:  Ditto.\n\t* docs/24_iterators/howto.html:  Ditto.\n\t* docs/25_algorithms/howto.html:  Ditto.\n\t* docs/26_numerics/howto.html:  Ditto.\n\nFrom-SVN: r34912", "tree": {"sha": "c520eb610b16f6b1abad4688ec68f83a6d359da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c520eb610b16f6b1abad4688ec68f83a6d359da2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd1ee41e67d4814d49786a12b2a51136bf0442c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1ee41e67d4814d49786a12b2a51136bf0442c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd1ee41e67d4814d49786a12b2a51136bf0442c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1ee41e67d4814d49786a12b2a51136bf0442c2/comments", "author": null, "committer": null, "parents": [{"sha": "0e35c3462457ea9828a1353789549be219594159", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e35c3462457ea9828a1353789549be219594159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e35c3462457ea9828a1353789549be219594159"}], "stats": {"total": 323, "additions": 255, "deletions": 68}, "files": [{"sha": "d84bf7c55c41ac9707b3ebf011c0cdd48c79481d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -1,3 +1,15 @@\n+2000-07-07  Phil Edwards  <pme@sourceware.cygnus.com>\n+\n+\t* docs/download.html:  Mention gcc_update.\n+\t* docs/configopts.html:  Minor updates.\n+\t* docs/gccrebuild.html:  Ditto.\n+\t* docs/18_support/howto.html:  More tips, explanations, and reminders.\n+\t* docs/19_diagnostics/howto.html:  Ditto.\n+\t* docs/21_strings/howto.html:  Ditto.\n+\t* docs/24_iterators/howto.html:  Ditto.\n+\t* docs/25_algorithms/howto.html:  Ditto.\n+\t* docs/26_numerics/howto.html:  Ditto.\n+\n 2000-07-05  brent verner  <brent@rcfile.org> \n \n \t* testsuite/27_io/ifstream_members.cc (test01): Add tests."}, {"sha": "4f8b414bd2dda5a0f36a916e60c4a27dc8b06e53", "filename": "libstdc++-v3/docs/18_support/howto.html", "status": "modified", "additions": 44, "deletions": 3, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F18_support%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F18_support%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F18_support%2Fhowto.html?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -9,7 +9,7 @@\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 18</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/docs/18_support/\">\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.5 1999/12/15 16:57:06 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -46,7 +46,48 @@ <H2><A NAME=\"1\">Types</A></H2>\n       macro is <EM>not</EM> allowed to be <TT>(void*)0</TT>, which is\n       often used in C.\n    </P>\n-   <P>\n+   <P>In g++, NULL is #define'd to be <TT>__null</TT>, a magic keyword\n+      extension of g++.\n+   </P>\n+   <P>The biggest problem of #defining NULL to be something like\n+      &quot;0L&quot; is that the compiler will view that as a long integer\n+      before it views it as a pointer, so overloading won't do what you\n+      expect.  (This is why g++ has a magic extension, so that NULL is\n+      always a pointer.)\n+   </P>\n+   <P>In his book\n+      <A HREF=\"http://cseng.aw.com/bookdetail.qry?ISBN=0-201-92488-9&ptype=0\"><EM>Effective C++</EM></A>,\n+      Scott Meyers points out that the best way to solve this problem is to\n+      not overload on pointer-vs-integer types to begin with.  He also\n+      offers a way to make your own magic NULL that will match pointers\n+      before it matches integers:\n+      <PRE>\n+   const                             // this is a const object...\n+   class {\n+   public:\n+     template&lt;class T&gt;               // convertible to any type\n+       operator T*() const           // of null non-member\n+       { return 0; }                 // pointer...\n+\n+     template&lt;class C, class T&gt;      // or any type of null\n+       operator T C::*() const       // member pointer...\n+       { return 0; }\n+\n+   private:\n+     void operator&amp;() const;         // whose address can't be\n+                                     // taken (see Item 27)...\n+\n+   } NULL;                           // and whose name is NULL\n+      </PRE>(Cribbed from the published version of\n+      <A HREF=\"http://www.awlonline.com/cseng/meyerscddemo/\">the\n+      Effective C++ CD</A>, reproduced here with permission.)\n+   </P>\n+   <P>If you aren't using g++ (why?), but you do have a compiler which\n+      supports member function templates, then you can use this definition\n+      of NULL (be sure to #undef any existing versions).  It only helps if\n+      you actually use NULL in function calls, though; if you make a call of\n+      <TT>foo(0);</TT> instead of <TT>foo(NULL);</TT>, then you're back\n+      where you started.\n    </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n@@ -209,7 +250,7 @@ <H2><A NAME=\"4\">Dynamic memory management</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@egcs.cygnus.com\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.5 1999/12/15 16:57:06 pme Exp $\n+<BR> $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "94ba36064f25c5b66d35dd5e840c5844aaa3761b", "filename": "libstdc++-v3/docs/19_diagnostics/howto.html", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F19_diagnostics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F19_diagnostics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F19_diagnostics%2Fhowto.html?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -9,14 +9,15 @@\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 19</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/docs/19_diagnostics/\">\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.4 1999/12/15 16:57:06 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n <H1 CLASS=\"centered\"><A NAME=\"top\">Chapter 19:  Diagnostics</A></H1>\n \n <P>Chapter 19 deals with program diagnostics, such as exceptions\n-   and assertions.\n+   and assertions.  You know, all the things we wish weren't even\n+   necessary at all.\n </P>\n \n \n@@ -26,6 +27,7 @@ <H1>Contents</H1>\n <UL>\n    <LI><A HREF=\"#1\">Adding data to exceptions</A>\n    <LI><A HREF=\"#2\">Exception class hierarchy diagram</A>\n+   <LI><A HREF=\"#3\">Concept checkers</A>\n </UL>\n \n <HR>\n@@ -65,6 +67,29 @@ <H2><A NAME=\"2\">Exception class hierarchy diagram</A></H2>\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n    </P>\n \n+<HR>\n+<H2><A NAME=\"3\">Concept checkers</A></H2>\n+   <P>As part of their 3.3 release, SGI added some nifty macros which\n+      perform assertions on type properties.  For example, the Standard\n+      requires that types passed as template parameters to <TT>vector</TT>\n+      be &quot;Assignable&quot; (which means what you think it means).\n+   </P>\n+   <P>The concept checkers allow the source code for <TT>vector</TT> to\n+      declare\n+      <PRE>\n+   __STL_CLASS_REQUIRES(_Tp, _Assignable);\n+      </PRE>inside the template.  <TT>_Tp</TT> is the element type of the\n+      vector, and <TT>_Assignable</TT> is the concept to be checked (it is\n+      defined in some back-end header files).  When you instantiate\n+      <TT>vector&lt;MyType&gt;</TT>, compile-time checking can be done on\n+      whether MyType meets the requirements for vectors.\n+   </P>\n+<P>This is an extension to the library.  This documentation needs updating.</P>\n+   <P>Return <A HREF=\"#top\">to top of page</A> or\n+      <A HREF=\"../faq/index.html\">to the FAQ</A>.\n+   </P>\n+\n+\n \n \n \n@@ -75,7 +100,7 @@ <H2><A NAME=\"2\">Exception class hierarchy diagram</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@egcs.cygnus.com\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.4 1999/12/15 16:57:06 pme Exp $\n+<BR> $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "ca1f288f3ad5a886ae08d058325ed6847e2b6930", "filename": "libstdc++-v3/docs/21_strings/howto.html", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F21_strings%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F21_strings%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F21_strings%2Fhowto.html?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -9,7 +9,7 @@\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 21</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/docs/21_strings/\">\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.8 2000/03/20 22:16:21 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -165,6 +165,19 @@ <H2><A NAME=\"2\">A case-insensitive string class</A></H2>\n       here</A>.\n    </P>\n    <P>See?  Told you it was easy!</P>\n+   <P><B>Added June 2000:</B>  The May issue of <U>C++ Report</U> contains\n+      a fascinating article by Matt Austern (yes, <EM>the</EM> Matt Austern)\n+      on why case-insensitive comparisons are not as easy as they seem,\n+      and why creating a class is the <EM>wrong</EM> way to go about it in\n+      production code.  (The GotW answer mentions one of the principle\n+      difficulties; this article mentions more.)\n+   </P>\n+   <P>Basically, this is &quot;easy&quot; only if you ignore some things,\n+      things which may be too important to your program to ignore.  (I chose\n+      to ignore them when originally writing this entry, and am surprised\n+      that nobody ever called me on it...)  The GotW question and answer\n+      remain useful instructional tools, however.\n+   </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n    </P>\n@@ -284,7 +297,7 @@ <H2><A NAME=\"4\">Simple transformations</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@egcs.cygnus.com\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.8 2000/03/20 22:16:21 pme Exp $\n+<BR> $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "f2aef6c803b10ac9ac566d8d9e3178377ce4d324", "filename": "libstdc++-v3/docs/24_iterators/howto.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F24_iterators%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F24_iterators%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F24_iterators%2Fhowto.html?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -9,7 +9,7 @@\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 24</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/docs/24_iterators/\">\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.4 1999/12/15 16:57:06 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -25,7 +25,7 @@ <H1 CLASS=\"centered\"><A NAME=\"top\">Chapter 24:  Iterators</A></H1>\n <H1>Contents</H1>\n <UL>\n    <LI><A HREF=\"#1\">They ain't pointers!</A>\n-   <LI><A HREF=\"#2\">Topic</A>\n+   <LI><A HREF=\"#2\">It ends <EM>where?</EM></A>\n </UL>\n \n <HR>\n@@ -70,7 +70,7 @@ <H2><A NAME=\"1\">They ain't pointers!</A></H2>\n    </P>\n \n <HR>\n-<H2><A NAME=\"2\">Topic</A></H2>\n+<H2><A NAME=\"2\">It ends <EM>where?</EM></A></H2>\n    <P>Blah.\n    </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n@@ -87,7 +87,7 @@ <H2><A NAME=\"2\">Topic</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@egcs.cygnus.com\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.4 1999/12/15 16:57:06 pme Exp $\n+<BR> $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "d7d0e3523d42ab41b99d9facd811989cc577ff08", "filename": "libstdc++-v3/docs/25_algorithms/howto.html", "status": "modified", "additions": 38, "deletions": 6, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F25_algorithms%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F25_algorithms%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F25_algorithms%2Fhowto.html?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -9,13 +9,13 @@\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 25</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/docs/25_algorithms/\">\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.4 1999/12/15 16:57:06 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n <H1 CLASS=\"centered\"><A NAME=\"top\">Chapter 25:  Algorithms</A></H1>\n \n-<P>Chapter 25 deals with the FORTRAN subroutines for automatically\n+<P>Chapter 25 deals with the generalized subroutines for automatically\n    transforming lemmings into gold.\n </P>\n \n@@ -24,16 +24,48 @@ <H1 CLASS=\"centered\"><A NAME=\"top\">Chapter 25:  Algorithms</A></H1>\n <HR>\n <H1>Contents</H1>\n <UL>\n-   <LI><A HREF=\"#1\">Topic</A>\n+   <LI><A HREF=\"#1\">Prerequisites</A>\n    <LI><A HREF=\"#2\">Topic</A>\n </UL>\n \n <HR>\n \n <!-- ####################################################### -->\n \n-<H2><A NAME=\"1\">Topic</A></H2>\n-   <P>Blah.\n+<H2><A NAME=\"1\">Prerequisites</A></H2>\n+   <P>The neatest accomplishment of the algorithms chapter is that all the\n+      work is done via iterators, not containers directly.  This means two\n+      important things:\n+      <OL>\n+        <LI>Anything that behaves like an iterator can be used in one of\n+\t    these algorithms.  Raw pointers make great candidates, thus\n+\t    built-in arrays are fine containers.  So do your own iterators.\n+        <LI>The algorithms do not (and cannot) affect the container as a\n+\t    whole; only the things between the two iterator endpoints.  If\n+\t    you pass a range of iterators only enclosing the middle third of\n+\t    a container, then anything outside that range is inviolate.\n+      </OL>\n+   </P>\n+   <P>Even strings can be fed through the algorithms here, although the\n+      string class has specialized versions of many of these functions (for\n+      example, <TT>string::find()</TT>).  Most of the examples on this\n+      page will use simple arrays of integers as a playground for\n+      algorithms, just to keep things simple.\n+      <A NAME=\"Nsize\">The use of <B>N</B></A> as a size in the examples is\n+      to keep things easy to read but probably won't be legal code.  You can\n+      use wrappers such as those described in the\n+      <A HREF=\"../23_containers/howto.html\">containers chapter</A> to keep\n+      real code readable.\n+   </P>\n+   <P>The single thing that trips people up the most is the definition of \n+      <EM>range</EM> used with iterators; the famous\n+      &quot;past-the-end&quot; rule that everybody loves to hate.  The\n+      <A HREF=\"../24_iterators/howto.html\">iterators chapter</A> of this\n+      document has a complete explanation of this simple rule that seems to\n+      cause so much confusion.  Once you get <EM>range</EM> into your head\n+      (it's not that hard, honest!), then the algorithms are a cakewalk.\n+   </P>\n+   <P>\n    </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n@@ -57,7 +89,7 @@ <H2><A NAME=\"2\">Topic</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@egcs.cygnus.com\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.4 1999/12/15 16:57:06 pme Exp $\n+<BR> $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "c31743b1ee6eb531f729099eed708ada13938ba2", "filename": "libstdc++-v3/docs/26_numerics/howto.html", "status": "modified", "additions": 78, "deletions": 15, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F26_numerics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2F26_numerics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F26_numerics%2Fhowto.html?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -9,22 +9,24 @@\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 26</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/docs/26_numerics/\">\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.1 2000/04/21 20:33:32 bkoz Exp $ -->\n+<!-- $Id: howto.html,v 1.2 2000/06/28 15:14:39 gdr Exp $ -->\n </HEAD>\n <BODY>\n \n <H1 CLASS=\"centered\"><A NAME=\"top\">Chapter 26:  Numerics</A></H1>\n \n-<P>\n-Chapter 26 deals with building block abstractions to aid in numerical\n-computing:\n-<UL>\n-   <LI>template data structures such as <TT>valarray&lt;&gt;</TT>,\n-       <TT>complex&lt;&gt;</TT> and \n-   <LI>numerical functions such as <TT>accumulate</TT>;\n-       <TT>inner_product</TT>; <TT>partial_sum</TT> and\n-       <TT>adjacent_difference</TT>.\n-</UL>\n+<P>Chapter 26 deals with building block abstractions to aid in\n+   numerical computing:\n+   <UL>\n+     <LI>Template data structures such as <TT>valarray&lt;&gt;</TT>\n+         and <TT>complex&lt;&gt;</TT>.\n+     <LI>Template numerical functions such as <TT>accumulate</TT>;\n+         <TT>inner_product</TT>; <TT>partial_sum</TT> and\n+         <TT>adjacent_difference</TT>.\n+   </UL>\n+   All of the Standard C math functions are of course included in C++,\n+   and overloaded versions for <TT>long</TT>, <TT>float</TT>, and\n+   <TT>long double</TT> have been added for all of them.\n </P>\n \n <!-- ####################################################### -->\n@@ -41,23 +43,84 @@ <H1>Contents</H1>\n <!-- ####################################################### -->\n \n <H2><A NAME=\"1\">Complex Number Processing</A></H2>\n-   <P>Blah.\n+   <P>Using <TT>complex&lt;&gt;</TT> becomes even more comple- er, sorry,\n+      <EM>complicated</EM>, with the not-quite-gratuitously-incompatible\n+      addition of complex types to the C language.  David Tribble has\n+      compiled a list of C++89 and C99 conflict points; his description of\n+      C's new type versus those of C++ and how to get them playing together\n+      nicely is\n+<A HREF=\"http://home.flash.net/~dtribble/text/cdiffs.htm#C99.complex\">here</A>.\n+   </P>\n+   <P><TT>complex&lt;&gt;</TT> is intended to be instantiated with a\n+      floating-point type.  As long as you meet that and some other basic\n+      requirements, then the resulting instantiation has all of the usual\n+      math operators defined, as well as definitions of <TT>op&lt;&lt;</TT>\n+      and <TT>op&gt;&gt;</TT> that work with iostreams: <TT>op&lt;&lt;</TT>\n+      prints <TT>(u,v)</TT> and <TT>op&gt;&gt;</TT> can read <TT>u</TT>,\n+      <TT>(u)</TT>, and <TT>(u,v)</TT>.\n    </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n    </P>\n \n <HR>\n <H2><A NAME=\"2\">Array Processing</A></H2>\n-   <P>Blah.\n+   <P>One of the major reasons why FORTRAN can chew through numbers so well\n+      is that it is defined to be free of pointer aliasing, an assumption\n+      that C89 is not allowed to make, and neither is C++.  C99 adds a new\n+      keyword, <TT>restrict</TT>, to apply to individual pointers.  The C++\n+      solution is contained in the library rather than the language\n+      (although many vendors can be expected to add this to their compilers\n+      as an extension).\n+   </P>\n+   <P>That library solution is a set of two classes, five template classes,\n+      and &quot;a whole bunch&quot; of functions.  The classes are required\n+      to be free of pointer aliasing, so compilers can optimize the\n+      daylights out of them the same way that they have been for FORTRAN.\n+      They are collectively called <TT>valarray</TT>, although strictly\n+      speaking this is only one of the five template classes, and they are\n+      designed to be familiar to people who have worked with the BLAS\n+      libraries before.\n+   </P>\n+   <P>Some more stuff should go here once somebody has time to write it.\n    </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n    </P>\n \n <HR>\n <H2><A NAME=\"3\">Numerical Functions</A></H2>\n-   <P>Blah.\n+   <P>There are four generalized functions in the &lt;numeric&gt; header\n+      that follow the same conventions as those in &lt;algorithm&gt;.  Each\n+      of them is overloaded:  one signature for common default operations,\n+      and a second for fully general operations.  Their names are\n+      self-explanatory to anyone who works with numerics on a regular basis:\n+      <UL>\n+        <LI><TT>accumulate</TT>\n+        <LI><TT>inner_product</TT>\n+        <LI><TT>partial_sum</TT>\n+        <LI><TT>adjacent_difference</TT>\n+      </UL>\n+   </P>\n+   <P>Here is a simple example of the two forms of <TT>accumulate</TT>.\n+      <PRE>\n+   int   ar[50];\n+   int   someval = somefunction();\n+\n+   // ...initialize members of ar to something...\n+\n+   int  sum       = std::accumulate(ar,ar+50,0);\n+   int  sum_stuff = std::accumulate(ar,ar+50,someval);\n+   int  product   = std::accumulate(ar,ar+50,1,std::multiplies&lt;int&gt;());\n+      </PRE>\n+      The first call adds all the members of the array, using zero as an\n+      initial value for <TT>sum</TT>.  The second does the same, but uses\n+      <TT>someval</TT> as the starting value (thus, <TT>sum_stuff == sum +\n+      someval</TT>).  The final call uses the second of the two signatures,\n+      and multiplies all the members of the array; here we must obviously\n+      use 1 as a starting value instead of 0.\n+   </P>\n+   <P>The other three functions have similar dual-signature forms.\n    </P>\n    <P>Return <A HREF=\"#top\">to top of page</A> or\n       <A HREF=\"../faq/index.html\">to the FAQ</A>.\n@@ -72,7 +135,7 @@ <H2><A NAME=\"3\">Numerical Functions</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@egcs.cygnus.com\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.1 2000/04/21 20:33:32 bkoz Exp $\n+<BR> $Id: howto.html,v 1.2 2000/06/28 15:14:39 gdr Exp $\n </EM></P>\n \n "}, {"sha": "18d6367961a5dc35b85124c5e45e4c971d71d0ce", "filename": "libstdc++-v3/docs/configopts.html", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2Fconfigopts.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2Fconfigopts.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fconfigopts.html?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -9,7 +9,7 @@\n    <TITLE>libstdc++-v3 configure options</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/\">\n <LINK REL=StyleSheet HREF=\"lib3styles.css\">\n-<!-- $Id: configopts.html,v 1.3 2000/05/16 17:06:39 pme Exp $ -->\n+<!-- $Id: configopts.html,v 1.4 2000/05/19 19:55:50 pme Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -114,11 +114,12 @@ <H1 CLASS=\"centered\"><A NAME=\"top\">Interesting <TT>configure</TT>\n  <DD><P>This is a grueling temporary hack no matter which way you look\n         at it.  It's described in <A HREF=\"gccrebuild.html\">its own\n         little page</A>.  Note that other --enable flags will\n-        interact with this one.  As of libstdc++-v3 snapshot 2.90.8,\n+        interact with this one.  In libstdc++-v3 snapshot 2.90.8,\n         this is enabled by default, with DIR\n         set to <TT> '../..' </TT>, so that building\n         the complete GCC sources with libstdc++-v3 in place works\n-        transparently.\n+        transparently.  Since then, library sources have been merged\n+        into the compiler sources, and this option has been removed.\n      </P>\n \n  <DT><TT>--enable-cxx-flags=FLAGS</TT>\n@@ -157,7 +158,7 @@ <H1 CLASS=\"centered\"><A NAME=\"top\">Interesting <TT>configure</TT>\n \n <HR>\n <P CLASS=\"fineprint\"><EM>\n-$Id: configopts.html,v 1.3 2000/05/16 17:06:39 pme Exp $\n+$Id: configopts.html,v 1.4 2000/05/19 19:55:50 pme Exp $\n </EM></P>\n \n "}, {"sha": "bac2ef5c194610dc620e262ff26ff879c4871a0a", "filename": "libstdc++-v3/docs/download.html", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2Fdownload.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2Fdownload.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdownload.html?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -4,39 +4,39 @@\n \n <H3>Getting the sources by FTP or CVS</H3>\n \n+<!-- The <URL:foo> syntax is the standard way of writing such things.  No\n+     link to the FTP site is given directly, encouraging mirror usage.\n+-->\n <P>Get the snapshot archive via FTP from\n-<BLOCKQUOTE>\n-  <A HREF=\"ftp://sourceware.cygnus.com/pub/libstdc++/\">\n-           ftp://sourceware.cygnus.com/pub/libstdc++/\n-  </A>\n-</BLOCKQUOTE>\n-   You will probably need to use one of the \n+   <TT>&lt;URL:ftp://sourceware.cygnus.com/pub/libstdc++/&gt;</TT>.\n+   You will almost certainly need to use one of the \n    <A HREF=\"http://sourceware.cygnus.com/mirrors.html\">mirror sites</A>\n-   due to the heavy load on the main server.\n+   due to the extremely heavy load on the main server.\n </P>\n \n-<P> The master CVS repository for libstdc++-v3 is now a part of the\n-  gcc repository. As such, checking out the <TT>gcc</TT> module includes the\n-  current libstdc++-v3 development sources. To check out libstdc++-v3\n-  only, use <TT>libstdc++-v3</TT> instead of <TT>gcc</TT> as the module.\n-\n+<P>The master CVS repository for libstdc++-v3 is now a part of the gcc\n+   repository.  As such, checking out the <TT>gcc</TT> module includes\n+   the current libstdc++-v3 development sources.  To check out\n+   libstdc++-v3 only, use <TT>libstdc++-v3</TT> instead of <TT>gcc</TT>\n+   as the module.\n    <UL>\n-   <LI>Read only CVS repository available by anonymous CVS. Directions \n-   <A HREF=\"http://gcc.gnu.org/cvs.html\"> here.\n-   </A>\n-\n-   <P>\n-\n-   <LI>Read-Write CVS repository available by authorized CVS via SSH.\n-       Directions <A HREF=\"http://gcc.gnu.org/cvswrite.html\"> here.\n-   </A>\n-  </UL>\n+     <LI>Read-only CVS repository is available by anonymous CVS.  Directions \n+         are <A HREF=\"http://gcc.gnu.org/cvs.html\">here</A>.  You can also\n+         use anonymous CVS from one of the mirrors of the CVS repository.\n+     <LI>Read-write CVS repository is available by authorized CVS via SSH.\n+         Directions are <A HREF=\"http://gcc.gnu.org/cvswrite.html\">here</A>.\n+   </UL>\n+</P>\n+<P>One you have the GCC sources checked out over CVS, you can use the\n+   <TT>contrib/gcc_update</TT> script to retrieve the latest changes, and\n+   automatically update the timestamps of certain files.  With the\n+   timestamps updated, you won't need autoconf or the other tools (unless\n+   you make changes, obviously).\n </P>\n \n-<p>You can also\n+<P>You can also\n <A HREF=\"http://gcc.gnu.org/cgi-bin/cvsweb.cgi/libstdc++-v3?cvsroot=gcc\">browse \n-       the CVS repository over the web</A>.\n-\n+   the CVS repository over the web</A>.\n </P>\n \n "}, {"sha": "b631729afba4467f79bb9ca7d040cd7a5b21db3a", "filename": "libstdc++-v3/docs/gccrebuild.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2Fgccrebuild.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1ee41e67d4814d49786a12b2a51136bf0442c2/libstdc%2B%2B-v3%2Fdocs%2Fgccrebuild.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fgccrebuild.html?ref=dd1ee41e67d4814d49786a12b2a51136bf0442c2", "patch": "@@ -9,7 +9,7 @@\n    <TITLE>How to automatically rebuild libgcc.a.</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/\">\n <LINK REL=StyleSheet HREF=\"lib3styles.css\">\n-<!-- $Id: gccrebuild.html,v 1.2 2000/05/03 16:11:02 pme Exp $ -->\n+<!-- $Id: gccrebuild.html,v 1.3 2000/06/19 22:20:15 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -42,10 +42,10 @@ <H2 CLASS=\"centered\"><TT>--enable-libgcc-rebuild</TT></H2>\n    as <EM>objdir</EM>; here it will be called <EM>GCCobjdir</EM>.\n </P>\n \n-<P>This is a kludge, and will go away eventually, as more and more of\n-   these copiler-level ABI switches get turned on by default.  (In a\n-   sense, it has already gone away, as the library sources have been\n-   merged into the compiler sources.)\n+<P>This was a kludge, and after the library sources were merged into\n+   the compiler sources, this was commented out.  If you must re-enable\n+   it, you amy do so by uncommenting the GLIBCPP_ENABLE_RELIBGCC line in\n+   configure.in and regenerating.\n </P>\n \n <HR>\n@@ -118,7 +118,7 @@ <H3>Installing the new libgcc.a</H3>\n \n <HR>\n <P CLASS=\"fineprint\"><EM>\n-$Id: gccrebuild.html,v 1.2 2000/05/03 16:11:02 pme Exp $\n+$Id: gccrebuild.html,v 1.3 2000/06/19 22:20:15 bkoz Exp $\n </EM></P>\n \n "}]}