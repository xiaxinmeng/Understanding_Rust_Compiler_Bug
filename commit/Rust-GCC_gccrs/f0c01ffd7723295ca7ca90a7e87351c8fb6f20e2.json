{"sha": "f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBjMDFmZmQ3NzIzMjk1Y2E3Y2E5MGE3ZTg3MzUxYzhmYjZmMjBlMg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-03-31T09:19:20Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-03-31T09:19:20Z"}, "message": "sol2.c: Include output.h.\n\n\tgcc:\n\t* config/sol2.c: Include output.h.\n\t(solaris_assemble_visibility): New function.\n\t* config/t-sol2 (sol2.o): Add output.h dependency.\n\t* config/sol2-protos.h (solaris_assemble_visibility): Declare.\n\t* config/sol2.h [!USE_GAS] (TARGET_ASM_ASSEMBLE_VISIBILITY):\n\tRedefine.\n\n\tgcc/testsuite:\n\t* g++.dg/ext/visibility/pragma-override1.C: Allow for .hidden in\n\tassembler output on *-*-solaris2*.\n\t* g++.dg/ext/visibility/pragma-override2.C: Likewise.\n\nFrom-SVN: r157856", "tree": {"sha": "1297185d6c10c8e9f9bb9a7ac745bf4d8d19eb84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1297185d6c10c8e9f9bb9a7ac745bf4d8d19eb84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a2f22ff85f6497078c1f56d2451663894847aa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a2f22ff85f6497078c1f56d2451663894847aa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a2f22ff85f6497078c1f56d2451663894847aa6"}], "stats": {"total": 75, "additions": 69, "deletions": 6}, "files": [{"sha": "e1fd302656bfd87e634317d1a75c9720bf5e19de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "patch": "@@ -1,3 +1,12 @@\n+2010-03-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/sol2.c: Include output.h.\n+\t(solaris_assemble_visibility): New function.\n+\t* config/t-sol2 (sol2.o): Add output.h dependency.\n+\t* config/sol2-protos.h (solaris_assemble_visibility): Declare.\n+\t* config/sol2.h [!USE_GAS] (TARGET_ASM_ASSEMBLE_VISIBILITY):\n+\tRedefine.\n+\n 2010-03-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/43580"}, {"sha": "800629aaba1054041d3f22fa8198c0065cbe4e47", "filename": "gcc/config/sol2-protos.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Fconfig%2Fsol2-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Fconfig%2Fsol2-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-protos.h?ref=f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific prototypes to be used when targeting GCC for any\n    Solaris 2 system.\n-   Copyright 2004, 2007 Free Software Foundation, Inc.\n+   Copyright 2004, 2007, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -21,3 +21,4 @@ along with GCC; see the file COPYING3.  If not see\n extern void solaris_insert_attributes (tree, tree *);\n extern void solaris_register_pragmas (void);\n extern void solaris_output_init_fini (FILE *, tree);\n+extern void solaris_assemble_visibility (tree, int);"}, {"sha": "3531e799f5d2a8d704ee026e989b4f181aa04fee", "filename": "gcc/config/sol2.c", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Fconfig%2Fsol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Fconfig%2Fsol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.c?ref=f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "patch": "@@ -1,5 +1,5 @@\n /* General Solaris system support.\n-   Copyright (C) 2004, 2005 , 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005 , 2007, 2010 Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC.\n \n This file is part of GCC.\n@@ -22,6 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n+#include \"output.h\"\n #include \"tm.h\"\n #include \"rtl.h\"\n #include \"tm_p.h\"\n@@ -117,3 +118,42 @@ solaris_output_init_fini (FILE *file, tree decl)\n     }\n }\n \n+/* Emit an assembler directive to set symbol for DECL visibility to\n+   the visibility type VIS, which must not be VISIBILITY_DEFAULT.  */\n+\n+void\n+solaris_assemble_visibility (tree decl, int vis)\n+{\n+  /* Sun as uses .symbolic for STV_PROTECTED.  STV_INTERNAL is marked as\n+     `currently reserved', but the linker treats it like STV_HIDDEN.  Sun\n+     Studio 12.1 cc emits .hidden instead.\n+\n+     There are 3 Sun extensions GCC doesn't yet know about: STV_EXPORTED,\n+     STV_SINGLETON, and STV_ELIMINATE.\n+\n+     See Linker and Libraries Guide, Ch. 2, Link-Editor, Defining\n+     Additional Symbols with a mapfile,\n+     http://docs.sun.com/app/docs/doc/819-0690/gdzmc?a=view\n+     and Ch. 7, Object-File Format, Symbol Table Section,\n+     http://docs.sun.com/app/docs/doc/819-0690/chapter6-79797?a=view  */\n+\n+  static const char * const visibility_types[] = {\n+    NULL, \"symbolic\", \"hidden\", \"hidden\"\n+  };\n+\n+  const char *name, *type;\n+\n+  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+  type = visibility_types[vis];\n+\n+  /* .hidden dates back before Solaris 2.5, but .symbolic was only added in\n+     Solaris 9 12/02.  */\n+#ifdef HAVE_GAS_HIDDEN\n+  fprintf (asm_out_file, \"\\t.%s\\t\", type);\n+  assemble_name (asm_out_file, name);\n+  fprintf (asm_out_file, \"\\n\");\n+#else\n+  warning (OPT_Wattributes, \"visibility attribute not supported \"\n+\t   \"in this configuration; ignored\");\n+#endif\n+}"}, {"sha": "d77c0f8ba8b56d1e1afb80a12447e447bf6ffce0", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "patch": "@@ -284,6 +284,11 @@ __enable_execute_stack (void *addr)\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+#ifndef USE_GAS\n+#undef TARGET_ASM_ASSEMBLE_VISIBILITY\n+#define TARGET_ASM_ASSEMBLE_VISIBILITY solaris_assemble_visibility\n+#endif\n+\n extern GTY(()) tree solaris_pending_aligns;\n extern GTY(()) tree solaris_pending_inits;\n extern GTY(()) tree solaris_pending_finis;"}, {"sha": "526ae407382018b96a46562d3ae4502aca0d55ae", "filename": "gcc/config/t-sol2", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Fconfig%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Fconfig%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-sol2?ref=f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2004, 2008, 2009 Free Software Foundation, Inc.\n+# Copyright (C) 2004, 2008, 2009, 2010 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -25,6 +25,6 @@ sol2-c.o: $(srcdir)/config/sol2-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \n # Solaris-specific attributes\n sol2.o: $(srcdir)/config/sol2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  tree.h $(TM_H) $(TM_P_H) toplev.h $(GGC_H)\n+  tree.h output.h $(TM_H) $(TM_P_H) toplev.h $(GGC_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/config/sol2.c"}, {"sha": "3e9329a86f4c962f3cfd566df94b8ceb8dae34fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "patch": "@@ -1,3 +1,9 @@\n+2010-03-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* g++.dg/ext/visibility/pragma-override1.C: Allow for .hidden in\n+\tassembler output on *-*-solaris2*.\n+\t* g++.dg/ext/visibility/pragma-override2.C: Likewise.\n+\n 2010-03-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43557"}, {"sha": "4300d1ab16ac0e40a09c6b05f80a5c39b715f519", "filename": "gcc/testsuite/g++.dg/ext/visibility/pragma-override1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override1.C?ref=f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "patch": "@@ -1,7 +1,8 @@\n /* Test that #pragma GCC visibility does not override class member specific settings. */\n /* { dg-do compile } */\n /* { dg-require-visibility \"internal\" } */\n-/* { dg-final { scan-assembler \"\\\\.internal.*Foo.methodEv\" } } */\n+/* { dg-final { scan-assembler \"\\\\.internal.*Foo.methodEv\" { target { ! *-*-solaris2* } } } } */\n+/* { dg-final { scan-assembler \"\\\\.(internal|hidden).*Foo.methodEv\" { target *-*-solaris2* } } } */\n \n #pragma GCC visibility push(hidden)\n class __attribute__ ((visibility (\"internal\"))) Foo"}, {"sha": "f566cd2f4191099cb8933c3742d2687ac000fd8f", "filename": "gcc/testsuite/g++.dg/ext/visibility/pragma-override2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override2.C?ref=f0c01ffd7723295ca7ca90a7e87351c8fb6f20e2", "patch": "@@ -1,7 +1,8 @@\n /* Test that #pragma GCC visibility does not override class member specific settings. */\n /* { dg-do compile } */\n /* { dg-require-visibility \"internal\" } */\n-/* { dg-final { scan-assembler \"\\\\.internal.*Foo.methodEv\" } } */\n+/* { dg-final { scan-assembler \"\\\\.internal.*Foo.methodEv\" { target { ! *-*-solaris2* } } } } */\n+/* { dg-final { scan-assembler \"\\\\.(internal|hidden).*Foo.methodEv\" { target *-*-solaris2* } } } */\n \n #pragma GCC visibility push(hidden)\n class Foo"}]}