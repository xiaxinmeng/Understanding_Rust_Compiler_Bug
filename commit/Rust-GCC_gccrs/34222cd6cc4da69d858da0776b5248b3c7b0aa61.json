{"sha": "34222cd6cc4da69d858da0776b5248b3c7b0aa61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQyMjJjZDZjYzRkYTY5ZDg1OGRhMDc3NmI1MjQ4YjNjN2IwYWE2MQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2015-07-15T16:31:46Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2015-07-15T16:31:46Z"}, "message": "simplify-rtx.c (simplify_ternary_operation): Add simplification for (!c) != {0,...,0} ? a : b for vector modes.\n\n[gcc]\n\n2015-07-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* simplify-rtx.c (simplify_ternary_operation): Add simplification\n\tfor (!c) != {0,...,0} ? a : b for vector modes.\n\n[gcc/testsuite]\n\n2015-07-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/vec-cmp-sel.c: New test.\n\nFrom-SVN: r225840", "tree": {"sha": "04c76af59269f7a1c5e9de6f9dc08394b7276f58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04c76af59269f7a1c5e9de6f9dc08394b7276f58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34222cd6cc4da69d858da0776b5248b3c7b0aa61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34222cd6cc4da69d858da0776b5248b3c7b0aa61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34222cd6cc4da69d858da0776b5248b3c7b0aa61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34222cd6cc4da69d858da0776b5248b3c7b0aa61/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff302741f10c7d6f014eb46f7632b57bdc43a4f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff302741f10c7d6f014eb46f7632b57bdc43a4f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff302741f10c7d6f014eb46f7632b57bdc43a4f5"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "babf07f4901858c42c3ea7d07cecd9dc6e8ee6e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34222cd6cc4da69d858da0776b5248b3c7b0aa61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34222cd6cc4da69d858da0776b5248b3c7b0aa61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34222cd6cc4da69d858da0776b5248b3c7b0aa61", "patch": "@@ -1,3 +1,8 @@\n+2015-07-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* simplify-rtx.c (simplify_ternary_operation): Add simplification\n+\tfor (!c) != {0,...,0} ? a : b for vector modes.\n+\n 2015-07-15  Paolo Bonzini  <bonzini@gnu.org>\n \t    Martin Jambor  <mjambor@suse.cz>\n "}, {"sha": "fde99445e54d6f755d10e3fee1624df650e4581e", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34222cd6cc4da69d858da0776b5248b3c7b0aa61/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34222cd6cc4da69d858da0776b5248b3c7b0aa61/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=34222cd6cc4da69d858da0776b5248b3c7b0aa61", "patch": "@@ -5247,6 +5247,32 @@ simplify_ternary_operation (enum rtx_code code, machine_mode mode,\n \t\t  && rtx_equal_p (XEXP (op0, 1), op1))))\n \treturn op2;\n \n+      /* Convert (!c) != {0,...,0} ? a : b into\n+         c != {0,...,0} ? b : a for vector modes.  */\n+      if (VECTOR_MODE_P (GET_MODE (op1))\n+\t  && GET_CODE (op0) == NE\n+\t  && GET_CODE (XEXP (op0, 0)) == NOT\n+\t  && GET_CODE (XEXP (op0, 1)) == CONST_VECTOR)\n+\t{\n+\t  rtx cv = XEXP (op0, 1);\n+\t  int nunits = CONST_VECTOR_NUNITS (cv);\n+\t  bool ok = true;\n+\t  for (int i = 0; i < nunits; ++i)\n+\t    if (CONST_VECTOR_ELT (cv, i) != const0_rtx)\n+\t      {\n+\t\tok = false;\n+\t\tbreak;\n+\t      }\n+\t  if (ok)\n+\t    {\n+\t      rtx new_op0 = gen_rtx_NE (GET_MODE (op0),\n+\t\t\t\t\tXEXP (XEXP (op0, 0), 0),\n+\t\t\t\t\tXEXP (op0, 1));\n+\t      rtx retval = gen_rtx_IF_THEN_ELSE (mode, new_op0, op2, op1);\n+\t      return retval;\n+\t    }\n+\t}\n+\n       if (COMPARISON_P (op0) && ! side_effects_p (op0))\n \t{\n \t  machine_mode cmp_mode = (GET_MODE (XEXP (op0, 0)) == VOIDmode"}, {"sha": "84ee717791328d7e19418c4423ae1848a9dba7a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34222cd6cc4da69d858da0776b5248b3c7b0aa61/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34222cd6cc4da69d858da0776b5248b3c7b0aa61/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=34222cd6cc4da69d858da0776b5248b3c7b0aa61", "patch": "@@ -1,3 +1,7 @@\n+2015-07-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/vec-cmp-sel.c: New test.\n+\n 2015-07-15  Richard Biener  <rguenther@suse.de>\n \n \t* lib/objc-torture.exp (OBJC_TORTURE_OPTIONS): Remove"}, {"sha": "2888216940e160903701e68b47faca2daef2955b", "filename": "gcc/testsuite/gcc.target/powerpc/vec-cmp-sel.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34222cd6cc4da69d858da0776b5248b3c7b0aa61/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-cmp-sel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34222cd6cc4da69d858da0776b5248b3c7b0aa61/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-cmp-sel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvec-cmp-sel.c?ref=34222cd6cc4da69d858da0776b5248b3c7b0aa61", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile { target powerpc64*-*-* } } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-options \"-maltivec -O2\" } */\n+/* { dg-final { scan-assembler \"vcmpgtsd\" } } */\n+/* { dg-final { scan-assembler-not \"xxlnor\" } } */\n+\n+/* Test code in simplify-rtx.c that converts\n+     (!c) != {0,...,0} ? a : b\n+   into\n+     c != {0,...,0} ? b : a  */\n+\n+#include <altivec.h>\n+\n+vector signed long long foo () {\n+  vector signed long long x = { 25399, -12900 };\n+  vector signed long long y = { 12178, -9987 };\n+  vector bool long long b = vec_cmpge (x, y);\n+  vector signed long long z = vec_sel (y, x, b);\n+  return z;\n+}"}]}