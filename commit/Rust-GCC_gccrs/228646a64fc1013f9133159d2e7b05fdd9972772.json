{"sha": "228646a64fc1013f9133159d2e7b05fdd9972772", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI4NjQ2YTY0ZmMxMDEzZjkxMzMxNTlkMmU3YjA1ZmRkOTk3Mjc3Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-05T07:01:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-05T07:01:37Z"}, "message": "i386: Simplify {,v}ph{add,sub{,s}{w,d} insn patterns [PR94460]\n\nAs mentioned in the previous PR94460 patch, the RTL patterns look too\nlarge/complicated, we can simplify them by just performing two 2 arg\npermutations to move the arguments into the right spots and then just\ndoing the plus/minus (or signed saturation version thereof).\n\n2020-05-05  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94460\n\t* config/i386/sse.md (avx2_ph<plusminus_mnemonic>wv16hi3,\n\tssse3_ph<plusminus_mnemonic>wv8hi3, ssse3_ph<plusminus_mnemonic>wv4hi3,\n\tavx2_ph<plusminus_mnemonic>dv8si3, ssse3_ph<plusminus_mnemonic>dv4si3,\n\tssse3_ph<plusminus_mnemonic>dv2si3): Simplify RTL patterns.", "tree": {"sha": "6c2ccf566964635bafc53968321433940b4b51a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c2ccf566964635bafc53968321433940b4b51a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/228646a64fc1013f9133159d2e7b05fdd9972772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228646a64fc1013f9133159d2e7b05fdd9972772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/228646a64fc1013f9133159d2e7b05fdd9972772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228646a64fc1013f9133159d2e7b05fdd9972772/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba84e01d81b135594e63a2a830194862b6e358bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba84e01d81b135594e63a2a830194862b6e358bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba84e01d81b135594e63a2a830194862b6e358bc"}], "stats": {"total": 266, "additions": 81, "deletions": 185}, "files": [{"sha": "34b56d9454fbf27d2b66ccd8baeaebc31acc35ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228646a64fc1013f9133159d2e7b05fdd9972772/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228646a64fc1013f9133159d2e7b05fdd9972772/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=228646a64fc1013f9133159d2e7b05fdd9972772", "patch": "@@ -1,3 +1,11 @@\n+2020-05-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94460\n+\t* config/i386/sse.md (avx2_ph<plusminus_mnemonic>wv16hi3,\n+\tssse3_ph<plusminus_mnemonic>wv8hi3, ssse3_ph<plusminus_mnemonic>wv4hi3,\n+\tavx2_ph<plusminus_mnemonic>dv8si3, ssse3_ph<plusminus_mnemonic>dv4si3,\n+\tssse3_ph<plusminus_mnemonic>dv2si3): Simplify RTL patterns.\n+\n 2020-05-04  Clement Chigot  <clement.chigot@atos.net>\n \t    David Edelsohn  <dje.gcc@gmail.com>\n "}, {"sha": "0d69c9eb903bcb5f4b96223d8f2469550a2b8ea5", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 73, "deletions": 185, "changes": 258, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/228646a64fc1013f9133159d2e7b05fdd9972772/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/228646a64fc1013f9133159d2e7b05fdd9972772/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=228646a64fc1013f9133159d2e7b05fdd9972772", "patch": "@@ -16038,73 +16038,23 @@\n \n (define_insn \"avx2_ph<plusminus_mnemonic>wv16hi3\"\n   [(set (match_operand:V16HI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V16HI\n-\t  (vec_concat:V8HI\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI\n-\t\t    (match_operand:V16HI 1 \"register_operand\" \"x\")\n-\t\t    (parallel [(const_int 0)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t      (vec_concat:V2HI\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI\n-\t\t    (match_operand:V16HI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t    (parallel [(const_int 0)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t      (vec_concat:V2HI\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 7)]))))))\n-\t  (vec_concat:V8HI\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 8)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 9)])))\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 10)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 11)]))))\n-\t      (vec_concat:V2HI\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 12)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 13)])))\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 14)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 15)])))))\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 8)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 9)])))\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 10)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 11)]))))\n-\t      (vec_concat:V2HI\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 12)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 13)])))\n-\t\t(ssse3_plusminus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 14)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 15)]))))))))]\n+\t(ssse3_plusminus:V16HI\n+\t  (vec_select:V16HI\n+\t    (vec_concat:V32HI\n+\t      (match_operand:V16HI 1 \"register_operand\" \"x\")\n+\t      (match_operand:V16HI 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (parallel\n+\t      [(const_int 0) (const_int 2) (const_int 4) (const_int 6)\n+\t       (const_int 16) (const_int 18) (const_int 20) (const_int 22)\n+\t       (const_int 8) (const_int 10) (const_int 12) (const_int 14)\n+\t       (const_int 24) (const_int 26) (const_int 28) (const_int 30)]))\n+\t  (vec_select:V16HI\n+\t    (vec_concat:V32HI (match_dup 1) (match_dup 2))\n+\t    (parallel\n+\t      [(const_int 1) (const_int 3) (const_int 5) (const_int 7)\n+\t       (const_int 17) (const_int 19) (const_int 21) (const_int 23)\n+\t       (const_int 9) (const_int 11) (const_int 13) (const_int 15)\n+\t       (const_int 25) (const_int 27) (const_int 29) (const_int 31)]))))]\n   \"TARGET_AVX2\"\n   \"vph<plusminus_mnemonic>w\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n@@ -16114,41 +16064,19 @@\n \n (define_insn \"ssse3_ph<plusminus_mnemonic>wv8hi3\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n-\t(vec_concat:V8HI\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (ssse3_plusminus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (ssse3_plusminus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (ssse3_plusminus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (ssse3_plusminus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (ssse3_plusminus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"vector_operand\" \"xBm,xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (ssse3_plusminus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (ssse3_plusminus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (ssse3_plusminus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n+\t(ssse3_plusminus:V8HI\n+\t  (vec_select:V8HI\n+\t    (vec_concat:V16HI\n+\t      (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n+\t      (match_operand:V8HI 2 \"vector_operand\" \"xBm,xm\"))\n+\t    (parallel\n+\t      [(const_int 0) (const_int 2) (const_int 4) (const_int 6)\n+\t       (const_int 8) (const_int 10) (const_int 12) (const_int 14)]))\n+\t  (vec_select:V8HI\n+\t    (vec_concat:V16HI (match_dup 1) (match_dup 2))\n+\t    (parallel\n+\t      [(const_int 1) (const_int 3) (const_int 5) (const_int 7)\n+\t       (const_int 9) (const_int 11) (const_int 13) (const_int 15)]))))]\n   \"TARGET_SSSE3\"\n   \"@\n    ph<plusminus_mnemonic>w\\t{%2, %0|%0, %2}\n@@ -16163,25 +16091,17 @@\n \n (define_insn_and_split \"ssse3_ph<plusminus_mnemonic>wv4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y,x,Yv\")\n-\t(vec_concat:V4HI\n-\t  (vec_concat:V2HI\n-\t    (ssse3_plusminus:HI\n-\t      (vec_select:HI\n-\t\t(match_operand:V4HI 1 \"register_operand\" \"0,0,Yv\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (ssse3_plusminus:HI\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t  (vec_concat:V2HI\n-\t    (ssse3_plusminus:HI\n-\t      (vec_select:HI\n-\t\t(match_operand:V4HI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (ssse3_plusminus:HI\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))))]\n+\t(ssse3_plusminus:V4HI\n+\t  (vec_select:V4HI\n+\t    (vec_concat:V8HI\n+\t      (match_operand:V4HI 1 \"register_operand\" \"0,0,Yv\")\n+\t      (match_operand:V4HI 2 \"register_mmxmem_operand\" \"ym,x,Yv\"))\n+\t    (parallel\n+\t      [(const_int 0) (const_int 2) (const_int 4) (const_int 6)]))\n+\t  (vec_select:V4HI\n+\t    (vec_concat:V8HI (match_dup 1) (match_dup 2))\n+\t    (parallel\n+\t      [(const_int 1) (const_int 3) (const_int 5) (const_int 7)]))))]\n   \"(TARGET_MMX || TARGET_MMX_WITH_SSE) && TARGET_SSSE3\"\n   \"@\n    ph<plusminus_mnemonic>w\\t{%2, %0|%0, %2}\n@@ -16211,41 +16131,19 @@\n \n (define_insn \"avx2_ph<plusminus_mnemonic>dv8si3\"\n   [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V8SI\n-\t  (vec_concat:V4SI\n-\t    (vec_concat:V2SI\n-\t      (plusminus:SI\n-\t\t(vec_select:SI\n-\t\t  (match_operand:V8SI 1 \"register_operand\" \"x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (plusminus:SI\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2SI\n-\t      (plusminus:SI\n-\t\t(vec_select:SI\n-\t\t  (match_operand:V8SI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (plusminus:SI\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 3)])))))\n-\t  (vec_concat:V4SI\n-\t    (vec_concat:V2SI\n-\t      (plusminus:SI\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (plusminus:SI\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 7)]))))\n-\t    (vec_concat:V2SI\n-\t      (plusminus:SI\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (plusminus:SI\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 7)])))))))]\n+\t(plusminus:V8SI\n+\t  (vec_select:V8SI\n+\t    (vec_concat:V16SI\n+\t      (match_operand:V8SI 1 \"register_operand\" \"x\")\n+\t      (match_operand:V8SI 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (parallel\n+\t      [(const_int 0) (const_int 2) (const_int 8) (const_int 10)\n+\t       (const_int 4) (const_int 6) (const_int 12) (const_int 14)]))\n+\t  (vec_select:V8SI\n+\t    (vec_concat:V16SI (match_dup 1) (match_dup 2))\n+\t    (parallel\n+\t      [(const_int 1) (const_int 3) (const_int 9) (const_int 11)\n+\t       (const_int 5) (const_int 7) (const_int 13) (const_int 15)]))))]\n   \"TARGET_AVX2\"\n   \"vph<plusminus_mnemonic>d\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n@@ -16255,25 +16153,17 @@\n \n (define_insn \"ssse3_ph<plusminus_mnemonic>dv4si3\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n-\t(vec_concat:V4SI\n-\t  (vec_concat:V2SI\n-\t    (plusminus:SI\n-\t      (vec_select:SI\n-\t\t(match_operand:V4SI 1 \"register_operand\" \"0,x\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (plusminus:SI\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 2)]))\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 3)]))))\n-\t  (vec_concat:V2SI\n-\t    (plusminus:SI\n-\t      (vec_select:SI\n-\t\t(match_operand:V4SI 2 \"vector_operand\" \"xBm,xm\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (plusminus:SI\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 3)]))))))]\n+\t(plusminus:V4SI\n+\t  (vec_select:V4SI\n+\t    (vec_concat:V8SI\n+\t      (match_operand:V4SI 1 \"register_operand\" \"0,x\")\n+\t      (match_operand:V4SI 2 \"vector_operand\" \"xBm,xm\"))\n+\t    (parallel\n+\t      [(const_int 0) (const_int 2) (const_int 4) (const_int 6)]))\n+\t  (vec_select:V4SI\n+\t    (vec_concat:V8SI (match_dup 1) (match_dup 2))\n+\t    (parallel\n+\t      [(const_int 1) (const_int 3) (const_int 5) (const_int 7)]))))]\n   \"TARGET_SSSE3\"\n   \"@\n    ph<plusminus_mnemonic>d\\t{%2, %0|%0, %2}\n@@ -16288,17 +16178,15 @@\n \n (define_insn_and_split \"ssse3_ph<plusminus_mnemonic>dv2si3\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=y,x,Yv\")\n-\t(vec_concat:V2SI\n-\t  (plusminus:SI\n-\t    (vec_select:SI\n+\t(plusminus:V2SI\n+\t  (vec_select:V2SI\n+\t    (vec_concat:V4SI\n \t      (match_operand:V2SI 1 \"register_operand\" \"0,0,Yv\")\n-\t      (parallel [(const_int 0)]))\n-\t    (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t  (plusminus:SI\n-\t    (vec_select:SI\n-\t      (match_operand:V2SI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")\n-\t      (parallel [(const_int 0)]))\n-\t    (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))))]\n+\t      (match_operand:V2SI 2 \"register_mmxmem_operand\" \"ym,x,Yv\"))\n+\t    (parallel [(const_int 0) (const_int 2)]))\n+\t  (vec_select:V2SI\n+\t    (vec_concat:V4SI (match_dup 1) (match_dup 2))\n+\t    (parallel [(const_int 1) (const_int 3)]))))]\n   \"(TARGET_MMX || TARGET_MMX_WITH_SSE) && TARGET_SSSE3\"\n   \"@\n    ph<plusminus_mnemonic>d\\t{%2, %0|%0, %2}"}]}