{"sha": "a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUyOWUwYTY5N2Y3Y2JjMTZmNGQ4ZWE5YzJkYWQ5YjRiNzYxZDk2Yw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-10T12:16:25Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-10T12:16:25Z"}, "message": "dumpfile.h (TDI_lang_all): New.\n\n\t* dumpfile.h (TDI_lang_all): New.\n\t(TDF_KIND): New. Renumber others\n\t(TDF_LANG, TDF_TREE, TDF_RTL, TDF_IPA): Enumerate value, rather\n\tthan bits.\n\t* dumpfile.c (dump_files): Mark language dumps as TDF_LANG.  add\n\tlang-all.\n\t(get_dump_file_name): Adjust suffix generation.\n\t(dump_enable_all): Use TDF_KIND.\n\t* doc/invoke.texi (-fdump-lang-all): Document.\n\nFrom-SVN: r247833", "tree": {"sha": "6a7df3a589d21a6ba6474b3900a973ce1d7f31db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a7df3a589d21a6ba6474b3900a973ce1d7f31db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e0a19c5dfa42b6b5fae4b60842e3f903d8e9bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e0a19c5dfa42b6b5fae4b60842e3f903d8e9bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e0a19c5dfa42b6b5fae4b60842e3f903d8e9bed"}], "stats": {"total": 76, "additions": 48, "deletions": 28}, "files": [{"sha": "72dd1bc196848b1ec50eed8d77b196b4ce2454de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c", "patch": "@@ -1,5 +1,15 @@\n 2017-05-10  Nathan Sidwell  <nathan@acm.org>\n \n+\t* dumpfile.h (TDI_lang_all): New.\n+\t(TDF_KIND): New. Renumber others\n+\t(TDF_LANG, TDF_TREE, TDF_RTL, TDF_IPA): Enumerate value, rather\n+\tthan bits.\n+\t* dumpfile.c (dump_files): Mark language dumps as TDF_LANG.  add\n+\tlang-all.\n+\t(get_dump_file_name): Adjust suffix generation.\n+\t(dump_enable_all): Use TDF_KIND.\n+\t* doc/invoke.texi (-fdump-lang-all): Document.\n+\n \t* dumpfile.h: Tabify.\n \n 2017-05-10  Wilco Dijkstra  <wdijkstr@arm.com>"}, {"sha": "a6ce483d8905f474955e46e110c33f99598b2f0c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c", "patch": "@@ -543,6 +543,7 @@ Objective-C and Objective-C++ Dialects}.\n -fdump-class-hierarchy@r{[}-@var{n}@r{]} @gol\n -fdump-final-insns@r{[}=@var{file}@r{]}\n -fdump-ipa-all  -fdump-ipa-cgraph  -fdump-ipa-inline @gol\n+-fdump-lang-all @gol\n -fdump-passes @gol\n -fdump-rtl-@var{pass}  -fdump-rtl-@var{pass}=@var{filename} @gol\n -fdump-statistics @gol\n@@ -12970,6 +12971,10 @@ Dump after function inlining.\n \n @end table\n \n+@item -fdump-lang-all\n+@opindex fdump-lang-all\n+Control the dumping of language-specific information.\n+\n @item -fdump-passes\n @opindex fdump-passes\n Print on @file{stderr} the list of optimization passes that are turned"}, {"sha": "66b81a85733112753a3ba6b58f8999993f0508a1", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c", "patch": "@@ -57,9 +57,9 @@ static struct dump_file_info dump_files[TDI_end] =\n    0, 0, 0, 0, 0, false, false},\n   {\".ipa-clones\", \"ipa-clones\", NULL, NULL, NULL, NULL, NULL, TDF_IPA,\n    0, 0, 0, 0, 0, false, false},\n-  {\".tu\", \"translation-unit\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n+  {\".tu\", \"translation-unit\", NULL, NULL, NULL, NULL, NULL, TDF_LANG,\n    0, 0, 0, 0, 1, false, false},\n-  {\".class\", \"class-hierarchy\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n+  {\".class\", \"class-hierarchy\", NULL, NULL, NULL, NULL, NULL, TDF_LANG,\n    0, 0, 0, 0, 2, false, false},\n   {\".original\", \"tree-original\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n    0, 0, 0, 0, 3, false, false},\n@@ -69,6 +69,8 @@ static struct dump_file_info dump_files[TDI_end] =\n    0, 0, 0, 0, 5, false, false},\n #define FIRST_AUTO_NUMBERED_DUMP 6\n \n+  {NULL, \"lang-all\", NULL, NULL, NULL, NULL, NULL, TDF_LANG,\n+   0, 0, 0, 0, 0, false, false},\n   {NULL, \"tree-all\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n    0, 0, 0, 0, 0, false, false},\n   {NULL, \"rtl-all\", NULL, NULL, NULL, NULL, NULL, TDF_RTL,\n@@ -115,7 +117,7 @@ static const struct dump_option_value_info dump_options[] =\n   {\"missed\", MSG_MISSED_OPTIMIZATION},\n   {\"note\", MSG_NOTE},\n   {\"optall\", MSG_ALL},\n-  {\"all\", ~(TDF_RAW | TDF_SLIM | TDF_LINENO | TDF_TREE | TDF_RTL | TDF_IPA\n+  {\"all\", ~(TDF_KIND_MASK | TDF_RAW | TDF_SLIM | TDF_LINENO\n \t    | TDF_STMTADDR | TDF_GRAPH | TDF_DIAGNOSTIC | TDF_VERBOSE\n \t    | TDF_RHS_ONLY | TDF_NOUID | TDF_ENUMERATE_LOCALS | TDF_SCEV\n \t    | TDF_GIMPLE)},\n@@ -282,15 +284,11 @@ get_dump_file_name (struct dump_file_info *dfi) const\n     dump_id[0] = '\\0';\n   else\n     {\n-      char suffix;\n-      if (dfi->pflags & TDF_TREE)\n-\tsuffix = 't';\n-      else if (dfi->pflags & TDF_IPA)\n-\tsuffix = 'i';\n-      else\n-\tsuffix = 'r';\n-\n-      if (snprintf (dump_id, sizeof (dump_id), \".%03d%c\", dfi->num, suffix) < 0)\n+      /* LANG, TREE, RTL, IPA.  */\n+      char suffix = \"ltri\"[TDF_KIND (dfi->pflags)];\n+      \n+      if (snprintf (dump_id, sizeof (dump_id), \".%03d%c\", dfi->num, suffix)\n+\t  < 0)\n \tdump_id[0] = '\\0';\n     }\n \n@@ -657,13 +655,13 @@ int\n gcc::dump_manager::\n dump_enable_all (int flags, const char *filename)\n {\n-  int ir_dump_type = (flags & (TDF_TREE | TDF_RTL | TDF_IPA));\n+  int ir_dump_type = TDF_KIND (flags);\n   int n = 0;\n   size_t i;\n \n   for (i = TDI_none + 1; i < (size_t) TDI_end; i++)\n     {\n-      if ((dump_files[i].pflags & ir_dump_type))\n+      if (TDF_KIND (dump_files[i].pflags) == ir_dump_type)\n         {\n           const char *old_filename = dump_files[i].pfilename;\n           dump_files[i].pstate = -1;\n@@ -684,7 +682,7 @@ dump_enable_all (int flags, const char *filename)\n \n   for (i = 0; i < m_extra_dump_files_in_use; i++)\n     {\n-      if ((m_extra_dump_files[i].pflags & ir_dump_type))\n+      if (TDF_KIND (m_extra_dump_files[i].pflags) & ir_dump_type)\n         {\n           const char *old_filename = m_extra_dump_files[i].pfilename;\n           m_extra_dump_files[i].pstate = -1;"}, {"sha": "df5203748a5d077b2e4942977c24e74af4ca55ab", "filename": "gcc/dumpfile.h", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c/gcc%2Fdumpfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c/gcc%2Fdumpfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.h?ref=a529e0a697f7cbc16f4d8ea9c2dad9b4b761d96c", "patch": "@@ -35,6 +35,8 @@ enum tree_dump_index\n   TDI_original,\t\t\t/* dump each function before optimizing it */\n   TDI_generic,\t\t\t/* dump each function after genericizing it */\n   TDI_nested,\t\t\t/* dump each function after unnesting it */\n+\n+  TDI_lang_all,\t\t\t/* enable all the language dumps.  */\n   TDI_tree_all,\t\t\t/* enable all the GENERIC/GIMPLE dumps.  */\n   TDI_rtl_all,\t\t\t/* enable all the RTL dumps.  */\n   TDI_ipa_all,\t\t\t/* enable all the IPA dumps.  */\n@@ -47,21 +49,26 @@ enum tree_dump_index\n    the DUMP_OPTIONS array in dumpfile.c. The TDF_* flags coexist with\n    MSG_* flags (for -fopt-info) and the bit values must be chosen to\n    allow that.  */\n-#define TDF_ADDRESS\t(1 << 0)\t/* dump node addresses */\n-#define TDF_SLIM\t(1 << 1)\t/* don't go wild following links */\n-#define TDF_RAW\t\t(1 << 2)\t/* don't unparse the function */\n-#define TDF_DETAILS\t(1 << 3)\t/* show more detailed info about\n+#define TDF_LANG\t0\t/* is a lang-specific dump.  */\n+#define TDF_TREE\t1\t/* is a tree dump */\n+#define TDF_RTL\t\t2\t/* is a RTL dump */\n+#define TDF_IPA\t\t3\t/* is an IPA dump */\n+#define TDF_KIND_MASK   3\n+#define TDF_KIND(X) ((X) & TDF_KIND_MASK)\n+\n+/* Bit 2 unused, available for hire.  */\n+#define TDF_ADDRESS\t(1 << 3)\t/* dump node addresses */\n+#define TDF_SLIM\t(1 << 4)\t/* don't go wild following links */\n+#define TDF_RAW\t\t(1 << 5)\t/* don't unparse the function */\n+#define TDF_DETAILS\t(1 << 6)\t/* show more detailed info about\n \t\t\t\t\t   each pass */\n-#define TDF_STATS\t(1 << 4)\t/* dump various statistics about\n+#define TDF_STATS\t(1 << 7)\t/* dump various statistics about\n \t\t\t\t\t   each pass */\n-#define TDF_BLOCKS\t(1 << 5)\t/* display basic block boundaries */\n-#define TDF_VOPS\t(1 << 6)\t/* display virtual operands */\n-#define TDF_LINENO\t(1 << 7)\t/* display statement line numbers */\n-#define TDF_UID\t\t(1 << 8)\t/* display decl UIDs */\n-\n-#define TDF_TREE\t(1 << 9)\t/* is a tree dump */\n-#define TDF_RTL\t\t(1 << 10)\t/* is a RTL dump */\n-#define TDF_IPA\t\t(1 << 11)\t/* is an IPA dump */\n+#define TDF_BLOCKS\t(1 << 8)\t/* display basic block boundaries */\n+#define TDF_VOPS\t(1 << 9)\t/* display virtual operands */\n+#define TDF_LINENO\t(1 << 10)\t/* display statement line numbers */\n+#define TDF_UID\t\t(1 << 11)\t/* display decl UIDs */\n+\n #define TDF_STMTADDR\t(1 << 12)\t/* Address of stmt.  */\n \n #define TDF_GRAPH\t(1 << 13)\t/* a graph dump is being emitted */"}]}