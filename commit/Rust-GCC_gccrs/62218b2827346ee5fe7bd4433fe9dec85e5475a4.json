{"sha": "62218b2827346ee5fe7bd4433fe9dec85e5475a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIyMThiMjgyNzM0NmVlNWZlN2JkNDQzM2ZlOWRlYzg1ZTU0NzVhNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@snafu.rutgers.edu", "date": "1999-04-07T06:48:36Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-04-07T06:48:36Z"}, "message": "ansify.c (die): Specify void argument.\n\n        * ansify.c (die): Specify void argument.\n        * intdoc.c (family_name, dumpgen, dumpspec, dumpimp,\n        argument_info_ptr, argument_info_string, argument_name_ptr,\n        argument_name_string, elaborate_if_complex,\n        elaborate_if_maybe_complex, elaborate_if_real, print_type_string):\n        Const-ify a char*.\n        (main): Mark parameter `argv' with ATTRIBUTE_UNUSED.\n        (_ffeintrin_name_, _ffeintrin_gen_, _ffeintrin_spec_,\n        _ffeintrin_imp_, cc_pair, descriptions, summaries): Const-ify a char*.\n\nFrom-SVN: r26243", "tree": {"sha": "23e3f208af491df0bea525c4c3e34400f5a67ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23e3f208af491df0bea525c4c3e34400f5a67ced"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62218b2827346ee5fe7bd4433fe9dec85e5475a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62218b2827346ee5fe7bd4433fe9dec85e5475a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62218b2827346ee5fe7bd4433fe9dec85e5475a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62218b2827346ee5fe7bd4433fe9dec85e5475a4/comments", "author": null, "committer": null, "parents": [{"sha": "b9e41699102a6bab69e876e6dc09aadb04837218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e41699102a6bab69e876e6dc09aadb04837218", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9e41699102a6bab69e876e6dc09aadb04837218"}], "stats": {"total": 103, "additions": 58, "deletions": 45}, "files": [{"sha": "291745c801e0a87e90572ad050c410af71ddb72e", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62218b2827346ee5fe7bd4433fe9dec85e5475a4/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62218b2827346ee5fe7bd4433fe9dec85e5475a4/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=62218b2827346ee5fe7bd4433fe9dec85e5475a4", "patch": "@@ -1,3 +1,16 @@\n+Wed Apr  7 09:47:09 1999  Kaveh R. Ghazi  <ghazi@snafu.rutgers.edu>\n+\n+\t* ansify.c (die): Specify void argument.\n+\n+\t* intdoc.c (family_name, dumpgen, dumpspec, dumpimp,\n+\targument_info_ptr, argument_info_string, argument_name_ptr,\n+\targument_name_string, elaborate_if_complex,\n+\telaborate_if_maybe_complex, elaborate_if_real, print_type_string):\n+\tConst-ify a char*.\n+\t(main): Mark parameter `argv' with ATTRIBUTE_UNUSED.\n+\t(_ffeintrin_name_, _ffeintrin_gen_, _ffeintrin_spec_,\n+\t_ffeintrin_imp_, cc_pair, descriptions, summaries): Const-ify a char*.\n+\n Mon Apr  5 11:57:54 1999  Donn Terry (donn@interix.com)\n \n \t* Make-lang.in (HOST_CFLAGS): compute dynamically."}, {"sha": "6c6d01f911fa77f4ee2ec4c23a5cd380ecc68539", "filename": "gcc/f/ansify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62218b2827346ee5fe7bd4433fe9dec85e5475a4/gcc%2Ff%2Fansify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62218b2827346ee5fe7bd4433fe9dec85e5475a4/gcc%2Ff%2Fansify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fansify.c?ref=62218b2827346ee5fe7bd4433fe9dec85e5475a4", "patch": "@@ -51,7 +51,7 @@ typedef enum\n   while(0)\n \n static void\n-die ()\n+die (void)\n {\n   exit (1);\n }"}, {"sha": "7e0a630489f2cd695a29c1b3e95a76c0e3b59d83", "filename": "gcc/f/intdoc.c", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62218b2827346ee5fe7bd4433fe9dec85e5475a4/gcc%2Ff%2Fintdoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62218b2827346ee5fe7bd4433fe9dec85e5475a4/gcc%2Ff%2Fintdoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintdoc.c?ref=62218b2827346ee5fe7bd4433fe9dec85e5475a4", "patch": "@@ -46,30 +46,30 @@ typedef enum\n #define FFEINTRIN_DOC 1\n #include \"intrin.h\"\n \n-char *family_name (ffeintrinFamily family);\n+const char *family_name (ffeintrinFamily family);\n static void dumpif (ffeintrinFamily fam);\n static void dumpendif (void);\n static void dumpclearif (void);\n static void dumpem (void);\n-static void dumpgen (int menu, char *name, char *name_uc,\n+static void dumpgen (int menu, const char *name, const char *name_uc,\n \t\t     ffeintrinGen gen);\n-static void dumpspec (int menu, char *name, char *name_uc,\n+static void dumpspec (int menu, const char *name, const char *name_uc,\n \t\t      ffeintrinSpec spec);\n-static void dumpimp (int menu, char *name, char *name_uc, size_t genno, ffeintrinFamily family,\n+static void dumpimp (int menu, const char *name, const char *name_uc, size_t genno, ffeintrinFamily family,\n \t\t     ffeintrinImp imp, ffeintrinSpec spec);\n-static char *argument_info_ptr (ffeintrinImp imp, int argno);\n-static char *argument_info_string (ffeintrinImp imp, int argno);\n-static char *argument_name_ptr (ffeintrinImp imp, int argno);\n-static char *argument_name_string (ffeintrinImp imp, int argno);\n+static const char *argument_info_ptr (ffeintrinImp imp, int argno);\n+static const char *argument_info_string (ffeintrinImp imp, int argno);\n+static const char *argument_name_ptr (ffeintrinImp imp, int argno);\n+static const char *argument_name_string (ffeintrinImp imp, int argno);\n #if 0\n-static char *elaborate_if_complex (ffeintrinImp imp, int argno);\n-static char *elaborate_if_maybe_complex (ffeintrinImp imp, int argno);\n-static char *elaborate_if_real (ffeintrinImp imp, int argno);\n+static const char *elaborate_if_complex (ffeintrinImp imp, int argno);\n+static const char *elaborate_if_maybe_complex (ffeintrinImp imp, int argno);\n+static const char *elaborate_if_real (ffeintrinImp imp, int argno);\n #endif\n-static void print_type_string (char *c);\n+static void print_type_string (const char *c);\n \n int\n-main (int argc, char **argv)\n+main (int argc, char **argv ATTRIBUTE_UNUSED)\n {\n   if (argc != 1)\n     {\n@@ -86,22 +86,22 @@ Usage: intdoc > intdoc.texi\\n\\\n \n struct _ffeintrin_name_\n   {\n-    char *name_uc;\n-    char *name_lc;\n-    char *name_ic;\n+    const char *name_uc;\n+    const char *name_lc;\n+    const char *name_ic;\n     ffeintrinGen generic;\n     ffeintrinSpec specific;\n   };\n \n struct _ffeintrin_gen_\n   {\n-    char *name;\t\t\t/* Name as seen in program. */\n+    const char *name;\t\t/* Name as seen in program. */\n     ffeintrinSpec specs[2];\n   };\n \n struct _ffeintrin_spec_\n   {\n-    char *name;\t\t\t/* Uppercase name as seen in source code,\n+    const char *name;\t\t/* Uppercase name as seen in source code,\n \t\t\t\t   lowercase if no source name, \"none\" if no\n \t\t\t\t   name at all (NONE case). */\n     bool is_actualarg;\t\t/* Ok to pass as actual arg if -pedantic. */\n@@ -111,11 +111,11 @@ struct _ffeintrin_spec_\n \n struct _ffeintrin_imp_\n   {\n-    char *name;\t\t\t/* Name of implementation. */\n+    const char *name;\t\t\t/* Name of implementation. */\n #if 0\t/* FFECOM_targetCURRENT == FFECOM_targetGCC */\n     ffecomGfrt gfrt;\t\t/* gfrt index in library. */\n #endif\t/* FFECOM_targetCURRENT == FFECOM_targetGCC */\n-    char *control;\n+    const char *control;\n   };\n \n static struct _ffeintrin_name_ names[] = {\n@@ -187,23 +187,23 @@ static struct _ffeintrin_spec_ specs[] = {\n #undef DEFIMPY\n };\n \n-struct cc_pair { ffeintrinImp imp; char *text; };\n+struct cc_pair { ffeintrinImp imp; const char *text; };\n \n-static char *descriptions[FFEINTRIN_imp] = { 0 };\n+static const char *descriptions[FFEINTRIN_imp] = { 0 };\n static struct cc_pair cc_descriptions[] = {\n #define DEFDOC(IMP,SUMMARY,DESCRIPTION) { FFEINTRIN_imp ## IMP, DESCRIPTION },\n #include \"intdoc.h0\"\n #undef DEFDOC\n };\n \n-static char *summaries[FFEINTRIN_imp] = { 0 };\n+static const char *summaries[FFEINTRIN_imp] = { 0 };\n static struct cc_pair cc_summaries[] = {\n #define DEFDOC(IMP,SUMMARY,DESCRIPTION) { FFEINTRIN_imp ## IMP, SUMMARY },\n #include \"intdoc.h0\"\n #undef DEFDOC\n };\n \n-char *\n+const char *\n family_name (ffeintrinFamily family)\n {\n   switch (family)\n@@ -324,7 +324,7 @@ dumpem ()\n }\n \n static void\n-dumpgen (int menu, char *name, char *name_uc, ffeintrinGen gen)\n+dumpgen (int menu, const char *name, const char *name_uc, ffeintrinGen gen)\n {\n   size_t i;\n   int total = 0;\n@@ -377,7 +377,7 @@ For information on other intrinsics with the same name:\\n\");\n }\n \n static void\n-dumpspec (int menu, char *name, char *name_uc, ffeintrinSpec spec)\n+dumpspec (int menu, const char *name, const char *name_uc, ffeintrinSpec spec)\n {\n   dumpif (specs[spec].family);\n   dumpimp (menu, name, name_uc, 0, specs[spec].family, specs[spec].implementation,\n@@ -386,13 +386,13 @@ dumpspec (int menu, char *name, char *name_uc, ffeintrinSpec spec)\n }\n \n static void\n-dumpimp (int menu, char *name, char *name_uc, size_t genno, ffeintrinFamily family, ffeintrinImp imp,\n-\t ffeintrinSpec spec)\n+dumpimp (int menu, const char *name, const char *name_uc, size_t genno,\n+\t ffeintrinFamily family, ffeintrinImp imp, ffeintrinSpec spec)\n {\n-  char *c;\n+  const char *c;\n   bool subr;\n-  char *argc;\n-  char *argi;\n+  const char *argc;\n+  const char *argi;\n   int colon;\n   int argno;\n \n@@ -410,7 +410,7 @@ dumpimp (int menu, char *name, char *name_uc, size_t genno, ffeintrinFamily fami\n \t  || (summaries[imp] != NULL))\n \t{\n \t  int spaces = INDENT_SUMMARY - 14 - strlen (name);\n-\t  char *c;\n+\t  const char *c;\n \n \t  if (spec != FFEINTRIN_specNONE)\n \t    spaces -= (3 + strlen (specs[spec].name));\t/* See XYZZY1 above */\n@@ -520,8 +520,8 @@ external procedure.\\n\\\n   if (!subr)\n     {\n       int other_arg;\n-      char *arg_string;\n-      char *arg_info;\n+      const char *arg_string;\n+      const char *arg_info;\n \n       if ((c[colon + 1] >= '0')\n \t  && (c[colon + 1] <= '9'))\n@@ -1030,7 +1030,7 @@ Intrinsic groups: \");\n \n   if (descriptions[imp] != NULL)\n     {\n-      char *c = descriptions[imp];\n+      const char *c = descriptions[imp];\n \n       printf (\"\\\n @noindent\\n\\\n@@ -1067,10 +1067,10 @@ Description:\\n\\\n     }\n }\n \n-static char *\n+static const char *\n argument_info_ptr (ffeintrinImp imp, int argno)\n {\n-  char *c = imps[imp].control;\n+  const char *c = imps[imp].control;\n   static char arginfos[8][32];\n   static int argx = 0;\n   int i;\n@@ -1110,20 +1110,20 @@ argument_info_ptr (ffeintrinImp imp, int argno)\n   return c;\n }\n \n-static char *\n+static const char *\n argument_info_string (ffeintrinImp imp, int argno)\n {\n-  char *p;\n+  const char *p;\n \n   p = argument_info_ptr (imp, argno);\n   assert (p != NULL);\n   return p;\n }\n \n-static char *\n+static const char *\n argument_name_ptr (ffeintrinImp imp, int argno)\n {\n-  char *c = imps[imp].control;\n+  const char *c = imps[imp].control;\n   static char argnames[8][32];\n   static int argx = 0;\n   int i;\n@@ -1159,18 +1159,18 @@ argument_name_ptr (ffeintrinImp imp, int argno)\n   return c;\n }\n \n-static char *\n+static const char *\n argument_name_string (ffeintrinImp imp, int argno)\n {\n-  char *p;\n+  const char *p;\n \n   p = argument_name_ptr (imp, argno);\n   assert (p != NULL);\n   return p;\n }\n \n static void\n-print_type_string (char *c)\n+print_type_string (const char *c)\n {\n   char basic = c[0];\n   char kind = c[1];"}]}