{"sha": "0a9a3e826faa319a5c0e6d4ca273db2b735a6beb", "node_id": "C_kwDOANBUbNoAKDBhOWEzZTgyNmZhYTMxOWE1YzBlNmQ0Y2EyNzNkYjJiNzM1YTZiZWI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-10-12T11:26:24Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-10-12T11:34:55Z"}, "message": "Add ABI mappings for rust-call to map to ABI::RUST", "tree": {"sha": "0e9ca4c937f2fa3e59f674681011241b909a90d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e9ca4c937f2fa3e59f674681011241b909a90d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a9a3e826faa319a5c0e6d4ca273db2b735a6beb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a9a3e826faa319a5c0e6d4ca273db2b735a6beb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a9a3e826faa319a5c0e6d4ca273db2b735a6beb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a9a3e826faa319a5c0e6d4ca273db2b735a6beb/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63d901e48f0429d9d203ab56ed0038e6ebfc0b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d901e48f0429d9d203ab56ed0038e6ebfc0b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d901e48f0429d9d203ab56ed0038e6ebfc0b03"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "36abb21520d2b400c1eeacccf9c39d652627be99", "filename": "gcc/rust/util/rust-abi.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a9a3e826faa319a5c0e6d4ca273db2b735a6beb/gcc%2Frust%2Futil%2Frust-abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a9a3e826faa319a5c0e6d4ca273db2b735a6beb/gcc%2Frust%2Futil%2Frust-abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-abi.cc?ref=0a9a3e826faa319a5c0e6d4ca273db2b735a6beb", "patch": "@@ -23,6 +23,8 @@ get_abi_from_string (const std::string &abi)\n {\n   if (abi.compare (\"rust\") == 0)\n     return Rust::ABI::RUST;\n+  else if (abi.compare (\"rust-call\") == 0)\n+    return Rust::ABI::RUST;\n   else if (abi.compare (\"rust-intrinsic\") == 0)\n     return Rust::ABI::INTRINSIC;\n   else if (abi.compare (\"C\") == 0)"}]}