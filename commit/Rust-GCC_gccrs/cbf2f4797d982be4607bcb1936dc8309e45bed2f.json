{"sha": "cbf2f4797d982be4607bcb1936dc8309e45bed2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JmMmY0Nzk3ZDk4MmJlNDYwN2JjYjE5MzZkYzgzMDllNDViZWQyZg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-08-14T03:16:05Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-08-14T03:16:05Z"}, "message": "m68k.c (m68k_output_function_prologue, [...]): Delete versions for DPX2/MOTOROLA and NEWS/MOTOROLA.\n\n\t* m68k.c (m68k_output_function_prologue,\n\tm68k_output_function_epilogue): Delete versions for DPX2/MOTOROLA\n\tand NEWS/MOTOROLA.\n\t* genattrtab.c: Remove dpx2 comment.\n\t* libgcc2.c (__enable_execute_stack): Delete versions for\n\tNeXT/__MACH__, __convex__, __sysV88__, __pyr__ and\n\tsony_news/SYSTYPE_BSD.\n\t* longlong.h: Delete code for __a29k__, _AM29K, __clipper__,\n\t__gmicro__, __i860__, __NeXT__ and __pyr__.\n\t* rtl.h: Remove convex comment.\n\t* varasm.c: Likewise.\n\nFrom-SVN: r56272", "tree": {"sha": "c946b3e76d1b19092d0ebca5507db8021857973c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c946b3e76d1b19092d0ebca5507db8021857973c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbf2f4797d982be4607bcb1936dc8309e45bed2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf2f4797d982be4607bcb1936dc8309e45bed2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbf2f4797d982be4607bcb1936dc8309e45bed2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbf2f4797d982be4607bcb1936dc8309e45bed2f/comments", "author": null, "committer": null, "parents": [{"sha": "d3969c34076167e10d0c53833f19348db7bd54e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3969c34076167e10d0c53833f19348db7bd54e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3969c34076167e10d0c53833f19348db7bd54e6"}], "stats": {"total": 780, "additions": 18, "deletions": 762}, "files": [{"sha": "5c1ba3cdb5345c1c25f8ff196669ce1034946441", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbf2f4797d982be4607bcb1936dc8309e45bed2f", "patch": "@@ -1,3 +1,17 @@\n+2002-08-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* m68k.c (m68k_output_function_prologue,\n+\tm68k_output_function_epilogue): Delete versions for DPX2/MOTOROLA\n+\tand NEWS/MOTOROLA.\n+\t* genattrtab.c: Remove dpx2 comment.\n+\t* libgcc2.c (__enable_execute_stack): Delete versions for\n+\tNeXT/__MACH__, __convex__, __sysV88__, __pyr__ and\n+\tsony_news/SYSTYPE_BSD.\n+\t* longlong.h: Delete code for __a29k__, _AM29K, __clipper__,\n+\t__gmicro__, __i860__, __NeXT__ and __pyr__.\n+\t* rtl.h: Remove convex comment.\n+\t* varasm.c: Likewise.\n+\n 2002-08-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* c-opts.c (lang_flags): Const-ify."}, {"sha": "43f0fbb8c7c529b94db87d4fd8832d6202531ef8", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 2, "deletions": 429, "changes": 431, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=cbf2f4797d982be4607bcb1936dc8309e45bed2f", "patch": "@@ -245,163 +245,7 @@ m68k_output_function_prologue (stream, size)\n     fprintf (stream, \"\\tmovem $0x%x,-(sp)\\n\", mask);\n }\n \n-#else\n-#if defined (DPX2) && defined (MOTOROLA)\n-\n-static void\n-m68k_output_function_prologue (stream, size)\n-     FILE *stream;\n-     HOST_WIDE_INT size;\n-{\n-  register int regno;\n-  register int mask = 0;\n-  int num_saved_regs = 0, first = 1;\n-  HOST_WIDE_INT fsize = ((size) + 3) & -4;\n-\n-  if (frame_pointer_needed)\n-    {\n-      /* Adding negative number is faster on the 68040.  */\n-      if (fsize < 0x8000 && !TARGET_68040)\n-\tfprintf (stream, \"\\tlink %s,#%d\\n\",\n-\t\t reg_names[FRAME_POINTER_REGNUM], -fsize);\n-      else if (TARGET_68020)\n-\tfprintf (stream, \"\\tlink %s,#%d\\n\",\n-\t\t reg_names[FRAME_POINTER_REGNUM], -fsize);\n-      else\n-\tfprintf (stream, \"\\tlink %s,#0\\n\\tadd.l #%d,sp\\n\",\n-\t\t reg_names[FRAME_POINTER_REGNUM], -fsize);\n-    }\n-  else if (fsize)\n-    {\n-      /* Adding negative number is faster on the 68040.  */\n-      if (fsize + 4 < 0x8000)\n-\tfprintf (stream, \"\\tadd.w #%d,sp\\n\", - (fsize + 4));\n-      else\n-\tfprintf (stream, \"\\tadd.l #%d,sp\\n\", - (fsize + 4));\n-    }\n-\n-  for (regno = 23; regno >= 16; regno--)\n-    if (regs_ever_live[regno] && ! call_used_regs[regno])\n-      {\n-\tif (first)\n-\t  {\n-\t    fprintf (stream, \"\\tfmovem.x %s\", reg_names[regno]);\n-\t    first = 0;\n-\t  }\n-\telse\n-\t  fprintf (stream, \"/%s\", reg_names[regno]);\n-      }\n-  if (!first)\n-    fprintf (stream, \",-(sp)\\n\");\n-\n-  mask = 0;\n-  for (regno = 0; regno < 16; regno++)\n-    if (regs_ever_live[regno] && ! call_used_regs[regno])\n-      {\n-        mask |= 1 << (15 - regno);\n-        num_saved_regs++;\n-      }\n-\n-  if (frame_pointer_needed)\n-    {\n-      mask &= ~ (1 << (15 - FRAME_POINTER_REGNUM));\n-      num_saved_regs--;\n-    }\n-\n-  if (num_saved_regs <= 2)\n-    {\n-      /* Store each separately in the same order moveml uses.\n-         Using two movel instructions instead of a single moveml\n-         is about 15% faster for the 68020 and 68030 at no expense\n-         in code size */\n-\n-      int i;\n-\n-      /* Undo the work from above.  */\n-      for (i = 0; i< 16; i++)\n-        if (mask & (1 << i))\n-          fprintf (stream, \"\\tmove.l %s,-(sp)\\n\", reg_names[15 - i]);\n-    }\n-  else if (mask)\n-    {\n-      first = 1;\n-      for (regno = 0; regno < 16; regno++)\n-        if (mask & (1 << regno))\n-\t  {\n-\t    if (first)\n-\t      {\n-\t\tfprintf (stream, \"\\tmovem.l %s\", reg_names[15 - regno]);\n-\t\tfirst = 0;\n-\t      }\n-\t    else\n-\t      fprintf (stream, \"/%s\", reg_names[15 - regno]);\n-\t  }\n-      fprintf (stream, \",-(sp)\\n\");\n-    }\n-\n-  if (flag_pic && current_function_uses_pic_offset_table)\n-    {\n-      fprintf (stream, \"\\tmove.l #__GLOBAL_OFFSET_TABLE_, %s\\n\",\n-\t       reg_names[PIC_OFFSET_TABLE_REGNUM]);\n-      fprintf (stream, \"\\tlea.l (pc,%s.l),%s\\n\",\n-\t       reg_names[PIC_OFFSET_TABLE_REGNUM],\n-\t       reg_names[PIC_OFFSET_TABLE_REGNUM]);\n-    }\n-}\n-\n-#else\n-#if defined (NEWS) && defined (MOTOROLA)\n-\n-static void\n-m68k_output_function_prologue (stream, size)\n-     FILE *stream;\n-     HOST_WIDE_INT size;\n-{\n-  register int regno;\n-  register int mask = 0;\n-  HOST_WIDE_INT fsize = ((size) + 3) & -4;\n-\n-  if (frame_pointer_needed)\n-    {\n-      if (fsize < 0x8000)\n-\tfprintf (stream, \"\\tlink fp,#%d\\n\", -fsize);\n-      else if (TARGET_68020)\n-\tfprintf (stream, \"\\tlink.l fp,#%d\\n\", -fsize);\n-      else\n-\tfprintf (stream, \"\\tlink fp,#0\\n\\tsub.l #%d,sp\\n\", fsize);\n-    }\n-  else if (fsize)\n-    {\n-      int amt = fsize + 4;\n-      /* Adding negative number is faster on the 68040.  */\n-      if (fsize + 4 < 0x8000)\n-\tasm_fprintf (stream, \"\\tadd.w %0I%d,%Rsp\\n\", - amt);\n-      else\n-\tasm_fprintf (stream, \"\\tadd.l %0I%d,%Rsp\\n\", - amt);\n-    }\n-\n-  for (regno = 16; regno < FIRST_PSEUDO_REGISTER; regno++)\n-    if (regs_ever_live[regno] && ! call_used_regs[regno])\n-      mask |= 1 << (regno - 16);\n-\n-  if (mask != 0)\n-    fprintf (stream, \"\\tfmovem.x #0x%x,-(sp)\\n\", mask & 0xff);\n-\n-  mask = 0;\n-  for (regno = 0; regno < 16; regno++)\n-    if (regs_ever_live[regno] && ! call_used_regs[regno])\n-      mask |= 1 << (15 - regno);\n-\n-  if (frame_pointer_needed)\n-    mask &= ~ (1 << (15-FRAME_POINTER_REGNUM));\n-\n-  if (exact_log2 (mask) >= 0)\n-    fprintf (stream, \"\\tmove.l %s,-(sp)\\n\", reg_names[15 - exact_log2 (mask)]);\n-  else\n-    if (mask) fprintf (stream, \"\\tmovem.l #0x%x,-(sp)\\n\", mask);\n-}\n-\n-#else  /* !CRDS && ! (NEWS && MOTOROLA) && ! (DPX2 && MOTOROLA) */\n+#else  /* !CRDS */\n \n static void\n m68k_output_function_prologue (stream, size)\n@@ -767,8 +611,6 @@ m68k_output_function_prologue (stream, size)\n #endif\n     }\n }\n-#endif   /* ! (DPX2 && MOTOROLA)  */\n-#endif   /* ! (NEWS && MOTOROLA)  */\n #endif   /* !CRDS  */\n \f\n /* Return true if this function's epilogue can be output as RTL.  */\n@@ -913,273 +755,7 @@ m68k_output_function_epilogue (stream, size)\n     fprintf (stream, \"\\trts\\n\");\n }\n \n-#else\n-#if defined (DPX2) && defined (MOTOROLA)\n-\n-static void\n-m68k_output_function_epilogue (stream, size)\n-     FILE *stream;\n-     HOST_WIDE_INT size;\n-{\n-  register int regno;\n-  register int mask, fmask;\n-  register int nregs;\n-  HOST_WIDE_INT offset, foffset, fpoffset, first = 1;\n-  HOST_WIDE_INT fsize = ((size) + 3) & -4;\n-  int big = 0;\n-  rtx insn = get_last_insn ();\n-\n-  /* If the last insn was a BARRIER, we don't have to write any code.  */\n-  if (GET_CODE (insn) == NOTE)\n-    insn = prev_nonnote_insn (insn);\n-  if (insn && GET_CODE (insn) == BARRIER)\n-    {\n-      /* Output just a no-op so that debuggers don't get confused\n-\t about which function the pc is in at this address.  */\n-      fprintf (stream, \"\\tnop\\n\");\n-      return;\n-    }\n-\n-  nregs = 0;  fmask = 0; fpoffset = 0;\n-  for (regno = 16; regno < 24; regno++)\n-    if (regs_ever_live[regno] && ! call_used_regs[regno])\n-      {\n-        nregs++;\n-\tfmask |= 1 << (23 - regno);\n-      }\n-\n-  foffset = fpoffset + nregs * 12;\n-  nregs = 0;  mask = 0;\n-  if (frame_pointer_needed)\n-    regs_ever_live[FRAME_POINTER_REGNUM] = 0;\n-\n-  for (regno = 0; regno < 16; regno++)\n-    if (regs_ever_live[regno] && ! call_used_regs[regno])\n-      {\n-        nregs++;\n-\tmask |= 1 << regno;\n-      }\n-\n-  offset = foffset + nregs * 4;\n-  if (offset + fsize >= 0x8000\n-      && frame_pointer_needed\n-      && (mask || fmask || fpoffset))\n-    {\n-      fprintf (stream, \"\\tmove.l #%d,a0\\n\", -fsize);\n-      fsize = 0, big = 1;\n-    }\n-\n-  if (nregs <= 2)\n-    {\n-      /* Restore each separately in the same order moveml does.\n-         Using two movel instructions instead of a single moveml\n-         is about 15% faster for the 68020 and 68030 at no expense\n-         in code size.  */\n-\n-      int i;\n-\n-      /* Undo the work from above.  */\n-      for (i = 0; i< 16; i++)\n-        if (mask & (1 << i))\n-          {\n-            if (big)\n-\t      fprintf (stream, \"\\tmove.l -%d(%s,a0.l),%s\\n\",\n-\t\t       offset + fsize,\n-\t\t       reg_names[FRAME_POINTER_REGNUM],\n-\t\t       reg_names[i]);\n-            else if (! frame_pointer_needed)\n-\t      fprintf (stream, \"\\tmove.l (sp)+,%s\\n\",\n-\t\t       reg_names[i]);\n-            else\n-\t      fprintf (stream, \"\\tmove.l -%d(%s),%s\\n\",\n-\t\t       offset + fsize,\n-\t\t       reg_names[FRAME_POINTER_REGNUM],\n-\t\t       reg_names[i]);\n-            offset = offset - 4;\n-          }\n-    }\n-  else if (mask)\n-    {\n-      first = 1;\n-      for (regno = 0; regno < 16; regno++)\n-        if (mask & (1 << regno))\n-\t  {\n-\t    if (first && big)\n-\t      {\n-\t\tfprintf (stream, \"\\tmovem.l -%d(%s,a0.l),%s\",\n-\t\t\t offset + fsize,\n-\t\t\t reg_names[FRAME_POINTER_REGNUM],\n-\t\t\t reg_names[regno]);\n-\t\tfirst = 0;\n-\t      }\n-\t    else if (first && ! frame_pointer_needed)\n-\t      {\n-\t\tfprintf (stream, \"\\tmovem.l (sp)+,%s\",\n-\t\t\t reg_names[regno]);\n-\t\tfirst = 0;\n-\t      }\n-\t    else if (first)\n-\t      {\n-\t\tfprintf (stream, \"\\tmovem.l -%d(%s),%s\",\n-\t\t\t offset + fsize,\n-\t\t\t reg_names[FRAME_POINTER_REGNUM],\n-\t\t\t reg_names[regno]);\n-\t\tfirst = 0;\n-\t      }\n-\t    else\n-\t      fprintf (stream, \"/%s\", reg_names[regno]);\n-\t  }\n-      fprintf (stream, \"\\n\");\n-    }\n-\n-  if (fmask)\n-    {\n-      first = 1;\n-      for (regno = 16; regno < 24; regno++)\n-        if (fmask & (1 << (23 - regno)))\n-\t  {\n-\t    if (first && big)\n-\t      {\n-\t\tfprintf (stream, \"\\tfmovem.x -%d(%s,a0.l),%s\",\n-\t\t\t foffset + fsize,\n-\t\t\t reg_names[FRAME_POINTER_REGNUM],\n-\t\t\t reg_names[regno]);\n-\t\tfirst = 0;\n-\t      }\n-\t    else if (first && ! frame_pointer_needed)\n-\t      {\n-\t\tfprintf (stream, \"\\tfmovem.x (sp)+,%s\",\n-\t\t\t reg_names[regno]);\n-\t\tfirst = 0;\n-\t      }\n-\t    else if (first)\n-\t      {\n-\t\tfprintf (stream, \"\\tfmovem.x -%d(%s),%s\",\n-\t\t\t foffset + fsize,\n-\t\t\t reg_names[FRAME_POINTER_REGNUM],\n-\t\t\t reg_names[regno]);\n-\t\tfirst = 0;\n-\t      }\n-\t    else\n-\t      fprintf (stream, \"/%s\", reg_names[regno]);\n-\t  }\n-      fprintf (stream, \"\\n\");\n-    }\n-\n-  if (frame_pointer_needed)\n-    fprintf (stream, \"\\tunlk %s\\n\",\n-\t     reg_names[FRAME_POINTER_REGNUM]);\n-  else if (fsize)\n-    {\n-      if (fsize + 4 < 0x8000)\n-\tfprintf (stream, \"\\tadd.w #%d,sp\\n\", fsize + 4);\n-      else\n-\tfprintf (stream, \"\\tadd.l #%d,sp\\n\", fsize + 4);\n-    }\n-\n-  if (current_function_pops_args)\n-    fprintf (stream, \"\\trtd #%d\\n\", current_function_pops_args);\n-  else\n-    fprintf (stream, \"\\trts\\n\");\n-}\n-\n-#else\n-#if defined (NEWS) && defined (MOTOROLA)\n-\n-static void\n-m68k_output_function_epilogue (stream, size)\n-     FILE *stream;\n-     HOST_WIDE_INT size;\n-{\n-  register int regno;\n-  register int mask, fmask;\n-  register int nregs;\n-  HOST_WIDE_INT offset, foffset;\n-  HOST_WIDE_INT fsize = ((size) + 3) & -4;\n-  int big = 0;\n-\n-  nregs = 0;  fmask = 0;\n-  for (regno = 16; regno < FIRST_PSEUDO_REGISTER; regno++)\n-    if (regs_ever_live[regno] && ! call_used_regs[regno])\n-      {\n-\tnregs++;\n-\tfmask |= 1 << (23 - regno);\n-      }\n-\n-  foffset = nregs * 12;\n-  nregs = 0;  mask = 0;\n-  if (frame_pointer_needed)\n-    regs_ever_live[FRAME_POINTER_REGNUM] = 0;\n-\n-  for (regno = 0; regno < 16; regno++)\n-    if (regs_ever_live[regno] && ! call_used_regs[regno])\n-      {\n-\tnregs++;\n-\tmask |= 1 << regno;\n-      }\n-\n-  offset = foffset + nregs * 4;\n-  if (offset + fsize >= 0x8000\n-      && frame_pointer_needed\n-      && (mask || fmask))\n-    {\n-      fprintf (stream, \"\\tmove.l #%d,a0\\n\", -fsize);\n-      fsize = 0, big = 1;\n-    }\n-\n-  if (exact_log2 (mask) >= 0)\n-    {\n-      if (big)\n-\tfprintf (stream, \"\\tmove.l (-%d,fp,a0.l),%s\\n\",\n-\t\t offset + fsize, reg_names[exact_log2 (mask)]);\n-      else if (! frame_pointer_needed)\n-\tfprintf (stream, \"\\tmove.l (sp)+,%s\\n\",\n-\t\t reg_names[exact_log2 (mask)]);\n-      else\n-\tfprintf (stream, \"\\tmove.l (-%d,fp),%s\\n\",\n-\t\t offset + fsize, reg_names[exact_log2 (mask)]);\n-    }\n-  else if (mask)\n-    {\n-      if (big)\n-\tfprintf (stream, \"\\tmovem.l (-%d,fp,a0.l),#0x%x\\n\",\n-\t\t offset + fsize, mask);\n-      else if (! frame_pointer_needed)\n-\tfprintf (stream, \"\\tmovem.l (sp)+,#0x%x\\n\", mask);\n-      else\n-\tfprintf (stream, \"\\tmovem.l (-%d,fp),#0x%x\\n\",\n-\t\t offset + fsize, mask);\n-    }\n-\n-  if (fmask)\n-    {\n-      if (big)\n-\tfprintf (stream, \"\\tfmovem.x (-%d,fp,a0.l),#0x%x\\n\",\n-\t\t foffset + fsize, fmask);\n-      else if (! frame_pointer_needed)\n-\tfprintf (stream, \"\\tfmovem.x (sp)+,#0x%x\\n\", fmask);\n-      else\n-\tfprintf (stream, \"\\tfmovem.x (-%d,fp),#0x%x\\n\",\n-\t\t foffset + fsize, fmask);\n-    }\n-\n-  if (frame_pointer_needed)\n-    fprintf (stream, \"\\tunlk fp\\n\");\n-  else if (fsize)\n-    {\n-      if (fsize + 4 < 0x8000)\n-\tfprintf (stream, \"\\tadd.w #%d,sp\\n\", fsize + 4);\n-      else\n-\tfprintf (stream, \"\\tadd.l #%d,sp\\n\", fsize + 4);\n-    }\n-\n-  if (current_function_pops_args)\n-    fprintf (stream, \"\\trtd #%d\\n\", current_function_pops_args);\n-  else\n-    fprintf (stream, \"\\trts\\n\");\n-}\n-\n-#else  /* !CRDS && ! (NEWS && MOTOROLA) && ! (DPX2 && MOTOROLA) */\n+#else  /* !CRDS */\n \n static void\n m68k_output_function_epilogue (stream, size)\n@@ -1501,9 +1077,6 @@ m68k_output_function_epilogue (stream, size)\n   else\n     fprintf (stream, \"\\trts\\n\");\n }\n-\n-#endif   /* ! (DPX2 && MOTOROLA)  */\n-#endif   /* ! (NEWS && MOTOROLA)  */\n #endif   /* !CRDS  */\n \f\n /* Similar to general_operand, but exclude stack_pointer_rtx.  */"}, {"sha": "5518adc126e41ffd3ca812a50d9a87d5f5b5faaa", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=cbf2f4797d982be4607bcb1936dc8309e45bed2f", "patch": "@@ -390,7 +390,6 @@ static void expand_units\tPARAMS ((void));\n static rtx simplify_knowing\tPARAMS ((rtx, rtx));\n static rtx encode_units_mask\tPARAMS ((rtx));\n static void fill_attr\t\tPARAMS ((struct attr_desc *));\n-/* dpx2 compiler chokes if we specify the arg types of the args.  */\n static rtx substitute_address\tPARAMS ((rtx, rtx (*) (rtx), rtx (*) (rtx)));\n static void make_length_attrs\tPARAMS ((void));\n static rtx identity_fn\t\tPARAMS ((rtx));"}, {"sha": "c88b24f2bcf176b0b6899d666324eaa47bb3bcc9", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=cbf2f4797d982be4607bcb1936dc8309e45bed2f", "patch": "@@ -1732,102 +1732,6 @@ mprotect (char *addr, int len, int prot)\n TRANSFER_FROM_TRAMPOLINE\n #endif\n \n-#if defined (NeXT) && defined (__MACH__)\n-\n-/* Make stack executable so we can call trampolines on stack.\n-   This is called from INITIALIZE_TRAMPOLINE in next.h.  */\n-#ifdef NeXTStep21\n- #include <mach.h>\n-#else\n- #include <mach/mach.h>\n-#endif\n-\n-void\n-__enable_execute_stack (char *addr)\n-{\n-  kern_return_t r;\n-  char *eaddr = addr + TRAMPOLINE_SIZE;\n-  vm_address_t a = (vm_address_t) addr;\n-\n-  /* turn on execute access on stack */\n-  r = vm_protect (task_self (), a, TRAMPOLINE_SIZE, FALSE, VM_PROT_ALL);\n-  if (r != KERN_SUCCESS)\n-    {\n-      mach_error(\"vm_protect VM_PROT_ALL\", r);\n-      exit(1);\n-    }\n-\n-  /* We inline the i-cache invalidation for speed */\n-\n-#ifdef CLEAR_INSN_CACHE\n-  CLEAR_INSN_CACHE (addr, eaddr);\n-#else\n-  __clear_cache ((int) addr, (int) eaddr);\n-#endif\n-}\n-\n-#endif /* defined (NeXT) && defined (__MACH__) */\n-\n-#ifdef __convex__\n-\n-/* Make stack executable so we can call trampolines on stack.\n-   This is called from INITIALIZE_TRAMPOLINE in convex.h.  */\n-\n-#include <sys/mman.h>\n-#include <sys/vmparam.h>\n-#include <machine/machparam.h>\n-\n-void\n-__enable_execute_stack (void)\n-{\n-  int fp;\n-  static unsigned lowest = USRSTACK;\n-  unsigned current = (unsigned) &fp & -NBPG;\n-\n-  if (lowest > current)\n-    {\n-      unsigned len = lowest - current;\n-      mremap (current, &len, PROT_READ | PROT_WRITE | PROT_EXEC, MAP_PRIVATE);\n-      lowest = current;\n-    }\n-\n-  /* Clear instruction cache in case an old trampoline is in it.  */\n-  asm (\"pich\");\n-}\n-#endif /* __convex__ */\n-\n-#ifdef __sysV88__\n-\n-/* Modified from the convex -code above.  */\n-\n-#include <sys/param.h>\n-#include <errno.h>\n-#include <sys/m88kbcs.h>\n-\n-void\n-__enable_execute_stack (void)\n-{\n-  int save_errno;\n-  static unsigned long lowest = USRSTACK;\n-  unsigned long current = (unsigned long) &save_errno & -NBPC;\n-\n-  /* Ignore errno being set. memctl sets errno to EINVAL whenever the\n-     address is seen as 'negative'. That is the case with the stack.  */\n-\n-  save_errno=errno;\n-  if (lowest > current)\n-    {\n-      unsigned len=lowest-current;\n-      memctl(current,len,MCT_TEXT);\n-      lowest = current;\n-    }\n-  else\n-    memctl(current,NBPC,MCT_TEXT);\n-  errno=save_errno;\n-}\n-\n-#endif /* __sysV88__ */\n-\n #ifdef __sysV68__\n \n #include <sys/signal.h>\n@@ -1872,57 +1776,6 @@ __clear_insn_cache (void)\n }\n \n #endif /* __sysV68__ */\n-\n-#ifdef __pyr__\n-\n-#undef NULL /* Avoid errors if stdio.h and our stddef.h mismatch.  */\n-#include <stdio.h>\n-#include <sys/mman.h>\n-#include <sys/types.h>\n-#include <sys/param.h>\n-#include <sys/vmmac.h>\n-\n-/* Modified from the convex -code above.\n-   mremap promises to clear the i-cache.  */\n-\n-void\n-__enable_execute_stack (void)\n-{\n-  int fp;\n-  if (mprotect (((unsigned int)&fp/PAGSIZ)*PAGSIZ, PAGSIZ,\n-\t\tPROT_READ|PROT_WRITE|PROT_EXEC))\n-    {\n-      perror (\"mprotect in __enable_execute_stack\");\n-      fflush (stderr);\n-      abort ();\n-    }\n-}\n-#endif /* __pyr__ */\n-\n-#if defined (sony_news) && defined (SYSTYPE_BSD)\n-\n-#include <stdio.h>\n-#include <sys/types.h>\n-#include <sys/param.h>\n-#include <syscall.h>\n-#include <machine/sysnews.h>\n-\n-/* cacheflush function for NEWS-OS 4.2.\n-   This function is called from trampoline-initialize code\n-   defined in config/mips/mips.h.  */\n-\n-void\n-cacheflush (char *beg, int size, int flag)\n-{\n-  if (syscall (SYS_sysnews, NEWS_CACHEFLUSH, beg, size, FLUSH_BCACHE))\n-    {\n-      perror (\"cache_flush\");\n-      fflush (stderr);\n-      abort ();\n-    }\n-}\n-\n-#endif /* sony_news */\n #endif /* L_trampoline */\n \f\n #ifndef __CYGWIN__"}, {"sha": "40f03fe2a0e29a583c264691983a0ece7ee11350", "filename": "gcc/longlong.h", "status": "modified", "additions": 2, "deletions": 182, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=cbf2f4797d982be4607bcb1936dc8309e45bed2f", "patch": "@@ -107,49 +107,6 @@\n #define __AND_CLOBBER_CC , \"cc\"\n #endif /* __GNUC__ < 2 */\n \n-#if (defined (__a29k__) || defined (_AM29K)) && W_TYPE_SIZE == 32\n-#define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"add %1,%4,%5\\n\\taddc %0,%2,%3\"\t\t\t\t\\\n-\t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n-\t    \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n-\t   : \"%r\" ((USItype) (ah)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype) (bh)),\t\t\t\t\t\\\n-\t     \"%r\" ((USItype) (al)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype) (bl)))\n-#define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"sub %1,%4,%5\\n\\tsubc %0,%2,%3\"\t\t\t\t\\\n-\t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n-\t   : \"r\" ((USItype) (ah)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype) (bh)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype) (al)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype) (bl)))\n-#define umul_ppmm(xh, xl, m0, m1) \\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    USItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\\n-    __asm__ (\"multiplu %0,%1,%2\"\t\t\t\t\t\\\n-\t     : \"=r\" ((USItype) (xl))\t\t\t\t\t\\\n-\t     : \"r\" (__m0),\t\t\t\t\t\t\\\n-\t       \"r\" (__m1));\t\t\t\t\t\t\\\n-    __asm__ (\"multmu %0,%1,%2\"\t\t\t\t\t\t\\\n-\t     : \"=r\" ((USItype) (xh))\t\t\t\t\t\\\n-\t     : \"r\" (__m0),\t\t\t\t\t\t\\\n-\t       \"r\" (__m1));\t\t\t\t\t\t\\\n-  } while (0)\n-#define udiv_qrnnd(q, r, n1, n0, d) \\\n-  __asm__ (\"dividu %0,%3,%4\"\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype) (q)),\t\t\t\t\t\\\n-\t     \"=q\" ((USItype) (r))\t\t\t\t\t\\\n-\t   : \"1\" ((USItype) (n1)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype) (n0)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype) (d)))\n-#define count_leading_zeros(count, x) \\\n-    __asm__ (\"clz %0,%1\"\t\t\t\t\t\t\\\n-\t     : \"=r\" ((USItype) (count))\t\t\t\t\t\\\n-\t     : \"r\" ((USItype) (x)))\n-#define COUNT_LEADING_ZEROS_0 32\n-#endif /* __a29k__ */\n-\n #if defined (__alpha) && W_TYPE_SIZE == 64\n #define umul_ppmm(ph, pl, m0, m1) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n@@ -275,71 +232,6 @@ UDItype __umulsidi3 (USItype, USItype);\n #define UDIV_TIME 100\n #endif /* __arm__ */\n \n-#if defined (__clipper__) && W_TYPE_SIZE == 32\n-#define umul_ppmm(w1, w0, u, v) \\\n-  ({union {UDItype __ll;\t\t\t\t\t\t\\\n-\t   struct {USItype __l, __h;} __i;\t\t\t\t\\\n-\t  } __xx;\t\t\t\t\t\t\t\\\n-  __asm__ (\"mulwux %2,%0\"\t\t\t\t\t\t\\\n-\t   : \"=r\" (__xx.__ll)\t\t\t\t\t\t\\\n-\t   : \"%0\" ((USItype) (u)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype) (v)));\t\t\t\t\t\\\n-  (w1) = __xx.__i.__h; (w0) = __xx.__i.__l;})\n-#define smul_ppmm(w1, w0, u, v) \\\n-  ({union {DItype __ll;\t\t\t\t\t\t\t\\\n-\t   struct {SItype __l, __h;} __i;\t\t\t\t\\\n-\t  } __xx;\t\t\t\t\t\t\t\\\n-  __asm__ (\"mulwx %2,%0\"\t\t\t\t\t\t\\\n-\t   : \"=r\" (__xx.__ll)\t\t\t\t\t\t\\\n-\t   : \"%0\" ((SItype) (u)),\t\t\t\t\t\\\n-\t     \"r\" ((SItype) (v)));\t\t\t\t\t\\\n-  (w1) = __xx.__i.__h; (w0) = __xx.__i.__l;})\n-#define __umulsidi3(u, v) \\\n-  ({UDItype __w;\t\t\t\t\t\t\t\\\n-    __asm__ (\"mulwux %2,%0\"\t\t\t\t\t\t\\\n-\t     : \"=r\" (__w)\t\t\t\t\t\t\\\n-\t     : \"%0\" ((USItype) (u)),\t\t\t\t\t\\\n-\t       \"r\" ((USItype) (v)));\t\t\t\t\t\\\n-    __w; })\n-#endif /* __clipper__ */\n-\n-#if defined (__gmicro__) && W_TYPE_SIZE == 32\n-#define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"add.w %5,%1\\n\\taddx %3,%0\"\t\t\t\t\t\\\n-\t   : \"=g\" ((USItype) (sh)),\t\t\t\t\t\\\n-\t     \"=&g\" ((USItype) (sl))\t\t\t\t\t\\\n-\t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n-\t     \"%1\" ((USItype) (al)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (bl)))\n-#define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"sub.w %5,%1\\n\\tsubx %3,%0\"\t\t\t\t\t\\\n-\t   : \"=g\" ((USItype) (sh)),\t\t\t\t\t\\\n-\t     \"=&g\" ((USItype) (sl))\t\t\t\t\t\\\n-\t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n-\t     \"1\" ((USItype) (al)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (bl)))\n-#define umul_ppmm(ph, pl, m0, m1) \\\n-  __asm__ (\"mulx %3,%0,%1\"\t\t\t\t\t\t\\\n-\t   : \"=g\" ((USItype) (ph)),\t\t\t\t\t\\\n-\t     \"=r\" ((USItype) (pl))\t\t\t\t\t\\\n-\t   : \"%0\" ((USItype) (m0)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (m1)))\n-#define udiv_qrnnd(q, r, nh, nl, d) \\\n-  __asm__ (\"divx %4,%0,%1\"\t\t\t\t\t\t\\\n-\t   : \"=g\" ((USItype) (q)),\t\t\t\t\t\\\n-\t     \"=r\" ((USItype) (r))\t\t\t\t\t\\\n-\t   : \"1\" ((USItype) (nh)),\t\t\t\t\t\\\n-\t     \"0\" ((USItype) (nl)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (d)))\n-#define count_leading_zeros(count, x) \\\n-  __asm__ (\"bsch/1 %1,%0\"\t\t\t\t\t\t\\\n-\t   : \"=g\" (count)\t\t\t\t\t\t\\\n-\t   : \"g\" ((USItype) (x)),\t\t\t\t\t\\\n-\t     \"0\" ((USItype) 0))\n-#endif\n-\n #if defined (__hppa) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"add %4,%5,%1\\n\\taddc %2,%3,%0\"\t\t\t\t\\\n@@ -484,47 +376,6 @@ UDItype __umulsidi3 (USItype, USItype);\n #define UDIV_TIME 40\n #endif /* 80x86 */\n \n-#if defined (__i860__) && W_TYPE_SIZE == 32\n-#if 0\n-/* Make sure these patterns really improve the code before\n-   switching them on.  */\n-#define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    union\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tDItype __ll;\t\t\t\t\t\t\t\\\n-\tstruct {USItype __l, __h;} __i;\t\t\t\t\t\\\n-      }  __a, __b, __s;\t\t\t\t\t\t\t\\\n-    __a.__i.__l = (al);\t\t\t\t\t\t\t\\\n-    __a.__i.__h = (ah);\t\t\t\t\t\t\t\\\n-    __b.__i.__l = (bl);\t\t\t\t\t\t\t\\\n-    __b.__i.__h = (bh);\t\t\t\t\t\t\t\\\n-    __asm__ (\"fiadd.dd %1,%2,%0\"\t\t\t\t\t\\\n-\t     : \"=f\" (__s.__ll)\t\t\t\t\t\t\\\n-\t     : \"%f\" (__a.__ll), \"f\" (__b.__ll));\t\t\t\\\n-    (sh) = __s.__i.__h;\t\t\t\t\t\t\t\\\n-    (sl) = __s.__i.__l;\t\t\t\t\t\t\t\\\n-    } while (0)\n-#define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    union\t\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tDItype __ll;\t\t\t\t\t\t\t\\\n-\tstruct {USItype __l, __h;} __i;\t\t\t\t\t\\\n-      }  __a, __b, __s;\t\t\t\t\t\t\t\\\n-    __a.__i.__l = (al);\t\t\t\t\t\t\t\\\n-    __a.__i.__h = (ah);\t\t\t\t\t\t\t\\\n-    __b.__i.__l = (bl);\t\t\t\t\t\t\t\\\n-    __b.__i.__h = (bh);\t\t\t\t\t\t\t\\\n-    __asm__ (\"fisub.dd %1,%2,%0\"\t\t\t\t\t\\\n-\t     : \"=f\" (__s.__ll)\t\t\t\t\t\t\\\n-\t     : \"%f\" (__a.__ll), \"f\" (__b.__ll));\t\t\t\\\n-    (sh) = __s.__i.__h;\t\t\t\t\t\t\t\\\n-    (sl) = __s.__i.__l;\t\t\t\t\t\t\t\\\n-    } while (0)\n-#endif\n-#endif /* __i860__ */\n-\n #if defined (__i960__) && W_TYPE_SIZE == 32\n #define umul_ppmm(w1, w0, u, v) \\\n   ({union {UDItype __ll;\t\t\t\t\t\t\\\n@@ -589,8 +440,7 @@ UDItype __umulsidi3 (USItype, USItype);\n #if defined (__mc68020__) || defined(mc68020) \\\n \t|| defined(__mc68030__) || defined(mc68030) \\\n \t|| defined(__mc68040__) || defined(mc68040) \\\n-\t|| defined(__mcpu32__) || defined(mcpu32) \\\n-\t|| defined(__NeXT__)\n+\t|| defined(__mcpu32__) || defined(mcpu32)\n #define umul_ppmm(w1, w0, u, v) \\\n   __asm__ (\"mulu%.l %3,%1:%0\"\t\t\t\t\t\t\\\n \t   : \"=d\" ((USItype) (w0)),\t\t\t\t\t\\\n@@ -658,8 +508,7 @@ UDItype __umulsidi3 (USItype, USItype);\n #if defined (__mc68020__) || defined(mc68020) \\\n \t|| defined(__mc68030__) || defined(mc68030) \\\n \t|| defined(__mc68040__) || defined(mc68040) \\\n-\t|| defined(__mc68060__) || defined(mc68060) \\\n-\t|| defined(__NeXT__)\n+\t|| defined(__mc68060__) || defined(mc68060)\n #define count_leading_zeros(count, x) \\\n   __asm__ (\"bfffo %1{%b2:%b2},%0\"\t\t\t\t\t\\\n \t   : \"=d\" ((USItype) (count))\t\t\t\t\t\\\n@@ -894,35 +743,6 @@ UDItype __umulsidi3 (USItype, USItype);\n #endif\n #endif /* Power architecture variants.  */\n \n-#if defined (__pyr__) && W_TYPE_SIZE == 32\n-#define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"addw\t%5,%1\\n\\taddwc\t%3,%0\"\t\t\t\t\\\n-\t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n-\t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n-\t     \"%1\" ((USItype) (al)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (bl)))\n-#define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subw\t%5,%1\\n\\tsubwb\t%3,%0\"\t\t\t\t\\\n-\t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n-\t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n-\t     \"1\" ((USItype) (al)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (bl)))\n-/* This insn works on Pyramids with AP, XP, or MI CPUs, but not with SP.  */\n-#define umul_ppmm(w1, w0, u, v) \\\n-  ({union {UDItype __ll;\t\t\t\t\t\t\\\n-\t   struct {USItype __h, __l;} __i;\t\t\t\t\\\n-\t  } __xx;\t\t\t\t\t\t\t\\\n-  __asm__ (\"movw %1,%R0\\n\\tuemul %2,%0\"\t\t\t\t\t\\\n-\t   : \"=&r\" (__xx.__ll)\t\t\t\t\t\t\\\n-\t   : \"g\" ((USItype) (u)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (v)));\t\t\t\t\t\\\n-  (w1) = __xx.__i.__h; (w0) = __xx.__i.__l;})\n-#endif /* __pyr__ */\n-\n #if defined (__ibm032__) /* RT/ROMP */ && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"a %1,%5\\n\\tae %0,%3\"\t\t\t\t\t\\"}, {"sha": "d493956dcf06fa5d784a381308d03c469221d113", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=cbf2f4797d982be4607bcb1936dc8309e45bed2f", "patch": "@@ -1213,7 +1213,6 @@ do {\t\t\t\t\t\t\\\n /* Define a macro to look for REG_INC notes,\n    but save time on machines where they never exist.  */\n \n-/* Don't continue this line--convex cc version 4.1 would lose.  */\n #if (defined (HAVE_PRE_INCREMENT) || defined (HAVE_PRE_DECREMENT) || defined (HAVE_POST_INCREMENT) || defined (HAVE_POST_DECREMENT))\n #define FIND_REG_INC_NOTE(INSN, REG)\t\t\t\\\n   ((REG) != NULL_RTX && REG_P ((REG))\t\t\t\\\n@@ -1226,7 +1225,6 @@ do {\t\t\t\t\t\t\\\n /* Indicate whether the machine has any sort of auto increment addressing.\n    If not, we can avoid checking for REG_INC notes.  */\n \n-/* Don't continue this line--convex cc version 4.1 would lose.  */\n #if (defined (HAVE_PRE_INCREMENT) || defined (HAVE_PRE_DECREMENT) || defined (HAVE_POST_INCREMENT) || defined (HAVE_POST_DECREMENT))\n #define AUTO_INC_DEC\n #endif"}, {"sha": "c826849f4ac1d642d38f8b61810f6f5f8fde22da", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbf2f4797d982be4607bcb1936dc8309e45bed2f/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=cbf2f4797d982be4607bcb1936dc8309e45bed2f", "patch": "@@ -1614,7 +1614,6 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n       rounded = (rounded / (BIGGEST_ALIGNMENT / BITS_PER_UNIT)\n \t\t * (BIGGEST_ALIGNMENT / BITS_PER_UNIT));\n \n-/* Don't continue this line--convex cc version 4.1 would lose.  */\n #if !defined(ASM_OUTPUT_ALIGNED_COMMON) && !defined(ASM_OUTPUT_ALIGNED_DECL_COMMON) && !defined(ASM_OUTPUT_ALIGNED_BSS)\n       if ((unsigned HOST_WIDE_INT) DECL_ALIGN (decl) / BITS_PER_UNIT > rounded)\n \twarning_with_decl"}]}