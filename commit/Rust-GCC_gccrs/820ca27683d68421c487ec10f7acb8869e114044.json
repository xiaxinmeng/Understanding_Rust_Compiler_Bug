{"sha": "820ca27683d68421c487ec10f7acb8869e114044", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIwY2EyNzY4M2Q2ODQyMWM0ODdlYzEwZjdhY2I4ODY5ZTExNDA0NA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2009-07-29T01:07:58Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2009-07-29T01:07:58Z"}, "message": "mep.c (vtext_section): New.\n\n* config/mep/mep.c (vtext_section): New.\n(vftext_section): New.\n(ftext_section): New.\n(mep_select_section): Add support for functions.\n(mep_unique_section): Likewise.\n(mep_asm_init_sections): Likewise.\n\nFrom-SVN: r150193", "tree": {"sha": "4d215ba3d045266b29c26ab059ac4425e0a105c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d215ba3d045266b29c26ab059ac4425e0a105c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/820ca27683d68421c487ec10f7acb8869e114044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820ca27683d68421c487ec10f7acb8869e114044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/820ca27683d68421c487ec10f7acb8869e114044", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820ca27683d68421c487ec10f7acb8869e114044/comments", "author": null, "committer": null, "parents": [{"sha": "b54e4d7e1e655a4d0994fa816b45879216f2bf0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b54e4d7e1e655a4d0994fa816b45879216f2bf0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b54e4d7e1e655a4d0994fa816b45879216f2bf0a"}], "stats": {"total": 99, "additions": 65, "deletions": 34}, "files": [{"sha": "f603e0462373f4422e2a52e4865a31300cdb7177", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820ca27683d68421c487ec10f7acb8869e114044/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820ca27683d68421c487ec10f7acb8869e114044/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=820ca27683d68421c487ec10f7acb8869e114044", "patch": "@@ -1,3 +1,14 @@\n+2009-07-28  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/mep/mep.c (vtext_section): New.\n+\t(vftext_section): New.\n+\t(ftext_section): New.\n+\t(mep_select_section): Add support for functions.\n+\t(mep_unique_section): Likewise.\n+\t(mep_asm_init_sections): Likewise.\n+\n+\t* config/mep/mep.h (USE_SELECT_SECTION_FOR_FUNCTIONS): Define.\n+\n 2009-07-28  Paolo Bonzini  <bonzinI@gnu.org>\n \n \t* tree.h (TREE_DEPRECATED): Document it is used for types too."}, {"sha": "dd229ee05d38c0a3cf2bad1692ec1ea9a89480cf", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 52, "deletions": 34, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820ca27683d68421c487ec10f7acb8869e114044/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820ca27683d68421c487ec10f7acb8869e114044/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=820ca27683d68421c487ec10f7acb8869e114044", "patch": "@@ -129,6 +129,10 @@ static GTY(()) section * farbss_section;\n static GTY(()) section * frodata_section;\n static GTY(()) section * srodata_section;\n \n+static GTY(()) section * vtext_section;\n+static GTY(()) section * vftext_section;\n+static GTY(()) section * ftext_section;\n+\n static void mep_set_leaf_registers (int);\n static bool symbol_p (rtx);\n static bool symbolref_p (rtx);\n@@ -4553,38 +4557,6 @@ mep_encode_section_info (tree decl, rtx rtl, int first)\n \t\t   maxsize);\n \t}\n     }\n-\n-  /* Functions do not go through select_section, so we force it here\n-     by using the DECL_SECTION_NAME as if the user specified the\n-     .vtext or .ftext sections.  */\n-  if (! DECL_SECTION_NAME (decl)\n-      && TREE_CODE (decl) == FUNCTION_DECL)\n-    {\n-      tree secname;\n-\n-      if (lookup_attribute (\"vliw\", TYPE_ATTRIBUTES (TREE_TYPE (decl))))\n-\t{\n-\t  if (encoding == 'f')\n-\t    DECL_SECTION_NAME (decl) = build_string (7, \".vftext\");\n-\t  else\n-\t    DECL_SECTION_NAME (decl) = build_string (6, \".vtext\");\n-\t}\n-      else if (encoding == 'f')\n-\t{\n-\t  if (flag_function_sections || DECL_ONE_ONLY (decl))\n-\t    mep_unique_section (decl, 0);\n-\t  else\n-\t    DECL_SECTION_NAME (decl) = build_string (6, \".ftext\");\n-\t}\n-\n-      /* This is so we can control inlining.  It does not matter what\n-         attribute we add, just that it has one.  */\n-      secname = build_tree_list (get_identifier (\"section\"), DECL_SECTION_NAME (decl));\n-      if (TYPE_P (decl))\n-\tTYPE_ATTRIBUTES (decl) = chainon (TYPE_ATTRIBUTES (decl), secname);\n-      else\n-\tDECL_ATTRIBUTES (decl) = chainon (DECL_ATTRIBUTES (decl), secname);\n-    }\n }\n \n const char *\n@@ -4606,6 +4578,7 @@ mep_select_section (tree decl, int reloc ATTRIBUTE_UNUSED,\n \t\t    unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED)\n {\n   int readonly = 1;\n+  int encoding;\n \n   switch (TREE_CODE (decl))\n     {\n@@ -4626,6 +4599,30 @@ mep_select_section (tree decl, int reloc ATTRIBUTE_UNUSED,\n       break;\n     }\n \n+  if (TREE_CODE (decl) == FUNCTION_DECL)\n+    {\n+      const char *name = XSTR (XEXP (DECL_RTL (decl), 0), 0);\n+\n+      if (name[0] == '@' && name[2] == '.')\n+\tencoding = name[1];\n+      else\n+\tencoding = 0;\n+\n+      if (flag_function_sections || DECL_ONE_ONLY (decl))\n+\tmep_unique_section (decl, 0);\n+      else if (lookup_attribute (\"vliw\", TYPE_ATTRIBUTES (TREE_TYPE (decl))))\n+\t{\n+\t  if (encoding == 'f')\n+\t    return vftext_section;\n+\t  else\n+\t    return vtext_section;\n+\t}\n+      else if (encoding == 'f')\n+\treturn ftext_section;\n+      else\n+\treturn text_section;\n+    }\n+\n   if (TREE_CODE (decl) == VAR_DECL)\n     {\n       const char *name = XSTR (XEXP (DECL_RTL (decl), 0), 0);\n@@ -4680,7 +4677,9 @@ mep_unique_section (tree decl, int reloc)\n     { \".far.\",     \".gnu.linkonce.far.\" },\n     { \".ftext.\",   \".gnu.linkonce.ft.\" },\n     { \".frodata.\", \".gnu.linkonce.frd.\" },\n-    { \".srodata.\", \".gnu.linkonce.srd.\" }\n+    { \".srodata.\", \".gnu.linkonce.srd.\" },\n+    { \".vtext.\",   \".gnu.linkonce.v.\" },\n+    { \".vftext.\",   \".gnu.linkonce.vf.\" }\n   };\n   int sec = 2; /* .data */\n   int len;\n@@ -4692,7 +4691,12 @@ mep_unique_section (tree decl, int reloc)\n     name = XSTR (XEXP (DECL_RTL (decl), 0), 0);\n \n   if (TREE_CODE (decl) == FUNCTION_DECL)\n-    sec = 0; /* .text */\n+    {\n+      if (lookup_attribute (\"vliw\", TYPE_ATTRIBUTES (TREE_TYPE (decl))))\n+\tsec = 9; /* .vtext */\n+      else\n+\tsec = 0; /* .text */\n+    }\n   else if (decl_readonly_section (decl, reloc))\n     sec = 1; /* .rodata */\n \n@@ -4712,6 +4716,8 @@ mep_unique_section (tree decl, int reloc)\n \tcase 'f':\n \t  if (sec == 0)\n \t    sec = 6; /* .ftext */\n+\t  else if (sec == 9)\n+\t    sec = 10; /* .vftext */\n \t  else if (sec == 1)\n \t    sec = 7; /* .frodata */\n \t  else\n@@ -7353,6 +7359,18 @@ mep_asm_init_sections (void)\n     = get_unnamed_section (0, output_section_asm_op,\n \t\t\t   \"\\t.section .srodata,\\\"a\\\"\");\n \n+  vtext_section\n+    = get_unnamed_section (0, output_section_asm_op,\n+\t\t\t   \"\\t.section .vtext,\\\"ax\\\"\");\n+\n+  vftext_section\n+    = get_unnamed_section (0, output_section_asm_op,\n+\t\t\t   \"\\t.section .vftext,\\\"ax\\\"\");\n+\n+  ftext_section\n+    = get_unnamed_section (0, output_section_asm_op,\n+\t\t\t   \"\\t.section .ftext,\\\"ax\\\"\");\n+\n }\n \n #include \"gt-mep.h\""}, {"sha": "1cdd74682842e83cbf1984cc6f7de0d4513c62d0", "filename": "gcc/config/mep/mep.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820ca27683d68421c487ec10f7acb8869e114044/gcc%2Fconfig%2Fmep%2Fmep.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820ca27683d68421c487ec10f7acb8869e114044/gcc%2Fconfig%2Fmep%2Fmep.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.h?ref=820ca27683d68421c487ec10f7acb8869e114044", "patch": "@@ -621,6 +621,8 @@ typedef struct\n #define DATA_SECTION_ASM_OP \"\\t.data\"\n #define BSS_SECTION_ASM_OP  \".bss\"\n \n+#define USE_SELECT_SECTION_FOR_FUNCTIONS 1\n+\n #define TARGET_ASM_FILE_END mep_file_cleanups\n \n #define ASM_APP_ON \"#APP\\n\""}]}