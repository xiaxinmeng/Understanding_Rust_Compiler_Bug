{"sha": "50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBjZmJmOTkxNTRkMGIwYjE1N2U5ZDViMmEzZGM2MTZkMTM1NGZmYg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2013-11-06T09:03:35Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2013-11-06T09:03:35Z"}, "message": "msp430.h (TARGET_CPU_CPP_BUILTINS): Define the name returned by msp430_mcu_name.\n\n\t* config/msp430/msp430.h (TARGET_CPU_CPP_BUILTINS): Define the\n\tname returned by msp430_mcu_name.\n\t(LIB_SPEC): If a -T option has not been specified then set a\n\tdefault, mcu-specific, linker script.\n\t* config/msp430/t-msp430 (MULTILIB_MATCHES): Add more mcu names.\n\t* config/msp430/msp430.c (msp430x_names): Likewise.\n\tAlpha sort the names for ease of comparison.\n\t(msp430_mcu_name): New function:  Returns a string suitable for\n\tuse as a C preprocessor symbol based upon the name of the MCU\n\tbeing targeted.\n\t(msp430_option_override): Accept msp430x and msp430xv2 as generic\n\tmcu names.\n\t* config/msp430/msp430-protos.h (msp430_mcu_name): Prototype.\n\nFrom-SVN: r204447", "tree": {"sha": "a695397d72bb65673ddb5dfdad52117ceda13b57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a695397d72bb65673ddb5dfdad52117ceda13b57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/comments", "author": null, "committer": null, "parents": [{"sha": "2599016338e60ee13e85066a56a729eeee1d1c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2599016338e60ee13e85066a56a729eeee1d1c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2599016338e60ee13e85066a56a729eeee1d1c6a"}], "stats": {"total": 166, "additions": 108, "deletions": 58}, "files": [{"sha": "af79ba32d960895a77a3f50991ab42b009763c1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb", "patch": "@@ -1,5 +1,19 @@\n 2013-11-06  Nick Clifton  <nickc@redhat.com>\n \n+\t* config/msp430/msp430.h (TARGET_CPU_CPP_BUILTINS): Define the\n+\tname returned by msp430_mcu_name.\n+\t(LIB_SPEC): If a -T option has not been specified then set a\n+\tdefault, mcu-specific, linker script.\n+\t* config/msp430/t-msp430 (MULTILIB_MATCHES): Add more mcu names.\n+\t* config/msp430/msp430.c (msp430x_names): Likewise.\n+\tAlpha sort the names for ease of comparison.\n+\t(msp430_mcu_name): New function:  Returns a string suitable for\n+\tuse as a C preprocessor symbol based upon the name of the MCU\n+\tbeing targeted.\n+\t(msp430_option_override): Accept msp430x and msp430xv2 as generic\n+\tmcu names.\n+\t* config/msp430/msp430-protos.h (msp430_mcu_name): Prototype.\n+\n \t* gcc.c (do_spec_1): Do not insert a space after a %* substitution\n \tunless it is the last part of a spec substring.\n \t* doc/invoke.texi (Spec Files): Document space insertion\n@@ -24,7 +38,7 @@\n \n 2013-11-06  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n \n-\t* config/i386/bdver3.md : Added two additional decoder units \n+\t* config/i386/bdver3.md : Added two additional decoder units\n \tto support issue rate of 4 and remodeled vector unit.\n \t* config/i386/i386.c (ix86_issue_rate): Issue rate for BD\n \tarchitectures is set to 4."}, {"sha": "61402e59f380a0750082a777a2bec8a36f483301", "filename": "gcc/config/msp430/msp430-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2Fconfig%2Fmsp430%2Fmsp430-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2Fconfig%2Fmsp430%2Fmsp430-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430-protos.h?ref=50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb", "patch": "@@ -35,6 +35,7 @@ void\tmsp430_init_cumulative_args (CUMULATIVE_ARGS *, tree, rtx, tree, int);\n int\tmsp430_initial_elimination_offset (int, int);\n bool    msp430_is_interrupt_func (void);\n const char * msp430x_logical_shift_right (rtx);\n+const char * msp430_mcu_name (void);\n bool\tmsp430_modes_tieable_p (enum machine_mode, enum machine_mode);\n void\tmsp430_output_labelref (FILE *, const char *);\n void\tmsp430_register_pragmas (void);"}, {"sha": "1ebb583c1ed075b949e8641ec80b460ebadf1719", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 79, "deletions": 54, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb", "patch": "@@ -109,69 +109,87 @@ msp430_handle_option (struct gcc_options *opts ATTRIBUTE_UNUSED,\n #undef  TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE\t\tmsp430_option_override\n \n-static const char * msp430x_names [] =\n-{\n-  \"msp430x\",   /* Generic name.  */\n-  \"msp430xv2\", /* Generic name.  */\n-\n-  /* These names have been provided by TI and match the names currently\n-     supported by GAS.\n+/* This list provides a set of known MCU names that support the MSP430X\n+   ISA.  The list has been provided by TI and should be kept in sync with\n+   the ones in:\n+   \n+     gcc/config/msp430/t-msp430\n+     gas/config/tc-msp430.c\n \n-     NB/ This list should be kept in sync with the ones in:\n-       gcc/config/msp430/t-msp430\n-       gas/config/tc-msp430.c\n+   FIXME: We ought to read the names in from a file at run, rather\n+   than having them built in like this.  Also such a file should be\n+   shared with gas.  */\n \n-     FIXME: We ought to read the names in from a file at run, rather\n-     than having them built in like this.  Also such a file should be\n-     shared with gas.  */\n-  \n-  \"msp430cg4616\", \"msp430cg4617\", \"msp430cg4618\", \"msp430cg4619\", \"msp430f2416\",\n-  \"msp430f2417\",  \"msp430f2418\",  \"msp430f2419\",  \"msp430f2616\",  \"msp430f2617\",\n-  \"msp430f2618\",  \"msp430f2619\",  \"msp430f47126\", \"msp430f47127\", \"msp430f47163\",\n-  \"msp430f47173\", \"msp430f47183\", \"msp430f47193\", \"msp430f47166\", \"msp430f47176\",\n-  \"msp430f47186\", \"msp430f47196\", \"msp430f47167\", \"msp430f47177\", \"msp430f47187\",\n-  \"msp430f47197\", \"msp430f46161\", \"msp430f46171\", \"msp430f46181\", \"msp430f46191\",\n-  \"msp430f4616\",  \"msp430f4617\",  \"msp430f4618\",  \"msp430f4619\",  \"msp430fg4616\",\n-  \"msp430fg4617\", \"msp430fg4618\", \"msp430fg4619\", \"msp430f5418\",  \"msp430f5419\",\n-  \"msp430f5435\",  \"msp430f5436\",  \"msp430f5437\",  \"msp430f5438\",  \"msp430f5418a\",\n-  \"msp430f5419a\", \"msp430f5435a\", \"msp430f5436a\", \"msp430f5437a\", \"msp430f5438a\",\n-  \"msp430f5212\",  \"msp430f5213\",  \"msp430f5214\",  \"msp430f5217\",  \"msp430f5218\",\n-  \"msp430f5219\",  \"msp430f5222\",  \"msp430f5223\",  \"msp430f5224\",  \"msp430f5227\",\n-  \"msp430f5228\",  \"msp430f5229\",  \"msp430f5304\",  \"msp430f5308\",  \"msp430f5309\",\n-  \"msp430f5310\",  \"msp430f5340\",  \"msp430f5341\",  \"msp430f5342\",  \"msp430f5324\",\n-  \"msp430f5325\",  \"msp430f5326\",  \"msp430f5327\",  \"msp430f5328\",  \"msp430f5329\",\n+static const char * msp430x_names [] =\n+{\n+  \"cc430f5123\",   \"cc430f5125\",   \"cc430f5133\",   \"cc430f5135\",   \"cc430f5137\",\n+  \"cc430f5143\",   \"cc430f5145\",   \"cc430f5147\",   \"cc430f6125\",   \"cc430f6126\",\n+  \"cc430f6127\",   \"cc430f6135\",   \"cc430f6137\",   \"cc430f6143\",   \"cc430f6145\",\n+  \"cc430f6147\",   \"msp430bt5190\", \"msp430cg4616\", \"msp430cg4617\", \"msp430cg4618\",\n+  \"msp430cg4619\", \"msp430f2416\",  \"msp430f2417\",  \"msp430f2418\",  \"msp430f2419\",\n+  \"msp430f2616\",  \"msp430f2617\",  \"msp430f2618\",  \"msp430f2619\",  \"msp430f4616\",\n+  \"msp430f46161\", \"msp430f4617\",  \"msp430f46171\", \"msp430f4618\",  \"msp430f46181\",\n+  \"msp430f4619\",  \"msp430f46191\", \"msp430f47126\", \"msp430f47127\", \"msp430f47163\",\n+  \"msp430f47166\", \"msp430f47167\", \"msp430f47173\", \"msp430f47176\", \"msp430f47177\",\n+  \"msp430f47183\", \"msp430f47186\", \"msp430f47187\", \"msp430f47193\", \"msp430f47196\",\n+  \"msp430f47197\", \"msp430f5131\",  \"msp430f5132\",  \"msp430f5151\",  \"msp430f5152\",\n+  \"msp430f5171\",  \"msp430f5172\",  \"msp430f5212\",  \"msp430f5213\",  \"msp430f5214\",\n+  \"msp430f5217\",  \"msp430f5218\",  \"msp430f5219\",  \"msp430f5222\",  \"msp430f5223\",\n+  \"msp430f5224\",  \"msp430f5227\",  \"msp430f5228\",  \"msp430f5229\",  \"msp430f5304\",\n+  \"msp430f5308\",  \"msp430f5309\",  \"msp430f5310\",  \"msp430f5324\",  \"msp430f5325\",\n+  \"msp430f5326\",  \"msp430f5327\",  \"msp430f5328\",  \"msp430f5329\",  \"msp430f5333\",\n+  \"msp430f5335\",  \"msp430f5336\",  \"msp430f5338\",  \"msp430f5340\",  \"msp430f5341\",\n+  \"msp430f5342\",  \"msp430f5358\",  \"msp430f5359\",  \"msp430f5418\",  \"msp430f5418a\",\n+  \"msp430f5419\",  \"msp430f5419a\", \"msp430f5435\",  \"msp430f5435a\", \"msp430f5436\",\n+  \"msp430f5436a\", \"msp430f5437\",  \"msp430f5437a\", \"msp430f5438\",  \"msp430f5438a\",\n   \"msp430f5500\",  \"msp430f5501\",  \"msp430f5502\",  \"msp430f5503\",  \"msp430f5504\",\n   \"msp430f5505\",  \"msp430f5506\",  \"msp430f5507\",  \"msp430f5508\",  \"msp430f5509\",\n   \"msp430f5510\",  \"msp430f5513\",  \"msp430f5514\",  \"msp430f5515\",  \"msp430f5517\",\n   \"msp430f5519\",  \"msp430f5521\",  \"msp430f5522\",  \"msp430f5524\",  \"msp430f5525\",\n-  \"msp430f5526\",  \"msp430f5527\",  \"msp430f5528\",  \"msp430f5529\",   \"cc430f5133\",\n-  \"cc430f5135\",    \"cc430f5137\",   \"cc430f6125\",   \"cc430f6126\",   \"cc430f6127\",\n-  \"cc430f6135\",    \"cc430f6137\",   \"cc430f5123\",   \"cc430f5125\",   \"cc430f5143\",\n-  \"cc430f5145\",    \"cc430f5147\",   \"cc430f6143\",   \"cc430f6145\",   \"cc430f6147\",\n-  \"msp430f5333\",  \"msp430f5335\",  \"msp430f5336\",  \"msp430f5338\",  \"msp430f5630\",\n+  \"msp430f5526\",  \"msp430f5527\",  \"msp430f5528\",  \"msp430f5529\",  \"msp430f5630\",\n   \"msp430f5631\",  \"msp430f5632\",  \"msp430f5633\",  \"msp430f5634\",  \"msp430f5635\",\n-  \"msp430f5636\",  \"msp430f5637\",  \"msp430f5638\",  \"msp430f6433\",  \"msp430f6435\",\n-  \"msp430f6436\",  \"msp430f6438\",  \"msp430f6630\",  \"msp430f6631\",  \"msp430f6632\",\n-  \"msp430f6633\",  \"msp430f6634\",  \"msp430f6635\",  \"msp430f6636\",  \"msp430f6637\",\n-  \"msp430f6638\",  \"msp430f5358\",  \"msp430f5359\",  \"msp430f5658\",  \"msp430f5659\",\n-  \"msp430f6458\",  \"msp430f6459\",  \"msp430f6658\",  \"msp430f6659\",  \"msp430f5131\",\n-  \"msp430f5151\",  \"msp430f5171\",  \"msp430f5132\",  \"msp430f5152\",  \"msp430f5172\",\n-  \"msp430f6720\",  \"msp430f6721\",  \"msp430f6723\",  \"msp430f6724\",  \"msp430f6725\",\n-  \"msp430f6726\",  \"msp430f6730\",  \"msp430f6731\",  \"msp430f6733\",  \"msp430f6734\",\n-  \"msp430f6735\",  \"msp430f6736\",  \"msp430f67451\", \"msp430f67651\", \"msp430f67751\",\n-  \"msp430f67461\", \"msp430f67661\", \"msp430f67761\", \"msp430f67471\", \"msp430f67671\",\n-  \"msp430f67771\", \"msp430f67481\", \"msp430f67681\", \"msp430f67781\", \"msp430f67491\",\n-  \"msp430f67691\", \"msp430f67791\", \"msp430f6745\",  \"msp430f6765\",  \"msp430f6775\",\n-  \"msp430f6746\",  \"msp430f6766\",  \"msp430f6776\",  \"msp430f6747\",  \"msp430f6767\",\n-  \"msp430f6777\",  \"msp430f6748\",  \"msp430f6768\",  \"msp430f6778\",  \"msp430f6749\",\n-  \"msp430f6769\",  \"msp430f6779\",  \"msp430fr5720\", \"msp430fr5721\", \"msp430fr5722\",\n-  \"msp430fr5723\", \"msp430fr5724\", \"msp430fr5725\", \"msp430fr5726\", \"msp430fr5727\",\n-  \"msp430fr5728\", \"msp430fr5729\", \"msp430fr5730\", \"msp430fr5731\", \"msp430fr5732\",\n-  \"msp430fr5733\", \"msp430fr5734\", \"msp430fr5735\", \"msp430fr5736\", \"msp430fr5737\",\n-  \"msp430fr5738\", \"msp430fr5739\", \"msp430bt5190\", \"msp430fr5949\", \"msp430fr5969\",\n-  \"msp430sl5438a\"\n+  \"msp430f5636\",  \"msp430f5637\",  \"msp430f5638\",  \"msp430f5658\",  \"msp430f5659\",\n+  \"msp430f6433\",  \"msp430f6435\",  \"msp430f6436\",  \"msp430f6438\",  \"msp430f6458\",\n+  \"msp430f6459\",  \"msp430f6630\",  \"msp430f6631\",  \"msp430f6632\",  \"msp430f6633\",\n+  \"msp430f6634\",  \"msp430f6635\",  \"msp430f6636\",  \"msp430f6637\",  \"msp430f6638\",\n+  \"msp430f6658\",  \"msp430f6659\",  \"msp430f6720\",  \"msp430f6721\",  \"msp430f6723\",\n+  \"msp430f6724\",  \"msp430f6725\",  \"msp430f6726\",  \"msp430f6730\",  \"msp430f6731\",\n+  \"msp430f6733\",  \"msp430f6734\",  \"msp430f6735\",  \"msp430f6736\",  \"msp430f6745\",\n+  \"msp430f67451\", \"msp430f6746\",  \"msp430f67461\", \"msp430f6747\",  \"msp430f67471\",\n+  \"msp430f6748\",  \"msp430f67481\", \"msp430f6749\",  \"msp430f67491\", \"msp430f6765\",\n+  \"msp430f67651\", \"msp430f6766\",  \"msp430f67661\", \"msp430f6767\",  \"msp430f67671\",\n+  \"msp430f6768\",  \"msp430f67681\", \"msp430f6769\",  \"msp430f67691\", \"msp430f6775\",\n+  \"msp430f67751\", \"msp430f6776\",  \"msp430f67761\", \"msp430f6777\",  \"msp430f67771\",\n+  \"msp430f6778\",  \"msp430f67781\", \"msp430f6779\",  \"msp430f67791\", \"msp430fg4616\",\n+  \"msp430fg4617\", \"msp430fg4618\", \"msp430fg4619\", \"msp430fr5720\", \"msp430fr5721\",\n+  \"msp430fr5722\", \"msp430fr5723\", \"msp430fr5724\", \"msp430fr5725\", \"msp430fr5726\",\n+  \"msp430fr5727\", \"msp430fr5728\", \"msp430fr5729\", \"msp430fr5730\", \"msp430fr5731\",\n+  \"msp430fr5732\", \"msp430fr5733\", \"msp430fr5734\", \"msp430fr5735\", \"msp430fr5736\",\n+  \"msp430fr5737\", \"msp430fr5738\", \"msp430fr5739\", \"msp430fr5949\", \"msp430fr5969\",\n+  \"msp430sl5438a\",\"msp430x241x\",  \"msp430x26x\",   \"msp430x461x1\", \"msp430x46x\",\n+  \"msp430x471x3\", \"msp430x471x6\", \"msp430x471x7\", \"msp430xg46x\"\n };\n+\n+/* Generate a C preprocessor symbol based upon the MCU selected by the user.\n+   If a specific MCU has not been selected then return a generic symbol instead.  */\n+\n+const char *\n+msp430_mcu_name (void)\n+{\n+  if (target_cpu)\n+    {\n+      unsigned int i;\n+      static char mcu_name [64];\n+\n+      snprintf (mcu_name, sizeof (mcu_name) - 1, \"__%s__\", target_cpu);\n+      for (i = strlen (mcu_name); i--;)\n+\tmcu_name[i] = TOUPPER (mcu_name[i]);\n+      return mcu_name;\n+    }\n   \n+  return msp430x ? \"__MSP430XGENERIC__\" : \"__MSP430GENERIC__\";\n+}\n+\n static void\n msp430_option_override (void)\n {\n@@ -191,6 +209,13 @@ msp430_option_override (void)\n \t name.  The msp430x_names array only contains those MCU names\n \t which are currently known to use the MSP430X ISA.  There are\n \t lots of other MCUs which just use the MSP430 ISA.  */\n+\n+      /* We also recognise two generic MCU 430X names.  They do not\n+\t appear in the msp430x_names table as we want to be able to\n+\t generate special C preprocessor defines for them.  */\n+      if (strcasecmp (target_cpu, \"msp430x\") == 0\n+\t  || strcasecmp (target_cpu, \"msp430xv2\") == 0)\n+\tmsp430x = true;\n     }\n \n   if (TARGET_LARGE && !msp430x)"}, {"sha": "953c6387e9931fce6fa8f2f21291f7ccac191ad9", "filename": "gcc/config/msp430/msp430.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.h?ref=50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb", "patch": "@@ -31,6 +31,7 @@ extern bool msp430x;\n     {                                           \\\n       builtin_define (\"NO_TRAMPOLINES\");        \\\n       builtin_define (\"__MSP430__\"); \t\t\\\n+      builtin_define (msp430_mcu_name ());\t\\\n       if (msp430x)\t\t\t\t\\\n \t{\t\t\t\t\t\\\n \t  builtin_define (\"__MSP430X__\");\t\\\n@@ -70,10 +71,11 @@ extern bool msp430x;\n %{msim:-lsim}\t\t\t\t\t\t\\\n %{!msim:-lnosys}\t\t\t\t\t\\\n --end-group\t\t\t\t\t   \t\\\n-%{!T*: %{msim: %{mlarge:%Tmsp430xl-sim.ld}%{!mlarge:%Tmsp430-sim.ld}}%{!msim:%Tmsp430.ld}}\t\\\n+%{!T*:%{!msim:%{mmcu=*:--script=%*/memory.ld --script=%*/peripherals.ld}}}\t\\\n+%{!T*:%{!msim:%{!mmcu=*:%Tmsp430.ld}}} \\\n+%{!T*:%{msim:%{mlarge:%Tmsp430xl-sim.ld}%{!mlarge:%Tmsp430-sim.ld}}} \\\n \"\n \f\n-\n /* Storage Layout */\n \n #define BITS_BIG_ENDIAN \t\t0"}, {"sha": "895810ff7e6d930e408bb637b952d31b425fe29d", "filename": "gcc/config/msp430/t-msp430", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2Fconfig%2Fmsp430%2Ft-msp430", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb/gcc%2Fconfig%2Fmsp430%2Ft-msp430", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Ft-msp430?ref=50cfbf99154d0b0b157e9d5b2a3dc616d1354ffb", "patch": "@@ -254,7 +254,15 @@ MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430bt5190\n MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430fr5949\n MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430fr5969\n MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430sl5438a\n-  \n+MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430x241x\n+MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430x26x\n+MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430x461x1\n+MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430x46x\n+MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430x471x3\n+MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430x471x6\n+MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430x471x7\n+MULTILIB_MATCHES += mmcu?msp430x=mmcu?msp430xg46x\n+\n \n MULTILIB_EXCEPTIONS = mlarge\n "}]}