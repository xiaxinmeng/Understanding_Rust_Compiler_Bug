{"sha": "0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ3YmFjNjliNzhmYmIzYmMyZDA4OGU3Nzc3NDcyZDI2MWVhMGEyMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-08T10:51:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-08T10:51:28Z"}, "message": "re PR other/80058 (fix double spaces in string literals everywhere)\n\n\tPR other/80058\n\t* lra-constraints.c (process_alt_operands): Avoid one space before\n\t\" at the end of line and another after \" on another line in a string\n\tliteral.\n\t* attribs.c (handle_dll_attribute): Likewise.\n\t* config/avr/avr-devices.c (avr_texinfo): Likewise.\ncp/\n\t* parser.c (cp_parser_template_declaration_after_parameters): Avoid\n\tone space before \" at the end of line and another after \" on another\n\tline in a string literal.\nfortran/\n\t* arith.c (gfc_complex2complex): Avoid two spaces in the middle of\n\tdiagnostics.\n\t* resolve.c (resolve_allocate_expr): Likewise.\n\nFrom-SVN: r269487", "tree": {"sha": "1c541e70165935ccc8c6c6de9e9a46066e63c168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c541e70165935ccc8c6c6de9e9a46066e63c168"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "723a52f9512a22af0f3f6758770b60dd8dfb7d47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/723a52f9512a22af0f3f6758770b60dd8dfb7d47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/723a52f9512a22af0f3f6758770b60dd8dfb7d47"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "54f3cd84ca2a13d4a9384ed3382e76f9a2f6ea0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "patch": "@@ -1,5 +1,12 @@\n 2019-03-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR other/80058\n+\t* lra-constraints.c (process_alt_operands): Avoid one space before\n+\t\" at the end of line and another after \" on another line in a string\n+\tliteral.\n+\t* attribs.c (handle_dll_attribute): Likewise.\n+\t* config/avr/avr-devices.c (avr_texinfo): Likewise.\n+\n \t* gimple-ssa-warn-alloca.c (pass_walloca::execute): Don't wrap\n \twarning_at or inform messages in G_() if there is no ?:.\n "}, {"sha": "a55638d9389f46ef21580b906f6488069f9226c4", "filename": "gcc/attribs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "patch": "@@ -1664,7 +1664,7 @@ handle_dll_attribute (tree * pnode, tree name, tree args, int flags,\n \t      && DECL_DECLARED_INLINE_P (node))\n \t{\n \t  warning (OPT_Wattributes, \"inline function %q+D declared as \"\n-\t\t  \" dllimport: attribute ignored\", node);\n+\t\t  \"dllimport: attribute ignored\", node);\n \t  *no_add_attrs = true;\n \t}\n       /* Like MS, treat definition of dllimported variables and"}, {"sha": "8688675341b71fc86ca196fece9a83ef3c2f8a1b", "filename": "gcc/config/avr/avr-devices.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Fconfig%2Favr%2Favr-devices.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Fconfig%2Favr%2Favr-devices.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-devices.c?ref=0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "patch": "@@ -76,7 +76,7 @@ avr_texinfo[] =\n     \"the @code{MOVW} instruction.\" },\n   { ARCH_AVR3,\n     \"``Classic'' devices with 16@tie{}KiB up to 64@tie{}KiB of \"\n-    \" program memory.\" },\n+    \"program memory.\" },\n   { ARCH_AVR31,\n     \"``Classic'' devices with 128@tie{}KiB of program memory.\" },\n   { ARCH_AVR35,"}, {"sha": "2d58add34ad26d84ba2ab9791601783ab238a9d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "patch": "@@ -1,5 +1,10 @@\n 2019-03-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR other/80058\n+\t* parser.c (cp_parser_template_declaration_after_parameters): Avoid\n+\tone space before \" at the end of line and another after \" on another\n+\tline in a string literal.\n+\n \tPR tree-optimization/89550\n \t* semantics.c (maybe_convert_cond): Only set TREE_NO_WARNING if\n \twarning_at returned true."}, {"sha": "de2dd30d94e5990592c64d8676ac95f88e0e4ba0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "patch": "@@ -27865,7 +27865,7 @@ cp_parser_template_declaration_after_parameters (cp_parser* parser,\n \t  if (cxx_dialect > cxx17)\n \t    error (\"literal operator template %qD has invalid parameter list;\"\n \t\t   \"  Expected non-type template parameter pack <char...> \"\n-\t\t   \"  or single non-type parameter of class type\",\n+\t\t   \"or single non-type parameter of class type\",\n \t\t   decl);\n \t  else\n \t    error (\"literal operator template %qD has invalid parameter list.\""}, {"sha": "28403689bb10f89cfbdc1367a2691ecb01e77b56", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "patch": "@@ -1,3 +1,10 @@\n+2019-03-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR other/80058\n+\t* arith.c (gfc_complex2complex): Avoid two spaces in the middle of\n+\tdiagnostics.\n+\t* resolve.c (resolve_allocate_expr): Likewise.\n+\n 2019-03-06  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/71203"}, {"sha": "f2d311c044c841f3f9d38551e17e7a43760df329", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "patch": "@@ -2472,7 +2472,7 @@ gfc_complex2complex (gfc_expr *src, int kind)\n       int w = warn_conversion ? OPT_Wconversion : OPT_Wconversion_extra;\n \n       gfc_warning_now (w, \"Change of value in conversion from \"\n-\t\t       \" %qs to %qs at %L\",\n+\t\t       \"%qs to %qs at %L\",\n \t\t       gfc_typename (&src->ts), gfc_typename (&result->ts),\n \t\t       &src->where);\n       did_warn = true;"}, {"sha": "1cf9cbae964b87f85ccc0630ba969c63ebc8849b", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "patch": "@@ -7798,7 +7798,7 @@ resolve_allocate_expr (gfc_expr *e, gfc_code *code, bool *array_alloc_wo_spec)\n \t\tif (mpz_cmp_si (ar->start[i]->value.integer, 1) < 0)\n \t\t  {\n \t\t    gfc_error (\"Upper cobound is less than lower cobound \"\n-\t\t\t       \" of 1 at %L\", &ar->start[i]->where);\n+\t\t\t       \"of 1 at %L\", &ar->start[i]->where);\n \t\t    goto failure;\n \t\t  }\n \t      }"}, {"sha": "afbd5d004ba1970c437f087b24db72196e0fc8cc", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d7bac69b78fbb3bc2d088e7777472d261ea0a21/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=0d7bac69b78fbb3bc2d088e7777472d261ea0a21", "patch": "@@ -2681,7 +2681,7 @@ process_alt_operands (int only_alternative)\n \t\t  if (lra_dump_file != NULL)\n \t\t    fprintf (lra_dump_file,\n \t\t\t     \"            alt=%d: reload pseudo for op %d \"\n-\t\t\t     \" cannot hold the mode value -- refuse\\n\",\n+\t\t\t     \"cannot hold the mode value -- refuse\\n\",\n \t\t\t     nalt, nop);\n \t\t  goto fail;\n \t\t}"}]}