{"sha": "d6cc6ec9d11523de305be40a6e0e36ea9996de57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZjYzZlYzlkMTE1MjNkZTMwNWJlNDBhNmUwZTM2ZWE5OTk2ZGU1Nw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-07-20T14:57:17Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-07-20T14:57:17Z"}, "message": "extend.texi (flatten attribute): Remove note about unit-at-a-time\n\n\n\t* doc/extend.texi (flatten attribute): Remove note about unit-at-a-time\n\t* doc/invoke.texi (--combine): Likewise.\n\t(-finline-functions-called-once): Update levels when enabled.\n\t(-funit-at-a-time): Document new behaviour.\n\t(-ftoplevel-reorder): Document that it is enabled -O0 and imply\n\t-fno-section-anchors when disabled explicitly.\n\t(inline params): They are not ignored now.\n\t(precompiled headers): Remove unit-at-a-time as being incompatible.\n\t* opts.c (decode_options): Handle unit-at-a-time as alias;\n\timply -fno-section-anchors when toplevel reorder is disabled\n\texplicitly.\n\t* common.opt (ftoplevel-reorder): Set default value to 2.\n\t(funit-at-a-time): Set default value to 1.\n\t* config/rs6000/rs6000.c (optimization_options): Set section anchors\n\tto 2.\n\nFrom-SVN: r138009", "tree": {"sha": "aa3df5a11b81daa4bf2935f747dd343908e7a3c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa3df5a11b81daa4bf2935f747dd343908e7a3c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6cc6ec9d11523de305be40a6e0e36ea9996de57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6cc6ec9d11523de305be40a6e0e36ea9996de57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6cc6ec9d11523de305be40a6e0e36ea9996de57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6cc6ec9d11523de305be40a6e0e36ea9996de57/comments", "author": null, "committer": null, "parents": [{"sha": "c0b215ccf649d4cd8f8dd4942ff6e57fb4584bb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0b215ccf649d4cd8f8dd4942ff6e57fb4584bb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0b215ccf649d4cd8f8dd4942ff6e57fb4584bb7"}], "stats": {"total": 109, "additions": 54, "deletions": 55}, "files": [{"sha": "0a9a57a3c5ddfde5beef9dcd8b9824440e1d099b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6cc6ec9d11523de305be40a6e0e36ea9996de57", "patch": "@@ -1,3 +1,21 @@\n+2008-07-19  Jan Hubicka  <jh@suse.cz>\n+\n+\t* doc/extend.texi (flatten attribute): Remove note about unit-at-a-time\n+\t* doc/invoke.texi (--combine): Likewise.\n+\t(-finline-functions-called-once): Update levels when enabled.\n+\t(-funit-at-a-time): Document new behaviour.\n+\t(-ftoplevel-reorder): Document that it is enabled -O0 and imply\n+\t-fno-section-anchors when disabled explicitly.\n+\t(inline params): They are not ignored now.\n+\t(precompiled headers): Remove unit-at-a-time as being incompatible.\n+\t* opts.c (decode_options): Handle unit-at-a-time as alias;\n+\timply -fno-section-anchors when toplevel reorder is disabled\n+\texplicitly.\n+\t* common.opt (ftoplevel-reorder): Set default value to 2.\n+\t(funit-at-a-time): Set default value to 1.\n+\t* config/rs6000/rs6000.c (optimization_options): Set section anchors\n+\tto 2.\n+\n 2008-07-19  Jan Hubicka  <jh@suse.cz>\n \n \t* builtins.c (expand_builtin_int_roundingfn,"}, {"sha": "7c441155dfa82ec16cce860c559a302d1f44aa5d", "filename": "gcc/common.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=d6cc6ec9d11523de305be40a6e0e36ea9996de57", "patch": "@@ -1046,7 +1046,7 @@ Common Joined RejectNegative\n -ftls-model=[global-dynamic|local-dynamic|initial-exec|local-exec]\tSet the default thread-local storage code generation model\n \n ftoplevel-reorder\n-Common Report Var(flag_toplevel_reorder) Init(1) Optimization\n+Common Report Var(flag_toplevel_reorder) Init(2) Optimization\n Reorder top level functions, variables, and asms\n \n ftracer\n@@ -1169,7 +1169,7 @@ Common Report Var(flag_tree_vrp) Init(0) Optimization\n Perform Value Range Propagation on trees\n \n funit-at-a-time\n-Common Report Var(flag_unit_at_a_time) Optimization\n+Common Report Var(flag_unit_at_a_time) Init(1) Optimization\n Compile whole compilation unit at a time\n \n funroll-loops"}, {"sha": "5e2f7ac38a1fd5cf95a536b4fbd6fc97ba955207", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d6cc6ec9d11523de305be40a6e0e36ea9996de57", "patch": "@@ -2111,7 +2111,7 @@ optimization_options (int level ATTRIBUTE_UNUSED, int size ATTRIBUTE_UNUSED)\n      Skip section anchors for Objective C and Objective C++\n      until front-ends fixed.  */\n   if (!TARGET_MACHO && lang_hooks.name[4] != 'O')\n-    flag_section_anchors = 1;\n+    flag_section_anchors = 2;\n }\n \n /* Implement TARGET_HANDLE_OPTION.  */"}, {"sha": "751e6743a5e996d25db5794b1602d0d77160d106", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=d6cc6ec9d11523de305be40a6e0e36ea9996de57", "patch": "@@ -1945,8 +1945,7 @@ body.\n Generally, inlining into a function is limited.  For a function marked with\n this attribute, every call inside this function will be inlined, if possible.\n Whether the function itself is considered for inlining depends on its size and\n-the current inlining parameters.  The @code{flatten} attribute only works\n-reliably in unit-at-a-time mode.\n+the current inlining parameters.\n \n @item error (\"@var{message}\")\n @cindex @code{error} function attribute"}, {"sha": "5114f700dc9c0a8ae36992b77eb0fbb63204ecf5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 45, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d6cc6ec9d11523de305be40a6e0e36ea9996de57", "patch": "@@ -5129,14 +5129,10 @@ Turning on optimization flags makes the compiler attempt to improve\n the performance and/or code size at the expense of compilation time\n and possibly the ability to debug the program.\n \n-The compiler performs optimization based on the knowledge it has of\n-the program.  Optimization levels @option{-O} and above, in\n-particular, enable @emph{unit-at-a-time} mode, which allows the\n-compiler to consider information gained from later functions in\n-the file when compiling a function.  Compiling multiple files at\n-once to a single output file in @emph{unit-at-a-time} mode allows\n-the compiler to use information gained from all of the files when\n-compiling each of them.\n+The compiler performs optimization based on the knowledge it has of the\n+program.  Compiling multiple files at once to a single output file mode allows\n+the compiler to use information gained from all of the files when compiling\n+each of them.\n \n Not all optimizations are controlled directly by a flag.  Only\n optimizations that have a flag are listed.\n@@ -5342,7 +5338,7 @@ caller even if they are not marked @code{inline}.  If a call to a given\n function is integrated, then the function is not output as assembler code\n in its own right.\n \n-Enabled if @option{-funit-at-a-time} is enabled.\n+Enabled at levels @option{-O1}, @option{-O2}, @option{-O3} and @option{-Os}.\n \n @item -fearly-inlining\n @opindex fearly-inlining\n@@ -6316,39 +6312,11 @@ Enabled at levels @option{-O2}, @option{-O3}.\n \n @item -funit-at-a-time\n @opindex funit-at-a-time\n-Parse the whole compilation unit before starting to produce code.\n-This allows some extra optimizations to take place but consumes\n-more memory (in general).  There are some compatibility issues\n-with @emph{unit-at-a-time} mode:\n-@itemize @bullet\n-@item\n-enabling @emph{unit-at-a-time} mode may change the order\n-in which functions, variables, and top-level @code{asm} statements\n-are emitted, and will likely break code relying on some particular\n-ordering.  The majority of such top-level @code{asm} statements,\n-though, can be replaced by @code{section} attributes.  The\n-@option{fno-toplevel-reorder} option may be used to keep the ordering\n-used in the input file, at the cost of some optimizations.\n-\n-@item\n-@emph{unit-at-a-time} mode removes unreferenced static variables\n-and functions.  This may result in undefined references\n-when an @code{asm} statement refers directly to variables or functions\n-that are otherwise unused.  In that case either the variable/function\n-shall be listed as an operand of the @code{asm} statement operand or,\n-in the case of top-level @code{asm} statements the attribute @code{used}\n-shall be used on the declaration.\n-\n-@item\n-Static functions now can use non-standard passing conventions that\n-may break @code{asm} statements calling functions directly.  Again,\n-attribute @code{used} will prevent this behavior.\n-@end itemize\n-\n-As a temporary workaround, @option{-fno-unit-at-a-time} can be used,\n-but this scheme may not be supported by future releases of GCC@.\n+This option is left for compatibility reasons. @option{-funit-at-a-time}\n+has no effect, while @option{-fno-unit-at-a-time} implies\n+@option{-fno-toplevel-reorder} and @option{-fno-section-anchors}.\n \n-Enabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os}.\n+Enabled by default.\n \n @item -fno-toplevel-reorder\n @opindex fno-toplevel-reorder\n@@ -6359,6 +6327,10 @@ will not be removed.  This option is intended to support existing code\n which relies on a particular ordering.  For new code, it is better to\n use attributes.\n \n+Enabled at level @option{-O0}.  When disabled explicitly, it also imply\n+@option{-fno-section-anchors} that is otherwise enabled at @option{-O0} on some\n+targets.\n+\n @item -fweb\n @opindex fweb\n Constructs webs as commonly used for register allocation purposes and assign\n@@ -6944,12 +6916,10 @@ limit after inlining inlining is constrained by\n @option{--param large-function-growth}.  This parameter is useful primarily\n to avoid extreme compilation time caused by non-linear algorithms used by the\n backend.\n-This parameter is ignored when @option{-funit-at-a-time} is not used.\n The default value is 2700.\n \n @item large-function-growth\n Specifies maximal growth of large function caused by inlining in percents.\n-This parameter is ignored when @option{-funit-at-a-time} is not used.\n The default value is 100 which limits large function growth to 2.0 times\n the original size.\n \n@@ -6966,7 +6936,6 @@ before applying @option{--param inline-unit-growth}.  The default is 10000\n \n @item inline-unit-growth\n Specifies maximal overall growth of the compilation unit caused by inlining.\n-This parameter is ignored when @option{-funit-at-a-time} is not used.\n The default value is 30 which limits unit growth to 1.3 times the original\n size.\n \n@@ -15616,7 +15585,7 @@ for any cases where this rule is relaxed.\n @item Each of the following options must be the same when building and using\n the precompiled header:\n \n-@gccoptlist{-fexceptions -funit-at-a-time}\n+@gccoptlist{-fexceptions}\n \n @item\n Some other command-line options starting with @option{-f},"}, {"sha": "0533c9fa5da9c614507579f9c620c0a988fcd9c7", "filename": "gcc/opts.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6cc6ec9d11523de305be40a6e0e36ea9996de57/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=d6cc6ec9d11523de305be40a6e0e36ea9996de57", "patch": "@@ -849,15 +849,28 @@ decode_options (unsigned int argc, const char **argv)\n \t}\n     }\n \n-  if (!optimize)\n+\n+  if (!flag_unit_at_a_time)\n     {\n-      flag_merge_constants = 0;\n+      flag_section_anchors = 0;\n+      flag_toplevel_reorder = 0;\n+      flag_unit_at_a_time = 1;\n+    }\n+  if (!flag_toplevel_reorder)\n+    {\n+      if (flag_section_anchors == 1)\n+        error (\"Section anchors must be disabled when toplevel reorder is disabled.\");\n+      flag_section_anchors = 0;\n     }\n \n-  if (!no_unit_at_a_time_default)\n+  if (!optimize)\n     {\n-      flag_unit_at_a_time = 1;\n-      if (!optimize)\n+      flag_merge_constants = 0;\n+\n+      /* We disable toplevel reordering at -O0 to disable transformations that\n+         might be surprising to end users and to get -fno-toplevel-reorder\n+\t tested, but we keep section anchors.  */\n+      if (flag_toplevel_reorder == 2)\n         flag_toplevel_reorder = 0;\n     }\n "}]}