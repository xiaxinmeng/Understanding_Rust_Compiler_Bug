{"sha": "42d73fa9d575e3c8c21e88bd7f65922e17b052f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJkNzNmYTlkNTc1ZTNjOGMyMWU4OGJkN2Y2NTkyMmUxN2IwNTJmMQ==", "commit": {"author": {"name": "Feng Xue", "email": "fxue@os.amperecomputing.com", "date": "2020-01-08T02:55:00Z"}, "committer": {"name": "Feng Xue", "email": "fxue@gcc.gnu.org", "date": "2020-01-08T02:55:00Z"}, "message": "Find matched aggregate lattice for self-recursive CP (PR ipa/93084)\n\n2020-01-08  Feng Xue  <fxue@os.amperecomputing.com>\n\n        PR ipa/93084\n        * ipa-cp.c (self_recursively_generated_p): Find matched aggregate\n        lattice for a value to check.\n        (propagate_vals_across_arith_jfunc): Add an assertion to ensure\n        finite propagation in self-recursive scc.\n\n2020-01-08  Feng Xue  <fxue@os.amperecomputing.com>\n\n        PR ipa/93084\n        * gcc.dg/ipa/ipa-clone-3.c: New test.\n\nFrom-SVN: r279987", "tree": {"sha": "708a805ea61406a0b0d2e79dbc84a1a7be0db35f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/708a805ea61406a0b0d2e79dbc84a1a7be0db35f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42d73fa9d575e3c8c21e88bd7f65922e17b052f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42d73fa9d575e3c8c21e88bd7f65922e17b052f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42d73fa9d575e3c8c21e88bd7f65922e17b052f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42d73fa9d575e3c8c21e88bd7f65922e17b052f1/comments", "author": {"login": "feng-xue-ampere", "id": 95893536, "node_id": "U_kgDOBbc4IA", "avatar_url": "https://avatars.githubusercontent.com/u/95893536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feng-xue-ampere", "html_url": "https://github.com/feng-xue-ampere", "followers_url": "https://api.github.com/users/feng-xue-ampere/followers", "following_url": "https://api.github.com/users/feng-xue-ampere/following{/other_user}", "gists_url": "https://api.github.com/users/feng-xue-ampere/gists{/gist_id}", "starred_url": "https://api.github.com/users/feng-xue-ampere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feng-xue-ampere/subscriptions", "organizations_url": "https://api.github.com/users/feng-xue-ampere/orgs", "repos_url": "https://api.github.com/users/feng-xue-ampere/repos", "events_url": "https://api.github.com/users/feng-xue-ampere/events{/privacy}", "received_events_url": "https://api.github.com/users/feng-xue-ampere/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "709d7838e753bbb6f16e2ed88a118ed81c367040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709d7838e753bbb6f16e2ed88a118ed81c367040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/709d7838e753bbb6f16e2ed88a118ed81c367040"}], "stats": {"total": 76, "additions": 74, "deletions": 2}, "files": [{"sha": "6387fcc9abaf508ff4fac05687d53dda49b50305", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d73fa9d575e3c8c21e88bd7f65922e17b052f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d73fa9d575e3c8c21e88bd7f65922e17b052f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42d73fa9d575e3c8c21e88bd7f65922e17b052f1", "patch": "@@ -1,3 +1,11 @@\n+2020-01-08  Feng Xue  <fxue@os.amperecomputing.com>\n+\n+\tPR ipa/93084\n+\t* ipa-cp.c (self_recursively_generated_p): Find matched aggregate\n+\tlattice for a value to check.\n+\t(propagate_vals_across_arith_jfunc): Add an assertion to ensure\n+\tfinite propagation in self-recursive scc.\n+\n 2020-01-08  Luo Xiong Hu  <luoxhu@linux.ibm.com>\n \n \t* ipa-inline.c (caller_growth_limits): Restore the AND."}, {"sha": "1163198629384a8f7f7c7cd7e61ddf467bb52862", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d73fa9d575e3c8c21e88bd7f65922e17b052f1/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d73fa9d575e3c8c21e88bd7f65922e17b052f1/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=42d73fa9d575e3c8c21e88bd7f65922e17b052f1", "patch": "@@ -1917,10 +1917,25 @@ self_recursively_generated_p (ipcp_value<tree> *val)\n \n       class ipcp_param_lattices *plats = ipa_get_parm_lattices (info,\n \t\t\t\t\t\t\t\tsrc->index);\n-      ipcp_lattice<tree> *src_lat = src->offset == -1 ? &plats->itself\n-\t\t\t\t\t\t      : plats->aggs;\n+      ipcp_lattice<tree> *src_lat;\n       ipcp_value<tree> *src_val;\n \n+      if (src->offset == -1)\n+\tsrc_lat = &plats->itself;\n+      else\n+\t{\n+\t  struct ipcp_agg_lattice *src_aglat;\n+\n+\t  for (src_aglat = plats->aggs; src_aglat; src_aglat = src_aglat->next)\n+\t    if (src_aglat->offset == src->offset)\n+\t      break;\n+\n+\t  if (!src_aglat)\n+\t    return false;\n+\n+\t  src_lat = src_aglat;\n+\t}\n+\n       for (src_val = src_lat->values; src_val; src_val = src_val->next)\n \tif (src_val == val)\n \t  break;\n@@ -2017,6 +2032,8 @@ propagate_vals_across_arith_jfunc (cgraph_edge *cs,\n \t    val_seeds.safe_push (src_val);\n \t}\n \n+      gcc_assert ((int) val_seeds.length () <= param_ipa_cp_value_list_size);\n+\n       /* Recursively generate lattice values with a limited count.  */\n       FOR_EACH_VEC_ELT (val_seeds, i, src_val)\n \t{"}, {"sha": "8ee00cebcfcc6dea0acaa96bc3f22115dd11e893", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d73fa9d575e3c8c21e88bd7f65922e17b052f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d73fa9d575e3c8c21e88bd7f65922e17b052f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42d73fa9d575e3c8c21e88bd7f65922e17b052f1", "patch": "@@ -1,3 +1,8 @@\n+2020-01-08  Feng Xue  <fxue@os.amperecomputing.com>\n+\n+\tPR ipa/93084\n+\t* gcc.dg/ipa/ipa-clone-3.c: New test.\n+\n 2020-01-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.old-deja/g++.bugs/900208_03.C: Check locations too."}, {"sha": "18d29bdd0b3ecd3f3faade7cc7d64490095bff36", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-clone-3.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42d73fa9d575e3c8c21e88bd7f65922e17b052f1/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-clone-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42d73fa9d575e3c8c21e88bd7f65922e17b052f1/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-clone-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-clone-3.c?ref=42d73fa9d575e3c8c21e88bd7f65922e17b052f1", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-ipa-cp-details -fno-early-inlining --param ipa-cp-max-recursive-depth=8 --param ipa-cp-eval-threshold=1\" } */\n+\n+struct V {\n+  int f0;\n+  int f1;\n+};\n+\n+int data[100];\n+\n+int fn ();\n+\n+int recur_fn (struct V * __restrict v)\n+{\n+  int i = v->f0;\n+  int j = v->f1;\n+  struct V t;\n+\n+  if (j > 100)\n+    {\n+      fn ();\n+      return 1;\n+    }\n+\n+  data[i] = i;\n+\n+  t.f0 = i - 2;\n+  t.f1 = j + 1;\n+\n+  recur_fn (&t);\n+\n+  return i * j;\n+}\n+\n+int main ()\n+{\n+  struct V v = {1, 3};\n+\n+  return recur_fn (&v);\n+}\n+\n+/* { dg-final { scan-ipa-dump-times \"Creating a specialized node of recur_fn/\\[0-9\\]*\\\\.\" 8 \"cp\" } } */"}]}