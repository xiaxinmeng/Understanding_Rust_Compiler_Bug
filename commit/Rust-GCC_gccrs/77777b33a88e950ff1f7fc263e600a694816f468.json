{"sha": "77777b33a88e950ff1f7fc263e600a694816f468", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc3NzdiMzNhODhlOTUwZmYxZjdmYzI2M2U2MDBhNjk0ODE2ZjQ2OA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-07-07T09:13:48Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-07-07T09:13:48Z"}, "message": "stop.c: Use C11 _Noreturn.\n\n\t* runtime/stop.c: Use C11 _Noreturn.\n\t* libgfortran.h: Use C11 _Noreturn in prototypes.\n\tMove REALPART, IMAGPART and COMPLEX_ASSIGN macros...\n\t* intrinsics/c99_functions.c: ... here.\n\nFrom-SVN: r212327", "tree": {"sha": "cbd088b7bacddb90ca0051f9018f8994fbe6ebde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbd088b7bacddb90ca0051f9018f8994fbe6ebde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77777b33a88e950ff1f7fc263e600a694816f468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77777b33a88e950ff1f7fc263e600a694816f468", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77777b33a88e950ff1f7fc263e600a694816f468", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77777b33a88e950ff1f7fc263e600a694816f468/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8adb5dc735298d2113de33ce442831f4dab9d215", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adb5dc735298d2113de33ce442831f4dab9d215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8adb5dc735298d2113de33ce442831f4dab9d215"}], "stats": {"total": 49, "additions": 26, "deletions": 23}, "files": [{"sha": "eef0b2885c71a74a5d3b01143d7f36574290ce97", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77777b33a88e950ff1f7fc263e600a694816f468/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77777b33a88e950ff1f7fc263e600a694816f468/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=77777b33a88e950ff1f7fc263e600a694816f468", "patch": "@@ -1,3 +1,10 @@\n+2014-07-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* runtime/stop.c: Use C11 _Noreturn.\n+\t* libgfortran.h: Use C11 _Noreturn in prototypes.\n+\tMove REALPART, IMAGPART and COMPLEX_ASSIGN macros...\n+\t* intrinsics/c99_functions.c: ... here.\n+\n 2014-07-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* config/fpu-387.h, config/fpu-aix.h, config/fpu-sysv.h,"}, {"sha": "728ddb160991b33f9d85a9be444c7455acfb732c", "filename": "libgfortran/intrinsics/c99_functions.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77777b33a88e950ff1f7fc263e600a694816f468/libgfortran%2Fintrinsics%2Fc99_functions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77777b33a88e950ff1f7fc263e600a694816f468/libgfortran%2Fintrinsics%2Fc99_functions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fc99_functions.c?ref=77777b33a88e950ff1f7fc263e600a694816f468", "patch": "@@ -39,6 +39,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n # endif\n #endif\n \n+/* Macros to get real and imaginary parts of a complex, and set\n+   a complex value.  */\n+#define REALPART(z) (__real__(z))\n+#define IMAGPART(z) (__imag__(z))\n+#define COMPLEX_ASSIGN(z_, r_, i_) {__real__(z_) = (r_); __imag__(z_) = (i_);}\n+\n+\n /* Prototypes are included to silence -Wstrict-prototypes\n    -Wmissing-prototypes.  */\n "}, {"sha": "fa2fd83e7fa1f244b5a89498e655b733513f6bcf", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77777b33a88e950ff1f7fc263e600a694816f468/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77777b33a88e950ff1f7fc263e600a694816f468/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=77777b33a88e950ff1f7fc263e600a694816f468", "patch": "@@ -235,11 +235,6 @@ extern int __mingw_snprintf (char *, size_t, const char *, ...)\n #undef signbit\n #define signbit(x) __builtin_signbit(x)\n \n-/* TODO: find the C99 version of these an move into above ifdef.  */\n-#define REALPART(z) (__real__(z))\n-#define IMAGPART(z) (__imag__(z))\n-#define COMPLEX_ASSIGN(z_, r_, i_) {__real__(z_) = (r_); __imag__(z_) = (i_);}\n-\n #include \"kinds.h\"\n \n /* Define the type used for the current record number for large file I/O.\n@@ -693,7 +688,7 @@ iexport_proto(backtrace);\n #define GFC_OTOA_BUF_SIZE (GFC_LARGEST_BUF * 3 + 1)\n #define GFC_BTOA_BUF_SIZE (GFC_LARGEST_BUF * 8 + 1)\n \n-extern void sys_abort (void) __attribute__ ((noreturn));\n+extern _Noreturn void sys_abort (void);\n internal_proto(sys_abort);\n \n extern ssize_t estr_write (const char *);\n@@ -709,26 +704,25 @@ internal_proto(st_printf);\n extern const char *gfc_xtoa (GFC_UINTEGER_LARGEST, char *, size_t);\n internal_proto(gfc_xtoa);\n \n-extern void os_error (const char *) __attribute__ ((noreturn));\n+extern _Noreturn void os_error (const char *);\n iexport_proto(os_error);\n \n extern void show_locus (st_parameter_common *);\n internal_proto(show_locus);\n \n-extern void runtime_error (const char *, ...)\n-     __attribute__ ((noreturn, format (gfc_printf, 1, 2)));\n+extern _Noreturn void runtime_error (const char *, ...)\n+     __attribute__ ((format (gfc_printf, 1, 2)));\n iexport_proto(runtime_error);\n \n-extern void runtime_error_at (const char *, const char *, ...)\n-     __attribute__ ((noreturn, format (gfc_printf, 2, 3)));\n+extern _Noreturn void runtime_error_at (const char *, const char *, ...)\n+     __attribute__ ((format (gfc_printf, 2, 3)));\n iexport_proto(runtime_error_at);\n \n extern void runtime_warning_at (const char *, const char *, ...)\n      __attribute__ ((format (gfc_printf, 2, 3)));\n iexport_proto(runtime_warning_at);\n \n-extern void internal_error (st_parameter_common *, const char *)\n-  __attribute__ ((noreturn));\n+extern _Noreturn void internal_error (st_parameter_common *, const char *);\n internal_proto(internal_error);\n \n extern const char *translate_error (int);\n@@ -875,8 +869,7 @@ internal_proto(filename_from_unit);\n \n /* stop.c */\n \n-extern void stop_string (const char *, GFC_INTEGER_4)\n-  __attribute__ ((noreturn));\n+extern _Noreturn void stop_string (const char *, GFC_INTEGER_4);\n export_proto(stop_string);\n \n /* reshape_packed.c */"}, {"sha": "8330b66736ad0ab78324cf72292e68b306c46ca9", "filename": "libgfortran/runtime/stop.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77777b33a88e950ff1f7fc263e600a694816f468/libgfortran%2Fruntime%2Fstop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77777b33a88e950ff1f7fc263e600a694816f468/libgfortran%2Fruntime%2Fstop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fstop.c?ref=77777b33a88e950ff1f7fc263e600a694816f468", "patch": "@@ -83,8 +83,7 @@ report_exception (void)\n \n /* A numeric STOP statement.  */\n \n-extern void stop_numeric (GFC_INTEGER_4)\n-  __attribute__ ((noreturn));\n+extern _Noreturn void stop_numeric (GFC_INTEGER_4);\n export_proto(stop_numeric);\n \n void\n@@ -102,8 +101,7 @@ stop_numeric (GFC_INTEGER_4 code)\n \n /* A Fortran 2008 numeric STOP statement.  */\n \n-extern void stop_numeric_f08 (GFC_INTEGER_4)\n-  __attribute__ ((noreturn));\n+extern _Noreturn void stop_numeric_f08 (GFC_INTEGER_4);\n export_proto(stop_numeric_f08);\n \n void\n@@ -136,8 +134,7 @@ stop_string (const char *string, GFC_INTEGER_4 len)\n    initiates error termination of execution.\"  Thus, error_stop_string returns\n    a nonzero exit status code.  */\n \n-extern void error_stop_string (const char *, GFC_INTEGER_4)\n-  __attribute__ ((noreturn));\n+extern _Noreturn void error_stop_string (const char *, GFC_INTEGER_4);\n export_proto(error_stop_string);\n \n void\n@@ -154,8 +151,7 @@ error_stop_string (const char *string, GFC_INTEGER_4 len)\n \n /* A numeric ERROR STOP statement.  */\n \n-extern void error_stop_numeric (GFC_INTEGER_4)\n-  __attribute__ ((noreturn));\n+extern _Noreturn void error_stop_numeric (GFC_INTEGER_4);\n export_proto(error_stop_numeric);\n \n void"}]}