{"sha": "54b1de55505b7fda1731ca8849063ba1386bbba6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRiMWRlNTU1MDViN2ZkYTE3MzFjYTg4NDkwNjNiYTEzODZiYmJhNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-24T15:39:59Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-24T15:39:59Z"}, "message": "(invalidate): Use proper type for in_table.\n\nFrom-SVN: r4208", "tree": {"sha": "db1e40a94bec77736e269ce6d41984222ad9780e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db1e40a94bec77736e269ce6d41984222ad9780e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54b1de55505b7fda1731ca8849063ba1386bbba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b1de55505b7fda1731ca8849063ba1386bbba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54b1de55505b7fda1731ca8849063ba1386bbba6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b1de55505b7fda1731ca8849063ba1386bbba6/comments", "author": null, "committer": null, "parents": [{"sha": "26300dcd148908808d26b43e969652d10760bd71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26300dcd148908808d26b43e969652d10760bd71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26300dcd148908808d26b43e969652d10760bd71"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "f330037a1e7e40e51f2abb3511ce881556bde2e4", "filename": "gcc/cse.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54b1de55505b7fda1731ca8849063ba1386bbba6/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54b1de55505b7fda1731ca8849063ba1386bbba6/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=54b1de55505b7fda1731ca8849063ba1386bbba6", "patch": "@@ -1496,7 +1496,8 @@ invalidate (x)\n \tremove_from_table (lookup_for_remove (x, hash, GET_MODE (x)), hash);\n       else\n \t{\n-\t  int in_table = TEST_HARD_REG_BIT (hard_regs_in_table, regno);\n+\t  HOST_WIDE_INT in_table\n+\t    = TEST_HARD_REG_BIT (hard_regs_in_table, regno);\n \t  int endregno = regno + HARD_REGNO_NREGS (regno, GET_MODE (x));\n \t  int tregno, tendregno;\n \t  register struct table_elt *p, *next;"}]}