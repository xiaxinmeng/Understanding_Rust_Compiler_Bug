{"sha": "35979cc235b090b2607d17598f73e6b079142e23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU5NzljYzIzNWIwOTBiMjYwN2QxNzU5OGY3M2U2YjA3OTE0MmUyMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-05-31T12:34:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-31T12:34:42Z"}, "message": "re PR rtl-optimization/49235 (ICE: in int_mode_for_mode, at stor-layout.c:424 with -O -fno-delete-null-pointer-checks -fno-tree-scev-cprop -ftree-vectorize -fno-vect-cost-model)\n\n\tPR rtl-optimization/49235\n\t* tree-ssa-address.c (gen_addr_rtx): Ignore base if it is const0_rtx.\n\t(create_mem_ref_raw): Create MEM_REF even if base is INTEGER_CST.\n\n\t* gcc.dg/pr49235.c: New test.\n\nFrom-SVN: r174478", "tree": {"sha": "09569d02eebfbffca04471a13849aade4b23487c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09569d02eebfbffca04471a13849aade4b23487c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35979cc235b090b2607d17598f73e6b079142e23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35979cc235b090b2607d17598f73e6b079142e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35979cc235b090b2607d17598f73e6b079142e23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35979cc235b090b2607d17598f73e6b079142e23/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f7de592d33e84831f3122a7f27ca05c7d308c69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7de592d33e84831f3122a7f27ca05c7d308c69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7de592d33e84831f3122a7f27ca05c7d308c69"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "c416db5273016d66876304d114df70b5f819302e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35979cc235b090b2607d17598f73e6b079142e23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35979cc235b090b2607d17598f73e6b079142e23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35979cc235b090b2607d17598f73e6b079142e23", "patch": "@@ -1,3 +1,9 @@\n+2011-05-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/49235\n+\t* tree-ssa-address.c (gen_addr_rtx): Ignore base if it is const0_rtx.\n+\t(create_mem_ref_raw): Create MEM_REF even if base is INTEGER_CST.\n+\n 2011-05-31  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/49093"}, {"sha": "7f9a50ca8cfcb1dbd62166cf67abf9959d740a63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35979cc235b090b2607d17598f73e6b079142e23/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35979cc235b090b2607d17598f73e6b079142e23/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=35979cc235b090b2607d17598f73e6b079142e23", "patch": "@@ -1,3 +1,8 @@\n+2011-05-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/49235\n+\t* gcc.dg/pr49235.c: New test.\n+\n 2011-05-31  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/49093"}, {"sha": "f1e589f75580c2156d4421f1545ae45bcd11fdba", "filename": "gcc/testsuite/gcc.dg/pr49235.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35979cc235b090b2607d17598f73e6b079142e23/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49235.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35979cc235b090b2607d17598f73e6b079142e23/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49235.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49235.c?ref=35979cc235b090b2607d17598f73e6b079142e23", "patch": "@@ -0,0 +1,25 @@\n+/* PR rtl-optimization/49235 */\n+/* { dg-do compile { target { int32plus } } } */\n+/* { dg-options \"-O -fno-delete-null-pointer-checks -fno-tree-scev-cprop -ftree-vectorize -fno-vect-cost-model -w\" } */\n+\n+void\n+foo (void)\n+{\n+  unsigned i;\n+  unsigned *p = 0;\n+  for (i = 0; i < 4; ++i)\n+    *p++ = 0;\n+  for (i = 0; i < 4; ++i)\n+    *p++ = 0;\n+}\n+\n+void\n+bar (void)\n+{\n+  unsigned i;\n+  unsigned *p = (unsigned *) (__UINTPTR_TYPE__) 0x12340000;\n+  for (i = 0; i < 4; ++i)\n+    *p++ = 0;\n+  for (i = 0; i < 4; ++i)\n+    *p++ = 0;\n+}"}, {"sha": "e3934e15506c1fc1f534f7eafaf0e0d4b62f6054", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35979cc235b090b2607d17598f73e6b079142e23/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35979cc235b090b2607d17598f73e6b079142e23/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=35979cc235b090b2607d17598f73e6b079142e23", "patch": "@@ -1,5 +1,5 @@\n /* Memory address lowering and addressing mode selection.\n-   Copyright (C) 2004, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2004, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -129,7 +129,7 @@ gen_addr_rtx (enum machine_mode address_mode,\n       *addr = act_elem;\n     }\n \n-  if (base)\n+  if (base && base != const0_rtx)\n     {\n       if (*addr)\n \t*addr = simplify_gen_binary (PLUS, address_mode, base, *addr);\n@@ -365,7 +365,7 @@ create_mem_ref_raw (tree type, tree alias_ptr_type, struct mem_address *addr,\n      ???  As IVOPTs does not follow restrictions to where the base\n      pointer may point to create a MEM_REF only if we know that\n      base is valid.  */\n-  if (TREE_CODE (base) == ADDR_EXPR\n+  if ((TREE_CODE (base) == ADDR_EXPR || TREE_CODE (base) == INTEGER_CST)\n       && (!index2 || integer_zerop (index2))\n       && (!addr->index || integer_zerop (addr->index)))\n     return fold_build2 (MEM_REF, type, base, addr->offset);"}]}