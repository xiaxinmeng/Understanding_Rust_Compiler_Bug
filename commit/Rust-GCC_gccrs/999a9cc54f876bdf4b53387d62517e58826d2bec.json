{"sha": "999a9cc54f876bdf4b53387d62517e58826d2bec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk5YTljYzU0Zjg3NmJkZjRiNTMzODdkNjI1MTdlNTg4MjZkMmJlYw==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2010-09-02T09:01:56Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2010-09-02T09:01:56Z"}, "message": "predicates.md (arm_sync_memory_operand): New.\n\n2010-09-02  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n\n\t* config/arm/predicates.md (arm_sync_memory_operand): New.\n\t* config/arm/sync.md (arm_sync_compare_and_swapsi): Change predicate\n        to arm_sync_memory_operand and constraint to Q.\n\t(arm_sync_compare_and_swap<mode>): Likewise.\n\t(arm_sync_compare_and_swap<mode>): Likewise.\n\t(arm_sync_lock_test_and_setsi): Likewise.\n\t(arm_sync_lock_test_and_set<mode>): Likewise.\n        (arm_sync_new_<sync_optab>si): Likewise.\n        (arm_sync_new_nandsi): Likewise.\n        (arm_sync_new_<sync_optab><mode>): Likewise.\n        (arm_sync_new_nand<mode>): Likewise.\n        (arm_sync_old_<sync_optab>si): Likewise.\n        (arm_sync_old_nandsi): Likewise.\n        (arm_sync_old_<sync_optab><mode>): Likewise.\n        (arm_sync_old_nand<mode>): Likewise.\n\nFrom-SVN: r163765", "tree": {"sha": "4683e831dc007ccb3697f36037259384cf94f02c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4683e831dc007ccb3697f36037259384cf94f02c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/999a9cc54f876bdf4b53387d62517e58826d2bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/999a9cc54f876bdf4b53387d62517e58826d2bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/999a9cc54f876bdf4b53387d62517e58826d2bec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/999a9cc54f876bdf4b53387d62517e58826d2bec/comments", "author": null, "committer": null, "parents": [{"sha": "bae077dc7589f674cefabc145a12b0908d84e98f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae077dc7589f674cefabc145a12b0908d84e98f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae077dc7589f674cefabc145a12b0908d84e98f"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "54f4861a0088a0520705fe65cbe9306d84d7955c", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999a9cc54f876bdf4b53387d62517e58826d2bec/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999a9cc54f876bdf4b53387d62517e58826d2bec/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=999a9cc54f876bdf4b53387d62517e58826d2bec", "patch": "@@ -619,6 +619,11 @@\n \t\t(and (match_test \"TARGET_32BIT\")\n \t\t     (match_operand 0 \"arm_di_operand\"))))\n \n+;; True if the operand is memory reference suitable for a ldrex/strex.\n+(define_predicate \"arm_sync_memory_operand\"\n+  (and (match_operand 0 \"memory_operand\")\n+       (match_code \"reg\" \"0\")))\n+\n ;; Predicates for parallel expanders based on mode.\n (define_special_predicate \"vect_par_constant_high\" \n   (match_code \"parallel\")"}, {"sha": "f942d1f94e74684b8801c8ac501e7b016b667d55", "filename": "gcc/config/arm/sync.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999a9cc54f876bdf4b53387d62517e58826d2bec/gcc%2Fconfig%2Farm%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999a9cc54f876bdf4b53387d62517e58826d2bec/gcc%2Fconfig%2Farm%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsync.md?ref=999a9cc54f876bdf4b53387d62517e58826d2bec", "patch": "@@ -280,7 +280,7 @@\n (define_insn \"arm_sync_compare_and_swapsi\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n         (unspec_volatile:SI\n-\t  [(match_operand:SI 1 \"memory_operand\" \"+m\")\n+\t  [(match_operand:SI 1 \"arm_sync_memory_operand\" \"+Q\")\n    \t   (match_operand:SI 2 \"s_register_operand\" \"r\")\n \t   (match_operand:SI 3 \"s_register_operand\" \"r\")]\n \t  VUNSPEC_SYNC_COMPARE_AND_SWAP))\n@@ -307,7 +307,7 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n         (zero_extend:SI\n \t  (unspec_volatile:NARROW\n-\t    [(match_operand:NARROW 1 \"memory_operand\" \"+m\")\n+\t    [(match_operand:NARROW 1 \"arm_sync_memory_operand\" \"+Q\")\n    \t     (match_operand:SI 2 \"s_register_operand\" \"r\")\n \t     (match_operand:SI 3 \"s_register_operand\" \"r\")]\n \t    VUNSPEC_SYNC_COMPARE_AND_SWAP)))\n@@ -332,7 +332,7 @@\n \n (define_insn \"arm_sync_lock_test_and_setsi\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n-        (match_operand:SI 1 \"memory_operand\" \"+m\"))\n+        (match_operand:SI 1 \"arm_sync_memory_operand\" \"+Q\"))\n    (set (match_dup 1)\n         (unspec_volatile:SI [(match_operand:SI 2 \"s_register_operand\" \"r\")]\n \t                    VUNSPEC_SYNC_LOCK))\n@@ -353,7 +353,7 @@\n \n (define_insn \"arm_sync_lock_test_and_set<mode>\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n-        (zero_extend:SI (match_operand:NARROW 1 \"memory_operand\" \"+m\")))\n+        (zero_extend:SI (match_operand:NARROW 1 \"arm_sync_memory_operand\" \"+Q\")))\n    (set (match_dup 1)\n         (unspec_volatile:NARROW [(match_operand:SI 2 \"s_register_operand\" \"r\")]\n \t                        VUNSPEC_SYNC_LOCK))\n@@ -375,7 +375,7 @@\n (define_insn \"arm_sync_new_<sync_optab>si\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n         (unspec_volatile:SI [(syncop:SI\n-                               (match_operand:SI 1 \"memory_operand\" \"+m\")\n+                               (match_operand:SI 1 \"arm_sync_memory_operand\" \"+Q\")\n                                (match_operand:SI 2 \"s_register_operand\" \"r\"))\n \t                    ]\n \t                    VUNSPEC_SYNC_NEW_OP))\n@@ -400,7 +400,7 @@\n (define_insn \"arm_sync_new_nandsi\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n         (unspec_volatile:SI [(not:SI (and:SI\n-                               (match_operand:SI 1 \"memory_operand\" \"+m\")\n+                               (match_operand:SI 1 \"arm_sync_memory_operand\" \"+Q\")\n                                (match_operand:SI 2 \"s_register_operand\" \"r\")))\n \t                    ]\n \t                    VUNSPEC_SYNC_NEW_OP))\n@@ -426,7 +426,7 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n         (unspec_volatile:SI [(syncop:SI\n                                (zero_extend:SI\n-\t\t\t         (match_operand:NARROW 1 \"memory_operand\" \"+m\"))\n+\t\t\t         (match_operand:NARROW 1 \"arm_sync_memory_operand\" \"+Q\"))\n                                (match_operand:SI 2 \"s_register_operand\" \"r\"))\n \t                    ]\n \t                    VUNSPEC_SYNC_NEW_OP))\n@@ -454,7 +454,7 @@\n \t  [(not:SI\n \t     (and:SI\n                (zero_extend:SI\t  \n-\t         (match_operand:NARROW 1 \"memory_operand\" \"+m\"))\n+\t         (match_operand:NARROW 1 \"arm_sync_memory_operand\" \"+Q\"))\n                (match_operand:SI 2 \"s_register_operand\" \"r\")))\n \t  ] VUNSPEC_SYNC_NEW_OP))\n    (set (match_dup 1)\n@@ -478,7 +478,7 @@\n (define_insn \"arm_sync_old_<sync_optab>si\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n         (unspec_volatile:SI [(syncop:SI\n-                               (match_operand:SI 1 \"memory_operand\" \"+m\")\n+                               (match_operand:SI 1 \"arm_sync_memory_operand\" \"+Q\")\n                                (match_operand:SI 2 \"s_register_operand\" \"r\"))\n \t                    ]\n \t                    VUNSPEC_SYNC_OLD_OP))\n@@ -504,7 +504,7 @@\n (define_insn \"arm_sync_old_nandsi\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n         (unspec_volatile:SI [(not:SI (and:SI\n-                               (match_operand:SI 1 \"memory_operand\" \"+m\")\n+                               (match_operand:SI 1 \"arm_sync_memory_operand\" \"+Q\")\n                                (match_operand:SI 2 \"s_register_operand\" \"r\")))\n \t                    ]\n \t                    VUNSPEC_SYNC_OLD_OP))\n@@ -531,7 +531,7 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n         (unspec_volatile:SI [(syncop:SI\n                                (zero_extend:SI\n-\t\t\t         (match_operand:NARROW 1 \"memory_operand\" \"+m\"))\n+\t\t\t         (match_operand:NARROW 1 \"arm_sync_memory_operand\" \"+Q\"))\n                                (match_operand:SI 2 \"s_register_operand\" \"r\"))\n \t                    ]\n \t                    VUNSPEC_SYNC_OLD_OP))\n@@ -558,7 +558,7 @@\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=&r\")\n         (unspec_volatile:SI [(not:SI (and:SI\n                                (zero_extend:SI\n-\t\t\t         (match_operand:NARROW 1 \"memory_operand\" \"+m\"))\n+\t\t\t         (match_operand:NARROW 1 \"arm_sync_memory_operand\" \"+Q\"))\n                                (match_operand:SI 2 \"s_register_operand\" \"r\")))\n \t                    ]\n \t                    VUNSPEC_SYNC_OLD_OP))"}]}