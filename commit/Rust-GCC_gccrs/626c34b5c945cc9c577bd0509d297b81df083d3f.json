{"sha": "626c34b5c945cc9c577bd0509d297b81df083d3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI2YzM0YjVjOTQ1Y2M5YzU3N2JkMDUwOWQyOTdiODFkZjA4M2QzZg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2008-09-30T09:52:41Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2008-09-30T09:52:41Z"}, "message": "c-common.c (empty_if_body_warning): Remove.\n\n2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* c-common.c (empty_if_body_warning): Remove.\n\t* c-common.h (empty_if_body_warning): Remove.\n\t* c-parser.c (c_parser_if_body, c_parser_else_body): Implement\n\there the -Wempty-body warning for `if' and `else' statements.\n\t* c-typeck.c (c_finish_if_stmt): Do not call empty_body_warning.\n\ncp:\n2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* parser.c (cp_parser_selection_statement): Implement here the\n\t-Wempty-body warning for `if' and `else' statements.\n\t* semantics.c (finish_if_stmt): Do not call empty_body_warning.\n\ntestsuite:\n2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* g++.dg/warn/if-empty-1.C: Copy from gcc.dg/if-empty-1.c.\n\nFrom-SVN: r140780", "tree": {"sha": "550e5d90532796178dbba4eb2e6ff1c54828d12c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/550e5d90532796178dbba4eb2e6ff1c54828d12c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/626c34b5c945cc9c577bd0509d297b81df083d3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/626c34b5c945cc9c577bd0509d297b81df083d3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/626c34b5c945cc9c577bd0509d297b81df083d3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/626c34b5c945cc9c577bd0509d297b81df083d3f/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5d60b839fd858c794384f4e6bf18005211e7add", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d60b839fd858c794384f4e6bf18005211e7add", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5d60b839fd858c794384f4e6bf18005211e7add"}], "stats": {"total": 101, "additions": 70, "deletions": 31}, "files": [{"sha": "68de57a502561e7b385b4ca9c99bf8529eccfd4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -1,3 +1,11 @@\n+2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* c-common.c (empty_if_body_warning): Remove.\n+\t* c-common.h (empty_if_body_warning): Remove.\n+\t* c-parser.c (c_parser_if_body, c_parser_else_body): Implement\n+\there the -Wempty-body warning for `if' and `else' statements.\n+\t* c-typeck.c (c_finish_if_stmt): Do not call empty_body_warning.\n+\n 2008-09-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.opt: Add msse2avx."}, {"sha": "7665b6234fa2acb089547aa5b80f144e51fcf3b7", "filename": "gcc/c-common.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -1291,31 +1291,6 @@ strict_aliasing_warning (tree otype, tree type, tree expr)\n   return false;\n }\n \n-/* Print a warning about if (); or if () .. else; constructs\n-   via the special empty statement node that we create.  INNER_THEN\n-   and INNER_ELSE are the statement lists of the if and the else\n-   block.  */\n-\n-void\n-empty_if_body_warning (tree inner_then, tree inner_else)\n-{\n-  if (TREE_CODE (inner_then) == STATEMENT_LIST\n-      && STATEMENT_LIST_TAIL (inner_then))\n-    inner_then = STATEMENT_LIST_TAIL (inner_then)->stmt;\n-\n-  if (inner_else && TREE_CODE (inner_else) == STATEMENT_LIST\n-      && STATEMENT_LIST_TAIL (inner_else))\n-    inner_else = STATEMENT_LIST_TAIL (inner_else)->stmt;\n-\n-  if (IS_EMPTY_STMT (inner_then) && !inner_else)\n-    warning (OPT_Wempty_body, \"%Hsuggest braces around empty body \"\n-             \"in an %<if%> statement\", EXPR_LOCUS (inner_then));\n-\n-  else if (inner_else && IS_EMPTY_STMT (inner_else))\n-    warning (OPT_Wempty_body, \"%Hsuggest braces around empty body \"\n-             \"in an %<else%> statement\", EXPR_LOCUS (inner_else));\n-}\n-\n /* Warn for unlikely, improbable, or stupid DECL declarations\n    of `main'.  */\n "}, {"sha": "622100a40cf3e5ae432a797ab0b511a91b0170c8", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -726,7 +726,6 @@ struct varray_head_tag;\n extern void constant_expression_warning (tree);\n extern void constant_expression_error (tree);\n extern bool strict_aliasing_warning (tree, tree, tree);\n-extern void empty_if_body_warning (tree, tree);\n extern void warnings_for_convert_and_check (tree, tree, tree);\n extern tree convert_and_check (tree, tree);\n extern void overflow_warning (tree);"}, {"sha": "9597660915d69bbfd4b8d260ce4e9e2c0b869ec3", "filename": "gcc/c-parser.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -3858,8 +3858,12 @@ c_parser_if_body (c_parser *parser, bool *if_p)\n   *if_p = c_parser_next_token_is_keyword (parser, RID_IF);\n   if (c_parser_next_token_is (parser, CPP_SEMICOLON))\n     {\n+      location_t loc = c_parser_peek_token (parser)->location;\n       add_stmt (build_empty_stmt ());\n       c_parser_consume_token (parser);\n+      if (!c_parser_next_token_is_keyword (parser, RID_ELSE))\n+\twarning_at (loc, OPT_Wempty_body,\n+\t\t    \"suggest braces around empty body in an %<if%> statement\");\n     }\n   else if (c_parser_next_token_is (parser, CPP_OPEN_BRACE))\n     add_stmt (c_parser_compound_statement (parser));\n@@ -3883,6 +3887,9 @@ c_parser_else_body (c_parser *parser)\n     c_parser_label (parser);\n   if (c_parser_next_token_is (parser, CPP_SEMICOLON))\n     {\n+      warning_at (c_parser_peek_token (parser)->location,\n+\t\t  OPT_Wempty_body,\n+\t         \"suggest braces around empty body in an %<else%> statement\");\n       add_stmt (build_empty_stmt ());\n       c_parser_consume_token (parser);\n     }"}, {"sha": "c6474ed5da16b4465216782681fa58d7fd2d4251", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -7440,8 +7440,6 @@ c_finish_if_stmt (location_t if_locus, tree cond, tree then_block,\n \t\t  &if_locus);\n     }\n \n-  empty_if_body_warning (then_block, else_block);\n-\n   stmt = build3 (COND_EXPR, void_type_node, cond, then_block, else_block);\n   SET_EXPR_LOCATION (stmt, if_locus);\n   add_stmt (stmt);"}, {"sha": "5e5c742b355a2ea018ab602d4602ba07bb6c8e5e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -1,3 +1,9 @@\n+2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* parser.c (cp_parser_selection_statement): Implement here the\n+\t-Wempty-body warning for `if' and `else' statements.\n+\t* semantics.c (finish_if_stmt): Do not call empty_body_warning.\n+\n 2008-09-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/37649"}, {"sha": "c368a1c7f6454e4efaa6815adaeb71738cf3b162", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -7155,7 +7155,17 @@ cp_parser_selection_statement (cp_parser* parser, bool *if_p)\n \t    /* Parse the then-clause.  */\n \t    in_statement = parser->in_statement;\n \t    parser->in_statement |= IN_IF_STMT;\n-\t    cp_parser_implicitly_scoped_statement (parser, &nested_if);\n+\t    if (cp_lexer_next_token_is (parser->lexer, CPP_SEMICOLON))\n+\t      {\n+\t        location_t loc = cp_lexer_peek_token (parser->lexer)->location;\n+\t\tadd_stmt (build_empty_stmt ());\n+\t\tcp_lexer_consume_token (parser->lexer);\n+\t        if (!cp_lexer_next_token_is_keyword (parser->lexer, RID_ELSE))\n+\t\t  warning_at (loc, OPT_Wempty_body, \"suggest braces around \"\n+\t\t\t      \"empty body in an %<if%> statement\");\n+\t      }\n+\t    else\n+\t      cp_parser_implicitly_scoped_statement (parser, &nested_if);\n \t    parser->in_statement = in_statement;\n \n \t    finish_then_clause (statement);\n@@ -7168,7 +7178,17 @@ cp_parser_selection_statement (cp_parser* parser, bool *if_p)\n \t\tcp_lexer_consume_token (parser->lexer);\n \t\tbegin_else_clause (statement);\n \t\t/* Parse the else-clause.  */\n-\t\tcp_parser_implicitly_scoped_statement (parser, NULL);\n+\t        if (cp_lexer_next_token_is (parser->lexer, CPP_SEMICOLON))\n+\t          {\n+\t\t    warning_at (cp_lexer_peek_token (parser->lexer)->location,\n+\t\t\t\tOPT_Wempty_body, \"suggest braces around \"\n+\t\t\t        \"empty body in an %<else%> statement\");\n+\t\t    add_stmt (build_empty_stmt ());\n+\t\t    cp_lexer_consume_token (parser->lexer);\n+\t\t  }\n+\t\telse\n+\t\t  cp_parser_implicitly_scoped_statement (parser, NULL);\n+\n \t\tfinish_else_clause (statement);\n \n \t\t/* If we are currently parsing a then-clause, then"}, {"sha": "13e9a0f56ab14817c61f1372dd89e9d9df2ecc8a", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -695,7 +695,6 @@ finish_if_stmt (tree if_stmt)\n   TREE_CHAIN (if_stmt) = NULL;\n   add_stmt (do_poplevel (scope));\n   finish_stmt ();\n-  empty_if_body_warning (THEN_CLAUSE (if_stmt), ELSE_CLAUSE (if_stmt));\n }\n \n /* Begin a while-statement.  Returns a newly created WHILE_STMT if"}, {"sha": "28086b33dbde348e3735922e8a71fb1df8536374", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -1,3 +1,7 @@\n+2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* g++.dg/warn/if-empty-1.C: Copy from gcc.dg/if-empty-1.c.\n+\n 2008-09-30  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR testsuite/36891"}, {"sha": "b29a6cb92242fff3f92477615f80d20cb7ff7e4a", "filename": "gcc/testsuite/g++.dg/warn/if-empty-1.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fif-empty-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626c34b5c945cc9c577bd0509d297b81df083d3f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fif-empty-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fif-empty-1.C?ref=626c34b5c945cc9c577bd0509d297b81df083d3f", "patch": "@@ -0,0 +1,23 @@\n+/* Test diagnostics for empty bodies in if / else.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wempty-body\" } */\n+\n+void\n+f (int x)\n+{\n+  if (x)\n+    ; /* { dg-warning \"suggest braces around empty body in an\" } */\n+  if (x)\n+    ; /* By design we don't warn in this case.  */\n+  else\n+    (void)0;\n+  if (x)\n+    (void)0;\n+  else\n+    ; /* { dg-warning \"suggest braces around empty body in an\" } */\n+  if (x)\n+    (void)0;\n+  else\n+    (void)0;\n+}"}]}