{"sha": "8d686df280fdcf004c3436048f4750ee860c8d72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2ODZkZjI4MGZkY2YwMDRjMzQzNjA0OGY0NzUwZWU4NjBjOGQ3Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@wasabisystems.com", "date": "2003-12-15T23:18:49Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2003-12-15T23:18:49Z"}, "message": "cp-demangle.c (d_demangle): If DMGL_PARAMS is not set, don't expect that we've read the entire string.\n\n\t* cp-demangle.c (d_demangle): If DMGL_PARAMS is not set, don't\n\texpect that we've read the entire string.\n\t(is_ctor_or_dtor): Don't expect that we've read the entire\n\tstring--reverse patch of 2003-11-29.\n\nFrom-SVN: r74651", "tree": {"sha": "6b3ec8e6d3b4c40586ea5513a47780f8a71880db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b3ec8e6d3b4c40586ea5513a47780f8a71880db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d686df280fdcf004c3436048f4750ee860c8d72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d686df280fdcf004c3436048f4750ee860c8d72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d686df280fdcf004c3436048f4750ee860c8d72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d686df280fdcf004c3436048f4750ee860c8d72/comments", "author": null, "committer": null, "parents": [{"sha": "b95cc51a28ae5aed45eebcc1a660fdf0a54f115d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b95cc51a28ae5aed45eebcc1a660fdf0a54f115d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b95cc51a28ae5aed45eebcc1a660fdf0a54f115d"}], "stats": {"total": 71, "additions": 40, "deletions": 31}, "files": [{"sha": "c33e83b3ef81b7c293cc45ba8fb2d9ccc988826d", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d686df280fdcf004c3436048f4750ee860c8d72/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d686df280fdcf004c3436048f4750ee860c8d72/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=8d686df280fdcf004c3436048f4750ee860c8d72", "patch": "@@ -1,3 +1,10 @@\n+2003-12-15  Ian Lance Taylor  <ian@wasabisystems.com>\n+\n+\t* cp-demangle.c (d_demangle): If DMGL_PARAMS is not set, don't\n+\texpect that we've read the entire string.\n+\t(is_ctor_or_dtor): Don't expect that we've read the entire\n+\tstring--reverse patch of 2003-11-29.\n+\n 2003-12-15  Brendan Kehoe  <brendan@zen.org>\n \n \t* libiberty/Makefile.in (floatformat.o): Add dependency on"}, {"sha": "7a806dc44b21ce9de8eb5100e6885f09baaa4ae5", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 33, "deletions": 31, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d686df280fdcf004c3436048f4750ee860c8d72/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d686df280fdcf004c3436048f4750ee860c8d72/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=8d686df280fdcf004c3436048f4750ee860c8d72", "patch": "@@ -3622,9 +3622,11 @@ d_demangle (mangled, options, palc)\n   else\n     dc = d_type (&di);\n \n-  /* If we didn't consume the entire mangled string, then we didn't\n-     successfully demangle it.  */\n-  if (d_peek_char (&di) != '\\0')\n+  /* If DMGL_PARAMS is set, then if we didn't consume the entire\n+     mangled string, then we didn't successfully demangle it.  If\n+     DMGL_PARAMS is not set, we didn't look at the trailing\n+     parameters.  */\n+  if (((options & DMGL_PARAMS) != 0) && d_peek_char (&di) != '\\0')\n     dc = NULL;\n \n #ifdef CP_DEMANGLE_DEBUG\n@@ -3829,37 +3831,37 @@ is_ctor_or_dtor (mangled, ctor_kind, dtor_kind)\n \n   dc = d_mangled_name (&di, 1);\n \n+  /* Note that because we did not pass DMGL_PARAMS, we don't expect to\n+     demangle the entire string.  */\n+\n   ret = 0;\n-  if (d_peek_char (&di) == '\\0')\n+  while (dc != NULL)\n     {\n-      while (dc != NULL)\n+      switch (dc->type)\n \t{\n-\t  switch (dc->type)\n-\t    {\n-\t    default:\n-\t      dc = NULL;\n-\t      break;\n-\t    case D_COMP_TYPED_NAME:\n-\t    case D_COMP_TEMPLATE:\n-\t    case D_COMP_RESTRICT_THIS:\n-\t    case D_COMP_VOLATILE_THIS:\n-\t    case D_COMP_CONST_THIS:\n-\t      dc = d_left (dc);\n-\t      break;\n-\t    case D_COMP_QUAL_NAME:\n-\t      dc = d_right (dc);\n-\t      break;\n-\t    case D_COMP_CTOR:\n-\t      *ctor_kind = dc->u.s_ctor.kind;\n-\t      ret = 1;\n-\t      dc = NULL;\n-\t      break;\n-\t    case D_COMP_DTOR:\n-\t      *dtor_kind = dc->u.s_dtor.kind;\n-\t      ret = 1;\n-\t      dc = NULL;\n-\t      break;\n-\t    }\n+\tdefault:\n+\t  dc = NULL;\n+\t  break;\n+\tcase D_COMP_TYPED_NAME:\n+\tcase D_COMP_TEMPLATE:\n+\tcase D_COMP_RESTRICT_THIS:\n+\tcase D_COMP_VOLATILE_THIS:\n+\tcase D_COMP_CONST_THIS:\n+\t  dc = d_left (dc);\n+\t  break;\n+\tcase D_COMP_QUAL_NAME:\n+\t  dc = d_right (dc);\n+\t  break;\n+\tcase D_COMP_CTOR:\n+\t  *ctor_kind = dc->u.s_ctor.kind;\n+\t  ret = 1;\n+\t  dc = NULL;\n+\t  break;\n+\tcase D_COMP_DTOR:\n+\t  *dtor_kind = dc->u.s_dtor.kind;\n+\t  ret = 1;\n+\t  dc = NULL;\n+\t  break;\n \t}\n     }\n "}]}