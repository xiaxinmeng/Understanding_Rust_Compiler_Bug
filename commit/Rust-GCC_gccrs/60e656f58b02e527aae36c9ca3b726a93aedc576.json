{"sha": "60e656f58b02e527aae36c9ca3b726a93aedc576", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBlNjU2ZjU4YjAyZTUyN2FhZTM2YzljYTNiNzI2YTkzYWVkYzU3Ng==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2007-04-02T21:32:10Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2007-04-02T21:32:10Z"}, "message": "ThreadStartEvent.java (Event): Event type is \"THREAD_START\" not \"THREAD_END\".\n\n        * gnu/classpath/jdwp/event/ThreadStartEvent.java (Event):\n        Event type is \"THREAD_START\" not \"THREAD_END\".\n\n        * gnu/classpath/jdwp/transport/SocketTransport.java (ITransport):\n        Handle configure strings \":port\" and \"port\".\n\nFrom-SVN: r123436", "tree": {"sha": "6434eeaa47850aab3df4ff622421947da319d444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6434eeaa47850aab3df4ff622421947da319d444"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60e656f58b02e527aae36c9ca3b726a93aedc576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e656f58b02e527aae36c9ca3b726a93aedc576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e656f58b02e527aae36c9ca3b726a93aedc576", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e656f58b02e527aae36c9ca3b726a93aedc576/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b7031d9643c03eed891a96cfb528a4f5ffa78e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3b7031d9643c03eed891a96cfb528a4f5ffa78e"}], "stats": {"total": 49, "additions": 33, "deletions": 16}, "files": [{"sha": "569c260b188a81dc813ecb96118f4278e84d2d10", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e656f58b02e527aae36c9ca3b726a93aedc576/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e656f58b02e527aae36c9ca3b726a93aedc576/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=60e656f58b02e527aae36c9ca3b726a93aedc576", "patch": "@@ -1,3 +1,11 @@\n+2007-04-02  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/event/ThreadStartEvent.java (Event):\n+\tEvent type is \"THREAD_START\" not \"THREAD_END\".\n+\n+\t* gnu/classpath/jdwp/transport/SocketTransport.java (ITransport):\n+\tHandle configure strings \":port\" and \"port\".\n+\n 2007-03-30  Andrew Haley  <aph@redhat.com>\n \n \t* javax/management/ObjectName.java: Handle 0-length names."}, {"sha": "4eff4409e8e7a813b0be8a817fe24cba9ba26398", "filename": "libjava/classpath/gnu/classpath/jdwp/event/ThreadStartEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e656f58b02e527aae36c9ca3b726a93aedc576/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FThreadStartEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e656f58b02e527aae36c9ca3b726a93aedc576/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FThreadStartEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FThreadStartEvent.java?ref=60e656f58b02e527aae36c9ca3b726a93aedc576", "patch": "@@ -1,6 +1,6 @@\n /* ThreadStartEvent.java -- An event specifying that a new thread\n    has started in the virtual machine\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2007 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -75,7 +75,7 @@\n    * @param thread  the thread ID in which event occurred\n    */\n   public ThreadStartEvent (Thread thread) {\n-    super (JdwpConstants.EventKind.THREAD_END);\n+    super (JdwpConstants.EventKind.THREAD_START);\n     _thread = thread;\n   }\n "}, {"sha": "3b0a8e7fe127f674faa0c2d8177c2aed3f797468", "filename": "libjava/classpath/gnu/classpath/jdwp/transport/SocketTransport.java", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e656f58b02e527aae36c9ca3b726a93aedc576/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FSocketTransport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e656f58b02e527aae36c9ca3b726a93aedc576/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FSocketTransport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FSocketTransport.java?ref=60e656f58b02e527aae36c9ca3b726a93aedc576", "patch": "@@ -1,5 +1,5 @@\n /* SocketTransport.java -- a socket transport\n-   Copyright (C) 2005 Free Software Foundation\n+   Copyright (C) 2005, 2007 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -89,27 +89,36 @@\n    * @param  properties  the properties of the JDWP session\n    * @throws TransportException for any configury errors\n    */\n-  public void configure (HashMap properties)\n+  public void configure(HashMap properties)\n     throws TransportException\n   {\n-    // Get address [form: \"hostname:port\"]\n-    String p = (String) properties.get (_PROPERTY_ADDRESS);\n+    // Get server [form: \"y\" or \"n\"]\n+    String p = (String) properties.get(_PROPERTY_SERVER);\n     if (p != null)\n       {\n-\tString[] s = p.split (\":\");\n-\tif (s.length == 2)\n-\t  {\n-\t    _host = s[0];\n-\t    _port = Integer.parseInt (s[1]);\n-\t  }\n+\tif (p.toLowerCase().equals(\"y\"))\n+\t  _server = true;\n       }\n \n-    // Get server [form: \"y\" or \"n\"]\n-    p = (String) properties.get (_PROPERTY_SERVER);\n+    // Get address [form: \"hostname:port\"]\n+    p = (String) properties.get(_PROPERTY_ADDRESS);\n     if (p != null)\n       {\n-\tif (p.toLowerCase().equals (\"y\"))\n-\t  _server = true;\n+\tString[] s = p.split(\":\");\n+\tif (s.length == 1)\n+\t  {\n+\t    // Port number only. Assume \"localhost\"\n+\t    _port = Integer.parseInt(s[0]);\n+\t    _host = \"localhost\";\n+\t  }\n+\telse\n+\t  {\n+\t    if (s[0].length() == 0)\n+\t      _host = \"localhost\";\n+\t    else\n+\t      _host = s[0];\n+\t    _port = Integer.parseInt(s[1]);\n+\t  }\n       }\n   }\n "}]}