{"sha": "c16e5a3596f133f3812119d7d0ddfae30b117140", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE2ZTVhMzU5NmYxMzNmMzgxMjExOWQ3ZDBkZGZhZTMwYjExNzE0MA==", "commit": {"author": {"name": "Marek Michalkiewicz", "email": "marekm@amelek.gda.pl", "date": "2002-06-08T20:38:15Z"}, "committer": {"name": "Marek Michalkiewicz", "email": "marekm@gcc.gnu.org", "date": "2002-06-08T20:38:15Z"}, "message": "avr.c (TARGET_SECTION_TYPE_FLAGS): New.\n\n\n\t* config/avr/avr.c (TARGET_SECTION_TYPE_FLAGS): New.\n\t(avr_section_type_flags): New, handle .noinit* sections.\n\nFrom-SVN: r54389", "tree": {"sha": "ffb9828bec7ee25fb84abb81451874b878998995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffb9828bec7ee25fb84abb81451874b878998995"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c16e5a3596f133f3812119d7d0ddfae30b117140", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16e5a3596f133f3812119d7d0ddfae30b117140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16e5a3596f133f3812119d7d0ddfae30b117140", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16e5a3596f133f3812119d7d0ddfae30b117140/comments", "author": null, "committer": null, "parents": [{"sha": "79bc889e3ac1527e994d809f9b1bf00abcb1857c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79bc889e3ac1527e994d809f9b1bf00abcb1857c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79bc889e3ac1527e994d809f9b1bf00abcb1857c"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "0abf2434ef349893e95ffcb854342b1b48f516eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16e5a3596f133f3812119d7d0ddfae30b117140/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16e5a3596f133f3812119d7d0ddfae30b117140/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c16e5a3596f133f3812119d7d0ddfae30b117140", "patch": "@@ -1,3 +1,8 @@\n+2002-06-08  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n+\n+\t* config/avr/avr.c (TARGET_SECTION_TYPE_FLAGS): New.\n+\t(avr_section_type_flags): New, handle .noinit* sections.\n+\n 2002-06-08  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/sh/netbsd-elf.h (SUBTARGET_EXTRA_SPECS): Define"}, {"sha": "56900ae73303bc41187d3bf759a4780b7db7c17e", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16e5a3596f133f3812119d7d0ddfae30b117140/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16e5a3596f133f3812119d7d0ddfae30b117140/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=c16e5a3596f133f3812119d7d0ddfae30b117140", "patch": "@@ -66,6 +66,7 @@ static void   avr_output_function_prologue PARAMS ((FILE *, HOST_WIDE_INT));\n static void   avr_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n static void   avr_unique_section PARAMS ((tree, int));\n static void   avr_encode_section_info PARAMS ((tree, int));\n+static unsigned int avr_section_type_flags PARAMS ((tree, const char *, int));\n \n static void   avr_asm_out_ctor PARAMS ((rtx, int));\n static void   avr_asm_out_dtor PARAMS ((rtx, int));\n@@ -220,6 +221,8 @@ int avr_case_values_threshold = 30000;\n #define TARGET_ASM_UNIQUE_SECTION avr_unique_section\n #undef TARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO avr_encode_section_info\n+#undef TARGET_SECTION_TYPE_FLAGS\n+#define TARGET_SECTION_TYPE_FLAGS avr_section_type_flags\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n@@ -4830,6 +4833,27 @@ avr_encode_section_info (decl, first)\n     }\n }\n \n+static unsigned int\n+avr_section_type_flags (decl, name, reloc)\n+     tree decl;\n+     const char *name;\n+     int reloc;\n+{\n+  unsigned int flags = default_section_type_flags (decl, name, reloc);\n+\n+  if (strncmp (name, \".noinit\", 7) == 0)\n+    {\n+      if (decl && TREE_CODE (decl) == VAR_DECL\n+\t  && DECL_INITIAL (decl) == NULL_TREE)\n+\tflags |= SECTION_BSS;  /* @nobits */\n+      else\n+\twarning (\"only uninitialized variables can be placed in the \"\n+\t\t \".noinit section\");\n+    }\n+\n+  return flags;\n+}\n+\n /* Outputs to the stdio stream FILE some\n    appropriate text to go at the start of an assembler file.  */\n "}]}