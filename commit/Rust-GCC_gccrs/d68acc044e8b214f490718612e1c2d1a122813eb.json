{"sha": "d68acc044e8b214f490718612e1c2d1a122813eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY4YWNjMDQ0ZThiMjE0ZjQ5MDcxODYxMmUxYzJkMWExMjI4MTNlYg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-09-30T02:16:00Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-09-30T02:16:00Z"}, "message": "java-tree.h: Redefine some macros and add soem declaration to handle the USE_MAPPED_LOCATION...\n\n\n\t* java-tree.h:  Redefine some macros and add soem declaration\n\tto handle the USE_MAPPED_LOCATION case.\n\t* parse.h (EXPR_WFL_QUALIFICATION):  Use operand 1, not 2.\n\t* java-tree.h (EXPR_WFL_FILENAME_NODE):  Use operand 2, not 1.\n\t* java-tree.def (EXPR_WITH_FILE_LOCATION): Only need two operands in\n\tUSE_MAPPED_LOCATION case, since EXPR_WFL_FILENAME_NODE is gone.\n\nFrom-SVN: r88323", "tree": {"sha": "3fa17ee92a3bfa8794ed1b9bee93f0ebb4d2e19b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fa17ee92a3bfa8794ed1b9bee93f0ebb4d2e19b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d68acc044e8b214f490718612e1c2d1a122813eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68acc044e8b214f490718612e1c2d1a122813eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68acc044e8b214f490718612e1c2d1a122813eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68acc044e8b214f490718612e1c2d1a122813eb/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ce3fc8ffed7f487ea24b17a01ace93082787d5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce3fc8ffed7f487ea24b17a01ace93082787d5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ce3fc8ffed7f487ea24b17a01ace93082787d5e"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "2ae9141835e8276856a76d261fb1b1c0aa436d07", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68acc044e8b214f490718612e1c2d1a122813eb/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68acc044e8b214f490718612e1c2d1a122813eb/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d68acc044e8b214f490718612e1c2d1a122813eb", "patch": "@@ -1,3 +1,12 @@\n+2004-09-29  Per Bothner  <per@bothner.com>\n+\n+\t* java-tree.h:  Redefine some macros and add soem declaration\n+\tto handle the USE_MAPPED_LOCATION case.\n+\t* parse.h (EXPR_WFL_QUALIFICATION):  Use operand 1, not 2.\n+\t* java-tree.h (EXPR_WFL_FILENAME_NODE):  Use operand 2, not 1.\n+\t* java-tree.def (EXPR_WITH_FILE_LOCATION): Only need two operands in\n+\tUSE_MAPPED_LOCATION case, since EXPR_WFL_FILENAME_NODE is gone.\n+\n 2004-09-29  Andrew Haley  <aph@redhat.com>\n \n \tPR java/17007"}, {"sha": "1cdbc5730678cdf25fa1ce1bbf077831fbe32ac4", "filename": "gcc/java/java-tree.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68acc044e8b214f490718612e1c2d1a122813eb/gcc%2Fjava%2Fjava-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68acc044e8b214f490718612e1c2d1a122813eb/gcc%2Fjava%2Fjava-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.def?ref=d68acc044e8b214f490718612e1c2d1a122813eb", "patch": "@@ -97,8 +97,13 @@ DEFTREECODE (JAVA_EXC_OBJ_EXPR, \"java_exc_obj_expr\", tcc_expression, 0)\n    (EXPR_WFL_LINENO); and column number (EXPR_WFL_COLNO).  It is\n    expanded as the contained node (EXPR_WFL_NODE);  a line note should\n    be emitted first if EXPR_WFL_EMIT_LINE_NOTE.  */\n+#ifdef USE_MAPPED_LOCATION\n+DEFTREECODE (EXPR_WITH_FILE_LOCATION, \"expr_with_file_location\",\n+\t     tcc_expression, 2)\n+#else\n DEFTREECODE (EXPR_WITH_FILE_LOCATION, \"expr_with_file_location\",\n \t     tcc_expression, 3)\n+#endif\n \n /*\n Local variables:"}, {"sha": "7ecf0917d68fda212dd8cf506be11a9534e5859e", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68acc044e8b214f490718612e1c2d1a122813eb/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68acc044e8b214f490718612e1c2d1a122813eb/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=d68acc044e8b214f490718612e1c2d1a122813eb", "patch": "@@ -1824,19 +1824,29 @@ enum\n #undef EXPR_WFL_NODE\n #define EXPR_WFL_NODE(NODE) \\\n   TREE_OPERAND (EXPR_WITH_FILE_LOCATION_CHECK (NODE), 0)\n+#ifdef USE_MAPPED_LOCATION\n+#define EXPR_WFL_LINECOL(NODE) ((NODE)->exp.locus)\n+#define EXPR_WFL_FILENAME(NODE) EXPR_FILENAME (NODE)\n+#define EXPR_WFL_LINENO(NODE) EXPR_LINENO (NODE)\n+extern tree build_expr_wfl              PARAMS ((tree, source_location));\n+extern tree expr_add_location           PARAMS ((tree, source_location, bool));\n+#define build_unknown_wfl(NODE) build_expr_wfl(NODE, UNKNOWN_LOCATION)\n+#else\n+#define EXPR_WFL_LINECOL(NODE) (EXPR_CHECK (NODE)->exp.complexity)\n+#define EXPR_WFL_LINENO(NODE) (EXPR_WFL_LINECOL (NODE) >> 12)\n+#define EXPR_WFL_COLNO(NODE) (EXPR_WFL_LINECOL (NODE) & 0xfff)\n #undef EXPR_WFL_FILENAME_NODE\n #define EXPR_WFL_FILENAME_NODE(NODE) \\\n-  TREE_OPERAND (EXPR_WITH_FILE_LOCATION_CHECK (NODE), 1)\n+  TREE_OPERAND (EXPR_WITH_FILE_LOCATION_CHECK (NODE), 2)\n #define EXPR_WFL_FILENAME(NODE) \\\n   IDENTIFIER_POINTER (EXPR_WFL_FILENAME_NODE (NODE))\n /* ??? Java uses this in all expressions.  */\n-#define EXPR_WFL_LINECOL(NODE) (EXPR_CHECK (NODE)->exp.complexity)\n-#define EXPR_WFL_LINENO(NODE) (EXPR_WFL_LINECOL (NODE) >> 12)\n-#define EXPR_WFL_COLNO(NODE) (EXPR_WFL_LINECOL (NODE) & 0xfff)\n #define EXPR_WFL_SET_LINECOL(NODE, LINE, COL) \\\n   (EXPR_WFL_LINECOL(NODE) = ((LINE) << 12) | ((COL) & 0xfff))\n \n extern tree build_expr_wfl              PARAMS ((tree, const char *, int, int));\n+#define build_unknown_wfl(NODE) build_expr_wfl(NODE, NULL, 0, 0)\n+#endif\n \n extern void java_genericize\t\tPARAMS ((tree));\n extern int java_gimplify_expr\t\tPARAMS ((tree *, tree *, tree *));"}, {"sha": "95e4b235fc70f135e414575296336259df28bbd6", "filename": "gcc/java/parse.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d68acc044e8b214f490718612e1c2d1a122813eb/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d68acc044e8b214f490718612e1c2d1a122813eb/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=d68acc044e8b214f490718612e1c2d1a122813eb", "patch": "@@ -625,7 +625,7 @@ typedef struct jdeplist_s jdeplist;\n   build_expr_wfl ((NODE), input_filename, EXPR_WFL_LINENO ((WFL)), \t\\\n \t\t  EXPR_WFL_COLNO ((WFL)))\n \n-#define EXPR_WFL_QUALIFICATION(WFL) TREE_OPERAND ((WFL), 2)\n+#define EXPR_WFL_QUALIFICATION(WFL) TREE_OPERAND ((WFL), 1)\n #define QUAL_WFL(NODE) TREE_PURPOSE (NODE)\n #define QUAL_RESOLUTION(NODE) TREE_VALUE (NODE)\n #define QUAL_DECL_TYPE(NODE) GET_SKIP_TYPE (NODE)"}]}