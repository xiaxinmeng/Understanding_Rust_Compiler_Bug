{"sha": "429c98c9a813a425c325f992126c365898f56d94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI5Yzk4YzlhODEzYTQyNWMzMjVmOTkyMTI2YzM2NTg5OGY1NmQ5NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-14T09:38:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-14T09:38:56Z"}, "message": "re PR lto/42665 (Internal compiler exception in with gfortran when using  -fwhole-program -flto -fopenmp)\n\n2010-01-14  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/42665\n\t* gimple.c (iterative_hash_gimple_type): Avoid hashing\n\terror_mark_node.\n\nFrom-SVN: r155885", "tree": {"sha": "f35899242f5d0af9ead5635e9b04bc5ccfe15035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f35899242f5d0af9ead5635e9b04bc5ccfe15035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/429c98c9a813a425c325f992126c365898f56d94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429c98c9a813a425c325f992126c365898f56d94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429c98c9a813a425c325f992126c365898f56d94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429c98c9a813a425c325f992126c365898f56d94/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c7c0158052509c4d4a0a7983c7ebf821551443c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7c0158052509c4d4a0a7983c7ebf821551443c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c7c0158052509c4d4a0a7983c7ebf821551443c"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "88f78305f8dcc47952aa0ae355dd7b00ceea30d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/429c98c9a813a425c325f992126c365898f56d94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/429c98c9a813a425c325f992126c365898f56d94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=429c98c9a813a425c325f992126c365898f56d94", "patch": "@@ -1,3 +1,9 @@\n+2010-01-14  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/42665\n+\t* gimple.c (iterative_hash_gimple_type): Avoid hashing\n+\terror_mark_node.\n+\n 2010-01-14  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/42709"}, {"sha": "dce5ba59fb7729221fd646f3c667ad2771afc322", "filename": "gcc/gimple.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/429c98c9a813a425c325f992126c365898f56d94/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/429c98c9a813a425c325f992126c365898f56d94/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=429c98c9a813a425c325f992126c365898f56d94", "patch": "@@ -3707,8 +3707,12 @@ iterative_hash_gimple_type (tree type, hashval_t val,\n   /* For integer types hash the types min/max values and the string flag.  */\n   if (TREE_CODE (type) == INTEGER_TYPE)\n     {\n-      v = iterative_hash_expr (TYPE_MIN_VALUE (type), v);\n-      v = iterative_hash_expr (TYPE_MAX_VALUE (type), v);\n+      /* OMP lowering can introduce error_mark_node in place of\n+\t random local decls in types.  */\n+      if (TYPE_MIN_VALUE (type) != error_mark_node)\n+\tv = iterative_hash_expr (TYPE_MIN_VALUE (type), v);\n+      if (TYPE_MAX_VALUE (type) != error_mark_node)\n+\tv = iterative_hash_expr (TYPE_MAX_VALUE (type), v);\n       v = iterative_hash_hashval_t (TYPE_STRING_FLAG (type), v);\n     }\n "}]}