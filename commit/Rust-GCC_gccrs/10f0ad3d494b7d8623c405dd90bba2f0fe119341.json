{"sha": "10f0ad3d494b7d8623c405dd90bba2f0fe119341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBmMGFkM2Q0OTRiN2Q4NjIzYzQwNWRkOTBiYmEyZjBmZTExOTM0MQ==", "commit": {"author": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1998-05-06T04:54:01Z"}, "committer": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1998-05-06T04:54:01Z"}, "message": "toplev.h: New file.\n\nWed May  6 06:35:38 1998  Robert Lipe  <robertl@dgii.com>\n        * toplev.h: New file.   Protypes for functions in toplev.c.\n        * tree.h, rtl.h: Deleted protos for functions in toplev.c.\n        * c-common.c, c-convert.c, c-decl.c, c-iterate.c, c-lex.c,\n        c-parse.in, c-parse.y, c-pragma.c, c-typeck.c, calls.c,\n        convert.c, dwarf2out.c, except.c, expr.c, final.c, fold-const.c,\n        function.c, hash.c, profile.c, real.c, reg-stack.c, regclass.c,\n        reload.c, reload1.c, stmt.c, stor-layout.c, tlink.c, tree.c,\n        varasm.c: include it.\n\nFrom-SVN: r19564", "tree": {"sha": "26783a67a7eaea3136d5a9699c9e154e07530d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26783a67a7eaea3136d5a9699c9e154e07530d3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10f0ad3d494b7d8623c405dd90bba2f0fe119341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10f0ad3d494b7d8623c405dd90bba2f0fe119341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10f0ad3d494b7d8623c405dd90bba2f0fe119341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10f0ad3d494b7d8623c405dd90bba2f0fe119341/comments", "author": null, "committer": null, "parents": [{"sha": "5f6da3024b11795fa6e902504b720df378dc8087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f6da3024b11795fa6e902504b720df378dc8087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f6da3024b11795fa6e902504b720df378dc8087"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "e03d39b7f32071f1220e0e80b16802c8cff7b17e", "filename": "gcc/convert.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -26,6 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"convert.h\"\n+#include \"toplev.h\"\n \n /* Convert EXPR to some pointer or reference type TYPE.\n "}, {"sha": "110a62261c3ea2280c6e2be223a39b44600cd541", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -40,6 +40,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"expr.h\"\n #include \"except.h\"\n #include \"dwarf2.h\"\n+#include \"toplev.h\"\n \n /* We cannot use <assert.h> in GCC source, since that would include\n    GCC's assert.h, which may not be compatible with the host compiler.  */"}, {"sha": "2d614f39f49b75aae12bf5983b13435a31c0a7e9", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -404,6 +404,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"output.h\"\n+#include \"toplev.h\"\n \n /* One to use setjmp/longjmp method of generating code for exception\n    handling.  */"}, {"sha": "3fb9280bd57c7ed81a136a521d37d091504286cf", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -38,6 +38,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"output.h\"\n #include \"typeclass.h\"\n #include \"defaults.h\"\n+#include \"toplev.h\"\n \n #define CEIL(x,y) (((x) + (y) - 1) / (y))\n "}, {"sha": "84214c5f917feb4d20c2876e3f8b56e5e647e0d7", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -67,6 +67,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"defaults.h\"\n #include \"output.h\"\n #include \"except.h\"\n+#include \"toplev.h\"\n \n /* Get N_SLINE and N_SOL from stab.h if we can expect the file to exist.  */\n #if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)"}, {"sha": "c284ae2f67895230182d5bc6e021336c65ed383b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -47,6 +47,7 @@ Boston, MA 02111-1307, USA.  */\n #include <setjmp.h>\n #include \"flags.h\"\n #include \"tree.h\"\n+#include \"toplev.h\"\n \n /* Handle floating overflow for `const_binop'.  */\n static jmp_buf float_error;"}, {"sha": "f2bced234ac528ca2961bf77452039c18f3ffc98", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -55,6 +55,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"output.h\"\n #include \"basic-block.h\"\n #include \"obstack.h\"\n+#include \"toplev.h\"\n \n #ifndef TRAMPOLINE_ALIGNMENT\n #define TRAMPOLINE_ALIGNMENT FUNCTION_BOUNDARY"}, {"sha": "1428ae1c26b1df53d2461fc653b70a0b0808d602", "filename": "gcc/hash.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fhash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fhash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -22,6 +22,8 @@ Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"system.h\"\n #include \"hash.h\"\n #include \"obstack.h\"\n+#include \"gansidecl.h\"\n+#include \"toplev.h\"\n \n /* Obstack allocation and deallocation routines.  */\n #define obstack_chunk_alloc xmalloc"}, {"sha": "060ecfc81af9a06e7bdecf11cef6f2a8c5d98f85", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -51,6 +51,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"tree.h\"\n #include \"output.h\"\n #include \"gcov-io.h\"\n+#include \"toplev.h\"\n \n extern char * xmalloc ();\n "}, {"sha": "ac560499d611ff1e6b094e1f616a908736290589", "filename": "gcc/real.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -23,6 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include \"tree.h\"\n+#include \"toplev.h\"\n \n /* To enable support of XFmode extended real floating point, define\n LONG_DOUBLE_TYPE_SIZE 96 in the tm.h file (m68k.h or i386.h)."}, {"sha": "6496badbef8b388ca34dccc346b3b4620df6f38b", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -166,6 +166,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n #include \"insn-flags.h\"\n+#include \"toplev.h\"\n \n #ifdef STACK_REGS\n "}, {"sha": "5fef265dda67c034ab8d1984a06970e0e4158cbf", "filename": "gcc/regclass.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -34,6 +34,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"recog.h\"\n #include \"reload.h\"\n #include \"real.h\"\n+#include \"toplev.h\"\n \n #ifndef REGISTER_MOVE_COST\n #define REGISTER_MOVE_COST(x, y) 2"}, {"sha": "ecc46a283cda15630eb224e4132079f448fe8b4b", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -100,6 +100,7 @@ a register with any other reload.  */\n #include \"real.h\"\n #include \"output.h\"\n #include \"expr.h\"\n+#include \"toplev.h\"\n \n #ifndef REGISTER_MOVE_COST\n #define REGISTER_MOVE_COST(x, y) 2"}, {"sha": "74322795c97cf8b5ff3e0b17408b431697a9316e", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -35,6 +35,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"real.h\"\n+#include \"toplev.h\"\n \n /* This file contains the reload pass of the compiler, which is\n    run after register allocation has been done.  It checks that"}, {"sha": "4e26e78a0e6620f36f736755fd3e3e2e69f39827", "filename": "gcc/stmt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -50,6 +50,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"loop.h\"\n #include \"recog.h\"\n #include \"machmode.h\"\n+#include \"toplev.h\"\n \n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free"}, {"sha": "606ebb1ab17592c7a1cd6a313df9e1887d64301b", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -28,6 +28,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"function.h\"\n #include \"rtl.h\"\n #include \"expr.h\"\n+#include \"toplev.h\"\n \n #define CEIL(x,y) (((x) + (y) - 1) / (y))\n "}, {"sha": "c12e8c16a6edc942f405eee950b4e1995abebc01", "filename": "gcc/tlink.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -24,6 +24,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"system.h\"\n #include \"hash.h\"\n #include \"demangle.h\"\n+#include \"toplev.h\"\n \n #define MAX_ITERATIONS 17\n "}, {"sha": "8a2d382f2683f5c8d86b0ef69ac2059674f04415", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -46,6 +46,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"except.h\"\n #include \"function.h\"\n #include \"obstack.h\"\n+#include \"toplev.h\"\n \n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free"}, {"sha": "ed24384755ee887dc96d1e95985e7bf147c22f68", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f0ad3d494b7d8623c405dd90bba2f0fe119341/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=10f0ad3d494b7d8623c405dd90bba2f0fe119341", "patch": "@@ -41,6 +41,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"regs.h\"\n #include \"defaults.h\"\n #include \"real.h\"\n+#include \"toplev.h\"\n \n #include \"obstack.h\"\n #include \"c-pragma.h\""}]}