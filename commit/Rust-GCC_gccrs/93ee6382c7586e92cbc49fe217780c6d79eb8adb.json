{"sha": "93ee6382c7586e92cbc49fe217780c6d79eb8adb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNlZTYzODJjNzU4NmU5MmNiYzQ5ZmUyMTc3ODBjNmQ3OWViOGFkYg==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-04T00:14:58Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-04T00:14:58Z"}, "message": "frontend-passes.c (cfe_register_funcs): Return early in the case of an inline intrinsic function.\n\n\t* frontend-passes.c (cfe_register_funcs): Return early in the case\n\tof an inline intrinsic function.\n\t(optimize_binop_array_assignment): Skip optimization in the case of\n\tan inline intrinsic function.\n\nFrom-SVN: r180911", "tree": {"sha": "2e5e989c9334d7dec6fa0110ae26bf2b2ed1694f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e5e989c9334d7dec6fa0110ae26bf2b2ed1694f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93ee6382c7586e92cbc49fe217780c6d79eb8adb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ee6382c7586e92cbc49fe217780c6d79eb8adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93ee6382c7586e92cbc49fe217780c6d79eb8adb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ee6382c7586e92cbc49fe217780c6d79eb8adb/comments", "author": null, "committer": null, "parents": [{"sha": "00b9bf8b7def3842e0c41376887aa41a9cec5bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b9bf8b7def3842e0c41376887aa41a9cec5bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00b9bf8b7def3842e0c41376887aa41a9cec5bc0"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "6fca42978c2b77b26cb11bad6db24ba6588a7fa9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ee6382c7586e92cbc49fe217780c6d79eb8adb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ee6382c7586e92cbc49fe217780c6d79eb8adb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=93ee6382c7586e92cbc49fe217780c6d79eb8adb", "patch": "@@ -1,3 +1,10 @@\n+2011-11-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* frontend-passes.c (cfe_register_funcs): Return early in the case\n+\tof an inline intrinsic function.\n+\t(optimize_binop_array_assignment): Skip optimization in the case of\n+\tan inline intrinsic function.\n+\n 2011-11-04  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* array.c (match_subscript): Skip whitespaces before setting locus."}, {"sha": "a19f22deac517a1d6c44eaf305b32032e29f524f", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ee6382c7586e92cbc49fe217780c6d79eb8adb/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ee6382c7586e92cbc49fe217780c6d79eb8adb/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=93ee6382c7586e92cbc49fe217780c6d79eb8adb", "patch": "@@ -203,8 +203,8 @@ cfe_register_funcs (gfc_expr **e, int *walk_subtrees ATTRIBUTE_UNUSED,\n       /* Conversions are handled on the fly by the middle end,\n \t transpose during trans-* stages and TRANSFER by the middle end.  */\n       if ((*e)->value.function.isym->id == GFC_ISYM_CONVERSION\n-\t  || (*e)->value.function.isym->id == GFC_ISYM_TRANSPOSE\n-\t  || (*e)->value.function.isym->id == GFC_ISYM_TRANSFER)\n+\t  || (*e)->value.function.isym->id == GFC_ISYM_TRANSFER\n+\t  || gfc_inline_intrinsic_function_p (*e))\n \treturn 0;\n \n       /* Don't create an array temporary for elemental functions,\n@@ -567,7 +567,8 @@ optimize_binop_array_assignment (gfc_code *c, gfc_expr **rhs, bool seen_op)\n \t   && ! (e->value.function.isym\n \t\t && (e->value.function.isym->elemental\n \t\t     || e->ts.type != c->expr1->ts.type\n-\t\t     || e->ts.kind != c->expr1->ts.kind)))\n+\t\t     || e->ts.kind != c->expr1->ts.kind))\n+\t   && ! gfc_inline_intrinsic_function_p (e))\n     {\n \n       gfc_code *n;"}]}