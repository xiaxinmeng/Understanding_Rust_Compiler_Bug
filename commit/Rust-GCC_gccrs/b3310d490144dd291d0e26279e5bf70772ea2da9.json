{"sha": "b3310d490144dd291d0e26279e5bf70772ea2da9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMzMTBkNDkwMTQ0ZGQyOTFkMGUyNjI3OWU1YmY3MDc3MmVhMmRhOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-01-25T17:16:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-01-25T17:16:28Z"}, "message": "re PR c++/51992 (internal compiler error: tree code \u2018target_expr\u2019 is not supported in LTO streams)\n\n\tPR c++/51992\n\t* tree.c (find_decls_types_in_node): Walk gimple_call_fntype.\n\nFrom-SVN: r183527", "tree": {"sha": "1b411d991175462cc0575e5e3ab707d45afaa067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b411d991175462cc0575e5e3ab707d45afaa067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3310d490144dd291d0e26279e5bf70772ea2da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3310d490144dd291d0e26279e5bf70772ea2da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3310d490144dd291d0e26279e5bf70772ea2da9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3310d490144dd291d0e26279e5bf70772ea2da9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06e1d03dc90b2daf18c06346ff5cabe266f0b6f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e1d03dc90b2daf18c06346ff5cabe266f0b6f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06e1d03dc90b2daf18c06346ff5cabe266f0b6f3"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "82e5165d04a096a70a6a8c8005a7ab9854d00e9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3310d490144dd291d0e26279e5bf70772ea2da9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3310d490144dd291d0e26279e5bf70772ea2da9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3310d490144dd291d0e26279e5bf70772ea2da9", "patch": "@@ -1,3 +1,8 @@\n+2012-01-25  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51992\n+\t* tree.c (find_decls_types_in_node): Walk gimple_call_fntype.\n+\n 2012-01-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/51987"}, {"sha": "493b040c4d8df57ec965c0328d2626ac581d0de5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3310d490144dd291d0e26279e5bf70772ea2da9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3310d490144dd291d0e26279e5bf70772ea2da9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b3310d490144dd291d0e26279e5bf70772ea2da9", "patch": "@@ -1,3 +1,8 @@\n+2012-01-25  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51992\n+\t* g++.dg/lto/pr51992_0.C: New.\n+\n 2012-01-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/51987"}, {"sha": "deb232cc2a983ac34a80acaea61d448947b69e8b", "filename": "gcc/testsuite/g++.dg/lto/pr51992_0.C", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3310d490144dd291d0e26279e5bf70772ea2da9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51992_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3310d490144dd291d0e26279e5bf70772ea2da9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51992_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51992_0.C?ref=b3310d490144dd291d0e26279e5bf70772ea2da9", "patch": "@@ -0,0 +1,53 @@\n+// PR c++/51992\n+// { dg-lto-do assemble }\n+\n+template<typename Enum>\n+class QFlags\n+{\n+    int i;\n+    inline QFlags(Enum f) : i(f) {}\n+};\n+class QString {};\n+class KComponentData;\n+class KConfig\n+{\n+public:\n+    enum OpenFlag {\n+        IncludeGlobals = 0x01,\n+\tCascadeConfig = 0x02,\n+\tFullConfig = IncludeGlobals|CascadeConfig\n+    };\n+    typedef QFlags<OpenFlag> OpenFlags;\n+};\n+template <class T>\n+class KSharedPtr {};\n+class KSharedConfig : public KConfig\n+{\n+public:\n+  typedef KSharedPtr<KSharedConfig> Ptr;\n+    static KSharedConfig::Ptr openConfig(const QString& fileName = QString(),\n+\t\t\t\t         OpenFlags mode = FullConfig,\n+\t\t\t\t\t const char *resourceType = \"config\");\n+    static KSharedConfig::Ptr openConfig(const KComponentData &componentData,\n+\t\t\t\t         const QString &fileName = QString(),\n+                                         OpenFlags mode = FullConfig,\n+\t\t\t\t\t const char *resourceType = \"config\");\n+};\n+typedef KSharedConfig::Ptr KSharedConfigPtr;\n+namespace KGlobal\n+{\n+    KComponentData &mainComponent();\n+};\n+KSharedConfigPtr KSharedConfig::openConfig(const QString& fileName,\n+                                           OpenFlags flags,\n+                                           const char *resType)\n+{\n+    return openConfig(KGlobal::mainComponent(), fileName, flags, resType);\n+}\n+KSharedConfigPtr KSharedConfig::openConfig(const KComponentData &componentData,\n+                                           const QString& fileName,\n+                                           OpenFlags flags,\n+                                           const char *resType)\n+{\n+    return KSharedConfigPtr();\n+}"}, {"sha": "34bcb39b8e90e17d47e32550efc451e9effc37b9", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3310d490144dd291d0e26279e5bf70772ea2da9/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3310d490144dd291d0e26279e5bf70772ea2da9/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b3310d490144dd291d0e26279e5bf70772ea2da9", "patch": "@@ -5037,6 +5037,9 @@ find_decls_types_in_node (struct cgraph_node *n, struct free_lang_data_d *fld)\n \t{\n \t  gimple stmt = gsi_stmt (si);\n \n+\t  if (is_gimple_call (stmt))\n+\t    find_decls_types (gimple_call_fntype (stmt), fld);\n+\n \t  for (i = 0; i < gimple_num_ops (stmt); i++)\n \t    {\n \t      tree arg = gimple_op (stmt, i);"}]}