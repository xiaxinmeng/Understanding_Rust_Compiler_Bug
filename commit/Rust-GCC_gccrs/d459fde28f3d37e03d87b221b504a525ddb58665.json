{"sha": "d459fde28f3d37e03d87b221b504a525ddb58665", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ1OWZkZTI4ZjNkMzdlMDNkODdiMjIxYjUwNGE1MjVkZGI1ODY2NQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-07-31T16:39:35Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-07-31T16:39:35Z"}, "message": "[ARM][2/3] Make if_neg_move and if_move_neg into insn_and_split\n\n\t* config/arm/arm.md (*if_neg_move): Convert to insn_and_split.\n\tEnable for TARGET_32BIT.\n\t(*if_move_neg): Likewise.\n\nFrom-SVN: r226447", "tree": {"sha": "4134c89067ee6803482cb1ef8e43caa6744997ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4134c89067ee6803482cb1ef8e43caa6744997ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d459fde28f3d37e03d87b221b504a525ddb58665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d459fde28f3d37e03d87b221b504a525ddb58665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d459fde28f3d37e03d87b221b504a525ddb58665", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d459fde28f3d37e03d87b221b504a525ddb58665/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0a5daa4018308b0a7fa2e96bfc0abf031c506e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0a5daa4018308b0a7fa2e96bfc0abf031c506e9"}], "stats": {"total": 66, "additions": 44, "deletions": 22}, "files": [{"sha": "5b9fe091337ff43a07b1c8975492dd74e4bc8f04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d459fde28f3d37e03d87b221b504a525ddb58665/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d459fde28f3d37e03d87b221b504a525ddb58665/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d459fde28f3d37e03d87b221b504a525ddb58665", "patch": "@@ -1,3 +1,9 @@\n+2015-07-31  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (*if_neg_move): Convert to insn_and_split.\n+\tEnable for TARGET_32BIT.\n+\t(*if_move_neg): Likewise.\n+\n 2015-07-31  Nick Clifton  <nickc@redhat.com>\n \n \t* config/m32r/m32r.c (m32r_attribute_identifier): New function."}, {"sha": "128f4acccf0bb9481389be281f40877b9bd726f3", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 38, "deletions": 22, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d459fde28f3d37e03d87b221b504a525ddb58665/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d459fde28f3d37e03d87b221b504a525ddb58665/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=d459fde28f3d37e03d87b221b504a525ddb58665", "patch": "@@ -10064,21 +10064,24 @@\n    (set_attr \"type\" \"multiple\")]\n )\n \n-(define_insn \"*if_neg_move\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r\")\n+(define_insn_and_split \"*if_neg_move\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=l,r\")\n \t(if_then_else:SI\n \t (match_operator 4 \"arm_comparison_operator\"\n \t  [(match_operand 3 \"cc_register\" \"\") (const_int 0)])\n-\t (neg:SI (match_operand:SI 2 \"s_register_operand\" \"r,r,r\"))\n-\t (match_operand:SI 1 \"arm_not_operand\" \"0,?rI,K\")))]\n-  \"TARGET_ARM\"\n-  \"@\n-   rsb%d4\\\\t%0, %2, #0\n-   mov%D4\\\\t%0, %1\\;rsb%d4\\\\t%0, %2, #0\n-   mvn%D4\\\\t%0, #%B1\\;rsb%d4\\\\t%0, %2, #0\"\n+\t (neg:SI (match_operand:SI 2 \"s_register_operand\" \"l,r\"))\n+\t (match_operand:SI 1 \"s_register_operand\" \"0,0\")))]\n+  \"TARGET_32BIT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(cond_exec (match_op_dup 4 [(match_dup 3) (const_int 0)])\n+\t      (set (match_dup 0) (neg:SI (match_dup 2))))]\n+  \"\"\n   [(set_attr \"conds\" \"use\")\n-   (set_attr \"length\" \"4,8,8\")\n-   (set_attr \"type\" \"logic_shift_imm,multiple,multiple\")]\n+   (set_attr \"length\" \"4\")\n+   (set_attr \"arch\" \"t2,32\")\n+   (set_attr \"enabled_for_depr_it\" \"yes,no\")\n+   (set_attr \"type\" \"logic_shift_imm\")]\n )\n \n (define_insn \"*ifcompare_move_neg\"\n@@ -10097,21 +10100,34 @@\n    (set_attr \"type\" \"multiple\")]\n )\n \n-(define_insn \"*if_move_neg\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r\")\n+(define_insn_and_split \"*if_move_neg\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=l,r\")\n \t(if_then_else:SI\n \t (match_operator 4 \"arm_comparison_operator\"\n \t  [(match_operand 3 \"cc_register\" \"\") (const_int 0)])\n-\t (match_operand:SI 1 \"arm_not_operand\" \"0,?rI,K\")\n-\t (neg:SI (match_operand:SI 2 \"s_register_operand\" \"r,r,r\"))))]\n-  \"TARGET_ARM\"\n-  \"@\n-   rsb%D4\\\\t%0, %2, #0\n-   mov%d4\\\\t%0, %1\\;rsb%D4\\\\t%0, %2, #0\n-   mvn%d4\\\\t%0, #%B1\\;rsb%D4\\\\t%0, %2, #0\"\n+\t (match_operand:SI 1 \"s_register_operand\" \"0,0\")\n+\t (neg:SI (match_operand:SI 2 \"s_register_operand\" \"l,r\"))))]\n+  \"TARGET_32BIT\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(cond_exec (match_dup 5)\n+\t      (set (match_dup 0) (neg:SI (match_dup 2))))]\n+  {\n+    machine_mode mode = GET_MODE (operands[3]);\n+    rtx_code rc = GET_CODE (operands[4]);\n+\n+    if (mode == CCFPmode || mode == CCFPEmode)\n+      rc = reverse_condition_maybe_unordered (rc);\n+    else\n+      rc = reverse_condition (rc);\n+\n+    operands[5] = gen_rtx_fmt_ee (rc, VOIDmode, operands[3], const0_rtx);\n+  }\n   [(set_attr \"conds\" \"use\")\n-   (set_attr \"length\" \"4,8,8\")\n-   (set_attr \"type\" \"logic_shift_imm,multiple,multiple\")]\n+   (set_attr \"length\" \"4\")\n+   (set_attr \"arch\" \"t2,32\")\n+   (set_attr \"enabled_for_depr_it\" \"yes,no\")\n+   (set_attr \"type\" \"logic_shift_imm\")]\n )\n \n (define_insn \"*arith_adjacentmem\""}]}