{"sha": "45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4MTU0NDFjM2E2ZDJkYTk0YTVmM2IxMjk3ZmNjMTNhZTNlYmViNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-10-25T21:30:16Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-10-25T21:30:16Z"}, "message": "rs6000: Remove some vec_extract_even/odd expanders.\n\nThe ones that expand to VPERM can be handled by generic code.\nThe even v4si and v4sf expanders remain until vector.md can be\nupdated to not invoke them directly.\n\n        * config/rs6000/altivec.md (vec_extract_evenv8hi,\n        vec_extract_evenv16qi, vec_extract_oddv4si,\n        vec_extract_oddv4sf): Remove.\n\nFrom-SVN: r180452", "tree": {"sha": "abb550036e3580cdbad1accd865953bab48a8bac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abb550036e3580cdbad1accd865953bab48a8bac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6/comments", "author": null, "committer": null, "parents": [{"sha": "c3a5818eb21528f43a47e603dccb3e0b42c0c879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a5818eb21528f43a47e603dccb3e0b42c0c879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3a5818eb21528f43a47e603dccb3e0b42c0c879"}], "stats": {"total": 138, "additions": 6, "deletions": 132}, "files": [{"sha": "dc3fdda955f0d916ec5d0dc75245e4096e8e7f21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6", "patch": "@@ -1,5 +1,9 @@\n 2011-10-25  Richard Henderson  <rth@redhat.com>\n \n+\t* config/rs6000/altivec.md (vec_extract_evenv8hi,\n+\tvec_extract_evenv16qi, vec_extract_oddv4si,\n+\tvec_extract_oddv4sf): Remove.\n+\n \t* config/spu/spu.md (vec_extract_evenv4si, vec_extract_evenv4sf,\n \tvec_extract_evenv8hi, vec_extract_evenv16qi, vec_extract_oddv4si,\n \tvec_extract_oddv4sf, vec_extract_oddv8hi, vec_extract_oddv16qi,"}, {"sha": "a3a8d77bc2ec36a3bb1e8727cc2e3a0706dfd42d", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 2, "deletions": 132, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=45815441c3a6d2da94a5f3b1297fcc13ae3ebeb6", "patch": "@@ -2429,6 +2429,7 @@\n   \"stvrxl %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n \n+;; ??? This is still used directly by vector.md\n (define_expand \"vec_extract_evenv4si\"\n  [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"\")\n@@ -2462,6 +2463,7 @@\n   DONE;\n }\")\n \n+;; ??? This is still used directly by vector.md\n (define_expand \"vec_extract_evenv4sf\"\n  [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"\")\n@@ -2495,138 +2497,6 @@\n   DONE;\n }\")\n \n-(define_expand \"vec_extract_evenv8hi\"\n- [(set (match_operand:V8HI 0 \"register_operand\" \"\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"\")]\n-                      UNSPEC_EXTEVEN_V8HI))]\n-  \"TARGET_ALTIVEC\"\n-  \"\n-{ \n-  rtx mask = gen_reg_rtx (V16QImode);\n-  rtvec v = rtvec_alloc (16);\n-  \n-  RTVEC_ELT (v, 0) = gen_rtx_CONST_INT (QImode, 0);\n-  RTVEC_ELT (v, 1) = gen_rtx_CONST_INT (QImode, 1);\n-  RTVEC_ELT (v, 2) = gen_rtx_CONST_INT (QImode, 4);\n-  RTVEC_ELT (v, 3) = gen_rtx_CONST_INT (QImode, 5);\n-  RTVEC_ELT (v, 4) = gen_rtx_CONST_INT (QImode, 8);\n-  RTVEC_ELT (v, 5) = gen_rtx_CONST_INT (QImode, 9);\n-  RTVEC_ELT (v, 6) = gen_rtx_CONST_INT (QImode, 12);\n-  RTVEC_ELT (v, 7) = gen_rtx_CONST_INT (QImode, 13);\n-  RTVEC_ELT (v, 8) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 9) = gen_rtx_CONST_INT (QImode, 17);\n-  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, 20);\n-  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, 21);\n-  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, 24);\n-  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, 25);\n-  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, 28);\n-  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, 29);\n-  emit_insn (gen_vec_initv16qi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n-  emit_insn (gen_altivec_vperm_v8hi (operands[0], operands[1], operands[2], mask));\n-  \n-  DONE;\n-}\")\n-\n-(define_expand \"vec_extract_evenv16qi\"\n- [(set (match_operand:V16QI 0 \"register_operand\" \"\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"\")]\n-                      UNSPEC_EXTEVEN_V16QI))]\n-  \"TARGET_ALTIVEC\"\n-  \"\n-{ \n-  rtx mask = gen_reg_rtx (V16QImode);\n-  rtvec v = rtvec_alloc (16);\n-  \n-  RTVEC_ELT (v, 0) = gen_rtx_CONST_INT (QImode, 0);\n-  RTVEC_ELT (v, 1) = gen_rtx_CONST_INT (QImode, 2);\n-  RTVEC_ELT (v, 2) = gen_rtx_CONST_INT (QImode, 4);\n-  RTVEC_ELT (v, 3) = gen_rtx_CONST_INT (QImode, 6);\n-  RTVEC_ELT (v, 4) = gen_rtx_CONST_INT (QImode, 8);\n-  RTVEC_ELT (v, 5) = gen_rtx_CONST_INT (QImode, 10);\n-  RTVEC_ELT (v, 6) = gen_rtx_CONST_INT (QImode, 12);\n-  RTVEC_ELT (v, 7) = gen_rtx_CONST_INT (QImode, 14);\n-  RTVEC_ELT (v, 8) = gen_rtx_CONST_INT (QImode, 16);\n-  RTVEC_ELT (v, 9) = gen_rtx_CONST_INT (QImode, 18);\n-  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, 20);\n-  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, 22);\n-  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, 24);\n-  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, 26);\n-  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, 28);\n-  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, 30);\n-  emit_insn (gen_vec_initv16qi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n-  emit_insn (gen_altivec_vperm_v16qi (operands[0], operands[1], operands[2], mask));\n-  \n-  DONE;\n-}\")\n-\n-(define_expand \"vec_extract_oddv4si\"\n- [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"\")]\n-                      UNSPEC_EXTODD_V4SI))]\n-  \"TARGET_ALTIVEC\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (V16QImode);\n-  rtvec v = rtvec_alloc (16);\n-\n-  RTVEC_ELT (v, 0) = gen_rtx_CONST_INT (QImode, 4);\n-  RTVEC_ELT (v, 1) = gen_rtx_CONST_INT (QImode, 5);\n-  RTVEC_ELT (v, 2) = gen_rtx_CONST_INT (QImode, 6);\n-  RTVEC_ELT (v, 3) = gen_rtx_CONST_INT (QImode, 7);\n-  RTVEC_ELT (v, 4) = gen_rtx_CONST_INT (QImode, 12);\n-  RTVEC_ELT (v, 5) = gen_rtx_CONST_INT (QImode, 13);\n-  RTVEC_ELT (v, 6) = gen_rtx_CONST_INT (QImode, 14);\n-  RTVEC_ELT (v, 7) = gen_rtx_CONST_INT (QImode, 15);\n-  RTVEC_ELT (v, 8) = gen_rtx_CONST_INT (QImode, 20);\n-  RTVEC_ELT (v, 9) = gen_rtx_CONST_INT (QImode, 21);\n-  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, 22);\n-  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, 23);\n-  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, 28);\n-  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, 29);\n-  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, 30);\n-  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, 31);\n-  emit_insn (gen_vec_initv16qi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n-  emit_insn (gen_altivec_vperm_v4si (operands[0], operands[1], operands[2], mask));\n-  \n-  DONE;\n-}\")\n-\n-(define_expand \"vec_extract_oddv4sf\"\n- [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n-        (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"\")\n-                      (match_operand:V4SF 2 \"register_operand\" \"\")]\n-                      UNSPEC_EXTODD_V4SF))]\n-  \"TARGET_ALTIVEC\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (V16QImode);\n-  rtvec v = rtvec_alloc (16);\n-\n-  RTVEC_ELT (v, 0) = gen_rtx_CONST_INT (QImode, 4);\n-  RTVEC_ELT (v, 1) = gen_rtx_CONST_INT (QImode, 5);\n-  RTVEC_ELT (v, 2) = gen_rtx_CONST_INT (QImode, 6);\n-  RTVEC_ELT (v, 3) = gen_rtx_CONST_INT (QImode, 7);\n-  RTVEC_ELT (v, 4) = gen_rtx_CONST_INT (QImode, 12);\n-  RTVEC_ELT (v, 5) = gen_rtx_CONST_INT (QImode, 13);\n-  RTVEC_ELT (v, 6) = gen_rtx_CONST_INT (QImode, 14);\n-  RTVEC_ELT (v, 7) = gen_rtx_CONST_INT (QImode, 15);\n-  RTVEC_ELT (v, 8) = gen_rtx_CONST_INT (QImode, 20);\n-  RTVEC_ELT (v, 9) = gen_rtx_CONST_INT (QImode, 21);\n-  RTVEC_ELT (v, 10) = gen_rtx_CONST_INT (QImode, 22);\n-  RTVEC_ELT (v, 11) = gen_rtx_CONST_INT (QImode, 23);\n-  RTVEC_ELT (v, 12) = gen_rtx_CONST_INT (QImode, 28);\n-  RTVEC_ELT (v, 13) = gen_rtx_CONST_INT (QImode, 29);\n-  RTVEC_ELT (v, 14) = gen_rtx_CONST_INT (QImode, 30);\n-  RTVEC_ELT (v, 15) = gen_rtx_CONST_INT (QImode, 31);\n-  emit_insn (gen_vec_initv16qi (mask, gen_rtx_PARALLEL (V16QImode, v)));\n-  emit_insn (gen_altivec_vperm_v4sf (operands[0], operands[1], operands[2], mask));\n-\n-  DONE;\n-}\")\n-\n (define_insn \"vpkuhum_nomode\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand 1 \"register_operand\" \"v\")"}]}