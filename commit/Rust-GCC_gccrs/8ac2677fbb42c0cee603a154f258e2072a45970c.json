{"sha": "8ac2677fbb42c0cee603a154f258e2072a45970c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFjMjY3N2ZiYjQyYzBjZWU2MDNhMTU0ZjI1OGUyMDcyYTQ1OTcwYw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-02-23T19:22:04Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-02-23T19:22:04Z"}, "message": "codecvt.h: Use __builtin_alloca.\n\n\n2001-02-23  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/codecvt.h: Use __builtin_alloca.\n\t* include/bits/ostream.tcc: Same.\n\t* include/bits/fstream.tcc: Same.\n\nFrom-SVN: r40007", "tree": {"sha": "eeb7a4c206a64e0a2acd80fc6f79245ce9e1d365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeb7a4c206a64e0a2acd80fc6f79245ce9e1d365"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ac2677fbb42c0cee603a154f258e2072a45970c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ac2677fbb42c0cee603a154f258e2072a45970c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ac2677fbb42c0cee603a154f258e2072a45970c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ac2677fbb42c0cee603a154f258e2072a45970c/comments", "author": null, "committer": null, "parents": [{"sha": "cd33b1d7ec6b8375cfded84b029fce0bebda4c4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd33b1d7ec6b8375cfded84b029fce0bebda4c4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd33b1d7ec6b8375cfded84b029fce0bebda4c4e"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "3cdc574f74e7ca26e0d102a724dbaa63d6b02bf1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac2677fbb42c0cee603a154f258e2072a45970c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac2677fbb42c0cee603a154f258e2072a45970c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8ac2677fbb42c0cee603a154f258e2072a45970c", "patch": "@@ -1,3 +1,9 @@\n+2001-02-23  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/codecvt.h: Use __builtin_alloca.\n+\t* include/bits/ostream.tcc: Same.\n+\t* include/bits/fstream.tcc: Same.\n+\n 2001-02-23  Alexandre Oliva <aoliva@redhat.com>\n \n \t* mknumeric_limits (CC): Use VAR=${VAR=...} form."}, {"sha": "71b5b84ff9885a77db98e54a7acc2d70dd1842af", "filename": "libstdc++-v3/include/bits/codecvt.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac2677fbb42c0cee603a154f258e2072a45970c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac2677fbb42c0cee603a154f258e2072a45970c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h?ref=8ac2677fbb42c0cee603a154f258e2072a45970c", "patch": "@@ -419,7 +419,7 @@\n \t  if (__int_bom)\n \t    {\t  \n \t      size_t __size = __from_end - __from;\n-\t      intern_type* __cfixed = static_cast<intern_type*>(alloca(sizeof(intern_type) * (__size + 1)));\n+\t      intern_type* __cfixed = static_cast<intern_type*>(__builtin_alloca(sizeof(intern_type) * (__size + 1)));\n \t      __cfixed[0] = static_cast<intern_type>(__int_bom);\n \t      char_traits<intern_type>::copy(__cfixed + 1, __from, __size);\n \t      __cfrom = reinterpret_cast<char*>(__cfixed);"}, {"sha": "07e1f61cc9fbd8019fc27491e04125fd31a97171", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac2677fbb42c0cee603a154f258e2072a45970c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac2677fbb42c0cee603a154f258e2072a45970c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=8ac2677fbb42c0cee603a154f258e2072a45970c", "patch": "@@ -262,7 +262,7 @@ namespace std\n \t      // Part one: (Re)fill external buf (_M_file->_IO_*) from\n \t      // external byte sequence (whatever physical byte sink or\n \t      // FILE actually is.)\n-\t      char_type* __conv_buf = static_cast<char_type*>(alloca(sizeof(char_type) * _M_buf_size));\n+\t      char_type* __conv_buf = static_cast<char_type*>(__builtin_alloca(sizeof(char_type) * _M_buf_size));\n \t      streamsize __size = _M_file->xsgetn(__conv_buf, _M_buf_size);\n \t      \n \t      // Part two: (Re)fill internal buf contents from external buf.\n@@ -436,7 +436,7 @@ namespace std\n \t  // stack. Convert internal buffer plus __c (ie,\n \t  // \"pending sequence\") to temporary conversion buffer.\n \t  int __plen = _M_out_end - _M_out_beg;\n-\t  char_type* __pbuf = static_cast<char_type*>(alloca(sizeof(char_type) * __plen + 1));\n+\t  char_type* __pbuf = static_cast<char_type*>(__builtin_alloca(sizeof(char_type) * __plen + 1));\n \t  traits_type::copy(__pbuf, this->pbase(), __plen);\n \t  if (!__testeof)\n \t    {\n@@ -445,7 +445,7 @@ namespace std\n \t    }\n \n \t  char_type* __pend;\n-\t  char* __conv_buf = static_cast<char*>(alloca(__plen));\n+\t  char* __conv_buf = static_cast<char*>(__builtin_alloca(__plen));\n \t  char* __conv_end;\n \t  _M_state_beg = _M_state_cur;\n "}, {"sha": "98de13a65654cd2c2f679b6ef0a4c2798140ddf1", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac2677fbb42c0cee603a154f258e2072a45970c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac2677fbb42c0cee603a154f258e2072a45970c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=8ac2677fbb42c0cee603a154f258e2072a45970c", "patch": "@@ -417,7 +417,7 @@ namespace std {\n       typedef typename traits_type::int_type int_type;\n       \n       int_type __plen = static_cast<size_t>(__newlen - __oldlen); \n-      char_type* __pads = static_cast<char_type*>(alloca(sizeof(char_type) * __plen));\n+      char_type* __pads = static_cast<char_type*>(__builtin_alloca(sizeof(char_type) * __plen));\n       traits_type::assign(__pads, __plen, __ios.fill()); \n \n       char_type* __beg;\n@@ -496,7 +496,7 @@ namespace std {\n \t{\n \t  try {\n \t    streamsize __w = __out.width();\n-\t    _CharT* __pads = static_cast<_CharT*>(alloca(sizeof(_CharT) * __w));\n+\t    _CharT* __pads = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __w));\n \t    __pads[0] = __c;\n \t    streamsize __len = 1;\n \t    if (__w > __len)\n@@ -529,7 +529,7 @@ namespace std {\n \t{\n \t  try {\n \t    streamsize __w = __out.width();\n-\t    char* __pads = static_cast<char*>(alloca(__w + 1));\n+\t    char* __pads = static_cast<char*>(__builtin_alloca(__w + 1));\n \t    __pads[0] = __c;\n \t    streamsize __len = 1;\n \t    if (__w > __len)\n@@ -596,15 +596,15 @@ namespace std {\n       if (__cerb)\n \t{\n \t  size_t __clen = __ctraits_type::length(__s);\n-\t  _CharT* __ws = static_cast<_CharT*>(alloca(sizeof(_CharT) * (__clen + 1)));\n+\t  _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * (__clen + 1)));\n \t  for (size_t  __i = 0; __i <= __clen; ++__i)\n \t    __ws[__i] = __out.widen(__s[__i]);\n \t  _CharT* __str = __ws;\n \t  \n \t  try {\n \t    streamsize __len = static_cast<streamsize>(__clen);\n \t    streamsize __w = __out.width();\n-\t    _CharT* __pads = static_cast<_CharT*>(alloca(sizeof(_CharT) * __w));\n+\t    _CharT* __pads = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __w));\n \n \t    if (__w > __len)\n \t      {\n@@ -637,7 +637,7 @@ namespace std {\n \t{\n \t  try {\n \t    streamsize __w = __out.width();\n-\t    char* __pads = static_cast<char*>(alloca(__w));\n+\t    char* __pads = static_cast<char*>(__builtin_alloca(__w));\n \t    streamsize __len = static_cast<streamsize>(_Traits::length(__s));\n \t    if (__w > __len)\n \t      {"}]}