{"sha": "60c063faab4ddaec9129430d27524572d4549a24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBjMDYzZmFhYjRkZGFlYzkxMjk0MzBkMjc1MjQ1NzJkNDU0OWEyNA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2009-04-09T17:44:23Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2009-04-09T17:44:23Z"}, "message": "re PR libfortran/39665 (Fortran IO using unaligned accesses to read/write doubles.)\n\n2009-04-09  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/39665\n\t* io/io.h (st_parameter_dt): Add aligned attribute to u.p.value.\n\t* io/read.c (convert_real): Add note about alignment requirements.\n\nFrom-SVN: r145852", "tree": {"sha": "0c969a24443ac4004b44a4238a2e03514a8eb292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c969a24443ac4004b44a4238a2e03514a8eb292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60c063faab4ddaec9129430d27524572d4549a24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c063faab4ddaec9129430d27524572d4549a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60c063faab4ddaec9129430d27524572d4549a24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c063faab4ddaec9129430d27524572d4549a24/comments", "author": null, "committer": null, "parents": [{"sha": "d5e90cabae9cc024a575908f141db044366ba384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e90cabae9cc024a575908f141db044366ba384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5e90cabae9cc024a575908f141db044366ba384"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "f14cf603bb626107fad168722f21fab1f57a4cf8", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c063faab4ddaec9129430d27524572d4549a24/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c063faab4ddaec9129430d27524572d4549a24/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=60c063faab4ddaec9129430d27524572d4549a24", "patch": "@@ -1,3 +1,9 @@\n+2009-04-09  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/39665\n+\t* io/io.h (st_parameter_dt): Add aligned attribute to u.p.value.\n+\t* io/read.c (convert_real): Add note about alignment requirements.\n+\n 2009-04-09  Nick Clifton  <nickc@redhat.com>\n \n \t* m4/cshift0.m4: Change copyright header to refer to version 3"}, {"sha": "5ee0979c1e8838f1c02767ad60f9fbb6d94e3a3a", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c063faab4ddaec9129430d27524572d4549a24/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c063faab4ddaec9129430d27524572d4549a24/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=60c063faab4ddaec9129430d27524572d4549a24", "patch": "@@ -498,10 +498,11 @@ typedef struct st_parameter_dt\n \t  /* A flag used to identify when a non-standard expanded namelist read\n \t     has occurred.  */\n \t  int expanded_read;\n-\t  /* Storage area for values except for strings.  Must be large\n-\t     enough to hold a complex value (two reals) of the largest\n-\t     kind.  */\n-\t  char value[32];\n+\t  /* Storage area for values except for strings.  Must be\n+\t     large enough to hold a complex value (two reals) of the\n+\t     largest kind.  It must also be sufficiently aligned for\n+\t     assigning any type we use into it.  */\n+\t  char value[32]  __attribute__ ((aligned (__BIGGEST_ALIGNMENT__)));\n \t  GFC_IO_INT size_used;\n \t} p;\n       /* This pad size must be equal to the pad_size declared in"}, {"sha": "23a8fa3019dd49a6448d383148fac611bb95c121", "filename": "libgfortran/io/read.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c063faab4ddaec9129430d27524572d4549a24/libgfortran%2Fio%2Fread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c063faab4ddaec9129430d27524572d4549a24/libgfortran%2Fio%2Fread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fread.c?ref=60c063faab4ddaec9129430d27524572d4549a24", "patch": "@@ -126,8 +126,10 @@ max_value (int length, int signed_flag)\n \n /* convert_real()-- Convert a character representation of a floating\n  * point number to the machine number.  Returns nonzero if there is a\n- * range problem during conversion.  TODO: handle not-a-numbers and\n- * infinities.  */\n+ * range problem during conversion.  Note: many architectures\n+ * (e.g. IA-64, HP-PA) require that the storage pointed to by the dest\n+ * argument is properly aligned for the type in question.  TODO:\n+ * handle not-a-numbers and infinities.  */\n \n int\n convert_real (st_parameter_dt *dtp, void *dest, const char *buffer, int length)"}]}