{"sha": "32bd0353db37af2cb023e575ed4ce8c944fd9dba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJiZDAzNTNkYjM3YWYyY2IwMjNlNTc1ZWQ0Y2U4Yzk0NGZkOWRiYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-19T13:25:36Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-19T13:25:36Z"}, "message": "Fix typos.\n\n\tPR testsuite/100658\n\ngcc/cp/ChangeLog:\n\n\t* mangle.c (write_encoding): Fix typos.\n\ngcc/jit/ChangeLog:\n\n\t* libgccjit.c (gcc_jit_context_new_function): Fix typos.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/local1.c: Fix typos.\n\t* gcc.dg/ucnid-5-utf8.c: Likewise.\n\t* gcc.dg/ucnid-5.c: Likewise.", "tree": {"sha": "53fc8ce9f521053c458f2203399a6fc84c7a2d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53fc8ce9f521053c458f2203399a6fc84c7a2d36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32bd0353db37af2cb023e575ed4ce8c944fd9dba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32bd0353db37af2cb023e575ed4ce8c944fd9dba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32bd0353db37af2cb023e575ed4ce8c944fd9dba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32bd0353db37af2cb023e575ed4ce8c944fd9dba/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bb4b7a5ca984f7d860f33c9b791f425b264a71f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ee14c2d5a25b3ff185f4b9561046ffc074dd3bfe", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=32bd0353db37af2cb023e575ed4ce8c944fd9dba", "patch": "@@ -835,7 +835,7 @@ write_encoding (const tree decl)\n     }\n }\n \n-/* Interface to substitution and identifer mangling, used by the\n+/* Interface to substitution and identifier mangling, used by the\n    module name mangler.  */\n \n void"}, {"sha": "7fa948007ad8f0b206ecce46512f166273e78ac5", "filename": "gcc/jit/libgccjit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Fjit%2Flibgccjit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Fjit%2Flibgccjit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Flibgccjit.c?ref=32bd0353db37af2cb023e575ed4ce8c944fd9dba", "patch": "@@ -909,7 +909,7 @@ gcc_jit_context_new_function (gcc_jit_context *ctxt,\n   RETURN_NULL_IF_FAIL (return_type, ctxt, loc, \"NULL return_type\");\n   RETURN_NULL_IF_FAIL (name, ctxt, loc, \"NULL name\");\n   /* The assembler can only handle certain names, so for now, enforce\n-     C's rules for identiers upon the name, using ISALPHA and ISALNUM\n+     C's rules for identifiers upon the name, using ISALPHA and ISALNUM\n      from safe-ctype.h to ignore the current locale.\n      Eventually we'll need some way to interact with e.g. C++ name\n      mangling.  */"}, {"sha": "448c71b056d022dc1907b4afe34170b7adb4dcbc", "filename": "gcc/testsuite/gcc.dg/local1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Ftestsuite%2Fgcc.dg%2Flocal1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Ftestsuite%2Fgcc.dg%2Flocal1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flocal1.c?ref=32bd0353db37af2cb023e575ed4ce8c944fd9dba", "patch": "@@ -10,7 +10,7 @@\n \t  the later daclaration is the same as the linkage specified at\n \t  the prior declaration.  If no prior declaration is visible,\n \t  or if the prior declaration specifies no linkage, then the\n-\t  identifer has external linkage.\n+\t  identifier has external linkage.\n \n    This is PR 14366.  */\n "}, {"sha": "43310b6ada9dd8b15aa81a8149e64dff091cb30e", "filename": "gcc/testsuite/gcc.dg/ucnid-5-utf8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-5-utf8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-5-utf8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-5-utf8.c?ref=32bd0353db37af2cb023e575ed4ce8c944fd9dba", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-skip-if \"No dollar in identfiers\" { avr-*-* powerpc-ibm-aix* } } */\n+/* { dg-skip-if \"No dollar in identifiers\" { avr-*-* powerpc-ibm-aix* } } */\n /* { dg-skip-if \"\" { ! ucn } } */\n /* { dg-options \"-std=c99 -fdollars-in-identifiers -g\" } */\n void abort (void);"}, {"sha": "6f0f475303213821c47752670084baf53ef2a5d6", "filename": "gcc/testsuite/gcc.dg/ucnid-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bd0353db37af2cb023e575ed4ce8c944fd9dba/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-5.c?ref=32bd0353db37af2cb023e575ed4ce8c944fd9dba", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-skip-if \"No dollar in identfiers\" { avr-*-* powerpc-ibm-aix* } } */\n+/* { dg-skip-if \"No dollar in identifiers\" { avr-*-* powerpc-ibm-aix* } } */\n /* { dg-options \"-std=c99 -fdollars-in-identifiers -g\" } */\n void abort (void);\n "}]}