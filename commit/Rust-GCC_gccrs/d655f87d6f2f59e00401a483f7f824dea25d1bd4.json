{"sha": "d655f87d6f2f59e00401a483f7f824dea25d1bd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY1NWY4N2Q2ZjJmNTllMDA0MDFhNDgzZjdmODI0ZGVhMjVkMWJkNA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-06-15T11:58:18Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-06-15T11:58:18Z"}, "message": "2000-06-15  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\tFix for PR java.lang/258:\n\t* prims.cc (_Jv_PrimClass): Set state of primitive class to\n\tJV_STATE_DONE, to prevent accidental initialization.\n\t* java/lang/natClass.cc (_Jv_IsAssignableFrom): Call\n\t_Jv_InterfaceAssignableFrom if target is an interface and source is\n\tan interface or an abstract class. Remove redundant initializeClass\n\tcalls. Remove duplicate if_idt test.\n\t* java/lang/Class.h (_Jv_InterfaceAssignableFrom): New function.\n\nFrom-SVN: r34562", "tree": {"sha": "0b9fe4dc58f8743700d1abbcfca867013097d4b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b9fe4dc58f8743700d1abbcfca867013097d4b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d655f87d6f2f59e00401a483f7f824dea25d1bd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d655f87d6f2f59e00401a483f7f824dea25d1bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d655f87d6f2f59e00401a483f7f824dea25d1bd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d655f87d6f2f59e00401a483f7f824dea25d1bd4/comments", "author": null, "committer": null, "parents": [{"sha": "ecb3185ea3697fce050ad04805a8aebd0ece6570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb3185ea3697fce050ad04805a8aebd0ece6570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecb3185ea3697fce050ad04805a8aebd0ece6570"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "db0639020e1cba0e62cb17e73a6f8402849a988a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d655f87d6f2f59e00401a483f7f824dea25d1bd4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d655f87d6f2f59e00401a483f7f824dea25d1bd4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d655f87d6f2f59e00401a483f7f824dea25d1bd4", "patch": "@@ -1,3 +1,14 @@\n+2000-06-15  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\tFix for PR java.lang/258:\n+\t* prims.cc (_Jv_PrimClass): Set state of primitive class to \n+\tJV_STATE_DONE, to prevent accidental initialization.\n+\t* java/lang/natClass.cc (_Jv_IsAssignableFrom): Call \n+\t_Jv_InterfaceAssignableFrom if target is an interface and source is an\n+\tinterface or an abstract class.\tRemove redundant initializeClass calls. \n+\tRemove duplicate if_idt test. \n+\t* java/lang/Class.h (_Jv_InterfaceAssignableFrom): New function.\n+\n 2000-05-31  Tom Tromey  <tromey@cygnus.com>\n \n \t* prims.cc (DECLARE_PRIM_TYPE): Define a vtable as well."}, {"sha": "995e631ace56ae1119c81605a3f123d49a7f14da", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 29, "deletions": 15, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d655f87d6f2f59e00401a483f7f824dea25d1bd4/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d655f87d6f2f59e00401a483f7f824dea25d1bd4/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=d655f87d6f2f59e00401a483f7f824dea25d1bd4", "patch": "@@ -921,24 +921,16 @@ _Jv_IsAssignableFrom (jclass target, jclass source)\n \n   if (target->isInterface())\n     {\n-      // Abstract classes have no IDTs, so compare superclasses instead.\n-      if (java::lang::reflect::Modifier::isAbstract (source->accflags))\n-\t{\n-\t  jclass super = source->getSuperclass();\n-\t  return super ? _Jv_IsAssignableFrom (target, super) : false;\n-\t}\n-\n-      if (source->state != JV_STATE_DONE)\n-\tsource->initializeClass ();\n-      if (target->state != JV_STATE_DONE)\n-\ttarget->initializeClass ();\n-\n+      // Abstract classes have no IDT, and IDTs provide no way to check\n+      // two interfaces for assignability.\n+      if (__builtin_expect \n+         (java::lang::reflect::Modifier::isAbstract (source->accflags)\n+          || source->isInterface(), false))\n+        return _Jv_InterfaceAssignableFrom (target, source);\n+\t\n       _Jv_IDispatchTable *cl_idt = source->idt;\n       _Jv_IDispatchTable *if_idt = target->idt;\n \n-      if (if_idt == NULL) // The interface has no implementations\n-\treturn false;\n-\n       if (__builtin_expect ((if_idt == NULL), false))\n \treturn false; // No class implementing TARGET has been loaded.    \n       jshort cl_iindex = cl_idt->cls.iindex;\n@@ -954,6 +946,28 @@ _Jv_IsAssignableFrom (jclass target, jclass source)\n   return false;\n }\n \n+// Interface type checking, the slow way. Returns TRUE if IFACE is a \n+// superinterface of SOURCE. This is used when SOURCE is also an interface,\n+// or a class with no interface dispatch table.\n+jboolean\n+_Jv_InterfaceAssignableFrom (jclass iface, jclass source)\n+{\n+  for (int i = 0; i < source->interface_count; i++)\n+    {\n+      jclass interface = source->interfaces[i];\n+      if (iface == interface\n+          || _Jv_InterfaceAssignableFrom (iface, interface))\n+        return true;      \n+    }\n+    \n+  if (!source->isInterface()\n+      && source->superclass \n+      && _Jv_InterfaceAssignableFrom (iface, source->superclass))\n+    return true;\n+        \n+  return false;\n+}\n+\n jboolean\n _Jv_IsInstanceOf(jobject obj, jclass cl)\n {"}, {"sha": "c7c764c604f71a557ed11590cc4255828451cc07", "filename": "libjava/prims.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d655f87d6f2f59e00401a483f7f824dea25d1bd4/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d655f87d6f2f59e00401a483f7f824dea25d1bd4/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=d655f87d6f2f59e00401a483f7f824dea25d1bd4", "patch": "@@ -543,7 +543,7 @@ class _Jv_PrimClass : public java::lang::Class\n       interfaces = NULL;\n       loader = NULL;\n       interface_count = 0;\n-      state = JV_STATE_NOTHING;\n+      state = JV_STATE_DONE;\n       thread = NULL;\n \n       // Note that we have to set `methods' to NULL."}]}