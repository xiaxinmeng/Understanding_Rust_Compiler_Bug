{"sha": "95c6cc0ab5c348a6eaa5bb595d44f03d830c3863", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjNmNjMGFiNWMzNDhhNmVhYTViYjU5NWQ0NGYwM2Q4MzBjMzg2Mw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-01-05T16:35:20Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-01-05T16:35:20Z"}, "message": "Class.h (getSignature): Updated.\n\n\t* java/lang/Class.h (getSignature): Updated.\n\t* java/lang/Class.java (getSignature): Updated.\n\t* java/lang/natClass.cc (getSignature): Added `is_constructor'\n\targument.\n\t(getConstructor): Ensure constructor is public.\n\t(_getConstructors): Check for public-ness of constructor when\n\t`declared' is false, not when it is true.\n\nFrom-SVN: r31241", "tree": {"sha": "daac5e5bddf454e798664add5ce18fea5a484326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/daac5e5bddf454e798664add5ce18fea5a484326"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863/comments", "author": null, "committer": null, "parents": [{"sha": "c0029be5f7c89b85a5197c9ec8420e3de3137798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0029be5f7c89b85a5197c9ec8420e3de3137798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0029be5f7c89b85a5197c9ec8420e3de3137798"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "bd316c808b364a6ae0d16f0216897d4a1dd3e1b5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=95c6cc0ab5c348a6eaa5bb595d44f03d830c3863", "patch": "@@ -1,3 +1,13 @@\n+2000-01-04  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* java/lang/Class.h (getSignature): Updated.\n+\t* java/lang/Class.java (getSignature): Updated.\n+\t* java/lang/natClass.cc (getSignature): Added `is_constructor'\n+\targument.\n+\t(getConstructor): Ensure constructor is public.\n+\t(_getConstructors): Check for public-ness of constructor when\n+\t`declared' is false, not when it is true.\n+\n 2000-01-04  Warren Levy  <warrenl@cygnus.com>\n \n \t* java/net/natPlainDatagramSocketImpl.cc (peek): Removed unnecesary"}, {"sha": "0b43ad317277afa8a5f20c6b01d3cb9d29657c36", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=95c6cc0ab5c348a6eaa5bb595d44f03d830c3863", "patch": "@@ -103,7 +103,7 @@ class java::lang::Class : public java::lang::Object\n   JArray<jclass> *getInterfaces (void);\n \n   void getSignature (java::lang::StringBuffer *buffer);\n-  static jstring getSignature (JArray<jclass> *);\n+  static jstring getSignature (JArray<jclass> *, jboolean is_constructor);\n   java::lang::reflect::Method *getMethod (jstring, JArray<jclass> *);\n   JArray<java::lang::reflect::Method *> *getMethods (void);\n "}, {"sha": "4c49cd93b3577d18e000b921386a99d1f1d114c9", "filename": "libjava/java/lang/Class.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863/libjava%2Fjava%2Flang%2FClass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863/libjava%2Fjava%2Flang%2FClass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.java?ref=95c6cc0ab5c348a6eaa5bb595d44f03d830c3863", "patch": "@@ -89,7 +89,8 @@ public Field getField (String fieldName)\n   public native Class[] getInterfaces ();\n \n   private final native void getSignature (StringBuffer buffer);\n-  private static final native String getSignature (Class[] parameterTypes);\n+  private static final native String getSignature (Class[] parameterTypes,\n+\t\t\t\t\t\t   boolean is_construtor);\n \n   public native Method getMethod (String methodName, Class[] parameterTypes)\n     throws NoSuchMethodException, SecurityException;"}, {"sha": "152be02b7cead2bf0695b09ce6588a28cb2759f4", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95c6cc0ab5c348a6eaa5bb595d44f03d830c3863/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=95c6cc0ab5c348a6eaa5bb595d44f03d830c3863", "patch": "@@ -101,7 +101,7 @@ java::lang::Class::forName (jstring className)\n java::lang::reflect::Constructor *\n java::lang::Class::getConstructor (JArray<jclass> *param_types)\n {\n-  jstring partial_sig = getSignature (param_types);\n+  jstring partial_sig = getSignature (param_types, true);\n   jint hash = partial_sig->hashCode ();\n \n   int i = isPrimitive () ? 0 : method_count;\n@@ -114,7 +114,7 @@ java::lang::Class::getConstructor (JArray<jclass> *param_types)\n \t  // Found it.  For getConstructor, the constructor must be\n \t  // public.\n \t  using namespace java::lang::reflect;\n-\t  if (Modifier::isPublic(methods[i].accflags))\n+\t  if (! Modifier::isPublic(methods[i].accflags))\n \t    break;\n \t  Constructor *cons = new Constructor ();\n \t  cons->offset = (char *) (&methods[i]) - (char *) methods;\n@@ -139,7 +139,7 @@ java::lang::Class::_getConstructors (jboolean declared)\n       if (method->name == NULL\n \t  && ! _Jv_equalUtf8Consts (method->name, init_name))\n \tcontinue;\n-      if (declared\n+      if (! declared\n \t  && ! java::lang::reflect::Modifier::isPublic(method->accflags))\n \tcontinue;\n       numConstructors++;\n@@ -154,7 +154,7 @@ java::lang::Class::_getConstructors (jboolean declared)\n       if (method->name == NULL\n \t  && ! _Jv_equalUtf8Consts (method->name, init_name))\n \tcontinue;\n-      if (declared\n+      if (! declared\n \t  && ! java::lang::reflect::Modifier::isPublic(method->accflags))\n \tcontinue;\n       java::lang::reflect::Constructor *cons\n@@ -169,7 +169,7 @@ java::lang::Class::_getConstructors (jboolean declared)\n java::lang::reflect::Constructor *\n java::lang::Class::getDeclaredConstructor (JArray<jclass> *param_types)\n {\n-  jstring partial_sig = getSignature (param_types);\n+  jstring partial_sig = getSignature (param_types, true);\n   jint hash = partial_sig->hashCode ();\n \n   int i = isPrimitive () ? 0 : method_count;\n@@ -277,22 +277,25 @@ java::lang::Class::getSignature (java::lang::StringBuffer *buffer)\n // This doesn't have to be native.  It is an implementation detail\n // only called from the C++ code, though, so maybe this is clearer.\n jstring\n-java::lang::Class::getSignature (JArray<jclass> *param_types)\n+java::lang::Class::getSignature (JArray<jclass> *param_types,\n+\t\t\t\t jboolean is_constructor)\n {\n   java::lang::StringBuffer *buf = new java::lang::StringBuffer ();\n   buf->append((jchar) '(');\n   jclass *v = elements (param_types);\n   for (int i = 0; i < param_types->length; ++i)\n     v[i]->getSignature(buf);\n   buf->append((jchar) ')');\n+  if (is_constructor)\n+    buf->append((jchar) 'V');\n   return buf->toString();\n }\n \n java::lang::reflect::Method *\n java::lang::Class::getDeclaredMethod (jstring name,\n \t\t\t\t      JArray<jclass> *param_types)\n {\n-  jstring partial_sig = getSignature (param_types);\n+  jstring partial_sig = getSignature (param_types, false);\n   jint p_len = partial_sig->length();\n   _Jv_Utf8Const *utf_name = _Jv_makeUtf8Const (name);\n   int i = isPrimitive () ? 0 : method_count;\n@@ -446,7 +449,7 @@ java::lang::Class::getInterfaces (void)\n java::lang::reflect::Method *\n java::lang::Class::getMethod (jstring name, JArray<jclass> *param_types)\n {\n-  jstring partial_sig = getSignature (param_types);\n+  jstring partial_sig = getSignature (param_types, false);\n   jint p_len = partial_sig->length();\n   _Jv_Utf8Const *utf_name = _Jv_makeUtf8Const (name);\n   for (Class *klass = this; klass; klass = klass->getSuperclass())"}]}