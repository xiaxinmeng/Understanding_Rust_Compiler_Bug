{"sha": "3c674e3e41e8b983161b3af788f1ab09e163808d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M2NzRlM2U0MWU4Yjk4MzE2MWIzYWY3ODhmMWFiMDllMTYzODA4ZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-04-18T20:06:07Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-04-18T20:06:07Z"}, "message": "Revert r258133.\n\n2018-04-18  Martin Liska  <mliska@suse.cz>\n\n\tRevert\n\t2018-03-02  Eric Botcazou  <ebotcazou@adacore.com>\n\n\tPR ipa/83983\n\t* ipa-devirt.c (odr_subtypes_equivalent_p): Get the ODR type of both\n\targuments if they are comparable.\n\nFrom-SVN: r259478", "tree": {"sha": "b306466df9ac2f7d36b7dd7a33b3e8e9c7d15a8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b306466df9ac2f7d36b7dd7a33b3e8e9c7d15a8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c674e3e41e8b983161b3af788f1ab09e163808d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c674e3e41e8b983161b3af788f1ab09e163808d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c674e3e41e8b983161b3af788f1ab09e163808d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c674e3e41e8b983161b3af788f1ab09e163808d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5722ce75437dd48d2cbaf8ad8cc12f6c4e7dfaba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5722ce75437dd48d2cbaf8ad8cc12f6c4e7dfaba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5722ce75437dd48d2cbaf8ad8cc12f6c4e7dfaba"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "e214a7166e9eed2e0b42a1a8ea51c487e401a9b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c674e3e41e8b983161b3af788f1ab09e163808d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c674e3e41e8b983161b3af788f1ab09e163808d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c674e3e41e8b983161b3af788f1ab09e163808d", "patch": "@@ -1,3 +1,12 @@\n+2018-04-18  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert\n+\t2018-03-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ipa/83983\n+\t* ipa-devirt.c (odr_subtypes_equivalent_p): Get the ODR type of both\n+\targuments if they are comparable.\n+\n 2018-04-18  Martin Liska  <mliska@suse.cz>\n \n \tRevert"}, {"sha": "a0c095e1d5d9def64319b2eb4a23fefc1233062b", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c674e3e41e8b983161b3af788f1ab09e163808d/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c674e3e41e8b983161b3af788f1ab09e163808d/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=3c674e3e41e8b983161b3af788f1ab09e163808d", "patch": "@@ -684,14 +684,9 @@ odr_subtypes_equivalent_p (tree t1, tree t2,\n     {\n       if (!types_same_for_odr (t1, t2, true))\n         return false;\n-      /* Limit recursion: if subtypes are ODR types and we know that they are\n-\t same, be happy.  We need to call get_odr_type on both subtypes since\n-\t we don't know which among t1 and t2 defines the common ODR type and\n-\t therefore which call will report the ODR violation, if any.  */\n-\t if (!odr_type_p (t1)\n-\t     || !odr_type_p (t2)\n-\t     || (!get_odr_type (t1, true)->odr_violated\n-\t\t && !get_odr_type (t2, true)->odr_violated))\n+      /* Limit recursion: If subtypes are ODR types and we know\n+         that they are same, be happy.  */\n+      if (!odr_type_p (t1) || !get_odr_type (t1, true)->odr_violated)\n         return true;\n     }\n "}]}