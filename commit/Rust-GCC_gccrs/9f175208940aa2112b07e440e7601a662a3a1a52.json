{"sha": "9f175208940aa2112b07e440e7601a662a3a1a52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYxNzUyMDg5NDBhYTIxMTJiMDdlNDQwZTc2MDFhNjYyYTNhMWE1Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-12-17T06:24:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-12-17T06:24:02Z"}, "message": "c-semantics.c (add_scope_stmt): Abort if the end SCOPE_STMT doesn't match the begin SCOPE_STMT in partialness.\n\n        * c-semantics.c (add_scope_stmt): Abort if the end SCOPE_STMT\n        doesn't match the begin SCOPE_STMT in partialness.\n\ncp/\n        * semantics.c (do_pushlevel): Call pushlevel after adding the\n        SCOPE_STMT.\n        (do_poplevel): Call poplevel before adding the SCOPE_STMT.\n        * parse.y (function_body): Go back to using compstmt.\n        * decl.c (pushdecl): Skip another level to get to the parms level.\n\n        * call.c (build_new_method_call): Use is_dummy_object to determine\n        whether or not to evaluate the object parameter to a static member\n        function.\n\nFrom-SVN: r60196", "tree": {"sha": "dcfd0036884e5fabefd7fb68dda94834b0cfe2e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcfd0036884e5fabefd7fb68dda94834b0cfe2e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f175208940aa2112b07e440e7601a662a3a1a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f175208940aa2112b07e440e7601a662a3a1a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f175208940aa2112b07e440e7601a662a3a1a52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f175208940aa2112b07e440e7601a662a3a1a52/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c79d892f6408c9308bab00b37f718e077f960daa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c79d892f6408c9308bab00b37f718e077f960daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c79d892f6408c9308bab00b37f718e077f960daa"}], "stats": {"total": 52, "additions": 36, "deletions": 16}, "files": [{"sha": "dc1de48e0098c4c4bbb46e0ed53aa184abaa30e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f175208940aa2112b07e440e7601a662a3a1a52", "patch": "@@ -1,3 +1,8 @@\n+2002-12-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-semantics.c (add_scope_stmt): Abort if the end SCOPE_STMT\n+\tdoesn't match the begin SCOPE_STMT in partialness.\n+\n 2002-12-16  Geoffrey Keating  <geoffk@apple.com>\n \n \t* genmultilib: Create temporary files in unique subdirectory."}, {"sha": "77d7384f9a2ba9c467d3fb21091a1b194d775ede", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=9f175208940aa2112b07e440e7601a662a3a1a52", "patch": "@@ -146,6 +146,8 @@ add_scope_stmt (begin_p, partial_p)\n     }\n   else\n     {\n+      if (partial_p != SCOPE_PARTIAL_P (TREE_PURPOSE (top)))\n+\tabort ();\n       TREE_VALUE (top) = ss;\n       *stack_ptr = TREE_CHAIN (top);\n     }"}, {"sha": "a1b5038ff6a3ddb7249fe23a090b84f62fcaf9d8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9f175208940aa2112b07e440e7601a662a3a1a52", "patch": "@@ -1,3 +1,15 @@\n+2002-12-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* semantics.c (do_pushlevel): Call pushlevel after adding the\n+\tSCOPE_STMT.\n+\t(do_poplevel): Call poplevel before adding the SCOPE_STMT.\n+\t* parse.y (function_body): Go back to using compstmt.\n+\t* decl.c (pushdecl): Skip another level to get to the parms level.\n+\n+\t* call.c (build_new_method_call): Use is_dummy_object to determine\n+\twhether or not to evaluate the object parameter to a static member\n+\tfunction.\n+\n 2002-12-14  Jason Merrill  <jason@redhat.com>\n \n \t* semantics.c (simplify_aggr_init_exprs_r): Also prepend the"}, {"sha": "cafbb14c5d3d29a4d6a8bbadcdf70b82dc44c25f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=9f175208940aa2112b07e440e7601a662a3a1a52", "patch": "@@ -4908,7 +4908,7 @@ build_new_method_call (tree instance, tree fns, tree args,\n       call = build_over_call (cand, args, flags);\n       /* In an expression of the form `a->f()' where `f' turns out to\n \t be a static member function, `a' is none-the-less evaluated.  */\n-      if (instance && TREE_SIDE_EFFECTS (instance))\n+      if (!is_dummy_object (instance_ptr) && TREE_SIDE_EFFECTS (instance))\n \tcall = build (COMPOUND_EXPR, TREE_TYPE (call), instance, call);\n     }\n "}, {"sha": "2d6b4a4a28e5c60c42fe39a064ba4e94e2e6f75a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=9f175208940aa2112b07e440e7601a662a3a1a52", "patch": "@@ -4161,6 +4161,9 @@ pushdecl (x)\n \t\t     them there.  */\n \t\t  struct cp_binding_level *b = current_binding_level->level_chain;\n \n+\t\t  /* Skip the ctor/dtor cleanup level.  */\n+\t\t  b = b->level_chain;\n+\n \t\t  /* ARM $8.3 */\n \t\t  if (b->parm_flag == 1)\n \t\t    {"}, {"sha": "4f628412a9b87764660fd911b400179803710391", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=9f175208940aa2112b07e440e7601a662a3a1a52", "patch": "@@ -798,15 +798,10 @@ eat_saved_input:\n \t;\n \n /* The outermost block of a function really begins before the\n-   mem-initializer-list, so we open one there and suppress the one that\n-   actually corresponds to the curly braces.  */\n+   mem-initializer-list, so we open one there, too.  */\n function_body:\n-\t  begin_function_body_ ctor_initializer_opt save_lineno '{'\n-\t\t{ $<ttype>$ = begin_compound_stmt (/*has_no_scope=*/1); }\n-\t  compstmtend\n-                {\n-\t\t  STMT_LINENO ($<ttype>5) = $3;\n-\t\t  finish_compound_stmt (/*has_no_scope=*/1, $<ttype>5);\n+\t  begin_function_body_ ctor_initializer_opt compstmt\n+\t\t{\n \t\t  finish_function_body ($1);\n \t\t}\n \t;"}, {"sha": "763916acbac365c578cd988b7c77ad03d4c0e436", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f175208940aa2112b07e440e7601a662a3a1a52/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9f175208940aa2112b07e440e7601a662a3a1a52", "patch": "@@ -125,14 +125,17 @@ do_poplevel ()\n     {\n       tree scope_stmts = NULL_TREE;\n \n-      if (!processing_template_decl)\n-\tscope_stmts = add_scope_stmt (/*begin_p=*/0, /*partial_p=*/0);\n-\n       block = poplevel (kept_level_p (), 1, 0);\n-      if (block && !processing_template_decl)\n+      if (!processing_template_decl)\n \t{\n-\t  SCOPE_STMT_BLOCK (TREE_PURPOSE (scope_stmts)) = block;\n-\t  SCOPE_STMT_BLOCK (TREE_VALUE (scope_stmts)) = block;\n+\t  /* This needs to come after the poplevel so that partial scopes\n+\t     are properly nested.  */\n+\t  scope_stmts = add_scope_stmt (/*begin_p=*/0, /*partial_p=*/0);\n+\t  if (block)\n+\t    {\n+\t      SCOPE_STMT_BLOCK (TREE_PURPOSE (scope_stmts)) = block;\n+\t      SCOPE_STMT_BLOCK (TREE_VALUE (scope_stmts)) = block;\n+\t    }\n \t}\n     }\n \n@@ -146,9 +149,9 @@ do_pushlevel ()\n {\n   if (stmts_are_full_exprs_p ())\n     {\n-      pushlevel (0);\n       if (!processing_template_decl)\n \tadd_scope_stmt (/*begin_p=*/1, /*partial_p=*/0);\n+      pushlevel (0);\n     }\n }\n "}]}