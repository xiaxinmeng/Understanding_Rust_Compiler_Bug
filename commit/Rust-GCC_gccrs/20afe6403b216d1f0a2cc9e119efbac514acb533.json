{"sha": "20afe6403b216d1f0a2cc9e119efbac514acb533", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBhZmU2NDAzYjIxNmQxZjBhMmNjOWUxMTllZmJhYzUxNGFjYjUzMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-02-18T11:07:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-02-18T11:07:34Z"}, "message": "ipa-prop.c (compute_complex_ancestor_jump_func): Replace overzealous assertion with conditional return.\n\n\t* ipa-prop.c (compute_complex_ancestor_jump_func): Replace overzealous\n\tassertion with conditional return.\n\nFrom-SVN: r207838", "tree": {"sha": "db6dc729ce3c1dbfad3480aa1b60c35dc51fe4e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db6dc729ce3c1dbfad3480aa1b60c35dc51fe4e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20afe6403b216d1f0a2cc9e119efbac514acb533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20afe6403b216d1f0a2cc9e119efbac514acb533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20afe6403b216d1f0a2cc9e119efbac514acb533", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20afe6403b216d1f0a2cc9e119efbac514acb533/comments", "author": null, "committer": null, "parents": [{"sha": "2a144f64c934939d1b484dc2b285231cb2f3d0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a144f64c934939d1b484dc2b285231cb2f3d0cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a144f64c934939d1b484dc2b285231cb2f3d0cf"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "52665008d69d2e02a2c177198d196451b199ef0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20afe6403b216d1f0a2cc9e119efbac514acb533/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20afe6403b216d1f0a2cc9e119efbac514acb533/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20afe6403b216d1f0a2cc9e119efbac514acb533", "patch": "@@ -1,3 +1,8 @@\n+2014-02-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ipa-prop.c (compute_complex_ancestor_jump_func): Replace overzealous\n+\tassertion with conditional return.\n+\n 2014-02-18  Jakub Jelinek  <jakub@redhat.com>\n \t    Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "0f293996c67a5df026b368936affa3a67752cb60", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20afe6403b216d1f0a2cc9e119efbac514acb533/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20afe6403b216d1f0a2cc9e119efbac514acb533/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=20afe6403b216d1f0a2cc9e119efbac514acb533", "patch": "@@ -1211,7 +1211,8 @@ compute_complex_ancestor_jump_func (struct ipa_node_params *info,\n     return;\n   parm = TREE_OPERAND (expr, 0);\n   index = ipa_get_param_decl_index (info, SSA_NAME_VAR (parm));\n-  gcc_assert (index >= 0);\n+  if (index < 0)\n+    return;\n \n   cond_bb = single_pred (assign_bb);\n   cond = last_stmt (cond_bb);"}, {"sha": "65c70b5287aaac873bbd589a97a5364fe04bb9be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20afe6403b216d1f0a2cc9e119efbac514acb533/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20afe6403b216d1f0a2cc9e119efbac514acb533/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=20afe6403b216d1f0a2cc9e119efbac514acb533", "patch": "@@ -1,3 +1,7 @@\n+2014-02-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt32.adb: New test.\n+\n 2014-02-18  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/60231"}, {"sha": "93f31c2ca5294c9f6b8d74a9b56f8627fb1034b4", "filename": "gcc/testsuite/gnat.dg/opt32.adb", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20afe6403b216d1f0a2cc9e119efbac514acb533/gcc%2Ftestsuite%2Fgnat.dg%2Fopt32.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20afe6403b216d1f0a2cc9e119efbac514acb533/gcc%2Ftestsuite%2Fgnat.dg%2Fopt32.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt32.adb?ref=20afe6403b216d1f0a2cc9e119efbac514acb533", "patch": "@@ -0,0 +1,37 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O2\" }\n+\n+with Ada.Containers; use Ada.Containers;\n+with Ada.Containers.Vectors;\n+\n+function Opt32 return Natural is\n+\n+   package My_Vectors\n+      is new Vectors (Index_Type => Natural, Element_Type => Integer);\n+   use My_Vectors;\n+\n+   V : Vector;\n+\n+   function Sign_Changes return Natural is\n+      Cur      : Cursor := To_Cursor (V, 0);\n+      R        : Natural := 0;\n+      Negative : Boolean;\n+   begin\n+      Negative := Element (Cur) < 0;\n+\n+      loop\n+         Cur := Next (Cur);\n+         exit when R > 100;\n+\n+         if (Element (Cur) < 0) /= Negative then\n+            Negative := not Negative;\n+            R := R + 1;\n+         end if;\n+      end loop;\n+\n+      return R;\n+   end;\n+\n+begin\n+   return Sign_Changes;\n+end;"}]}