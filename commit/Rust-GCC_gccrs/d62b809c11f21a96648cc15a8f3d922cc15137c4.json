{"sha": "d62b809c11f21a96648cc15a8f3d922cc15137c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYyYjgwOWMxMWYyMWE5NjY0OGNjMTVhOGYzZDkyMmNjMTUxMzdjNA==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2016-07-14T17:21:21Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2016-07-14T17:21:21Z"}, "message": "arm.h (TARGET_HAVE_LDACQ): Enable for ARMv8-M Mainline.\n\n2016-07-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * config/arm/arm.h (TARGET_HAVE_LDACQ): Enable for ARMv8-M Mainline.\n    (TARGET_HAVE_LDACQD): New macro.\n    * config/arm/sync.md (atomic_loaddi): Use TARGET_HAVE_LDACQD rather\n    than TARGET_HAVE_LDACQ.\n    (arm_load_acquire_exclusivedi): Likewise.\n    (arm_store_release_exclusivedi): Likewise.\n\n    libgcc/\n    * gcc.target/arm/atomic-comp-swap-release-acquire.c: Rename into ...\n    * gcc.target/arm/atomic-comp-swap-release-acquire-1.c: This.\n    * gcc.target/arm/atomic-op-acq_rel.c: Rename into ...\n    * gcc.target/arm/atomic-op-acq_rel-1.c: This.\n    * gcc.target/arm/atomic-op-acquire.c: Rename into ...\n    * gcc.target/arm/atomic-op-acquire-1.c: This.\n    * gcc.target/arm/atomic-op-char.c: Rename into ...\n    * gcc.target/arm/atomic-op-char-1.c: This.\n    * gcc.target/arm/atomic-op-consume.c: Rename into ...\n    * gcc.target/arm/atomic-op-consume-1.c: This.\n    * gcc.target/arm/atomic-op-int.c: Rename into ...\n    * gcc.target/arm/atomic-op-int-1.c: This.\n    * gcc.target/arm/atomic-op-relaxed.c: Rename into ...\n    * gcc.target/arm/atomic-op-relaxed-1.c: This.\n    * gcc.target/arm/atomic-op-release.c: Rename into ...\n    * gcc.target/arm/atomic-op-release-1.c: This.\n    * gcc.target/arm/atomic-op-seq_cst.c: Rename into ...\n    * gcc.target/arm/atomic-op-seq_cst-1.c: This.\n    * gcc.target/arm/atomic-op-short.c: Rename into ...\n    * gcc.target/arm/atomic-op-short-1.c: This.\n    * gcc.target/arm/atomic-comp-swap-release-acquire-2.c: New test.\n    * gcc.target/arm/atomic-op-acq_rel-2.c: Likewise.\n    * gcc.target/arm/atomic-op-acquire-2.c: Likewise.\n    * gcc.target/arm/atomic-op-char-2.c: Likewise.\n    * gcc.target/arm/atomic-op-consume-2.c: Likewise.\n    * gcc.target/arm/atomic-op-int-2.c: Likewise.\n    * gcc.target/arm/atomic-op-relaxed-2.c: Likewise.\n    * gcc.target/arm/atomic-op-release-2.c: Likewise.\n    * gcc.target/arm/atomic-op-seq_cst-2.c: Likewise.\n    * gcc.target/arm/atomic-op-short-2.c: Likewise.\n\nFrom-SVN: r238348", "tree": {"sha": "aaf7626d7ddb7f1de47ac2aca1163eec1e0ace05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaf7626d7ddb7f1de47ac2aca1163eec1e0ace05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d62b809c11f21a96648cc15a8f3d922cc15137c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62b809c11f21a96648cc15a8f3d922cc15137c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d62b809c11f21a96648cc15a8f3d922cc15137c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62b809c11f21a96648cc15a8f3d922cc15137c4/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f8dd420ebf769bd0b8068af416735f082464575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8dd420ebf769bd0b8068af416735f082464575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f8dd420ebf769bd0b8068af416735f082464575"}], "stats": {"total": 158, "additions": 153, "deletions": 5}, "files": [{"sha": "e62f2d8fc9cbcd37efa9f702c378982ed657d0ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -1,3 +1,12 @@\n+2016-07-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config/arm/arm.h (TARGET_HAVE_LDACQ): Enable for ARMv8-M Mainline.\n+\t(TARGET_HAVE_LDACQD): New macro.\n+\t* config/arm/sync.md (atomic_loaddi): Use TARGET_HAVE_LDACQD rather\n+\tthan TARGET_HAVE_LDACQ.\n+\t(arm_load_acquire_exclusivedi): Likewise.\n+\t(arm_store_release_exclusivedi): Likewise.\n+\n 2016-07-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR rtl-optimization/71878"}, {"sha": "c7149d1f49738f9f01232cdcb610caca0e5f7e5d", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -261,7 +261,12 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n \t\t\t     || arm_arch7) && arm_arch_notm)\n \n /* Nonzero if this chip supports load-acquire and store-release.  */\n-#define TARGET_HAVE_LDACQ\t(TARGET_ARM_ARCH >= 8 && arm_arch_notm)\n+#define TARGET_HAVE_LDACQ\t(TARGET_ARM_ARCH >= 8 && TARGET_32BIT)\n+\n+/* Nonzero if this chip supports LDAEXD and STLEXD.  */\n+#define TARGET_HAVE_LDACQEXD\t(TARGET_ARM_ARCH >= 8\t\\\n+\t\t\t\t && TARGET_32BIT\t\\\n+\t\t\t\t && arm_arch_notm)\n \n /* Nonzero if this chip provides the MOVW and MOVT instructions.  */\n #define TARGET_HAVE_MOVT\t(arm_arch_thumb2 || arm_arch8)"}, {"sha": "d10ede4175f94e627a23bf32d19d2b5f3de76771", "filename": "gcc/config/arm/sync.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Fconfig%2Farm%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Fconfig%2Farm%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsync.md?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -117,15 +117,15 @@\n   [(match_operand:DI 0 \"s_register_operand\")\t\t;; val out\n    (match_operand:DI 1 \"mem_noofs_operand\")\t\t;; memory\n    (match_operand:SI 2 \"const_int_operand\")]\t\t;; model\n-  \"(TARGET_HAVE_LDREXD || TARGET_HAVE_LPAE || TARGET_HAVE_LDACQ)\n+  \"(TARGET_HAVE_LDREXD || TARGET_HAVE_LPAE || TARGET_HAVE_LDACQEXD)\n    && ARM_DOUBLEWORD_ALIGN\"\n {\n   memmodel model = memmodel_from_int (INTVAL (operands[2]));\n \n   /* For ARMv8-A we can use an LDAEXD to atomically load two 32-bit registers\n      when acquire or stronger semantics are needed.  When the relaxed model is\n      used this can be relaxed to a normal LDRD.  */\n-  if (TARGET_HAVE_LDACQ)\n+  if (TARGET_HAVE_LDACQEXD)\n     {\n       if (is_mm_relaxed (model))\n \temit_insn (gen_arm_atomic_loaddi2_ldrd (operands[0], operands[1]));\n@@ -436,7 +436,7 @@\n \t(unspec_volatile:DI\n \t  [(match_operand:DI 1 \"mem_noofs_operand\" \"Ua\")]\n \t  VUNSPEC_LAX))]\n-  \"TARGET_HAVE_LDACQ && ARM_DOUBLEWORD_ALIGN\"\n+  \"TARGET_HAVE_LDACQEXD && ARM_DOUBLEWORD_ALIGN\"\n   \"ldaexd%?\\t%0, %H0, %C1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")])\n@@ -472,7 +472,7 @@\n \t(unspec_volatile:DI\n \t  [(match_operand:DI 2 \"s_register_operand\" \"r\")]\n \t  VUNSPEC_SLX))]\n-  \"TARGET_HAVE_LDACQ && ARM_DOUBLEWORD_ALIGN\"\n+  \"TARGET_HAVE_LDACQEXD && ARM_DOUBLEWORD_ALIGN\"\n   {\n     /* See comment in arm_store_exclusive<mode> above.  */\n     gcc_assert ((REGNO (operands[2]) & 1) == 0 || TARGET_THUMB2);"}, {"sha": "95705821eb17e24508beca1f2fb5a673650fdd21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -1,3 +1,36 @@\n+2016-07-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* gcc.target/arm/atomic-comp-swap-release-acquire.c: Rename into ...\n+\t* gcc.target/arm/atomic-comp-swap-release-acquire-1.c: This.\n+\t* gcc.target/arm/atomic-op-acq_rel.c: Rename into ...\n+\t* gcc.target/arm/atomic-op-acq_rel-1.c: This.\n+\t* gcc.target/arm/atomic-op-acquire.c: Rename into ...\n+\t* gcc.target/arm/atomic-op-acquire-1.c: This.\n+\t* gcc.target/arm/atomic-op-char.c: Rename into ...\n+\t* gcc.target/arm/atomic-op-char-1.c: This.\n+\t* gcc.target/arm/atomic-op-consume.c: Rename into ...\n+\t* gcc.target/arm/atomic-op-consume-1.c: This.\n+\t* gcc.target/arm/atomic-op-int.c: Rename into ...\n+\t* gcc.target/arm/atomic-op-int-1.c: This.\n+\t* gcc.target/arm/atomic-op-relaxed.c: Rename into ...\n+\t* gcc.target/arm/atomic-op-relaxed-1.c: This.\n+\t* gcc.target/arm/atomic-op-release.c: Rename into ...\n+\t* gcc.target/arm/atomic-op-release-1.c: This.\n+\t* gcc.target/arm/atomic-op-seq_cst.c: Rename into ...\n+\t* gcc.target/arm/atomic-op-seq_cst-1.c: This.\n+\t* gcc.target/arm/atomic-op-short.c: Rename into ...\n+\t* gcc.target/arm/atomic-op-short-1.c: This.\n+\t* gcc.target/arm/atomic-comp-swap-release-acquire-2.c: New test.\n+\t* gcc.target/arm/atomic-op-acq_rel-2.c: Likewise.\n+\t* gcc.target/arm/atomic-op-acquire-2.c: Likewise.\n+\t* gcc.target/arm/atomic-op-char-2.c: Likewise.\n+\t* gcc.target/arm/atomic-op-consume-2.c: Likewise.\n+\t* gcc.target/arm/atomic-op-int-2.c: Likewise.\n+\t* gcc.target/arm/atomic-op-relaxed-2.c: Likewise.\n+\t* gcc.target/arm/atomic-op-release-2.c: Likewise.\n+\t* gcc.target/arm/atomic-op-seq_cst-2.c: Likewise.\n+\t* gcc.target/arm/atomic-op-short-2.c: Likewise.\n+\n 2016-07-14  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/70842"}, {"sha": "aa11ba57e02e6aadb55274eef6ac714c4dbaf805", "filename": "gcc/testsuite/gcc.target/arm/atomic-comp-swap-release-acquire-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-comp-swap-release-acquire.c"}, {"sha": "73b140aaae4ee65e12ff8bc67b33c29f6f720f6e", "filename": "gcc/testsuite/gcc.target/arm/atomic-comp-swap-release-acquire-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2 -fno-ipa-icf\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-comp-swap-release-acquire.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\" 4 } } */\n+/* { dg-final { scan-assembler-times \"stlex\" 4 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "ccfa31c34e36f8ae98d96c1590f2b312a94d7670", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-acq_rel-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-op-acq_rel.c"}, {"sha": "26f88c8775a09f7948bc3b503649686acd4ca5df", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-acq_rel-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-op-acq_rel.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"stlex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "52bcf99e83ce353040e93d17a2831c008a6b141b", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-acquire-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-op-acquire.c"}, {"sha": "09062eba358724ea5207d865d5e5dda54e4950ef", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-acquire-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-op-acquire.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "0c30922dbaac64cac64ecffba6b00823b3d1a863", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-char-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-op-char.c"}, {"sha": "3f33857cf68929420617ea12b25d7a6ac0210c81", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-char-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-op-char.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrexb\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strexb\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "6c5f989726138507b20d7fe02ed1c6e9d6b0a880", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-consume-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-op-consume.c"}, {"sha": "9771d817f02cb95a2e9d4f7020ae45c3fcf02aec", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-consume-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-op-consume.x\"\n+\n+/* Scan for ldaex is a PR59448 consume workaround.  */\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "7716994f0d04b67d91a0b1054be22117b61e6f2c", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-int-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-op-int.c"}, {"sha": "ce0fbfcc0cb74c92648f0ffd9dce4131f1d98e05", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-int-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-op-int.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "4b72fd95bc30785d492d548ac032de9d5dcbe584", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-relaxed-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-op-relaxed.c"}, {"sha": "207baf77d2af6dfe814b86075fc95810268f6a47", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-relaxed-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-op-relaxed.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "8582e4f1d975498b523ee5d7f7bffcba93c6290f", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-release-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-op-release.c"}, {"sha": "376f8597581c82e02b9685085a19abe704855c55", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-release-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-op-release.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"stlex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "70b5b9ebb6cbf081f007771a109a79317d1157c5", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-seq_cst-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-op-seq_cst.c"}, {"sha": "4b31083dc42629594c3096fbe13e32505d491582", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-seq_cst-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-op-seq_cst.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"stlex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "a6f5a6df617403d29f9f8eb1b6ac52b2e7064879", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-short-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short-1.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "previous_filename": "gcc/testsuite/gcc.target/arm/atomic-op-short.c"}, {"sha": "e9b35f3d0a76280b3ef7a972230d91d7d04d2acf", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-short-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d62b809c11f21a96648cc15a8f3d922cc15137c4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short-2.c?ref=d62b809c11f21a96648cc15a8f3d922cc15137c4", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_arch_v8m_main_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8m_main } */\n+\n+#include \"../aarch64/atomic-op-short.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrexh\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strexh\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}]}