{"sha": "5e04ef8f802ce92841982ef735120da1152bde20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUwNGVmOGY4MDJjZTkyODQxOTgyZWY3MzUxMjBkYTExNTJiZGUyMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-08-09T21:47:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-09T21:47:28Z"}, "message": "re PR target/37055 (Revision 138835 breaks -msse2 -mfpmath=sse -Os)\n\n2008-08-09  Jan Hubicka  <jh@suse.cz>\n\n\tPR target/37055\n\t* optabs.c (maybe_emit_unop_insn): Remove produced code if\n\texpansion failed.\n\t(expand_fix): Be prepared for expansion to fail.\n\t(expand_sfix_optab): Remove instructions if expansion failed.\n\nFrom-SVN: r138916", "tree": {"sha": "0add50de869955612ce4a5870b265d6376a020d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0add50de869955612ce4a5870b265d6376a020d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e04ef8f802ce92841982ef735120da1152bde20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e04ef8f802ce92841982ef735120da1152bde20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e04ef8f802ce92841982ef735120da1152bde20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e04ef8f802ce92841982ef735120da1152bde20/comments", "author": null, "committer": null, "parents": [{"sha": "708fa3b5dfda43ef0e39858b9a6bbdbaf3aa23c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/708fa3b5dfda43ef0e39858b9a6bbdbaf3aa23c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/708fa3b5dfda43ef0e39858b9a6bbdbaf3aa23c6"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "f1b96a7aecf4bb4721f7bd7ca2d8cc3924a60128", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e04ef8f802ce92841982ef735120da1152bde20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e04ef8f802ce92841982ef735120da1152bde20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e04ef8f802ce92841982ef735120da1152bde20", "patch": "@@ -1,3 +1,11 @@\n+2008-08-09  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR target/37055\n+\t* optabs.c (maybe_emit_unop_insn): Remove produced code if\n+\texpansion failed.\n+\t(expand_fix): Be prepared for expansion to fail.\n+\t(expand_sfix_optab): Remove instructions if expansion failed.\n+\n 2008-08-09  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/avr/avr.c (avr_mcu_types): Move the AT43USB320 device to"}, {"sha": "5d2545dd3b9cbc0a9cdce8fcf2be7d9856d26e67", "filename": "gcc/optabs.c", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e04ef8f802ce92841982ef735120da1152bde20/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e04ef8f802ce92841982ef735120da1152bde20/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=5e04ef8f802ce92841982ef735120da1152bde20", "patch": "@@ -3769,6 +3769,7 @@ maybe_emit_unop_insn (int icode, rtx target, rtx op0, enum rtx_code code)\n   rtx temp;\n   enum machine_mode mode0 = insn_data[icode].operand[1].mode;\n   rtx pat;\n+  rtx last = get_last_insn ();\n \n   temp = target;\n \n@@ -3782,7 +3783,10 @@ maybe_emit_unop_insn (int icode, rtx target, rtx op0, enum rtx_code code)\n \n   pat = GEN_FCN (icode) (temp, op0);\n   if (!pat)\n-    return false;\n+    {\n+      delete_insns_since (last);\n+      return false;\n+    }\n \n   if (INSN_P (pat) && NEXT_INSN (pat) != NULL_RTX && code != UNKNOWN)\n     add_equal_note (pat, temp, code, op0, NULL_RTX);\n@@ -5157,6 +5161,7 @@ expand_fix (rtx to, rtx from, int unsignedp)\n \n \tif (icode != CODE_FOR_nothing)\n \t  {\n+\t    rtx last = get_last_insn ();\n \t    if (fmode != GET_MODE (from))\n \t      from = convert_to_mode (fmode, from, 0);\n \n@@ -5170,11 +5175,14 @@ expand_fix (rtx to, rtx from, int unsignedp)\n \t    if (imode != GET_MODE (to))\n \t      target = gen_reg_rtx (imode);\n \n-\t    emit_unop_insn (icode, target, from,\n-\t\t\t    doing_unsigned ? UNSIGNED_FIX : FIX);\n-\t    if (target != to)\n-\t      convert_move (to, target, unsignedp);\n-\t    return;\n+\t    if (maybe_emit_unop_insn (icode, target, from,\n+\t\t\t\t      doing_unsigned ? UNSIGNED_FIX : FIX))\n+\t      {\n+\t\tif (target != to)\n+\t\t  convert_move (to, target, unsignedp);\n+\t\treturn;\n+\t      }\n+\t    delete_insns_since (last);\n \t  }\n       }\n \n@@ -5382,14 +5390,18 @@ expand_sfix_optab (rtx to, rtx from, convert_optab tab)\n \ticode = convert_optab_handler (tab, imode, fmode)->insn_code;\n \tif (icode != CODE_FOR_nothing)\n \t  {\n+\t    rtx last = get_last_insn ();\n \t    if (fmode != GET_MODE (from))\n \t      from = convert_to_mode (fmode, from, 0);\n \n \t    if (imode != GET_MODE (to))\n \t      target = gen_reg_rtx (imode);\n \n \t    if (!maybe_emit_unop_insn (icode, target, from, UNKNOWN))\n-\t      return false;\n+\t      {\n+\t        delete_insns_since (last);\n+\t\tcontinue;\n+\t      }\n \t    if (target != to)\n \t      convert_move (to, target, 0);\n \t    return true;"}]}