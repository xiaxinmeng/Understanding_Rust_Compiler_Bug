{"sha": "ec03e9e94598351083d3d9a46b6e5a97cfe0e88c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMwM2U5ZTk0NTk4MzUxMDgzZDNkOWE0NmI2ZTVhOTdjZmUwZTg4Yw==", "commit": {"author": {"name": "Jack Howarth", "email": "howarth@bromo.med.uc.edu", "date": "2013-01-17T21:28:56Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-01-17T21:28:56Z"}, "message": "re PR sanitizer/55679 (new asan tests from r194458 fail on x86_64-apple-darwin10)\n\n        PR sanitizer/55679\n        * g++.dg/asan/interception-test-1.C: Skip on darwin.\n        * lib/target-supports.exp (check_effective_target_swapcontext): Use\n        check_no_compiler_messages to test support in ucontext.h.\n\t(check_effective_target_setrlimit): Return 0 for Darwin's non-posix\n\tcompliant RLIMIT_AS.\n\nFrom-SVN: r195281", "tree": {"sha": "f67df12fade984a9ff43d76eae8ba4d08b36beb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f67df12fade984a9ff43d76eae8ba4d08b36beb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c/comments", "author": null, "committer": null, "parents": [{"sha": "1bd3f7500b7223cded3ae19ff27eb27e05a9b147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd3f7500b7223cded3ae19ff27eb27e05a9b147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bd3f7500b7223cded3ae19ff27eb27e05a9b147"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "21d0f05910a419e0cac0887b7f2d7a1620dbc30c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec03e9e94598351083d3d9a46b6e5a97cfe0e88c", "patch": "@@ -1,3 +1,12 @@\n+2013-01-17  Jack Howarth <howarth@bromo.med.uc.edu>\n+\n+        PR sanitizer/55679\n+        * g++.dg/asan/interception-test-1.C: Skip on darwin.\n+        * lib/target-supports.exp (check_effective_target_swapcontext): Use\n+        check_no_compiler_messages to test support in ucontext.h.\n+\t(check_effective_target_setrlimit): Return 0 for Darwin's non-posix\n+\tcompliant RLIMIT_AS.\n+\n 2013-01-17  Marek Polacek  <polacek@redhat.com>\n \n \tPR rtl-optimization/55833"}, {"sha": "04c846a70a0f5d1d23ce1852077b76b863bd40f4", "filename": "gcc/testsuite/g++.dg/asan/interception-test-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Finterception-test-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Finterception-test-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Finterception-test-1.C?ref=ec03e9e94598351083d3d9a46b6e5a97cfe0e88c", "patch": "@@ -3,6 +3,7 @@\n // { dg-do run }\n // { dg-options \"-fno-builtin-malloc -fno-builtin-free\" }\n // { dg-shouldfail \"asan\" }\n+// { dg-skip-if \"Darwin uses mac function interposition\" { *-*-darwin* } }\n \n #include <stdlib.h>\n #include <stdio.h>"}, {"sha": "0b11817ff61b463a4379b01598879b99cb985060", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec03e9e94598351083d3d9a46b6e5a97cfe0e88c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=ec03e9e94598351083d3d9a46b6e5a97cfe0e88c", "patch": "@@ -730,12 +730,23 @@ proc check_effective_target_clone {} {\n \n # Return 1 if the target supports setrlimit, 0 otherwise.\n proc check_effective_target_setrlimit {} {\n+    # Darwin has non-posix compliant RLIMIT_AS\n+    if { [istarget *-*-darwin*] } {\n+        return 0\n+    }\n     return [check_function_available \"setrlimit\"]\n }\n \n # Return 1 if the target supports swapcontext, 0 otherwise.\n proc check_effective_target_swapcontext {} {\n-    return [check_function_available \"swapcontext\"]\n+    return [check_no_compiler_messages swapcontext executable {\n+\t#include <ucontext.h>\n+\tint main (void)\n+\t{\n+\t  ucontext_t orig_context,child_context;\n+\t  if (swapcontext(&child_context, &orig_context) < 0) { }\n+\t}\n+    }]\n }\n \n # Return 1 if compilation with -pthread is error-free for trivial"}]}