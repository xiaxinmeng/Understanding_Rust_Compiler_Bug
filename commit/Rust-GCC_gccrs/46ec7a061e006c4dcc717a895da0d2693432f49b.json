{"sha": "46ec7a061e006c4dcc717a895da0d2693432f49b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZlYzdhMDYxZTAwNmM0ZGNjNzE3YTg5NWRhMGQyNjkzNDMyZjQ5Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-18T13:03:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-18T13:03:54Z"}, "message": "re PR tree-optimization/69308 (ifcombine joins together floating point expression with side effects)\n\n2016-01-18  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/69308\n\t* gimple.c (gimple_could_trap_p_1): Handle GIMPLE_COND.\n\nFrom-SVN: r232516", "tree": {"sha": "0e0ca108865520ecb9e416f0ebe2b8b58da94de8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e0ca108865520ecb9e416f0ebe2b8b58da94de8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46ec7a061e006c4dcc717a895da0d2693432f49b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46ec7a061e006c4dcc717a895da0d2693432f49b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46ec7a061e006c4dcc717a895da0d2693432f49b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46ec7a061e006c4dcc717a895da0d2693432f49b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d7804a940dca2bddbb34978d45e06ac7ef13c80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7804a940dca2bddbb34978d45e06ac7ef13c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7804a940dca2bddbb34978d45e06ac7ef13c80"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "d011a4ffa9b98f797732178386d884d174ab7e30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46ec7a061e006c4dcc717a895da0d2693432f49b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46ec7a061e006c4dcc717a895da0d2693432f49b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46ec7a061e006c4dcc717a895da0d2693432f49b", "patch": "@@ -1,3 +1,8 @@\n+2016-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/69308\n+\t* gimple.c (gimple_could_trap_p_1): Handle GIMPLE_COND.\n+\n 2016-01-18  Tom de Vries  <tom@codesourcery.com>\n \n \t* passes.def: Add pass_parallelize_loops to pass_oacc_kernels."}, {"sha": "0f4ed88deb354740efd39447aba8842f6c2d381d", "filename": "gcc/gimple.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46ec7a061e006c4dcc717a895da0d2693432f49b/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46ec7a061e006c4dcc717a895da0d2693432f49b/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=46ec7a061e006c4dcc717a895da0d2693432f49b", "patch": "@@ -1931,6 +1931,11 @@ gimple_could_trap_p_1 (gimple *s, bool include_mem, bool include_stores)\n \t\t\t\t       && TYPE_OVERFLOW_TRAPS (t)),\n \t\t\t\t      div));\n \n+    case GIMPLE_COND:\n+      t = TREE_TYPE (gimple_cond_lhs (s));\n+      return operation_could_trap_p (gimple_cond_code (s),\n+\t\t\t\t     FLOAT_TYPE_P (t), false, NULL_TREE);\n+\n     default:\n       break;\n     }"}]}