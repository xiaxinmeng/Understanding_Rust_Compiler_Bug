{"sha": "2fff1c81690f4e94e4c87fba46366c5a8b7eff96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZmZjFjODE2OTBmNGU5NGU0Yzg3ZmJhNDYzNjZjNWE4YjdlZmY5Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-07-06T16:47:20Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-07-06T16:47:20Z"}, "message": "lto-wrapper.c (merge_and_complain): Do not merge fexceptions...\n\n\n\t* lto-wrapper.c (merge_and_complain): Do not merge\n\tfexceptions, fnon_call_exceptions, ftrapv, ffp_contract_, fmath_errno,\n\tfsigned_zeros, ftrapping_math, fwrapv.\n\t(append_compiler_options): Do not track these options.\n\t(append_linker_options): Likewie\n\nFrom-SVN: r250035", "tree": {"sha": "f6c1ead26901e7461b2864530bb816567ba67cb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6c1ead26901e7461b2864530bb816567ba67cb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fff1c81690f4e94e4c87fba46366c5a8b7eff96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fff1c81690f4e94e4c87fba46366c5a8b7eff96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fff1c81690f4e94e4c87fba46366c5a8b7eff96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fff1c81690f4e94e4c87fba46366c5a8b7eff96/comments", "author": null, "committer": null, "parents": [{"sha": "0eaf0bfe94ff5a7c69cb8f108fd94c6b91409820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eaf0bfe94ff5a7c69cb8f108fd94c6b91409820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eaf0bfe94ff5a7c69cb8f108fd94c6b91409820"}], "stats": {"total": 64, "additions": 12, "deletions": 52}, "files": [{"sha": "99e27375e143e6244c4b124c1408acbbec96b905", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fff1c81690f4e94e4c87fba46366c5a8b7eff96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fff1c81690f4e94e4c87fba46366c5a8b7eff96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fff1c81690f4e94e4c87fba46366c5a8b7eff96", "patch": "@@ -1,3 +1,11 @@\n+2017-07-06  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-wrapper.c (merge_and_complain): Do not merge\n+\tfexceptions, fnon_call_exceptions, ftrapv, ffp_contract_, fmath_errno,\n+\tfsigned_zeros, ftrapping_math, fwrapv.\n+\t(append_compiler_options): Do not track these options.\n+\t(append_linker_options): Likewie\n+\n 2017-07-06  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cgraphunit.c (cgraph_node::finalize_function): When"}, {"sha": "2545a317fb61accee713ce7521933b239d2d89ad", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 4, "deletions": 52, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fff1c81690f4e94e4c87fba46366c5a8b7eff96/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fff1c81690f4e94e4c87fba46366c5a8b7eff96/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=2fff1c81690f4e94e4c87fba46366c5a8b7eff96", "patch": "@@ -243,8 +243,6 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \tcase OPT_fPIE:\n \tcase OPT_fpie:\n \tcase OPT_fcommon:\n-\tcase OPT_fexceptions:\n-\tcase OPT_fnon_call_exceptions:\n \tcase OPT_fgnu_tm:\n \t  /* Do what the old LTO code did - collect exactly one option\n \t     setting per OPT code, we pick the first we encounter.\n@@ -257,25 +255,6 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \t    append_option (decoded_options, decoded_options_count, foption);\n \t  break;\n \n-\tcase OPT_ftrapv:\n-\tcase OPT_ffp_contract_:\n-\t  /* For selected options we can merge conservatively.  */\n-\t  for (j = 0; j < *decoded_options_count; ++j)\n-\t    if ((*decoded_options)[j].opt_index == foption->opt_index)\n-\t      break;\n-\t  if (j == *decoded_options_count)\n-\t    append_option (decoded_options, decoded_options_count, foption);\n-\t  /* FP_CONTRACT_OFF < FP_CONTRACT_ON < FP_CONTRACT_FAST,\n-\t     -fno-trapv < -ftrapv,\n-\t     -fno-strict-overflow < -fstrict-overflow  */\n-\t  else if (foption->value < (*decoded_options)[j].value)\n-\t    (*decoded_options)[j] = *foption;\n-\t  break;\n-\n-\tcase OPT_fmath_errno:\n-\tcase OPT_fsigned_zeros:\n-\tcase OPT_ftrapping_math:\n-\tcase OPT_fwrapv:\n \tcase OPT_fopenmp:\n \tcase OPT_fopenacc:\n \tcase OPT_fcilkplus:\n@@ -286,10 +265,10 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \t      break;\n \t  if (j == *decoded_options_count)\n \t    append_option (decoded_options, decoded_options_count, foption);\n-\t  /* -fmath-errno > -fno-math-errno,\n-\t     -fsigned-zeros > -fno-signed-zeros,\n-\t     -ftrapping-math > -fno-trapping-math,\n-\t     -fwrapv > -fno-wrapv.  */\n+\t  /* -fopenmp > -fno-openmp,\n+\t     -fopenacc > -fno-openacc,\n+\t     -fcilkplus > -fno-cilkplus,\n+\t     -fcheck_pointer_bounds > -fcheck_pointer_bounds  */\n \t  else if (foption->value > (*decoded_options)[j].value)\n \t    (*decoded_options)[j] = *foption;\n \t  break;\n@@ -307,17 +286,6 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \t\t\t foption->orig_option_with_args_text);\n \t  break;\n \n-\tcase OPT_freg_struct_return:\n-\tcase OPT_fpcc_struct_return:\n-\t  for (j = 0; j < *decoded_options_count; ++j)\n-\t    if ((*decoded_options)[j].opt_index == foption->opt_index)\n-\t      break;\n-\t  if (j == *decoded_options_count)\n-\t    fatal_error (input_location,\n-\t\t\t \"Option %s not used consistently in all LTO input\"\n-\t\t\t \" files\", foption->orig_option_with_args_text);\n-\t  break;\n-\n \tcase OPT_foffload_abi_:\n \t  for (j = 0; j < *decoded_options_count; ++j)\n \t    if ((*decoded_options)[j].opt_index == foption->opt_index)\n@@ -506,21 +474,11 @@ append_compiler_options (obstack *argv_obstack, struct cl_decoded_option *opts,\n \tcase OPT_fPIE:\n \tcase OPT_fpie:\n \tcase OPT_fcommon:\n-\tcase OPT_fexceptions:\n-\tcase OPT_fnon_call_exceptions:\n \tcase OPT_fgnu_tm:\n-\tcase OPT_freg_struct_return:\n-\tcase OPT_fpcc_struct_return:\n-\tcase OPT_ffp_contract_:\n-\tcase OPT_fmath_errno:\n-\tcase OPT_fsigned_zeros:\n-\tcase OPT_ftrapping_math:\n-\tcase OPT_fwrapv:\n \tcase OPT_fopenmp:\n \tcase OPT_fopenacc:\n \tcase OPT_fopenacc_dim_:\n \tcase OPT_fcilkplus:\n-\tcase OPT_ftrapv:\n \tcase OPT_foffload_abi_:\n \tcase OPT_O:\n \tcase OPT_Ofast:\n@@ -595,12 +553,6 @@ append_linker_options (obstack *argv_obstack, struct cl_decoded_option *opts,\n \t  /* We've handled these LTO options, do not pass them on.  */\n \t  continue;\n \n-\tcase OPT_freg_struct_return:\n-\tcase OPT_fpcc_struct_return:\n-\t  /* Ignore these, they are determined by the input files.\n-\t     ???  We fail to diagnose a possible mismatch here.  */\n-\t  continue;\n-\n \tcase OPT_fopenmp:\n \tcase OPT_fopenacc:\n \tcase OPT_fcilkplus:"}]}