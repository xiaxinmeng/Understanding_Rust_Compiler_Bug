{"sha": "27eb1ab6e7a9e988d3ca7fb9c80f14a3f8eec516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlYjFhYjZlN2E5ZTk4OGQzY2E3ZmI5YzgwZjE0YTNmOGVlYzUxNg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-10-22T22:29:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-10-22T22:29:33Z"}, "message": "Fix SETUP_INCOMING_VARARGS for TARGET_SINGLE_FLOAT || ! TARGET_FLOAT64\n\nFrom-SVN: r12997", "tree": {"sha": "5e8dc94b98be2b62cecec638eaa4d0bb1c9c94ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e8dc94b98be2b62cecec638eaa4d0bb1c9c94ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27eb1ab6e7a9e988d3ca7fb9c80f14a3f8eec516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27eb1ab6e7a9e988d3ca7fb9c80f14a3f8eec516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27eb1ab6e7a9e988d3ca7fb9c80f14a3f8eec516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27eb1ab6e7a9e988d3ca7fb9c80f14a3f8eec516/comments", "author": null, "committer": null, "parents": [{"sha": "efcedf427c50b5eb03f37647034d8eb505b5c2df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efcedf427c50b5eb03f37647034d8eb505b5c2df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efcedf427c50b5eb03f37647034d8eb505b5c2df"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "1cf561a6803f38e69407c9c7405e92bccc19ff1a", "filename": "gcc/config/mips/abi64.h", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27eb1ab6e7a9e988d3ca7fb9c80f14a3f8eec516/gcc%2Fconfig%2Fmips%2Fabi64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27eb1ab6e7a9e988d3ca7fb9c80f14a3f8eec516/gcc%2Fconfig%2Fmips%2Fabi64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fabi64.h?ref=27eb1ab6e7a9e988d3ca7fb9c80f14a3f8eec516", "patch": "@@ -150,26 +150,33 @@ extern struct rtx_def *mips_function_value ();\n \t      && ! TARGET_SOFT_FLOAT\t\t\t\t\t\\\n \t      && (CUM).fp_arg_words < MAX_ARGS_IN_REGISTERS - mips_fp_off) \\\n \t    {\t\t\t\t\t\t\t\t\\\n+\t      enum machine_mode mode = TARGET_SINGLE_FLOAT ? SFmode : DFmode; \\\n+\t      int size = GET_MODE_SIZE (mode);\t\t\t\t\\\n \t      int off;\t\t\t\t\t\t\t\\\n \t      int i;\t\t\t\t\t\t\t\\\n \t      /* We can't use move_block_from_reg, because it will use\t\\\n                  the wrong mode.  */\t\t\t\t\t\\\n-\t      off = (- (mips_save_gp_regs * UNITS_PER_WORD)\t\t\\\n-\t\t     - (mips_save_fp_regs * UNITS_PER_FPREG));\t\t\\\n+\t      off = - (mips_save_gp_regs * UNITS_PER_WORD);\t\t\\\n+\t      if (! TARGET_SINGLE_FLOAT)\t\t\t\t\\\n+\t        off &= ~ 7;\t\t\t\t\t\t\\\n+\t      if (! TARGET_FLOAT64 || TARGET_SINGLE_FLOAT)\t\t\\\n+\t\toff -= (mips_save_fp_regs / 2) * size;\t\t\t\\\n+\t      else\t\t\t\t\t\t\t\\\n+\t\toff -= mips_save_fp_regs * size;\t\t\t\\\n \t      for (i = 0; i < mips_save_fp_regs; i++)\t\t\t\\\n \t\t{\t\t\t\t\t\t\t\\\n \t\t  rtx tem =\t\t\t\t\t\t\\\n-\t\t    gen_rtx (MEM, DFmode,\t\t\t\t\\\n+\t\t    gen_rtx (MEM, mode,\t\t\t\t\t\\\n \t\t\t     plus_constant (virtual_incoming_args_rtx,\t\\\n-\t\t\t\t\t    (off\t\t\t\\\n-\t\t\t\t\t     + i * GET_MODE_SIZE (DFmode)))); \\\n+\t\t\t\t\t    off));\t\t\t\\\n \t\t  emit_move_insn (tem,\t\t\t\t\t\\\n-\t\t\t\t  gen_rtx (REG, DFmode,\t\t\t\\\n+\t\t\t\t  gen_rtx (REG, mode,\t\t\t\\\n \t\t\t\t\t   ((CUM).fp_arg_words\t\t\\\n \t\t\t\t\t    + FP_ARG_FIRST\t\t\\\n \t\t\t\t\t    + i\t\t\t\t\\\n \t\t\t\t\t    + mips_fp_off)));\t\t\\\n-\t\t  if (! TARGET_FLOAT64)\t\t\t\t\t\\\n+\t\t  off += size;\t\t\t\t\t\t\\\n+\t\t  if (! TARGET_FLOAT64 || TARGET_SINGLE_FLOAT)\t\t\\\n \t\t    ++i;\t\t\t\t\t\t\\\n \t\t}\t\t\t\t\t\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\"}]}