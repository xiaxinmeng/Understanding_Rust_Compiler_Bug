{"sha": "9636e80677cfde263dcff8e5263bf719ec0dbc97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYzNmU4MDY3N2NmZGUyNjNkY2ZmOGU1MjYzYmY3MTllYzBkYmM5Nw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2017-06-27T17:33:28Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2017-06-27T17:33:28Z"}, "message": "Fix genmultilib reuse rule checks for large sets of option combinations.\n\ngenmultilib computes combination_space, a list of all combinations of\noptions in MULTILIB_OPTIONS that might have multilibs built for them\n(some of which may end up not having multilibs built for them, and\nsome of those may end up being mapped to other multilibs with\nMULTILIB_REUSE).  It is then used to validate the right hand part of\nMULTILIB_REUSE rules, checking with expr that combination_space\nmatches a basic regular expression derived from that right hand part.\n\nThere are two problems with this approach to validation:\n\n* It requires that right hand part to have options in the same order\n  as in MULTILIB_OPTIONS, in contradiction to the documentation of\n  MULTILIB_REUSE saying that order does not matter there.\n\n* combination_space can be so large that the expr call fails with an\n  E2BIG error.  I have a local ARM configuration with 40 multilibs but\n  3840 combinations of options from MULTILIB_OPTIONS (so 3839 listed\n  in combination_space, since it doesn't list the default multilib)\n  and 996 MULTILIB_REUSE rules.  This generates a combination_space\n  string longer than the Linux kernel's MAX_ARG_STRLEN (PAGE_SIZE *\n  32, the limit on the length of a single argv string), so that expr\n  cannot be run.\n\nThis patch changes the validation approach to generate a much shorter\nextended regular expression for any sequence of multilib options in\nany order, and uses that for the validation instead.\n\nTested with a build for arm-none-eabi --with-multilib-list=aprofile\n(as a configuration that uses MULTILIB_REUSE).\n\n\t* genmultilib (combination_space): Remove variable.\n\tValidate reuse rules against regular expression for any sequence\n\tof multilib options in any order.\n\nFrom-SVN: r249703", "tree": {"sha": "553e9ea5aa17c14aae9749c4c5eebb21c1198c43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/553e9ea5aa17c14aae9749c4c5eebb21c1198c43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9636e80677cfde263dcff8e5263bf719ec0dbc97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9636e80677cfde263dcff8e5263bf719ec0dbc97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9636e80677cfde263dcff8e5263bf719ec0dbc97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9636e80677cfde263dcff8e5263bf719ec0dbc97/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a977dc0c5e069bf198f78ed4767deac369904301", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a977dc0c5e069bf198f78ed4767deac369904301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a977dc0c5e069bf198f78ed4767deac369904301"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "fcabe2595f3f4a473a111315a3ba1ff52e15d2ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9636e80677cfde263dcff8e5263bf719ec0dbc97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9636e80677cfde263dcff8e5263bf719ec0dbc97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9636e80677cfde263dcff8e5263bf719ec0dbc97", "patch": "@@ -1,3 +1,9 @@\n+2017-06-27  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* genmultilib (combination_space): Remove variable.\n+\tValidate reuse rules against regular expression for any sequence\n+\tof multilib options in any order.\n+\n 2017-06-27  Michael Collison  <michael.collison@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_combine<mode>): Directly"}, {"sha": "0767e68719ec4af099a50325f0e5ec606bef75d6", "filename": "gcc/genmultilib", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9636e80677cfde263dcff8e5263bf719ec0dbc97/gcc%2Fgenmultilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9636e80677cfde263dcff8e5263bf719ec0dbc97/gcc%2Fgenmultilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmultilib?ref=9636e80677cfde263dcff8e5263bf719ec0dbc97", "patch": "@@ -186,8 +186,7 @@ fi\n EOF\n chmod +x tmpmultilib\n \n-combination_space=`initial=/ ./tmpmultilib ${options}`\n-combinations=\"$combination_space\"\n+combinations=`initial=/ ./tmpmultilib ${options}`\n \n # If there exceptions, weed them out now\n if [ -n \"${exceptions}\" ]; then\n@@ -460,6 +459,15 @@ done\n echo \"NULL\"\n echo \"};\"\n \n+# Generate a regular expression to validate option combinations.\n+options_re=\n+for set in ${options}; do\n+  for opt in `echo ${set} | sed -e 's_[/|]_ _g'`; do\n+    options_re=\"${options_re}${options_re:+|}${opt}\"\n+  done\n+done\n+options_re=\"^/((${options_re})/)*\\$\"\n+\n # Output rules used for multilib reuse.\n echo \"\"\n echo \"static const char *const multilib_reuse_raw[] = {\"\n@@ -473,7 +481,7 @@ for rrule in ${multilib_reuse}; do\n   # in this variable, it means no multilib will be built for current reuse\n   # rule.  Thus the reuse purpose specified by current rule is meaningless.\n   if expr \"${combinations} \" : \".*/${combo}/.*\" > /dev/null; then\n-    if expr \"${combination_space} \" : \".*/${copts}/.*\" > /dev/null; then\n+    if echo \"/${copts}/\" | grep -E \"${options_re}\" > /dev/null; then\n       combo=\"/${combo}/\"\n       dirout=`./tmpmultilib3 \"${combo}\" \"${todirnames}\" \"${toosdirnames}\" \"${enable_multilib}\"`\n       copts=\"/${copts}/\""}]}