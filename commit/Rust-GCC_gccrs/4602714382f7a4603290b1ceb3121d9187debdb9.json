{"sha": "4602714382f7a4603290b1ceb3121d9187debdb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYwMjcxNDM4MmY3YTQ2MDMyOTBiMWNlYjMxMjFkOTE4N2RlYmRiOQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-06-14T10:51:48Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-06-15T16:41:09Z"}, "message": "range-ops: (nonzero | X) is nonzero\n\nFor bitwise or, nonzero|X is always nonzero.  Make sure we don't drop to\nvarying in this case.\n\ngcc/ChangeLog:\n\n\t* range-op.cc (operator_bitwise_or::wi_fold): Make sure\n\tnonzero|X is nonzero.\n\t(range_op_bitwise_and_tests): Add tests for above.", "tree": {"sha": "c6b6cc3441a3622800e7608583b9811690db7ed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6b6cc3441a3622800e7608583b9811690db7ed3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4602714382f7a4603290b1ceb3121d9187debdb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4602714382f7a4603290b1ceb3121d9187debdb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4602714382f7a4603290b1ceb3121d9187debdb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4602714382f7a4603290b1ceb3121d9187debdb9/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "913b13fcb1dceea0e57a04cb77b11097b132cbf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/913b13fcb1dceea0e57a04cb77b11097b132cbf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/913b13fcb1dceea0e57a04cb77b11097b132cbf6"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "e805f26a333cd72b7adc99895e9187337b417a5d", "filename": "gcc/range-op.cc", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4602714382f7a4603290b1ceb3121d9187debdb9/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4602714382f7a4603290b1ceb3121d9187debdb9/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=4602714382f7a4603290b1ceb3121d9187debdb9", "patch": "@@ -2534,11 +2534,20 @@ operator_bitwise_or::wi_fold (irange &r, tree type,\n     new_lb = wi::max (new_lb, lh_lb, sign);\n   if (wi::lt_p (rh_ub, 0, sign))\n     new_lb = wi::max (new_lb, rh_lb, sign);\n-  // If the limits got swapped around, return varying.\n-  if (wi::gt_p (new_lb, new_ub,sign))\n-    r.set_varying (type);\n-  else\n-    value_range_with_overflow (r, type, new_lb, new_ub);\n+  // If the limits got swapped around, return a conservative range.\n+  if (wi::gt_p (new_lb, new_ub, sign))\n+    {\n+      // Make sure that nonzero|X is nonzero.\n+      if (wi::gt_p (lh_lb, 0, sign)\n+\t  || wi::gt_p (rh_lb, 0, sign)\n+\t  || wi::lt_p (lh_ub, 0, sign)\n+\t  || wi::lt_p (rh_ub, 0, sign))\n+\tr.set_nonzero (type);\n+      else\n+\tr.set_varying (type);\n+      return;\n+    }\n+  value_range_with_overflow (r, type, new_lb, new_ub);\n }\n \n bool\n@@ -3744,6 +3753,18 @@ range_op_bitwise_and_tests ()\n   i1 = int_range<1> (integer_type_node);\n   op_bitwise_and.op1_range (res, integer_type_node, i1, i2);\n   ASSERT_TRUE (res == int_range<1> (integer_type_node));\n+\n+  // (NONZERO | X) is nonzero.\n+  i1.set_nonzero (integer_type_node);\n+  i2.set_varying (integer_type_node);\n+  op_bitwise_or.fold_range (res, integer_type_node, i1, i2);\n+  ASSERT_TRUE (res.nonzero_p ());\n+\n+  // (NEGATIVE | X) is nonzero.\n+  i1 = int_range<1> (INT (-5), INT (-3));\n+  i2.set_varying (integer_type_node);\n+  op_bitwise_or.fold_range (res, integer_type_node, i1, i2);\n+  ASSERT_FALSE (res.contains_p (INT (0)));\n }\n \n void"}]}