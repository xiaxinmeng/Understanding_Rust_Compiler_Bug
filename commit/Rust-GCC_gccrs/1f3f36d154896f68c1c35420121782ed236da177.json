{"sha": "1f3f36d154896f68c1c35420121782ed236da177", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYzZjM2ZDE1NDg5NmY2OGMxYzM1NDIwMTIxNzgyZWQyMzZkYTE3Nw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-09-18T18:30:24Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-09-18T18:30:24Z"}, "message": "combine.c (if_then_else_cond): Canonicalize BImode true to STORE_FLAG_VALUE.\n\n        * combine.c (if_then_else_cond): Canonicalize BImode true to\n        STORE_FLAG_VALUE.\n        * explow.c (trunc_int_for_mode): Likewise.\n\nFrom-SVN: r36507", "tree": {"sha": "dcf8ba6562e72efc25294c86c33f5f6a398ca59f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcf8ba6562e72efc25294c86c33f5f6a398ca59f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f3f36d154896f68c1c35420121782ed236da177", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3f36d154896f68c1c35420121782ed236da177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f3f36d154896f68c1c35420121782ed236da177", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3f36d154896f68c1c35420121782ed236da177/comments", "author": null, "committer": null, "parents": [{"sha": "5bd60ce6de2d4e0b0e7975c04772393b76b97909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd60ce6de2d4e0b0e7975c04772393b76b97909", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bd60ce6de2d4e0b0e7975c04772393b76b97909"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "ec5c66370e6bd31b1d182e56bcf40d7d835230f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f3f36d154896f68c1c35420121782ed236da177/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f3f36d154896f68c1c35420121782ed236da177/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f3f36d154896f68c1c35420121782ed236da177", "patch": "@@ -1,5 +1,9 @@\n 2000-09-18  Richard Henderson  <rth@cygnus.com>\n \n+\t* combine.c (if_then_else_cond): Canonicalize BImode true to\n+\tSTORE_FLAG_VALUE.\n+\t* explow.c (trunc_int_for_mode): Likewise.\n+\n \t* combine.c (combine_simplify_rtx): Use gen_unary to distribute\n \tthe NOT for De Morgan's rule.\n \t* simplify-rtx.c (simplify_unary_operation): Simplify a BImode NOT"}, {"sha": "b8ac09b766af853f7a7139c0d23feaaf06bbdb2d", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f3f36d154896f68c1c35420121782ed236da177/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f3f36d154896f68c1c35420121782ed236da177/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=1f3f36d154896f68c1c35420121782ed236da177", "patch": "@@ -7418,6 +7418,14 @@ if_then_else_cond (x, ptrue, pfalse)\n \t   || ((cond0 = get_last_value (x)) != 0 && CONSTANT_P (cond0)))\n     ;\n \n+  /* If we're in BImode, canonicalize on 0 and STORE_FLAG_VALUE, as that\n+     will be least confusing to the rest of the compiler.  */\n+  else if (mode == BImode)\n+    {\n+      *ptrue = GEN_INT (STORE_FLAG_VALUE), *pfalse = const0_rtx;\n+      return x;\n+    }\n+\n   /* If X is known to be either 0 or -1, those are the true and\n      false values when testing X.  */\n   else if (x == constm1_rtx || x == const0_rtx"}, {"sha": "b2763e3abf0349952b155208eea9cd6183d04c03", "filename": "gcc/explow.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f3f36d154896f68c1c35420121782ed236da177/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f3f36d154896f68c1c35420121782ed236da177/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=1f3f36d154896f68c1c35420121782ed236da177", "patch": "@@ -52,6 +52,10 @@ trunc_int_for_mode (c, mode)\n {\n   int width = GET_MODE_BITSIZE (mode);\n \n+  /* Canonicalize BImode to 0 and STORE_FLAG_VALUE.  */\n+  if (mode == BImode)\n+    return c & 1 ? STORE_FLAG_VALUE : 0;\n+\n   /* We clear out all bits that don't belong in MODE, unless they and our\n      sign bit are all one.  So we get either a reasonable negative\n      value or a reasonable unsigned value.  */"}]}