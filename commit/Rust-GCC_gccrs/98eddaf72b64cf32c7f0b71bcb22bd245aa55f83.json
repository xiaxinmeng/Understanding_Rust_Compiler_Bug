{"sha": "98eddaf72b64cf32c7f0b71bcb22bd245aa55f83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThlZGRhZjcyYjY0Y2YzMmM3ZjBiNzFiY2IyMmJkMjQ1YWE1NWY4Mw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-03-08T11:22:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-03-08T11:22:15Z"}, "message": "misc12.C: Removed.\n\n\t* g++.old-deja/g++.brendan/misc12.C: Removed.\n\t* g++.old-deja/g++.pt/memtemp77.C: Constify.\n\t* g++.old-deja/g++.ext/pretty4.C: New test.\n\nFrom-SVN: r32419", "tree": {"sha": "aa23acca8a01aabe1e0b839d9b57654681e1b01a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa23acca8a01aabe1e0b839d9b57654681e1b01a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83/comments", "author": null, "committer": null, "parents": [{"sha": "2ce07e2d9247f692e424385deb1e8b154bf1b388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ce07e2d9247f692e424385deb1e8b154bf1b388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ce07e2d9247f692e424385deb1e8b154bf1b388"}], "stats": {"total": 114, "additions": 94, "deletions": 20}, "files": [{"sha": "ddb1dbc786d7d748822b2d6ed573474d61bf812c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98eddaf72b64cf32c7f0b71bcb22bd245aa55f83", "patch": "@@ -1,3 +1,9 @@\n+2000-03-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.brendan/misc12.C: Removed.\n+\t* g++.old-deja/g++.pt/memtemp77.C: Constify.\n+\t* g++.old-deja/g++.ext/pretty4.C: New test.\n+\n 2000-03-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.other/string2.C: New test."}, {"sha": "6dd31d0669a846098660f9ab6fe89573802edf14", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/misc12.C", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ce07e2d9247f692e424385deb1e8b154bf1b388/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fmisc12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ce07e2d9247f692e424385deb1e8b154bf1b388/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fmisc12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fmisc12.C?ref=2ce07e2d9247f692e424385deb1e8b154bf1b388", "patch": "@@ -1,16 +0,0 @@\n-// GROUPS passed miscellaneous\n-extern \"C\" void exit (int);\n-extern \"C\" int printf (const char *, ...);\n-\n-/* Make sure cp-lex.c handles these properly--if this links, that means\n-   it emitted the strings instead of __FUNCTION__.0, etc.  */\n-\n-int\n-main()\n-{\n-  char *a = __FUNCTION__;\n-  char *b = __PRETTY_FUNCTION__;\n-\n-  printf (\"PASS\\n\");\n-  exit (0);\n-}"}, {"sha": "fd6b0e019070918b0942f8ad06d3b0ada37dd9b3", "filename": "gcc/testsuite/g++.old-deja/g++.ext/pretty4.C", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty4.C?ref=98eddaf72b64cf32c7f0b71bcb22bd245aa55f83", "patch": "@@ -0,0 +1,84 @@\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 3 Mar 2000 <nathan@codesourcery.com>\n+\n+// __PRETTY_FUNCTION__, __FUNCTION__ and __function__ should have the\n+// type char const [X], where X is the right value for that particular function\n+\n+static void const *strings[4];\n+static void const *tpls[4];\n+static unsigned pos = 0;\n+static int fail;\n+static void const *ptr = 0;\n+\n+void unover (char const (*)[5]) {}\n+void foo (char const (*)[5]) {}\n+void foo (void *) {fail = 1;}\n+void foo (void const *) {fail = 1;}\n+void baz (char const (&)[5]) {}\n+\n+template<unsigned I> void PV (char const (&objRef)[I])\n+{\n+  strings[pos] = objRef;\n+  tpls[pos] = __PRETTY_FUNCTION__;\n+  pos++;\n+}\n+\n+void fn ()\n+{\n+  PV (__FUNCTION__);\n+  PV (__func__);\n+  PV (__PRETTY_FUNCTION__);\n+  PV (\"wibble\");\n+}\n+\n+void baz ()\n+{\n+  ptr = __FUNCTION__;\n+  // there should be no string const merging\n+  if (ptr == \"baz\")\n+    fail = 1;\n+  // but all uses should be the same.\n+  if (ptr != __FUNCTION__)\n+    fail = 1;\n+}\n+int baz (int)\n+{\n+  return ptr == __FUNCTION__;\n+}\n+\n+int main ()\n+{\n+  // make sure we actually emit the VAR_DECL when needed, and things have the\n+  // expected type.\n+  foo (&__FUNCTION__);\n+  baz (__FUNCTION__);\n+  unover (&__FUNCTION__);\n+  if (fail)\n+    return 1;\n+  \n+  // __FUNCTION__ should be unique across functions with the same base name\n+  // (it's a local static, _not_ a string).\n+  baz ();\n+  if (fail)\n+    return 1;\n+  if (baz (1))\n+    return 1;\n+  fn ();\n+  \n+  // Check the names of fn. They should all be distinct strings (though two\n+  // will have the same value).\n+  if (strings[0] == strings[1])\n+    return 1;\n+  if (strings[0] == strings[2])\n+    return 1;\n+  if (strings[1] == strings[2])\n+    return 1;\n+\n+  // check the names of the template functions so invoked\n+  if (tpls[0] != tpls[1])\n+    return 1;\n+  if (tpls[0] == tpls[2])\n+    return 1;\n+  \n+  return 0;\n+}"}, {"sha": "d907367feb1adcb7b4daeaa7cae99ecb0d23d574", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp77.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp77.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98eddaf72b64cf32c7f0b71bcb22bd245aa55f83/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp77.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp77.C?ref=98eddaf72b64cf32c7f0b71bcb22bd245aa55f83", "patch": "@@ -4,21 +4,21 @@ template <class T>\n struct S3\n {\n   template <class U>\n-  static char* h(U);\n+  static const char* h(U);\n };\n \n template <>\n template <>\n-char* S3<double>::h(int) { return __PRETTY_FUNCTION__; }\n+const char* S3<double>::h(int) { return __PRETTY_FUNCTION__; }\n \n template <>\n template <>\n-char* S3<char>::h(int) { return __PRETTY_FUNCTION__; }\n+const char* S3<char>::h(int) { return __PRETTY_FUNCTION__; }\n \n int main()\n {\n   if (strcmp (S3<double>::h(7), \n-\t      \"char *S3<T>::h (U) [with U = int, T = double]\") == 0)\n+\t      \"const char *S3<T>::h (U) [with U = int, T = double]\") == 0)\n     return 0;\n   else \n     return 1;"}]}