{"sha": "24d14b918a541a2903c940dd26ad1d16a2d1d987", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRkMTRiOTE4YTU0MWEyOTAzYzk0MGRkMjZhZDFkMTZhMmQxZDk4Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:43:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:43:43Z"}, "message": "[multiple changes]\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Allow_Integer_Address):\n\tFix incorrect RTE call which caused bomb if pragma was in\n\tconfiguration pragma file.\n\n2014-07-29  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* expect.c (__gnat_expect_poll): Fix typo in previous change.\n\t* g-expect.adb: Update comments.\n\n2014-07-29  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-parame-hpux.ads, s-parame-vms-ia64.ads, s-parame.ads\n\t(Default_Attribute_Count): Bump to 16 on native platforms.\n\n2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb: Add guard to front-end inlining for SPARK.\n\nFrom-SVN: r213185", "tree": {"sha": "e75087da3f6c304077055321fe357fc2bdf3f199", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e75087da3f6c304077055321fe357fc2bdf3f199"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24d14b918a541a2903c940dd26ad1d16a2d1d987", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24d14b918a541a2903c940dd26ad1d16a2d1d987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24d14b918a541a2903c940dd26ad1d16a2d1d987", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24d14b918a541a2903c940dd26ad1d16a2d1d987/comments", "author": null, "committer": null, "parents": [{"sha": "b94b6c565ed2f5dd6a658c31e81529703166fc07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b94b6c565ed2f5dd6a658c31e81529703166fc07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b94b6c565ed2f5dd6a658c31e81529703166fc07"}], "stats": {"total": 62, "additions": 39, "deletions": 23}, "files": [{"sha": "4c97779155329225f798c7e6c3cfd212cabb0836", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=24d14b918a541a2903c940dd26ad1d16a2d1d987", "patch": "@@ -1,3 +1,23 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Allow_Integer_Address):\n+\tFix incorrect RTE call which caused bomb if pragma was in\n+\tconfiguration pragma file.\n+\n+2014-07-29  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* expect.c (__gnat_expect_poll): Fix typo in previous change.\n+\t* g-expect.adb: Update comments.\n+\n+2014-07-29  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-parame-hpux.ads, s-parame-vms-ia64.ads, s-parame.ads\n+\t(Default_Attribute_Count): Bump to 16 on native platforms.\n+\n+2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb: Add guard to front-end inlining for SPARK.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch10.adb, debug.adb, sem_prag.adb, sem_res.adb, sem_ch6.adb:"}, {"sha": "45e0540e839e85f098f3eea74f82740809bfd842", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=24d14b918a541a2903c940dd26ad1d16a2d1d987", "patch": "@@ -180,9 +180,10 @@ __gnat_expect_poll (int *fd,\n       for (i = 0; i < num_fd; i++)\n         {\n           if (!PeekNamedPipe (handles [i], NULL, 0, NULL, &avail, NULL))\n-            *dead_process = i + 1;\n-            return -1;\n-\n+            {\n+              *dead_process = i + 1;\n+              return -1;\n+            }\n           if (avail > 0)\n             {\n               is_set[i] = 1;\n@@ -292,9 +293,9 @@ __gnat_expect_poll (int *fd,\n \n \t  if ((status & 1) != 1)\n \t    {\n-\t      ready = -1;\n+              ready = -1;\n               dead_process = i + 1;\n-\t      return ready;\n+              return ready;\n \t    }\n \t}\n     }"}, {"sha": "94f80e92263dbf4ebbc6360a25b4beef345fd504", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=24d14b918a541a2903c940dd26ad1d16a2d1d987", "patch": "@@ -110,9 +110,10 @@ package body GNAT.Expect is\n       Dead_Process : access Integer;\n       Is_Set       : System.Address) return Integer;\n    pragma Import (C, Poll, \"__gnat_expect_poll\");\n-   --  Check whether there is any data waiting on the file descriptors Fds, and\n-   --  wait if there is none, at most Timeout milliseconds Returns -1 in case\n-   --  of error, 0 if the timeout expired before data became available.\n+   --  Check whether there is any data waiting on the file descriptors\n+   --  Fds, and wait if there is none, at most Timeout milliseconds\n+   --  Returns -1 in case of error, 0 if the timeout expired before\n+   --  data became available.\n    --\n    --  Is_Set is an array of the same size as FDs and elements are set to 1 if\n    --  data is available for the corresponding File Descriptor, 0 otherwise."}, {"sha": "1b3142ca789ddd548282428253a2bded2766456c", "filename": "gcc/ada/s-parame-hpux.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fs-parame-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fs-parame-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-hpux.ads?ref=24d14b918a541a2903c940dd26ad1d16a2d1d987", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -180,7 +180,7 @@ package System.Parameters is\n    -- Task Attributes --\n    ---------------------\n \n-   Default_Attribute_Count : constant := 4;\n+   Default_Attribute_Count : constant := 16;\n    --  Number of pre-allocated Address-sized task attributes stored in the\n    --  task control block.\n "}, {"sha": "ed3cd6c9157a3c65bc7f7f84d938e91fdef68ded", "filename": "gcc/ada/s-parame-vms-ia64.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fs-parame-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fs-parame-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-ia64.ads?ref=24d14b918a541a2903c940dd26ad1d16a2d1d987", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -183,7 +183,7 @@ package System.Parameters is\n    -- Task Attributes --\n    ---------------------\n \n-   Default_Attribute_Count : constant := 4;\n+   Default_Attribute_Count : constant := 16;\n    --  Number of pre-allocated Address-sized task attributes stored in the\n    --  task control block.\n "}, {"sha": "a0b87fd831e0cbfe822849df49b7c89ef789b89d", "filename": "gcc/ada/s-parame.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fs-parame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fs-parame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.ads?ref=24d14b918a541a2903c940dd26ad1d16a2d1d987", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -182,7 +182,7 @@ package System.Parameters is\n    -- Task Attributes --\n    ---------------------\n \n-   Default_Attribute_Count : constant := 4;\n+   Default_Attribute_Count : constant := 16;\n    --  Number of pre-allocated Address-sized task attributes stored in the\n    --  task control block.\n "}, {"sha": "9f69c00cd1231cc1ec7becc5f7ee3780090ed021", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=24d14b918a541a2903c940dd26ad1d16a2d1d987", "patch": "@@ -11012,15 +11012,7 @@ package body Sem_Prag is\n             --  VMS, where it is an integer type), then this pragma has no\n             --  purpose, so it is simply ignored.\n \n-            --  If Allow_Integer_Address is already set do nothing, otherwise\n-            --  calling RTE on RE_Address would cause a crash when loading\n-            --  system.ads. ??? same will happen if Allow_Integer_Address is\n-            --  not set actually, to be fixed and then the guard on\n-            --  not Opt.Allow_Integer_Address should be removed.\n-\n-            if not Opt.Allow_Integer_Address\n-              and then Is_Private_Type (RTE (RE_Address))\n-            then\n+            if Opt.Address_Is_Private then\n                Opt.Allow_Integer_Address := True;\n             end if;\n "}, {"sha": "168cfb32c454faf8658556b68336e044659a160f", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d14b918a541a2903c940dd26ad1d16a2d1d987/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=24d14b918a541a2903c940dd26ad1d16a2d1d987", "patch": "@@ -6127,8 +6127,10 @@ package body Sem_Res is\n       --  In GNATprove_Mode expansion is disabled, but we want to inline\n       --  subprograms that are marked Inline_Always, since the inlining\n       --  is useful in making it easier to prove things about the inlined body.\n+      --  Indirect calls, through a subprogram type, cannot be inlined.\n \n       if GNATprove_Mode\n+        and then Is_Overloadable (Nam)\n         and then Nkind (Unit_Declaration_Node (Nam)) = N_Subprogram_Declaration\n         and then Present (Body_To_Inline (Unit_Declaration_Node (Nam)))\n       then"}]}