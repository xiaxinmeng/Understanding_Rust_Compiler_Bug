{"sha": "3e097227978c983969c24f3babe4877ecd94bf7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UwOTcyMjc5NzhjOTgzOTY5YzI0ZjNiYWJlNDg3N2VjZDk0YmY3ZA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-29T00:14:50Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-29T00:14:50Z"}, "message": "vec.h: Include statistics.h\n\ngcc/ChangeLog:\n\t* vec.h: Include statistics.h\n\t* Makefile.in: Introduce VEC_H.  Replace all vec.h dependencies\n\twith VEC_H.\n\nlto/ChangeLog:\n\t* Make-lang.in: Replace vec.h dependency with VEC_H.\n\nFrom-SVN: r160010", "tree": {"sha": "892987a4142b96ee5a4720642b209c189a7668e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/892987a4142b96ee5a4720642b209c189a7668e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e097227978c983969c24f3babe4877ecd94bf7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e097227978c983969c24f3babe4877ecd94bf7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e097227978c983969c24f3babe4877ecd94bf7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e097227978c983969c24f3babe4877ecd94bf7d/comments", "author": null, "committer": null, "parents": [{"sha": "accf9ad64aac122eee74d485245901daa276542a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/accf9ad64aac122eee74d485245901daa276542a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/accf9ad64aac122eee74d485245901daa276542a"}], "stats": {"total": 53, "additions": 33, "deletions": 20}, "files": [{"sha": "18a30896c6de21c3526a487c1ac33208c9fd2f4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e097227978c983969c24f3babe4877ecd94bf7d", "patch": "@@ -1,3 +1,9 @@\n+2010-05-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* vec.h: Include statistics.h\n+\t* Makefile.in: Introduce VEC_H.  Replace all vec.h dependencies\n+\twith VEC_H.\n+\n 2010-05-29  Steven Bosscher  <steven@gcc.gnu.org>\n \n  \t* c-lex.c: Do not include c-tree.h."}, {"sha": "bc48226eef3cfb584b109ef8663f0a851e16dd5e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=3e097227978c983969c24f3babe4877ecd94bf7d", "patch": "@@ -858,6 +858,7 @@ REVISION_s  := \"\\\"\\\"\"\n endif\n \n # Shorthand variables for dependency lists.\n+VEC_H = vec.h statistics.h\n EXCEPT_H = except.h $(HASHTAB_H) vecprim.h vecir.h\n TOPLEV_H = toplev.h $(INPUT_H) bversion.h $(DIAGNOSTIC_CORE_H)\n TARGET_H = $(TM_H) target.h insn-modes.h\n@@ -867,19 +868,19 @@ HOSTHOOKS_DEF_H = hosthooks-def.h $(HOOKS_H)\n LANGHOOKS_DEF_H = langhooks-def.h $(HOOKS_H)\n TARGET_DEF_H = target-def.h $(HOOKS_H) targhooks.h\n RTL_BASE_H = rtl.h rtl.def $(MACHMODE_H) reg-notes.def insn-notes.def \\\n-  $(INPUT_H) $(REAL_H) statistics.h vec.h $(FIXED_VALUE_H) alias.h\n+  $(INPUT_H) $(REAL_H) statistics.h $(VEC_H) $(FIXED_VALUE_H) alias.h\n FIXED_VALUE_H = fixed-value.h $(MACHMODE_H) double-int.h\n RTL_H = $(RTL_BASE_H) genrtl.h vecir.h\n PARAMS_H = params.h params.def\n BUILTINS_DEF = builtins.def sync-builtins.def omp-builtins.def\n TREE_H = tree.h all-tree.def tree.def c-common.def $(lang_tree_files) \\\n           $(MACHMODE_H) tree-check.h $(BUILTINS_DEF) \\\n-          $(INPUT_H) statistics.h vec.h treestruct.def $(HASHTAB_H) \\\n+          $(INPUT_H) statistics.h $(VEC_H) treestruct.def $(HASHTAB_H) \\\n           double-int.h alias.h $(SYMTAB_H) options.h vecir.h \\\n \t  $(REAL_H) $(FIXED_VALUE_H)\n REGSET_H = regset.h $(BITMAP_H) hard-reg-set.h\n-BASIC_BLOCK_H = basic-block.h $(PREDICT_H) vec.h $(FUNCTION_H) cfghooks.h\n-GIMPLE_H = gimple.h gimple.def gsstruct.def pointer-set.h vec.h \\\n+BASIC_BLOCK_H = basic-block.h $(PREDICT_H) $(VEC_H) $(FUNCTION_H) cfghooks.h\n+GIMPLE_H = gimple.h gimple.def gsstruct.def pointer-set.h $(VEC_H) \\\n \t$(GGC_H) $(BASIC_BLOCK_H) $(TM_H) $(TARGET_H) tree-ssa-operands.h \\\n \ttree-ssa-alias.h vecir.h\n GCOV_IO_H = gcov-io.h gcov-iov.h auto-host.h\n@@ -905,7 +906,7 @@ CFGLOOP_H = cfgloop.h $(BASIC_BLOCK_H) $(RTL_H) vecprim.h double-int.h \\\n IPA_UTILS_H = ipa-utils.h $(TREE_H) $(CGRAPH_H)\n IPA_REFERENCE_H = ipa-reference.h $(BITMAP_H) $(TREE_H)\n IPA_TYPE_ESCAPE_H = ipa-type-escape.h $(TREE_H)\n-CGRAPH_H = cgraph.h vec.h $(TREE_H) $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n+CGRAPH_H = cgraph.h $(VEC_H) $(TREE_H) $(BASIC_BLOCK_H) $(FUNCTION_H) \\\n \tcif-code.def ipa-ref.h ipa-ref-inline.h\n DF_H = df.h $(BITMAP_H) $(REGSET_H) sbitmap.h $(BASIC_BLOCK_H) \\\n \talloc-pool.h $(TIMEVAR_H)\n@@ -946,17 +947,17 @@ DIAGNOSTIC_CORE_H = diagnostic-core.h input.h diagnostic.def\n DIAGNOSTIC_H = diagnostic.h $(DIAGNOSTIC_CORE_H) $(PRETTY_PRINT_H)\n C_PRETTY_PRINT_H = c-pretty-print.h $(PRETTY_PRINT_H) $(C_COMMON_H) $(TREE_H)\n SCEV_H = tree-scalar-evolution.h $(GGC_H) tree-chrec.h $(PARAMS_H)\n-LAMBDA_H = lambda.h $(TREE_H) vec.h $(GGC_H)\n+LAMBDA_H = lambda.h $(TREE_H) $(VEC_H) $(GGC_H)\n TREE_DATA_REF_H = tree-data-ref.h $(LAMBDA_H) omega.h graphds.h $(SCEV_H)\n TREE_INLINE_H = tree-inline.h vecir.h\n REAL_H = real.h $(MACHMODE_H)\n IRA_INT_H = ira.h ira-int.h $(CFGLOOP_H) alloc-pool.h\n DBGCNT_H = dbgcnt.h dbgcnt.def\n EBITMAP_H = ebitmap.h sbitmap.h\n LTO_STREAMER_H = lto-streamer.h $(LINKER_PLUGIN_API_H) $(TARGET_H) \\\n-\t\t$(CGRAPH_H) vec.h vecprim.h $(TREE_H) $(GIMPLE_H)\n+\t\t$(CGRAPH_H) $(VEC_H) vecprim.h $(TREE_H) $(GIMPLE_H)\n TREE_VECTORIZER_H = tree-vectorizer.h $(TREE_DATA_REF_H)\n-IPA_PROP_H = ipa-prop.h $(TREE_H) vec.h $(CGRAPH_H)\n+IPA_PROP_H = ipa-prop.h $(TREE_H) $(VEC_H) $(CGRAPH_H)\n GSTAB_H = gstab.h stab.def\n BITMAP_H = bitmap.h $(HASHTAB_H) statistics.h\n GCC_PLUGIN_H = gcc-plugin.h highlev-plugin-common.h $(CONFIG_H) $(SYSTEM_H) \\\n@@ -1977,7 +1978,7 @@ c-errors.o: c-errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n c-parser.o : c-parser.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(GGC_H) $(TIMEVAR_H) $(C_TREE_H) $(INPUT_H) $(FLAGS_H) $(TOPLEV_H) output.h \\\n     $(CPPLIB_H) gt-c-parser.h $(RTL_H) langhooks.h $(C_COMMON_H) $(C_PRAGMA_H) \\\n-    vec.h $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H)\n+    $(VEC_H) $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H)\n \n srcextra: gcc.srcextra lang.srcextra\n \n@@ -2200,7 +2201,7 @@ gtype-desc.o: gtype-desc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \n ggc-common.o: ggc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h\t\t\\\n \t$(GGC_H) $(HASHTAB_H) $(TOPLEV_H) $(PARAMS_H) hosthooks.h\t\\\n-\t$(HOSTHOOKS_DEF_H) vec.h $(PLUGIN_H) $(TIMEVAR_H)\n+\t$(HOSTHOOKS_DEF_H) $(VEC_H) $(PLUGIN_H) $(TIMEVAR_H)\n \n ggc-page.o: ggc-page.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n \t$(FLAGS_H) $(TOPLEV_H) $(GGC_H) $(TIMEVAR_H) $(TM_P_H) $(PARAMS_H) $(TREE_FLOW_H) $(PLUGIN_H)\n@@ -2367,7 +2368,7 @@ tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n-   tree-ssa-propagate.h vec.h value-prof.h gt-tree-ssa-propagate.h $(FLAGS_H) \\\n+   tree-ssa-propagate.h $(VEC_H) value-prof.h gt-tree-ssa-propagate.h $(FLAGS_H) \\\n    $(GIMPLE_H) gimple-pretty-print.h\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) output.h $(DIAGNOSTIC_H) \\\n@@ -2542,14 +2543,14 @@ tree-ssa-alias.o : tree-ssa-alias.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) $(TREE_INLINE_H) $(FLAGS_H) \\\n    $(FUNCTION_H) $(TIMEVAR_H) convert.h $(TM_H) coretypes.h langhooks.h \\\n    $(TREE_DUMP_H) $(TREE_PASS_H) $(PARAMS_H) $(BASIC_BLOCK_H) $(DIAGNOSTIC_H) \\\n-   $(GIMPLE_H) vec.h \\\n+   $(GIMPLE_H) $(VEC_H) \\\n    $(IPA_TYPE_ESCAPE_H) vecprim.h pointer-set.h alloc-pool.h \\\n    tree-pretty-print.h\n tree-ssa-reassoc.o : tree-ssa-reassoc.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(TREE_H) $(DIAGNOSTIC_H) $(TIMEVAR_H) \\\n    $(TM_H) coretypes.h $(TREE_DUMP_H) $(TREE_PASS_H) $(FLAGS_H) \\\n    tree-iterator.h $(BASIC_BLOCK_H) $(GIMPLE_H) $(TREE_INLINE_H) \\\n-   vec.h langhooks.h alloc-pool.h pointer-set.h $(CFGLOOP_H) \\\n+   $(VEC_H) langhooks.h alloc-pool.h pointer-set.h $(CFGLOOP_H) \\\n    tree-pretty-print.h gimple-pretty-print.h\n tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_H) $(TM_P_H) $(GGC_H) output.h \\\n@@ -2569,7 +2570,7 @@ gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(EXCEPT_H) $(FLAGS_H) $(RTL_H) $(FUNCTION_H) $(EXPR_H) output.h \\\n    $(GGC_H) gt-gimplify.h $(HASHTAB_H) $(TARGET_H) $(TOPLEV_H) $(OPTABS_H) \\\n-   $(SPLAY_TREE_H) vec.h tree-iterator.h tree-pass.h tree-pretty-print.h\n+   $(SPLAY_TREE_H) $(VEC_H) tree-iterator.h tree-pass.h tree-pretty-print.h\n gimple-iterator.o : gimple-iterator.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(GIMPLE_H) $(TREE_FLOW_H) value-prof.h\n gimple-fold.o : gimple-fold.c $(TREE_FLOW_H) $(CONFIG_H) \\\n@@ -3176,7 +3177,7 @@ cfgloopanal.o : cfgloopanal.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n    $(BASIC_BLOCK_H) hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) \\\n    $(OBSTACK_H) output.h graphds.h $(PARAMS_H)\n graphds.o : graphds.c graphds.h $(CONFIG_H) $(SYSTEM_H) $(BITMAP_H) $(OBSTACK_H) \\\n-   coretypes.h vec.h vecprim.h\n+   coretypes.h $(VEC_H) vecprim.h\n loop-iv.o : loop-iv.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    hard-reg-set.h $(CFGLOOP_H) $(EXPR_H) coretypes.h $(TM_H) $(OBSTACK_H) \\\n    output.h intl.h $(TOPLEV_H) $(DF_H) $(HASHTAB_H)\n@@ -3215,7 +3216,7 @@ reginfo.o : reginfo.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TARGET_H) $(TREE_PASS_H) $(DF_H) ira.h\n bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(GGC_H) gt-bitmap.h $(BITMAP_H) $(OBSTACK_H) $(HASHTAB_H)\n-vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h vec.h $(GGC_H) \\\n+vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(VEC_H) $(GGC_H) \\\n    $(TOPLEV_H) $(HASHTAB_H)\n reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) output.h $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n@@ -3410,7 +3411,7 @@ lambda-code.o: lambda-code.c $(LAMBDA_H) $(GGC_H) $(SYSTEM_H) $(CONFIG_H) \\\n    $(TM_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_CORE_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) \\\n    $(CFGLOOP_H) $(TREE_DATA_REF_H) $(EXPR_H) coretypes.h $(TARGET_H) \\\n-   $(TREE_PASS_H) vec.h vecprim.h $(OBSTACK_H) pointer-set.h\n+   $(TREE_PASS_H) $(VEC_H) vecprim.h $(OBSTACK_H) pointer-set.h\n params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) \\\n    $(TOPLEV_H)\n pointer-set.o: pointer-set.c pointer-set.h $(CONFIG_H) $(SYSTEM_H)\n@@ -3745,7 +3746,7 @@ build/read-rtl.o: read-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h\t\\\n   $(GTM_H) $(RTL_BASE_H) $(OBSTACK_H) $(HASHTAB_H) gensupport.h\n build/rtl.o: rtl.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H)\t\\\n   $(RTL_H) $(GGC_H) errors.h\n-build/vec.o : vec.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h vec.h \\\n+build/vec.o : vec.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(VEC_H)\t\\\n    $(GGC_H) $(TOPLEV_H)\n build/gencondmd.o : build/gencondmd.c $(BCONFIG_H) $(SYSTEM_H)\t\t\\\n   coretypes.h $(GTM_H) insn-constants.h $(RTL_H) $(TM_P_H)\t\t\\\n@@ -3764,7 +3765,7 @@ build/genattrtab.o : genattrtab.c $(RTL_BASE_H) $(OBSTACK_H)\t\t\\\n   $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h $(GGC_H)\t\\\n   gensupport.h\n build/genautomata.o : genautomata.c $(RTL_BASE_H) $(OBSTACK_H)\t\t\\\n-  $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h vec.h\t\t\\\n+  $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) errors.h $(VEC_H)\t\\\n   $(HASHTAB_H) gensupport.h\n build/gencheck.o : gencheck.c all-tree.def $(BCONFIG_H) $(GTM_H)\t\\\n \t$(SYSTEM_H) coretypes.h $(lang_tree_files) gimple.def"}, {"sha": "37e4a4f592974fbfe23be369bfbbd9642c7e799e", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=3e097227978c983969c24f3babe4877ecd94bf7d", "patch": "@@ -1,3 +1,7 @@\n+2010-05-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Make-lang.in: Replace vec.h dependency with VEC_H.\n+\n 2010-05-28  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lto-coff.c (coff_errmsg): Remove."}, {"sha": "60673497215d6868db7af789c01851c175be04fd", "filename": "gcc/lto/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2Flto%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2Flto%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FMake-lang.in?ref=3e097227978c983969c24f3babe4877ecd94bf7d", "patch": "@@ -83,7 +83,7 @@ lto/lto-lang.o: lto/lto-lang.c $(CONFIG_H) coretypes.h debug.h \\\n lto/lto.o: lto/lto.c $(CONFIG_H) $(SYSTEM_H) coretypes.h opts.h \\\n \ttoplev.h $(TREE_H) $(DIAGNOSTIC_CORE_H) $(TM_H) $(LIBIBERTY_H) \\\n \t$(CGRAPH_H) $(GGC_H) tree-ssa-operands.h $(TREE_PASS_H) \\\n-\tlanghooks.h vec.h $(BITMAP_H) pointer-set.h $(IPA_PROP_H) \\\n+\tlanghooks.h $(VEC_H) $(BITMAP_H) pointer-set.h $(IPA_PROP_H) \\\n \t$(COMMON_H) debug.h $(TIMEVAR_H) $(GIMPLE_H) $(LTO_H) $(LTO_TREE_H) \\\n \t$(LTO_TAGS_H) $(LTO_STREAMER_H) gt-lto-lto.h\n lto/lto-elf.o: lto/lto-elf.c $(CONFIG_H) coretypes.h $(SYSTEM_H) \\"}, {"sha": "c32bf8829e3c9fbe7d0b56d8c56ee396042b2a3f", "filename": "gcc/vec.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e097227978c983969c24f3babe4877ecd94bf7d/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=3e097227978c983969c24f3babe4877ecd94bf7d", "patch": "@@ -22,6 +22,8 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_VEC_H\n #define GCC_VEC_H\n \n+#include \"statistics.h\"\t\t/* For MEM_STAT_DECL.  */\n+\n /* The macros here implement a set of templated vector types and\n    associated interfaces.  These templates are implemented with\n    macros, as we're not in C++ land.  The interface functions are"}]}