{"sha": "9c751b88def09f71e1edbf623d41776478ead6fd", "node_id": "C_kwDOANBUbNoAKDljNzUxYjg4ZGVmMDlmNzFlMWVkYmY2MjNkNDE3NzY0NzhlYWQ2ZmQ", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2021-10-20T12:16:54Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2021-10-20T12:38:12Z"}, "message": "AArch64: Tune case-values-threshold\n\nTune the case-values-threshold setting for modern cores.  A value of 11 improves\nSPECINT2017 by 0.2% and reduces codesize by 0.04%.  With -Os use value 8 which\nreduces codesize by 0.07%.\n\n2021-10-18  Wilco Dijkstra  <wdijkstr@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_case_values_threshold):\n\tChange to 8 with -Os, 11 otherwise.", "tree": {"sha": "023d04d68dfc1481483bb0dc2d736f239c51e655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/023d04d68dfc1481483bb0dc2d736f239c51e655"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c751b88def09f71e1edbf623d41776478ead6fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c751b88def09f71e1edbf623d41776478ead6fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c751b88def09f71e1edbf623d41776478ead6fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c751b88def09f71e1edbf623d41776478ead6fd/comments", "author": null, "committer": null, "parents": [{"sha": "c437d3340d21c0c47537aca91e3546d2d6f1ae02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c437d3340d21c0c47537aca91e3546d2d6f1ae02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c437d3340d21c0c47537aca91e3546d2d6f1ae02"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "674edd4e305463fcee996487d23e89cc53378a2f", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c751b88def09f71e1edbf623d41776478ead6fd/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c751b88def09f71e1edbf623d41776478ead6fd/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=9c751b88def09f71e1edbf623d41776478ead6fd", "patch": "@@ -9500,8 +9500,8 @@ aarch64_cannot_force_const_mem (machine_mode mode ATTRIBUTE_UNUSED, rtx x)\n    The expansion for a table switch is quite expensive due to the number\n    of instructions, the table lookup and hard to predict indirect jump.\n    When optimizing for speed, and -O3 enabled, use the per-core tuning if \n-   set, otherwise use tables for > 16 cases as a tradeoff between size and\n-   performance.  When optimizing for size, use the default setting.  */\n+   set, otherwise use tables for >= 11 cases as a tradeoff between size and\n+   performance.  When optimizing for size, use 8 for smallest codesize.  */\n \n static unsigned int\n aarch64_case_values_threshold (void)\n@@ -9512,7 +9512,7 @@ aarch64_case_values_threshold (void)\n       && selected_cpu->tune->max_case_values != 0)\n     return selected_cpu->tune->max_case_values;\n   else\n-    return optimize_size ? default_case_values_threshold () : 17;\n+    return optimize_size ? 8 : 11;\n }\n \n /* Return true if register REGNO is a valid index register."}]}