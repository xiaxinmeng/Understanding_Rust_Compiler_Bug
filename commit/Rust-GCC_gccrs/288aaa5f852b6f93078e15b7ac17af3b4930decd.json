{"sha": "288aaa5f852b6f93078e15b7ac17af3b4930decd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg4YWFhNWY4NTJiNmY5MzA3OGUxNWI3YWMxN2FmM2I0OTMwZGVjZA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-07-11T15:30:51Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-07-11T15:30:51Z"}, "message": "vr-values.c (gimple_stmt_nonzero_p): Abstract common code to...\n\n        * vr-values.c (gimple_stmt_nonzero_p): Abstract common code to...\n        * gimple.c (gimple_call_nonnull_result_p): ...here...\n        (gimple_call_nonnull_arg): ...and here.\n        * gimple.h (gimple_call_nonnull_result_p): New.\n        (gimple_call_nonnull_arg): New.\n\nFrom-SVN: r262557", "tree": {"sha": "774a14ad8d1ed095e9895cd329d92655d84195e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/774a14ad8d1ed095e9895cd329d92655d84195e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/288aaa5f852b6f93078e15b7ac17af3b4930decd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288aaa5f852b6f93078e15b7ac17af3b4930decd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/288aaa5f852b6f93078e15b7ac17af3b4930decd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/288aaa5f852b6f93078e15b7ac17af3b4930decd/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dff2abcbee65dbb4b7ca3ade0f7622ffdc0af391"}], "stats": {"total": 93, "additions": 64, "deletions": 29}, "files": [{"sha": "d239863dc4db178eb5f51e74884557714006ac08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288aaa5f852b6f93078e15b7ac17af3b4930decd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288aaa5f852b6f93078e15b7ac17af3b4930decd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=288aaa5f852b6f93078e15b7ac17af3b4930decd", "patch": "@@ -1,3 +1,11 @@\n+2018-07-11  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* vr-values.c (gimple_stmt_nonzero_p): Abstract common code to...\n+\t* gimple.c (gimple_call_nonnull_result_p): ...here...\n+\t(gimple_call_nonnull_arg): ...and here.\n+\t* gimple.h (gimple_call_nonnull_result_p): New.\n+\t(gimple_call_nonnull_arg): New.\n+\n 2018-07-11  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/arm-cpus.in: Move information from fpu field of each"}, {"sha": "8d56a966cc1f5b21dcb09ab58e76062d8497dd7b", "filename": "gcc/gimple.c", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288aaa5f852b6f93078e15b7ac17af3b4930decd/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288aaa5f852b6f93078e15b7ac17af3b4930decd/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=288aaa5f852b6f93078e15b7ac17af3b4930decd", "patch": "@@ -1548,6 +1548,57 @@ gimple_call_return_flags (const gcall *stmt)\n }\n \n \n+/* Return true if call STMT is known to return a non-zero result.  */\n+\n+bool\n+gimple_call_nonnull_result_p (gcall *call)\n+{\n+  tree fndecl = gimple_call_fndecl (call);\n+  if (!fndecl)\n+    return false;\n+  if (flag_delete_null_pointer_checks && !flag_check_new\n+      && DECL_IS_OPERATOR_NEW (fndecl)\n+      && !TREE_NOTHROW (fndecl))\n+    return true;\n+\n+  /* References are always non-NULL.  */\n+  if (flag_delete_null_pointer_checks\n+      && TREE_CODE (TREE_TYPE (fndecl)) == REFERENCE_TYPE)\n+    return true;\n+\n+  if (flag_delete_null_pointer_checks\n+      && lookup_attribute (\"returns_nonnull\",\n+\t\t\t   TYPE_ATTRIBUTES (gimple_call_fntype (call))))\n+    return true;\n+  return gimple_alloca_call_p (call);\n+}\n+\n+\n+/* If CALL returns a non-null result in an argument, return that arg.  */\n+\n+tree\n+gimple_call_nonnull_arg (gcall *call)\n+{\n+  tree fndecl = gimple_call_fndecl (call);\n+  if (!fndecl)\n+    return NULL_TREE;\n+\n+  unsigned rf = gimple_call_return_flags (call);\n+  if (rf & ERF_RETURNS_ARG)\n+    {\n+      unsigned argnum = rf & ERF_RETURN_ARG_MASK;\n+      if (argnum < gimple_call_num_args (call))\n+\t{\n+\t  tree arg = gimple_call_arg (call, argnum);\n+\t  if (SSA_VAR_P (arg)\n+\t      && infer_nonnull_range_by_attribute (call, arg))\n+\t    return arg;\n+\t}\n+    }\n+  return NULL_TREE;\n+}\n+\n+\n /* Return true if GS is a copy assignment.  */\n \n bool"}, {"sha": "a5dda9369bc0b11446ba7cffe0403e93f0222fa6", "filename": "gcc/gimple.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288aaa5f852b6f93078e15b7ac17af3b4930decd/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288aaa5f852b6f93078e15b7ac17af3b4930decd/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=288aaa5f852b6f93078e15b7ac17af3b4930decd", "patch": "@@ -1488,6 +1488,8 @@ bool gimple_call_same_target_p (const gimple *, const gimple *);\n int gimple_call_flags (const gimple *);\n int gimple_call_arg_flags (const gcall *, unsigned);\n int gimple_call_return_flags (const gcall *);\n+bool gimple_call_nonnull_result_p (gcall *);\n+tree gimple_call_nonnull_arg (gcall *);\n bool gimple_assign_copy_p (gimple *);\n bool gimple_assign_ssa_name_copy_p (gimple *);\n bool gimple_assign_unary_nop_p (gimple *);"}, {"sha": "bba170f341b6902f690a80efb8ab609819cecbf8", "filename": "gcc/vr-values.c", "status": "modified", "additions": 3, "deletions": 29, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/288aaa5f852b6f93078e15b7ac17af3b4930decd/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/288aaa5f852b6f93078e15b7ac17af3b4930decd/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=288aaa5f852b6f93078e15b7ac17af3b4930decd", "patch": "@@ -313,35 +313,9 @@ gimple_stmt_nonzero_p (gimple *stmt)\n       return gimple_assign_nonzero_p (stmt);\n     case GIMPLE_CALL:\n       {\n-\ttree fndecl = gimple_call_fndecl (stmt);\n-\tif (!fndecl) return false;\n-\tif (flag_delete_null_pointer_checks && !flag_check_new\n-\t    && DECL_IS_OPERATOR_NEW (fndecl)\n-\t    && !TREE_NOTHROW (fndecl))\n-\t  return true;\n-\t/* References are always non-NULL.  */\n-\tif (flag_delete_null_pointer_checks\n-\t    && TREE_CODE (TREE_TYPE (fndecl)) == REFERENCE_TYPE)\n-\t  return true;\n-\tif (flag_delete_null_pointer_checks && \n-\t    lookup_attribute (\"returns_nonnull\",\n-\t\t\t      TYPE_ATTRIBUTES (gimple_call_fntype (stmt))))\n-\t  return true;\n-\n-\tgcall *call_stmt = as_a<gcall *> (stmt);\n-\tunsigned rf = gimple_call_return_flags (call_stmt);\n-\tif (rf & ERF_RETURNS_ARG)\n-\t  {\n-\t    unsigned argnum = rf & ERF_RETURN_ARG_MASK;\n-\t    if (argnum < gimple_call_num_args (call_stmt))\n-\t      {\n-\t\ttree arg = gimple_call_arg (call_stmt, argnum);\n-\t\tif (SSA_VAR_P (arg)\n-\t\t    && infer_nonnull_range_by_attribute (stmt, arg))\n-\t\t  return true;\n-\t      }\n-\t  }\n-\treturn gimple_alloca_call_p (stmt);\n+        gcall *call_stmt = as_a<gcall *> (stmt);\n+\treturn (gimple_call_nonnull_result_p (call_stmt)\n+\t\t|| gimple_call_nonnull_arg (call_stmt));\n       }\n     default:\n       gcc_unreachable ();"}]}