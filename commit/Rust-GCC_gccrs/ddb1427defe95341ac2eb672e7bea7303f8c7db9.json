{"sha": "ddb1427defe95341ac2eb672e7bea7303f8c7db9", "node_id": "C_kwDOANBUbNoAKGRkYjE0MjdkZWZlOTUzNDFhYzJlYjY3MmU3YmVhNzMwM2Y4YzdkYjk", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-17T15:17:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-17T19:53:40Z"}, "message": "libstdc++: Relax memory ordering for default memory resource object\n\nCurrently pmr::set_default_resource and pmr::get_default_resource both\nuse sequentially consistent memory ordering. This is overkill. The\nstandard only requires that a call to set_default_resource synchronizes\nwith subsequent calls to set_default_resource and get_default_resource.\n\nUsing acquire-release for the setter and acquire for the getter is\nsufficient to meet the requirement.\n\nReviewed-by: Thomas Rodgers  <trodgers@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/c++17/memory_resource.cc (set_default_resource): Use\n\tmemory_order_acq_rel.\n\t(get_default_resource): Use memory_order_acquire.", "tree": {"sha": "90c89ddc1745b295c25b34ea1d879f4fb6f556c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90c89ddc1745b295c25b34ea1d879f4fb6f556c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddb1427defe95341ac2eb672e7bea7303f8c7db9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb1427defe95341ac2eb672e7bea7303f8c7db9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddb1427defe95341ac2eb672e7bea7303f8c7db9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddb1427defe95341ac2eb672e7bea7303f8c7db9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c2d703e6d6d47f41635ca4df06c555010462081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c2d703e6d6d47f41635ca4df06c555010462081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c2d703e6d6d47f41635ca4df06c555010462081"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "8bc55a69f1f07b39dada2f1f2df1e51d6a8fd9a4", "filename": "libstdc++-v3/src/c++17/memory_resource.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddb1427defe95341ac2eb672e7bea7303f8c7db9/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Fmemory_resource.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddb1427defe95341ac2eb672e7bea7303f8c7db9/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Fmemory_resource.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Fmemory_resource.cc?ref=ddb1427defe95341ac2eb672e7bea7303f8c7db9", "patch": "@@ -112,13 +112,13 @@ namespace pmr\n       mutex mx;\n       memory_resource* val;\n \n-      memory_resource* load()\n+      memory_resource* load(std::memory_order)\n       {\n \tlock_guard<mutex> lock(mx);\n \treturn val;\n       }\n \n-      memory_resource* exchange(memory_resource* r)\n+      memory_resource* exchange(memory_resource* r, std::memory_order)\n       {\n \tlock_guard<mutex> lock(mx);\n \treturn std::__exchange(val, r);\n@@ -134,12 +134,12 @@ namespace pmr\n \n       memory_resource* val;\n \n-      memory_resource* load() const\n+      memory_resource* load(std::memory_order) const\n       {\n \treturn val;\n       }\n \n-      memory_resource* exchange(memory_resource* r)\n+      memory_resource* exchange(memory_resource* r, std::memory_order)\n       {\n \treturn std::__exchange(val, r);\n       }\n@@ -166,12 +166,12 @@ namespace pmr\n   {\n     if (r == nullptr)\n       r = new_delete_resource();\n-    return default_res.obj.exchange(r);\n+    return default_res.obj.exchange(r, std::memory_order_acq_rel);\n   }\n \n   memory_resource*\n   get_default_resource() noexcept\n-  { return default_res.obj.load(); }\n+  { return default_res.obj.load(std::memory_order_acquire); }\n \n   // Member functions for std::pmr::monotonic_buffer_resource\n "}]}