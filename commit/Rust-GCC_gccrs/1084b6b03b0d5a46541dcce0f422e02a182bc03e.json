{"sha": "1084b6b03b0d5a46541dcce0f422e02a182bc03e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA4NGI2YjAzYjBkNWE0NjU0MWRjY2UwZjQyMmUwMmExODJiYzAzZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-02-20T09:16:58Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-02-20T09:16:58Z"}, "message": "re PR fortran/30783 (\"character(*), value\" produces SEGV at runtime)\n\n2007-02-20  Tobias Burnus  <burnus@net-b.de>\n\n       PR fortran/30783\n       * resolve.c (resolve_symbol): Add character dummy VALUE check.\n\nFrom-SVN: r122156", "tree": {"sha": "4b5d08b67d15b7a96d45cb74d7598ffb70448d1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b5d08b67d15b7a96d45cb74d7598ffb70448d1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1084b6b03b0d5a46541dcce0f422e02a182bc03e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1084b6b03b0d5a46541dcce0f422e02a182bc03e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1084b6b03b0d5a46541dcce0f422e02a182bc03e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1084b6b03b0d5a46541dcce0f422e02a182bc03e/comments", "author": null, "committer": null, "parents": [{"sha": "c88b0c50f7b26078e9b4c6d7d7749f8de44b1f07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c88b0c50f7b26078e9b4c6d7d7749f8de44b1f07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c88b0c50f7b26078e9b4c6d7d7749f8de44b1f07"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "aac02b9d05c4f26b300014c919a5b1da4ffe1372", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1084b6b03b0d5a46541dcce0f422e02a182bc03e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1084b6b03b0d5a46541dcce0f422e02a182bc03e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1084b6b03b0d5a46541dcce0f422e02a182bc03e", "patch": "@@ -1,3 +1,8 @@\n+2007-02-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/30783\n+\t* resolve.c (resolve_symbol): Add character dummy VALUE check.\n+\n 2007-02-19  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/30533\n@@ -29,8 +34,8 @@\n 2007-02-18  Roger Sayle  <roger@eyesopen.com>\n \t    Paul Thomas <pault@gcc.gnu.org>\n \n-        PR fortran/30400\n-        * match.c (match_forall_iterator): Use gfc_match_expr instead\n+\tPR fortran/30400\n+\t* match.c (match_forall_iterator): Use gfc_match_expr instead\n \tof gfc_match_variable to match the iterator variable.  Return\n \tMATCH_NO if not a variable.  Remove the reset of the symbol's\n \tflavor in cleanup."}, {"sha": "8db36b5f2c0e1321736c7809c11824fe33a2d065", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1084b6b03b0d5a46541dcce0f422e02a182bc03e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1084b6b03b0d5a46541dcce0f422e02a182bc03e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=1084b6b03b0d5a46541dcce0f422e02a182bc03e", "patch": "@@ -6153,10 +6153,22 @@ resolve_symbol (gfc_symbol *sym)\n   if (sym->attr.value && !sym->attr.dummy)\n     {\n       gfc_error (\"'%s' at %L cannot have the VALUE attribute because \"\n-\t\t \"it is not a dummy\", sym->name, &sym->declared_at);\n+\t\t \"it is not a dummy argument\", sym->name, &sym->declared_at);\n       return;\n     }\n \n+  if (sym->attr.value && sym->ts.type == BT_CHARACTER)\n+    {\n+      gfc_charlen *cl = sym->ts.cl;\n+      if (!cl || !cl->length || cl->length->expr_type != EXPR_CONSTANT)\n+\t{\n+\t  gfc_error (\"Character dummy variable '%s' at %L with VALUE \"\n+\t\t     \"attribute must have constant length\",\n+\t\t     sym->name, &sym->declared_at);\n+\t  return;\n+\t}\n+    }\n+\n   /* If a derived type symbol has reached this point, without its\n      type being declared, we have an error.  Notice that most\n      conditions that produce undefined derived types have already"}]}