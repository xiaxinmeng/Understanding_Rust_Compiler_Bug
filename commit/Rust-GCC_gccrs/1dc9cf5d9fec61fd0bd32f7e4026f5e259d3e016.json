{"sha": "1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRjOWNmNWQ5ZmVjNjFmZDBiZDMyZjdlNDAyNmY1ZTI1OWQzZTAxNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-07-09T07:25:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-07-09T07:25:14Z"}, "message": "re PR debug/86413 (gcc.dg/guality/pr48437.c fail)\n\n2018-07-09  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/86413\n\t* dwarf2out.c (gen_block_die): For an early generated DIE\n\talways output high/low PC attributes.\n\nFrom-SVN: r262511", "tree": {"sha": "aa7388787630446085283249d5ead4c6746df339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa7388787630446085283249d5ead4c6746df339"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74725f46ddc4bb020414320147cba37f907c3336", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74725f46ddc4bb020414320147cba37f907c3336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74725f46ddc4bb020414320147cba37f907c3336"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "4295d5f2fb6276d48922661df35ec395b75c8399", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016", "patch": "@@ -1,3 +1,9 @@\n+2018-07-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/86413\n+\t* dwarf2out.c (gen_block_die): For an early generated DIE\n+\talways output high/low PC attributes.\n+\n 2018-07-09  Tom de Vries  <tdevries@suse.de>\n \n \t* cfgexpand.c (expand_debug_source_expr): Handle VAR_DECL."}, {"sha": "95232177d838cad1ca05f5462ed582c25901e8cd", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1dc9cf5d9fec61fd0bd32f7e4026f5e259d3e016", "patch": "@@ -25622,6 +25622,11 @@ gen_block_die (tree stmt, dw_die_ref context_die)\n     /* The outer scopes for inlinings *must* always be represented.  We\n        generate DW_TAG_inlined_subroutine DIEs for them.  (See below.) */\n     must_output_die = 1;\n+  else if (BLOCK_DIE (stmt))\n+    /* If we already have a DIE then it was filled early.  Meanwhile\n+       we might have pruned all BLOCK_VARS as optimized out but we\n+       still want to generate high/low PC attributes so output it.  */\n+    must_output_die = 1;\n   else\n     {\n       /* Determine if this block directly contains any \"significant\""}]}