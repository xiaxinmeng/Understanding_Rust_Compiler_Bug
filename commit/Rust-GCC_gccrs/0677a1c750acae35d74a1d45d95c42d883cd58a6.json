{"sha": "0677a1c750acae35d74a1d45d95c42d883cd58a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY3N2ExYzc1MGFjYWUzNWQ3NGExZDQ1ZDk1YzQyZDg4M2NkNThhNg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-29T14:06:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T14:06:20Z"}, "message": "exp_ch5.adb, [...]: Minor comment additions.\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch5.adb, exp_ch9.adb: Minor comment additions.\n\t* gnat_rm.texi: Complete list of implementation aspects.\n\t* aspects.ads: Minor comment clarification.\n\nFrom-SVN: r213196", "tree": {"sha": "da5ba93a5a6ca466899d415a599ede72f05785d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da5ba93a5a6ca466899d415a599ede72f05785d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0677a1c750acae35d74a1d45d95c42d883cd58a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0677a1c750acae35d74a1d45d95c42d883cd58a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0677a1c750acae35d74a1d45d95c42d883cd58a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0677a1c750acae35d74a1d45d95c42d883cd58a6/comments", "author": null, "committer": null, "parents": [{"sha": "a2cc9797dfc084b28934de307d1e0254753121f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cc9797dfc084b28934de307d1e0254753121f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2cc9797dfc084b28934de307d1e0254753121f8"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "e55202a064b73244e1ec8ecf83276d390947f5cb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0677a1c750acae35d74a1d45d95c42d883cd58a6", "patch": "@@ -1,3 +1,9 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch5.adb, exp_ch9.adb: Minor comment additions.\n+\t* gnat_rm.texi: Complete list of implementation aspects.\n+\t* aspects.ads: Minor comment clarification.\n+\n 2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch5.adb (Expand_N_Assignment_Statement): If the target type"}, {"sha": "98acec1d6058686419d90d1fa2ad4be4fb85b5eb", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=0677a1c750acae35d74a1d45d95c42d883cd58a6", "patch": "@@ -194,7 +194,7 @@ package Aspects is\n       Aspect_Volatile_Components,\n \n       --  Aspects that have a static boolean value but don't correspond to\n-      --  pragmas\n+      --  pragmas with a single argument that it is the entity in question.\n \n       Aspect_Lock_Free);                    -- GNAT\n "}, {"sha": "46e2fb4ed965f0b56e4b9899c20600d2a15dda49", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=0677a1c750acae35d74a1d45d95c42d883cd58a6", "patch": "@@ -2001,6 +2001,13 @@ package body Exp_Ch5 is\n       if Is_Access_Type (Typ)\n         and then Can_Never_Be_Null (Etype (Lhs))\n         and then not Can_Never_Be_Null (Etype (Rhs))\n+\n+        --  If an actual is an out parameter of a null-excluding access\n+        --  type, there is access check on entry, so we set the flag\n+        --  Suppress_Assignment_Checks on the generated statement to\n+        --  assign the actual to the parameter block, and we do not want\n+        --  to generate an additional check at this point.\n+\n         and then not Suppress_Assignment_Checks (N)\n       then\n          Apply_Constraint_Check (Rhs, Etype (Lhs));"}, {"sha": "3c376d19727f31159d829c4660c3669e13d3b435", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=0677a1c750acae35d74a1d45d95c42d883cd58a6", "patch": "@@ -4768,6 +4768,12 @@ package body Exp_Ch9 is\n                        Make_Assignment_Statement (Loc,\n                          Name => N_Var,\n                          Expression => Relocate_Node (Actual)));\n+\n+                     --  If actual is an out parameter of a null-excluding\n+                     --  access type, there is access check on entry, so set\n+                     --  Suppress_Assignment_Checks on the generated statement\n+                     --  that assigns the actual to the parameter block\n+\n                      Set_Suppress_Assignment_Checks (Last (Stats));\n                   end if;\n "}, {"sha": "b61689696b691d043085b2ec30fb78146963e1ab", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0677a1c750acae35d74a1d45d95c42d883cd58a6/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=0677a1c750acae35d74a1d45d95c42d883cd58a6", "patch": "@@ -1,4 +1,3 @@\n-\n \\input texinfo   @c -*-texinfo-*-\n \n @c %**start of header\n@@ -308,6 +307,7 @@ Implementation Defined Aspects\n * Aspect Initializes::\n * Aspect Inline_Always::\n * Aspect Invariant::\n+* Aspect Iterable::\n * Aspect Linker_Section::\n * Aspect Object_Size::\n * Aspect Part_Of::\n@@ -369,8 +369,8 @@ Implementation Defined Attributes\n * Attribute Implicit_Dereference::\n * Attribute Integer_Value::\n * Attribute Invalid_Value::\n-* Attribute Iterator_Element::\n * Attribute Iterable::\n+* Attribute Iterator_Element::\n * Attribute Large::\n * Attribute Library_Level::\n * Attribute Lock_Free::\n@@ -4493,7 +4493,7 @@ end IO_Card;\n @end smallexample\n \n @node Pragma Lock_Free\n-@unnumberedsec Pragma Locl_Free\n+@unnumberedsec Pragma Lock_Free\n @findex Lock_Free\n @noindent\n Syntax:\n@@ -8122,6 +8122,7 @@ clause.\n * Aspect Initializes::\n * Aspect Inline_Always::\n * Aspect Invariant::\n+* Aspect Iterable::\n * Aspect Linker_Section::\n * Aspect Lock_Free::\n * Aspect Object_Size::\n@@ -8344,6 +8345,12 @@ This aspect is equivalent to pragma @code{Invariant}. It is a\n synonym for the language defined aspect @code{Type_Invariant} except\n that it is separately controllable using pragma @code{Assertion_Policy}.\n \n+@node Aspect Iterable\n+@unnumberedsec Aspect Iterable\n+@findex Iterable\n+@noindent\n+PLEASE ADD DOCUMENTATION HERE???\n+\n @node Aspect Linker_Section\n @unnumberedsec Aspect Linker_Section\n @findex Linker_Section"}]}