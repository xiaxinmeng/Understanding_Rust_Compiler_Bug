{"sha": "254d164615d2c3c3225626fe7ee6d70802bafe5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU0ZDE2NDYxNWQyYzNjMzIyNTYyNmZlN2VlNmQ3MDgwMmJhZmU1ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-09-23T09:24:21Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-09-23T09:24:21Z"}, "message": "mips.h (ISA_HAS_DSP, [...]): New macros.\n\ngcc/\n\t* config/mips/mips.h (ISA_HAS_DSP, ISA_HAS_DSPR2): New macros.\n\t* config/mips/mips.c (mips_set_mips16_mode): Don't clear the DSP\n\tflags for MIPS16.\n\t(override_options): Check TARGET_HARD_FLOAT_ABI instead of\n\tTARGET_HARD_FLOAT when testing whether -mpaired-single is\n\tsupported.\n\t(mips_conditional_register_usage): Check ISA_HAS_DSP instead of\n\tTARGET_DSP.\n\t* config/mips/constraints.md (ka): Check ISA_HAS_DSPR2 instead of\n\tTARGET_DSPR2.\n\t* config/mips/mips.md (ANYF): Require TARGET_HARD_FLOAT for V2SF.\n\t(mulv2sf3, movv2sf, movv2sf_hardfloat_64bit): Require\n\tTARGET_HARD_FLOAT.\n\t(<u>mulsidi3_32bit_internal, <u>msubsidi4, <u>maddsidi4): Check\n\tISA_HAS_DSPR2 instead of TARGET_HAS_DSPR2.\n\t* config/mips/mips-dsp.md: Use ISA_HAS_DSP instead of TARGET_HAS_DSP\n\tthroughout.\n\t* config/mips/mips-dspr2.md: Likewise ISA_HAS_DSPR2 and\n\tTARGET_HAS_DSPR2.\n\t* config/mips/mips-fixed.md: Use ISA_HAS_DSP and ISA_HAS_DSPR2\n\tinstead of TARGET_HAS_DSP and TARGET_HAS_DSPR2.\n\t* config/mips/mips-ps-3d.md: Add TARGET_HARD_FLOAT to V2SF patterns.\n\ngcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_nomips16): New\n\tprocedure.\n\t* lib/fortran-torture.exp: Check nomips16 as well as mpaired_single\n\tfor mipsisa64*-*-*.\n\t* gcc.dg/vect/vect.exp: Likewise.\n\t* g++.dg/vect/vect.exp: Likewise.\n\t* gcc.target/mips/mips.exp (setup_mips_tests): Don't set mips_mips16.\n\t(dg-mips-options): Don't skip -march* and -mips* tests for -mips16.\n\t* gcc.target/mips/branch-cost-1.c (foo): Add NOMIPS16.\n\t* gcc.target/mips/branch-cost-2.c (foo): Likewise.\n\t* gcc.target/mips/clear-cache-1.c (f): Likewise.\n\t* gcc.target/mips/dpaq_sa_l_w.c (f1, f2, f3): Likewise.\n\t* gcc.target/mips/dpsq_sa_l_w.c (f1, f2, f3): Likewise.\n\t* gcc.target/mips/fix-vr4130-1.c (foo): Likewise.\n\t* gcc.target/mips/fix-vr4130-2.c (foo): Likewise.\n\t* gcc.target/mips/fix-vr4130-3.c (foo): Likewise.\n\t* gcc.target/mips/fix-vr4130-4.c (foo): Likewise.\n\t* gcc.target/mips/fixed-scalar-type.c (test1, test2, test3, test4)\n\t(test5, test6, test7, test8, test9, test10, test11, test12, test13)\n\t(test14, test15, test16, test17, test18): Likewise.\n\t* gcc.target/mips/fixed-vector-type.c (test1, test2, test3, test4)\n\t(test5, test6, test7, test8, test9, test10, test11, test12, test13)\n\t(test14, test15, test16, test17, test18, test19, test20, test21)\n\t(test22): Likewise.\n\t* gcc.target/mips/madd-1.c (f1, f2, f3): Likewise.\n\t* gcc.target/mips/madd-2.c (f1, f2, f3): Likewise.\n\t* gcc.target/mips/madd-4.c (f1, f2, f3): Likewise.\n\t* gcc.target/mips/maddu-1.c (f1, f2, f3): Likewise.\n\t* gcc.target/mips/maddu-2.c (f1, f2, f3): Likewise.\n\t* gcc.target/mips/maddu-4.c (f1, f2, f3): Likewise.\n\t* gcc.target/mips/mips-3d-1.c (main): Likewise.\n\t* gcc.target/mips/mips-3d-2.c (main, test0, test1, test2, test3)\n\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n\t(test13, test14, test15, test16, test17, test18, test19, test20)\n\t(test21, test22, test23, test24, test25, test26, test27, test28)\n\t(test29, test30, test31): Likewise.\n\t* gcc.target/mips/mips-3d-3.c (main, test0, test1, test2, test3)\n\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n\t(test13, test14, test15, test16, test17, test18, test19, test20)\n\t(test21, test22, test23, test24, test25, test26, test27, test28)\n\t(test29, test30, test31, test32, test33, test34, test35, test36)\n\t(test37, test38, test39, test40, test41, test42, test43, test44)\n\t(test45, test46, test47, test48, test49, test50, test51, test52)\n\t(test53, test54, test55, test56, test57, test58, test59, test60)\n\t(test61, test62, test63): Likewise.\n\t* gcc.target/mips/mips-3d-4.c (main, test0, test1, test2, test3)\n\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n\t(test13, test14, test15, test16, test17, test18, test19, test20)\n\t(test21, test22, test23, test24, test25, test26, test27, test28)\n\t(test29, test30, test31): Likewise.\n\t* gcc.target/mips/mips-3d-5.c (main, test0, test1, test2, test3)\n\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n\t(test13, test14, test15, test16, test17, test18, test19, test20)\n\t(test21, test22, test23, test24, test25, test26, test27, test28)\n\t(test29, test30, test31): Likewise.\n\t* gcc.target/mips/mips-3d-6.c (main, test0, test1, test2, test3)\n\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n\t(test13, test14, test15): Likewise.\n\t* gcc.target/mips/mips-3d-7.c (main, test0, test1, test2, test3)\n\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n\t(test13, test14, test15): Likewise.\n\t* gcc.target/mips/mips-3d-8.c (main, test0, test1, test2, test3)\n\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n\t(test13, test14, test15, test16, test17, test18, test19, test20)\n\t(test21, test22, test23, test24, test25, test26, test27, test28)\n\t(test29, test30, test31): Likewise.\n\t* gcc.target/mips/mips-3d-9.c (matrix_multiply2, matrix_multiply3)\n\t(matrix_multiply4: Likewise.\n\t* gcc.target/mips/mips-ps-1.c (main): Likewise.\n\t* gcc.target/mips/mips-ps-2.c (main): Likewise.\n\t* gcc.target/mips/mips-ps-3.c (main): Likewise.\n\t* gcc.target/mips/mips-ps-4.c (main, test0, test1, test2, test3)\n\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n\t(test13, test14, test15, test16, test17, test18, test19, test20)\n\t(test21, test22, test23, test24, test25, test26, test27, test28)\n\t(test29, test30, test31): Likewise.\n\t* gcc.target/mips/mips-ps-5.c (main, test0, test1, test2, test3)\n\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n\t(test13, test14, test15, test16, test17, test18, test19, test20)\n\t(test21, test22, test23, test24, test25, test26, test27, test28)\n\t(test29, test30, test31): Likewise.\n\t* gcc.target/mips/mips-ps-5.c (main): Likewise.\n\t* gcc.target/mips/mips-ps-6.c (main): Likewise.\n\t* gcc.target/mips/mips-ps-type.c (init, move, load, store, add, sub)\n\t(neg, mul, madd, msub, nmadd, nmsub, cond_move1, cond_move2): Likewise.\n\t* gcc.target/mips/mips32-dsp-type.c (add_v2hi,add_v4qi, sub_v2hi)\n\t(sub_v4qi): Likewise.\n\t* gcc.target/mips/mips32-dsp.c (test_MIPS_DSP, add_v2q15, add_v4i8)\n\t(sub_v2q15, sub_v4i8, test_MIPS_DSP): Likewise.\n\t* gcc.target/mips/movcc-1.c (sub1, sub2): Likewise.\n\t* gcc.target/mips/movcc-2.c (sub4, sub5): Likewise.\n\t* gcc.target/mips/movcc-3.c (sub3, sub6, sub7, sub8, sub9, suba)\n\t(subb, subc): Likewise.\n\t* gcc.target/mips/msub-1.c (f1, f2): Likewise.\n\t* gcc.target/mips/msub-2.c (f1, f2): Likewise.\n\t* gcc.target/mips/msub-4.c (f1, f2): Likewise.\n\t* gcc.target/mips/msubu-1.c (f1, f2): Likewise.\n\t* gcc.target/mips/msubu-2.c (f1, f2): Likewise.\n\t* gcc.target/mips/msubu-4.c (f1, f2): Likewise.\n\t* gcc.target/mips/nmadd-1.c (sub1, sub2, sub3, sub4): Likewise.\n\t* gcc.target/mips/nmadd-2.c (sub1, sub2, sub3, sub4): Likewise.\n\t* gcc.target/mips/rsqrt-1.c (foo, bar): Likewise.\n\t* gcc.target/mips/rsqrt-2.c (foo, bar): Likewise.\n\t* gcc.target/mips/sb1-1.c (divide, recip, squareroot, rsqrt): Likewise.\n\t* gcc.target/mips/vr-mult-1.c (f1, f2): Likewise.\n\t* gcc.target/mips/vr-mult-2.c (f1, f2): Likewise.\n\nFrom-SVN: r128683", "tree": {"sha": "7c55bd39ce9b43c75e7e8cc7e72f9496f93d507e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c55bd39ce9b43c75e7e8cc7e72f9496f93d507e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/254d164615d2c3c3225626fe7ee6d70802bafe5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254d164615d2c3c3225626fe7ee6d70802bafe5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254d164615d2c3c3225626fe7ee6d70802bafe5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254d164615d2c3c3225626fe7ee6d70802bafe5e/comments", "author": null, "committer": null, "parents": [{"sha": "1a68a4e8c58faa0ba4d05a24826e8858757810b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a68a4e8c58faa0ba4d05a24826e8858757810b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a68a4e8c58faa0ba4d05a24826e8858757810b5"}], "stats": {"total": 2052, "additions": 1107, "deletions": 945}, "files": [{"sha": "350b9bab73de9a02842adebf68b01a6a8742f6ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -1,3 +1,28 @@\n+2007-09-23  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* config/mips/mips.h (ISA_HAS_DSP, ISA_HAS_DSPR2): New macros.\n+\t* config/mips/mips.c (mips_set_mips16_mode): Don't clear the DSP\n+\tflags for MIPS16.\n+\t(override_options): Check TARGET_HARD_FLOAT_ABI instead of\n+\tTARGET_HARD_FLOAT when testing whether -mpaired-single is\n+\tsupported.\n+\t(mips_conditional_register_usage): Check ISA_HAS_DSP instead of\n+\tTARGET_DSP.\n+\t* config/mips/constraints.md (ka): Check ISA_HAS_DSPR2 instead of\n+\tTARGET_DSPR2.\n+\t* config/mips/mips.md (ANYF): Require TARGET_HARD_FLOAT for V2SF.\n+\t(mulv2sf3, movv2sf, movv2sf_hardfloat_64bit): Require\n+\tTARGET_HARD_FLOAT.\n+\t(<u>mulsidi3_32bit_internal, <u>msubsidi4, <u>maddsidi4): Check\n+\tISA_HAS_DSPR2 instead of TARGET_HAS_DSPR2.\n+\t* config/mips/mips-dsp.md: Use ISA_HAS_DSP instead of TARGET_HAS_DSP\n+\tthroughout.\n+\t* config/mips/mips-dspr2.md: Likewise ISA_HAS_DSPR2 and\n+\tTARGET_HAS_DSPR2.\n+\t* config/mips/mips-fixed.md: Use ISA_HAS_DSP and ISA_HAS_DSPR2\n+\tinstead of TARGET_HAS_DSP and TARGET_HAS_DSPR2.\n+\t* config/mips/mips-ps-3d.md: Add TARGET_HARD_FLOAT to V2SF patterns.\n+\n 2007-09-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/19407"}, {"sha": "53e0189ec947f4e9b4e95460c9c66765cecaa6fe", "filename": "gcc/config/mips/constraints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fconstraints.md?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -80,7 +80,7 @@\n ;; Registers that can be used as the target of multiply-accumulate\n ;; instructions.  The core MIPS32 ISA provides a hi/lo madd,\n ;; but the DSPr2 version allows any accumulator target.\n-(define_register_constraint \"ka\" \"TARGET_DSPR2 ? ACC_REGS : MD_REGS\")\n+(define_register_constraint \"ka\" \"ISA_HAS_DSPR2 ? ACC_REGS : MD_REGS\")\n \n (define_constraint \"kf\"\n   \"@internal\""}, {"sha": "5e6091a3f0abdd3e433cf95f00d99bf5235f7e90", "filename": "gcc/config/mips/mips-dsp.md", "status": "modified", "additions": 77, "deletions": 77, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips-dsp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips-dsp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-dsp.md?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,17 +7,17 @@\n    (CCDSP_EF_REGNUM\t187)])\n \n ;; This mode iterator allows si, v2hi, v4qi for all possible modes in DSP ASE.\n-(define_mode_iterator DSP [(SI \"TARGET_DSP\")\n-\t\t\t   (V2HI \"TARGET_DSP\")\n-\t\t \t   (V4QI \"TARGET_DSP\")])\n+(define_mode_iterator DSP [(SI \"ISA_HAS_DSP\")\n+\t\t\t   (V2HI \"ISA_HAS_DSP\")\n+\t\t \t   (V4QI \"ISA_HAS_DSP\")])\n \n ;; This mode iterator allows v2hi, v4qi for vector/SIMD data.\n-(define_mode_iterator DSPV [(V2HI \"TARGET_DSP\")\n-\t\t\t    (V4QI \"TARGET_DSP\")])\n+(define_mode_iterator DSPV [(V2HI \"ISA_HAS_DSP\")\n+\t\t\t    (V4QI \"ISA_HAS_DSP\")])\n \n ;; This mode iterator allows si, v2hi for Q31 and V2Q15 fixed-point data.\n-(define_mode_iterator DSPQ [(SI \"TARGET_DSP\")\n-\t\t\t    (V2HI \"TARGET_DSP\")])\n+(define_mode_iterator DSPQ [(SI \"ISA_HAS_DSP\")\n+\t\t\t    (V2HI \"ISA_HAS_DSP\")])\n \n ;; DSP instructions use q for fixed-point data, and u for integer in the infix.\n (define_mode_attr dspfmt1 [(SI \"q\") (V2HI \"q\") (V4QI \"u\")])\n@@ -68,7 +68,7 @@\n \t\t      (match_operand:DSPV 2 \"register_operand\" \"d\")))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_SUBQ))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"sub<DSPV:dspfmt1>.<DSPV:dspfmt2>\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -81,7 +81,7 @@\n \t\t      UNSPEC_SUBQ_S))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_SUBQ_S))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"sub<DSP:dspfmt1>_s.<DSP:dspfmt2>\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -95,7 +95,7 @@\n \t\t     UNSPEC_ADDSC))\n      (set (reg:CCDSP CCDSP_CA_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_ADDSC))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"addsc\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -110,7 +110,7 @@\n \t\t     UNSPEC_ADDWC))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_ADDWC))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"addwc\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -121,7 +121,7 @@\n \t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"d\")\n \t\t    (match_operand:SI 2 \"register_operand\" \"d\")]\n \t\t   UNSPEC_MODSUB))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"modsub\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -131,7 +131,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(unspec:SI [(match_operand:V4QI 1 \"register_operand\" \"d\")]\n \t\t   UNSPEC_RADDU_W_QB))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"raddu.w.qb\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -144,7 +144,7 @@\n \t\t       UNSPEC_ABSQ_S))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1)] UNSPEC_ABSQ_S))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"absq_s.<DSPQ:dspfmt2>\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -155,7 +155,7 @@\n \t(unspec:V4QI [(match_operand:V2HI 1 \"register_operand\" \"d\")\n \t\t      (match_operand:V2HI 2 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECRQ_QB_PH))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"precrq.qb.ph\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -165,7 +165,7 @@\n \t(unspec:V2HI [(match_operand:SI 1 \"register_operand\" \"d\")\n \t\t      (match_operand:SI 2 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECRQ_PH_W))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"precrq.ph.w\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -179,7 +179,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)]\n \t\t\tUNSPEC_PRECRQ_RS_PH_W))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"precrq_rs.ph.w\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -194,7 +194,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)]\n \t\t\tUNSPEC_PRECRQU_S_QB_PH))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"precrqu_s.qb.ph\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -204,7 +204,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(unspec:SI [(match_operand:V2HI 1 \"register_operand\" \"d\")]\n \t\t   UNSPEC_PRECEQ_W_PHL))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"preceq.w.phl\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -213,7 +213,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(unspec:SI [(match_operand:V2HI 1 \"register_operand\" \"d\")]\n \t\t   UNSPEC_PRECEQ_W_PHR))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"preceq.w.phr\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -223,7 +223,7 @@\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=d\")\n \t(unspec:V2HI [(match_operand:V4QI 1 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECEQU_PH_QBL))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"precequ.ph.qbl\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -232,7 +232,7 @@\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=d\")\n \t(unspec:V2HI [(match_operand:V4QI 1 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECEQU_PH_QBR))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"precequ.ph.qbr\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -241,7 +241,7 @@\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=d\")\n \t(unspec:V2HI [(match_operand:V4QI 1 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECEQU_PH_QBLA))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"precequ.ph.qbla\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -250,7 +250,7 @@\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=d\")\n \t(unspec:V2HI [(match_operand:V4QI 1 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECEQU_PH_QBRA))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"precequ.ph.qbra\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -260,7 +260,7 @@\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=d\")\n \t(unspec:V2HI [(match_operand:V4QI 1 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECEU_PH_QBL))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"preceu.ph.qbl\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -269,7 +269,7 @@\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=d\")\n \t(unspec:V2HI [(match_operand:V4QI 1 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECEU_PH_QBR))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"preceu.ph.qbr\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -278,7 +278,7 @@\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=d\")\n \t(unspec:V2HI [(match_operand:V4QI 1 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECEU_PH_QBLA))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"preceu.ph.qbla\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -287,7 +287,7 @@\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=d\")\n \t(unspec:V2HI [(match_operand:V4QI 1 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PRECEU_PH_QBRA))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"preceu.ph.qbra\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -302,7 +302,7 @@\n \t\t       UNSPEC_SHLL))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_SHLL))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n {\n   if (which_alternative == 0)\n     {\n@@ -324,7 +324,7 @@\n \t\t       UNSPEC_SHLL_S))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_SHLL_S))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n {\n   if (which_alternative == 0)\n     {\n@@ -344,7 +344,7 @@\n \t(unspec:V4QI [(match_operand:V4QI 1 \"register_operand\" \"d,d\")\n \t\t      (match_operand:SI 2 \"arith_operand\" \"I,d\")]\n \t\t     UNSPEC_SHRL_QB))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n {\n   if (which_alternative == 0)\n     {\n@@ -363,7 +363,7 @@\n \t(unspec:V2HI [(match_operand:V2HI 1 \"register_operand\" \"d,d\")\n \t\t      (match_operand:SI 2 \"arith_operand\" \"I,d\")]\n \t\t     UNSPEC_SHRA_PH))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n {\n   if (which_alternative == 0)\n     {\n@@ -381,7 +381,7 @@\n \t(unspec:DSPQ [(match_operand:DSPQ 1 \"register_operand\" \"d,d\")\n \t\t      (match_operand:SI 2 \"arith_operand\" \"I,d\")]\n \t\t     UNSPEC_SHRA_R))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n {\n   if (which_alternative == 0)\n     {\n@@ -406,7 +406,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MULEU_S_PH_QBL))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"muleu_s.ph.qbl\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -420,7 +420,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MULEU_S_PH_QBR))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"muleu_s.ph.qbr\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -435,7 +435,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MULQ_RS_PH))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"mulq_rs.ph\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -450,7 +450,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MULEQ_S_W_PHL))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"muleq_s.w.phl\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -464,7 +464,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MULEQ_S_W_PHR))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"muleq_s.w.phr\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -476,7 +476,7 @@\n \t\t    (match_operand:V4QI 2 \"register_operand\" \"d\")\n \t\t    (match_operand:V4QI 3 \"register_operand\" \"d\")]\n \t\t   UNSPEC_DPAU_H_QBL))]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpau.h.qbl\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -487,7 +487,7 @@\n \t\t    (match_operand:V4QI 2 \"register_operand\" \"d\")\n \t\t    (match_operand:V4QI 3 \"register_operand\" \"d\")]\n \t\t   UNSPEC_DPAU_H_QBR))]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpau.h.qbr\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -499,7 +499,7 @@\n \t\t    (match_operand:V4QI 2 \"register_operand\" \"d\")\n \t\t    (match_operand:V4QI 3 \"register_operand\" \"d\")]\n \t\t   UNSPEC_DPSU_H_QBL))]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpsu.h.qbl\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -510,7 +510,7 @@\n \t\t    (match_operand:V4QI 2 \"register_operand\" \"d\")\n \t\t    (match_operand:V4QI 3 \"register_operand\" \"d\")]\n \t\t   UNSPEC_DPSU_H_QBR))]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpsu.h.qbr\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -526,7 +526,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPAQ_S_W_PH))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpaq_s.w.ph\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -542,7 +542,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPSQ_S_W_PH))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpsq_s.w.ph\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -558,7 +558,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_MULSAQ_S_W_PH))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"mulsaq_s.w.ph\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -574,7 +574,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPAQ_SA_L_W))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpaq_sa.l.w\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -590,7 +590,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPSQ_SA_L_W))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpsq_sa.l.w\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -606,7 +606,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_MAQ_S_W_PHL))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"maq_s.w.phl\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -621,7 +621,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_MAQ_S_W_PHR))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"maq_s.w.phr\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -637,7 +637,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_MAQ_SA_W_PHL))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"maq_sa.w.phl\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -652,7 +652,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_MAQ_SA_W_PHR))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"maq_sa.w.phr\\t%q0,%2,%3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -663,7 +663,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"d\")]\n \t\t   UNSPEC_BITREV))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"bitrev\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -676,7 +676,7 @@\n \t\t    (reg:CCDSP CCDSP_SC_REGNUM)\n \t\t    (reg:CCDSP CCDSP_PO_REGNUM)]\n \t\t   UNSPEC_INSV))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"insv\\t%0,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -686,7 +686,7 @@\n   [(set (match_operand:V4QI 0 \"register_operand\" \"=d,d\")\n \t(unspec:V4QI [(match_operand:SI 1 \"arith_operand\" \"I,d\")]\n \t\t     UNSPEC_REPL_QB))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n {\n   if (which_alternative == 0)\n     {\n@@ -703,7 +703,7 @@\n   [(set (match_operand:V2HI 0 \"register_operand\" \"=d,d\")\n \t(unspec:V2HI [(match_operand:SI 1 \"reg_imm10_operand\" \"YB,d\")]\n \t\t     UNSPEC_REPL_PH))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"@\n    repl.ph\\t%0,%1\n    replv.ph\\t%0,%1\"\n@@ -718,7 +718,7 @@\n \t\t       (match_operand:DSPV 1 \"register_operand\" \"d\")\n \t\t       (reg:CCDSP CCDSP_CC_REGNUM)]\n \t\t      UNSPEC_CMP_EQ))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"cmp<DSPV:dspfmt1_1>.eq.<DSPV:dspfmt2>\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -729,7 +729,7 @@\n \t\t       (match_operand:DSPV 1 \"register_operand\" \"d\")\n \t\t       (reg:CCDSP CCDSP_CC_REGNUM)]\n \t\t      UNSPEC_CMP_LT))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"cmp<DSPV:dspfmt1_1>.lt.<DSPV:dspfmt2>\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -740,7 +740,7 @@\n \t\t       (match_operand:DSPV 1 \"register_operand\" \"d\")\n \t\t       (reg:CCDSP CCDSP_CC_REGNUM)]\n \t\t      UNSPEC_CMP_LE))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"cmp<DSPV:dspfmt1_1>.le.<DSPV:dspfmt2>\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -750,7 +750,7 @@\n \t(unspec:SI [(match_operand:V4QI 1 \"register_operand\" \"d\")\n \t\t    (match_operand:V4QI 2 \"register_operand\" \"d\")]\n \t\t   UNSPEC_CMPGU_EQ_QB))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"cmpgu.eq.qb\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -760,7 +760,7 @@\n \t(unspec:SI [(match_operand:V4QI 1 \"register_operand\" \"d\")\n \t\t    (match_operand:V4QI 2 \"register_operand\" \"d\")]\n \t\t   UNSPEC_CMPGU_LT_QB))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"cmpgu.lt.qb\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -770,7 +770,7 @@\n \t(unspec:SI [(match_operand:V4QI 1 \"register_operand\" \"d\")\n \t\t    (match_operand:V4QI 2 \"register_operand\" \"d\")]\n \t\t   UNSPEC_CMPGU_LE_QB))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"cmpgu.le.qb\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -782,7 +782,7 @@\n \t\t      (match_operand:DSPV 2 \"register_operand\" \"d\")\n \t\t      (reg:CCDSP CCDSP_CC_REGNUM)]\n \t\t     UNSPEC_PICK))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"pick.<DSPV:dspfmt2>\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -793,7 +793,7 @@\n \t(unspec:V2HI [(match_operand:V2HI 1 \"register_operand\" \"d\")\n \t\t      (match_operand:V2HI 2 \"register_operand\" \"d\")]\n \t\t     UNSPEC_PACKRL_PH))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"packrl.ph\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -808,7 +808,7 @@\n \t\t     UNSPEC_EXTR_W))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_EXTR_W))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n {\n   if (which_alternative == 0)\n     {\n@@ -829,7 +829,7 @@\n \t\t     UNSPEC_EXTR_R_W))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_EXTR_R_W))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n {\n   if (which_alternative == 0)\n     {\n@@ -850,7 +850,7 @@\n \t\t     UNSPEC_EXTR_RS_W))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_EXTR_RS_W))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n {\n   if (which_alternative == 0)\n     {\n@@ -872,7 +872,7 @@\n \t\t     UNSPEC_EXTR_S_H))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_EXTR_S_H))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n {\n   if (which_alternative == 0)\n     {\n@@ -895,7 +895,7 @@\n \t\t     UNSPEC_EXTP))\n      (set (reg:CCDSP CCDSP_EF_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_EXTP))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n {\n   if (which_alternative == 0)\n     {\n@@ -920,7 +920,7 @@\n \t\t\t (reg:CCDSP CCDSP_PO_REGNUM)] UNSPEC_EXTPDP))\n      (set (reg:CCDSP CCDSP_EF_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_EXTPDP))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n {\n   if (which_alternative == 0)\n     {\n@@ -939,7 +939,7 @@\n \t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"0,0\")\n \t\t    (match_operand:SI 2 \"arith_operand\" \"I,d\")]\n \t\t   UNSPEC_SHILO))]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n {\n   if (which_alternative == 0)\n     {\n@@ -963,7 +963,7 @@\n      (set (reg:CCDSP CCDSP_PO_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)\n \t\t\t (reg:CCDSP CCDSP_PO_REGNUM)] UNSPEC_MTHLIP))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"mthlip\\t%2,%q0\"\n   [(set_attr \"type\"\t\"mfhilo\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -985,7 +985,7 @@\n \t  (unspec:CCDSP [(match_dup 0) (match_dup 1)] UNSPEC_WRDSP))\n      (set (reg:CCDSP CCDSP_EF_REGNUM)\n \t  (unspec:CCDSP [(match_dup 0) (match_dup 1)] UNSPEC_WRDSP))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"wrdsp\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -1001,7 +1001,7 @@\n \t\t    (reg:CCDSP CCDSP_CC_REGNUM)\n \t\t    (reg:CCDSP CCDSP_EF_REGNUM)]\n \t\t   UNSPEC_RDDSP))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"rddsp\\t%0,%1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -1014,7 +1014,7 @@\n \t\t\t\t\t  \"register_operand\" \"d\")\n \t\t\t\t\t (match_operand:SI 2\n \t\t\t\t\t  \"register_operand\" \"d\")))))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"lbux\\t%0,%2(%1)\"\n   [(set_attr \"type\"\t\"load\")\n    (set_attr \"mode\"\t\"SI\")\n@@ -1026,7 +1026,7 @@\n \t\t\t\t\t  \"register_operand\" \"d\")\n \t\t\t\t\t (match_operand:SI 2\n \t\t\t\t\t  \"register_operand\" \"d\")))))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"lhx\\t%0,%2(%1)\"\n   [(set_attr \"type\"\t\"load\")\n    (set_attr \"mode\"\t\"SI\")\n@@ -1036,7 +1036,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(mem:SI (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n \t\t\t (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"lwx\\t%0,%2(%1)\"\n   [(set_attr \"type\"\t\"load\")\n    (set_attr \"mode\"\t\"SI\")\n@@ -1050,7 +1050,7 @@\n \t\t\t  (match_operand:SI 0 \"immediate_operand\" \"I\"))\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"%*bposge%0\\t%1%/\"\n   [(set_attr \"type\"\t\"branch\")\n    (set_attr \"mode\"\t\"none\")])"}, {"sha": "3cde900b69bdd28767e2660079f86773b159afa5", "filename": "gcc/config/mips/mips-dspr2.md", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips-dspr2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips-dspr2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-dspr2.md?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,7 +7,7 @@\n \t\t       UNSPEC_ABSQ_S_QB))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1)] UNSPEC_ABSQ_S_QB))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"absq_s.qb\\t%0,%z1\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -19,7 +19,7 @@\n \t\t     (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_ADDU_PH))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"addu.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -32,7 +32,7 @@\n \t\t       UNSPEC_ADDU_S_PH))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_ADDU_S_PH))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"addu_s.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -42,7 +42,7 @@\n \t(unspec:V4QI [(match_operand:V4QI 1 \"reg_or_0_operand\" \"dYG\")\n \t\t      (match_operand:V4QI 2 \"reg_or_0_operand\" \"dYG\")]\n \t\t     UNSPEC_ADDUH_QB))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"adduh.qb\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -52,7 +52,7 @@\n \t(unspec:V4QI [(match_operand:V4QI 1 \"reg_or_0_operand\" \"dYG\")\n \t\t      (match_operand:V4QI 2 \"reg_or_0_operand\" \"dYG\")]\n \t\t     UNSPEC_ADDUH_R_QB))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"adduh_r.qb\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -63,7 +63,7 @@\n \t\t    (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")\n \t\t    (match_operand:SI 3 \"const_int_operand\" \"n\")]\n \t\t   UNSPEC_APPEND))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n {\n   if (INTVAL (operands[3]) & ~(unsigned HOST_WIDE_INT) 31)\n     operands[2] = GEN_INT (INTVAL (operands[2]) & 31);\n@@ -78,7 +78,7 @@\n \t\t    (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")\n \t\t    (match_operand:SI 3 \"const_int_operand\" \"n\")]\n \t\t   UNSPEC_BALIGN))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n {\n   if (INTVAL (operands[3]) & ~(unsigned HOST_WIDE_INT) 3)\n     operands[2] = GEN_INT (INTVAL (operands[2]) & 3);\n@@ -97,7 +97,7 @@\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)\n \t\t\t (reg:CCDSP CCDSP_CC_REGNUM)]\n \t\t\tUNSPEC_CMPGDU_EQ_QB))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"cmpgdu.eq.qb\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -112,7 +112,7 @@\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)\n \t\t\t (reg:CCDSP CCDSP_CC_REGNUM)]\n \t\t\tUNSPEC_CMPGDU_LT_QB))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"cmpgdu.lt.qb\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -127,7 +127,7 @@\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)\n \t\t\t (reg:CCDSP CCDSP_CC_REGNUM)]\n \t\t\tUNSPEC_CMPGDU_LE_QB))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"cmpgdu.le.qb\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -138,7 +138,7 @@\n \t\t    (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")\n \t\t    (match_operand:V2HI 3 \"reg_or_0_operand\" \"dYG\")]\n \t\t   UNSPEC_DPA_W_PH))]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"dpa.w.ph\\t%q0,%z2,%z3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -149,7 +149,7 @@\n \t\t    (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")\n \t\t    (match_operand:V2HI 3 \"reg_or_0_operand\" \"dYG\")]\n \t\t   UNSPEC_DPS_W_PH))]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"dps.w.ph\\t%q0,%z2,%z3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -160,15 +160,15 @@\n \t (mult:DI (any_extend:DI (match_operand:SI 2 \"register_operand\"))\n \t\t  (any_extend:DI (match_operand:SI 3 \"register_operand\")))\n \t (match_operand:DI 1 \"register_operand\")))]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\")\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\")\n \n (define_expand \"mips_msub<u>\"\n   [(set (match_operand:DI 0 \"register_operand\")\n \t(minus:DI\n \t (match_operand:DI 1 \"register_operand\")\n \t (mult:DI (any_extend:DI (match_operand:SI 2 \"register_operand\"))\n \t\t  (any_extend:DI (match_operand:SI 3 \"register_operand\")))))]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\")\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\")\n \n (define_insn \"mulv2hi3\"\n   [(parallel\n@@ -178,7 +178,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MUL_PH))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"mul.ph\\t%0,%1,%2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -192,7 +192,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MUL_S_PH))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"mul_s.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -206,7 +206,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MULQ_RS_W))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"mulq_rs.w\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -220,7 +220,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MULQ_S_PH))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"mulq_s.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -234,7 +234,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_MULQ_S_W))\n      (clobber (match_scratch:DI 3 \"=x\"))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"mulq_s.w\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"imul3\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -245,7 +245,7 @@\n \t\t    (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")\n \t\t    (match_operand:V2HI 3 \"reg_or_0_operand\" \"dYG\")]\n \t\t   UNSPEC_MULSA_W_PH))]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"mulsa.w.ph\\t%q0,%z2,%z3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -255,7 +255,7 @@\n \t(mult:DI\n \t (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n \t (sign_extend:DI (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"mult\\t%q0,%1,%2\"\n   [(set_attr \"type\"\t\"imul\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -265,7 +265,7 @@\n \t(mult:DI\n \t (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n \t (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"multu\\t%q0,%1,%2\"\n   [(set_attr \"type\"\t\"imul\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -275,7 +275,7 @@\n \t(unspec:V4QI [(match_operand:V2HI 1 \"reg_or_0_operand\" \"dYG\")\n \t\t      (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")]\n \t\t     UNSPEC_PRECR_QB_PH))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"precr.qb.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -286,7 +286,7 @@\n \t\t      (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")\n \t\t      (match_operand:SI 3 \"const_int_operand\" \"n\")]\n \t\t     UNSPEC_PRECR_SRA_PH_W))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n {\n   if (INTVAL (operands[3]) & ~(unsigned HOST_WIDE_INT) 31)\n     operands[2] = GEN_INT (INTVAL (operands[2]) & 31);\n@@ -301,7 +301,7 @@\n \t\t      (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")\n \t\t      (match_operand:SI 3 \"const_int_operand\" \"n\")]\n \t\t     UNSPEC_PRECR_SRA_R_PH_W))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n {\n   if (INTVAL (operands[3]) & ~(unsigned HOST_WIDE_INT) 31)\n     operands[2] = GEN_INT (INTVAL (operands[2]) & 31);\n@@ -316,7 +316,7 @@\n \t\t    (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")\n \t\t    (match_operand:SI 3 \"const_int_operand\" \"n\")]\n \t\t   UNSPEC_PREPEND))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n {\n   if (INTVAL (operands[3]) & ~(unsigned HOST_WIDE_INT) 31)\n     operands[2] = GEN_INT (INTVAL (operands[2]) & 31);\n@@ -330,7 +330,7 @@\n \t(unspec:V4QI [(match_operand:V4QI 1 \"reg_or_0_operand\" \"dYG,dYG\")\n \t\t      (match_operand:SI 2 \"arith_operand\" \"I,d\")]\n \t\t     UNSPEC_SHRA_QB))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n {\n   if (which_alternative == 0)\n     {\n@@ -349,7 +349,7 @@\n \t(unspec:V4QI [(match_operand:V4QI 1 \"reg_or_0_operand\" \"dYG,dYG\")\n \t\t      (match_operand:SI 2 \"arith_operand\" \"I,d\")]\n \t\t     UNSPEC_SHRA_R_QB))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n {\n   if (which_alternative == 0)\n     {\n@@ -367,7 +367,7 @@\n \t(unspec:V2HI [(match_operand:V2HI 1 \"reg_or_0_operand\" \"dYG,dYG\")\n \t\t      (match_operand:SI 2 \"arith_operand\" \"I,d\")]\n \t\t     UNSPEC_SHRL_PH))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n {\n   if (which_alternative == 0)\n     {\n@@ -388,7 +388,7 @@\n \t\t       UNSPEC_SUBU_PH))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_SUBU_PH))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"subu.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -401,7 +401,7 @@\n \t\t       UNSPEC_SUBU_S_PH))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_SUBU_S_PH))])]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"subu_s.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -411,7 +411,7 @@\n \t(unspec:V4QI [(match_operand:V4QI 1 \"reg_or_0_operand\" \"dYG\")\n \t\t      (match_operand:V4QI 2 \"reg_or_0_operand\" \"dYG\")]\n \t\t     UNSPEC_SUBUH_QB))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"subuh.qb\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -421,7 +421,7 @@\n \t(unspec:V4QI [(match_operand:V4QI 1 \"reg_or_0_operand\" \"dYG\")\n \t\t      (match_operand:V4QI 2 \"reg_or_0_operand\" \"dYG\")]\n \t\t     UNSPEC_SUBUH_R_QB))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"subuh_r.qb\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -431,7 +431,7 @@\n \t(unspec:V2HI [(match_operand:V2HI 1 \"reg_or_0_operand\" \"dYG\")\n \t\t      (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")]\n \t\t     UNSPEC_ADDQH_PH))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"addqh.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -441,7 +441,7 @@\n \t(unspec:V2HI [(match_operand:V2HI 1 \"reg_or_0_operand\" \"dYG\")\n \t\t      (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")]\n \t\t     UNSPEC_ADDQH_R_PH))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"addqh_r.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -451,7 +451,7 @@\n \t(unspec:SI [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ\")\n \t\t    (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")]\n \t\t   UNSPEC_ADDQH_W))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"addqh.w\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -461,7 +461,7 @@\n \t(unspec:SI [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ\")\n \t\t    (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")]\n \t\t   UNSPEC_ADDQH_R_W))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"addqh_r.w\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -471,7 +471,7 @@\n \t(unspec:V2HI [(match_operand:V2HI 1 \"reg_or_0_operand\" \"dYG\")\n \t\t      (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")]\n \t\t     UNSPEC_SUBQH_PH))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"subqh.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -481,7 +481,7 @@\n \t(unspec:V2HI [(match_operand:V2HI 1 \"reg_or_0_operand\" \"dYG\")\n \t\t      (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")]\n \t\t     UNSPEC_SUBQH_R_PH))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"subqh_r.ph\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -491,7 +491,7 @@\n \t(unspec:SI [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ\")\n \t\t    (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")]\n \t\t   UNSPEC_SUBQH_W))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"subqh.w\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -501,7 +501,7 @@\n \t(unspec:SI [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ\")\n \t\t    (match_operand:SI 2 \"reg_or_0_operand\" \"dJ\")]\n \t\t   UNSPEC_SUBQH_R_W))]\n-  \"TARGET_DSPR2\"\n+  \"ISA_HAS_DSPR2\"\n   \"subqh_r.w\\t%0,%z1,%z2\"\n   [(set_attr \"type\"\t\"arith\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -512,7 +512,7 @@\n \t\t    (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")\n \t\t    (match_operand:V2HI 3 \"reg_or_0_operand\" \"dYG\")]\n \t\t   UNSPEC_DPAX_W_PH))]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"dpax.w.ph\\t%q0,%z2,%z3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -523,7 +523,7 @@\n \t\t    (match_operand:V2HI 2 \"reg_or_0_operand\" \"dYG\")\n \t\t    (match_operand:V2HI 3 \"reg_or_0_operand\" \"dYG\")]\n \t\t   UNSPEC_DPSX_W_PH))]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"dpsx.w.ph\\t%q0,%z2,%z3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -538,7 +538,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPAQX_S_W_PH))])]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"dpaqx_s.w.ph\\t%q0,%z2,%z3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -553,7 +553,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPAQX_SA_W_PH))])]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"dpaqx_sa.w.ph\\t%q0,%z2,%z3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -568,7 +568,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPSQX_S_W_PH))])]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"dpsqx_s.w.ph\\t%q0,%z2,%z3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -583,7 +583,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPSQX_SA_W_PH))])]\n-  \"TARGET_DSPR2 && !TARGET_64BIT\"\n+  \"ISA_HAS_DSPR2 && !TARGET_64BIT\"\n   \"dpsqx_sa.w.ph\\t%q0,%z2,%z3\"\n   [(set_attr \"type\"\t\"imadd\")\n    (set_attr \"mode\"\t\"SI\")])"}, {"sha": "758df26c7a63cea51803f293a4135ed1b46dbcf1", "filename": "gcc/config/mips/mips-fixed.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips-fixed.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips-fixed.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-fixed.md?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -13,15 +13,15 @@\n \t\t\t     (V2HQ \"ph\") (V2HA \"ph\")])\n \n ;; For unsigned add/sub with saturation\n-(define_mode_iterator UADDSUB [(UQQ \"TARGET_DSP\") (UHQ \"TARGET_DSPR2\")\n-\t\t\t       (UHA \"TARGET_DSPR2\") (V4UQQ \"TARGET_DSP\")\n-\t\t\t       (V2UHQ \"TARGET_DSPR2\") (V2UHA \"TARGET_DSPR2\")])\n+(define_mode_iterator UADDSUB [(UQQ \"ISA_HAS_DSP\") (UHQ \"ISA_HAS_DSPR2\")\n+\t\t\t       (UHA \"ISA_HAS_DSPR2\") (V4UQQ \"ISA_HAS_DSP\")\n+\t\t\t       (V2UHQ \"ISA_HAS_DSPR2\") (V2UHA \"ISA_HAS_DSPR2\")])\n (define_mode_attr uaddsubfmt [(UQQ \"qb\") (UHQ \"ph\") (UHA \"ph\")\n \t\t\t      (V4UQQ \"qb\") (V2UHQ \"ph\") (V2UHA \"ph\")])\n \n ;; For signed multiplication with saturation\n-(define_mode_iterator MULQ [(V2HQ \"TARGET_DSP\") (HQ \"TARGET_DSP\")\n-\t\t\t    (SQ \"TARGET_DSPR2\")])\n+(define_mode_iterator MULQ [(V2HQ \"ISA_HAS_DSP\") (HQ \"ISA_HAS_DSP\")\n+\t\t\t    (SQ \"ISA_HAS_DSPR2\")])\n (define_mode_attr mulqfmt [(V2HQ \"ph\") (HQ \"ph\") (SQ \"w\")])\n \n (define_insn \"add<mode>3\"\n@@ -52,7 +52,7 @@\n \t\t\t  (match_operand:ADDSUB 2 \"register_operand\" \"d\")))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_ADDQ_S))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"addq_s.<addsubfmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"<IMODE>\")])\n@@ -85,7 +85,7 @@\n \t\t\t   (match_operand:ADDSUB 2 \"register_operand\" \"d\")))\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2)] UNSPEC_SUBQ_S))])]\n-  \"TARGET_DSP\"\n+  \"ISA_HAS_DSP\"\n   \"subq_s.<addsubfmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"arith\")\n    (set_attr \"mode\" \"<IMODE>\")])\n@@ -115,7 +115,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPAQ_SA_L_W))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpaq_sa.l.w\\t%q0,%1,%2\"\n   [(set_attr \"type\" \"imadd\")\n    (set_attr \"mode\" \"SI\")])\n@@ -132,7 +132,7 @@\n      (set (reg:CCDSP CCDSP_OU_REGNUM)\n \t  (unspec:CCDSP [(match_dup 1) (match_dup 2) (match_dup 3)]\n \t\t\tUNSPEC_DPSQ_SA_L_W))])]\n-  \"TARGET_DSP && !TARGET_64BIT\"\n+  \"ISA_HAS_DSP && !TARGET_64BIT\"\n   \"dpsq_sa.l.w\\t%q0,%1,%2\"\n   [(set_attr \"type\" \"imadd\")\n    (set_attr \"mode\" \"SI\")])"}, {"sha": "63ec16b3de5e85b7e5bfb76e3078b642ed53701e", "filename": "gcc/config/mips/mips-ps-3d.md", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips-ps-3d.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips-ps-3d.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-ps-3d.md?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -25,7 +25,7 @@\n \t\t\t  (const_int 0)])\n \t (match_operand:V2SF 2 \"register_operand\" \"f,0\")\n \t (match_operand:V2SF 3 \"register_operand\" \"0,f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"@\n     mov%T4.ps\\t%0,%2,%1\n     mov%t4.ps\\t%0,%3,%1\"\n@@ -38,7 +38,7 @@\n \t\t      (match_operand:V2SF 2 \"register_operand\" \"0,f\")\n \t\t      (match_operand:CCV2 3 \"register_operand\" \"z,z\")]\n \t\t     UNSPEC_MOVE_TF_PS))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"@\n     movt.ps\\t%0,%1,%3\n     movf.ps\\t%0,%2,%3\"\n@@ -51,7 +51,7 @@\n \t(if_then_else:V2SF (match_dup 5)\n \t\t\t   (match_operand:V2SF 2 \"register_operand\")\n \t\t\t   (match_operand:V2SF 3 \"register_operand\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   /* We can only support MOVN.PS and MOVZ.PS.\n      NOTE: MOVT.PS and MOVF.PS have different semantics from MOVN.PS and \n@@ -72,7 +72,7 @@\n \t (match_operand:V2SF 1 \"register_operand\" \"f\")\n \t (match_operand:V2SF 2 \"register_operand\" \"f\")\n \t (const_int 2)))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"pul.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmove\")\n    (set_attr \"mode\" \"SF\")])\n@@ -86,7 +86,7 @@\n \t\t\t  (parallel [(const_int 1)\n \t\t\t\t     (const_int 0)]))\n \t (const_int 2)))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"puu.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmove\")\n    (set_attr \"mode\" \"SF\")])\n@@ -100,7 +100,7 @@\n \t\t\t\t     (const_int 0)]))\n \t (match_operand:V2SF 2 \"register_operand\" \"f\")\n \t (const_int 2)))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"pll.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmove\")\n    (set_attr \"mode\" \"SF\")])\n@@ -116,7 +116,7 @@\n \t\t\t  (parallel [(const_int 1)\n \t\t\t\t     (const_int 0)]))\n \t (const_int 2)))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"plu.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmove\")\n    (set_attr \"mode\" \"SF\")])\n@@ -125,7 +125,7 @@\n (define_expand \"vec_initv2sf\"\n   [(match_operand:V2SF 0 \"register_operand\")\n    (match_operand:V2SF 1 \"\")]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   rtx op0 = force_reg (SFmode, XVECEXP (operands[1], 0, 0));\n   rtx op1 = force_reg (SFmode, XVECEXP (operands[1], 0, 1));\n@@ -138,7 +138,7 @@\n \t(vec_concat:V2SF\n \t (match_operand:SF 1 \"register_operand\" \"f\")\n \t (match_operand:SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   if (BYTES_BIG_ENDIAN)\n     return \"cvt.ps.s\\t%0,%1,%2\";\n@@ -157,7 +157,7 @@\n \t(vec_select:SF (match_operand:V2SF 1 \"register_operand\" \"f\")\n \t\t       (parallel\n \t\t\t[(match_operand 2 \"const_0_or_1_operand\" \"\")])))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   if (INTVAL (operands[2]) == !BYTES_BIG_ENDIAN)\n     return \"cvt.s.pu\\t%0,%1\";\n@@ -174,7 +174,7 @@\n   [(match_operand:V2SF 0 \"register_operand\")\n    (match_operand:SF 1 \"register_operand\")\n    (match_operand 2 \"const_0_or_1_operand\")]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   rtx temp;\n \n@@ -194,7 +194,7 @@\n   [(match_operand:V2SF 0 \"register_operand\")\n    (match_operand:SF 1 \"register_operand\")\n    (match_operand:SF 2 \"register_operand\")]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   if (BYTES_BIG_ENDIAN)\n     emit_insn (gen_vec_initv2sf_internal (operands[0], operands[1],\n@@ -210,15 +210,15 @@\n   [(set (match_operand:SF 0 \"register_operand\")\n \t(vec_select:SF (match_operand:V2SF 1 \"register_operand\")\n \t\t       (parallel [(match_dup 2)])))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   { operands[2] = GEN_INT (BYTES_BIG_ENDIAN); })\n \n ; cvt.s.pu - Floating Point Convert Pair Upper to Single Floating Point\n (define_expand \"mips_cvt_s_pu\"\n   [(set (match_operand:SF 0 \"register_operand\")\n \t(vec_select:SF (match_operand:V2SF 1 \"register_operand\")\n \t\t       (parallel [(match_dup 2)])))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   { operands[2] = GEN_INT (!BYTES_BIG_ENDIAN); })\n \n ; alnv.ps - Floating Point Align Variable\n@@ -228,7 +228,7 @@\n \t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n \t\t      (match_operand:SI 3 \"register_operand\" \"d\")]\n \t\t     UNSPEC_ALNV_PS))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"alnv.ps\\t%0,%1,%2,%3\"\n   [(set_attr \"type\" \"fmove\")\n    (set_attr \"mode\" \"SF\")])\n@@ -239,7 +239,7 @@\n \t(unspec:V2SF [(match_operand:V2SF 1 \"register_operand\" \"f\")\n \t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")]\n \t\t     UNSPEC_ADDR_PS))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"addr.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"mode\" \"SF\")])\n@@ -249,7 +249,7 @@\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n \t(unspec:V2SF [(match_operand:V2SF 1 \"register_operand\" \"f\")]\n \t\t     UNSPEC_CVT_PW_PS))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"cvt.pw.ps\\t%0,%1\"\n   [(set_attr \"type\" \"fcvt\")\n    (set_attr \"mode\" \"SF\")])\n@@ -259,7 +259,7 @@\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n \t(unspec:V2SF [(match_operand:V2SF 1 \"register_operand\" \"f\")]\n \t\t     UNSPEC_CVT_PS_PW))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"cvt.ps.pw\\t%0,%1\"\n   [(set_attr \"type\" \"fcvt\")\n    (set_attr \"mode\" \"SF\")])\n@@ -270,7 +270,7 @@\n \t(unspec:V2SF [(match_operand:V2SF 1 \"register_operand\" \"f\")\n \t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")]\n \t\t     UNSPEC_MULR_PS))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"mulr.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmul\")\n    (set_attr \"mode\" \"SF\")])\n@@ -280,7 +280,7 @@\n   [(set (match_operand:V2SF 0 \"register_operand\")\n \t(unspec:V2SF [(match_operand:V2SF 1 \"register_operand\")]\n \t\t     UNSPEC_ABS_PS))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   /* If we can ignore NaNs, this operation is equivalent to the\n      rtl ABS code.  */\n@@ -295,7 +295,7 @@\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n \t(unspec:V2SF [(match_operand:V2SF 1 \"register_operand\" \"f\")]\n \t\t     UNSPEC_ABS_PS))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"abs.ps\\t%0,%1\"\n   [(set_attr \"type\" \"fabs\")\n    (set_attr \"mode\" \"SF\")])\n@@ -310,7 +310,7 @@\n \t\t    (match_operand:SCALARF 2 \"register_operand\" \"f\")\n \t\t    (match_operand 3 \"const_int_operand\" \"\")]\n \t\t   UNSPEC_CABS))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"cabs.%Y3.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n@@ -328,7 +328,7 @@\n \t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")\n \t\t      (match_operand 5 \"const_int_operand\" \"\")]\n \t\t     UNSPEC_C))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 6)\n@@ -357,7 +357,7 @@\n \t\t      (match_operand:V2SF 4 \"register_operand\" \"f\")\n \t\t      (match_operand 5 \"const_int_operand\" \"\")]\n \t\t     UNSPEC_CABS))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 6)\n@@ -389,7 +389,7 @@\n \t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n \t\t      (match_operand 3 \"const_int_operand\" \"\")]\n \t\t     UNSPEC_C))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"c.%Y3.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n@@ -400,7 +400,7 @@\n \t\t      (match_operand:V2SF 2 \"register_operand\" \"f\")\n \t\t      (match_operand 3 \"const_int_operand\" \"\")]\n \t\t     UNSPEC_CABS))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"cabs.%Y3.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n@@ -416,7 +416,7 @@\n \t   [(fcond (match_operand:V2SF 1 \"register_operand\" \"f\")\n \t\t   (match_operand:V2SF 2 \"register_operand\" \"f\"))]\n \t   UNSPEC_SCC))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"c.<fcond>.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n@@ -427,7 +427,7 @@\n \t   [(swapped_fcond (match_operand:V2SF 1 \"register_operand\" \"f\")\n \t\t\t   (match_operand:V2SF 2 \"register_operand\" \"f\"))]\n \t   UNSPEC_SCC))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"c.<swapped_fcond>.ps\\t%0,%2,%1\"\n   [(set_attr \"type\" \"fcmp\")\n    (set_attr \"mode\" \"FPSW\")])\n@@ -443,7 +443,7 @@\n \t\t\t  (const_int 0))\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"%*bc1any4t\\t%0,%1%/\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"none\")])\n@@ -455,7 +455,7 @@\n \t\t\t  (const_int -1))\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"%*bc1any4f\\t%0,%1%/\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"none\")])\n@@ -467,7 +467,7 @@\n \t\t\t  (const_int 0))\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"%*bc1any2t\\t%0,%1%/\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"none\")])\n@@ -479,7 +479,7 @@\n \t\t\t  (const_int -1))\n \t\t      (label_ref (match_operand 1 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"%*bc1any2f\\t%0,%1%/\"\n   [(set_attr \"type\" \"branch\")\n    (set_attr \"mode\" \"none\")])\n@@ -545,7 +545,7 @@\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(unspec:ANYF [(match_operand:ANYF 1 \"register_operand\" \"f\")]\n \t\t     UNSPEC_RSQRT1))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"rsqrt1.<fmt>\\t%0,%1\"\n   [(set_attr \"type\" \"frsqrt1\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n@@ -555,7 +555,7 @@\n \t(unspec:ANYF [(match_operand:ANYF 1 \"register_operand\" \"f\")\n \t\t      (match_operand:ANYF 2 \"register_operand\" \"f\")]\n \t\t     UNSPEC_RSQRT2))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"rsqrt2.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"frsqrt2\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n@@ -564,7 +564,7 @@\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(unspec:ANYF [(match_operand:ANYF 1 \"register_operand\" \"f\")]\n \t\t     UNSPEC_RECIP1))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"recip1.<fmt>\\t%0,%1\"\n   [(set_attr \"type\" \"frdiv1\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n@@ -574,7 +574,7 @@\n \t(unspec:ANYF [(match_operand:ANYF 1 \"register_operand\" \"f\")\n \t\t      (match_operand:ANYF 2 \"register_operand\" \"f\")]\n \t\t     UNSPEC_RECIP2))]\n-  \"TARGET_MIPS3D\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"recip2.<fmt>\\t%0,%1,%2\"\n   [(set_attr \"type\" \"frdiv2\")\n    (set_attr \"mode\" \"<UNITMODE>\")])\n@@ -587,7 +587,7 @@\n \t     (match_operand:V2SF 5 \"register_operand\")])\n \t  (match_operand:V2SF 1 \"register_operand\")\n \t  (match_operand:V2SF 2 \"register_operand\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   mips_expand_vcondv2sf (operands[0], operands[1], operands[2],\n \t\t\t GET_CODE (operands[3]), operands[4], operands[5]);\n@@ -598,7 +598,7 @@\n   [(set (match_operand:V2SF 0 \"register_operand\")\n \t(smin:V2SF (match_operand:V2SF 1 \"register_operand\")\n \t\t   (match_operand:V2SF 2 \"register_operand\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   mips_expand_vcondv2sf (operands[0], operands[1], operands[2],\n \t\t\t LE, operands[1], operands[2]);\n@@ -609,7 +609,7 @@\n   [(set (match_operand:V2SF 0 \"register_operand\")\n \t(smax:V2SF (match_operand:V2SF 1 \"register_operand\")\n \t\t   (match_operand:V2SF 2 \"register_operand\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   mips_expand_vcondv2sf (operands[0], operands[1], operands[2],\n \t\t\t LE, operands[2], operands[1]);"}, {"sha": "1d72056b2491a7f20895bcff2fa28a076bfbd9bf", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5696,10 +5696,6 @@ mips_set_mips16_mode (int mips16_p)\n \t we use a %gprel() operator.  */\n       target_flags &= ~MASK_EXPLICIT_RELOCS;\n \n-      /* Silently disable DSP extensions.  */\n-      target_flags &= ~MASK_DSP;\n-      target_flags &= ~MASK_DSPR2;\n-\n       /* Experiments suggest we get the best overall results from using\n \t the range of an unextended lw or sw.  Code that makes heavy use\n \t of byte or short accesses can do better with ranges of 0...31\n@@ -6151,8 +6147,8 @@ override_options (void)\n     target_flags |= MASK_PAIRED_SINGLE_FLOAT;\n \n   /* Make sure that when TARGET_PAIRED_SINGLE_FLOAT is true, TARGET_FLOAT64\n-     and TARGET_HARD_FLOAT are both true.  */\n-  if (TARGET_PAIRED_SINGLE_FLOAT && !(TARGET_FLOAT64 && TARGET_HARD_FLOAT))\n+     and TARGET_HARD_FLOAT_ABI are both true.  */\n+  if (TARGET_PAIRED_SINGLE_FLOAT && !(TARGET_FLOAT64 && TARGET_HARD_FLOAT_ABI))\n     error (\"-mips3d/-mpaired-single must be used with -mfp64 -mhard-float\");\n \n   /* Make sure that the ISA supports TARGET_PAIRED_SINGLE_FLOAT when it is\n@@ -6351,7 +6347,7 @@ mips_swap_registers (unsigned int i)\n void\n mips_conditional_register_usage (void)\n {\n-  if (!TARGET_DSP)\n+  if (!ISA_HAS_DSP)\n     {\n       int regno;\n "}, {"sha": "169779ce1ee22d838a4f296bb61b421e5784c8eb", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -879,6 +879,12 @@ extern enum mips_llsc_setting mips_llsc;\n /* ISA has lwxs instruction (load w/scaled index address.  */\n #define ISA_HAS_LWXS\t\t(TARGET_SMARTMIPS && !TARGET_MIPS16)\n \n+/* The DSP ASE is available.  */\n+#define ISA_HAS_DSP\t\t(TARGET_DSP && !TARGET_MIPS16)\n+\n+/* Revision 2 of the DSP ASE is available.  */\n+#define ISA_HAS_DSPR2\t\t(TARGET_DSPR2 && !TARGET_MIPS16)\n+\n /* True if the result of a load is not available to the next instruction.\n    A nop will then be needed between instructions like \"lw $4,...\"\n    and \"addiu $4,$4,1\".  */"}, {"sha": "92d5ab269f39766a58219117b5cdc9807b893667", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -492,7 +492,7 @@\n ;; floating-point mode is allowed.\n (define_mode_iterator ANYF [(SF \"TARGET_HARD_FLOAT\")\n \t\t\t    (DF \"TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\")\n-\t\t\t    (V2SF \"TARGET_PAIRED_SINGLE_FLOAT\")])\n+\t\t\t    (V2SF \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\")])\n \n ;; Like ANYF, but only applies to scalar modes.\n (define_mode_iterator SCALARF [(SF \"TARGET_HARD_FLOAT\")\n@@ -1035,7 +1035,7 @@\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=f\")\n \t(mult:V2SF (match_operand:V2SF 1 \"register_operand\" \"f\")\n \t\t   (match_operand:V2SF 2 \"register_operand\" \"f\")))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n   \"mul.ps\\t%0,%1,%2\"\n   [(set_attr \"type\" \"fmul\")\n    (set_attr \"mode\" \"SF\")])\n@@ -1581,7 +1581,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=x\")\n \t(mult:DI (any_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n \t\t (any_extend:DI (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"!TARGET_64BIT && !TARGET_FIX_R4000 && !TARGET_DSPR2\"\n+  \"!TARGET_64BIT && !TARGET_FIX_R4000 && !ISA_HAS_DSPR2\"\n   \"mult<u>\\t%1,%2\"\n   [(set_attr \"type\" \"imul\")\n    (set_attr \"mode\" \"SI\")])\n@@ -1678,9 +1678,9 @@\n \t   (mult:DI\n \t      (any_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n \t      (any_extend:DI (match_operand:SI 2 \"register_operand\" \"d\")))))]\n-  \"!TARGET_64BIT && (ISA_HAS_MSAC || GENERATE_MADD_MSUB || TARGET_DSPR2)\"\n+  \"!TARGET_64BIT && (ISA_HAS_MSAC || GENERATE_MADD_MSUB || ISA_HAS_DSPR2)\"\n {\n-  if (TARGET_DSPR2)\n+  if (ISA_HAS_DSPR2)\n     return \"msub<u>\\t%q0,%1,%2\";\n   else if (TARGET_MIPS5500 || GENERATE_MADD_MSUB)\n     return \"msub<u>\\t%1,%2\";\n@@ -1797,12 +1797,12 @@\n \t (mult:DI (any_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n \t\t  (any_extend:DI (match_operand:SI 2 \"register_operand\" \"d\")))\n \t (match_operand:DI 3 \"register_operand\" \"0\")))]\n-  \"(TARGET_MAD || ISA_HAS_MACC || GENERATE_MADD_MSUB || TARGET_DSPR2)\n+  \"(TARGET_MAD || ISA_HAS_MACC || GENERATE_MADD_MSUB || ISA_HAS_DSPR2)\n    && !TARGET_64BIT\"\n {\n   if (TARGET_MAD)\n     return \"mad<u>\\t%1,%2\";\n-  else if (TARGET_DSPR2)\n+  else if (ISA_HAS_DSPR2)\n     return \"madd<u>\\t%q0,%1,%2\";\n   else if (GENERATE_MADD_MSUB || TARGET_MIPS5500)\n     return \"madd<u>\\t%1,%2\";\n@@ -4043,7 +4043,7 @@\n (define_expand \"movv2sf\"\n   [(set (match_operand:V2SF 0)\n \t(match_operand:V2SF 1))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\"\n+  \"TARGET_HARD_FLOAT && TARGET_PAIRED_SINGLE_FLOAT\"\n {\n   if (mips_legitimize_move (V2SFmode, operands[0], operands[1]))\n     DONE;\n@@ -4052,8 +4052,9 @@\n (define_insn \"movv2sf_hardfloat_64bit\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\" \"=f,f,f,m,m,*f,*d,*d,*d,*m\")\n \t(match_operand:V2SF 1 \"move_operand\" \"f,YG,m,f,YG,*d,*f,*d*YG,*m,*d\"))]\n-  \"TARGET_PAIRED_SINGLE_FLOAT\n+  \"TARGET_HARD_FLOAT\n    && TARGET_64BIT\n+   && TARGET_PAIRED_SINGLE_FLOAT\n    && (register_operand (operands[0], V2SFmode)\n        || reg_or_0_operand (operands[1], V2SFmode))\"\n   { return mips_output_move (operands[0], operands[1]); }"}, {"sha": "21df8be4eb5b65b914d88e44db09417332e0c93c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -1,3 +1,112 @@\n+2007-09-23  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* lib/target-supports.exp (check_effective_target_nomips16): New\n+\tprocedure.\n+\t* lib/fortran-torture.exp: Check nomips16 as well as mpaired_single\n+\tfor mipsisa64*-*-*.\n+\t* gcc.dg/vect/vect.exp: Likewise.\n+\t* g++.dg/vect/vect.exp: Likewise.\n+\t* gcc.target/mips/mips.exp (setup_mips_tests): Don't set mips_mips16.\n+\t(dg-mips-options): Don't skip -march* and -mips* tests for -mips16.\n+\t* gcc.target/mips/branch-cost-1.c (foo): Add NOMIPS16.\n+\t* gcc.target/mips/branch-cost-2.c (foo): Likewise.\n+\t* gcc.target/mips/clear-cache-1.c (f): Likewise.\n+\t* gcc.target/mips/dpaq_sa_l_w.c (f1, f2, f3): Likewise.\n+\t* gcc.target/mips/dpsq_sa_l_w.c (f1, f2, f3): Likewise.\n+\t* gcc.target/mips/fix-vr4130-1.c (foo): Likewise.\n+\t* gcc.target/mips/fix-vr4130-2.c (foo): Likewise.\n+\t* gcc.target/mips/fix-vr4130-3.c (foo): Likewise.\n+\t* gcc.target/mips/fix-vr4130-4.c (foo): Likewise.\n+\t* gcc.target/mips/fixed-scalar-type.c (test1, test2, test3, test4)\n+\t(test5, test6, test7, test8, test9, test10, test11, test12, test13)\n+\t(test14, test15, test16, test17, test18): Likewise.\n+\t* gcc.target/mips/fixed-vector-type.c (test1, test2, test3, test4)\n+\t(test5, test6, test7, test8, test9, test10, test11, test12, test13)\n+\t(test14, test15, test16, test17, test18, test19, test20, test21)\n+\t(test22): Likewise.\n+\t* gcc.target/mips/madd-1.c (f1, f2, f3): Likewise.\n+\t* gcc.target/mips/madd-2.c (f1, f2, f3): Likewise.\n+\t* gcc.target/mips/madd-4.c (f1, f2, f3): Likewise.\n+\t* gcc.target/mips/maddu-1.c (f1, f2, f3): Likewise.\n+\t* gcc.target/mips/maddu-2.c (f1, f2, f3): Likewise.\n+\t* gcc.target/mips/maddu-4.c (f1, f2, f3): Likewise.\n+\t* gcc.target/mips/mips-3d-1.c (main): Likewise.\n+\t* gcc.target/mips/mips-3d-2.c (main, test0, test1, test2, test3)\n+\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n+\t(test13, test14, test15, test16, test17, test18, test19, test20)\n+\t(test21, test22, test23, test24, test25, test26, test27, test28)\n+\t(test29, test30, test31): Likewise.\n+\t* gcc.target/mips/mips-3d-3.c (main, test0, test1, test2, test3)\n+\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n+\t(test13, test14, test15, test16, test17, test18, test19, test20)\n+\t(test21, test22, test23, test24, test25, test26, test27, test28)\n+\t(test29, test30, test31, test32, test33, test34, test35, test36)\n+\t(test37, test38, test39, test40, test41, test42, test43, test44)\n+\t(test45, test46, test47, test48, test49, test50, test51, test52)\n+\t(test53, test54, test55, test56, test57, test58, test59, test60)\n+\t(test61, test62, test63): Likewise.\n+\t* gcc.target/mips/mips-3d-4.c (main, test0, test1, test2, test3)\n+\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n+\t(test13, test14, test15, test16, test17, test18, test19, test20)\n+\t(test21, test22, test23, test24, test25, test26, test27, test28)\n+\t(test29, test30, test31): Likewise.\n+\t* gcc.target/mips/mips-3d-5.c (main, test0, test1, test2, test3)\n+\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n+\t(test13, test14, test15, test16, test17, test18, test19, test20)\n+\t(test21, test22, test23, test24, test25, test26, test27, test28)\n+\t(test29, test30, test31): Likewise.\n+\t* gcc.target/mips/mips-3d-6.c (main, test0, test1, test2, test3)\n+\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n+\t(test13, test14, test15): Likewise.\n+\t* gcc.target/mips/mips-3d-7.c (main, test0, test1, test2, test3)\n+\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n+\t(test13, test14, test15): Likewise.\n+\t* gcc.target/mips/mips-3d-8.c (main, test0, test1, test2, test3)\n+\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n+\t(test13, test14, test15, test16, test17, test18, test19, test20)\n+\t(test21, test22, test23, test24, test25, test26, test27, test28)\n+\t(test29, test30, test31): Likewise.\n+\t* gcc.target/mips/mips-3d-9.c (matrix_multiply2, matrix_multiply3)\n+\t(matrix_multiply4: Likewise.\n+\t* gcc.target/mips/mips-ps-1.c (main): Likewise.\n+\t* gcc.target/mips/mips-ps-2.c (main): Likewise.\n+\t* gcc.target/mips/mips-ps-3.c (main): Likewise.\n+\t* gcc.target/mips/mips-ps-4.c (main, test0, test1, test2, test3)\n+\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n+\t(test13, test14, test15, test16, test17, test18, test19, test20)\n+\t(test21, test22, test23, test24, test25, test26, test27, test28)\n+\t(test29, test30, test31): Likewise.\n+\t* gcc.target/mips/mips-ps-5.c (main, test0, test1, test2, test3)\n+\t(test4, test5, test6, test7, test8, test9, test10, test11, test12)\n+\t(test13, test14, test15, test16, test17, test18, test19, test20)\n+\t(test21, test22, test23, test24, test25, test26, test27, test28)\n+\t(test29, test30, test31): Likewise.\n+\t* gcc.target/mips/mips-ps-5.c (main): Likewise.\n+\t* gcc.target/mips/mips-ps-6.c (main): Likewise.\n+\t* gcc.target/mips/mips-ps-type.c (init, move, load, store, add, sub)\n+\t(neg, mul, madd, msub, nmadd, nmsub, cond_move1, cond_move2): Likewise.\n+\t* gcc.target/mips/mips32-dsp-type.c (add_v2hi,add_v4qi, sub_v2hi)\n+\t(sub_v4qi): Likewise.\n+\t* gcc.target/mips/mips32-dsp.c (test_MIPS_DSP, add_v2q15, add_v4i8)\n+\t(sub_v2q15, sub_v4i8, test_MIPS_DSP): Likewise.\n+\t* gcc.target/mips/movcc-1.c (sub1, sub2): Likewise.\n+\t* gcc.target/mips/movcc-2.c (sub4, sub5): Likewise.\n+\t* gcc.target/mips/movcc-3.c (sub3, sub6, sub7, sub8, sub9, suba)\n+\t(subb, subc): Likewise.\n+\t* gcc.target/mips/msub-1.c (f1, f2): Likewise.\n+\t* gcc.target/mips/msub-2.c (f1, f2): Likewise.\n+\t* gcc.target/mips/msub-4.c (f1, f2): Likewise.\n+\t* gcc.target/mips/msubu-1.c (f1, f2): Likewise.\n+\t* gcc.target/mips/msubu-2.c (f1, f2): Likewise.\n+\t* gcc.target/mips/msubu-4.c (f1, f2): Likewise.\n+\t* gcc.target/mips/nmadd-1.c (sub1, sub2, sub3, sub4): Likewise.\n+\t* gcc.target/mips/nmadd-2.c (sub1, sub2, sub3, sub4): Likewise.\n+\t* gcc.target/mips/rsqrt-1.c (foo, bar): Likewise.\n+\t* gcc.target/mips/rsqrt-2.c (foo, bar): Likewise.\n+\t* gcc.target/mips/sb1-1.c (divide, recip, squareroot, rsqrt): Likewise.\n+\t* gcc.target/mips/vr-mult-1.c (f1, f2): Likewise.\n+\t* gcc.target/mips/vr-mult-2.c (f1, f2): Likewise.\n+\n 2007-09-22  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* lib/target-supports.exp (add_options_for_mips16_attribute)"}, {"sha": "1bf6d48f32068f569c33c98a468869d8c6cf3b8c", "filename": "gcc/testsuite/g++.dg/vect/vect.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fvect.exp?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -67,7 +67,8 @@ if [istarget \"powerpc*-*-*\"] {\n     lappend DEFAULT_VECTCFLAGS \"-msse2\"\n     set dg-do-what-default run\n } elseif { [istarget \"mipsisa64*-*-*\"]\n-\t   && [check_effective_target_mpaired_single] } {\n+\t   && [check_effective_target_mpaired_single]\n+\t   && [check_effective_target_nomips16] } {\n     lappend DEFAULT_VECTCFLAGS \"-mpaired-single\"\n     set dg-do-what-default run\n } elseif [istarget \"sparc*-*-*\"] {"}, {"sha": "e9103328a188ffe1b5099c8182189a0cd99955ae", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -58,7 +58,8 @@ if [istarget \"powerpc*-*-*\"] {\n     lappend DEFAULT_VECTCFLAGS \"-msse2\"\n     set dg-do-what-default run\n } elseif { [istarget \"mipsisa64*-*-*\"]\n-\t   && [check_effective_target_mpaired_single] } {\n+\t   && [check_effective_target_mpaired_single]\n+\t   && [check_effective_target_nomips16] } {\n     lappend DEFAULT_VECTCFLAGS \"-mpaired-single\"\n     set dg-do-what-default run\n } elseif [istarget \"sparc*-*-*\"] {"}, {"sha": "8048f37459dd5d9abdcedeea2f62bac1f1b29096", "filename": "gcc/testsuite/gcc.target/mips/branch-cost-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-mips-options \"-mbranch-cost=1 -mips64 -O2\" } */\n-int\n+NOMIPS16 int\n foo (int x, int y, int z, int k)\n {\n   return x == k ? x + y : z - x;"}, {"sha": "d4dc8fe1bba98a37df665b37be14c517243fe834", "filename": "gcc/testsuite/gcc.target/mips/branch-cost-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-mips-options \"-mbranch-cost=10 -mips64 -O2\" } */\n-int\n+NOMIPS16 int\n foo (int x, int y, int z, int k)\n {\n   return x == k ? x + y : z - x;"}, {"sha": "d6e60c251ff30d761b9999eec4458939647a238d", "filename": "gcc/testsuite/gcc.target/mips/clear-cache-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -4,7 +4,7 @@\n /* { dg-final { scan-assembler \"jr.hb\" } } */\n /* { dg-final { scan-assembler-not \"_flush_cache\" } } */\n \n-void f()\n+NOMIPS16 void f()\n {\n   int size = 40;\n   char *memory = __builtin_alloca(size);"}, {"sha": "1197fa92a2738fcfa1dcd247f4a287313837bcec", "filename": "gcc/testsuite/gcc.target/mips/dpaq_sa_l_w.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpaq_sa_l_w.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpaq_sa_l_w.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpaq_sa_l_w.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,19 +2,19 @@\n /* { dg-mips-options \"-O2 -mips32r2 -mdsp\" } */\n /* { dg-final { scan-assembler-times \"\\tdpaq_sa.l.w\\t\\\\\\$ac\" 3 } } */\n \n-_Sat long long _Fract\n+NOMIPS16 _Sat long long _Fract\n f1 (_Sat long _Fract x, _Sat long _Fract y, _Sat long long _Fract z)\n {\n   return (_Sat long long _Fract) x * y + z;\n }\n \n-_Sat long long _Fract\n+NOMIPS16 _Sat long long _Fract\n f2 (_Sat long _Fract x, _Sat long _Fract y, _Sat long long _Fract z)\n {\n   return z + (_Sat long long _Fract) y * x;\n }\n \n-_Sat long long _Fract\n+NOMIPS16 _Sat long long _Fract\n f3 (_Sat long _Fract x, _Sat long _Fract y, _Sat long long _Fract z)\n {\n   _Sat long long _Fract t = (_Sat long long _Fract) x * y;"}, {"sha": "42935bb02150230c6975b2bef34e523a2a5fd653", "filename": "gcc/testsuite/gcc.target/mips/dpsq_sa_l_w.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpsq_sa_l_w.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpsq_sa_l_w.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpsq_sa_l_w.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,13 +2,13 @@\n /* { dg-mips-options \"-O2 -mips32r2 -mdsp\" } */\n /* { dg-final { scan-assembler-times \"\\tdpsq_sa.l.w\\t\\\\\\$ac\" 2 } } */\n \n-_Sat long long _Fract\n+NOMIPS16 _Sat long long _Fract\n f1 (_Sat long _Fract x, _Sat long _Fract y, _Sat long long _Fract z)\n {\n   return z - (_Sat long long _Fract) x * y;\n }\n \n-_Sat long long _Fract\n+NOMIPS16 _Sat long long _Fract\n f2 (_Sat long _Fract x, _Sat long _Fract y, _Sat long long _Fract z)\n {\n   _Sat long long _Fract t = (_Sat long long _Fract) x * y;"}, {"sha": "27ef5ef06ebb392c6136956b1ad375c4cea4849c", "filename": "gcc/testsuite/gcc.target/mips/fix-vr4130-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do compile } */\n /* { dg-mips-options \"-march=vr4130 -mfix-vr4130\" } */\n-int foo (void) { int r; asm (\"# foo\" : \"=h\" (r)); return r; }\n+NOMIPS16 int foo (void) { int r; asm (\"# foo\" : \"=h\" (r)); return r; }\n /* { dg-final { scan-assembler \"\\tmacchi\\t\" } } */"}, {"sha": "aaeba4f2836f8209179ef2ceed89db6adde1ab43", "filename": "gcc/testsuite/gcc.target/mips/fix-vr4130-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do compile } */\n /* { dg-mips-options \"-march=vr4130 -mfix-vr4130\" } */\n-int foo (void) { int r; asm (\"# foo\" : \"=l\" (r)); return r; }\n+NOMIPS16 int foo (void) { int r; asm (\"# foo\" : \"=l\" (r)); return r; }\n /* { dg-final { scan-assembler \"\\tmacc\\t\" } } */"}, {"sha": "2f4f48689f6dce58396426cbd876806abee6c6e8", "filename": "gcc/testsuite/gcc.target/mips/fix-vr4130-3.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-3.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -1,4 +1,10 @@\n /* { dg-do compile } */\n /* { dg-mips-options \"-march=vr4130 -mgp64 -mfix-vr4130\" } */\n-long long foo (void) { long long r; asm (\"# foo\" : \"=h\" (r)); return r; }\n+NOMIPS16 long long\n+foo (void)\n+{\n+  long long r;\n+  asm (\"# foo\" : \"=h\" (r));\n+  return r;\n+}\n /* { dg-final { scan-assembler \"\\tdmacchi\\t\" } } */"}, {"sha": "91b883d46b5ed7b8773885d2dcf066b437a0f188", "filename": "gcc/testsuite/gcc.target/mips/fix-vr4130-4.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-4.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -1,4 +1,10 @@\n /* { dg-do compile } */\n /* { dg-mips-options \"-march=vr4130 -mgp64 -mfix-vr4130\" } */\n-long long foo (void) { long long r; asm (\"# foo\" : \"=l\" (r)); return r; }\n+NOMIPS16 long long\n+foo (void)\n+{\n+  long long r;\n+  asm (\"# foo\" : \"=l\" (r));\n+  return r;\n+}\n /* { dg-final { scan-assembler \"\\tdmacc\\t\" } } */"}, {"sha": "ff4e975618cb33ecdc685190886ced95fcf44afc", "filename": "gcc/testsuite/gcc.target/mips/fixed-scalar-type.c", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-scalar-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-scalar-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-scalar-type.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -83,7 +83,7 @@ long _Fract non_sat_test13 (long _Fract a, long _Fract b)\n }\n \n unsigned short _Fract non_sat_test14 (unsigned short _Fract a,\n-\t\t\t\t     unsigned short _Fract b)\n+\t\t\t\t      unsigned short _Fract b)\n {\n   return a - b;\n }\n@@ -94,7 +94,7 @@ unsigned _Fract non_sat_test15 (unsigned _Fract a, unsigned _Fract b)\n }\n \n unsigned long _Fract non_sat_test16 (unsigned long _Fract a,\n-\t\t\t\t    unsigned long _Fract b)\n+\t\t\t\t     unsigned long _Fract b)\n {\n   return a - b;\n }\n@@ -110,7 +110,7 @@ _Accum non_sat_test18 (_Accum a, _Accum b)\n }\n \n unsigned short _Accum non_sat_test19 (unsigned short _Accum a,\n-\t\t\t\t     unsigned short _Accum b)\n+\t\t\t\t      unsigned short _Accum b)\n {\n   return a - b;\n }\n@@ -120,96 +120,98 @@ unsigned _Accum non_sat_test20 (unsigned _Accum a, unsigned _Accum b)\n   return a - b;\n }\n \n-_Sat unsigned short _Fract test1 (_Sat unsigned short _Fract a,\n-\t\t\t\t  _Sat unsigned short _Fract b)\n+NOMIPS16 _Sat unsigned short _Fract test1 (_Sat unsigned short _Fract a,\n+\t\t\t\t\t   _Sat unsigned short _Fract b)\n {\n   return a + b;\n }\n \n-_Sat unsigned _Fract test2 (_Sat unsigned  _Fract a, _Sat unsigned _Fract b)\n+NOMIPS16 _Sat unsigned _Fract test2 (_Sat unsigned  _Fract a,\n+\t\t\t\t     _Sat unsigned _Fract b)\n {\n   return a + b;\n }\n \n-_Sat unsigned short _Accum test3 (_Sat unsigned short _Accum a,\n-\t\t\t\t  _Sat unsigned short _Accum b)\n+NOMIPS16 _Sat unsigned short _Accum test3 (_Sat unsigned short _Accum a,\n+\t\t\t\t\t   _Sat unsigned short _Accum b)\n {\n   return a + b;\n }\n \n-_Sat _Fract test4 (_Sat _Fract a, _Sat _Fract b)\n+NOMIPS16 _Sat _Fract test4 (_Sat _Fract a, _Sat _Fract b)\n {\n   return a + b;\n }\n \n-_Sat long _Fract test5 (_Sat long _Fract a, _Sat long _Fract b)\n+NOMIPS16 _Sat long _Fract test5 (_Sat long _Fract a, _Sat long _Fract b)\n {\n   return a + b;\n }\n \n-_Sat short _Accum test6 (_Sat short _Accum a, _Sat short _Accum b)\n+NOMIPS16 _Sat short _Accum test6 (_Sat short _Accum a, _Sat short _Accum b)\n {\n   return a + b;\n }\n \n-_Sat _Accum test7 (_Sat _Accum a, _Sat _Accum b)\n+NOMIPS16 _Sat _Accum test7 (_Sat _Accum a, _Sat _Accum b)\n {\n   return a + b;\n }\n \n-_Sat unsigned short _Fract test8 (_Sat unsigned short _Fract a,\n-\t\t\t\t  _Sat unsigned short _Fract b)\n+NOMIPS16 _Sat unsigned short _Fract test8 (_Sat unsigned short _Fract a,\n+\t\t\t\t\t   _Sat unsigned short _Fract b)\n {\n   return a - b;\n }\n \n-_Sat unsigned _Fract test9 (_Sat unsigned  _Fract a, _Sat unsigned _Fract b)\n+NOMIPS16 _Sat unsigned _Fract test9 (_Sat unsigned  _Fract a,\n+\t\t\t\t     _Sat unsigned _Fract b)\n {\n   return a - b;\n }\n \n-_Sat unsigned short _Accum test10 (_Sat unsigned short _Accum a,\n-\t\t\t\t  _Sat unsigned short _Accum b)\n+NOMIPS16 _Sat unsigned short _Accum test10 (_Sat unsigned short _Accum a,\n+\t\t\t\t\t    _Sat unsigned short _Accum b)\n {\n   return a - b;\n }\n \n-_Sat _Fract test11 (_Sat _Fract a, _Sat _Fract b)\n+NOMIPS16 _Sat _Fract test11 (_Sat _Fract a, _Sat _Fract b)\n {\n   return a - b;\n }\n \n-_Sat long _Fract test12 (_Sat long _Fract a, _Sat long _Fract b)\n+NOMIPS16 _Sat long _Fract test12 (_Sat long _Fract a, _Sat long _Fract b)\n {\n   return a - b;\n }\n \n-_Sat short _Accum test13 (_Sat short _Accum a, _Sat short _Accum b)\n+NOMIPS16 _Sat short _Accum test13 (_Sat short _Accum a, _Sat short _Accum b)\n {\n   return a - b;\n }\n \n-_Sat _Accum test14 (_Sat _Accum a, _Sat _Accum b)\n+NOMIPS16 _Sat _Accum test14 (_Sat _Accum a, _Sat _Accum b)\n {\n   return a - b;\n }\n \n-_Sat _Fract test15 (_Sat _Fract a, _Sat _Fract b)\n+NOMIPS16 _Sat _Fract test15 (_Sat _Fract a, _Sat _Fract b)\n {\n   return a * b;\n }\n \n-_Sat long _Fract test16 (_Sat long _Fract a, _Sat long _Fract b)\n+NOMIPS16 _Sat long _Fract test16 (_Sat long _Fract a, _Sat long _Fract b)\n {\n   return a * b;\n }\n \n-_Fract test17 (_Fract a, _Fract b)\n+NOMIPS16 _Fract test17 (_Fract a, _Fract b)\n {\n   return a * b;\n }\n \n-long _Fract test18 (long _Fract a, long _Fract b)\n+NOMIPS16 long _Fract test18 (long _Fract a, long _Fract b)\n {\n   return a * b;\n }"}, {"sha": "08208f2c2d7f78d9ef5281581d030829da1dad8e", "filename": "gcc/testsuite/gcc.target/mips/fixed-vector-type.c", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-vector-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-vector-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-vector-type.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -21,112 +21,112 @@ typedef unsigned short _Accum v2uha __attribute__ ((vector_size(4)));\n typedef _Fract v2hq __attribute__ ((vector_size(4)));\n typedef short _Accum v2ha __attribute__ ((vector_size(4)));\n \n-sat_v2hq test1 (sat_v2hq a, sat_v2hq b)\n+NOMIPS16 sat_v2hq test1 (sat_v2hq a, sat_v2hq b)\n {\n   return a + b;\n }\n \n-sat_v2ha test2 (sat_v2ha a, sat_v2ha b)\n+NOMIPS16 sat_v2ha test2 (sat_v2ha a, sat_v2ha b)\n {\n   return a + b;\n }\n \n-sat_v2hq test3 (sat_v2hq a, sat_v2hq b)\n+NOMIPS16 sat_v2hq test3 (sat_v2hq a, sat_v2hq b)\n {\n   return a - b;\n }\n \n-sat_v2ha test4 (sat_v2ha a, sat_v2ha b)\n+NOMIPS16 sat_v2ha test4 (sat_v2ha a, sat_v2ha b)\n {\n   return a - b;\n }\n \n-sat_v4uqq test5 (sat_v4uqq a, sat_v4uqq b)\n+NOMIPS16 sat_v4uqq test5 (sat_v4uqq a, sat_v4uqq b)\n {\n   return a + b;\n }\n \n-sat_v2uhq test6 (sat_v2uhq a, sat_v2uhq b)\n+NOMIPS16 sat_v2uhq test6 (sat_v2uhq a, sat_v2uhq b)\n {\n   return a + b;\n }\n \n-sat_v2uha test7 (sat_v2uha a, sat_v2uha b)\n+NOMIPS16 sat_v2uha test7 (sat_v2uha a, sat_v2uha b)\n {\n   return a + b;\n }\n \n-sat_v4uqq test8 (sat_v4uqq a, sat_v4uqq b)\n+NOMIPS16 sat_v4uqq test8 (sat_v4uqq a, sat_v4uqq b)\n {\n   return a - b;\n }\n \n-sat_v2uhq test9 (sat_v2uhq a, sat_v2uhq b)\n+NOMIPS16 sat_v2uhq test9 (sat_v2uhq a, sat_v2uhq b)\n {\n   return a - b;\n }\n \n-sat_v2uha test10 (sat_v2uha a, sat_v2uha b)\n+NOMIPS16 sat_v2uha test10 (sat_v2uha a, sat_v2uha b)\n {\n   return a - b;\n }\n \n-sat_v2hq test11 (sat_v2hq a, sat_v2hq b)\n+NOMIPS16 sat_v2hq test11 (sat_v2hq a, sat_v2hq b)\n {\n   return a * b;\n }\n \n-v2hq test12 (v2hq a, v2hq b)\n+NOMIPS16 v2hq test12 (v2hq a, v2hq b)\n {\n   return a + b;\n }\n \n-v2hq test13 (v2hq a, v2hq b)\n+NOMIPS16 v2hq test13 (v2hq a, v2hq b)\n {\n   return a - b;\n }\n \n-v2hq test14 (v2hq a, v2hq b)\n+NOMIPS16 v2hq test14 (v2hq a, v2hq b)\n {\n   return a * b;\n }\n \n-v2ha test15 (v2ha a, v2ha b)\n+NOMIPS16 v2ha test15 (v2ha a, v2ha b)\n {\n   return a + b;\n }\n \n-v2ha test16 (v2ha a, v2ha b)\n+NOMIPS16 v2ha test16 (v2ha a, v2ha b)\n {\n   return a - b;\n }\n \n-v4uqq test17 (v4uqq a, v4uqq b)\n+NOMIPS16 v4uqq test17 (v4uqq a, v4uqq b)\n {\n   return a + b;\n }\n \n-v4uqq test18 (v4uqq a, v4uqq b)\n+NOMIPS16 v4uqq test18 (v4uqq a, v4uqq b)\n {\n   return a - b;\n }\n \n-v2uhq test19 (v2uhq a, v2uhq b)\n+NOMIPS16 v2uhq test19 (v2uhq a, v2uhq b)\n {\n   return a + b;\n }\n \n-v2uhq test20 (v2uhq a, v2uhq b)\n+NOMIPS16 v2uhq test20 (v2uhq a, v2uhq b)\n {\n   return a - b;\n }\n \n-v2uha test21 (v2uha a, v2uha b)\n+NOMIPS16 v2uha test21 (v2uha a, v2uha b)\n {\n   return a + b;\n }\n \n-v2uha test22 (v2uha a, v2uha b)\n+NOMIPS16 v2uha test22 (v2uha a, v2uha b)\n {\n   return a - b;\n }"}, {"sha": "c0cdf495896808f9986aee398edaf166f5f2b16f", "filename": "gcc/testsuite/gcc.target/mips/madd-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,19 +2,19 @@\n /* { dg-mips-options \"-O2 -march=vr4130 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmacc\\t\\\\\\$1,\" 3 } } */\n \n-long long\n+NOMIPS16 long long\n f1 (int x, int y, long long z)\n {\n   return (long long) x * y + z;\n }\n \n-long long\n+NOMIPS16 long long\n f2 (int x, int y, long long z)\n {\n   return z + (long long) y * x;\n }\n \n-long long\n+NOMIPS16 long long\n f3 (int x, int y, long long z)\n {\n   long long t = (long long) x * y;"}, {"sha": "daadd416c035249b9469a19d679eb27edf6a217f", "filename": "gcc/testsuite/gcc.target/mips/madd-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,19 +2,19 @@\n /* { dg-mips-options \"-O2 -march=vr5500 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmadd\\t\" 3 } } */\n \n-long long\n+NOMIPS16 long long\n f1 (int x, int y, long long z)\n {\n   return (long long) x * y + z;\n }\n \n-long long\n+NOMIPS16 long long\n f2 (int x, int y, long long z)\n {\n   return z + (long long) y * x;\n }\n \n-long long\n+NOMIPS16 long long\n f3 (int x, int y, long long z)\n {\n   long long t = (long long) x * y;"}, {"sha": "8bdf99fbb24861d59681b82bbb3a3264fdbb1bf2", "filename": "gcc/testsuite/gcc.target/mips/madd-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-4.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,19 +2,19 @@\n /* { dg-mips-options \"-O2 -mips32r2 -mdspr2 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmadd\\t\\\\\\$ac\" 3 } } */\n \n-long long\n+NOMIPS16 long long\n f1 (int x, int y, long long z)\n {\n   return (long long) x * y + z;\n }\n \n-long long\n+NOMIPS16 long long\n f2 (int x, int y, long long z)\n {\n   return z + (long long) y * x;\n }\n \n-long long\n+NOMIPS16 long long\n f3 (int x, int y, long long z)\n {\n   long long t = (long long) x * y;"}, {"sha": "254f3e75d542a70798b2b36e9399b5d196ab71c3", "filename": "gcc/testsuite/gcc.target/mips/maddu-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,19 +5,19 @@\n typedef unsigned int ui;\n typedef unsigned long long ull;\n \n-ull\n+NOMIPS16 ull\n f1 (ui x, ui y, ull z)\n {\n   return (ull) x * y + z;\n }\n \n-ull\n+NOMIPS16 ull\n f2 (ui x, ui y, ull z)\n {\n   return z + (ull) y * x;\n }\n \n-ull\n+NOMIPS16 ull\n f3 (ui x, ui y, ull z)\n {\n   ull t = (ull) x * y;"}, {"sha": "fc1574e96676578e1ee0ef2e90eb3d50317d8474", "filename": "gcc/testsuite/gcc.target/mips/maddu-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,19 +5,19 @@\n typedef unsigned int ui;\n typedef unsigned long long ull;\n \n-ull\n+NOMIPS16 ull\n f1 (ui x, ui y, ull z)\n {\n   return (ull) x * y + z;\n }\n \n-ull\n+NOMIPS16 ull\n f2 (ui x, ui y, ull z)\n {\n   return z + (ull) y * x;\n }\n \n-ull\n+NOMIPS16 ull\n f3 (ui x, ui y, ull z)\n {\n   ull t = (ull) x * y;"}, {"sha": "2bc54f864712fe91e92a21442d3a55a64bdae3a4", "filename": "gcc/testsuite/gcc.target/mips/maddu-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-4.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,19 +5,19 @@\n typedef unsigned int ui;\n typedef unsigned long long ull;\n \n-ull\n+NOMIPS16 ull\n f1 (ui x, ui y, ull z)\n {\n   return (ull) x * y + z;\n }\n \n-ull\n+NOMIPS16 ull\n f2 (ui x, ui y, ull z)\n {\n   return z + (ull) y * x;\n }\n \n-ull\n+NOMIPS16 ull\n f3 (ui x, ui y, ull z)\n {\n   ull t = (ull) x * y;"}, {"sha": "393ebfc71e9da4b1d06dbff3db09c70338d13dbb", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,7 +7,7 @@\n \n typedef float v2sf __attribute__ ((vector_size(8)));\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   int little_endian;\n   v2sf a, b, c, d;"}, {"sha": "3c8850bb1aa2fc8545747fb9e4de229ea27691c8", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-2.c", "status": "modified", "additions": 65, "deletions": 65, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,42 +7,42 @@\n \n typedef float v2sf __attribute__ ((vector_size(8)));\n \n-int test0 (v2sf a, v2sf b);\n-int test1 (v2sf a, v2sf b);\n-int test2 (v2sf a, v2sf b);\n-int test3 (v2sf a, v2sf b);\n-int test4 (v2sf a, v2sf b);\n-int test5 (v2sf a, v2sf b);\n-int test6 (v2sf a, v2sf b);\n-int test7 (v2sf a, v2sf b);\n-int test8 (v2sf a, v2sf b);\n-int test9 (v2sf a, v2sf b);\n-int test10 (v2sf a, v2sf b);\n-int test11 (v2sf a, v2sf b);\n-int test12 (v2sf a, v2sf b);\n-int test13 (v2sf a, v2sf b);\n-int test14 (v2sf a, v2sf b);\n-int test15 (v2sf a, v2sf b);\n-int test16 (v2sf a, v2sf b);\n-int test17 (v2sf a, v2sf b);\n-int test18 (v2sf a, v2sf b);\n-int test19 (v2sf a, v2sf b);\n-int test20 (v2sf a, v2sf b);\n-int test21 (v2sf a, v2sf b);\n-int test22 (v2sf a, v2sf b);\n-int test23 (v2sf a, v2sf b);\n-int test24 (v2sf a, v2sf b);\n-int test25 (v2sf a, v2sf b);\n-int test26 (v2sf a, v2sf b);\n-int test27 (v2sf a, v2sf b);\n-int test28 (v2sf a, v2sf b);\n-int test29 (v2sf a, v2sf b);\n-int test30 (v2sf a, v2sf b);\n-int test31 (v2sf a, v2sf b);\n+NOMIPS16 int test0 (v2sf a, v2sf b);\n+NOMIPS16 int test1 (v2sf a, v2sf b);\n+NOMIPS16 int test2 (v2sf a, v2sf b);\n+NOMIPS16 int test3 (v2sf a, v2sf b);\n+NOMIPS16 int test4 (v2sf a, v2sf b);\n+NOMIPS16 int test5 (v2sf a, v2sf b);\n+NOMIPS16 int test6 (v2sf a, v2sf b);\n+NOMIPS16 int test7 (v2sf a, v2sf b);\n+NOMIPS16 int test8 (v2sf a, v2sf b);\n+NOMIPS16 int test9 (v2sf a, v2sf b);\n+NOMIPS16 int test10 (v2sf a, v2sf b);\n+NOMIPS16 int test11 (v2sf a, v2sf b);\n+NOMIPS16 int test12 (v2sf a, v2sf b);\n+NOMIPS16 int test13 (v2sf a, v2sf b);\n+NOMIPS16 int test14 (v2sf a, v2sf b);\n+NOMIPS16 int test15 (v2sf a, v2sf b);\n+NOMIPS16 int test16 (v2sf a, v2sf b);\n+NOMIPS16 int test17 (v2sf a, v2sf b);\n+NOMIPS16 int test18 (v2sf a, v2sf b);\n+NOMIPS16 int test19 (v2sf a, v2sf b);\n+NOMIPS16 int test20 (v2sf a, v2sf b);\n+NOMIPS16 int test21 (v2sf a, v2sf b);\n+NOMIPS16 int test22 (v2sf a, v2sf b);\n+NOMIPS16 int test23 (v2sf a, v2sf b);\n+NOMIPS16 int test24 (v2sf a, v2sf b);\n+NOMIPS16 int test25 (v2sf a, v2sf b);\n+NOMIPS16 int test26 (v2sf a, v2sf b);\n+NOMIPS16 int test27 (v2sf a, v2sf b);\n+NOMIPS16 int test28 (v2sf a, v2sf b);\n+NOMIPS16 int test29 (v2sf a, v2sf b);\n+NOMIPS16 int test30 (v2sf a, v2sf b);\n+NOMIPS16 int test31 (v2sf a, v2sf b);\n \n float qnan = 1.0f/0.0f - 1.0f/0.0f;\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   v2sf a, b, c, d;\n   int i, j;\n@@ -393,162 +393,162 @@ int main ()\n   exit (0);\n }\n \n-int test0 (v2sf a, v2sf b)\n+NOMIPS16 int test0 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_f_ps (a, b);\n }\n \n-int test1 (v2sf a, v2sf b)\n+NOMIPS16 int test1 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_f_ps (a, b);\n }\n \n-int test2 (v2sf a, v2sf b)\n+NOMIPS16 int test2 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_un_ps (a, b);\n }\n \n-int test3 (v2sf a, v2sf b)\n+NOMIPS16 int test3 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_un_ps (a, b);\n }\n \n-int test4 (v2sf a, v2sf b)\n+NOMIPS16 int test4 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_eq_ps (a, b);\n }\n \n-int test5 (v2sf a, v2sf b)\n+NOMIPS16 int test5 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_eq_ps (a, b);\n }\n \n-int test6 (v2sf a, v2sf b)\n+NOMIPS16 int test6 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_ueq_ps (a, b);\n }\n \n-int test7 (v2sf a, v2sf b)\n+NOMIPS16 int test7 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_ueq_ps (a, b);\n }\n \n-int test8 (v2sf a, v2sf b)\n+NOMIPS16 int test8 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_olt_ps (a, b);\n }\n \n-int test9 (v2sf a, v2sf b)\n+NOMIPS16 int test9 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_olt_ps (a, b);\n }\n \n-int test10 (v2sf a, v2sf b)\n+NOMIPS16 int test10 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_ult_ps (a, b);\n }\n \n-int test11 (v2sf a, v2sf b)\n+NOMIPS16 int test11 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_ult_ps (a, b);\n }\n \n-int test12 (v2sf a, v2sf b)\n+NOMIPS16 int test12 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_ole_ps (a, b);\n }\n \n-int test13 (v2sf a, v2sf b)\n+NOMIPS16 int test13 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_ole_ps (a, b);\n }\n \n-int test14 (v2sf a, v2sf b)\n+NOMIPS16 int test14 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_ule_ps (a, b);\n }\n \n-int test15 (v2sf a, v2sf b)\n+NOMIPS16 int test15 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_ule_ps (a, b);\n }\n \n-int test16 (v2sf a, v2sf b)\n+NOMIPS16 int test16 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_sf_ps (a, b);\n }\n \n-int test17 (v2sf a, v2sf b)\n+NOMIPS16 int test17 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_sf_ps (a, b);\n }\n \n-int test18 (v2sf a, v2sf b)\n+NOMIPS16 int test18 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_ngle_ps (a, b);\n }\n \n-int test19 (v2sf a, v2sf b)\n+NOMIPS16 int test19 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_ngle_ps (a, b);\n }\n \n-int test20 (v2sf a, v2sf b)\n+NOMIPS16 int test20 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_seq_ps (a, b);\n }\n \n-int test21 (v2sf a, v2sf b)\n+NOMIPS16 int test21 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_seq_ps (a, b);\n }\n \n-int test22 (v2sf a, v2sf b)\n+NOMIPS16 int test22 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_ngl_ps (a, b);\n }\n \n-int test23 (v2sf a, v2sf b)\n+NOMIPS16 int test23 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_ngl_ps (a, b);\n }\n \n-int test24 (v2sf a, v2sf b)\n+NOMIPS16 int test24 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_lt_ps (a, b);\n }\n \n-int test25 (v2sf a, v2sf b)\n+NOMIPS16 int test25 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_lt_ps (a, b);\n }\n \n-int test26 (v2sf a, v2sf b)\n+NOMIPS16 int test26 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_nge_ps (a, b);\n }\n \n-int test27 (v2sf a, v2sf b)\n+NOMIPS16 int test27 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_nge_ps (a, b);\n }\n \n-int test28 (v2sf a, v2sf b)\n+NOMIPS16 int test28 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_le_ps (a, b);\n }\n \n-int test29 (v2sf a, v2sf b)\n+NOMIPS16 int test29 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_le_ps (a, b);\n }\n \n-int test30 (v2sf a, v2sf b)\n+NOMIPS16 int test30 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_c_ngt_ps (a, b);\n }\n \n-int test31 (v2sf a, v2sf b)\n+NOMIPS16 int test31 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_c_ngt_ps (a, b);\n }"}, {"sha": "909a89a244078411b996cf632335aa4cab7245ae", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-3.c", "status": "modified", "additions": 129, "deletions": 129, "changes": 258, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-3.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,74 +7,74 @@\n \n typedef float v2sf __attribute__ ((vector_size(8)));\n \n-int test0 (v2sf a, v2sf b);\n-int test1 (v2sf a, v2sf b);\n-int test2 (v2sf a, v2sf b);\n-int test3 (v2sf a, v2sf b);\n-int test4 (v2sf a, v2sf b);\n-int test5 (v2sf a, v2sf b);\n-int test6 (v2sf a, v2sf b);\n-int test7 (v2sf a, v2sf b);\n-int test8 (v2sf a, v2sf b);\n-int test9 (v2sf a, v2sf b);\n-int test10 (v2sf a, v2sf b);\n-int test11 (v2sf a, v2sf b);\n-int test12 (v2sf a, v2sf b);\n-int test13 (v2sf a, v2sf b);\n-int test14 (v2sf a, v2sf b);\n-int test15 (v2sf a, v2sf b);\n-int test16 (v2sf a, v2sf b);\n-int test17 (v2sf a, v2sf b);\n-int test18 (v2sf a, v2sf b);\n-int test19 (v2sf a, v2sf b);\n-int test20 (v2sf a, v2sf b);\n-int test21 (v2sf a, v2sf b);\n-int test22 (v2sf a, v2sf b);\n-int test23 (v2sf a, v2sf b);\n-int test24 (v2sf a, v2sf b);\n-int test25 (v2sf a, v2sf b);\n-int test26 (v2sf a, v2sf b);\n-int test27 (v2sf a, v2sf b);\n-int test28 (v2sf a, v2sf b);\n-int test29 (v2sf a, v2sf b);\n-int test30 (v2sf a, v2sf b);\n-int test31 (v2sf a, v2sf b);\n-int test32 (v2sf a, v2sf b);\n-int test33 (v2sf a, v2sf b);\n-int test34 (v2sf a, v2sf b);\n-int test35 (v2sf a, v2sf b);\n-int test36 (v2sf a, v2sf b);\n-int test37 (v2sf a, v2sf b);\n-int test38 (v2sf a, v2sf b);\n-int test39 (v2sf a, v2sf b);\n-int test40 (v2sf a, v2sf b);\n-int test41 (v2sf a, v2sf b);\n-int test42 (v2sf a, v2sf b);\n-int test43 (v2sf a, v2sf b);\n-int test44 (v2sf a, v2sf b);\n-int test45 (v2sf a, v2sf b);\n-int test46 (v2sf a, v2sf b);\n-int test47 (v2sf a, v2sf b);\n-int test48 (v2sf a, v2sf b);\n-int test49 (v2sf a, v2sf b);\n-int test50 (v2sf a, v2sf b);\n-int test51 (v2sf a, v2sf b);\n-int test52 (v2sf a, v2sf b);\n-int test53 (v2sf a, v2sf b);\n-int test54 (v2sf a, v2sf b);\n-int test55 (v2sf a, v2sf b);\n-int test56 (v2sf a, v2sf b);\n-int test57 (v2sf a, v2sf b);\n-int test58 (v2sf a, v2sf b);\n-int test59 (v2sf a, v2sf b);\n-int test60 (v2sf a, v2sf b);\n-int test61 (v2sf a, v2sf b);\n-int test62 (v2sf a, v2sf b);\n-int test63 (v2sf a, v2sf b);\n+NOMIPS16 int test0 (v2sf a, v2sf b);\n+NOMIPS16 int test1 (v2sf a, v2sf b);\n+NOMIPS16 int test2 (v2sf a, v2sf b);\n+NOMIPS16 int test3 (v2sf a, v2sf b);\n+NOMIPS16 int test4 (v2sf a, v2sf b);\n+NOMIPS16 int test5 (v2sf a, v2sf b);\n+NOMIPS16 int test6 (v2sf a, v2sf b);\n+NOMIPS16 int test7 (v2sf a, v2sf b);\n+NOMIPS16 int test8 (v2sf a, v2sf b);\n+NOMIPS16 int test9 (v2sf a, v2sf b);\n+NOMIPS16 int test10 (v2sf a, v2sf b);\n+NOMIPS16 int test11 (v2sf a, v2sf b);\n+NOMIPS16 int test12 (v2sf a, v2sf b);\n+NOMIPS16 int test13 (v2sf a, v2sf b);\n+NOMIPS16 int test14 (v2sf a, v2sf b);\n+NOMIPS16 int test15 (v2sf a, v2sf b);\n+NOMIPS16 int test16 (v2sf a, v2sf b);\n+NOMIPS16 int test17 (v2sf a, v2sf b);\n+NOMIPS16 int test18 (v2sf a, v2sf b);\n+NOMIPS16 int test19 (v2sf a, v2sf b);\n+NOMIPS16 int test20 (v2sf a, v2sf b);\n+NOMIPS16 int test21 (v2sf a, v2sf b);\n+NOMIPS16 int test22 (v2sf a, v2sf b);\n+NOMIPS16 int test23 (v2sf a, v2sf b);\n+NOMIPS16 int test24 (v2sf a, v2sf b);\n+NOMIPS16 int test25 (v2sf a, v2sf b);\n+NOMIPS16 int test26 (v2sf a, v2sf b);\n+NOMIPS16 int test27 (v2sf a, v2sf b);\n+NOMIPS16 int test28 (v2sf a, v2sf b);\n+NOMIPS16 int test29 (v2sf a, v2sf b);\n+NOMIPS16 int test30 (v2sf a, v2sf b);\n+NOMIPS16 int test31 (v2sf a, v2sf b);\n+NOMIPS16 int test32 (v2sf a, v2sf b);\n+NOMIPS16 int test33 (v2sf a, v2sf b);\n+NOMIPS16 int test34 (v2sf a, v2sf b);\n+NOMIPS16 int test35 (v2sf a, v2sf b);\n+NOMIPS16 int test36 (v2sf a, v2sf b);\n+NOMIPS16 int test37 (v2sf a, v2sf b);\n+NOMIPS16 int test38 (v2sf a, v2sf b);\n+NOMIPS16 int test39 (v2sf a, v2sf b);\n+NOMIPS16 int test40 (v2sf a, v2sf b);\n+NOMIPS16 int test41 (v2sf a, v2sf b);\n+NOMIPS16 int test42 (v2sf a, v2sf b);\n+NOMIPS16 int test43 (v2sf a, v2sf b);\n+NOMIPS16 int test44 (v2sf a, v2sf b);\n+NOMIPS16 int test45 (v2sf a, v2sf b);\n+NOMIPS16 int test46 (v2sf a, v2sf b);\n+NOMIPS16 int test47 (v2sf a, v2sf b);\n+NOMIPS16 int test48 (v2sf a, v2sf b);\n+NOMIPS16 int test49 (v2sf a, v2sf b);\n+NOMIPS16 int test50 (v2sf a, v2sf b);\n+NOMIPS16 int test51 (v2sf a, v2sf b);\n+NOMIPS16 int test52 (v2sf a, v2sf b);\n+NOMIPS16 int test53 (v2sf a, v2sf b);\n+NOMIPS16 int test54 (v2sf a, v2sf b);\n+NOMIPS16 int test55 (v2sf a, v2sf b);\n+NOMIPS16 int test56 (v2sf a, v2sf b);\n+NOMIPS16 int test57 (v2sf a, v2sf b);\n+NOMIPS16 int test58 (v2sf a, v2sf b);\n+NOMIPS16 int test59 (v2sf a, v2sf b);\n+NOMIPS16 int test60 (v2sf a, v2sf b);\n+NOMIPS16 int test61 (v2sf a, v2sf b);\n+NOMIPS16 int test62 (v2sf a, v2sf b);\n+NOMIPS16 int test63 (v2sf a, v2sf b);\n \n float qnan = 1.0f/0.0f - 1.0f/0.0f;\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   int little_endian;\n   v2sf a, b, c, d;\n@@ -774,322 +774,322 @@ int main ()\n   exit (0);\n }\n \n-int test0 (v2sf a, v2sf b)\n+NOMIPS16 int test0 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_f_ps (a, b);\n }\n \n-int test1 (v2sf a, v2sf b)\n+NOMIPS16 int test1 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_f_ps (a, b);\n }\n \n-int test2 (v2sf a, v2sf b)\n+NOMIPS16 int test2 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_f_ps (a, b);\n }\n \n-int test3 (v2sf a, v2sf b)\n+NOMIPS16 int test3 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_f_ps (a, b);\n }\n \n-int test4 (v2sf a, v2sf b)\n+NOMIPS16 int test4 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_un_ps (a, b);\n }\n \n-int test5 (v2sf a, v2sf b)\n+NOMIPS16 int test5 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_un_ps (a, b);\n }\n \n-int test6 (v2sf a, v2sf b)\n+NOMIPS16 int test6 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_un_ps (a, b);\n }\n \n-int test7 (v2sf a, v2sf b)\n+NOMIPS16 int test7 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_un_ps (a, b);\n }\n \n-int test8 (v2sf a, v2sf b)\n+NOMIPS16 int test8 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_eq_ps (a, b);\n }\n \n-int test9 (v2sf a, v2sf b)\n+NOMIPS16 int test9 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_eq_ps (a, b);\n }\n \n-int test10 (v2sf a, v2sf b)\n+NOMIPS16 int test10 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_eq_ps (a, b);\n }\n \n-int test11 (v2sf a, v2sf b)\n+NOMIPS16 int test11 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_eq_ps (a, b);\n }\n \n-int test12 (v2sf a, v2sf b)\n+NOMIPS16 int test12 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_ueq_ps (a, b);\n }\n \n-int test13 (v2sf a, v2sf b)\n+NOMIPS16 int test13 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_ueq_ps (a, b);\n }\n \n-int test14 (v2sf a, v2sf b)\n+NOMIPS16 int test14 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_ueq_ps (a, b);\n }\n \n-int test15 (v2sf a, v2sf b)\n+NOMIPS16 int test15 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_ueq_ps (a, b);\n }\n \n-int test16 (v2sf a, v2sf b)\n+NOMIPS16 int test16 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_olt_ps (a, b);\n }\n \n-int test17 (v2sf a, v2sf b)\n+NOMIPS16 int test17 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_olt_ps (a, b);\n }\n \n-int test18 (v2sf a, v2sf b)\n+NOMIPS16 int test18 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_olt_ps (a, b);\n }\n \n-int test19 (v2sf a, v2sf b)\n+NOMIPS16 int test19 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_olt_ps (a, b);\n }\n \n-int test20 (v2sf a, v2sf b)\n+NOMIPS16 int test20 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_ult_ps (a, b);\n }\n \n-int test21 (v2sf a, v2sf b)\n+NOMIPS16 int test21 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_ult_ps (a, b);\n }\n \n-int test22 (v2sf a, v2sf b)\n+NOMIPS16 int test22 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_ult_ps (a, b);\n }\n \n-int test23 (v2sf a, v2sf b)\n+NOMIPS16 int test23 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_ult_ps (a, b);\n }\n \n-int test24 (v2sf a, v2sf b)\n+NOMIPS16 int test24 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_ole_ps (a, b);\n }\n \n-int test25 (v2sf a, v2sf b)\n+NOMIPS16 int test25 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_ole_ps (a, b);\n }\n \n-int test26 (v2sf a, v2sf b)\n+NOMIPS16 int test26 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_ole_ps (a, b);\n }\n \n-int test27 (v2sf a, v2sf b)\n+NOMIPS16 int test27 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_ole_ps (a, b);\n }\n \n-int test28 (v2sf a, v2sf b)\n+NOMIPS16 int test28 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_ule_ps (a, b);\n }\n \n-int test29 (v2sf a, v2sf b)\n+NOMIPS16 int test29 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_ule_ps (a, b);\n }\n \n-int test30 (v2sf a, v2sf b)\n+NOMIPS16 int test30 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_ule_ps (a, b);\n }\n \n-int test31 (v2sf a, v2sf b)\n+NOMIPS16 int test31 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_ule_ps (a, b);\n }\n \n-int test32 (v2sf a, v2sf b)\n+NOMIPS16 int test32 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_sf_ps (a, b);\n }\n \n-int test33 (v2sf a, v2sf b)\n+NOMIPS16 int test33 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_sf_ps (a, b);\n }\n \n-int test34 (v2sf a, v2sf b)\n+NOMIPS16 int test34 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_sf_ps (a, b);\n }\n \n-int test35 (v2sf a, v2sf b)\n+NOMIPS16 int test35 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_sf_ps (a, b);\n }\n \n-int test36 (v2sf a, v2sf b)\n+NOMIPS16 int test36 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_ngle_ps (a, b);\n }\n \n-int test37 (v2sf a, v2sf b)\n+NOMIPS16 int test37 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_ngle_ps (a, b);\n }\n \n-int test38 (v2sf a, v2sf b)\n+NOMIPS16 int test38 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_ngle_ps (a, b);\n }\n \n-int test39 (v2sf a, v2sf b)\n+NOMIPS16 int test39 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_ngle_ps (a, b);\n }\n \n-int test40 (v2sf a, v2sf b)\n+NOMIPS16 int test40 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_seq_ps (a, b);\n }\n \n-int test41 (v2sf a, v2sf b)\n+NOMIPS16 int test41 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_seq_ps (a, b);\n }\n \n-int test42 (v2sf a, v2sf b)\n+NOMIPS16 int test42 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_seq_ps (a, b);\n }\n \n-int test43 (v2sf a, v2sf b)\n+NOMIPS16 int test43 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_seq_ps (a, b);\n }\n \n-int test44 (v2sf a, v2sf b)\n+NOMIPS16 int test44 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_ngl_ps (a, b);\n }\n \n-int test45 (v2sf a, v2sf b)\n+NOMIPS16 int test45 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_ngl_ps (a, b);\n }\n \n-int test46 (v2sf a, v2sf b)\n+NOMIPS16 int test46 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_ngl_ps (a, b);\n }\n \n-int test47 (v2sf a, v2sf b)\n+NOMIPS16 int test47 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_ngl_ps (a, b);\n }\n \n-int test48 (v2sf a, v2sf b)\n+NOMIPS16 int test48 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_lt_ps (a, b);\n }\n \n-int test49 (v2sf a, v2sf b)\n+NOMIPS16 int test49 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_lt_ps (a, b);\n }\n \n-int test50 (v2sf a, v2sf b)\n+NOMIPS16 int test50 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_lt_ps (a, b);\n }\n \n-int test51 (v2sf a, v2sf b)\n+NOMIPS16 int test51 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_lt_ps (a, b);\n }\n \n-int test52 (v2sf a, v2sf b)\n+NOMIPS16 int test52 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_nge_ps (a, b);\n }\n \n-int test53 (v2sf a, v2sf b)\n+NOMIPS16 int test53 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_nge_ps (a, b);\n }\n \n-int test54 (v2sf a, v2sf b)\n+NOMIPS16 int test54 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_nge_ps (a, b);\n }\n \n-int test55 (v2sf a, v2sf b)\n+NOMIPS16 int test55 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_nge_ps (a, b);\n }\n \n-int test56 (v2sf a, v2sf b)\n+NOMIPS16 int test56 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_le_ps (a, b);\n }\n \n-int test57 (v2sf a, v2sf b)\n+NOMIPS16 int test57 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_le_ps (a, b);\n }\n \n-int test58 (v2sf a, v2sf b)\n+NOMIPS16 int test58 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_le_ps (a, b);\n }\n \n-int test59 (v2sf a, v2sf b)\n+NOMIPS16 int test59 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_le_ps (a, b);\n }\n \n-int test60 (v2sf a, v2sf b)\n+NOMIPS16 int test60 (v2sf a, v2sf b)\n {\n   return __builtin_mips_any_cabs_ngt_ps (a, b);\n }\n \n-int test61 (v2sf a, v2sf b)\n+NOMIPS16 int test61 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_cabs_ngt_ps (a, b);\n }\n \n-int test62 (v2sf a, v2sf b)\n+NOMIPS16 int test62 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_cabs_ngt_ps (a, b);\n }\n \n-int test63 (v2sf a, v2sf b)\n+NOMIPS16 int test63 (v2sf a, v2sf b)\n {\n   return __builtin_mips_all_cabs_ngt_ps (a, b);\n }"}, {"sha": "058ff2c3c8ee00d0f2ab44782fb44384750dcd2e", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-4.c", "status": "modified", "additions": 65, "deletions": 65, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-4.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,42 +7,42 @@\n \n typedef float v2sf __attribute__ ((vector_size(8)));\n \n-int test0 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test1 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test2 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test3 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test4 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test5 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test6 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test7 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test8 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test9 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test10 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test11 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test12 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test13 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test14 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test15 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test16 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test17 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test18 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test19 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test20 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test21 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test22 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test23 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test24 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test25 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test26 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test27 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test28 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test29 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test30 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test31 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test0 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test1 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test2 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test3 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test4 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test5 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test6 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test7 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test8 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test9 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test10 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test11 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test12 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test13 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test14 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test15 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test16 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test17 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test18 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test19 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test20 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test21 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test22 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test23 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test24 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test25 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test26 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test27 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test28 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test29 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test30 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test31 (v2sf a, v2sf b, v2sf c, v2sf d);\n \n float qnan = 1.0f/0.0f - 1.0f/0.0f;\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   v2sf a, b, c, d;\n   int i, j;\n@@ -429,162 +429,162 @@ int main ()\n   exit (0);\n }\n \n-int test0 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test0 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_f_4s (a, b, c, d);\n }\n \n-int test1 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test1 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_f_4s (a, b, c, d);\n }\n \n-int test2 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test2 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_un_4s (a, b, c, d);\n }\n \n-int test3 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test3 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_un_4s (a, b, c, d);\n }\n \n-int test4 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test4 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_eq_4s (a, b, c, d);\n }\n \n-int test5 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test5 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_eq_4s (a, b, c, d);\n }\n \n-int test6 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test6 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_ueq_4s (a, b, c, d);\n }\n \n-int test7 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test7 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_ueq_4s (a, b, c, d);\n }\n \n-int test8 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test8 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_olt_4s (a, b, c, d);\n }\n \n-int test9 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test9 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_olt_4s (a, b, c, d);\n }\n \n-int test10 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test10 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_ult_4s (a, b, c, d);\n }\n \n-int test11 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test11 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_ult_4s (a, b, c, d);\n }\n \n-int test12 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test12 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_ole_4s (a, b, c, d);\n }\n \n-int test13 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test13 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_ole_4s (a, b, c, d);\n }\n \n-int test14 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test14 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_ule_4s (a, b, c, d);\n }\n \n-int test15 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test15 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_ule_4s (a, b, c, d);\n }\n \n-int test16 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test16 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_sf_4s (a, b, c, d);\n }\n \n-int test17 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test17 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_sf_4s (a, b, c, d);\n }\n \n-int test18 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test18 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_ngle_4s (a, b, c, d);\n }\n \n-int test19 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test19 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_ngle_4s (a, b, c, d);\n }\n \n-int test20 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test20 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_seq_4s (a, b, c, d);\n }\n \n-int test21 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test21 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_seq_4s (a, b, c, d);\n }\n \n-int test22 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test22 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_ngl_4s (a, b, c, d);\n }\n \n-int test23 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test23 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_ngl_4s (a, b, c, d);\n }\n \n-int test24 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test24 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_lt_4s (a, b, c, d);\n }\n \n-int test25 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test25 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_lt_4s (a, b, c, d);\n }\n \n-int test26 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test26 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_nge_4s (a, b, c, d);\n }\n \n-int test27 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test27 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_nge_4s (a, b, c, d);\n }\n \n-int test28 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test28 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_le_4s (a, b, c, d);\n }\n \n-int test29 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test29 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_le_4s (a, b, c, d);\n }\n \n-int test30 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test30 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_c_ngt_4s (a, b, c, d);\n }\n \n-int test31 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test31 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_c_ngt_4s (a, b, c, d);\n }"}, {"sha": "a98e579e73195ad29eafc1349a3afa1d74f2e84f", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-5.c", "status": "modified", "additions": 65, "deletions": 65, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-5.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,42 +7,42 @@\n \n typedef float v2sf __attribute__ ((vector_size(8)));\n \n-int test0 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test1 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test2 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test3 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test4 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test5 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test6 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test7 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test8 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test9 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test10 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test11 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test12 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test13 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test14 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test15 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test16 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test17 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test18 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test19 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test20 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test21 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test22 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test23 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test24 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test25 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test26 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test27 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test28 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test29 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test30 (v2sf a, v2sf b, v2sf c, v2sf d);\n-int test31 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test0 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test1 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test2 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test3 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test4 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test5 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test6 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test7 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test8 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test9 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test10 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test11 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test12 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test13 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test14 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test15 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test16 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test17 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test18 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test19 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test20 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test21 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test22 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test23 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test24 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test25 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test26 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test27 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test28 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test29 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test30 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 int test31 (v2sf a, v2sf b, v2sf c, v2sf d);\n \n float qnan = 1.0f/0.0f - 1.0f/0.0f;\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   v2sf a, b, c, d;\n   int i, j;\n@@ -429,162 +429,162 @@ int main ()\n   exit (0);\n }\n \n-int test0 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test0 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_f_4s (a, b, c, d);\n }\n \n-int test1 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test1 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_f_4s (a, b, c, d);\n }\n \n-int test2 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test2 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_un_4s (a, b, c, d);\n }\n \n-int test3 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test3 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_un_4s (a, b, c, d);\n }\n \n-int test4 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test4 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_eq_4s (a, b, c, d);\n }\n \n-int test5 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test5 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_eq_4s (a, b, c, d);\n }\n \n-int test6 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test6 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_ueq_4s (a, b, c, d);\n }\n \n-int test7 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test7 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_ueq_4s (a, b, c, d);\n }\n \n-int test8 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test8 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_olt_4s (a, b, c, d);\n }\n \n-int test9 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test9 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_olt_4s (a, b, c, d);\n }\n \n-int test10 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test10 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_ult_4s (a, b, c, d);\n }\n \n-int test11 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test11 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_ult_4s (a, b, c, d);\n }\n \n-int test12 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test12 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_ole_4s (a, b, c, d);\n }\n \n-int test13 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test13 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_ole_4s (a, b, c, d);\n }\n \n-int test14 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test14 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_ule_4s (a, b, c, d);\n }\n \n-int test15 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test15 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_ule_4s (a, b, c, d);\n }\n \n-int test16 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test16 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_sf_4s (a, b, c, d);\n }\n \n-int test17 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test17 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_sf_4s (a, b, c, d);\n }\n \n-int test18 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test18 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_ngle_4s (a, b, c, d);\n }\n \n-int test19 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test19 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_ngle_4s (a, b, c, d);\n }\n \n-int test20 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test20 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_seq_4s (a, b, c, d);\n }\n \n-int test21 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test21 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_seq_4s (a, b, c, d);\n }\n \n-int test22 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test22 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_ngl_4s (a, b, c, d);\n }\n \n-int test23 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test23 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_ngl_4s (a, b, c, d);\n }\n \n-int test24 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test24 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_lt_4s (a, b, c, d);\n }\n \n-int test25 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test25 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_lt_4s (a, b, c, d);\n }\n \n-int test26 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test26 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_nge_4s (a, b, c, d);\n }\n \n-int test27 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test27 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_nge_4s (a, b, c, d);\n }\n \n-int test28 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test28 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_le_4s (a, b, c, d);\n }\n \n-int test29 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test29 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_le_4s (a, b, c, d);\n }\n \n-int test30 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test30 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_any_cabs_ngt_4s (a, b, c, d);\n }\n \n-int test31 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 int test31 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_all_cabs_ngt_4s (a, b, c, d);\n }"}, {"sha": "30715ea31a37627b2efeb2bbfb2d3b2587a9ba6a", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-6.c", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-6.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,24 +5,24 @@\n #include <stdlib.h>\n #include <stdio.h>\n \n-int test0 (float a, float b);\n-int test1 (float a, float b);\n-int test2 (float a, float b);\n-int test3 (float a, float b);\n-int test4 (float a, float b);\n-int test5 (float a, float b);\n-int test6 (float a, float b);\n-int test7 (float a, float b);\n-int test8 (float a, float b);\n-int test9 (float a, float b);\n-int test10 (float a, float b);\n-int test11 (float a, float b);\n-int test12 (float a, float b);\n-int test13 (float a, float b);\n-int test14 (float a, float b);\n-int test15 (float a, float b);\n+NOMIPS16 int test0 (float a, float b);\n+NOMIPS16 int test1 (float a, float b);\n+NOMIPS16 int test2 (float a, float b);\n+NOMIPS16 int test3 (float a, float b);\n+NOMIPS16 int test4 (float a, float b);\n+NOMIPS16 int test5 (float a, float b);\n+NOMIPS16 int test6 (float a, float b);\n+NOMIPS16 int test7 (float a, float b);\n+NOMIPS16 int test8 (float a, float b);\n+NOMIPS16 int test9 (float a, float b);\n+NOMIPS16 int test10 (float a, float b);\n+NOMIPS16 int test11 (float a, float b);\n+NOMIPS16 int test12 (float a, float b);\n+NOMIPS16 int test13 (float a, float b);\n+NOMIPS16 int test14 (float a, float b);\n+NOMIPS16 int test15 (float a, float b);\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   float a, b;\n   int i;\n@@ -203,82 +203,82 @@ int main ()\n   exit (0);\n }\n \n-int test0 (float a, float b)\n+NOMIPS16 int test0 (float a, float b)\n {\n   return __builtin_mips_cabs_f_s (a, b);\n }\n \n-int test1 (float a, float b)\n+NOMIPS16 int test1 (float a, float b)\n {\n   return __builtin_mips_cabs_un_s (a, b);\n }\n \n-int test2 (float a, float b)\n+NOMIPS16 int test2 (float a, float b)\n {\n   return __builtin_mips_cabs_eq_s (a, b);\n }\n \n-int test3 (float a, float b)\n+NOMIPS16 int test3 (float a, float b)\n {\n   return __builtin_mips_cabs_ueq_s (a, b);\n }\n \n-int test4 (float a, float b)\n+NOMIPS16 int test4 (float a, float b)\n {\n   return __builtin_mips_cabs_olt_s (a, b);\n }\n \n-int test5 (float a, float b)\n+NOMIPS16 int test5 (float a, float b)\n {\n   return __builtin_mips_cabs_ult_s (a, b);\n }\n \n-int test6 (float a, float b)\n+NOMIPS16 int test6 (float a, float b)\n {\n   return __builtin_mips_cabs_ole_s (a, b);\n }\n \n-int test7 (float a, float b)\n+NOMIPS16 int test7 (float a, float b)\n {\n   return __builtin_mips_cabs_ule_s (a, b);\n }\n \n-int test8 (float a, float b)\n+NOMIPS16 int test8 (float a, float b)\n {\n   return __builtin_mips_cabs_sf_s (a, b);\n }\n \n-int test9 (float a, float b)\n+NOMIPS16 int test9 (float a, float b)\n {\n   return __builtin_mips_cabs_ngle_s (a, b);\n }\n \n-int test10 (float a, float b)\n+NOMIPS16 int test10 (float a, float b)\n {\n   return __builtin_mips_cabs_seq_s (a, b);\n }\n \n-int test11 (float a, float b)\n+NOMIPS16 int test11 (float a, float b)\n {\n   return __builtin_mips_cabs_ngl_s (a, b);\n }\n \n-int test12 (float a, float b)\n+NOMIPS16 int test12 (float a, float b)\n {\n   return __builtin_mips_cabs_lt_s (a, b);\n }\n \n-int test13 (float a, float b)\n+NOMIPS16 int test13 (float a, float b)\n {\n   return __builtin_mips_cabs_nge_s (a, b);\n }\n \n-int test14 (float a, float b)\n+NOMIPS16 int test14 (float a, float b)\n {\n   return __builtin_mips_cabs_le_s (a, b);\n }\n \n-int test15 (float a, float b)\n+NOMIPS16 int test15 (float a, float b)\n {\n   return __builtin_mips_cabs_ngt_s (a, b);\n }"}, {"sha": "0eef933b2ee2534ee6fa144d9f2df0cf7e0dd0c2", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-7.c", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-7.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,24 +5,24 @@\n #include <stdlib.h>\n #include <stdio.h>\n \n-int test0 (double a, double b);\n-int test1 (double a, double b);\n-int test2 (double a, double b);\n-int test3 (double a, double b);\n-int test4 (double a, double b);\n-int test5 (double a, double b);\n-int test6 (double a, double b);\n-int test7 (double a, double b);\n-int test8 (double a, double b);\n-int test9 (double a, double b);\n-int test10 (double a, double b);\n-int test11 (double a, double b);\n-int test12 (double a, double b);\n-int test13 (double a, double b);\n-int test14 (double a, double b);\n-int test15 (double a, double b);\n+NOMIPS16 int test0 (double a, double b);\n+NOMIPS16 int test1 (double a, double b);\n+NOMIPS16 int test2 (double a, double b);\n+NOMIPS16 int test3 (double a, double b);\n+NOMIPS16 int test4 (double a, double b);\n+NOMIPS16 int test5 (double a, double b);\n+NOMIPS16 int test6 (double a, double b);\n+NOMIPS16 int test7 (double a, double b);\n+NOMIPS16 int test8 (double a, double b);\n+NOMIPS16 int test9 (double a, double b);\n+NOMIPS16 int test10 (double a, double b);\n+NOMIPS16 int test11 (double a, double b);\n+NOMIPS16 int test12 (double a, double b);\n+NOMIPS16 int test13 (double a, double b);\n+NOMIPS16 int test14 (double a, double b);\n+NOMIPS16 int test15 (double a, double b);\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   double a, b;\n   int i;\n@@ -203,82 +203,82 @@ int main ()\n   exit (0);\n }\n \n-int test0 (double a, double b)\n+NOMIPS16 int test0 (double a, double b)\n {\n   return __builtin_mips_cabs_f_d (a, b);\n }\n \n-int test1 (double a, double b)\n+NOMIPS16 int test1 (double a, double b)\n {\n   return __builtin_mips_cabs_un_d (a, b);\n }\n \n-int test2 (double a, double b)\n+NOMIPS16 int test2 (double a, double b)\n {\n   return __builtin_mips_cabs_eq_d (a, b);\n }\n \n-int test3 (double a, double b)\n+NOMIPS16 int test3 (double a, double b)\n {\n   return __builtin_mips_cabs_ueq_d (a, b);\n }\n \n-int test4 (double a, double b)\n+NOMIPS16 int test4 (double a, double b)\n {\n   return __builtin_mips_cabs_olt_d (a, b);\n }\n \n-int test5 (double a, double b)\n+NOMIPS16 int test5 (double a, double b)\n {\n   return __builtin_mips_cabs_ult_d (a, b);\n }\n \n-int test6 (double a, double b)\n+NOMIPS16 int test6 (double a, double b)\n {\n   return __builtin_mips_cabs_ole_d (a, b);\n }\n \n-int test7 (double a, double b)\n+NOMIPS16 int test7 (double a, double b)\n {\n   return __builtin_mips_cabs_ule_d (a, b);\n }\n \n-int test8 (double a, double b)\n+NOMIPS16 int test8 (double a, double b)\n {\n   return __builtin_mips_cabs_sf_d (a, b);\n }\n \n-int test9 (double a, double b)\n+NOMIPS16 int test9 (double a, double b)\n {\n   return __builtin_mips_cabs_ngle_d (a, b);\n }\n \n-int test10 (double a, double b)\n+NOMIPS16 int test10 (double a, double b)\n {\n   return __builtin_mips_cabs_seq_d (a, b);\n }\n \n-int test11 (double a, double b)\n+NOMIPS16 int test11 (double a, double b)\n {\n   return __builtin_mips_cabs_ngl_d (a, b);\n }\n \n-int test12 (double a, double b)\n+NOMIPS16 int test12 (double a, double b)\n {\n   return __builtin_mips_cabs_lt_d (a, b);\n }\n \n-int test13 (double a, double b)\n+NOMIPS16 int test13 (double a, double b)\n {\n   return __builtin_mips_cabs_nge_d (a, b);\n }\n \n-int test14 (double a, double b)\n+NOMIPS16 int test14 (double a, double b)\n {\n   return __builtin_mips_cabs_le_d (a, b);\n }\n \n-int test15 (double a, double b)\n+NOMIPS16 int test15 (double a, double b)\n {\n   return __builtin_mips_cabs_ngt_d (a, b);\n }"}, {"sha": "042a73066b13342a1138ca08573b08639ec840f0", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-8.c", "status": "modified", "additions": 65, "deletions": 65, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-8.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,42 +7,42 @@\n \n typedef float v2sf __attribute__((vector_size(8)));\n \n-v2sf test0 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test1 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test2 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test3 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test4 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test5 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test6 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test7 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test8 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test9 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test10 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test11 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test12 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test13 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test14 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test15 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test16 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test17 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test18 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test19 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test20 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test21 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test22 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test23 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test24 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test25 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test26 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test27 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test28 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test29 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test30 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test31 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test0 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test1 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test2 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test3 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test4 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test5 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test6 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test7 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test8 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test9 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test10 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test11 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test12 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test13 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test14 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test15 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test16 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test17 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test18 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test19 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test20 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test21 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test22 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test23 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test24 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test25 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test26 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test27 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test28 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test29 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test30 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test31 (v2sf a, v2sf b, v2sf c, v2sf d);\n \n float qnan = 1.0f/0.0f - 1.0f/0.0f;\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   v2sf a, b, c, d, e, f;\n \n@@ -469,162 +469,162 @@ int main ()\n   exit (0);\n }\n \n-v2sf test0 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test0 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_f_ps (a, b, c, d);\n }\n \n-v2sf test1 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test1 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_f_ps (a, b, c, d);\n }\n \n-v2sf test2 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test2 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_un_ps (a, b, c, d);\n }\n \n-v2sf test3 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test3 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_un_ps (a, b, c, d);\n }\n \n-v2sf test4 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test4 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_eq_ps (a, b, c, d);\n }\n \n-v2sf test5 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test5 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_eq_ps (a, b, c, d);\n }\n \n-v2sf test6 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test6 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_ueq_ps (a, b, c, d);\n }\n \n-v2sf test7 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test7 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_ueq_ps (a, b, c, d);\n }\n \n-v2sf test8 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test8 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_olt_ps (a, b, c, d);\n }\n \n-v2sf test9 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test9 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_olt_ps (a, b, c, d);\n }\n \n-v2sf test10 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test10 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_ult_ps (a, b, c, d);\n }\n \n-v2sf test11 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test11 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_ult_ps (a, b, c, d);\n }\n \n-v2sf test12 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test12 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_ole_ps (a, b, c, d);\n }\n \n-v2sf test13 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test13 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_ole_ps (a, b, c, d);\n }\n \n-v2sf test14 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test14 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_ule_ps (a, b, c, d);\n }\n \n-v2sf test15 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test15 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_ule_ps (a, b, c, d);\n }\n \n-v2sf test16 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test16 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_sf_ps (a, b, c, d);\n }\n \n-v2sf test17 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test17 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_sf_ps (a, b, c, d);\n }\n \n-v2sf test18 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test18 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_ngle_ps (a, b, c, d);\n }\n \n-v2sf test19 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test19 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_ngle_ps (a, b, c, d);\n }\n \n-v2sf test20 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test20 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_seq_ps (a, b, c, d);\n }\n \n-v2sf test21 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test21 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_seq_ps (a, b, c, d);\n }\n \n-v2sf test22 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test22 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_ngl_ps (a, b, c, d);\n }\n \n-v2sf test23 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test23 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_ngl_ps (a, b, c, d);\n }\n \n-v2sf test24 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test24 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_lt_ps (a, b, c, d);\n }\n \n-v2sf test25 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test25 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_lt_ps (a, b, c, d);\n }\n \n-v2sf test26 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test26 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_nge_ps (a, b, c, d);\n }\n \n-v2sf test27 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test27 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_nge_ps (a, b, c, d);\n }\n \n-v2sf test28 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test28 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_le_ps (a, b, c, d);\n }\n \n-v2sf test29 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test29 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_le_ps (a, b, c, d);\n }\n \n-v2sf test30 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test30 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movt_cabs_ngt_ps (a, b, c, d);\n }\n \n-v2sf test31 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test31 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return  __builtin_mips_movf_cabs_ngt_ps (a, b, c, d);\n }"}, {"sha": "fdfedcbeae31a10f7ce0b905b6e0553c4ee3c7f6", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-9.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-9.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -19,9 +19,9 @@ float e[4]; /* Result for matrix_multiply3() */\n float f[4]; /* Result for matrix_multiply4() */\n \n void matrix_multiply1();\n-void matrix_multiply2();\n-void matrix_multiply3();\n-void matrix_multiply4();\n+NOMIPS16 void matrix_multiply2();\n+NOMIPS16 void matrix_multiply3();\n+NOMIPS16 void matrix_multiply4();\n \n int main ()\n {\n@@ -65,7 +65,7 @@ void matrix_multiply1()\n    }\n }\n \n-void matrix_multiply2()\n+NOMIPS16 void matrix_multiply2()\n {\n   int i, j;\n   v2sf m1, m2;\n@@ -91,7 +91,7 @@ void matrix_multiply2()\n    }\n }\n \n-void matrix_multiply3()\n+NOMIPS16 void matrix_multiply3()\n {\n   int i;\n   v2sf m1, m2, n1, n2;\n@@ -114,7 +114,7 @@ void matrix_multiply3()\n    }\n }\n \n-void matrix_multiply4()\n+NOMIPS16 void matrix_multiply4()\n {\n   v2sf m1, m2;\n   v2sf n1, n2, n3, n4, n5, n6, n7, n8;"}, {"sha": "39fb996615a25b39c2b5215cb35d78c218ffd212", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -117,7 +117,7 @@ v2sf cond_move4 (v2sf a, v2sf b, double i)\n     return b;\n }\n \n-int main()\n+NOMIPS16 int main()\n {\n   v2sf a, b, c, d, e, f;\n   float f1, f2;"}, {"sha": "69e8b2fc3eb01f5845093aacb0b5d43700bee19a", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,7 +7,7 @@\n \n typedef float v2sf __attribute__ ((vector_size(8)));\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   int little_endian;\n   v2sf a, b, c, d;"}, {"sha": "5894186dd261f017a69b123a10719ed2024ce750", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-3.c", "status": "modified", "additions": 65, "deletions": 65, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-3.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,42 +7,42 @@\n \n typedef float v2sf __attribute__((vector_size(8)));\n \n-v2sf test0 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test1 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test2 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test3 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test4 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test5 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test6 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test7 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test8 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test9 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test10 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test11 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test12 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test13 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test14 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test15 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test16 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test17 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test18 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test19 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test20 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test21 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test22 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test23 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test24 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test25 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test26 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test27 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test28 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test29 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test30 (v2sf a, v2sf b, v2sf c, v2sf d);\n-v2sf test31 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test0 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test1 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test2 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test3 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test4 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test5 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test6 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test7 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test8 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test9 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test10 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test11 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test12 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test13 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test14 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test15 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test16 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test17 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test18 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test19 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test20 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test21 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test22 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test23 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test24 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test25 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test26 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test27 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test28 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test29 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test30 (v2sf a, v2sf b, v2sf c, v2sf d);\n+NOMIPS16 v2sf test31 (v2sf a, v2sf b, v2sf c, v2sf d);\n \n float qnan = 1.0f/0.0f - 1.0f/0.0f;\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   float f1;\n   v2sf a, b, c, d, e, f;\n@@ -576,162 +576,162 @@ int main ()\n   exit (0);\n }\n \n-v2sf test0 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test0 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_f_ps (a, b, c, d);\n }\n \n-v2sf test1 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test1 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_f_ps (a, b, c, d);\n }\n \n-v2sf test2 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test2 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_un_ps (a, b, c, d);\n }\n \n-v2sf test3 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test3 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_un_ps (a, b, c, d);\n }\n \n-v2sf test4 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test4 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_eq_ps (a, b, c, d);\n }\n \n-v2sf test5 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test5 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_eq_ps (a, b, c, d);\n }\n \n-v2sf test6 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test6 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_ueq_ps (a, b, c, d);\n }\n \n-v2sf test7 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test7 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_ueq_ps (a, b, c, d);\n }\n \n-v2sf test8 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test8 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_olt_ps (a, b, c, d);\n }\n \n-v2sf test9 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test9 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_olt_ps (a, b, c, d);\n }\n \n-v2sf test10 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test10 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_ult_ps (a, b, c, d);\n }\n \n-v2sf test11 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test11 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_ult_ps (a, b, c, d);\n }\n \n-v2sf test12 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test12 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_ole_ps (a, b, c, d);\n }\n \n-v2sf test13 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test13 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_ole_ps (a, b, c, d);\n }\n \n-v2sf test14 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test14 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_ule_ps (a, b, c, d);\n }\n \n-v2sf test15 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test15 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_ule_ps (a, b, c, d);\n }\n \n-v2sf test16 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test16 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_sf_ps (a, b, c, d);\n }\n \n-v2sf test17 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test17 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_sf_ps (a, b, c, d);\n }\n \n-v2sf test18 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test18 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_ngle_ps (a, b, c, d);\n }\n \n-v2sf test19 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test19 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_ngle_ps (a, b, c, d);\n }\n \n-v2sf test20 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test20 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_seq_ps (a, b, c, d);\n }\n \n-v2sf test21 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test21 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_seq_ps (a, b, c, d);\n }\n \n-v2sf test22 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test22 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_ngl_ps (a, b, c, d);\n }\n \n-v2sf test23 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test23 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_ngl_ps (a, b, c, d);\n }\n \n-v2sf test24 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test24 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_lt_ps (a, b, c, d);\n }\n \n-v2sf test25 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test25 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_lt_ps (a, b, c, d);\n }\n \n-v2sf test26 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test26 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_nge_ps (a, b, c, d);\n }\n \n-v2sf test27 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test27 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_nge_ps (a, b, c, d);\n }\n \n-v2sf test28 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test28 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_le_ps (a, b, c, d);\n }\n \n-v2sf test29 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test29 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_le_ps (a, b, c, d);\n }\n \n-v2sf test30 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test30 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movt_c_ngt_ps (a, b, c, d);\n }\n \n-v2sf test31 (v2sf a, v2sf b, v2sf c, v2sf d)\n+NOMIPS16 v2sf test31 (v2sf a, v2sf b, v2sf c, v2sf d)\n {\n   return __builtin_mips_movf_c_ngt_ps (a, b, c, d);\n }"}, {"sha": "1302db3941c1c5cdb81e3b98812a0177f441668e", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-4.c", "status": "modified", "additions": 65, "deletions": 65, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-4.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -7,42 +7,42 @@\n \n typedef float v2sf __attribute__((vector_size(8)));\n \n-int test0 (v2sf a, v2sf b);\n-int test1 (v2sf a, v2sf b);\n-int test2 (v2sf a, v2sf b);\n-int test3 (v2sf a, v2sf b);\n-int test4 (v2sf a, v2sf b);\n-int test5 (v2sf a, v2sf b);\n-int test6 (v2sf a, v2sf b);\n-int test7 (v2sf a, v2sf b);\n-int test8 (v2sf a, v2sf b);\n-int test9 (v2sf a, v2sf b);\n-int test10 (v2sf a, v2sf b);\n-int test11 (v2sf a, v2sf b);\n-int test12 (v2sf a, v2sf b);\n-int test13 (v2sf a, v2sf b);\n-int test14 (v2sf a, v2sf b);\n-int test15 (v2sf a, v2sf b);\n-int test16 (v2sf a, v2sf b);\n-int test17 (v2sf a, v2sf b);\n-int test18 (v2sf a, v2sf b);\n-int test19 (v2sf a, v2sf b);\n-int test20 (v2sf a, v2sf b);\n-int test21 (v2sf a, v2sf b);\n-int test22 (v2sf a, v2sf b);\n-int test23 (v2sf a, v2sf b);\n-int test24 (v2sf a, v2sf b);\n-int test25 (v2sf a, v2sf b);\n-int test26 (v2sf a, v2sf b);\n-int test27 (v2sf a, v2sf b);\n-int test28 (v2sf a, v2sf b);\n-int test29 (v2sf a, v2sf b);\n-int test30 (v2sf a, v2sf b);\n-int test31 (v2sf a, v2sf b);\n+NOMIPS16 int test0 (v2sf a, v2sf b);\n+NOMIPS16 int test1 (v2sf a, v2sf b);\n+NOMIPS16 int test2 (v2sf a, v2sf b);\n+NOMIPS16 int test3 (v2sf a, v2sf b);\n+NOMIPS16 int test4 (v2sf a, v2sf b);\n+NOMIPS16 int test5 (v2sf a, v2sf b);\n+NOMIPS16 int test6 (v2sf a, v2sf b);\n+NOMIPS16 int test7 (v2sf a, v2sf b);\n+NOMIPS16 int test8 (v2sf a, v2sf b);\n+NOMIPS16 int test9 (v2sf a, v2sf b);\n+NOMIPS16 int test10 (v2sf a, v2sf b);\n+NOMIPS16 int test11 (v2sf a, v2sf b);\n+NOMIPS16 int test12 (v2sf a, v2sf b);\n+NOMIPS16 int test13 (v2sf a, v2sf b);\n+NOMIPS16 int test14 (v2sf a, v2sf b);\n+NOMIPS16 int test15 (v2sf a, v2sf b);\n+NOMIPS16 int test16 (v2sf a, v2sf b);\n+NOMIPS16 int test17 (v2sf a, v2sf b);\n+NOMIPS16 int test18 (v2sf a, v2sf b);\n+NOMIPS16 int test19 (v2sf a, v2sf b);\n+NOMIPS16 int test20 (v2sf a, v2sf b);\n+NOMIPS16 int test21 (v2sf a, v2sf b);\n+NOMIPS16 int test22 (v2sf a, v2sf b);\n+NOMIPS16 int test23 (v2sf a, v2sf b);\n+NOMIPS16 int test24 (v2sf a, v2sf b);\n+NOMIPS16 int test25 (v2sf a, v2sf b);\n+NOMIPS16 int test26 (v2sf a, v2sf b);\n+NOMIPS16 int test27 (v2sf a, v2sf b);\n+NOMIPS16 int test28 (v2sf a, v2sf b);\n+NOMIPS16 int test29 (v2sf a, v2sf b);\n+NOMIPS16 int test30 (v2sf a, v2sf b);\n+NOMIPS16 int test31 (v2sf a, v2sf b);\n \n float qnan = 1.0f/0.0f - 1.0f/0.0f;\n \n-int main()\n+NOMIPS16 int main()\n {\n   union { long long ll; int i[2]; } endianness_test;\n   int little_endian;\n@@ -422,162 +422,162 @@ int main()\n   exit (0);\n }\n \n-int test0 (v2sf a, v2sf b)\n+NOMIPS16 int test0 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_f_ps (a, b);\n }\n \n-int test1 (v2sf a, v2sf b)\n+NOMIPS16 int test1 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_f_ps (a, b);\n }\n \n-int test2 (v2sf a, v2sf b)\n+NOMIPS16 int test2 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_un_ps (a, b);\n }\n \n-int test3 (v2sf a, v2sf b)\n+NOMIPS16 int test3 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_un_ps (a, b);\n }\n \n-int test4 (v2sf a, v2sf b)\n+NOMIPS16 int test4 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_eq_ps (a, b);\n }\n \n-int test5 (v2sf a, v2sf b)\n+NOMIPS16 int test5 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_eq_ps (a, b);\n }\n \n-int test6 (v2sf a, v2sf b)\n+NOMIPS16 int test6 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_ueq_ps (a, b);\n }\n \n-int test7 (v2sf a, v2sf b)\n+NOMIPS16 int test7 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_ueq_ps (a, b);\n }\n \n-int test8 (v2sf a, v2sf b)\n+NOMIPS16 int test8 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_olt_ps (a, b);\n }\n \n-int test9 (v2sf a, v2sf b)\n+NOMIPS16 int test9 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_olt_ps (a, b);\n }\n \n-int test10 (v2sf a, v2sf b)\n+NOMIPS16 int test10 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_ult_ps (a, b);\n }\n \n-int test11 (v2sf a, v2sf b)\n+NOMIPS16 int test11 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_ult_ps (a, b);\n }\n \n-int test12 (v2sf a, v2sf b)\n+NOMIPS16 int test12 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_ole_ps (a, b);\n }\n \n-int test13 (v2sf a, v2sf b)\n+NOMIPS16 int test13 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_ole_ps (a, b);\n }\n \n-int test14 (v2sf a, v2sf b)\n+NOMIPS16 int test14 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_ule_ps (a, b);\n }\n \n-int test15 (v2sf a, v2sf b)\n+NOMIPS16 int test15 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_ule_ps (a, b);\n }\n \n-int test16 (v2sf a, v2sf b)\n+NOMIPS16 int test16 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_sf_ps (a, b);\n }\n \n-int test17 (v2sf a, v2sf b)\n+NOMIPS16 int test17 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_sf_ps (a, b);\n }\n \n-int test18 (v2sf a, v2sf b)\n+NOMIPS16 int test18 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_ngle_ps (a, b);\n }\n \n-int test19 (v2sf a, v2sf b)\n+NOMIPS16 int test19 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_ngle_ps (a, b);\n }\n \n-int test20 (v2sf a, v2sf b)\n+NOMIPS16 int test20 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_seq_ps (a, b);\n }\n \n-int test21 (v2sf a, v2sf b)\n+NOMIPS16 int test21 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_seq_ps (a, b);\n }\n \n-int test22 (v2sf a, v2sf b)\n+NOMIPS16 int test22 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_ngl_ps (a, b);\n }\n \n-int test23 (v2sf a, v2sf b)\n+NOMIPS16 int test23 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_ngl_ps (a, b);\n }\n \n-int test24 (v2sf a, v2sf b)\n+NOMIPS16 int test24 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_lt_ps (a, b);\n }\n \n-int test25 (v2sf a, v2sf b)\n+NOMIPS16 int test25 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_lt_ps (a, b);\n }\n \n-int test26 (v2sf a, v2sf b)\n+NOMIPS16 int test26 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_nge_ps (a, b);\n }\n \n-int test27 (v2sf a, v2sf b)\n+NOMIPS16 int test27 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_nge_ps (a, b);\n }\n \n-int test28 (v2sf a, v2sf b)\n+NOMIPS16 int test28 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_le_ps (a, b);\n }\n \n-int test29 (v2sf a, v2sf b)\n+NOMIPS16 int test29 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_le_ps (a, b);\n }\n \n-int test30 (v2sf a, v2sf b)\n+NOMIPS16 int test30 (v2sf a, v2sf b)\n {\n   return __builtin_mips_upper_c_ngt_ps (a, b);\n }\n \n-int test31 (v2sf a, v2sf b)\n+NOMIPS16 int test31 (v2sf a, v2sf b)\n {\n   return __builtin_mips_lower_c_ngt_ps (a, b);\n }"}, {"sha": "9e6de0ab81b3d107d692dba7819bff99c34bbd15", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-5.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -3,7 +3,7 @@\n \n extern float a[], b[], c[];\n \n-void\n+NOMIPS16 void\n foo (void)\n {\n   int i;"}, {"sha": "4a6cb60d850df4b5fe0c0b13fcadc87aa0c12bd3", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-6.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -9,7 +9,7 @@\n \n typedef float v2sf __attribute__ ((vector_size(8)));\n \n-int main ()\n+NOMIPS16 int main ()\n {\n   int little_endian;\n   v2sf a, b, c, d;"}, {"sha": "daa227865c99114a340bd0f8d3930914c180d0c6", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-type.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -21,79 +21,79 @@ typedef float v2sf __attribute__ ((vector_size(8)));\n v2sf A = {100, 200};\n \n /* Init from  floats */\n-v2sf init (float a, float b)\n+NOMIPS16 v2sf init (float a, float b)\n {\n   return (v2sf) {a, b};\n }\n \n /* Move between registers */\n-v2sf move (v2sf a)\n+NOMIPS16 v2sf move (v2sf a)\n {\n   return a;\n }\n \n /* Load from memory */\n-v2sf load ()\n+NOMIPS16 v2sf load ()\n {\n   return A;\n }\n \n /* Store to memory */ \n-void store (v2sf a)\n+NOMIPS16 void store (v2sf a)\n {\n   A = a;\n }\n \n /* Add */ \n-v2sf add (v2sf a, v2sf b)\n+NOMIPS16 v2sf add (v2sf a, v2sf b)\n {\n   return a + b;\n }\n \n /* Subtract */ \n-v2sf sub (v2sf a, v2sf b)\n+NOMIPS16 v2sf sub (v2sf a, v2sf b)\n {\n   return a - b;\n }\n \n /* Negate */\n-v2sf neg (v2sf a)\n+NOMIPS16 v2sf neg (v2sf a)\n {\n   return - a;\n }\n \n /* Multiply */ \n-v2sf mul (v2sf a, v2sf b)\n+NOMIPS16 v2sf mul (v2sf a, v2sf b)\n {\n   return a * b;\n }\n \n /* Multiply and add */ \n-v2sf madd (v2sf a, v2sf b, v2sf c)\n+NOMIPS16 v2sf madd (v2sf a, v2sf b, v2sf c)\n {\n   return a * b + c;\n }\n \n /* Multiply and subtract */ \n-v2sf msub (v2sf a, v2sf b, v2sf c)\n+NOMIPS16 v2sf msub (v2sf a, v2sf b, v2sf c)\n {\n   return a * b - c;\n }\n \n /* Negate Multiply and add */ \n-v2sf nmadd (v2sf a, v2sf b, v2sf c)\n+NOMIPS16 v2sf nmadd (v2sf a, v2sf b, v2sf c)\n {\n   return - (a * b + c);\n }\n \n /* Negate Multiply and subtract */ \n-v2sf nmsub (v2sf a, v2sf b, v2sf c)\n+NOMIPS16 v2sf nmsub (v2sf a, v2sf b, v2sf c)\n {\n   return - (a * b - c);\n }\n \n /* Conditional Move */ \n-v2sf cond_move1 (v2sf a, v2sf b, long i)\n+NOMIPS16 v2sf cond_move1 (v2sf a, v2sf b, long i)\n {\n   if (i > 0)\n     return a;\n@@ -102,7 +102,7 @@ v2sf cond_move1 (v2sf a, v2sf b, long i)\n }\n \n /* Conditional Move */ \n-v2sf cond_move2 (v2sf a, v2sf b, int i)\n+NOMIPS16 v2sf cond_move2 (v2sf a, v2sf b, int i)\n {\n   if (i > 0)\n     return a;"}, {"sha": "00fdb5ec23e74c51110dc2d3774f57e43f73ca7e", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -30,7 +30,6 @@ load_lib gcc-dg.exp\n #\n #    $mips_isa:\t\t the ISA level specified by __mips\n #    $mips_arch:\t the architecture specified by _MIPS_ARCH\n-#    $mips_mips16:\t true if MIPS16 mode is selected\n #    $mips_gp64:\t true if 64-bit output is selected\n #    $mips_fp64:\t true if 64-bit FPRs are selected\n #    $mips_float:\t \"hard\" or \"soft\"\n@@ -44,7 +43,6 @@ load_lib gcc-dg.exp\n proc setup_mips_tests {} {\n     global mips_isa\n     global mips_arch\n-    global mips_mips16\n     global mips_gp64\n     global mips_fp64\n     global mips_float\n@@ -64,9 +62,6 @@ proc setup_mips_tests {} {\n     puts $f {\n \tint isa = __mips;\n \tconst char *arch = _MIPS_ARCH;\n-\t#ifdef __mips16\n-\tint mips16 = 1;\n-\t#endif\n \t#ifdef __mips64\n \tint gp64 = 1;\n \t#endif\n@@ -85,12 +80,11 @@ proc setup_mips_tests {} {\n \n     regexp {isa = ([^;]*)} $output dummy mips_isa\n     regexp {arch = \"([^\"]*)} $output dummy mips_arch\n-    set mips_mips16 [regexp {mips16 = 1} $output]\n     set mips_gp64 [regexp {gp64 = 1} $output]\n     set mips_fp64 [regexp {fp64 = 1} $output]\n     regexp {float = \"([^\"]*)} $output dummy mips_float\n \n-    set mips_forced_isa [regexp -- {(-mips|-march)} $compiler_flags]\n+    set mips_forced_isa [regexp -- {(-mips[1-5][[:>:]]|-mips32*|-mips64*|-march)} $compiler_flags]\n     set mips_forced_abi [regexp -- {(-mgp|-mfp|-mabi)} $compiler_flags]\n     set mips_forced_float [regexp -- {-m(hard|soft)-float} $compiler_flags]\n     set mips_forced_le [regexp -- {-(EL|mel)[[:>:]]} $compiler_flags]\n@@ -124,8 +118,8 @@ proc is_gp32_flag {flag} {\n #\n #    -march=*\n #    -mips*\n-#\tSelect the target architecture.  Skip the test for MIPS16 targets\n-#\tor if the multilib flags force a different architecture.\n+#\tSelect the target architecture.  Skip the test if the multilib\n+#\tflags force a different architecture.\n #\n #    -msoft-float\n #    -mhard-float\n@@ -153,7 +147,6 @@ proc dg-mips-options {args} {\n \n     global mips_isa\n     global mips_arch\n-    global mips_mips16\n     global mips_gp64\n     global mips_fp64\n     global mips_float\n@@ -196,11 +189,11 @@ proc dg-mips-options {args} {\n \t\tset matches 0\n \t    }\n \t} elseif {[regexp -- {^-march=(.*)} $flag dummy arch]} {\n-\t    if {$mips_mips16 || ($arch != $mips_arch && $mips_forced_isa)} {\n+\t    if {$arch != $mips_arch && $mips_forced_isa} {\n \t\tset matches 0\n \t    }\n \t} elseif {[regexp -- {^-mips(.*)} $flag dummy isa] && $isa != 16} {\n-\t    if {$mips_mips16 || ($isa != $mips_isa && $mips_forced_isa)} {\n+\t    if {$isa != $mips_isa && $mips_forced_isa} {\n \t\tset matches 0\n \t    }\n \t} elseif {[regexp -- {^-m(hard|soft)-float} $flag dummy float]} {"}, {"sha": "f0f3fda403ec1de5045cf7f8da1d3807b05a2122", "filename": "gcc/testsuite/gcc.target/mips/mips32-dsp-type.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-type.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -9,22 +9,22 @@\n typedef char v4qi __attribute__ ((vector_size(4)));\n typedef short v2hi __attribute__ ((vector_size(4)));\n \n-v2hi add_v2hi (v2hi a, v2hi b)\n+NOMIPS16 v2hi add_v2hi (v2hi a, v2hi b)\n {\n   return a + b;\n }\n \n-v4qi add_v4qi (v4qi a, v4qi b)\n+NOMIPS16 v4qi add_v4qi (v4qi a, v4qi b)\n {\n   return a + b;\n }\n \n-v2hi sub_v2hi (v2hi a, v2hi b)\n+NOMIPS16 v2hi sub_v2hi (v2hi a, v2hi b)\n {\n   return a - b;\n }\n \n-v4qi sub_v4qi (v4qi a, v4qi b)\n+NOMIPS16 v4qi sub_v4qi (v4qi a, v4qi b)\n {\n   return a - b;\n }"}, {"sha": "08f18da6ff20acc8695abeda72ad948f57480b56", "filename": "gcc/testsuite/gcc.target/mips/mips32-dsp.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -103,7 +103,7 @@ typedef int q31;\n typedef int i32;\n typedef long long a64;\n \n-void test_MIPS_DSP (void);\n+NOMIPS16 void test_MIPS_DSP (void);\n \n char array[100];\n int little_endian;\n@@ -124,27 +124,27 @@ int main ()\n   exit (0);\n }\n \n-v2q15 add_v2q15 (v2q15 a, v2q15 b)\n+NOMIPS16 v2q15 add_v2q15 (v2q15 a, v2q15 b)\n {\n   return __builtin_mips_addq_ph (a, b);\n }\n \n-v4i8 add_v4i8 (v4i8 a, v4i8 b)\n+NOMIPS16 v4i8 add_v4i8 (v4i8 a, v4i8 b)\n {\n   return __builtin_mips_addu_qb (a, b);\n }\n \n-v2q15 sub_v2q15 (v2q15 a, v2q15 b)\n+NOMIPS16 v2q15 sub_v2q15 (v2q15 a, v2q15 b)\n {\n   return __builtin_mips_subq_ph (a, b);\n }\n \n-v4i8 sub_v4i8 (v4i8 a, v4i8 b)\n+NOMIPS16 v4i8 sub_v4i8 (v4i8 a, v4i8 b)\n {\n   return __builtin_mips_subu_qb (a, b);\n }\n \n-void test_MIPS_DSP ()\n+NOMIPS16 void test_MIPS_DSP ()\n {\n   v4i8 v4i8_a,v4i8_b,v4i8_c,v4i8_r,v4i8_s;\n   v2q15 v2q15_a,v2q15_b,v2q15_c,v2q15_r,v2q15_s;"}, {"sha": "1f216b7937e91d9f833dc6d2bb78830b280f343f", "filename": "gcc/testsuite/gcc.target/mips/movcc-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,13 +5,13 @@\n \n void ext_int (int);\n \n-int\n+NOMIPS16 int\n sub1 (int i, int j, int k)\n {\n   ext_int (k ? i : j);\n }\n \n-int\n+NOMIPS16 int\n sub2 (int i, int j, long l)\n {\n   ext_int (!l ? i : j);"}, {"sha": "bb578099a5b86f790602f2e09b33e92e215adb71", "filename": "gcc/testsuite/gcc.target/mips/movcc-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,13 +5,13 @@\n \n void ext_long (long);\n \n-long\n+NOMIPS16 long\n sub4 (long i, long j, long k)\n {\n   ext_long (k ? i : j);\n }\n \n-long\n+NOMIPS16 long\n sub5 (long i, long j, int k)\n {\n   ext_long (!k ? i : j);"}, {"sha": "c3e0b422a307669b8ac98df639217d1a203ce9a8", "filename": "gcc/testsuite/gcc.target/mips/movcc-3.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-3.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -14,49 +14,49 @@ void ext_long (long);\n void ext_float (float);\n void ext_double (double);\n \n-int\n+NOMIPS16 int\n sub3 (int i, int j, float f)\n {\n   ext_int (f ? i : j);\n }\n \n-long\n+NOMIPS16 long\n sub6 (long i, long j, float f)\n {\n   ext_long (!f ? i : j);\n }\n \n-float\n+NOMIPS16 float\n sub7 (float f, float g, int i)\n {\n   ext_float (i ? f : g);\n }\n \n-float\n+NOMIPS16 float\n sub8 (float f, float g, long l)\n {\n   ext_float (!l ? f : g);\n }\n \n-float\n+NOMIPS16 float\n sub9 (float f, float g, float h)\n {\n   ext_float (h ? f : g);\n }\n \n-double\n+NOMIPS16 double\n suba (double f, double g, int i)\n {\n   ext_double (i ? f : g);\n }\n \n-double\n+NOMIPS16 double\n subb (double f, double g, long l)\n {\n   ext_double (!l ? f : g);\n }\n \n-double\n+NOMIPS16 double\n subc (double f, double g, double h)\n {\n   ext_double (!h ? f : g);"}, {"sha": "ec6bbc5faafd8b3fbe424377bdb3927e690e0903", "filename": "gcc/testsuite/gcc.target/mips/msub-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,13 +2,13 @@\n /* { dg-mips-options \"-O2 -march=vr5400 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsac\\t\\\\\\$0,\" 2 } } */\n \n-long long\n+NOMIPS16 long long\n f1 (int x, int y, long long z)\n {\n   return z - (long long) y * x;\n }\n \n-long long\n+NOMIPS16 long long\n f2 (int x, int y, long long z)\n {\n   long long t = (long long) x * y;"}, {"sha": "09c22e76632b410ca6b65d3aeb2c885b224ff06e", "filename": "gcc/testsuite/gcc.target/mips/msub-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,13 +2,13 @@\n /* { dg-mips-options \"-O2 -march=vr5500 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsub\\t\" 2 } } */\n \n-long long\n+NOMIPS16 long long\n f1 (int x, int y, long long z)\n {\n   return z - (long long) y * x;\n }\n \n-long long\n+NOMIPS16 long long\n f2 (int x, int y, long long z)\n {\n   long long t = (long long) x * y;"}, {"sha": "df08a6304a4ad42dcf2f3a8fc1e67049a1c5e591", "filename": "gcc/testsuite/gcc.target/mips/msub-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-4.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,13 +2,13 @@\n /* { dg-mips-options \"-O2 -mips32r2 -mdspr2 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsub\\t\\\\\\$ac\" 2 } } */\n \n-long long\n+NOMIPS16 long long\n f1 (int x, int y, long long z)\n {\n   return z - (long long) y * x;\n }\n \n-long long\n+NOMIPS16 long long\n f2 (int x, int y, long long z)\n {\n   long long t = (long long) x * y;"}, {"sha": "187cb71c7283816a5bdaa4a89b958fefbc98c23d", "filename": "gcc/testsuite/gcc.target/mips/msubu-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,13 +5,13 @@\n typedef unsigned int ui;\n typedef unsigned long long ull;\n \n-ull\n+NOMIPS16 ull\n f1 (ui x, ui y, ull z)\n {\n   return z - (ull) y * x;\n }\n \n-ull\n+NOMIPS16 ull\n f2 (ui x, ui y, ull z)\n {\n   ull t = (ull) x * y;"}, {"sha": "36cb91bcfa542da237106816e4cf9f8a8fdea131", "filename": "gcc/testsuite/gcc.target/mips/msubu-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,13 +5,13 @@\n typedef unsigned int ui;\n typedef unsigned long long ull;\n \n-ull\n+NOMIPS16 ull\n f1 (ui x, ui y, ull z)\n {\n   return z - (ull) y * x;\n }\n \n-ull\n+NOMIPS16 ull\n f2 (ui x, ui y, ull z)\n {\n   ull t = (ull) x * y;"}, {"sha": "fb655db87308c54775b3f3b81a6cc36dc44cd291", "filename": "gcc/testsuite/gcc.target/mips/msubu-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-4.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,13 +5,13 @@\n typedef unsigned int ui;\n typedef unsigned long long ull;\n \n-ull\n+NOMIPS16 ull\n f1 (ui x, ui y, ull z)\n {\n   return z - (ull) y * x;\n }\n \n-ull\n+NOMIPS16 ull\n f2 (ui x, ui y, ull z)\n {\n   ull t = (ull) x * y;"}, {"sha": "bd3b10ab69cba7fc65d210ab151beb0aa772db0f", "filename": "gcc/testsuite/gcc.target/mips/nmadd-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,25 +5,25 @@\n /* { dg-final { scan-assembler \"nmsub.s\" } } */\n /* { dg-final { scan-assembler \"nmsub.d\" } } */\n \n-float\n+NOMIPS16 float\n sub1 (float f, float g, float h)\n {\n   return -((f * g) + h);\n }\n \n-double\n+NOMIPS16 double\n sub2 (double f, double g, double h)\n {\n   return -((f * g) + h);\n }\n \n-float\n+NOMIPS16 float\n sub3 (float f, float g, float h)\n {\n   return -((f * g) - h);\n }\n \n-double\n+NOMIPS16 double\n sub4 (double f, double g, double h)\n {\n   return -((f * g) - h);"}, {"sha": "cce3710881d773bb4bb80c78f9d987136c7fc20c", "filename": "gcc/testsuite/gcc.target/mips/nmadd-2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -5,25 +5,25 @@\n /* { dg-final { scan-assembler \"nmsub.s\" } } */\n /* { dg-final { scan-assembler \"nmsub.d\" } } */\n \n-float\n+NOMIPS16 float\n sub1 (float f, float g, float h)\n {\n   return -((f * g) + h);\n }\n \n-double\n+NOMIPS16 double\n sub2 (double f, double g, double h)\n {\n   return -((f * g) + h);\n }\n \n-float\n+NOMIPS16 float\n sub3 (float f, float g, float h)\n {\n   return -((f * g) - h);\n }\n \n-double\n+NOMIPS16 double\n sub4 (double f, double g, double h)\n {\n   return -((f * g) - h);"}, {"sha": "885deeff28f66ab8ffdda8ee9e3208915ee3b034", "filename": "gcc/testsuite/gcc.target/mips/rsqrt-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -6,12 +6,12 @@\n extern double sqrt(double);\n extern float sqrtf(float);\n \n-double foo(double x)\n+NOMIPS16 double foo(double x)\n {\n   return 1.0/sqrt(x);\n }\n \n-float bar(float x)\n+NOMIPS16 float bar(float x)\n {\n   return 1.0f/sqrtf(x);\n }"}, {"sha": "d3e7aa323a75f0dcf56314482d4a42a020318452", "filename": "gcc/testsuite/gcc.target/mips/rsqrt-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -6,12 +6,12 @@\n extern double sqrt(double);\n extern float sqrtf(float);\n \n-double foo(double x)\n+NOMIPS16 double foo(double x)\n {\n   return sqrt(1.0/x);\n }\n \n-float bar(float x)\n+NOMIPS16 float bar(float x)\n {\n   return sqrtf(1.0f/x);\n }"}, {"sha": "cb6b0d83affa1eeb8ac94977cbc3a6370e9a1976", "filename": "gcc/testsuite/gcc.target/mips/sb1-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsb1-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsb1-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsb1-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -8,22 +8,22 @@\n \n typedef float v2sf __attribute__ ((vector_size (8)));\n \n-v2sf divide (v2sf a, v2sf b)\n+NOMIPS16 v2sf divide (v2sf a, v2sf b)\n {\n   return a / b;\n }\n \n-v2sf recip (v2sf a)\n+NOMIPS16 v2sf recip (v2sf a)\n {\n   return ((v2sf) {1.0, 1.0}) / a;\n }\n \n-v2sf squareroot (v2sf a)\n+NOMIPS16 v2sf squareroot (v2sf a)\n {\n   return __builtin_mips_sqrt_ps (a);\n }\n \n-v2sf rsqrt (v2sf a)\n+NOMIPS16 v2sf rsqrt (v2sf a)\n {\n   return ((v2sf) {1.0, 1.0}) / __builtin_mips_sqrt_ps (a);\n }"}, {"sha": "9ea55af44a52a591b746766f9030bdedd8ace9a1", "filename": "gcc/testsuite/gcc.target/mips/vr-mult-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-1.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,6 +2,6 @@\n    is preferred over mtlo/msac.  */\n /* { dg-do compile } */\n /* { dg-mips-options \"-O2 -march=vr5400\" } */\n-int f1 (int a, int b, int c) { return a + b * c; }\n-int f2 (int a, int b, int c) { return a - b * c; }\n+NOMIPS16 int f1 (int a, int b, int c) { return a + b * c; }\n+NOMIPS16 int f2 (int a, int b, int c) { return a - b * c; }\n /* { dg-final { scan-assembler \"\\tmul\\t.*\\tmul\\t\" } } */"}, {"sha": "0ff3d47de7019c967587ec64e4701ce3d2287635", "filename": "gcc/testsuite/gcc.target/mips/vr-mult-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-2.c?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -2,6 +2,6 @@\n    is preferred over mtlo/msac.  */\n /* { dg-do compile } */\n /* { dg-mips-options \"-O2 -march=vr5500\" } */\n-int f1 (int a, int b, int c) { return a + b * c; }\n-int f2 (int a, int b, int c) { return a - b * c; }\n+NOMIPS16 int f1 (int a, int b, int c) { return a + b * c; }\n+NOMIPS16 int f2 (int a, int b, int c) { return a - b * c; }\n /* { dg-final { scan-assembler \"\\tmul\\t.*\\tmul\\t\" } } */"}, {"sha": "92a46e1c9179b2005bf8a9ec6edee9d2efefc355", "filename": "gcc/testsuite/lib/fortran-torture.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -42,7 +42,8 @@ if ![info exists TORTURE_OPTIONS] {\n \tlappend vectorizer_options \"-msse2\"\n \tset test_tree_vectorize 1\n     } elseif { [istarget \"mipsisa64*-*-*\"]\n-\t       && [check_effective_target_mpaired_single] } {\n+\t       && [check_effective_target_mpaired_single]\n+\t       && [check_effective_target_nomips16] } {\n \tlappend vectorizer_options \"-mpaired-single\"\n \tset test_tree_vectorize 1\n     } elseif [istarget \"sparc*-*-*\"] {"}, {"sha": "07a1dc9f1eebca10a841985279a1b139c9ca62d1", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/254d164615d2c3c3225626fe7ee6d70802bafe5e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=254d164615d2c3c3225626fe7ee6d70802bafe5e", "patch": "@@ -625,6 +625,21 @@ proc check_effective_target_mips64 { } {\n     }]\n }\n \n+# Return true if the target is a MIPS target that does not produce\n+# MIPS16 code.\n+\n+proc check_effective_target_nomips16 { } {\n+    return [check_no_compiler_messages nomips16 object {\n+\t#ifndef __mips\n+\t#error FOO\n+\t#else\n+\t/* A cheap way of testing for -mflip-mips16.  */\n+\tvoid foo (void) { asm (\"addiu $20,$20,1\"); }\n+\tvoid bar (void) { asm (\"addiu $20,$20,1\"); }\n+\t#endif\n+    }]\n+}\n+\n # Add the options needed for MIPS16 function attributes.  At the moment,\n # we don't support MIPS16 PIC.\n "}]}