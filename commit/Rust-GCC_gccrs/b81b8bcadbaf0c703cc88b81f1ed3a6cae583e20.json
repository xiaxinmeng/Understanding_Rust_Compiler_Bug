{"sha": "b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgxYjhiY2FkYmFmMGM3MDNjYzg4YjgxZjFlZDNhNmNhZTU4M2UyMA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-11-25T11:28:49Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-11-25T11:28:49Z"}, "message": "Improve verification of loop->latch in verify_loop_structure\n\n2015-11-25  Tom de Vries  <tom@codesourcery.com>\n\n\t* cfgloop.c (find_single_latch): New function, factored out of ...\n\t(flow_loops_find): ... here.\n\t(verify_loop_structure): Improve verification of loop->latch.\n\t* cfgloop.h (find_single_latch): Declare.\n\t* omp-low.c (expand_omp_for_generic): Initialize latch of orig_loop.\n\nFrom-SVN: r230866", "tree": {"sha": "eeaa9b933e9f67b2998b67bbf5bfc75188ea7771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeaa9b933e9f67b2998b67bbf5bfc75188ea7771"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20/comments", "author": null, "committer": null, "parents": [{"sha": "e5ef217c3e12ddab9e50843ce322702e8b9d1686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ef217c3e12ddab9e50843ce322702e8b9d1686", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ef217c3e12ddab9e50843ce322702e8b9d1686"}], "stats": {"total": 80, "additions": 60, "deletions": 20}, "files": [{"sha": "82d23c0e2a9676eed82a31ad1687d675cf6f25ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20", "patch": "@@ -1,3 +1,11 @@\n+2015-11-25  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* cfgloop.c (find_single_latch): New function, factored out of ...\n+\t(flow_loops_find): ... here.\n+\t(verify_loop_structure): Improve verification of loop->latch.\n+\t* cfgloop.h (find_single_latch): Declare.\n+\t* omp-low.c (expand_omp_for_generic): Initialize latch of orig_loop.\n+\n 2015-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/sol2.h (SUPPORTS_INIT_PRIORITY): Move up."}, {"sha": "e7cb78a5351246dd3534cd5d47f34ff25f761677", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 50, "deletions": 20, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20", "patch": "@@ -388,6 +388,33 @@ bb_loop_header_p (basic_block header)\n   return false;\n }\n \n+/* Return the latch block for this header block, if it has just a single one.\n+   Otherwise, return NULL.  */\n+\n+basic_block\n+find_single_latch (struct loop* loop)\n+{\n+  basic_block header = loop->header;\n+  edge_iterator ei;\n+  edge e;\n+  basic_block latch = NULL;\n+\n+  FOR_EACH_EDGE (e, ei, header->preds)\n+    {\n+      basic_block cand = e->src;\n+      if (!flow_bb_inside_loop_p (loop, cand))\n+\tcontinue;\n+\n+      if (latch != NULL)\n+\t/* More than one latch edge.  */\n+\treturn NULL;\n+\n+      latch = cand;\n+    }\n+\n+  return latch;\n+}\n+\n /* Find all the natural loops in the function and save in LOOPS structure and\n    recalculate loop_father information in basic block structures.\n    If LOOPS is non-NULL then the loop structures for already recorded loops\n@@ -482,29 +509,10 @@ flow_loops_find (struct loops *loops)\n     {\n       struct loop *loop = larray[i];\n       basic_block header = loop->header;\n-      edge_iterator ei;\n-      edge e;\n \n       flow_loop_tree_node_add (header->loop_father, loop);\n       loop->num_nodes = flow_loop_nodes_find (loop->header, loop);\n-\n-      /* Look for the latch for this header block, if it has just a\n-\t single one.  */\n-      FOR_EACH_EDGE (e, ei, header->preds)\n-\t{\n-\t  basic_block latch = e->src;\n-\n-\t  if (flow_bb_inside_loop_p (loop, latch))\n-\t    {\n-\t      if (loop->latch != NULL)\n-\t\t{\n-\t\t  /* More than one latch edge.  */\n-\t\t  loop->latch = NULL;\n-\t\t  break;\n-\t\t}\n-\t      loop->latch = latch;\n-\t    }\n-\t}\n+      loop->latch = find_single_latch (loop);\n     }\n \n   return loops;\n@@ -1434,6 +1442,28 @@ verify_loop_structure (void)\n \t      error (\"loop %d%'s latch is not dominated by its header\", i);\n \t      err = 1;\n \t    }\n+\t  if (find_single_latch (loop) == NULL)\n+\t    {\n+\t      error (\"loop %d%'s latch is is not the only latch\", i);\n+\t      err = 1;\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  if (loops_state_satisfies_p (LOOPS_MAY_HAVE_MULTIPLE_LATCHES))\n+\t    {\n+\t      if (find_single_latch (loop) != NULL)\n+\t\t{\n+\t\t  error (\"loop %d%'s latch is missing\", i);\n+\t\t  err = 1;\n+\t\t}\n+\t    }\n+\t  else\n+\t    {\n+\t      error (\"loop %d%'s latch is missing, and loops may not have\"\n+\t\t     \" multiple latches\", i);\n+\t      err = 1;\n+\t    }\n \t}\n       if (loops_state_satisfies_p (LOOPS_HAVE_SIMPLE_LATCHES))\n \t{"}, {"sha": "7faf591796ff6ccf22446f02c2e5ab988ee3905d", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20", "patch": "@@ -270,6 +270,7 @@ bool mark_irreducible_loops (void);\n void release_recorded_exits (function *);\n void record_loop_exits (void);\n void rescan_loop_exit (edge, bool, bool);\n+basic_block find_single_latch (struct loop*);\n \n /* Loop data structure manipulation/querying.  */\n extern void flow_loop_tree_node_add (struct loop *, struct loop *);"}, {"sha": "2d782eb0c94520ec8714e2640b94724dc49edad4", "filename": "gcc/omp-low.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=b81b8bcadbaf0c703cc88b81f1ed3a6cae583e20", "patch": "@@ -8903,6 +8903,7 @@ expand_omp_for_generic (struct omp_region *region,\n \t  orig_loop->header = l1_bb;\n \t  /* The loop may have multiple latches.  */\n \t  add_loop (orig_loop, new_loop);\n+\t  orig_loop->latch = find_single_latch (orig_loop);\n \t}\n     }\n }"}]}