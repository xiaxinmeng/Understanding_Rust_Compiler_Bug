{"sha": "7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YxMGMyZTJmYzUxYzI3NTQzNjgyZDRkYjU4OWIyMjUxYzZmZDdmMA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-05-03T16:45:18Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-05-03T16:45:18Z"}, "message": "check-init.c (check_init): Exclude a case of error when doing xrefs.\n\nFri Apr 30 17:54:40 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* check-init.c (check_init): Exclude a case of error when doing\n \txrefs.\n\t* class.c (layout_class_method): Don't generate the error message\n \ttwice when compiling from source.\n\t* lang-options.h: Added `-Wredundant-modifers' and\n\t`-Wunusupported-jdk11' flags and help text.\n\t* lang.c (lang_decode_option): Added support for\n \t`-Wunsupported-jdk11' and `-Wredundant-modifiers'.\n\tflag_static_local_jdk11 and flag_redundant set accordingly.\n\t* lex.c (java_lex): Call BUILD_OPERATOR on CCB_TK.\n\t* parse.h (EXPR_WFL_ADD_COL): New macro.\n\t(DECL_END_SOURCE_LINE): Likewise.\n\t(DECL_INHERITED_SOURCE_LINE): Likewise.\n\t* parse.y (static_ref_err): New function, prototyped.\n\t(CCB_TK): Now tagged <operator>.\n\t(class_body:): Remember the location of the closing '}' of a class\n \tdefinition when doing xrefs.\n\t(block:): Likewise.\n\t(block_end:): Likewise.\n\t(create_class): Remember the location of the inherited class\n \tidentifier when doing xrefs.\n\t(register_fields): Added test on first operand of `init' before\n \ttesting it TREE_CODE.\n\t(method_header): Store the location of the class identifier in the\n \tclass decl when doing xrefs.\n\t(finish_method_declaration): Don't combine first/last method line\n \twhen doing xref.\n\t(java_check_regular_methods): Warning check on not overriding\n \tmethods with default access on other packages move before check on\n \tstatic methods. Initialization of `aflags' also moved up.\n\t(resolve_expression_name): Call static_ref_err to report the error.\n\t(static_ref_err): New function, implemented.\n\t(resolve_field_access): Returned simplified static field access\n \twhen doing xrefs.\n\t(resolve_qualified_expression_name): Check for illegal use of\n \tstatic fields in a non static context. Call static_ref_err to\n \treport error in various places.\n\t(java_complete_tree): To not fold initialized static fields when\n \tdoing xrefs.\n\t(java_complete_lhs): Likewise.\n\nFrom-SVN: r26758", "tree": {"sha": "8fb769c8af7ecd1d605d1670f56dff248455c114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb769c8af7ecd1d605d1670f56dff248455c114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/comments", "author": null, "committer": null, "parents": [{"sha": "dbd9ec970e74e6edb8b5f38e79958e4fe7aaaf6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd9ec970e74e6edb8b5f38e79958e4fe7aaaf6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbd9ec970e74e6edb8b5f38e79958e4fe7aaaf6d"}], "stats": {"total": 1191, "additions": 683, "deletions": 508}, "files": [{"sha": "1e43aa85d6f810e8d316c1712f80e4ef28dc8727", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "patch": "@@ -2,6 +2,49 @@\n \n \t* Makefile.in: Remove -v from bison command lines.\n \n+Fri Apr 30 17:54:40 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* check-init.c (check_init): Exclude a case of error when doing\n+ \txrefs.\n+\t* class.c (layout_class_method): Don't generate the error message\n+ \ttwice when compiling from source.\n+\t* lang-options.h: Added `-Wredundant-modifers' and\n+\t`-Wunusupported-jdk11' flags and help text.\n+\t* lang.c (lang_decode_option): Added support for\n+ \t`-Wunsupported-jdk11' and `-Wredundant-modifiers'. \n+\tflag_static_local_jdk11 and flag_redundant set accordingly.\n+\t* lex.c (java_lex): Call BUILD_OPERATOR on CCB_TK.\n+\t* parse.h (EXPR_WFL_ADD_COL): New macro.\n+\t(DECL_END_SOURCE_LINE): Likewise.\n+\t(DECL_INHERITED_SOURCE_LINE): Likewise.\n+\t* parse.y (static_ref_err): New function, prototyped.\n+\t(CCB_TK): Now tagged <operator>.\n+\t(class_body:): Remember the location of the closing '}' of a class\n+ \tdefinition when doing xrefs.\n+\t(block:): Likewise.\n+\t(block_end:): Likewise.\n+\t(create_class): Remember the location of the inherited class\n+ \tidentifier when doing xrefs.\n+\t(register_fields): Added test on first operand of `init' before\n+ \ttesting it TREE_CODE.\n+\t(method_header): Store the location of the class identifier in the\n+ \tclass decl when doing xrefs.\n+\t(finish_method_declaration): Don't combine first/last method line\n+ \twhen doing xref.\n+\t(java_check_regular_methods): Warning check on not overriding\n+ \tmethods with default access on other packages move before check on\n+ \tstatic methods. Initialization of `aflags' also moved up.\n+\t(resolve_expression_name): Call static_ref_err to report the error.\n+\t(static_ref_err): New function, implemented.\n+\t(resolve_field_access): Returned simplified static field access\n+ \twhen doing xrefs.\n+\t(resolve_qualified_expression_name): Check for illegal use of\n+ \tstatic fields in a non static context. Call static_ref_err to\n+ \treport error in various places.\n+\t(java_complete_tree): To not fold initialized static fields when\n+ \tdoing xrefs.\n+\t(java_complete_lhs): Likewise.\n+\n 1999-04-29  Anthony Green  <green@cygnus.com>\n \n \t* expr.c (generate_name): Use ASM_GENERATE_INTERNAL_LABEL to"}, {"sha": "33e7be0df588dceea54b88396d00636bb9027643", "filename": "gcc/java/check-init.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "patch": "@@ -700,6 +700,9 @@ check_init (exp, before)\n       break;\n       \n     default:\n+      /* It's OK to see that when doing xrefs. */\n+      if (TREE_CODE (exp) == TYPE_DECL && flag_emit_xref)\n+\tbreak;\n       fatal (\"internal error in check-init: tree code not implemented: %s\",\n \t    tree_code_name [(int) TREE_CODE (exp)]);\n     }"}, {"sha": "e7f72ae11705cac6668dff691215bf16d92c5896", "filename": "gcc/java/class.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "patch": "@@ -1655,7 +1655,8 @@ layout_class_method (this_class, super_class, method_decl, dtable_count)\n       if (super_method != NULL_TREE && ! METHOD_PRIVATE (super_method))\n \t{\n \t  DECL_VINDEX (method_decl) = DECL_VINDEX (super_method);\n-\t  if (DECL_VINDEX (method_decl) == NULL_TREE)\n+\t  if (DECL_VINDEX (method_decl) == NULL_TREE \n+\t      && !CLASS_FROM_SOURCE_P (this_class))\n \t    error_with_decl (method_decl,\n \t\t\t     \"non-static method '%s' overrides static method\");\n #if 0"}, {"sha": "808e38d9e812b6ee4b5ab539fc9b11fef5ba7b77", "filename": "gcc/java/lang-options.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang-options.h?ref=7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "patch": "@@ -41,3 +41,6 @@ DEFINE_LANG_NAME (\"Java\")\n   { \"-fCLASSPATH\", \"Set class path\" },\n   { \"-I\", \"Add directory to class path\" },\n   { \"-foutput-class-dir\", \"Directory where class files should be written\" },\n+  { \"-Wredundant-modifiers\", \n+    \"Warn if modifiers are specified when not necessary\"},\n+  { \"-Wunsupported-jdk11\", \"Warn if `final' local variables are specified\"},"}, {"sha": "4afaa94a0e42f2448d62e7cbe10acc4c50d64d09", "filename": "gcc/java/lang.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "patch": "@@ -219,11 +219,21 @@ lang_decode_option (argc, argv)\n     {\n       flag_wall = 1;\n       flag_redundant = 1;\n-      flag_not_overriding = 1;\n+      return 1;\n+    }\n+\n+  if (strcmp (p, \"-Wunsupported-jdk11\") == 0)\n+    {\n       flag_static_local_jdk1_1 = 1;\n       return 1;\n     }\n \n+  if (strcmp (p, \"-Wredudant-modifiers\") == 0)\n+    {\n+      flag_redundant = 1;\n+      return 1;\n+    }\n+\n   if (strcmp (p, \"-MD\") == 0)\n     {\n       jcf_dependency_init (1);"}, {"sha": "18d873fb135c7d61a1ee50692f1c09ab9e0175ce", "filename": "gcc/java/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "patch": "@@ -955,7 +955,7 @@ java_lex (java_lval)\n       ctxp->ccb_indent--;\n       if (ctxp->ccb_indent == 1)\n         ctxp->last_ccb_indent1 = lineno;\n-      return CCB_TK;\n+      BUILD_OPERATOR (CCB_TK);\n     case '[':\n       JAVA_LEX_SEP (c);\n       BUILD_OPERATOR (OSB_TK);"}, {"sha": "4cac678a3d67517b49aec9c2f48da3c8a6dd20aa", "filename": "gcc/java/parse.c", "status": "modified", "additions": 518, "deletions": 464, "changes": 982, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "patch": "@@ -317,6 +317,7 @@ static tree patch_initialized_static_field PROTO ((tree));\n static tree fold_constant_for_init PROTO ((tree, tree));\n static tree strip_out_static_field_access_decl PROTO ((tree));\n static jdeplist *reverse_jdep_list PROTO ((struct parser_ctxt *));\n+static void static_ref_err PROTO ((tree, tree, tree));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -372,7 +373,7 @@ static tree java_lang_cloneable = NULL_TREE;\n static tree current_static_block = NULL_TREE;\n \n \n-#line 300 \"./parse.y\"\n+#line 301 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -382,7 +383,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 310 \"./parse.y\"\n+#line 311 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -679,56 +680,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   454,   460,   462,   463,   464,   465,   466,   470,   472,   475,\n-   477,   478,   481,   483,   486,   490,   494,   498,   504,   506,\n-   508,   510,   515,   517,   520,   524,   529,   534,   536,   537,\n-   538,   539,   540,   541,   542,   545,   550,   556,   558,   561,\n-   564,   566,   570,   572,   575,   602,   604,   608,   621,   623,\n-   627,   634,   639,   641,   651,   656,   671,   675,   678,   681,\n-   684,   686,   688,   693,   697,   699,   701,   703,   707,   709,\n-   711,   718,   724,   729,   733,   736,   740,   742,   745,   747,\n-   748,   749,   753,   755,   757,   758,   760,   765,   768,   778,\n-   781,   783,   787,   790,   797,   803,   811,   813,   815,   817,\n-   819,   823,   825,   829,   836,   837,   841,   844,   846,   848,\n-   850,   852,   854,   856,   858,   865,   868,   870,   879,   881,\n-   885,   890,   895,   899,   904,   906,   908,   915,   917,   919,\n-   923,   926,   928,   932,   934,   935,   940,   946,   953,   961,\n-   968,   971,   974,   978,   981,   985,   994,   996,   998,  1003,\n-  1010,  1018,  1020,  1024,  1031,  1041,  1045,  1048,  1051,  1054,\n-  1057,  1060,  1063,  1066,  1068,  1072,  1078,  1083,  1085,  1089,\n-  1092,  1096,  1098,  1101,  1103,  1104,  1106,  1110,  1114,  1120,\n-  1125,  1128,  1130,  1134,  1140,  1144,  1149,  1152,  1156,  1161,\n-  1169,  1171,  1174,  1176,  1178,  1182,  1186,  1189,  1193,  1195,\n-  1196,  1197,  1198,  1199,  1209,  1211,  1212,  1213,  1214,  1217,\n-  1219,  1220,  1221,  1222,  1223,  1224,  1225,  1226,  1227,  1228,\n-  1231,  1236,  1247,  1250,  1254,  1261,  1271,  1277,  1283,  1289,\n-  1291,  1297,  1299,  1305,  1307,  1309,  1311,  1313,  1317,  1319,\n-  1320,  1321,  1322,  1323,  1324,  1327,  1333,  1335,  1337,  1341,\n-  1346,  1351,  1357,  1367,  1373,  1375,  1377,  1384,  1387,  1389,\n-  1391,  1395,  1397,  1400,  1404,  1406,  1409,  1416,  1422,  1424,\n-  1426,  1430,  1438,  1441,  1443,  1445,  1449,  1454,  1463,  1468,\n-  1471,  1478,  1480,  1482,  1486,  1489,  1498,  1505,  1507,  1511,\n-  1524,  1526,  1532,  1538,  1542,  1544,  1548,  1551,  1553,  1557,\n-  1560,  1562,  1564,  1568,  1571,  1573,  1575,  1579,  1582,  1584,\n-  1586,  1590,  1596,  1598,  1602,  1609,  1611,  1613,  1615,  1619,\n-  1627,  1630,  1632,  1637,  1641,  1643,  1650,  1658,  1675,  1677,\n-  1679,  1683,  1686,  1691,  1693,  1696,  1698,  1700,  1702,  1703,\n-  1704,  1705,  1709,  1711,  1713,  1718,  1720,  1722,  1724,  1726,\n-  1730,  1733,  1738,  1740,  1745,  1746,  1747,  1748,  1749,  1751,\n-  1753,  1755,  1757,  1759,  1763,  1765,  1768,  1774,  1779,  1783,\n-  1786,  1788,  1790,  1794,  1796,  1798,  1800,  1804,  1807,  1811,\n-  1817,  1819,  1827,  1854,  1856,  1860,  1865,  1872,  1876,  1879,\n-  1881,  1892,  1903,  1908,  1917,  1919,  1923,  1926,  1928,  1933,\n-  1938,  1943,  1950,  1952,  1953,  1954,  1957,  1962,  1967,  1969,\n-  1970,  1972,  1974,  1975,  1977,  1981,  1984,  1988,  1991,  1995,\n-  1997,  1999,  2001,  2002,  2004,  2008,  2017,  2019,  2021,  2034,\n-  2036,  2042,  2044,  2046,  2050,  2052,  2057,  2062,  2067,  2069,\n-  2071,  2075,  2077,  2082,  2087,  2089,  2093,  2095,  2100,  2105,\n-  2110,  2112,  2114,  2118,  2120,  2125,  2130,  2135,  2140,  2142,\n-  2144,  2146,  2148,  2150,  2154,  2156,  2161,  2166,  2168,  2172,\n-  2174,  2179,  2183,  2185,  2190,  2194,  2196,  2201,  2205,  2207,\n-  2212,  2216,  2218,  2223,  2227,  2229,  2234,  2240,  2242,  2246,\n-  2248,  2251,  2254,  2262,  2264,  2265,  2268,  2270,  2273,  2277\n+   455,   461,   463,   464,   465,   466,   467,   471,   473,   476,\n+   478,   479,   482,   484,   487,   491,   495,   499,   505,   507,\n+   509,   511,   516,   518,   521,   525,   530,   535,   537,   538,\n+   539,   540,   541,   542,   543,   546,   551,   557,   559,   562,\n+   565,   567,   571,   573,   576,   603,   605,   609,   622,   624,\n+   628,   635,   640,   642,   652,   657,   672,   676,   679,   682,\n+   685,   687,   689,   694,   698,   700,   702,   704,   708,   710,\n+   712,   719,   725,   730,   734,   743,   753,   755,   758,   760,\n+   761,   762,   766,   768,   770,   771,   773,   778,   781,   791,\n+   794,   796,   800,   803,   810,   816,   824,   826,   828,   830,\n+   832,   836,   838,   842,   849,   850,   854,   857,   859,   861,\n+   863,   865,   867,   869,   871,   878,   881,   883,   892,   894,\n+   898,   903,   908,   912,   917,   919,   921,   928,   930,   932,\n+   936,   939,   941,   945,   947,   948,   953,   959,   966,   974,\n+   981,   984,   987,   991,   994,   998,  1007,  1009,  1011,  1016,\n+  1023,  1031,  1033,  1037,  1044,  1054,  1058,  1061,  1064,  1067,\n+  1070,  1073,  1076,  1079,  1081,  1085,  1091,  1096,  1098,  1102,\n+  1105,  1109,  1111,  1114,  1116,  1117,  1119,  1123,  1127,  1133,\n+  1138,  1141,  1143,  1147,  1153,  1157,  1162,  1171,  1175,  1180,\n+  1192,  1194,  1197,  1199,  1201,  1205,  1209,  1212,  1216,  1218,\n+  1219,  1220,  1221,  1222,  1232,  1234,  1235,  1236,  1237,  1240,\n+  1242,  1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1251,\n+  1254,  1259,  1270,  1273,  1277,  1284,  1294,  1300,  1306,  1312,\n+  1314,  1320,  1322,  1328,  1330,  1332,  1334,  1336,  1340,  1342,\n+  1343,  1344,  1345,  1346,  1347,  1350,  1356,  1358,  1360,  1364,\n+  1369,  1374,  1380,  1390,  1396,  1398,  1400,  1407,  1410,  1412,\n+  1414,  1418,  1420,  1423,  1427,  1429,  1432,  1439,  1445,  1447,\n+  1449,  1453,  1461,  1464,  1466,  1468,  1472,  1477,  1486,  1491,\n+  1494,  1501,  1503,  1505,  1509,  1512,  1521,  1528,  1530,  1534,\n+  1547,  1549,  1555,  1561,  1565,  1567,  1571,  1574,  1576,  1580,\n+  1583,  1585,  1587,  1591,  1594,  1596,  1598,  1602,  1605,  1607,\n+  1609,  1613,  1619,  1621,  1625,  1632,  1634,  1636,  1638,  1642,\n+  1650,  1653,  1655,  1660,  1664,  1666,  1673,  1681,  1698,  1700,\n+  1702,  1706,  1709,  1714,  1716,  1719,  1721,  1723,  1725,  1726,\n+  1727,  1728,  1732,  1734,  1736,  1741,  1743,  1745,  1747,  1749,\n+  1753,  1756,  1761,  1763,  1768,  1769,  1770,  1771,  1772,  1774,\n+  1776,  1778,  1780,  1782,  1786,  1788,  1791,  1797,  1802,  1806,\n+  1809,  1811,  1813,  1817,  1819,  1821,  1823,  1827,  1830,  1834,\n+  1840,  1842,  1850,  1877,  1879,  1883,  1888,  1895,  1899,  1902,\n+  1904,  1915,  1926,  1931,  1940,  1942,  1946,  1949,  1951,  1956,\n+  1961,  1966,  1973,  1975,  1976,  1977,  1980,  1985,  1990,  1992,\n+  1993,  1995,  1997,  1998,  2000,  2004,  2007,  2011,  2014,  2018,\n+  2020,  2022,  2024,  2025,  2027,  2031,  2040,  2042,  2044,  2057,\n+  2059,  2065,  2067,  2069,  2073,  2075,  2080,  2085,  2090,  2092,\n+  2094,  2098,  2100,  2105,  2110,  2112,  2116,  2118,  2123,  2128,\n+  2133,  2135,  2137,  2141,  2143,  2148,  2153,  2158,  2163,  2165,\n+  2167,  2169,  2171,  2173,  2177,  2179,  2184,  2189,  2191,  2195,\n+  2197,  2202,  2206,  2208,  2213,  2217,  2219,  2224,  2228,  2230,\n+  2235,  2239,  2241,  2246,  2250,  2252,  2257,  2263,  2265,  2269,\n+  2271,  2274,  2277,  2285,  2287,  2288,  2291,  2293,  2296,  2300\n };\n #endif\n \n@@ -2724,66 +2725,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 456 \"./parse.y\"\n+#line 457 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 500 \"./parse.y\"\n+#line 501 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 505 \"./parse.y\"\n+#line 506 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 507 \"./parse.y\"\n+#line 508 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 509 \"./parse.y\"\n+#line 510 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 511 \"./parse.y\"\n+#line 512 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 526 \"./parse.y\"\n+#line 527 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 535 \"./parse.y\"\n+#line 536 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 547 \"./parse.y\"\n+#line 548 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 551 \"./parse.y\"\n+#line 552 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 563 \"./parse.y\"\n+#line 564 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 565 \"./parse.y\"\n+#line 566 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 567 \"./parse.y\"\n+#line 568 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 577 \"./parse.y\"\n+#line 578 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2811,15 +2812,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 603 \"./parse.y\"\n+#line 604 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 605 \"./parse.y\"\n+#line 606 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 610 \"./parse.y\"\n+#line 611 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2833,47 +2834,47 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 622 \"./parse.y\"\n+#line 623 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 624 \"./parse.y\"\n+#line 625 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 629 \"./parse.y\"\n+#line 630 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 52:\n-#line 635 \"./parse.y\"\n+#line 636 \"./parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 640 \"./parse.y\"\n+#line 641 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 642 \"./parse.y\"\n+#line 643 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 653 \"./parse.y\"\n+#line 654 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 657 \"./parse.y\"\n+#line 658 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2887,123 +2888,135 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 673 \"./parse.y\"\n+#line 674 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 675 \"./parse.y\"\n+#line 676 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 679 \"./parse.y\"\n+#line 680 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 681 \"./parse.y\"\n+#line 682 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 685 \"./parse.y\"\n+#line 686 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 687 \"./parse.y\"\n+#line 688 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 689 \"./parse.y\"\n+#line 690 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 694 \"./parse.y\"\n+#line 695 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 698 \"./parse.y\"\n+#line 699 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 700 \"./parse.y\"\n+#line 701 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 702 \"./parse.y\"\n+#line 703 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 704 \"./parse.y\"\n+#line 705 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 708 \"./parse.y\"\n+#line 709 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 710 \"./parse.y\"\n+#line 711 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 712 \"./parse.y\"\n+#line 713 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 720 \"./parse.y\"\n+#line 721 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 725 \"./parse.y\"\n+#line 726 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 730 \"./parse.y\"\n+#line 731 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 735 \"./parse.y\"\n-{ yyval.node = ctxp->current_parsed_class; ;\n+#line 736 \"./parse.y\"\n+{ \n+\t\t  /* Store the location of the `}' when doing xrefs */\n+\t\t  if (flag_emit_xref)\n+\t\t    DECL_END_SOURCE_LINE (ctxp->current_parsed_class) = \n+\t\t      EXPR_WFL_ADD_COL (yyvsp[0].operator.location, 1);\n+\t\t  yyval.node = ctxp->current_parsed_class;\n+\t\t;\n     break;}\n case 76:\n-#line 737 \"./parse.y\"\n-{ yyval.node = ctxp->current_parsed_class; ;\n+#line 744 \"./parse.y\"\n+{ \n+\t\t  /* Store the location of the `}' when doing xrefs */\n+\t\t  if (flag_emit_xref)\n+\t\t    DECL_END_SOURCE_LINE (ctxp->current_parsed_class) = \n+\t\t      EXPR_WFL_ADD_COL (yyvsp[0].operator.location, 1);\n+\t\t  yyval.node = ctxp->current_parsed_class;\n+\t\t;\n     break;}\n case 82:\n-#line 750 \"./parse.y\"\n+#line 763 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 756 \"./parse.y\"\n+#line 769 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 759 \"./parse.y\"\n+#line 772 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 761 \"./parse.y\"\n+#line 774 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 767 \"./parse.y\"\n+#line 780 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 769 \"./parse.y\"\n+#line 782 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3013,19 +3026,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 782 \"./parse.y\"\n+#line 795 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 784 \"./parse.y\"\n+#line 797 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 789 \"./parse.y\"\n+#line 802 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 791 \"./parse.y\"\n+#line 804 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3034,101 +3047,101 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 798 \"./parse.y\"\n+#line 811 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 804 \"./parse.y\"\n+#line 817 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 814 \"./parse.y\"\n+#line 827 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 816 \"./parse.y\"\n+#line 829 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 818 \"./parse.y\"\n+#line 831 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 820 \"./parse.y\"\n+#line 833 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 831 \"./parse.y\"\n+#line 844 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 836 \"./parse.y\"\n+#line 849 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 838 \"./parse.y\"\n+#line 851 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 843 \"./parse.y\"\n+#line 856 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 845 \"./parse.y\"\n+#line 858 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 847 \"./parse.y\"\n+#line 860 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 849 \"./parse.y\"\n+#line 862 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 851 \"./parse.y\"\n+#line 864 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 853 \"./parse.y\"\n+#line 866 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 855 \"./parse.y\"\n+#line 868 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 857 \"./parse.y\"\n+#line 870 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 859 \"./parse.y\"\n+#line 872 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 867 \"./parse.y\"\n+#line 880 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 869 \"./parse.y\"\n+#line 882 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 871 \"./parse.y\"\n+#line 884 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3139,348 +3152,358 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 880 \"./parse.y\"\n+#line 893 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 882 \"./parse.y\"\n+#line 895 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 887 \"./parse.y\"\n+#line 900 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 891 \"./parse.y\"\n+#line 904 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 896 \"./parse.y\"\n+#line 909 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 901 \"./parse.y\"\n+#line 914 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 905 \"./parse.y\"\n+#line 918 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 126:\n-#line 907 \"./parse.y\"\n+#line 920 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 909 \"./parse.y\"\n+#line 922 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 916 \"./parse.y\"\n+#line 929 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 918 \"./parse.y\"\n+#line 931 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 920 \"./parse.y\"\n+#line 933 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 925 \"./parse.y\"\n+#line 938 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 927 \"./parse.y\"\n+#line 940 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 929 \"./parse.y\"\n+#line 942 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 936 \"./parse.y\"\n+#line 949 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 942 \"./parse.y\"\n+#line 955 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[0].node;\n \t\t;\n     break;}\n case 138:\n-#line 947 \"./parse.y\"\n+#line 960 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[-1].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[-1].node;\n \t\t;\n     break;}\n case 139:\n-#line 955 \"./parse.y\"\n+#line 968 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 963 \"./parse.y\"\n+#line 976 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 968 \"./parse.y\"\n+#line 981 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 973 \"./parse.y\"\n+#line 986 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 975 \"./parse.y\"\n+#line 988 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 980 \"./parse.y\"\n+#line 993 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 982 \"./parse.y\"\n+#line 995 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 990 \"./parse.y\"\n+#line 1003 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 995 \"./parse.y\"\n+#line 1008 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 997 \"./parse.y\"\n+#line 1010 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 999 \"./parse.y\"\n+#line 1012 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 150:\n-#line 1005 \"./parse.y\"\n+#line 1018 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 1011 \"./parse.y\"\n+#line 1024 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 152:\n-#line 1019 \"./parse.y\"\n+#line 1032 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 1021 \"./parse.y\"\n+#line 1034 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 154:\n-#line 1026 \"./parse.y\"\n+#line 1039 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 155:\n-#line 1032 \"./parse.y\"\n+#line 1045 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 156:\n-#line 1043 \"./parse.y\"\n+#line 1056 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 157:\n-#line 1045 \"./parse.y\"\n+#line 1058 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 158:\n-#line 1049 \"./parse.y\"\n+#line 1062 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1051 \"./parse.y\"\n+#line 1064 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1055 \"./parse.y\"\n+#line 1068 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 161:\n-#line 1057 \"./parse.y\"\n+#line 1070 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1061 \"./parse.y\"\n+#line 1074 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 163:\n-#line 1063 \"./parse.y\"\n+#line 1076 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1067 \"./parse.y\"\n+#line 1080 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1069 \"./parse.y\"\n+#line 1082 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 166:\n-#line 1074 \"./parse.y\"\n+#line 1087 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 167:\n-#line 1079 \"./parse.y\"\n+#line 1092 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 168:\n-#line 1084 \"./parse.y\"\n+#line 1097 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 169:\n-#line 1086 \"./parse.y\"\n+#line 1099 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 170:\n-#line 1091 \"./parse.y\"\n+#line 1104 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 171:\n-#line 1093 \"./parse.y\"\n+#line 1106 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 176:\n-#line 1105 \"./parse.y\"\n+#line 1118 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 177:\n-#line 1107 \"./parse.y\"\n+#line 1120 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 179:\n-#line 1116 \"./parse.y\"\n+#line 1129 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 180:\n-#line 1121 \"./parse.y\"\n+#line 1134 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 181:\n-#line 1127 \"./parse.y\"\n+#line 1140 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 182:\n-#line 1129 \"./parse.y\"\n+#line 1142 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 183:\n-#line 1131 \"./parse.y\"\n+#line 1144 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 184:\n-#line 1136 \"./parse.y\"\n+#line 1149 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 185:\n-#line 1141 \"./parse.y\"\n+#line 1154 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 186:\n-#line 1145 \"./parse.y\"\n+#line 1158 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 187:\n-#line 1151 \"./parse.y\"\n-{ yyval.node = empty_stmt_node; ;\n+#line 1164 \"./parse.y\"\n+{ \n+\t\t  /* Store the location of the `}' when doing xrefs */\n+\t\t  if (current_function_decl && flag_emit_xref)\n+\t\t    DECL_END_SOURCE_LINE (current_function_decl) = \n+\t\t      EXPR_WFL_ADD_COL (yyvsp[0].operator.location, 1);\n+\t\t  yyval.node = empty_stmt_node; \n+\t\t;\n     break;}\n case 188:\n-#line 1153 \"./parse.y\"\n+#line 1172 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 189:\n-#line 1158 \"./parse.y\"\n+#line 1177 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 190:\n-#line 1163 \"./parse.y\"\n+#line 1182 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n+\t\t  /* Store the location of the `}' when doing xrefs */\n+\t\t  if (current_function_decl && flag_emit_xref)\n+\t\t    DECL_END_SOURCE_LINE (current_function_decl) = \n+\t\t      EXPR_WFL_ADD_COL (yyvsp[0].operator.location, 1);\t\t  \n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 194:\n-#line 1177 \"./parse.y\"\n+#line 1200 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 195:\n-#line 1179 \"./parse.y\"\n+#line 1202 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 197:\n-#line 1188 \"./parse.y\"\n+#line 1211 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 198:\n-#line 1190 \"./parse.y\"\n+#line 1213 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 204:\n-#line 1200 \"./parse.y\"\n+#line 1223 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3490,11 +3513,11 @@ case 204:\n \t\t;\n     break;}\n case 221:\n-#line 1233 \"./parse.y\"\n+#line 1256 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 222:\n-#line 1238 \"./parse.y\"\n+#line 1261 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3504,19 +3527,19 @@ case 222:\n \t\t;\n     break;}\n case 223:\n-#line 1249 \"./parse.y\"\n+#line 1272 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 224:\n-#line 1251 \"./parse.y\"\n+#line 1274 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 225:\n-#line 1256 \"./parse.y\"\n+#line 1279 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 226:\n-#line 1263 \"./parse.y\"\n+#line 1286 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3527,108 +3550,108 @@ case 226:\n \t\t;\n     break;}\n case 227:\n-#line 1272 \"./parse.y\"\n+#line 1295 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1278 \"./parse.y\"\n+#line 1301 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1284 \"./parse.y\"\n+#line 1307 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1290 \"./parse.y\"\n+#line 1313 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 231:\n-#line 1292 \"./parse.y\"\n+#line 1315 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 232:\n-#line 1298 \"./parse.y\"\n+#line 1321 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1300 \"./parse.y\"\n+#line 1323 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1306 \"./parse.y\"\n+#line 1329 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1308 \"./parse.y\"\n+#line 1331 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1310 \"./parse.y\"\n+#line 1333 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1312 \"./parse.y\"\n+#line 1335 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1314 \"./parse.y\"\n+#line 1337 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 246:\n-#line 1329 \"./parse.y\"\n+#line 1352 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 247:\n-#line 1334 \"./parse.y\"\n+#line 1357 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1336 \"./parse.y\"\n+#line 1359 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 249:\n-#line 1338 \"./parse.y\"\n+#line 1361 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1343 \"./parse.y\"\n+#line 1366 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1348 \"./parse.y\"\n+#line 1371 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 252:\n-#line 1353 \"./parse.y\"\n+#line 1376 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 253:\n-#line 1357 \"./parse.y\"\n+#line 1380 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3639,112 +3662,112 @@ case 253:\n \t\t;\n     break;}\n case 254:\n-#line 1369 \"./parse.y\"\n+#line 1392 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 255:\n-#line 1374 \"./parse.y\"\n+#line 1397 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 256:\n-#line 1376 \"./parse.y\"\n+#line 1399 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 257:\n-#line 1378 \"./parse.y\"\n+#line 1401 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1386 \"./parse.y\"\n+#line 1409 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1388 \"./parse.y\"\n+#line 1411 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1390 \"./parse.y\"\n+#line 1413 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1392 \"./parse.y\"\n+#line 1415 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 267:\n-#line 1411 \"./parse.y\"\n+#line 1434 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1417 \"./parse.y\"\n+#line 1440 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 269:\n-#line 1423 \"./parse.y\"\n+#line 1446 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 270:\n-#line 1425 \"./parse.y\"\n+#line 1448 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1427 \"./parse.y\"\n+#line 1450 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 272:\n-#line 1432 \"./parse.y\"\n+#line 1455 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 273:\n-#line 1440 \"./parse.y\"\n+#line 1463 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 274:\n-#line 1442 \"./parse.y\"\n+#line 1465 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1444 \"./parse.y\"\n+#line 1467 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1446 \"./parse.y\"\n+#line 1469 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1451 \"./parse.y\"\n+#line 1474 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 278:\n-#line 1456 \"./parse.y\"\n+#line 1479 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 279:\n-#line 1465 \"./parse.y\"\n+#line 1488 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 280:\n-#line 1470 \"./parse.y\"\n+#line 1493 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 281:\n-#line 1472 \"./parse.y\"\n+#line 1495 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3753,23 +3776,23 @@ case 281:\n \t\t;\n     break;}\n case 282:\n-#line 1479 \"./parse.y\"\n+#line 1502 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1481 \"./parse.y\"\n+#line 1504 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1483 \"./parse.y\"\n+#line 1506 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1488 \"./parse.y\"\n+#line 1511 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 286:\n-#line 1490 \"./parse.y\"\n+#line 1513 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3778,23 +3801,23 @@ case 286:\n \t\t;\n     break;}\n case 287:\n-#line 1500 \"./parse.y\"\n+#line 1523 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 288:\n-#line 1506 \"./parse.y\"\n+#line 1529 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 289:\n-#line 1508 \"./parse.y\"\n+#line 1531 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 290:\n-#line 1513 \"./parse.y\"\n+#line 1536 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3807,179 +3830,179 @@ case 290:\n \t\t;\n     break;}\n case 291:\n-#line 1525 \"./parse.y\"\n+#line 1548 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 292:\n-#line 1527 \"./parse.y\"\n+#line 1550 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 293:\n-#line 1533 \"./parse.y\"\n+#line 1556 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 294:\n-#line 1539 \"./parse.y\"\n+#line 1562 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 295:\n-#line 1543 \"./parse.y\"\n+#line 1566 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 296:\n-#line 1545 \"./parse.y\"\n+#line 1568 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1550 \"./parse.y\"\n+#line 1573 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1552 \"./parse.y\"\n+#line 1575 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1554 \"./parse.y\"\n+#line 1577 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 300:\n-#line 1559 \"./parse.y\"\n+#line 1582 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 301:\n-#line 1561 \"./parse.y\"\n+#line 1584 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 302:\n-#line 1563 \"./parse.y\"\n+#line 1586 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 303:\n-#line 1565 \"./parse.y\"\n+#line 1588 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 304:\n-#line 1570 \"./parse.y\"\n+#line 1593 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1572 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 306:\n-#line 1574 \"./parse.y\"\n+#line 1597 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 307:\n-#line 1576 \"./parse.y\"\n+#line 1599 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 308:\n-#line 1581 \"./parse.y\"\n+#line 1604 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1583 \"./parse.y\"\n+#line 1606 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 310:\n-#line 1585 \"./parse.y\"\n+#line 1608 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 311:\n-#line 1587 \"./parse.y\"\n+#line 1610 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 312:\n-#line 1592 \"./parse.y\"\n+#line 1615 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 313:\n-#line 1597 \"./parse.y\"\n+#line 1620 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 314:\n-#line 1599 \"./parse.y\"\n+#line 1622 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 315:\n-#line 1604 \"./parse.y\"\n+#line 1627 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 316:\n-#line 1610 \"./parse.y\"\n+#line 1633 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1612 \"./parse.y\"\n+#line 1635 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 318:\n-#line 1614 \"./parse.y\"\n+#line 1637 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1616 \"./parse.y\"\n+#line 1639 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 320:\n-#line 1621 \"./parse.y\"\n+#line 1644 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 321:\n-#line 1629 \"./parse.y\"\n+#line 1652 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1631 \"./parse.y\"\n+#line 1654 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1633 \"./parse.y\"\n+#line 1656 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 324:\n-#line 1638 \"./parse.y\"\n+#line 1661 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 326:\n-#line 1644 \"./parse.y\"\n+#line 1667 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 327:\n-#line 1652 \"./parse.y\"\n+#line 1675 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 328:\n-#line 1660 \"./parse.y\"\n+#line 1683 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -3997,184 +4020,184 @@ case 328:\n \t\t;\n     break;}\n case 329:\n-#line 1676 \"./parse.y\"\n+#line 1699 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 330:\n-#line 1678 \"./parse.y\"\n+#line 1701 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 331:\n-#line 1680 \"./parse.y\"\n+#line 1703 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 332:\n-#line 1685 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 333:\n-#line 1687 \"./parse.y\"\n+#line 1710 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 337:\n-#line 1699 \"./parse.y\"\n+#line 1722 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 338:\n-#line 1701 \"./parse.y\"\n+#line 1724 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 343:\n-#line 1710 \"./parse.y\"\n+#line 1733 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 344:\n-#line 1712 \"./parse.y\"\n+#line 1735 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 345:\n-#line 1714 \"./parse.y\"\n+#line 1737 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 346:\n-#line 1719 \"./parse.y\"\n+#line 1742 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 347:\n-#line 1721 \"./parse.y\"\n+#line 1744 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 348:\n-#line 1723 \"./parse.y\"\n+#line 1746 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1725 \"./parse.y\"\n+#line 1748 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1727 \"./parse.y\"\n+#line 1750 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1732 \"./parse.y\"\n+#line 1755 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 352:\n-#line 1734 \"./parse.y\"\n+#line 1757 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 353:\n-#line 1739 \"./parse.y\"\n+#line 1762 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 354:\n-#line 1741 \"./parse.y\"\n+#line 1764 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 359:\n-#line 1750 \"./parse.y\"\n+#line 1773 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 360:\n-#line 1752 \"./parse.y\"\n+#line 1775 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1754 \"./parse.y\"\n+#line 1777 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1756 \"./parse.y\"\n+#line 1779 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1758 \"./parse.y\"\n+#line 1781 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1760 \"./parse.y\"\n+#line 1783 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 367:\n-#line 1770 \"./parse.y\"\n+#line 1793 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 368:\n-#line 1775 \"./parse.y\"\n+#line 1798 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 369:\n-#line 1780 \"./parse.y\"\n+#line 1803 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 370:\n-#line 1785 \"./parse.y\"\n+#line 1808 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1787 \"./parse.y\"\n+#line 1810 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 372:\n-#line 1789 \"./parse.y\"\n+#line 1812 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 373:\n-#line 1791 \"./parse.y\"\n+#line 1814 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 374:\n-#line 1795 \"./parse.y\"\n+#line 1818 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1797 \"./parse.y\"\n+#line 1820 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 376:\n-#line 1799 \"./parse.y\"\n+#line 1822 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 377:\n-#line 1801 \"./parse.y\"\n+#line 1824 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 378:\n-#line 1806 \"./parse.y\"\n+#line 1829 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 379:\n-#line 1808 \"./parse.y\"\n+#line 1831 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 380:\n-#line 1813 \"./parse.y\"\n+#line 1836 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 381:\n-#line 1818 \"./parse.y\"\n+#line 1841 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 382:\n-#line 1820 \"./parse.y\"\n+#line 1843 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 383:\n-#line 1829 \"./parse.y\"\n+#line 1852 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4202,19 +4225,19 @@ case 383:\n \t\t;\n     break;}\n case 384:\n-#line 1855 \"./parse.y\"\n+#line 1878 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 385:\n-#line 1857 \"./parse.y\"\n+#line 1880 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 386:\n-#line 1862 \"./parse.y\"\n+#line 1885 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 387:\n-#line 1866 \"./parse.y\"\n+#line 1889 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4223,19 +4246,19 @@ case 387:\n \t\t;\n     break;}\n case 388:\n-#line 1873 \"./parse.y\"\n+#line 1896 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 389:\n-#line 1878 \"./parse.y\"\n+#line 1901 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 390:\n-#line 1880 \"./parse.y\"\n+#line 1903 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 391:\n-#line 1882 \"./parse.y\"\n+#line 1905 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4248,7 +4271,7 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1893 \"./parse.y\"\n+#line 1916 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4261,121 +4284,121 @@ case 392:\n \t\t;\n     break;}\n case 393:\n-#line 1904 \"./parse.y\"\n+#line 1927 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1909 \"./parse.y\"\n+#line 1932 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 395:\n-#line 1918 \"./parse.y\"\n+#line 1941 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1920 \"./parse.y\"\n+#line 1943 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 397:\n-#line 1925 \"./parse.y\"\n+#line 1948 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1927 \"./parse.y\"\n+#line 1950 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 399:\n-#line 1929 \"./parse.y\"\n+#line 1952 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1934 \"./parse.y\"\n+#line 1957 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1939 \"./parse.y\"\n+#line 1962 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1944 \"./parse.y\"\n+#line 1967 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 407:\n-#line 1959 \"./parse.y\"\n+#line 1982 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 408:\n-#line 1964 \"./parse.y\"\n+#line 1987 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 411:\n-#line 1971 \"./parse.y\"\n+#line 1994 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 412:\n-#line 1973 \"./parse.y\"\n+#line 1996 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 1976 \"./parse.y\"\n+#line 1999 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1978 \"./parse.y\"\n+#line 2001 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 416:\n-#line 1983 \"./parse.y\"\n+#line 2006 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 417:\n-#line 1985 \"./parse.y\"\n+#line 2008 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 1990 \"./parse.y\"\n+#line 2013 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 1992 \"./parse.y\"\n+#line 2015 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 421:\n-#line 1998 \"./parse.y\"\n+#line 2021 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 422:\n-#line 2000 \"./parse.y\"\n+#line 2023 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2003 \"./parse.y\"\n+#line 2026 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 2005 \"./parse.y\"\n+#line 2028 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 426:\n-#line 2010 \"./parse.y\"\n+#line 2033 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4385,15 +4408,15 @@ case 426:\n \t\t;\n     break;}\n case 427:\n-#line 2018 \"./parse.y\"\n+#line 2041 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 2020 \"./parse.y\"\n+#line 2043 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 429:\n-#line 2022 \"./parse.y\"\n+#line 2045 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4408,275 +4431,275 @@ case 429:\n \t\t;\n     break;}\n case 430:\n-#line 2035 \"./parse.y\"\n+#line 2058 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 431:\n-#line 2037 \"./parse.y\"\n+#line 2060 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 432:\n-#line 2043 \"./parse.y\"\n+#line 2066 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 2045 \"./parse.y\"\n+#line 2068 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 434:\n-#line 2047 \"./parse.y\"\n+#line 2070 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2053 \"./parse.y\"\n+#line 2076 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 437:\n-#line 2058 \"./parse.y\"\n+#line 2081 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2063 \"./parse.y\"\n+#line 2086 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 439:\n-#line 2068 \"./parse.y\"\n+#line 2091 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2070 \"./parse.y\"\n+#line 2093 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 441:\n-#line 2072 \"./parse.y\"\n+#line 2095 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2078 \"./parse.y\"\n+#line 2101 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2083 \"./parse.y\"\n+#line 2106 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 445:\n-#line 2088 \"./parse.y\"\n+#line 2111 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 446:\n-#line 2090 \"./parse.y\"\n+#line 2113 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2096 \"./parse.y\"\n+#line 2119 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2101 \"./parse.y\"\n+#line 2124 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2106 \"./parse.y\"\n+#line 2129 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2111 \"./parse.y\"\n+#line 2134 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2113 \"./parse.y\"\n+#line 2136 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 453:\n-#line 2115 \"./parse.y\"\n+#line 2138 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2121 \"./parse.y\"\n+#line 2144 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2126 \"./parse.y\"\n+#line 2149 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2131 \"./parse.y\"\n+#line 2154 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2136 \"./parse.y\"\n+#line 2159 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2141 \"./parse.y\"\n+#line 2164 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 460:\n-#line 2143 \"./parse.y\"\n+#line 2166 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2145 \"./parse.y\"\n+#line 2168 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2147 \"./parse.y\"\n+#line 2170 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2149 \"./parse.y\"\n+#line 2172 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2151 \"./parse.y\"\n+#line 2174 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 466:\n-#line 2157 \"./parse.y\"\n+#line 2180 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2162 \"./parse.y\"\n+#line 2185 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 468:\n-#line 2167 \"./parse.y\"\n+#line 2190 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 469:\n-#line 2169 \"./parse.y\"\n+#line 2192 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2175 \"./parse.y\"\n+#line 2198 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 472:\n-#line 2180 \"./parse.y\"\n+#line 2203 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 474:\n-#line 2186 \"./parse.y\"\n+#line 2209 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 475:\n-#line 2191 \"./parse.y\"\n+#line 2214 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 477:\n-#line 2197 \"./parse.y\"\n+#line 2220 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 478:\n-#line 2202 \"./parse.y\"\n+#line 2225 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 480:\n-#line 2208 \"./parse.y\"\n+#line 2231 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 481:\n-#line 2213 \"./parse.y\"\n+#line 2236 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 483:\n-#line 2219 \"./parse.y\"\n+#line 2242 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 484:\n-#line 2224 \"./parse.y\"\n+#line 2247 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 486:\n-#line 2230 \"./parse.y\"\n+#line 2253 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 487:\n-#line 2235 \"./parse.y\"\n+#line 2258 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 488:\n-#line 2241 \"./parse.y\"\n+#line 2264 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 489:\n-#line 2243 \"./parse.y\"\n+#line 2266 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 492:\n-#line 2253 \"./parse.y\"\n+#line 2276 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 493:\n-#line 2255 \"./parse.y\"\n+#line 2278 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4881,7 +4904,7 @@ case 493:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2281 \"./parse.y\"\n+#line 2304 \"./parse.y\"\n \n \f\n \n@@ -5618,6 +5641,11 @@ create_class (flags, id, super, interfaces)\n   CLASS_COMPLETE_P (decl) = 1;\n   add_superinterfaces (decl, interfaces);\n \n+  /* If doing xref, store the location at which the inherited class\n+     (if any) was seen. */\n+  if (flag_emit_xref && super)\n+    DECL_INHERITED_SOURCE_LINE (decl) = EXPR_WFL_LINECOL (super);\n+\n   /* Eventually sets the @deprecated tag flag */\n   CHECK_DEPRECATED (decl);\n \n@@ -5787,7 +5815,8 @@ register_fields (flags, type, variable_list)\n \t      TREE_CHAIN (init) = ctxp->static_initialized;\n \t      ctxp->static_initialized = init;\n \t      DECL_INITIAL (field_decl) = TREE_OPERAND (init, 1);\n-\t      if (TREE_CODE (TREE_OPERAND (init, 1)) == NEW_ARRAY_INIT)\n+\t      if (TREE_OPERAND (init, 1) \n+\t\t  && TREE_CODE (TREE_OPERAND (init, 1)) == NEW_ARRAY_INIT)\n \t\tTREE_STATIC (TREE_OPERAND (init, 1)) = 1;\n \t    }\n \t  /* A non-static field declared with an immediate initialization is\n@@ -6067,6 +6096,11 @@ method_header (flags, type, mdecl, throws)\n   /* Eventually set the @deprecated tag flag */\n   CHECK_DEPRECATED (meth);\n \n+  /* If doing xref, store column and line number information instead\n+     of the line number only. */\n+  if (flag_emit_xref)\n+    DECL_SOURCE_LINE (meth) = EXPR_WFL_LINECOL (id);\n+\n   return meth;\n }\n \n@@ -6100,7 +6134,8 @@ finish_method_declaration (method_body)\n   exit_block ();\n   /* Merge last line of the function with first line, directly in the\n      function decl. It will be used to emit correct debug info. */\n-  DECL_SOURCE_LINE_MERGE (current_function_decl, ctxp->last_ccb_indent1);\n+  if (!flag_emit_xref)\n+    DECL_SOURCE_LINE_MERGE (current_function_decl, ctxp->last_ccb_indent1);\n   /* So we don't have an irrelevant function declaration context for\n      the next static block we'll see. */\n   current_function_decl = NULL_TREE;\n@@ -7183,14 +7218,35 @@ java_check_regular_methods (class_decl)\n \t  char *t = strdup (lang_printable_name (TREE_TYPE (TREE_TYPE (found)),\n \t\t\t\t\t\t 0));\n \t  parse_error_context \n-\t    (method_wfl, \n+\t    (method_wfl,\n \t     \"Method `%s' was defined with return type `%s' in class `%s'\", \n \t     lang_printable_name (found, 0), t,\n \t     IDENTIFIER_POINTER \n \t       (DECL_NAME (TYPE_NAME (DECL_CONTEXT (found)))));\n \t  free (t);\n \t}\n \n+      aflags = get_access_flags_from_decl (found);\n+      /* If the method has default, access in an other package, then\n+\t issue a warning that the current method doesn't override the\n+\t one that was found elsewhere. Do not issue this warning when\n+\t the match was found in java.lang.Object.  */\n+      if (DECL_CONTEXT (found) != object_type_node\n+\t  && ((aflags & 0x7) == 0)\n+\t  && !class_in_current_package (DECL_CONTEXT (found))\n+\t  && flag_not_overriding)\n+        {\n+\t  parse_warning_context \n+\t    (method_wfl, \"Method `%s' in class `%s' does not \"\n+\t     \"override the corresponding method in class `%s', which is \"\n+\t     \"private to a different package\",\n+\t     lang_printable_name (found, 0),\n+\t     IDENTIFIER_POINTER (DECL_NAME (class_decl)),\n+\t     IDENTIFIER_POINTER (DECL_NAME \n+\t\t\t\t (TYPE_NAME (DECL_CONTEXT (found)))));\n+\t  continue;\n+\t}\n+\n       /* Can't override final. Can't override static. */\n       if (METHOD_FINAL (found) || METHOD_STATIC (found))\n \t{\n@@ -7207,6 +7263,7 @@ java_check_regular_methods (class_decl)\n \t       (DECL_NAME (TYPE_NAME (DECL_CONTEXT (found)))));\n \t  continue;\n \t}\n+\n       /* Static method can't override instance method. */\n       if (METHOD_STATIC (method))\n \t{\n@@ -7220,7 +7277,6 @@ java_check_regular_methods (class_decl)\n \t  continue;\n \t}\n \n-      aflags = get_access_flags_from_decl (found);\n       /* - Overriding/hiding public must be public\n \t - Overriding/hiding protected must be protected or public\n          - If the overriden or hidden method has default (package)\n@@ -7247,22 +7303,6 @@ java_check_regular_methods (class_decl)\n \t exceptions, if any */\n       check_throws_clauses (method, method_wfl, found);\n \n-      /* If the method has default access in an other package, then\n-\t issue a warning that the current method doesn't override the\n-\t one that was found elsewhere. Do not issue this warning when\n-\t the match was found in java.lang.Object.  */\n-      if (DECL_CONTEXT (found) != object_type_node \n-\t  && (!aflags || (aflags > ACC_PROTECTED))\n-\t  && !class_in_current_package (DECL_CONTEXT (found))\n-\t  && flag_not_overriding)\n-\tparse_warning_context \n-\t  (method_wfl, \"Method `%s' in class `%s' does not \"\n-\t   \"override the corresponding method in class `%s', which is \"\n-\t   \"private to a different package\",\n-\t   lang_printable_name (found, 0),\n-\t   IDENTIFIER_POINTER (DECL_NAME (class_decl)),\n-\t   IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (DECL_CONTEXT (found)))));\n-\n       /* Inheriting multiple methods with the same signature. FIXME */\n     }\n   \n@@ -8697,12 +8737,7 @@ resolve_expression_name (id, orig)\n \t\t a static variable. */\n \t      if (!fs && METHOD_STATIC (current_function_decl))\n \t        {\n-\t\t  parse_error_context \n-\t\t    (id, \"Can't make a static reference to nonstatic variable \"\n-\t\t     \"`%s' in class `%s'\",\n-\t\t     IDENTIFIER_POINTER (name),\n-\t\t     IDENTIFIER_POINTER (DECL_NAME \n-\t\t\t\t\t (TYPE_NAME (current_class))));\n+\t\t  static_ref_err (id, name, current_class);\n \t\t  return error_mark_node;\n \t\t}\n \t      /* Instance variables can't appear as an argument of\n@@ -8747,6 +8782,17 @@ resolve_expression_name (id, orig)\n   return error_mark_node;\n }\n \n+static void\n+static_ref_err (wfl, field_id, class_type)\n+    tree wfl, field_id, class_type;\n+{\n+  parse_error_context \n+    (wfl, \n+     \"Can't make a static reference to nonstatic variable `%s' in class `%s'\",\n+     IDENTIFIER_POINTER (field_id), \n+     IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (class_type))));\n+}\n+\n /* 15.10.1 Field Acess Using a Primary and/or Expression Name.\n    We return something suitable to generate the field access. We also\n    return the field decl in FIELD_DECL and its type in FIELD_TYPE.  If\n@@ -8792,7 +8838,8 @@ resolve_field_access (qual_wfl, field_decl, field_type)\n \t  static_final_found = 1;\n \t}\n       else\n-\tfield_ref = build_field_ref ((is_static ? NULL_TREE : where_found), \n+\tfield_ref = build_field_ref ((is_static && !flag_emit_xref? \n+\t\t\t\t      NULL_TREE : where_found), \n \t\t\t\t     type_found, DECL_NAME (decl));\n       if (field_ref == error_mark_node)\n \treturn error_mark_node;\n@@ -8802,7 +8849,7 @@ resolve_field_access (qual_wfl, field_decl, field_type)\n \t  field_ref = build_class_init (type_found, field_ref);\n \t  /* If the static field was identified by an expression that\n \t     needs to be generated, make the field access a compound\n-\t     expression whose first part of the evaluation of the\n+\t     expression whose first part is the evaluation of the\n \t     field selector part. */\n \t  if (where_found && TREE_CODE (where_found) != TYPE_DECL \n \t      && TREE_CODE (where_found) != RECORD_TYPE)\n@@ -9063,8 +9110,17 @@ resolve_qualified_expression_name (wfl, found_decl, where_found, type_found)\n \t      decl = QUAL_RESOLUTION (q);\n \t      if (!type)\n \t\t{\n-\t\t  if (!FIELD_STATIC (decl))\n-\t\t    *where_found = current_this;\n+\t\t  if (TREE_CODE (decl) == FIELD_DECL && !FIELD_STATIC (decl))\n+\t\t    {\n+\t\t      if (current_this)\n+\t\t\t*where_found = current_this;\n+\t\t      else\n+\t\t\t{\n+\t\t\t  static_ref_err (qual_wfl, DECL_NAME (decl),\n+\t\t\t\t\t  current_class);\n+\t\t\t  return 1;\n+\t\t\t}\n+\t\t    }\n \t\t  else\n \t\t    {\n \t\t      *where_found = TREE_TYPE (decl);\n@@ -9147,11 +9203,7 @@ resolve_qualified_expression_name (wfl, found_decl, where_found, type_found)\n \t      if (!from_super && from_type \n \t\t  && !TYPE_INTERFACE_P (type) && !is_static)\n \t\t{\n-\t\t  parse_error_context \n-\t\t    (qual_wfl, \"Can't make a static reference to nonstatic \"\n-\t\t     \"variable `%s' in class `%s'\",\n-\t\t     IDENTIFIER_POINTER (EXPR_WFL_NODE (qual_wfl)),\n-\t\t     IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type))));\n+\t\t  static_ref_err (qual_wfl, EXPR_WFL_NODE (qual_wfl), type);\n \t\t  return 1;\n \t\t}\n \t      from_cast = from_super = 0;\n@@ -10211,7 +10263,8 @@ java_complete_tree (node)\n {\n   node = java_complete_lhs (node);\n   if (TREE_CODE (node) == VAR_DECL && FIELD_STATIC (node)\n-      && FIELD_FINAL (node) && DECL_INITIAL (node) != NULL_TREE)\n+      && FIELD_FINAL (node) && DECL_INITIAL (node) != NULL_TREE\n+      && !flag_emit_xref)\n     {\n       tree value = DECL_INITIAL (node);\n       DECL_INITIAL (node) = NULL_TREE;\n@@ -10696,7 +10749,8 @@ java_complete_lhs (node)\n          add_field. */\n       if (IS_CLINIT (current_function_decl) \n \t  && MODIFY_EXPR_FROM_INITIALIZATION_P (node)\n-\t  && TREE_CODE (TREE_OPERAND (node, 0)) == VAR_DECL)\n+\t  && TREE_CODE (TREE_OPERAND (node, 0)) == VAR_DECL\n+\t  && !flag_emit_xref)\n \tnode = patch_initialized_static_field (node);\n \n       return node;"}, {"sha": "eca526a411e2b7f3db7f3ab6adf20baa990b5123", "filename": "gcc/java/parse.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "patch": "@@ -483,6 +483,9 @@ typedef struct _jdeplist {\n      (LINE) = (V) >> 12;\t\t\t\\\n      (COL) = (V) & 0xfff;\t\t\t\\\n    }\n+/* Add X to the column number information */\n+#define EXPR_WFL_ADD_COL(V, X)\t\t\t\t\t\\\n+  (V) = (((V) & 0xfffff000) | ((((V) & 0xfff) + (X)) & 0xfff))\n \n /* Build a WFL for expression nodes */\n #define BUILD_EXPR_WFL(NODE, WFL)\t\t\t\t\t\\\n@@ -586,6 +589,10 @@ typedef struct _jdeplist {\n \n /* Macro to access the osb (opening square bracket) count */\n #define CURRENT_OSB(C) (C)->osb_number [(C)->osb_depth]\n+\n+/* Macro for the xreferencer */\n+#define DECL_END_SOURCE_LINE(DECL)       DECL_FRAME_SIZE (DECL)\n+#define DECL_INHERITED_SOURCE_LINE(DECL) DECL_FIELD_SIZE (DECL)\n      \n /* Parser context data structure. */\n struct parser_ctxt {"}, {"sha": "deaa3e878a04a976945a152b542c258436c45a7e", "filename": "gcc/java/parse.y", "status": "modified", "additions": 95, "deletions": 41, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f10c2e2fc51c27543682d4db589b2251c6fd7f0/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=7f10c2e2fc51c27543682d4db589b2251c6fd7f0", "patch": "@@ -241,6 +241,7 @@ static tree patch_initialized_static_field PROTO ((tree));\n static tree fold_constant_for_init PROTO ((tree, tree));\n static tree strip_out_static_field_access_decl PROTO ((tree));\n static jdeplist *reverse_jdep_list PROTO ((struct parser_ctxt *));\n+static void static_ref_err PROTO ((tree, tree, tree));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -431,7 +432,7 @@ static tree current_static_block = NULL_TREE;\n %token   <operator>     EQ_TK GTE_TK ZRS_TK SRS_TK GT_TK LTE_TK LS_TK \n %token   <operator>     BOOL_AND_TK AND_TK BOOL_OR_TK OR_TK INCR_TK PLUS_TK\n %token   <operator>     DECR_TK MINUS_TK MULT_TK DIV_TK XOR_TK REM_TK NEQ_TK\n-%token   <operator>     NEG_TK REL_QM_TK REL_CL_TK NOT_TK LT_TK OCB_TK\n+%token   <operator>     NEG_TK REL_QM_TK REL_CL_TK NOT_TK LT_TK OCB_TK CCB_TK\n %token   <operator>     OP_TK OSB_TK DOT_TK THROW_TK INSTANCEOF_TK\n %type    <operator>\tTHIS_TK SUPER_TK RETURN_TK BREAK_TK CONTINUE_TK \n %type\t <operator>     CASE_TK DEFAULT_TK TRY_TK CATCH_TK SYNCHRONIZED_TK\n@@ -732,9 +733,21 @@ interface_type_list:\n \n class_body:\n \tOCB_TK CCB_TK\n-\t\t{ $$ = ctxp->current_parsed_class; }\n+\t\t{ \n+\t\t  /* Store the location of the `}' when doing xrefs */\n+\t\t  if (flag_emit_xref)\n+\t\t    DECL_END_SOURCE_LINE (ctxp->current_parsed_class) = \n+\t\t      EXPR_WFL_ADD_COL ($2.location, 1);\n+\t\t  $$ = ctxp->current_parsed_class;\n+\t\t}\n |\tOCB_TK class_body_declarations CCB_TK\n-\t\t{ $$ = ctxp->current_parsed_class; }\n+\t\t{ \n+\t\t  /* Store the location of the `}' when doing xrefs */\n+\t\t  if (flag_emit_xref)\n+\t\t    DECL_END_SOURCE_LINE (ctxp->current_parsed_class) = \n+\t\t      EXPR_WFL_ADD_COL ($3.location, 1);\n+\t\t  $$ = ctxp->current_parsed_class;\n+\t\t}\n ;\n \n class_body_declarations:\n@@ -1148,7 +1161,13 @@ variable_initializers:\n /* 19.11 Production from 14: Blocks and Statements  */\n block:\n \tOCB_TK CCB_TK\n-\t\t{ $$ = empty_stmt_node; }\n+\t\t{ \n+\t\t  /* Store the location of the `}' when doing xrefs */\n+\t\t  if (current_function_decl && flag_emit_xref)\n+\t\t    DECL_END_SOURCE_LINE (current_function_decl) = \n+\t\t      EXPR_WFL_ADD_COL ($2.location, 1);\n+\t\t  $$ = empty_stmt_node; \n+\t\t}\n |\tblock_begin block_statements block_end\n \t\t{ $$ = $3; }\n ;\n@@ -1162,6 +1181,10 @@ block_end:\n \tCCB_TK\n \t\t{ \n \t\t  maybe_absorb_scoping_blocks ();\n+\t\t  /* Store the location of the `}' when doing xrefs */\n+\t\t  if (current_function_decl && flag_emit_xref)\n+\t\t    DECL_END_SOURCE_LINE (current_function_decl) = \n+\t\t      EXPR_WFL_ADD_COL ($1.location, 1);\t\t  \n \t\t  $$ = exit_block ();\n \t\t}\n ;\n@@ -3014,6 +3037,11 @@ create_class (flags, id, super, interfaces)\n   CLASS_COMPLETE_P (decl) = 1;\n   add_superinterfaces (decl, interfaces);\n \n+  /* If doing xref, store the location at which the inherited class\n+     (if any) was seen. */\n+  if (flag_emit_xref && super)\n+    DECL_INHERITED_SOURCE_LINE (decl) = EXPR_WFL_LINECOL (super);\n+\n   /* Eventually sets the @deprecated tag flag */\n   CHECK_DEPRECATED (decl);\n \n@@ -3183,7 +3211,8 @@ register_fields (flags, type, variable_list)\n \t      TREE_CHAIN (init) = ctxp->static_initialized;\n \t      ctxp->static_initialized = init;\n \t      DECL_INITIAL (field_decl) = TREE_OPERAND (init, 1);\n-\t      if (TREE_CODE (TREE_OPERAND (init, 1)) == NEW_ARRAY_INIT)\n+\t      if (TREE_OPERAND (init, 1) \n+\t\t  && TREE_CODE (TREE_OPERAND (init, 1)) == NEW_ARRAY_INIT)\n \t\tTREE_STATIC (TREE_OPERAND (init, 1)) = 1;\n \t    }\n \t  /* A non-static field declared with an immediate initialization is\n@@ -3463,6 +3492,11 @@ method_header (flags, type, mdecl, throws)\n   /* Eventually set the @deprecated tag flag */\n   CHECK_DEPRECATED (meth);\n \n+  /* If doing xref, store column and line number information instead\n+     of the line number only. */\n+  if (flag_emit_xref)\n+    DECL_SOURCE_LINE (meth) = EXPR_WFL_LINECOL (id);\n+\n   return meth;\n }\n \n@@ -3496,7 +3530,8 @@ finish_method_declaration (method_body)\n   exit_block ();\n   /* Merge last line of the function with first line, directly in the\n      function decl. It will be used to emit correct debug info. */\n-  DECL_SOURCE_LINE_MERGE (current_function_decl, ctxp->last_ccb_indent1);\n+  if (!flag_emit_xref)\n+    DECL_SOURCE_LINE_MERGE (current_function_decl, ctxp->last_ccb_indent1);\n   /* So we don't have an irrelevant function declaration context for\n      the next static block we'll see. */\n   current_function_decl = NULL_TREE;\n@@ -4579,14 +4614,35 @@ java_check_regular_methods (class_decl)\n \t  char *t = strdup (lang_printable_name (TREE_TYPE (TREE_TYPE (found)),\n \t\t\t\t\t\t 0));\n \t  parse_error_context \n-\t    (method_wfl, \n+\t    (method_wfl,\n \t     \"Method `%s' was defined with return type `%s' in class `%s'\", \n \t     lang_printable_name (found, 0), t,\n \t     IDENTIFIER_POINTER \n \t       (DECL_NAME (TYPE_NAME (DECL_CONTEXT (found)))));\n \t  free (t);\n \t}\n \n+      aflags = get_access_flags_from_decl (found);\n+      /* If the method has default, access in an other package, then\n+\t issue a warning that the current method doesn't override the\n+\t one that was found elsewhere. Do not issue this warning when\n+\t the match was found in java.lang.Object.  */\n+      if (DECL_CONTEXT (found) != object_type_node\n+\t  && ((aflags & 0x7) == 0)\n+\t  && !class_in_current_package (DECL_CONTEXT (found))\n+\t  && flag_not_overriding)\n+        {\n+\t  parse_warning_context \n+\t    (method_wfl, \"Method `%s' in class `%s' does not \"\n+\t     \"override the corresponding method in class `%s', which is \"\n+\t     \"private to a different package\",\n+\t     lang_printable_name (found, 0),\n+\t     IDENTIFIER_POINTER (DECL_NAME (class_decl)),\n+\t     IDENTIFIER_POINTER (DECL_NAME \n+\t\t\t\t (TYPE_NAME (DECL_CONTEXT (found)))));\n+\t  continue;\n+\t}\n+\n       /* Can't override final. Can't override static. */\n       if (METHOD_FINAL (found) || METHOD_STATIC (found))\n \t{\n@@ -4603,6 +4659,7 @@ java_check_regular_methods (class_decl)\n \t       (DECL_NAME (TYPE_NAME (DECL_CONTEXT (found)))));\n \t  continue;\n \t}\n+\n       /* Static method can't override instance method. */\n       if (METHOD_STATIC (method))\n \t{\n@@ -4616,7 +4673,6 @@ java_check_regular_methods (class_decl)\n \t  continue;\n \t}\n \n-      aflags = get_access_flags_from_decl (found);\n       /* - Overriding/hiding public must be public\n \t - Overriding/hiding protected must be protected or public\n          - If the overriden or hidden method has default (package)\n@@ -4643,22 +4699,6 @@ java_check_regular_methods (class_decl)\n \t exceptions, if any */\n       check_throws_clauses (method, method_wfl, found);\n \n-      /* If the method has default access in an other package, then\n-\t issue a warning that the current method doesn't override the\n-\t one that was found elsewhere. Do not issue this warning when\n-\t the match was found in java.lang.Object.  */\n-      if (DECL_CONTEXT (found) != object_type_node \n-\t  && (!aflags || (aflags > ACC_PROTECTED))\n-\t  && !class_in_current_package (DECL_CONTEXT (found))\n-\t  && flag_not_overriding)\n-\tparse_warning_context \n-\t  (method_wfl, \"Method `%s' in class `%s' does not \"\n-\t   \"override the corresponding method in class `%s', which is \"\n-\t   \"private to a different package\",\n-\t   lang_printable_name (found, 0),\n-\t   IDENTIFIER_POINTER (DECL_NAME (class_decl)),\n-\t   IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (DECL_CONTEXT (found)))));\n-\n       /* Inheriting multiple methods with the same signature. FIXME */\n     }\n   \n@@ -6093,12 +6133,7 @@ resolve_expression_name (id, orig)\n \t\t a static variable. */\n \t      if (!fs && METHOD_STATIC (current_function_decl))\n \t        {\n-\t\t  parse_error_context \n-\t\t    (id, \"Can't make a static reference to nonstatic variable \"\n-\t\t     \"`%s' in class `%s'\",\n-\t\t     IDENTIFIER_POINTER (name),\n-\t\t     IDENTIFIER_POINTER (DECL_NAME \n-\t\t\t\t\t (TYPE_NAME (current_class))));\n+\t\t  static_ref_err (id, name, current_class);\n \t\t  return error_mark_node;\n \t\t}\n \t      /* Instance variables can't appear as an argument of\n@@ -6143,6 +6178,17 @@ resolve_expression_name (id, orig)\n   return error_mark_node;\n }\n \n+static void\n+static_ref_err (wfl, field_id, class_type)\n+    tree wfl, field_id, class_type;\n+{\n+  parse_error_context \n+    (wfl, \n+     \"Can't make a static reference to nonstatic variable `%s' in class `%s'\",\n+     IDENTIFIER_POINTER (field_id), \n+     IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (class_type))));\n+}\n+\n /* 15.10.1 Field Acess Using a Primary and/or Expression Name.\n    We return something suitable to generate the field access. We also\n    return the field decl in FIELD_DECL and its type in FIELD_TYPE.  If\n@@ -6188,7 +6234,8 @@ resolve_field_access (qual_wfl, field_decl, field_type)\n \t  static_final_found = 1;\n \t}\n       else\n-\tfield_ref = build_field_ref ((is_static ? NULL_TREE : where_found), \n+\tfield_ref = build_field_ref ((is_static && !flag_emit_xref? \n+\t\t\t\t      NULL_TREE : where_found), \n \t\t\t\t     type_found, DECL_NAME (decl));\n       if (field_ref == error_mark_node)\n \treturn error_mark_node;\n@@ -6198,7 +6245,7 @@ resolve_field_access (qual_wfl, field_decl, field_type)\n \t  field_ref = build_class_init (type_found, field_ref);\n \t  /* If the static field was identified by an expression that\n \t     needs to be generated, make the field access a compound\n-\t     expression whose first part of the evaluation of the\n+\t     expression whose first part is the evaluation of the\n \t     field selector part. */\n \t  if (where_found && TREE_CODE (where_found) != TYPE_DECL \n \t      && TREE_CODE (where_found) != RECORD_TYPE)\n@@ -6459,8 +6506,17 @@ resolve_qualified_expression_name (wfl, found_decl, where_found, type_found)\n \t      decl = QUAL_RESOLUTION (q);\n \t      if (!type)\n \t\t{\n-\t\t  if (!FIELD_STATIC (decl))\n-\t\t    *where_found = current_this;\n+\t\t  if (TREE_CODE (decl) == FIELD_DECL && !FIELD_STATIC (decl))\n+\t\t    {\n+\t\t      if (current_this)\n+\t\t\t*where_found = current_this;\n+\t\t      else\n+\t\t\t{\n+\t\t\t  static_ref_err (qual_wfl, DECL_NAME (decl),\n+\t\t\t\t\t  current_class);\n+\t\t\t  return 1;\n+\t\t\t}\n+\t\t    }\n \t\t  else\n \t\t    {\n \t\t      *where_found = TREE_TYPE (decl);\n@@ -6543,11 +6599,7 @@ resolve_qualified_expression_name (wfl, found_decl, where_found, type_found)\n \t      if (!from_super && from_type \n \t\t  && !TYPE_INTERFACE_P (type) && !is_static)\n \t\t{\n-\t\t  parse_error_context \n-\t\t    (qual_wfl, \"Can't make a static reference to nonstatic \"\n-\t\t     \"variable `%s' in class `%s'\",\n-\t\t     IDENTIFIER_POINTER (EXPR_WFL_NODE (qual_wfl)),\n-\t\t     IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type))));\n+\t\t  static_ref_err (qual_wfl, EXPR_WFL_NODE (qual_wfl), type);\n \t\t  return 1;\n \t\t}\n \t      from_cast = from_super = 0;\n@@ -7607,7 +7659,8 @@ java_complete_tree (node)\n {\n   node = java_complete_lhs (node);\n   if (TREE_CODE (node) == VAR_DECL && FIELD_STATIC (node)\n-      && FIELD_FINAL (node) && DECL_INITIAL (node) != NULL_TREE)\n+      && FIELD_FINAL (node) && DECL_INITIAL (node) != NULL_TREE\n+      && !flag_emit_xref)\n     {\n       tree value = DECL_INITIAL (node);\n       DECL_INITIAL (node) = NULL_TREE;\n@@ -8092,7 +8145,8 @@ java_complete_lhs (node)\n          add_field. */\n       if (IS_CLINIT (current_function_decl) \n \t  && MODIFY_EXPR_FROM_INITIALIZATION_P (node)\n-\t  && TREE_CODE (TREE_OPERAND (node, 0)) == VAR_DECL)\n+\t  && TREE_CODE (TREE_OPERAND (node, 0)) == VAR_DECL\n+\t  && !flag_emit_xref)\n \tnode = patch_initialized_static_field (node);\n \n       return node;"}]}