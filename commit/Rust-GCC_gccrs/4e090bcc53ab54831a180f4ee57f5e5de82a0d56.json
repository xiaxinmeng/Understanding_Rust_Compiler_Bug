{"sha": "4e090bcc53ab54831a180f4ee57f5e5de82a0d56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwOTBiY2M1M2FiNTQ4MzFhMTgwZjRlZTU3ZjVlNWRlODJhMGQ1Ng==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2018-01-11T15:41:41Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2018-01-11T15:41:41Z"}, "message": "re PR tree-optimization/83695 (ICE on valid code at -O3: Segmentation fault)\n\n\tPR tree-optimization/83695\n\t* gimple-loop-linterchange.cc\n\t(tree_loop_interchange::interchange_loops): Call scev_reset_htab to\n\treset cached scev information after interchange.\n\t(pass_linterchange::execute): Remove call to scev_reset_htab.\n\n\tgcc/testsuite\n\tPR tree-optimization/83695\n\t* gcc.dg/tree-ssa/pr83695.c: New test.\n\nFrom-SVN: r256541", "tree": {"sha": "c13ad0c6e57e8bfdfcb60f6ad674c63a67904aea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c13ad0c6e57e8bfdfcb60f6ad674c63a67904aea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e090bcc53ab54831a180f4ee57f5e5de82a0d56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e090bcc53ab54831a180f4ee57f5e5de82a0d56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e090bcc53ab54831a180f4ee57f5e5de82a0d56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e090bcc53ab54831a180f4ee57f5e5de82a0d56/comments", "author": null, "committer": null, "parents": [{"sha": "eccf4d702029b48512d573382ef5534a5df23893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eccf4d702029b48512d573382ef5534a5df23893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eccf4d702029b48512d573382ef5534a5df23893"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "878d72c22399f01d0b33e07361cec1bf7b168d5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e090bcc53ab54831a180f4ee57f5e5de82a0d56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e090bcc53ab54831a180f4ee57f5e5de82a0d56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e090bcc53ab54831a180f4ee57f5e5de82a0d56", "patch": "@@ -1,3 +1,11 @@\n+2018-01-11  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/83695\n+\t* gimple-loop-linterchange.cc\n+\t(tree_loop_interchange::interchange_loops): Call scev_reset_htab to\n+\treset cached scev information after interchange.\n+\t(pass_linterchange::execute): Remove call to scev_reset_htab.\n+\n 2018-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm_neon.h (vfmlal_lane_low_u32, vfmlal_lane_high_u32,"}, {"sha": "eb35263e69c835723b2d77be598f36af4ed4024e", "filename": "gcc/gimple-loop-interchange.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e090bcc53ab54831a180f4ee57f5e5de82a0d56/gcc%2Fgimple-loop-interchange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e090bcc53ab54831a180f4ee57f5e5de82a0d56/gcc%2Fgimple-loop-interchange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-loop-interchange.cc?ref=4e090bcc53ab54831a180f4ee57f5e5de82a0d56", "patch": "@@ -1119,6 +1119,10 @@ tree_loop_interchange::interchange_loops (loop_cand &iloop, loop_cand &oloop)\n   oloop.m_loop->any_likely_upper_bound = false;\n   free_numbers_of_iterations_estimates (oloop.m_loop);\n \n+  /* Clear all cached scev information.  This is expensive but shouldn't be\n+     a problem given we interchange in very limited times.  */\n+  scev_reset_htab ();\n+\n   /* ???  The association between the loop data structure and the\n      CFG changed, so what was loop N at the source level is now\n      loop M.  We should think of retaining the association or breaking\n@@ -2070,9 +2074,6 @@ pass_linterchange::execute (function *fun)\n       loop_nest.release ();\n     }\n \n-  if (changed_p)\n-    scev_reset_htab ();\n-\n   return changed_p ? (TODO_update_ssa_only_virtuals) : 0;\n }\n "}, {"sha": "7681b0eb78ddd2baa6d5d7e3fee1708da491ebd1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e090bcc53ab54831a180f4ee57f5e5de82a0d56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e090bcc53ab54831a180f4ee57f5e5de82a0d56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e090bcc53ab54831a180f4ee57f5e5de82a0d56", "patch": "@@ -1,3 +1,8 @@\n+2018-01-11  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/83695\n+\t* gcc.dg/tree-ssa/pr83695.c: New test.\n+\n 2018-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/arm/simd/fp16fml_lane_high.c: New test."}, {"sha": "af56a313f40a42c2e1464e939fe1e3ea85e5dd5f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr83695.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e090bcc53ab54831a180f4ee57f5e5de82a0d56/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr83695.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e090bcc53ab54831a180f4ee57f5e5de82a0d56/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr83695.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr83695.c?ref=4e090bcc53ab54831a180f4ee57f5e5de82a0d56", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+int a[3][3][3], b, d;\n+short c;\n+unsigned char e;\n+\n+static void f ()\n+{\n+  for (c = 0; c < 2; c++)\n+      for (e = 0; e < 3; e++)\n+        for (b = 0; b < 3; b++)\n+          a[b][e][b] = 0;\n+  while (1)\n+    ;\n+}\n+\n+int main ()\n+{\n+  if (d)\n+    f ();\n+  return 0;\n+}"}]}