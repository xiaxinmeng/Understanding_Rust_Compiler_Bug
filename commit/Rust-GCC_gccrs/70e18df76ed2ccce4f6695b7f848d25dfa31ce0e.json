{"sha": "70e18df76ed2ccce4f6695b7f848d25dfa31ce0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBlMThkZjc2ZWQyY2NjZTRmNjY5NWI3Zjg0OGQyNWRmYTMxY2UwZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-06-13T11:20:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2018-06-13T11:20:23Z"}, "message": "re PR target/86048 (.seh_savexmm offset is negative error when compiling libpng)\n\n\tPR target/86048\n\t* config/i386/winnt.c (i386_pe_seh_cold_init): Do not emit negative\n\toffsets for register save directives.  Emit a second batch of save\n\tdirectives, if need be, when the function accesses prior frames.\n\nFrom-SVN: r261544", "tree": {"sha": "1a324714f7d9bfc0c7a33b273c25abe20f1cda90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a324714f7d9bfc0c7a33b273c25abe20f1cda90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e/comments", "author": null, "committer": null, "parents": [{"sha": "8c191c89cfde7c74955c21d488702077cca89117", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c191c89cfde7c74955c21d488702077cca89117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c191c89cfde7c74955c21d488702077cca89117"}], "stats": {"total": 62, "additions": 58, "deletions": 4}, "files": [{"sha": "103877a7e32f4f84a24a213eebfafbc528cd71c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70e18df76ed2ccce4f6695b7f848d25dfa31ce0e", "patch": "@@ -1,3 +1,10 @@\n+2018-06-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/86048\n+\t* config/i386/winnt.c (i386_pe_seh_cold_init): Do not emit negative\n+\toffsets for register save directives.  Emit a second batch of save\n+\tdirectives, if need be, when the function accesses prior frames.\n+\n 2018-06-12  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/fpu.md (fmasf4): Force operand to register."}, {"sha": "89e4b6e8515886046a78e9bba375620cdfe67292", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=70e18df76ed2ccce4f6695b7f848d25dfa31ce0e", "patch": "@@ -922,11 +922,14 @@ i386_pe_seh_cold_init (FILE *f, const char *name)\n     fprintf (f, \"\\t.seh_stackalloc\\t\" HOST_WIDE_INT_PRINT_DEC \"\\n\", offset);\n \n   for (int regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n-    if (seh->reg_offset[regno] > 0)\n+    if (seh->reg_offset[regno] > 0 && seh->reg_offset[regno] <= alloc_offset)\n       {\n-\tfputs ((SSE_REGNO_P (regno) ? \"\\t.seh_savexmm\\t\"\n-\t       : GENERAL_REGNO_P (regno) ?  \"\\t.seh_savereg\\t\"\n-\t\t : (gcc_unreachable (), \"\")), f);\n+\tif (SSE_REGNO_P (regno))\n+\t  fputs (\"\\t.seh_savexmm\\t\", f);\n+\telse if (GENERAL_REGNO_P (regno))\n+\t  fputs (\"\\t.seh_savereg\\t\", f);\n+\telse\n+\t  gcc_unreachable ();\n \tprint_reg (gen_rtx_REG (DImode, regno), 0, f);\n \tfprintf (f, \", \" HOST_WIDE_INT_PRINT_DEC \"\\n\",\n \t\t alloc_offset - seh->reg_offset[regno]);\n@@ -949,6 +952,20 @@ i386_pe_seh_cold_init (FILE *f, const char *name)\n       offset = seh->sp_offset - alloc_offset;\n       if (offset > 0 && offset < SEH_MAX_FRAME_SIZE)\n \tfprintf (f, \"\\t.seh_stackalloc\\t\" HOST_WIDE_INT_PRINT_DEC \"\\n\", offset);\n+\n+      for (int regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n+\tif (seh->reg_offset[regno] > alloc_offset)\n+\t  {\n+\t    if (SSE_REGNO_P (regno))\n+\t      fputs (\"\\t.seh_savexmm\\t\", f);\n+\t    else if (GENERAL_REGNO_P (regno))\n+\t      fputs (\"\\t.seh_savereg\\t\", f);\n+\t    else\n+\t      gcc_unreachable ();\n+\t    print_reg (gen_rtx_REG (DImode, regno), 0, f);\n+\t    fprintf (f, \", \" HOST_WIDE_INT_PRINT_DEC \"\\n\",\n+\t\t     seh->sp_offset - seh->reg_offset[regno]);\n+\t  }\n     }\n \n   fputs (\"\\t.seh_endprologue\\n\", f);"}, {"sha": "8d5d40598a4ba20cdcf3a2b7ab09c86ec2942471", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=70e18df76ed2ccce4f6695b7f848d25dfa31ce0e", "patch": "@@ -1,3 +1,7 @@\n+2018-06-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.target/i386/pr86048.c: New test.\n+\n 2018-06-12  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* gcc.target/arc/fma-1.c: New test."}, {"sha": "cd735793926bdbcb6026814e74734fe359e2db75", "filename": "gcc/testsuite/gcc.target/i386/pr86048.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86048.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70e18df76ed2ccce4f6695b7f848d25dfa31ce0e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86048.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86048.c?ref=70e18df76ed2ccce4f6695b7f848d25dfa31ce0e", "patch": "@@ -0,0 +1,26 @@\n+/* PR target/86048 */\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target return_address } */\n+\n+extern void abort (void);\n+\n+void *foo (unsigned int *data, unsigned int len)\n+{\n+  unsigned int local_data[128];\n+\n+  if (len > 128)\n+    abort ();\n+\n+  for (unsigned int i = 0; i < len; i++)\n+    local_data[i] = data[i] + data[len - 1 - i] * 2;\n+\n+  void *ret = __builtin_frame_address (0);\n+\n+  for (unsigned int i = 0; i < len; i++)\n+    ret = ret + local_data[i] % 8;\n+\n+  __asm__ __volatile__ (\"\" : : : \"%xmm6\");\n+\n+  return ret;\n+}"}]}