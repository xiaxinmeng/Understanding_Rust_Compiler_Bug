{"sha": "a940b4d9ab2566bce05dd5abb9b90467684a43e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk0MGI0ZDlhYjI1NjZiY2UwNWRkNWFiYjliOTA0Njc2ODRhNDNlOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-11T08:12:07Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-11T08:12:07Z"}, "message": "cgraph.c: Include ipa-utils.h\n\n\t* cgraph.c: Include ipa-utils.h\n\t(cgraph_create_virtual_clone): Update references.\n\t* Makefile.in (cgraph.o): Add dependency at ipa-utils.h\n\nFrom-SVN: r159258", "tree": {"sha": "f130064a1afb004534493bef2e1ee78ef7e2723b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f130064a1afb004534493bef2e1ee78ef7e2723b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a940b4d9ab2566bce05dd5abb9b90467684a43e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a940b4d9ab2566bce05dd5abb9b90467684a43e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a940b4d9ab2566bce05dd5abb9b90467684a43e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a940b4d9ab2566bce05dd5abb9b90467684a43e8/comments", "author": null, "committer": null, "parents": [{"sha": "57762e976d599914956203d04f706744bec54ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57762e976d599914956203d04f706744bec54ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57762e976d599914956203d04f706744bec54ef1"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "3727c6b0a858297f706c07686beb51e416ec72b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a940b4d9ab2566bce05dd5abb9b90467684a43e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a940b4d9ab2566bce05dd5abb9b90467684a43e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a940b4d9ab2566bce05dd5abb9b90467684a43e8", "patch": "@@ -1,3 +1,9 @@\n+2010-05-11  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.c: Include ipa-utils.h\n+\t(cgraph_create_virtual_clone): Update references.\n+\t* Makefile.in (cgraph.o): Add dependency at ipa-utils.h\n+\n 2010-05-11  Christian Borntraeger  <borntraeger@de.ibm.com>\n \n         * tree-ssa-loop-prefetch.c (prune_ref_by_group_reuse): Reset"}, {"sha": "1e6749a47bcd29b231899217d6d364a95d267493", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a940b4d9ab2566bce05dd5abb9b90467684a43e8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a940b4d9ab2566bce05dd5abb9b90467684a43e8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a940b4d9ab2566bce05dd5abb9b90467684a43e8", "patch": "@@ -2883,7 +2883,7 @@ cgraph.o : cgraph.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h $(TOPLEV_H) $(FLAGS_H) $(GGC_H) $(TARGET_H) $(CGRAPH_H) \\\n    gt-cgraph.h output.h intl.h $(BASIC_BLOCK_H) debug.h $(HASHTAB_H) \\\n    $(TREE_INLINE_H) $(TREE_DUMP_H) $(TREE_FLOW_H) cif-code.def \\\n-   value-prof.h $(EXCEPT_H)\n+   value-prof.h $(EXCEPT_H) $(IPA_UTILS_H)\n cgraphunit.o : cgraphunit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) langhooks.h $(TREE_INLINE_H) $(TOPLEV_H) $(FLAGS_H) $(GGC_H) \\\n    $(TARGET_H) $(CGRAPH_H) intl.h pointer-set.h $(FUNCTION_H) $(GIMPLE_H) \\"}, {"sha": "5f609aaf4341f732b0772bf373a3e2822fd3951d", "filename": "gcc/cgraph.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a940b4d9ab2566bce05dd5abb9b90467684a43e8/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a940b4d9ab2566bce05dd5abb9b90467684a43e8/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=a940b4d9ab2566bce05dd5abb9b90467684a43e8", "patch": "@@ -96,6 +96,7 @@ The callgraph:\n #include \"except.h\"\n #include \"diagnostic.h\"\n #include \"rtl.h\"\n+#include \"ipa-utils.h\"\n \n static void cgraph_node_remove_callers (struct cgraph_node *node);\n static inline void cgraph_edge_remove_caller (struct cgraph_edge *e);\n@@ -2139,6 +2140,8 @@ cgraph_create_virtual_clone (struct cgraph_node *old_node,\n   struct cgraph_node *new_node = NULL;\n   tree new_decl;\n   struct cgraph_node key, **slot;\n+  size_t i;\n+  struct ipa_replace_map *map;\n \n   gcc_assert  (tree_versionable_function_p (old_decl));\n \n@@ -2170,6 +2173,26 @@ cgraph_create_virtual_clone (struct cgraph_node *old_node,\n   DECL_WEAK (new_node->decl) = 0;\n   new_node->clone.tree_map = tree_map;\n   new_node->clone.args_to_skip = args_to_skip;\n+  for (i = 0; VEC_iterate (ipa_replace_map_p, tree_map, i, map); i++)\n+    {\n+      tree var = map->new_tree;\n+\n+      STRIP_NOPS (var);\n+      if (TREE_CODE (var) != ADDR_EXPR)\n+\tcontinue;\n+      var = get_base_var (var);\n+      if (!var)\n+\tcontinue;\n+\n+      /* Record references of the future statement initializing the constant\n+\t argument.  */\n+      if (TREE_CODE (var) == FUNCTION_DECL)\n+\tipa_record_reference (new_node, NULL, cgraph_node (var),\n+\t\t\t      NULL, IPA_REF_ADDR, NULL);\n+      else if (TREE_CODE (var) == VAR_DECL)\n+\tipa_record_reference (new_node, NULL, NULL, varpool_node (var),\n+\t\t\t      IPA_REF_ADDR, NULL);\n+    }\n   if (!args_to_skip)\n     new_node->clone.combined_args_to_skip = old_node->clone.combined_args_to_skip;\n   else if (old_node->clone.combined_args_to_skip)"}]}