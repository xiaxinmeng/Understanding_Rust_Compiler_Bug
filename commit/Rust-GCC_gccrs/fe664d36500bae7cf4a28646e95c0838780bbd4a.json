{"sha": "fe664d36500bae7cf4a28646e95c0838780bbd4a", "node_id": "C_kwDOANBUbNoAKGZlNjY0ZDM2NTAwYmFlN2NmNGEyODY0NmU5NWMwODM4NzgwYmJkNGE", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-01-31T14:54:41Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-11T08:53:21Z"}, "message": "[Ada] Correctly reject record aggregate using brackets\n\nAda 2022 bracket syntax is only allowed for arrays and containers, not\nrecords. This change correctly rejects record aggregates using brackets\nalong with few cases of brackets being used instead of parentheses.\n\ngcc/ada/\n\n\t* libgnat/a-direct.adb (Start_Search_Internal): Use parentheses\n\tfor record aggregate.\n\t* libgnat/a-stbubo.adb (Get_UTF_8): Likewise.\n\t* libgnat/a-stbuun.adb (Get_UTF_8): Likewise.\n\t* libgnat/a-stzbou.ads (Null_Bounded_Wide_Wide_String):\n\tLikewise.\n\t* libgnat/a-swmwco.ads (Lower_Case_Mapping, Basic_Mapping):\n\tLikewise.\n\t* libgnat/a-szmzco.ads (Lower_Case_Mapping, Basic_Mapping):\n\tLikewise.\n\t* libgnat/s-statxd.adb (Fields): Likewise.\n\t* libgnat/s-stausa.adb (Initialize): Likewise.\n\t* sem_aggr.adb (Resolve_Record_Aggregate): Reject aggregates\n\tusing brackets.", "tree": {"sha": "3d2c7b518a23910c7a56981062a6a2b7978b2541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d2c7b518a23910c7a56981062a6a2b7978b2541"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe664d36500bae7cf4a28646e95c0838780bbd4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe664d36500bae7cf4a28646e95c0838780bbd4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe664d36500bae7cf4a28646e95c0838780bbd4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe664d36500bae7cf4a28646e95c0838780bbd4a/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e79b45ef0adb26d13923d8a1632ab81171f72255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e79b45ef0adb26d13923d8a1632ab81171f72255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e79b45ef0adb26d13923d8a1632ab81171f72255"}], "stats": {"total": 69, "additions": 39, "deletions": 30}, "files": [{"sha": "2c07cc4a332b76cc54d8adb819c95da7ba659210", "filename": "gcc/ada/libgnat/a-direct.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-direct.adb?ref=fe664d36500bae7cf4a28646e95c0838780bbd4a", "patch": "@@ -1404,11 +1404,11 @@ package body Ada.Directories is\n                   if Error /= 0 then\n                      Search.State.Dir_Contents.Append\n                        (Directory_Entry_Type'\n-                          [Valid           => True,\n+                          (Valid           => True,\n                            Name            => To_Unbounded_String (File_Name),\n                            Full_Name       => To_Unbounded_String (Path),\n                            Attr_Error_Code => Error,\n-                           others          => <>]);\n+                           others          => <>));\n \n                   --  Otherwise, if the file exists and matches the file kind\n                   --  Filter, add the file to the search results. We capture\n@@ -1445,14 +1445,14 @@ package body Ada.Directories is\n                      if Found then\n                         Search.State.Dir_Contents.Append\n                           (Directory_Entry_Type'\n-                             [Valid             => True,\n+                             (Valid             => True,\n                               Name              =>\n                                 To_Unbounded_String (File_Name),\n                               Full_Name         => To_Unbounded_String (Path),\n                               Attr_Error_Code   => 0,\n                               Kind              => Kind,\n                               Modification_Time => Modification_Time (Path),\n-                              Size              => Size]);\n+                              Size              => Size));\n                      end if;\n                   end if;\n                end;"}, {"sha": "3e941b8952035aabc5d64528d66e376f42cb039d", "filename": "gcc/ada/libgnat/a-stbubo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-stbubo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-stbubo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stbubo.adb?ref=fe664d36500bae7cf4a28646e95c0838780bbd4a", "patch": "@@ -91,9 +91,9 @@ package body Ada.Strings.Text_Buffers.Bounded is\n             --  forget to add corresponding assignment statement below.\n             Dummy : array (1 .. 0) of Buffer_Type (0) :=\n               [others =>\n-                 [Max_Characters => 0, Chars => <>, Indentation => <>,\n+                 (Max_Characters => 0, Chars => <>, Indentation => <>,\n                   Indent_Pending => <>, UTF_8_Length => <>, UTF_8_Column => <>,\n-                  All_7_Bits     => <>, All_8_Bits => <>, Truncated => <>]];\n+                  All_7_Bits     => <>, All_8_Bits => <>, Truncated => <>)];\n          begin\n             Buffer.Indentation    := Defaulted.Indentation;\n             Buffer.Indent_Pending := Defaulted.Indent_Pending;"}, {"sha": "eabcad1b628a206908beecf9582865ecfd41661a", "filename": "gcc/ada/libgnat/a-stbuun.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-stbuun.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-stbuun.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stbuun.adb?ref=fe664d36500bae7cf4a28646e95c0838780bbd4a", "patch": "@@ -104,9 +104,9 @@ package body Ada.Strings.Text_Buffers.Unbounded is\n             --  forget to add corresponding assignment statement below.\n             Dummy : array (1 .. 0) of Buffer_Type :=\n               [others =>\n-                 [Indentation  => <>, Indent_Pending => <>, UTF_8_Length => <>,\n+                 (Indentation  => <>, Indent_Pending => <>, UTF_8_Length => <>,\n                   UTF_8_Column => <>, All_7_Bits => <>, All_8_Bits => <>,\n-                  List         => <>, Last_Used => <>]];\n+                  List         => <>, Last_Used => <>)];\n          begin\n             Buffer.Indentation    := Defaulted.Indentation;\n             Buffer.Indent_Pending := Defaulted.Indent_Pending;"}, {"sha": "e316d66a7f2bc96f78d3e4548ab81e6d2d5db9f9", "filename": "gcc/ada/libgnat/a-stzbou.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-stzbou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-stzbou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzbou.ads?ref=fe664d36500bae7cf4a28646e95c0838780bbd4a", "patch": "@@ -493,11 +493,11 @@ package Ada.Strings.Wide_Wide_Bounded is\n       --  the Wide_Wide_Superbounded package.\n \n       Null_Bounded_Wide_Wide_String : constant Bounded_Wide_Wide_String :=\n-                                   [Max_Length         => Max_Length,\n+                                   (Max_Length         => Max_Length,\n                                     Current_Length     => 0,\n                                     Data               =>\n                                       [1 .. Max_Length =>\n-                                        Wide_Wide_Superbounded.Wide_Wide_NUL]];\n+                                        Wide_Wide_Superbounded.Wide_Wide_NUL]);\n \n       pragma Inline (To_Bounded_Wide_Wide_String);\n "}, {"sha": "af11630226c6a947895aeb3c65d72bb7568d1fe7", "filename": "gcc/ada/libgnat/a-swmwco.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-swmwco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-swmwco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-swmwco.ads?ref=fe664d36500bae7cf4a28646e95c0838780bbd4a", "patch": "@@ -181,7 +181,7 @@ private\n       Character_Ranges'Unrestricted_Access);\n \n    Lower_Case_Mapping : aliased constant Wide_Character_Mapping_Values :=\n-     [Length => 56,\n+     (Length => 56,\n \n       Domain =>\n         \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" &\n@@ -247,14 +247,14 @@ private\n          W.LC_U_Circumflex           &\n          W.LC_U_Diaeresis            &\n          W.LC_Y_Acute                &\n-         W.LC_Icelandic_Thorn];\n+         W.LC_Icelandic_Thorn);\n \n    Lower_Case_Map : constant Wide_Character_Mapping :=\n      (AF.Controlled with\n       Map => Lower_Case_Mapping'Unrestricted_Access);\n \n    Upper_Case_Mapping : aliased constant Wide_Character_Mapping_Values :=\n-     [Length => 56,\n+     (Length => 56,\n \n       Domain =>\n         \"abcdefghijklmnopqrstuvwxyz\" &\n@@ -320,14 +320,14 @@ private\n          W.UC_U_Circumflex           &\n          W.UC_U_Diaeresis            &\n          W.UC_Y_Acute                &\n-         W.UC_Icelandic_Thorn];\n+         W.UC_Icelandic_Thorn);\n \n    Upper_Case_Map : constant Wide_Character_Mapping :=\n      (AF.Controlled with\n       Upper_Case_Mapping'Unrestricted_Access);\n \n    Basic_Mapping : aliased constant Wide_Character_Mapping_Values :=\n-     [Length => 55,\n+     (Length => 55,\n \n       Domain =>\n         W.UC_A_Grave          &\n@@ -441,7 +441,7 @@ private\n         'u'        &  -- LC_U_Circumflex\n         'u'        &  -- LC_U_Diaeresis\n         'y'        &  -- LC_Y_Acute\n-        'y'];         -- LC_Y_Diaeresis\n+        'y');         -- LC_Y_Diaeresis\n \n    Basic_Map : constant Wide_Character_Mapping :=\n      (AF.Controlled with"}, {"sha": "96d64b36058dd56727312593a8cbaa2ce3779613", "filename": "gcc/ada/libgnat/a-szmzco.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-szmzco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fa-szmzco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-szmzco.ads?ref=fe664d36500bae7cf4a28646e95c0838780bbd4a", "patch": "@@ -181,7 +181,7 @@ private\n       Character_Ranges'Unrestricted_Access);\n \n    Lower_Case_Mapping : aliased constant Wide_Wide_Character_Mapping_Values :=\n-     [Length => 56,\n+     (Length => 56,\n \n       Domain =>\n         \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" &\n@@ -247,14 +247,14 @@ private\n          W.LC_U_Circumflex           &\n          W.LC_U_Diaeresis            &\n          W.LC_Y_Acute                &\n-         W.LC_Icelandic_Thorn];\n+         W.LC_Icelandic_Thorn);\n \n    Lower_Case_Map : constant Wide_Wide_Character_Mapping :=\n      (AF.Controlled with\n       Map => Lower_Case_Mapping'Unrestricted_Access);\n \n    Upper_Case_Mapping : aliased constant Wide_Wide_Character_Mapping_Values :=\n-     [Length => 56,\n+     (Length => 56,\n \n       Domain =>\n         \"abcdefghijklmnopqrstuvwxyz\" &\n@@ -320,14 +320,14 @@ private\n          W.UC_U_Circumflex           &\n          W.UC_U_Diaeresis            &\n          W.UC_Y_Acute                &\n-         W.UC_Icelandic_Thorn];\n+         W.UC_Icelandic_Thorn);\n \n    Upper_Case_Map : constant Wide_Wide_Character_Mapping :=\n      (AF.Controlled with\n       Upper_Case_Mapping'Unrestricted_Access);\n \n    Basic_Mapping : aliased constant Wide_Wide_Character_Mapping_Values :=\n-     [Length => 55,\n+     (Length => 55,\n \n       Domain =>\n         W.UC_A_Grave          &\n@@ -441,7 +441,7 @@ private\n         'u'        &  -- LC_U_Circumflex\n         'u'        &  -- LC_U_Diaeresis\n         'y'        &  -- LC_Y_Acute\n-        'y'];         -- LC_Y_Diaeresis\n+        'y');         -- LC_Y_Diaeresis\n \n    Basic_Map : constant Wide_Wide_Character_Mapping :=\n      (AF.Controlled with"}, {"sha": "55386133aa3b8cc759547dc5bd89a027747212ac", "filename": "gcc/ada/libgnat/s-statxd.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fs-statxd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fs-statxd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-statxd.adb?ref=fe664d36500bae7cf4a28646e95c0838780bbd4a", "patch": "@@ -76,36 +76,36 @@ package body System.Stream_Attributes.XDR is\n \n                --  Single precision\n \n-              [E_Size  => 8,\n+              (E_Size  => 8,\n                E_Bias  => 127,\n                F_Size  => 23,\n                E_Last  => 2 ** 8 - 1,\n                F_Mask  => 16#7F#,                  --  2 ** 7 - 1,\n                E_Bytes => 2,\n                F_Bytes => 3,\n-               F_Bits  => 23 mod US],\n+               F_Bits  => 23 mod US),\n \n                --  Double precision\n \n-              [E_Size  => 11,\n+              (E_Size  => 11,\n                E_Bias  => 1023,\n                F_Size  => 52,\n                E_Last  => 2 ** 11 - 1,\n                F_Mask  => 16#0F#,                  --  2 ** 4 - 1,\n                E_Bytes => 2,\n                F_Bytes => 7,\n-               F_Bits  => 52 mod US],\n+               F_Bits  => 52 mod US),\n \n                --  Quadruple precision\n \n-              [E_Size  => 15,\n+              (E_Size  => 15,\n                E_Bias  => 16383,\n                F_Size  => 112,\n                E_Last  => 2 ** 8 - 1,\n                F_Mask  => 16#FF#,                  --  2 ** 8 - 1,\n                E_Bytes => 2,\n                F_Bytes => 14,\n-               F_Bits  => 112 mod US]];\n+               F_Bits  => 112 mod US)];\n \n    --  The representation of all items requires a multiple of four bytes\n    --  (or 32 bits) of data. The bytes are numbered 0 through n-1. The bytes"}, {"sha": "d050eaaeca4705afda959ce297342de27f8a981a", "filename": "gcc/ada/libgnat/s-stausa.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fs-stausa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Flibgnat%2Fs-stausa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-stausa.adb?ref=fe664d36500bae7cf4a28646e95c0838780bbd4a", "patch": "@@ -128,9 +128,9 @@ package body System.Stack_Usage is\n       Result_Array := new Result_Array_Type (1 .. Buffer_Size);\n       Result_Array.all :=\n         [others =>\n-           [Task_Name   => [others => ASCII.NUL],\n+           (Task_Name   => [others => ASCII.NUL],\n             Value       => 0,\n-            Stack_Size  => 0]];\n+            Stack_Size  => 0)];\n \n       --  Set the Is_Enabled flag to true, so that the task wrapper knows that\n       --  it has to handle dynamic stack analysis"}, {"sha": "6e73aac4a108b35d09b046ce9ebc723458fa4642", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe664d36500bae7cf4a28646e95c0838780bbd4a/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=fe664d36500bae7cf4a28646e95c0838780bbd4a", "patch": "@@ -4896,6 +4896,15 @@ package body Sem_Aggr is\n          return;\n       end if;\n \n+      --  A record aggregate can only use parentheses\n+\n+      if Nkind (N) = N_Aggregate\n+        and then Is_Homogeneous_Aggregate (N)\n+      then\n+         Error_Msg_N (\"record aggregate must use () and not '[']\", N);\n+         return;\n+      end if;\n+\n       --  STEP 2: Verify aggregate structure\n \n       Step_2 : declare"}]}