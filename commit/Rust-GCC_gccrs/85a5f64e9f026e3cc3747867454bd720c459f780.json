{"sha": "85a5f64e9f026e3cc3747867454bd720c459f780", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVhNWY2NGU5ZjAyNmUzY2MzNzQ3ODY3NDU0YmQ3MjBjNDU5Zjc4MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-08-13T16:47:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-08-13T16:47:43Z"}, "message": "std_fstream.h (class basic_ifstream, [...]): Add const overloads of is_open, as per DR 365 [WP].\n\n2004-08-13  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/std/std_fstream.h (class basic_ifstream,\n\tclass basic_ofstream, class basic_fstream): Add const overloads\n\tof is_open, as per DR 365 [WP].\n\t* docs/html/ext/howto.html: Add an entry for DR 365.\n\nFrom-SVN: r85948", "tree": {"sha": "140a0b5686856c02cec4d004f7395c5871d1e58c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/140a0b5686856c02cec4d004f7395c5871d1e58c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85a5f64e9f026e3cc3747867454bd720c459f780", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a5f64e9f026e3cc3747867454bd720c459f780", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85a5f64e9f026e3cc3747867454bd720c459f780", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a5f64e9f026e3cc3747867454bd720c459f780/comments", "author": null, "committer": null, "parents": [{"sha": "1e9c84051f28ba061d23b640940eda3e01863ee4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e9c84051f28ba061d23b640940eda3e01863ee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e9c84051f28ba061d23b640940eda3e01863ee4"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "c6a1b1c0e962601dad62122dd3945b0dec535eb3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a5f64e9f026e3cc3747867454bd720c459f780/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a5f64e9f026e3cc3747867454bd720c459f780/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=85a5f64e9f026e3cc3747867454bd720c459f780", "patch": "@@ -1,3 +1,10 @@\n+2004-08-13  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/std/std_fstream.h (class basic_ifstream,\n+\tclass basic_ofstream, class basic_fstream): Add const overloads\n+\tof is_open, as per DR 365 [WP].\n+\t* docs/html/ext/howto.html: Add an entry for DR 365.\n+\n 2004-08-12  Paolo Carlini  <pcarlini@suse.de>\n \n \t* configure.ac: Specify version 1.8.5 in AM_INIT_AUTOMAKE."}, {"sha": "5670c46976846966890f9d343fd4a68233af2420", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a5f64e9f026e3cc3747867454bd720c459f780/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a5f64e9f026e3cc3747867454bd720c459f780/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=85a5f64e9f026e3cc3747867454bd720c459f780", "patch": "@@ -479,6 +479,12 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n     <dd>Change the format string to &quot;%.0Lf&quot;.\n     </dd>\n \n+    <dt><a href=\"lwg-defects.html#365\">365</a>:\n+        <em>Lack of const-qualification in clause 27</em>\n+    </dt>\n+    <dd>Add const overloads of <code>is_open</code>.\n+    </dd>\n+\n     <dt><a href=\"lwg-defects.html#389\">389</a>:\n         <em>Const overload of valarray::operator[] returns by value</em>\n     </dt>"}, {"sha": "3bb26382cbe87f27bea4701d6aa4491fbced79a7", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85a5f64e9f026e3cc3747867454bd720c459f780/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85a5f64e9f026e3cc3747867454bd720c459f780/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=85a5f64e9f026e3cc3747867454bd720c459f780", "patch": "@@ -1,6 +1,6 @@\n // File based streams -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -282,7 +282,8 @@ namespace std\n        *  @brief  Returns true if the external file is open.\n       */\n       bool\n-      is_open() const throw() { return _M_file.is_open(); }\n+      is_open() const throw()\n+      { return _M_file.is_open(); }\n \n       /**\n        *  @brief  Opens an external file.\n@@ -569,7 +570,14 @@ namespace std\n        *  @return  @c rdbuf()->is_open()\n       */\n       bool\n-      is_open() { return _M_filebuf.is_open(); }\n+      is_open()\n+      { return _M_filebuf.is_open(); }\n+\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 365. Lack of const-qualification in clause 27\n+      bool\n+      is_open() const\n+      { return _M_filebuf.is_open(); }\n \n       /**\n        *  @brief  Opens an external file.\n@@ -693,7 +701,14 @@ namespace std\n        *  @return  @c rdbuf()->is_open()\n       */\n       bool\n-      is_open() { return _M_filebuf.is_open(); }\n+      is_open()\n+      { return _M_filebuf.is_open(); }\n+\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 365. Lack of const-qualification in clause 27\n+      bool\n+      is_open() const\n+      { return _M_filebuf.is_open(); }\n \n       /**\n        *  @brief  Opens an external file.\n@@ -817,7 +832,14 @@ namespace std\n        *  @return  @c rdbuf()->is_open()\n       */\n       bool\n-      is_open() { return _M_filebuf.is_open(); }\n+      is_open()\n+      { return _M_filebuf.is_open(); }\n+\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 365. Lack of const-qualification in clause 27\n+      bool\n+      is_open() const\n+      { return _M_filebuf.is_open(); }\n \n       /**\n        *  @brief  Opens an external file."}]}