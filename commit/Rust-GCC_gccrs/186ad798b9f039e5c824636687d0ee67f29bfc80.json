{"sha": "186ad798b9f039e5c824636687d0ee67f29bfc80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg2YWQ3OThiOWYwMzllNWM4MjQ2MzY2ODdkMGVlNjdmMjliZmM4MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-11-12T20:43:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-11-12T20:43:09Z"}, "message": "DR 1510 PR c++/60420\n\n/cp\n2014-11-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tDR 1510\n\tPR c++/60420\n\t* cp-tree.h (struct cp_decl_specifier_seq): Add decltype_p bool field.\n\t* decl.c (grokdeclarator): Use it.\n\t* parser.c (cp_parser_simple_type_specifier): Likewise.\n\t* pt.c (tsubst, case DECLTYPE_TYPE): Use tf_ignore_bad_quals.\n\n/testsuite\n2014-11-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tDR 1510\n\tPR c++/60420\n\t* g++.dg/cpp0x/decltype61.C: New.\n\nFrom-SVN: r217444", "tree": {"sha": "37b754ad44204cc97f4a58e07513379bf4250128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37b754ad44204cc97f4a58e07513379bf4250128"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/186ad798b9f039e5c824636687d0ee67f29bfc80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/186ad798b9f039e5c824636687d0ee67f29bfc80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/186ad798b9f039e5c824636687d0ee67f29bfc80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/186ad798b9f039e5c824636687d0ee67f29bfc80/comments", "author": null, "committer": null, "parents": [{"sha": "7eb0def89e57086611a044febf906ffd3e515c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb0def89e57086611a044febf906ffd3e515c3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eb0def89e57086611a044febf906ffd3e515c3a"}], "stats": {"total": 54, "additions": 49, "deletions": 5}, "files": [{"sha": "abb9ffb23801ff40b2ffab7f26354285e43c0b68", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=186ad798b9f039e5c824636687d0ee67f29bfc80", "patch": "@@ -1,3 +1,12 @@\n+2014-11-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tDR 1510\n+\tPR c++/60420\n+\t* cp-tree.h (struct cp_decl_specifier_seq): Add decltype_p bool field.\n+\t* decl.c (grokdeclarator): Use it.\n+\t* parser.c (cp_parser_simple_type_specifier): Likewise.\n+\t* pt.c (tsubst, case DECLTYPE_TYPE): Use tf_ignore_bad_quals.\n+\n 2014-11-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/63265"}, {"sha": "82243609870d45eb85f56e1ad51fec0a875397c8", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=186ad798b9f039e5c824636687d0ee67f29bfc80", "patch": "@@ -4933,6 +4933,8 @@ typedef struct cp_decl_specifier_seq {\n   BOOL_BITFIELD explicit_char_p : 1;\n   /* True iff ds_thread is set for __thread, not thread_local.  */\n   BOOL_BITFIELD gnu_thread_keyword_p : 1;\n+  /* True iff the type is a decltype.  */\n+  BOOL_BITFIELD decltype_p : 1;\n } cp_decl_specifier_seq;\n \n /* The various kinds of declarators.  */"}, {"sha": "9ca32e37d9532d1cd1a3008f506b9276507bfa28", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=186ad798b9f039e5c824636687d0ee67f29bfc80", "patch": "@@ -9421,7 +9421,8 @@ grokdeclarator (const cp_declarator *declarator,\n \n   type_quals |= cp_type_quals (type);\n   type = cp_build_qualified_type_real\n-    (type, type_quals, ((typedef_decl && !DECL_ARTIFICIAL (typedef_decl)\n+    (type, type_quals, ((((typedef_decl && !DECL_ARTIFICIAL (typedef_decl))\n+\t\t\t  || declspecs->decltype_p)\n \t\t\t ? tf_ignore_bad_quals : 0) | tf_warning_or_error));\n   /* We might have ignored or rejected some of the qualifiers.  */\n   type_quals = cp_type_quals (type);"}, {"sha": "93520bc4ecf72e6ec9f4b872990098f5ef632a93", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=186ad798b9f039e5c824636687d0ee67f29bfc80", "patch": "@@ -14903,9 +14903,15 @@ cp_parser_simple_type_specifier (cp_parser* parser,\n     {\n       type = token->u.value;\n       if (decl_specs)\n-\tcp_parser_set_decl_spec_type (decl_specs, type,\n-\t\t\t\t      token,\n-\t\t\t\t      /*type_definition_p=*/false);\n+\t{\n+\t  cp_parser_set_decl_spec_type (decl_specs, type,\n+\t\t\t\t\ttoken,\n+\t\t\t\t\t/*type_definition_p=*/false);\n+\t  /* Remember that we are handling a decltype in order to\n+\t     implement the resolution of DR 1510 when the argument\n+\t     isn't instantiation dependent.  */\n+\t  decl_specs->decltype_p = true;\n+\t}\n       cp_lexer_consume_token (parser->lexer);\n       return type;\n     }"}, {"sha": "f408680abbf86c0a8f7f3c02b2c26d2fae5adafa", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=186ad798b9f039e5c824636687d0ee67f29bfc80", "patch": "@@ -12462,7 +12462,7 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \treturn cp_build_qualified_type_real (type,\n \t\t\t\t\t     cp_type_quals (t)\n \t\t\t\t\t     | cp_type_quals (type),\n-\t\t\t\t\t     complain);\n+\t\t\t\t\t     complain | tf_ignore_bad_quals);\n       }\n \n     case UNDERLYING_TYPE:"}, {"sha": "d943df62a0ff66b1725e96c6250ca4b121820bbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=186ad798b9f039e5c824636687d0ee67f29bfc80", "patch": "@@ -1,3 +1,9 @@\n+2014-11-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tDR 1510\n+\tPR c++/60420\n+\t* g++.dg/cpp0x/decltype61.C: New.\n+\n 2014-11-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR tree-optimization/63835"}, {"sha": "0159330d79c00e66ae475b9b552fce07cf44895b", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype61.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype61.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186ad798b9f039e5c824636687d0ee67f29bfc80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype61.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype61.C?ref=186ad798b9f039e5c824636687d0ee67f29bfc80", "patch": "@@ -0,0 +1,20 @@\n+// DR 1510, PR c++/60420\n+// { dg-do compile { target c++11 } }\n+\n+struct MyIter\n+{\n+  int& operator*();\n+};\n+\n+void foo(MyIter begin)\n+{\n+  auto x = [](const decltype(*begin)) { };\n+}\n+\n+template<typename Iterator>\n+void bar(Iterator begin)\n+{\n+  auto x = [](const decltype(*begin)) { };\n+}\n+\n+template void bar<MyIter>(MyIter);"}]}