{"sha": "11261647740b1ae87c271c47c5849f62628f6a91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEyNjE2NDc3NDBiMWFlODdjMjcxYzQ3YzU4NDlmNjI2MjhmNmE5MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T10:11:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T10:11:51Z"}, "message": "[multiple changes]\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch5.adb, sem_ch5.adb, einfo.ads: Minor reformatting.\n\n2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_ch4.adb (Operator_Check): Refine previous change.\n\nFrom-SVN: r213561", "tree": {"sha": "fe2326e347a26df09cbc2a1f1badc70c6da1bd27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe2326e347a26df09cbc2a1f1badc70c6da1bd27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11261647740b1ae87c271c47c5849f62628f6a91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11261647740b1ae87c271c47c5849f62628f6a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11261647740b1ae87c271c47c5849f62628f6a91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11261647740b1ae87c271c47c5849f62628f6a91/comments", "author": null, "committer": null, "parents": [{"sha": "1e3689bd20d682d6f10373abccea6445d901c499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e3689bd20d682d6f10373abccea6445d901c499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e3689bd20d682d6f10373abccea6445d901c499"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "5684a668265cf5ed1c118d4f7a941488f172bef8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=11261647740b1ae87c271c47c5849f62628f6a91", "patch": "@@ -1,3 +1,11 @@\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch5.adb, sem_ch5.adb, einfo.ads: Minor reformatting.\n+\n+2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_ch4.adb (Operator_Check): Refine previous change.\n+\n 2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n \n \t* sem_scil.ads: Improve comments."}, {"sha": "23516be761236b4990d348cc5faa9f8919431a15", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=11261647740b1ae87c271c47c5849f62628f6a91", "patch": "@@ -2844,9 +2844,9 @@ package Einfo is\n --       as well as for record with private types as subtypes\n \n --    Is_Processed_Transient (Flag252)\n---       Defined in entities of variables and constants, including the loop\n---       parameters of generalized iterators. Set when a transient object needs\n---       to be finalized and it has already been processed by the transient\n+--       Defined in variables, loop parameters, and constants, including the\n+--       loop parameters of generalized iterators. Set when a transient object\n+--       needs to be finalized and has already been processed by the transient\n --       scope machinery. This flag signals the general finalization mechanism\n --       to ignore the transient object.\n "}, {"sha": "12c50a152f2a2e323aec7c9994e2ebe99738ad8c", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=11261647740b1ae87c271c47c5849f62628f6a91", "patch": "@@ -3198,8 +3198,8 @@ package body Exp_Ch5 is\n       Id     : constant Entity_Id  := Defining_Identifier (I_Spec);\n       Loc    : constant Source_Ptr := Sloc (N);\n \n-      Container     : constant Node_Id   := Name (I_Spec);\n-      Container_Typ : constant Entity_Id := Base_Type (Etype (Container));\n+      Container     : constant Node_Id     := Name (I_Spec);\n+      Container_Typ : constant Entity_Id   := Base_Type (Etype (Container));\n       I_Kind        : constant Entity_Kind := Ekind (Id);\n       Cursor        : Entity_Id;\n       Iterator      : Entity_Id;\n@@ -3594,7 +3594,7 @@ package body Exp_Ch5 is\n             --  The cursor is only modified in expanded code, so it appears\n             --  as unassigned to the warning machinery. We must suppress\n             --  this spurious warning explicitly. The cursor's kind is that of\n-            --  the original loop parameter (it is a constant if the doamin of\n+            --  the original loop parameter (it is a constant if the domain of\n             --  iteration is constant).\n \n             Set_Warnings_Off (Cursor);"}, {"sha": "6c260313c9c75e91ce8c5e0a45e1847ac759071c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=11261647740b1ae87c271c47c5849f62628f6a91", "patch": "@@ -6446,14 +6446,6 @@ package body Sem_Ch4 is\n                   return;\n                end if;\n \n-            elsif Nkind_In (N, N_Op_Eq, N_Op_Ne) then\n-               if Address_Integer_Convert_OK (Etype (R), Etype (L)) then\n-                  Rewrite (R,\n-                    Unchecked_Convert_To (Etype (L), Relocate_Node (R)));\n-                  Analyze_Equality_Op (N);\n-                  return;\n-               end if;\n-\n             --  For an arithmetic operator or comparison operator, if one\n             --  of the operands is numeric, then we know the other operand\n             --  is not the same numeric type. If it is a non-numeric type,\n@@ -6608,6 +6600,14 @@ package body Sem_Ch4 is\n                end if;\n \n                return;\n+\n+            elsif Nkind_In (N, N_Op_Eq, N_Op_Ne) then\n+               if Address_Integer_Convert_OK (Etype (R), Etype (L)) then\n+                  Rewrite (R,\n+                    Unchecked_Convert_To (Etype (L), Relocate_Node (R)));\n+                  Analyze_Equality_Op (N);\n+                  return;\n+               end if;\n             end if;\n \n             --  If we fall through then just give general message. Note that in"}, {"sha": "4ece78b8e9897b992e1b3f3481d30bfe73c896ec", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11261647740b1ae87c271c47c5849f62628f6a91/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=11261647740b1ae87c271c47c5849f62628f6a91", "patch": "@@ -3114,8 +3114,8 @@ package body Sem_Ch5 is\n       --  If the expander is not active, or in SPARK mode, then we want to\n       --  analyze the loop body now even in the Ada 2012 iterator case, since\n       --  the rewriting will not be done. Insert the loop variable in the\n-      --  current scope, if not done when analysing the iteration scheme. Set\n-      --  is kind properly to detect improper uses in the loop body.\n+      --  current scope, if not done when analysing the iteration scheme.\n+      --  Set its kind properly to detect improper uses in the loop body.\n \n       if Present (Iter)\n         and then Present (Iterator_Specification (Iter))"}]}