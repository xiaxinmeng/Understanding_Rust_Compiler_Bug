{"sha": "d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBjODRmZGFhM2I4MGI0ZWNiMGM2ZjdhZmE0NDA4MmI5MmZhNDU3Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-27T18:15:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-27T18:15:25Z"}, "message": "Add define_split for sign-extended PLUS of a MULT of an SImode\ncomparison.\n\nFrom-SVN: r7364", "tree": {"sha": "b66db21fe8945b5fb8c108ff15d9bfe289f65657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b66db21fe8945b5fb8c108ff15d9bfe289f65657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b/comments", "author": null, "committer": null, "parents": [{"sha": "7e4dc511b073113b428eaa0bd9d7cc4c2c589329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4dc511b073113b428eaa0bd9d7cc4c2c589329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4dc511b073113b428eaa0bd9d7cc4c2c589329"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "4d1a051484f776a9ec4018058de3a976a4e73da8", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=d0c84fdaa3b80b4ecb0c6f7afa44082b92fa457b", "patch": "@@ -238,6 +238,27 @@\n    s%2subl %r1,%n3,%0\"\n   [(set_attr \"type\" \"iaddlog\")])\n \n+(define_split\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(sign_extend:DI\n+\t (plus:SI (mult:SI (match_operator:SI 1 \"comparison_operator\"\n+\t\t\t\t\t      [(match_operand 2 \"\" \"\")\n+\t\t\t\t\t       (match_operand 3 \"\" \"\")])\n+\t\t\t   (match_operand:SI 4 \"const48_operand\" \"\"))\n+\t\t  (match_operand:SI 5 \"add_operand\" \"\"))))\n+   (clobber (match_operand:DI 6 \"register_operand\" \"\"))]\n+  \"\"\n+  [(set (match_dup 6) (match_dup 7))\n+   (set (match_dup 0)\n+\t(sign_extend:DI (plus:SI (mult:SI (match_dup 8) (match_dup 4))\n+\t\t\t\t (match_dup 5))))]\n+  \"\n+{\n+  operands[7] = gen_rtx (GET_CODE (operands[1]), DImode,\n+\t\t\t operands[2], operands[3]);\n+  operands[8] = gen_lowpart (SImode, operands[6]);\n+}\")\n+\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(plus:DI (mult:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ,rJ\")"}]}