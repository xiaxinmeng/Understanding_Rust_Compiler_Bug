{"sha": "5fa09df40239511f4d688af53999322106e8934b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZhMDlkZjQwMjM5NTExZjRkNjg4YWY1Mzk5OTMyMjEwNmU4OTM0Yg==", "commit": {"author": {"name": "Earl Chew", "email": "earl_chew@agilent.com", "date": "2005-03-07T22:42:42Z"}, "committer": {"name": "David Billinghurst", "email": "billingd@gcc.gnu.org", "date": "2005-03-07T22:42:42Z"}, "message": "host-cygwin.c: New file to support precompiled headers on cygwin\n\n2005-03-08  Earl Chew <earl_chew@agilent.com>\n\t    David Billinghurst <David.Billinghurst@riotinto.com>\n\n\t* config/i386/host-cygwin.c: New file to support precompiled\n\theaders on cygwin\n\t* config/i386/x-cygwin: Use host-cygwin.c on cygwin host\n\t* config.host: Use above files for cygwin host.\n\nCo-Authored-By: David Billinghurst <David.Billinghurst@riotinto.com>\n\nFrom-SVN: r96050", "tree": {"sha": "21379c1c596b36973b67129132955861a43b722e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21379c1c596b36973b67129132955861a43b722e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fa09df40239511f4d688af53999322106e8934b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa09df40239511f4d688af53999322106e8934b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fa09df40239511f4d688af53999322106e8934b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa09df40239511f4d688af53999322106e8934b/comments", "author": null, "committer": null, "parents": [{"sha": "cff001b2e843de422ba2a67b9049b558709a91dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff001b2e843de422ba2a67b9049b558709a91dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff001b2e843de422ba2a67b9049b558709a91dd"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "5fce904f030c5af065153af06ccdaec3a77b6840", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa09df40239511f4d688af53999322106e8934b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa09df40239511f4d688af53999322106e8934b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fa09df40239511f4d688af53999322106e8934b", "patch": "@@ -1,3 +1,11 @@\n+2005-03-08  Earl Chew <earl_chew@agilent.com>\n+\t    David Billinghurst <David.Billinghurst@riotinto.com>\n+\n+\t* config/i386/host-cygwin.c: New file to support precompiled\n+\theaders on cygwin\n+\t* config/i386/x-cygwin: Use host-cygwin.c on cygwin host\n+\t* config.host: Use above files for cygwin host.\n+\n 2005-03-07  David Edelsohn  <edelsohn@gnu.org>\n \n \t* fold-const.c (fold_binary_op_with_conditional_arg): Fix typo"}, {"sha": "cb1e9a6058bbe1cdcc06808ad53b85f9308845a0", "filename": "gcc/config.host", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa09df40239511f4d688af53999322106e8934b/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa09df40239511f4d688af53999322106e8934b/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=5fa09df40239511f4d688af53999322106e8934b", "patch": "@@ -146,6 +146,8 @@ case ${host} in\n     ;;\n   i[34567]86-*-pe | i[34567]86-*-cygwin*)\n     host_xm_file=i386/xm-cygwin.h\n+    out_host_hook_obj=host-cygwin.o\n+    host_xmake_file=i386/x-cygwin\n     host_exeext=.exe\n     ;;\n   i[34567]86-*-mingw32*)"}, {"sha": "4f6de6fd893b0c98e45e66e8fe39f2a95aa03b12", "filename": "gcc/config/i386/host-cygwin.c", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa09df40239511f4d688af53999322106e8934b/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa09df40239511f4d688af53999322106e8934b/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c?ref=5fa09df40239511f4d688af53999322106e8934b", "patch": "@@ -0,0 +1,81 @@\n+/* Cygwin host-specific hook definitions.\n+ Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+ This file is part of GCC.\n+\n+ GCC is free software; you can redistribute it and/or modify it\n+ under the terms of the GNU General Public License as published\n+ by the Free Software Foundation; either version 2, or (at your\n+ option) any later version.\n+\n+ GCC is distributed in the hope that it will be useful, but WITHOUT\n+ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public\n+ License for more details.\n+\n+ You should have received a copy of the GNU General Public License\n+ along with GCC; see the file COPYING. If not, write to the\n+ Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+ MA 02111-1307, USA. */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include <sys/mman.h>\n+#include \"hosthooks.h\"\n+#include \"hosthooks-def.h\"\n+#include \"toplev.h\"\n+#include \"diagnostic.h\"\n+\n+static void * cygwin_gt_pch_get_address (size_t, int fd);\n+static size_t cygwin_gt_pch_alloc_granularity (void);\n+\n+#undef HOST_HOOKS_GT_PCH_GET_ADDRESS\n+#define HOST_HOOKS_GT_PCH_GET_ADDRESS cygwin_gt_pch_get_address\n+#undef HOST_HOOKS_GT_PCH_ALLOC_GRANULARITY\n+#define HOST_HOOKS_GT_PCH_ALLOC_GRANULARITY cygwin_gt_pch_alloc_granularity\n+\n+/* Granularity for reserving address space.  */\n+static const size_t va_granularity = 0x10000;\n+\n+/*  Return the alignment required for allocating virtual memory. */\n+static size_t\n+cygwin_gt_pch_alloc_granularity (void)\n+{\n+  return va_granularity;\n+}\n+\n+/* Identify an address that's likely to be free in a subsequent invocation\n+   of the compiler.  The area should be able to hold SIZE bytes.  FD is an\n+   open file descriptor if the host would like to probe with mmap.  */\n+static void *\n+cygwin_gt_pch_get_address (size_t sz, int fd)\n+{\n+  void *base;\n+  off_t p = lseek(fd, 0, SEEK_CUR);\n+\n+  if (p == (off_t) -1)\n+    fatal_error (\"can't get position in PCH file: %m\");\n+\n+   /* Cygwin requires that the underlying file be at least\n+      as large as the requested mapping.  */\n+  if ((size_t) p < sz)\n+  { \n+    if ( ftruncate (fd, sz) == -1 )\n+      fatal_error (\"can't extend PCH file: %m\");\n+  }\n+\n+  base = mmap (NULL, sz, PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, 0);\n+\n+  if (base == MAP_FAILED)\n+    base = NULL;\n+  else\n+    munmap (base, sz);\n+\n+  if (lseek (fd, p, SEEK_SET) == (off_t) -1 )\n+    fatal_error (\"can't set position in PCH file: %m\");\n+\n+  return base;\n+}\n+\n+const struct host_hooks host_hooks = HOST_HOOKS_INITIALIZER;"}, {"sha": "1547f5f5bec35fe53b829a289624dad356926012", "filename": "gcc/config/i386/x-cygwin", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fa09df40239511f4d688af53999322106e8934b/gcc%2Fconfig%2Fi386%2Fx-cygwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fa09df40239511f4d688af53999322106e8934b/gcc%2Fconfig%2Fi386%2Fx-cygwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-cygwin?ref=5fa09df40239511f4d688af53999322106e8934b", "patch": "@@ -0,0 +1,4 @@\n+host-cygwin.o : $(srcdir)/config/i386/host-cygwin.c $(CONFIG_H) $(SYSTEM_H) \\\n+  coretypes.h hosthooks.h hosthooks-def.h toplev.h diagnostic.h\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(srcdir)/config/i386/host-cygwin.c"}]}