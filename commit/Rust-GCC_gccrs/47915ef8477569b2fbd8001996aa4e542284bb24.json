{"sha": "47915ef8477569b2fbd8001996aa4e542284bb24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc5MTVlZjg0Nzc1NjliMmZiZDgwMDE5OTZhYTRlNTQyMjg0YmIyNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-30T13:45:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-30T13:57:40Z"}, "message": "libstdc++: Use std::addressof to avoid ADL for operator& [PR 60497]\n\nThis is another small step towards avoiding the problems described in PR\n60497, by using std::addressof to avoid ADL, so that we don't require\nall template arguments to be complete.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/60497\n\t* include/bits/basic_ios.tcc (basic_ios::copyfmt): use\n\tstd::addressof.\n\t* include/bits/basic_string.tcc (basic_string::swap)\n\t(basic_string::assign): Likewise.\n\t* include/bits/deque.tcc (deque::operator=(const deque&)):\n\tLikewise.\n\t* include/bits/stl_tree.h (_Rb_tree::operator=(const * _Rb_tree&)):\n\tLikewise.\n\t* include/bits/vector.tcc (vector::operator=(const vector&)):\n\tLikewise.", "tree": {"sha": "73bee53fec044b600b2df2bc154259a847b2a60e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73bee53fec044b600b2df2bc154259a847b2a60e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47915ef8477569b2fbd8001996aa4e542284bb24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47915ef8477569b2fbd8001996aa4e542284bb24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47915ef8477569b2fbd8001996aa4e542284bb24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47915ef8477569b2fbd8001996aa4e542284bb24/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa475c4ac80733f85ba47b109fc1900f05e810e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa475c4ac80733f85ba47b109fc1900f05e810e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa475c4ac80733f85ba47b109fc1900f05e810e2"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6285f734031c2cb5139cc2d81d996da46904efe9", "filename": "libstdc++-v3/include/bits/basic_ios.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc?ref=47915ef8477569b2fbd8001996aa4e542284bb24", "patch": "@@ -64,7 +64,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 292. effects of a.copyfmt (a)\n-      if (this != &__rhs)\n+      if (this != std::__addressof(__rhs))\n \t{\n \t  // Per 27.1.1, do not call imbue, yet must trash all caches\n \t  // associated with imbue()"}, {"sha": "0c13e7447476cc341b69a367a357afa6f6700fc5", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=47915ef8477569b2fbd8001996aa4e542284bb24", "patch": "@@ -58,7 +58,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     basic_string<_CharT, _Traits, _Alloc>::\n     swap(basic_string& __s) _GLIBCXX_NOEXCEPT\n     {\n-      if (this == &__s)\n+      if (this == std::__addressof(__s))\n \treturn;\n \n       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());\n@@ -254,7 +254,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     basic_string<_CharT, _Traits, _Alloc>::\n     _M_assign(const basic_string& __str)\n     {\n-      if (this != &__str)\n+      if (this != std::__addressof(__str))\n \t{\n \t  const size_type __rsize = __str.length();\n \t  const size_type __capacity = capacity();"}, {"sha": "ab1f49813df55f28588e05a97569da56833eaf9a", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=47915ef8477569b2fbd8001996aa4e542284bb24", "patch": "@@ -95,7 +95,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     deque<_Tp, _Alloc>::\n     operator=(const deque& __x)\n     {\n-      if (&__x != this)\n+      if (std::__addressof(__x) != this)\n \t{\n #if __cplusplus >= 201103L\n \t  if (_Alloc_traits::_S_propagate_on_copy_assign())"}, {"sha": "962991298104a141e66e4632bfa20d709685d10b", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=47915ef8477569b2fbd8001996aa4e542284bb24", "patch": "@@ -1729,7 +1729,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::\n     operator=(const _Rb_tree& __x)\n     {\n-      if (this != &__x)\n+      if (this != std::__addressof(__x))\n \t{\n \t  // Note that _Key may be a constant type.\n #if __cplusplus >= 201103L"}, {"sha": "caee5cbfc2f6ffbc6a0e8e904b256b2007a49120", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47915ef8477569b2fbd8001996aa4e542284bb24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=47915ef8477569b2fbd8001996aa4e542284bb24", "patch": "@@ -198,7 +198,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     vector<_Tp, _Alloc>::\n     operator=(const vector<_Tp, _Alloc>& __x)\n     {\n-      if (&__x != this)\n+      if (std::__addressof(__x) != this)\n \t{\n \t  _GLIBCXX_ASAN_ANNOTATE_REINIT;\n #if __cplusplus >= 201103L"}]}