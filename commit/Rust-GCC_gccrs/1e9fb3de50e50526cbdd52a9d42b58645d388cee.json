{"sha": "1e9fb3de50e50526cbdd52a9d42b58645d388cee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU5ZmIzZGU1MGU1MDUyNmNiZGQ1MmE5ZDQyYjU4NjQ1ZDM4OGNlZQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2009-10-01T11:30:12Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-10-01T11:30:12Z"}, "message": "re PR bootstrap/41395 (Revision 151800 failed bootstrap)\n\n2009-10-01  Martin Jambor  <mjambor@suse.cz>\n\n\tPR bootstrap/41395\n\t* tree-sra.c (is_va_list_type): New function.\n\t(find_var_candidates): Call is_va_list_type.\n\t(find_param_candidates): Check that the type or the type pointed\n\tto are not va_list types.\n\nFrom-SVN: r152366", "tree": {"sha": "2b36a7ca1f884b5f4dabc1ab542709cafddda36e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b36a7ca1f884b5f4dabc1ab542709cafddda36e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e9fb3de50e50526cbdd52a9d42b58645d388cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e9fb3de50e50526cbdd52a9d42b58645d388cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e9fb3de50e50526cbdd52a9d42b58645d388cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e9fb3de50e50526cbdd52a9d42b58645d388cee/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed9fa133106bd11f893b5bb809bc14f4be8df351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9fa133106bd11f893b5bb809bc14f4be8df351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed9fa133106bd11f893b5bb809bc14f4be8df351"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "403306cadfa3e7ab028d672464e5565fa56454dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e9fb3de50e50526cbdd52a9d42b58645d388cee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e9fb3de50e50526cbdd52a9d42b58645d388cee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e9fb3de50e50526cbdd52a9d42b58645d388cee", "patch": "@@ -1,3 +1,11 @@\n+2009-10-01  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR bootstrap/41395\n+\t* tree-sra.c (is_va_list_type): New function.\n+\t(find_var_candidates): Call is_va_list_type.\n+\t(find_param_candidates): Check that the type or the type pointed\n+\tto are not va_list types.\n+\n 2009-10-01  Martin Jambor  <mjambor@suse.cz>\n \n \tPR c++/41503"}, {"sha": "e5b141f289ec66c954756c2e5f357d1456c81db7", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e9fb3de50e50526cbdd52a9d42b58645d388cee/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e9fb3de50e50526cbdd52a9d42b58645d388cee/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=1e9fb3de50e50526cbdd52a9d42b58645d388cee", "patch": "@@ -1323,6 +1323,14 @@ build_ref_for_offset (tree *expr, tree type, HOST_WIDE_INT offset,\n   return build_ref_for_offset_1 (expr, type, offset, exp_type);\n }\n \n+/* Return true iff TYPE is stdarg va_list type.  */\n+\n+static inline bool\n+is_va_list_type (tree type)\n+{\n+  return TYPE_MAIN_VARIANT (type) == TYPE_MAIN_VARIANT (va_list_type_node);\n+}\n+\n /* The very first phase of intraprocedural SRA.  It marks in candidate_bitmap\n    those with type which is suitable for scalarization.  */\n \n@@ -1350,8 +1358,7 @@ find_var_candidates (void)\n \t      we also want to schedule it rather late.  Thus we ignore it in\n \t      the early pass. */\n \t  || (sra_mode == SRA_MODE_EARLY_INTRA\n-\t      && (TYPE_MAIN_VARIANT (TREE_TYPE (var))\n-\t\t  == TYPE_MAIN_VARIANT (va_list_type_node))))\n+\t      && is_va_list_type (type)))\n \tcontinue;\n \n       bitmap_set_bit (candidate_bitmap, DECL_UID (var));\n@@ -2731,11 +2738,13 @@ find_param_candidates (void)\n        parm;\n        parm = TREE_CHAIN (parm))\n     {\n-      tree type;\n+      tree type = TREE_TYPE (parm);\n \n       count++;\n+\n       if (TREE_THIS_VOLATILE (parm)\n-\t  || TREE_ADDRESSABLE (parm))\n+\t  || TREE_ADDRESSABLE (parm)\n+\t  || is_va_list_type (type))\n \tcontinue;\n \n       if (is_unused_scalar_param (parm))\n@@ -2744,14 +2753,14 @@ find_param_candidates (void)\n \t  continue;\n \t}\n \n-      type = TREE_TYPE (parm);\n       if (POINTER_TYPE_P (type))\n \t{\n \t  type = TREE_TYPE (type);\n \n \t  if (TREE_CODE (type) == FUNCTION_TYPE\n \t      || TYPE_VOLATILE (type)\n \t      || !is_gimple_reg (parm)\n+\t      || is_va_list_type (type)\n \t      || ptr_parm_has_direct_uses (parm))\n \t    continue;\n \t}"}]}