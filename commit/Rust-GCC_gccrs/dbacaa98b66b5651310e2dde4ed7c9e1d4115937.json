{"sha": "dbacaa98b66b5651310e2dde4ed7c9e1d4115937", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJhY2FhOThiNjZiNTY1MTMxMGUyZGRlNGVkN2M5ZTFkNDExNTkzNw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-10-22T18:22:09Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-10-22T18:22:09Z"}, "message": "* doc/extend.texi: Mention H8S wherever H8/300H is mentioned.\n\nFrom-SVN: r72813", "tree": {"sha": "a0b51383cf135d55693adc1a8cb493304117f4a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0b51383cf135d55693adc1a8cb493304117f4a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbacaa98b66b5651310e2dde4ed7c9e1d4115937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbacaa98b66b5651310e2dde4ed7c9e1d4115937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbacaa98b66b5651310e2dde4ed7c9e1d4115937", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbacaa98b66b5651310e2dde4ed7c9e1d4115937/comments", "author": null, "committer": null, "parents": [{"sha": "ed2f11fa59957d0892749bb8243325929aa50302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2f11fa59957d0892749bb8243325929aa50302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed2f11fa59957d0892749bb8243325929aa50302"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "4c189a9944538963b42158db8393e2ea9f4e36f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbacaa98b66b5651310e2dde4ed7c9e1d4115937/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbacaa98b66b5651310e2dde4ed7c9e1d4115937/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbacaa98b66b5651310e2dde4ed7c9e1d4115937", "patch": "@@ -1,3 +1,7 @@\n+2003-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* doc/extend.texi: Mention H8S wherever H8/300H is mentioned.\n+\n 2003-10-22  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.md (\"movstr_short_64\", \"movstr_short_31\"): Merge ..."}, {"sha": "8ebcc41017f18383f9a89f6139369b278b21173b", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbacaa98b66b5651310e2dde4ed7c9e1d4115937/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbacaa98b66b5651310e2dde4ed7c9e1d4115937/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=dbacaa98b66b5651310e2dde4ed7c9e1d4115937", "patch": "@@ -2477,11 +2477,11 @@ instruction directly.\n \n @item function_vector\n @cindex calling functions through the function vector on the H8/300 processors\n-Use this attribute on the H8/300 and H8/300H to indicate that the specified\n+Use this attribute on the H8/300, H8/300H, and H8S to indicate that the specified\n function should be called through the function vector.  Calling a\n function through the function vector will reduce code size, however;\n the function vector has a limited size (maximum 128 entries on the H8/300\n-and 64 entries on the H8/300H) and shares space with the interrupt vector.\n+and 64 entries on the H8/300H and H8S) and shares space with the interrupt vector.\n \n You must use GAS and GLD from GNU binutils version 2.7 or later for\n this attribute to work correctly.\n@@ -2493,7 +2493,7 @@ that the specified function is an interrupt handler.  The compiler will\n generate function entry and exit sequences suitable for use in an\n interrupt handler when this attribute is present.\n \n-Note, interrupt handlers for the H8/300, H8/300H and SH processors can\n+Note, interrupt handlers for the H8/300, H8/300H, H8S, and SH processors can\n be specified via the @code{interrupt_handler} attribute.\n \n Note, on the AVR, interrupts will be enabled inside the function.\n@@ -2509,7 +2509,7 @@ Permissible values for this parameter are: IRQ, FIQ, SWI, ABORT and UNDEF@.\n \n @item interrupt_handler\n @cindex interrupt handler functions on the H8/300 and SH processors\n-Use this attribute on the H8/300, H8/300H and SH to indicate that the\n+Use this attribute on the H8/300, H8/300H, H8S, and SH to indicate that the\n specified function is an interrupt handler.  The compiler will generate\n function entry and exit sequences suitable for use in an interrupt\n handler when this attribute is present.\n@@ -2532,8 +2532,8 @@ Use this attribute on the SH for an @code{interrupt_handle} to return using\n argument specifying the trap number to be used.\n \n @item eightbit_data\n-@cindex eight bit data on the H8/300 and H8/300H\n-Use this attribute on the H8/300 and H8/300H to indicate that the specified\n+@cindex eight bit data on the H8/300, H8/300H, and H8S\n+Use this attribute on the H8/300, H8/300H, and H8S to indicate that the specified\n variable should be placed into the eight bit data section.\n The compiler will generate more efficient code for certain operations\n on data in the eight bit data area.  Note the eight bit data area is limited to\n@@ -2543,8 +2543,8 @@ You must use GAS and GLD from GNU binutils version 2.7 or later for\n this attribute to work correctly.\n \n @item tiny_data\n-@cindex tiny data section on the H8/300H\n-Use this attribute on the H8/300H to indicate that the specified\n+@cindex tiny data section on the H8/300H and H8S\n+Use this attribute on the H8/300H and H8S to indicate that the specified\n variable should be placed into the tiny data section.\n The compiler will generate more efficient code for loads and stores\n on data in the tiny data section.  Note the tiny data area is limited to"}]}