{"sha": "4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMwMmRkM2RmZmFjNmZmOGU2YmVjNjZmMThjZjE2Yjg1YmZmNWY2YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-11-09T20:19:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-11-09T20:19:58Z"}, "message": "gimplify.c (gimplify_scan_omp_clauses): Call sorry_at for valid but unsupported lastprivate with conditional modifier.\n\n\t* gimplify.c (gimplify_scan_omp_clauses): Call sorry_at for valid\n\tbut unsupported lastprivate with conditional modifier.\n\n\t* c-c++-common/gomp/lastprivate-conditional-1.c: New test.\n\t* c-c++-common/gomp/lastprivate-conditional-2.c: New test.\n\nFrom-SVN: r265987", "tree": {"sha": "1530f2da2f8ab69aec57585a29a4355ae99cfe20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1530f2da2f8ab69aec57585a29a4355ae99cfe20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4c44802ab32fba9ea0305aa3db86fdffbe9e152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4c44802ab32fba9ea0305aa3db86fdffbe9e152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4c44802ab32fba9ea0305aa3db86fdffbe9e152"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "45629bbfc77709a4369ebb35c1b346e87e9031bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a", "patch": "@@ -1,3 +1,8 @@\n+2018-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gimplify.c (gimplify_scan_omp_clauses): Call sorry_at for valid\n+\tbut unsupported lastprivate with conditional modifier.\n+\n 2018-11-09  Jeff Law  <law@redhat.com>\n \n \t* config/mips/mips.c (mips_loongson_ext2_prefetch_cookie): Handle"}, {"sha": "d7cb7840a5dd9a4a41df347712ccb7a8a0d5691a", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a", "patch": "@@ -8065,6 +8065,10 @@ gimplify_scan_omp_clauses (tree *list_p, gimple_seq *pre_p,\n \t\t\t\"%<lastprivate%> clause\", decl);\n \t      OMP_CLAUSE_LASTPRIVATE_CONDITIONAL (c) = 0;\n \t    }\n+\t  if (OMP_CLAUSE_LASTPRIVATE_CONDITIONAL (c))\n+\t    sorry_at (OMP_CLAUSE_LOCATION (c),\n+\t\t      \"%<conditional%> modifier on %<lastprivate%> clause \"\n+\t\t      \"not supported yet\");\n \t  if (outer_ctx\n \t      && (outer_ctx->region_type == ORT_COMBINED_PARALLEL\n \t\t  || ((outer_ctx->region_type & ORT_COMBINED_TEAMS)"}, {"sha": "0661f2f42a990441a2f07ba8166b0ba1dfbadf6f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a", "patch": "@@ -1,3 +1,8 @@\n+2018-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-c++-common/gomp/lastprivate-conditional-1.c: New test.\n+\t* c-c++-common/gomp/lastprivate-conditional-2.c: New test.\n+\n 2018-11-09  Jeff Law  <law@redhat.com>\n \n \tgcc.dg/torture/stackalign/builtin-apply-2.c: Skip on v850."}, {"sha": "722aba79a52d6ecb414172f21d1aa032a7be0a6f", "filename": "gcc/testsuite/c-c++-common/gomp/lastprivate-conditional-1.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-1.c?ref=4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a", "patch": "@@ -0,0 +1,64 @@\n+void\n+foo (int *p)\n+{\n+  int a = -1, b = -1, c = -1, d = -1, e = -1, f = -1, g = -1, h = -1;\n+  int i;\n+  #pragma omp teams\n+  {\n+    #pragma omp distribute lastprivate (conditional: a) /* { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" } */\n+    for (i = 0; i < 32; i++)\n+      if (p[i])\n+\ta = i;\n+    #pragma omp distribute simd lastprivate (conditional: b) /* { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" } */\n+    for (i = 0; i < 32; i++)\n+      if (p[i])\n+\tb = i;\n+    #pragma omp distribute parallel for lastprivate (conditional: c) /* { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" } */\n+    for (i = 0; i < 32; i++)\n+      if (p[i])\n+\tc = i;\n+    #pragma omp distribute parallel for simd lastprivate (conditional: d) /* { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" } */\n+    for (i = 0; i < 32; i++)\n+      if (p[i])\n+\td = i;\n+  }\n+  #pragma omp teams distribute parallel for lastprivate (conditional: e) /* { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" } */\n+  for (i = 0; i < 32; i++)\n+    if (p[i])\n+      e = i;\n+  #pragma omp parallel\n+  {\n+    #pragma omp master\n+    #pragma omp taskloop lastprivate (conditional: f) /* { dg-error \"conditional 'lastprivate' clause on 'taskloop' construct\" } */\n+    for (i = 0; i < 32; i++)\n+      if (p[i])\n+\tf = i;\n+    #pragma omp master taskloop simd lastprivate (conditional: g) /* { dg-error \"conditional 'lastprivate' clause on 'taskloop' construct\" } */\n+    for (i = 0; i < 32; i++)\n+      if (p[i])\n+\tg = i;\n+  }\n+  #pragma omp parallel master taskloop simd lastprivate (conditional: h) /* { dg-error \"conditional 'lastprivate' clause on 'taskloop' construct\" } */\n+  for (i = 0; i < 32; i++)\n+    if (p[i])\n+      h = i;\n+}\n+\n+struct S { int a, b; };\n+\n+void\n+bar (int *p)\n+{\n+  struct S s = { -1, -1 }, t = { 1, 2 };\n+  int i;\n+  #pragma omp parallel for lastprivate (conditional: s) /* { dg-error \"non-scalar variable 's' in conditional 'lastprivate' clause\" } */\n+  for (i = 0; i < 32; i++)\n+    if (p[i])\n+      {\n+\tstruct S u = t;\n+\tu.b = i;\n+\ts = u;\n+      }\n+}\n+\n+/* { dg-prune-output \"not supported yet\" } */"}, {"sha": "4b1d2ca916392e768dc94e9acb3666cc89ed45d7", "filename": "gcc/testsuite/c-c++-common/gomp/lastprivate-conditional-2.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Flastprivate-conditional-2.c?ref=4302dd3dffac6ff8e6bec66f18cf16b85bff5f6a", "patch": "@@ -0,0 +1,28 @@\n+void\n+foo (int *p)\n+{\n+  int a = -1, b = -1, c = -1, d = -1, e = -1, f = -1, g = -1, h = -1;\n+  int i;\n+  #pragma omp parallel\n+  #pragma omp for lastprivate (conditional: a) /* { dg-message \"not supported yet\" } */\n+  for (i = 0; i < 32; i++)\n+    if (p[i])\n+      a = i;\n+  #pragma omp simd lastprivate (conditional: b) /* { dg-message \"not supported yet\" } */\n+  for (i = 0; i < 32; i++)\n+    if (p[i])\n+      b = i;\n+  #pragma omp parallel\n+  #pragma omp for simd lastprivate (conditional: c) /* { dg-message \"not supported yet\" } */\n+  for (i = 0; i < 32; i++)\n+    if (p[i])\n+      c = i;\n+  #pragma omp parallel for lastprivate (conditional: d) /* { dg-message \"not supported yet\" } */\n+  for (i = 0; i < 32; i++)\n+    if (p[i])\n+      d = i;\n+  #pragma omp parallel for simd lastprivate (conditional: e) /* { dg-message \"not supported yet\" } */\n+  for (i = 0; i < 32; i++)\n+    if (p[i])\n+      e = i;\n+}"}]}