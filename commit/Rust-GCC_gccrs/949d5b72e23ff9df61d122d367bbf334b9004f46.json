{"sha": "949d5b72e23ff9df61d122d367bbf334b9004f46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ5ZDViNzJlMjNmZjlkZjYxZDEyMmQzNjdiYmYzMzRiOTAwNGY0Ng==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-10-12T20:29:21Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-10-12T20:29:21Z"}, "message": "re PR fortran/18082 (Infinite loop with automatic length character objects)\n\n2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/18082\n\t* decl.c (variable_decl): Make a new copy of the character\n\tlength for each variable, when the expression is not a\n\tconstant.\n\n2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/18082\n\tgfortran.dg/automatic_char_len_1.f90: New test.\n\nFrom-SVN: r105329", "tree": {"sha": "162f353f0d18f7abe39f8eb26326940ad6f0a652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/162f353f0d18f7abe39f8eb26326940ad6f0a652"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/949d5b72e23ff9df61d122d367bbf334b9004f46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949d5b72e23ff9df61d122d367bbf334b9004f46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949d5b72e23ff9df61d122d367bbf334b9004f46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949d5b72e23ff9df61d122d367bbf334b9004f46/comments", "author": null, "committer": null, "parents": [{"sha": "944b8b35a92ccdde4c4fa5458a1b48d8e8a25412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944b8b35a92ccdde4c4fa5458a1b48d8e8a25412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944b8b35a92ccdde4c4fa5458a1b48d8e8a25412"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "94e2418acf6979dcd62ebd65ffe820993395c5ee", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d5b72e23ff9df61d122d367bbf334b9004f46/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d5b72e23ff9df61d122d367bbf334b9004f46/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=949d5b72e23ff9df61d122d367bbf334b9004f46", "patch": "@@ -1,3 +1,10 @@\n+2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/18082\n+\t* decl.c (variable_decl): Make a new copy of the character\n+\tlength for each variable, when the expression is not a\n+\tconstant.\n+\n 2005-10-12  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* gfortran.h: Add bitmasks for different FPE traps. Add fpe"}, {"sha": "20d1f8a2d20549c426b80d18e2c61b327de8add0", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d5b72e23ff9df61d122d367bbf334b9004f46/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d5b72e23ff9df61d122d367bbf334b9004f46/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=949d5b72e23ff9df61d122d367bbf334b9004f46", "patch": "@@ -900,7 +900,7 @@ gfc_match_null (gfc_expr ** result)\n    symbol table or the current interface.  */\n \n static match\n-variable_decl (void)\n+variable_decl (int elem)\n {\n   char name[GFC_MAX_SYMBOL_LEN + 1];\n   gfc_expr *initializer, *char_len;\n@@ -944,8 +944,20 @@ variable_decl (void)\n \t  cl->length = char_len;\n \t  break;\n \n+\t/* Non-constant lengths need to be copied after the first\n+\t   element.  */\n \tcase MATCH_NO:\n-\t  cl = current_ts.cl;\n+\t  if (elem > 1 && current_ts.cl->length\n+\t\t&& current_ts.cl->length->expr_type != EXPR_CONSTANT)\n+\t    {\n+\t      cl = gfc_get_charlen ();\n+\t      cl->next = gfc_current_ns->cl_list;\n+\t      gfc_current_ns->cl_list = cl;\n+\t      cl->length = gfc_copy_expr (current_ts.cl->length);\n+\t    }\n+\t  else\n+\t    cl = current_ts.cl;\n+\n \t  break;\n \n \tcase MATCH_ERROR:\n@@ -1944,6 +1956,7 @@ gfc_match_data_decl (void)\n {\n   gfc_symbol *sym;\n   match m;\n+  int elem;\n \n   m = match_type_spec (&current_ts, 0);\n   if (m != MATCH_YES)\n@@ -1995,10 +2008,12 @@ gfc_match_data_decl (void)\n   if (m == MATCH_NO && current_ts.type == BT_CHARACTER && old_char_selector)\n     gfc_match_char (',');\n \n-  /* Give the types/attributes to symbols that follow.  */\n+  /* Give the types/attributes to symbols that follow. Give the element\n+     a number so that repeat character length expressions can be copied.  */\n+  elem = 1;\n   for (;;)\n     {\n-      m = variable_decl ();\n+      m = variable_decl (elem++);\n       if (m == MATCH_ERROR)\n \tgoto cleanup;\n       if (m == MATCH_NO)"}, {"sha": "7abf169d21743b9bc577a6eee48d902784e84da7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d5b72e23ff9df61d122d367bbf334b9004f46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d5b72e23ff9df61d122d367bbf334b9004f46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=949d5b72e23ff9df61d122d367bbf334b9004f46", "patch": "@@ -1,3 +1,8 @@\n+2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/18082\n+\tgfortran.dg/automatic_char_len_1.f90: New test.\n+\n 2005-10-12  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/20847"}, {"sha": "3ccfcb70de8053d5d791c37b461fd6d93d26b876", "filename": "gcc/testsuite/gfortran.dg/automatic_char_len_1.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d5b72e23ff9df61d122d367bbf334b9004f46/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_char_len_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d5b72e23ff9df61d122d367bbf334b9004f46/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_char_len_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fautomatic_char_len_1.f90?ref=949d5b72e23ff9df61d122d367bbf334b9004f46", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! PR18082 - Compiler would get stuck in loop, whilst treating\n+! the assignments.\n+! Test is one of PR cases.\n+subroutine snafu (i)\n+character*(i) :: c1, c2\n+c1 = \"\"\n+c2 = \"\"\n+end subroutine snafu\n+\n+"}]}