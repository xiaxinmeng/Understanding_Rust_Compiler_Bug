{"sha": "b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU0YTA3ZThkMjY2YTNmNDlkN2NkN2FhOGU4MzE4YWY1MDZiNGFiMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-12-17T15:58:04Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-12-17T15:58:04Z"}, "message": "re PR c++/17821 (Poor diagnostic for using . instead of ->)\n\ncp:\n\tPR c++/17821\n\t* class.c (add_method): Do not push conversion operators into a\n\tbinding level.\n\n\t* cp-tree.h (CLASSTYPE_PRIMARY_TEMPLATE_TYPE): Reformat.\n\t* error.c (dump_decl): <TYPE_DECL case> Remove extraneous braces.\ntestsuite:\n\tPR c++/17821\n\t* g++.dg/lookup/conv-5.C: New.\n\nFrom-SVN: r92316", "tree": {"sha": "d2477afa8c43ada8dcb6e331553962ee89e51e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2477afa8c43ada8dcb6e331553962ee89e51e4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/comments", "author": null, "committer": null, "parents": [{"sha": "64d200483a9bb5597dd435c0206e052cf04a3b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64d200483a9bb5597dd435c0206e052cf04a3b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64d200483a9bb5597dd435c0206e052cf04a3b4c"}], "stats": {"total": 74, "additions": 52, "deletions": 22}, "files": [{"sha": "241e62a7b93a47d58c4fb1b00fa48c5b089db6aa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "patch": "@@ -1,3 +1,12 @@\n+2004-12-17  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/17821\n+\t* class.c (add_method): Do not push conversion operators into a\n+\tbinding level.\n+\n+\t* cp-tree.h (CLASSTYPE_PRIMARY_TEMPLATE_TYPE): Reformat.\n+\t* error.c (dump_decl): <TYPE_DECL case> Remove extraneous braces.\n+\n 2004-12-16  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/18905"}, {"sha": "688744cd66b120a7be30d16a8c8ed97860d9cbc3", "filename": "gcc/cp/class.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "patch": "@@ -857,7 +857,8 @@ add_method (tree type, tree method)\n   int using;\n   unsigned slot;\n   tree overload;\n-  int template_conv_p;\n+  bool template_conv_p = false;\n+  bool conv_p;\n   VEC(tree) *method_vec;\n   bool complete_p;\n   bool insert_p = false;\n@@ -868,8 +869,10 @@ add_method (tree type, tree method)\n \n   complete_p = COMPLETE_TYPE_P (type);\n   using = (DECL_CONTEXT (method) != type);\n-  template_conv_p = (TREE_CODE (method) == TEMPLATE_DECL\n-                     && DECL_TEMPLATE_CONV_FN_P (method));\n+  conv_p = DECL_CONV_FN_P (method);\n+  if (conv_p)\n+    template_conv_p = (TREE_CODE (method) == TEMPLATE_DECL\n+\t\t       && DECL_TEMPLATE_CONV_FN_P (method));\n \n   method_vec = CLASSTYPE_METHOD_VEC (type);\n   if (!method_vec)\n@@ -901,7 +904,6 @@ add_method (tree type, tree method)\n     }\n   else\n     {\n-      bool conv_p = DECL_CONV_FN_P (method);\n       tree m;\n \n       insert_p = true;\n@@ -1012,7 +1014,7 @@ add_method (tree type, tree method)\n   /* Add the new binding.  */ \n   overload = build_overload (method, current_fns);\n   \n-  if (slot >= CLASSTYPE_FIRST_CONVERSION_SLOT && !complete_p)\n+  if (!conv_p && slot >= CLASSTYPE_FIRST_CONVERSION_SLOT && !complete_p)\n     push_class_level_binding (DECL_NAME (method), overload);\n \n   if (insert_p)"}, {"sha": "54fade9b7d4cf1c0a69130cfb8ce31411cd11be3", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "patch": "@@ -2192,10 +2192,11 @@ struct lang_decl GTY(())\n \n /* For a template instantiation TYPE, returns the TYPE corresponding\n    to the primary template.  Otherwise returns TYPE itself.  */\n-#define CLASSTYPE_PRIMARY_TEMPLATE_TYPE(TYPE)\t\t\t\t\t\t\\\n-  ((CLASSTYPE_USE_TEMPLATE ((TYPE)) && !CLASSTYPE_TEMPLATE_SPECIALIZATION ((TYPE)))\t\\\n-   ? TREE_TYPE (DECL_TEMPLATE_RESULT (DECL_PRIMARY_TEMPLATE\t\t\t\t\\\n-\t\t\t\t      (CLASSTYPE_TI_TEMPLATE ((TYPE)))))\t\t\\\n+#define CLASSTYPE_PRIMARY_TEMPLATE_TYPE(TYPE)\t\t\t\t\\\n+  ((CLASSTYPE_USE_TEMPLATE ((TYPE))\t\t\t\t\t\\\n+    && !CLASSTYPE_TEMPLATE_SPECIALIZATION ((TYPE)))\t\t\t\\\n+   ? TREE_TYPE (DECL_TEMPLATE_RESULT (DECL_PRIMARY_TEMPLATE\t\t\\\n+\t\t\t\t      (CLASSTYPE_TI_TEMPLATE ((TYPE))))) \\\n    : (TYPE))\n \n /* Like DECL_TI_TEMPLATE, but for an ENUMERAL_, RECORD_, or UNION_TYPE.  */"}, {"sha": "8599616a3aa296bf08b5294fe703bd824988af09", "filename": "gcc/cp/error.c", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "patch": "@@ -713,19 +713,17 @@ dump_decl (tree t, int flags)\n   switch (TREE_CODE (t))\n     {\n     case TYPE_DECL:\n-      {\n-\t/* Don't say 'typedef class A' */\n-        if (DECL_ARTIFICIAL (t))\n-\t  {\n-\t    if ((flags & TFF_DECL_SPECIFIERS)\n-\t        && TREE_CODE (TREE_TYPE (t)) == TEMPLATE_TYPE_PARM)\n-\t      /* Say `class T' not just `T'.  */\n-\t      pp_cxx_identifier (cxx_pp, \"class\");\n-\n-\t    dump_type (TREE_TYPE (t), flags);\n-\t    break;\n-\t  }\n-      }\n+      /* Don't say 'typedef class A' */\n+      if (DECL_ARTIFICIAL (t))\n+\t{\n+\t  if ((flags & TFF_DECL_SPECIFIERS)\n+\t      && TREE_CODE (TREE_TYPE (t)) == TEMPLATE_TYPE_PARM)\n+\t    /* Say `class T' not just `T'.  */\n+\t    pp_cxx_identifier (cxx_pp, \"class\");\n+\t  \n+\t  dump_type (TREE_TYPE (t), flags);\n+\t  break;\n+\t}\n       if (flags & TFF_DECL_SPECIFIERS)\n \tpp_cxx_identifier (cxx_pp, \"typedef\");\n       dump_simple_decl (t, DECL_ORIGINAL_TYPE (t)"}, {"sha": "82ae7646245afe15b8c0a78ddd739be3f7f218bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "patch": "@@ -1,3 +1,8 @@\n+2004-12-17  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/17821\n+\t* g++.dg/lookup/conv-5.C: New.\n+\n 2004-12-16  Ziemowit Laski  <zlaski@apple.com>\n \n \t* objc.dg/stabs-1.m: New test."}, {"sha": "e238e90d3558f2a959059c981f63407e1414a1aa", "filename": "gcc/testsuite/g++.dg/lookup/conv-5.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fconv-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fconv-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fconv-5.C?ref=b54a07e8d266a3f49d7cd7aa8e8318af506b4ab1", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 17 Dec 2004 <nathan@codesourcery.com>\n+\n+// PR 17821. bogus error\n+// Origin:  Mikael Kilpel?inen <belz@kolumbus.fi>\n+\n+struct A {\n+  template<typename T>\n+  operator T() const;\n+  \n+  operator float() const;\n+};\n+"}]}