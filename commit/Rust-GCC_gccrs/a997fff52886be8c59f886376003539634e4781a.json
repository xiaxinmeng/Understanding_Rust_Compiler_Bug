{"sha": "a997fff52886be8c59f886376003539634e4781a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk5N2ZmZjUyODg2YmU4YzU5Zjg4NjM3NjAwMzUzOTYzNGU0NzgxYQ==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2017-05-10T13:34:07Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2017-05-10T13:34:07Z"}, "message": "raise-gcc.c (exception_class_eq): Make ec parameter const.\n\n2017-05-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * raise-gcc.c (exception_class_eq): Make ec parameter const.\n\nFrom-SVN: r247836", "tree": {"sha": "043b95d31c1e06bb5048e47002b01fd3a1949320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/043b95d31c1e06bb5048e47002b01fd3a1949320"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a997fff52886be8c59f886376003539634e4781a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a997fff52886be8c59f886376003539634e4781a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a997fff52886be8c59f886376003539634e4781a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a997fff52886be8c59f886376003539634e4781a/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ca2e7f77c6e82b3b8973c307cb22485df92728f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ca2e7f77c6e82b3b8973c307cb22485df92728f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ca2e7f77c6e82b3b8973c307cb22485df92728f"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "72a42a96173d29daf7c79c73de401ffb3d03a95e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a997fff52886be8c59f886376003539634e4781a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a997fff52886be8c59f886376003539634e4781a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a997fff52886be8c59f886376003539634e4781a", "patch": "@@ -1,3 +1,7 @@\n+2017-05-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* raise-gcc.c (exception_class_eq): Make ec parameter const.\n+\n 2017-05-02  Richard Biener  <rguenther@suse.de>\n \n \t* gcc-interface/misc.c (gnat_post_options): Do not set"}, {"sha": "62a85dac12bbb753062a40e216cab361b983936e", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a997fff52886be8c59f886376003539634e4781a/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a997fff52886be8c59f886376003539634e4781a/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=a997fff52886be8c59f886376003539634e4781a", "patch": "@@ -909,7 +909,8 @@ extern struct Exception_Data Non_Ada_Error;\n /* Return true iff the exception class of EXCEPT is EC.  */\n \n static int\n-exception_class_eq (const _GNAT_Exception *except, _Unwind_Exception_Class ec)\n+exception_class_eq (const _GNAT_Exception *except,\n+\t\t    const _Unwind_Exception_Class ec)\n {\n #ifdef __ARM_EABI_UNWINDER__\n   return memcmp (except->common.exception_class, ec, 8) == 0;"}]}