{"sha": "a846817739c1e7b930d593cd51963d6b46b5dfc6", "node_id": "C_kwDOANBUbNoAKGE4NDY4MTc3MzljMWU3YjkzMGQ1OTNjZDUxOTYzZDZiNDZiNWRmYzY", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-01-06T08:37:18Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-12-23T08:53:17Z"}, "message": "c++, driver: Fix -static-libstdc++ for targets without Bstatic/dynamic.\n\nThe current implementation for swapping between the static and shared c++\nruntimes relies on the static linker supporting Bstatic/dynamic which is\nnot available for every target (Darwin's linker does not support this).\n\nSpecs substitution (%s) is an alternative solution for this (which is what\nDarwin uses for Fortran, D and Objective-C).  However, specs substitution\nrequires that the '-static-libstdc++' be preserved in the driver's command\nline.  The patch here arranges for this to be done when the configuration\ndetermines that linker support for Bstatic/dynamic is missing.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/cp/ChangeLog:\n\n\t* g++spec.cc (lang_specific_driver): Preserve -static-libstdc++ in\n\tthe driver command line for targets without -Bstatic/dynamic support\n\tin their static linker.", "tree": {"sha": "e02791743f332c918878dd8514736619063b13d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e02791743f332c918878dd8514736619063b13d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a846817739c1e7b930d593cd51963d6b46b5dfc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a846817739c1e7b930d593cd51963d6b46b5dfc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a846817739c1e7b930d593cd51963d6b46b5dfc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a846817739c1e7b930d593cd51963d6b46b5dfc6/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16eb1f43ab4e521ed4503e7766eee25da75eaeba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16eb1f43ab4e521ed4503e7766eee25da75eaeba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16eb1f43ab4e521ed4503e7766eee25da75eaeba"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "f95d79653553c220f93bf7d5f6303e84f2b02d93", "filename": "gcc/cp/g++spec.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a846817739c1e7b930d593cd51963d6b46b5dfc6/gcc%2Fcp%2Fg%2B%2Bspec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a846817739c1e7b930d593cd51963d6b46b5dfc6/gcc%2Fcp%2Fg%2B%2Bspec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.cc?ref=a846817739c1e7b930d593cd51963d6b46b5dfc6", "patch": "@@ -234,7 +234,12 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \n \tcase OPT_static_libstdc__:\n \t  library = library >= 0 ? 2 : library;\n+#ifdef HAVE_LD_STATIC_DYNAMIC\n+\t  /* Remove -static-libstdc++ from the command only if target supports\n+\t     LD_STATIC_DYNAMIC.  When not supported, it is left in so that a\n+\t     back-end target can use outfile substitution.  */\n \t  args[i] |= SKIPOPT;\n+#endif\n \t  break;\n \n \tcase OPT_stdlib_:"}]}