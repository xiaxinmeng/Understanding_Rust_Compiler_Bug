{"sha": "26863a324a5697fe20d2fb8610010551785a9a15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY4NjNhMzI0YTU2OTdmZTIwZDJmYjg2MTAwMTA1NTE3ODVhOWExNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-05-09T16:43:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-05-09T16:43:49Z"}, "message": "re PR c++/57222 (Template alias not working in argument of template class template method)\n\n\tPR c++/57222\n\t* pt.c (lookup_template_class_1): Handle getting a template\n\ttemplate parameter as D1.\n\nFrom-SVN: r198747", "tree": {"sha": "8bdf0ef1eeb748ec76ba9b632ef7eeb9a3dff0ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bdf0ef1eeb748ec76ba9b632ef7eeb9a3dff0ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26863a324a5697fe20d2fb8610010551785a9a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26863a324a5697fe20d2fb8610010551785a9a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26863a324a5697fe20d2fb8610010551785a9a15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26863a324a5697fe20d2fb8610010551785a9a15/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a57dbdaac40dbaaaba5b6d9954829a5e6f630ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a57dbdaac40dbaaaba5b6d9954829a5e6f630ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a57dbdaac40dbaaaba5b6d9954829a5e6f630ae4"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "a254a8e74e2d30a71ecf9b114b8e2b89afc924ac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26863a324a5697fe20d2fb8610010551785a9a15/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26863a324a5697fe20d2fb8610010551785a9a15/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=26863a324a5697fe20d2fb8610010551785a9a15", "patch": "@@ -1,5 +1,9 @@\n 2013-05-09  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/57222\n+\t* pt.c (lookup_template_class_1): Handle getting a template\n+\ttemplate parameter as D1.\n+\n \tN3639 C++1y VLA diagnostics\n \t* decl.c (grokdeclarator): Complain about reference, pointer, or\n \ttypedef to VLA."}, {"sha": "0747de62df61ac1fdba5dc053ada952bfde6414a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26863a324a5697fe20d2fb8610010551785a9a15/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26863a324a5697fe20d2fb8610010551785a9a15/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=26863a324a5697fe20d2fb8610010551785a9a15", "patch": "@@ -7016,7 +7016,7 @@ maybe_get_template_decl_from_type_decl (tree decl)\n     ? CLASSTYPE_TI_TEMPLATE (TREE_TYPE (decl)) : decl;\n }\n \n-/* Given an IDENTIFIER_NODE (type TEMPLATE_DECL) and a chain of\n+/* Given an IDENTIFIER_NODE (or type TEMPLATE_DECL) and a chain of\n    parameters, find the desired type.\n \n    D1 is the PTYPENAME terminal, and ARGLIST is the list of arguments.\n@@ -7097,6 +7097,11 @@ lookup_template_class_1 (tree d1, tree arglist, tree in_decl, tree context,\n       d1 = DECL_NAME (templ);\n       context = DECL_CONTEXT (templ);\n     }\n+  else if (DECL_TEMPLATE_TEMPLATE_PARM_P (d1))\n+    {\n+      templ = d1;\n+      d1 = DECL_NAME (templ);\n+    }\n \n   /* Issue an error message if we didn't find a template.  */\n   if (! templ)"}, {"sha": "4306ab7032719104ba1254d70f3386d619c29eb9", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-34.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26863a324a5697fe20d2fb8610010551785a9a15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26863a324a5697fe20d2fb8610010551785a9a15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-34.C?ref=26863a324a5697fe20d2fb8610010551785a9a15", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/57222\n+// { dg-require-effective-target c++11 }\n+\n+template <template <typename T> class Templ>\n+using Bool = Templ<bool>;\n+\n+template <typename T>\n+class Foo {\n+private:\n+public:\n+    template<template<typename U> class Templ>\n+    void method(Bool<Templ> boolTempl);\n+};\n+\n+template <typename T>\n+template <template <typename U> class Templ>\n+void Foo<T>::method(Bool<Templ> boolTempl) {\n+}\n+\n+int main() {\n+    Foo<char> foo;\n+    return 0;\n+}"}, {"sha": "103e90a7076cd43271cef57630952bf4b66727d6", "filename": "gcc/testsuite/g++.dg/template/crash84.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26863a324a5697fe20d2fb8610010551785a9a15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash84.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26863a324a5697fe20d2fb8610010551785a9a15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash84.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash84.C?ref=26863a324a5697fe20d2fb8610010551785a9a15", "patch": "@@ -5,15 +5,16 @@\n template<typename T> struct a\n {\n     template <template <typename> class C, typename X, C<X>* =0>\n-    struct b // { dg-error \"class C' is not a template|is not a valid type\" }\n+    struct b\n     {\n     };\n };\n \n void\n foo ()\n {\n-    a<int> v; // { dg-message \"required from here\" }\n+  a<int> a1; // OK\n+  a<int>::b<a,int> b1; // { dg-error \"template argument\" }\n }\n \n-\n+// { dg-prune-output \"invalid type in declaration\" }"}]}