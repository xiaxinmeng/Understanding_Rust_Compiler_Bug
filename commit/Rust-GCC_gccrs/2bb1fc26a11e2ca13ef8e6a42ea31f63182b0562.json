{"sha": "2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJiMWZjMjZhMTFlMmNhMTNlZjhlNmE0MmVhMzFmNjMxODJiMDU2Mg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-08-07T21:12:32Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-08-07T21:12:32Z"}, "message": "decl.c (gnat_to_gnu_entity): Use XALLOCAVEC instead of alloca.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): Use XALLOCAVEC instead\n\tof alloca.\n\t(components_to_record): Likewise.\n\t* gcc-interface/trans.c (gnat_to_gnu): Likewise.\n\t* gcc-interface/utils.c (max_size): Likewise.\n\t(build_vms_descriptor32): Likewise.\n\t(build_vms_descriptor): Likewise.\n\nFrom-SVN: r162985", "tree": {"sha": "35c9ee40c0caa738fda5ccc6b47787ea24f6ced2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35c9ee40c0caa738fda5ccc6b47787ea24f6ced2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562/comments", "author": null, "committer": null, "parents": [{"sha": "1145e690d2eab146e53ee6577bf4c356637501d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1145e690d2eab146e53ee6577bf4c356637501d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1145e690d2eab146e53ee6577bf4c356637501d0"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "b03fe575347bfd43e41346c02ae2e0aeee2a404c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562", "patch": "@@ -1,3 +1,13 @@\n+2010-08-07  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity): Use XALLOCAVEC instead\n+\tof alloca.\n+\t(components_to_record): Likewise.\n+\t* gcc-interface/trans.c (gnat_to_gnu): Likewise.\n+\t* gcc-interface/utils.c (max_size): Likewise.\n+\t(build_vms_descriptor32): Likewise.\n+\t(build_vms_descriptor): Likewise.\n+\n 2010-08-07  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* gcc-interface/decl.c (subst_pair): Declare.  Declare a VEC of it."}, {"sha": "b63a6203b2d05069cb408fc8803283017b56fb24", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562", "patch": "@@ -1856,8 +1856,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \ttree gnu_template_reference;\n \ttree gnu_ptr_template = build_pointer_type (gnu_template_type);\n \ttree gnu_fat_type = make_node (RECORD_TYPE);\n-\ttree *gnu_index_types = (tree *) alloca (ndim * sizeof (tree));\n-\ttree *gnu_temp_fields = (tree *) alloca (ndim * sizeof (tree));\n+\ttree *gnu_index_types = XALLOCAVEC (tree, ndim);\n+\ttree *gnu_temp_fields = XALLOCAVEC (tree, ndim);\n \ttree gnu_max_size = size_one_node, gnu_max_size_unit, tem;\n \tint index;\n \n@@ -2127,7 +2127,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    = (Convention (gnat_entity) == Convention_Fortran);\n \t  const int ndim = Number_Dimensions (gnat_entity);\n \t  tree gnu_base_type = gnu_type;\n-\t  tree *gnu_index_types = (tree *) alloca (ndim * sizeof (tree));\n+\t  tree *gnu_index_types = XALLOCAVEC (tree, ndim);\n \t  tree gnu_max_size = size_one_node, gnu_max_size_unit;\n \t  bool need_index_type_struct = false;\n \t  int index;\n@@ -7161,7 +7161,7 @@ components_to_record (tree gnu_record_type, Node_Id gnat_component_list,\n       tree gnu_rep_type\n \t= (gnu_field_list ? make_node (RECORD_TYPE) : gnu_record_type);\n       int i, len = list_length (gnu_our_rep_list);\n-      tree *gnu_arr = (tree *) alloca (sizeof (tree) * len);\n+      tree *gnu_arr = XALLOCAVEC (tree, len);\n \n       for (gnu_field = gnu_our_rep_list, i = 0;\n \t   gnu_field;"}, {"sha": "5abc5624551a928e037daaa11f3cea77293b5bcd", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562", "patch": "@@ -4099,7 +4099,7 @@ gnat_to_gnu (Node_Id gnat_node)\n \t     ndim++, gnu_type = TREE_TYPE (gnu_type))\n \t  ;\n \n-\tgnat_expr_array = (Node_Id *) alloca (ndim * sizeof (Node_Id));\n+\tgnat_expr_array = XALLOCAVEC (Node_Id, ndim);\n \n \tif (TYPE_CONVENTION_FORTRAN_P (TREE_TYPE (gnu_array_object)))\n \t  for (i = ndim - 1, gnat_temp = First (Expressions (gnat_node));\n@@ -5267,8 +5267,7 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  noutputs = list_length (gnu_outputs);\n \t  gnu_inputs = nreverse (gnu_inputs);\n \t  ninputs = list_length (gnu_inputs);\n-\t  oconstraints\n-\t    = (const char **) alloca (noutputs * sizeof (const char *));\n+\t  oconstraints = XALLOCAVEC (const char *, noutputs);\n \n \t  for (i = 0, tail = gnu_outputs; tail; ++i, tail = TREE_CHAIN (tail))\n \t    {"}, {"sha": "381d71bcc2a29982a4572fe7c47e7179e2b071cf", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=2bb1fc26a11e2ca13ef8e6a42ea31f63182b0562", "patch": "@@ -2134,7 +2134,7 @@ max_size (tree exp, bool max_p)\n \n \t  n = call_expr_nargs (exp);\n \t  gcc_assert (n > 0);\n-\t  argarray = (tree *) alloca (n * sizeof (tree));\n+\t  argarray = XALLOCAVEC (tree, n);\n \t  for (i = 0; i < n; i++)\n \t    argarray[i] = max_size (CALL_EXPR_ARG (exp, i), max_p);\n \t  return build_call_array (type, CALL_EXPR_FN (exp), n, argarray);\n@@ -2317,7 +2317,7 @@ build_vms_descriptor32 (tree type, Mechanism_Type mech, Entity_Id gnat_entity)\n \t ndim++, inner_type = TREE_TYPE (inner_type))\n       ;\n \n-  idx_arr = (tree *) alloca (ndim * sizeof (tree));\n+  idx_arr = XALLOCAVEC (tree, ndim);\n \n   if (mech != By_Descriptor_NCA && mech != By_Short_Descriptor_NCA\n       && TREE_CODE (type) == ARRAY_TYPE && TYPE_CONVENTION_FORTRAN_P (type))\n@@ -2631,7 +2631,7 @@ build_vms_descriptor (tree type, Mechanism_Type mech, Entity_Id gnat_entity)\n \t ndim++, inner_type = TREE_TYPE (inner_type))\n       ;\n \n-  idx_arr = (tree *) alloca (ndim * sizeof (tree));\n+  idx_arr = XALLOCAVEC (tree, ndim);\n \n   if (mech != By_Descriptor_NCA\n       && TREE_CODE (type) == ARRAY_TYPE && TYPE_CONVENTION_FORTRAN_P (type))"}]}