{"sha": "ad1a0853e6c4b8a8a62aaec5d349bb240bd72255", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQxYTA4NTNlNmM0YjhhOGE2MmFhZWM1ZDM0OWJiMjQwYmQ3MjI1NQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2012-10-19T19:10:03Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2012-10-19T19:10:03Z"}, "message": "rs6000-cpus.def (POWERPC_MASKS): Don't assume OPTION_MASK_STRICT_ALIGN is defined.\n\n[gcc]\n2012-10-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\t    Dominique Dhumieres  <dominiq@lps.ens.fr>\n\n\t* config/rs6000/rs6000-cpus.def (POWERPC_MASKS): Don't assume\n\tOPTION_MASK_STRICT_ALIGN is defined.\n\t(MASK_STRICT_ALIGN): If OPTION_MASK_STRICT_ALIGN is not defined,\n\tdefine this to 0 for the 3 ports that use it.\n\n\t* config/rs6000/rs6000.c (OPTION_MASK_STRICT_ALIGN): Don't do\n\tcheck for ports not having -mstrict-align here, move test to\n\trs6000-cpus.def.\n\t(MASK_STRICT_ALIGN): Likewise.\n\t(rs6000_debug_reg_global): Print out correct target flag words if\n\t-mdebug=reg.\n\n[libobjc]\n2012-10-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* encoding.c (TARGET_VSX): Provide definitions based on the\n\tcurrent compilation options, and not based off the target options\n\tstructure.\n\t(TARGET_ALTIVEC): Likewise.\n\t(TARGET_64BIT): Likewise.\n\n\nCo-Authored-By: Dominique d'Humieres <dominiq@lps.ens.fr>\n\nFrom-SVN: r192623", "tree": {"sha": "b1169cdb2e369d59a4fdc2661831f4a810066dbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1169cdb2e369d59a4fdc2661831f4a810066dbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/comments", "author": null, "committer": null, "parents": [{"sha": "704fc8502fc5ac926349d11d4b6622493e4492fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704fc8502fc5ac926349d11d4b6622493e4492fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/704fc8502fc5ac926349d11d4b6622493e4492fb"}], "stats": {"total": 73, "additions": 65, "deletions": 8}, "files": [{"sha": "6e44c8af0973550038c90fb8d3b5104dee9fd299", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad1a0853e6c4b8a8a62aaec5d349bb240bd72255", "patch": "@@ -1,3 +1,18 @@\n+2012-10-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\t    Dominique Dhumieres  <dominiq@lps.ens.fr>\n+\n+\t* config/rs6000/rs6000-cpus.def (POWERPC_MASKS): Don't assume\n+\tOPTION_MASK_STRICT_ALIGN is defined.\n+\t(MASK_STRICT_ALIGN): If OPTION_MASK_STRICT_ALIGN is not defined,\n+\tdefine this to 0 for the 3 ports that use it.\n+\n+\t* config/rs6000/rs6000.c (OPTION_MASK_STRICT_ALIGN): Don't do\n+\tcheck for ports not having -mstrict-align here, move test to\n+\trs6000-cpus.def.\n+\t(MASK_STRICT_ALIGN): Likewise.\n+\t(rs6000_debug_reg_global): Print out correct target flag words if\n+\t-mdebug=reg.\n+\n 2012-10-19  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/54945"}, {"sha": "a0aadf1cf3eafd75c2052dc5aeec7a8b3a014387", "filename": "gcc/config/rs6000/rs6000-cpus.def", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def?ref=ad1a0853e6c4b8a8a62aaec5d349bb240bd72255", "patch": "@@ -46,6 +46,17 @@\n \n #define POWERPC_7400_MASK\t(OPTION_MASK_PPC_GFXOPT | OPTION_MASK_ALTIVEC)\n \n+/* Deal with ports that do not have -mstrict-align.  */\n+#ifdef OPTION_MASK_STRICT_ALIGN\n+#define OPTION_MASK_STRICT_ALIGN_OPTIONAL OPTION_MASK_STRICT_ALIGN\n+#else\n+#define OPTION_MASK_STRICT_ALIGN 0\n+#define OPTION_MASK_STRICT_ALIGN_OPTIONAL 0\n+#ifndef MASK_STRICT_ALIGN\n+#define MASK_STRICT_ALIGN 0\n+#endif\n+#endif\n+\n /* Mask of all options to set the default isa flags based on -mcpu=<xxx>.  */\n #define POWERPC_MASKS\t\t(OPTION_MASK_ALTIVEC\t\t\t\\\n \t\t\t\t | OPTION_MASK_CMPB\t\t\t\\\n@@ -64,7 +75,7 @@\n \t\t\t\t | OPTION_MASK_PPC_GPOPT\t\t\\\n \t\t\t\t | OPTION_MASK_RECIP_PRECISION\t\t\\\n \t\t\t\t | OPTION_MASK_SOFT_FLOAT\t\t\\\n-\t\t\t\t | OPTION_MASK_STRICT_ALIGN\t\t\\\n+\t\t\t\t | OPTION_MASK_STRICT_ALIGN_OPTIONAL\t\\\n \t\t\t\t | OPTION_MASK_VSX)\n \n #endif"}, {"sha": "02309d5001c7e5b9a58cab79ff23885fd907d98f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ad1a0853e6c4b8a8a62aaec5d349bb240bd72255", "patch": "@@ -1121,10 +1121,6 @@ static const struct attribute_spec rs6000_attribute_table[] =\n   { NULL,        0, 0, false, false, false, NULL, false }\n };\n \f\n-#ifndef OPTION_MASK_STRICT_ALIGN\n-#define OPTION_MASK_STRICT_ALIGN 0\n-#define MASK_STRICT_ALIGN 0\n-#endif\n #ifndef TARGET_PROFILE_KERNEL\n #define TARGET_PROFILE_KERNEL 0\n #endif\n@@ -1805,10 +1801,11 @@ rs6000_debug_reg_global (void)\n     fprintf (stderr, DEBUG_FMT_S, \"tune\", \"<none>\");\n \n   cl_target_option_save (&cl_opts, &global_options);\n-  rs6000_print_isa_options (stderr, 0, \"target_flags\", target_flags);\n+  rs6000_print_isa_options (stderr, 0, \"rs6000_isa_flags\",\n+\t\t\t    rs6000_isa_flags);\n \n-  rs6000_print_isa_options (stderr, 0, \"target_flags_explicit\",\n-\t\t\t    target_flags_explicit);\n+  rs6000_print_isa_options (stderr, 0, \"rs6000_isa_flags_explicit\",\n+\t\t\t    rs6000_isa_flags_explicit);\n \n   rs6000_print_builtin_options (stderr, 0, \"rs6000_builtin_mask\",\n \t\t\t\trs6000_builtin_mask);"}, {"sha": "53ceee35fcc5d5e26a8c79e849f0bd17587a3f42", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=ad1a0853e6c4b8a8a62aaec5d349bb240bd72255", "patch": "@@ -1,3 +1,11 @@\n+2012-10-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* encoding.c (TARGET_VSX): Provide definitions based on the\n+\tcurrent compilation options, and not based off the target options\n+\tstructure.\n+\t(TARGET_ALTIVEC): Likewise.\n+\t(TARGET_64BIT): Likewise.\n+\n 2012-09-14  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* configure: Regenerated."}, {"sha": "7e33e738bb9ea41a33db1d153f759f0b04fe1980", "filename": "libobjc/encoding.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/libobjc%2Fencoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1a0853e6c4b8a8a62aaec5d349bb240bd72255/libobjc%2Fencoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fencoding.c?ref=ad1a0853e6c4b8a8a62aaec5d349bb240bd72255", "patch": "@@ -112,6 +112,32 @@ static int __attribute__ ((__unused__)) not_target_flags = 0;\n #undef ALTIVEC_VECTOR_MODE\n #define ALTIVEC_VECTOR_MODE(MODE) (0)\n \n+/* Replace TARGET_VSX, TARGET_ALTIVEC, and TARGET_64BIT with constants based on\n+   the current switches, rather than looking in the options structure.  */\n+#ifdef _ARCH_PPC\n+#undef TARGET_VSX\n+#undef TARGET_ALTIVEC\n+#undef TARGET_64BIT\n+\n+#ifdef __VSX__\n+#define TARGET_VSX 1\n+#else\n+#define TARGET_VSX 0\n+#endif\n+\n+#ifdef __ALTIVEC__\n+#define TARGET_ALTIVEC 1\n+#else\n+#define TARGET_ALTIVEC 0\n+#endif\n+\n+#ifdef _ARCH_PPC64\n+#define TARGET_64BIT 1\n+#else\n+#define TARGET_64BIT 0\n+#endif\n+#endif\n+\n /* Furthermore, some (powerpc) targets also use TARGET_ALIGN_NATURAL\n  in their alignment macros. Currently[4.5/6], rs6000.h points this\n  to a static variable, initialized by target overrides. This is reset"}]}