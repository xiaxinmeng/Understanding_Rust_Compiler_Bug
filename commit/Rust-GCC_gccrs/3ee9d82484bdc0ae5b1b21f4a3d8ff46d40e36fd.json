{"sha": "3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VlOWQ4MjQ4NGJkYzBhZTViMWIyMWY0YTNkOGZmNDZkNDBlMzZmZA==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-14T14:12:47Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-14T14:12:47Z"}, "message": "PR fortran/95088 - Buffer overflows with PDTs, submodules and long symbols\n\nWith PDTs (parameterized derived types) and submodules, name mangling\nresults in variably long internal symbols.  Instead of using a fixed-size\nintermediate buffer, which is actually not really needed, just use a\npointer to strings.\n\n2020-06-14  Harald Anlauf  <anlauf@gmx.de>\n\ngcc/fortran/\n\tPR fortran/95088\n\t* class.c (get_unique_type_string): Replace use of fixed size\n\tbuffer by internally passing a pointer to strings.", "tree": {"sha": "e2f261c3bf5b56b7bb5006b6d86a83720f37bdf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2f261c3bf5b56b7bb5006b6d86a83720f37bdf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4644e8f15f835a9934a8d289ee08ba4cb46cbfac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4644e8f15f835a9934a8d289ee08ba4cb46cbfac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4644e8f15f835a9934a8d289ee08ba4cb46cbfac"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "227134eef3da56acc4ac8982bc8203e50d3a2d1a", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd", "patch": "@@ -479,19 +479,11 @@ gfc_class_initializer (gfc_typespec *ts, gfc_expr *init_expr)\n static void\n get_unique_type_string (char *string, gfc_symbol *derived)\n {\n-  /* Provide sufficient space to hold \"Pdtsymbol\".  */\n-  char dt_name[GFC_MAX_SYMBOL_LEN+4];\n+  const char *dt_name;\n   if (derived->attr.unlimited_polymorphic)\n-    strcpy (dt_name, \"STAR\");\n+    dt_name = \"STAR\";\n   else\n-    {\n-      const char *upper = gfc_dt_upper_string (derived->name);\n-      size_t len = strnlen (upper, sizeof (dt_name));\n-      if (len >= sizeof (dt_name))\n-\tgfc_internal_error (\"get_unique_type_string: identifier overflow\");\n-      memcpy (dt_name, upper, len);\n-      dt_name[len] = '\\0';\n-    }\n+    dt_name = gfc_dt_upper_string (derived->name);\n   if (derived->attr.unlimited_polymorphic)\n     sprintf (string, \"_%s\", dt_name);\n   else if (derived->module)"}, {"sha": "318fc3f36778e089f213822978ec8b9ced5e3c43", "filename": "gcc/testsuite/gfortran.dg/pr95088.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95088.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95088.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95088.f90?ref=3ee9d82484bdc0ae5b1b21f4a3d8ff46d40e36fd", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do compile }\n+! { dg-options \"-fsecond-underscore\" }\n+! PR fortran/95088 - ICE in gfc_build_class_symbol, at fortran/class.c:653\n+\n+module m2345678901234567890123456789012345678901234567890123456789_123\n+  type t2345678901234567890123456789012345678901234567890123456789_123 &\n+      (n2345678901234567890123456789012345678901234567890123456789_123,&\n+       r2345678901234567890123456789012345678901234567890123456789_123,&\n+       k2345678901234567890123456789012345678901234567890123456789_123,&\n+       l2345678901234567890123456789012345678901234567890123456789_123 )\n+     integer, kind :: n2345678901234567890123456789012345678901234567890123456789_123\n+     integer, kind :: r2345678901234567890123456789012345678901234567890123456789_123\n+     integer, kind :: k2345678901234567890123456789012345678901234567890123456789_123\n+     integer, len  :: l2345678901234567890123456789012345678901234567890123456789_123\n+     complex (kind  = r2345678901234567890123456789012345678901234567890123456789_123) &\n+                   :: z2345678901234567890123456789012345678901234567890123456789_123\n+     character(kind = k2345678901234567890123456789012345678901234567890123456789_123, &\n+                len = l2345678901234567890123456789012345678901234567890123456789_123) &\n+                   :: c2345678901234567890123456789012345678901234567890123456789_123\n+  end type\n+  type, extends (t2345678901234567890123456789012345678901234567890123456789_123) :: &\n+      a2345678901234567890123456789012345678901234567890123456789_123\n+  end type\n+  interface\n+     module subroutine s2345678901234567890123456789012345678901234567890123456789_123 &\n+                      (x2345678901234567890123456789012345678901234567890123456789_123)\n+       class(a2345678901234567890123456789012345678901234567890123456789_123(16,8,4,1234567890)) :: &\n+             x2345678901234567890123456789012345678901234567890123456789_123\n+     end\n+  end interface\n+end"}]}