{"sha": "997f228f27f731f420f06e5eb0c247eab5da19ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk3ZjIyOGYyN2Y3MzFmNDIwZjA2ZTVlYjBjMjQ3ZWFiNWRhMTlhZA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2012-10-25T22:19:47Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2012-10-25T22:19:47Z"}, "message": "Remove unnecessary sparc constraint.\n\n\t* config/sparc/constraints.md (\"U\"): Delete.\n\t* config/sparc/sparc.md: Use 'r' constraint instead of 'U'.\n\t* config/sparc/sync.md: Likewise.\n\nFrom-SVN: r192824", "tree": {"sha": "1d194bd7f99fa680b7bd61d73ad98677af4f719b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d194bd7f99fa680b7bd61d73ad98677af4f719b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/997f228f27f731f420f06e5eb0c247eab5da19ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/997f228f27f731f420f06e5eb0c247eab5da19ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/997f228f27f731f420f06e5eb0c247eab5da19ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/997f228f27f731f420f06e5eb0c247eab5da19ad/comments", "author": null, "committer": null, "parents": [{"sha": "5831a5f0a8393c05a6da99f9a5995ffc7aa6b8ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5831a5f0a8393c05a6da99f9a5995ffc7aa6b8ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5831a5f0a8393c05a6da99f9a5995ffc7aa6b8ca"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "d6751b1b20c818f6e52b0cfdc1fac8f1b9522591", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/997f228f27f731f420f06e5eb0c247eab5da19ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/997f228f27f731f420f06e5eb0c247eab5da19ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=997f228f27f731f420f06e5eb0c247eab5da19ad", "patch": "@@ -1,7 +1,13 @@\n+2012-10-25  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/constraints.md (\"U\"): Delete.\n+\t* config/sparc/sparc.md: Use 'r' constraint instead of 'U'.\n+\t* config/sparc/sync.md: Likewise.\n+\n 2012-10-25  Lawrence Crowl  <crowl@google.com>\n \n \t* hash-table.h: Add usage documentation.\n-\t(template struct typed_free_remove): Clarify documentation. \n+\t(template struct typed_free_remove): Clarify documentation.\n \tRename template parameter.\n \t(struct typed_noop_remove): Likewise.\n \t(descriptor concept): Change typedef T to value_type."}, {"sha": "1d99d4b3c660a03de74e14e8a28311fd117514bf", "filename": "gcc/config/sparc/constraints.md", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/997f228f27f731f420f06e5eb0c247eab5da19ad/gcc%2Fconfig%2Fsparc%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/997f228f27f731f420f06e5eb0c247eab5da19ad/gcc%2Fconfig%2Fsparc%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fconstraints.md?ref=997f228f27f731f420f06e5eb0c247eab5da19ad", "patch": "@@ -138,15 +138,6 @@\n       (match_code \"mem\")\n       (match_test \"memory_ok_for_ldd (op)\")))\n \n-;; Not needed in 64-bit mode\n-(define_constraint \"U\"\n- \"Pseudo-register or hard even-numbered integer register\"\n- (and (match_test \"TARGET_ARCH32\")\n-      (match_code \"reg\")\n-      (ior (match_test \"REGNO (op) < FIRST_PSEUDO_REGISTER\")\n-\t   (not (match_test \"reload_in_progress && reg_renumber [REGNO (op)] < 0\")))\n-      (match_test \"register_ok_for_ldd (op)\")))\n-\n ;; Equivalent to 'T' but available in 64-bit mode\n (define_memory_constraint \"W\"\n  \"Memory reference for 'e' constraint floating-point register\""}, {"sha": "4a44078a26cd34c9c4c761756c3c2b4b8384a267", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/997f228f27f731f420f06e5eb0c247eab5da19ad/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/997f228f27f731f420f06e5eb0c247eab5da19ad/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=997f228f27f731f420f06e5eb0c247eab5da19ad", "patch": "@@ -1595,9 +1595,9 @@\n \n (define_insn \"*movdi_insn_sp32\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\t\t\t\"=T,o,T,U,o,r,r,r,?T,?*f,?*f,?o,?*e,?*e,  r,?*f,?*e,?W,b,b\")\n+\t\t\t\t\t\"=T,o,T,r,o,r,r,r,?T,?*f,?*f,?o,?*e,?*e,  r,?*f,?*e,?W,b,b\")\n         (match_operand:DI 1 \"input_operand\"\n-\t\t\t\t\t\" J,J,U,T,r,o,i,r,*f,  T,  o,*f, *e, *e,?*f,  r,  W,*e,J,P\"))]\n+\t\t\t\t\t\" J,J,r,T,r,o,i,r,*f,  T,  o,*f, *e, *e,?*f,  r,  W,*e,J,P\"))]\n   \"! TARGET_ARCH64\n    && (register_operand (operands[0], DImode)\n        || register_or_zero_operand (operands[1], DImode))\"\n@@ -2302,8 +2302,8 @@\n })\n \n (define_insn \"*movdf_insn_sp32\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,e,*r, f,  e,T,W,U,T,  f,  *r,  o,o\")\n-\t(match_operand:DF 1 \"input_operand\"         \"G,C,e,e, f,*r,W#F,G,e,T,U,o#F,*roF,*rG,f\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=b,b,e,e,*r, f,  e,T,W,r,T,  f,  *r,  o,o\")\n+\t(match_operand:DF 1 \"input_operand\"         \"G,C,e,e, f,*r,W#F,G,e,T,r,o#F,*roF,*rG,f\"))]\n   \"! TARGET_ARCH64\n    && (register_operand (operands[0], DFmode)\n        || register_or_zero_or_all_ones_operand (operands[1], DFmode))\"\n@@ -2541,8 +2541,8 @@\n })\n \n (define_insn \"*movtf_insn_sp32\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b, e,o,  o,U,  r\")\n-\t(match_operand:TF 1 \"input_operand\"        \" G,oe,e,rGU,o,roG\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=b, e,o, o,r,  r\")\n+\t(match_operand:TF 1 \"input_operand\"        \" G,oe,e,rG,o,roG\"))]\n   \"! TARGET_ARCH64\n    && (register_operand (operands[0], TFmode)\n        || register_or_zero_operand (operands[1], TFmode))\"\n@@ -7911,8 +7911,8 @@\n    (set_attr \"cpu_feature\" \"vis,vis,vis,*,*,*,*,*,vis3,vis3,*\")])\n \n (define_insn \"*mov<VM64:mode>_insn_sp32\"\n-  [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e,e,e,*r, f,e,m,m,U,T, o,*r\")\n-\t(match_operand:VM64 1 \"input_operand\"         \"Y,C,e, f,*r,m,e,Y,T,U,*r,*r\"))]\n+  [(set (match_operand:VM64 0 \"nonimmediate_operand\" \"=e,e,e,*r, f,e,m,m,r,T, o,*r\")\n+\t(match_operand:VM64 1 \"input_operand\"         \"Y,C,e, f,*r,m,e,Y,T,r,*r,*r\"))]\n   \"TARGET_VIS\n    && ! TARGET_ARCH64\n    && (register_operand (operands[0], <VM64:MODE>mode)"}, {"sha": "302cd749700f71e5215914357287219878c0bfdc", "filename": "gcc/config/sparc/sync.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/997f228f27f731f420f06e5eb0c247eab5da19ad/gcc%2Fconfig%2Fsparc%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/997f228f27f731f420f06e5eb0c247eab5da19ad/gcc%2Fconfig%2Fsparc%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsync.md?ref=997f228f27f731f420f06e5eb0c247eab5da19ad", "patch": "@@ -115,7 +115,7 @@\n })\n \n (define_insn \"atomic_loaddi_1\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=U,?*f\")\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r,?*f\")\n \t(unspec:DI [(match_operand:DI 1 \"memory_operand\" \"m,m\")]\n \t\t   UNSPEC_ATOMIC))]\n   \"!TARGET_ARCH64\"\n@@ -144,7 +144,7 @@\n (define_insn \"atomic_storedi_1\"\n   [(set (match_operand:DI 0 \"memory_operand\" \"=m,m,m\")\n \t(unspec:DI\n-\t  [(match_operand:DI 1 \"register_or_v9_zero_operand\" \"J,U,?*f\")]\n+\t  [(match_operand:DI 1 \"register_or_v9_zero_operand\" \"J,r,?*f\")]\n \t  UNSPEC_ATOMIC))]\n   \"!TARGET_ARCH64\"\n   \"@"}]}