{"sha": "25a11453cae6975b7a10a7f30b2076e639713908", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVhMTE0NTNjYWU2OTc1YjdhMTBhN2YzMGIyMDc2ZTYzOTcxMzkwOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-04-20T21:31:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-18T09:08:17Z"}, "message": "[Ada] Small adjustment to Get_Integer_Type function\n\n2020-06-18  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_attr.adb (Get_Integer_Type): Pick an unsigned type based\n\ton the Esize of the base type of the input type.", "tree": {"sha": "6106387dc3aeb11ed33c17ecf4ef98e4ee0ca58a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6106387dc3aeb11ed33c17ecf4ef98e4ee0ca58a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25a11453cae6975b7a10a7f30b2076e639713908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25a11453cae6975b7a10a7f30b2076e639713908", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25a11453cae6975b7a10a7f30b2076e639713908", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25a11453cae6975b7a10a7f30b2076e639713908/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e64cf055250718d8e1659d37738c9eb2d2da1e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e64cf055250718d8e1659d37738c9eb2d2da1e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e64cf055250718d8e1659d37738c9eb2d2da1e3"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "a96d2d5b732e7a10d1d16b875c103c08d8f6a270", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25a11453cae6975b7a10a7f30b2076e639713908/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25a11453cae6975b7a10a7f30b2076e639713908/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=25a11453cae6975b7a10a7f30b2076e639713908", "patch": "@@ -1750,23 +1750,25 @@ package body Exp_Attr is\n       ----------------------\n \n       function Get_Integer_Type (Typ : Entity_Id) return Entity_Id is\n-         Siz     : constant Uint := RM_Size (Base_Type (Typ));\n+         Siz     : constant Uint := Esize (Base_Type (Typ));\n          Int_Typ : Entity_Id;\n \n       begin\n-         --  We need to accommodate unsigned values\n+         --  We need to accommodate invalid values of the base type since we\n+         --  accept them for Enum_Rep and Pos, so we reason on the Esize. And\n+         --  we use an unsigned type since the enumeration type is unsigned.\n \n-         if Siz < RM_Size (Standard_Short_Short_Integer) then\n-            Int_Typ := Standard_Short_Short_Integer;\n+         if Siz <= Esize (Standard_Short_Short_Unsigned) then\n+            Int_Typ := Standard_Short_Short_Unsigned;\n \n-         elsif Siz < RM_Size (Standard_Short_Integer) then\n-            Int_Typ := Standard_Short_Integer;\n+         elsif Siz <= Esize (Standard_Short_Unsigned) then\n+            Int_Typ := Standard_Short_Unsigned;\n \n-         elsif Siz < RM_Size (Standard_Integer) then\n-            Int_Typ := Standard_Integer;\n+         elsif Siz <= Esize (Standard_Unsigned) then\n+            Int_Typ := Standard_Unsigned;\n \n          else\n-            Int_Typ := Standard_Long_Long_Integer;\n+            raise Program_Error;\n          end if;\n \n          return Int_Typ;"}]}