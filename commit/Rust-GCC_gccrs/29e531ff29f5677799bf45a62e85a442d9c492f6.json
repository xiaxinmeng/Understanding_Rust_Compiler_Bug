{"sha": "29e531ff29f5677799bf45a62e85a442d9c492f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllNTMxZmYyOWY1Njc3Nzk5YmY0NWE2MmU4NWE0NDJkOWM0OTJmNg==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2003-06-30T23:53:29Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2003-06-30T23:53:29Z"}, "message": "glib-2.0.m4: New file.\n\n\t* glib-2.0.m4: New file.\n\t* gtk-2.0.m4: New file.\n\t* glib.m4: Remove.\n\t* gtk.m4: Remove.\n\t* configure.in: Update AM_PATH_GTK macro call to\n\tAM_PATH_GTK_2_0.  Likewise for AM_PATH_GLIB.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c,\n\tjni/gtk-peer/gthread-jni.c,\n\tjni/gtk-peer/gthread-jni.h:\n\tNew versions from classpath.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* gcj/Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r68746", "tree": {"sha": "09502591894f19a49e4f3d930f233cc79b4f1759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09502591894f19a49e4f3d930f233cc79b4f1759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29e531ff29f5677799bf45a62e85a442d9c492f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e531ff29f5677799bf45a62e85a442d9c492f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e531ff29f5677799bf45a62e85a442d9c492f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e531ff29f5677799bf45a62e85a442d9c492f6/comments", "author": null, "committer": null, "parents": [{"sha": "884a757a3145d451ba1e2d11a9a56dc1cd3f0f3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884a757a3145d451ba1e2d11a9a56dc1cd3f0f3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884a757a3145d451ba1e2d11a9a56dc1cd3f0f3d"}], "stats": {"total": 2823, "additions": 1638, "deletions": 1185}, "files": [{"sha": "32af9058169523cc53cf345839ac19eab4e1418d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -1,3 +1,32 @@\n+2003-06-30  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* glib-2.0.m4: New file.\n+\t* gtk-2.0.m4: New file.\n+\t* glib.m4: Remove.\n+\t* gtk.m4: Remove.\n+\t* configure.in: Update AM_PATH_GTK macro call to\n+\tAM_PATH_GTK_2_0.  Likewise for AM_PATH_GLIB.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c,\n+\tjni/gtk-peer/gthread-jni.c,\n+\tjni/gtk-peer/gthread-jni.h:\n+\tNew versions from classpath.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* gcj/Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2003-06-30  Gary Benson  <gbenson@redhat.com>\n \n \tFor PR libgcj/11349:"}, {"sha": "a138372c59f14e8a091a1cec4b94f186bfb9ac6f", "filename": "libjava/Makefile.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -86,10 +86,11 @@ GCOBJS = @GCOBJS@\n GCSPEC = @GCSPEC@\n GCTESTSPEC = @GCTESTSPEC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n-GLIB_CONFIG = @GLIB_CONFIG@\n+GLIB_GENMARSHAL = @GLIB_GENMARSHAL@\n GLIB_LIBS = @GLIB_LIBS@\n+GLIB_MKENUMS = @GLIB_MKENUMS@\n+GOBJECT_QUERY = @GOBJECT_QUERY@\n GTK_CFLAGS = @GTK_CFLAGS@\n-GTK_CONFIG = @GTK_CONFIG@\n GTK_LIBS = @GTK_LIBS@\n HASH_SYNC_SPEC = @HASH_SYNC_SPEC@\n IEEESPEC = @IEEESPEC@\n@@ -115,6 +116,7 @@ OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PERL = @PERL@\n+PKG_CONFIG = @PKG_CONFIG@\n PLATFORMOBJS = @PLATFORMOBJS@\n RANLIB = @RANLIB@\n STRIP = @STRIP@\n@@ -4284,7 +4286,7 @@ Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)\n \t  && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status\n \n $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ configure.in  acinclude.m4 \\\n-\t\t./acinclude.m4 ./aclocal.m4 ./glib.m4 ./gtk.m4 \\\n+\t\t./acinclude.m4 ./aclocal.m4 ./glib-2.0.m4 ./gtk-2.0.m4 \\\n \t\t./libart.m4\n \tcd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n "}, {"sha": "ef532589313df8753c648ec60f220c12c22dcca9", "filename": "libjava/aclocal.m4", "status": "modified", "additions": 142, "deletions": 124, "changes": 266, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Faclocal.m4?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -435,67 +435,79 @@ done<<>>dnl>>)\n changequote([,]))])\n \n # Configure paths for GTK+\n-# Owen Taylor     97-11-3\n+# Owen Taylor     1997-2001\n \n-dnl AM_PATH_GTK([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n-dnl Test for GTK, and define GTK_CFLAGS and GTK_LIBS\n+dnl AM_PATH_GTK_2_0([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n+dnl Test for GTK+, and define GTK_CFLAGS and GTK_LIBS, if gthread is specified in MODULES, \n+dnl pass to pkg-config\n dnl\n-AC_DEFUN(AM_PATH_GTK,\n+AC_DEFUN(AM_PATH_GTK_2_0,\n [dnl \n-dnl Get the cflags and libraries from the gtk-config script\n+dnl Get the cflags and libraries from pkg-config\n dnl\n-AC_ARG_WITH(gtk-prefix,[  --with-gtk-prefix=PFX   Prefix where GTK is installed (optional)],\n-            gtk_config_prefix=\"$withval\", gtk_config_prefix=\"\")\n-AC_ARG_WITH(gtk-exec-prefix,[  --with-gtk-exec-prefix=PFX Exec prefix where GTK is installed (optional)],\n-            gtk_config_exec_prefix=\"$withval\", gtk_config_exec_prefix=\"\")\n-AC_ARG_ENABLE(gtktest, [  --disable-gtktest       Do not try to compile and run a test GTK program],\n+AC_ARG_ENABLE(gtktest, [  --disable-gtktest       do not try to compile and run a test GTK+ program],\n \t\t    , enable_gtktest=yes)\n \n+  pkg_config_args=gtk+-2.0\n   for module in . $4\n   do\n       case \"$module\" in\n          gthread) \n-             gtk_config_args=\"$gtk_config_args gthread\"\n+             pkg_config_args=\"$pkg_config_args gthread-2.0\"\n          ;;\n       esac\n   done\n \n-  if test x$gtk_config_exec_prefix != x ; then\n-     gtk_config_args=\"$gtk_config_args --exec-prefix=$gtk_config_exec_prefix\"\n-     if test x${GTK_CONFIG+set} != xset ; then\n-        GTK_CONFIG=$gtk_config_exec_prefix/bin/gtk-config\n-     fi\n+  no_gtk=\"\"\n+\n+  AC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n+\n+  if test x$PKG_CONFIG != xno ; then\n+    if pkg-config --atleast-pkgconfig-version 0.7 ; then\n+      :\n+    else\n+      echo *** pkg-config too old; version 0.7 or better required.\n+      no_gtk=yes\n+      PKG_CONFIG=no\n+    fi\n+  else\n+    no_gtk=yes\n   fi\n-  if test x$gtk_config_prefix != x ; then\n-     gtk_config_args=\"$gtk_config_args --prefix=$gtk_config_prefix\"\n-     if test x${GTK_CONFIG+set} != xset ; then\n-        GTK_CONFIG=$gtk_config_prefix/bin/gtk-config\n-     fi\n+\n+  min_gtk_version=ifelse([$1], ,2.0.0,$1)\n+  AC_MSG_CHECKING(for GTK+ - version >= $min_gtk_version)\n+\n+  if test x$PKG_CONFIG != xno ; then\n+    ## don't try to run the test against uninstalled libtool libs\n+    if $PKG_CONFIG --uninstalled $pkg_config_args; then\n+\t  echo \"Will use uninstalled version of GTK+ found in PKG_CONFIG_PATH\"\n+\t  enable_gtktest=no\n+    fi\n+\n+    if $PKG_CONFIG --atleast-version $min_gtk_version $pkg_config_args; then\n+\t  :\n+    else\n+\t  no_gtk=yes\n+    fi\n   fi\n \n-  AC_PATH_PROG(GTK_CONFIG, gtk-config, no)\n-  min_gtk_version=ifelse([$1], ,0.99.7,$1)\n-  AC_MSG_CHECKING(for GTK - version >= $min_gtk_version)\n-  no_gtk=\"\"\n-  if test \"$GTK_CONFIG\" = \"no\" ; then\n-    no_gtk=yes\n-  else\n-    GTK_CFLAGS=`$GTK_CONFIG $gtk_config_args --cflags`\n-    GTK_LIBS=`$GTK_CONFIG $gtk_config_args --libs`\n-    gtk_config_major_version=`$GTK_CONFIG $gtk_config_args --version | \\\n+  if test x\"$no_gtk\" = x ; then\n+    GTK_CFLAGS=`$PKG_CONFIG $pkg_config_args --cflags`\n+    GTK_LIBS=`$PKG_CONFIG $pkg_config_args --libs`\n+    gtk_config_major_version=`$PKG_CONFIG --modversion gtk+-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n-    gtk_config_minor_version=`$GTK_CONFIG $gtk_config_args --version | \\\n+    gtk_config_minor_version=`$PKG_CONFIG --modversion gtk+-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n-    gtk_config_micro_version=`$GTK_CONFIG $gtk_config_args --version | \\\n+    gtk_config_micro_version=`$PKG_CONFIG --modversion gtk+-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n     if test \"x$enable_gtktest\" = \"xyes\" ; then\n       ac_save_CFLAGS=\"$CFLAGS\"\n       ac_save_LIBS=\"$LIBS\"\n       CFLAGS=\"$CFLAGS $GTK_CFLAGS\"\n       LIBS=\"$GTK_LIBS $LIBS\"\n dnl\n-dnl Now check if the installed GTK is sufficiently new. (Also sanity\n-dnl checks the results of gtk-config to some extent\n+dnl Now check if the installed GTK+ is sufficiently new. (Also sanity\n+dnl checks the results of pkg-config to some extent)\n dnl\n       rm -f conf.gtktest\n       AC_TRY_RUN([\n@@ -522,19 +534,17 @@ main ()\n       (gtk_minor_version != $gtk_config_minor_version) ||\n       (gtk_micro_version != $gtk_config_micro_version))\n     {\n-      printf(\"\\n*** 'gtk-config --version' returned %d.%d.%d, but GTK+ (%d.%d.%d)\\n\", \n+      printf(\"\\n*** 'pkg-config --modversion gtk+-2.0' returned %d.%d.%d, but GTK+ (%d.%d.%d)\\n\", \n              $gtk_config_major_version, $gtk_config_minor_version, $gtk_config_micro_version,\n              gtk_major_version, gtk_minor_version, gtk_micro_version);\n-      printf (\"*** was found! If gtk-config was correct, then it is best\\n\");\n+      printf (\"*** was found! If pkg-config was correct, then it is best\\n\");\n       printf (\"*** to remove the old version of GTK+. You may also be able to fix the error\\n\");\n       printf(\"*** by modifying your LD_LIBRARY_PATH enviroment variable, or by editing\\n\");\n       printf(\"*** /etc/ld.so.conf. Make sure you have run ldconfig if that is\\n\");\n       printf(\"*** required on your system.\\n\");\n-      printf(\"*** If gtk-config was wrong, set the environment variable GTK_CONFIG\\n\");\n-      printf(\"*** to point to the correct copy of gtk-config, and remove the file config.cache\\n\");\n-      printf(\"*** before re-running configure\\n\");\n+      printf(\"*** If pkg-config was wrong, set the environment variable PKG_CONFIG_PATH\\n\");\n+      printf(\"*** to point to the correct configuration files\\n\");\n     } \n-#if defined (GTK_MAJOR_VERSION) && defined (GTK_MINOR_VERSION) && defined (GTK_MICRO_VERSION)\n   else if ((gtk_major_version != GTK_MAJOR_VERSION) ||\n \t   (gtk_minor_version != GTK_MINOR_VERSION) ||\n            (gtk_micro_version != GTK_MICRO_VERSION))\n@@ -544,7 +554,6 @@ main ()\n       printf(\"*** library (version %d.%d.%d)\\n\",\n \t     gtk_major_version, gtk_minor_version, gtk_micro_version);\n     }\n-#endif /* defined (GTK_MAJOR_VERSION) ... */\n   else\n     {\n       if ((gtk_major_version > major) ||\n@@ -562,10 +571,10 @@ main ()\n         printf(\"*** GTK+ is always available from ftp://ftp.gtk.org.\\n\");\n         printf(\"***\\n\");\n         printf(\"*** If you have already installed a sufficiently new version, this error\\n\");\n-        printf(\"*** probably means that the wrong copy of the gtk-config shell script is\\n\");\n+        printf(\"*** probably means that the wrong copy of the pkg-config shell script is\\n\");\n         printf(\"*** being found. The easiest way to fix this is to remove the old version\\n\");\n-        printf(\"*** of GTK+, but you can also set the GTK_CONFIG environment to point to the\\n\");\n-        printf(\"*** correct copy of gtk-config. (In this case, you will have to\\n\");\n+        printf(\"*** of GTK+, but you can also set the PKG_CONFIG environment to point to the\\n\");\n+        printf(\"*** correct copy of pkg-config. (In this case, you will have to\\n\");\n         printf(\"*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf\\n\");\n         printf(\"*** so that the correct libraries are found at run-time))\\n\");\n       }\n@@ -578,44 +587,37 @@ main ()\n      fi\n   fi\n   if test \"x$no_gtk\" = x ; then\n-     AC_MSG_RESULT(yes)\n+     AC_MSG_RESULT(yes (version $gtk_config_major_version.$gtk_config_minor_version.$gtk_config_micro_version))\n      ifelse([$2], , :, [$2])     \n   else\n      AC_MSG_RESULT(no)\n-     if test \"$GTK_CONFIG\" = \"no\" ; then\n-       echo \"*** The gtk-config script installed by GTK could not be found\"\n-       echo \"*** If GTK was installed in PREFIX, make sure PREFIX/bin is in\"\n-       echo \"*** your path, or set the GTK_CONFIG environment variable to the\"\n-       echo \"*** full path to gtk-config.\"\n+     if test \"$PKG_CONFIG\" = \"no\" ; then\n+       echo \"*** A new enough version of pkg-config was not found.\"\n+       echo \"*** See http://pkgconfig.sourceforge.net\"\n      else\n        if test -f conf.gtktest ; then\n         :\n        else\n-          echo \"*** Could not run GTK test program, checking why...\"\n+          echo \"*** Could not run GTK+ test program, checking why...\"\n+\t  ac_save_CFLAGS=\"$CFLAGS\"\n+\t  ac_save_LIBS=\"$LIBS\"\n           CFLAGS=\"$CFLAGS $GTK_CFLAGS\"\n           LIBS=\"$LIBS $GTK_LIBS\"\n           AC_TRY_LINK([\n #include <gtk/gtk.h>\n #include <stdio.h>\n ],      [ return ((gtk_major_version) || (gtk_minor_version) || (gtk_micro_version)); ],\n         [ echo \"*** The test program compiled, but did not run. This usually means\"\n-          echo \"*** that the run-time linker is not finding GTK or finding the wrong\"\n-          echo \"*** version of GTK. If it is not finding GTK, you'll need to set your\"\n+          echo \"*** that the run-time linker is not finding GTK+ or finding the wrong\"\n+          echo \"*** version of GTK+. If it is not finding GTK+, you'll need to set your\"\n           echo \"*** LD_LIBRARY_PATH environment variable, or edit /etc/ld.so.conf to point\"\n           echo \"*** to the installed location  Also, make sure you have run ldconfig if that\"\n           echo \"*** is required on your system\"\n \t  echo \"***\"\n           echo \"*** If you have an old version installed, it is best to remove it, although\"\n-          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\"\n-          echo \"***\"\n-          echo \"*** If you have a RedHat 5.0 system, you should remove the GTK package that\"\n-          echo \"*** came with the system with the command\"\n-          echo \"***\"\n-          echo \"***    rpm --erase --nodeps gtk gtk-devel\" ],\n+          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\" ],\n         [ echo \"*** The test program failed to compile or link. See the file config.log for the\"\n-          echo \"*** exact error that occured. This usually means GTK was incorrectly installed\"\n-          echo \"*** or that you have moved GTK since it was installed. In the latter case, you\"\n-          echo \"*** may want to edit the gtk-config script: $GTK_CONFIG\" ])\n+          echo \"*** exact error that occured. This usually means GTK+ is incorrectly installed.\"])\n           CFLAGS=\"$ac_save_CFLAGS\"\n           LIBS=\"$ac_save_LIBS\"\n        fi\n@@ -630,62 +632,80 @@ main ()\n ])\n \n # Configure paths for GLIB\n-# Owen Taylor     97-11-3\n+# Owen Taylor     1997-2001\n \n-dnl AM_PATH_GLIB([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n-dnl Test for GLIB, and define GLIB_CFLAGS and GLIB_LIBS, if \"gmodule\" or \n-dnl gthread is specified in MODULES, pass to glib-config\n+dnl AM_PATH_GLIB_2_0([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n+dnl Test for GLIB, and define GLIB_CFLAGS and GLIB_LIBS, if gmodule, gobject or \n+dnl gthread is specified in MODULES, pass to pkg-config\n dnl\n-AC_DEFUN(AM_PATH_GLIB,\n+AC_DEFUN(AM_PATH_GLIB_2_0,\n [dnl \n-dnl Get the cflags and libraries from the glib-config script\n+dnl Get the cflags and libraries from pkg-config\n dnl\n-AC_ARG_WITH(glib-prefix,[  --with-glib-prefix=PFX   Prefix where GLIB is installed (optional)],\n-            glib_config_prefix=\"$withval\", glib_config_prefix=\"\")\n-AC_ARG_WITH(glib-exec-prefix,[  --with-glib-exec-prefix=PFX Exec prefix where GLIB is installed (optional)],\n-            glib_config_exec_prefix=\"$withval\", glib_config_exec_prefix=\"\")\n-AC_ARG_ENABLE(glibtest, [  --disable-glibtest       Do not try to compile and run a test GLIB program],\n+AC_ARG_ENABLE(glibtest, [  --disable-glibtest      do not try to compile and run a test GLIB program],\n \t\t    , enable_glibtest=yes)\n \n-  if test x$glib_config_exec_prefix != x ; then\n-     glib_config_args=\"$glib_config_args --exec-prefix=$glib_config_exec_prefix\"\n-     if test x${GLIB_CONFIG+set} != xset ; then\n-        GLIB_CONFIG=$glib_config_exec_prefix/bin/glib-config\n-     fi\n-  fi\n-  if test x$glib_config_prefix != x ; then\n-     glib_config_args=\"$glib_config_args --prefix=$glib_config_prefix\"\n-     if test x${GLIB_CONFIG+set} != xset ; then\n-        GLIB_CONFIG=$glib_config_prefix/bin/glib-config\n-     fi\n-  fi\n-\n+  pkg_config_args=glib-2.0\n   for module in . $4\n   do\n       case \"$module\" in\n          gmodule) \n-             glib_config_args=\"$glib_config_args gmodule\"\n+             pkg_config_args=\"$pkg_config_args gmodule-2.0\"\n+         ;;\n+         gobject) \n+             pkg_config_args=\"$pkg_config_args gobject-2.0\"\n          ;;\n          gthread) \n-             glib_config_args=\"$glib_config_args gthread\"\n+             pkg_config_args=\"$pkg_config_args gthread-2.0\"\n          ;;\n       esac\n   done\n \n-  AC_PATH_PROG(GLIB_CONFIG, glib-config, no)\n-  min_glib_version=ifelse([$1], ,0.99.7,$1)\n-  AC_MSG_CHECKING(for GLIB - version >= $min_glib_version)\n+  AC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n+\n   no_glib=\"\"\n-  if test \"$GLIB_CONFIG\" = \"no\" ; then\n-    no_glib=yes\n+\n+  if test x$PKG_CONFIG != xno ; then\n+    if $PKG_CONFIG --atleast-pkgconfig-version 0.7 ; then\n+      :\n+    else\n+      echo *** pkg-config too old; version 0.7 or better required.\n+      no_glib=yes\n+      PKG_CONFIG=no\n+    fi\n   else\n-    GLIB_CFLAGS=`$GLIB_CONFIG $glib_config_args --cflags`\n-    GLIB_LIBS=`$GLIB_CONFIG $glib_config_args --libs`\n-    glib_config_major_version=`$GLIB_CONFIG $glib_config_args --version | \\\n+    no_glib=yes\n+  fi\n+\n+  min_glib_version=ifelse([$1], ,2.0.0,$1)\n+  AC_MSG_CHECKING(for GLIB - version >= $min_glib_version)\n+\n+  if test x$PKG_CONFIG != xno ; then\n+    ## don't try to run the test against uninstalled libtool libs\n+    if $PKG_CONFIG --uninstalled $pkg_config_args; then\n+\t  echo \"Will use uninstalled version of GLib found in PKG_CONFIG_PATH\"\n+\t  enable_glibtest=no\n+    fi\n+\n+    if $PKG_CONFIG --atleast-version $min_glib_version $pkg_config_args; then\n+\t  :\n+    else\n+\t  no_glib=yes\n+    fi\n+  fi\n+\n+  if test x\"$no_glib\" = x ; then\n+    GLIB_GENMARSHAL=`$PKG_CONFIG --variable=glib_genmarshal glib-2.0`\n+    GOBJECT_QUERY=`$PKG_CONFIG --variable=gobject_query glib-2.0`\n+    GLIB_MKENUMS=`$PKG_CONFIG --variable=glib_mkenums glib-2.0`\n+\n+    GLIB_CFLAGS=`$PKG_CONFIG --cflags $pkg_config_args`\n+    GLIB_LIBS=`$PKG_CONFIG --libs $pkg_config_args`\n+    glib_config_major_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n-    glib_config_minor_version=`$GLIB_CONFIG $glib_config_args --version | \\\n+    glib_config_minor_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n-    glib_config_micro_version=`$GLIB_CONFIG $glib_config_args --version | \\\n+    glib_config_micro_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n     if test \"x$enable_glibtest\" = \"xyes\" ; then\n       ac_save_CFLAGS=\"$CFLAGS\"\n@@ -694,7 +714,7 @@ AC_ARG_ENABLE(glibtest, [  --disable-glibtest       Do not try to compile and ru\n       LIBS=\"$GLIB_LIBS $LIBS\"\n dnl\n dnl Now check if the installed GLIB is sufficiently new. (Also sanity\n-dnl checks the results of glib-config to some extent\n+dnl checks the results of pkg-config to some extent)\n dnl\n       rm -f conf.glibtest\n       AC_TRY_RUN([\n@@ -721,17 +741,16 @@ main ()\n       (glib_minor_version != $glib_config_minor_version) ||\n       (glib_micro_version != $glib_config_micro_version))\n     {\n-      printf(\"\\n*** 'glib-config --version' returned %d.%d.%d, but GLIB (%d.%d.%d)\\n\", \n+      printf(\"\\n*** 'pkg-config --modversion glib-2.0' returned %d.%d.%d, but GLIB (%d.%d.%d)\\n\", \n              $glib_config_major_version, $glib_config_minor_version, $glib_config_micro_version,\n              glib_major_version, glib_minor_version, glib_micro_version);\n-      printf (\"*** was found! If glib-config was correct, then it is best\\n\");\n-      printf (\"*** to remove the old version of GLIB. You may also be able to fix the error\\n\");\n+      printf (\"*** was found! If pkg-config was correct, then it is best\\n\");\n+      printf (\"*** to remove the old version of GLib. You may also be able to fix the error\\n\");\n       printf(\"*** by modifying your LD_LIBRARY_PATH enviroment variable, or by editing\\n\");\n       printf(\"*** /etc/ld.so.conf. Make sure you have run ldconfig if that is\\n\");\n       printf(\"*** required on your system.\\n\");\n-      printf(\"*** If glib-config was wrong, set the environment variable GLIB_CONFIG\\n\");\n-      printf(\"*** to point to the correct copy of glib-config, and remove the file config.cache\\n\");\n-      printf(\"*** before re-running configure\\n\");\n+      printf(\"*** If pkg-config was wrong, set the environment variable PKG_CONFIG_PATH\\n\");\n+      printf(\"*** to point to the correct configuration files\\n\");\n     } \n   else if ((glib_major_version != GLIB_MAJOR_VERSION) ||\n \t   (glib_minor_version != GLIB_MINOR_VERSION) ||\n@@ -759,10 +778,10 @@ main ()\n         printf(\"*** GLIB is always available from ftp://ftp.gtk.org.\\n\");\n         printf(\"***\\n\");\n         printf(\"*** If you have already installed a sufficiently new version, this error\\n\");\n-        printf(\"*** probably means that the wrong copy of the glib-config shell script is\\n\");\n+        printf(\"*** probably means that the wrong copy of the pkg-config shell script is\\n\");\n         printf(\"*** being found. The easiest way to fix this is to remove the old version\\n\");\n-        printf(\"*** of GLIB, but you can also set the GLIB_CONFIG environment to point to the\\n\");\n-        printf(\"*** correct copy of glib-config. (In this case, you will have to\\n\");\n+        printf(\"*** of GLIB, but you can also set the PKG_CONFIG environment to point to the\\n\");\n+        printf(\"*** correct copy of pkg-config. (In this case, you will have to\\n\");\n         printf(\"*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf\\n\");\n         printf(\"*** so that the correct libraries are found at run-time))\\n\");\n       }\n@@ -775,20 +794,20 @@ main ()\n      fi\n   fi\n   if test \"x$no_glib\" = x ; then\n-     AC_MSG_RESULT(yes)\n+     AC_MSG_RESULT(yes (version $glib_config_major_version.$glib_config_minor_version.$glib_config_micro_version))\n      ifelse([$2], , :, [$2])     \n   else\n      AC_MSG_RESULT(no)\n-     if test \"$GLIB_CONFIG\" = \"no\" ; then\n-       echo \"*** The glib-config script installed by GLIB could not be found\"\n-       echo \"*** If GLIB was installed in PREFIX, make sure PREFIX/bin is in\"\n-       echo \"*** your path, or set the GLIB_CONFIG environment variable to the\"\n-       echo \"*** full path to glib-config.\"\n+     if test \"$PKG_CONFIG\" = \"no\" ; then\n+       echo \"*** A new enough version of pkg-config was not found.\"\n+       echo \"*** See http://www.freedesktop.org/software/pkgconfig/\"\n      else\n        if test -f conf.glibtest ; then\n         :\n        else\n           echo \"*** Could not run GLIB test program, checking why...\"\n+          ac_save_CFLAGS=\"$CFLAGS\"\n+          ac_save_LIBS=\"$LIBS\"\n           CFLAGS=\"$CFLAGS $GLIB_CFLAGS\"\n           LIBS=\"$LIBS $GLIB_LIBS\"\n           AC_TRY_LINK([\n@@ -803,26 +822,25 @@ main ()\n           echo \"*** is required on your system\"\n \t  echo \"***\"\n           echo \"*** If you have an old version installed, it is best to remove it, although\"\n-          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\"\n-          echo \"***\"\n-          echo \"*** If you have a RedHat 5.0 system, you should remove the GTK package that\"\n-          echo \"*** came with the system with the command\"\n-          echo \"***\"\n-          echo \"***    rpm --erase --nodeps gtk gtk-devel\" ],\n+          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\" ],\n         [ echo \"*** The test program failed to compile or link. See the file config.log for the\"\n-          echo \"*** exact error that occured. This usually means GLIB was incorrectly installed\"\n-          echo \"*** or that you have moved GLIB since it was installed. In the latter case, you\"\n-          echo \"*** may want to edit the glib-config script: $GLIB_CONFIG\" ])\n+          echo \"*** exact error that occured. This usually means GLIB is incorrectly installed.\"])\n           CFLAGS=\"$ac_save_CFLAGS\"\n           LIBS=\"$ac_save_LIBS\"\n        fi\n      fi\n      GLIB_CFLAGS=\"\"\n      GLIB_LIBS=\"\"\n+     GLIB_GENMARSHAL=\"\"\n+     GOBJECT_QUERY=\"\"\n+     GLIB_MKENUMS=\"\"\n      ifelse([$3], , :, [$3])\n   fi\n   AC_SUBST(GLIB_CFLAGS)\n   AC_SUBST(GLIB_LIBS)\n+  AC_SUBST(GLIB_GENMARSHAL)\n+  AC_SUBST(GOBJECT_QUERY)\n+  AC_SUBST(GLIB_MKENUMS)\n   rm -f conf.glibtest\n ])\n "}, {"sha": "fa37b78b96a8df42cea4569ca8e99a8d6f38e806", "filename": "libjava/configure", "status": "modified", "additions": 499, "deletions": 525, "changes": 1024, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=29e531ff29f5677799bf45a62e85a442d9c492f6"}, {"sha": "f2ba05b5481bec8d2eff3636b4802a2ba73b8b40", "filename": "libjava/configure.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -785,8 +785,8 @@ else\n \n    # Test for Gtk stuff, if asked for.\n    if test \"$use_gtk_awt\" = yes; then\n-      AM_PATH_GTK(1.2.4,,exit 1)\n-      AM_PATH_GLIB(1.2.4,,exit 1,gthread)\n+      AM_PATH_GTK_2_0(2.0.0,,exit 1)\n+      AM_PATH_GLIB_2_0(2.0.0,,exit 1,gthread)\n       dnl XXX Fix me when libart.m4 has the compile test fixed!\n       enable_libarttest=no\n       AM_PATH_LIBART(2.1.0,,exit 1)"}, {"sha": "fa140875acd731bcd350bd141c2982944d974878", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -87,10 +87,11 @@ GCOBJS = @GCOBJS@\n GCSPEC = @GCSPEC@\n GCTESTSPEC = @GCTESTSPEC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n-GLIB_CONFIG = @GLIB_CONFIG@\n+GLIB_GENMARSHAL = @GLIB_GENMARSHAL@\n GLIB_LIBS = @GLIB_LIBS@\n+GLIB_MKENUMS = @GLIB_MKENUMS@\n+GOBJECT_QUERY = @GOBJECT_QUERY@\n GTK_CFLAGS = @GTK_CFLAGS@\n-GTK_CONFIG = @GTK_CONFIG@\n GTK_LIBS = @GTK_LIBS@\n HASH_SYNC_SPEC = @HASH_SYNC_SPEC@\n IEEESPEC = @IEEESPEC@\n@@ -117,6 +118,7 @@ OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PERL = @PERL@\n+PKG_CONFIG = @PKG_CONFIG@\n PLATFORMOBJS = @PLATFORMOBJS@\n RANLIB = @RANLIB@\n STRIP = @STRIP@"}, {"sha": "28ccef4a5f6a6f576169d10da3818117ef68040a", "filename": "libjava/glib-2.0.m4", "status": "renamed", "additions": 77, "deletions": 61, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fglib-2.0.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fglib-2.0.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fglib-2.0.m4?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -1,60 +1,78 @@\n # Configure paths for GLIB\n-# Owen Taylor     97-11-3\n+# Owen Taylor     1997-2001\n \n-dnl AM_PATH_GLIB([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n-dnl Test for GLIB, and define GLIB_CFLAGS and GLIB_LIBS, if \"gmodule\" or \n-dnl gthread is specified in MODULES, pass to glib-config\n+dnl AM_PATH_GLIB_2_0([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n+dnl Test for GLIB, and define GLIB_CFLAGS and GLIB_LIBS, if gmodule, gobject or \n+dnl gthread is specified in MODULES, pass to pkg-config\n dnl\n-AC_DEFUN(AM_PATH_GLIB,\n+AC_DEFUN(AM_PATH_GLIB_2_0,\n [dnl \n-dnl Get the cflags and libraries from the glib-config script\n+dnl Get the cflags and libraries from pkg-config\n dnl\n-AC_ARG_WITH(glib-prefix,[  --with-glib-prefix=PFX   Prefix where GLIB is installed (optional)],\n-            glib_config_prefix=\"$withval\", glib_config_prefix=\"\")\n-AC_ARG_WITH(glib-exec-prefix,[  --with-glib-exec-prefix=PFX Exec prefix where GLIB is installed (optional)],\n-            glib_config_exec_prefix=\"$withval\", glib_config_exec_prefix=\"\")\n-AC_ARG_ENABLE(glibtest, [  --disable-glibtest       Do not try to compile and run a test GLIB program],\n+AC_ARG_ENABLE(glibtest, [  --disable-glibtest      do not try to compile and run a test GLIB program],\n \t\t    , enable_glibtest=yes)\n \n-  if test x$glib_config_exec_prefix != x ; then\n-     glib_config_args=\"$glib_config_args --exec-prefix=$glib_config_exec_prefix\"\n-     if test x${GLIB_CONFIG+set} != xset ; then\n-        GLIB_CONFIG=$glib_config_exec_prefix/bin/glib-config\n-     fi\n-  fi\n-  if test x$glib_config_prefix != x ; then\n-     glib_config_args=\"$glib_config_args --prefix=$glib_config_prefix\"\n-     if test x${GLIB_CONFIG+set} != xset ; then\n-        GLIB_CONFIG=$glib_config_prefix/bin/glib-config\n-     fi\n-  fi\n-\n+  pkg_config_args=glib-2.0\n   for module in . $4\n   do\n       case \"$module\" in\n          gmodule) \n-             glib_config_args=\"$glib_config_args gmodule\"\n+             pkg_config_args=\"$pkg_config_args gmodule-2.0\"\n+         ;;\n+         gobject) \n+             pkg_config_args=\"$pkg_config_args gobject-2.0\"\n          ;;\n          gthread) \n-             glib_config_args=\"$glib_config_args gthread\"\n+             pkg_config_args=\"$pkg_config_args gthread-2.0\"\n          ;;\n       esac\n   done\n \n-  AC_PATH_PROG(GLIB_CONFIG, glib-config, no)\n-  min_glib_version=ifelse([$1], ,0.99.7,$1)\n-  AC_MSG_CHECKING(for GLIB - version >= $min_glib_version)\n+  AC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n+\n   no_glib=\"\"\n-  if test \"$GLIB_CONFIG\" = \"no\" ; then\n-    no_glib=yes\n+\n+  if test x$PKG_CONFIG != xno ; then\n+    if $PKG_CONFIG --atleast-pkgconfig-version 0.7 ; then\n+      :\n+    else\n+      echo *** pkg-config too old; version 0.7 or better required.\n+      no_glib=yes\n+      PKG_CONFIG=no\n+    fi\n   else\n-    GLIB_CFLAGS=`$GLIB_CONFIG $glib_config_args --cflags`\n-    GLIB_LIBS=`$GLIB_CONFIG $glib_config_args --libs`\n-    glib_config_major_version=`$GLIB_CONFIG $glib_config_args --version | \\\n+    no_glib=yes\n+  fi\n+\n+  min_glib_version=ifelse([$1], ,2.0.0,$1)\n+  AC_MSG_CHECKING(for GLIB - version >= $min_glib_version)\n+\n+  if test x$PKG_CONFIG != xno ; then\n+    ## don't try to run the test against uninstalled libtool libs\n+    if $PKG_CONFIG --uninstalled $pkg_config_args; then\n+\t  echo \"Will use uninstalled version of GLib found in PKG_CONFIG_PATH\"\n+\t  enable_glibtest=no\n+    fi\n+\n+    if $PKG_CONFIG --atleast-version $min_glib_version $pkg_config_args; then\n+\t  :\n+    else\n+\t  no_glib=yes\n+    fi\n+  fi\n+\n+  if test x\"$no_glib\" = x ; then\n+    GLIB_GENMARSHAL=`$PKG_CONFIG --variable=glib_genmarshal glib-2.0`\n+    GOBJECT_QUERY=`$PKG_CONFIG --variable=gobject_query glib-2.0`\n+    GLIB_MKENUMS=`$PKG_CONFIG --variable=glib_mkenums glib-2.0`\n+\n+    GLIB_CFLAGS=`$PKG_CONFIG --cflags $pkg_config_args`\n+    GLIB_LIBS=`$PKG_CONFIG --libs $pkg_config_args`\n+    glib_config_major_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n-    glib_config_minor_version=`$GLIB_CONFIG $glib_config_args --version | \\\n+    glib_config_minor_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n-    glib_config_micro_version=`$GLIB_CONFIG $glib_config_args --version | \\\n+    glib_config_micro_version=`$PKG_CONFIG --modversion glib-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n     if test \"x$enable_glibtest\" = \"xyes\" ; then\n       ac_save_CFLAGS=\"$CFLAGS\"\n@@ -63,7 +81,7 @@ AC_ARG_ENABLE(glibtest, [  --disable-glibtest       Do not try to compile and ru\n       LIBS=\"$GLIB_LIBS $LIBS\"\n dnl\n dnl Now check if the installed GLIB is sufficiently new. (Also sanity\n-dnl checks the results of glib-config to some extent\n+dnl checks the results of pkg-config to some extent)\n dnl\n       rm -f conf.glibtest\n       AC_TRY_RUN([\n@@ -90,17 +108,16 @@ main ()\n       (glib_minor_version != $glib_config_minor_version) ||\n       (glib_micro_version != $glib_config_micro_version))\n     {\n-      printf(\"\\n*** 'glib-config --version' returned %d.%d.%d, but GLIB (%d.%d.%d)\\n\", \n+      printf(\"\\n*** 'pkg-config --modversion glib-2.0' returned %d.%d.%d, but GLIB (%d.%d.%d)\\n\", \n              $glib_config_major_version, $glib_config_minor_version, $glib_config_micro_version,\n              glib_major_version, glib_minor_version, glib_micro_version);\n-      printf (\"*** was found! If glib-config was correct, then it is best\\n\");\n-      printf (\"*** to remove the old version of GLIB. You may also be able to fix the error\\n\");\n+      printf (\"*** was found! If pkg-config was correct, then it is best\\n\");\n+      printf (\"*** to remove the old version of GLib. You may also be able to fix the error\\n\");\n       printf(\"*** by modifying your LD_LIBRARY_PATH enviroment variable, or by editing\\n\");\n       printf(\"*** /etc/ld.so.conf. Make sure you have run ldconfig if that is\\n\");\n       printf(\"*** required on your system.\\n\");\n-      printf(\"*** If glib-config was wrong, set the environment variable GLIB_CONFIG\\n\");\n-      printf(\"*** to point to the correct copy of glib-config, and remove the file config.cache\\n\");\n-      printf(\"*** before re-running configure\\n\");\n+      printf(\"*** If pkg-config was wrong, set the environment variable PKG_CONFIG_PATH\\n\");\n+      printf(\"*** to point to the correct configuration files\\n\");\n     } \n   else if ((glib_major_version != GLIB_MAJOR_VERSION) ||\n \t   (glib_minor_version != GLIB_MINOR_VERSION) ||\n@@ -128,10 +145,10 @@ main ()\n         printf(\"*** GLIB is always available from ftp://ftp.gtk.org.\\n\");\n         printf(\"***\\n\");\n         printf(\"*** If you have already installed a sufficiently new version, this error\\n\");\n-        printf(\"*** probably means that the wrong copy of the glib-config shell script is\\n\");\n+        printf(\"*** probably means that the wrong copy of the pkg-config shell script is\\n\");\n         printf(\"*** being found. The easiest way to fix this is to remove the old version\\n\");\n-        printf(\"*** of GLIB, but you can also set the GLIB_CONFIG environment to point to the\\n\");\n-        printf(\"*** correct copy of glib-config. (In this case, you will have to\\n\");\n+        printf(\"*** of GLIB, but you can also set the PKG_CONFIG environment to point to the\\n\");\n+        printf(\"*** correct copy of pkg-config. (In this case, you will have to\\n\");\n         printf(\"*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf\\n\");\n         printf(\"*** so that the correct libraries are found at run-time))\\n\");\n       }\n@@ -144,20 +161,20 @@ main ()\n      fi\n   fi\n   if test \"x$no_glib\" = x ; then\n-     AC_MSG_RESULT(yes)\n+     AC_MSG_RESULT(yes (version $glib_config_major_version.$glib_config_minor_version.$glib_config_micro_version))\n      ifelse([$2], , :, [$2])     \n   else\n      AC_MSG_RESULT(no)\n-     if test \"$GLIB_CONFIG\" = \"no\" ; then\n-       echo \"*** The glib-config script installed by GLIB could not be found\"\n-       echo \"*** If GLIB was installed in PREFIX, make sure PREFIX/bin is in\"\n-       echo \"*** your path, or set the GLIB_CONFIG environment variable to the\"\n-       echo \"*** full path to glib-config.\"\n+     if test \"$PKG_CONFIG\" = \"no\" ; then\n+       echo \"*** A new enough version of pkg-config was not found.\"\n+       echo \"*** See http://www.freedesktop.org/software/pkgconfig/\"\n      else\n        if test -f conf.glibtest ; then\n         :\n        else\n           echo \"*** Could not run GLIB test program, checking why...\"\n+          ac_save_CFLAGS=\"$CFLAGS\"\n+          ac_save_LIBS=\"$LIBS\"\n           CFLAGS=\"$CFLAGS $GLIB_CFLAGS\"\n           LIBS=\"$LIBS $GLIB_LIBS\"\n           AC_TRY_LINK([\n@@ -172,25 +189,24 @@ main ()\n           echo \"*** is required on your system\"\n \t  echo \"***\"\n           echo \"*** If you have an old version installed, it is best to remove it, although\"\n-          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\"\n-          echo \"***\"\n-          echo \"*** If you have a RedHat 5.0 system, you should remove the GTK package that\"\n-          echo \"*** came with the system with the command\"\n-          echo \"***\"\n-          echo \"***    rpm --erase --nodeps gtk gtk-devel\" ],\n+          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\" ],\n         [ echo \"*** The test program failed to compile or link. See the file config.log for the\"\n-          echo \"*** exact error that occured. This usually means GLIB was incorrectly installed\"\n-          echo \"*** or that you have moved GLIB since it was installed. In the latter case, you\"\n-          echo \"*** may want to edit the glib-config script: $GLIB_CONFIG\" ])\n+          echo \"*** exact error that occured. This usually means GLIB is incorrectly installed.\"])\n           CFLAGS=\"$ac_save_CFLAGS\"\n           LIBS=\"$ac_save_LIBS\"\n        fi\n      fi\n      GLIB_CFLAGS=\"\"\n      GLIB_LIBS=\"\"\n+     GLIB_GENMARSHAL=\"\"\n+     GOBJECT_QUERY=\"\"\n+     GLIB_MKENUMS=\"\"\n      ifelse([$3], , :, [$3])\n   fi\n   AC_SUBST(GLIB_CFLAGS)\n   AC_SUBST(GLIB_LIBS)\n+  AC_SUBST(GLIB_GENMARSHAL)\n+  AC_SUBST(GOBJECT_QUERY)\n+  AC_SUBST(GLIB_MKENUMS)\n   rm -f conf.glibtest\n ])", "previous_filename": "libjava/glib.m4"}, {"sha": "a0c53ac11ff140c003d32c23b789b1719fa0f128", "filename": "libjava/gtk-2.0.m4", "status": "renamed", "additions": 65, "deletions": 63, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fgtk-2.0.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fgtk-2.0.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgtk-2.0.m4?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -1,65 +1,77 @@\n # Configure paths for GTK+\n-# Owen Taylor     97-11-3\n+# Owen Taylor     1997-2001\n \n-dnl AM_PATH_GTK([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n-dnl Test for GTK, and define GTK_CFLAGS and GTK_LIBS\n+dnl AM_PATH_GTK_2_0([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])\n+dnl Test for GTK+, and define GTK_CFLAGS and GTK_LIBS, if gthread is specified in MODULES, \n+dnl pass to pkg-config\n dnl\n-AC_DEFUN(AM_PATH_GTK,\n+AC_DEFUN(AM_PATH_GTK_2_0,\n [dnl \n-dnl Get the cflags and libraries from the gtk-config script\n+dnl Get the cflags and libraries from pkg-config\n dnl\n-AC_ARG_WITH(gtk-prefix,[  --with-gtk-prefix=PFX   Prefix where GTK is installed (optional)],\n-            gtk_config_prefix=\"$withval\", gtk_config_prefix=\"\")\n-AC_ARG_WITH(gtk-exec-prefix,[  --with-gtk-exec-prefix=PFX Exec prefix where GTK is installed (optional)],\n-            gtk_config_exec_prefix=\"$withval\", gtk_config_exec_prefix=\"\")\n-AC_ARG_ENABLE(gtktest, [  --disable-gtktest       Do not try to compile and run a test GTK program],\n+AC_ARG_ENABLE(gtktest, [  --disable-gtktest       do not try to compile and run a test GTK+ program],\n \t\t    , enable_gtktest=yes)\n \n+  pkg_config_args=gtk+-2.0\n   for module in . $4\n   do\n       case \"$module\" in\n          gthread) \n-             gtk_config_args=\"$gtk_config_args gthread\"\n+             pkg_config_args=\"$pkg_config_args gthread-2.0\"\n          ;;\n       esac\n   done\n \n-  if test x$gtk_config_exec_prefix != x ; then\n-     gtk_config_args=\"$gtk_config_args --exec-prefix=$gtk_config_exec_prefix\"\n-     if test x${GTK_CONFIG+set} != xset ; then\n-        GTK_CONFIG=$gtk_config_exec_prefix/bin/gtk-config\n-     fi\n+  no_gtk=\"\"\n+\n+  AC_PATH_PROG(PKG_CONFIG, pkg-config, no)\n+\n+  if test x$PKG_CONFIG != xno ; then\n+    if pkg-config --atleast-pkgconfig-version 0.7 ; then\n+      :\n+    else\n+      echo *** pkg-config too old; version 0.7 or better required.\n+      no_gtk=yes\n+      PKG_CONFIG=no\n+    fi\n+  else\n+    no_gtk=yes\n   fi\n-  if test x$gtk_config_prefix != x ; then\n-     gtk_config_args=\"$gtk_config_args --prefix=$gtk_config_prefix\"\n-     if test x${GTK_CONFIG+set} != xset ; then\n-        GTK_CONFIG=$gtk_config_prefix/bin/gtk-config\n-     fi\n+\n+  min_gtk_version=ifelse([$1], ,2.0.0,$1)\n+  AC_MSG_CHECKING(for GTK+ - version >= $min_gtk_version)\n+\n+  if test x$PKG_CONFIG != xno ; then\n+    ## don't try to run the test against uninstalled libtool libs\n+    if $PKG_CONFIG --uninstalled $pkg_config_args; then\n+\t  echo \"Will use uninstalled version of GTK+ found in PKG_CONFIG_PATH\"\n+\t  enable_gtktest=no\n+    fi\n+\n+    if $PKG_CONFIG --atleast-version $min_gtk_version $pkg_config_args; then\n+\t  :\n+    else\n+\t  no_gtk=yes\n+    fi\n   fi\n \n-  AC_PATH_PROG(GTK_CONFIG, gtk-config, no)\n-  min_gtk_version=ifelse([$1], ,0.99.7,$1)\n-  AC_MSG_CHECKING(for GTK - version >= $min_gtk_version)\n-  no_gtk=\"\"\n-  if test \"$GTK_CONFIG\" = \"no\" ; then\n-    no_gtk=yes\n-  else\n-    GTK_CFLAGS=`$GTK_CONFIG $gtk_config_args --cflags`\n-    GTK_LIBS=`$GTK_CONFIG $gtk_config_args --libs`\n-    gtk_config_major_version=`$GTK_CONFIG $gtk_config_args --version | \\\n+  if test x\"$no_gtk\" = x ; then\n+    GTK_CFLAGS=`$PKG_CONFIG $pkg_config_args --cflags`\n+    GTK_LIBS=`$PKG_CONFIG $pkg_config_args --libs`\n+    gtk_config_major_version=`$PKG_CONFIG --modversion gtk+-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\1/'`\n-    gtk_config_minor_version=`$GTK_CONFIG $gtk_config_args --version | \\\n+    gtk_config_minor_version=`$PKG_CONFIG --modversion gtk+-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\2/'`\n-    gtk_config_micro_version=`$GTK_CONFIG $gtk_config_args --version | \\\n+    gtk_config_micro_version=`$PKG_CONFIG --modversion gtk+-2.0 | \\\n            sed 's/\\([[0-9]]*\\).\\([[0-9]]*\\).\\([[0-9]]*\\)/\\3/'`\n     if test \"x$enable_gtktest\" = \"xyes\" ; then\n       ac_save_CFLAGS=\"$CFLAGS\"\n       ac_save_LIBS=\"$LIBS\"\n       CFLAGS=\"$CFLAGS $GTK_CFLAGS\"\n       LIBS=\"$GTK_LIBS $LIBS\"\n dnl\n-dnl Now check if the installed GTK is sufficiently new. (Also sanity\n-dnl checks the results of gtk-config to some extent\n+dnl Now check if the installed GTK+ is sufficiently new. (Also sanity\n+dnl checks the results of pkg-config to some extent)\n dnl\n       rm -f conf.gtktest\n       AC_TRY_RUN([\n@@ -86,19 +98,17 @@ main ()\n       (gtk_minor_version != $gtk_config_minor_version) ||\n       (gtk_micro_version != $gtk_config_micro_version))\n     {\n-      printf(\"\\n*** 'gtk-config --version' returned %d.%d.%d, but GTK+ (%d.%d.%d)\\n\", \n+      printf(\"\\n*** 'pkg-config --modversion gtk+-2.0' returned %d.%d.%d, but GTK+ (%d.%d.%d)\\n\", \n              $gtk_config_major_version, $gtk_config_minor_version, $gtk_config_micro_version,\n              gtk_major_version, gtk_minor_version, gtk_micro_version);\n-      printf (\"*** was found! If gtk-config was correct, then it is best\\n\");\n+      printf (\"*** was found! If pkg-config was correct, then it is best\\n\");\n       printf (\"*** to remove the old version of GTK+. You may also be able to fix the error\\n\");\n       printf(\"*** by modifying your LD_LIBRARY_PATH enviroment variable, or by editing\\n\");\n       printf(\"*** /etc/ld.so.conf. Make sure you have run ldconfig if that is\\n\");\n       printf(\"*** required on your system.\\n\");\n-      printf(\"*** If gtk-config was wrong, set the environment variable GTK_CONFIG\\n\");\n-      printf(\"*** to point to the correct copy of gtk-config, and remove the file config.cache\\n\");\n-      printf(\"*** before re-running configure\\n\");\n+      printf(\"*** If pkg-config was wrong, set the environment variable PKG_CONFIG_PATH\\n\");\n+      printf(\"*** to point to the correct configuration files\\n\");\n     } \n-#if defined (GTK_MAJOR_VERSION) && defined (GTK_MINOR_VERSION) && defined (GTK_MICRO_VERSION)\n   else if ((gtk_major_version != GTK_MAJOR_VERSION) ||\n \t   (gtk_minor_version != GTK_MINOR_VERSION) ||\n            (gtk_micro_version != GTK_MICRO_VERSION))\n@@ -108,7 +118,6 @@ main ()\n       printf(\"*** library (version %d.%d.%d)\\n\",\n \t     gtk_major_version, gtk_minor_version, gtk_micro_version);\n     }\n-#endif /* defined (GTK_MAJOR_VERSION) ... */\n   else\n     {\n       if ((gtk_major_version > major) ||\n@@ -126,10 +135,10 @@ main ()\n         printf(\"*** GTK+ is always available from ftp://ftp.gtk.org.\\n\");\n         printf(\"***\\n\");\n         printf(\"*** If you have already installed a sufficiently new version, this error\\n\");\n-        printf(\"*** probably means that the wrong copy of the gtk-config shell script is\\n\");\n+        printf(\"*** probably means that the wrong copy of the pkg-config shell script is\\n\");\n         printf(\"*** being found. The easiest way to fix this is to remove the old version\\n\");\n-        printf(\"*** of GTK+, but you can also set the GTK_CONFIG environment to point to the\\n\");\n-        printf(\"*** correct copy of gtk-config. (In this case, you will have to\\n\");\n+        printf(\"*** of GTK+, but you can also set the PKG_CONFIG environment to point to the\\n\");\n+        printf(\"*** correct copy of pkg-config. (In this case, you will have to\\n\");\n         printf(\"*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf\\n\");\n         printf(\"*** so that the correct libraries are found at run-time))\\n\");\n       }\n@@ -142,44 +151,37 @@ main ()\n      fi\n   fi\n   if test \"x$no_gtk\" = x ; then\n-     AC_MSG_RESULT(yes)\n+     AC_MSG_RESULT(yes (version $gtk_config_major_version.$gtk_config_minor_version.$gtk_config_micro_version))\n      ifelse([$2], , :, [$2])     \n   else\n      AC_MSG_RESULT(no)\n-     if test \"$GTK_CONFIG\" = \"no\" ; then\n-       echo \"*** The gtk-config script installed by GTK could not be found\"\n-       echo \"*** If GTK was installed in PREFIX, make sure PREFIX/bin is in\"\n-       echo \"*** your path, or set the GTK_CONFIG environment variable to the\"\n-       echo \"*** full path to gtk-config.\"\n+     if test \"$PKG_CONFIG\" = \"no\" ; then\n+       echo \"*** A new enough version of pkg-config was not found.\"\n+       echo \"*** See http://pkgconfig.sourceforge.net\"\n      else\n        if test -f conf.gtktest ; then\n         :\n        else\n-          echo \"*** Could not run GTK test program, checking why...\"\n+          echo \"*** Could not run GTK+ test program, checking why...\"\n+\t  ac_save_CFLAGS=\"$CFLAGS\"\n+\t  ac_save_LIBS=\"$LIBS\"\n           CFLAGS=\"$CFLAGS $GTK_CFLAGS\"\n           LIBS=\"$LIBS $GTK_LIBS\"\n           AC_TRY_LINK([\n #include <gtk/gtk.h>\n #include <stdio.h>\n ],      [ return ((gtk_major_version) || (gtk_minor_version) || (gtk_micro_version)); ],\n         [ echo \"*** The test program compiled, but did not run. This usually means\"\n-          echo \"*** that the run-time linker is not finding GTK or finding the wrong\"\n-          echo \"*** version of GTK. If it is not finding GTK, you'll need to set your\"\n+          echo \"*** that the run-time linker is not finding GTK+ or finding the wrong\"\n+          echo \"*** version of GTK+. If it is not finding GTK+, you'll need to set your\"\n           echo \"*** LD_LIBRARY_PATH environment variable, or edit /etc/ld.so.conf to point\"\n           echo \"*** to the installed location  Also, make sure you have run ldconfig if that\"\n           echo \"*** is required on your system\"\n \t  echo \"***\"\n           echo \"*** If you have an old version installed, it is best to remove it, although\"\n-          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\"\n-          echo \"***\"\n-          echo \"*** If you have a RedHat 5.0 system, you should remove the GTK package that\"\n-          echo \"*** came with the system with the command\"\n-          echo \"***\"\n-          echo \"***    rpm --erase --nodeps gtk gtk-devel\" ],\n+          echo \"*** you may also be able to get things to work by modifying LD_LIBRARY_PATH\" ],\n         [ echo \"*** The test program failed to compile or link. See the file config.log for the\"\n-          echo \"*** exact error that occured. This usually means GTK was incorrectly installed\"\n-          echo \"*** or that you have moved GTK since it was installed. In the latter case, you\"\n-          echo \"*** may want to edit the gtk-config script: $GTK_CONFIG\" ])\n+          echo \"*** exact error that occured. This usually means GTK+ is incorrectly installed.\"])\n           CFLAGS=\"$ac_save_CFLAGS\"\n           LIBS=\"$ac_save_LIBS\"\n        fi", "previous_filename": "libjava/gtk.m4"}, {"sha": "1a38831cb1907df7b8375e11d5805cffe27647c3", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -87,10 +87,11 @@ GCOBJS = @GCOBJS@\n GCSPEC = @GCSPEC@\n GCTESTSPEC = @GCTESTSPEC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n-GLIB_CONFIG = @GLIB_CONFIG@\n+GLIB_GENMARSHAL = @GLIB_GENMARSHAL@\n GLIB_LIBS = @GLIB_LIBS@\n+GLIB_MKENUMS = @GLIB_MKENUMS@\n+GOBJECT_QUERY = @GOBJECT_QUERY@\n GTK_CFLAGS = @GTK_CFLAGS@\n-GTK_CONFIG = @GTK_CONFIG@\n GTK_LIBS = @GTK_LIBS@\n HASH_SYNC_SPEC = @HASH_SYNC_SPEC@\n IEEESPEC = @IEEESPEC@\n@@ -117,6 +118,7 @@ OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PERL = @PERL@\n+PKG_CONFIG = @PKG_CONFIG@\n PLATFORMOBJS = @PLATFORMOBJS@\n RANLIB = @RANLIB@\n STRIP = @STRIP@"}, {"sha": "2c574942b2111c459a839e0afa7b156e2535a724", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GdkGraphics.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -1,5 +1,5 @@\n /* gdkgraphics.c\n-   Copyright (C) 1999, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -40,7 +40,7 @@ exception statement from your version. */\n #include <gdk/gdkprivate.h>\n #include <gdk/gdkx.h>\n \n-#define GDK_STABLE_IS_PIXMAP(d) (((GdkWindowPrivate *)d)->window_type == GDK_WINDOW_PIXMAP)\n+#define GDK_STABLE_IS_PIXMAP(d) (GDK_IS_PIXMAP(d))\n \n GdkPoint *\n translate_points (JNIEnv *env, jintArray xpoints, jintArray ypoints, "}, {"sha": "e87a9c4d7f08da34c524e62175f6f1d3902862e7", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.c", "status": "modified", "additions": 23, "deletions": 27, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -42,47 +42,43 @@ exception statement from your version. */\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkButtonPeer_create\n   (JNIEnv *env, jobject obj)\n {\n-  gpointer widget;\n+  GtkButton *button;\n \n   gdk_threads_enter ();\n-  widget = gtk_type_new (gtk_button_get_type ());\n+  button = gtk_button_new();\n+  gtk_widget_show (GTK_WIDGET(button));\n   gdk_threads_leave ();\n-\n-  NSA_SET_PTR (env, obj, widget);\n+  NSA_SET_PTR (env, obj, button);\n }\n \n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkButtonPeer_gtkSetFont\n   (JNIEnv *env, jobject obj, jstring jname, jint size)\n {\n-  const char *xlfd;\n-# define FBUFSZ 200\n-  char buf[FBUFSZ];\n+  const char *font_name;\n   void *ptr;\n-  GdkFont * new_font;\n-  GtkStyle * style;\n-  GtkWidget * button;\n-  GtkWidget * label;\n+  GtkWidget *button;\n+  GtkWidget *label;\n+  PangoFontDescription *font_desc;\n \n   ptr = NSA_GET_PTR (env, obj);\n+\n   button = GTK_WIDGET (ptr);\n-  label = GTK_BIN(button)->child;\n+  label = gtk_bin_get_child (GTK_BIN(button));\n   \n-  if (label == NULL) return;\n-  xlfd = (*env)->GetStringUTFChars (env, jname, NULL);\n-  snprintf(buf, FBUFSZ, xlfd, size);\n-  (*env)->ReleaseStringUTFChars (env, jname, xlfd);\n-  gdk_threads_enter();\n-  new_font = gdk_font_load (buf);  /* FIXME: deprecated. Replacement?\t*/\n-  if (new_font == NULL)\n-    {\n-      /* Fail quietly for now. */\n-      gdk_threads_leave();\n+  if (!label)\n       return;\n-    }\n-  style = gtk_style_copy (gtk_widget_get_style (label));\n-  style -> font = new_font;\n-  gtk_widget_set_style (label, style);\n-  /* FIXME: Documentation varies as to whether we should unref style. */\n+\n+  font_name = (*env)->GetStringUTFChars (env, jname, NULL);\n+\n+  gdk_threads_enter();\n+\n+  font_desc = pango_font_description_from_string (font_name);\n+  pango_font_description_set_size (font_desc, size);\n+  gtk_widget_modify_font (GTK_WIDGET(label), font_desc);\n+  pango_font_description_free (font_desc);\n+\n   gdk_threads_leave();\n+\n+  (*env)->ReleaseStringUTFChars (env, jname, font_name);\n }"}, {"sha": "6d3e06b0c4baf8160005b948e424ace5c1c370e2", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -40,22 +40,6 @@ exception statement from your version. */\n #include \"gnu_java_awt_peer_gtk_GtkComponentPeer.h\"\n #include <gtk/gtkprivate.h>\n \n-#define GTK_OBJECT_SETV(ptr, arg)                \\\n-  gdk_threads_enter ();                          \\\n-  {                                              \\\n-    GtkArgInfo *info = NULL;                     \\\n-    char *error;                                 \\\n-                                                 \\\n-    error = gtk_object_arg_get_info (GTK_OBJECT_TYPE (ptr), arg.name, &info); \\\n-    if (error)                                   \\\n-      {                                          \\\n-\t/* assume the argument is destined for the container's only child */ \\\n-\tptr = gtk_container_children (GTK_CONTAINER (ptr))->data;            \\\n-      }                                          \\\n-    gtk_object_setv (GTK_OBJECT (ptr), 1, &arg); \\\n-  }                                              \\\n-  gdk_threads_leave ();                          \\\n-\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkGenericPeer_dispose\n   (JNIEnv *env, jobject obj)\n {\n@@ -519,8 +503,9 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_set__Ljava_lang_String_2Ljava_lang_S\n   arg.type = GTK_TYPE_STRING;\n   arg.name = (char *) name;\n   GTK_VALUE_STRING (arg) = (char *) value;\n-\n-  GTK_OBJECT_SETV (ptr, arg);  \n+  gdk_threads_enter();                          \n+  g_object_set(ptr, name, value, NULL);\n+  gdk_threads_leave();\n \n   (*env)->ReleaseStringUTFChars (env, jname, name);\n   (*env)->ReleaseStringUTFChars (env, jvalue, value);\n@@ -540,7 +525,9 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_set__Ljava_la\n   arg.name = (char *) name;\n   GTK_VALUE_BOOL (arg) = value;\n \n-  GTK_OBJECT_SETV (ptr, arg);  \n+  gdk_threads_enter();                          \n+  g_object_set(ptr, name, value, NULL);\n+  gdk_threads_leave();\n \n   (*env)->ReleaseStringUTFChars (env, jname, name);\n }\n@@ -559,7 +546,9 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_set__Ljava_la\n   arg.name = (char *) name;\n   GTK_VALUE_INT (arg) = value;\n   \n-  GTK_OBJECT_SETV (ptr, arg);  \n+  gdk_threads_enter();                          \n+  g_object_set(ptr, name, value, NULL);\n+  gdk_threads_leave();\n \n   (*env)->ReleaseStringUTFChars (env, jname, name);\n }\n@@ -578,7 +567,9 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_set__Ljava_la\n   arg.name = (char *) name;\n   GTK_VALUE_FLOAT (arg) = value;\n   \n-  GTK_OBJECT_SETV (ptr, arg);  \n+  gdk_threads_enter();                          \n+  g_object_set(ptr, name, value, NULL);\n+  gdk_threads_leave();\n \n   (*env)->ReleaseStringUTFChars (env, jname, name);\n }\n@@ -611,7 +602,9 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_set__Ljava_lang_String_2Ljava_lang_O\n   arg.name = (char *) name;\n   GTK_VALUE_OBJECT (arg) = GTK_OBJECT (ptr2);\n   \n-  GTK_OBJECT_SETV (ptr1, arg);  \n+  gdk_threads_enter();                          \n+  g_object_set(ptr1, name, ptr2, NULL);\n+  gdk_threads_leave();\n \n   (*env)->ReleaseStringUTFChars (env, jname, name);\n }\n@@ -644,6 +637,15 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_connectHooks\n \n   gdk_threads_enter ();\n   gtk_widget_realize (GTK_WIDGET (ptr));\n+  if(GTK_IS_BUTTON(ptr))\n+    {\n+      g_print(\"-- connecting a button --\\n\");\n+      connect_awt_hook (env, obj, 1, GTK_BUTTON(ptr)->event_window);\n+    }\n+  else\n+    {\n   connect_awt_hook (env, obj, 1, GTK_WIDGET (ptr)->window);\n+      g_print(\"Connection object %p with window %p (but ptr is %p)\\n\", obj, GTK_WIDGET(ptr)->window, ptr);\n+    }\n   gdk_threads_leave ();\n }"}, {"sha": "2573a1823c3374dc8b99662605cc4987e40f1731", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -526,6 +526,7 @@ attach_jobject (GdkWindow *window, jobject *obj)\n \t\t\t | GDK_KEY_PRESS_MASK\n \t\t\t | GDK_FOCUS_CHANGE_MASK);\n \n+  //  g_print(\"storing obj %p property on window %p\\n\", obj, window);\n   gdk_property_change (window,\n \t\t       addr_atom,\n \t\t       type_atom,\n@@ -538,15 +539,22 @@ attach_jobject (GdkWindow *window, jobject *obj)\n void\n connect_awt_hook (JNIEnv *env, jobject peer_obj, int nwindows, ...)\n {\n-  int i;\n   va_list ap;\n   jobject *obj;\n \n   obj = (jobject *) malloc (sizeof (jobject));\n   *obj = (*env)->NewGlobalRef (env, peer_obj);\n+  //g_print(\"Connection obj %p\\n\", peer_obj);\n \n   va_start (ap, nwindows);\n+  {\n+  int i;\n   for (i = 0; i < nwindows; i++)\n-    attach_jobject (va_arg (ap, GdkWindow *), obj);\n+    {\n+      GdkWindow* attach = (va_arg (ap, GdkWindow *));\n+      //g_print(\"attach peer obj %p and %p\\n\", peer_obj, attach);\n+      attach_jobject(attach, obj);\n+    }\n+  }\n   va_end (ap);\n }"}, {"sha": "bdf064ff8f39315453144a1b66e56beac8307ed8", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.c", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkListPeer.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -251,33 +251,9 @@ Java_gnu_java_awt_peer_gtk_GtkListPeer_getSize\n   list = GTK_WIDGET (CLIST_FROM_SW (ptr));\n   sw = GTK_SCROLLED_WINDOW (ptr);\n \n-  /*\n-  gtk_widget_size_request(GTK_WIDGET (GTK_SCROLLED_WINDOW(sw)->hscrollbar), \n-                                      &myreq);\n-  dims[1]=myreq.height+GTK_SCROLLED_WINDOW_CLASS \n-    (GTK_OBJECT (sw)->klass)->scrollbar_spacing;\n-  */\n-\n-  gtk_signal_emit_by_name (GTK_OBJECT (GTK_SCROLLED_WINDOW(sw)->vscrollbar), \n-\t\t\t   \"size_request\", &myreq);\n-  /*\n-\n-    gtk_widget_size_request(GTK_WIDGET (GTK_SCROLLED_WINDOW(sw)->vscrollbar), \n-                                      &myreq);\n-  */\n-\n-  dims[0]=myreq.width+GTK_SCROLLED_WINDOW_CLASS\n-    (GTK_OBJECT (sw)->klass)->scrollbar_spacing;\n-\n-  gtk_signal_emit_by_name (GTK_OBJECT (list), \"size_request\", &myreq);\n-  \n-  //  gtk_widget_size_request(GTK_WIDGET (list), &myreq);\n-                                      \n-  dims[0] += myreq.width + gdk_char_width (list->style->font, 'W');\n-             \n-  dims[1] += ((rows * (gdk_char_height (list->style->font, 'W')+7))\n-\t      + (2 * (list->style->klass->ythickness)));\n-\t\t \n+  gtk_widget_size_request(list, &myreq);\n+  dims[1]=myreq.height;\n+  dims[0]=myreq.width;\n   \n   gdk_threads_leave ();\n "}, {"sha": "cd4d7e2fe7b59a59d9e975fd57d75e0f32cd18b2", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -56,6 +56,10 @@ jmethodID postItemEventID;\n jmethodID postListItemEventID;\n JNIEnv *gdk_env;\n \n+#ifdef PORTABLE_NATIVE_SYNC\n+JavaVM *gdk_vm;\n+#endif\n+\n /*\n  * Call gtk_init.  It is very important that this happen before any other\n  * gtk calls.\n@@ -81,7 +85,16 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n \n   /* until we have JDK 1.2 JNI, assume we have a VM with threads that \n      match what GLIB was compiled for */\n-  g_thread_init (NULL);\n+#ifdef PORTABLE_NATIVE_SYNC\n+  (*env)->GetJavaVM( env, &gdk_vm );\n+  g_thread_init ( &g_thread_jni_functions );\n+  printf(\"called gthread init\\n\");\n+#else\n+  g_thread_init ( NULL );\n+#endif\n+\n+  /* From GDK 2.0 onwards we have to explicitly call gdk_threads_init */\n+  gdk_threads_init();\n \n   gtk_init (&argc, &argv);\n "}, {"sha": "a246b372904de2b560e33a05c7d81c7dbf82a97d", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollBarPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollBarPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkScrollBarPeer.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -46,11 +46,15 @@ struct range_scrollbar\n };\n \n static void \n-post_adjustment_event (GtkAdjustment *adj, struct range_scrollbar *rs)\n+post_adjustment_event (GtkRange *range, GtkScrollType scroll, \n+\t\t       struct range_scrollbar *rs)\n {\n   jint type;\n+  GtkAdjustment *adj;\n+\n+  adj = gtk_range_get_adjustment (range);\n \n-  switch (rs->range->scroll_type)\n+  switch (scroll)\n     {\n     case GTK_SCROLL_STEP_FORWARD:\n       type = AWT_ADJUSTMENT_UNIT_INCREMENT;\n@@ -113,15 +117,11 @@ Java_gnu_java_awt_peer_gtk_GtkScrollbarPeer_connectHooks\n   rs->range = GTK_RANGE (ptr);\n   rs->scrollbar = (jobject *) malloc (sizeof (jobject));\n   *(rs->scrollbar) = (*env)->NewGlobalRef (env, obj);\n-  gtk_signal_connect (GTK_OBJECT (GTK_RANGE (ptr)->adjustment), \n-\t\t      \"value_changed\", \n+  gtk_signal_connect (GTK_OBJECT (GTK_RANGE (ptr)), \n+\t\t      \"move_slider\", \n \t\t      GTK_SIGNAL_FUNC (post_adjustment_event), rs);\n \n-  connect_awt_hook (env, obj, 4, \n-\t\t    GTK_RANGE (ptr)->trough,\n-\t\t    GTK_RANGE (ptr)->slider,\n-\t\t    GTK_RANGE (ptr)->step_forw,\n-\t\t    GTK_RANGE (ptr)->step_back);\n+  connect_awt_hook (env, obj, 1, GTK_SCROLLBAR (ptr)->range);\n   gdk_threads_leave ();\n }\n "}, {"sha": "103ddd22a9ae82bbaa538c495ef33034f49009b9", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.c", "status": "modified", "additions": 47, "deletions": 106, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextAreaPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextAreaPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextAreaPeer.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -39,15 +39,15 @@ exception statement from your version. */\n #include \"gtkpeer.h\"\n #include \"gnu_java_awt_peer_gtk_GtkTextAreaPeer.h\"\n \n-#define TEXT_FROM_SW(obj) (GTK_TEXT(GTK_SCROLLED_WINDOW (obj)->container.child))\n+#define TEXT_FROM_SW(obj) (GTK_TEXT_VIEW(GTK_SCROLLED_WINDOW (obj)->container.child))\n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_create\n   (JNIEnv *env, jobject obj, jint scroll)\n {\n   GtkWidget *text, *sw;\n \n   gdk_threads_enter ();\n-  text = gtk_text_new (NULL, NULL);\n+  text = gtk_text_view_new ();\n   gtk_widget_show (text);\n \n   sw = gtk_scrolled_window_new (NULL, NULL);\n@@ -64,54 +64,9 @@ Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_create\n      (scroll == AWT_TEXTAREA_SCROLLBARS_BOTH\n       || scroll == AWT_TEXTAREA_SCROLLBARS_VERTICAL_ONLY) ? \n        GTK_POLICY_ALWAYS : GTK_POLICY_NEVER);\n-  gdk_threads_leave ();\n-\n-  NSA_SET_PTR (env, obj, sw);\n-}\n-\n-\n-JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_old_create\n-  (JNIEnv *env, jobject obj, jobject parent_obj, \n-   jstring contents, jint scroll)\n-{\n-  GtkWidget *text, *sw;\n-  const char *str;\n-  int pos=0;\n-  void *parent;\n-\n-  parent = NSA_GET_PTR (env, parent_obj);\n-  str = (*env)->GetStringUTFChars (env, contents, NULL);\n-\n-  gdk_threads_enter ();\n-\n-  text = gtk_text_new (NULL, NULL);\n-  gtk_text_set_editable (GTK_TEXT (text), TRUE);\n-\n-  gtk_editable_insert_text (GTK_EDITABLE (text), str,\n-\t\t\t    strlen (str), &pos);\n-\n-  sw = gtk_scrolled_window_new (NULL, NULL);\n-  gtk_container_add (GTK_CONTAINER (sw), text);\n-  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (sw), \n-\n-     /* horizontal scrollbar */\n-     (scroll == AWT_TEXTAREA_SCROLLBARS_BOTH\n-      || scroll == AWT_TEXTAREA_SCROLLBARS_HORIZONTAL_ONLY) ? \n-       GTK_POLICY_ALWAYS : GTK_POLICY_NEVER,\n-\n-     /* vertical scrollbar */\n-     (scroll == AWT_TEXTAREA_SCROLLBARS_BOTH\n-      || scroll == AWT_TEXTAREA_SCROLLBARS_VERTICAL_ONLY) ? \n-       GTK_POLICY_ALWAYS : GTK_POLICY_NEVER);\n-\n-  set_visible (text, TRUE);\n-  set_parent (sw, GTK_CONTAINER (parent));\n \n   gdk_threads_leave ();\n \n-  (*env)->ReleaseStringUTFChars (env, contents, str);\n-\n   NSA_SET_PTR (env, obj, sw);\n }\n \n@@ -122,8 +77,8 @@ Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_gtkTextGetSize\n   void *ptr;\n   jint *dims;\n   GtkWidget *text;\n-  GtkScrolledWindow *sw;\n-  GtkRequisition myreq;\n+/*   GtkScrolledWindow *sw; */\n+  GtkRequisition requisition;\n \n   ptr = NSA_GET_PTR (env, obj);\n \n@@ -133,35 +88,11 @@ Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_gtkTextGetSize\n   gdk_threads_enter ();\n \n   text = GTK_WIDGET (TEXT_FROM_SW (ptr));\n-  sw = GTK_SCROLLED_WINDOW (ptr);\n-\n-  gtk_signal_emit_by_name (GTK_OBJECT (GTK_SCROLLED_WINDOW(sw)->vscrollbar), \n-\t\t\t   \"size_request\", &myreq);\n-  //gtk_widget_size_request(GTK_WIDGET (GTK_SCROLLED_WINDOW(sw)->hscrollbar), \n-  //\t\t\t\t      &myreq);\n-  dims[0]=myreq.width+GTK_SCROLLED_WINDOW_CLASS \n-    (GTK_OBJECT (sw)->klass)->scrollbar_spacing;\n-\n-  gtk_signal_emit_by_name (GTK_OBJECT (GTK_SCROLLED_WINDOW(sw)->hscrollbar), \n-\t\t\t   \"size_request\", &myreq);\n-  //gtk_widget_size_request(GTK_WIDGET (GTK_SCROLLED_WINDOW(sw)->vscrollbar), \n-  //\t\t\t\t      &myreq);\n-  dims[1]=myreq.height+GTK_SCROLLED_WINDOW_CLASS \n-    (GTK_OBJECT (sw)->klass)->scrollbar_spacing;\n-  \n-  /* The '1' in the following assignments is from \n-     #define TEXT_BORDER_ROOM         1\n-     in gtktext.c */\n-\n-  /* Gtk text seems to wrap slightly prematurely.  Compensate. */\n-    ++cols;\n-    ++dims[0];\n+  /*   sw = GTK_SCROLLED_WINDOW (ptr); */\n \n-  dims[0] += ((cols * gdk_char_width (text->style->font, 'W'))\n-\t     + (2 * (text->style->klass->xthickness + 1)));\n-  /* Guess at the height.  Is there a better way?\t*/\n-  dims[1] += ((rows * gdk_string_height (text->style->font, \"Wg\"))\n-\t     + (2 * (text->style->klass->ythickness + 1)));\n+  gtk_widget_size_request(GTK_WIDGET (text), &requisition);\n+  dims[0] = requisition.width;\n+  dims[1] = requisition.height;\n \n   gdk_threads_leave ();\n   \n@@ -173,6 +104,9 @@ JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_insert\n   (JNIEnv *env, jobject obj, jstring contents, jint position)\n {\n+  GtkTextBuffer *buf;\n+  GtkTextIter iter;\n+  GtkWidget *text;\n   void *ptr;\n   const char *str;\n   int pos=position;\n@@ -181,8 +115,13 @@ Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_insert\n   str = (*env)->GetStringUTFChars (env, contents, NULL);\n   \n   gdk_threads_enter ();\n-  gtk_editable_insert_text (GTK_EDITABLE (TEXT_FROM_SW (ptr)), \n-\t\t\t    str, strlen (str), &pos);\n+\n+  text = GTK_WIDGET (TEXT_FROM_SW (ptr));\n+\n+  buf = gtk_text_view_get_buffer (GTK_TEXT_VIEW (text));\n+  gtk_text_buffer_get_iter_at_offset (buf, &iter, pos);\n+  gtk_text_buffer_insert (buf, &iter, str, strlen (str));\n+\n   gdk_threads_leave ();\n \n   (*env)->ReleaseStringUTFChars (env, contents, str);\n@@ -192,21 +131,29 @@ JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_replaceRange\n   (JNIEnv *env, jobject obj, jstring contents, jint start, jint end)\n {\n+  GtkWidget *text;\n+  GtkTextBuffer *buf;\n+  GtkTextIter iter, startIter, endIter;\n   void *ptr;\n-  GtkEditable *text;\n   const char *str;\n-  int pos = start;\n+  int mystart = start;\n+  int myend = end;\n \n   ptr = NSA_GET_PTR (env, obj);\n   str = (*env)->GetStringUTFChars (env, contents, NULL);\n   \n   gdk_threads_enter ();\n   \n-  text = GTK_EDITABLE (TEXT_FROM_SW (ptr));\n-  gtk_text_freeze (GTK_TEXT (text));\n-  gtk_editable_delete_text (text, start, end);\n-  gtk_editable_insert_text (text, str, strlen (str), &pos);\n-  gtk_text_thaw (GTK_TEXT (text));\n+  text = GTK_WIDGET (TEXT_FROM_SW (ptr));\n+\n+  buf = gtk_text_view_get_buffer (GTK_TEXT_VIEW (text));\n+\n+  gtk_text_buffer_get_iter_at_offset (buf, &startIter, mystart);\n+  gtk_text_buffer_get_iter_at_offset (buf, &endIter, myend);\n+  gtk_text_buffer_delete (buf, &startIter, &endIter);\n+\n+  gtk_text_buffer_get_iter_at_offset (buf, &iter, mystart);\n+  gtk_text_buffer_insert(buf, &iter, str, strlen (str));\n \n   gdk_threads_leave ();\n   (*env)->ReleaseStringUTFChars (env, contents, str);\n@@ -216,31 +163,25 @@ JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkTextAreaPeer_gtkSetFont\n   (JNIEnv *env, jobject obj, jstring jname, jint size)\n {\n-  const char *xlfd;\n-# define FBUFSZ 200\n-  char buf[FBUFSZ];\n+  const char *font_name;\n   void *ptr;\n-  GdkFont * new_font;\n-  GtkStyle * style;\n-  GtkWidget * text;\n+  GtkWidget *text;\n+  PangoFontDescription *font_desc;\n \n   ptr = NSA_GET_PTR (env, obj);\n   text = GTK_WIDGET (TEXT_FROM_SW (ptr));\n   \n-  xlfd = (*env)->GetStringUTFChars (env, jname, NULL);\n-    snprintf(buf, FBUFSZ, xlfd, size);\n-  (*env)->ReleaseStringUTFChars (env, jname, xlfd);\n+  font_name = (*env)->GetStringUTFChars (env, jname, NULL);\n+\n   gdk_threads_enter();\n-  new_font = gdk_font_load (buf);  /* FIXME: deprecated. Replacement?\t*/\n-  if (new_font == NULL)\n-    {\n-      /* Fail quietly for now. */\n-      gdk_threads_leave();\n-      return;\n-    }\n-  style = gtk_style_copy (gtk_widget_get_style (text));\n-  style -> font = new_font;\n-  gtk_widget_set_style (text , style);\n-  /* FIXME: Documentation varies as to whether we should unref style. */\n+\n+  font_desc = pango_font_description_from_string (font_name);\n+  pango_font_description_set_size (font_desc, size);\n+  gtk_widget_modify_font (GTK_WIDGET(text), font_desc);\n+  pango_font_description_free (font_desc);\n+  \n   gdk_threads_leave();\n+\n+  (*env)->ReleaseStringUTFChars (env, jname, font_name);\n+\n }"}, {"sha": "8cdff34f11bacc8ee5e3528febac80c5c260a529", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "status": "modified", "additions": 237, "deletions": 22, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextComponentPeer.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -39,20 +39,47 @@ exception statement from your version. */\n #include \"gtkpeer.h\"\n #include \"gnu_java_awt_peer_gtk_GtkTextComponentPeer.h\"\n \n-#define GET_EDITABLE(obj) (GTK_IS_EDITABLE (obj) ? GTK_EDITABLE (obj) : \\\n-  GTK_EDITABLE (GTK_SCROLLED_WINDOW (obj)->container.child))\n-\n JNIEXPORT jint JNICALL \n Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_getCaretPosition\n   (JNIEnv *env, jobject obj)\n {\n   void *ptr;\n   int pos;\n+  GtkEditable *editable;    // type of GtkEntry    (TextField)\n+  GtkWidget *text = NULL;   // type of GtkTextView (TextArea)\n+  GtkTextBuffer *buf;\n+  GtkTextMark *mark;\n+  GtkTextIter iter;\n \n   ptr = NSA_GET_PTR (env, obj);\n \n   gdk_threads_enter ();\n-  pos = gtk_editable_get_position (GET_EDITABLE (ptr));\n+\n+  if (GTK_IS_EDITABLE (ptr))\n+    {\n+      editable = GTK_EDITABLE (ptr);\n+      pos = gtk_editable_get_position (editable);\n+    }\n+  else\n+    {\n+      if (GTK_IS_SCROLLED_WINDOW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (GTK_TEXT_VIEW (GTK_SCROLLED_WINDOW (ptr)->container.child));\n+\t}\n+      else if (GTK_IS_TEXT_VIEW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (ptr);\n+\t}\n+\n+      if (text)\n+\t{\n+\t  buf = gtk_text_view_get_buffer (GTK_TEXT_VIEW (text));\n+\t  mark = gtk_text_buffer_get_insert (buf);\n+\t  gtk_text_buffer_get_iter_at_mark (buf, &iter, mark);\n+\t  pos = gtk_text_iter_get_offset (&iter);\n+\t}\n+    }\n+\n   gdk_threads_leave ();\n   \n   return pos;\n@@ -63,11 +90,40 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_setCaretPosition\n   (JNIEnv *env, jobject obj, jint pos)\n {\n   void *ptr;\n+  GtkEditable *editable;    // type of GtkEntry    (TextField)\n+  GtkWidget *text = NULL;   // type of GtkTextView (TextArea)\n+  GtkTextBuffer *buf;\n+  GtkTextMark *mark;\n+  GtkTextIter iter;\n \n   ptr = NSA_GET_PTR (env, obj);\n \n   gdk_threads_enter ();\n-  gtk_editable_set_position (GET_EDITABLE (ptr), pos);\n+  if (GTK_IS_EDITABLE (ptr))\n+    {\n+      editable = GTK_EDITABLE (ptr);\n+      gtk_editable_set_position (editable, pos);\n+    }\n+  else\n+    {\n+      if (GTK_IS_SCROLLED_WINDOW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (GTK_TEXT_VIEW (GTK_SCROLLED_WINDOW (ptr)->container.child));\n+\t}\n+      else if (GTK_IS_TEXT_VIEW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (ptr);\n+\t}\n+\n+      if (text)\n+\t{\n+\t  buf = gtk_text_view_get_buffer (GTK_TEXT_VIEW (text));\n+\t  mark = gtk_text_buffer_get_insert (buf);\n+\t  gtk_text_buffer_get_iter_at_mark (buf, &iter, mark);\n+\t  gtk_text_iter_set_offset (&iter, pos);\n+\t}\n+    }\n+\n   gdk_threads_leave ();\n }\n \n@@ -77,11 +133,42 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_getSelectionStart\n {\n   void *ptr;\n   int pos;\n+  GtkEditable *editable;    // type of GtkEntry    (TextField)\n+  GtkWidget *text = NULL;   // type of GtkTextView (TextArea)\n+  GtkTextBuffer *buf;\n+  GtkTextIter start;\n+  GtkTextIter end;\n+  int starti, endi;\n \n   ptr = NSA_GET_PTR (env, obj);\n \n   gdk_threads_enter ();\n-  pos = GET_EDITABLE (ptr)->selection_start_pos;\n+\n+  if (GTK_IS_EDITABLE (ptr))\n+    {\n+      editable = GTK_EDITABLE (ptr);\n+      if (gtk_editable_get_selection_bounds (editable, &starti, &endi))\n+\tpos = starti;\n+    }\n+  else\n+    {\n+      if (GTK_IS_SCROLLED_WINDOW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (GTK_TEXT_VIEW (GTK_SCROLLED_WINDOW (ptr)->container.child));\n+\t}\n+      else if (GTK_IS_TEXT_VIEW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (ptr);\n+\t}\n+\n+      if (text)\n+\t{\n+\t  buf = gtk_text_view_get_buffer (GTK_TEXT_VIEW (text));\n+\t  if (gtk_text_buffer_get_selection_bounds(buf, &start, &end))\n+\t    pos = gtk_text_iter_get_offset (&start);\n+\t}\n+    }\n+\n   gdk_threads_leave ();\n \n   return pos;\n@@ -93,11 +180,42 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_getSelectionEnd\n {\n   void *ptr;\n   int pos;\n+  GtkEditable *editable;    // type of GtkEntry    (TextField)\n+  GtkWidget *text = NULL;   // type of GtkTextView (TextArea)\n+  GtkTextBuffer *buf;\n+  GtkTextIter start;\n+  GtkTextIter end;\n+  int starti, endi;\n \n   ptr = NSA_GET_PTR (env, obj);\n \n   gdk_threads_enter ();\n-  pos = GET_EDITABLE (ptr)->selection_end_pos;\n+\n+  if (GTK_IS_EDITABLE (ptr))\n+    {\n+      editable = GTK_EDITABLE (ptr);\n+      if (gtk_editable_get_selection_bounds (editable, &starti, &endi))\n+\tpos = endi;\n+    }\n+  else\n+    {\n+      if (GTK_IS_SCROLLED_WINDOW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (GTK_TEXT_VIEW (GTK_SCROLLED_WINDOW (ptr)->container.child));\n+\t}\n+      else if (GTK_IS_TEXT_VIEW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (ptr);\n+\t}\n+\n+      if (text)\n+\t{\n+\t  buf = gtk_text_view_get_buffer (GTK_TEXT_VIEW (text));\n+\t  if (gtk_text_buffer_get_selection_bounds(buf, &start, &end))\n+\t    pos = gtk_text_iter_get_offset (&end);\n+\t}\n+    }\n+\n   gdk_threads_leave ();\n \n   return pos;\n@@ -108,11 +226,44 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_select\n   (JNIEnv *env, jobject obj, jint start, jint end)\n {\n   void *ptr;\n+  GtkEditable *editable;    // type of GtkEntry    (TextField)\n+  GtkWidget *text = NULL;   // type of GtkTextView (TextArea)\n+  GtkTextBuffer *buf;\n+  GtkTextIter iter;\n \n   ptr = NSA_GET_PTR (env, obj);\n \n   gdk_threads_enter ();\n-  gtk_editable_select_region (GET_EDITABLE (ptr), start, end);\n+\n+\n+  if (GTK_IS_EDITABLE (ptr))\n+    {\n+      editable = GTK_EDITABLE (ptr);\n+      gtk_editable_select_region (editable, start, end);\n+    }\n+  else\n+    {\n+      if (GTK_IS_SCROLLED_WINDOW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (GTK_TEXT_VIEW (GTK_SCROLLED_WINDOW (ptr)->container.child));\n+\t}\n+      else if (GTK_IS_TEXT_VIEW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (ptr);\n+\t}\n+\n+      if (text)\n+\t{\n+\t  buf = gtk_text_view_get_buffer (GTK_TEXT_VIEW (text));\n+\t  gtk_text_buffer_get_iter_at_offset (buf, &iter, start);\n+\t  /* quickly move both 'insert' and 'selection_bound' to the \n+\t     same position */\n+\t  gtk_text_buffer_place_cursor (buf, &iter);  \n+\t  gtk_text_buffer_get_iter_at_offset (buf, &iter, end);\n+\t  gtk_text_buffer_move_mark_by_name (buf, \"selection_bound\", &iter);\n+\t}\n+    }\n+\n   gdk_threads_leave ();\n }\n \n@@ -121,11 +272,35 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_setEditable\n   (JNIEnv *env, jobject obj, jboolean state)\n {\n   void *ptr;\n+  GtkEditable *editable;    // type of GtkEntry    (TextField)\n+  GtkWidget *text = NULL;   // type of GtkTextView (TextArea)\n \n   ptr = NSA_GET_PTR (env, obj);\n \n   gdk_threads_enter ();\n-  gtk_editable_set_editable (GET_EDITABLE (ptr), state);\n+\n+  if (GTK_IS_EDITABLE (ptr))\n+    {\n+      editable = GTK_EDITABLE (ptr);\n+      gtk_editable_set_editable (editable, state);\n+    }\n+  else\n+    {\n+      if (GTK_IS_SCROLLED_WINDOW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (GTK_TEXT_VIEW (GTK_SCROLLED_WINDOW (ptr)->container.child));\n+\t}\n+      else if (GTK_IS_TEXT_VIEW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (ptr);\n+\t}\n+\n+      if (text)\n+\t{\n+\t  gtk_text_view_set_editable (GTK_TEXT_VIEW (text), state);\n+\t}\n+    }\n+\n   gdk_threads_leave ();\n }\n \n@@ -136,11 +311,40 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_getText\n   void *ptr;\n   char *contents;\n   jstring jcontents;\n+  GtkEditable *editable;    // type of GtkEntry    (TextField)\n+  GtkWidget *text = NULL;   // type of GtkTextView (TextArea)\n+  GtkTextBuffer *buf;\n+  GtkTextIter start, end;\n \n   ptr = NSA_GET_PTR (env, obj);\n   \n   gdk_threads_enter ();\n-  contents = gtk_editable_get_chars (GET_EDITABLE (ptr), 0, -1);\n+\n+  if (GTK_IS_EDITABLE (ptr))\n+    {\n+      editable = GTK_EDITABLE (ptr);\n+      contents = gtk_editable_get_chars (editable, 0, -1);\n+    }\n+  else\n+    {\n+      if (GTK_IS_SCROLLED_WINDOW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (GTK_TEXT_VIEW (GTK_SCROLLED_WINDOW (ptr)->container.child));\n+\t}\n+      else if (GTK_IS_TEXT_VIEW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (ptr);\n+\t}\n+\n+      if (text)\n+\t{\n+\t  buf = gtk_text_view_get_buffer (GTK_TEXT_VIEW (text));\n+\t  gtk_text_buffer_get_start_iter (buf, &start);\n+\t  gtk_text_buffer_get_end_iter (buf, &end);\n+\t  contents = gtk_text_buffer_get_text (buf, &start, &end, FALSE);\n+\t}\n+    }\n+\n   gdk_threads_leave ();\n \n   jcontents = (*env)->NewStringUTF (env, contents);\n@@ -154,25 +358,36 @@ Java_gnu_java_awt_peer_gtk_GtkTextComponentPeer_setText\n   (JNIEnv *env, jobject obj, jstring contents)\n {\n   void *ptr;\n-  GtkEditable *text;\n   const char *str;\n-  int pos = 0;\n+  GtkWidget *text = NULL;   // type of GtkTextView (TextArea)\n+  GtkTextBuffer *buf;\n \n   ptr = NSA_GET_PTR (env, obj);\n   str = (*env)->GetStringUTFChars (env, contents, NULL);\n   \n   gdk_threads_enter ();\n \n-  text = GET_EDITABLE (ptr);\n-\n-  if (GTK_IS_TEXT (text))\n-    gtk_text_freeze (GTK_TEXT (text));\n-\n-  gtk_editable_delete_text (text, 0, -1);\n-  gtk_editable_insert_text (text, str, strlen (str), &pos);\n-\n-  if (GTK_IS_TEXT (text))\n-    gtk_text_thaw (GTK_TEXT (text));\n+  if (GTK_IS_EDITABLE (ptr))\n+    {\n+      gtk_entry_set_text (GTK_ENTRY (ptr), str);\n+    }\n+  else\n+    {\n+      if (GTK_IS_SCROLLED_WINDOW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (GTK_TEXT_VIEW (GTK_SCROLLED_WINDOW (ptr)->container.child));\n+\t}\n+      else if (GTK_IS_TEXT_VIEW (ptr))\n+\t{\n+\t  text = GTK_WIDGET (ptr);\n+\t}\n+\n+      if (text)\n+\t{\n+\t  buf = gtk_text_view_get_buffer (GTK_TEXT_VIEW (text));\n+\t  gtk_text_buffer_set_text (buf, str, strlen (str));\n+\t}\n+    }\n \n   gdk_threads_leave ();\n "}, {"sha": "69b3e521abcf1b472c09a01f8757cb8504155ac8", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "status": "modified", "additions": 20, "deletions": 60, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkTextFieldPeer.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -43,10 +43,10 @@ JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_create\n   (JNIEnv *env, jobject obj)\n {\n-  gpointer widget;\n+  GtkWidget *widget;\n \n   gdk_threads_enter ();\n-  widget = gtk_type_new (gtk_entry_get_type ());\n+  widget = gtk_entry_new ();\n   gdk_threads_leave ();\n \n   NSA_SET_PTR (env, obj, widget);\n@@ -68,56 +68,23 @@ Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_connectHooks\n   gdk_threads_leave ();\n }\n \n-\n-JNIEXPORT void JNICALL \n-Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_old_create\n-  (JNIEnv *env, jobject obj, jobject parent_obj, jstring text)\n-{\n-  GtkWidget *entry;\n-  const char *str;\n-  void *parent;\n-\n-  parent = NSA_GET_PTR (env, parent_obj);\n-\n-  str = (*env)->GetStringUTFChars (env, text, NULL);\n-  gdk_threads_enter ();\n-\n-  entry = gtk_entry_new ();\n-  gtk_entry_set_text (GTK_ENTRY (entry), str);\n-\n-  set_parent (entry, GTK_CONTAINER (parent));\n-\n-  gtk_widget_realize (entry);\n-  connect_awt_hook (env, obj, 2, \n-\t\t    entry->window, GTK_ENTRY (entry)->text_area);\n-\n-  NSA_SET_PTR (env, obj, entry);\n-\n-  gdk_threads_leave ();\n-  (*env)->ReleaseStringUTFChars (env, text, str);\n-}\n-\n-\n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_gtkEntryGetSize\n   (JNIEnv *env, jobject obj, jint cols, jintArray jdims)\n {\n   void *ptr;\n   jint *dims;\n   GtkRequisition myreq;\n-  GtkEntry *entry;\n+  GtkWidget *entry;\n   \n   ptr = NSA_GET_PTR (env, obj);\n   dims = (*env)->GetIntArrayElements (env, jdims, 0);  \n   \n   gdk_threads_enter ();\n-  entry = GTK_ENTRY (ptr);\n-\n-  gtk_signal_emit_by_name (GTK_OBJECT (entry), \"size_request\", &myreq);  \n   \n-  dims[0]=myreq.width-150 + (cols * \n-\t\t\t     gdk_char_width (GTK_WIDGET (entry)->style->font,\n-\t\t\t\t\t    'W'));\n+  entry = GTK_WIDGET (ptr);\n+  gtk_widget_size_request(entry, &myreq);\n+  dims[0]=myreq.width;\n   dims[1]=myreq.height;\n   \n   gdk_threads_leave ();\n@@ -153,31 +120,24 @@ JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkTextFieldPeer_gtkSetFont\n   (JNIEnv *env, jobject obj, jstring jname, jint size)\n {\n-  const char *xlfd;\n-# define FBUFSZ 200\n-  char buf[FBUFSZ];\n+  const char *font_name;\n   void *ptr;\n-  GdkFont * new_font;\n-  GtkStyle * style;\n-  GtkWidget * text;\n+  GtkWidget *entry;\n+  PangoFontDescription *font_desc;\n \n   ptr = NSA_GET_PTR (env, obj);\n-  text = GTK_WIDGET (ptr);\n   \n-  xlfd = (*env)->GetStringUTFChars (env, jname, NULL);\n-  snprintf(buf, FBUFSZ, xlfd, size);\n-  (*env)->ReleaseStringUTFChars (env, jname, xlfd);\n+  entry = GTK_WIDGET (ptr);\n+  font_name = (*env)->GetStringUTFChars (env, jname, NULL);\n+\n   gdk_threads_enter();\n-  new_font = gdk_font_load(buf);  /* FIXME: deprecated. Replacement?\t*/\n-  if (new_font == NULL)\n-    {\n-      /* Fail quietly for now. */\n-      gdk_threads_leave();\n-      return;\n-    }\n-  style = gtk_style_copy (gtk_widget_get_style (text));\n-  style -> font = new_font;\n-  gtk_widget_set_style (text , style);\n-  /* FIXME: Documentation varies as to whether we should unref style. */\n+\n+  font_desc = pango_font_description_from_string (font_name);\n+  pango_font_description_set_size (font_desc, size);\n+  gtk_widget_modify_font (GTK_WIDGET(entry), font_desc);\n+  pango_font_description_free (font_desc);\n+\n   gdk_threads_leave();\n+\n+  (*env)->ReleaseStringUTFChars (env, jname, font_name);\n }"}, {"sha": "9a8cc32efd8a6e7acd7220d6aad3372c6afd958b", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c", "status": "modified", "additions": 31, "deletions": 51, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -93,17 +93,37 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_connectHooks\n   (JNIEnv *env, jobject obj)\n {\n   void *ptr;\n+  GtkVBox* vbox;\n   GtkWidget *layout;\n-\n+  GList* children;\n+  char* name;\n   ptr = NSA_GET_PTR (env, obj);\n \n   gdk_threads_enter ();\n-  layout = GTK_WIDGET (gtk_container_children (GTK_CONTAINER (GTK_BIN (ptr)->child))->data);\n+\n+   children = gtk_container_get_children(GTK_CONTAINER(ptr));\n+   vbox = children->data;\n+   name = GTK_OBJECT_TYPE_NAME(vbox);\n+   if(!GTK_IS_VBOX(vbox))\n+     {\n+       printf(\"*** this is not a vbox\\n\");\n+     }\n+   children = gtk_container_get_children(GTK_CONTAINER(vbox));\n+   layout = children->data;\n+   name = GTK_OBJECT_TYPE_NAME(layout);\n+   if(!GTK_IS_LAYOUT(layout))\n+     {\n+      printf(\"*** widget is not a layout ***\");\n+     }\n+\n   gtk_widget_realize (layout);\n+\n   connect_awt_hook (env, obj, 1, GTK_LAYOUT (layout)->bin_window);\n   \n-  gtk_widget_realize (GTK_WIDGET (ptr));\n+    gtk_widget_realize (ptr);\n+\n   connect_awt_hook (env, obj, 1, GTK_WIDGET (ptr)->window);\n+  \n   gdk_threads_leave ();\n }\n \n@@ -112,8 +132,8 @@ setup_window (JNIEnv *env, jobject obj, GtkWidget *window, jint width,\n \t      jint height, jboolean visible)\n {\n   GtkWidget *layout, *vbox;\n-  gint x, y;\n \n+  gdk_threads_enter();\n   gtk_window_set_policy (GTK_WINDOW (window), 1, 1, 0);\n   gtk_widget_set_usize (window, width, height);\n \n@@ -131,6 +151,7 @@ setup_window (JNIEnv *env, jobject obj, GtkWidget *window, jint width,\n \n   connect_awt_hook (env, obj, 1, window->window);\n   set_visible (window, visible);\n+  gdk_threads_leave ();\n }\n \n /*\n@@ -212,9 +233,6 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_toFront (JNIEnv *env,\n static void\n setBounds (GtkWidget *widget, jint x, jint y, jint width, jint height)\n {\n-  gint current_x, current_y;\n-  gint origin_x, origin_y;\n-\n /*    gdk_window_get_root_origin (widget->window, &current_x, &current_y); */\n \n /*    if (current_x != x || current_y != y) */\n@@ -295,16 +313,12 @@ gdk_window_get_root_geometry (GdkWindow *window,\n \t\t\t      gint      *border,\n \t\t\t      gint      *depth)\n {\n-  GdkWindowPrivate *private;\n-  Window xwindow;\n-  Window xparent;\n-  Window root;\n-  Window *children;\n+  GdkWindow *private;\n   unsigned int nchildren;\n   \n   g_return_if_fail (window != NULL);\n   \n-  private = (GdkWindowPrivate*) window;\n+  private = (GdkWindow*) window;\n   if (x)\n     *x = 0;\n   if (y)\n@@ -318,48 +332,14 @@ gdk_window_get_root_geometry (GdkWindow *window,\n   if (depth)\n     *depth = 0;\n \n-  if (private->destroyed)\n+  if (GDK_WINDOW_DESTROYED (private))\n     return;\n   \n-  while (private->parent && ((GdkWindowPrivate*) private->parent)->parent)\n-    private = (GdkWindowPrivate*) private->parent;\n-  if (private->destroyed)\n+  private = gdk_window_get_toplevel (private);\n+  if (GDK_WINDOW_DESTROYED(private))\n     return;\n   \n-  xparent = private->xwindow;\n-  do\n-    {\n-      xwindow = xparent;\n-      if (!XQueryTree (private->xdisplay, xwindow,\n-\t\t       &root, &xparent,\n-\t\t       &children, &nchildren))\n-\treturn;\n+  gdk_window_get_geometry (private, x, y, width, height, depth);\n       \n-      if (children)\n-\tXFree (children);\n-    }\n-  while (xparent != root);\n-  \n-  if (xparent == root)\n-    {\n-      unsigned int ww, wh, wb, wd;\n-      int wx, wy;\n-      \n-      if (XGetGeometry (private->xdisplay, xwindow, &root, &wx, &wy, &ww, &wh, &wb, &wd))\n-\t{\n-\t  if (x)\n-\t    *x = wx;\n-\t  if (y)\n-\t    *y = wy;\n-\t  if (width)\n-\t    *width = ww;\n-\t  if (height)\n-\t    *height = wh;\n-\t  if (border)\n-\t    *border = wb;\n-\t  if (depth)\n-\t    *depth = wd;\n-\t}\n-    }\n }\n "}, {"sha": "b1077a796779c5398ca19f633b3fc6727be38225", "filename": "libjava/jni/gtk-peer/gthread-jni.c", "status": "modified", "additions": 386, "deletions": 72, "changes": 458, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.c?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -35,116 +35,430 @@ this exception to your version of the library, but you are not\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+/************************************************************************/\n+/* Header\t\t\t\t     \t\t\t\t*/\n+/************************************************************************/\n+\n+/*\n+ * Julian Dolby (dolby@us.ibm.com)\n+ * February 7, 2003\n+ *\n+ *  This code implements the GThreadFunctions interface for GLIB using \n+ * Java threading primitives.  All of the locking and conditional variable\n+ * functionality required by GThreadFunctions is implemented using the\n+ * monitor and wait/notify functionality of Java objects.  The thread-\n+ * local fucntionality uses the java.lang.ThreadLocal class. \n+ *\n+ *  This code is designed to be portable in that it makes no assumptions\n+ * about the underlying VM beyond that it implements the JNI functionality\n+ * that this code uses.\n+ *\n+ *  The one piece that does not really work is trylock for mutexes.  The\n+ * Java locking model does not include such functionality, and I do not\n+ * see how to implement it without knowing something about how the VM\n+ * implements locking.  \n+ *\n+ * NOTES:\n+ *\n+ *  I have tested it only on JikesRVM---the CVS head as of early February\n+ * 2003.\n+ *\n+ *  Currently, use of this code is governed by the configuration option\n+ * --enable-portable-native-sync\n+ *\n+ */\n+\n+\n+/************************************************************************/\n+/* Global data\t\t\t\t     \t\t\t\t*/\n+/************************************************************************/\n \n #include \"gthread-jni.h\"\n \n-/*\n- * This code has been written specifically to be used with GTK+ 1.2.\n- * `Real' GLIB threading is not supported.  We fake things where necessary.\n- * Once we know we're running on a 1.2 VM, we can write a real implementation.\n+/*  The VM handle.  This is set in GtkToolkitMain.gtkInit */\n+JavaVM *gdk_vm;\n+\n+\n+/************************************************************************/\n+/* Utilities to reflect exceptions back to the VM\t\t\t*/\n+/************************************************************************/\n+\n+/*  This function checks for a pending exception, and rethrows it with\n+ * a wrapper RuntimeException to deal with possible type problems (in\n+ * case some calling piece of code does not expect the exception being\n+ * thrown) and to include the given extra message.\n  */\n+static void maybe_rethrow(JNIEnv *gdk_env, char *message, char *file, int line) {\n+  jthrowable cause;\n \n-static GMutex *\n-g_mutex_new_jni_impl (void)\n-{\n+  /* rethrow if an exception happened */\n+  if ((cause = (*gdk_env)->ExceptionOccurred(gdk_env)) != NULL) {\n+    jstring jmessage;\n   jclass obj_class;\n-  jobject *mutex;\n+    jobject obj;\n+    jmethodID ctor;\n \n-  obj_class = (*gdk_env)->FindClass (gdk_env, \"java/lang/Object\");\n-  if (obj_class == NULL)\n-    return NULL;\n-\n-  mutex = (jobject *) g_malloc (sizeof (jobject));\n-  *mutex = (*gdk_env)->AllocObject (gdk_env, obj_class);\n-  if (*mutex == NULL)\n-    {\n-      g_free (mutex);\n-      return NULL;\n+    /* allocate local message in Java */\n+    int len = strlen(message) + strlen(file) + 25;\n+    char buf[ len ];\n+    bzero(buf, len);\n+    sprintf(buf, \"%s (at %s:%d)\", message, file, line);\n+    jmessage = (*gdk_env)->NewStringUTF(gdk_env, buf);\n+    \n+    /* create RuntimeException wrapper object */\n+    obj_class = (*gdk_env)->FindClass (gdk_env, \"java/lang/RuntimeException\");\n+    ctor = (*gdk_env)->GetMethodID(gdk_env, obj_class, \"<init>\", \"(Ljava/langString;Ljava/lang/Throwable)V\");\n+    obj = (*gdk_env)->NewObject (gdk_env, obj_class, ctor, jmessage, cause);\n+\n+    /* throw it */\n+    (*gdk_env)->Throw(gdk_env, (jthrowable)obj);\n     }\n-  *mutex = (*gdk_env)->NewGlobalRef (gdk_env, *mutex);\n+}\n+\n+/* This macro is used to include a source location in the exception message */\n+#define MAYBE_RETHROW(_class, _message) \\\n+maybe_rethrow(_class, _message, __FILE__, __LINE__)\n+\n \n-  return (GMutex *) mutex;\n+/************************************************************************/\n+/* Utilities to allocate and free java.lang.Objects\t\t\t*/\n+/************************************************************************/\n+\n+/*  Both the mutexes and the condition variables are java.lang.Object objects,\n+ * which this method allocates and returns a global ref.  Note that global\n+ * refs must be explicitly freed (isn't C fun?).\n+ */\n+static jobject *allocatePlainObject() {\n+  jclass obj_class;\n+  jobject *obj;\n+  JNIEnv *gdk_env;\n+  jmethodID ctor;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  obj_class = (*gdk_env)->FindClass (gdk_env, \"java/lang/Object\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Object\");\n+\n+  ctor = (*gdk_env)->GetMethodID(gdk_env, obj_class, \"<init>\", \"()V\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find constructor\");\n+\n+  obj = (jobject *) g_malloc (sizeof (jobject));\n+  *obj = (*gdk_env)->NewObject (gdk_env, obj_class, ctor);\n+  MAYBE_RETHROW(gdk_env, \"cannot allocate object\");\n+  \n+  *obj = (*gdk_env)->NewGlobalRef (gdk_env, *obj);\n+  MAYBE_RETHROW(gdk_env, \"cannot make global ref\");\n+\n+  return obj;\n }\n \n-static void\n-g_mutex_lock_jni_impl (GMutex *mutex)\n-{\n-  if (mutex && mutex == gdk_threads_mutex)\n-    (*gdk_env)->MonitorEnter (gdk_env, *((jobject *)mutex));\n+/*  Frees a Java object given a global ref (isn't C fun?) */\n+static void freePlainObject(jobject *obj) {\n+  JNIEnv *gdk_env;\n+\n+  if (obj) {\n+    (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+    (*gdk_env)->DeleteGlobalRef (gdk_env, *obj);\n+    MAYBE_RETHROW(gdk_env, \"cannot delete global ref\");\n+  \n+    g_free (obj);\n+  }\n }\n \n-static gboolean\n-g_mutex_trylock_jni_impl (GMutex *mutex)\n-{\n-  return FALSE;\n+\n+/************************************************************************/\n+/* Locking code\t\t\t\t     \t\t\t\t*/\n+/************************************************************************/\n+\n+/* Lock a Java object */\n+static void takeLock(JNIEnv *gdk_env, void *mutex) {\n+  (*gdk_env)->MonitorEnter (gdk_env, *((jobject *)mutex));\n+  MAYBE_RETHROW(gdk_env, \"cannot get lock\");\n }\n \n-static void\n-g_mutex_unlock_jni_impl (GMutex *mutex)\n-{\n-  if (mutex && mutex == gdk_threads_mutex)\n+/* Unlock a Java object */\n+static void releaseLock(JNIEnv *gdk_env, void *mutex) {\n     (*gdk_env)->MonitorExit (gdk_env, *((jobject *)mutex));\n+  MAYBE_RETHROW(gdk_env, \"cannot release lock\");\n }\n \n-static void\n-g_mutex_free_jni_impl (GMutex *mutex)\n-{\n-  if (mutex && mutex == gdk_threads_mutex)\n-    {\n-      (*gdk_env)->DeleteGlobalRef (gdk_env, *((jobject *)mutex));\n-      g_free (mutex);\n-    }\n+/* Create a mutex, which is a java.lang.Object for us */\n+static GMutex *g_mutex_new_jni_impl (void) {\n+  return (GMutex*) allocatePlainObject();\n }\n \n-static GPrivate *\n-g_private_new_jni_impl (GDestroyNotify notify)\n-{\n-  return NULL;\n+/* Lock a mutex. */\n+static void g_mutex_lock_jni_impl (GMutex *mutex) {\n+  JNIEnv *gdk_env;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  takeLock(gdk_env, mutex);\n }\n \n-static gpointer\n-g_private_get_jni_impl (GPrivate *private)\n-{\n-  return NULL;\n+/*  Try to lock a mutex.  Actually, do not try because Java objects\n+ * do not provide such an interface.  To be at least minimally correct,\n+ * pretend we tried and failed.\n+ */\n+static gboolean g_mutex_trylock_jni_impl (GMutex *mutex) {\n+  // Shall we implement this in a JikesRVM-specific way under a flag?\n+  return FALSE;\n }\n \n-static void\n-g_private_set_jni_impl (GPrivate *private, gpointer data)\n-{\n+/* Unlock a mutex. */\n+static void g_mutex_unlock_jni_impl (GMutex *mutex) {\n+  JNIEnv *gdk_env;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  releaseLock(gdk_env, mutex);\n }\n \n-static GCond *\n-g_cond_new_jni_impl ()\n+/* Free a mutex (isn't C fun?) */\n+static void g_mutex_free_jni_impl (GMutex *mutex)\n {\n-  return NULL;\n+  freePlainObject( (jobject*)mutex );\n }\n \n-static void\n-g_cond_signal_jni_impl (GCond *cond)\n-{\n+\n+/************************************************************************/\n+/* Condition variable code\t\t     \t\t\t\t*/\n+/************************************************************************/\n+\n+/* Create a new condition variable.  This is a java.lang.Object for us. */\n+static GCond *g_cond_new_jni_impl () {\n+  return (GCond*)allocatePlainObject();\n }\n \n-static void\n-g_cond_broadcast_jni_impl (GCond *cond)\n-{\n+/*  Signal on a condition variable.  This is simply calling Object.notify\n+ * for us.\n+ */\n+static void g_cond_signal_jni_impl (GCond *cond) {\n+  jclass lcl_class;\n+  jmethodID signal_mth;\n+  JNIEnv *gdk_env;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  lcl_class = (*gdk_env)->FindClass (gdk_env, \"java.lang.Object\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Object\");\n+  \n+  signal_mth = (*gdk_env)->GetMethodID(gdk_env, lcl_class, \"notify\", \"()V\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Object.<notify>\");\n+\n+  /* Must have locked an object to call notify */\n+  takeLock(gdk_env, cond);\n+\n+  (*gdk_env)->CallVoidMethod(gdk_env, *(jobject*)cond, signal_mth);\n+  MAYBE_RETHROW(gdk_env, \"cannot signal mutex\");\n+\n+  releaseLock(gdk_env, cond);\n }\n \n-static void\n-g_cond_wait_jni_impl (GCond *cond, GMutex *mutex)\n-{\n+/*  Broadcast to all waiting on a condition variable.  This is simply \n+ * calling Object.notifyAll for us.\n+ */\n+static void g_cond_broadcast_jni_impl (GCond *cond) {\n+  jclass lcl_class;\n+  jmethodID bcast_mth;\n+  JNIEnv *gdk_env;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  lcl_class = (*gdk_env)->FindClass (gdk_env, \"java.lang.Object\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Object\");\n+  \n+  bcast_mth = (*gdk_env)->GetMethodID(gdk_env, lcl_class, \"notifyAll\", \"()V\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Object.<notifyAll>\");\n+\n+  /* Must have locked an object to call notifyAll */\n+  takeLock(gdk_env, cond);\n+\n+  (*gdk_env)->CallVoidMethod(gdk_env, *(jobject*)cond, bcast_mth);\n+  MAYBE_RETHROW(gdk_env, \"cannot broadcast to mutex\");\n+\n+  releaseLock(gdk_env, cond);\n }\n \n+\n+/*  Wait on a condition variable.  For us, this simply means call\n+ * Object.wait.\n+ */\n+static void g_cond_wait_jni_impl (GCond *cond, GMutex *mutex) {\n+  jclass lcl_class;\n+  jmethodID wait_mth;\n+  JNIEnv *gdk_env;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  lcl_class = (*gdk_env)->FindClass (gdk_env, \"java.lang.Object\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Object\");\n+  \n+  wait_mth = (*gdk_env)->GetMethodID(gdk_env, lcl_class, \"wait\", \"()V\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Object.<wait>\");\n+\n+  /* Must have locked an object to call wait */\n+  takeLock(gdk_env, cond);\n+\n+  (*gdk_env)->CallVoidMethod(gdk_env, *(jobject*)cond, wait_mth);\n+  MAYBE_RETHROW(gdk_env, \"cannot wait on mutex\");\n+\n+  releaseLock(gdk_env, cond);\n+}\n+\n+/*  Wait on a condition vairable until a timeout.  This is a little tricky\n+ * for us.  We first call Object.wait(J) giving it the appropriate timeout\n+ * value.  On return, we check whether an InterruptedException happened.  If\n+ * so, that is Java-speak for wait timing out.\n+ */\n static gboolean\n-g_cond_timed_wait_jni_impl (GCond *cond, GMutex *mutex)\n-{\n+g_cond_timed_wait_jni_impl (GCond *cond, GMutex *mutex, GTimeVal *end_time) {\n+  jclass lcl_class;\n+  jmethodID wait_mth;\n+  JNIEnv *gdk_env;\n+  jlong time;\n+  jthrowable cause;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  lcl_class = (*gdk_env)->FindClass (gdk_env, \"java.lang.Object\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Object\");\n+  \n+  wait_mth = (*gdk_env)->GetMethodID(gdk_env, lcl_class, \"wait\", \"(J)V\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Object.<wait(J)>\");\n+  \n+  time = end_time->tv_sec*1000;\n+  time += end_time->tv_usec/1000;\n+\n+  /* Must have locked an object to call wait */\n+  takeLock(gdk_env, cond);\n+\n+  (*gdk_env)->CallVoidMethod(gdk_env, *(jobject*)cond, wait_mth, time);\n+\n+  if ((cause = (*gdk_env)->ExceptionOccurred(gdk_env)) != NULL) {\n+    jclass intr = (*gdk_env)->FindClass (gdk_env, \"java.lang.InterruptedException\");\n+    if ( (*gdk_env)->IsInstanceOf(gdk_env, cause, intr) ) {\n+      releaseLock(gdk_env, cond);\n   return FALSE;\n+    } else {\n+      MAYBE_RETHROW(gdk_env, \"error in timed wait\");\n+    }\n+  }\n+\n+  releaseLock(gdk_env, cond);\n+\n+  return TRUE;\n }\n \n-static void\n-g_cond_free_jni_impl (GCond *cond)\n-{\n+/* Free a condition variable.  (isn't C fun?) */\n+static void g_cond_free_jni_impl (GCond *cond) {\n+  freePlainObject( (jobject*)cond );\n+}\n+\n+\n+/************************************************************************/\n+/* Thread-local data code\t\t     \t\t\t\t*/\n+/************************************************************************/\n+\n+/*  Create a new thread-local key.  We use java.lang.ThreadLocal objects\n+ * for this.\n+ */\n+static GPrivate *g_private_new_jni_impl (GDestroyNotify notify) {\n+  jclass lcl_class;\n+  jobject *local;\n+  JNIEnv *gdk_env;\n+  jmethodID ctor;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  lcl_class = (*gdk_env)->FindClass (gdk_env, \"java.lang.ThreadLocal\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find ThreadLocal\");\n+\n+  ctor = (*gdk_env)->GetMethodID(gdk_env, lcl_class, \"<init>\", \"()V\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find ThreadLocal.<init>\");\n+\n+  local = (jobject *) g_malloc (sizeof (jobject));\n+  *local = (*gdk_env)->NewObject(gdk_env, lcl_class, ctor);\n+  MAYBE_RETHROW(gdk_env, \"cannot allocate a ThreadLocal\");\n+  \n+  *local = ((*gdk_env)->NewGlobalRef (gdk_env, *local));\n+  MAYBE_RETHROW(gdk_env, \"cannot create a GlobalRef\");\n+\n+  return (GPrivate*) local;\n+}\n+\n+/*  Get this thread's value for a thread-local key.  This is simply\n+ * ThreadLocal.get for us.\n+ */\n+static gpointer g_private_get_jni_impl (GPrivate *private) {\n+  jclass lcl_class;\n+  jobject lcl_obj;\n+  JNIEnv *gdk_env;\n+  jmethodID get_mth;\n+  jclass int_class;\n+  jmethodID val_mth;\n+  jint int_val;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  lcl_class = (*gdk_env)->FindClass (gdk_env, \"java.lang.ThreadLocal\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find ThreadLocal\");\n+\n+  get_mth = (*gdk_env)->GetMethodID(gdk_env, lcl_class, \"get\", \"()Ljava/lang/Object;\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find ThreadLocal.<get>\");\n+\n+  lcl_obj = (*gdk_env)->CallObjectMethod(gdk_env, *(jobject*)private, get_mth);\n+  MAYBE_RETHROW(gdk_env, \"cannot find thread-local object\");\n+\n+  int_class = (*gdk_env)->FindClass (gdk_env, \"java.lang.Integer\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Integer\");\n+\n+  val_mth = (*gdk_env)->GetMethodID(gdk_env, int_class, \"intValue\", \"()I\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Integer.<intValue>\");\n+\n+  int_val = (*gdk_env)->CallIntMethod(gdk_env, lcl_obj, val_mth);\n+  MAYBE_RETHROW(gdk_env, \"cannot get thread local value\");\n+\n+  return (gpointer) int_val;\n }\n \n+/*  Set this thread's value for a thread-local key.  This is simply\n+ * ThreadLocal.set for us.\n+ */\n+static void g_private_set_jni_impl (GPrivate *private, gpointer data) {\n+  jclass lcl_class, int_class;\n+  jobject lcl_obj;\n+  JNIEnv *gdk_env;\n+  jmethodID new_int, set_mth;\n+\n+  (*gdk_vm)->GetEnv(gdk_vm, (void **)&gdk_env, JNI_VERSION_1_1);\n+\n+  int_class = (*gdk_env)->FindClass (gdk_env, \"java.lang.Integer\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Integer\");\n+\n+  new_int = (*gdk_env)->GetMethodID(gdk_env, int_class, \"<init>\", \"(I)V\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find Integer.<init>\");\n+\n+  lcl_obj = (*gdk_env)->NewObject(gdk_env, int_class, new_int, (jint)data);\n+  MAYBE_RETHROW(gdk_env, \"cannot create an Integer\");\n+\n+  lcl_class = (*gdk_env)->FindClass (gdk_env, \"java.lang.ThreadLocal\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find ThreadLocal\");\n+\n+  set_mth = (*gdk_env)->GetMethodID(gdk_env, lcl_class, \"set\", \"(Ljava/lang/Object;)V\");\n+  MAYBE_RETHROW(gdk_env, \"cannot find ThreadLocal.<set>\");\n+\n+  (*gdk_env)->CallVoidMethod(gdk_env, *(jobject*)private, set_mth, lcl_obj);\n+  MAYBE_RETHROW(gdk_env, \"cannot set thread local value\");\n+}\n+\n+\n+/************************************************************************/\n+/* GLIB interface\t\t\t     \t\t\t\t*/\n+/************************************************************************/\n+\n+/* set of function pointers to give to glib. */\n GThreadFunctions g_thread_jni_functions =\n {\n   g_mutex_new_jni_impl,\t      /* mutex_new */\n@@ -163,7 +477,7 @@ GThreadFunctions g_thread_jni_functions =\n   g_private_set_jni_impl      /* private_set */\n };\n \n-void\n-gdk_threads_wake ()\n-{\n+/* ??? */\n+void gdk_threads_wake () {\n+\n }"}, {"sha": "a0d093dccc893f681cc111d77b7dc917277934a3", "filename": "libjava/jni/gtk-peer/gthread-jni.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgthread-jni.h?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -43,5 +43,6 @@ exception statement from your version. */\n #include \"gtkpeer.h\"\n \n extern GThreadFunctions g_thread_jni_functions;\n+extern JavaVM *gdk_vm;\n \n #endif /* __GTHREADJNI_H__ */"}, {"sha": "091051224b90b3640e66ae421327a8cb9de2193a", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e531ff29f5677799bf45a62e85a442d9c492f6/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=29e531ff29f5677799bf45a62e85a442d9c492f6", "patch": "@@ -87,10 +87,11 @@ GCOBJS = @GCOBJS@\n GCSPEC = @GCSPEC@\n GCTESTSPEC = @GCTESTSPEC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n-GLIB_CONFIG = @GLIB_CONFIG@\n+GLIB_GENMARSHAL = @GLIB_GENMARSHAL@\n GLIB_LIBS = @GLIB_LIBS@\n+GLIB_MKENUMS = @GLIB_MKENUMS@\n+GOBJECT_QUERY = @GOBJECT_QUERY@\n GTK_CFLAGS = @GTK_CFLAGS@\n-GTK_CONFIG = @GTK_CONFIG@\n GTK_LIBS = @GTK_LIBS@\n HASH_SYNC_SPEC = @HASH_SYNC_SPEC@\n IEEESPEC = @IEEESPEC@\n@@ -117,6 +118,7 @@ OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PERL = @PERL@\n+PKG_CONFIG = @PKG_CONFIG@\n PLATFORMOBJS = @PLATFORMOBJS@\n RANLIB = @RANLIB@\n STRIP = @STRIP@"}]}