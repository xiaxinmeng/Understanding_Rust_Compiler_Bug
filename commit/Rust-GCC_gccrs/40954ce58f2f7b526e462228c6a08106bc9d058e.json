{"sha": "40954ce58f2f7b526e462228c6a08106bc9d058e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA5NTRjZTU4ZjJmN2I1MjZlNDYyMjI4YzZhMDgxMDZiYzlkMDU4ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:23:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:23:31Z"}, "message": "ira.c: Include rtl-iter.h.\n\ngcc/\n\t* ira.c: Include rtl-iter.h.\n\t(set_paradoxical_subreg): Turn from being a for_each_rtx callback\n\tto being a function that examines each subrtx itself.  Remove\n\thandling of null rtxes.\n\t(update_equiv_regs): Update call accordingly.\n\nFrom-SVN: r214642", "tree": {"sha": "54e24e1a5cb26adeb588b0d95b7e29cc7728a711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54e24e1a5cb26adeb588b0d95b7e29cc7728a711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40954ce58f2f7b526e462228c6a08106bc9d058e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40954ce58f2f7b526e462228c6a08106bc9d058e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40954ce58f2f7b526e462228c6a08106bc9d058e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40954ce58f2f7b526e462228c6a08106bc9d058e/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa4e2d7ef0684e2f49279228c691d12a2c3c1544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4e2d7ef0684e2f49279228c691d12a2c3c1544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4e2d7ef0684e2f49279228c691d12a2c3c1544"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "34472620f07a7457e4ee512f98d76aaf775a6b55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40954ce58f2f7b526e462228c6a08106bc9d058e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40954ce58f2f7b526e462228c6a08106bc9d058e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40954ce58f2f7b526e462228c6a08106bc9d058e", "patch": "@@ -1,3 +1,11 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* ira.c: Include rtl-iter.h.\n+\t(set_paradoxical_subreg): Turn from being a for_each_rtx callback\n+\tto being a function that examines each subrtx itself.  Remove\n+\thandling of null rtxes.\n+\t(update_equiv_regs): Update call accordingly.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* fwprop.c: Include rtl-iter.h."}, {"sha": "d499d7de7b443ff62531d60691569b749fe9b6f6", "filename": "gcc/ira.c", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40954ce58f2f7b526e462228c6a08106bc9d058e/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40954ce58f2f7b526e462228c6a08106bc9d058e/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=40954ce58f2f7b526e462228c6a08106bc9d058e", "patch": "@@ -392,6 +392,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"lra.h\"\n #include \"dce.h\"\n #include \"dbgcnt.h\"\n+#include \"rtl-iter.h\"\n \n struct target_ira default_target_ira;\n struct target_ira_int default_target_ira_int;\n@@ -3266,23 +3267,20 @@ no_equiv (rtx reg, const_rtx store ATTRIBUTE_UNUSED,\n /* Check whether the SUBREG is a paradoxical subreg and set the result\n    in PDX_SUBREGS.  */\n \n-static int\n-set_paradoxical_subreg (rtx *subreg, void *pdx_subregs)\n+static void\n+set_paradoxical_subreg (rtx_insn *insn, bool *pdx_subregs)\n {\n-  rtx reg;\n-\n-  if ((*subreg) == NULL_RTX)\n-    return 1;\n-  if (GET_CODE (*subreg) != SUBREG)\n-    return 0;\n-  reg = SUBREG_REG (*subreg);\n-  if (!REG_P (reg))\n-    return 0;\n-\n-  if (paradoxical_subreg_p (*subreg))\n-    ((bool *)pdx_subregs)[REGNO (reg)] = true;\n-\n-  return 0;\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, PATTERN (insn), NONCONST)\n+    {\n+      const_rtx subreg = *iter;\n+      if (GET_CODE (subreg) == SUBREG)\n+\t{\n+\t  const_rtx reg = SUBREG_REG (subreg);\n+\t  if (REG_P (reg) && paradoxical_subreg_p (subreg))\n+\t    pdx_subregs[REGNO (reg)] = true;\n+\t}\n+    }\n }\n \n /* In DEBUG_INSN location adjust REGs from CLEARED_REGS bitmap to the\n@@ -3345,8 +3343,7 @@ update_equiv_regs (void)\n   FOR_EACH_BB_FN (bb, cfun)\n     FOR_BB_INSNS (bb, insn)\n       if (NONDEBUG_INSN_P (insn))\n-\tfor_each_rtx_in_insn (&insn, set_paradoxical_subreg,\n-\t\t\t      (void *) pdx_subregs);\n+\tset_paradoxical_subreg (insn, pdx_subregs);\n \n   /* Scan the insns and find which registers have equivalences.  Do this\n      in a separate scan of the insns because (due to -fcse-follow-jumps)"}]}