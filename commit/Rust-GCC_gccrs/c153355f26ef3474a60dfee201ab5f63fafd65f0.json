{"sha": "c153355f26ef3474a60dfee201ab5f63fafd65f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE1MzM1NWYyNmVmMzQ3NGE2MGRmZWUyMDFhYjVmNjNmYWZkNjVmMA==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2010-10-29T16:10:07Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2010-10-29T16:10:07Z"}, "message": "pdp11.c (print_operand_address): Correct handling of integer constant addresses, delete vax-only logic.\n\n* config/pdp11/pdp11.c (print_operand_address): Correct handling\nof integer constant addresses, delete vax-only logic.\n\nFrom-SVN: r166065", "tree": {"sha": "dd285b122882364890e5b6ae276623373ddc02e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd285b122882364890e5b6ae276623373ddc02e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c153355f26ef3474a60dfee201ab5f63fafd65f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c153355f26ef3474a60dfee201ab5f63fafd65f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c153355f26ef3474a60dfee201ab5f63fafd65f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c153355f26ef3474a60dfee201ab5f63fafd65f0/comments", "author": null, "committer": null, "parents": [{"sha": "a6e78d3beae829297316494a58d3da3d202b8732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6e78d3beae829297316494a58d3da3d202b8732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6e78d3beae829297316494a58d3da3d202b8732"}], "stats": {"total": 74, "additions": 22, "deletions": 52}, "files": [{"sha": "4311b42590d33f865f5e521d7befea107b872e91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c153355f26ef3474a60dfee201ab5f63fafd65f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c153355f26ef3474a60dfee201ab5f63fafd65f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c153355f26ef3474a60dfee201ab5f63fafd65f0", "patch": "@@ -1,3 +1,8 @@\n+2010-10-29  Paul Koning  <ni1d@arrl.net>\n+\n+\t* config/pdp11/pdp11.c (print_operand_address): Correct handling\n+\tof integer constant addresses, delete vax-only logic.\n+\n 2010-10-11  Hariharan Sandanagobalane  <hariharan@picochip.com>\n \n \t* config/picochip/picochip.c (picochip_is_short_branch): Simplify"}, {"sha": "f50becbe3e5d695df8799fa5637421ad6a912749", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 17, "deletions": 52, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c153355f26ef3474a60dfee201ab5f63fafd65f0/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c153355f26ef3474a60dfee201ab5f63fafd65f0/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=c153355f26ef3474a60dfee201ab5f63fafd65f0", "patch": "@@ -905,14 +905,13 @@ output_ascii (FILE *file, const char *p, int size)\n }\n \n \n-/* --- stole from out-vax, needs changes */\n-\n void\n print_operand_address (FILE *file, register rtx addr)\n {\n-  register rtx reg1, reg2, breg, ireg;\n+  register rtx breg;\n   rtx offset;\n-\n+  int again = 0;\n+  \n  retry:\n \n   switch (GET_CODE (addr))\n@@ -923,6 +922,7 @@ print_operand_address (FILE *file, register rtx addr)\n       else\n \tfprintf (file, \"@\");\n       addr = XEXP (addr, 0);\n+      again = 1;\n       goto retry;\n \n     case REG:\n@@ -940,8 +940,7 @@ print_operand_address (FILE *file, register rtx addr)\n       break;\n \n     case PLUS:\n-      reg1 = 0;\treg2 = 0;\n-      ireg = 0;\tbreg = 0;\n+      breg = 0;\n       offset = 0;\n       if (CONSTANT_ADDRESS_P (XEXP (addr, 0))\n \t  || GET_CODE (XEXP (addr, 0)) == MEM)\n@@ -957,77 +956,43 @@ print_operand_address (FILE *file, register rtx addr)\n \t}\n       if (GET_CODE (addr) != PLUS)\n \t;\n-      else if (GET_CODE (XEXP (addr, 0)) == MULT)\n-\t{\n-\t  reg1 = XEXP (addr, 0);\n-\t  addr = XEXP (addr, 1);\n-\t}\n-      else if (GET_CODE (XEXP (addr, 1)) == MULT)\n-\t{\n-\t  reg1 = XEXP (addr, 1);\n-\t  addr = XEXP (addr, 0);\n-\t}\n       else if (GET_CODE (XEXP (addr, 0)) == REG)\n \t{\n-\t  reg1 = XEXP (addr, 0);\n+\t  breg = XEXP (addr, 0);\n \t  addr = XEXP (addr, 1);\n \t}\n       else if (GET_CODE (XEXP (addr, 1)) == REG)\n \t{\n-\t  reg1 = XEXP (addr, 1);\n+\t  breg = XEXP (addr, 1);\n \t  addr = XEXP (addr, 0);\n \t}\n-      if (GET_CODE (addr) == REG || GET_CODE (addr) == MULT)\n+      if (GET_CODE (addr) == REG)\n \t{\n-\t  if (reg1 == 0)\n-\t    reg1 = addr;\n-\t  else\n-\t    reg2 = addr;\n+\t  gcc_assert (breg == 0);\n+\t  breg = addr;\n \t  addr = 0;\n \t}\n       if (offset != 0)\n \t{\n \t  gcc_assert (addr == 0);\n \t  addr = offset;\n \t}\n-      if (reg1 != 0 && GET_CODE (reg1) == MULT)\n-\t{\n-\t  breg = reg2;\n-\t  ireg = reg1;\n-\t}\n-      else if (reg2 != 0 && GET_CODE (reg2) == MULT)\n-\t{\n-\t  breg = reg1;\n-\t  ireg = reg2;\n-\t}\n-      else if (reg2 != 0 || GET_CODE (addr) == MEM)\n-\t{\n-\t  breg = reg2;\n-\t  ireg = reg1;\n-\t}\n-      else\n-\t{\n-\t  breg = reg1;\n-\t  ireg = reg2;\n-\t}\n       if (addr != 0)\n-\toutput_address (addr);\n+\toutput_addr_const_pdp11 (file, addr);\n       if (breg != 0)\n \t{\n \t  gcc_assert (GET_CODE (breg) == REG);\n \t  fprintf (file, \"(%s)\", reg_names[REGNO (breg)]);\n \t}\n-      if (ireg != 0)\n-\t{\n-\t  if (GET_CODE (ireg) == MULT)\n-\t    ireg = XEXP (ireg, 0);\n-\t  gcc_assert (GET_CODE (ireg) == REG);\n-\t  gcc_unreachable(); /* ??? */\n-\t  fprintf (file, \"[%s]\", reg_names[REGNO (ireg)]);\n-\t}\n       break;\n \n     default:\n+      if (!again && GET_CODE (addr) == CONST_INT)\n+\t{\n+\t  /* Absolute (integer number) address.  */\n+\t  if (!TARGET_UNIX_ASM)\n+\t    fprintf (file, \"@$\");\n+\t}\n       output_addr_const_pdp11 (file, addr);\n     }\n }"}]}