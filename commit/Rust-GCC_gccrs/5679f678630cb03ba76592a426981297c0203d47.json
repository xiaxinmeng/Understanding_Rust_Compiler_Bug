{"sha": "5679f678630cb03ba76592a426981297c0203d47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY3OWY2Nzg2MzBjYjAzYmE3NjU5MmE0MjY5ODEyOTdjMDIwM2Q0Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-12-05T02:46:48Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-12-05T02:46:48Z"}, "message": "optimize.c (expand_call_inline): Wrap the expanded call in an EXPR_WITH_FILE_LOCATION node to get correct line...\n\n\t* optimize.c (expand_call_inline): Wrap the expanded call in an\n\tEXPR_WITH_FILE_LOCATION node to get correct line numbers for\n\tinlined functions.\n\nFrom-SVN: r30784", "tree": {"sha": "fea188fd25e14b1d9ef2e7f791838ee0f4e0d5c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fea188fd25e14b1d9ef2e7f791838ee0f4e0d5c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5679f678630cb03ba76592a426981297c0203d47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5679f678630cb03ba76592a426981297c0203d47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5679f678630cb03ba76592a426981297c0203d47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5679f678630cb03ba76592a426981297c0203d47/comments", "author": null, "committer": null, "parents": [{"sha": "86fff623afa161dc0997319a2112ac51f62ef0ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86fff623afa161dc0997319a2112ac51f62ef0ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86fff623afa161dc0997319a2112ac51f62ef0ed"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "5176865f1df0c7bcace7f0b28078865b1e362e4c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5679f678630cb03ba76592a426981297c0203d47/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5679f678630cb03ba76592a426981297c0203d47/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5679f678630cb03ba76592a426981297c0203d47", "patch": "@@ -1,5 +1,9 @@\n 1999-12-04  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* optimize.c (expand_call_inline): Wrap the expanded call in an\n+\tEXPR_WITH_FILE_LOCATION node to get correct line numbers for\n+\tinlined functions.\n+\n \t* optimize.c (inline_data): Remove fns_top.  Add scope_stmt.  Add\n \tin_target_cleanup_p.\n \t(remap_decl): New function."}, {"sha": "8e474a81a7744dc39e1739d0a432291b9064638d", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5679f678630cb03ba76592a426981297c0203d47/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5679f678630cb03ba76592a426981297c0203d47/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=5679f678630cb03ba76592a426981297c0203d47", "patch": "@@ -641,15 +641,20 @@ expand_call_inline (tp, walk_subtrees, data)\n \n   /* The new expression has side-effects if the old one did.  */\n   TREE_SIDE_EFFECTS (expr) = TREE_SIDE_EFFECTS (t);\n+\n+  /* Replace the call by the inlined body.  Wrap it in an\n+     EXPR_WITH_FILE_LOCATION so that we'll get debugging line notes\n+     pointing to the right place.  */\n+  chain = TREE_CHAIN (*tp);\n+  *tp = build_expr_wfl (expr, DECL_SOURCE_FILE (fn), DECL_SOURCE_LINE (fn),\n+\t\t\t/*col=*/0);\n+  EXPR_WFL_EMIT_LINE_NOTE (*tp) = 1;\n+  TREE_CHAIN (*tp) = chain;\n+\n   /* If the value of the new expression is ignored, that's OK.  We\n      don't warn about this for CALL_EXPRs, so we shouldn't warn about\n      the equivalent inlined version either.  */\n-  TREE_USED (expr) = 1;\n-\n-  /* Replace the call by the inlined body.  */\n-  chain = TREE_CHAIN (*tp);\n-  *tp = expr;\n-  TREE_CHAIN (expr) = chain;\n+  TREE_USED (*tp) = 1;\n \n   /* Recurse into the body of the just inlined function.  */\n   expand_calls_inline (tp, id);"}]}