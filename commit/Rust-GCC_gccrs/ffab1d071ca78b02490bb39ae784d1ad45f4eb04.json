{"sha": "ffab1d071ca78b02490bb39ae784d1ad45f4eb04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhYjFkMDcxY2E3OGIwMjQ5MGJiMzlhZTc4NGQxYWQ0NWY0ZWIwNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-11-30T10:39:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-11-30T10:39:36Z"}, "message": "re PR middle-end/42119 (internal compiler error: in expand_expr_addr_expr_1, at expr.c:6862)\n\n2009-11-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/42119\n\tPR fortran/38530\n\t* expr.c (expand_expr_addr_expr_1): Properly expand the initializer\n\tof CONST_DECLs.\n\n\t* gfortran.dg/pr42119.f90: New testcase.\n\nFrom-SVN: r154778", "tree": {"sha": "70e5c4b5c8abb762105af6b9e0ae79b0bd32f9c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70e5c4b5c8abb762105af6b9e0ae79b0bd32f9c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffab1d071ca78b02490bb39ae784d1ad45f4eb04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffab1d071ca78b02490bb39ae784d1ad45f4eb04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffab1d071ca78b02490bb39ae784d1ad45f4eb04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffab1d071ca78b02490bb39ae784d1ad45f4eb04/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84b434f46aabff791f59a45ec74c8b9a3cf32f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c84b434f46aabff791f59a45ec74c8b9a3cf32f2"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "0aa39ad92ba0a4f84bb3a05aad1ac3b0e455ebe2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffab1d071ca78b02490bb39ae784d1ad45f4eb04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffab1d071ca78b02490bb39ae784d1ad45f4eb04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffab1d071ca78b02490bb39ae784d1ad45f4eb04", "patch": "@@ -1,3 +1,10 @@\n+2009-11-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/42119\n+\tPR fortran/38530\n+\t* expr.c (expand_expr_addr_expr_1): Properly expand the initializer\n+\tof CONST_DECLs.\n+\n 2009-11-30  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-into-ssa.c (insert_phi_nodes): Add PHI nodes in"}, {"sha": "13ae5fffc9f05460547b1c360fa4c62dc57bd1f2", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffab1d071ca78b02490bb39ae784d1ad45f4eb04/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffab1d071ca78b02490bb39ae784d1ad45f4eb04/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ffab1d071ca78b02490bb39ae784d1ad45f4eb04", "patch": "@@ -6840,9 +6840,8 @@ expand_expr_addr_expr_1 (tree exp, rtx target, enum machine_mode tmode,\n       return expand_expr (TREE_OPERAND (exp, 0), target, tmode, modifier);\n \n     case CONST_DECL:\n-      /* Recurse and make the output_constant_def clause above handle this.  */\n-      return expand_expr_addr_expr_1 (DECL_INITIAL (exp), target,\n-\t\t\t\t      tmode, modifier, as);\n+      /* Expand the initializer like constants above.  */\n+      return XEXP (expand_expr_constant (DECL_INITIAL (exp), 0, modifier), 0);\n \n     case REALPART_EXPR:\n       /* The real part of the complex number is always first, therefore"}, {"sha": "6d75d60e37d39d71fa9cdf6f711c8b304a31a6a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffab1d071ca78b02490bb39ae784d1ad45f4eb04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffab1d071ca78b02490bb39ae784d1ad45f4eb04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ffab1d071ca78b02490bb39ae784d1ad45f4eb04", "patch": "@@ -1,3 +1,9 @@\n+2009-11-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/42119\n+\tPR fortran/38530\n+\t* gfortran.dg/pr42119.f90: New testcase.\n+\n 2009-11-30  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42069"}, {"sha": "f848e9e9f60eba13482c04314b06d16ef6e4b607", "filename": "gcc/testsuite/gfortran.dg/pr42119.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffab1d071ca78b02490bb39ae784d1ad45f4eb04/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42119.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffab1d071ca78b02490bb39ae784d1ad45f4eb04/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42119.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42119.f90?ref=ffab1d071ca78b02490bb39ae784d1ad45f4eb04", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+\n+module Test\n+use ISO_C_BINDING\n+\n+contains\n+\n+subroutine Callback(arg) bind(C)\n+  integer(C_INT)  :: arg\n+end subroutine Callback\n+\n+subroutine Check(proc)\n+  type(C_FUNPTR)  :: proc\n+end subroutine Check\n+\n+end module Test\n+\n+\n+program Main\n+  use Test\n+  type(C_FUNPTR)  :: proc\n+\n+  call Check(C_FUNLOC(Callback))\n+end program Main"}]}