{"sha": "a2048d055bfe230b7074c492245ac041f739e471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIwNDhkMDU1YmZlMjMwYjcwNzRjNDkyMjQ1YWMwNDFmNzM5ZTQ3MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-03-03T15:13:20Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-09T08:09:07Z"}, "message": "[Ada] Small enhancement in XEinfo utility\n\n2020-06-09  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* einfo.ads (XEINFO section): Update format description.\n\t(Is_Subprogram_Or_Entry): Move pragma to regular section.\n\t(Is_Subprogram_Or_Generic_Subprogram): Likewise.\n\t* xeinfo.adb (Get_B4): Rename to...\n\t(Get_B0): ...this.\n\t(Translate_Expr): New procedure extracted from...\n\t(XEinfo): ...here.  Try to apply Get_B0 first and then\n\tcall Translate_Expr to translate supported constructs.", "tree": {"sha": "5477e8132d41b739f4d9c0a0e7d0db08ef1b2624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5477e8132d41b739f4d9c0a0e7d0db08ef1b2624"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2048d055bfe230b7074c492245ac041f739e471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2048d055bfe230b7074c492245ac041f739e471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2048d055bfe230b7074c492245ac041f739e471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2048d055bfe230b7074c492245ac041f739e471/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd66407104b2133f0e55deb84db787c692a21948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd66407104b2133f0e55deb84db787c692a21948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd66407104b2133f0e55deb84db787c692a21948"}], "stats": {"total": 60, "additions": 44, "deletions": 16}, "files": [{"sha": "277ca9892619d5523097846aebf16fe33b156086", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2048d055bfe230b7074c492245ac041f739e471/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2048d055bfe230b7074c492245ac041f739e471/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=a2048d055bfe230b7074c492245ac041f739e471", "patch": "@@ -111,12 +111,14 @@ package Einfo is\n \n --     The function spec must be on a single line\n \n---     There can only be a single statement, contained on a single line,\n---     not counting any pragma Assert statements.\n+--     There can only be a single return statement, not counting any pragma\n+--     Assert statements, possibly followed by a comment.\n \n---     This single statement must either be a function call with simple,\n---     single token arguments, or it must be a membership test of the form\n---     a in b, where a and b are single tokens.\n+--     This single statement must either contain a function call with simple,\n+--     single token arguments, or it must contain a membership test of the form\n+--     a in b, where a and b are single tokens, or it must contain an equality\n+--     or inequality test of single tokens, or it must contain a disjunction of\n+--     the preceding constructs.\n \n --  For functions that are not inlined, there is no restriction on the body,\n --  and XEINFO generates a direct reference in the C header file which allows\n@@ -8976,6 +8978,8 @@ package Einfo is\n    pragma Inline (Is_Static_Type);\n    pragma Inline (Is_Statically_Allocated);\n    pragma Inline (Is_Subprogram);\n+   pragma Inline (Is_Subprogram_Or_Entry);\n+   pragma Inline (Is_Subprogram_Or_Generic_Subprogram);\n    pragma Inline (Is_Tag);\n    pragma Inline (Is_Tagged_Type);\n    pragma Inline (Is_Task_Type);\n@@ -9170,8 +9174,6 @@ package Einfo is\n    pragma Inline (Is_Protected_Component);\n    pragma Inline (Is_Protected_Record_Type);\n    pragma Inline (Is_String_Type);\n-   pragma Inline (Is_Subprogram_Or_Entry);\n-   pragma Inline (Is_Subprogram_Or_Generic_Subprogram);\n    pragma Inline (Is_Task_Record_Type);\n    pragma Inline (Is_Volatile);\n    pragma Inline (Is_Wrapper_Package);"}, {"sha": "170a5c67028d09b420557ccea464d18f64207a02", "filename": "gcc/ada/xeinfo.adb", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2048d055bfe230b7074c492245ac041f739e471/gcc%2Fada%2Fxeinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2048d055bfe230b7074c492245ac041f739e471/gcc%2Fada%2Fxeinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxeinfo.adb?ref=a2048d055bfe230b7074c492245ac041f739e471", "patch": "@@ -126,10 +126,10 @@ procedure XEinfo is\n    Get_Cmnt : constant Pattern := BreakX ('-') * A & \"--\";\n    Get_Expr : constant Pattern := wsp & \"return \" & Break (';') * Expr;\n    Chek_End : constant Pattern := wsp & \"end\" & BreakX (';') & ';';\n+   Get_B0   : constant Pattern := BreakX (' ') * A & \" or else \" & Rest * B;\n    Get_B1   : constant Pattern := BreakX (' ') * A & \" in \" & Rest * B;\n    Get_B2   : constant Pattern := BreakX (' ') * A & \" = \" & Rest * B;\n    Get_B3   : constant Pattern := BreakX (' ') * A & \" /= \" & Rest * B;\n-   Get_B4   : constant Pattern := BreakX (' ') * A & \" or else \" & Rest * B;\n    To_Paren : constant Pattern := wsp * Filler & '(';\n    Get_Fml  : constant Pattern := Break (\" :\") * Formal & wsp & ':' & wsp\n                                   & BreakX (\" );\") * Formaltyp;\n@@ -164,6 +164,9 @@ procedure XEinfo is\n    procedure Sethead (Line : in out VString; Term : String);\n    --  Process function header into C\n \n+   procedure Translate_Expr (Expr : in out VString);\n+   --  Translate expression from Ada to C\n+\n    -------------\n    -- Badfunc --\n    -------------\n@@ -242,6 +245,22 @@ procedure XEinfo is\n       end if;\n    end Sethead;\n \n+   --------------------\n+   -- Translate_Expr --\n+   --------------------\n+\n+   procedure Translate_Expr (Expr : in out VString) is\n+      M : Match_Result;\n+\n+   begin\n+      Match (Expr, Get_B1, M);\n+      Replace (M, \"IN (\" & A & \", \" & B & ')');\n+      Match (Expr, Get_B2, M);\n+      Replace (M, A & \" == \" & B);\n+      Match (Expr, Get_B3, M);\n+      Replace (M, A & \" != \" & B);\n+   end Translate_Expr;\n+\n --  Start of processing for XEinfo\n \n begin\n@@ -485,14 +504,21 @@ begin\n             Badfunc;\n          end if;\n \n-         Match (Expr, Get_B1, M);\n-         Replace (M, \"IN (\" & A & \", \" & B & ')');\n-         Match (Expr, Get_B2, M);\n-         Replace (M, A & \" == \" & B);\n-         Match (Expr, Get_B3, M);\n-         Replace (M, A & \" != \" & B);\n-         Match (Expr, Get_B4, M);\n-         Replace (M, A & \" || \" & B);\n+         --  Process expression\n+\n+         if Match (Expr, Get_B0, M) then\n+            declare\n+               Saved_A : VString := A;\n+               Saved_B : VString := B;\n+            begin\n+               Translate_Expr (Saved_A);\n+               Translate_Expr (Saved_B);\n+               Replace (M, Saved_A & \" || \" & Saved_B);\n+            end;\n+         else\n+            Translate_Expr (Expr);\n+         end if;\n+\n          Put_Line (Ofile, \"\");\n          Sethead (Fline, \"\");\n          Put_Line (Ofile, C & \"   { return \" & Expr & \"; }\");"}]}