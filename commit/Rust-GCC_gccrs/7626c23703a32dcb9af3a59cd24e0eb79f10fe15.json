{"sha": "7626c23703a32dcb9af3a59cd24e0eb79f10fe15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYyNmMyMzcwM2EzMmRjYjlhZjNhNTljZDI0ZTBlYjc5ZjEwZmUxNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-19T20:05:48Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-19T20:05:48Z"}, "message": "find.cc: Empty strings can be found at all positions.\n\n\n2000-06-19  Anthony Williams  <anthony@anthonyw.cjb.net>\n\n\t* testsuite/21_strings/find.cc: Empty strings can be found at all\n\tpositions. Modified.\n\nFrom-SVN: r34600", "tree": {"sha": "8beb702f28f6abf3ecf8c86e3478dde0a295c75e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8beb702f28f6abf3ecf8c86e3478dde0a295c75e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7626c23703a32dcb9af3a59cd24e0eb79f10fe15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7626c23703a32dcb9af3a59cd24e0eb79f10fe15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7626c23703a32dcb9af3a59cd24e0eb79f10fe15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7626c23703a32dcb9af3a59cd24e0eb79f10fe15/comments", "author": null, "committer": null, "parents": [{"sha": "3ef9fe6118bd7f0fb02f0a6295ce2061281cd47c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef9fe6118bd7f0fb02f0a6295ce2061281cd47c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ef9fe6118bd7f0fb02f0a6295ce2061281cd47c"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "cf0c1338ae38ddae100f8089e1f1161093843b52", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7626c23703a32dcb9af3a59cd24e0eb79f10fe15/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7626c23703a32dcb9af3a59cd24e0eb79f10fe15/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7626c23703a32dcb9af3a59cd24e0eb79f10fe15", "patch": "@@ -1,3 +1,13 @@\n+2000-06-19  Anthony Williams  <anthony@anthonyw.cjb.net>\n+\t\n+\t* testsuite/21_strings/find.cc: Empty strings can be found at all\n+\tpositions. Modified.\n+\n+2000-06-19  Branko Cibej  <branko.cibej@hermes.si>\n+\n+        * testsuite/20_utilities: New directory.\t\n+        * testsuite/20_utilities/auto_ptr.cc: New file.\n+\t\n 2000-06-14  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n       \t* src/Makefile.am (string_sources): Simplify, assuming that with"}, {"sha": "6202d8390e13380514dcb03552d2046029ab3238", "filename": "libstdc++-v3/testsuite/21_strings/find.cc", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7626c23703a32dcb9af3a59cd24e0eb79f10fe15/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Ffind.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7626c23703a32dcb9af3a59cd24e0eb79f10fe15/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Ffind.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Ffind.cc?ref=7626c23703a32dcb9af3a59cd24e0eb79f10fe15", "patch": "@@ -1,6 +1,6 @@\n // 1999-06-09 bkoz\n \n-// Copyright (C) 1994, 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1994, 1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -56,21 +56,16 @@ bool test01(void)\n   test &= csz01 == 8;\n   csz01 = str01.find(str03, 12);\n   test &= csz01 == npos;\n-  // It is implementation-defined if a given string contains an empty\n-  // string. The only two times a char_type() (== empty string) ending\n-  // element is required to be part of the string is on c_str() and\n-  // operator[size()] const: the indeterminate, stored state of the\n-  // string can vary, and not include a terminal char_type().\n   csz01 = str01.find(str04, 0);\n-  test &= csz01 == npos || csz01 == str01.size();\n+  test &= csz01 == 0;\n   csz01 = str01.find(str04, 5);\n-  test &= csz01 == npos || csz01 == str01.size();\n+  test &= csz01 == 5;\n   \n   // size_type find(const char* s, size_type pos, size_type n) const;\n   csz01 = str01.find(str_lit01, 0, 3);\n   test &= csz01 == 0;\n   csz01 = str01.find(str_lit01, 3, 0);\n-  test &= csz01 == npos;\n+  test &= csz01 == 3;\n \n   // size_type find(const char* s, size_type pos = 0) const;\n   csz01 = str01.find(str_lit01);\n@@ -107,15 +102,17 @@ bool test01(void)\n   csz01 = str01.find_first_of(str05, 4);\n   test &= csz01 == 4;\n \n-  // It is implementation-defined if a given string contains an empty\n-  // string. The only two times a char_type() (== empty string) ending\n-  // element is required to be part of the string is on c_str() and\n-  // operator[size()] const: the indeterminate, stored state of the\n-  // string can vary, and not include a terminal char_type().\n+  // An empty string consists of no characters\n+  // therefore it should be found at every point in a string,\n+  // except beyond the end\n   csz01 = str01.find_first_of(str04, 0);\n-  test &= csz01 == npos || csz01 == str01.size();\n+  test &= csz01 == npos;\n   csz01 = str01.find_first_of(str04, 5);\n-  test &= csz01 == npos || csz01 == str01.size();\n+  test &= csz01 == npos;\n+  csz01 = str01.find(str04, str01.size());\n+  test &= csz01 == str01.size();\n+  csz01 = str01.find(str04, str01.size() + 1);\n+  test &= csz01 == npos;\n   \n   // size_type find_first_of(const char* s, size_type pos, size_type n) const;\n   csz01 = str01.find_first_of(str_lit01, 0, 3);"}]}