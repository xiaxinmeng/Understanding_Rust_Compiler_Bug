{"sha": "3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyODE1ZDhiZDUxY2FmNTViM2U3NjgyZjgxYmY5Y2E1ZDQ0ZDU0NA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-07-13T10:55:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T10:55:40Z"}, "message": "opt.ads, [...]: Minor reformatting\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* opt.ads, prj-conf.adb, prj-env.adb, prj-ext.adb, prj-nmsc.adb,\n\tprj-proc.adb, prj-tree.adb, prj-tree.ads: Minor reformatting\n\nFrom-SVN: r149570", "tree": {"sha": "5c832792a179568751c60ff8d83bfc233f5e68f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c832792a179568751c60ff8d83bfc233f5e68f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/comments", "author": null, "committer": null, "parents": [{"sha": "197e4514ff1feff34e0815afafb6555e56121e19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197e4514ff1feff34e0815afafb6555e56121e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/197e4514ff1feff34e0815afafb6555e56121e19"}], "stats": {"total": 248, "additions": 130, "deletions": 118}, "files": [{"sha": "6b28a011c69541ef4b469139f0de4935182cf458", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "patch": "@@ -1,3 +1,8 @@\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* opt.ads, prj-conf.adb, prj-env.adb, prj-ext.adb, prj-nmsc.adb,\n+\tprj-proc.adb, prj-tree.adb, prj-tree.ads: Minor reformatting\n+\n 2009-07-13  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj.adb, prj.ads, prj-env.adb, prj-conf.adb, prj-tree.adb,"}, {"sha": "f220136f029db0d69af95096d78909c9ec83899f", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 66, "deletions": 68, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "patch": "@@ -640,38 +640,37 @@ package Opt is\n    Inspector_Mode : Boolean renames Debug.Debug_Flag_Dot_II;\n    --  GNAT\n    --  Set True to activate Inspector mode (-gnatd.I switch). In particular\n-   --  this enables SCIL generation.\n-   --  When VM_Target /= None, the compiler will also attempt to\n-   --  generate code even in case of unsupported construct instead of\n-   --  displaying an error.\n+   --  this enables SCIL generation. When VM_Target /= None, the compiler will\n+   --  also attempt to generate code even in case of unsupported construct\n+   --  instead of displaying an error.\n \n    Invalid_Value_Used : Boolean := False;\n    --  GNAT\n    --  Set True if a valid Invalid_Value attribute is encountered\n \n    Follow_Links_For_Files : Boolean := False;\n    --  PROJECT MANAGER\n-   --  Set to True (-eL) to process the project files in trusted mode.\n-   --  If Follow_Links is False, it is assumed that the project doesn't contain\n+   --  Set to True (-eL) to process the project files in trusted mode. If\n+   --  Follow_Links is False, it is assumed that the project doesn't contain\n    --  any file duplicated through symbolic links (although the latter are\n    --  still valid if they point to a file which is outside of the project),\n    --  and that no directory has a name which is a valid source name.\n \n    Follow_Links_For_Dirs : Boolean := True;\n    --  PROJECT MANAGER\n-   --  Whether directories can be links in this project, and therefore\n-   --  additional system calls should be performed to ensure we always see the\n-   --  same full name for each directory.\n+   --  Set to True if directories can be links in this project, and therefore\n+   --  additional system calls must be performed to ensure that we always see\n+   --  the same full name for each directory.\n \n    Front_End_Inlining : Boolean := False;\n    --  GNAT\n    --  Set True to activate inlining by front-end expansion\n \n    Inline_Processing_Required : Boolean := False;\n    --  GNAT\n-   --  Set True if inline processing is required. Inline processing is\n-   --  required if an active Inline pragma is processed. The flag is set\n-   --  for a pragma Inline or Inline_Always that is actually active.\n+   --  Set True if inline processing is required. Inline processing is required\n+   --  if an active Inline pragma is processed. The flag is set for a pragma\n+   --  Inline or Inline_Always that is actually active.\n \n    In_Place_Mode : Boolean := False;\n    --  GNATMAKE\n@@ -681,8 +680,8 @@ package Opt is\n \n    Keep_Going : Boolean := False;\n    --  GNATMAKE, GPRMAKE, GPRBUILD\n-   --  When True signals to ignore compilation errors and keep\n-   --  processing sources until there is no more work.\n+   --  When True signals to ignore compilation errors and keep processing\n+   --  sources until there is no more work.\n \n    Keep_Temporary_Files : Boolean := False;\n    --  GNATCMD\n@@ -696,8 +695,8 @@ package Opt is\n \n    Link_Only : Boolean := False;\n    --  GNATMAKE, GPRMAKE, GPRBUILD\n-   --  Set to True to skip compile and bind steps\n-   --  (except when Bind_Only is set to True).\n+   --  Set to True to skip compile and bind steps (except when Bind_Only is\n+   --  set to True).\n \n    List_Restrictions : Boolean := False;\n    --  GNATBIND\n@@ -730,21 +729,21 @@ package Opt is\n \n    List_Representation_Info_To_File : Boolean := False;\n    --  GNAT\n-   --  Set true by -gnatRs switch. Causes information from -gnatR/1/2/3\n-   --  to be written to file.rep (where file is the name of the source\n-   --  file) instead of stdout. For example, if file x.adb is compiled\n-   --  using -gnatR2s then representation info is written to x.adb.ref.\n+   --  Set true by -gnatRs switch. Causes information from -gnatR/1/2/3 to be\n+   --  written to file.rep (where file is the name of the source file) instead\n+   --  of stdout. For example, if file x.adb is compiled using -gnatR2s then\n+   --  representation info is written to x.adb.ref.\n \n    List_Representation_Info_Mechanisms : Boolean := False;\n    --  GNAT\n-   --  Set true by -gnatRm switch. Causes information on mechanisms to\n-   --  be included in the representation output information.\n+   --  Set true by -gnatRm switch. Causes information on mechanisms to be\n+   --  included in the representation output information.\n \n    List_Preprocessing_Symbols : Boolean := False;\n    --  GNAT, GNATPREP\n    --  Set to True if symbols for preprocessing a source are to be listed\n-   --  before preprocessing occurs. Set to True by switch -s of gnatprep\n-   --  or -s in preprocessing data file for the compiler.\n+   --  before preprocessing occurs. Set to True by switch -s of gnatprep or\n+   --  -s in preprocessing data file for the compiler.\n \n    type Create_Repinfo_File_Proc is access procedure (Src  : String);\n    type Write_Repinfo_Line_Proc  is access procedure (Info : String);\n@@ -755,12 +754,11 @@ package Opt is\n    Write_Repinfo_Line_Access  : Write_Repinfo_Line_Proc  := null;\n    Close_Repinfo_File_Access  : Close_Repinfo_File_Proc  := null;\n    --  GNAT\n-   --  These three locations are left null when operating in non-compiler\n-   --  (e.g. ASIS mode), but when operating in compiler mode, they are\n-   --  set to point to the three corresponding procedures in Osint-C. The\n-   --  reason for this slightly strange interface is to prevent Repinfo\n-   --  from dragging in Osint in ASIS mode, which would include a lot of\n-   --  unwanted units in the ASIS build.\n+   --  These three locations are left null when operating in non-compiler (e.g.\n+   --  ASIS mode), but when operating in compiler mode, they are set to point\n+   --  to the three corresponding procedures in Osint-C. The reason for this\n+   --  slightly strange interface is to stop Repinfo from dragging in Osint in\n+   --  ASIS mode, which would include lots of unwanted units in the ASIS build.\n \n    type Create_List_File_Proc is access procedure (S : String);\n    type Write_List_Info_Proc  is access procedure (S : String);\n@@ -776,25 +774,25 @@ package Opt is\n    --  set to point to the three corresponding procedures in Osint-C. The\n    --  reason for this slightly strange interface is to prevent Repinfo\n    --  from dragging in Osint-C in the binder, which would include unwanted\n-   --  units in the  binder.\n+   --  units in the binder.\n \n    Locking_Policy : Character := ' ';\n    --  GNAT, GNATBIND\n-   --  Set to ' ' for the default case (no locking policy specified).\n-   --  Reset to first character (uppercase) of locking policy name if a\n-   --  valid pragma Locking_Policy is encountered.\n+   --  Set to ' ' for the default case (no locking policy specified). Reset to\n+   --  first character (uppercase) of locking policy name if a valid pragma\n+   --  Locking_Policy is encountered.\n \n    Locking_Policy_Sloc : Source_Ptr := No_Location;\n    --  GNAT, GNATBIND\n-   --  Remember location of previous Locking_Policy pragma. This is used\n-   --  for inconsistency error messages. A value of System_Location is\n-   --  used if the policy is set in package System.\n+   --  Remember location of previous Locking_Policy pragma. This is used for\n+   --  inconsistency error messages. A value of System_Location is used if the\n+   --  policy is set in package System.\n \n    Look_In_Primary_Dir : Boolean := True;\n    --  GNAT, GNATBIND, GNATMAKE, GNATCLEAN\n-   --  Set to False if a -I- was present on the command line.\n-   --  When True we are allowed to look in the primary directory to locate\n-   --  other source or library files.\n+   --  Set to False if a -I- was present on the command line. When True we are\n+   --  allowed to look in the primary directory to locate other source or\n+   --  library files.\n \n    Make_Steps : Boolean := False;\n    --  GNATMAKE\n@@ -902,9 +900,9 @@ package Opt is\n \n    Original_Operating_Mode : Operating_Mode_Type := Generate_Code;\n    --  GNAT\n-   --  Indicates the original operating mode of the compiler as set by\n-   --  compiler options. This is identical to Operating_Mode except that\n-   --  this is not affected by errors.\n+   --  Indicates the original operating mode of the compiler as set by compiler\n+   --  options. This is identical to Operating_Mode except that this is not\n+   --  affected by errors.\n \n    Optimization_Level : Int;\n    pragma Import (C, Optimization_Level, \"optimize\");\n@@ -934,7 +932,7 @@ package Opt is\n \n    Overflow_Checks_Unsuppressed : Boolean := False;\n    --  GNAT\n-   --  Set to True if at least one pragma Unsuppress\n+   --  Set to True if at least one occurrence of pragma Unsuppress\n    --  (All_Checks|Overflow_Checks) has been processed.\n \n    Persistent_BSS_Mode : Boolean := False;\n@@ -974,20 +972,20 @@ package Opt is\n    type Usage is (Unknown, Not_In_Use, In_Use);\n    Project_File_In_Use : Usage := Unknown;\n    --  GNAT\n-   --  Indicates if a project file is used or not.\n-   --  Set to In_Use by the first SFNP pragma.\n+   --  Indicates if a project file is used or not. Set to In_Use by the first\n+   --  SFNP pragma.\n \n    Queuing_Policy : Character := ' ';\n    --  GNAT, GNATBIND\n-   --  Set to ' ' for the default case (no queuing policy specified).\n-   --  Reset to first character (uppercase) of locking policy name if a valid\n+   --  Set to ' ' for the default case (no queuing policy specified). Reset to\n+   --  first character (uppercase) of locking policy name if a valid\n    --  Queuing_Policy pragma is encountered.\n \n    Queuing_Policy_Sloc : Source_Ptr := No_Location;\n    --  GNAT, GNATBIND\n-   --  Remember location of previous Queuing_Policy pragma. This is used\n-   --  for inconsistency error messages. A value of System_Location is\n-   --  used if the policy is set in package System.\n+   --  Remember location of previous Queuing_Policy pragma. This is used for\n+   --  inconsistency error messages. A value of System_Location is used if the\n+   --  policy is set in package System.\n \n    Quiet_Output : Boolean := False;\n    --  GNATMAKE, GNATCLEAN, GPRMAKE, GPRBUILD, GPRCLEAN\n@@ -1014,17 +1012,17 @@ package Opt is\n \n    Search_Directory_Present : Boolean := False;\n    --  GNAT\n-   --  Set to True when argument is -I. Reset to False when next argument,\n-   --  a search directory path is taken into account. Note that this is\n-   --  quite different from other switches in this section in that it is\n-   --  only set in a transitory manner as a result of scanning a -I switch\n-   --  with no file name, and if set, is an indication that the next argument\n-   --  is to be treated as a file name.\n+   --  Set to True when argument is -I. Reset to False when next argument, a\n+   --  search directory path is taken into account. Note that this is quite\n+   --  different from other switches in this section in that it is only set in\n+   --  a transitory manner as a result of scanning a -I switch with no file\n+   --  name, and if set, is an indication that the next argument is to be\n+   --  treated as a file name.\n \n    Sec_Stack_Used : Boolean := False;\n    --  GNAT, GBATBIND\n-   --  Set True if generated code uses the System.Secondary_Stack package.\n-   --  For the binder, set if any unit uses the secondary stack package.\n+   --  Set True if generated code uses the System.Secondary_Stack package. For\n+   --  the binder, set if any unit uses the secondary stack package.\n \n    Setup_Projects : Boolean := False;\n    --  GNAT DRIVER\n@@ -1033,9 +1031,9 @@ package Opt is\n \n    Shared_Libgnat : Boolean;\n    --  GNATBIND\n-   --  Set to True if a shared libgnat is requested by using the -shared\n-   --  option for GNATBIND and to False when using the -static option. The\n-   --  value of this flag is set by Gnatbind.Scan_Bind_Arg.\n+   --  Set to True if a shared libgnat is requested by using the -shared option\n+   --  for GNATBIND and to False when using the -static option. The value of\n+   --  this flag is set by Gnatbind.Scan_Bind_Arg.\n \n    Sprint_Line_Limit : Nat := 72;\n    --  Limit values for chopping long lines in Sprint output, can be reset\n@@ -1052,9 +1050,9 @@ package Opt is\n \n    Style_Check : Boolean := False;\n    --  GNAT\n-   --  Set True to perform style checks. Activates checks carried out\n-   --  in package Style (see body of this package for details of checks)\n-   --  This flag is set True by either the -gnatg or -gnaty switches.\n+   --  Set True to perform style checks. Activates checks carried out in\n+   --  package Style (see body of this package for details of checks) This\n+   --  flag is set True by either the -gnatg or -gnaty switches.\n \n    Suppress_All_Inlining : Boolean := False;\n    --  GNAT\n@@ -1113,9 +1111,9 @@ package Opt is\n    Tagged_Type_Expansion : Boolean := True;\n    --  GNAT\n    --  Set True if tagged types and interfaces should be expanded by the\n-   --  front-end. If False, the original tree is left unexpanded for\n-   --  tagged types and dispatching calls, assuming the underlying target\n-   --  supports it (e.g. case of JVM).\n+   --  front-end. If False, the original tree is left unexpanded for tagged\n+   --  types and dispatching calls, assuming the underlying target supports\n+   --  it (e.g. in the JVM case).\n \n    Task_Dispatching_Policy : Character := ' ';\n    --  GNAT, GNATBIND"}, {"sha": "b29082d90e590b032d461e4d6463d1b642c31f7c", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "patch": "@@ -1176,6 +1176,8 @@ package body Prj.Conf is\n       Name   : Name_Id;\n       Naming : Project_Node_Id;\n \n+   --  Start of processing for Add_Default_GNAT_Naming_Scheme\n+\n    begin\n       if Config_File = Empty_Node then\n \n@@ -1186,6 +1188,7 @@ package body Prj.Conf is\n          Name := Name_Find;\n \n          --  An invalid project name to avoid conflicts with user-created ones\n+\n          Name_Len := 5;\n          Name_Buffer (1 .. Name_Len) := \"_auto\";\n \n@@ -1215,8 +1218,8 @@ package body Prj.Conf is\n             Create_Attribute (Name_Library_Auto_Init_Supported, \"false\");\n          end if;\n \n-         --  Setup Ada support (Ada is the default language here, since this is\n-         --  only called when no config file existed initially, ie for\n+         --  Setup Ada support (Ada is the default language here, since this\n+         --  is only called when no config file existed initially, ie for\n          --  gnatmake).\n \n          Create_Attribute (Name_Default_Language, \"ada\");\n@@ -1234,7 +1237,6 @@ package body Prj.Conf is\n               (Project                => Config_File,\n                In_Tree                => Project_Tree,\n                Backward_Compatibility => False);\n-\n          end if;\n       end if;\n    end Add_Default_GNAT_Naming_Scheme;"}, {"sha": "b070847c89ab22ca7ded9fbc343a4b880005fcd3", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "patch": "@@ -126,8 +126,11 @@ package body Prj.Env is\n \n       Dummy : Boolean := False;\n \n+   --  Start of processing for Ada_Include_Path\n+\n    begin\n       if Recursive then\n+\n          --  If it is the first time we call this function for\n          --  this project, compute the source path\n \n@@ -161,7 +164,7 @@ package body Prj.Env is\n      (Project             : Project_Id;\n       Including_Libraries : Boolean := True) return String_Access\n    is\n-      Buffer : String_Access;\n+      Buffer      : String_Access;\n       Buffer_Last : Natural := 0;\n \n       procedure Add (Project : Project_Id; Dummy : in out Boolean);\n@@ -186,6 +189,7 @@ package body Prj.Env is\n \n       procedure For_All_Projects is\n         new For_Every_Project_Imported (Boolean, Add);\n+\n       Dummy : Boolean := False;\n \n    --  Start of processing for Ada_Objects_Path\n@@ -899,7 +903,8 @@ package body Prj.Env is\n    procedure Create_New_Path_File\n      (In_Tree   : Project_Tree_Ref;\n       Path_FD   : out File_Descriptor;\n-      Path_Name : out Path_Name_Type) is\n+      Path_Name : out Path_Name_Type)\n+   is\n    begin\n       Create_Temp_File (In_Tree, Path_FD, Path_Name, \"path file\");\n    end Create_New_Path_File;"}, {"sha": "8098a3a23b12d13b43cedf2469617f9f133a1e3a", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "patch": "@@ -244,6 +244,7 @@ package body Prj.Ext is\n       if Add_Default_Dir then\n          declare\n             Prefix : String_Ptr := Sdefault.Search_Dir_Prefix;\n+\n          begin\n             if Prefix = null then\n                Prefix := new String'(Executable_Prefix_Path);"}, {"sha": "82cac6bb31b2edbf09cb04b10c9751209a8bf909", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "patch": "@@ -287,10 +287,9 @@ package body Prj.Nmsc is\n       Data          : Tree_Processing_Data);\n    --  Output an error message. If Data.Error_Report is null, simply call\n    --  Prj.Err.Error_Msg. Otherwise, disregard Flag_Location and use\n-   --  Error_Report.\n-   --  If Msg starts with \"?\", this is a warning, and Warning: is adding at the\n-   --  beginning. If Msg starts with \"<\", see comment\n-   --  for Err_Vars.Error_Msg_Warn\n+   --  Error_Report. If Msg starts with \"?\", this is a warning, and the\n+   --  string \"Warning :\" is adding at the beginning. If Msg starts with \"<\",\n+   --  see comment for Err_Vars.Error_Msg_Warn\n \n    procedure Search_Directories\n      (Project         : in out Project_Processing_Data;\n@@ -4155,7 +4154,7 @@ package body Prj.Nmsc is\n                      while Prj.Element (Iter) /= No_Source\n                        and then\n                          (Prj.Element (Iter).Unit = null\n-                          or else Prj.Element (Iter).Unit.Name /= Unit)\n+                           or else Prj.Element (Iter).Unit.Name /= Unit)\n                      loop\n                         Next (Iter);\n                      end loop;"}, {"sha": "79a34c6ca6f446212005dfa6dec0669035121f93", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "patch": "@@ -453,13 +453,14 @@ package body Prj.Proc is\n       Index : Name_Id) return Name_Id\n    is\n       Lower : Boolean;\n+\n    begin\n       Get_Name_String (Index);\n       Lower := Case_Insensitive (Attr, Tree);\n \n       --  The index is always case insensitive if it does not include any dot.\n       --  ??? Why not use the properties from prj-attr, simply, maybe because\n-      --  we don't know whether we have a file as an index ?\n+      --  we don't know whether we have a file as an index?\n \n       if not Lower then\n          Lower := True;"}, {"sha": "1f15c80b27b5087d18ad68305ad253c53ea17ef9", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "patch": "@@ -2877,6 +2877,7 @@ package body Prj.Tree is\n       Real_Parent          : Project_Node_Id;\n       New_Decl, Decl, Next : Project_Node_Id;\n       Last, L              : Project_Node_Id;\n+\n    begin\n       if Kind_Of (Expr, Tree) /= N_Declarative_Item then\n          New_Decl := Default_Project_Node (Tree, N_Declarative_Item);\n@@ -2900,17 +2901,18 @@ package body Prj.Tree is\n             Next := Next_Declarative_Item (Decl, Tree);\n             exit when Next = Empty_Node\n               or else\n-              (Add_Before_First_Pkg\n-               and then Kind_Of (Current_Item_Node (Next, Tree), Tree)\n-                 = N_Package_Declaration)\n+               (Add_Before_First_Pkg\n+                 and then Kind_Of (Current_Item_Node (Next, Tree), Tree) =\n+                                                        N_Package_Declaration)\n               or else\n-              (Add_Before_First_Case\n-               and then Kind_Of (Current_Item_Node (Next, Tree), Tree)\n-                 = N_Case_Construction);\n+               (Add_Before_First_Case\n+                 and then Kind_Of (Current_Item_Node (Next, Tree), Tree) =\n+                                                        N_Case_Construction);\n             Decl := Next;\n          end loop;\n \n          --  In case Expr is in fact a range of declarative items\n+\n          Last := New_Decl;\n          loop\n             L := Next_Declarative_Item (Last, Tree);\n@@ -2919,6 +2921,7 @@ package body Prj.Tree is\n          end loop;\n \n          --  In case Expr is in fact a range of declarative items\n+\n          Last := New_Decl;\n          loop\n             L := Next_Declarative_Item (Last, Tree);\n@@ -2937,8 +2940,7 @@ package body Prj.Tree is\n \n    function Create_Literal_String\n      (Str  : Namet.Name_Id;\n-      Tree : Project_Node_Tree_Ref)\n-      return Project_Node_Id\n+      Tree : Project_Node_Tree_Ref) return Project_Node_Id\n    is\n       Node : Project_Node_Id;\n    begin\n@@ -2957,7 +2959,7 @@ package body Prj.Tree is\n       Tree : Project_Node_Tree_Ref) return Project_Node_Id\n    is\n       Expr : constant Project_Node_Id :=\n-        Default_Project_Node (Tree, N_Expression, Single);\n+               Default_Project_Node (Tree, N_Expression, Single);\n    begin\n       Set_First_Term (Expr, Tree, Default_Project_Node (Tree, N_Term, Single));\n       Set_Current_Term (First_Term (Expr, Tree), Tree, Node);\n@@ -2975,6 +2977,7 @@ package body Prj.Tree is\n    is\n       Pack : Project_Node_Id;\n       N    : Name_Id;\n+\n    begin\n       Name_Len := Pkg'Length;\n       Name_Buffer (1 .. Name_Len) := Pkg;\n@@ -2983,7 +2986,6 @@ package body Prj.Tree is\n       --  Check if the package already exists\n \n       Pack := First_Package_Of (Project, Tree);\n-\n       while Pack /= Empty_Node loop\n          if Prj.Tree.Name_Of (Pack, Tree) = N then\n             return Pack;\n@@ -3002,6 +3004,7 @@ package body Prj.Tree is\n       Set_Package_Id_Of (Pack, Tree, Package_Node_Id_Of (N));\n \n       --  Add it to the list of packages\n+\n       Set_Next_Package_In_Project\n         (Pack, Tree, First_Package_Of (Project, Tree));\n       Set_First_Package_Of (Project, Tree, Pack);\n@@ -3019,16 +3022,18 @@ package body Prj.Tree is\n      (Tree       : Project_Node_Tree_Ref;\n       Prj_Or_Pkg : Project_Node_Id;\n       Name       : Name_Id;\n-      Index_Name : Name_Id := No_Name;\n+      Index_Name : Name_Id       := No_Name;\n       Kind       : Variable_Kind := List;\n-      At_Index   : Integer := 0) return Project_Node_Id\n+      At_Index   : Integer       := 0) return Project_Node_Id\n    is\n       Node : constant Project_Node_Id :=\n-        Default_Project_Node (Tree, N_Attribute_Declaration, Kind);\n+               Default_Project_Node (Tree, N_Attribute_Declaration, Kind);\n+\n       Case_Insensitive : Boolean;\n \n       Pkg      : Package_Node_Id;\n       Start_At : Attribute_Node_Id;\n+\n    begin\n       Set_Name_Of (Node, Tree, Name);\n "}, {"sha": "46cfcf14a21bf83b7bfa4b894044ffb601fc424a", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 22, "deletions": 26, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2815d8bd51caf55b3e7682f81bf9ca5d44d544/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=3c2815d8bd51caf55b3e7682f81bf9ca5d44d544", "patch": "@@ -599,38 +599,34 @@ package Prj.Tree is\n       Full_Path      : Path_Name_Type;\n       Is_Config_File : Boolean := False) return Project_Node_Id;\n    --  Create a new node for a project and register it in the tree so that it\n-   --  can be retrieved later on\n+   --  can be retrieved later on.\n \n    function Create_Package\n      (Tree    : Project_Node_Tree_Ref;\n       Project : Project_Node_Id;\n       Pkg     : String) return Project_Node_Id;\n    --  Create a new package in Project. If the package already exists, it is\n-   --  returned.\n-   --  The name of the package *must* be lower-cases, or none of its attributes\n-   --  will be recognized.\n+   --  returned. The name of the package *must* be lower-cases, or none of its\n+   --  attributes will be recognized.\n \n    function Create_Attribute\n      (Tree       : Project_Node_Tree_Ref;\n       Prj_Or_Pkg : Project_Node_Id;\n       Name       : Name_Id;\n-      Index_Name : Name_Id := No_Name;\n+      Index_Name : Name_Id       := No_Name;\n       Kind       : Variable_Kind := List;\n-      At_Index   : Integer := 0) return Project_Node_Id;\n-   --  Create a new attribute.\n-   --  The new declaration is added at the end of the declarative item list for\n-   --  Prj_Or_Pkg (a project or a package), but before any package\n-   --  declaration). No addition is done if Prj_Or_Pkg is Empty_Node.\n-   --  If Index_Name is not \"\", then if creates an attribute value for a\n-   --  specific index.\n-   --  At_Index is used for the \" at <idx>\" in the naming exceptions.\n-   --  Use Set_Expression_Of to set the value of the attribute (in which case\n-   --  Enclose_In_Expression might be useful)\n+      At_Index   : Integer       := 0) return Project_Node_Id;\n+   --  Create a new attribute. The new declaration is added at the end of the\n+   --  declarative item list for Prj_Or_Pkg (a project or a package), but\n+   --  before any package declaration). No addition is done if Prj_Or_Pkg is\n+   --  Empty_Node. If Index_Name is not \"\", then if creates an attribute value\n+   --  for a specific index. At_Index is used for the \" at <idx>\" in the naming\n+   --  exceptions. Use Set_Expression_Of to set the value of the attribute (in\n+   --  which case Enclose_In_Expression might be useful)\n \n    function Create_Literal_String\n      (Str  : Namet.Name_Id;\n-      Tree : Project_Node_Tree_Ref)\n-      return Project_Node_Id;\n+      Tree : Project_Node_Tree_Ref) return Project_Node_Id;\n    --  Create a literal string whose value is Str\n \n    procedure Add_At_End\n@@ -639,15 +635,14 @@ package Prj.Tree is\n       Expr                  : Project_Node_Id;\n       Add_Before_First_Pkg  : Boolean := False;\n       Add_Before_First_Case : Boolean := False);\n-   --  Add a new declarative item in the list in Parent.\n-   --  This new declarative item will contain Expr (unless Expr is already a\n-   --  declarative item, in which case it is added directly to the list). The\n-   --  new item is inserted at the end of the list, unless Add_Before_First_Pkg\n-   --  is True. In the latter case, it is added just before the first case\n-   --  construction is seen, or before the first package (this assumes that all\n-   --  packages are found at the end of the project, which isn't true in the\n-   --  general case unless you have normalized the project to match this\n-   --  description).\n+   --  Add a new declarative item in the list in Parent. This new declarative\n+   --  item will contain Expr (unless Expr is already a declarative item, in\n+   --  which case it is added directly to the list). The new item is inserted\n+   --  at the end of the list, unless Add_Before_First_Pkg is True. In the\n+   --  latter case, it is added just before the first case construction is\n+   --  seen, or before the first package (this assumes that all packages are\n+   --  found at the end of the project, which isn't true in the general case\n+   --  unless you have normalized the project to match this description).\n \n    function Enclose_In_Expression\n      (Node : Project_Node_Id;\n@@ -660,6 +655,7 @@ package Prj.Tree is\n \n    --  The following procedures are part of the abstract interface of the\n    --  Project File tree.\n+\n    --  Each Set_* procedure is valid only for the same Project_Node_Kind\n    --  nodes as the corresponding query function above.\n    --  These are very low-level, and manipulate the tree itself directly. You"}]}