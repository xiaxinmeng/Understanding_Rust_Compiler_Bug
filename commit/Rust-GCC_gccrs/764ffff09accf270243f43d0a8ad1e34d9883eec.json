{"sha": "764ffff09accf270243f43d0a8ad1e34d9883eec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY0ZmZmZjA5YWNjZjI3MDI0M2Y0M2QwYThhZDFlMzRkOTg4M2VlYw==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2019-07-10T09:02:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-10T09:02:17Z"}, "message": "[Ada] Documentation of Img attribute out of date\n\n2019-07-10  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_rm/implementation_defined_attributes.rst: Add mention\n\tof 'Image attribute with 'Img's entry to mention additional\n\tadded 2012 usage of Obj'Image.\n\t* doc/gnat_rm/implementation_defined_pragmas.rst: Correct\n\tmispelling of Async_Writers.\n\t* gnat_rm.texi: Regenerate.\n\t* sem_prag.adb (Analyze_Pragma): Correct mispelling of\n\tAsync_Writers.\n\t* sem_util.adb (State_Has_Enabled_Property): Correct mispelling\n\tof Async_Writers.\n\nFrom-SVN: r273344", "tree": {"sha": "dbf1a1b44a5e6c2f84f8800b22b7110b00d2d326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbf1a1b44a5e6c2f84f8800b22b7110b00d2d326"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/764ffff09accf270243f43d0a8ad1e34d9883eec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/764ffff09accf270243f43d0a8ad1e34d9883eec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/764ffff09accf270243f43d0a8ad1e34d9883eec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/764ffff09accf270243f43d0a8ad1e34d9883eec/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ae0159eb46044545610b78fc4ea82427c45c568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ae0159eb46044545610b78fc4ea82427c45c568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ae0159eb46044545610b78fc4ea82427c45c568"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "9e9e19ddb1011d4a24f9ebe45503dd7397c82eb5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=764ffff09accf270243f43d0a8ad1e34d9883eec", "patch": "@@ -1,3 +1,16 @@\n+2019-07-10  Justin Squirek  <squirek@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_attributes.rst: Add mention\n+\tof 'Image attribute with 'Img's entry to mention additional\n+\tadded 2012 usage of Obj'Image.\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst: Correct\n+\tmispelling of Async_Writers.\n+\t* gnat_rm.texi: Regenerate.\n+\t* sem_prag.adb (Analyze_Pragma): Correct mispelling of\n+\tAsync_Writers.\n+\t* sem_util.adb (State_Has_Enabled_Property): Correct mispelling\n+\tof Async_Writers.\n+\n 2019-07-10  Simon Buist  <buist@adacore.com>\n \n \t* sem_util.ads (Child_Prefix): New constant."}, {"sha": "db75ea73d8b0e1380a32eb433cc31f82e26dd1c2", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_attributes.rst", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_attributes.rst?ref=764ffff09accf270243f43d0a8ad1e34d9883eec", "patch": "@@ -479,17 +479,17 @@ Attribute Img\n =============\n .. index:: Img\n \n-The ``Img`` attribute differs from ``Image`` in that it is applied\n-directly to an object, and yields the same result as\n-``Image`` for the subtype of the object.  This is convenient for\n-debugging:\n+The ``Img`` attribute differs from ``Image`` in that, while both can be\n+applied directly to an object, ``Img`` cannot be applied to types.\n+\n+Example usage of the attribute:\n \n .. code-block:: ada\n \n   Put_Line (\"X = \" & X'Img);\n \n \n-has the same meaning as the more verbose:\n+which has the same meaning as the more verbose:\n \n .. code-block:: ada\n "}, {"sha": "04b0def1a3a379166495f23b0e70b2f2285260e8", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=764ffff09accf270243f43d0a8ad1e34d9883eec", "patch": "@@ -719,7 +719,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Asynch_Readers [ (boolean_EXPRESSION) ];\n+  pragma Async_Readers [ (boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``Async_Readers`` in\n the SPARK 2014 Reference Manual, section 7.1.2.\n@@ -733,7 +733,7 @@ Syntax:\n \n .. code-block:: ada\n \n-  pragma Asynch_Writers [ (boolean_EXPRESSION) ];\n+  pragma Async_Writers [ (boolean_EXPRESSION) ];\n \n For the semantics of this pragma, see the entry for aspect ``Async_Writers`` in\n the SPARK 2014 Reference Manual, section 7.1.2."}, {"sha": "257c3948b8f43136a4f58b04ba6ae8d6dc25452b", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=764ffff09accf270243f43d0a8ad1e34d9883eec", "patch": "@@ -2104,7 +2104,7 @@ case, and it is recommended that these two options not be used together.\n Syntax:\n \n @example\n-pragma Asynch_Readers [ (boolean_EXPRESSION) ];\n+pragma Async_Readers [ (boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{Async_Readers} in\n@@ -2118,7 +2118,7 @@ the SPARK 2014 Reference Manual, section 7.1.2.\n Syntax:\n \n @example\n-pragma Asynch_Writers [ (boolean_EXPRESSION) ];\n+pragma Async_Writers [ (boolean_EXPRESSION) ];\n @end example\n \n For the semantics of this pragma, see the entry for aspect @code{Async_Writers} in\n@@ -10713,16 +10713,16 @@ indicates whether or not the corresponding actual type has discriminants.\n \n @geindex Img\n \n-The @code{Img} attribute differs from @code{Image} in that it is applied\n-directly to an object, and yields the same result as\n-@code{Image} for the subtype of the object.  This is convenient for\n-debugging:\n+The @code{Img} attribute differs from @code{Image} in that, while both can be\n+applied directly to an object, @code{Img} cannot be applied to types.\n+\n+Example usage of the attribute:\n \n @example\n Put_Line (\"X = \" & X'Img);\n @end example\n \n-has the same meaning as the more verbose:\n+which has the same meaning as the more verbose:\n \n @example\n Put_Line (\"X = \" & T'Image (X));"}, {"sha": "969820ee6f28cd6679bfc2eeb998a2870f9c4c49", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=764ffff09accf270243f43d0a8ad1e34d9883eec", "patch": "@@ -13620,8 +13620,8 @@ package body Sem_Prag is\n          -- Async_Readers/Async_Writers/Effective_Reads/Effective_Writes --\n          ------------------------------------------------------------------\n \n-         --  pragma Asynch_Readers   [ (boolean_EXPRESSION) ];\n-         --  pragma Asynch_Writers   [ (boolean_EXPRESSION) ];\n+         --  pragma Async_Readers    [ (boolean_EXPRESSION) ];\n+         --  pragma Async_Writers    [ (boolean_EXPRESSION) ];\n          --  pragma Effective_Reads  [ (boolean_EXPRESSION) ];\n          --  pragma Effective_Writes [ (boolean_EXPRESSION) ];\n "}, {"sha": "b6a31e6a9c846666270db82133c4e5b8f68a7464", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764ffff09accf270243f43d0a8ad1e34d9883eec/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=764ffff09accf270243f43d0a8ad1e34d9883eec", "patch": "@@ -10813,8 +10813,8 @@ package body Sem_Util is\n          --  Simple option Synchronous\n          --\n          --    enables                disables\n-         --       Asynch_Readers         Effective_Reads\n-         --       Asynch_Writers         Effective_Writes\n+         --       Async_Readers          Effective_Reads\n+         --       Async_Writers          Effective_Writes\n          --\n          --  Note that both forms of External have higher precedence than\n          --  Synchronous (SPARK RM 7.1.4(9))."}]}