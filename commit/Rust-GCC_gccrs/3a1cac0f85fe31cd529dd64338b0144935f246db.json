{"sha": "3a1cac0f85fe31cd529dd64338b0144935f246db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ExY2FjMGY4NWZlMzFjZDUyOWRkNjQzMzhiMDE0NDkzNWYyNDZkYg==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2004-01-23T04:42:39Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-01-23T04:42:39Z"}, "message": "compat.exp: Add LD_LIBRARY_PATH_32/64 for Solaris.\n\n2004-01-23  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* g++.dg/compat/compat.exp: Add LD_LIBRARY_PATH_32/64 for Solaris.\n\t* lib/g77.exp: Likewise.\n\t* lib/objc.exp: Likewise.\n\t* lib/g++.exp: Likewise.\n\nFrom-SVN: r76397", "tree": {"sha": "c85ea4d1d0d5624ccfc16624ea0935a03ed75ae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c85ea4d1d0d5624ccfc16624ea0935a03ed75ae0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a1cac0f85fe31cd529dd64338b0144935f246db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a1cac0f85fe31cd529dd64338b0144935f246db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a1cac0f85fe31cd529dd64338b0144935f246db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a1cac0f85fe31cd529dd64338b0144935f246db/comments", "author": null, "committer": null, "parents": [{"sha": "95f576c14da0be468a267682469312038430a9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95f576c14da0be468a267682469312038430a9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95f576c14da0be468a267682469312038430a9e4"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "20b71833ae3907b3e4680eda8c943c68a32b59be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a1cac0f85fe31cd529dd64338b0144935f246db", "patch": "@@ -1,3 +1,10 @@\n+2004-01-23  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* g++.dg/compat/compat.exp: Add LD_LIBRARY_PATH_32/64 for Solaris.\n+\t* lib/g77.exp: Likewise.\n+\t* lib/objc.exp: Likewise.\n+\t* lib/g++.exp: Likewise.\n+\n 2004-01-22  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/struct-by-value-2.c: New test."}, {"sha": "df8dac96992cb58c448e3e81f0945b05e724d1da", "filename": "gcc/testsuite/g++.dg/compat/compat.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fcompat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fcompat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcompat%2Fcompat.exp?ref=3a1cac0f85fe31cd529dd64338b0144935f246db", "patch": "@@ -49,6 +49,9 @@ proc compat-fix-library-path { } {\n \tsetenv  SHLIB_PATH          $ld_library_path\n \tsetenv  LD_LIBRARYN32_PATH  $ld_library_path\n \tsetenv  LD_LIBRARY64_PATH   $ld_library_path\n+\tsetenv  LD_LIBRARY_PATH_32  $ld_library_path\n+\tsetenv  LD_LIBRARY_PATH_64  $ld_library_path\n+\tsetenv  DYLD_LIBRARY_PATH   $ld_library_path\n     }\n }\n "}, {"sha": "a9f99fa26d85f35b78a173336c9fff6ee6ee05a9", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=3a1cac0f85fe31cd529dd64338b0144935f246db", "patch": "@@ -170,14 +170,18 @@ proc g++_link_flags { paths } {\n     # called LD_LIBRARYN32_PATH (for the N32 ABI) and LD_LIBRARY64_PATH\n     # (for the 64-bit ABI).  The right way to do this would be to modify\n     # unix.exp -- but that's not an option since it's part of DejaGNU\n-    # proper, so we do it here.  We really only need to do \n-    # this on IRIX, but it shouldn't hurt to do it anywhere else.\n+    # proper, so we do it here.\n+    # The same applies to Darwin (DYLD_LIBRARY_PATH), Solaris 32 bit\n+    # (LD_LIBRARY_PATH_32), Solaris 64 bit (LD_LIBRARY_PATH_64), and HP-UX\n+    # (SHLIB_PATH).\n     # Doing this does cause trouble when testing cross-compilers.\n     if {![is_remote target]} {\n \tsetenv  LD_LIBRARY_PATH     $ld_library_path\n \tsetenv  SHLIB_PATH          $ld_library_path\n \tsetenv  LD_LIBRARYN32_PATH  $ld_library_path\n \tsetenv  LD_LIBRARY64_PATH   $ld_library_path\n+\tsetenv  LD_LIBRARY_PATH_32  $ld_library_path\n+\tsetenv  LD_LIBRARY_PATH_64  $ld_library_path\n \tsetenv  DYLD_LIBRARY_PATH   $ld_library_path\n     }\n "}, {"sha": "c722c20c31a4b7c986c74c2093550b454cb7c9b5", "filename": "gcc/testsuite/lib/g77.exp", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2Flib%2Fg77.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2Flib%2Fg77.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg77.exp?ref=3a1cac0f85fe31cd529dd64338b0144935f246db", "patch": "@@ -114,12 +114,16 @@ proc g77_link_flags { paths } {\n     # called LD_LIBRARYN32_PATH (for the N32 ABI) and LD_LIBRARY64_PATH\n     # (for the 64-bit ABI).  The right way to do this would be to modify\n     # unix.exp -- but that's not an option since it's part of DejaGNU\n-    # proper, so we do it here.  We really only need to do \n-    # this on IRIX, but it shouldn't hurt to do it anywhere else.\n+    # proper, so we do it here.\n+    # The same applies to Darwin (DYLD_LIBRARY_PATH), Solaris 32 bit\n+    # (LD_LIBRARY_PATH_32), Solaris 64 bit (LD_LIBRARY_PATH_64), and HP-UX\n+    # (SHLIB_PATH).\n     setenv  LD_LIBRARY_PATH     $ld_library_path\n     setenv  SHLIB_PATH          $ld_library_path\n     setenv  LD_LIBRARYN32_PATH  $ld_library_path\n     setenv  LD_LIBRARY64_PATH   $ld_library_path\n+    setenv  LD_LIBRARY_PATH_32  $ld_library_path\n+    setenv  LD_LIBRARY_PATH_64  $ld_library_path\n     setenv  DYLD_LIBRARY_PATH   $ld_library_path\n \n     return \"$flags\""}, {"sha": "1b6c10d60fec80f29023d99167ddd78d22fb1dfb", "filename": "gcc/testsuite/lib/objc.exp", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1cac0f85fe31cd529dd64338b0144935f246db/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc.exp?ref=3a1cac0f85fe31cd529dd64338b0144935f246db", "patch": "@@ -188,13 +188,17 @@ proc objc_target_compile { source dest type options } {\n     # called LD_LIBRARYN32_PATH (for the N32 ABI) and LD_LIBRARY64_PATH\n     # (for the 64-bit ABI).  The right way to do this would be to modify\n     # unix.exp -- but that's not an option since it's part of DejaGNU\n-    # proper, so we do it here.  We really only need to do \n-    # this on IRIX, but it shouldn't hurt to do it anywhere else.\n+    # proper, so we do it here.\n+    # The same applies to Darwin (DYLD_LIBRARY_PATH), Solaris 32 bit\n+    # (LD_LIBRARY_PATH_32), Solaris 64 bit (LD_LIBRARY_PATH_64), and HP-UX\n+    # (SHLIB_PATH).\n     setenv  LD_LIBRARY_PATH     $ld_library_path\n     setenv  SHLIB_PATH          $ld_library_path\n     setenv  LD_LIBRARYN32_PATH  $ld_library_path\n     setenv  LD_LIBRARY64_PATH   $ld_library_path\n-    setenv  DYLD_LIBRARY_PATH   $ld_library_path \n+    setenv  LD_LIBRARY_PATH_32  $ld_library_path\n+    setenv  LD_LIBRARY_PATH_64  $ld_library_path\n+    setenv  DYLD_LIBRARY_PATH   $ld_library_path\n \n     return [target_compile $source $dest $type $options]\n }"}]}