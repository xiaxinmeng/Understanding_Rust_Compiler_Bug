{"sha": "0de7e22ccb83d7e821af71df007b932fa3143cce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRlN2UyMmNjYjgzZDdlODIxYWY3MWRmMDA3YjkzMmZhMzE0M2NjZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-02-02T16:07:24Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-02-02T16:07:24Z"}, "message": "re PR target/67032 (Geode optimizations incorrectly return -NaN)\n\n\tPR target/67032\n\t* config/i386/i386.c (geode_cost): Increase cost of MMX and SSE moves.\n\nFrom-SVN: r233079", "tree": {"sha": "ba920be77f81449be0f19db2fe9b8721cb9abe1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba920be77f81449be0f19db2fe9b8721cb9abe1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0de7e22ccb83d7e821af71df007b932fa3143cce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de7e22ccb83d7e821af71df007b932fa3143cce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0de7e22ccb83d7e821af71df007b932fa3143cce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de7e22ccb83d7e821af71df007b932fa3143cce/comments", "author": null, "committer": null, "parents": [{"sha": "c7088aeac8250400734696d8bb606764880ab5c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7088aeac8250400734696d8bb606764880ab5c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7088aeac8250400734696d8bb606764880ab5c3"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "abf7c62be0d530de43b596cda2b8fa968862e113", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de7e22ccb83d7e821af71df007b932fa3143cce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de7e22ccb83d7e821af71df007b932fa3143cce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0de7e22ccb83d7e821af71df007b932fa3143cce", "patch": "@@ -1,3 +1,8 @@\n+2016-02-02  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/67032\n+\t* config/i386/i386.c (geode_cost): Increase cost of MMX and SSE moves.\n+\n 2016-02-02  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \t* config/avr/avr.c (avr_option_override): Set\n@@ -84,7 +89,7 @@\n \n \tPR tree-optimization/67921\n \t* fold-const.c (split_tree): New parameters.  Convert pointer\n-\ttype variable part to proper type before negating. \n+\ttype variable part to proper type before negating.\n \t(fold_binary_loc): Pass new arguments to split_tree.\n \n 2016-02-01  Nathan Sidwell  <nathan@codesourcery.com>"}, {"sha": "dbef1fcd530d96d39bf04d1bd940e983608fbd7c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de7e22ccb83d7e821af71df007b932fa3143cce/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de7e22ccb83d7e821af71df007b932fa3143cce/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0de7e22ccb83d7e821af71df007b932fa3143cce", "patch": "@@ -595,17 +595,17 @@ struct processor_costs geode_cost = {\n   {4, 6, 6},\t\t\t\t/* cost of storing fp registers\n \t\t\t\t\t   in SFmode, DFmode and XFmode */\n \n-  1,\t\t\t\t\t/* cost of moving MMX register */\n-  {1, 1},\t\t\t\t/* cost of loading MMX registers\n+  2,\t\t\t\t\t/* cost of moving MMX register */\n+  {2, 2},\t\t\t\t/* cost of loading MMX registers\n \t\t\t\t\t   in SImode and DImode */\n-  {1, 1},\t\t\t\t/* cost of storing MMX registers\n+  {2, 2},\t\t\t\t/* cost of storing MMX registers\n \t\t\t\t\t   in SImode and DImode */\n-  1,\t\t\t\t\t/* cost of moving SSE register */\n-  {1, 1, 1},\t\t\t\t/* cost of loading SSE registers\n+  2,\t\t\t\t\t/* cost of moving SSE register */\n+  {2, 2, 8},\t\t\t\t/* cost of loading SSE registers\n \t\t\t\t\t   in SImode, DImode and TImode */\n-  {1, 1, 1},\t\t\t\t/* cost of storing SSE registers\n+  {2, 2, 8},\t\t\t\t/* cost of storing SSE registers\n \t\t\t\t\t   in SImode, DImode and TImode */\n-  1,\t\t\t\t\t/* MMX or SSE register to integer */\n+  3,\t\t\t\t\t/* MMX or SSE register to integer */\n   64,\t\t\t\t\t/* size of l1 cache.  */\n   128,\t\t\t\t\t/* size of l2 cache.  */\n   32,\t\t\t\t\t/* size of prefetch block */"}]}