{"sha": "1651ab853fdd974a1405089804c648e392a3ac72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY1MWFiODUzZmRkOTc0YTE0MDUwODk4MDRjNjQ4ZTM5MmEzYWM3Mg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-10-17T14:27:53Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-10-17T14:27:53Z"}, "message": "genrecog.c (write_switch): Return the first condition that needs a label.\n\n* genrecog.c (write_switch): Return the first condition that needs a\nlabel.\n\nFrom-SVN: r36903", "tree": {"sha": "d2ecd0c60ed67c2846e74417898a4295251bce67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2ecd0c60ed67c2846e74417898a4295251bce67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1651ab853fdd974a1405089804c648e392a3ac72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1651ab853fdd974a1405089804c648e392a3ac72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1651ab853fdd974a1405089804c648e392a3ac72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1651ab853fdd974a1405089804c648e392a3ac72/comments", "author": null, "committer": null, "parents": [{"sha": "a9117427517bd43efbde79ff65637f6560e36707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9117427517bd43efbde79ff65637f6560e36707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9117427517bd43efbde79ff65637f6560e36707"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "f29d3b9b2bd02659d2b07dbb507956c60a521c2b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1651ab853fdd974a1405089804c648e392a3ac72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1651ab853fdd974a1405089804c648e392a3ac72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1651ab853fdd974a1405089804c648e392a3ac72", "patch": "@@ -1,3 +1,8 @@\n+2000-10-17  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* genrecog.c (write_switch): Return the first condition that needs a\n+\tlabel.\n+\n 2000-10-17  Bernd Schmidt  <bernds@redhat.co.uk>\n \n \t* c-tree.h (warn_sequence_point): Move declaration to..."}, {"sha": "d14379889475f872e50433e563ece5f3d567d753", "filename": "gcc/genrecog.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1651ab853fdd974a1405089804c648e392a3ac72/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1651ab853fdd974a1405089804c648e392a3ac72/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=1651ab853fdd974a1405089804c648e392a3ac72", "patch": "@@ -1650,6 +1650,7 @@ write_switch (start, depth)\n {\n   struct decision *p = start;\n   enum decision_type type = p->tests->type;\n+  struct decision *needs_label = NULL;\n \n   /* If we have two or more nodes in sequence that test the same one\n      thing, we may be able to use a switch statement.  */\n@@ -1674,6 +1675,9 @@ write_switch (start, depth)\n       code = p->tests->u.code;\n       do \n \t{\n+\t  if (p != start && p->need_label && needs_label == NULL)\n+\t    needs_label = p;\n+\n \t  printf (\"    case \");\n \t  print_code (code);\n \t  printf (\":\\n      goto L%d;\\n\", p->success.first->number);\n@@ -1697,7 +1701,10 @@ write_switch (start, depth)\n \t we don't actually write the test here, as it gets kinda messy.\n \t It is trivial to leave this to later by telling our caller that\n \t we only processed the CODE tests.  */\n-      ret = p;\n+      if (needs_label != NULL)\n+\tret = needs_label;\n+      else\n+\tret = p;\n \n       while (p && p->tests->type == DT_pred\n \t     && p->tests->u.pred.index >= 0)\n@@ -1774,6 +1781,9 @@ write_switch (start, depth)\n \n       do\n \t{\n+\t  if (p != start && p->need_label && needs_label == NULL)\n+\t    needs_label = p;\n+\n \t  printf (\"    case \");\n \t  switch (type)\n \t    {\n@@ -1800,7 +1810,7 @@ write_switch (start, depth)\n       \n       printf (\"    default:\\n      break;\\n    }\\n\");\n \n-      return p;\n+      return needs_label != NULL ? needs_label : p;\n     }\n   else\n     {"}]}