{"sha": "5a575f77fde8efa894e6eefa20ca7e96881fe0e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1NzVmNzdmZGU4ZWZhODk0ZTZlZWZhMjBjYTdlOTY4ODFmZTBlMQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2005-12-18T16:06:55Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-12-18T16:06:55Z"}, "message": "re PR rtl-optimization/21041 (ICE: output_operand: Cannot decompose address)\n\n\tPR rtl-optimization/21041\n\t* reload.c (find_reloads_subreg_address): Replace paradoxical\n\tsubreg of MEM by widened access only if the resulting memory\n\tis properly aligned, even on !STRICT_ALIGNMENT targets.\n\n\tPR rtl-optimization/21041\n\t* gcc.dg/pr21041.c: New test.\n\nFrom-SVN: r108760", "tree": {"sha": "3d046856da977e0859c1d1ed467582650d5b31e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d046856da977e0859c1d1ed467582650d5b31e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a575f77fde8efa894e6eefa20ca7e96881fe0e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a575f77fde8efa894e6eefa20ca7e96881fe0e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a575f77fde8efa894e6eefa20ca7e96881fe0e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a575f77fde8efa894e6eefa20ca7e96881fe0e1/comments", "author": null, "committer": null, "parents": [{"sha": "e75ea710dd6d61c9ed5b5200bd3d0f6132aa606a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75ea710dd6d61c9ed5b5200bd3d0f6132aa606a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e75ea710dd6d61c9ed5b5200bd3d0f6132aa606a"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "bf05ff9446159786cd65c2293e0483c03a1488e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a575f77fde8efa894e6eefa20ca7e96881fe0e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a575f77fde8efa894e6eefa20ca7e96881fe0e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a575f77fde8efa894e6eefa20ca7e96881fe0e1", "patch": "@@ -1,3 +1,10 @@\n+2005-12-18  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\tPR rtl-optimization/21041\n+\t* reload.c (find_reloads_subreg_address): Replace paradoxical\n+\tsubreg of MEM by widened access only if the resulting memory\n+\tis properly aligned, even on !STRICT_ALIGNMENT targets.\n+\n 2005-12-18  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* tree-cfg.c (tree_flow_call_edges_add): Check for empty basic blocks."}, {"sha": "2b61a8eded3f7a58322b3527e1649fce525c0f9c", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a575f77fde8efa894e6eefa20ca7e96881fe0e1/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a575f77fde8efa894e6eefa20ca7e96881fe0e1/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=5a575f77fde8efa894e6eefa20ca7e96881fe0e1", "patch": "@@ -5911,7 +5911,7 @@ find_reloads_subreg_address (rtx x, int force_replace, int opnum,\n \t      /* If this was a paradoxical subreg that we replaced, the\n \t\t resulting memory must be sufficiently aligned to allow\n \t\t us to widen the mode of the memory.  */\n-\t      if (outer_size > inner_size && STRICT_ALIGNMENT)\n+\t      if (outer_size > inner_size)\n \t\t{\n \t\t  rtx base;\n "}, {"sha": "417496112728ed00ccd0485d0e39accdae344ee0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a575f77fde8efa894e6eefa20ca7e96881fe0e1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a575f77fde8efa894e6eefa20ca7e96881fe0e1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a575f77fde8efa894e6eefa20ca7e96881fe0e1", "patch": "@@ -1,3 +1,8 @@\n+2005-12-18  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\tPR rtl-optimization/21041\n+\t* gcc.dg/pr21041.c: New test.\n+\n 2005-12-18  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* gcc.dg/20051201-1.c: New test."}, {"sha": "34ed14d1e8b40ee1ea5b29ad86a0bece74f1a68b", "filename": "gcc/testsuite/gcc.dg/pr21041.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a575f77fde8efa894e6eefa20ca7e96881fe0e1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr21041.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a575f77fde8efa894e6eefa20ca7e96881fe0e1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr21041.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr21041.c?ref=5a575f77fde8efa894e6eefa20ca7e96881fe0e1", "patch": "@@ -0,0 +1,42 @@\n+\n+/* { dg-do compile { target fpic } } */\n+/* { dg-options \"-O2 -fPIC\" } */\n+\n+struct args\n+{\n+  short int matrix[8][8];\n+  char **current;\n+};\n+\n+int test (struct args *args, char *init, int a, int b)\n+{\n+  int i, j, k;\n+\n+  if (!args || a > b || a < 0)\n+    return -1;\n+\n+  for (i = 0; i < 2; i++)\n+    {\n+      char *dest = *args->current;\n+      char *p = dest;\n+\n+      for (j = 0; j < 8; j++)\n+        *p++ = *init++;\n+\n+      for (k = 0; k < 8; k++)\n+        {\n+          short int *blockvals = &args->matrix[k][0];\n+          dest[0] += blockvals[0];\n+          dest[1] += blockvals[1];\n+          dest[2] += blockvals[2];\n+          dest[3] += blockvals[3];\n+          dest[4] += blockvals[4];\n+          dest[5] += blockvals[5];\n+          dest[6] += blockvals[6];\n+          dest[7] += blockvals[7];\n+       }\n+    }\n+\n+  return 1;\n+}\n+"}]}