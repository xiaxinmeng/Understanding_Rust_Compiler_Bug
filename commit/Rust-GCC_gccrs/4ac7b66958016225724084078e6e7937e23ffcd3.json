{"sha": "4ac7b66958016225724084078e6e7937e23ffcd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjN2I2Njk1ODAxNjIyNTcyNDA4NDA3OGU2ZTc5MzdlMjNmZmNkMw==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-09-05T10:45:07Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-09-14T06:28:56Z"}, "message": "[libgomp, nvptx] Add __sync_compare_and_swap_16\n\nAs reported here\n( https://gcc.gnu.org/pipermail/gcc-patches/2020-September/553070.html  ),\nwhen running test-case libgomp.c-c++-common/reduction-16.c for powerpc host\nwith nvptx accelerator, we run into:\n...\nunresolved symbol __sync_val_compare_and_swap_16\n...\n\nI can reproduce the problem on x86_64 with a trigger patch that:\n- initializes ix86_isa_flags2 to TARGET_ISA2_CX16\n- enables define_expand \"atomic_load<mode>\" in gcc/config/i386/sync.md\n  for TImode\n\nThe problem is that omp-expand.c generates atomic builtin calls based on\nchecks whether those are supported on the host, which forces the target to\nsupport these, even though those checks fail for the accelerator target.\n\nFix this by:\n- adding a __sync_val_compare_and_swap_16 in libgomp for nvptx,\n  which falls back onto libatomic's __atomic_compare_and_swap_16\n- adding -foffload=-latomic in the test-case\n\nTested libgomp on x86_64-linux with nvptx accelerator.\n\nTested libgomp with trigger patch on x86_64-linux with nvptx accelerator.\n\nlibgomp/ChangeLog:\n\n\t* config/nvptx/atomic.c: New file.  Add\n\t__sync_val_compare_and_swap_16.\n\t* testsuite/libgomp.c-c++-common/reduction-16.c: Add -latomic for\n\ttarget offload_target_nvptx.", "tree": {"sha": "47204c1ed494cf156f9f786f4956c587199e487b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47204c1ed494cf156f9f786f4956c587199e487b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ac7b66958016225724084078e6e7937e23ffcd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac7b66958016225724084078e6e7937e23ffcd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac7b66958016225724084078e6e7937e23ffcd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac7b66958016225724084078e6e7937e23ffcd3/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "919858077f4b768c8472f29b977edf0aa6e0f1e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919858077f4b768c8472f29b977edf0aa6e0f1e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/919858077f4b768c8472f29b977edf0aa6e0f1e5"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "2e13b09b49738ec1af4d415af6e5b881d4340048", "filename": "libgomp/config/nvptx/atomic.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac7b66958016225724084078e6e7937e23ffcd3/libgomp%2Fconfig%2Fnvptx%2Fatomic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac7b66958016225724084078e6e7937e23ffcd3/libgomp%2Fconfig%2Fnvptx%2Fatomic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fnvptx%2Fatomic.c?ref=4ac7b66958016225724084078e6e7937e23ffcd3", "patch": "@@ -0,0 +1,18 @@\n+#include \"libgomp.h\"\n+\n+#include \"../../atomic.c\"\n+\n+/* Implement __sync_val_compare_and_swap_16, to support offloading from hosts\n+   that support this builtin.  Fallback on libatomic.  This can be removed\n+   once omp-expand starts using __atomic_compare_exchange_n instead.  */\n+\n+unsigned __int128\n+__sync_val_compare_and_swap_16 (volatile void *vptr, unsigned __int128 oldval,\n+\t\t\t\tunsigned __int128 newval)\n+{\n+  volatile __int128 *ptr = vptr;\n+  __int128 expected = oldval;\n+  __atomic_compare_exchange_n (ptr, &expected, newval, false,\n+\t\t\t       MEMMODEL_SEQ_CST, MEMMODEL_SEQ_CST);\n+  return expected;\n+}"}, {"sha": "e60fe3664edeb6115261b85ed029b8dc3884fe1d", "filename": "libgomp/testsuite/libgomp.c-c++-common/reduction-16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac7b66958016225724084078e6e7937e23ffcd3/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Freduction-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac7b66958016225724084078e6e7937e23ffcd3/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Freduction-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Freduction-16.c?ref=4ac7b66958016225724084078e6e7937e23ffcd3", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-additional-options \"-foffload=-latomic\" { target offload_target_nvptx } } */\n \n #include <stdlib.h>\n "}]}