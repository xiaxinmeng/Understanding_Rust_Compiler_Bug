{"sha": "e13f37d9f7600d337f8a4589b5f985ded9e05852", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEzZjM3ZDlmNzYwMGQzMzdmOGE0NTg5YjVmOTg1ZGVkOWUwNTg1Mg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-01-13T13:20:41Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-01-13T13:33:37Z"}, "message": "PR tree-optimization/93213 - wrong code with -Og -foptimize-strlen\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/93213\n\t* gcc.c-torture/execute/pr93213.c: New test.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/93213\n\t* tree-ssa-strlen.c (handle_store): Only allow single-byte nul-over-nul\n\tstores to be eliminated.", "tree": {"sha": "7361c300da40923fd58cd3686a65e1460ae75dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7361c300da40923fd58cd3686a65e1460ae75dda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e13f37d9f7600d337f8a4589b5f985ded9e05852", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13f37d9f7600d337f8a4589b5f985ded9e05852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e13f37d9f7600d337f8a4589b5f985ded9e05852", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13f37d9f7600d337f8a4589b5f985ded9e05852/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ab08934e5f44dbdd5b0e4226755b46bf4e2e1af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab08934e5f44dbdd5b0e4226755b46bf4e2e1af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ab08934e5f44dbdd5b0e4226755b46bf4e2e1af"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "2a4b03a32d31e608ce3a306938e6b466517d9aaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13f37d9f7600d337f8a4589b5f985ded9e05852/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13f37d9f7600d337f8a4589b5f985ded9e05852/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e13f37d9f7600d337f8a4589b5f985ded9e05852", "patch": "@@ -1,3 +1,9 @@\n+2020-01-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/93213\n+\t* tree-ssa-strlen.c (handle_store): Only allow single-byte nul-over-nul\n+\tstores to be eliminated.\n+\n 2020-01-13  Martin Liska  <mliska@suse.cz>\n \n \t* opts.c (print_help): Do not print CL_PARAM"}, {"sha": "f14638c5079a322ca4c23cf24c729f263a9f5492", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13f37d9f7600d337f8a4589b5f985ded9e05852/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13f37d9f7600d337f8a4589b5f985ded9e05852/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e13f37d9f7600d337f8a4589b5f985ded9e05852", "patch": "@@ -1,3 +1,8 @@\n+2020-01-13  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/93213\n+\t* gcc.c-torture/execute/pr93213.c: New test.\n+\n 2020-01-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* c-c++-common/goacc/host_data-1.c: Extend."}, {"sha": "86d0465bf67cc79f52927c6fe9ae49df3ae96c8a", "filename": "gcc/testsuite/gcc.c-torture/execute/pr93213.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13f37d9f7600d337f8a4589b5f985ded9e05852/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr93213.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13f37d9f7600d337f8a4589b5f985ded9e05852/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr93213.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr93213.c?ref=e13f37d9f7600d337f8a4589b5f985ded9e05852", "patch": "@@ -0,0 +1,50 @@\n+/* PR tree-optimization/93213 - wrong code on a multibyte store with\n+   -Og -foptimize-strlen\n+   { dg-require-effective-target int128 }\n+   { dg-additional-options \"-Og -foptimize-strlen\" } */\n+\n+typedef unsigned __INT16_TYPE__ u16;\n+typedef unsigned __INT32_TYPE__ u32;\n+typedef unsigned __int128 u128;\n+\n+static inline u128\n+foo (u16 u16_1, u32 u32_1, u128 u128_1)\n+{\n+#if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n+  u128 u128_0 = 0;\n+  u128_1 -= __builtin_mul_overflow (u32_1, u16_1, &u32_1);\n+  __builtin_memmove (&u16_1, &u128_0, 2);\n+  __builtin_memmove (&u16_1, &u128_1, 1);\n+  return u16_1;\n+#else\n+  return 0xff;\n+#endif\n+}\n+\n+__attribute__ ((noipa)) void\n+bar (void)\n+{\n+  char a[] = { 1, 2 };\n+  const char b[] = { 0, 0 };\n+  const char c[] = { 2 };\n+  __builtin_memcpy (a, b, 2);\n+  // The above is transformed into\n+  //   MEM <short unsigned int> [(char * {ref-all})&a] = 0;\n+  // which was then dropped because of the non-nul store below.\n+  __builtin_memcpy (a, c, 1);\n+\n+  volatile char *p = a;\n+  if (p[0] != 2 || p[1] != 0)\n+    __builtin_abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  u16 x = foo (-1, -1, 0);\n+  if (x != 0xff)\n+    __builtin_abort ();\n+\n+  bar ();\n+  return 0;\n+}"}, {"sha": "ad9e98973b128d16c281e77b7b73dc8a85ac099a", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13f37d9f7600d337f8a4589b5f985ded9e05852/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13f37d9f7600d337f8a4589b5f985ded9e05852/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=e13f37d9f7600d337f8a4589b5f985ded9e05852", "patch": "@@ -5239,10 +5239,10 @@ handle_store (gimple_stmt_iterator *gsi, bool *zero_write,\n \t}\n     }\n \n-  if (si != NULL && offset == 0 && storing_all_zeros_p)\n+  if (si != NULL && offset == 0 && storing_all_zeros_p && lenrange[2] == 1)\n     {\n-      /* Allow adjust_last_stmt to remove it if the stored '\\0'\n-\t is immediately overwritten.  */\n+      /* For single-byte stores only, allow adjust_last_stmt to remove\n+\t the statement if the stored '\\0' is immediately overwritten.  */\n       laststmt.stmt = stmt;\n       laststmt.len = build_int_cst (size_type_node, 1);\n       laststmt.stridx = si->idx;"}]}