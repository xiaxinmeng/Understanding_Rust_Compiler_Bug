{"sha": "89ae3825aa6e60bb68010353f2a292a056b8a9da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlhZTM4MjVhYTZlNjBiYjY4MDEwMzUzZjJhMjkyYTA1NmI4YTlkYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-17T02:36:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-17T02:36:20Z"}, "message": "re PR c++/47301 ([C++0x] ICE: in fold_convert_loc, at fold-const.c:1906 with -fabi-version=1 and constexpr)\n\n\tPR c++/47301\n\t* decl.c (compute_array_index_type): Don't bother trying to deal\n\twith literal classes in ABI v1.\n\nFrom-SVN: r171085", "tree": {"sha": "8ccb50efec49febe52d977ead34f18d1439c2134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ccb50efec49febe52d977ead34f18d1439c2134"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89ae3825aa6e60bb68010353f2a292a056b8a9da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ae3825aa6e60bb68010353f2a292a056b8a9da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ae3825aa6e60bb68010353f2a292a056b8a9da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ae3825aa6e60bb68010353f2a292a056b8a9da/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f2a22d0b89e8e4208e84aaeab23f563c085c6c8"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "d96b4b3e31792212f9b12e7d0e4c5fd2aaa57317", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89ae3825aa6e60bb68010353f2a292a056b8a9da/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89ae3825aa6e60bb68010353f2a292a056b8a9da/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=89ae3825aa6e60bb68010353f2a292a056b8a9da", "patch": "@@ -1,5 +1,9 @@\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/47301\n+\t* decl.c (compute_array_index_type): Don't bother trying to deal\n+\twith literal classes in ABI v1.\n+\n \tPR c++/46336\n \t* decl.c (duplicate_decls): Return NULL_TREE for clashing\n \tC functions."}, {"sha": "a7da5742a5e2669dc39c58ddff7ca1a0e97d812f", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89ae3825aa6e60bb68010353f2a292a056b8a9da/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89ae3825aa6e60bb68010353f2a292a056b8a9da/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=89ae3825aa6e60bb68010353f2a292a056b8a9da", "patch": "@@ -7525,6 +7525,9 @@ compute_array_index_type (tree name, tree size, tsubst_flags_t complain)\n \t      if (size == error_mark_node)\n \t\treturn error_mark_node;\n \t      type = TREE_TYPE (size);\n+\t      /* We didn't support this case in GCC 3.2, so don't bother\n+\t\t trying to model it now in ABI v1.  */\n+\t      abi_1_itype = error_mark_node;\n \t    }\n \n \t  size = maybe_constant_value (size);\n@@ -7569,7 +7572,8 @@ compute_array_index_type (tree name, tree size, tsubst_flags_t complain)\n       return itype;\n     }\n   \n-  if (!abi_version_at_least (2) && processing_template_decl)\n+  if (!abi_version_at_least (2) && processing_template_decl\n+      && abi_1_itype == NULL_TREE)\n     /* For abi-1, we handled all instances in templates the same way,\n        even when they were non-dependent. This affects the manglings\n        produced.  So, we do the normal checking for non-dependent\n@@ -7683,7 +7687,7 @@ compute_array_index_type (tree name, tree size, tsubst_flags_t complain)\n     }\n \n   /* Create and return the appropriate index type.  */\n-  if (abi_1_itype)\n+  if (abi_1_itype && abi_1_itype != error_mark_node)\n     {\n       tree t = build_index_type (itype);\n       TYPE_CANONICAL (abi_1_itype) = TYPE_CANONICAL (t);"}, {"sha": "bf17d3d7e5dbc01803f550bfb89e9c915afef4b3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89ae3825aa6e60bb68010353f2a292a056b8a9da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89ae3825aa6e60bb68010353f2a292a056b8a9da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89ae3825aa6e60bb68010353f2a292a056b8a9da", "patch": "@@ -1,5 +1,7 @@\n 2011-03-16  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/constexpr-abi1.C: New.\n+\n \t* g++.dg/cpp0x/constexpr-46336.C: New.\n \t* g++.dg/parse/friend5.C: Adjust expected errors.\n "}, {"sha": "e83f142300aec028b06f5683e6dc6bcb268b2cd7", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-abi1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89ae3825aa6e60bb68010353f2a292a056b8a9da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-abi1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89ae3825aa6e60bb68010353f2a292a056b8a9da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-abi1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-abi1.C?ref=89ae3825aa6e60bb68010353f2a292a056b8a9da", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/47301\n+// { dg-options \"-std=c++0x -fabi-version=1\" }\n+\n+struct A\n+{\n+  constexpr operator int ()\n+  {\n+    return 1;\n+  }\n+};\n+\n+template < int > struct B\n+{\n+  static constexpr A a = A();\n+  int ar[a];\n+};"}]}