{"sha": "5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUzOTZkYTZiNDNhYTJiYTFmYzMwZGY3M2I4YmViMjU3YmZkMDgxZA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-10-10T12:31:51Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-10-10T12:31:51Z"}, "message": "[AArch64] Add --enable-fix-cortex-a53-835769 configure-time option\n\n\t* configure.ac: Add --enable-fix-cortex-a53-835769 option.\n\t* configure: Regenerate.\n\t* config/aarch64/aarch64.c (aarch64_override_options): Handle\n\tTARGET_FIX_ERR_A53_835769_DEFAULT.\n\t* config/aarch64/aarch64.opt (mfix-cortex-a53-835769): Set Init\n\tvalue to 2.\n\t* doc/install.texi (aarch64*-*-*): Document \n\tnew --enable-fix-cortex-a53-835769 option.\n\nFrom-SVN: r216076", "tree": {"sha": "366c4e2d8d4f0378048b202f73cc4c8523cbc051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/366c4e2d8d4f0378048b202f73cc4c8523cbc051"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "75cf149453542f0107a957624b27e8c3cce106fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75cf149453542f0107a957624b27e8c3cce106fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75cf149453542f0107a957624b27e8c3cce106fa"}], "stats": {"total": 87, "additions": 84, "deletions": 3}, "files": [{"sha": "8f5db119b13c6965983d918c9f9f31ff50c44bcf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "patch": "@@ -1,3 +1,14 @@\n+2014-10-10  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* configure.ac: Add --enable-fix-cortex-a53-835769 option.\n+\t* configure: Regenerate.\n+\t* config/aarch64/aarch64.c (aarch64_override_options): Handle\n+\tTARGET_FIX_ERR_A53_835769_DEFAULT.\n+\t* config/aarch64/aarch64.opt (mfix-cortex-a53-835769): Set Init\n+\tvalue to 2.\n+\t* doc/install.texi (aarch64*-*-*): Document \n+\tnew --enable-fix-cortex-a53-835769 option.\n+\n 2014-10-10  Kyrylo Tkachov<kyrylo.tkachov@arm.com>\n             Ramana Radhakrishnan<ramana.radhakrishnan@arm.com>\n "}, {"sha": "db5ff59d92ae816bf9ce1eed8a0b388f1493fcf5", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "patch": "@@ -6387,6 +6387,15 @@ aarch64_override_options (void)\n   aarch64_tune = selected_tune->core;\n   aarch64_tune_params = selected_tune->tune;\n \n+  if (aarch64_fix_a53_err835769 == 2)\n+    {\n+#ifdef TARGET_FIX_ERR_A53_835769_DEFAULT\n+      aarch64_fix_a53_err835769 = 1;\n+#else\n+      aarch64_fix_a53_err835769 = 0;\n+#endif\n+    }\n+\n   aarch64_override_options_after_change ();\n }\n "}, {"sha": "fc0307e28690aff934a13889cc3309f77d1469a5", "filename": "gcc/config/aarch64/aarch64.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.opt?ref=5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "patch": "@@ -68,7 +68,7 @@ Target Report RejectNegative Mask(GENERAL_REGS_ONLY)\n Generate code which uses only the general registers\n \n mfix-cortex-a53-835769\n-Target Report Var(aarch64_fix_a53_err835769) Init(0)\n+Target Report Var(aarch64_fix_a53_err835769) Init(2)\n Workaround for ARM Cortex-A53 Erratum number 835769\n \n mlittle-endian"}, {"sha": "bd1215d1fbf422fdd2f23da3c8f0dade28427ef1", "filename": "gcc/configure", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "patch": "@@ -920,6 +920,7 @@ with_plugin_ld\n enable_gnu_indirect_function\n enable_initfini_array\n enable_comdat\n+enable_fix_cortex_a53_835769\n with_glibc_version\n enable_gnu_unique_object\n enable_linker_build_id\n@@ -1638,6 +1639,14 @@ Optional Features:\n                           glibc systems\n   --enable-initfini-array\tuse .init_array/.fini_array sections\n   --enable-comdat         enable COMDAT group support\n+\n+  --enable-fix-cortex-a53-835769\n+                          enable workaround for AArch64 Cortex-A53 erratum\n+                          835769 by default\n+  --disable-fix-cortex-a53-835769\n+                          disable workaround for AArch64 Cortex-A53 erratum\n+                          835769 by default\n+\n   --enable-gnu-unique-object\n                           enable the use of the @gnu_unique_object ELF\n                           extension on glibc systems\n@@ -18049,7 +18058,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18052 \"configure\"\n+#line 18061 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18155,7 +18164,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18158 \"configure\"\n+#line 18167 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -23979,6 +23988,25 @@ $as_echo \"#define HAVE_AS_MABI_OPTION 1\" >>confdefs.h\n         done\n       fi\n     fi\n+    # Enable default workaround for AArch64 Cortex-A53 erratum 835769.\n+    # Check whether --enable-fix-cortex-a53-835769 was given.\n+if test \"${enable_fix_cortex_a53_835769+set}\" = set; then :\n+  enableval=$enable_fix_cortex_a53_835769;\n+        case $enableval in\n+          yes)\n+            tm_defines=\"${tm_defines} TARGET_FIX_ERR_A53_835769_DEFAULT=1\"\n+            ;;\n+          no)\n+            ;;\n+          *)\n+            as_fn_error \"'$enableval' is an invalid value for --enable-fix-cortex-a53-835769.\\\n+  Valid choices are 'yes' and 'no'.\" \"$LINENO\" 5\n+            ;;\n+\n+        esac\n+\n+fi\n+\n     ;;\n \n   # All TARGET_ABI_OSF targets."}, {"sha": "8f7c814b48360f74ef61455bbcc45d8408977290", "filename": "gcc/configure.ac", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "patch": "@@ -3526,6 +3526,29 @@ case \"$target\" in\n         done\n       fi\n     fi\n+    # Enable default workaround for AArch64 Cortex-A53 erratum 835769.\n+    AC_ARG_ENABLE(fix-cortex-a53-835769,\n+    [\n+AS_HELP_STRING([--enable-fix-cortex-a53-835769],\n+        [enable workaround for AArch64 Cortex-A53 erratum 835769 by default])\n+AS_HELP_STRING([--disable-fix-cortex-a53-835769],\n+        [disable workaround for AArch64 Cortex-A53 erratum 835769 by default])\n+    ],\n+      [\n+        case $enableval in\n+          yes)\n+            tm_defines=\"${tm_defines} TARGET_FIX_ERR_A53_835769_DEFAULT=1\"\n+            ;;\n+          no)\n+            ;;\n+          *)\n+            AC_MSG_ERROR(['$enableval' is an invalid value for --enable-fix-cortex-a53-835769.\\\n+  Valid choices are 'yes' and 'no'.])\n+            ;;\n+\n+        esac\n+      ],\n+    [])\n     ;;\n \n   # All TARGET_ABI_OSF targets."}, {"sha": "3df78ff8b70f2713e68766f5ae6813670b1d6a16", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e396da6b43aa2ba1fc30df73b8beb257bfd081d/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=5e396da6b43aa2ba1fc30df73b8beb257bfd081d", "patch": "@@ -3762,6 +3762,16 @@ Binutils pre 2.24 does not have support for selecting @option{-mabi} and\n does not support ILP32.  If it is used to build GCC 4.9 or later, GCC will\n not support option @option{-mabi=ilp32}.\n \n+To enable a workaround for the Cortex-A53 erratum number 835769 by default\n+(for all CPUs regardless of -mcpu option given) at configure time use the\n+@option{--enable-fix-cortex-a53-835769} option.  This will enable the fix by\n+default and can be explicitly disabled during during compilation by passing the\n+@option{-mno-fix-cortex-a53-835769} option.  Conversely,\n+@option{--disable-fix-cortex-a53-835769} will disable the workaround by\n+default.  The workaround is disabled by default if neither of\n+@option{--enable-fix-cortex-a53-835769} or\n+@option{--disable-fix-cortex-a53-835769} is given at configure time.\n+\n @html\n <hr />\n <!-- rs6000-ibm-aix*, powerpc-ibm-aix* -->"}]}