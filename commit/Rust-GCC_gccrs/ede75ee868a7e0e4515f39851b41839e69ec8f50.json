{"sha": "ede75ee868a7e0e4515f39851b41839e69ec8f50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRlNzVlZTg2OGE3ZTBlNDUxNWYzOTg1MWI0MTgzOWU2OWVjOGY1MA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-12-01T17:27:11Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-12-01T17:27:11Z"}, "message": "h8300.c (h8300_asm_named_section): Wrap with !OBJECT_FORMAT_ELF.\n\n\t* h8300.c (h8300_asm_named_section): Wrap with !OBJECT_FORMAT_ELF.\n\t* m88k.c (m88k_svr3_asm_out_constructor,\n\tm88k_svr3_asm_out_destructor): Wrap with CTOR_LIST_BEGIN &&\n\t!OBJECT_FORMAT_ELF.\n\t* mcore.c (mcore_asm_named_section): Wrap with OBJECT_FORMAT_ELF.\n\t* sh.c (sh_asm_named_section): Wrap with !OBJECT_FORMAT_ELF.\n\t* sparc.c (sparc_elf_asm_named_section): Wrap with OBJECT_FORMAT_ELF.\n\nFrom-SVN: r47515", "tree": {"sha": "3eb627dfd5fd1a76c0dc695d8c1a980f476651cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eb627dfd5fd1a76c0dc695d8c1a980f476651cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ede75ee868a7e0e4515f39851b41839e69ec8f50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ede75ee868a7e0e4515f39851b41839e69ec8f50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ede75ee868a7e0e4515f39851b41839e69ec8f50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ede75ee868a7e0e4515f39851b41839e69ec8f50/comments", "author": null, "committer": null, "parents": [{"sha": "6ac7bf2c9e4b7f4e5d3b036c0bf1f4533e9a8252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac7bf2c9e4b7f4e5d3b036c0bf1f4533e9a8252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac7bf2c9e4b7f4e5d3b036c0bf1f4533e9a8252"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "460b8a9d36a72b6c1b8b939622af3875a604da93", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ede75ee868a7e0e4515f39851b41839e69ec8f50", "patch": "@@ -1,3 +1,13 @@\n+2001-12-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* h8300.c (h8300_asm_named_section): Wrap with !OBJECT_FORMAT_ELF.\n+\t* m88k.c (m88k_svr3_asm_out_constructor,\n+\tm88k_svr3_asm_out_destructor): Wrap with CTOR_LIST_BEGIN &&\n+\t!OBJECT_FORMAT_ELF.\n+\t* mcore.c (mcore_asm_named_section): Wrap with OBJECT_FORMAT_ELF.\n+\t* sh.c (sh_asm_named_section): Wrap with !OBJECT_FORMAT_ELF.\n+\t* sparc.c (sparc_elf_asm_named_section): Wrap with OBJECT_FORMAT_ELF.\n+\n 2001-12-01  Geoff Keating  <geoffk@redhat.com>\n \n \t* config/rs6000/rs6000.h (LEGITIMATE_LO_SUM_ADDRESS_P): Complex"}, {"sha": "882019eff1ca8c7e47d0a828b48a0c393a5aa220", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=ede75ee868a7e0e4515f39851b41839e69ec8f50", "patch": "@@ -59,7 +59,9 @@ static tree h8300_handle_eightbit_data_attribute PARAMS ((tree *, tree, tree, in\n static tree h8300_handle_tiny_data_attribute PARAMS ((tree *, tree, tree, int, bool *));\n static void h8300_output_function_prologue PARAMS ((FILE *, HOST_WIDE_INT));\n static void h8300_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n+#ifndef OBJECT_FORMAT_ELF\n static void h8300_asm_named_section PARAMS ((const char *, unsigned int));\n+#endif\n \n /* CPU_TYPE, says what cpu we're compiling for.  */\n int cpu_type;\n@@ -3473,6 +3475,7 @@ h8300_adjust_insn_length (insn, length)\n   return 0;\n }\n \n+#ifndef OBJECT_FORMAT_ELF\n static void\n h8300_asm_named_section (name, flags)\n      const char *name;\n@@ -3481,3 +3484,4 @@ h8300_asm_named_section (name, flags)\n   /* ??? Perhaps we should be using default_coff_asm_named_section.  */\n   fprintf (asm_out_file, \"\\t.section %s\\n\", name);\n }\n+#endif /* ! OBJECT_FORMAT_ELF */"}, {"sha": "7de5af67252f9b49ec078080bf05e0fe3dbc2d5d", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=ede75ee868a7e0e4515f39851b41839e69ec8f50", "patch": "@@ -68,7 +68,7 @@ static void m88k_output_function_prologue PARAMS ((FILE *, HOST_WIDE_INT));\n static void m88k_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n static void m88k_output_function_end_prologue PARAMS ((FILE *));\n static void m88k_output_function_begin_epilogue PARAMS ((FILE *));\n-#ifdef INIT_SECTION_ASM_OP\n+#if defined (CTOR_LIST_BEGIN) && !defined (OBJECT_FORMAT_ELF)\n static void m88k_svr3_asm_out_constructor PARAMS ((rtx, int));\n static void m88k_svr3_asm_out_destructor PARAMS ((rtx, int));\n #endif\n@@ -3292,7 +3292,7 @@ symbolic_operand (op, mode)\n     }\n }\n \n-#ifdef INIT_SECTION_ASM_OP\n+#if defined (CTOR_LIST_BEGIN) && !defined (OBJECT_FORMAT_ELF)\n static void\n m88k_svr3_asm_out_constructor (symbol, priority)\n      rtx symbol;\n@@ -3321,7 +3321,7 @@ m88k_svr3_asm_out_destructor (symbol, priority)\n   for (i = 1; i < 4; i++)\n     assemble_integer (constm1_rtx, UNITS_PER_WORD, BITS_PER_WORD, 1);\n }\n-#endif\n+#endif /* INIT_SECTION_ASM_OP && ! OBJECT_FORMAT_ELF */\n \n /* Adjust the cost of INSN based on the relationship between INSN that\n    is dependent on DEP_INSN through the dependence LINK.  The default"}, {"sha": "efe052f45300b8d2276570344995860a5dd10f83", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=ede75ee868a7e0e4515f39851b41839e69ec8f50", "patch": "@@ -133,8 +133,10 @@ static int        mcore_dllexport_p            PARAMS ((tree));\n static int        mcore_dllimport_p            PARAMS ((tree));\n const struct attribute_spec mcore_attribute_table[];\n static tree       mcore_handle_naked_attribute PARAMS ((tree *, tree, tree, int, bool *));\n+#ifdef OBJECT_FORMAT_ELF\n static void\t  mcore_asm_named_section      PARAMS ((const char *,\n \t\t\t\t\t\t\tunsigned int));\n+#endif\n \f\n /* Initialize the GCC target structure.  */\n #ifdef TARGET_DLLIMPORT_DECL_ATTRIBUTES\n@@ -3544,10 +3546,12 @@ mcore_naked_function_p ()\n   return lookup_attribute (\"naked\", DECL_ATTRIBUTES (current_function_decl)) != NULL_TREE;\n }\n \n+#ifdef OBJECT_FORMAT_ELF\n static void\n mcore_asm_named_section (name, flags)\n      const char *name;\n      unsigned int flags ATTRIBUTE_UNUSED;\n {\n   fprintf (asm_out_file, \"\\t.section %s\\n\", name);\n }\n+#endif /* OBJECT_FORMAT_ELF */"}, {"sha": "3b586dd4c63805a85d7a32808b6879abdf45113e", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=ede75ee868a7e0e4515f39851b41839e69ec8f50", "patch": "@@ -161,7 +161,9 @@ static tree sh_handle_sp_switch_attribute PARAMS ((tree *, tree, tree, int, bool\n static tree sh_handle_trap_exit_attribute PARAMS ((tree *, tree, tree, int, bool *));\n static void sh_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n static void sh_insert_attributes PARAMS ((tree, tree *));\n+#ifndef OBJECT_FORMAT_ELF\n static void sh_asm_named_section PARAMS ((const char *, unsigned int));\n+#endif\n static int sh_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n \f\n /* Initialize the GCC target structure.  */\n@@ -5631,6 +5633,7 @@ sh_can_redirect_branch (branch1, branch2)\n   return 0;\n }\n \n+#ifndef OBJECT_FORMAT_ELF\n static void\n sh_asm_named_section (name, flags)\n      const char *name;\n@@ -5639,6 +5642,7 @@ sh_asm_named_section (name, flags)\n   /* ??? Perhaps we should be using default_coff_asm_named_section.  */\n   fprintf (asm_out_file, \"\\t.section %s\\n\", name);\n }\n+#endif /* ! OBJECT_FORMAT_ELF */\n \n /* A C statement (sans semicolon) to update the integer variable COST\n    based on the relationship between INSN that is dependent on"}, {"sha": "056b875d2b96772eea4bf322b94a40f8a5d178fa", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede75ee868a7e0e4515f39851b41839e69ec8f50/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=ede75ee868a7e0e4515f39851b41839e69ec8f50", "patch": "@@ -167,8 +167,9 @@ static void sparc_nonflat_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT,\n \t\t\t\t\t\t     int));\n static void sparc_nonflat_function_prologue PARAMS ((FILE *, HOST_WIDE_INT,\n \t\t\t\t\t\t     int));\n+#ifdef OBJECT_FORMAT_ELF\n static void sparc_elf_asm_named_section PARAMS ((const char *, unsigned int));\n-\n+#endif\n static void ultrasparc_sched_reorder PARAMS ((FILE *, int, rtx *, int));\n static int ultrasparc_variable_issue PARAMS ((rtx));\n static void ultrasparc_sched_init PARAMS ((void));\n@@ -8739,6 +8740,7 @@ sparc_add_gc_roots ()\n \t\tsizeof (ultra_pipe_hist[0]), &mark_ultrasparc_pipeline_state);\n }\n \n+#ifdef OBJECT_FORMAT_ELF\n static void\n sparc_elf_asm_named_section (name, flags)\n      const char *name;\n@@ -8765,3 +8767,4 @@ sparc_elf_asm_named_section (name, flags)\n \n   fputc ('\\n', asm_out_file);\n }\n+#endif /* OBJECT_FORMAT_ELF */"}]}