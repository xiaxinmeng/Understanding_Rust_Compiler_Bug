{"sha": "ca2b131143a3195e603493aadd0a0b4a18ad737f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EyYjEzMTE0M2EzMTk1ZTYwMzQ5M2FhZGQwYTBiNGExOGFkNzM3Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-06-27T19:45:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-06-27T19:45:14Z"}, "message": "gimplify.c (omp_is_private): Don't return true if decl is not already private on #pragma omp for or #pragma...\n\n\t* gimplify.c (omp_is_private): Don't return true if decl\n\tis not already private on #pragma omp for or #pragma omp parallel for.\n\n\t* gcc.dg/gomp/pr27388-3.c: Adjust dg-final.\n\n\t* testsuite/libgomp.c/loop-10.c: New test.\n\t* libgomp.c/loop-3.c (main): Add lastprivate clause.\n\t* libgomp.c++/loop-6.C (main): Likewise.\n\nFrom-SVN: r137199", "tree": {"sha": "8a25e70be23ac06cb0b9b579a0923434c229535c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a25e70be23ac06cb0b9b579a0923434c229535c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca2b131143a3195e603493aadd0a0b4a18ad737f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2b131143a3195e603493aadd0a0b4a18ad737f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca2b131143a3195e603493aadd0a0b4a18ad737f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2b131143a3195e603493aadd0a0b4a18ad737f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b357f682db35f4431e3011e7486a0ac865686e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b357f682db35f4431e3011e7486a0ac865686e3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b357f682db35f4431e3011e7486a0ac865686e3e"}], "stats": {"total": 60, "additions": 52, "deletions": 8}, "files": [{"sha": "ef3bf5fb4fd1e3b9e73dd71441618eae86028c17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2b131143a3195e603493aadd0a0b4a18ad737f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2b131143a3195e603493aadd0a0b4a18ad737f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca2b131143a3195e603493aadd0a0b4a18ad737f", "patch": "@@ -1,5 +1,8 @@\n 2008-06-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gimplify.c (omp_is_private): Don't return true if decl\n+\tis not already private on #pragma omp for or #pragma omp parallel for.\n+\n \tPR debug/36617\n \t* tree-cfg.c (struct move_stmt_d): Replace block field with\n \torig_block and new_block fields."}, {"sha": "c3af34bf27ebe2b4732f7d6123e9f230c7205084", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2b131143a3195e603493aadd0a0b4a18ad737f/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2b131143a3195e603493aadd0a0b4a18ad737f/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=ca2b131143a3195e603493aadd0a0b4a18ad737f", "patch": "@@ -5060,15 +5060,16 @@ omp_is_private (struct gimplify_omp_ctx *ctx, tree decl)\n \t    error (\"iteration variable %qs should not be reduction\",\n \t\t   IDENTIFIER_POINTER (DECL_NAME (decl)));\n \t}\n-      return true;\n+      return (ctx == gimplify_omp_ctxp\n+\t      || (ctx->region_type == ORT_COMBINED_PARALLEL\n+\t\t  && gimplify_omp_ctxp->outer_context == ctx));\n     }\n \n   if (ctx->region_type != ORT_WORKSHARE)\n     return false;\n   else if (ctx->outer_context)\n     return omp_is_private (ctx->outer_context, decl);\n-  else\n-    return !is_global_var (decl);\n+  return false;\n }\n \n /* Return true if DECL is private within a parallel region"}, {"sha": "4ede6dafed7ae068067b8943220a65877db135a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2b131143a3195e603493aadd0a0b4a18ad737f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2b131143a3195e603493aadd0a0b4a18ad737f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca2b131143a3195e603493aadd0a0b4a18ad737f", "patch": "@@ -1,3 +1,7 @@\n+2008-06-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/gomp/pr27388-3.c: Adjust dg-final.\n+\n 2008-06-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/36400"}, {"sha": "2cddb23c7d8a8cf83b56aeb8f6143ff919fb3d06", "filename": "gcc/testsuite/gcc.dg/gomp/pr27388-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2b131143a3195e603493aadd0a0b4a18ad737f/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr27388-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2b131143a3195e603493aadd0a0b4a18ad737f/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr27388-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr27388-3.c?ref=ca2b131143a3195e603493aadd0a0b4a18ad737f", "patch": "@@ -19,5 +19,5 @@ foo (void)\n   }\n }\n \n-/* { dg-final { scan-tree-dump-times \"omp for\\[^\\\\n\\]*private\" 0 \"omplower\" } } */\n+/* { dg-final { scan-tree-dump-times \"omp for\\[^\\\\n\\]*private\" 2 \"omplower\" } } */\n /* { dg-final { cleanup-tree-dump \"omplower\" } } */"}, {"sha": "ad550e8fa33e1807c728405157f8a24e6149bf70", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2b131143a3195e603493aadd0a0b4a18ad737f/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2b131143a3195e603493aadd0a0b4a18ad737f/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ca2b131143a3195e603493aadd0a0b4a18ad737f", "patch": "@@ -1,5 +1,9 @@\n 2008-06-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* testsuite/libgomp.c/loop-10.c: New test.\n+\t* libgomp.c/loop-3.c (main): Add lastprivate clause.\n+\t* libgomp.c++/loop-6.C (main): Likewise.\n+\n \tPR debug/36617\n \t* testsuite/libgomp.c/debug-1.c: New test.\n "}, {"sha": "f4a6925a40c600b6189279c644a07323d904d049", "filename": "libgomp/testsuite/libgomp.c++/loop-6.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2b131143a3195e603493aadd0a0b4a18ad737f/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Floop-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2b131143a3195e603493aadd0a0b4a18ad737f/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Floop-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Floop-6.C?ref=ca2b131143a3195e603493aadd0a0b4a18ad737f", "patch": "@@ -8,10 +8,11 @@ static int test(void)\n   return ++count > 0;\n }\n \n+int i;\n+\n int main()\n {\n-  int i;\n-  #pragma omp for\n+  #pragma omp for lastprivate (i)\n   for (i = 0; i < 10; ++i)\n     {\n       if (test())"}, {"sha": "1b42c4bf126f250083d4dad58a02c6ec53110f8e", "filename": "libgomp/testsuite/libgomp.c/loop-10.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2b131143a3195e603493aadd0a0b4a18ad737f/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2b131143a3195e603493aadd0a0b4a18ad737f/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-10.c?ref=ca2b131143a3195e603493aadd0a0b4a18ad737f", "patch": "@@ -0,0 +1,30 @@\n+extern void abort (void);\n+\n+int i = 8;\n+\n+int main (void)\n+{\n+  int j = 7, k = 0;\n+  #pragma omp for\n+  for (i = 0; i < 10; i++)\n+    ;\n+  #pragma omp for\n+  for (j = 0; j < 10; j++)\n+    ;\n+  /* OpenMP 3.0 newly guarantees that the original list items can't\n+     be shared with the privatized omp for iterators, even when\n+     the original list items are already private.  */\n+  if (i != 8 || j != 7)\n+    abort ();\n+  #pragma omp parallel private (i) reduction (+:k)\n+  {\n+    i = 6;\n+    #pragma omp for\n+    for (i = 0; i < 10; i++)\n+      ;\n+    k = (i != 6);\n+  }\n+  if (k)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "f0f9b4705f91bf651fd4c5797c73da42c222ba18", "filename": "libgomp/testsuite/libgomp.c/loop-3.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2b131143a3195e603493aadd0a0b4a18ad737f/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2b131143a3195e603493aadd0a0b4a18ad737f/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Floop-3.c?ref=ca2b131143a3195e603493aadd0a0b4a18ad737f", "patch": "@@ -8,10 +8,11 @@ static int test(void)\n   return ++count > 0;\n }\n \n+int i;\n+\n int main()\n {\n-  int i;\n-  #pragma omp for\n+  #pragma omp for lastprivate (i)\n   for (i = 0; i < 10; ++i)\n     {\n       if (test())"}]}