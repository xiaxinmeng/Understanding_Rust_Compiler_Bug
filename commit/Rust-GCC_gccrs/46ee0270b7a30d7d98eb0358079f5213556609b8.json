{"sha": "46ee0270b7a30d7d98eb0358079f5213556609b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZlZTAyNzBiN2EzMGQ3ZDk4ZWIwMzU4MDc5ZjUyMTM1NTY2MDliOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T10:04:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T10:04:44Z"}, "message": "[multiple changes]\n\n2015-10-20  Vincent Celier  <celier@adacore.com>\n\n\t* sem_cat.adb (Check_Categorization_Dependencies): Do nothing\n\twhen -gnatdu is specified.\n\n2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (analyze_Subprogram_Renaming): The actual for a\n\tformal abstract subprogram must have a controlling type.\n\t* stand.ads: Minor whitespace cleanup.\n\nFrom-SVN: r229035", "tree": {"sha": "c10cae5575d2cb50bad4a0560c54aa2c00c444f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c10cae5575d2cb50bad4a0560c54aa2c00c444f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46ee0270b7a30d7d98eb0358079f5213556609b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46ee0270b7a30d7d98eb0358079f5213556609b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46ee0270b7a30d7d98eb0358079f5213556609b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46ee0270b7a30d7d98eb0358079f5213556609b8/comments", "author": null, "committer": null, "parents": [{"sha": "47b79f7801556cc194b099d5bad6409c93cf599c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b79f7801556cc194b099d5bad6409c93cf599c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b79f7801556cc194b099d5bad6409c93cf599c"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "5196fa7f0a376d1a25da87cc4ad0167bda5c8c1d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46ee0270b7a30d7d98eb0358079f5213556609b8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46ee0270b7a30d7d98eb0358079f5213556609b8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=46ee0270b7a30d7d98eb0358079f5213556609b8", "patch": "@@ -1,3 +1,14 @@\n+2015-10-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* sem_cat.adb (Check_Categorization_Dependencies): Do nothing\n+\twhen -gnatdu is specified.\n+\n+2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (analyze_Subprogram_Renaming): The actual for a\n+\tformal abstract subprogram must have a controlling type.\n+\t* stand.ads: Minor whitespace cleanup.\n+\n 2015-10-20  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_ch13.adb: Minor reference change (RM => AARM)."}, {"sha": "28742e45683e775ba93781b8b62e262a8b774903", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46ee0270b7a30d7d98eb0358079f5213556609b8/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46ee0270b7a30d7d98eb0358079f5213556609b8/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=46ee0270b7a30d7d98eb0358079f5213556609b8", "patch": "@@ -185,9 +185,10 @@ package body Sem_Cat is\n \n    begin\n       --  Intrinsic subprograms are preelaborated, so do not impose any\n-      --  categorization dependencies.\n+      --  categorization dependencies. Also, ignore categorization\n+      --  dependencies when compilation switch -gnatdu is used.\n \n-      if Is_Intrinsic_Subprogram (Depended_Entity) then\n+      if Is_Intrinsic_Subprogram (Depended_Entity) or else Debug_Flag_U then\n          return;\n       end if;\n "}, {"sha": "d6cce978183407f241191e0624c4291f198c8435", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46ee0270b7a30d7d98eb0358079f5213556609b8/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46ee0270b7a30d7d98eb0358079f5213556609b8/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=46ee0270b7a30d7d98eb0358079f5213556609b8", "patch": "@@ -3221,7 +3221,13 @@ package body Sem_Ch8 is\n                                       Find_Dispatching_Type (Old_S);\n \n                begin\n-                  if Old_S_Ctrl_Type /= New_S_Ctrl_Type then\n+\n+                  --  The actual must match the (instance of the) formal,\n+                  --  and must be a controlling type.\n+\n+                  if Old_S_Ctrl_Type /= New_S_Ctrl_Type\n+                    or else No (New_S_Ctrl_Type)\n+                  then\n                      Error_Msg_NE\n                        (\"actual must be dispatching subprogram for type&\",\n                         Nam, New_S_Ctrl_Type);"}, {"sha": "c2e8bc7aba3819b781e6cec2fbcb86ca211aa335", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46ee0270b7a30d7d98eb0358079f5213556609b8/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46ee0270b7a30d7d98eb0358079f5213556609b8/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=46ee0270b7a30d7d98eb0358079f5213556609b8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -330,13 +330,13 @@ package Stand is\n    --  situations. They have names that are suitable for use in such\n    --  error messages (see body for actual names used).\n \n-   Standard_Void_Type  : Entity_Id;\n+   Standard_Void_Type : Entity_Id;\n    --  This is a type used to represent the return type of procedures\n \n-   Standard_Exception_Type  : Entity_Id;\n+   Standard_Exception_Type : Entity_Id;\n    --  This is a type used to represent the Etype of exceptions\n \n-   Standard_A_String   : Entity_Id;\n+   Standard_A_String : Entity_Id;\n    --  An access to String type used for building elements of tables\n    --  carrying the enumeration literal names.\n \n@@ -446,8 +446,8 @@ package Stand is\n    --  this type is always IEEE format.\n \n    Universal_Fixed : Entity_Id;\n-   --  Entity for universal fixed type. This is a type with  arbitrary\n-   --  precision that can only appear in  a context with a specific type.\n+   --  Entity for universal fixed type. This is a type with arbitrary\n+   --  precision that can only appear in a context with a specific type.\n    --  Universal_Fixed labels the result of multiplication or division of\n    --  two fixed point numbers, and has no specified bounds (since, unlike\n    --  universal integer and universal real, it is never used for runtime"}]}