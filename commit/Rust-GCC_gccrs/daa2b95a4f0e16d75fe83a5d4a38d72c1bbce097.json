{"sha": "daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFhMmI5NWE0ZjBlMTZkNzVmZTgzYTVkNGEzOGQ3MmMxYmJjZTA5Nw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-06-14T20:41:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-06-14T20:41:41Z"}, "message": "tree-ssa.c (kill_redundant_phi_nodes): More correctly handle PHIs where the destination or an argument is marked with...\n\n        * tree-ssa.c (kill_redundant_phi_nodes): More correctly handle\n        PHIs where the destination or an argument is marked with\n        SSA_NAME_OCCURS_IN_ABNORMAL_PHI.\n\n\n\t* gcc.c-torture/20040614-1.c: New test.\n\nFrom-SVN: r83132", "tree": {"sha": "2a6b012635368f8e3f24c906ad8fc525270e4b0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a6b012635368f8e3f24c906ad8fc525270e4b0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097/comments", "author": null, "committer": null, "parents": [{"sha": "d962e073a077fe4066b937412d0f6d435f2f4f92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d962e073a077fe4066b937412d0f6d435f2f4f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d962e073a077fe4066b937412d0f6d435f2f4f92"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "19733748c7a0b769c6491329fb5ef8731bf842f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097", "patch": "@@ -1,3 +1,9 @@\n+2004-06-14  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa.c (kill_redundant_phi_nodes): More correctly handle\n+\tPHIs where the destination or an argument is marked with\n+\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI.\n+\n 2004-06-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/15945"}, {"sha": "9c8a040da2d905f051a219b5df038a0865e159af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097", "patch": "@@ -1,3 +1,7 @@\n+2004-06-14  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.c-torture/compile/20040614-1.c: New test.\n+\n 2004-06-14  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/15211"}, {"sha": "d99d2789664036b2ee082bea31207cbdda0ffcc4", "filename": "gcc/testsuite/gcc.c-torture/compile/20040614-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040614-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040614-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040614-1.c?ref=daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097", "patch": "@@ -0,0 +1,20 @@\n+#ifndef NO_LABEL_VALUES\n+void f(int r1, int *fp) \n+{     \n+  void *hlbl_tbl[] = { &&label1 }; \n+  goto *hlbl_tbl[r1]; \n+  *fp = 0; \n+ label0: \n+  fp += 8; \n+ label1: \n+  *fp = 0; \n+  if (r1)  \n+    goto label2; \n+  if (r1) \n+    goto label0; \n+ label2: \n+  ; \n+} \n+#else\n+int x;\n+#endif"}, {"sha": "9cec5d5087f2f4257fd85ea62a1c3b03fe633c65", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=daa2b95a4f0e16d75fe83a5d4a38d72c1bbce097", "patch": "@@ -885,6 +885,14 @@ kill_redundant_phi_nodes (void)\n \t{\n \t  var = PHI_RESULT (phi);\n \n+\t  /* If the destination of the PHI is associated with an\n+\t     abnormal edge, then we can not propagate this PHI away.  */\n+\t  if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (var))\n+\t    {\n+\t      raise_value (phi, var, eq_to);\n+\t      continue;\n+\t    }\n+\n \t  for (i = 0; i < (unsigned) PHI_NUM_ARGS (phi); i++)\n \t    {\n \t      t = PHI_ARG_DEF (phi, i);\n@@ -897,12 +905,20 @@ kill_redundant_phi_nodes (void)\n \n \t      stmt = SSA_NAME_DEF_STMT (t);\n \n+\t      /* If any particular PHI argument is associated with\n+\t\t an abnormal edge, then we know that we should not\n+\t\t be propagating away this PHI.  Go ahead and raise\n+\t\t the result of this PHI to the top of the lattice.  */\n+\t      if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (t))\n+\t\t{\n+\t\t  raise_value (phi, var, eq_to);\n+\t\t  continue;\n+\t\t}\n+\t      \n \t      /* If the defining statement for this argument is not a\n-\t\t phi node or the argument is associated with an abnormal\n-\t\t edge, then we need to recursively start the forward\n+\t\t phi node then we need to recursively start the forward\n \t\t dataflow starting with PHI.  */\n-\t      if (TREE_CODE (stmt) != PHI_NODE\n-\t\t  || SSA_NAME_OCCURS_IN_ABNORMAL_PHI (t))\n+\t      if (TREE_CODE (stmt) != PHI_NODE)\n \t\t{\n \t\t  eq_to[SSA_NAME_VERSION (t)] = t;\n \t\t  raise_value (phi, t, eq_to);"}]}