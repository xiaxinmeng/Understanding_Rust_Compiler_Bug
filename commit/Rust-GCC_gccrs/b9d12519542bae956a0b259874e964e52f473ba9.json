{"sha": "b9d12519542bae956a0b259874e964e52f473ba9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlkMTI1MTk1NDJiYWU5NTZhMGIyNTk4NzRlOTY0ZTUyZjQ3M2JhOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-11-23T16:17:52Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-11-23T16:17:52Z"}, "message": "decl.c (pushdecl, [...]): Don't call a variadic function with a non-literal format string.\n\n        * decl.c (pushdecl, grokdeclarator): Don't call a variadic\n        function with a non-literal format string.\n\n        * lex.c (do_identifier): Likewise.\n\n        * typeck.c (build_unary_op): Likewise.\n\nFrom-SVN: r30641", "tree": {"sha": "a61ea478f0fcb2a256b53afbeceafcce84280409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a61ea478f0fcb2a256b53afbeceafcce84280409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9d12519542bae956a0b259874e964e52f473ba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d12519542bae956a0b259874e964e52f473ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9d12519542bae956a0b259874e964e52f473ba9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d12519542bae956a0b259874e964e52f473ba9/comments", "author": null, "committer": null, "parents": [{"sha": "a3dd1d43955e262a43f0bef0c52e88081f04ff70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3dd1d43955e262a43f0bef0c52e88081f04ff70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3dd1d43955e262a43f0bef0c52e88081f04ff70"}], "stats": {"total": 45, "additions": 28, "deletions": 17}, "files": [{"sha": "1320b21696cd8e6aa43b454b00062c1e7684cb2f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d12519542bae956a0b259874e964e52f473ba9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d12519542bae956a0b259874e964e52f473ba9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b9d12519542bae956a0b259874e964e52f473ba9", "patch": "@@ -1,3 +1,12 @@\n+1999-11-23  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* decl.c (pushdecl, grokdeclarator): Don't call a variadic\n+\tfunction with a non-literal format string.\n+\n+\t* lex.c (do_identifier): Likewise.\n+\n+\t* typeck.c (build_unary_op): Likewise.\n+\n 1999-11-23  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (DECL_NEEDED_P): Tweak to match documentation."}, {"sha": "f24bb3f011fc86bf7f80ec4b9b802aca1a9f52cb", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d12519542bae956a0b259874e964e52f473ba9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d12519542bae956a0b259874e964e52f473ba9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b9d12519542bae956a0b259874e964e52f473ba9", "patch": "@@ -3965,22 +3965,21 @@ pushdecl (x)\n \t\t   /* No shadow warnings for vars made for inlining.  */\n \t\t   && ! DECL_FROM_INLINE (x))\n \t    {\n-\t      const char *warnstring = NULL;\n-\n \t      if (oldlocal != NULL_TREE && TREE_CODE (oldlocal) == PARM_DECL)\n-\t\twarnstring = \"declaration of `%s' shadows a parameter\";\n+\t\twarning (\"declaration of `%s' shadows a parameter\",\n+\t\t\tIDENTIFIER_POINTER (name));\n \t      else if (IDENTIFIER_CLASS_VALUE (name) != NULL_TREE\n \t\t       && current_class_ptr\n \t\t       && !TREE_STATIC (name))\n-\t\twarnstring = \"declaration of `%s' shadows a member of `this'\";\n+\t\twarning (\"declaration of `%s' shadows a member of `this'\",\n+\t\t\tIDENTIFIER_POINTER (name));\n \t      else if (oldlocal != NULL_TREE)\n-\t\twarnstring = \"declaration of `%s' shadows previous local\";\n+\t\twarning (\"declaration of `%s' shadows previous local\",\n+\t\t\tIDENTIFIER_POINTER (name));\n \t      else if (oldglobal != NULL_TREE)\n \t\t/* XXX shadow warnings in outer-more namespaces */\n-\t\twarnstring = \"declaration of `%s' shadows global declaration\";\n-\n-\t      if (warnstring)\n-\t\twarning (warnstring, IDENTIFIER_POINTER (name));\n+\t\twarning (\"declaration of `%s' shadows global declaration\",\n+\t\t\tIDENTIFIER_POINTER (name));\n \t    }\n \t}\n \n@@ -9776,9 +9775,12 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t\t     op ? operator_name_string (tmp) : name);\n \t    }\n \t  else\n-\t    error (((decl_context == PARM || decl_context == CATCHPARM)\n-\t\t    ? \"storage class specified for parameter `%s'\"\n-\t\t    : \"storage class specified for typename\"), name);\n+\t    {\n+\t      if (decl_context == PARM || decl_context == CATCHPARM)\n+\t\terror (\"storage class specified for parameter `%s'\", name);\n+\t      else\n+\t\terror (\"storage class specified for typename\");\n+\t    }\n \t  RIDBIT_RESET (RID_REGISTER, specbits);\n \t  RIDBIT_RESET (RID_AUTO, specbits);\n \t  RIDBIT_RESET (RID_EXTERN, specbits);"}, {"sha": "b7fc18fb81917303c3c24ba53c60a0a10dbe654b", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d12519542bae956a0b259874e964e52f473ba9/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d12519542bae956a0b259874e964e52f473ba9/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=b9d12519542bae956a0b259874e964e52f473ba9", "patch": "@@ -3164,18 +3164,18 @@ do_identifier (token, parsing, args)\n \t}\n       else if (!DECL_ERROR_REPORTED (id))\n \t{\n-\t  static char msg[]\n-\t    = \"name lookup of `%s' changed for new ANSI `for' scoping\";\n \t  DECL_ERROR_REPORTED (id) = 1;\n \t  if (TYPE_NEEDS_DESTRUCTOR (TREE_TYPE (id)))\n \t    {\n-\t      error (msg, IDENTIFIER_POINTER (token));\n+\t      error (\"name lookup of `%s' changed for new ANSI `for' scoping\",\n+\t\t     IDENTIFIER_POINTER (token));\n \t      cp_error_at (\"  cannot use obsolete binding at `%D' because it has a destructor\", id);\n \t      id = error_mark_node;\n \t    }\n \t  else\n \t    {\n-\t      pedwarn (msg, IDENTIFIER_POINTER (token));\n+\t      pedwarn (\"name lookup of `%s' changed for new ANSI `for' scoping\",\n+\t\t       IDENTIFIER_POINTER (token));\n \t      cp_pedwarn_at (\"  using obsolete binding at `%D'\", id);\n \t    }\n \t}"}, {"sha": "0bfb99c6e583fb29d8a8a9c0c6b134ad16393951", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d12519542bae956a0b259874e964e52f473ba9/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d12519542bae956a0b259874e964e52f473ba9/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=b9d12519542bae956a0b259874e964e52f473ba9", "patch": "@@ -4790,7 +4790,7 @@ build_unary_op (code, xarg, noconvert)\n       return fold (build1 (code, argtype, arg));\n     }\n \n-  error (errstring);\n+  error (\"%s\", errstring);\n   return error_mark_node;\n }\n "}]}