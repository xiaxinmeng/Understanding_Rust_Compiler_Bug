{"sha": "7063dcbeb705d334e62355cfa1332d2d0c582338", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA2M2RjYmViNzA1ZDMzNGU2MjM1NWNmYTEzMzJkMmQwYzU4MjMzOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-24T22:43:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-24T22:43:25Z"}, "message": "(print_node_brief...\n\n(print_node_brief, print_node): Use assignment instead of\ninitialization for aggregate local variable REAL_VALUE_TYPE d.\n\nFrom-SVN: r7973", "tree": {"sha": "a5567d2300c8b739bd4f28dc3bd4749d7f21b29c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5567d2300c8b739bd4f28dc3bd4749d7f21b29c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7063dcbeb705d334e62355cfa1332d2d0c582338", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7063dcbeb705d334e62355cfa1332d2d0c582338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7063dcbeb705d334e62355cfa1332d2d0c582338", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7063dcbeb705d334e62355cfa1332d2d0c582338/comments", "author": null, "committer": null, "parents": [{"sha": "5748cda9cb60818dbc743b0d40e9c8a6403c4e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5748cda9cb60818dbc743b0d40e9c8a6403c4e4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5748cda9cb60818dbc743b0d40e9c8a6403c4e4e"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "6c2a64e17246cdba62ce0f76d73cafeeffb0620a", "filename": "gcc/print-tree.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7063dcbeb705d334e62355cfa1332d2d0c582338/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7063dcbeb705d334e62355cfa1332d2d0c582338/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=7063dcbeb705d334e62355cfa1332d2d0c582338", "patch": "@@ -144,11 +144,13 @@ print_node_brief (file, prefix, node, indent)\n     }\n   if (TREE_CODE (node) == REAL_CST)\n     {\n-      REAL_VALUE_TYPE d = TREE_REAL_CST (node);\n+      REAL_VALUE_TYPE d;\n+\n       if (TREE_OVERFLOW (node))\n \tfprintf (file, \" overflow\");\n \n #if !defined(REAL_IS_NOT_DOUBLE) || defined(REAL_ARITHMETIC)\n+      d = TREE_REAL_CST (node);\n       if (REAL_VALUE_ISINF (d))\n \tfprintf (file, \" Inf\");\n       else if (REAL_VALUE_ISNAN (d))\n@@ -620,11 +622,13 @@ print_node (file, prefix, node, indent)\n \n \tcase REAL_CST:\n \t  {\n-\t    REAL_VALUE_TYPE d = TREE_REAL_CST (node);\n+\t    REAL_VALUE_TYPE d;\n+\n \t    if (TREE_OVERFLOW (node))\n \t      fprintf (file, \" overflow\");\n \n #if !defined(REAL_IS_NOT_DOUBLE) || defined(REAL_ARITHMETIC)\n+\t    d = TREE_REAL_CST (node);\n \t    if (REAL_VALUE_ISINF (d))\n \t      fprintf (file, \" Inf\");\n \t    else if (REAL_VALUE_ISNAN (d))"}]}