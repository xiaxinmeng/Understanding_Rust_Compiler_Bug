{"sha": "06effe875c0dad1b8f27e868058d8401e74a4363", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZlZmZlODc1YzBkYWQxYjhmMjdlODY4MDU4ZDg0MDFlNzRhNDM2Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-02-04T11:06:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-02-04T11:06:19Z"}, "message": "[multiple changes]\n\n2004-02-04  Robert Dewar  <dewar@gnat.com>\n\n\t* 5gtasinf.adb, 5gtasinf.ads, 5gtaprop.adb, ali.adb,\n\tali.ads, gprcmd.adb: Minor reformatting\n\n\t* bindgen.adb: Output restrictions string for new style restrictions\n\thandling\n\n\t* impunit.adb: Add s-rident.ads (System.Rident) and\n\ts-restri (System.Restrictions)\n\n\t* lib-writ.adb: Fix bug in writing restrictions string (last few\n\tentries wrong)\n\n\t* s-restri.ads, s-restri.adb: Change name Restrictions to\n\tRun_Time_Restrictions to avoid conflict with package name.\n\tAdd circuit to read and acquire run time restrictions.\n\n2004-02-04  Jose Ruiz  <ruiz@act-europe.fr>\n\n\t* restrict.ads, restrict.adb: Use the new restriction\n\tNo_Task_Attributes_Package instead of the old No_Task_Attributes.\n\n\t* sem_prag.adb: No_Task_Attributes is a synonym of\n\tNo_Task_Attributes_Package.\n\n\t* snames.ads, snames.adb: New entry for proper handling of\n\tNo_Task_Attributes.\n\n\t* s-rident.ads: Adding restriction No_Task_Attributes_Package\n\t(AI-00249) that supersedes the GNAT specific restriction\n\tNo_Task_Attributes.\n\n2004-02-04  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_prag.adb:\n\t(Analyze_Pragma, case Warnings): In an inlined body, as in an instance\n\t body, an identifier may be wrapped in an unchecked conversion.\n\n2004-02-04  Vincent Celier  <celier@gnat.com>\n\n\t* lib-writ.ads: Comment update for the W lines\n\n\t* bld.adb: (Expression): An empty string list is static\n\n\t* fname-uf.adb: Minor comment update\n\n\t* fname-uf.ads: (Get_File_Name): Document new parameter May_Fail\n\n\t* gnatbind.adb: Initialize Cumulative_Restrictions with the\n\trestrictions on the target.\n\nFrom-SVN: r77233", "tree": {"sha": "eb723f684eca66cfc93f09df6fa537a3371b2f14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb723f684eca66cfc93f09df6fa537a3371b2f14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06effe875c0dad1b8f27e868058d8401e74a4363", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06effe875c0dad1b8f27e868058d8401e74a4363", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06effe875c0dad1b8f27e868058d8401e74a4363", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06effe875c0dad1b8f27e868058d8401e74a4363/comments", "author": null, "committer": null, "parents": [{"sha": "c23796791cc43119331defae7a554fc8358ca6e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23796791cc43119331defae7a554fc8358ca6e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23796791cc43119331defae7a554fc8358ca6e7"}], "stats": {"total": 1184, "additions": 685, "deletions": 499}, "files": [{"sha": "3c70a347ef2b80f4f40b2f1e5f019e4f89af1d97", "filename": "gcc/ada/5gtaprop.adb", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2F5gtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2F5gtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gtaprop.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -141,7 +141,6 @@ package body System.Task_Primitives.Operations is\n    procedure Stack_Guard (T : ST.Task_ID; On : Boolean) is\n       pragma Unreferenced (T);\n       pragma Unreferenced (On);\n-\n    begin\n       null;\n    end Stack_Guard;\n@@ -251,15 +250,13 @@ package body System.Task_Primitives.Operations is\n \n    procedure Finalize_Lock (L : access Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n    procedure Finalize_Lock (L : access RTS_Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n@@ -271,10 +268,8 @@ package body System.Task_Primitives.Operations is\n \n    procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_lock (L);\n-\n       Ceiling_Violation := Result = FUNC_ERR and then errno = EINVAL;\n       pragma Assert (Result /= FUNC_ERR);\n    end Write_Lock;\n@@ -283,7 +278,6 @@ package body System.Task_Primitives.Operations is\n      (L : access RTS_Lock; Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_lock (L);\n@@ -293,7 +287,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Write_Lock (T : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_lock (T.Common.LL.L'Access);\n@@ -316,15 +309,13 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (L : access Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_unlock (L);\n       pragma Assert (Result = 0);\n    end Unlock;\n \n    procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_unlock (L);\n@@ -334,7 +325,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (T : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n@@ -543,7 +533,6 @@ package body System.Task_Primitives.Operations is\n       Reason : System.Tasking.Task_States)\n    is\n       pragma Unreferenced (Reason);\n-\n       Result : Interfaces.C.int;\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n@@ -813,10 +802,8 @@ package body System.Task_Primitives.Operations is\n \n    procedure Exit_Task is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_set_ada_tcb (pthread_self, System.Null_Address);\n-\n       pragma Assert (Result = 0);\n    end Exit_Task;\n \n@@ -826,7 +813,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Task (T : Task_ID) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result :=\n         pthread_kill (T.Common.LL.Thread,\n@@ -854,7 +840,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_ID) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -961,9 +946,10 @@ package body System.Task_Primitives.Operations is\n       if Result = FUNC_ERR then\n          raise Storage_Error;               --  Insufficient resources.\n       end if;\n-\n    end Initialize_Athread_Library;\n \n+--  Package initialization\n+\n begin\n    Initialize_Athread_Library;\n end System.Task_Primitives.Operations;"}, {"sha": "5413ebf88301bd2d1e3e86d7871ae92ed044ea42", "filename": "gcc/ada/5gtasinf.adb", "status": "modified", "additions": 32, "deletions": 47, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2F5gtasinf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2F5gtasinf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gtasinf.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -77,61 +77,52 @@ package body System.Task_Info is\n       ---------\n \n       function \"+\" (R : Resource_T) return Resource_Vector_T is\n-         Result  : Resource_Vector_T  := NO_RESOURCES;\n-\n+         Result : Resource_Vector_T  := NO_RESOURCES;\n       begin\n          Result (Resource_T'Pos (R)) := True;\n          return Result;\n       end \"+\";\n \n       function \"+\" (R1, R2 : Resource_T) return Resource_Vector_T is\n-         Result  : Resource_Vector_T  := NO_RESOURCES;\n-\n+         Result : Resource_Vector_T  := NO_RESOURCES;\n       begin\n          Result (Resource_T'Pos (R1)) := True;\n          Result (Resource_T'Pos (R2)) := True;\n          return Result;\n       end \"+\";\n \n       function \"+\"\n-        (R    : Resource_T;\n-         S    : Resource_Vector_T)\n-         return Resource_Vector_T\n+        (R : Resource_T;\n+         S : Resource_Vector_T) return Resource_Vector_T\n       is\n-         Result  : Resource_Vector_T := S;\n-\n+         Result : Resource_Vector_T := S;\n       begin\n          Result (Resource_T'Pos (R)) := True;\n          return Result;\n       end \"+\";\n \n       function \"+\"\n-        (S    : Resource_Vector_T;\n-         R    : Resource_T)\n-         return Resource_Vector_T\n+        (S : Resource_Vector_T;\n+         R : Resource_T) return Resource_Vector_T\n       is\n-         Result  : Resource_Vector_T :=  S;\n-\n+         Result : Resource_Vector_T :=  S;\n       begin\n          Result (Resource_T'Pos (R)) := True;\n          return Result;\n       end \"+\";\n \n       function \"+\" (S1, S2 : Resource_Vector_T) return Resource_Vector_T is\n-         Result  : Resource_Vector_T;\n-\n+         Result : Resource_Vector_T;\n       begin\n          Result :=  S1 or S2;\n          return Result;\n       end \"+\";\n \n       function \"-\"\n-        (S    : Resource_Vector_T;\n-         R    : Resource_T)\n-         return Resource_Vector_T\n+        (S : Resource_Vector_T;\n+         R : Resource_T) return Resource_Vector_T\n       is\n-         Result  : Resource_Vector_T := S;\n-\n+         Result : Resource_Vector_T := S;\n       begin\n          Result (Resource_T'Pos (R)) := False;\n          return Result;\n@@ -177,29 +168,30 @@ package body System.Task_Info is\n          end if;\n \n          if Attr.NDPRI /= NDP_NONE then\n---  ??? why is that comment out, should it be removed ?\n+\n+--  ??? why is this commented out, should it be removed ?\n --          if Geteuid /= 0 then\n --             raise Permission_Error;\n --          end if;\n \n-            Status := sproc_attr_setprio\n-              (Sproc_Attr'Unrestricted_Access,\n-               int (Attr.NDPRI));\n+            Status :=\n+              sproc_attr_setprio\n+                (Sproc_Attr'Unrestricted_Access, int (Attr.NDPRI));\n          end if;\n \n-         Status := sproc_create\n-           (Sproc'Unrestricted_Access,\n-            Sproc_Attr'Unrestricted_Access,\n-            null,\n-            System.Null_Address);\n+         Status :=\n+           sproc_create\n+             (Sproc'Unrestricted_Access,\n+              Sproc_Attr'Unrestricted_Access,\n+              null,\n+              System.Null_Address);\n \n          if Status /= 0 then\n             Status := sproc_attr_destroy (Sproc_Attr'Unrestricted_Access);\n             raise Sproc_Create_Error;\n          end if;\n \n          Status := sproc_attr_destroy (Sproc_Attr'Unrestricted_Access);\n-\n       end if;\n \n       if Status /= 0 then\n@@ -217,12 +209,10 @@ package body System.Task_Info is\n      (Sproc_Resources : Resource_Vector_T      := NO_RESOURCES;\n       CPU             : CPU_Number             := ANY_CPU;\n       Resident        : Page_Locking           := NOLOCK;\n-      NDPRI           : Non_Degrading_Priority := NDP_NONE)\n-      return            sproc_t\n+      NDPRI           : Non_Degrading_Priority := NDP_NONE) return sproc_t\n    is\n       Attr : constant Sproc_Attributes :=\n-        (Sproc_Resources, CPU, Resident, NDPRI);\n-\n+               (Sproc_Resources, CPU, Resident, NDPRI);\n    begin\n       return New_Sproc (Attr);\n    end New_Sproc;\n@@ -233,8 +223,7 @@ package body System.Task_Info is\n \n    function Unbound_Thread_Attributes\n      (Thread_Resources : Resource_Vector_T := NO_RESOURCES;\n-      Thread_Timeslice : Duration          := 0.0)\n-      return             Thread_Attributes\n+      Thread_Timeslice : Duration          := 0.0) return Thread_Attributes\n    is\n    begin\n       return (False, Thread_Resources, Thread_Timeslice);\n@@ -265,11 +254,10 @@ package body System.Task_Info is\n       CPU              : CPU_Number             := ANY_CPU;\n       Resident         : Page_Locking           := NOLOCK;\n       NDPRI            : Non_Degrading_Priority := NDP_NONE)\n-      return             Thread_Attributes\n+      return Thread_Attributes\n    is\n       Sproc : constant sproc_t := New_Sproc\n-        (Sproc_Resources, CPU, Resident, NDPRI);\n-\n+                (Sproc_Resources, CPU, Resident, NDPRI);\n    begin\n       return (True, Thread_Resources, Thread_Timeslice, Sproc);\n    end Bound_Thread_Attributes;\n@@ -280,8 +268,7 @@ package body System.Task_Info is\n \n    function New_Unbound_Thread_Attributes\n      (Thread_Resources : Resource_Vector_T := NO_RESOURCES;\n-      Thread_Timeslice : Duration          := 0.0)\n-      return             Task_Info_Type\n+      Thread_Timeslice : Duration          := 0.0) return Task_Info_Type\n    is\n    begin\n       return new Thread_Attributes'\n@@ -295,8 +282,7 @@ package body System.Task_Info is\n    function New_Bound_Thread_Attributes\n      (Thread_Resources : Resource_Vector_T := NO_RESOURCES;\n       Thread_Timeslice : Duration          := 0.0;\n-      Sproc            : sproc_t)\n-      return             Task_Info_Type\n+      Sproc            : sproc_t) return Task_Info_Type\n    is\n    begin\n       return new Thread_Attributes'\n@@ -314,11 +300,10 @@ package body System.Task_Info is\n       CPU              : CPU_Number             := ANY_CPU;\n       Resident         : Page_Locking           := NOLOCK;\n       NDPRI            : Non_Degrading_Priority := NDP_NONE)\n-      return             Task_Info_Type\n+      return Task_Info_Type\n    is\n       Sproc : constant sproc_t := New_Sproc\n-        (Sproc_Resources, CPU, Resident, NDPRI);\n-\n+                (Sproc_Resources, CPU, Resident, NDPRI);\n    begin\n       return new Thread_Attributes'\n         (True, Thread_Resources, Thread_Timeslice, Sproc);"}, {"sha": "f986bf934afdea472e053e293189fa6f7f355aab", "filename": "gcc/ada/5gtasinf.ads", "status": "modified", "additions": 22, "deletions": 32, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2F5gtasinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2F5gtasinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gtasinf.ads?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,14 +63,14 @@ package System.Task_Info is\n \n    --  Each thread has a number of attributes that dictate it's scheduling.\n    --  These attributes are:\n-   --\n+\n    --      Bound_To_Sproc:  whether the thread is bound to a specific sproc\n    --                       for its entire lifetime.\n-   --\n+\n    --      Timeslice:       Amount of time that a thread is allowed to execute\n    --                       before the system yeilds control to another thread\n    --                       of equal priority.\n-   --\n+\n    --      Resource_Vector: A bitmask used to control the binding of threads\n    --                       to sprocs.\n    --\n@@ -113,33 +113,27 @@ package System.Task_Info is\n \n    package Resource_Vector_Functions is\n       function \"+\"\n-        (R    : Resource_T)\n-         return Resource_Vector_T;\n+        (R : Resource_T) return Resource_Vector_T;\n \n       function \"+\"\n-        (R1   : Resource_T;\n-         R2   : Resource_T)\n-         return Resource_Vector_T;\n+        (R1 : Resource_T;\n+         R2 : Resource_T) return Resource_Vector_T;\n \n       function \"+\"\n-        (R    : Resource_T;\n-         S    : Resource_Vector_T)\n-         return Resource_Vector_T;\n+        (R : Resource_T;\n+         S : Resource_Vector_T) return Resource_Vector_T;\n \n       function \"+\"\n-        (S    : Resource_Vector_T;\n-         R    : Resource_T)\n-         return Resource_Vector_T;\n+        (S : Resource_Vector_T;\n+         R : Resource_T) return Resource_Vector_T;\n \n       function \"+\"\n-        (S1   : Resource_Vector_T;\n-         S2   : Resource_Vector_T)\n-         return Resource_Vector_T;\n+        (S1 : Resource_Vector_T;\n+         S2 : Resource_Vector_T) return Resource_Vector_T;\n \n       function \"-\"\n-        (S    : Resource_Vector_T;\n-         R    : Resource_T)\n-         return Resource_Vector_T;\n+        (S : Resource_Vector_T;\n+         R : Resource_T) return Resource_Vector_T;\n    end Resource_Vector_Functions;\n \n    ----------------------\n@@ -208,8 +202,7 @@ package System.Task_Info is\n      (Sproc_Resources : Resource_Vector_T      := NO_RESOURCES;\n       CPU             : CPU_Number             := ANY_CPU;\n       Resident        : Page_Locking           := NOLOCK;\n-      NDPRI           : Non_Degrading_Priority := NDP_NONE)\n-      return            sproc_t;\n+      NDPRI           : Non_Degrading_Priority := NDP_NONE) return sproc_t;\n    --  Allocates a sproc_t control structure and creates the\n    --  corresponding sproc.\n \n@@ -239,14 +232,12 @@ package System.Task_Info is\n \n    function Unbound_Thread_Attributes\n      (Thread_Resources : Resource_Vector_T := NO_RESOURCES;\n-      Thread_Timeslice : Duration          := 0.0)\n-      return             Thread_Attributes;\n+      Thread_Timeslice : Duration          := 0.0) return Thread_Attributes;\n \n    function Bound_Thread_Attributes\n      (Thread_Resources : Resource_Vector_T := NO_RESOURCES;\n       Thread_Timeslice : Duration          := 0.0;\n-      Sproc            : sproc_t)\n-      return             Thread_Attributes;\n+      Sproc            : sproc_t) return Thread_Attributes;\n \n    function Bound_Thread_Attributes\n      (Thread_Resources : Resource_Vector_T      := NO_RESOURCES;\n@@ -255,20 +246,19 @@ package System.Task_Info is\n       CPU              : CPU_Number             := ANY_CPU;\n       Resident         : Page_Locking           := NOLOCK;\n       NDPRI            : Non_Degrading_Priority := NDP_NONE)\n-      return             Thread_Attributes;\n+      return Thread_Attributes;\n \n    type Task_Info_Type is access all Thread_Attributes;\n \n    function New_Unbound_Thread_Attributes\n      (Thread_Resources : Resource_Vector_T := NO_RESOURCES;\n       Thread_Timeslice : Duration          := 0.0)\n-      return             Task_Info_Type;\n+      return Task_Info_Type;\n \n    function New_Bound_Thread_Attributes\n      (Thread_Resources : Resource_Vector_T := NO_RESOURCES;\n       Thread_Timeslice : Duration          := 0.0;\n-      Sproc            : sproc_t)\n-      return             Task_Info_Type;\n+      Sproc            : sproc_t) return Task_Info_Type;\n \n    function New_Bound_Thread_Attributes\n      (Thread_Resources : Resource_Vector_T      := NO_RESOURCES;\n@@ -277,7 +267,7 @@ package System.Task_Info is\n       CPU              : CPU_Number             := ANY_CPU;\n       Resident         : Page_Locking           := NOLOCK;\n       NDPRI            : Non_Degrading_Priority := NDP_NONE)\n-      return             Task_Info_Type;\n+      return Task_Info_Type;\n \n    Unspecified_Task_Info : constant Task_Info_Type := null;\n "}, {"sha": "af2e8e4dc50c63ca3b6c11850144359d6cbca4a4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -1,3 +1,55 @@\n+2004-02-04  Robert Dewar  <dewar@gnat.com>\n+\n+\t* 5gtasinf.adb, 5gtasinf.ads, 5gtaprop.adb, ali.adb,\n+\tali.ads, gprcmd.adb: Minor reformatting\n+\n+\t* bindgen.adb: Output restrictions string for new style restrictions\n+\thandling\n+\n+\t* impunit.adb: Add s-rident.ads (System.Rident) and\n+\ts-restri (System.Restrictions)\n+\n+\t* lib-writ.adb: Fix bug in writing restrictions string (last few\n+\tentries wrong)\n+\n+\t* s-restri.ads, s-restri.adb: Change name Restrictions to\n+\tRun_Time_Restrictions to avoid conflict with package name.\n+\tAdd circuit to read and acquire run time restrictions.\n+\n+2004-02-04  Jose Ruiz  <ruiz@act-europe.fr>\n+\n+\t* restrict.ads, restrict.adb: Use the new restriction\n+\tNo_Task_Attributes_Package instead of the old No_Task_Attributes.\n+\n+\t* sem_prag.adb: No_Task_Attributes is a synonym of\n+\tNo_Task_Attributes_Package.\n+\n+\t* snames.ads, snames.adb: New entry for proper handling of\n+\tNo_Task_Attributes.\n+\n+\t* s-rident.ads: Adding restriction No_Task_Attributes_Package\n+\t(AI-00249) that supersedes the GNAT specific restriction\n+\tNo_Task_Attributes.\n+\n+2004-02-04  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_prag.adb: \n+\t(Analyze_Pragma, case Warnings): In an inlined body, as in an instance\n+\t body, an identifier may be wrapped in an unchecked conversion.\n+\n+2004-02-04  Vincent Celier  <celier@gnat.com>\n+\n+\t* lib-writ.ads: Comment update for the W lines\n+\n+\t* bld.adb: (Expression): An empty string list is static\n+\n+\t* fname-uf.adb: Minor comment update\n+\n+\t* fname-uf.ads: (Get_File_Name): Document new parameter May_Fail\n+\n+\t* gnatbind.adb: Initialize Cumulative_Restrictions with the\n+\trestrictions on the target.\n+\n 2004-02-03  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* ada/trans.c (gigi): Use gen_rtx_SYMBOL_REF instead of"}, {"sha": "66b748368ce339930dc7671d59edea92cac9b2bf", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -24,13 +24,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Butil;    use Butil;\n-with Debug;    use Debug;\n-with Fname;    use Fname;\n-with Namet;    use Namet;\n-with Opt;      use Opt;\n-with Osint;    use Osint;\n-with Output;   use Output;\n+with Butil;  use Butil;\n+with Debug;  use Debug;\n+with Fname;  use Fname;\n+with Namet;  use Namet;\n+with Opt;    use Opt;\n+with Osint;  use Osint;\n+with Output; use Output;\n \n package body ALI is\n \n@@ -105,8 +105,7 @@ package body ALI is\n       Err          : Boolean;\n       Read_Xref    : Boolean := False;\n       Read_Lines   : String := \"\";\n-      Ignore_Lines : String := \"X\")\n-      return         ALI_Id\n+      Ignore_Lines : String := \"X\") return ALI_Id\n    is\n       P         : Text_Ptr := T'First;\n       Line      : Logical_Line_Number := 1;\n@@ -328,8 +327,10 @@ package body ALI is\n       -- Get_Name --\n       --------------\n \n-      function Get_Name (Lower : Boolean := False;\n-                         Ignore_Spaces : Boolean := False) return Name_Id is\n+      function Get_Name\n+        (Lower         : Boolean := False;\n+         Ignore_Spaces : Boolean := False) return Name_Id\n+      is\n       begin\n          Name_Len := 0;\n          Skip_Space;"}, {"sha": "7fbf1a48e78afc3a99656f66416b56afc6505be3", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -814,8 +814,7 @@ package ALI is\n       Err          : Boolean;\n       Read_Xref    : Boolean := False;\n       Read_Lines   : String := \"\";\n-      Ignore_Lines : String := \"X\")\n-      return         ALI_Id;\n+      Ignore_Lines : String := \"X\") return ALI_Id;\n    --  Given the text, T, of an ALI file, F, scan and store the information\n    --  from the file, and return the Id of the resulting entry in the ALI\n    --  table. Switch settings may be modified as described above in the"}, {"sha": "f9b6b819b0b475b56100b10ac2f92f885ef98d6a", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 65, "deletions": 10, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -141,6 +141,16 @@ package body Bindgen is\n    procedure Gen_Output_File_C (Filename : String);\n    --  Generate output file (C code case)\n \n+   procedure Gen_Restrictions_String_1;\n+   --  Generate first restrictions string, which consists of the parameters\n+   --  the first R line, as described in lib-writ.ads, with the restrictions\n+   --  being those for the entire partition (from Cumulative_Restrictions).\n+\n+   procedure Gen_Restrictions_String_2;\n+   --  Generate first restrictions string, which consists of the parameters\n+   --  the second R line, as described in lib-writ.ads, with the restrictions\n+   --  being those for the entire partition (from Cumulative_Restrictions).\n+\n    procedure Gen_Versions_Ada;\n    --  Output series of definitions for unit versions (Ada code case)\n \n@@ -358,13 +368,15 @@ package body Bindgen is\n \n          Set_String (\"      Restrictions : constant String :=\");\n          Write_Statement_Buffer;\n-         Set_String (\"        \"\"\");\n \n-         for J in All_Restrictions loop\n-            null;\n-         end loop;\n+         Set_String (\"        \"\"\");\n+         Gen_Restrictions_String_1;\n+         Set_String (\"\"\" &\");\n+         Write_Statement_Buffer;\n \n-         Set_String (\"\"\";\");\n+         Set_String (\"        \"\"\");\n+         Gen_Restrictions_String_2;\n+         Set_String (\"\"\" & ASCII.Nul;\");\n          Write_Statement_Buffer;\n          WBI (\"\");\n \n@@ -606,11 +618,8 @@ package body Bindgen is\n          --  Generate definition for restrictions string\n \n          Set_String (\"   const char *restrictions = \"\"\");\n-\n-         for J in All_Restrictions loop\n-            null;\n-         end loop;\n-\n+         Gen_Restrictions_String_1;\n+         Gen_Restrictions_String_2;\n          Set_String (\"\"\";\");\n          Write_Statement_Buffer;\n \n@@ -2453,6 +2462,52 @@ package body Bindgen is\n       Close_Binder_Output;\n    end Gen_Output_File_C;\n \n+   -------------------------------\n+   -- Gen_Restrictions_String_1 --\n+   -------------------------------\n+\n+   procedure Gen_Restrictions_String_1 is\n+   begin\n+      for R in All_Boolean_Restrictions loop\n+         if Cumulative_Restrictions.Set (R) then\n+            Set_Char ('r');\n+         elsif Cumulative_Restrictions.Violated (R) then\n+            Set_Char ('v');\n+         else\n+            Set_Char ('n');\n+         end if;\n+      end loop;\n+   end Gen_Restrictions_String_1;\n+\n+   -------------------------------\n+   -- Gen_Restrictions_String_2 --\n+   -------------------------------\n+\n+   procedure Gen_Restrictions_String_2 is\n+   begin\n+      for RP in All_Parameter_Restrictions loop\n+         if Cumulative_Restrictions.Set (RP) then\n+            Set_Char ('r');\n+            Set_Int (Int (Cumulative_Restrictions.Value (RP)));\n+         else\n+            Set_Char ('n');\n+         end if;\n+\n+         if not Cumulative_Restrictions.Violated (RP)\n+           or else RP not in Checked_Parameter_Restrictions\n+         then\n+            Set_Char ('n');\n+         else\n+            Set_Char ('v');\n+            Set_Int (Int (Cumulative_Restrictions.Count (RP)));\n+\n+            if Cumulative_Restrictions.Unknown (RP) then\n+               Set_Char ('+');\n+            end if;\n+         end if;\n+      end loop;\n+   end Gen_Restrictions_String_2;\n+\n    ----------------------\n    -- Gen_Versions_Ada --\n    ----------------------"}, {"sha": "d31ed69f22d7456c3ca8f83e6ea0c0150f23dbbb", "filename": "gcc/ada/bld.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fbld.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fbld.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbld.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -525,11 +525,16 @@ package body Bld is\n                                   First_Expression_In_List (Current_Term);\n \n                begin\n-                  if String_Node /= Empty_Node then\n+                  if String_Node = Empty_Node then\n \n                      --  If String_Node is nil, it is an empty list,\n-                     --  there is nothing to do\n+                     --  set Expression_Kind if it is still Undecided\n \n+                     if Expression_Kind = Undecided then\n+                        Expression_Kind := Static_String;\n+                     end if;\n+\n+                  else\n                      Expression\n                        (Project    => Project,\n                         First_Term => Tree.First_Term (String_Node),"}, {"sha": "9852688d6861de865088b84916a157e0631e4eb9", "filename": "gcc/ada/fname-uf.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Ffname-uf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Ffname-uf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -123,8 +123,8 @@ package body Fname.UF is\n    -------------------\n \n    function Get_File_Name\n-     (Uname   : Unit_Name_Type;\n-      Subunit : Boolean;\n+     (Uname    : Unit_Name_Type;\n+      Subunit  : Boolean;\n       May_Fail : Boolean := False) return File_Name_Type\n    is\n       Unit_Char : Character;\n@@ -387,12 +387,12 @@ package body Fname.UF is\n \n                   --  If we are in the second search of the table, we accept\n                   --  the file name without checking, because we know that\n-                  --  the file does not exist.\n+                  --  the file does not exist, except when May_Fail is True,\n+                  --  in which case we return No_File.\n \n                   if No_File_Check then\n                      if May_Fail then\n                         return No_File;\n-\n                      else\n                         return Fnam;\n                      end if;"}, {"sha": "aad0e253d315a525cf0a4fd79fa55421e2055238", "filename": "gcc/ada/fname-uf.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Ffname-uf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Ffname-uf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.ads?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -44,14 +44,18 @@ package Fname.UF is\n    -----------------\n \n    function Get_File_Name\n-     (Uname   : Unit_Name_Type;\n-      Subunit : Boolean;\n+     (Uname    : Unit_Name_Type;\n+      Subunit  : Boolean;\n       May_Fail : Boolean := False) return File_Name_Type;\n    --  This function returns the file name that corresponds to a given unit\n    --  name, Uname. The Subunit parameter is set True for subunits, and\n    --  false for all other kinds of units. The caller is responsible for\n    --  ensuring that the unit name meets the requirements given in package\n    --  Uname and described above.\n+   --  When May_Fail is True, if the file cannot be found, this function\n+   --  returns No_File. When it is False, if the file cannot be found,\n+   --  a file name compatible with one pattern Source_File_Name pragma is\n+   --  returned.\n \n    procedure Initialize;\n    --  Initialize internal tables. This is called automatically when the"}, {"sha": "e4af0c39de4ca4f4ad7588ef580877c5fb794248", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -447,6 +447,12 @@ begin\n \n    Targparm.Get_Target_Parameters;\n \n+   --  Initialize Cumulative_Restrictions with the restrictions on the target\n+   --  scanned from the system.ads file. Then as we read ALI files, we will\n+   --  accumulate additional restrictions specified in other files.\n+\n+   Cumulative_Restrictions := Targparm.Restrictions_On_Target;\n+\n    --  On OpenVMS, when -L is used, all external names used in pragmas Export\n    --  are in upper case. The reason is that on OpenVMS, the macro-assembler\n    --  MACASM-32, used to build Stand-Alone Libraries, only understands"}, {"sha": "369dae07147199356ea7dbf79b427247ebd28c4a", "filename": "gcc/ada/gprcmd.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fgprcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fgprcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprcmd.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -113,6 +113,7 @@ procedure Gprcmd is\n          Put_Line\n            (Standard_Error,\n             \"bad call to gprcmd with\" & Argument_Count'Img & \" arguments.\");\n+\n          for J in 0 .. Argument_Count loop\n             Put (Standard_Error, Argument (J) & \" \");\n          end loop;\n@@ -473,9 +474,9 @@ begin\n             end if;\n          end;\n \n-      else\n-         --  Uknown command\n+      --  Unknown command\n \n+      else\n          Check_Args (False);\n       end if;\n    end;"}, {"sha": "1f6b5b6658ef40243bd1783164e63e3d097c740b", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -297,6 +297,8 @@ package body Impunit is\n      \"s-assert\",    -- System.Assertions\n      \"s-memory\",    -- System.Memory\n      \"s-parint\",    -- System.Partition_Interface\n+     \"s-restri\",    -- System.Restrictions\n+     \"s-rident\",    -- System.Rident\n      \"s-tasinf\",    -- System.Task_Info\n      \"s-wchcnv\",    -- System.Wch_Cnv\n      \"s-wchcon\");   -- System.Wch_Con"}, {"sha": "2165505481ccd9fefdd752fc3e0b477d22e5114d", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -691,7 +691,7 @@ package body Lib.Writ is\n          end loop;\n       end Write_With_Lines;\n \n-   --  Start of processing for Writ_ALI\n+   --  Start of processing for Write_ALI\n \n    begin\n       --  We never write an ALI file if the original operating mode was\n@@ -919,7 +919,6 @@ package body Lib.Writ is\n          then\n             if not Has_No_Elaboration_Code (Cunit (Unit)) then\n                Main_Restrictions.Violated (No_Elaboration_Code) := True;\n-               Main_Restrictions.Count    (No_Elaboration_Code) := -1;\n             end if;\n          end if;\n       end loop;"}, {"sha": "6aa8dcf97ef1901244668e1efee52194b9388365", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -406,11 +406,13 @@ package Lib.Writ is\n    --      One of these lines is present for each unit that is mentioned in\n    --      an explicit with clause by the current unit. The first parameter\n    --      is the unit name in internal format. The second parameter is the\n-   --      file name of the file that must be compiled to compile this unit\n-   --      (which is usually the file for the body, except for packages\n-   --      which have no body). The third parameter is the file name of the\n-   --      library information file that contains the results of compiling\n-   --      this unit. The optional modifiers are used as follows:\n+   --      file name of the file that must be compiled to compile this unit.\n+   --      It is usually the file for the body, except for packages\n+   --      which have no body; for units that need a body, if the source file\n+   --      for the body cannot be found, the file name of the spec is used\n+   --      instead. The third parameter is the file name of the library\n+   --      information file that contains the results of compiling this unit.\n+   --      The optional modifiers are used as follows:\n    --\n    --        E   pragma Elaborate applies to this unit\n    --"}, {"sha": "4e7222701ee2e0cce844a8e9307090ddbaa9010d", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -372,7 +372,7 @@ package body Restrict is\n         and then Restrictions.Set (No_Protected_Type_Allocators)\n         and then Restrictions.Set (No_Local_Protected_Objects)\n         and then Restrictions.Set (No_Requeue_Statements)\n-        and then Restrictions.Set (No_Task_Attributes)\n+        and then Restrictions.Set (No_Task_Attributes_Package)\n         and then Restrictions.Set (Max_Asynchronous_Select_Nesting)\n         and then Restrictions.Set (Max_Task_Entries)\n         and then Restrictions.Set (Max_Protected_Entries)\n@@ -472,7 +472,7 @@ package body Restrict is\n       Set_Restriction (No_Protected_Type_Allocators, N);\n       Set_Restriction (No_Local_Protected_Objects,   N);\n       Set_Restriction (No_Requeue_Statements,        N);\n-      Set_Restriction (No_Task_Attributes,           N);\n+      Set_Restriction (No_Task_Attributes_Package,   N);\n \n       --  Set parameter restrictions\n "}, {"sha": "0d2f72f350d03ab8487c50aa02a0e48e8e5e30f3", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -77,27 +77,27 @@ package Restrict is\n    end record;\n \n    Unit_Array : constant array (Positive range <>) of Unit_Entry := (\n-     (No_Asynchronous_Control,    \"a-astaco\"),\n-     (No_Calendar,                \"a-calend\"),\n-     (No_Calendar,                \"calendar\"),\n-     (No_Delay,                   \"a-calend\"),\n-     (No_Delay,                   \"calendar\"),\n-     (No_Dynamic_Priorities,      \"a-dynpri\"),\n-     (No_Finalization,            \"a-finali\"),\n-     (No_IO,                      \"a-direio\"),\n-     (No_IO,                      \"directio\"),\n-     (No_IO,                      \"a-sequio\"),\n-     (No_IO,                      \"sequenio\"),\n-     (No_IO,                      \"a-ststio\"),\n-     (No_IO,                      \"a-textio\"),\n-     (No_IO,                      \"text_io \"),\n-     (No_IO,                      \"a-witeio\"),\n-     (No_Task_Attributes,         \"a-tasatt\"),\n-     (No_Streams,                 \"a-stream\"),\n-     (No_Unchecked_Conversion,    \"a-unccon\"),\n-     (No_Unchecked_Conversion,    \"unchconv\"),\n-     (No_Unchecked_Deallocation,  \"a-uncdea\"),\n-     (No_Unchecked_Deallocation,  \"unchdeal\"));\n+     (No_Asynchronous_Control,     \"a-astaco\"),\n+     (No_Calendar,                 \"a-calend\"),\n+     (No_Calendar,                 \"calendar\"),\n+     (No_Delay,                    \"a-calend\"),\n+     (No_Delay,                    \"calendar\"),\n+     (No_Dynamic_Priorities,       \"a-dynpri\"),\n+     (No_Finalization,             \"a-finali\"),\n+     (No_IO,                       \"a-direio\"),\n+     (No_IO,                       \"directio\"),\n+     (No_IO,                       \"a-sequio\"),\n+     (No_IO,                       \"sequenio\"),\n+     (No_IO,                       \"a-ststio\"),\n+     (No_IO,                       \"a-textio\"),\n+     (No_IO,                       \"text_io \"),\n+     (No_IO,                       \"a-witeio\"),\n+     (No_Task_Attributes_Package,  \"a-tasatt\"),\n+     (No_Streams,                  \"a-stream\"),\n+     (No_Unchecked_Conversion,     \"a-unccon\"),\n+     (No_Unchecked_Conversion,     \"unchconv\"),\n+     (No_Unchecked_Deallocation,   \"a-uncdea\"),\n+     (No_Unchecked_Deallocation,   \"unchdeal\"));\n \n    --  The following map has True for all GNAT pragmas. It is used to\n    --  implement pragma Restrictions (No_Implementation_Restrictions)\n@@ -123,7 +123,7 @@ package Restrict is\n       No_Select_Statements               => True,\n       No_Standard_Storage_Pools          => True,\n       No_Streams                         => True,\n-      No_Task_Attributes                 => True,\n+      No_Task_Attributes_Package         => True,\n       No_Task_Termination                => True,\n       No_Wide_Characters                 => True,\n       Static_Priorities                  => True,"}, {"sha": "be39f23183191094556bc7d5a9b9095addc49578", "filename": "gcc/ada/s-restri.adb", "status": "modified", "additions": 91, "deletions": 5, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fs-restri.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fs-restri.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -40,9 +40,9 @@ package body System.Restrictions is\n \n    function Abort_Allowed return Boolean is\n    begin\n-      return Restrictions.Violated (No_Abort_Statements)\n+      return Run_Time_Restrictions.Violated (No_Abort_Statements)\n                or else\n-             Restrictions.Violated (Max_Asynchronous_Select_Nesting);\n+             Run_Time_Restrictions.Violated (Max_Asynchronous_Select_Nesting);\n    end Abort_Allowed;\n \n    ---------------------\n@@ -51,12 +51,98 @@ package body System.Restrictions is\n \n    function Tasking_Allowed return Boolean is\n    begin\n-      return Restrictions.Violated (Max_Tasks)\n+      return Run_Time_Restrictions.Violated (Max_Tasks)\n                or else\n-             Restrictions.Violated (No_Tasking);\n+             Run_Time_Restrictions.Violated (No_Tasking);\n    end Tasking_Allowed;\n \n+--  Package elaboration code (acquire restrictions)\n+\n begin\n-   null;\n+   Acquire_Restrictions : declare\n+\n+      subtype Big_String is String (Positive);\n+      type Big_String_Ptr is access all Big_String;\n+\n+      RString : Big_String_Ptr;\n+      pragma Import (C, RString, \"__gl_restrictions\");\n+\n+      P : Natural := 1;\n+      --  Pointer to scan string\n+\n+      C : Character;\n+      --  Next character from string\n+\n+      function Get_Char return Character;\n+      --  Get next character from string\n+\n+      function Get_Natural return Natural;\n+      --  Scan out natural value known to be in range, updating P past it\n+\n+      --------------\n+      -- Get_Char --\n+      --------------\n+\n+      function Get_Char return Character is\n+      begin\n+         P := P + 1;\n+         return RString (P - 1);\n+      end Get_Char;\n+\n+      -----------------\n+      -- Get_Natural --\n+      -----------------\n+\n+      function Get_Natural return Natural is\n+         N : Natural := 0;\n+\n+      begin\n+         while RString (P) in '0' .. '9' loop\n+            N := N * 10 + (Character'Pos (Get_Char) - Character'Pos ('0'));\n+         end loop;\n+\n+         return N;\n+      end Get_Natural;\n+\n+   --  Start of processing for Acquire_Restrictions\n+\n+   begin\n+      --  Acquire data corresponding to first R line\n+\n+      for R in All_Boolean_Restrictions loop\n+         C := Get_Char;\n+\n+         if C = 'v' then\n+            Run_Time_Restrictions.Violated (R) := True;\n+\n+         elsif C = 'r' then\n+            Run_Time_Restrictions.Set (R) := True;\n+         end if;\n+      end loop;\n+\n+      --  Acquire data corresponding to second R line\n+\n+      for RP in All_Parameter_Restrictions loop\n+\n+         --  Acquire restrictions pragma information\n+\n+         if Get_Char = 'r' then\n+            Run_Time_Restrictions.Set (RP) := True;\n+            Run_Time_Restrictions.Value (RP) := Get_Natural;\n+         end if;\n+\n+         --  Acquire restrictions violations information\n+\n+         if Get_Char = 'v' then\n+            Run_Time_Restrictions.Violated (RP) := True;\n+            Run_Time_Restrictions.Count (RP) := Get_Natural;\n+\n+            if RString (P) = '+' then\n+               Run_Time_Restrictions.Unknown (RP) := True;\n+               P := P + 1;\n+            end if;\n+         end if;\n+      end loop;\n+   end Acquire_Restrictions;\n end System.Restrictions;\n "}, {"sha": "2160f07a96e769814f96ab96fd522b11788a3873", "filename": "gcc/ada/s-restri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fs-restri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fs-restri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.ads?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -39,7 +39,7 @@ package System.Restrictions is\n    pragma Discard_Names;\n    package Rident is new System.Rident;\n \n-   Restrictions : Rident.Restrictions_Info;\n+   Run_Time_Restrictions : Rident.Restrictions_Info;\n \n    ------------------\n    -- Subprograms --"}, {"sha": "6bc09ff3916f862a23a007cbca18637911a97b43", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -97,7 +97,7 @@ package System.Rident is\n       No_Standard_Storage_Pools,               -- GNAT\n       No_Streams,                              -- GNAT\n       No_Task_Allocators,                      -- (RM D.7(7))\n-      No_Task_Attributes,                      -- GNAT\n+      No_Task_Attributes_Package,              -- GNAT\n       No_Task_Hierarchy,                       -- (RM D.7(3), H.4(3))\n       No_Task_Termination,                     -- GNAT (Ravenscar)\n       No_Tasking,                              -- GNAT\n@@ -154,8 +154,9 @@ package System.Rident is\n \n    --  Synonyms permitted for historical purposes of compatibility\n \n-   --   No_Requeue   synonym for No_Requeue_Statements\n-   --   No_Tasking   synonym for Max_Tasks => 0\n+   --   No_Requeue         synonym for No_Requeue_Statements\n+   --   No_Tasking         synonym for Max_Tasks => 0\n+   --   No_Task_Attributes synonym for No_Task_Attributes_Package\n \n    subtype All_Restrictions is Restriction_Id range\n      Boolean_Entry_Barriers .. Max_Storage_At_Blocking;"}, {"sha": "151721c4ba4f4b87f3e8d3209e8c7b84d9202e74", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -3280,6 +3280,15 @@ package body Sem_Prag is\n                      Set_Restriction (No_Requeue_Statements, N);\n                      Set_Warning (No_Requeue_Statements);\n \n+                  --  No_Task_Attributes is a synonym for\n+                  --  No_Task_Attributes_Package\n+\n+                  elsif Chars (Expr) = Name_No_Task_Attributes then\n+                     Check_Restriction\n+                       (No_Implementation_Restrictions, Arg);\n+                     Set_Restriction (No_Task_Attributes_Package, N);\n+                     Set_Warning (No_Task_Attributes_Package);\n+\n                   --  Normal processing for all other cases\n \n                   else\n@@ -9648,7 +9657,8 @@ package body Sem_Prag is\n                   --  the formal may be wrapped in a conversion if the actual\n                   --  is a conversion. Retrieve the real entity name.\n \n-                  if In_Instance_Body\n+                  if (In_Instance_Body\n+                       or else In_Inlined_Body)\n                     and then Nkind (E_Id) = N_Unchecked_Type_Conversion\n                   then\n                      E_Id := Expression (E_Id);"}, {"sha": "4738620c3e9e665f7b1b0bd9ac7c6324ab182580", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -335,6 +335,7 @@ package body Snames is\n      \"parameter_types#\" &\n      \"reference#\" &\n      \"no_requeue#\" &\n+     \"no_task_attributes#\" &\n      \"restricted#\" &\n      \"result_mechanism#\" &\n      \"result_type#\" &"}, {"sha": "679cd560514c3d3fb4db61da619225b9f994365d", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 331, "deletions": 330, "changes": 661, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06effe875c0dad1b8f27e868058d8401e74a4363/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=06effe875c0dad1b8f27e868058d8401e74a4363", "patch": "@@ -524,33 +524,34 @@ package Snames is\n    Name_Parameter_Types                : constant Name_Id := N + 275;\n    Name_Reference                      : constant Name_Id := N + 276;\n    Name_No_Requeue                     : constant Name_Id := N + 277;\n-   Name_Restricted                     : constant Name_Id := N + 278;\n-   Name_Result_Mechanism               : constant Name_Id := N + 279;\n-   Name_Result_Type                    : constant Name_Id := N + 280;\n-   Name_Runtime                        : constant Name_Id := N + 281;\n-   Name_SB                             : constant Name_Id := N + 282;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 283;\n-   Name_Section                        : constant Name_Id := N + 284;\n-   Name_Semaphore                      : constant Name_Id := N + 285;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 286;\n-   Name_Static                         : constant Name_Id := N + 287;\n-   Name_Stack_Size                     : constant Name_Id := N + 288;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 289;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 290;\n-   Name_Task_Type                      : constant Name_Id := N + 291;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 292;\n-   Name_Top_Guard                      : constant Name_Id := N + 293;\n-   Name_UBA                            : constant Name_Id := N + 294;\n-   Name_UBS                            : constant Name_Id := N + 295;\n-   Name_UBSB                           : constant Name_Id := N + 296;\n-   Name_Unit_Name                      : constant Name_Id := N + 297;\n-   Name_Unknown                        : constant Name_Id := N + 298;\n-   Name_Unrestricted                   : constant Name_Id := N + 299;\n-   Name_Uppercase                      : constant Name_Id := N + 300;\n-   Name_User                           : constant Name_Id := N + 301;\n-   Name_VAX_Float                      : constant Name_Id := N + 302;\n-   Name_VMS                            : constant Name_Id := N + 303;\n-   Name_Working_Storage                : constant Name_Id := N + 304;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 278;\n+   Name_Restricted                     : constant Name_Id := N + 279;\n+   Name_Result_Mechanism               : constant Name_Id := N + 280;\n+   Name_Result_Type                    : constant Name_Id := N + 281;\n+   Name_Runtime                        : constant Name_Id := N + 282;\n+   Name_SB                             : constant Name_Id := N + 283;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 284;\n+   Name_Section                        : constant Name_Id := N + 285;\n+   Name_Semaphore                      : constant Name_Id := N + 286;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 287;\n+   Name_Static                         : constant Name_Id := N + 288;\n+   Name_Stack_Size                     : constant Name_Id := N + 289;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 290;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 291;\n+   Name_Task_Type                      : constant Name_Id := N + 292;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 293;\n+   Name_Top_Guard                      : constant Name_Id := N + 294;\n+   Name_UBA                            : constant Name_Id := N + 295;\n+   Name_UBS                            : constant Name_Id := N + 296;\n+   Name_UBSB                           : constant Name_Id := N + 297;\n+   Name_Unit_Name                      : constant Name_Id := N + 298;\n+   Name_Unknown                        : constant Name_Id := N + 299;\n+   Name_Unrestricted                   : constant Name_Id := N + 300;\n+   Name_Uppercase                      : constant Name_Id := N + 301;\n+   Name_User                           : constant Name_Id := N + 302;\n+   Name_VAX_Float                      : constant Name_Id := N + 303;\n+   Name_VMS                            : constant Name_Id := N + 304;\n+   Name_Working_Storage                : constant Name_Id := N + 305;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -564,374 +565,374 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 305;\n-   Name_Abort_Signal                   : constant Name_Id := N + 305;  -- GNAT\n-   Name_Access                         : constant Name_Id := N + 306;\n-   Name_Address                        : constant Name_Id := N + 307;\n-   Name_Address_Size                   : constant Name_Id := N + 308;  -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 309;\n-   Name_Alignment                      : constant Name_Id := N + 310;\n-   Name_Asm_Input                      : constant Name_Id := N + 311;  -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 312;  -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 313;  -- VMS\n-   Name_Bit                            : constant Name_Id := N + 314;  -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 315;\n-   Name_Bit_Position                   : constant Name_Id := N + 316;  -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 317;\n-   Name_Callable                       : constant Name_Id := N + 318;\n-   Name_Caller                         : constant Name_Id := N + 319;\n-   Name_Code_Address                   : constant Name_Id := N + 320;  -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 321;\n-   Name_Compose                        : constant Name_Id := N + 322;\n-   Name_Constrained                    : constant Name_Id := N + 323;\n-   Name_Count                          : constant Name_Id := N + 324;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 325; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 326;\n-   Name_Delta                          : constant Name_Id := N + 327;\n-   Name_Denorm                         : constant Name_Id := N + 328;\n-   Name_Digits                         : constant Name_Id := N + 329;\n-   Name_Elaborated                     : constant Name_Id := N + 330; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 331; -- Ada 83\n-   Name_Enum_Rep                       : constant Name_Id := N + 332; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 333; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 334;\n-   Name_External_Tag                   : constant Name_Id := N + 335;\n-   Name_First                          : constant Name_Id := N + 336;\n-   Name_First_Bit                      : constant Name_Id := N + 337;\n-   Name_Fixed_Value                    : constant Name_Id := N + 338; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 339;\n-   Name_Has_Discriminants              : constant Name_Id := N + 340; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 341;\n-   Name_Img                            : constant Name_Id := N + 342; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 343; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 344; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 345;\n-   Name_Last_Bit                       : constant Name_Id := N + 346;\n-   Name_Leading_Part                   : constant Name_Id := N + 347;\n-   Name_Length                         : constant Name_Id := N + 348;\n-   Name_Machine_Emax                   : constant Name_Id := N + 349;\n-   Name_Machine_Emin                   : constant Name_Id := N + 350;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 351;\n-   Name_Machine_Overflows              : constant Name_Id := N + 352;\n-   Name_Machine_Radix                  : constant Name_Id := N + 353;\n-   Name_Machine_Rounds                 : constant Name_Id := N + 354;\n-   Name_Machine_Size                   : constant Name_Id := N + 355; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 356; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 357;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 358; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 359; -- GNAT\n-   Name_Model_Emin                     : constant Name_Id := N + 360;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 361;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 362;\n-   Name_Model_Small                    : constant Name_Id := N + 363;\n-   Name_Modulus                        : constant Name_Id := N + 364;\n-   Name_Null_Parameter                 : constant Name_Id := N + 365; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 366; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 367;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 368; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 369;\n-   Name_Pos                            : constant Name_Id := N + 370;\n-   Name_Position                       : constant Name_Id := N + 371;\n-   Name_Range                          : constant Name_Id := N + 372;\n-   Name_Range_Length                   : constant Name_Id := N + 373; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 374;\n-   Name_Safe_Emax                      : constant Name_Id := N + 375; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 376;\n-   Name_Safe_Large                     : constant Name_Id := N + 377; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 378;\n-   Name_Safe_Small                     : constant Name_Id := N + 379; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 380;\n-   Name_Scaling                        : constant Name_Id := N + 381;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 382;\n-   Name_Size                           : constant Name_Id := N + 383;\n-   Name_Small                          : constant Name_Id := N + 384;\n-   Name_Storage_Size                   : constant Name_Id := N + 385;\n-   Name_Storage_Unit                   : constant Name_Id := N + 386; -- GNAT\n-   Name_Tag                            : constant Name_Id := N + 387;\n-   Name_Target_Name                    : constant Name_Id := N + 388; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 389;\n-   Name_To_Address                     : constant Name_Id := N + 390; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 391; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 392; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 393;\n-   Name_Unchecked_Access               : constant Name_Id := N + 394;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 395;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 396; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 397; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 398; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 399;\n-   Name_Valid                          : constant Name_Id := N + 400;\n-   Name_Value_Size                     : constant Name_Id := N + 401; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 402;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 403; -- GNAT\n-   Name_Wide_Width                     : constant Name_Id := N + 404;\n-   Name_Width                          : constant Name_Id := N + 405;\n-   Name_Word_Size                      : constant Name_Id := N + 406; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 306;\n+   Name_Abort_Signal                   : constant Name_Id := N + 306;  -- GNAT\n+   Name_Access                         : constant Name_Id := N + 307;\n+   Name_Address                        : constant Name_Id := N + 308;\n+   Name_Address_Size                   : constant Name_Id := N + 309;  -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 310;\n+   Name_Alignment                      : constant Name_Id := N + 311;\n+   Name_Asm_Input                      : constant Name_Id := N + 312;  -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 313;  -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 314;  -- VMS\n+   Name_Bit                            : constant Name_Id := N + 315;  -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 316;\n+   Name_Bit_Position                   : constant Name_Id := N + 317;  -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 318;\n+   Name_Callable                       : constant Name_Id := N + 319;\n+   Name_Caller                         : constant Name_Id := N + 320;\n+   Name_Code_Address                   : constant Name_Id := N + 321;  -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 322;\n+   Name_Compose                        : constant Name_Id := N + 323;\n+   Name_Constrained                    : constant Name_Id := N + 324;\n+   Name_Count                          : constant Name_Id := N + 325;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 326; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 327;\n+   Name_Delta                          : constant Name_Id := N + 328;\n+   Name_Denorm                         : constant Name_Id := N + 329;\n+   Name_Digits                         : constant Name_Id := N + 330;\n+   Name_Elaborated                     : constant Name_Id := N + 331; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 332; -- Ada 83\n+   Name_Enum_Rep                       : constant Name_Id := N + 333; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 334; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 335;\n+   Name_External_Tag                   : constant Name_Id := N + 336;\n+   Name_First                          : constant Name_Id := N + 337;\n+   Name_First_Bit                      : constant Name_Id := N + 338;\n+   Name_Fixed_Value                    : constant Name_Id := N + 339; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 340;\n+   Name_Has_Discriminants              : constant Name_Id := N + 341; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 342;\n+   Name_Img                            : constant Name_Id := N + 343; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 344; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 345; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 346;\n+   Name_Last_Bit                       : constant Name_Id := N + 347;\n+   Name_Leading_Part                   : constant Name_Id := N + 348;\n+   Name_Length                         : constant Name_Id := N + 349;\n+   Name_Machine_Emax                   : constant Name_Id := N + 350;\n+   Name_Machine_Emin                   : constant Name_Id := N + 351;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 352;\n+   Name_Machine_Overflows              : constant Name_Id := N + 353;\n+   Name_Machine_Radix                  : constant Name_Id := N + 354;\n+   Name_Machine_Rounds                 : constant Name_Id := N + 355;\n+   Name_Machine_Size                   : constant Name_Id := N + 356; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 357; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 358;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 359; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 360; -- GNAT\n+   Name_Model_Emin                     : constant Name_Id := N + 361;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 362;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 363;\n+   Name_Model_Small                    : constant Name_Id := N + 364;\n+   Name_Modulus                        : constant Name_Id := N + 365;\n+   Name_Null_Parameter                 : constant Name_Id := N + 366; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 367; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 368;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 369; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 370;\n+   Name_Pos                            : constant Name_Id := N + 371;\n+   Name_Position                       : constant Name_Id := N + 372;\n+   Name_Range                          : constant Name_Id := N + 373;\n+   Name_Range_Length                   : constant Name_Id := N + 374; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 375;\n+   Name_Safe_Emax                      : constant Name_Id := N + 376; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 377;\n+   Name_Safe_Large                     : constant Name_Id := N + 378; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 379;\n+   Name_Safe_Small                     : constant Name_Id := N + 380; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 381;\n+   Name_Scaling                        : constant Name_Id := N + 382;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 383;\n+   Name_Size                           : constant Name_Id := N + 384;\n+   Name_Small                          : constant Name_Id := N + 385;\n+   Name_Storage_Size                   : constant Name_Id := N + 386;\n+   Name_Storage_Unit                   : constant Name_Id := N + 387; -- GNAT\n+   Name_Tag                            : constant Name_Id := N + 388;\n+   Name_Target_Name                    : constant Name_Id := N + 389; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 390;\n+   Name_To_Address                     : constant Name_Id := N + 391; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 392; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 393; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 394;\n+   Name_Unchecked_Access               : constant Name_Id := N + 395;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 396;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 397; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 398; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 399; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 400;\n+   Name_Valid                          : constant Name_Id := N + 401;\n+   Name_Value_Size                     : constant Name_Id := N + 402; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 403;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 404; -- GNAT\n+   Name_Wide_Width                     : constant Name_Id := N + 405;\n+   Name_Width                          : constant Name_Id := N + 406;\n+   Name_Word_Size                      : constant Name_Id := N + 407; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 407;\n-   Name_Adjacent                       : constant Name_Id := N + 407;\n-   Name_Ceiling                        : constant Name_Id := N + 408;\n-   Name_Copy_Sign                      : constant Name_Id := N + 409;\n-   Name_Floor                          : constant Name_Id := N + 410;\n-   Name_Fraction                       : constant Name_Id := N + 411;\n-   Name_Image                          : constant Name_Id := N + 412;\n-   Name_Input                          : constant Name_Id := N + 413;\n-   Name_Machine                        : constant Name_Id := N + 414;\n-   Name_Max                            : constant Name_Id := N + 415;\n-   Name_Min                            : constant Name_Id := N + 416;\n-   Name_Model                          : constant Name_Id := N + 417;\n-   Name_Pred                           : constant Name_Id := N + 418;\n-   Name_Remainder                      : constant Name_Id := N + 419;\n-   Name_Rounding                       : constant Name_Id := N + 420;\n-   Name_Succ                           : constant Name_Id := N + 421;\n-   Name_Truncation                     : constant Name_Id := N + 422;\n-   Name_Value                          : constant Name_Id := N + 423;\n-   Name_Wide_Image                     : constant Name_Id := N + 424;\n-   Name_Wide_Value                     : constant Name_Id := N + 425;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 425;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 408;\n+   Name_Adjacent                       : constant Name_Id := N + 408;\n+   Name_Ceiling                        : constant Name_Id := N + 409;\n+   Name_Copy_Sign                      : constant Name_Id := N + 410;\n+   Name_Floor                          : constant Name_Id := N + 411;\n+   Name_Fraction                       : constant Name_Id := N + 412;\n+   Name_Image                          : constant Name_Id := N + 413;\n+   Name_Input                          : constant Name_Id := N + 414;\n+   Name_Machine                        : constant Name_Id := N + 415;\n+   Name_Max                            : constant Name_Id := N + 416;\n+   Name_Min                            : constant Name_Id := N + 417;\n+   Name_Model                          : constant Name_Id := N + 418;\n+   Name_Pred                           : constant Name_Id := N + 419;\n+   Name_Remainder                      : constant Name_Id := N + 420;\n+   Name_Rounding                       : constant Name_Id := N + 421;\n+   Name_Succ                           : constant Name_Id := N + 422;\n+   Name_Truncation                     : constant Name_Id := N + 423;\n+   Name_Value                          : constant Name_Id := N + 424;\n+   Name_Wide_Image                     : constant Name_Id := N + 425;\n+   Name_Wide_Value                     : constant Name_Id := N + 426;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 426;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 426;\n-   Name_Output                         : constant Name_Id := N + 426;\n-   Name_Read                           : constant Name_Id := N + 427;\n-   Name_Write                          : constant Name_Id := N + 428;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 428;\n+   First_Procedure_Attribute           : constant Name_Id := N + 427;\n+   Name_Output                         : constant Name_Id := N + 427;\n+   Name_Read                           : constant Name_Id := N + 428;\n+   Name_Write                          : constant Name_Id := N + 429;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 429;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 429;\n-   Name_Elab_Body                      : constant Name_Id := N + 429; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 430; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 431;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 430;\n+   Name_Elab_Body                      : constant Name_Id := N + 430; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 431; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 432;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 432;\n-   Name_Base                           : constant Name_Id := N + 432;\n-   Name_Class                          : constant Name_Id := N + 433;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 433;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 433;\n-   Last_Attribute_Name                 : constant Name_Id := N + 433;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 433;\n+   Name_Base                           : constant Name_Id := N + 433;\n+   Name_Class                          : constant Name_Id := N + 434;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 434;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 434;\n+   Last_Attribute_Name                 : constant Name_Id := N + 434;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 434;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 434;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 435;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 435;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 435;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 435;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 436;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 436;\n \n    --  Names of recognized queuing policy identifiers.\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 436;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 436;\n-   Name_Priority_Queuing               : constant Name_Id := N + 437;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 437;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 437;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 437;\n+   Name_Priority_Queuing               : constant Name_Id := N + 438;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 438;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_WIthinn_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 438;\n-   Name_Fifo_Within_Priorities         : constant Name_Id := N + 438;\n-   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 438;\n+   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 439;\n+   Name_Fifo_Within_Priorities         : constant Name_Id := N + 439;\n+   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 439;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 439;\n-   Name_Access_Check                   : constant Name_Id := N + 439;\n-   Name_Accessibility_Check            : constant Name_Id := N + 440;\n-   Name_Discriminant_Check             : constant Name_Id := N + 441;\n-   Name_Division_Check                 : constant Name_Id := N + 442;\n-   Name_Elaboration_Check              : constant Name_Id := N + 443;\n-   Name_Index_Check                    : constant Name_Id := N + 444;\n-   Name_Length_Check                   : constant Name_Id := N + 445;\n-   Name_Overflow_Check                 : constant Name_Id := N + 446;\n-   Name_Range_Check                    : constant Name_Id := N + 447;\n-   Name_Storage_Check                  : constant Name_Id := N + 448;\n-   Name_Tag_Check                      : constant Name_Id := N + 449;\n-   Name_All_Checks                     : constant Name_Id := N + 450;\n-   Last_Check_Name                     : constant Name_Id := N + 450;\n+   First_Check_Name                    : constant Name_Id := N + 440;\n+   Name_Access_Check                   : constant Name_Id := N + 440;\n+   Name_Accessibility_Check            : constant Name_Id := N + 441;\n+   Name_Discriminant_Check             : constant Name_Id := N + 442;\n+   Name_Division_Check                 : constant Name_Id := N + 443;\n+   Name_Elaboration_Check              : constant Name_Id := N + 444;\n+   Name_Index_Check                    : constant Name_Id := N + 445;\n+   Name_Length_Check                   : constant Name_Id := N + 446;\n+   Name_Overflow_Check                 : constant Name_Id := N + 447;\n+   Name_Range_Check                    : constant Name_Id := N + 448;\n+   Name_Storage_Check                  : constant Name_Id := N + 449;\n+   Name_Tag_Check                      : constant Name_Id := N + 450;\n+   Name_All_Checks                     : constant Name_Id := N + 451;\n+   Last_Check_Name                     : constant Name_Id := N + 451;\n \n    --  Names corresponding to reserved keywords, excluding those already\n    --  declared in the attribute list (Access, Delta, Digits, Range).\n \n-   Name_Abort                          : constant Name_Id := N + 451;\n-   Name_Abs                            : constant Name_Id := N + 452;\n-   Name_Accept                         : constant Name_Id := N + 453;\n-   Name_And                            : constant Name_Id := N + 454;\n-   Name_All                            : constant Name_Id := N + 455;\n-   Name_Array                          : constant Name_Id := N + 456;\n-   Name_At                             : constant Name_Id := N + 457;\n-   Name_Begin                          : constant Name_Id := N + 458;\n-   Name_Body                           : constant Name_Id := N + 459;\n-   Name_Case                           : constant Name_Id := N + 460;\n-   Name_Constant                       : constant Name_Id := N + 461;\n-   Name_Declare                        : constant Name_Id := N + 462;\n-   Name_Delay                          : constant Name_Id := N + 463;\n-   Name_Do                             : constant Name_Id := N + 464;\n-   Name_Else                           : constant Name_Id := N + 465;\n-   Name_Elsif                          : constant Name_Id := N + 466;\n-   Name_End                            : constant Name_Id := N + 467;\n-   Name_Entry                          : constant Name_Id := N + 468;\n-   Name_Exception                      : constant Name_Id := N + 469;\n-   Name_Exit                           : constant Name_Id := N + 470;\n-   Name_For                            : constant Name_Id := N + 471;\n-   Name_Function                       : constant Name_Id := N + 472;\n-   Name_Generic                        : constant Name_Id := N + 473;\n-   Name_Goto                           : constant Name_Id := N + 474;\n-   Name_If                             : constant Name_Id := N + 475;\n-   Name_In                             : constant Name_Id := N + 476;\n-   Name_Is                             : constant Name_Id := N + 477;\n-   Name_Limited                        : constant Name_Id := N + 478;\n-   Name_Loop                           : constant Name_Id := N + 479;\n-   Name_Mod                            : constant Name_Id := N + 480;\n-   Name_New                            : constant Name_Id := N + 481;\n-   Name_Not                            : constant Name_Id := N + 482;\n-   Name_Null                           : constant Name_Id := N + 483;\n-   Name_Of                             : constant Name_Id := N + 484;\n-   Name_Or                             : constant Name_Id := N + 485;\n-   Name_Others                         : constant Name_Id := N + 486;\n-   Name_Out                            : constant Name_Id := N + 487;\n-   Name_Package                        : constant Name_Id := N + 488;\n-   Name_Pragma                         : constant Name_Id := N + 489;\n-   Name_Private                        : constant Name_Id := N + 490;\n-   Name_Procedure                      : constant Name_Id := N + 491;\n-   Name_Raise                          : constant Name_Id := N + 492;\n-   Name_Record                         : constant Name_Id := N + 493;\n-   Name_Rem                            : constant Name_Id := N + 494;\n-   Name_Renames                        : constant Name_Id := N + 495;\n-   Name_Return                         : constant Name_Id := N + 496;\n-   Name_Reverse                        : constant Name_Id := N + 497;\n-   Name_Select                         : constant Name_Id := N + 498;\n-   Name_Separate                       : constant Name_Id := N + 499;\n-   Name_Subtype                        : constant Name_Id := N + 500;\n-   Name_Task                           : constant Name_Id := N + 501;\n-   Name_Terminate                      : constant Name_Id := N + 502;\n-   Name_Then                           : constant Name_Id := N + 503;\n-   Name_Type                           : constant Name_Id := N + 504;\n-   Name_Use                            : constant Name_Id := N + 505;\n-   Name_When                           : constant Name_Id := N + 506;\n-   Name_While                          : constant Name_Id := N + 507;\n-   Name_With                           : constant Name_Id := N + 508;\n-   Name_Xor                            : constant Name_Id := N + 509;\n+   Name_Abort                          : constant Name_Id := N + 452;\n+   Name_Abs                            : constant Name_Id := N + 453;\n+   Name_Accept                         : constant Name_Id := N + 454;\n+   Name_And                            : constant Name_Id := N + 455;\n+   Name_All                            : constant Name_Id := N + 456;\n+   Name_Array                          : constant Name_Id := N + 457;\n+   Name_At                             : constant Name_Id := N + 458;\n+   Name_Begin                          : constant Name_Id := N + 459;\n+   Name_Body                           : constant Name_Id := N + 460;\n+   Name_Case                           : constant Name_Id := N + 461;\n+   Name_Constant                       : constant Name_Id := N + 462;\n+   Name_Declare                        : constant Name_Id := N + 463;\n+   Name_Delay                          : constant Name_Id := N + 464;\n+   Name_Do                             : constant Name_Id := N + 465;\n+   Name_Else                           : constant Name_Id := N + 466;\n+   Name_Elsif                          : constant Name_Id := N + 467;\n+   Name_End                            : constant Name_Id := N + 468;\n+   Name_Entry                          : constant Name_Id := N + 469;\n+   Name_Exception                      : constant Name_Id := N + 470;\n+   Name_Exit                           : constant Name_Id := N + 471;\n+   Name_For                            : constant Name_Id := N + 472;\n+   Name_Function                       : constant Name_Id := N + 473;\n+   Name_Generic                        : constant Name_Id := N + 474;\n+   Name_Goto                           : constant Name_Id := N + 475;\n+   Name_If                             : constant Name_Id := N + 476;\n+   Name_In                             : constant Name_Id := N + 477;\n+   Name_Is                             : constant Name_Id := N + 478;\n+   Name_Limited                        : constant Name_Id := N + 479;\n+   Name_Loop                           : constant Name_Id := N + 480;\n+   Name_Mod                            : constant Name_Id := N + 481;\n+   Name_New                            : constant Name_Id := N + 482;\n+   Name_Not                            : constant Name_Id := N + 483;\n+   Name_Null                           : constant Name_Id := N + 484;\n+   Name_Of                             : constant Name_Id := N + 485;\n+   Name_Or                             : constant Name_Id := N + 486;\n+   Name_Others                         : constant Name_Id := N + 487;\n+   Name_Out                            : constant Name_Id := N + 488;\n+   Name_Package                        : constant Name_Id := N + 489;\n+   Name_Pragma                         : constant Name_Id := N + 490;\n+   Name_Private                        : constant Name_Id := N + 491;\n+   Name_Procedure                      : constant Name_Id := N + 492;\n+   Name_Raise                          : constant Name_Id := N + 493;\n+   Name_Record                         : constant Name_Id := N + 494;\n+   Name_Rem                            : constant Name_Id := N + 495;\n+   Name_Renames                        : constant Name_Id := N + 496;\n+   Name_Return                         : constant Name_Id := N + 497;\n+   Name_Reverse                        : constant Name_Id := N + 498;\n+   Name_Select                         : constant Name_Id := N + 499;\n+   Name_Separate                       : constant Name_Id := N + 500;\n+   Name_Subtype                        : constant Name_Id := N + 501;\n+   Name_Task                           : constant Name_Id := N + 502;\n+   Name_Terminate                      : constant Name_Id := N + 503;\n+   Name_Then                           : constant Name_Id := N + 504;\n+   Name_Type                           : constant Name_Id := N + 505;\n+   Name_Use                            : constant Name_Id := N + 506;\n+   Name_When                           : constant Name_Id := N + 507;\n+   Name_While                          : constant Name_Id := N + 508;\n+   Name_With                           : constant Name_Id := N + 509;\n+   Name_Xor                            : constant Name_Id := N + 510;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Adress, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                : constant Name_Id := N + 510;\n-   Name_Divide                         : constant Name_Id := N + 510;\n-   Name_Enclosing_Entity               : constant Name_Id := N + 511;\n-   Name_Exception_Information          : constant Name_Id := N + 512;\n-   Name_Exception_Message              : constant Name_Id := N + 513;\n-   Name_Exception_Name                 : constant Name_Id := N + 514;\n-   Name_File                           : constant Name_Id := N + 515;\n-   Name_Import_Address                 : constant Name_Id := N + 516;\n-   Name_Import_Largest_Value           : constant Name_Id := N + 517;\n-   Name_Import_Value                   : constant Name_Id := N + 518;\n-   Name_Is_Negative                    : constant Name_Id := N + 519;\n-   Name_Line                           : constant Name_Id := N + 520;\n-   Name_Rotate_Left                    : constant Name_Id := N + 521;\n-   Name_Rotate_Right                   : constant Name_Id := N + 522;\n-   Name_Shift_Left                     : constant Name_Id := N + 523;\n-   Name_Shift_Right                    : constant Name_Id := N + 524;\n-   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 525;\n-   Name_Source_Location                : constant Name_Id := N + 526;\n-   Name_Unchecked_Conversion           : constant Name_Id := N + 527;\n-   Name_Unchecked_Deallocation         : constant Name_Id := N + 528;\n-   Name_To_Pointer                     : constant Name_Id := N + 529;\n-   Last_Intrinsic_Name                 : constant Name_Id := N + 529;\n+   First_Intrinsic_Name                : constant Name_Id := N + 511;\n+   Name_Divide                         : constant Name_Id := N + 511;\n+   Name_Enclosing_Entity               : constant Name_Id := N + 512;\n+   Name_Exception_Information          : constant Name_Id := N + 513;\n+   Name_Exception_Message              : constant Name_Id := N + 514;\n+   Name_Exception_Name                 : constant Name_Id := N + 515;\n+   Name_File                           : constant Name_Id := N + 516;\n+   Name_Import_Address                 : constant Name_Id := N + 517;\n+   Name_Import_Largest_Value           : constant Name_Id := N + 518;\n+   Name_Import_Value                   : constant Name_Id := N + 519;\n+   Name_Is_Negative                    : constant Name_Id := N + 520;\n+   Name_Line                           : constant Name_Id := N + 521;\n+   Name_Rotate_Left                    : constant Name_Id := N + 522;\n+   Name_Rotate_Right                   : constant Name_Id := N + 523;\n+   Name_Shift_Left                     : constant Name_Id := N + 524;\n+   Name_Shift_Right                    : constant Name_Id := N + 525;\n+   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 526;\n+   Name_Source_Location                : constant Name_Id := N + 527;\n+   Name_Unchecked_Conversion           : constant Name_Id := N + 528;\n+   Name_Unchecked_Deallocation         : constant Name_Id := N + 529;\n+   Name_To_Pointer                     : constant Name_Id := N + 530;\n+   Last_Intrinsic_Name                 : constant Name_Id := N + 530;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 530;\n-   Name_Abstract                       : constant Name_Id := N + 530;\n-   Name_Aliased                        : constant Name_Id := N + 531;\n-   Name_Protected                      : constant Name_Id := N + 532;\n-   Name_Until                          : constant Name_Id := N + 533;\n-   Name_Requeue                        : constant Name_Id := N + 534;\n-   Name_Tagged                         : constant Name_Id := N + 535;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 535;\n+   First_95_Reserved_Word              : constant Name_Id := N + 531;\n+   Name_Abstract                       : constant Name_Id := N + 531;\n+   Name_Aliased                        : constant Name_Id := N + 532;\n+   Name_Protected                      : constant Name_Id := N + 533;\n+   Name_Until                          : constant Name_Id := N + 534;\n+   Name_Requeue                        : constant Name_Id := N + 535;\n+   Name_Tagged                         : constant Name_Id := N + 536;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 536;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 536;\n+   Name_Raise_Exception                : constant Name_Id := N + 537;\n \n    --  Additional reserved words in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Binder                         : constant Name_Id := N + 537;\n-   Name_Body_Suffix                    : constant Name_Id := N + 538;\n-   Name_Builder                        : constant Name_Id := N + 539;\n-   Name_Compiler                       : constant Name_Id := N + 540;\n-   Name_Cross_Reference                : constant Name_Id := N + 541;\n-   Name_Default_Switches               : constant Name_Id := N + 542;\n-   Name_Exec_Dir                       : constant Name_Id := N + 543;\n-   Name_Executable                     : constant Name_Id := N + 544;\n-   Name_Executable_Suffix              : constant Name_Id := N + 545;\n-   Name_Extends                        : constant Name_Id := N + 546;\n-   Name_Finder                         : constant Name_Id := N + 547;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 548;\n-   Name_Gnatls                         : constant Name_Id := N + 549;\n-   Name_Gnatstub                       : constant Name_Id := N + 550;\n-   Name_Implementation                 : constant Name_Id := N + 551;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 552;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 553;\n-   Name_Languages                      : constant Name_Id := N + 554;\n-   Name_Library_Dir                    : constant Name_Id := N + 555;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 556;\n-   Name_Library_GCC                    : constant Name_Id := N + 557;\n-   Name_Library_Interface              : constant Name_Id := N + 558;\n-   Name_Library_Kind                   : constant Name_Id := N + 559;\n-   Name_Library_Name                   : constant Name_Id := N + 560;\n-   Name_Library_Options                : constant Name_Id := N + 561;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 562;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 563;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 564;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 565;\n-   Name_Library_Version                : constant Name_Id := N + 566;\n-   Name_Linker                         : constant Name_Id := N + 567;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 568;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 569;\n-   Name_Naming                         : constant Name_Id := N + 570;\n-   Name_Object_Dir                     : constant Name_Id := N + 571;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 572;\n-   Name_Project                        : constant Name_Id := N + 573;\n-   Name_Separate_Suffix                : constant Name_Id := N + 574;\n-   Name_Source_Dirs                    : constant Name_Id := N + 575;\n-   Name_Source_Files                   : constant Name_Id := N + 576;\n-   Name_Source_List_File               : constant Name_Id := N + 577;\n-   Name_Spec                           : constant Name_Id := N + 578;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 579;\n-   Name_Specification                  : constant Name_Id := N + 580;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 581;\n-   Name_Specification_Suffix           : constant Name_Id := N + 582;\n-   Name_Switches                       : constant Name_Id := N + 583;\n+   Name_Binder                         : constant Name_Id := N + 538;\n+   Name_Body_Suffix                    : constant Name_Id := N + 539;\n+   Name_Builder                        : constant Name_Id := N + 540;\n+   Name_Compiler                       : constant Name_Id := N + 541;\n+   Name_Cross_Reference                : constant Name_Id := N + 542;\n+   Name_Default_Switches               : constant Name_Id := N + 543;\n+   Name_Exec_Dir                       : constant Name_Id := N + 544;\n+   Name_Executable                     : constant Name_Id := N + 545;\n+   Name_Executable_Suffix              : constant Name_Id := N + 546;\n+   Name_Extends                        : constant Name_Id := N + 547;\n+   Name_Finder                         : constant Name_Id := N + 548;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 549;\n+   Name_Gnatls                         : constant Name_Id := N + 550;\n+   Name_Gnatstub                       : constant Name_Id := N + 551;\n+   Name_Implementation                 : constant Name_Id := N + 552;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 553;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 554;\n+   Name_Languages                      : constant Name_Id := N + 555;\n+   Name_Library_Dir                    : constant Name_Id := N + 556;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 557;\n+   Name_Library_GCC                    : constant Name_Id := N + 558;\n+   Name_Library_Interface              : constant Name_Id := N + 559;\n+   Name_Library_Kind                   : constant Name_Id := N + 560;\n+   Name_Library_Name                   : constant Name_Id := N + 561;\n+   Name_Library_Options                : constant Name_Id := N + 562;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 563;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 564;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 565;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 566;\n+   Name_Library_Version                : constant Name_Id := N + 567;\n+   Name_Linker                         : constant Name_Id := N + 568;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 569;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 570;\n+   Name_Naming                         : constant Name_Id := N + 571;\n+   Name_Object_Dir                     : constant Name_Id := N + 572;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 573;\n+   Name_Project                        : constant Name_Id := N + 574;\n+   Name_Separate_Suffix                : constant Name_Id := N + 575;\n+   Name_Source_Dirs                    : constant Name_Id := N + 576;\n+   Name_Source_Files                   : constant Name_Id := N + 577;\n+   Name_Source_List_File               : constant Name_Id := N + 578;\n+   Name_Spec                           : constant Name_Id := N + 579;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 580;\n+   Name_Specification                  : constant Name_Id := N + 581;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 582;\n+   Name_Specification_Suffix           : constant Name_Id := N + 583;\n+   Name_Switches                       : constant Name_Id := N + 584;\n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 584;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 585;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 584;\n+   Last_Predefined_Name                : constant Name_Id := N + 585;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;"}]}