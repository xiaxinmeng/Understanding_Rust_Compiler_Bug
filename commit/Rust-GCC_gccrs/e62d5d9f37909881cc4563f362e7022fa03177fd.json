{"sha": "e62d5d9f37909881cc4563f362e7022fa03177fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYyZDVkOWYzNzkwOTg4MWNjNDU2M2YzNjJlNzAyMmZhMDMxNzdmZA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-26T22:45:08Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-26T22:45:08Z"}, "message": "avr-c.c: Do not include regs.h.\n\n\t* config/avr/avr-c.c: Do not include regs.h.\n\tInclude cpplib.h for cpp_define and tree.h for c-common.h.\n\t* config/avr/avr-devices.c (avr_mcu_types): Fix initializer.\n\t* config/avr/t-avr: Fix dependencies for avr-c.o.\n\nFrom-SVN: r159901", "tree": {"sha": "a8f8b76a08d49093a82ba28b305a78cf8deda1fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8f8b76a08d49093a82ba28b305a78cf8deda1fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e62d5d9f37909881cc4563f362e7022fa03177fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62d5d9f37909881cc4563f362e7022fa03177fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62d5d9f37909881cc4563f362e7022fa03177fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62d5d9f37909881cc4563f362e7022fa03177fd/comments", "author": null, "committer": null, "parents": [{"sha": "d477d1fedaa481b2fe74a616dd759b1adc7b2f9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d477d1fedaa481b2fe74a616dd759b1adc7b2f9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d477d1fedaa481b2fe74a616dd759b1adc7b2f9d"}], "stats": {"total": 81, "additions": 44, "deletions": 37}, "files": [{"sha": "669847fedb95562986472dd7e817d771107ff694", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62d5d9f37909881cc4563f362e7022fa03177fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62d5d9f37909881cc4563f362e7022fa03177fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e62d5d9f37909881cc4563f362e7022fa03177fd", "patch": "@@ -1,3 +1,10 @@\n+2010-05-26  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* config/avr/avr-c.c: Do not include regs.h.\n+\tInclude cpplib.h for cpp_define and tree.h for c-common.h.\n+\t* config/avr/avr-devices.c (avr_mcu_types): Fix initializer.\n+\t* config/avr/t-avr: Fix dependencies for avr-c.o.\n+\n 2010-05-26  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* explow.c (set_stack_check_libfunc): Adjust to accept name as a"}, {"sha": "c2c1dd5d4c3ef4c30d6222baa6b9a9300e41cddc", "filename": "gcc/config/avr/avr-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62d5d9f37909881cc4563f362e7022fa03177fd/gcc%2Fconfig%2Favr%2Favr-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62d5d9f37909881cc4563f362e7022fa03177fd/gcc%2Fconfig%2Favr%2Favr-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-c.c?ref=e62d5d9f37909881cc4563f362e7022fa03177fd", "patch": "@@ -24,10 +24,10 @@\n #include \"coretypes.h\"\r\n #include \"tm.h\"\r\n #include \"tm_p.h\"\r\n-#include \"regs.h\"\r\n+#include \"cpplib.h\"\r\n+#include \"tree.h\"\r\n #include \"c-common.h\"\r\n \r\n-\r\n /* Not included in avr.c since this requires C front end.  */\r\n \r\n /* Worker function for TARGET_CPU_CPP_BUILTINS.  */\r"}, {"sha": "9f3c507d1dbb86dba507adc11aa99923ce333a9e", "filename": "gcc/config/avr/avr-devices.c", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62d5d9f37909881cc4563f362e7022fa03177fd/gcc%2Fconfig%2Favr%2Favr-devices.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62d5d9f37909881cc4563f362e7022fa03177fd/gcc%2Fconfig%2Favr%2Favr-devices.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-devices.c?ref=e62d5d9f37909881cc4563f362e7022fa03177fd", "patch": "@@ -69,21 +69,21 @@ const struct mcu_type_s avr_mcu_types[] = {\n   { \"attiny2313\",           ARCH_AVR25, \"__AVR_ATtiny2313__\",       1, 0x0060, \"tn2313\" },\n   { \"attiny2313a\",          ARCH_AVR25, \"__AVR_ATtiny2313A__\",      1, 0x0060, \"tn2313a\" },\n   { \"attiny24\",             ARCH_AVR25, \"__AVR_ATtiny24__\",         1, 0x0060, \"tn24\" },\n-  { \"attiny24a\",            ARCH_AVR25, \"__AVR_ATtiny24A__\"         1, 0x0060, \"tn24a\" },\n-  { \"attiny4313\",           ARCH_AVR25, \"__AVR_ATtiny4313__\"        1, 0x0060, \"tn4313\" },\n+  { \"attiny24a\",            ARCH_AVR25, \"__AVR_ATtiny24A__\",        1, 0x0060, \"tn24a\" },\n+  { \"attiny4313\",           ARCH_AVR25, \"__AVR_ATtiny4313__\",       1, 0x0060, \"tn4313\" },\n   { \"attiny44\",             ARCH_AVR25, \"__AVR_ATtiny44__\",         0, 0x0060, \"tn44\" },\n-  { \"attiny44a\",            ARCH_AVR25, \"__AVR_ATtiny44A__\"         0, 0x0060, \"tn44a\" },\n+  { \"attiny44a\",            ARCH_AVR25, \"__AVR_ATtiny44A__\",        0, 0x0060, \"tn44a\" },\n   { \"attiny84\",             ARCH_AVR25, \"__AVR_ATtiny84__\",         0, 0x0060, \"tn84\" },\n-  { \"attiny84a\",            ARCH_AVR25, \"__AVR_ATtiny84A__\"         0, 0x0060, \"tn84\" },\n+  { \"attiny84a\",            ARCH_AVR25, \"__AVR_ATtiny84A__\",        0, 0x0060, \"tn84\" },\n   { \"attiny25\",             ARCH_AVR25, \"__AVR_ATtiny25__\",         1, 0x0060, \"tn25\" },\n   { \"attiny45\",             ARCH_AVR25, \"__AVR_ATtiny45__\",         0, 0x0060, \"tn45\" },\n   { \"attiny85\",             ARCH_AVR25, \"__AVR_ATtiny85__\",         0, 0x0060, \"tn85\" },\n   { \"attiny261\",            ARCH_AVR25, \"__AVR_ATtiny261__\",        1, 0x0060, \"tn261\" },\n-  { \"attiny261a\",           ARCH_AVR25, \"__AVR_ATtiny261A__\"        1, 0x0060, \"tn261a\" },\n+  { \"attiny261a\",           ARCH_AVR25, \"__AVR_ATtiny261A__\",       1, 0x0060, \"tn261a\" },\n   { \"attiny461\",            ARCH_AVR25, \"__AVR_ATtiny461__\",        0, 0x0060, \"tn461\" },\n-  { \"attiny461a\",           ARCH_AVR25, \"__AVR_ATtiny461A__\"        0, 0x0060, \"tn461a\" },\n+  { \"attiny461a\",           ARCH_AVR25, \"__AVR_ATtiny461A__\",       0, 0x0060, \"tn461a\" },\n   { \"attiny861\",            ARCH_AVR25, \"__AVR_ATtiny861__\",        0, 0x0060, \"tn861\" },\n-  { \"attiny861a\",           ARCH_AVR25, \"__AVR_ATtiny861A__\"        0, 0x0060, \"tn861a\" },\n+  { \"attiny861a\",           ARCH_AVR25, \"__AVR_ATtiny861A__\",       0, 0x0060, \"tn861a\" },\n   { \"attiny43u\",            ARCH_AVR25, \"__AVR_ATtiny43U__\",        0, 0x0060, \"tn43u\" },\n   { \"attiny87\",             ARCH_AVR25, \"__AVR_ATtiny87__\",         0, 0x0100, \"tn87\" },\n   { \"attiny48\",             ARCH_AVR25, \"__AVR_ATtiny48__\",         0, 0x0100, \"tn48\" },\n@@ -109,12 +109,12 @@ const struct mcu_type_s avr_mcu_types[] = {\n   { \"avr4\",                 ARCH_AVR4, NULL,                        0, 0x0060, \"m8\" },\n   { \"atmega8\",              ARCH_AVR4, \"__AVR_ATmega8__\",           0, 0x0060, \"m8\" },\n   { \"atmega48\",             ARCH_AVR4, \"__AVR_ATmega48__\",          0, 0x0100, \"m48\" },\n-  { \"atmega48a\",            ARCH_AVR4, \"__AVR_ATmega48A__\"          0, 0x0100, \"m48a\" },\n+  { \"atmega48a\",            ARCH_AVR4, \"__AVR_ATmega48A__\",         0, 0x0100, \"m48a\" },\n   { \"atmega48p\",            ARCH_AVR4, \"__AVR_ATmega48P__\",         0, 0x0100, \"m48p\" },\n   { \"atmega88\",             ARCH_AVR4, \"__AVR_ATmega88__\",          0, 0x0100, \"m88\" },\n-  { \"atmega88a\",            ARCH_AVR4, \"__AVR_ATmega88A__\"          0, 0x0100, \"m88a\" },\n+  { \"atmega88a\",            ARCH_AVR4, \"__AVR_ATmega88A__\",         0, 0x0100, \"m88a\" },\n   { \"atmega88p\",            ARCH_AVR4, \"__AVR_ATmega88P__\",         0, 0x0100, \"m88p\" },\n-  { \"atmega88pa\",           ARCH_AVR4, \"__AVR_ATmega88PA__\"         0, 0x0100, \"m88pa\" },\n+  { \"atmega88pa\",           ARCH_AVR4, \"__AVR_ATmega88PA__\",        0, 0x0100, \"m88pa\" },\n   { \"atmega8515\",           ARCH_AVR4, \"__AVR_ATmega8515__\",        0, 0x0060, \"m8515\" },\n   { \"atmega8535\",           ARCH_AVR4, \"__AVR_ATmega8535__\",        0, 0x0060, \"m8535\" },\n   { \"atmega8hva\",           ARCH_AVR4, \"__AVR_ATmega8HVA__\",        0, 0x0100, \"m8hva\" },\n@@ -127,64 +127,64 @@ const struct mcu_type_s avr_mcu_types[] = {\n     /* Enhanced, > 8K, <= 64K.  */\n   { \"avr5\",                 ARCH_AVR5, NULL,                        0, 0x0060, \"m16\" },\n   { \"atmega16\",             ARCH_AVR5, \"__AVR_ATmega16__\",          0, 0x0060, \"m16\" },\n-  { \"atmega16a\",            ARCH_AVR5, \"__AVR_ATmega16A__\"          0, 0x0060, \"m16a\" },\n+  { \"atmega16a\",            ARCH_AVR5, \"__AVR_ATmega16A__\",         0, 0x0060, \"m16a\" },\n   { \"atmega161\",            ARCH_AVR5, \"__AVR_ATmega161__\",         0, 0x0060, \"m161\" },\n   { \"atmega162\",            ARCH_AVR5, \"__AVR_ATmega162__\",         0, 0x0100, \"m162\" },\n   { \"atmega163\",            ARCH_AVR5, \"__AVR_ATmega163__\",         0, 0x0060, \"m163\" },\n-  { \"atmega164a\",           ARCH_AVR5, \"__AVR_ATmega164A__\"         0, 0x0060, \"m164a\" },\n+  { \"atmega164a\",           ARCH_AVR5, \"__AVR_ATmega164A__\",        0, 0x0060, \"m164a\" },\n   { \"atmega164p\",           ARCH_AVR5, \"__AVR_ATmega164P__\",        0, 0x0100, \"m164p\" },\n   { \"atmega165\",            ARCH_AVR5, \"__AVR_ATmega165__\",         0, 0x0100, \"m165\" },\n-  { \"atmega165a\",           ARCH_AVR5, \"__AVR_ATmega165A__\"         0, 0x0100, \"m165a\" },\n+  { \"atmega165a\",           ARCH_AVR5, \"__AVR_ATmega165A__\",        0, 0x0100, \"m165a\" },\n   { \"atmega165p\",           ARCH_AVR5, \"__AVR_ATmega165P__\",        0, 0x0100, \"m165p\" },\n   { \"atmega168\",            ARCH_AVR5, \"__AVR_ATmega168__\",         0, 0x0100, \"m168\" },\n-  { \"atmega168a\",           ARCH_AVR5, \"__AVR_ATmega168A__\"         0, 0x0100, \"m168a\" },\n+  { \"atmega168a\",           ARCH_AVR5, \"__AVR_ATmega168A__\",        0, 0x0100, \"m168a\" },\n   { \"atmega168p\",           ARCH_AVR5, \"__AVR_ATmega168P__\",        0, 0x0100, \"m168p\" },\n   { \"atmega169\",            ARCH_AVR5, \"__AVR_ATmega169__\",         0, 0x0100, \"m169\" },\n-  { \"atmega169a\",           ARCH_AVR5, \"__AVR_ATmega169A__\"         0, 0x0100, \"m169a\" },\n+  { \"atmega169a\",           ARCH_AVR5, \"__AVR_ATmega169A__\",        0, 0x0100, \"m169a\" },\n   { \"atmega169p\",           ARCH_AVR5, \"__AVR_ATmega169P__\",        0, 0x0100, \"m169p\" },\n-  { \"atmega169pa\",          ARCH_AVR5, \"__AVR_ATmega169PA__\"        0, 0x0100, \"m169pa\" },\n+  { \"atmega169pa\",          ARCH_AVR5, \"__AVR_ATmega169PA__\",       0, 0x0100, \"m169pa\" },\n   { \"atmega32\",             ARCH_AVR5, \"__AVR_ATmega32__\",          0, 0x0060, \"m32\" },\n   { \"atmega323\",            ARCH_AVR5, \"__AVR_ATmega323__\",         0, 0x0060, \"m323\" },\n-  { \"atmega324a\",           ARCH_AVR5, \"__AVR_ATmega324A__\"         0, 0x0100, \"m324a\" },\n+  { \"atmega324a\",           ARCH_AVR5, \"__AVR_ATmega324A__\",        0, 0x0100, \"m324a\" },\n   { \"atmega324p\",           ARCH_AVR5, \"__AVR_ATmega324P__\",        0, 0x0100, \"m324p\" },\n-  { \"atmega324pa\",          ARCH_AVR5, \"__AVR_ATmega324PA__\"        0, 0x0100, \"m324pa\" },\n+  { \"atmega324pa\",          ARCH_AVR5, \"__AVR_ATmega324PA__\",       0, 0x0100, \"m324pa\" },\n   { \"atmega325\",            ARCH_AVR5, \"__AVR_ATmega325__\",         0, 0x0100, \"m325\" },\n-  { \"atmega325a\",           ARCH_AVR5, \"__AVR_ATmega325A__\"         0, 0x0100, \"m325a\" },\n+  { \"atmega325a\",           ARCH_AVR5, \"__AVR_ATmega325A__\",        0, 0x0100, \"m325a\" },\n   { \"atmega325p\",           ARCH_AVR5, \"__AVR_ATmega325P__\",        0, 0x0100, \"m325p\" },\n   { \"atmega3250\",           ARCH_AVR5, \"__AVR_ATmega3250__\",        0, 0x0100, \"m3250\" },\n-  { \"atmega3250a\",          ARCH_AVR5, \"__AVR_ATmega3250A__\"        0, 0x0100, \"m3250a\" },\n+  { \"atmega3250a\",          ARCH_AVR5, \"__AVR_ATmega3250A__\",       0, 0x0100, \"m3250a\" },\n   { \"atmega3250p\",          ARCH_AVR5, \"__AVR_ATmega3250P__\",       0, 0x0100, \"m3250p\" },\n-  { \"atmega328\",            ARCH_AVR5, \"__AVR_ATmega328__\"          0, 0x0100, \"m328\" },\n+  { \"atmega328\",            ARCH_AVR5, \"__AVR_ATmega328__\",         0, 0x0100, \"m328\" },\n   { \"atmega328p\",           ARCH_AVR5, \"__AVR_ATmega328P__\",        0, 0x0100, \"m328p\" },\n   { \"atmega329\",            ARCH_AVR5, \"__AVR_ATmega329__\",         0, 0x0100, \"m329\" },\n-  { \"atmega329a\",           ARCH_AVR5, \"__AVR_ATmega329A__\"         0, 0x0100, \"m329a\" },\n+  { \"atmega329a\",           ARCH_AVR5, \"__AVR_ATmega329A__\",        0, 0x0100, \"m329a\" },\n   { \"atmega329p\",           ARCH_AVR5, \"__AVR_ATmega329P__\",        0, 0x0100, \"m329p\" },\n-  { \"atmega329pa\",          ARCH_AVR5, \"__AVR_ATmega329PA__\"        0, 0x0100, \"m329pa\" },\n+  { \"atmega329pa\",          ARCH_AVR5, \"__AVR_ATmega329PA__\",       0, 0x0100, \"m329pa\" },\n   { \"atmega3290\",           ARCH_AVR5, \"__AVR_ATmega3290__\",        0, 0x0100, \"m3290\" },\n-  { \"atmega3290a\",          ARCH_AVR5, \"__AVR_ATmega3290A__\"        0, 0x0100, \"m3290a\" },\n+  { \"atmega3290a\",          ARCH_AVR5, \"__AVR_ATmega3290A__\",       0, 0x0100, \"m3290a\" },\n   { \"atmega3290p\",          ARCH_AVR5, \"__AVR_ATmega3290P__\",       0, 0x0100, \"m3290p\" },\n   { \"atmega406\",            ARCH_AVR5, \"__AVR_ATmega406__\",         0, 0x0100, \"m406\" },\n   { \"atmega64\",             ARCH_AVR5, \"__AVR_ATmega64__\",          0, 0x0100, \"m64\" },\n   { \"atmega640\",            ARCH_AVR5, \"__AVR_ATmega640__\",         0, 0x0200, \"m640\" },\n   { \"atmega644\",            ARCH_AVR5, \"__AVR_ATmega644__\",         0, 0x0100, \"m644\" },\n-  { \"atmega644a\",           ARCH_AVR5, \"__AVR_ATmega644A__\"         0, 0x0100, \"m644a\" },\n+  { \"atmega644a\",           ARCH_AVR5, \"__AVR_ATmega644A__\",        0, 0x0100, \"m644a\" },\n   { \"atmega644p\",           ARCH_AVR5, \"__AVR_ATmega644P__\",        0, 0x0100, \"m644p\" },\n-  { \"atmega644pa\",          ARCH_AVR5, \"__AVR_ATmega644PA__\"        0, 0x0100, \"m644pa\" },\n+  { \"atmega644pa\",          ARCH_AVR5, \"__AVR_ATmega644PA__\",       0, 0x0100, \"m644pa\" },\n   { \"atmega645\",            ARCH_AVR5, \"__AVR_ATmega645__\",         0, 0x0100, \"m645\" },\n-  { \"atmega645a\",           ARCH_AVR5, \"__AVR_ATmega645A__\"         0, 0x0100, \"m645a\" },\n-  { \"atmega645p\",           ARCH_AVR5, \"__AVR_ATmega645P__\"         0, 0x0100, \"m645p\" },\n+  { \"atmega645a\",           ARCH_AVR5, \"__AVR_ATmega645A__\",        0, 0x0100, \"m645a\" },\n+  { \"atmega645p\",           ARCH_AVR5, \"__AVR_ATmega645P__\",        0, 0x0100, \"m645p\" },\n   { \"atmega6450\",           ARCH_AVR5, \"__AVR_ATmega6450__\",        0, 0x0100, \"m6450\" },\n-  { \"atmega6450a\",          ARCH_AVR5, \"__AVR_ATmega6450A__\"        0, 0x0100, \"m6450a\" },\n-  { \"atmega6450p\",          ARCH_AVR5, \"__AVR_ATmega6450P__\"        0, 0x0100, \"m6450p\" },\n+  { \"atmega6450a\",          ARCH_AVR5, \"__AVR_ATmega6450A__\",       0, 0x0100, \"m6450a\" },\n+  { \"atmega6450p\",          ARCH_AVR5, \"__AVR_ATmega6450P__\",       0, 0x0100, \"m6450p\" },\n   { \"atmega649\",            ARCH_AVR5, \"__AVR_ATmega649__\",         0, 0x0100, \"m649\" },\n-  { \"atmega649a\",           ARCH_AVR5, \"__AVR_ATmega649A__\"         0, 0x0100, \"m649a\" },\n-  { \"atmega649p\",           ARCH_AVR5, \"__AVR_ATmega649P__\"         0, 0x0100, \"m649p\" },\n+  { \"atmega649a\",           ARCH_AVR5, \"__AVR_ATmega649A__\",        0, 0x0100, \"m649a\" },\n+  { \"atmega649p\",           ARCH_AVR5, \"__AVR_ATmega649P__\",        0, 0x0100, \"m649p\" },\n   { \"atmega6490\",           ARCH_AVR5, \"__AVR_ATmega6490__\",        0, 0x0100, \"m6490\" },\n   { \"atmega16hva\",          ARCH_AVR5, \"__AVR_ATmega16HVA__\",       0, 0x0100, \"m16hva\" },\n-  { \"atmega16hva2\",         ARCH_AVR5, \"__AVR_ATmega16HVA2__\"       0, 0x0100, \"m16hva2\" },\n+  { \"atmega16hva2\",         ARCH_AVR5, \"__AVR_ATmega16HVA2__\",      0, 0x0100, \"m16hva2\" },\n   { \"atmega16hvb\",          ARCH_AVR5, \"__AVR_ATmega16HVB__\",       0, 0x0100, \"m16hvb\" },\n   { \"atmega32hvb\",          ARCH_AVR5, \"__AVR_ATmega32HVB__\",       0, 0x0100, \"m32hvb\" },\n-  { \"atmega64hve\",          ARCH_AVR5, \"__AVR_ATmega64HVE__\"        0, 0x0100, \"m64hve\" },\n+  { \"atmega64hve\",          ARCH_AVR5, \"__AVR_ATmega64HVE__\",       0, 0x0100, \"m64hve\" },\n   { \"at90can32\",            ARCH_AVR5, \"__AVR_AT90CAN32__\",         0, 0x0100, \"can32\" },\n   { \"at90can64\",            ARCH_AVR5, \"__AVR_AT90CAN64__\",         0, 0x0100, \"can64\" },\n   { \"at90pwm216\",           ARCH_AVR5, \"__AVR_AT90PWM216__\",        0, 0x0100, \"90pwm216\" },"}, {"sha": "77d1330d7997b861fd6ed44b2903cc4e73e35109", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62d5d9f37909881cc4563f362e7022fa03177fd/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62d5d9f37909881cc4563f362e7022fa03177fd/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=e62d5d9f37909881cc4563f362e7022fa03177fd", "patch": "@@ -27,7 +27,7 @@ avr-devices.o: $(srcdir)/config/avr/avr-devices.c \\\n \t\n \n avr-c.o: $(srcdir)/config/avr/avr-c.c \\\n-  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \t\n "}]}