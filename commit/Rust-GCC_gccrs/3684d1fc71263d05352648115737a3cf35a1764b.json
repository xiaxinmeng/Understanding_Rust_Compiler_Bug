{"sha": "3684d1fc71263d05352648115737a3cf35a1764b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY4NGQxZmM3MTI2M2QwNTM1MjY0ODExNTczN2EzY2YzNWExNzY0Yg==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2014-02-25T14:51:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-25T14:51:20Z"}, "message": "sem_ch3.adb, [...]: Mark most references to SPARK RM in error messages for removal.\n\n2014-02-25  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch3.adb, sem_ch5.adb, sem_prag.adb, sem_attr.adb, errout.ads,\n\tsem_ch6.adb: Mark most references to SPARK RM in error messages\n\tfor removal.\n\nFrom-SVN: r208125", "tree": {"sha": "9edf0484b14b61cff65747d0deca3ff77ed58e73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9edf0484b14b61cff65747d0deca3ff77ed58e73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3684d1fc71263d05352648115737a3cf35a1764b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3684d1fc71263d05352648115737a3cf35a1764b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3684d1fc71263d05352648115737a3cf35a1764b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3684d1fc71263d05352648115737a3cf35a1764b/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf36d2cc57c4b03baafc51ad17b15a8bb6f030a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf36d2cc57c4b03baafc51ad17b15a8bb6f030a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf36d2cc57c4b03baafc51ad17b15a8bb6f030a0"}], "stats": {"total": 150, "additions": 84, "deletions": 66}, "files": [{"sha": "ac263d92ef174e3cdeb8dd90eee50b873de3afd0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3684d1fc71263d05352648115737a3cf35a1764b", "patch": "@@ -1,3 +1,9 @@\n+2014-02-25  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch3.adb, sem_ch5.adb, sem_prag.adb, sem_attr.adb, errout.ads,\n+\tsem_ch6.adb: Mark most references to SPARK RM in error messages\n+\tfor removal.\n+\n 2014-02-24  Ed Schonberg  <schonberg@adacore.com>\n \n \t* par-ch3.adb (P_Basic_Declarative_Items): If an improper body"}, {"sha": "6895a5b57a7ad015f8b2c7574a11d10a5aad6d7d", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=3684d1fc71263d05352648115737a3cf35a1764b", "patch": "@@ -316,6 +316,10 @@ package Errout is\n    --      quotes are added unless manual quotation mode is currently set.\n    --      RM and SPARK are special exceptions, they are never treated as\n    --      keywords, and just appear verbatim, with no surrounding quotes.\n+   --      As a special case, 'R'M is used instead of RM (which is not treated\n+   --      as a keyword) to indicate when the reference to the RM is possibly\n+   --      not useful anymore, and could possibly be replaced by a comment\n+   --      in the source.\n \n    --    Insertion character ` (Backquote: set manual quotation mode)\n    --      The backquote character always appears in pairs. Each backquote of\n@@ -327,7 +331,7 @@ package Errout is\n    --    Insertion character ' (Quote: literal character)\n    --      Precedes a character which is placed literally into the message.\n    --      Used to insert characters into messages that are one of the\n-   --      insertion characters defined here. Also used when insertion\n+   --      insertion characters defined here. Also used for insertion of\n    --      upper case letter sequences not to be treated as keywords.\n \n    --    Insertion character \\ (Backslash: continuation message)"}, {"sha": "45210e4f8e343b8b2389466f6a44f9446684ddc5", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=3684d1fc71263d05352648115737a3cf35a1764b", "patch": "@@ -4484,7 +4484,7 @@ package body Sem_Attr is\n             else\n                Error_Attr\n                  (\"attribute % cannot appear in the condition of a contract \"\n-                  & \"case (SPARK RM 6.1.3(2))\", P);\n+                  & \"case (SPARK 'R'M 6.1.3(2))\", P);\n             end if;\n          end Check_Use_In_Contract_Cases;\n "}, {"sha": "1c11473456043f42baf15ecbc4f2ddcff7a8a880", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=3684d1fc71263d05352648115737a3cf35a1764b", "patch": "@@ -2999,7 +2999,7 @@ package body Sem_Ch3 is\n            and then No (Corresponding_Generic_Association (Parent (Obj_Id)))\n          then\n             Error_Msg_N\n-              (\"constant cannot be volatile (SPARK RM 7.1.3(6))\", Obj_Id);\n+              (\"constant cannot be volatile (SPARK 'R'M 7.1.3(6))\", Obj_Id);\n          end if;\n \n       else pragma Assert (Ekind (Obj_Id) = E_Variable);\n@@ -3016,7 +3016,7 @@ package body Sem_Ch3 is\n             then\n                Error_Msg_N\n                  (\"non-volatile variable & cannot have volatile components \"\n-                  & \"(SPARK RM 7.1.3(7))\", Obj_Id);\n+                  & \"(SPARK 'R'M 7.1.3(7))\", Obj_Id);\n \n             --  The declaration of a volatile object must appear at the library\n             --  level.\n@@ -18048,7 +18048,7 @@ package body Sem_Ch3 is\n            and then Is_SPARK_Volatile_Object (Defining_Identifier (Discr))\n          then\n             Error_Msg_N\n-              (\"discriminant cannot be volatile (SPARK RM 7.1.3(6))\", Discr);\n+              (\"discriminant cannot be volatile (SPARK 'R'M 7.1.3(6))\", Discr);\n          end if;\n \n          Next (Discr);"}, {"sha": "13f0a489aaf49b448584f57fa8ef9b00c7d0ef92", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=3684d1fc71263d05352648115737a3cf35a1764b", "patch": "@@ -1972,7 +1972,7 @@ package body Sem_Ch5 is\n         and then Is_SPARK_Volatile_Object (Ent)\n       then\n          Error_Msg_N\n-           (\"loop parameter cannot be volatile (SPARK RM 7.1.3(6))\", Ent);\n+           (\"loop parameter cannot be volatile (SPARK 'R'M 7.1.3(6))\", Ent);\n       end if;\n    end Analyze_Iterator_Specification;\n \n@@ -2618,7 +2618,7 @@ package body Sem_Ch5 is\n \n       if SPARK_Mode = On and then Is_SPARK_Volatile_Object (Id) then\n          Error_Msg_N\n-           (\"loop parameter cannot be volatile (SPARK RM 7.1.3(6))\", Id);\n+           (\"loop parameter cannot be volatile (SPARK 'R'M 7.1.3(6))\", Id);\n       end if;\n    end Analyze_Loop_Parameter_Specification;\n "}, {"sha": "2bfb8bb827dee3f3b794e9487e0702dc65327cb8", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=3684d1fc71263d05352648115737a3cf35a1764b", "patch": "@@ -11421,14 +11421,14 @@ package body Sem_Ch6 is\n             if Ekind_In (Formal, E_In_Out_Parameter, E_Out_Parameter) then\n                Error_Msg_N\n                  (\"function cannot have parameter of mode `OUT` or `IN OUT` \"\n-                  & \"(SPARK RM 6.1)\", Formal);\n+                  & \"(SPARK 'R'M 6.1)\", Formal);\n \n             --  A function cannot have a volatile formal parameter\n \n             elsif Is_SPARK_Volatile_Object (Formal) then\n                Error_Msg_N\n                  (\"function cannot have a volatile formal parameter \"\n-                  & \"(SPARK RM 7.1.3(10))\", Formal);\n+                  & \"(SPARK 'R'M 7.1.3(10))\", Formal);\n             end if;\n          end if;\n "}, {"sha": "8047a4cda7c7d5c13c37e0ad1ce747fcce86af83", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 65, "deletions": 57, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3684d1fc71263d05352648115737a3cf35a1764b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=3684d1fc71263d05352648115737a3cf35a1764b", "patch": "@@ -427,15 +427,15 @@ package body Sem_Prag is\n                if Others_Seen then\n                   Error_Msg_N\n                     (\"only one others choice allowed in contract cases \"\n-                     & \"(SPARK RM 6.1.3(1))\", Case_Guard);\n+                     & \"(SPARK 'R'M 6.1.3(1))\", Case_Guard);\n                else\n                   Others_Seen := True;\n                end if;\n \n             elsif Others_Seen then\n                Error_Msg_N\n                  (\"others must be the last choice in contract cases \"\n-                  & \"(SPARK RM 6.1.3(1))\", N);\n+                  & \"(SPARK 'R'M 6.1.3(1))\", N);\n             end if;\n \n             --  Preanalyze the case guard and consequence\n@@ -783,15 +783,15 @@ package body Sem_Prag is\n                   Error_Msg_Name_1 := Name_Result;\n                   Error_Msg_N\n                     (\"prefix of attribute % must denote the enclosing \"\n-                     & \"function (SPARK RM 6.1.5(11))\", Item);\n+                     & \"function (SPARK 'R'M 6.1.5(11))\", Item);\n \n                --  Function'Result is allowed to appear on the output side of a\n                --  dependency clause.\n \n                elsif Is_Input then\n                   Error_Msg_N\n-                    (\"function result cannot act as input (SPARK RM 6.1.5(6))\",\n-                     Item);\n+                    (\"function result cannot act as input \"\n+                     & \"(SPARK 'R'M 6.1.5(6))\", Item);\n \n                elsif Null_Seen then\n                   Error_Msg_N\n@@ -821,7 +821,8 @@ package body Sem_Prag is\n                      if not Is_Last then\n                         Error_Msg_N\n                           (\"null output list must be the last clause in a \"\n-                           & \"dependency relation (SPARK RM 6.1.5(12))\", Item);\n+                           & \"dependency relation (SPARK 'R'M 6.1.5(12))\",\n+                           Item);\n \n                      --  Catch a useless dependence of the form:\n                      --    null =>+ ...\n@@ -885,7 +886,7 @@ package body Sem_Prag is\n                      then\n                         Error_Msg_N\n                           (\"input of a null output list cannot appear in \"\n-                           & \"multiple input lists (SPARK RM 6.1.5(13))\",\n+                           & \"multiple input lists (SPARK 'R'M 6.1.5(13))\",\n                            Item);\n                      end if;\n \n@@ -905,7 +906,7 @@ package body Sem_Prag is\n                               Item, Item_Id);\n                            Error_Msg_N\n                               (\"\\\\use its constituents instead \"\n-                               & \"(SPARK RM 6.1.5(3))\", Item);\n+                               & \"(SPARK 'R'M 6.1.5(3))\", Item);\n                            return;\n \n                         --  If the reference to the abstract state appears in\n@@ -947,15 +948,15 @@ package body Sem_Prag is\n                   else\n                      Error_Msg_N\n                        (\"item must denote parameter, variable or state \"\n-                        & \"(SPARK RM 6.1.5(1))\", Item);\n+                        & \"(SPARK 'R'M 6.1.5(1))\", Item);\n                   end if;\n \n                --  All other input/output items are illegal\n \n                else\n                   Error_Msg_N\n                     (\"item must denote parameter, variable or state \"\n-                     & \"(SPARK RM 6.1.5(1))\", Item);\n+                     & \"(SPARK 'R'M 6.1.5(1))\", Item);\n                end if;\n             end if;\n          end Analyze_Input_Output;\n@@ -1013,7 +1014,7 @@ package body Sem_Prag is\n          if Ekind (Spec_Id) = E_Function and then not Result_Seen then\n             Error_Msg_NE\n               (\"result of & must appear in exactly one output list \"\n-               & \"(SPARK RM 6.1.5(10))\", N, Spec_Id);\n+               & \"(SPARK 'R'M 6.1.5(10))\", N, Spec_Id);\n          end if;\n       end Check_Function_Return;\n \n@@ -1195,9 +1196,9 @@ package body Sem_Prag is\n                --  and updating.\n \n                if Item_Is_Input then\n-                  Add_Str_To_Name_Buffer (\"(SPARK RM 6.1.5(5))\");\n+                  Add_Str_To_Name_Buffer (\"(SPARK 'R'M 6.1.5(5))\");\n                else\n-                  Add_Str_To_Name_Buffer (\"(SPARK RM 6.1.5(6))\");\n+                  Add_Str_To_Name_Buffer (\"(SPARK 'R'M 6.1.5(6))\");\n                end if;\n \n                Error_Msg := Name_Find;\n@@ -1270,7 +1271,7 @@ package body Sem_Prag is\n                   Add_Item_To_Name_Buffer (Item_Id);\n                   Add_Str_To_Name_Buffer\n                     (\" & must appear in at least one input dependence list \"\n-                     & \"(SPARK RM 6.1.5(8))\");\n+                     & \"(SPARK 'R'M 6.1.5(8))\");\n \n                   Error_Msg := Name_Find;\n                   Error_Msg_NE (Get_Name_String (Error_Msg), Item, Item_Id);\n@@ -1284,7 +1285,7 @@ package body Sem_Prag is\n                Add_Item_To_Name_Buffer (Item_Id);\n                Add_Str_To_Name_Buffer\n                  (\" & must appear in exactly one output dependence list \"\n-                  & \"(SPARK RM 6.1.5(10))\");\n+                  & \"(SPARK 'R'M 6.1.5(10))\");\n \n                Error_Msg := Name_Find;\n                Error_Msg_NE (Get_Name_String (Error_Msg), Item, Item_Id);\n@@ -1496,7 +1497,7 @@ package body Sem_Prag is\n             elsif Is_Attribute_Result (Output) then\n                Error_Msg_N\n                  (\"function result cannot depend on itself \"\n-                  & \"(SPARK RM 6.1.5(10))\", Output);\n+                  & \"(SPARK 'R'M 6.1.5(10))\", Output);\n                return;\n             end if;\n \n@@ -1867,7 +1868,7 @@ package body Sem_Prag is\n       else\n          Error_Msg_N\n            (\"external property % must apply to a volatile object \"\n-            & \"(SPARK RM 7.1.3(2))\", N);\n+            & \"(SPARK 'R'M 7.1.3(2))\", N);\n       end if;\n \n       --  Ensure that the expression (if present) is static Boolean. A missing\n@@ -1883,7 +1884,7 @@ package body Sem_Prag is\n          else\n             Error_Msg_Name_1 := Pragma_Name (N);\n             Error_Msg_N\n-              (\"expression of % must be static (SPARK RM 7.1.2(5))\", Expr);\n+              (\"expression of % must be static (SPARK 'R'M 7.1.2(5))\", Expr);\n          end if;\n       end if;\n    end Analyze_External_Property_In_Decl_Part;\n@@ -2001,7 +2002,7 @@ package body Sem_Prag is\n                   if Scope (Item_Id) = Spec_Id then\n                      Error_Msg_NE\n                        (\"global item cannot reference parameter of subprogram \"\n-                        & \"& (SPARK RM 6.1.4(6))\", Item, Spec_Id);\n+                        & \"& (SPARK 'R'M 6.1.4(6))\", Item, Spec_Id);\n                      return;\n                   end if;\n \n@@ -2011,15 +2012,15 @@ package body Sem_Prag is\n                elsif Ekind (Item_Id) = E_Constant then\n                   Error_Msg_N\n                     (\"global item cannot denote a constant \"\n-                     & \"(SPARK RM 6.1.4(7))\", Item);\n+                     & \"(SPARK 'R'M 6.1.4(7))\", Item);\n \n                --  The only legal references are those to abstract states and\n                --  variables.\n \n                elsif not Ekind_In (Item_Id, E_Abstract_State, E_Variable) then\n                   Error_Msg_N\n                     (\"global item must denote variable or state \"\n-                     & \"(SPARK RM 6.1.4(4))\", Item);\n+                     & \"(SPARK 'R'M 6.1.4(4))\", Item);\n                   return;\n                end if;\n \n@@ -2036,7 +2037,7 @@ package body Sem_Prag is\n                        (\"cannot mention state & in global refinement\",\n                         Item, Item_Id);\n                      Error_Msg_N\n-                       (\"\\\\use its constituents instead (SPARK RM 6.1.4(8))\",\n+                       (\"\\\\use its constituents instead (SPARK 'R'M 6.1.4(8))\",\n                         Item);\n                      return;\n \n@@ -2063,7 +2064,7 @@ package body Sem_Prag is\n                   if Ekind_In (Spec_Id, E_Function, E_Generic_Function) then\n                      Error_Msg_NE\n                        (\"volatile object & cannot act as global item of a \"\n-                        & \"function (SPARK RM 7.1.3(9))\", Item, Item_Id);\n+                        & \"function (SPARK 'R'M 7.1.3(9))\", Item, Item_Id);\n                      return;\n \n                   --  A volatile object with property Effective_Reads set to\n@@ -2093,7 +2094,7 @@ package body Sem_Prag is\n             else\n                Error_Msg_N\n                  (\"global item must denote variable or state \"\n-                  & \"(SPARK RM 6.1.4(4))\", Item);\n+                  & \"(SPARK 'R'M 6.1.4(4))\", Item);\n                return;\n             end if;\n \n@@ -2109,7 +2110,7 @@ package body Sem_Prag is\n \n             if Contains (Seen, Item_Id) then\n                Error_Msg_N\n-                 (\"duplicate global item (SPARK RM 6.1.4(11))\", Item);\n+                 (\"duplicate global item (SPARK 'R'M 6.1.4(11))\", Item);\n \n             --  Add the entity of the current item to the list of processed\n             --  items.\n@@ -2139,7 +2140,8 @@ package body Sem_Prag is\n          is\n          begin\n             if Status then\n-               Error_Msg_N (\"duplicate global mode (SPARK RM 6.1.4(9))\", Mode);\n+               Error_Msg_N\n+                 (\"duplicate global mode (SPARK 'R'M 6.1.4(9))\", Mode);\n             end if;\n \n             Status := True;\n@@ -2184,7 +2186,7 @@ package body Sem_Prag is\n                   then\n                      Error_Msg_NE\n                        (\"global item & cannot have mode In_Out or Output \"\n-                        & \"(SPARK RM 6.1.4(12))\", Item, Item_Id);\n+                        & \"(SPARK 'R'M 6.1.4(12))\", Item, Item_Id);\n                      Error_Msg_NE\n                        (\"\\\\item already appears as input of subprogram &\",\n                         Item, Context);\n@@ -2208,7 +2210,7 @@ package body Sem_Prag is\n             if Ekind (Spec_Id) = E_Function then\n                Error_Msg_N\n                  (\"global mode & is not applicable to functions \"\n-                  & \"(SPARK RM 6.1.4(10))\", Mode);\n+                  & \"(SPARK 'R'M 6.1.4(10))\", Mode);\n             end if;\n          end Check_Mode_Restriction_In_Function;\n \n@@ -2501,14 +2503,14 @@ package body Sem_Prag is\n                      Error_Msg_Name_1 := Chars (Pack_Id);\n                      Error_Msg_NE\n                        (\"initialization item & must appear in the visible \"\n-                        & \"declarations of package % (SPARK RM 7.1.5(7))\",\n+                        & \"declarations of package % (SPARK 'R'M 7.1.5(7))\",\n                         Item, Item_Id);\n \n                   --  Detect a duplicate use of the same initialization item\n \n                   elsif Contains (Items_Seen, Item_Id) then\n                      Error_Msg_N\n-                       (\"duplicate initialization item (SPARK RM 7.1.5(5))\",\n+                       (\"duplicate initialization item (SPARK 'R'M 7.1.5(5))\",\n                         Item);\n \n                   --  The item is legal, add it to the list of processed states\n@@ -2532,15 +2534,15 @@ package body Sem_Prag is\n                else\n                   Error_Msg_N\n                     (\"initialization item must denote variable or state \"\n-                     & \"(SPARK RM 7.1.5(3))\", Item);\n+                     & \"(SPARK 'R'M 7.1.5(3))\", Item);\n                end if;\n \n             --  Some form of illegal construct masquerading as a name\n \n             else\n                Error_Msg_N\n                  (\"initialization item must denote variable or state \"\n-                  & \"(SPARK RM 7.1.5(3))\", Item);\n+                  & \"(SPARK 'R'M 7.1.5(3))\", Item);\n             end if;\n          end if;\n       end Analyze_Initialization_Item;\n@@ -2615,7 +2617,8 @@ package body Sem_Prag is\n \n                      elsif Contains (Inputs_Seen, Input_Id) then\n                         Error_Msg_N\n-                          (\"duplicate input item (SPARK RM 7.1.5(5))\", Input);\n+                          (\"duplicate input item (SPARK 'R'M 7.1.5(5))\",\n+                           Input);\n \n                      --  Input is legal, add it to the list of processed inputs\n \n@@ -10305,7 +10308,7 @@ package body Sem_Prag is\n                      else\n                         Error_Msg_N\n                           (\"expression of external state property must be \"\n-                           & \"static (SPARK RM 7.1.2(5))\", Expr);\n+                           & \"static (SPARK 'R'M 7.1.2(5))\", Expr);\n                      end if;\n \n                   --  The lack of expression defaults the property to True\n@@ -10398,7 +10401,7 @@ package body Sem_Prag is\n                begin\n                   if Status then\n                      Error_Msg_N\n-                       (\"duplicate state option (SPARK RM 7.1.4(1))\", Opt);\n+                       (\"duplicate state option (SPARK 'R'M 7.1.4(1))\", Opt);\n                   end if;\n \n                   Status := True;\n@@ -10415,7 +10418,7 @@ package body Sem_Prag is\n                begin\n                   if Status then\n                      Error_Msg_N\n-                       (\"duplicate external property (SPARK RM 7.1.4(2))\",\n+                       (\"duplicate external property (SPARK 'R'M 7.1.4(2))\",\n                         Prop);\n                   end if;\n \n@@ -10547,7 +10550,7 @@ package body Sem_Prag is\n                      elsif Chars (Opt) = Name_Part_Of then\n                         Error_Msg_N\n                           (\"indicator Part_Of must denote an abstract state \"\n-                           & \"(SPARK RM 7.1.4(9))\", Opt);\n+                           & \"(SPARK 'R'M 7.1.4(9))\", Opt);\n \n                      else\n                         Error_Msg_N\n@@ -11526,7 +11529,8 @@ package body Sem_Prag is\n             --  construct, issue a generic error.\n \n             Error_Pragma\n-              (\"pragma % must apply to a volatile object (SPARK RM 7.1.3(2))\");\n+               (\"pragma % must apply to a volatile object \"\n+                & \"(SPARK 'R'M 7.1.3(2))\");\n          end Async_Effective;\n \n          ------------------\n@@ -18925,7 +18929,7 @@ package body Sem_Prag is\n             then\n                Error_Msg_NE\n                  (\"useless refinement, package & does not define abstract \"\n-                  & \"states (SPARK RM 7.2.2(3))\", N, Spec_Id);\n+                  & \"states (SPARK 'R'M 7.2.2(3))\", N, Spec_Id);\n                return;\n             end if;\n \n@@ -22346,7 +22350,7 @@ package body Sem_Prag is\n       if No (Depends) then\n          Error_Msg_NE\n            (\"useless refinement, declaration of subprogram & lacks aspect or \"\n-            & \"pragma Depends (SPARK RM 7.2.5(2))\", N, Spec_Id);\n+            & \"pragma Depends (SPARK 'R'M 7.2.5(2))\", N, Spec_Id);\n          return;\n       end if;\n \n@@ -22359,7 +22363,8 @@ package body Sem_Prag is\n       if Nkind (Deps) = N_Null then\n          Error_Msg_NE\n            (\"useless refinement, subprogram & does not depend on abstract \"\n-            & \"state with visible refinement (SPARK RM 7.2.5(2))\", N, Spec_Id);\n+            & \"state with visible refinement (SPARK 'R'M 7.2.5(2))\",\n+            N, Spec_Id);\n          return;\n       end if;\n \n@@ -22548,7 +22553,7 @@ package body Sem_Prag is\n                   Error_Msg_Name_1 := Chars (State_Id);\n                   Error_Msg_NE\n                     (\"constituent & of state % must have mode Input, In_Out \"\n-                     & \"or Output in global refinement (SPARK RM 7.2.4(5))\",\n+                     & \"or Output in global refinement (SPARK 'R'M 7.2.4(5))\",\n                      N, Constit_Id);\n \n                else\n@@ -22578,7 +22583,7 @@ package body Sem_Prag is\n             else\n                Error_Msg_NE\n                  (\"global refinement of state & redefines the mode of its \"\n-                  & \"constituents (SPARK RM 7.2.4(5))\", N, State_Id);\n+                  & \"constituents (SPARK 'R'M 7.2.4(5))\", N, State_Id);\n             end if;\n          end Check_Constituent_Usage;\n \n@@ -22651,7 +22656,7 @@ package body Sem_Prag is\n                   Error_Msg_Name_1 := Chars (State_Id);\n                   Error_Msg_NE\n                     (\"constituent & of state % must have mode Input in global \"\n-                     & \"refinement (SPARK RM 7.2.4(5))\", N, Constit_Id);\n+                     & \"refinement (SPARK 'R'M 7.2.4(5))\", N, Constit_Id);\n                end if;\n \n                Next_Elmt (Constit_Elmt);\n@@ -22733,7 +22738,8 @@ package body Sem_Prag is\n                   Error_Msg_Name_1 := Chars (State_Id);\n                   Error_Msg_NE\n                     (\"constituent & of state % must have mode Output in \"\n-                     & \"global refinement (SPARK RM 7.2.4(5))\", N, Constit_Id);\n+                     & \"global refinement (SPARK 'R'M 7.2.4(5))\",\n+                     N, Constit_Id);\n \n                --  The constituent is altogether missing\n \n@@ -22743,7 +22749,7 @@ package body Sem_Prag is\n                      Error_Msg_NE\n                        (\"output state & must be replaced by all its \"\n                         & \"constituents in global refinement \"\n-                        & \"(SPARK RM 7.2.5(3))\", N, State_Id);\n+                        & \"(SPARK 'R'M 7.2.5(3))\", N, State_Id);\n                   end if;\n \n                   Error_Msg_NE\n@@ -22824,7 +22830,8 @@ package body Sem_Prag is\n                   Error_Msg_Name_1 := Chars (State_Id);\n                   Error_Msg_NE\n                     (\"constituent & of state % must have mode Proof_In in \"\n-                     & \"global refinement (SPARK RM 7.2.4(5))\", N, Constit_Id);\n+                     & \"global refinement (SPARK 'R'M 7.2.4(5))\",\n+                     N, Constit_Id);\n                end if;\n \n                Next_Elmt (Constit_Elmt);\n@@ -22960,7 +22967,7 @@ package body Sem_Prag is\n \n             else\n                Error_Msg_NE\n-                 (\"extra global item & (SPARK RM 7.2.4(3))\", Item, Item_Id);\n+                 (\"extra global item & (SPARK 'R'M 7.2.4(3))\", Item, Item_Id);\n             end if;\n          end Check_Refined_Global_Item;\n \n@@ -23141,7 +23148,8 @@ package body Sem_Prag is\n       then\n          Error_Msg_NE\n            (\"useless refinement, subprogram & does not depends on abstract \"\n-            & \"state with visible refinement (SPARK RM 7.2.4(2))\", N, Spec_Id);\n+            & \"state with visible refinement (SPARK 'R'M 7.2.4(2))\",\n+            N, Spec_Id);\n          return;\n       end if;\n \n@@ -23438,7 +23446,7 @@ package body Sem_Prag is\n                   Error_Msg_Name_1 := Chars (Spec_Id);\n                   Error_Msg_NE\n                     (\"cannot use & in refinement, constituent is not a hidden \"\n-                     & \"state of package % (SPARK RM 7.2.2(9))\",\n+                     & \"state of package % (SPARK 'R'M 7.2.2(9))\",\n                      Constit, Constit_Id);\n                end if;\n             end Check_Matching_Constituent;\n@@ -23531,7 +23539,7 @@ package body Sem_Prag is\n                if No (Constit) then\n                   Error_Msg_NE\n                     (\"external state & requires at least one constituent with \"\n-                     & \"property % (SPARK RM 7.2.8(3))\", State, State_Id);\n+                     & \"property % (SPARK 'R'M 7.2.8(3))\", State, State_Id);\n                end if;\n \n             --  The property is missing in the declaration of the state, but a\n@@ -23541,7 +23549,7 @@ package body Sem_Prag is\n                Error_Msg_Name_2 := Chars (Constit);\n                Error_Msg_NE\n                  (\"external state & lacks property % set by constituent % \"\n-                  & \"(SPARK RM 7.2.8(3))\", State, State_Id);\n+                  & \"(SPARK 'R'M 7.2.8(3))\", State, State_Id);\n             end if;\n          end Check_External_Property;\n \n@@ -23557,7 +23565,7 @@ package body Sem_Prag is\n \n             if Contains (Refined_States_Seen, State_Id) then\n                Error_Msg_NE\n-                 (\"duplicate refinement of state & (SPARK RM 7.2.2(8))\",\n+                 (\"duplicate refinement of state & (SPARK 'R'M 7.2.2(8))\",\n                   State, State_Id);\n                return;\n             end if;\n@@ -23690,7 +23698,7 @@ package body Sem_Prag is\n                   Body_Ref := Node (Body_Ref_Elmt);\n \n                   Error_Msg_N\n-                    (\"reference to & not allowed (SPARK RM 6.1.4(8))\",\n+                    (\"reference to & not allowed (SPARK 'R'M 6.1.4(8))\",\n                      Body_Ref);\n                   Error_Msg_Sloc := Sloc (State);\n                   Error_Msg_N (\"\\\\refinement of & is visible#\", Body_Ref);\n@@ -23788,7 +23796,7 @@ package body Sem_Prag is\n             else\n                Error_Msg_NE\n                  (\"external state & requires at least one external \"\n-                  & \"constituent or null refinement (SPARK RM 7.2.8(2))\",\n+                  & \"constituent or null refinement (SPARK 'R'M 7.2.8(2))\",\n                   State, State_Id);\n             end if;\n \n@@ -23798,7 +23806,7 @@ package body Sem_Prag is\n          elsif External_Constit_Seen then\n             Error_Msg_NE\n               (\"non-external state & cannot contain external constituents in \"\n-               & \"refinement (SPARK RM 7.2.8(1))\", State, State_Id);\n+               & \"refinement (SPARK 'R'M 7.2.8(1))\", State, State_Id);\n          end if;\n \n          --  Ensure that all Part_Of candidate constituents have been mentioned\n@@ -24733,7 +24741,7 @@ package body Sem_Prag is\n             Error_Msg_Name_1 := Chars (Constit_Id);\n             Error_Msg_NE\n               (\"cannot mention state & and its constituent % in the same \"\n-               & \"context (SPARK RM 7.2.6(7))\", Context, State_Id);\n+               & \"context (SPARK 'R'M 7.2.6(7))\", Context, State_Id);\n             exit;\n          end if;\n "}]}