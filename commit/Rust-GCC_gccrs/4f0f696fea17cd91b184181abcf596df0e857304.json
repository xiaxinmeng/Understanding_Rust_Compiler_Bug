{"sha": "4f0f696fea17cd91b184181abcf596df0e857304", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYwZjY5NmZlYTE3Y2Q5MWIxODQxODFhYmNmNTk2ZGYwZTg1NzMwNA==", "commit": {"author": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2021-08-20T21:54:42Z"}, "committer": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2021-09-10T16:00:27Z"}, "message": "bpf: correct zero_extend output templates\n\nThe output templates for zero_extendhidi2 and zero_extendqidi2 could\nlead to incorrect code generation when zero-extending one register into\nanother. This patch adds a new output template to the define_insns to\nhandle such cases and produce correct asm.\n\ngcc/ChangeLog:\n\t* config/bpf/bpf.md (zero_extendhidi2): Add new output template\n\tfor register-to-register extensions.\n\t(zero_extendqidi2): Likewise.", "tree": {"sha": "0f1cc4257b6e129da55a44ba258674167da995e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f1cc4257b6e129da55a44ba258674167da995e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f0f696fea17cd91b184181abcf596df0e857304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f0f696fea17cd91b184181abcf596df0e857304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f0f696fea17cd91b184181abcf596df0e857304", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f0f696fea17cd91b184181abcf596df0e857304/comments", "author": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f8af6dc82a0dac0d97fdd4d1f2055e932f29216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f8af6dc82a0dac0d97fdd4d1f2055e932f29216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f8af6dc82a0dac0d97fdd4d1f2055e932f29216"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "c51add728ef04cdcfc29b376d2ac090f5c59d164", "filename": "gcc/config/bpf/bpf.md", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f0f696fea17cd91b184181abcf596df0e857304/gcc%2Fconfig%2Fbpf%2Fbpf.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f0f696fea17cd91b184181abcf596df0e857304/gcc%2Fconfig%2Fbpf%2Fbpf.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbpf%2Fbpf.md?ref=4f0f696fea17cd91b184181abcf596df0e857304", "patch": "@@ -241,22 +241,24 @@\n ;; the ldx{bhwdw} instructions to load the values in registers.\n \n (define_insn \"zero_extendhidi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n-\t(zero_extend:DI (match_operand:HI 1 \"nonimmediate_operand\" \"r,m\")))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r,r,r\")\n+\t(zero_extend:DI (match_operand:HI 1 \"nonimmediate_operand\" \"0,r,m\")))]\n   \"\"\n   \"@\n    and\\t%0,0xffff\n+   mov\\t%0,%1\\;and\\t%0,0xffff\n    ldxh\\t%0,%1\"\n-  [(set_attr \"type\" \"alu,ldx\")])\n+  [(set_attr \"type\" \"alu,alu,ldx\")])\n \n (define_insn \"zero_extendqidi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n-\t(zero_extend:DI (match_operand:QI 1 \"nonimmediate_operand\" \"r,m\")))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r,r,r\")\n+\t(zero_extend:DI (match_operand:QI 1 \"nonimmediate_operand\" \"0,r,m\")))]\n   \"\"\n   \"@\n    and\\t%0,0xff\n+   mov\\t%0,%1\\;and\\t%0,0xff\n    ldxb\\t%0,%1\"\n-  [(set_attr \"type\" \"alu,ldx\")])\n+  [(set_attr \"type\" \"alu,alu,ldx\")])\n \n (define_insn \"zero_extendsidi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")"}]}