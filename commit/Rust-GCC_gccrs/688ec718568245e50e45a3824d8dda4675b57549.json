{"sha": "688ec718568245e50e45a3824d8dda4675b57549", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg4ZWM3MTg1NjgyNDVlNTBlNDVhMzgyNGQ4ZGRhNDY3NWI1NzU0OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-05-06T20:08:30Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-06T20:08:30Z"}, "message": "recog.c (if_test_bypass_p): Accept multiple set insns for OUT, and any jump or call for IN.\n\n        * recog.c (if_test_bypass_p): Accept multiple set insns for OUT,\n        and any jump or call for IN.\n\nFrom-SVN: r53234", "tree": {"sha": "007f781b3cb5ee76774c81024bf40c10cc7bd887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/007f781b3cb5ee76774c81024bf40c10cc7bd887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/688ec718568245e50e45a3824d8dda4675b57549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688ec718568245e50e45a3824d8dda4675b57549", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688ec718568245e50e45a3824d8dda4675b57549", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688ec718568245e50e45a3824d8dda4675b57549/comments", "author": null, "committer": null, "parents": [{"sha": "f6536266dddb810607d32292045b2d3a93921583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6536266dddb810607d32292045b2d3a93921583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6536266dddb810607d32292045b2d3a93921583"}], "stats": {"total": 57, "additions": 46, "deletions": 11}, "files": [{"sha": "f18175314856a569580950b3aaad0dffba819d35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688ec718568245e50e45a3824d8dda4675b57549/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688ec718568245e50e45a3824d8dda4675b57549/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=688ec718568245e50e45a3824d8dda4675b57549", "patch": "@@ -1,3 +1,8 @@\n+2002-05-06  Richard Henderson  <rth@redhat.com>\n+\n+\t* recog.c (if_test_bypass_p): Accept multiple set insns for OUT,\n+\tand any jump or call for IN.\n+\n 2002-05-06  Bernd Schmidt  <bernds@redhat.com>\n \n \t* config/i386/i386.h (CPP_CPUCOMMON_SPEC): Define __SSE2_BUILTINS__ if\t"}, {"sha": "3b9d9612de71ed3163669834c7901ef9f612ea66", "filename": "gcc/recog.c", "status": "modified", "additions": 41, "deletions": 11, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688ec718568245e50e45a3824d8dda4675b57549/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688ec718568245e50e45a3824d8dda4675b57549/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=688ec718568245e50e45a3824d8dda4675b57549", "patch": "@@ -3329,30 +3329,60 @@ store_data_bypass_p (out_insn, in_insn)\n   return true;\n }\n \n-/* True if the dependency between OUT_INSN and IN_INSN is in the \n-   IF_THEN_ELSE condition, and not the THEN or ELSE branch.\n-   Both OUT_INSN and IN_INSN must be single_set.  */\n+/* True if the dependency between OUT_INSN and IN_INSN is in the IF_THEN_ELSE\n+   condition, and not the THEN or ELSE branch.  OUT_INSN may be either a single\n+   or multiple set; IN_INSN should be single_set for truth, but for convenience\n+   of insn categorization may be any JUMP or CALL insn.  */\n \n int\n if_test_bypass_p (out_insn, in_insn)\n      rtx out_insn, in_insn;\n {\n   rtx out_set, in_set;\n \n-  out_set = single_set (out_insn);\n-  if (! out_set)\n-    abort ();\n-\n   in_set = single_set (in_insn);\n   if (! in_set)\n-    abort ();\n+    {\n+      if (GET_CODE (in_insn) == JUMP_INSN || GET_CODE (in_insn) == CALL_INSN)\n+\treturn false;\n+      abort ();\n+    }\n \n   if (GET_CODE (SET_SRC (in_set)) != IF_THEN_ELSE)\n     return false;\n+  in_set = SET_SRC (in_set);\n \n-  if (reg_mentioned_p (SET_DEST (out_set), XEXP (in_set, 1))\n-      || reg_mentioned_p (SET_DEST (out_set), XEXP (in_set, 2)))\n-    return false;\n+  out_set = single_set (out_insn);\n+  if (out_set)\n+    {\n+      if (reg_mentioned_p (SET_DEST (out_set), XEXP (in_set, 1))\n+\t  || reg_mentioned_p (SET_DEST (out_set), XEXP (in_set, 2)))\n+        return false;\n+    }\n+  else\n+    {\n+      rtx out_pat;\n+      int i;\n+\n+      out_pat = PATTERN (out_insn);\n+      if (GET_CODE (out_pat) != PARALLEL)\n+\tabort ();\n+\n+      for (i = 0; i < XVECLEN (out_pat, 0); i++)\n+\t{\n+\t  rtx exp = XVECEXP (out_pat, 0, i);\n+\n+\t  if (GET_CODE (exp) == CLOBBER)\n+\t    continue;\n+\n+\t  if (GET_CODE (exp) != SET)\n+\t    abort ();\n+\n+\t  if (reg_mentioned_p (SET_DEST (out_set), XEXP (in_set, 1))\n+\t      || reg_mentioned_p (SET_DEST (out_set), XEXP (in_set, 2)))\n+\t    return false;\n+\t}\n+    }\n \n   return true;\n }"}]}