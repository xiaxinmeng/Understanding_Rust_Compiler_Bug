{"sha": "dc215785635e91c391118cf773f5ba1f6d26acb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMyMTU3ODU2MzVlOTFjMzkxMTE4Y2Y3NzNmNWJhMWY2ZDI2YWNiMQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2009-03-11T15:24:00Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2009-03-11T15:24:00Z"}, "message": "fold-const.c (fold_comparison): Only call fold_inf_compare if the mode supports infinities.\n\nChangeLog:\n\n\t* fold-const.c (fold_comparison): Only call fold_inf_compare\n\tif the mode supports infinities.\n\ntestsuite/ChangeLog:\n\n\t* gcc.c-torture/execute/ieee/inf-3.c: New test.\n\t* gcc.c-torture/execute/ieee/inf-2.c: Fix typo.\n\nFrom-SVN: r144779", "tree": {"sha": "e99dab3450b2f3d8752625e45a2e5345cd593a8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e99dab3450b2f3d8752625e45a2e5345cd593a8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc215785635e91c391118cf773f5ba1f6d26acb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc215785635e91c391118cf773f5ba1f6d26acb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc215785635e91c391118cf773f5ba1f6d26acb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc215785635e91c391118cf773f5ba1f6d26acb1/comments", "author": null, "committer": null, "parents": [{"sha": "32fdf2f406a4db93a66ec808812c5843c601e9b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32fdf2f406a4db93a66ec808812c5843c601e9b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32fdf2f406a4db93a66ec808812c5843c601e9b4"}], "stats": {"total": 94, "additions": 92, "deletions": 2}, "files": [{"sha": "1241708f095b9577b4dbf8dd76e7a728abaf63d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc215785635e91c391118cf773f5ba1f6d26acb1", "patch": "@@ -1,3 +1,8 @@\n+2009-03-11  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* fold-const.c (fold_comparison): Only call fold_inf_compare\n+\tif the mode supports infinities.\n+\n 2009-03-11  Jason Merrill  <jason@redhat.com>\n \n \tPR debug/39086"}, {"sha": "e38850fd5df467cec544b3d235e54216f6d750cc", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=dc215785635e91c391118cf773f5ba1f6d26acb1", "patch": "@@ -9292,7 +9292,8 @@ fold_comparison (enum tree_code code, tree type, tree op0, tree op1)\n \t    }\n \n \t  /* Fold comparisons against infinity.  */\n-\t  if (REAL_VALUE_ISINF (cst))\n+\t  if (REAL_VALUE_ISINF (cst)\n+\t      && MODE_HAS_INFINITIES (TYPE_MODE (TREE_TYPE (arg1))))\n \t    {\n \t      tem = fold_inf_compare (code, type, arg0, arg1);\n \t      if (tem != NULL_TREE)"}, {"sha": "3760728fa4447f21253f68d73b3c4a962f7d591b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dc215785635e91c391118cf773f5ba1f6d26acb1", "patch": "@@ -1,3 +1,8 @@\n+2009-03-11  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* gcc.c-torture/execute/ieee/inf-3.c: New test.\n+\t* gcc.c-torture/execute/ieee/inf-2.c: Fix typo.\n+\n 2009-03-11  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/slice_enum.adb: New test."}, {"sha": "dafd95835c8a6cfbd4dd1be65aec10373041439e", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/inf-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Finf-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Finf-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Finf-2.c?ref=dc215785635e91c391118cf773f5ba1f6d26acb1", "patch": "@@ -77,7 +77,7 @@ int main()\n {\n   test (34.0, __builtin_inf());\n   testf (34.0f, __builtin_inff());\n-  testf (34.0l, __builtin_infl());\n+  testl (34.0l, __builtin_infl());\n   return 0;\n }\n "}, {"sha": "f2ee4806265faf484aa2c33e67d799e23675f177", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/inf-3.c", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Finf-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc215785635e91c391118cf773f5ba1f6d26acb1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Finf-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Finf-3.c?ref=dc215785635e91c391118cf773f5ba1f6d26acb1", "patch": "@@ -0,0 +1,79 @@\n+extern void abort (void);\n+\n+void test(double f, double i)\n+{\n+  if (f == __builtin_huge_val())\n+    abort ();\n+  if (f == -__builtin_huge_val())\n+    abort ();\n+  if (i == -__builtin_huge_val())\n+    abort ();\n+  if (i != __builtin_huge_val())\n+    abort ();\n+\n+  if (f >= __builtin_huge_val())\n+    abort ();\n+  if (f > __builtin_huge_val())\n+    abort ();\n+  if (i > __builtin_huge_val())\n+    abort ();\n+  if (f <= -__builtin_huge_val())\n+    abort ();\n+  if (f < -__builtin_huge_val())\n+    abort ();\n+}\n+\n+void testf(float f, float i)\n+{\n+  if (f == __builtin_huge_valf())\n+    abort ();\n+  if (f == -__builtin_huge_valf())\n+    abort ();\n+  if (i == -__builtin_huge_valf())\n+    abort ();\n+  if (i != __builtin_huge_valf())\n+    abort ();\n+\n+  if (f >= __builtin_huge_valf())\n+    abort ();\n+  if (f > __builtin_huge_valf())\n+    abort ();\n+  if (i > __builtin_huge_valf())\n+    abort ();\n+  if (f <= -__builtin_huge_valf())\n+    abort ();\n+  if (f < -__builtin_huge_valf())\n+    abort ();\n+}\n+\n+void testl(long double f, long double i)\n+{\n+  if (f == __builtin_huge_vall())\n+    abort ();\n+  if (f == -__builtin_huge_vall())\n+    abort ();\n+  if (i == -__builtin_huge_vall())\n+    abort ();\n+  if (i != __builtin_huge_vall())\n+    abort ();\n+\n+  if (f >= __builtin_huge_vall())\n+    abort ();\n+  if (f > __builtin_huge_vall())\n+    abort ();\n+  if (i > __builtin_huge_vall())\n+    abort ();\n+  if (f <= -__builtin_huge_vall())\n+    abort ();\n+  if (f < -__builtin_huge_vall())\n+    abort ();\n+}\n+\n+int main()\n+{\n+  test (34.0, __builtin_huge_val());\n+  testf (34.0f, __builtin_huge_valf());\n+  testl (34.0l, __builtin_huge_vall());\n+  return 0;\n+}\n+"}]}