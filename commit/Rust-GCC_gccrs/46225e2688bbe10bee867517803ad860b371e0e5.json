{"sha": "46225e2688bbe10bee867517803ad860b371e0e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYyMjVlMjY4OGJiZTEwYmVlODY3NTE3ODAzYWQ4NjBiMzcxZTBlNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-04-17T14:01:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-04-17T14:01:26Z"}, "message": "re PR c++/35773 (auto_ptr references don't convert)\n\n        PR c++/35773\n        * cp/call.c (build_user_type_conversion_1): Represent second step of\n        copy-init with an rvalue conversion.\n        (convert_like_real) [ck_user]: Don't implicitly add it here.\n        * g++.dg/overload/autoptr1.C: New.\n\nFrom-SVN: r134398", "tree": {"sha": "0f3beacf2dcdb116cafffbd9623593aacb453e4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f3beacf2dcdb116cafffbd9623593aacb453e4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46225e2688bbe10bee867517803ad860b371e0e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46225e2688bbe10bee867517803ad860b371e0e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46225e2688bbe10bee867517803ad860b371e0e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46225e2688bbe10bee867517803ad860b371e0e5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec2e9a15a83b3633f4d27bfc5f226a31eedbbf41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2e9a15a83b3633f4d27bfc5f226a31eedbbf41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2e9a15a83b3633f4d27bfc5f226a31eedbbf41"}], "stats": {"total": 107, "additions": 73, "deletions": 34}, "files": [{"sha": "3169ba0f366e45e7e5164def9129b99c2e577a1f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46225e2688bbe10bee867517803ad860b371e0e5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46225e2688bbe10bee867517803ad860b371e0e5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=46225e2688bbe10bee867517803ad860b371e0e5", "patch": "@@ -1,3 +1,10 @@\n+2008-04-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35773\n+\t* call.c (build_user_type_conversion_1): Represent second step of \n+\tcopy-init with an rvalue conversion.\n+\t(convert_like_real) [ck_user]: Don't implicitly add it here.\n+\n 2008-04-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/35751"}, {"sha": "c072a7df77fb10f068b049feeda89382344f0fb6", "filename": "gcc/cp/call.c", "status": "modified", "additions": 32, "deletions": 34, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46225e2688bbe10bee867517803ad860b371e0e5/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46225e2688bbe10bee867517803ad860b371e0e5/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=46225e2688bbe10bee867517803ad860b371e0e5", "patch": "@@ -2634,7 +2634,22 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags)\n \t\t\t\t       flags);\n \n       if (cand)\n-\tcand->second_conv = build_identity_conv (totype, NULL_TREE);\n+\t{\n+\t  cand->second_conv = build_identity_conv (totype, NULL_TREE);\n+\n+\t  /* If totype isn't a reference, and LOOKUP_NO_TEMP_BIND isn't\n+\t     set, then this is copy-initialization.  In that case, \"The\n+\t     result of the call is then used to direct-initialize the\n+\t     object that is the destination of the copy-initialization.\"\n+\t     [dcl.init]\n+\n+\t     We represent this in the conversion sequence with an\n+\t     rvalue conversion, which means a constructor call.  */\n+\t  if (TREE_CODE (totype) != REFERENCE_TYPE\n+\t      && !(convflags & LOOKUP_NO_TEMP_BIND))\n+\t    cand->second_conv\n+\t      = build_conv (ck_rvalue, totype, cand->second_conv);\n+\t}\n     }\n \n   if (conv_fns)\n@@ -2686,6 +2701,20 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags)\n \t\t\t\t       0,\n \t\t\t\t       /*c_cast_p=*/false, convflags);\n \n+\t      /* If LOOKUP_NO_TEMP_BIND isn't set, then this is\n+\t\t copy-initialization.  In that case, \"The result of the\n+\t\t call is then used to direct-initialize the object that is\n+\t\t the destination of the copy-initialization.\"  [dcl.init]\n+\n+\t\t We represent this in the conversion sequence with an\n+\t\t rvalue conversion, which means a constructor call.  But\n+\t\t don't add a second rvalue conversion if there's already\n+\t\t one there.  Which there really shouldn't be, but it's\n+\t\t harmless since we'd add it here anyway. */\n+\t      if (ics && MAYBE_CLASS_TYPE_P (totype) && ics->kind != ck_rvalue\n+\t\t  && !(convflags & LOOKUP_NO_TEMP_BIND))\n+\t\tics = build_conv (ck_rvalue, totype, ics);\n+\n \t      cand->second_conv = ics;\n \n \t      if (!ics)\n@@ -4425,38 +4454,6 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \tif (DECL_CONSTRUCTOR_P (convfn))\n \t  expr = build_cplus_new (totype, expr);\n \n-\t/* The result of the call is then used to direct-initialize the object\n-\t   that is the destination of the copy-initialization.  [dcl.init]\n-\n-\t   Note that this step is not reflected in the conversion sequence;\n-\t   it affects the semantics when we actually perform the\n-\t   conversion, but is not considered during overload resolution.\n-\n-\t   If the target is a class, that means call a ctor.  */\n-\tif (MAYBE_CLASS_TYPE_P (totype)\n-\t    && (inner >= 0 || !lvalue_p (expr)))\n-\t  {\n-\t    expr = (build_temp\n-\t\t    (expr, totype,\n-\t\t     /* Core issue 84, now a DR, says that we don't\n-\t\t\tallow UDCs for these args (which deliberately\n-\t\t\tbreaks copy-init of an auto_ptr<Base> from an\n-\t\t\tauto_ptr<Derived>).  */\n-\t\t     LOOKUP_NORMAL|LOOKUP_ONLYCONVERTING|LOOKUP_NO_CONVERSION,\n-\t\t     &diagnostic_fn));\n-\n-\t    if (diagnostic_fn && (complain & tf_error))\n-\t      {\n-\t\tif (fn)\n-\t\t  diagnostic_fn\n-\t\t    (\"  initializing argument %P of %qD from result of %qD\",\n-\t\t     argnum, fn, convfn);\n-\t\telse\n-\t\t diagnostic_fn\n-\t\t   (\"  initializing temporary from result of %qD\",  convfn);\n-\t      }\n-\t    expr = build_cplus_new (totype, expr);\n-\t  }\n \treturn expr;\n       }\n     case ck_identity:\n@@ -4518,7 +4515,8 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n       flags = LOOKUP_NORMAL|LOOKUP_ONLYCONVERTING;\n       if (convs->user_conv_p)\n \t/* This conversion is being done in the context of a user-defined\n-\t   conversion, so don't allow any more.  */\n+\t   conversion (i.e. the second step of copy-initialization), so\n+\t   don't allow any more.  */\n \tflags |= LOOKUP_NO_CONVERSION;\n       expr = build_temp (expr, totype, flags, &diagnostic_fn);\n       if (diagnostic_fn && fn)"}, {"sha": "63650dc3a8cef94667162c789443b69acfd2a416", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46225e2688bbe10bee867517803ad860b371e0e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46225e2688bbe10bee867517803ad860b371e0e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=46225e2688bbe10bee867517803ad860b371e0e5", "patch": "@@ -1,3 +1,8 @@\n+2008-04-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35773\n+\t* g++.dg/overload/autoptr1.C: New.\n+\n 2008-04-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/alignment4.adb: New test."}, {"sha": "fc81083500ec08cfc31e832364c6c6ebe6387665", "filename": "gcc/testsuite/g++.dg/overload/autoptr1.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46225e2688bbe10bee867517803ad860b371e0e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fautoptr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46225e2688bbe10bee867517803ad860b371e0e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fautoptr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fautoptr1.C?ref=46225e2688bbe10bee867517803ad860b371e0e5", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/35773\n+\n+template< typename T >\n+class auto_ptr\n+{\n+  struct auto_ptr_ref { };\n+public:\n+  auto_ptr(auto_ptr&);\n+  auto_ptr(auto_ptr_ref);\n+\n+  operator auto_ptr_ref();\n+};\n+\n+template< typename T >\n+class reference_wrapper\n+{\n+public:\n+  reference_wrapper(T& t);\n+  operator T& () const;\n+};\n+\n+struct X { };\n+\n+void f(auto_ptr< X >);\n+\n+void g(reference_wrapper< auto_ptr< X > > r)\n+{\n+  f(r);\n+}"}]}