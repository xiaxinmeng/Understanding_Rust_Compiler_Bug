{"sha": "7a7017bc20fdda8b27baa76f8e393a9dd54339bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E3MDE3YmMyMGZkZGE4YjI3YmFhNzZmOGUzOTNhOWRkNTQzMzliYg==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2006-05-02T12:49:48Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2006-05-02T12:49:48Z"}, "message": "arm.c (add_minipool_forward_ref): Check if insn and pool overlap.\n\n2006-05-02  Paul Brook  <paul@codesourcery.com>\n\n\t* config/arm/arm.c (add_minipool_forward_ref): Check if insn\n\tand pool overlap.\n\t(create_fix_barrier): Check that a suitable barrier location is\n\tfound.\n\t(arm_reorg): Include ftmp->address in allowable range of addresses.\n\nFrom-SVN: r113459", "tree": {"sha": "df8b7aa791ffc1c51ee292ea476b0395435db876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df8b7aa791ffc1c51ee292ea476b0395435db876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a7017bc20fdda8b27baa76f8e393a9dd54339bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a7017bc20fdda8b27baa76f8e393a9dd54339bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a7017bc20fdda8b27baa76f8e393a9dd54339bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a7017bc20fdda8b27baa76f8e393a9dd54339bb/comments", "author": null, "committer": null, "parents": [{"sha": "3beef5cbb24a2e07a9e0abb227554ab3620d30c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3beef5cbb24a2e07a9e0abb227554ab3620d30c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3beef5cbb24a2e07a9e0abb227554ab3620d30c5"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "01df17197957667caa054308028d76e7197faeaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a7017bc20fdda8b27baa76f8e393a9dd54339bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a7017bc20fdda8b27baa76f8e393a9dd54339bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a7017bc20fdda8b27baa76f8e393a9dd54339bb", "patch": "@@ -1,8 +1,16 @@\n+2006-05-02  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (add_minipool_forward_ref): Check if insn\n+\tand pool overlap.\n+\t(create_fix_barrier): Check that a suitable barrier location is\n+\tfound.\n+\t(arm_reorg): Include ftmp->address in allowable range of addresses.\n+\n 2006-05-02  David Billinghurst <David.Billinghurst@riotinto.com>\n \n \tPR ada/27366\n- \t* ada/env.c (__gnat_clearenv): Use unsetenv() to clear environment \n- \ton Cygwin.\n+\t* ada/env.c (__gnat_clearenv): Use unsetenv() to clear environment \n+\ton Cygwin.\n \n 2006-05-02  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "5a5c7c0e07655bc7b78a6987c08a159c5d571424", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a7017bc20fdda8b27baa76f8e393a9dd54339bb/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a7017bc20fdda8b27baa76f8e393a9dd54339bb/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=7a7017bc20fdda8b27baa76f8e393a9dd54339bb", "patch": "@@ -7432,13 +7432,13 @@ add_minipool_forward_ref (Mfix *fix)\n   HOST_WIDE_INT max_address = fix->address + fix->forwards - minipool_pad;\n   Mnode *       mp;\n \n-  /* If this fix's address is greater than the address of the first\n-     entry, then we can't put the fix in this pool.  We subtract the\n-     size of the current fix to ensure that if the table is fully\n-     packed we still have enough room to insert this value by shuffling\n-     the other fixes forwards.  */\n+  /* If the minipool starts before the end of FIX->INSN then this FIX\n+     can not be placed into the current pool.  Furthermore, adding the\n+     new constant pool entry may cause the pool to start FIX_SIZE bytes\n+     earlier.  */\n   if (minipool_vector_head &&\n-      fix->address >= minipool_vector_head->max_address - fix->fix_size)\n+      (fix->address + get_attr_length (fix->insn)\n+       >= minipool_vector_head->max_address - fix->fix_size))\n     return NULL;\n \n   /* Scan the pool to see if a constant with the same value has\n@@ -7881,8 +7881,10 @@ create_fix_barrier (Mfix *fix, HOST_WIDE_INT max_address)\n   HOST_WIDE_INT count = 0;\n   rtx barrier;\n   rtx from = fix->insn;\n-  rtx selected = from;\n+  /* The instruction after which we will insert the jump.  */\n+  rtx selected = NULL;\n   int selected_cost;\n+  /* The address at which the jump instruction will be placed.  */\n   HOST_WIDE_INT selected_address;\n   Mfix * new_fix;\n   HOST_WIDE_INT max_count = max_address - fix->address;\n@@ -7914,7 +7916,8 @@ create_fix_barrier (Mfix *fix, HOST_WIDE_INT max_address)\n \t     still put the pool after the table.  */\n \t  new_cost = arm_barrier_cost (from);\n \n-\t  if (count < max_count && new_cost <= selected_cost)\n+\t  if (count < max_count \n+\t      && (!selected || new_cost <= selected_cost))\n \t    {\n \t      selected = tmp;\n \t      selected_cost = new_cost;\n@@ -7928,7 +7931,8 @@ create_fix_barrier (Mfix *fix, HOST_WIDE_INT max_address)\n \n       new_cost = arm_barrier_cost (from);\n \n-      if (count < max_count && new_cost <= selected_cost)\n+      if (count < max_count\n+\t  && (!selected || new_cost <= selected_cost))\n \t{\n \t  selected = from;\n \t  selected_cost = new_cost;\n@@ -7938,6 +7942,9 @@ create_fix_barrier (Mfix *fix, HOST_WIDE_INT max_address)\n       from = NEXT_INSN (from);\n     }\n \n+  /* Make sure that we found a place to insert the jump.  */\n+  gcc_assert (selected);\n+\n   /* Create a new JUMP_INSN that branches around a barrier.  */\n   from = emit_jump_insn_after (gen_jump (label), selected);\n   JUMP_LABEL (from) = label;\n@@ -8288,9 +8295,11 @@ arm_reorg (void)\n \t  /* Check that there isn't another fix that is in range that\n \t     we couldn't fit into this pool because the pool was\n \t     already too large: we need to put the pool before such an\n-\t     instruction.  */\n+\t     instruction.  The pool itself may come just after the\n+\t     fix because create_fix_barrier also allows space for a\n+\t     jump instruction.  */\n \t  if (ftmp->address < max_address)\n-\t    max_address = ftmp->address;\n+\t    max_address = ftmp->address + 1;\n \n \t  last_barrier = create_fix_barrier (last_added_fix, max_address);\n \t}"}]}