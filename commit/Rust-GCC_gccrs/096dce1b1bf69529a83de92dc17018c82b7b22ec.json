{"sha": "096dce1b1bf69529a83de92dc17018c82b7b22ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk2ZGNlMWIxYmY2OTUyOWE4M2RlOTJkYzE3MDE4YzgyYjdiMjJlYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-06-19T14:48:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-06-19T14:48:47Z"}, "message": "re PR middle-end/28045 (Bitfield, &&, and optimization => bad code generation)\n\n2006-06-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/28045\n\t* fold-const.c (operand_equal_p): Check if the argument types\n\thave the same precision before stripping NOPs.\n\n\t* gcc.dg/torture/pr28045.c: New testcase.\n\nFrom-SVN: r114772", "tree": {"sha": "94e0d422465e6c5021873e4eb47e883ac058f5fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94e0d422465e6c5021873e4eb47e883ac058f5fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/096dce1b1bf69529a83de92dc17018c82b7b22ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096dce1b1bf69529a83de92dc17018c82b7b22ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/096dce1b1bf69529a83de92dc17018c82b7b22ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096dce1b1bf69529a83de92dc17018c82b7b22ec/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46b86adcdc8bdf4f49df1b52de41eefd9a1afd60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b86adcdc8bdf4f49df1b52de41eefd9a1afd60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46b86adcdc8bdf4f49df1b52de41eefd9a1afd60"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "be202bf61d0806474c556b621ddbd5ec2efd922b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096dce1b1bf69529a83de92dc17018c82b7b22ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096dce1b1bf69529a83de92dc17018c82b7b22ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=096dce1b1bf69529a83de92dc17018c82b7b22ec", "patch": "@@ -1,3 +1,9 @@\n+2006-06-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/28045\n+\t* fold-const.c (operand_equal_p): Check if the argument types\n+\thave the same precision before stripping NOPs.\n+\n 2006-06-19  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/27341"}, {"sha": "5a65586794e0c130dc6278649f2a874e5e1a2026", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096dce1b1bf69529a83de92dc17018c82b7b22ec/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096dce1b1bf69529a83de92dc17018c82b7b22ec/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=096dce1b1bf69529a83de92dc17018c82b7b22ec", "patch": "@@ -2497,6 +2497,11 @@ operand_equal_p (tree arg0, tree arg1, unsigned int flags)\n   if (TYPE_UNSIGNED (TREE_TYPE (arg0)) != TYPE_UNSIGNED (TREE_TYPE (arg1)))\n     return 0;\n \n+  /* If both types don't have the same precision, then it is not safe\n+     to strip NOPs.  */\n+  if (TYPE_PRECISION (TREE_TYPE (arg0)) != TYPE_PRECISION (TREE_TYPE (arg1)))\n+    return 0;\n+\n   STRIP_NOPS (arg0);\n   STRIP_NOPS (arg1);\n "}, {"sha": "ba44e8fb2ac8a6d89b9f82294b03832794392bca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096dce1b1bf69529a83de92dc17018c82b7b22ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096dce1b1bf69529a83de92dc17018c82b7b22ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=096dce1b1bf69529a83de92dc17018c82b7b22ec", "patch": "@@ -1,3 +1,8 @@\n+2006-06-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/28045\n+\t* gcc.dg/torture/pr28045.c: New testcase.\n+\n 2006-06-18  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/26801"}, {"sha": "f2d16646ca269fddc5499084120a2cf3ad366187", "filename": "gcc/testsuite/gcc.dg/torture/pr28045.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/096dce1b1bf69529a83de92dc17018c82b7b22ec/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28045.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/096dce1b1bf69529a83de92dc17018c82b7b22ec/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28045.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28045.c?ref=096dce1b1bf69529a83de92dc17018c82b7b22ec", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do run } */\n+\n+extern void abort(void);\n+struct a\n+{\n+   unsigned int bits : 1;\n+   signed long val : ((sizeof(long) * 8) - 1);\n+};\n+int Fnegate (struct a b)\n+{\n+  if ((-((long)b.val)) <= ((long) ((1UL << ((sizeof(long) * 8) - 2)) -1UL))\n+      && (-((long)b.val)) >= (-(((long) ((1UL << ((sizeof(long) * 8) - 2)) -1UL))) - 1))\n+     return 0 ;\n+  abort ();\n+}\n+int main ()\n+{\n+  struct a b = {1, 1};\n+  Fnegate (b);\n+  return 0;\n+}\n+"}]}