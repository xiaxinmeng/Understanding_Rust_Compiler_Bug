{"sha": "53b1d1691857a1d3e28566d05bb434fa555c4e8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNiMWQxNjkxODU3YTFkM2UyODU2NmQwNWJiNDM0ZmE1NTVjNGU4YQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-06-17T18:02:55Z"}, "committer": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-06-29T15:19:56Z"}, "message": "amdgcn: Add [us]mulsi3_highpart SGPR alternatives\n\nThis patch splits the <su>mulsi3_highpart pattern into an expander and\nregister/immediate alternatives (to avoid meaningless sign/zero_extends on\nconstants), and adds alternatives for SGPR high-part multiply instructions\non GCN5+.\n\n2021-06-29  Julian Brown  <julian@codesourcery.com>\n\ngcc/\n\t* config/gcn/gcn.md (<su>mulsi3_highpart): Change to expander.\n\t(<su>mulsi3_highpart_reg, <su>mulsi3_highpart_imm): New patterns.", "tree": {"sha": "72ff8136806e14e385483cc485a0d43193268b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72ff8136806e14e385483cc485a0d43193268b55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53b1d1691857a1d3e28566d05bb434fa555c4e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b1d1691857a1d3e28566d05bb434fa555c4e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b1d1691857a1d3e28566d05bb434fa555c4e8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b1d1691857a1d3e28566d05bb434fa555c4e8a/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c127c4cac308429cba483a2ac4e175c2ab26165", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c127c4cac308429cba483a2ac4e175c2ab26165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c127c4cac308429cba483a2ac4e175c2ab26165"}], "stats": {"total": 62, "additions": 55, "deletions": 7}, "files": [{"sha": "d1d49981ebbf393df6a2dc4319a90aa768d9a0ef", "filename": "gcc/config/gcn/gcn.md", "status": "modified", "additions": 55, "deletions": 7, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53b1d1691857a1d3e28566d05bb434fa555c4e8a/gcc%2Fconfig%2Fgcn%2Fgcn.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53b1d1691857a1d3e28566d05bb434fa555c4e8a/gcc%2Fconfig%2Fgcn%2Fgcn.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.md?ref=53b1d1691857a1d3e28566d05bb434fa555c4e8a", "patch": "@@ -1394,20 +1394,68 @@\n (define_code_attr iu [(sign_extend \"i\") (zero_extend \"u\")])\n (define_code_attr e [(sign_extend \"e\") (zero_extend \"\")])\n \n-(define_insn \"<su>mulsi3_highpart\"\n-  [(set (match_operand:SI 0 \"register_operand\"\t       \"= v\")\n+(define_expand \"<su>mulsi3_highpart\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(truncate:SI\n \t  (lshiftrt:DI\n \t    (mult:DI\n \t      (any_extend:DI\n-\t\t(match_operand:SI 1 \"register_operand\" \"% v\"))\n+\t\t(match_operand:SI 1 \"register_operand\" \"\"))\n \t      (any_extend:DI\n-\t\t(match_operand:SI 2 \"register_operand\" \"vSv\")))\n+\t\t(match_operand:SI 2 \"gcn_alu_operand\"  \"\")))\n \t    (const_int 32))))]\n   \"\"\n-  \"v_mul_hi<sgnsuffix>0\\t%0, %2, %1\"\n-  [(set_attr \"type\" \"vop3a\")\n-   (set_attr \"length\" \"8\")])\n+{\n+  if (can_create_pseudo_p ()\n+      && !TARGET_GCN5\n+      && !gcn_inline_immediate_operand (operands[2], SImode))\n+    operands[2] = force_reg (SImode, operands[2]);\n+\n+  if (REG_P (operands[2]))\n+    emit_insn (gen_<su>mulsi3_highpart_reg (operands[0], operands[1],\n+\t\t\t\t\t    operands[2]));\n+  else\n+    emit_insn (gen_<su>mulsi3_highpart_imm (operands[0], operands[1],\n+\t\t\t\t\t    operands[2]));\n+\n+  DONE;\n+})\n+\n+(define_insn \"<su>mulsi3_highpart_reg\"\n+  [(set (match_operand:SI 0 \"register_operand\"\t       \"=Sg,  v\")\n+\t(truncate:SI\n+\t  (lshiftrt:DI\n+\t    (mult:DI\n+\t      (any_extend:DI\n+\t\t(match_operand:SI 1 \"register_operand\" \"%Sg,  v\"))\n+\t      (any_extend:DI\n+\t\t(match_operand:SI 2 \"register_operand\"  \"Sg,vSv\")))\n+\t    (const_int 32))))]\n+  \"\"\n+  \"@\n+  s_mul_hi<sgnsuffix>0\\t%0, %1, %2\n+  v_mul_hi<sgnsuffix>0\\t%0, %2, %1\"\n+  [(set_attr \"type\" \"sop2,vop3a\")\n+   (set_attr \"length\" \"4,8\")\n+   (set_attr \"gcn_version\" \"gcn5,*\")])\n+\n+(define_insn \"<su>mulsi3_highpart_imm\"\n+  [(set (match_operand:SI 0 \"register_operand\"\t              \"=Sg,Sg,v\")\n+\t(truncate:SI\n+\t  (lshiftrt:DI\n+\t    (mult:DI\n+\t      (any_extend:DI\n+\t\t(match_operand:SI 1 \"register_operand\"         \"Sg,Sg,v\"))\n+\t      (match_operand:DI 2 \"gcn_32bit_immediate_operand\" \"A, B,A\"))\n+\t    (const_int 32))))]\n+  \"TARGET_GCN5 || gcn_inline_immediate_operand (operands[2], SImode)\"\n+  \"@\n+  s_mul_hi<sgnsuffix>0\\t%0, %1, %2\n+  s_mul_hi<sgnsuffix>0\\t%0, %1, %2\n+  v_mul_hi<sgnsuffix>0\\t%0, %2, %1\"\n+  [(set_attr \"type\" \"sop2,sop2,vop3a\")\n+   (set_attr \"length\" \"4,8,8\")\n+   (set_attr \"gcn_version\" \"gcn5,gcn5,*\")])\n \n (define_insn \"<u>mulhisi3\"\n   [(set (match_operand:SI 0 \"register_operand\"\t\t\t\"=v\")"}]}