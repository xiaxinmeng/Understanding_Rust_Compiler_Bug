{"sha": "92f02e754ca2fbcd56dbd7b3949147d50bab99a0", "node_id": "C_kwDOANBUbNoAKDkyZjAyZTc1NGNhMmZiY2Q1NmRiZDdiMzk0OTE0N2Q1MGJhYjk5YTA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-31T20:48:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-31T20:48:44Z"}, "message": "testsuite, analyzer: Fix up pipe-glibc.c testcase [PR107396]\n\nThe gcc.dg/analyzer/pipe-glibc.c test FAILs when using recent glibc headers\nand succeeds with older headers.\nThe important change is that\nhttps://sourceware.org/git/?p=glibc.git;a=commit;h=c1760eaf3b575ad174fd88b252fd16bd525fa818\nin 2021 added __attribute__ ((__malloc__ (fclose, 1))) attribute to fdopen,\nso in write_to_pipe there is an excess warning:\n.../gcc/testsuite/gcc.dg/analyzer/pipe-glibc.c: In function 'write_to_pipe':\n.../gcc/testsuite/gcc.dg/analyzer/pipe-glibc.c:28:3: warning: use of possibly-NULL 'stream' where non-null expected [CWE-690] [-Wanalyzer-possible-null-argument]\n.../gcc/testsuite/gcc.dg/analyzer/pipe-glibc.c:27:12: note: (1) this call could return NULL\n.../gcc/testsuite/gcc.dg/analyzer/pipe-glibc.c:28:3: note: (2) argument 4 ('stream') from (1) could be NULL where non-null expected\n<built-in>: note: argument 4 of '__builtin_fwrite' must be non-null\nStrangely, nothing is reported on the read_from_pipe function, seems\nfwrite/fprintf/fputc etc. are builtins in GCC and we mark the FILE *\narguments as nonnull there on the builtin declarations, while fgetc/fread\netc. aren't builtins and glibc doesn't mark any of those using nonnull.\nShall we change that on the glibc side?\n\nAnyway, because this differs based on glibc version and I think the\nabove warning is not the primary intention of the test, I think it is\nbest to tweak it so that this warning isn't reported.\nAnother option would be avoid using glibc headers and use our own\ndeclarations, or make sure we add the malloc with fclose attribute ourselves\n(but fdopen in the libc headers could be a macro, so not sure\n__typeof (fdopen) fdopen __attribute__ ((__malloc__, __malloc__ (fclose, 1)));\nwould work).  Or use -Wno-analyzer-possible-null-arguments in\ndg-additional-options?\n\n2023-03-31  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR analyzer/107396\n\t* gcc.dg/analyzer/pipe-glibc.c (read_from_pie, write_to_pipe): Exit\n\tif fdopen returns NULL.", "tree": {"sha": "12b0d5eddf151dc8b3ba7b4a0ecbb9b0b831489f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12b0d5eddf151dc8b3ba7b4a0ecbb9b0b831489f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92f02e754ca2fbcd56dbd7b3949147d50bab99a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f02e754ca2fbcd56dbd7b3949147d50bab99a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92f02e754ca2fbcd56dbd7b3949147d50bab99a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f02e754ca2fbcd56dbd7b3949147d50bab99a0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e1b30a6a49714cbddea77b7c83c7d714022353c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1b30a6a49714cbddea77b7c83c7d714022353c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e1b30a6a49714cbddea77b7c83c7d714022353c"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "5a794c8c690083d62d020daacbcaa152a175cc23", "filename": "gcc/testsuite/gcc.dg/analyzer/pipe-glibc.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f02e754ca2fbcd56dbd7b3949147d50bab99a0/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpipe-glibc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f02e754ca2fbcd56dbd7b3949147d50bab99a0/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpipe-glibc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpipe-glibc.c?ref=92f02e754ca2fbcd56dbd7b3949147d50bab99a0", "patch": "@@ -13,6 +13,8 @@ read_from_pipe (int file)\n   FILE *stream;\n   int c;\n   stream = fdopen (file, \"r\");\n+  if (stream == NULL)\n+    exit (EXIT_FAILURE);\n   while ((c = fgetc (stream)) != EOF)\n     putchar (c);\n   fclose (stream);\n@@ -25,6 +27,8 @@ write_to_pipe (int file)\n {\n   FILE *stream;\n   stream = fdopen (file, \"w\");\n+  if (stream == NULL)\n+    exit (EXIT_FAILURE);\n   fprintf (stream, \"hello, world!\\n\");\n   fprintf (stream, \"goodbye, world!\\n\");\n   fclose (stream);"}]}