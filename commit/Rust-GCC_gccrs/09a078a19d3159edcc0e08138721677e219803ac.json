{"sha": "09a078a19d3159edcc0e08138721677e219803ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlhMDc4YTE5ZDMxNTllZGNjMGUwODEzODcyMTY3N2UyMTk4MDNhYw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-04-25T10:09:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-25T10:09:35Z"}, "message": "sem_ch7.adb, [...]: Minor reformatting.\n\n2013-04-25  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch7.adb, einfo.adb, repinfo.adb, snames.adb-tmpl,\n\tsnames.ads-tmpl: Minor reformatting.\n\nFrom-SVN: r198281", "tree": {"sha": "df53640557883fc842ecd011f0fe532d9378ab67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df53640557883fc842ecd011f0fe532d9378ab67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09a078a19d3159edcc0e08138721677e219803ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09a078a19d3159edcc0e08138721677e219803ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09a078a19d3159edcc0e08138721677e219803ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09a078a19d3159edcc0e08138721677e219803ac/comments", "author": null, "committer": null, "parents": [{"sha": "0d1f98202caa1592ff4c31a1d369b28e7a3c21a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d1f98202caa1592ff4c31a1d369b28e7a3c21a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d1f98202caa1592ff4c31a1d369b28e7a3c21a5"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "fe5113af9174eb0e9019cdcfe2d9575c32dbb036", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=09a078a19d3159edcc0e08138721677e219803ac", "patch": "@@ -1,3 +1,8 @@\n+2013-04-25  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch7.adb, einfo.adb, repinfo.adb, snames.adb-tmpl,\n+\tsnames.ads-tmpl: Minor reformatting.\n+\n 2013-04-25  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch7.adb: Minor reformatting."}, {"sha": "0381548b5ef678e2f56dbae879b186600fd3d5f8", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=09a078a19d3159edcc0e08138721677e219803ac", "patch": "@@ -6796,8 +6796,7 @@ package body Einfo is\n \n    function Is_Wrapper_Package (Id : E) return B is\n    begin\n-      return (Ekind (Id) = E_Package\n-                and then Present (Related_Instance (Id)));\n+      return (Ekind (Id) = E_Package and then Present (Related_Instance (Id)));\n    end Is_Wrapper_Package;\n \n    -----------------"}, {"sha": "a907c7b9d18c6abe81ac64129a26864f4224a2c3", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=09a078a19d3159edcc0e08138721677e219803ac", "patch": "@@ -458,7 +458,6 @@ package body Repinfo is\n            and then Present (Corresponding_Spec (Find_Declaration (Ent)))\n          then\n             E := First_Entity (Corresponding_Spec (Find_Declaration (Ent)));\n-\n             while Present (E) loop\n                if Is_Subprogram (E)\n                  and then\n@@ -727,7 +726,6 @@ package body Repinfo is\n       Form := First_Formal (Ent);\n       while Present (Form) loop\n          Get_Unqualified_Decoded_Name_String (Chars (Form));\n-\n          while Name_Len <= Plen loop\n             Name_Len := Name_Len + 1;\n             Name_Buffer (Name_Len) := ' ';\n@@ -1346,7 +1344,6 @@ package body Repinfo is\n                   when Discrim_Val =>\n                      declare\n                         Sub : constant Int := UI_To_Int (Node.Op1);\n-\n                      begin\n                         pragma Assert (Sub in D'Range);\n                         return D (Sub);"}, {"sha": "59d566a8168b94a980177200d91249b8b9c69015", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=09a078a19d3159edcc0e08138721677e219803ac", "patch": "@@ -557,6 +557,7 @@ package body Sem_Ch7 is\n                     and then Ekind (Entity (N)) = E_Constant\n                   then\n                      V := Constant_Value (Entity (N));\n+\n                      if Present (V)\n                        and then not Compile_Time_Known_Value_Or_Aggr (V)\n                      then\n@@ -1166,7 +1167,7 @@ package body Sem_Ch7 is\n                   while Present (Inst_Par)\n                     and then Inst_Par /= Standard_Standard\n                     and then (not In_Open_Scopes (Inst_Par)\n-                                or else not In_Private_Part (Inst_Par))\n+                               or else not In_Private_Part (Inst_Par))\n                   loop\n                      Install_Private_Declarations (Inst_Par);\n                      Set_Use (Private_Declarations\n@@ -1660,8 +1661,8 @@ package body Sem_Ch7 is\n                              and then Present (DTC_Entity (New_Op))\n                              and then Present (DTC_Entity (Prim_Op))\n                            then\n-                              pragma Assert (DT_Position (New_Op)\n-                                              = DT_Position (Prim_Op));\n+                              pragma Assert\n+                                (DT_Position (New_Op) = DT_Position (Prim_Op));\n                               null;\n                            end if;\n \n@@ -1860,9 +1861,8 @@ package body Sem_Ch7 is\n                Set_Is_Potentially_Use_Visible\n                  (Priv, Is_Potentially_Use_Visible (Node (Priv_Elmt)));\n \n-               --  Within a child unit, recurse, except in generic child\n-               --  unit, which (unfortunately) handle private_dependents\n-               --  separately.\n+               --  Within a child unit, recurse, except in generic child unit,\n+               --  which (unfortunately) handle private_dependents separately.\n \n                if Is_Priv\n                  and then Is_Child_Unit (Cunit_Entity (Current_Sem_Unit))\n@@ -2019,7 +2019,7 @@ package body Sem_Ch7 is\n \n          return In_Open_Scopes (S)\n            or else (Is_Generic_Instance (Current_Scope)\n-              and then Scope (Dep) = Scope (Current_Scope));\n+                     and then Scope (Dep) = Scope (Current_Scope));\n       else\n          return True;\n       end if;\n@@ -2317,8 +2317,7 @@ package body Sem_Ch7 is\n             Check_Conventions (Id);\n          end if;\n \n-         if (Ekind (Id) = E_Private_Type\n-               or else Ekind (Id) = E_Limited_Private_Type)\n+         if Ekind_In (Id, E_Private_Type, E_Limited_Private_Type)\n            and then No (Full_View (Id))\n            and then not Is_Generic_Type (Id)\n            and then not Is_Derived_Type (Id)\n@@ -2463,8 +2462,6 @@ package body Sem_Ch7 is\n                  (\"full view of type must be definite subtype\", Full);\n             end if;\n \n-            Priv_Elmt := First_Elmt (Private_Dependents (Id));\n-\n             --  Swap out the subtypes and derived types of Id that\n             --  were compiled in this scope, or installed previously\n             --  by Install_Private_Declarations.\n@@ -2473,6 +2470,7 @@ package body Sem_Ch7 is\n             --  field which may be empty due to a swap by a previous call to\n             --  End_Package_Scope (e.g. from the freezing mechanism).\n \n+            Priv_Elmt := First_Elmt (Private_Dependents (Id));\n             while Present (Priv_Elmt) loop\n                Priv_Sub := Node (Priv_Elmt);\n \n@@ -2552,7 +2550,7 @@ package body Sem_Ch7 is\n                      if Etype (Subp) = Id\n                        or else\n                          (Is_Class_Wide_Type (Etype (Subp))\n-                            and then Etype (Etype (Subp)) = Id)\n+                           and then Etype (Etype (Subp)) = Id)\n                      then\n                         Error_Msg_NE\n                           (\"type& must be completed in the private part\",\n@@ -2565,8 +2563,7 @@ package body Sem_Ch7 is\n             end;\n \n          elsif not Is_Child_Unit (Id)\n-           and then (not Is_Private_Type (Id)\n-                      or else No (Full_View (Id)))\n+           and then (not Is_Private_Type (Id) or else No (Full_View (Id)))\n          then\n             Set_Is_Hidden (Id);\n             Set_Is_Potentially_Use_Visible (Id, False);"}, {"sha": "5a6cfbaada79fa3c3a34ed7fb50a19f7a0ef8dbc", "filename": "gcc/ada/snames.adb-tmpl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Fsnames.adb-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Fsnames.adb-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb-tmpl?ref=09a078a19d3159edcc0e08138721677e219803ac", "patch": "@@ -147,8 +147,8 @@ package body Snames is\n       case N is\n          when Name_Ada                   => return Convention_Ada;\n          when Name_Ada_Pass_By_Copy      => return Convention_Ada_Pass_By_Copy;\n-         when Name_Ada_Pass_By_Reference =>\n-            return Convention_Ada_Pass_By_Reference;\n+         when Name_Ada_Pass_By_Reference => return\n+                                              Convention_Ada_Pass_By_Reference;\n          when Name_Assembler             => return Convention_Assembler;\n          when Name_C                     => return Convention_C;\n          when Name_CIL                   => return Convention_CIL;"}, {"sha": "2e5f42b210624155f0001be0a9221845cb3e40de", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09a078a19d3159edcc0e08138721677e219803ac/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=09a078a19d3159edcc0e08138721677e219803ac", "patch": "@@ -1625,7 +1625,7 @@ package Snames is\n    type Convention_Id is (\n \n       --  The native-to-Ada (non-foreign) conventions come first. These include\n-      --  the ones defined in the RM, plus Stubbed.\n+      --  the ones defined in the RM, plus Ghost and Stubbed.\n \n       Convention_Ada,\n       Convention_Intrinsic,"}]}