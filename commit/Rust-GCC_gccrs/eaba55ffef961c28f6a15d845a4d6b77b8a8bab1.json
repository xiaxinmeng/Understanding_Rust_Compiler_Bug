{"sha": "eaba55ffef961c28f6a15d845a4d6b77b8a8bab1", "node_id": "C_kwDOANBUbNoAKGVhYmE1NWZmZWY5NjFjMjhmNmExNWQ4NDVhNGQ2Yjc3YjhhOGJhYjE", "commit": {"author": {"name": "Xionghu Luo", "email": "xionghuluo@tencent.com", "date": "2022-10-12T02:43:38Z"}, "committer": {"name": "Haochen Gui", "email": "guihaoc@gcc.gnu.org", "date": "2022-11-02T08:40:44Z"}, "message": "rs6000: Byte reverse V8HI on Power8 by vector rotation.\n\ngcc/\n\tPR target/100866\n\t* config/rs6000/altivec.md: (*altivec_vrl<VI_char>): Named to...\n\t(altivec_vrl<VI_char>): ...this.\n\t* config/rs6000/vsx.md (revb_<mode>): Call vspltish and vrlh when\n\ttarget is Power8 and mode is V8HI.\n\ngcc/testsuite/\n\tPR target/100866\n\t* gcc.target/powerpc/pr100866-2.c: New.", "tree": {"sha": "8aac6befbe4ce31f82fb631f1abeae2e56b736c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8aac6befbe4ce31f82fb631f1abeae2e56b736c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1/comments", "author": null, "committer": null, "parents": [{"sha": "74e904bdcac3abdd0453daf3b6195d17e44b4cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e904bdcac3abdd0453daf3b6195d17e44b4cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e904bdcac3abdd0453daf3b6195d17e44b4cee"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "84660073f321e91ad9e50cd86a38d25a53ae0659", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=eaba55ffef961c28f6a15d845a4d6b77b8a8bab1", "patch": "@@ -1875,7 +1875,7 @@\n }\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"*altivec_vrl<VI_char>\"\n+(define_insn \"altivec_vrl<VI_char>\"\n   [(set (match_operand:VI2 0 \"register_operand\" \"=v\")\n         (rotate:VI2 (match_operand:VI2 1 \"register_operand\" \"v\")\n \t\t    (match_operand:VI2 2 \"register_operand\" \"v\")))]"}, {"sha": "fb5cf04147e5eb8e8be22cd175ea8de3ff340c47", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=eaba55ffef961c28f6a15d845a4d6b77b8a8bab1", "patch": "@@ -6087,12 +6087,21 @@\n     emit_insn (gen_p9_xxbr<VSX_XXBR>_<mode> (operands[0], operands[1]));\n   else\n     {\n-      /* Want to have the elements in reverse order relative\n-\t to the endian mode in use, i.e. in LE mode, put elements\n-\t in BE order.  */\n-      rtx sel = swap_endian_selector_for_mode(<MODE>mode);\n-      emit_insn (gen_altivec_vperm_<mode> (operands[0], operands[1],\n-\t\t\t\t\t   operands[1], sel));\n+      if (<MODE>mode == V8HImode)\n+\t{\n+\t  rtx splt = gen_reg_rtx (V8HImode);\n+\t  emit_insn (gen_altivec_vspltish (splt, GEN_INT (8)));\n+\t  emit_insn (gen_altivec_vrlh (operands[0], operands[1], splt));\n+\t}\n+      else\n+\t{\n+\t  /* Want to have the elements in reverse order relative\n+\t     to the endian mode in use, i.e. in LE mode, put elements\n+\t     in BE order.  */\n+\t  rtx sel = swap_endian_selector_for_mode (<MODE>mode);\n+\t  emit_insn (gen_altivec_vperm_<mode> (operands[0], operands[1],\n+\t\t\t\t\t       operands[1], sel));\n+\t}\n     }\n \n   DONE;"}, {"sha": "4357d1beb095bcd9a179e8334582b26177ca2b7e", "filename": "gcc/testsuite/gcc.target/powerpc/pr100866-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr100866-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaba55ffef961c28f6a15d845a4d6b77b8a8bab1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr100866-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr100866-2.c?ref=eaba55ffef961c28f6a15d845a4d6b77b8a8bab1", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-options \"-O2 -mdejagnu-cpu=power8\" } */\n+/* { dg-final { scan-assembler {\\mvspltish\\M} } } */\n+/* { dg-final { scan-assembler {\\mvrlh\\M} } } */\n+\n+#include <altivec.h>\n+\n+vector unsigned short revb(vector unsigned short a)\n+{\n+   return vec_revb(a);\n+}\n+"}]}