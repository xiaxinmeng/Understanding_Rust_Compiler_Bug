{"sha": "f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQzNTE2MmY4OGQ4OWEyNWRmZDAwYmEzYWY5YjM3YmI1NTc1ZmQ1ZQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-09-18T19:35:53Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-09-18T19:35:53Z"}, "message": "re PR fortran/87239 (ICE in deferred-length string)\n\n2018-09-18  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/87239\n\t* trans-expr.c (gfc_trans_assignment_1): The rse.pre for the\n\tassignment of deferred character elemental function results to\n\ta realocatable lhs must not be added to the exterior block but\n\tmust go to the loop body.\n\n2018-09-18  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/87239\n\t* gfortran.dg/elemental_function_2.f90 : New test.\n\nFrom-SVN: r264409", "tree": {"sha": "0efe85800a6fc611837c2452f402dd81d47b0e0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0efe85800a6fc611837c2452f402dd81d47b0e0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f435162f88d89a25dfd00ba3af9b37bb5575fd5e/comments", "author": null, "committer": null, "parents": [{"sha": "bf8d83098ffafe1273b11eb5f4a596f96c90c42e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf8d83098ffafe1273b11eb5f4a596f96c90c42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf8d83098ffafe1273b11eb5f4a596f96c90c42e"}], "stats": {"total": 74, "additions": 57, "deletions": 17}, "files": [{"sha": "b89ecf8980f92895e11e4c3b18f435076c904f34", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f435162f88d89a25dfd00ba3af9b37bb5575fd5e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f435162f88d89a25dfd00ba3af9b37bb5575fd5e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "patch": "@@ -1,3 +1,11 @@\n+2018-09-18  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/87239\n+\t* trans-expr.c (gfc_trans_assignment_1): The rse.pre for the\n+\tassignment of deferred character elemental function results to\n+\ta realocatable lhs must not be added to the exterior block but\n+\tmust go to the loop body.\n+\n 2018-09-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/87336"}, {"sha": "144c666d77cafc658051d2976ee5646ab00917a9", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f435162f88d89a25dfd00ba3af9b37bb5575fd5e/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f435162f88d89a25dfd00ba3af9b37bb5575fd5e/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "patch": "@@ -10283,8 +10283,11 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n   if (flag_realloc_lhs\n       && expr2->ts.type == BT_CHARACTER && expr1->ts.deferred\n       && !(lss != gfc_ss_terminator\n-\t   && ((expr2->expr_type == EXPR_OP\n-\t\t&& expr2->value.op.op == INTRINSIC_CONCAT)\n+\t   && ((expr2->expr_type == EXPR_FUNCTION\n+\t\t&& expr2->value.function.esym != NULL\n+\t\t   && expr2->value.function.esym->attr.elemental)\n+\t       || (expr2->expr_type == EXPR_OP\n+\t\t   && expr2->value.op.op == INTRINSIC_CONCAT)\n \t       || (expr2->expr_type == EXPR_FUNCTION\n \t\t   && expr2->value.function.isym != NULL\n \t\t   && expr2->value.function.isym->id == GFC_ISYM_CONVERSION))))"}, {"sha": "2be64615b8ba33c92b184bf0cc4105125a2de670", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f435162f88d89a25dfd00ba3af9b37bb5575fd5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f435162f88d89a25dfd00ba3af9b37bb5575fd5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "patch": "@@ -1,18 +1,7 @@\n-2018-09-18  Marek Polacek  <polacek@redhat.com>\n-\n-\tP1064R0 - Allowing Virtual Function Calls in Constant Expressions\n-\t* g++.dg/cpp0x/constexpr-virtual5.C: Adjust dg-error.\n-\t* g++.dg/cpp2a/constexpr-virtual1.C: New test.\n-\t* g++.dg/cpp2a/constexpr-virtual2.C: New test.\n-\t* g++.dg/cpp2a/constexpr-virtual3.C: New test.\n-\t* g++.dg/cpp2a/constexpr-virtual4.C: New test.\n-\t* g++.dg/cpp2a/constexpr-virtual5.C: New test.\n-\t* g++.dg/cpp2a/constexpr-virtual6.C: New test.\n-\t* g++.dg/cpp2a/constexpr-virtual7.C: New test.\n-\t* g++.dg/cpp2a/constexpr-virtual8.C: New test.\n-\t* g++.dg/cpp2a/constexpr-virtual9.C: New test.\n-\t* g++.dg/diagnostic/virtual-constexpr.C: Skip for C++2a.  Use\n-\t-pedantic-errors.  Adjust dg-error.\n+2018-09-18  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/87239\n+\t* gfortran.dg/elemental_function_2.f90 : New test.\n \n 2018-09-18  Paul Thomas  <pault@gcc.gnu.org>\n "}, {"sha": "7836ce8f4df70c354671bd29f3971c675c703456", "filename": "gcc/testsuite/gfortran.dg/elemental_function_2.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f435162f88d89a25dfd00ba3af9b37bb5575fd5e/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_function_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f435162f88d89a25dfd00ba3af9b37bb5575fd5e/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_function_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_function_2.f90?ref=f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do compile }\n+!\n+! Test the fix for PR87239 in which the call to the elemental function\n+! 'gettwo' was being added before the scalarization loop in the assignment.\n+! Since the result temporary was being declared in the loop body, this\n+! drove the gimplifier crazy. It is sufficient to compile this testcase\n+! since it used to ICE.\n+!\n+! Contributed by Juergen Reuter  <juergen.reuter@desy.de>\n+!\n+module test\n+  implicit none\n+contains\n+\n+  elemental function gettwo( s ) result( res )\n+    character(*), intent(in) :: s\n+    character(len(s)) :: res\n+\n+    res = s( 1 : 2 )\n+  endfunction gettwo\n+\n+endmodule test\n+\n+program main\n+  use test\n+  implicit none\n+  character(10) :: inp( 5 )\n+  integer :: i\n+\n+  ! character(10), allocatable :: out(:) ! this works\n+  character(:), allocatable :: out(:) ! this was stuffed\n+\n+  inp = [ 'aaa', 'bbb', 'ccc', 'ddd', 'eee' ]\n+\n+  out = gettwo( inp )\n+\n+  do i = 1, size (out, 1)\n+    if (trim (out(i)) .ne. inp(i)(1:2)) stop 1\n+  end do\n+endprogram main"}]}