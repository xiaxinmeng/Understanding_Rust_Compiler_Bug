{"sha": "dea7379019da21674e38abaa27917a8596c5780f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVhNzM3OTAxOWRhMjE2NzRlMzhhYmFhMjc5MTdhODU5NmM1NzgwZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-09-20T22:08:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-09-20T22:08:34Z"}, "message": "i386.md (UNSPEC_GOTNTPOFF, [...]): New.\n\n\t* config/i386/i386.md (UNSPEC_GOTNTPOFF, UNSPEC_INDNTPOFF): New.\n\t* config/i386/i386.c (legitimate_pic_address_disp_p): Handle\n\tUNSPEC_GOTNTPOFF and UNSPEC_INDNTPOFF like UNSPEC_GOTTPOFF.\n\t(legitimate_address_p): Likewise.\n\t(legitimize_address): Use @gotntpoff and @indntpoff.\n\t(output_pic_addr_const): Handle UNSPEC_GOTNTPOFF and UNSPEC_INDNTPOFF.\n\t(output_addr_const_extra): Likewise.\n\nFrom-SVN: r57373", "tree": {"sha": "d0271508321ac598f9e4d438784724f40b107553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0271508321ac598f9e4d438784724f40b107553"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dea7379019da21674e38abaa27917a8596c5780f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea7379019da21674e38abaa27917a8596c5780f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dea7379019da21674e38abaa27917a8596c5780f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea7379019da21674e38abaa27917a8596c5780f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9b2f059741b06195e3272143f9a609459d8ca78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9b2f059741b06195e3272143f9a609459d8ca78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9b2f059741b06195e3272143f9a609459d8ca78"}], "stats": {"total": 64, "additions": 50, "deletions": 14}, "files": [{"sha": "9e4c8b1a0bba8438c0097a4931d796722a4c58b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea7379019da21674e38abaa27917a8596c5780f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea7379019da21674e38abaa27917a8596c5780f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dea7379019da21674e38abaa27917a8596c5780f", "patch": "@@ -1,3 +1,13 @@\n+2002-09-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.md (UNSPEC_GOTNTPOFF, UNSPEC_INDNTPOFF): New.\n+\t* config/i386/i386.c (legitimate_pic_address_disp_p): Handle\n+\tUNSPEC_GOTNTPOFF and UNSPEC_INDNTPOFF like UNSPEC_GOTTPOFF.\n+\t(legitimate_address_p): Likewise.\n+\t(legitimize_address): Use @gotntpoff and @indntpoff.\n+\t(output_pic_addr_const): Handle UNSPEC_GOTNTPOFF and UNSPEC_INDNTPOFF.\n+\t(output_addr_const_extra): Likewise.\n+\n 2002-09-20  Jim Wilson  <wilson@redhat.com>\n \n \t* combine.c (try_combine): When split an instruction pair, where the"}, {"sha": "f36206c6ab21d927ec2bc234f1168003ff3d95a6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 38, "deletions": 14, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea7379019da21674e38abaa27917a8596c5780f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea7379019da21674e38abaa27917a8596c5780f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=dea7379019da21674e38abaa27917a8596c5780f", "patch": "@@ -5077,6 +5077,8 @@ legitimate_pic_address_disp_p (disp)\n     case UNSPEC_GOTOFF:\n       return local_symbolic_operand (XVECEXP (disp, 0, 0), Pmode);\n     case UNSPEC_GOTTPOFF:\n+    case UNSPEC_GOTNTPOFF:\n+    case UNSPEC_INDNTPOFF:\n       if (saw_plus)\n \treturn false;\n       return initial_exec_symbolic_operand (XVECEXP (disp, 0, 0), Pmode);\n@@ -5258,6 +5260,8 @@ legitimate_address_p (mode, addr, strict)\n \t    goto is_legitimate_pic;\n \n \t  case UNSPEC_GOTTPOFF:\n+\t  case UNSPEC_GOTNTPOFF:\n+\t  case UNSPEC_INDNTPOFF:\n \t  case UNSPEC_NTPOFF:\n \t  case UNSPEC_DTPOFF:\n \t    break;\n@@ -5664,32 +5668,36 @@ legitimize_address (x, oldx, mode)\n \t\tregs_ever_live[PIC_OFFSET_TABLE_REGNUM] = 1;\n \t      pic = pic_offset_table_rtx;\n \t    }\n-\t  else\n+\t  else if (!TARGET_GNU_TLS)\n \t    {\n \t      pic = gen_reg_rtx (Pmode);\n \t      emit_insn (gen_set_got (pic));\n \t    }\n+\t  else\n+\t    pic = NULL;\n \n \t  base = get_thread_pointer ();\n \n-\t  off = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, x), UNSPEC_GOTTPOFF);\n+\t  off = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, x),\n+\t\t\t\t!TARGET_GNU_TLS\n+\t\t\t\t? UNSPEC_GOTTPOFF\n+\t\t\t\t: flag_pic ? UNSPEC_GOTNTPOFF\n+\t\t\t\t\t   : UNSPEC_INDNTPOFF);\n \t  off = gen_rtx_CONST (Pmode, off);\n-\t  off = gen_rtx_PLUS (Pmode, pic, off);\n+\t  if (flag_pic || !TARGET_GNU_TLS)\n+\t    off = gen_rtx_PLUS (Pmode, pic, off);\n \t  off = gen_rtx_MEM (Pmode, off);\n \t  RTX_UNCHANGING_P (off) = 1;\n \t  set_mem_alias_set (off, ix86_GOT_alias_set ());\n-\n-\t  /* Damn Sun for specifing a set of dynamic relocations without\n-\t     considering the two-operand nature of the architecture!\n-\t     We'd be much better off with a \"GOTNTPOFF\" relocation that\n-\t     already contained the negated constant.  */\n-\t  /* ??? Using negl and reg+reg addressing appears to be a lose\n-\t     size-wise.  The negl is two bytes, just like the extra movl\n-\t     incurred by the two-operand subl, but reg+reg addressing\n-\t     uses the two-byte modrm form, unlike plain reg.  */\n-\n \t  dest = gen_reg_rtx (Pmode);\n-\t  emit_insn (gen_subsi3 (dest, base, off));\n+\n+\t  if (TARGET_GNU_TLS)\n+\t    {\n+\t      emit_move_insn (dest, off);\n+\t      return gen_rtx_PLUS (Pmode, base, dest);\n+\t    }\n+\t  else\n+\t    emit_insn (gen_subsi3 (dest, base, off));\n \t  break;\n \n         case TLS_MODEL_LOCAL_EXEC:\n@@ -5970,6 +5978,7 @@ output_pic_addr_const (file, x, code)\n \t  fputs (\"@GOTPCREL(%rip)\", file);\n \t  break;\n \tcase UNSPEC_GOTTPOFF:\n+\t  /* FIXME: This might be @TPOFF in Sun ld too.  */\n \t  fputs (\"@GOTTPOFF\", file);\n \t  break;\n \tcase UNSPEC_TPOFF:\n@@ -5981,6 +5990,12 @@ output_pic_addr_const (file, x, code)\n \tcase UNSPEC_DTPOFF:\n \t  fputs (\"@DTPOFF\", file);\n \t  break;\n+\tcase UNSPEC_GOTNTPOFF:\n+\t  fputs (\"@GOTNTPOFF\", file);\n+\t  break;\n+\tcase UNSPEC_INDNTPOFF:\n+\t  fputs (\"@INDNTPOFF\", file);\n+\t  break;\n \tdefault:\n \t  output_operand_lossage (\"invalid UNSPEC as operand\");\n \t  break;\n@@ -6890,6 +6905,7 @@ output_addr_const_extra (file, x)\n     {\n     case UNSPEC_GOTTPOFF:\n       output_addr_const (file, op);\n+      /* FIXME: This might be @TPOFF in Sun ld.  */\n       fputs (\"@GOTTPOFF\", file);\n       break;\n     case UNSPEC_TPOFF:\n@@ -6904,6 +6920,14 @@ output_addr_const_extra (file, x)\n       output_addr_const (file, op);\n       fputs (\"@DTPOFF\", file);\n       break;\n+    case UNSPEC_GOTNTPOFF:\n+      output_addr_const (file, op);\n+      fputs (\"@GOTNTPOFF\", file);\n+      break;\n+    case UNSPEC_INDNTPOFF:\n+      output_addr_const (file, op);\n+      fputs (\"@INDNTPOFF\", file);\n+      break;\n \n     default:\n       return false;"}, {"sha": "02e4ee8c0e39aa61c3a3900b632cffcb231616f5", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea7379019da21674e38abaa27917a8596c5780f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea7379019da21674e38abaa27917a8596c5780f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=dea7379019da21674e38abaa27917a8596c5780f", "patch": "@@ -61,6 +61,8 @@\n    (UNSPEC_TPOFF\t\t4)\n    (UNSPEC_NTPOFF\t\t5)\n    (UNSPEC_DTPOFF\t\t6)\n+   (UNSPEC_GOTNTPOFF\t\t7)\n+   (UNSPEC_INDNTPOFF\t\t8)\n \n    ; Prologue support\n    (UNSPEC_STACK_PROBE\t\t10)"}]}