{"sha": "d8f6dbb9115d00af2eb319d4e65fbbc74dfc7d20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhmNmRiYjkxMTVkMDBhZjJlYjMxOWQ0ZTY1ZmJiYzc0ZGZjN2QyMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-13T05:02:10Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-13T05:02:10Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r968", "tree": {"sha": "a70dad7407c57ef19c9062f8a0bfa1cf21538953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a70dad7407c57ef19c9062f8a0bfa1cf21538953"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8f6dbb9115d00af2eb319d4e65fbbc74dfc7d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f6dbb9115d00af2eb319d4e65fbbc74dfc7d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f6dbb9115d00af2eb319d4e65fbbc74dfc7d20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f6dbb9115d00af2eb319d4e65fbbc74dfc7d20/comments", "author": null, "committer": null, "parents": [{"sha": "94a580761093abc1ff2d2930916ef01bae9b3bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94a580761093abc1ff2d2930916ef01bae9b3bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94a580761093abc1ff2d2930916ef01bae9b3bf1"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "029f25cde241728f744c73fabcb3a8688e077cd4", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8f6dbb9115d00af2eb319d4e65fbbc74dfc7d20/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8f6dbb9115d00af2eb319d4e65fbbc74dfc7d20/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d8f6dbb9115d00af2eb319d4e65fbbc74dfc7d20", "patch": "@@ -2748,9 +2748,13 @@ fold (expr)\n \treturn convert (TREE_TYPE (t), TREE_OPERAND (TREE_OPERAND (t, 0), 0));\n \n       if (TREE_CODE (TREE_OPERAND (t, 0)) == MODIFY_EXPR\n-\t  && TREE_CONSTANT (TREE_OPERAND (TREE_OPERAND (t, 0), 1)))\n+\t  && TREE_CONSTANT (TREE_OPERAND (TREE_OPERAND (t, 0), 1))\n+\t  /* Detect assigning a bitfield.  */\n+\t  && !(TREE_CODE (TREE_OPERAND (TREE_OPERAND (t, 0), 0)) == COMPONENT_REF\n+\t       && DECL_BIT_FIELD (TREE_OPERAND (TREE_OPERAND (TREE_OPERAND (t, 0), 0), 1))))\n \t{\n-\t  /* Don't leave an assignment inside a conversion.  */\n+\t  /* Don't leave an assignment inside a conversion\n+\t     unless assiging a bitfield.  */\n \t  tree prev = TREE_OPERAND (t, 0);\n \t  TREE_OPERAND (t, 0) = TREE_OPERAND (prev, 1);\n \t  /* First do the assignment, then return converted constant.  */"}]}