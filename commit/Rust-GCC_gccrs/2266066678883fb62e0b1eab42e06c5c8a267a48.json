{"sha": "2266066678883fb62e0b1eab42e06c5c8a267a48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2NjA2NjY3ODg4M2ZiNjJlMGIxZWFiNDJlMDZjNWM4YTI2N2E0OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-08-03T12:04:49Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-08-03T12:04:49Z"}, "message": "optabs.c (expand_binop, [...]): Upse optimize_insn_for_speed predicate.\n\n\t* optabs.c (expand_binop, expand_builtin_pow, expand_builtin_powi,\n\texpand_builtin_strcat): Upse optimize_insn_for_speed predicate.\n\t* expmed.c (expand_smod_pow2): Likewise.\n\nFrom-SVN: r138565", "tree": {"sha": "712090046e4950fa392a0edaa940bad25c8368be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/712090046e4950fa392a0edaa940bad25c8368be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2266066678883fb62e0b1eab42e06c5c8a267a48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2266066678883fb62e0b1eab42e06c5c8a267a48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2266066678883fb62e0b1eab42e06c5c8a267a48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2266066678883fb62e0b1eab42e06c5c8a267a48/comments", "author": null, "committer": null, "parents": [{"sha": "5617c135e7fe4ea4d67bdf3fbe94acfacfa87b16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5617c135e7fe4ea4d67bdf3fbe94acfacfa87b16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5617c135e7fe4ea4d67bdf3fbe94acfacfa87b16"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "efb5505be103fe792b3054d5f82efce89e10e4df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2266066678883fb62e0b1eab42e06c5c8a267a48/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2266066678883fb62e0b1eab42e06c5c8a267a48/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2266066678883fb62e0b1eab42e06c5c8a267a48", "patch": "@@ -1,3 +1,9 @@\n+2008-08-03  Jan Hubicka  <jh@suse.cz>\n+\n+\t* optabs.c (expand_binop, expand_builtin_pow, expand_builtin_powi,\n+\texpand_builtin_strcat): Upse optimize_insn_for_speed predicate.\n+\t* expmed.c (expand_smod_pow2): Likewise.\n+\n 2008-08-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/36992"}, {"sha": "953fb7bddc63e1688006e6d3d8121482076c2b96", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2266066678883fb62e0b1eab42e06c5c8a267a48/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2266066678883fb62e0b1eab42e06c5c8a267a48/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=2266066678883fb62e0b1eab42e06c5c8a267a48", "patch": "@@ -2911,7 +2911,7 @@ expand_builtin_pow (tree exp, rtx target, rtx subtarget)\n   if (real_identical (&c, &cint)\n       && ((n >= -1 && n <= 2)\n \t  || (flag_unsafe_math_optimizations\n-\t      && !optimize_size\n+\t      && optimize_insn_for_speed_p ()\n \t      && powi_cost (n) <= POWI_MAX_MULTS)))\n     {\n       op = expand_expr (arg0, subtarget, VOIDmode, EXPAND_NORMAL);\n@@ -2935,7 +2935,7 @@ expand_builtin_pow (tree exp, rtx target, rtx subtarget)\n       real_from_integer (&cint, VOIDmode, n, n < 0 ? -1 : 0, 0);\n       if (real_identical (&c2, &cint)\n \t  && ((flag_unsafe_math_optimizations\n-\t       && !optimize_size\n+\t       && optimize_insn_for_speed_p ()\n \t       && powi_cost (n/2) <= POWI_MAX_MULTS)\n \t      || n == 1))\n \t{\n@@ -2980,7 +2980,7 @@ expand_builtin_pow (tree exp, rtx target, rtx subtarget)\n       real_arithmetic (&c2, RDIV_EXPR, &cint, &dconst3);\n       real_convert (&c2, mode, &c2);\n       if (real_identical (&c2, &c)\n-\t  && ((!optimize_size\n+\t  && ((optimize_insn_for_speed_p ()\n \t       && powi_cost (n/3) <= POWI_MAX_MULTS)\n \t      || n == 1))\n \t{\n@@ -3042,7 +3042,7 @@ expand_builtin_powi (tree exp, rtx target, rtx subtarget)\n       if ((TREE_INT_CST_HIGH (arg1) == 0\n \t   || TREE_INT_CST_HIGH (arg1) == -1)\n \t  && ((n >= -1 && n <= 2)\n-\t      || (! optimize_size\n+\t      || (optimize_insn_for_speed_p ()\n \t\t  && powi_cost (n) <= POWI_MAX_MULTS)))\n \t{\n \t  op0 = expand_expr (arg0, subtarget, VOIDmode, EXPAND_NORMAL);\n@@ -4464,7 +4464,7 @@ expand_builtin_strcat (tree fndecl, tree exp, rtx target, enum machine_mode mode\n       if (p && *p == '\\0')\n \treturn expand_expr (dst, target, mode, EXPAND_NORMAL);\n \n-      if (!optimize_size)\n+      if (optimize_insn_for_speed_p ())\n \t{\n \t  /* See if we can store by pieces into (dst + strlen(dst)).  */\n \t  tree newsrc, newdst,"}, {"sha": "b102241dbb15e92f6c8418abd79614ef3981c213", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2266066678883fb62e0b1eab42e06c5c8a267a48/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2266066678883fb62e0b1eab42e06c5c8a267a48/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=2266066678883fb62e0b1eab42e06c5c8a267a48", "patch": "@@ -3487,7 +3487,7 @@ expand_smod_pow2 (enum machine_mode mode, rtx op0, HOST_WIDE_INT d)\n \n   /* Avoid conditional branches when they're expensive.  */\n   if (BRANCH_COST >= 2\n-      && !optimize_size)\n+      && optimize_insn_for_speed_p ())\n     {\n       rtx signmask = emit_store_flag (result, LT, op0, const0_rtx,\n \t\t\t\t      mode, 0, -1);"}, {"sha": "158e75999d88c6408aa69aec2e6a9a5626a65f52", "filename": "gcc/optabs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2266066678883fb62e0b1eab42e06c5c8a267a48/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2266066678883fb62e0b1eab42e06c5c8a267a48/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=2266066678883fb62e0b1eab42e06c5c8a267a48", "patch": "@@ -1786,7 +1786,7 @@ expand_binop (enum machine_mode mode, optab binoptab, rtx op0, rtx op1,\n   if ((binoptab == lshr_optab || binoptab == ashl_optab\n        || binoptab == ashr_optab)\n       && mclass == MODE_INT\n-      && (GET_CODE (op1) == CONST_INT || !optimize_size)\n+      && (GET_CODE (op1) == CONST_INT || optimize_insn_for_speed_p ())\n       && GET_MODE_SIZE (mode) == 2 * UNITS_PER_WORD\n       && optab_handler (binoptab, word_mode)->insn_code != CODE_FOR_nothing\n       && optab_handler (ashl_optab, word_mode)->insn_code != CODE_FOR_nothing"}]}