{"sha": "ecd03d10ccfc428749fcada10f9bee48e13f22cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNkMDNkMTBjY2ZjNDI4NzQ5ZmNhZGExMGY5YmVlNDhlMTNmMjJjYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-04-21T17:42:46Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-04-21T17:42:46Z"}, "message": "lto-cgraph.c (lto_output_node): Do not output comdat groups for boundary nodes.\n\n\n\t* lto-cgraph.c (lto_output_node): Do not output comdat groups\n\tfor boundary nodes.\n\t(output_cgraph): Do not arrange comdat groups for boundary nodes.\n\nFrom-SVN: r158615", "tree": {"sha": "484cfb0de94cfefd7d49f6f11a6d0c3fb1d87308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/484cfb0de94cfefd7d49f6f11a6d0c3fb1d87308"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecd03d10ccfc428749fcada10f9bee48e13f22cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd03d10ccfc428749fcada10f9bee48e13f22cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecd03d10ccfc428749fcada10f9bee48e13f22cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd03d10ccfc428749fcada10f9bee48e13f22cc/comments", "author": null, "committer": null, "parents": [{"sha": "71a810c300b69083846e8a5aab4745c65b7657de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a810c300b69083846e8a5aab4745c65b7657de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71a810c300b69083846e8a5aab4745c65b7657de"}], "stats": {"total": 30, "additions": 7, "deletions": 23}, "files": [{"sha": "bb8e0aab9b708dff5d951762caf0911ab05e5d9d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd03d10ccfc428749fcada10f9bee48e13f22cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd03d10ccfc428749fcada10f9bee48e13f22cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecd03d10ccfc428749fcada10f9bee48e13f22cc", "patch": "@@ -1,3 +1,9 @@\n+2010-04-21  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-cgraph.c (lto_output_node): Do not output comdat groups\n+\tfor boundary nodes.\n+\t(output_cgraph): Do not arrange comdat groups for boundary nodes.\n+\n 2010-04-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/40040"}, {"sha": "cb87143e4ac62b2f4b610a19f96a8029d619a2b1", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd03d10ccfc428749fcada10f9bee48e13f22cc/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd03d10ccfc428749fcada10f9bee48e13f22cc/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=ecd03d10ccfc428749fcada10f9bee48e13f22cc", "patch": "@@ -324,7 +324,7 @@ lto_output_node (struct lto_simple_output_block *ob, struct cgraph_node *node,\n   lto_output_sleb128_stream (ob->main_stream,\n \t\t\t     node->global.estimated_growth);\n   lto_output_uleb128_stream (ob->main_stream, node->global.inlined);\n-  if (node->same_comdat_group)\n+  if (node->same_comdat_group && !boundary_p)\n     {\n       ref = lto_cgraph_encoder_lookup (encoder, node->same_comdat_group);\n       gcc_assert (ref != LCC_NOT_FOUND);\n@@ -447,30 +447,8 @@ output_cgraph (cgraph_node_set set)\n \t      /* We should have moved all the inlines.  */\n \t      gcc_assert (!callee->global.inlined_to);\n \t      add_node_to (encoder, callee);\n-\t      /* Also with each included function include all other functions\n-\t\t in the same comdat group.  */\n-\t      if (callee->same_comdat_group)\n-\t\t{\n-\t\t  struct cgraph_node *next;\n-\t\t  for (next = callee->same_comdat_group;\n-\t\t       next != callee;\n-\t\t       next = next->same_comdat_group)\n-\t\t    if (!cgraph_node_in_set_p (next, set))\n-\t\t      add_node_to (encoder, next);\n-\t\t}\n \t    }\n \t}\n-      /* Also with each included function include all other functions\n-\t in the same comdat group.  */\n-      if (node->same_comdat_group)\n-\t{\n-\t  struct cgraph_node *next;\n-\t  for (next = node->same_comdat_group;\n-\t       next != node;\n-\t       next = next->same_comdat_group)\n-\t    if (!cgraph_node_in_set_p (next, set))\n-\t      add_node_to (encoder, next);\n-\t}\n     }\n \n   /* Write out the nodes.  We must first output a node and then its clones,"}]}