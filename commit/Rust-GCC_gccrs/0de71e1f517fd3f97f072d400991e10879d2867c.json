{"sha": "0de71e1f517fd3f97f072d400991e10879d2867c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRlNzFlMWY1MTdmZDNmOTdmMDcyZDQwMDk5MWUxMDg3OWQyODY3Yw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-01-07T19:06:37Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-01-07T19:06:37Z"}, "message": "re PR target/69140 (stack alignment + O1 breaks with Microsoft ABI)\n\n2016-01-07  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR target/69140\n\t* config/i386/i386.c (ix86_frame_pointer_required): Enable\n\tframe pointer for TARGET_64BIT_MS_ABI when stack is misaligned.\n\n2016-01-07  Uros Bizjak  <ubizjak@gmail.com>\n\n\tRevert\n\t2016-01-06  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR target/69140\n\t* config/i386/i386.c (ix86_expand_prologue): Declare fs.sp_valid\n\tdepending on frame_pointer_needed before remaining integer and SSE\n\tregisters are saved.\n\nFrom-SVN: r232140", "tree": {"sha": "4ce55c3f5ae33f163113a02da759af19e383525a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ce55c3f5ae33f163113a02da759af19e383525a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0de71e1f517fd3f97f072d400991e10879d2867c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de71e1f517fd3f97f072d400991e10879d2867c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0de71e1f517fd3f97f072d400991e10879d2867c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de71e1f517fd3f97f072d400991e10879d2867c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95918b49dff7ec678d663838ec68fcb53994cf0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95918b49dff7ec678d663838ec68fcb53994cf0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95918b49dff7ec678d663838ec68fcb53994cf0e"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "db0b95922948866884a2556b33793d352fa83ba2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de71e1f517fd3f97f072d400991e10879d2867c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de71e1f517fd3f97f072d400991e10879d2867c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0de71e1f517fd3f97f072d400991e10879d2867c", "patch": "@@ -1,3 +1,19 @@\n+2016-01-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/69140\n+\t* config/i386/i386.c (ix86_frame_pointer_required): Enable\n+\tframe pointer for TARGET_64BIT_MS_ABI when stack is misaligned.\n+\n+2016-01-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tRevert\n+\t2016-01-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/69140\n+\t* config/i386/i386.c (ix86_expand_prologue): Declare fs.sp_valid\n+\tdepending on frame_pointer_needed before remaining integer and SSE\n+\tregisters are saved.\n+\n 2016-01-07  Sandra Loosemore <sandra@codesourcery.com>\n \n \tPR 1078"}, {"sha": "aac0847db7ee6b7506ad5499284f841a45417a61", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de71e1f517fd3f97f072d400991e10879d2867c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de71e1f517fd3f97f072d400991e10879d2867c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0de71e1f517fd3f97f072d400991e10879d2867c", "patch": "@@ -10903,6 +10903,10 @@ ix86_frame_pointer_required (void)\n   if (TARGET_64BIT_MS_ABI && get_frame_size () > SEH_MAX_FRAME_SIZE)\n     return true;\n \n+  /* SSE saves require frame-pointer when stack is misaligned.  */\n+  if (TARGET_64BIT_MS_ABI && ix86_incoming_stack_boundary < 128)\n+    return true;\n+  \n   /* In ix86_option_override_internal, TARGET_OMIT_LEAF_FRAME_POINTER\n      turns off the frame pointer by default.  Turn it back on now if\n      we've not got a leaf function.  */\n@@ -13065,8 +13069,6 @@ ix86_expand_prologue (void)\n       m->fs.fp_valid = true;\n     }\n \n-  m->fs.sp_valid = !frame_pointer_needed;\n-\n   if (!int_registers_saved)\n     ix86_emit_save_regs_using_mov (frame.reg_save_offset);\n   if (!sse_registers_saved)"}]}