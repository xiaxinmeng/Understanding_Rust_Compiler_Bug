{"sha": "b3276c7a5dfe301dff29109bd96cb159a7651c24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMyNzZjN2E1ZGZlMzAxZGZmMjkxMDliZDk2Y2IxNTlhNzY1MWMyNA==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2001-05-31T19:39:30Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2001-05-31T19:39:30Z"}, "message": "mips.h (ASM_OUTPUT_ASCII): Convert to function.\n\n\t* config/mips/mips.h (ASM_OUTPUT_ASCII): Convert to function.\n\t* config/mips/mips.c (mips_output_ascii): New function.\n\t* config/mips/mips-protos.h (mips_output_ascii): Prototype.\n\n\t* config/mips/mips.h (DWARF_CIE_DATA_ALIGNMENT): Force to 4.\n\nFrom-SVN: r42753", "tree": {"sha": "7b7f378cb9237c9235418b277d89410851f5128b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b7f378cb9237c9235418b277d89410851f5128b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3276c7a5dfe301dff29109bd96cb159a7651c24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3276c7a5dfe301dff29109bd96cb159a7651c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3276c7a5dfe301dff29109bd96cb159a7651c24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3276c7a5dfe301dff29109bd96cb159a7651c24/comments", "author": null, "committer": null, "parents": [{"sha": "d29087b4311840a5834218400e8870a16b93b488", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d29087b4311840a5834218400e8870a16b93b488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d29087b4311840a5834218400e8870a16b93b488"}], "stats": {"total": 163, "additions": 94, "deletions": 69}, "files": [{"sha": "ff8afc991446d06f9fc898ace1b4f12d787c7e70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3276c7a5dfe301dff29109bd96cb159a7651c24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3276c7a5dfe301dff29109bd96cb159a7651c24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3276c7a5dfe301dff29109bd96cb159a7651c24", "patch": "@@ -1,3 +1,11 @@\n+2001-05-31  Geoff Keating  <geoffk@cygnus.com>\n+\n+\t* config/mips/mips.h (ASM_OUTPUT_ASCII): Convert to function.\n+\t* config/mips/mips.c (mips_output_ascii): New function.\n+\t* config/mips/mips-protos.h (mips_output_ascii): Prototype.\n+\n+\t* config/mips/mips.h (DWARF_CIE_DATA_ALIGNMENT): Force to 4.\n+\n Thu May 31 19:09:53 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* flow.c (set_block_for_new_insns): Remove bogus shortcut."}, {"sha": "81e15a1f27242fbb40d04ebc8bd098244463f67d", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3276c7a5dfe301dff29109bd96cb159a7651c24/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3276c7a5dfe301dff29109bd96cb159a7651c24/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=b3276c7a5dfe301dff29109bd96cb159a7651c24", "patch": "@@ -41,6 +41,7 @@ extern void\t\tmips_output_float PARAMS ((FILE *, REAL_VALUE_TYPE));\n #endif /* REAL_VALUE_TYPE */\n extern void\t\tmips_output_filename PARAMS ((FILE *, const char *));\n extern void\t\tmips_output_lineno PARAMS ((FILE *, int));\n+extern void\t\tmips_output_ascii PARAMS ((FILE *, const char *, size_t));\n extern void\t\tmips_order_regs_for_local_alloc PARAMS ((void));\n extern struct rtx_def *\tmips16_gp_pseudo_reg PARAMS ((void));\n #ifdef ASM_OUTPUT_UNDEF_FUNCTION"}, {"sha": "05edaff82aeb6450c8fb7a13c805eeaf0ce79f20", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3276c7a5dfe301dff29109bd96cb159a7651c24/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3276c7a5dfe301dff29109bd96cb159a7651c24/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=b3276c7a5dfe301dff29109bd96cb159a7651c24", "patch": "@@ -5882,6 +5882,85 @@ mips_output_lineno (stream, line)\n     }\n }\n \f\n+/* Output an ASCII string, in a space-saving way.  */\n+\n+void \n+mips_output_ascii (stream, string_param, len)\n+     FILE *stream;\n+     const char *string_param;\n+     size_t len;\n+{\n+  size_t i;\n+  int cur_pos = 17;\n+  register const unsigned char *string =\n+    (const unsigned char *)string_param;\n+\n+  fprintf (stream, \"\\t.ascii\\t\\\"\");\t\t\t\t\t\n+  for (i = 0; i < len; i++)\t\t\t\t\t\t\n+    {\t\t\t\t\t\t\t\t\t\n+      register int c = string[i];\t\t\t\t\t\n+      \n+      switch (c)\t\t\t\t\t\t\t\n+\t{\t\t\t\t\t\t\t\t\n+\tcase '\\\"':\t\t\t\t\t\t\t\n+\tcase '\\\\':\t\t\t\t\t\t\t\n+\t  putc ('\\\\', stream);\t\t\t\t\t\n+\t  putc (c, stream);\t\t\t\t\t\t\n+\t  cur_pos += 2;\t\t\t\t\t\t\t\n+\t  break;\t\t\t\t\t\t\t\n+\t  \n+\tcase TARGET_NEWLINE:\t\t\t\t\t\t\n+\t  fputs (\"\\\\n\", stream);\t\t\t\t\t\n+\t  if (i+1 < len\t\t\t\t\t\t\t\n+\t      && (((c = string[i+1]) >= '\\040' && c <= '~')\t\t\n+\t\t  || c == TARGET_TAB))\t\t\t\t\t\n+\t    cur_pos = 32767;\t\t/* break right here */\t\t\n+\t  else\t\t\t\t\t\t\t\t\n+\t    cur_pos += 2;\t\t\t\t\t\t\n+\t  break;\t\t\t\t\t\t\t\n+\t  \n+\tcase TARGET_TAB:\t\t\t\t\t\t\n+\t  fputs (\"\\\\t\", stream);\t\t\t\t\t\n+\t  cur_pos += 2;\t\t\t\t\t\t\t\n+\t  break;\t\t\t\t\t\t\t\n+\t  \n+\tcase TARGET_FF:\t\t\t\t\t\t\t\n+\t  fputs (\"\\\\f\", stream);\t\t\t\t\t\n+\t  cur_pos += 2;\t\t\t\t\t\t\t\n+\t  break;\t\t\t\t\t\t\t\n+\t  \n+\tcase TARGET_BS:\t\t\t\t\t\t\t\n+\t  fputs (\"\\\\b\", stream);\t\t\t\t\t\n+\t  cur_pos += 2;\t\t\t\t\t\t\t\n+\t  break;\t\t\t\t\t\t\t\n+\t  \n+\tcase TARGET_CR:\t\t\t\t\t\t\t\n+\t  fputs (\"\\\\r\", stream);\t\t\t\t\t\n+\t  cur_pos += 2;\t\t\t\t\t\t\t\n+\t  break;\t\t\t\t\t\t\t\n+\t  \n+\tdefault:\t\t\t\t\t\t\t\n+\t  if (c >= ' ' && c < 0177)\t\t\t\t\t\n+\t    {\t\t\t\t\t\t\t\t\n+\t      putc (c, stream);\t\t\t\t\t\n+\t      cur_pos++;\t\t\t\t\t\t\n+\t    }\t\t\t\t\t\t\t\t\n+\t  else\t\t\t\t\t\t\t\t\n+\t    {\t\t\t\t\t\t\t\t\n+\t      fprintf (stream, \"\\\\%03o\", c);\t\t\t\t\n+\t      cur_pos += 4;\t\t\t\t\t\t\n+\t    }\t\t\t\t\t\t\t\t\n+\t}\t\t\t\t\t\t\t\t\n+      \n+      if (cur_pos > 72 && i+1 < len)\t\t\t\t\t\n+\t{\t\t\t\t\t\t\t\t\n+\t  cur_pos = 17;\t\t\t\t\t\t\t\n+\t  fprintf (stream, \"\\\"\\n\\t.ascii\\t\\\"\");\t\t\t\n+\t}\t\t\t\t\t\t\t\t\n+    }\t\t\t\t\t\t\t\t\t\n+  fprintf (stream, \"\\\"\\n\");\t\t\t\t\t\t\n+}\n+\f\n /* If defined, a C statement to be executed just prior to the output of\n    assembler code for INSN, to modify the extracted operands so they will be\n    output differently."}, {"sha": "77bc6fd0d98c31853402d3adfbe4d9767840ac62", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 6, "deletions": 69, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3276c7a5dfe301dff29109bd96cb159a7651c24/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3276c7a5dfe301dff29109bd96cb159a7651c24/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=b3276c7a5dfe301dff29109bd96cb159a7651c24", "patch": "@@ -1109,6 +1109,11 @@ while (0)\n #define EH_RETURN_DATA_REGNO(N) ((N) < 4 ? (N) + GP_ARG_FIRST : INVALID_REGNUM)\n #define EH_RETURN_STACKADJ_RTX  gen_rtx_REG (Pmode, GP_REG_FIRST + 3)\n \n+/* Offsets recorded in opcodes are a multiple of this alignment factor.  \n+   The default for this in 64-bit mode is 8, which causes problems with\n+   SFmode register saves.  */\n+#define DWARF_CIE_DATA_ALIGNMENT 4\n+\n /* Overrides for the COFF debug format.  */\n #define PUT_SDB_SCL(a)\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n@@ -4392,75 +4397,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* This is how to output a string.  */\n #undef ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(STREAM, STRING, LEN)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  register int i, c, len = (LEN), cur_pos = 17;\t\t\t\t\\\n-  register const unsigned char *string =\t\t\t\t\\\n-    (const unsigned char *)(STRING);\t\t\t\t\t\\\n-  fprintf ((STREAM), \"\\t.ascii\\t\\\"\");\t\t\t\t\t\\\n-  for (i = 0; i < len; i++)\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      register int c = string[i];\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      switch (c)\t\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\tcase '\\\"':\t\t\t\t\t\t\t\\\n-\tcase '\\\\':\t\t\t\t\t\t\t\\\n-\t  putc ('\\\\', (STREAM));\t\t\t\t\t\\\n-\t  putc (c, (STREAM));\t\t\t\t\t\t\\\n-\t  cur_pos += 2;\t\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tcase TARGET_NEWLINE:\t\t\t\t\t\t\\\n-\t  fputs (\"\\\\n\", (STREAM));\t\t\t\t\t\\\n-\t  if (i+1 < len\t\t\t\t\t\t\t\\\n-\t      && (((c = string[i+1]) >= '\\040' && c <= '~')\t\t\\\n-\t\t  || c == TARGET_TAB))\t\t\t\t\t\\\n-\t    cur_pos = 32767;\t\t/* break right here */\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    cur_pos += 2;\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tcase TARGET_TAB:\t\t\t\t\t\t\\\n-\t  fputs (\"\\\\t\", (STREAM));\t\t\t\t\t\\\n-\t  cur_pos += 2;\t\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tcase TARGET_FF:\t\t\t\t\t\t\t\\\n-\t  fputs (\"\\\\f\", (STREAM));\t\t\t\t\t\\\n-\t  cur_pos += 2;\t\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tcase TARGET_BS:\t\t\t\t\t\t\t\\\n-\t  fputs (\"\\\\b\", (STREAM));\t\t\t\t\t\\\n-\t  cur_pos += 2;\t\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tcase TARGET_CR:\t\t\t\t\t\t\t\\\n-\t  fputs (\"\\\\r\", (STREAM));\t\t\t\t\t\\\n-\t  cur_pos += 2;\t\t\t\t\t\t\t\\\n-\t  break;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tdefault:\t\t\t\t\t\t\t\\\n-\t  if (c >= ' ' && c < 0177)\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      putc (c, (STREAM));\t\t\t\t\t\\\n-\t      cur_pos++;\t\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\t\\\n-\t      fprintf ((STREAM), \"\\\\%03o\", c);\t\t\t\t\\\n-\t      cur_pos += 4;\t\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      if (cur_pos > 72 && i+1 < len)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  cur_pos = 17;\t\t\t\t\t\t\t\\\n-\t  fprintf ((STREAM), \"\\\"\\n\\t.ascii\\t\\\"\");\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  fprintf ((STREAM), \"\\\"\\n\");\t\t\t\t\t\t\\\n-} while (0)\n+  mips_output_ascii (STREAM, STRING, LEN)\n \n /* Handle certain cpp directives used in header files on sysV.  */\n #define SCCS_DIRECTIVE"}]}