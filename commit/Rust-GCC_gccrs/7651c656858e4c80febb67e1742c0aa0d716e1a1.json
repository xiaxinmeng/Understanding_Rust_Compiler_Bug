{"sha": "7651c656858e4c80febb67e1742c0aa0d716e1a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY1MWM2NTY4NThlNGM4MGZlYmI2N2UxNzQyYzBhYTBkNzE2ZTFhMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-01-29T20:44:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-01-29T20:44:50Z"}, "message": "re PR c++/59956 (internal compiler error: unexpected expression \u2018P_S\u2019 of kind template_parm_index)\n\n\tPR c++/59956\n\t* friend.c (do_friend): Pass the TEMPLATE_DECL to add_friend if we\n\thave a friend template in a class template.\n\t* pt.c (tsubst_friend_function): Look through it.\n\t(push_template_decl_real): A friend member template is\n\tprimary.\n\nFrom-SVN: r207281", "tree": {"sha": "f24433780390756fc9922334753b790abea23c6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f24433780390756fc9922334753b790abea23c6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7651c656858e4c80febb67e1742c0aa0d716e1a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7651c656858e4c80febb67e1742c0aa0d716e1a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7651c656858e4c80febb67e1742c0aa0d716e1a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7651c656858e4c80febb67e1742c0aa0d716e1a1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d530142ddb708112ad0a7dabaf74f9b4072fa120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d530142ddb708112ad0a7dabaf74f9b4072fa120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d530142ddb708112ad0a7dabaf74f9b4072fa120"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "723ce954e06b7e134beb222092a130284a333365", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7651c656858e4c80febb67e1742c0aa0d716e1a1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7651c656858e4c80febb67e1742c0aa0d716e1a1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7651c656858e4c80febb67e1742c0aa0d716e1a1", "patch": "@@ -1,3 +1,12 @@\n+2014-01-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/59956\n+\t* friend.c (do_friend): Pass the TEMPLATE_DECL to add_friend if we\n+\thave a friend template in a class template.\n+\t* pt.c (tsubst_friend_function): Look through it.\n+\t(push_template_decl_real): A friend member template is\n+\tprimary.\n+\n 2014-01-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58846"}, {"sha": "150b392b62a3e5d982c0cbd61589cf8f39895ac4", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7651c656858e4c80febb67e1742c0aa0d716e1a1/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7651c656858e4c80febb67e1742c0aa0d716e1a1/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=7651c656858e4c80febb67e1742c0aa0d716e1a1", "patch": "@@ -501,7 +501,13 @@ do_friend (tree ctype, tree declarator, tree decl,\n \t\t\t\t  ? current_template_parms\n \t\t\t\t  : NULL_TREE);\n \n-\t  if (template_member_p && decl && TREE_CODE (decl) == FUNCTION_DECL)\n+\t  if ((template_member_p\n+\t       /* Always pull out the TEMPLATE_DECL if we have a friend\n+\t\t  template in a class template so that it gets tsubsted\n+\t\t  properly later on (59956).  tsubst_friend_function knows\n+\t\t  how to tell this apart from a member template.  */\n+\t       || (class_template_depth && friend_depth))\n+\t      && decl && TREE_CODE (decl) == FUNCTION_DECL)\n \t    decl = DECL_TI_TEMPLATE (decl);\n \n \t  if (decl)"}, {"sha": "943255d0da7b4ed9fde4dd77576da4f752a49e52", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7651c656858e4c80febb67e1742c0aa0d716e1a1/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7651c656858e4c80febb67e1742c0aa0d716e1a1/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7651c656858e4c80febb67e1742c0aa0d716e1a1", "patch": "@@ -4615,7 +4615,8 @@ push_template_decl_real (tree decl, bool is_friend)\n     DECL_CONTEXT (decl) = FROB_CONTEXT (current_namespace);\n \n   /* See if this is a primary template.  */\n-  if (is_friend && ctx)\n+  if (is_friend && ctx\n+      && uses_template_parms_level (ctx, processing_template_decl))\n     /* A friend template that specifies a class context, i.e.\n          template <typename T> friend void A<T>::f();\n        is not primary.  */\n@@ -8424,10 +8425,17 @@ tsubst_friend_function (tree decl, tree args)\n \n       if (COMPLETE_TYPE_P (context))\n \t{\n+\t  tree fn = new_friend;\n+\t  /* do_friend adds the TEMPLATE_DECL for any member friend\n+\t     template even if it isn't a member template, i.e.\n+\t       template <class T> friend A<T>::f();\n+\t     Look through it in that case.  */\n+\t  if (TREE_CODE (fn) == TEMPLATE_DECL\n+\t      && !PRIMARY_TEMPLATE_P (fn))\n+\t    fn = DECL_TEMPLATE_RESULT (fn);\n \t  /* Check to see that the declaration is really present, and,\n \t     possibly obtain an improved declaration.  */\n-\t  tree fn = check_classfn (context,\n-\t\t\t\t   new_friend, NULL_TREE);\n+\t  fn = check_classfn (context, fn, NULL_TREE);\n \n \t  if (fn)\n \t    new_friend = fn;"}, {"sha": "4abe6ce6a2386188fa44eb68b1364720a4cf96b6", "filename": "gcc/testsuite/g++.dg/template/friend55.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7651c656858e4c80febb67e1742c0aa0d716e1a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7651c656858e4c80febb67e1742c0aa0d716e1a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend55.C?ref=7651c656858e4c80febb67e1742c0aa0d716e1a1", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/59956\n+\n+template <int I> struct A;\n+template <int I> class B {\n+  int i;\n+  template <int A_S> friend void A<A_S>::impl();\n+};\n+\n+B<0> b1;\n+template<int I>struct A { void impl(); };\n+B<1> b2;\n+\n+template<int I> void A<I>::impl() { ++b1.i; ++b2.i; }\n+\n+int main()\n+{\n+  A<0>().impl();\n+}"}]}