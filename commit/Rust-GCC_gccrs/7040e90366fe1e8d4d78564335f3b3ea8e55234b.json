{"sha": "7040e90366fe1e8d4d78564335f3b3ea8e55234b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0MGU5MDM2NmZlMWU4ZDRkNzg1NjQzMzVmM2IzZWE4ZTU1MjM0Yg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-07-20T12:51:45Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-07-20T12:51:45Z"}, "message": "[simplify-rtx][2/2] Simplify - (y ? -x : x) -> (!y ? -x : x)\n\n\t* simplify-rtx.c (simplify_unary_operation_1, NEG case):\n\t(neg (x ? (neg y) : y)) -> !x ? (neg y) : y.\n\n\t* gcc.target/aarch64/neg_abs_1.c: New test.\n\nFrom-SVN: r225997", "tree": {"sha": "b199851fd64c33575ae6c054bb768b03fabaf4d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b199851fd64c33575ae6c054bb768b03fabaf4d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7040e90366fe1e8d4d78564335f3b3ea8e55234b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7040e90366fe1e8d4d78564335f3b3ea8e55234b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7040e90366fe1e8d4d78564335f3b3ea8e55234b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7040e90366fe1e8d4d78564335f3b3ea8e55234b/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "232c93296dd97e3b300fc61f0f4ea79be4faf963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/232c93296dd97e3b300fc61f0f4ea79be4faf963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/232c93296dd97e3b300fc61f0f4ea79be4faf963"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "addf8ad6a32dd24d3043e875be8e5194ca5b54ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7040e90366fe1e8d4d78564335f3b3ea8e55234b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7040e90366fe1e8d4d78564335f3b3ea8e55234b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7040e90366fe1e8d4d78564335f3b3ea8e55234b", "patch": "@@ -1,3 +1,8 @@\n+2015-07-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* simplify-rtx.c (simplify_unary_operation_1, NEG case):\n+\t(neg (x ? (neg y) : y)) -> !x ? (neg y) : y.\n+\n 2015-07-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* combine.c (combine_simplify_rtx): Move simplification step"}, {"sha": "4332a42ced4ac9a6c323f60f102016b223d0e177", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7040e90366fe1e8d4d78564335f3b3ea8e55234b/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7040e90366fe1e8d4d78564335f3b3ea8e55234b/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=7040e90366fe1e8d4d78564335f3b3ea8e55234b", "patch": "@@ -957,6 +957,32 @@ simplify_unary_operation_1 (enum rtx_code code, machine_mode mode, rtx op)\n       if (GET_CODE (op) == NEG)\n \treturn XEXP (op, 0);\n \n+      /* (neg (x ? (neg y) : y)) == !x ? (neg y) : y.\n+\t If comparison is not reversible use\n+\t x ? y : (neg y).  */\n+      if (GET_CODE (op) == IF_THEN_ELSE)\n+\t{\n+\t  rtx cond = XEXP (op, 0);\n+\t  rtx true_rtx = XEXP (op, 1);\n+\t  rtx false_rtx = XEXP (op, 2);\n+\n+\t  if ((GET_CODE (true_rtx) == NEG\n+\t       && rtx_equal_p (XEXP (true_rtx, 0), false_rtx))\n+\t       || (GET_CODE (false_rtx) == NEG\n+\t\t   && rtx_equal_p (XEXP (false_rtx, 0), true_rtx)))\n+\t    {\n+\t      if (reversed_comparison_code (cond, NULL_RTX) != UNKNOWN)\n+\t\ttemp = reversed_comparison (cond, mode);\n+\t      else\n+\t\t{\n+\t\t  temp = cond;\n+\t\t  std::swap (true_rtx, false_rtx);\n+\t\t}\n+\t      return simplify_gen_ternary (IF_THEN_ELSE, mode,\n+\t\t\t\t\t    mode, temp, true_rtx, false_rtx);\n+\t    }\n+\t}\n+\n       /* (neg (plus X 1)) can become (not X).  */\n       if (GET_CODE (op) == PLUS\n \t  && XEXP (op, 1) == const1_rtx)"}, {"sha": "9df1d41c151c9c7120bf5ef3c347abaf8eee168e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7040e90366fe1e8d4d78564335f3b3ea8e55234b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7040e90366fe1e8d4d78564335f3b3ea8e55234b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7040e90366fe1e8d4d78564335f3b3ea8e55234b", "patch": "@@ -1,3 +1,7 @@\n+2015-07-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/neg_abs_1.c: New test.\n+\n 2015-07-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/66922"}, {"sha": "cb2a387088cc5874cd5e95f0c3ea6750537db9c1", "filename": "gcc/testsuite/gcc.target/aarch64/neg_abs_1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7040e90366fe1e8d4d78564335f3b3ea8e55234b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fneg_abs_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7040e90366fe1e8d4d78564335f3b3ea8e55234b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fneg_abs_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fneg_abs_1.c?ref=7040e90366fe1e8d4d78564335f3b3ea8e55234b", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-save-temps -O2\" } */\n+\n+int\n+f1 (int x)\n+{\n+  return x < 0 ? x : -x;\n+}\n+\n+long long\n+f2 (long long x)\n+{\n+  return x < 0 ? x : -x;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tneg\\tw\\[0-9\\]*.*\" } } */\n+/* { dg-final { scan-assembler-not \"\\tneg\\tx\\[0-9\\]*.*\" } } */"}]}