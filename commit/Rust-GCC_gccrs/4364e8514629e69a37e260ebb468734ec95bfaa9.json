{"sha": "4364e8514629e69a37e260ebb468734ec95bfaa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM2NGU4NTE0NjI5ZTY5YTM3ZTI2MGViYjQ2ODczNGVjOTViZmFhOQ==", "commit": {"author": {"name": "Laurent GUERBY", "email": "laurent@guerby.net", "date": "2008-11-15T11:22:42Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2008-11-15T11:22:42Z"}, "message": "re PR ada/37993 (missing Ada multilib support for darwin)\n\n2008-11-15  Laurent Guerby  <laurent@guerby.net>\n\n\tPR ada/37993\n\t* gcc-interface/Makefile.in: Add multilib handling for x86_64\n\ton darwin.\n\t* system-darwin-x86_64.ads: New file.\n\nFrom-SVN: r141882", "tree": {"sha": "a2fb686bf4a3d9afac37aca440c1943863d2124b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2fb686bf4a3d9afac37aca440c1943863d2124b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4364e8514629e69a37e260ebb468734ec95bfaa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4364e8514629e69a37e260ebb468734ec95bfaa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4364e8514629e69a37e260ebb468734ec95bfaa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4364e8514629e69a37e260ebb468734ec95bfaa9/comments", "author": {"login": "guerby", "id": 6659329, "node_id": "MDQ6VXNlcjY2NTkzMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/6659329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guerby", "html_url": "https://github.com/guerby", "followers_url": "https://api.github.com/users/guerby/followers", "following_url": "https://api.github.com/users/guerby/following{/other_user}", "gists_url": "https://api.github.com/users/guerby/gists{/gist_id}", "starred_url": "https://api.github.com/users/guerby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guerby/subscriptions", "organizations_url": "https://api.github.com/users/guerby/orgs", "repos_url": "https://api.github.com/users/guerby/repos", "events_url": "https://api.github.com/users/guerby/events{/privacy}", "received_events_url": "https://api.github.com/users/guerby/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b70cef5d743a294b00b863f8caf80342f33f8100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70cef5d743a294b00b863f8caf80342f33f8100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b70cef5d743a294b00b863f8caf80342f33f8100"}], "stats": {"total": 190, "additions": 188, "deletions": 2}, "files": [{"sha": "2e9a34aedb80e2ef740fb49f73957363e35b7cbb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4364e8514629e69a37e260ebb468734ec95bfaa9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4364e8514629e69a37e260ebb468734ec95bfaa9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4364e8514629e69a37e260ebb468734ec95bfaa9", "patch": "@@ -1,3 +1,10 @@\n+2008-11-15  Laurent Guerby  <laurent@guerby.net>\n+\n+\tPR ada/37993\n+\t* gcc-interface/Makefile.in: Add multilib handling for x86_64\n+\ton darwin.\n+\t* system-darwin-x86_64.ads: New file.\n+\n 2008-11-13  Olivier Hainque  <hainque@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <case E_Function>:"}, {"sha": "bcf71343bb44060e97d715a5f3a0659f3c781544", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4364e8514629e69a37e260ebb468734ec95bfaa9/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4364e8514629e69a37e260ebb468734ec95bfaa9/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=4364e8514629e69a37e260ebb468734ec95bfaa9", "patch": "@@ -1720,8 +1720,14 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n     s-taspri.ads<s-taspri-posix.ads \\\n     s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n     a-numaux.ads<a-numaux-x86.ads \\\n-    a-numaux.adb<a-numaux-x86.adb \\\n-    system.ads<system-darwin-x86.ads\n+    a-numaux.adb<a-numaux-x86.adb\n+    ifeq ($(strip $(MULTISUBDIR)),/x86_64)\n+      LIBGNAT_TARGET_PAIRS += \\\n+      system.ads<system-darwin-x86_64.ads\n+    else\n+      LIBGNAT_TARGET_PAIRS += \\\n+      system.ads<system-darwin-x86.ads\n+    endif\n   else\n     LIBGNAT_TARGET_PAIRS = \\\n     a-intnam.ads<a-intnam-darwin.ads \\"}, {"sha": "16dc10255636c434b1563830690f04eab0f4c28f", "filename": "gcc/ada/system-darwin-x86_64.ads", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4364e8514629e69a37e260ebb468734ec95bfaa9/gcc%2Fada%2Fsystem-darwin-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4364e8514629e69a37e260ebb468734ec95bfaa9/gcc%2Fada%2Fsystem-darwin-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-x86_64.ads?ref=4364e8514629e69a37e260ebb468734ec95bfaa9", "patch": "@@ -0,0 +1,173 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                        (Darwin/x86_64 Version)                           --\n+--                                                                          --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 64;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  The values defined here are derived from the following Darwin\n+   --  sources:\n+   --\n+   --  Libc/pthreads/pthread.c\n+   --    pthread_init calls host_info to retrieve the HOST_PRIORITY_INFO.\n+   --    This file includes \"pthread_internals\".\n+   --  Libc/pthreads/pthread_internals.h\n+   --    This file includes <mach/mach.h>.\n+   --  xnu/osfmk/mach/mach.h\n+   --    This file includes <mach/mach_types.h>.\n+   --  xnu/osfmk/mach/mach_types.h\n+   --    This file includes <mach/host_info.h>.\n+   --  xnu/osfmk/mach/host_info.h\n+   --    This file contains the definition of the host_info_t data structure\n+   --    and the function prototype for host_info.\n+   --  xnu/osfmk/kern/host.c\n+   --    This file defines the function host_info which sets the\n+   --    priority_info field of struct host_info_t. This file includes\n+   --    <kern/processor.h>.\n+   --  xnu/osfmk/kern/processor.h\n+   --    This file includes <kern/sched.h>.\n+   --  xnu/osfmk/kern/sched.h\n+   --    This file defines the values for each level of priority.\n+\n+   Max_Interrupt_Priority : constant Positive := 63;\n+   Max_Priority           : constant Positive := Max_Interrupt_Priority - 1;\n+\n+   subtype Any_Priority is Integer range 0 .. Max_Interrupt_Priority;\n+   subtype Priority is Any_Priority range 0 .. Max_Priority;\n+   subtype Interrupt_Priority is Any_Priority\n+     range Priority'Last + 1 .. Max_Interrupt_Priority;\n+\n+   Default_Priority : constant Priority :=\n+     (Priority'Last - Priority'First) / 2;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Stack_Check_Limits        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Always_Compatible_Rep     : constant Boolean := False;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+\n+end System;"}]}