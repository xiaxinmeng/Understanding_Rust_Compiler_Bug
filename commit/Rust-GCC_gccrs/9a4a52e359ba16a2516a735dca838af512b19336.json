{"sha": "9a4a52e359ba16a2516a735dca838af512b19336", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE0YTUyZTM1OWJhMTZhMjUxNmE3MzVkY2E4MzhhZjUxMmIxOTMzNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-29T11:53:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-29T12:40:52Z"}, "message": "tree-optimization/95916 - treat scalar ops explicitely\n\nThis explicitely treats the case of scalar operands for SLP\nwhen computing insert locations.\n\n2020-06-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/95916\n\t* tree-vect-slp.c (vect_schedule_slp_instance): Explicitely handle\n\tthe case of not vectorized externals.\n\n\t* gcc.dg/vect/pr95916.c: New testcase.", "tree": {"sha": "42b59546c5d5299ac508614e13bf09dbfc02af98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42b59546c5d5299ac508614e13bf09dbfc02af98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a4a52e359ba16a2516a735dca838af512b19336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4a52e359ba16a2516a735dca838af512b19336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a4a52e359ba16a2516a735dca838af512b19336", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4a52e359ba16a2516a735dca838af512b19336/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "008842d741e5a88b8f46c692cf09e83d1f51252c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/008842d741e5a88b8f46c692cf09e83d1f51252c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/008842d741e5a88b8f46c692cf09e83d1f51252c"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "61b8ca3fa0cf75007d17df56d1e11b356b3beef8", "filename": "gcc/testsuite/gcc.dg/vect/pr95916.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4a52e359ba16a2516a735dca838af512b19336/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr95916.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4a52e359ba16a2516a735dca838af512b19336/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr95916.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr95916.c?ref=9a4a52e359ba16a2516a735dca838af512b19336", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+extern short var_3, var_8;\n+extern int var_5;\n+extern char var_10;\n+extern int arr_99[][16];\n+void test()\n+{\n+  for (; 0 < var_10;)\n+    for (long a = var_8;; a++)\n+      arr_99[4][a] = var_3 << var_5;\n+}"}, {"sha": "1ffbf6f6af99df017a103617e4e3060c7913b495", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4a52e359ba16a2516a735dca838af512b19336/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4a52e359ba16a2516a735dca838af512b19336/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=9a4a52e359ba16a2516a735dca838af512b19336", "patch": "@@ -4293,6 +4293,21 @@ vect_schedule_slp_instance (vec_info *vinfo,\n \t\t  || vect_stmt_dominates_stmt_p (last_stmt, vstmt))\n \t\tlast_stmt = vstmt;\n \t  }\n+\telse if (!SLP_TREE_VECTYPE (child))\n+\t  {\n+\t    /* For externals we use unvectorized at all scalar defs.  */\n+\t    unsigned j;\n+\t    tree def;\n+\t    FOR_EACH_VEC_ELT (SLP_TREE_SCALAR_OPS (child), j, def)\n+\t      if (TREE_CODE (def) == SSA_NAME\n+\t\t  && !SSA_NAME_IS_DEFAULT_DEF (def))\n+\t\t{\n+\t\t  gimple *stmt = SSA_NAME_DEF_STMT (def);\n+\t\t  if (!last_stmt\n+\t\t      || vect_stmt_dominates_stmt_p (last_stmt, stmt))\n+\t\t    last_stmt = stmt;\n+\t\t}\n+\t  }\n \telse\n \t  {\n \t    /* For externals we have to look at all defs since their"}]}