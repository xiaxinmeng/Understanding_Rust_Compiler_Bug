{"sha": "7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiNTYyNzQ0ZjU1YjFkZGIxN2IzNTIzZmI5NGMzYTQ5YTQ1ZTdhMQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-02-21T16:42:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-02-21T16:42:28Z"}, "message": "sh.h (current_function_anonymous_args): Remove.\n\n\t* sh.h (current_function_anonymous_args): Remove.\n\t(SETUP_INCOMING_VARARGS): Don't set it - just check that one\n\tof current_function_varargs and current_function_stdarg is set.\n\t* sh.c (sh_expand_prologue): Check current_function_varargs /\n\tcurrent_function_stdarg / TARGET_SH5 instead of\n\tcurrent_function_anonymous_args.\n\n\t* sh64.h (TARGET_VERSION): Define.\n\nFix comments that to refer to SH architecture -\nthe architecture is no longer exclusive to Hitachi.\n\nFrom-SVN: r49931", "tree": {"sha": "93caacf2f20e43765f7c0e0c43351507383a37cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93caacf2f20e43765f7c0e0c43351507383a37cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/comments", "author": null, "committer": null, "parents": [{"sha": "73840519934e78e322cafd7b8bc5649e2fc45697", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73840519934e78e322cafd7b8bc5649e2fc45697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73840519934e78e322cafd7b8bc5649e2fc45697"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "14bd7a7d8fd709171e36fc2b9c84796b40a5e2f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "patch": "@@ -1,3 +1,14 @@\n+Thu Feb 21 15:35:46 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.h (current_function_anonymous_args): Remove.\n+\t(SETUP_INCOMING_VARARGS): Don't set it - just check that one\n+\tof current_function_varargs and current_function_stdarg is set.\n+\t* sh.c (sh_expand_prologue): Check current_function_varargs /\n+\tcurrent_function_stdarg / TARGET_SH5 instead of\n+\tcurrent_function_anonymous_args.\n+\n+\t* sh64.h (TARGET_VERSION): Define.\n+\n 2002-02-20  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.h (EPILOGUE_USES): Conditionalize"}, {"sha": "d5aa9471057cdc35308a76f1fea321876f02ddcd", "filename": "gcc/config/sh/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Felf.h?ref=7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions of target machine for gcc for Hitachi Super-H using ELF.\n+/* Definitions of target machine for gcc for Hitachi / SuperH SH using ELF.\n    Copyright (C) 1996, 1997, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Ian Lance Taylor <ian@cygnus.com>.\n "}, {"sha": "1f61a8dcbc40481f3df31dca25600893bc3192a8", "filename": "gcc/config/sh/lib1funcs.asm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flib1funcs.asm?ref=7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "patch": "@@ -25,7 +25,7 @@ along with this program; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-!! libgcc routines for the Hitachi SH cpu.\n+!! libgcc routines for the Hitachi / SuperH SH CPUs.\n !! Contributed by Steve Chamberlain.\n !! sac@cygnus.com\n "}, {"sha": "d7a1162e46c879d6bcae0b8c389b51e13636d8fc", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions of target machine for GNU compiler for Hitachi Super-H.\n+/* Definitions of target machine for GNU compiler for Hitachi / SuperH SH\n    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000\n    Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com)."}, {"sha": "10f342ce23fa235d4ec300b855c4334e02b7f7bc", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "patch": "@@ -1,4 +1,4 @@\n-/* Output routines for GCC for Hitachi Super-H.\n+/* Output routines for GCC for Hitachi / SuperH SH.\n    Copyright (C) 1993, 1994, 1995, 1997, 1997, 1998, 1999, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com).\n@@ -4503,14 +4503,11 @@ sh_expand_prologue ()\n \t}\n     }\n \n-  /* This is set by SETUP_VARARGS to indicate that this is a varargs\n-     routine.  Clear it here so that the next function isn't affected.  */\n-  if (current_function_anonymous_args)\n+  /* Emit the code for SETUP_VARARGS.  */\n+  if (current_function_varargs || current_function_stdarg)\n     {\n-      current_function_anonymous_args = 0;\n-\n       /* This is not used by the SH3E calling convention  */\n-      if (TARGET_SH1 && ! TARGET_SH3E && ! TARGET_HITACHI)\n+      if (TARGET_SH1 && ! TARGET_SH3E && ! TARGET_SH5 && ! TARGET_HITACHI)\n \t{\n \t  /* Push arg regs as if they'd been provided by caller in stack.  */\n \t  for (i = 0; i < NPARM_REGS(SImode); i++)"}, {"sha": "1a486214e333b94b1d636a010ab598a55a772e29", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions of target machine for GNU compiler for Hitachi Super-H.\n+/* Definitions of target machine for GNU compiler for Hitachi / SuperH SH.\n    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com).\n@@ -1938,13 +1938,18 @@ struct sh_args {\n    && ((CUM).arg_count[(int) SH_ARG_INT]\t\t\t\\\n        + (int_size_in_bytes (TYPE) + 7) / 8) > NPARM_REGS (SImode))\n \n-extern int current_function_anonymous_args;\n-\n /* Perform any needed actions needed for a function that is receiving a\n    variable number of arguments.  */\n \n-#define SETUP_INCOMING_VARARGS(ASF, MODE, TYPE, PAS, ST) \\\n-  current_function_anonymous_args = ! TARGET_SH5\n+/* We actually emit the code in sh_expand_prologue.  We used to use\n+   a static variable to flag that we need to emit this code, but that\n+   doesn't when inlining, when functions are deferred and then emitted\n+   later.  Fortunately, we already have two flags that are part of struct\n+   function that tell if a function uses varargs or stdarg.  */\n+#define SETUP_INCOMING_VARARGS(ASF, MODE, TYPE, PAS, ST)  do \\\n+  if (! current_function_varargs && ! current_function_stdarg) \\\n+    abort (); \\\n+while (0)\n \n /* Define the `__builtin_va_list' type for the ABI.  */\n #define BUILD_VA_LIST_TYPE(VALIST) \\"}, {"sha": "263d9bd94a94db13c77a0b4bc3a12e31b3366db6", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "patch": "@@ -1,4 +1,4 @@\n-;;- Machine description for the Hitachi SH.\n+;;- Machine description for Hitachi / SuperH SH.\n ;;  Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002\n ;;  Free Software Foundation, Inc.\n ;;  Contributed by Steve Chamberlain (sac@cygnus.com)."}, {"sha": "c23c354565f33901c8a04b7f25c556797a82c9de", "filename": "gcc/config/sh/sh64.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab562744f55b1ddb17b3523fb94c3a49a45e7a1/gcc%2Fconfig%2Fsh%2Fsh64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh64.h?ref=7ab562744f55b1ddb17b3523fb94c3a49a45e7a1", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions of target machine for GNU compiler for Hitachi Super-H 5.\n+/* Definitions of target machine for GNU compiler for SuperH SH 5.\n    Copyright 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Alexandre Oliva <aoliva@redhat.com>\n \n@@ -19,6 +19,10 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#undef TARGET_VERSION\n+#define TARGET_VERSION \\\n+  fputs (\" (SuperH SH)\", stderr);\n+\n #undef CPP_DEFAULT_CPU_SPEC\n #define CPP_DEFAULT_CPU_SPEC \"-D__SH5__=32 -D__SHMEDIA__\"\n "}]}