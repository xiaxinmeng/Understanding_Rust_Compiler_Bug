{"sha": "43722f9fa69d4cc9a369b468552d5612674a576f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM3MjJmOWZhNjlkNGNjOWEzNjliNDY4NTUyZDU2MTI2NzRhNTc2Zg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2014-11-11T02:10:37Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2014-11-11T02:10:37Z"}, "message": "sched-deps.c (sched_analyze_1): Check pending list if it is not less than MAX_PENDING_LIST_LENGTH.\n\n\n\t* sched-deps.c (sched_analyze_1): Check pending list if it is not\n\tless than MAX_PENDING_LIST_LENGTH.\n\t(sched_analyze_2, sched_analyze_insn, deps_analyze_insn): Ditto.\n\nFrom-SVN: r217331", "tree": {"sha": "552953ca24c30ef709ba8466f219468f13c661f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552953ca24c30ef709ba8466f219468f13c661f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43722f9fa69d4cc9a369b468552d5612674a576f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43722f9fa69d4cc9a369b468552d5612674a576f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43722f9fa69d4cc9a369b468552d5612674a576f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43722f9fa69d4cc9a369b468552d5612674a576f/comments", "author": null, "committer": null, "parents": [{"sha": "f93f644e8588e66a75e8e76c484cbdf045bd28cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93f644e8588e66a75e8e76c484cbdf045bd28cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f93f644e8588e66a75e8e76c484cbdf045bd28cb"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "1ddd36a721a9656cf556865c119e9d5954ba276c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43722f9fa69d4cc9a369b468552d5612674a576f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43722f9fa69d4cc9a369b468552d5612674a576f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43722f9fa69d4cc9a369b468552d5612674a576f", "patch": "@@ -1,3 +1,9 @@\n+2014-11-11  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* sched-deps.c (sched_analyze_1): Check pending list if it is not\n+\tless than MAX_PENDING_LIST_LENGTH.\n+\t(sched_analyze_2, sched_analyze_insn, deps_analyze_insn): Ditto.\n+\n 2014-11-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_decompose_address): Replace open-coded"}, {"sha": "a4ea8362a6af8eb2f4c197a9ebe2c660219c676d", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43722f9fa69d4cc9a369b468552d5612674a576f/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43722f9fa69d4cc9a369b468552d5612674a576f/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=43722f9fa69d4cc9a369b468552d5612674a576f", "patch": "@@ -2504,7 +2504,7 @@ sched_analyze_1 (struct deps_desc *deps, rtx x, rtx_insn *insn)\n       /* Pending lists can't get larger with a readonly context.  */\n       if (!deps->readonly\n           && ((deps->pending_read_list_length + deps->pending_write_list_length)\n-              > MAX_PENDING_LIST_LENGTH))\n+              >= MAX_PENDING_LIST_LENGTH))\n \t{\n \t  /* Flush all pending reads and writes to prevent the pending lists\n \t     from getting any larger.  Insn scheduling runs too slowly when\n@@ -2722,7 +2722,7 @@ sched_analyze_2 (struct deps_desc *deps, rtx x, rtx_insn *insn)\n \t  {\n \t    if ((deps->pending_read_list_length\n \t\t + deps->pending_write_list_length)\n-\t\t> MAX_PENDING_LIST_LENGTH\n+\t\t>= MAX_PENDING_LIST_LENGTH\n \t\t&& !DEBUG_INSN_P (insn))\n \t      flush_pending_lists (deps, insn, true, true);\n \t    add_insn_mem_dependence (deps, true, insn, x);\n@@ -3227,8 +3227,8 @@ sched_analyze_insn (struct deps_desc *deps, rtx x, rtx_insn *insn)\n \t  EXECUTE_IF_SET_IN_REG_SET (reg_pending_clobbers, 0, i, rsi)\n \t    {\n \t      struct deps_reg *reg_last = &deps->reg_last[i];\n-\t      if (reg_last->uses_length > MAX_PENDING_LIST_LENGTH\n-\t\t  || reg_last->clobbers_length > MAX_PENDING_LIST_LENGTH)\n+\t      if (reg_last->uses_length >= MAX_PENDING_LIST_LENGTH\n+\t\t  || reg_last->clobbers_length >= MAX_PENDING_LIST_LENGTH)\n \t\t{\n \t\t  add_dependence_list_and_free (deps, insn, &reg_last->sets, 0,\n \t\t\t\t\t\tREG_DEP_OUTPUT, false);\n@@ -3661,7 +3661,7 @@ deps_analyze_insn (struct deps_desc *deps, rtx_insn *insn)\n                && sel_insn_is_speculation_check (insn)))\n         {\n           /* Keep the list a reasonable size.  */\n-          if (deps->pending_flush_length++ > MAX_PENDING_LIST_LENGTH)\n+          if (deps->pending_flush_length++ >= MAX_PENDING_LIST_LENGTH)\n             flush_pending_lists (deps, insn, true, true);\n           else\n \t    deps->pending_jump_insns"}]}