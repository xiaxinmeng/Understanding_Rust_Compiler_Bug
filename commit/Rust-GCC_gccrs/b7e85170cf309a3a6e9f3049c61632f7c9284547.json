{"sha": "b7e85170cf309a3a6e9f3049c61632f7c9284547", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdlODUxNzBjZjMwOWEzYTZlOWYzMDQ5YzYxNjMyZjdjOTI4NDU0Nw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2006-11-14T05:08:46Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2006-11-14T05:08:46Z"}, "message": "fold-const.c (fold_strip_sign_ops): Handle COMPOUND_EXPR and COND_EXPR.\n\n\t* fold-const.c (fold_strip_sign_ops): Handle COMPOUND_EXPR and\n\tCOND_EXPR.\n\ntestsuite:\n\t* gcc.dg/builtins-20.c: Add more cases.\n\nFrom-SVN: r118802", "tree": {"sha": "b7ff97c2b5e5d7442bef1008e0d8e9eba4b1c58a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7ff97c2b5e5d7442bef1008e0d8e9eba4b1c58a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7e85170cf309a3a6e9f3049c61632f7c9284547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e85170cf309a3a6e9f3049c61632f7c9284547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7e85170cf309a3a6e9f3049c61632f7c9284547", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e85170cf309a3a6e9f3049c61632f7c9284547/comments", "author": null, "committer": null, "parents": [{"sha": "833bf445b05c6b15b8d3af23ba965c85e5d7f56a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/833bf445b05c6b15b8d3af23ba965c85e5d7f56a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/833bf445b05c6b15b8d3af23ba965c85e5d7f56a"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "69f6627cf6844b0a633b82b766586bfde4692692", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e85170cf309a3a6e9f3049c61632f7c9284547/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e85170cf309a3a6e9f3049c61632f7c9284547/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7e85170cf309a3a6e9f3049c61632f7c9284547", "patch": "@@ -1,3 +1,8 @@\n+2006-11-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* fold-const.c (fold_strip_sign_ops): Handle COMPOUND_EXPR and\n+\tCOND_EXPR.\n+\n 2006-11-13  DJ Delorie  <dj@redhat.com>\n \n \t* config/m32c/m32c.c (m32c_prepare_shift): Use a separate"}, {"sha": "eb3b45701a41339b43467b46e11a5e0747f03e15", "filename": "gcc/fold-const.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e85170cf309a3a6e9f3049c61632f7c9284547/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e85170cf309a3a6e9f3049c61632f7c9284547/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b7e85170cf309a3a6e9f3049c61632f7c9284547", "patch": "@@ -13368,6 +13368,22 @@ fold_strip_sign_ops (tree exp)\n \t\t\t    arg1 ? arg1 : TREE_OPERAND (exp, 1));\n       break;\n \n+    case COMPOUND_EXPR:\n+      arg0 = TREE_OPERAND (exp, 0);\n+      arg1 = fold_strip_sign_ops (TREE_OPERAND (exp, 1));\n+      if (arg1)\n+\treturn fold_build2 (COMPOUND_EXPR, TREE_TYPE (exp), arg0, arg1);\n+      break;\n+      \n+    case COND_EXPR:\n+      arg0 = fold_strip_sign_ops (TREE_OPERAND (exp, 1));\n+      arg1 = fold_strip_sign_ops (TREE_OPERAND (exp, 2));\n+      if (arg0 || arg1)\n+\treturn fold_build3 (COND_EXPR, TREE_TYPE (exp), TREE_OPERAND (exp, 0),\n+\t\t\t    arg0 ? arg0 : TREE_OPERAND (exp, 1),\n+\t\t\t    arg1 ? arg1 : TREE_OPERAND (exp, 2));\n+      break;\n+      \n     case CALL_EXPR:\n       /* Strip sign ops from the argument of \"odd\" math functions.  */\n       if (negate_mathfn_p (builtin_mathfn_code (exp)))"}, {"sha": "370620b3cbbb8014a43e14f40a2a39e5ef6670c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e85170cf309a3a6e9f3049c61632f7c9284547/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e85170cf309a3a6e9f3049c61632f7c9284547/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7e85170cf309a3a6e9f3049c61632f7c9284547", "patch": "@@ -1,3 +1,7 @@\n+2006-11-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/builtins-20.c: Add more cases.\n+\n 2006-11-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/29759"}, {"sha": "ff9bf92dd01a770cdcb786341a81e339170e985d", "filename": "gcc/testsuite/gcc.dg/builtins-20.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e85170cf309a3a6e9f3049c61632f7c9284547/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e85170cf309a3a6e9f3049c61632f7c9284547/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c?ref=b7e85170cf309a3a6e9f3049c61632f7c9284547", "patch": "@@ -89,6 +89,22 @@ void test2(double x, double y)\n   if (cos(-fabs(tan(x/-y))) != cos(tan(x/y)))\n     link_error ();\n \n+  if (cos(y<10 ? -x : y) != cos(y<10 ? x : y))\n+    link_error ();\n+\n+  if (cos(y<10 ? x : -y) != cos(y<10 ? x : y))\n+    link_error ();\n+\n+  if (cos(y<10 ? -fabs(x) : tan(x<20 ? -x : -fabs(y)))\n+      != cos(y<10 ? x : tan(x<20 ? x : y)))\n+    link_error ();\n+\n+  if (cos((y*=3, -x)) != cos((y*=3,x)))\n+    link_error ();\n+\n+  if (cos((y*=2, -fabs(tan(x/-y)))) != cos((y*=2,tan(x/y))))\n+    link_error ();\n+\n   if (hypot (x, 0) != fabs(x))\n     link_error ();\n \n@@ -190,6 +206,22 @@ void test2f(float x, float y)\n   if (cosf(-fabsf(tanf(x/-y))) != cosf(tanf(x/y)))\n     link_error ();\n \n+  if (cosf(y<10 ? -x : y) != cosf(y<10 ? x : y))\n+    link_error ();\n+\n+  if (cosf(y<10 ? x : -y) != cosf(y<10 ? x : y))\n+    link_error ();\n+\n+  if (cosf(y<10 ? -fabsf(x) : tanf(x<20 ? -x : -fabsf(y)))\n+      != cosf(y<10 ? x : tanf(x<20 ? x : y)))\n+    link_error ();\n+\n+  if (cosf((y*=3, -x)) != cosf((y*=3,x)))\n+    link_error ();\n+\n+  if (cosf((y*=2, -fabsf(tanf(x/-y)))) != cosf((y*=2,tanf(x/y))))\n+    link_error ();\n+\n   if (hypotf (x, 0) != fabsf(x))\n     link_error ();\n \n@@ -292,6 +324,22 @@ void test2l(long double x, long double y)\n   if (cosl(-fabsl(tanl(x/-y))) != cosl(tanl(x/y)))\n     link_error ();\n \n+  if (cosl(y<10 ? -x : y) != cosl(y<10 ? x : y))\n+    link_error ();\n+\n+  if (cosl(y<10 ? x : -y) != cosl(y<10 ? x : y))\n+    link_error ();\n+\n+  if (cosl(y<10 ? -fabsl(x) : tanl(x<20 ? -x : -fabsl(y)))\n+      != cosl(y<10 ? x : tanl(x<20 ? x : y)))\n+    link_error ();\n+\n+  if (cosl((y*=3, -x)) != cosl((y*=3,x)))\n+    link_error ();\n+\n+  if (cosl((y*=2, -fabsl(tanl(x/-y)))) != cosl((y*=2,tanl(x/y))))\n+    link_error ();\n+\n   if (hypotl (x, 0) != fabsl(x))\n     link_error ();\n "}]}