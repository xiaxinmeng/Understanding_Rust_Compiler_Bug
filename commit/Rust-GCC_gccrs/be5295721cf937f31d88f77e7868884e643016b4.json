{"sha": "be5295721cf937f31d88f77e7868884e643016b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU1Mjk1NzIxY2Y5MzdmMzFkODhmNzdlNzg2ODg4NGU2NDMwMTZiNA==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-01-30T14:54:39Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-01-30T14:54:39Z"}, "message": "Revert \"PR c++/51641 - Lookup finds enclosing class member instead of template parameter\"\n\nThis reverts commit r183726\n\nFrom-SVN: r183728", "tree": {"sha": "51e742f2f8ac2470df8bd3451262a4ccd506bba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51e742f2f8ac2470df8bd3451262a4ccd506bba3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be5295721cf937f31d88f77e7868884e643016b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5295721cf937f31d88f77e7868884e643016b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be5295721cf937f31d88f77e7868884e643016b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be5295721cf937f31d88f77e7868884e643016b4/comments", "author": null, "committer": null, "parents": [{"sha": "12e95d87efb8a7a18a247fdec11369948f8e2b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e95d87efb8a7a18a247fdec11369948f8e2b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e95d87efb8a7a18a247fdec11369948f8e2b10"}], "stats": {"total": 120, "additions": 42, "deletions": 78}, "files": [{"sha": "5c022598a2e809b02c61d13f93c505d0b97761ab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=be5295721cf937f31d88f77e7868884e643016b4", "patch": "@@ -1,14 +1,3 @@\n-2012-01-30  Dodji Seketeli  <dodji@redhat.com>\n-\n-\tPR c++/51641\n-\t* cp-tree.h (template_type_parameter_p): Declare new function.\n-    \t(parameter_of_template_p): Remove\n-    \t* pt.c (template_type_parameter_p): Define new function.\n-    \t(parameter_of_template_p): Remove.\n-    \t* name-lookup.c (binding_to_template_parms_of_scope_p): Don't rely\n-    \ton parameter_of_template_p anymore.  Compare the level of the\n-    \ttemplate parameter to the depth of the template.\n-\n 2012-01-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51327"}, {"sha": "f27755e4cf97ae1e4e00509b319c0b47783345f5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=be5295721cf937f31d88f77e7868884e643016b4", "patch": "@@ -5357,10 +5357,10 @@ extern bool explicit_class_specialization_p     (tree);\n extern int push_tinst_level                     (tree);\n extern void pop_tinst_level                     (void);\n extern struct tinst_level *outermost_tinst_level(void);\n+extern bool parameter_of_template_p\t\t(tree, tree);\n extern void init_template_processing\t\t(void);\n extern void print_template_statistics\t\t(void);\n bool template_template_parameter_p\t\t(const_tree);\n-bool template_type_parameter_p                  (const_tree);\n extern bool primary_template_instantiation_p    (const_tree);\n extern tree get_primary_template_innermost_parameters\t(const_tree);\n extern tree get_template_parms_at_level (tree, int);"}, {"sha": "235134249acfc2dbec4dd943b39c95dae4292d4d", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 9, "deletions": 27, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=be5295721cf937f31d88f77e7868884e643016b4", "patch": "@@ -4466,39 +4466,21 @@ static bool\n binding_to_template_parms_of_scope_p (cxx_binding *binding,\n \t\t\t\t      cp_binding_level *scope)\n {\n-  tree binding_value, tmpl;\n-  int level;\n+  tree binding_value;\n \n   if (!binding || !scope)\n     return false;\n \n   binding_value = binding->value ?  binding->value : binding->type;\n-  /* BINDING_VALUE must be a template parm.  */\n-  if (binding_value == NULL_TREE\n-      || (!DECL_P (binding_value)\n-          || !DECL_TEMPLATE_PARM_P (binding_value)))\n-    return false;\n \n-  /*  The level of BINDING_VALUE.  */\n-  level =\n-    template_type_parameter_p (binding_value)\n-    ? TEMPLATE_PARM_LEVEL (TEMPLATE_TYPE_PARM_INDEX\n-\t\t\t (TREE_TYPE (binding_value)))\n-    : TEMPLATE_PARM_LEVEL (DECL_INITIAL (binding_value));\n-\n-  /* The template of the current scope, iff said scope is a primary\n-     template.  */\n-  tmpl =\n-    (scope\n-     && scope->this_entity\n-     && get_template_info (scope->this_entity)\n-     && PRIMARY_TEMPLATE_P (TI_TEMPLATE (get_template_info (scope->this_entity))))\n-    ? TI_TEMPLATE (get_template_info (scope->this_entity))\n-    : NULL_TREE;\n-\n-  /* If the level of the parm BINDING_VALUE equals the depth of TMPL,\n-     then BINDING_VALUE is a parameter of TMPL.  */\n-  return (tmpl && level == TMPL_PARMS_DEPTH (DECL_TEMPLATE_PARMS (tmpl)));\n+  return (scope\n+\t  && scope->this_entity\n+\t  && get_template_info (scope->this_entity)\n+\t  && PRIMARY_TEMPLATE_P (TI_TEMPLATE\n+\t\t\t\t (get_template_info (scope->this_entity)))\n+\t  && parameter_of_template_p (binding_value,\n+\t\t\t\t      TI_TEMPLATE (get_template_info \\\n+\t\t\t\t\t\t    (scope->this_entity))));\n }\n \n /* Return the innermost non-namespace binding for NAME from a scope"}, {"sha": "ad2b4dfc73674050864e6c53437bf899584c846a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 32, "deletions": 12, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=be5295721cf937f31d88f77e7868884e643016b4", "patch": "@@ -2890,18 +2890,6 @@ template_template_parameter_p (const_tree parm)\n   return DECL_TEMPLATE_TEMPLATE_PARM_P (parm);\n }\n \n-/* Return true iff PARM is a DECL representing a type template\n-   parameter.  */\n-\n-bool\n-template_type_parameter_p (const_tree parm)\n-{\n-  return (parm\n-\t  && (TREE_CODE (parm) == TYPE_DECL\n-\t      || TREE_CODE (parm) == TEMPLATE_DECL)\n-\t  && DECL_TEMPLATE_PARM_P (parm));\n-}\n-\n /* Return the template parameters of T if T is a\n    primary template instantiation, NULL otherwise.  */\n \n@@ -8149,6 +8137,38 @@ outermost_tinst_level (void)\n   return level;\n }\n \n+/* Returns TRUE if PARM is a parameter of the template TEMPL.  */\n+\n+bool\n+parameter_of_template_p (tree parm, tree templ)\n+{\n+  tree parms;\n+  int i;\n+\n+  if (!parm || !templ)\n+    return false;\n+\n+  gcc_assert (DECL_TEMPLATE_PARM_P (parm));\n+  gcc_assert (TREE_CODE (templ) == TEMPLATE_DECL);\n+\n+  parms = DECL_TEMPLATE_PARMS (templ);\n+  parms = INNERMOST_TEMPLATE_PARMS (parms);\n+\n+  for (i = 0; i < TREE_VEC_LENGTH (parms); ++i)\n+    {\n+      tree p = TREE_VALUE (TREE_VEC_ELT (parms, i));\n+      if (p == error_mark_node)\n+\tcontinue;\n+\n+      if (parm == p\n+\t  || (DECL_INITIAL (parm)\n+\t      && DECL_INITIAL (parm) == DECL_INITIAL (p)))\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n+\n /* DECL is a friend FUNCTION_DECL or TEMPLATE_DECL.  ARGS is the\n    vector of template arguments, as for tsubst.\n "}, {"sha": "d80e3ab7913f2930fcb884856b5a1923af7e7223", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be5295721cf937f31d88f77e7868884e643016b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be5295721cf937f31d88f77e7868884e643016b4", "patch": "@@ -1,8 +1,3 @@\n-2012-01-30  Dodji Seketeli  <dodji@redhat.com>\n-\n-\tPR c++/51641\n-\t* g++.dg/lookup/hidden-class17.C: New test.\n-\n 2012-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/52027"}, {"sha": "3d5ccec39ccd1a1b98af5f1d780c08d3860c1349", "filename": "gcc/testsuite/g++.dg/lookup/hidden-class17.C", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e95d87efb8a7a18a247fdec11369948f8e2b10/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e95d87efb8a7a18a247fdec11369948f8e2b10/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fhidden-class17.C?ref=12e95d87efb8a7a18a247fdec11369948f8e2b10", "patch": "@@ -1,22 +0,0 @@\n-// Origin PR c++/51641\n-// { dg-do compile }\n-\n-struct A {\n-    struct B { typedef int X; };\n-};\n-\n-template<class B> struct C : A {\n-    B::X q; // Ok: A::B.\n-    struct U { typedef int X; };\n-    template<class U>\n-        struct D;\n-};\n-\n-template<class B>\n-template<class U>\n-struct C<B>::D {\n-    typename U::X r; // { dg-error \"\" }\n-};\n-\n-C<int>::D<double> y;\n-"}]}