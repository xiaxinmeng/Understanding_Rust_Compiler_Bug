{"sha": "08dcec6137f763fee843acaca52cd9ac53312eee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhkY2VjNjEzN2Y3NjNmZWU4NDNhY2FjYTUyY2Q5YWM1MzMxMmVlZQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T21:47:49Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T21:47:49Z"}, "message": "trans.h (struct gfc_ss, [...]): Move shape field from the former struct to the latter.\n\n\t* trans.h (struct gfc_ss, struct gfc_array_info): Move shape field\n\tfrom the former struct to the latter.\n\t* trans-array.c (gfc_conv_ss_startstride, gfc_conv_loop_setup):\n\tUpdate field references.\n\t* trans-expr.c (gfc_trans_subarray_assign): Update field references\n\tand factor common reference chains.\n\t* trans-io.c (transfer_array_component): Ditto.\n\nFrom-SVN: r180866", "tree": {"sha": "e26207440ec82de2588a2ccf50680aa8a31331ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e26207440ec82de2588a2ccf50680aa8a31331ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08dcec6137f763fee843acaca52cd9ac53312eee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08dcec6137f763fee843acaca52cd9ac53312eee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08dcec6137f763fee843acaca52cd9ac53312eee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08dcec6137f763fee843acaca52cd9ac53312eee/comments", "author": null, "committer": null, "parents": [{"sha": "cb4b9eaebedead8367a14345e1c866a43b870ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb4b9eaebedead8367a14345e1c866a43b870ed8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb4b9eaebedead8367a14345e1c866a43b870ed8"}], "stats": {"total": 77, "additions": 48, "deletions": 29}, "files": [{"sha": "ff8f4d83c9160b802b976478ac4e63c87c16634f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=08dcec6137f763fee843acaca52cd9ac53312eee", "patch": "@@ -1,3 +1,13 @@\n+2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans.h (struct gfc_ss, struct gfc_array_info): Move shape field\n+\tfrom the former struct to the latter.\n+\t* trans-array.c (gfc_conv_ss_startstride, gfc_conv_loop_setup):\n+\tUpdate field references.\n+\t* trans-expr.c (gfc_trans_subarray_assign): Update field references\n+\tand factor common reference chains.\n+\t* trans-io.c (transfer_array_component): Ditto.\n+\n 2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans.h (struct gfc_array_info): Move dim and dimen fields..."}, {"sha": "277a49e79e94cc77834a369df7845c1e06a2beb1", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=08dcec6137f763fee843acaca52cd9ac53312eee", "patch": "@@ -3302,8 +3302,12 @@ gfc_conv_ss_startstride (gfc_loopinfo * loop)\n   /* Loop over all the SS in the chain.  */\n   for (ss = loop->ss; ss != gfc_ss_terminator; ss = ss->loop_chain)\n     {\n-      if (ss->expr && ss->expr->shape && !ss->shape)\n-\tss->shape = ss->expr->shape;\n+      gfc_array_info *info;\n+\n+      info = &ss->data.info;\n+\n+      if (ss->expr && ss->expr->shape && !info->shape)\n+\tinfo->shape = ss->expr->shape;\n \n       switch (ss->type)\n \t{\n@@ -3891,12 +3895,12 @@ gfc_conv_loop_setup (gfc_loopinfo * loop, locus * where)\n \t      spec_dim = 0;\n \t    }\n \n-\t  if (ss->shape)\n+\t  if (info->shape)\n \t    {\n-\t      gcc_assert (ss->shape[dim]);\n+\t      gcc_assert (info->shape[dim]);\n \t      /* The frontend has worked out the size for us.  */\n \t      if (!loopspec[n]\n-\t\t  || !loopspec[n]->shape\n+\t\t  || !specinfo->shape\n \t\t  || !integer_zerop (specinfo->start[spec_dim]))\n \t\t/* Prefer zero-based descriptors if possible.  */\n \t\tloopspec[n] = ss;\n@@ -3973,7 +3977,7 @@ gfc_conv_loop_setup (gfc_loopinfo * loop, locus * where)\n       dim = loopspec[n]->dim[n];\n \n       /* Set the extents of this range.  */\n-      cshape = loopspec[n]->shape;\n+      cshape = info->shape;\n       if (cshape && INTEGER_CST_P (info->start[dim])\n \t  && INTEGER_CST_P (info->stride[dim]))\n \t{"}, {"sha": "6bc336b0027ae60a31c4d7fca2ccb5d035805dd2", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=08dcec6137f763fee843acaca52cd9ac53312eee", "patch": "@@ -4344,6 +4344,7 @@ gfc_trans_subarray_assign (tree dest, gfc_component * cm, gfc_expr * expr)\n   gfc_se lse;\n   gfc_ss *rss;\n   gfc_ss *lss;\n+  gfc_array_info *lss_array;\n   stmtblock_t body;\n   stmtblock_t block;\n   gfc_loopinfo loop;\n@@ -4367,19 +4368,20 @@ gfc_trans_subarray_assign (tree dest, gfc_component * cm, gfc_expr * expr)\n   /* Create a SS for the destination.  */\n   lss = gfc_get_array_ss (gfc_ss_terminator, NULL, cm->as->rank,\n \t\t\t  GFC_SS_COMPONENT);\n-  lss->shape = gfc_get_shape (cm->as->rank);\n-  lss->data.info.descriptor = dest;\n-  lss->data.info.data = gfc_conv_array_data (dest);\n-  lss->data.info.offset = gfc_conv_array_offset (dest);\n+  lss_array = &lss->data.info;\n+  lss_array->shape = gfc_get_shape (cm->as->rank);\n+  lss_array->descriptor = dest;\n+  lss_array->data = gfc_conv_array_data (dest);\n+  lss_array->offset = gfc_conv_array_offset (dest);\n   for (n = 0; n < cm->as->rank; n++)\n     {\n-      lss->data.info.start[n] = gfc_conv_array_lbound (dest, n);\n-      lss->data.info.stride[n] = gfc_index_one_node;\n+      lss_array->start[n] = gfc_conv_array_lbound (dest, n);\n+      lss_array->stride[n] = gfc_index_one_node;\n \n-      mpz_init (lss->shape[n]);\n-      mpz_sub (lss->shape[n], cm->as->upper[n]->value.integer,\n+      mpz_init (lss_array->shape[n]);\n+      mpz_sub (lss_array->shape[n], cm->as->upper[n]->value.integer,\n \t       cm->as->lower[n]->value.integer);\n-      mpz_add_ui (lss->shape[n], lss->shape[n], 1);\n+      mpz_add_ui (lss_array->shape[n], lss_array->shape[n], 1);\n     }\n   \n   /* Associate the SS with the loop.  */\n@@ -4422,8 +4424,8 @@ gfc_trans_subarray_assign (tree dest, gfc_component * cm, gfc_expr * expr)\n   gfc_add_block_to_block (&block, &loop.pre);\n   gfc_add_block_to_block (&block, &loop.post);\n \n-  gcc_assert (lss->shape != NULL);\n-  gfc_free_shape (&lss->shape, cm->as->rank);\n+  gcc_assert (lss_array->shape != NULL);\n+  gfc_free_shape (&lss_array->shape, cm->as->rank);\n   gfc_cleanup_loop (&loop);\n \n   return gfc_finish_block (&block);"}, {"sha": "a97691eea0c8942659891931635283414dc279f3", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=08dcec6137f763fee843acaca52cd9ac53312eee", "patch": "@@ -1937,6 +1937,7 @@ transfer_array_component (tree expr, gfc_component * cm, locus * where)\n   int n;\n   gfc_ss *ss;\n   gfc_se se;\n+  gfc_array_info *ss_array;\n \n   gfc_start_block (&block);\n   gfc_init_se (&se, NULL);\n@@ -1948,19 +1949,20 @@ transfer_array_component (tree expr, gfc_component * cm, locus * where)\n \n   ss = gfc_get_array_ss (gfc_ss_terminator, NULL, cm->as->rank,\n \t\t\t GFC_SS_COMPONENT);\n-  ss->shape = gfc_get_shape (cm->as->rank);\n-  ss->data.info.descriptor = expr;\n-  ss->data.info.data = gfc_conv_array_data (expr);\n-  ss->data.info.offset = gfc_conv_array_offset (expr);\n+  ss_array = &ss->data.info;\n+  ss_array->shape = gfc_get_shape (cm->as->rank);\n+  ss_array->descriptor = expr;\n+  ss_array->data = gfc_conv_array_data (expr);\n+  ss_array->offset = gfc_conv_array_offset (expr);\n   for (n = 0; n < cm->as->rank; n++)\n     {\n-      ss->data.info.start[n] = gfc_conv_array_lbound (expr, n);\n-      ss->data.info.stride[n] = gfc_index_one_node;\n+      ss_array->start[n] = gfc_conv_array_lbound (expr, n);\n+      ss_array->stride[n] = gfc_index_one_node;\n \n-      mpz_init (ss->shape[n]);\n-      mpz_sub (ss->shape[n], cm->as->upper[n]->value.integer,\n+      mpz_init (ss_array->shape[n]);\n+      mpz_sub (ss_array->shape[n], cm->as->upper[n]->value.integer,\n                cm->as->lower[n]->value.integer);\n-      mpz_add_ui (ss->shape[n], ss->shape[n], 1);\n+      mpz_add_ui (ss_array->shape[n], ss_array->shape[n], 1);\n     }\n \n   /* Once we got ss, we use scalarizer to create the loop.  */\n@@ -1995,8 +1997,8 @@ transfer_array_component (tree expr, gfc_component * cm, locus * where)\n   gfc_add_block_to_block (&block, &loop.pre);\n   gfc_add_block_to_block (&block, &loop.post);\n \n-  gcc_assert (ss->shape != NULL);\n-  gfc_free_shape (&ss->shape, cm->as->rank);\n+  gcc_assert (ss_array->shape != NULL);\n+  gfc_free_shape (&ss_array->shape, cm->as->rank);\n   gfc_cleanup_loop (&loop);\n \n   return gfc_finish_block (&block);"}, {"sha": "daf2499519913c30d69f4407872330dae85fb2fa", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08dcec6137f763fee843acaca52cd9ac53312eee/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=08dcec6137f763fee843acaca52cd9ac53312eee", "patch": "@@ -113,6 +113,8 @@ gfc_coarray_type;\n \n typedef struct gfc_array_info\n {\n+  mpz_t *shape;\n+\n   /* The ref that holds information on this section.  */\n   gfc_ref *ref;\n   /* The descriptor of this array.  */\n@@ -193,7 +195,6 @@ typedef struct gfc_ss\n {\n   gfc_ss_type type;\n   gfc_expr *expr;\n-  mpz_t *shape;\n   tree string_length;\n   union\n   {"}]}