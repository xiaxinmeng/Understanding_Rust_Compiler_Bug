{"sha": "9e6a14a4ee8825697eed6fe29800f2abb16713cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU2YTE0YTRlZTg4MjU2OTdlZWQ2ZmUyOTgwMGYyYWJiMTY3MTNjYg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-09-13T15:47:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-09-13T15:47:41Z"}, "message": "re PR rtl-optimization/37489 (const_true_rtx returned for float compare)\n\ngcc/\n\n2008-09-13  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR rtl-optimization/37489\n\t* cse.c (fold_rtx): Don't return const_true_rtx for float\n\tcompare if FLOAT_STORE_FLAG_VALUE is undefined.\n\ngcc/testsuite/\n\n2008-09-13  Raksit Ashok <raksit@google.com>\n\n\tPR rtl-optimization/37489\n\t* g++.dg/opt/cse3.C: New.\n\nFrom-SVN: r140344", "tree": {"sha": "3b638080cc63b5ea07d5ca5f583ecead6752090c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b638080cc63b5ea07d5ca5f583ecead6752090c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e6a14a4ee8825697eed6fe29800f2abb16713cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6a14a4ee8825697eed6fe29800f2abb16713cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e6a14a4ee8825697eed6fe29800f2abb16713cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6a14a4ee8825697eed6fe29800f2abb16713cb/comments", "author": null, "committer": null, "parents": [{"sha": "2deacb5e8aa068d3ed32892cf7ac050c9e054b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2deacb5e8aa068d3ed32892cf7ac050c9e054b5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2deacb5e8aa068d3ed32892cf7ac050c9e054b5e"}], "stats": {"total": 85, "additions": 80, "deletions": 5}, "files": [{"sha": "73750417c4e8309182f8499431629697a6d3f961", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6a14a4ee8825697eed6fe29800f2abb16713cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6a14a4ee8825697eed6fe29800f2abb16713cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e6a14a4ee8825697eed6fe29800f2abb16713cb", "patch": "@@ -1,3 +1,9 @@\n+2008-09-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR rtl-optimization/37489\n+\t* cse.c (fold_rtx): Don't return const_true_rtx for float\n+\tcompare if FLOAT_STORE_FLAG_VALUE is undefined.\n+\n 2008-09-13  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/37392"}, {"sha": "b911879bf79373bd84de6ac70651704e55a5e190", "filename": "gcc/cse.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6a14a4ee8825697eed6fe29800f2abb16713cb/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6a14a4ee8825697eed6fe29800f2abb16713cb/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=9e6a14a4ee8825697eed6fe29800f2abb16713cb", "patch": "@@ -3214,17 +3214,24 @@ fold_rtx (rtx x, rtx insn)\n       if (const_arg0 == 0 || const_arg1 == 0)\n \t{\n \t  struct table_elt *p0, *p1;\n-\t  rtx true_rtx = const_true_rtx, false_rtx = const0_rtx;\n+\t  rtx true_rtx, false_rtx;\n \t  enum machine_mode mode_arg1;\n \n-#ifdef FLOAT_STORE_FLAG_VALUE\n \t  if (SCALAR_FLOAT_MODE_P (mode))\n \t    {\n+#ifdef FLOAT_STORE_FLAG_VALUE\n \t      true_rtx = (CONST_DOUBLE_FROM_REAL_VALUE\n \t\t\t  (FLOAT_STORE_FLAG_VALUE (mode), mode));\n+#else\n+\t      true_rtx = NULL_RTX;\n+#endif\n \t      false_rtx = CONST0_RTX (mode);\n \t    }\n-#endif\n+\t  else\n+\t    {\n+\t      true_rtx = const_true_rtx;\n+\t      false_rtx = const0_rtx;\n+\t    }\n \n \t  code = find_comparison_args (code, &folded_arg0, &folded_arg1,\n \t\t\t\t       &mode_arg0, &mode_arg1);\n@@ -3332,8 +3339,17 @@ fold_rtx (rtx x, rtx insn)\n \t\t\t\t\t\t  const_arg1))\n \t\t\t      || (REG_P (folded_arg1)\n \t\t\t\t  && (REG_QTY (REGNO (folded_arg1)) == ent->comparison_qty))))\n-\t\t\treturn (comparison_dominates_p (ent->comparison_code, code)\n-\t\t\t\t? true_rtx : false_rtx);\n+\t\t\t{\n+\t\t\t  if (comparison_dominates_p (ent->comparison_code, code))\n+\t\t\t    {\n+\t\t\t      if (true_rtx)\n+\t\t\t\treturn true_rtx;\n+\t\t\t      else\n+\t\t\t\tbreak;\n+\t\t\t    }\n+\t\t\t  else\n+\t\t\t    return false_rtx;\n+\t\t\t}\n \t\t    }\n \t\t}\n \t    }"}, {"sha": "09b1972608757c5063c44336b67ee2487ce5ef5c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6a14a4ee8825697eed6fe29800f2abb16713cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6a14a4ee8825697eed6fe29800f2abb16713cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e6a14a4ee8825697eed6fe29800f2abb16713cb", "patch": "@@ -1,3 +1,8 @@\n+2008-09-13  Raksit Ashok <raksit@google.com>\n+\n+\tPR rtl-optimization/37489\n+\t* g++.dg/opt/cse3.C: New.\n+\n 2008-09-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/37495"}, {"sha": "a63280716807ab7dc2c9a56793b875d732117990", "filename": "gcc/testsuite/g++.dg/opt/cse3.C", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6a14a4ee8825697eed6fe29800f2abb16713cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcse3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6a14a4ee8825697eed6fe29800f2abb16713cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcse3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcse3.C?ref=9e6a14a4ee8825697eed6fe29800f2abb16713cb", "patch": "@@ -0,0 +1,48 @@\n+// This testcase resulted in invalid code generation on x86_64 targets\n+// due to a bug in fold_rtx. For a \"true\" value, fold_rtx represented it\n+// as const_true_rtx in floating-point mode, if the FLOAT_STORE_FLAG_VALUE\n+// macro is not defined.\n+\n+// { dg-do run }\n+// { dg-options \"-O1 -fno-guess-branch-probability -fcse-follow-jumps -fgcse -frerun-cse-after-loop\" }\n+\n+class StatVal {\n+\n+ public:\n+\n+  StatVal(double ev, double va)\n+    : m(ev),\n+      v(va) {}\n+\n+  StatVal(const StatVal& other)\n+    : m(other.m),\n+      v(other.v) {}\n+\n+  StatVal& operator*=(const StatVal& other) {\n+    double A = m == 0 ? 1.0 : v / (m * m);\n+    double B = other.m == 0 ? 1.0 : other.v / (other.m * other.m);\n+    m = m * other.m;\n+    v = m * m * (A + B);\n+    return *this;\n+  }\n+\n+  double m;\n+  double v;\n+};\n+\n+extern \"C\" void abort (void);\n+\n+const StatVal two_dot_three(2, 0.3);\n+\n+int main(int argc, char **argv) {\n+\n+  StatVal product3(two_dot_three);\n+\n+  product3 *= two_dot_three;\n+\n+  if (product3.v > 2.5)\n+  {\n+    abort();\n+  }\n+  return 0;\n+}"}]}