{"sha": "72a3d7c71d19380804659c30babab27015a14c07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJhM2Q3YzcxZDE5MzgwODA0NjU5YzMwYmFiYWIyNzAxNWExNGMwNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T09:28:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T09:28:05Z"}, "message": "[multiple changes]\n\n2009-07-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* rtsfind.ads, exp_dist.adb (RE_Allocate_Buffer): Runtime entry\n\tremoved, not used anymore.\n\t(Exp_Dist.PolyORB_Support.Helpers.Assign_Opaque_From_Any):\n\tNew subprogram, implements copy of an Any value into a limited object.\n\t(Exp_Dist.PolyORB_Support.Build_General_Calling_Stubs,\n\tExp_Dist.PolyORB_Support.Build_Subprogram_Receiving_Stubs,\n\tExp_Dist.PolyORB_Support.Helpers.Build_From_Any_Function): For the case\n\tof parameters of a limited type, use the above new subprogram.\n\n2009-07-13  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-nmsc.adb, prj-proc.adb, mlib.adb (Add_Source): new parameter\n\tLocation.\n\t(Copy_ALI_Files): Avoid calls to read when pointing outside of the\n \tallocated space.\n\t(Error_Report): Remove global variable, replaced by parameters.\n\nFrom-SVN: r149560", "tree": {"sha": "41ba0cda502a543970275f8680cecac1ddb0e6b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41ba0cda502a543970275f8680cecac1ddb0e6b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72a3d7c71d19380804659c30babab27015a14c07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a3d7c71d19380804659c30babab27015a14c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a3d7c71d19380804659c30babab27015a14c07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a3d7c71d19380804659c30babab27015a14c07/comments", "author": null, "committer": null, "parents": [{"sha": "223eab977a61c48f62cb0cbb9c009afefa6f6cbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223eab977a61c48f62cb0cbb9c009afefa6f6cbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/223eab977a61c48f62cb0cbb9c009afefa6f6cbc"}], "stats": {"total": 493, "additions": 289, "deletions": 204}, "files": [{"sha": "0e8ea16380086e799dc74bb4e43609ef516f076f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=72a3d7c71d19380804659c30babab27015a14c07", "patch": "@@ -1,3 +1,22 @@\n+2009-07-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* rtsfind.ads, exp_dist.adb (RE_Allocate_Buffer): Runtime entry\n+\tremoved, not used anymore.\n+\t(Exp_Dist.PolyORB_Support.Helpers.Assign_Opaque_From_Any):\n+\tNew subprogram, implements copy of an Any value into a limited object.\n+\t(Exp_Dist.PolyORB_Support.Build_General_Calling_Stubs,\n+\tExp_Dist.PolyORB_Support.Build_Subprogram_Receiving_Stubs,\n+\tExp_Dist.PolyORB_Support.Helpers.Build_From_Any_Function): For the case\n+\tof parameters of a limited type, use the above new subprogram.\n+\n+2009-07-13  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-nmsc.adb, prj-proc.adb, mlib.adb (Add_Source): new parameter\n+\tLocation.\n+\t(Copy_ALI_Files): Avoid calls to read when pointing outside of the\n+ \tallocated space.\n+\t(Error_Report): Remove global variable, replaced by parameters.\n+\n 2009-07-13  Thomas Quinot  <quinot@adacore.com>\n \n \t* g-socthi-vxworks.adb (C_Sendto): VxWorks does not support the"}, {"sha": "fa4327a5e19fedd92ddc95df9921c9315548b33a", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 179, "deletions": 155, "changes": 334, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=72a3d7c71d19380804659c30babab27015a14c07", "patch": "@@ -863,6 +863,21 @@ package body Exp_Dist is\n          --  for entity E (a distributed object type or operation): one\n          --  containing the name of E, the second containing its repository id.\n \n+         procedure Assign_Opaque_From_Any\n+           (Loc    : Source_Ptr;\n+            Stms   : List_Id;\n+            Typ    : Entity_Id;\n+            N      : Node_Id;\n+            Target : Entity_Id);\n+         --  For a Target object of type Typ, which has opaque representation\n+         --  as a sequence of octets determined by stream attributes (which\n+         --  includes all limited types), append code to Stmts performing the\n+         --  equivalent of:\n+         --    Target := Typ'From_Any (N)\n+\n+         --  or, if Target is Empty:\n+         --    return Typ'From_Any (N)\n+\n       end Helpers;\n \n    end PolyORB_Support;\n@@ -7403,17 +7418,25 @@ package body Exp_Dist is\n                   if Out_Present (Current_Parameter)\n                     and then not Is_Controlling_Formal\n                   then\n-                     Append_To (After_Statements,\n-                       Make_Assignment_Statement (Loc,\n-                         Name =>\n-                           New_Occurrence_Of (\n-                             Defining_Identifier (Current_Parameter), Loc),\n-                           Expression =>\n-                             PolyORB_Support.Helpers.Build_From_Any_Call\n-                               (Etype (Parameter_Type (Current_Parameter)),\n-                                New_Occurrence_Of (Any, Loc),\n-                                Decls)));\n-\n+                     if Is_Limited_Type (Etyp) then\n+                        Helpers.Assign_Opaque_From_Any (Loc,\n+                           Stms   => After_Statements,\n+                           Typ    => Etyp,\n+                           N      => New_Occurrence_Of (Any, Loc),\n+                           Target =>\n+                             Defining_Identifier (Current_Parameter));\n+                     else\n+                        Append_To (After_Statements,\n+                          Make_Assignment_Statement (Loc,\n+                            Name =>\n+                              New_Occurrence_Of (\n+                                Defining_Identifier (Current_Parameter), Loc),\n+                              Expression =>\n+                                PolyORB_Support.Helpers.Build_From_Any_Call\n+                                  (Etyp,\n+                                   New_Occurrence_Of (Any, Loc),\n+                                   Decls)));\n+                     end if;\n                   end if;\n                end;\n             end if;\n@@ -7931,24 +7954,32 @@ package body Exp_Dist is\n                   --  the object declaration and the variable is set using\n                   --  'Input instead of 'Read.\n \n-                  Expr :=\n-                    PolyORB_Support.Helpers.Build_From_Any_Call\n-                      (Etyp, New_Occurrence_Of (Any, Loc), Decls);\n-\n-                  if Constrained then\n-                     Append_To (Statements,\n-                       Make_Assignment_Statement (Loc,\n-                         Name       => New_Occurrence_Of (Object, Loc),\n-                         Expression => Expr));\n-                     Expr := Empty;\n+                  if Constrained and then Is_Limited_Type (Etyp) then\n+                     Helpers.Assign_Opaque_From_Any (Loc,\n+                        Stms   => Statements,\n+                        Typ    => Etyp,\n+                        N      => New_Occurrence_Of (Any, Loc),\n+                        Target => Object);\n \n                   else\n-                     --  Expr will be used to initialize (and constrain) the\n-                     --  parameter when it is declared.\n+                     Expr := Helpers.Build_From_Any_Call\n+                               (Etyp, New_Occurrence_Of (Any, Loc), Decls);\n+\n+                     if Constrained then\n+                        Append_To (Statements,\n+                          Make_Assignment_Statement (Loc,\n+                            Name       => New_Occurrence_Of (Object, Loc),\n+                            Expression => Expr));\n+                        Expr := Empty;\n+\n+                     else\n+                        --  Expr will be used to initialize (and constrain) the\n+                        --  parameter when it is declared.\n+                        null;\n+                     end if;\n \n                      null;\n                   end if;\n-\n                end if;\n \n                Need_Extra_Constrained :=\n@@ -8364,6 +8395,120 @@ package body Exp_Dist is\n             end if;\n          end Append_Record_Traversal;\n \n+         -----------------------------\n+         -- Assign_Opaque_From_Any --\n+         -----------------------------\n+\n+         procedure Assign_Opaque_From_Any\n+           (Loc    : Source_Ptr;\n+            Stms   : List_Id;\n+            Typ    : Entity_Id;\n+            N      : Node_Id;\n+            Target : Entity_Id)\n+         is\n+            Strm : constant Entity_Id :=\n+                     Make_Defining_Identifier (Loc,\n+                       Chars => New_Internal_Name ('S'));\n+            Expr : Node_Id;\n+\n+            Read_Call_List : List_Id;\n+            --  List on which to place the 'Read attribute reference\n+\n+         begin\n+            --  Strm : Buffer_Stream_Type;\n+\n+            Append_To (Stms,\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier => Strm,\n+                Aliased_Present     => True,\n+                Object_Definition   =>\n+                  New_Occurrence_Of (RTE (RE_Buffer_Stream_Type), Loc)));\n+\n+            --  Any_To_BS (Strm, A);\n+\n+            Append_To (Stms,\n+              Make_Procedure_Call_Statement (Loc,\n+                Name => New_Occurrence_Of (RTE (RE_Any_To_BS), Loc),\n+                Parameter_Associations => New_List (\n+                  N,\n+                  New_Occurrence_Of (Strm, Loc))));\n+\n+            if Transmit_As_Unconstrained (Typ) then\n+               Expr :=\n+                 Make_Attribute_Reference (Loc,\n+                   Prefix         => New_Occurrence_Of (Typ, Loc),\n+                   Attribute_Name => Name_Input,\n+                   Expressions    => New_List (\n+                 Make_Attribute_Reference (Loc,\n+                   Prefix         => New_Occurrence_Of (Strm, Loc),\n+                   Attribute_Name => Name_Access)));\n+\n+               if Present (Target) then\n+                  --  Target := Typ'Input (Strm'Access)\n+\n+                  Append_To (Stms,\n+                    Make_Assignment_Statement (Loc,\n+                      Name       => New_Occurrence_Of (Target, Loc),\n+                      Expression => Expr));\n+\n+               else\n+                  --  return Typ'Input (Strm'Access);\n+\n+                  Append_To (Stms,\n+                    Make_Simple_Return_Statement (Loc,\n+                      Expression => Expr));\n+               end if;\n+\n+            else\n+               if Present (Target) then\n+                  Read_Call_List := Stms;\n+                  Expr := New_Occurrence_Of (Target, Loc);\n+\n+               else\n+                  declare\n+                     Temp : constant Entity_Id :=\n+                              Make_Defining_Identifier\n+                                (Loc, New_Internal_Name ('R'));\n+                  begin\n+                     Read_Call_List := New_List;\n+                     Expr := New_Occurrence_Of (Temp, Loc);\n+\n+                     Append_To (Stms, Make_Block_Statement (Loc,\n+                       Declarations               => New_List (\n+                         Make_Object_Declaration (Loc,\n+                           Defining_Identifier =>\n+                             Temp,\n+                           Object_Definition   =>\n+                             New_Occurrence_Of (Typ, Loc))),\n+\n+                       Handled_Statement_Sequence =>\n+                         Make_Handled_Sequence_Of_Statements (Loc,\n+                           Statements => Read_Call_List)));\n+                  end;\n+               end if;\n+\n+               --  Typ'Read (Strm'Access, [Target|Temp])\n+\n+               Append_To (Read_Call_List,\n+                 Make_Attribute_Reference (Loc,\n+                   Prefix         => New_Occurrence_Of (Typ, Loc),\n+                   Attribute_Name => Name_Read,\n+                   Expressions    => New_List (\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix         => New_Occurrence_Of (Strm, Loc),\n+                       Attribute_Name => Name_Access),\n+                     Expr)));\n+\n+               if No (Target) then\n+                  --  return Temp\n+\n+                  Append_To (Read_Call_List,\n+                    Make_Simple_Return_Statement (Loc,\n+                       Expression => New_Copy (Expr)));\n+               end if;\n+            end if;\n+         end Assign_Opaque_From_Any;\n+\n          -------------------------\n          -- Build_From_Any_Call --\n          -------------------------\n@@ -8632,11 +8777,13 @@ package body Exp_Dist is\n                         Rec     : Entity_Id;\n                         Field   : Node_Id)\n                      is\n+                        Ctyp : Entity_Id;\n                      begin\n                         if Nkind (Field) = N_Defining_Identifier then\n-\n                            --  A regular component\n \n+                           Ctyp := Etype (Field);\n+\n                            Append_To (Stmts,\n                              Make_Assignment_Statement (Loc,\n                                Name => Make_Selected_Component (Loc,\n@@ -8646,11 +8793,11 @@ package body Exp_Dist is\n                                    New_Occurrence_Of (Field, Loc)),\n \n                                Expression =>\n-                                 Build_From_Any_Call (Etype (Field),\n+                                 Build_From_Any_Call (Ctyp,\n                                    Build_Get_Aggregate_Element (Loc,\n                                      Any => Any,\n                                      TC  => Build_TypeCode_Call (Loc,\n-                                              Etype (Field), Decls),\n+                                              Ctyp, Decls),\n                                      Idx => Make_Integer_Literal (Loc,\n                                               Counter)),\n                                    Decls)));\n@@ -9102,124 +9249,11 @@ package body Exp_Dist is\n             end if;\n \n             if Use_Opaque_Representation then\n-\n-               --  Default: type is represented as an opaque sequence of bytes\n-\n-               declare\n-                  Strm : constant Entity_Id :=\n-                           Make_Defining_Identifier (Loc,\n-                             Chars => New_Internal_Name ('S'));\n-                  Res  : constant Entity_Id :=\n-                           Make_Defining_Identifier (Loc,\n-                             Chars => New_Internal_Name ('R'));\n-\n-               begin\n-                  --  Strm : Buffer_Stream_Type;\n-\n-                  Append_To (Decls,\n-                    Make_Object_Declaration (Loc,\n-                      Defining_Identifier => Strm,\n-                      Aliased_Present     => True,\n-                      Object_Definition   =>\n-                        New_Occurrence_Of (RTE (RE_Buffer_Stream_Type), Loc)));\n-\n-                  --  Allocate_Buffer (Strm);\n-\n-                  Append_To (Stms,\n-                    Make_Procedure_Call_Statement (Loc,\n-                      Name =>\n-                        New_Occurrence_Of (RTE (RE_Allocate_Buffer), Loc),\n-                      Parameter_Associations => New_List (\n-                        New_Occurrence_Of (Strm, Loc))));\n-\n-                  --  Any_To_BS (Strm, A);\n-\n-                  Append_To (Stms,\n-                    Make_Procedure_Call_Statement (Loc,\n-                      Name => New_Occurrence_Of (RTE (RE_Any_To_BS), Loc),\n-                      Parameter_Associations => New_List (\n-                        New_Occurrence_Of (Any_Parameter, Loc),\n-                        New_Occurrence_Of (Strm, Loc))));\n-\n-                  if Transmit_As_Unconstrained (Typ) then\n-\n-                     --  declare\n-                     --     Res : constant T := T'Input (Strm);\n-                     --  begin\n-                     --     Release_Buffer (Strm);\n-                     --     return Res;\n-                     --  end;\n-\n-                     Append_To (Stms, Make_Block_Statement (Loc,\n-                       Declarations               => New_List (\n-                         Make_Object_Declaration (Loc,\n-                           Defining_Identifier => Res,\n-                           Constant_Present    => True,\n-                           Object_Definition   => New_Occurrence_Of (Typ, Loc),\n-                           Expression          =>\n-                             Make_Attribute_Reference (Loc,\n-                               Prefix         => New_Occurrence_Of (Typ, Loc),\n-                               Attribute_Name => Name_Input,\n-                               Expressions    => New_List (\n-                                 Make_Attribute_Reference (Loc,\n-                                   Prefix         =>\n-                                     New_Occurrence_Of (Strm, Loc),\n-                                   Attribute_Name => Name_Access))))),\n-\n-                       Handled_Statement_Sequence =>\n-                         Make_Handled_Sequence_Of_Statements (Loc,\n-                           Statements => New_List (\n-                             Make_Procedure_Call_Statement (Loc,\n-                               Name                   =>\n-                                 New_Occurrence_Of\n-                                   (RTE (RE_Release_Buffer), Loc),\n-                               Parameter_Associations =>\n-                                 New_List (New_Occurrence_Of (Strm, Loc))),\n-\n-                             Make_Simple_Return_Statement (Loc,\n-                               Expression => New_Occurrence_Of (Res, Loc))))));\n-\n-                  else\n-                     --  declare\n-                     --     Res : T;\n-                     --  begin\n-                     --     T'Read (Strm, Res);\n-                     --     Release_Buffer (Strm);\n-                     --     return Res;\n-                     --  end;\n-\n-                     Append_To (Stms, Make_Block_Statement (Loc,\n-                       Declarations               => New_List (\n-                         Make_Object_Declaration (Loc,\n-                           Defining_Identifier => Res,\n-                           Constant_Present    => False,\n-                           Object_Definition   =>\n-                             New_Occurrence_Of (Typ, Loc))),\n-\n-                       Handled_Statement_Sequence =>\n-                         Make_Handled_Sequence_Of_Statements (Loc,\n-                           Statements => New_List (\n-                             Make_Attribute_Reference (Loc,\n-                               Prefix         => New_Occurrence_Of (Typ, Loc),\n-                               Attribute_Name => Name_Read,\n-                               Expressions    => New_List (\n-                                 Make_Attribute_Reference (Loc,\n-                                   Prefix         =>\n-                                     New_Occurrence_Of (Strm, Loc),\n-                                   Attribute_Name => Name_Access),\n-                                 New_Occurrence_Of (Res, Loc))),\n-\n-                             Make_Procedure_Call_Statement (Loc,\n-                               Name                   =>\n-                                 New_Occurrence_Of\n-                                   (RTE (RE_Release_Buffer), Loc),\n-                               Parameter_Associations =>\n-                                 New_List (New_Occurrence_Of (Strm, Loc))),\n-\n-                             Make_Simple_Return_Statement (Loc,\n-                               Expression => New_Occurrence_Of (Res, Loc))))));\n-                  end if;\n-               end;\n+               Assign_Opaque_From_Any (Loc,\n+                  Stms   => Stms,\n+                  Typ    => Typ,\n+                  N      => New_Occurrence_Of (Any_Parameter, Loc),\n+                  Target => Empty);\n             end if;\n \n             Decl :=\n@@ -10000,16 +10034,6 @@ package body Exp_Dist is\n                       Object_Definition   =>\n                         New_Occurrence_Of (RTE (RE_Buffer_Stream_Type), Loc)));\n \n-                  --  Generate:\n-                  --    Allocate_Buffer (Strm);\n-\n-                  Append_To (Stms,\n-                    Make_Procedure_Call_Statement (Loc,\n-                      Name =>\n-                        New_Occurrence_Of (RTE (RE_Allocate_Buffer), Loc),\n-                      Parameter_Associations => New_List (\n-                        New_Occurrence_Of (Strm, Loc))));\n-\n                   --  Generate:\n                   --    T'Output (Strm'Access, E);\n "}, {"sha": "61fa0d7ada8b0767a59c4f8255d50bfd07fc836c", "filename": "gcc/ada/mlib.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Fmlib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Fmlib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.adb?ref=72a3d7c71d19380804659c30babab27015a14c07", "patch": "@@ -202,16 +202,21 @@ package body MLib is\n                      if FD /= Invalid_FD then\n                         Len := Integer (File_Length (FD));\n \n+                        --  ??? Why \"+3\" here\n+\n                         S := new String (1 .. Len + 3);\n \n                         --  Read the file. Note that the loop is not necessary\n                         --  since the whole file is read at once except on VMS.\n \n-                        Curr := 1;\n-                        Actual_Len := Len;\n+                        Curr := S'First;\n \n-                        while Actual_Len /= 0 loop\n+                        while Curr <= Len loop\n                            Actual_Len := Read (FD, S (Curr)'Address, Len);\n+\n+                           --  Exit if we could not read for some reason\n+                           exit when Actual_Len = 0;\n+\n                            Curr := Curr + Actual_Len;\n                         end loop;\n "}, {"sha": "6fd7b7e6f59ee7ba3b6b2ed1b98cacea48b15aff", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 48, "deletions": 23, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=72a3d7c71d19380804659c30babab27015a14c07", "patch": "@@ -166,12 +166,15 @@ package body Prj.Nmsc is\n       Path                : Path_Information := No_Path_Information;\n       Alternate_Languages : Language_List := null;\n       Unit                : Name_Id   := No_Name;\n-      Index               : Int       := 0);\n+      Index               : Int       := 0;\n+      Location            : Source_Ptr := No_Location);\n    --  Add a new source to the different lists: list of all sources in the\n    --  project tree, list of source of a project and list of sources of a\n    --  language.\n    --\n    --  If Path is specified, the file is also added to Source_Paths_HT.\n+   --\n+   --  Location is used for error messages\n \n    function Canonical_Case_File_Name (Name : Name_Id) return File_Name_Type;\n    --  Same as Osint.Canonical_Case_File_Name but applies to Name_Id.\n@@ -534,7 +537,8 @@ package body Prj.Nmsc is\n       Path                : Path_Information := No_Path_Information;\n       Alternate_Languages : Language_List := null;\n       Unit                : Name_Id   := No_Name;\n-      Index               : Int       := 0)\n+      Index               : Int       := 0;\n+      Location            : Source_Ptr := No_Location)\n    is\n       Config    : constant Language_Config := Lang_Id.Config;\n       UData     : Unit_Index;\n@@ -547,7 +551,6 @@ package body Prj.Nmsc is\n       --  Check if the same file name or unit is used in the prj tree\n \n       Add_Src := True;\n-      Source  := Files_Htable.Get (Data.File_To_Source, File_Name);\n \n       if Unit /= No_Name then\n          Prev_Unit := Units_Htable.Get (Data.Tree.Units_HT, Unit);\n@@ -561,8 +564,12 @@ package body Prj.Nmsc is\n          Add_Src := False;\n          Source := Prev_Unit.File_Names (Kind);\n \n-      elsif Source /= No_Source then\n-         if Source.Index = Index then\n+      else\n+         Source  := Files_Htable.Get (Data.File_To_Source, File_Name);\n+\n+         if Source /= No_Source\n+           and then Source.Index = Index\n+         then\n             Add_Src := False;\n          end if;\n       end if;\n@@ -583,7 +590,7 @@ package body Prj.Nmsc is\n                   Error_Msg_File_1 := File_Name;\n                   Error_Msg\n                     (Project, \"duplicate source file name {\",\n-                     No_Location, Data);\n+                     Location, Data);\n                   Add_Src := False;\n                end if;\n \n@@ -597,7 +604,7 @@ package body Prj.Nmsc is\n                elsif Source.Path.Name /= Path.Name then\n                   Error_Msg_Name_1 := Unit;\n                   Error_Msg\n-                    (Project, \"duplicate unit %%\", No_Location, Data);\n+                    (Project, \"duplicate unit %%\", Location, Data);\n                   Add_Src := False;\n                end if;\n             end if;\n@@ -615,29 +622,34 @@ package body Prj.Nmsc is\n          elsif Prev_Unit /= No_Unit_Index\n            and then not Source.Locally_Removed\n          then\n+            --  Path is set if this is a source we found on the disk, in which\n+            --  case we can provide more explicit error message. Path is unset\n+            --  when the source is added from one of the naming exceptions in\n+            --  the project\n+\n             if Path /= No_Path_Information then\n                Error_Msg_Name_1 := Unit;\n                Error_Msg\n                  (Project,\n                   \"unit %% cannot belong to several projects\",\n-                  No_Location, Data);\n+                  Location, Data);\n \n                Error_Msg_Name_1 := Project.Name;\n                Error_Msg_Name_2 := Name_Id (Path.Name);\n                Error_Msg\n-                 (Project, \"\\  project %%, %%\", No_Location, Data);\n+                 (Project, \"\\  project %%, %%\", Location, Data);\n \n                Error_Msg_Name_1 := Source.Project.Name;\n                Error_Msg_Name_2 := Name_Id (Source.Path.Display_Name);\n                Error_Msg\n-                 (Project, \"\\  project %%, %%\", No_Location, Data);\n+                 (Project, \"\\  project %%, %%\", Location, Data);\n \n             else\n                Error_Msg_Name_1 := Unit;\n                Error_Msg_Name_2 := Source.Project.Name;\n                Error_Msg\n                  (Project, \"unit %% already belongs to project %%\",\n-                  No_Location, Data);\n+                  Location, Data);\n             end if;\n \n             Add_Src := False;\n@@ -650,7 +662,7 @@ package body Prj.Nmsc is\n             Error_Msg_File_2 := File_Name_Type (Source.Project.Name);\n             Error_Msg\n               (Project,\n-               \"{ is already a source of project {\", No_Location, Data);\n+               \"{ is already a source of project {\", Location, Data);\n \n             --  Add the file anyway, to avoid further warnings like \"language\n             --  unknown\"\n@@ -912,6 +924,7 @@ package body Prj.Nmsc is\n                      end loop Source_Loop;\n \n                      if Source = No_Source then\n+\n                         Report_No_Sources\n                           (Project,\n                            Get_Name_String (Language.Display_Name),\n@@ -2907,6 +2920,7 @@ package body Prj.Nmsc is\n                   Display_File => File_Name_Type (Element.Value.Value),\n                   Unit         => Unit,\n                   Index        => Index,\n+                  Location     => Element.Value.Location,\n                   Naming_Exception => True);\n             end if;\n \n@@ -4915,6 +4929,15 @@ package body Prj.Nmsc is\n    --  Start of processing for Error_Msg\n \n    begin\n+      --  Display the error message in the traces so that it appears in the\n+      --  correct location in the traces (otherwise error messages are only\n+      --  displayed at the end and it is difficult to see when they were\n+      --  triggered)\n+\n+      if Current_Verbosity = High then\n+         Write_Line (\"ERROR: \" & Msg);\n+      end if;\n+\n       --  If location of error is unknown, use the location of the project\n \n       if Real_Location = No_Location then\n@@ -6582,9 +6605,7 @@ package body Prj.Nmsc is\n          Data            => Data,\n          For_All_Sources => Sources.Default and then Source_List_File.Default);\n \n-      --  Check if all exceptions have been found. For Ada, it is an error if\n-      --  an exception is not found. For other language, the source is simply\n-      --  removed.\n+      --  Check if all exceptions have been found.\n \n       declare\n          Source : Source_Id;\n@@ -6601,9 +6622,11 @@ package body Prj.Nmsc is\n             then\n                if Source.Unit /= No_Unit_Index then\n \n-                  --  ??? Current limitation of gprbuild will display this\n-                  --  error message for multi-unit source files, because not\n-                  --  all instances of the file have had their path fully set.\n+                  --  For multi-unit source files, source_id gets duplicated\n+                  --  once for every unit. Only the first source_id got its\n+                  --  full path set. So if it isn't set for that first one,\n+                  --  the file wasn't found. Otherwise we need to update for\n+                  --  units after the first one.\n \n                   if Source.Index = 0\n                     or else Source.Index = 1\n@@ -6613,12 +6636,10 @@ package body Prj.Nmsc is\n                      Error_Msg\n                        (Project.Project,\n                         \"source file %% for unit %% not found\",\n-                        No_Location, Data);\n+                        No_Location,\n+                        Data);\n \n                   else\n-                     --  Set the full path information since we know it\n-                     --  anyway\n-\n                      Source.Path := Files_Htable.Get\n                        (Data.File_To_Source, Source.File).Path;\n \n@@ -7374,8 +7395,12 @@ package body Prj.Nmsc is\n                Source := Object_File_Names_Htable.Get\n                  (Project.Object_Files, Src.Object);\n \n+               --  We cannot just check on \"Source /= Src\", since we might have\n+               --  two different entries for the same file (and since that's\n+               --  the same file it is expected that it has the same object)\n+\n                if Source /= No_Source\n-                 and then Source = Src\n+                 and then Source.Path /= Src.Path\n                then\n                   Error_Msg_File_1 := Src.File;\n                   Error_Msg_File_2 := Source.File;"}, {"sha": "6f9897ff0c19fbc24e9157b805ff3d56ac0ccde2", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 35, "deletions": 21, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=72a3d7c71d19380804659c30babab27015a14c07", "patch": "@@ -39,8 +39,6 @@ with GNAT.HTable;\n \n package body Prj.Proc is\n \n-   Error_Report : Put_Line_Access := null;\n-\n    package Processed_Projects is new GNAT.HTable.Simple_HTable\n      (Header_Num => Header_Num,\n       Element    => Project_Id,\n@@ -82,6 +80,7 @@ package body Prj.Proc is\n      (In_Tree                    : Project_Tree_Ref;\n       Project                    : Project_Id;\n       Current_Dir                : String;\n+      Report_Error               : Put_Line_Access;\n       When_No_Sources            : Error_Warning;\n       Require_Sources_Other_Lang : Boolean;\n       Compiler_Driver_Mandatory  : Boolean;\n@@ -107,6 +106,7 @@ package body Prj.Proc is\n    function Expression\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n+      Report_Error           : Put_Line_Access;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Pkg                    : Package_Id;\n@@ -129,6 +129,7 @@ package body Prj.Proc is\n    procedure Process_Declarative_Items\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n+      Report_Error           : Put_Line_Access;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Pkg                    : Package_Id;\n@@ -140,6 +141,7 @@ package body Prj.Proc is\n    procedure Recursive_Process\n      (In_Tree                : Project_Tree_Ref;\n       Project                : out Project_Id;\n+      Report_Error           : Put_Line_Access;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Extended_By            : Project_Id);\n@@ -282,6 +284,7 @@ package body Prj.Proc is\n      (In_Tree                    : Project_Tree_Ref;\n       Project                    : Project_Id;\n       Current_Dir                : String;\n+      Report_Error               : Put_Line_Access;\n       When_No_Sources            : Error_Warning;\n       Require_Sources_Other_Lang : Boolean;\n       Compiler_Driver_Mandatory  : Boolean;\n@@ -304,7 +307,7 @@ package body Prj.Proc is\n          Require_Sources_Other_Lang => Require_Sources_Other_Lang,\n          Compiler_Driver_Mandatory  => Compiler_Driver_Mandatory,\n          When_No_Sources            => When_No_Sources,\n-         Report_Error               => null);\n+         Report_Error               => Report_Error);\n \n       Check_All_Projects (Project, Data, Imported_First => True);\n \n@@ -485,6 +488,7 @@ package body Prj.Proc is\n    function Expression\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n+      Report_Error           : Put_Line_Access;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Pkg                    : Package_Id;\n@@ -588,6 +592,7 @@ package body Prj.Proc is\n                      Value := Expression\n                        (Project                => Project,\n                         In_Tree                => In_Tree,\n+                        Report_Error           => Report_Error,\n                         From_Project_Node      => From_Project_Node,\n                         From_Project_Node_Tree => From_Project_Node_Tree,\n                         Pkg                    => Pkg,\n@@ -637,6 +642,7 @@ package body Prj.Proc is\n                           Expression\n                             (Project                => Project,\n                              In_Tree                => In_Tree,\n+                             Report_Error           => Report_Error,\n                              From_Project_Node      => From_Project_Node,\n                              From_Project_Node_Tree => From_Project_Node_Tree,\n                              Pkg                    => Pkg,\n@@ -1044,6 +1050,7 @@ package body Prj.Proc is\n                      Def_Var := Expression\n                        (Project                => Project,\n                         In_Tree                => In_Tree,\n+                        Report_Error           => Report_Error,\n                         From_Project_Node      => From_Project_Node,\n                         From_Project_Node_Tree => From_Project_Node_Tree,\n                         Pkg                    => Pkg,\n@@ -1061,13 +1068,13 @@ package body Prj.Proc is\n \n                   if Value = No_Name then\n                      if not Quiet_Output then\n-                        if Error_Report = null then\n+                        if Report_Error = null then\n                            Error_Msg\n                              (\"?undefined external reference\",\n                               Location_Of\n                                 (The_Current_Term, From_Project_Node_Tree));\n                         else\n-                           Error_Report\n+                           Report_Error\n                              (\"warning: \"\"\" & Get_Name_String (Name) &\n                               \"\"\" is an undefined external reference\",\n                               Project, In_Tree);\n@@ -1277,6 +1284,7 @@ package body Prj.Proc is\n    procedure Process_Declarative_Items\n      (Project                : Project_Id;\n       In_Tree                : Project_Tree_Ref;\n+      Report_Error           : Put_Line_Access;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Pkg                    : Package_Id;\n@@ -1412,6 +1420,7 @@ package body Prj.Proc is\n                         Process_Declarative_Items\n                           (Project                => Project,\n                            In_Tree                => In_Tree,\n+                           Report_Error           => Report_Error,\n                            From_Project_Node      => From_Project_Node,\n                            From_Project_Node_Tree => From_Project_Node_Tree,\n                            Pkg                    => New_Pkg,\n@@ -1600,13 +1609,13 @@ package body Prj.Proc is\n                      end loop;\n \n                      if Orig_Array = No_Array then\n-                        if Error_Report = null then\n+                        if Report_Error = null then\n                            Error_Msg\n                              (\"associative array value not found\",\n                               Location_Of\n                                 (Current_Item, From_Project_Node_Tree));\n                         else\n-                           Error_Report\n+                           Report_Error\n                              (\"associative array value not found\",\n                               Project, In_Tree);\n                         end if;\n@@ -1712,6 +1721,7 @@ package body Prj.Proc is\n                        Expression\n                          (Project                => Project,\n                           In_Tree                => In_Tree,\n+                          Report_Error           => Report_Error,\n                           From_Project_Node      => From_Project_Node,\n                           From_Project_Node_Tree => From_Project_Node_Tree,\n                           Pkg                    => Pkg,\n@@ -1749,13 +1759,13 @@ package body Prj.Proc is\n                            Error_Msg_Name_1 :=\n                              Name_Of (Current_Item, From_Project_Node_Tree);\n \n-                           if Error_Report = null then\n+                           if Report_Error = null then\n                               Error_Msg\n                                 (\"no value defined for %%\",\n                                  Location_Of\n                                    (Current_Item, From_Project_Node_Tree));\n                            else\n-                              Error_Report\n+                              Report_Error\n                                 (\"no value defined for \" &\n                                  Get_Name_String (Error_Msg_Name_1),\n                                  Project, In_Tree);\n@@ -1794,7 +1804,7 @@ package body Prj.Proc is\n                                    Name_Of\n                                      (Current_Item, From_Project_Node_Tree);\n \n-                                 if Error_Report = null then\n+                                 if Report_Error = null then\n                                     Error_Msg\n                                       (\"value %% is illegal \" &\n                                        \"for typed string %%\",\n@@ -1803,7 +1813,7 @@ package body Prj.Proc is\n                                           From_Project_Node_Tree));\n \n                                  else\n-                                    Error_Report\n+                                    Report_Error\n                                       (\"value \"\"\" &\n                                        Get_Name_String (Error_Msg_Name_1) &\n                                        \"\"\" is illegal for typed string \"\"\" &\n@@ -2246,6 +2256,7 @@ package body Prj.Proc is\n                      Process_Declarative_Items\n                        (Project                => Project,\n                         In_Tree                => In_Tree,\n+                        Report_Error           => Report_Error,\n                         From_Project_Node      => From_Project_Node,\n                         From_Project_Node_Tree => From_Project_Node_Tree,\n                         Pkg                    => Pkg,\n@@ -2280,8 +2291,6 @@ package body Prj.Proc is\n       Reset_Tree             : Boolean := True)\n    is\n    begin\n-      Error_Report := Report_Error;\n-\n       if Reset_Tree then\n \n          --  Make sure there are no projects in the data structure\n@@ -2297,6 +2306,7 @@ package body Prj.Proc is\n       Recursive_Process\n         (Project                => Project,\n          In_Tree                => In_Tree,\n+         Report_Error           => Report_Error,\n          From_Project_Node      => From_Project_Node,\n          From_Project_Node_Tree => From_Project_Node_Tree,\n          Extended_By            => No_Project);\n@@ -2332,12 +2342,12 @@ package body Prj.Proc is\n    --  Start of processing for Process_Project_Tree_Phase_2\n \n    begin\n-      Error_Report := Report_Error;\n-\n       Success := True;\n \n       if Project /= No_Project then\n-         Check (In_Tree, Project, Current_Dir, When_No_Sources,\n+         Check (In_Tree, Project, Current_Dir,\n+                When_No_Sources            => When_No_Sources,\n+                Report_Error               => Report_Error,\n                 Require_Sources_Other_Lang => Require_Sources_Other_Lang,\n                 Compiler_Driver_Mandatory  => Compiler_Driver_Mandatory,\n                 Allow_Duplicate_Basenames  => Allow_Duplicate_Basenames);\n@@ -2390,13 +2400,13 @@ package body Prj.Proc is\n                      if Extending2.Virtual then\n                         Error_Msg_Name_1 := Prj.Project.Display_Name;\n \n-                        if Error_Report = null then\n+                        if Report_Error = null then\n                            Error_Msg\n                              (\"project %% cannot be extended by a virtual\" &\n                               \" project with the same object directory\",\n                               Prj.Project.Location);\n                         else\n-                           Error_Report\n+                           Report_Error\n                              (\"project \"\"\" &\n                               Get_Name_String (Error_Msg_Name_1) &\n                               \"\"\" cannot be extended by a virtual \" &\n@@ -2408,7 +2418,7 @@ package body Prj.Proc is\n                         Error_Msg_Name_1 := Extending2.Display_Name;\n                         Error_Msg_Name_2 := Prj.Project.Display_Name;\n \n-                        if Error_Report = null then\n+                        if Report_Error = null then\n                            Error_Msg\n                              (\"project %% cannot extend project %%\",\n                               Extending2.Location);\n@@ -2417,13 +2427,13 @@ package body Prj.Proc is\n                               Extending2.Location);\n \n                         else\n-                           Error_Report\n+                           Report_Error\n                              (\"project \"\"\" &\n                               Get_Name_String (Error_Msg_Name_1) &\n                               \"\"\" cannot extend project \"\"\" &\n                               Get_Name_String (Error_Msg_Name_2) & \"\"\"\",\n                               Project, In_Tree);\n-                           Error_Report\n+                           Report_Error\n                              (\"they share the same object directory\",\n                               Project, In_Tree);\n                         end if;\n@@ -2471,6 +2481,7 @@ package body Prj.Proc is\n    procedure Recursive_Process\n      (In_Tree                : Project_Tree_Ref;\n       Project                : out Project_Id;\n+      Report_Error           : Put_Line_Access;\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Extended_By            : Project_Id)\n@@ -2511,6 +2522,7 @@ package body Prj.Proc is\n                Recursive_Process\n                  (In_Tree                => In_Tree,\n                   Project                => New_Project,\n+                  Report_Error           => Report_Error,\n                   From_Project_Node      =>\n                     Project_Node_Of\n                       (With_Clause, From_Project_Node_Tree),\n@@ -2652,6 +2664,7 @@ package body Prj.Proc is\n             Recursive_Process\n               (In_Tree                => In_Tree,\n                Project                => Project.Extends,\n+               Report_Error           => Report_Error,\n                From_Project_Node      => Extended_Project_Of\n                                           (Declaration_Node,\n                                            From_Project_Node_Tree),\n@@ -2661,6 +2674,7 @@ package body Prj.Proc is\n             Process_Declarative_Items\n               (Project                => Project,\n                In_Tree                => In_Tree,\n+               Report_Error           => Report_Error,\n                From_Project_Node      => From_Project_Node,\n                From_Project_Node_Tree => From_Project_Node_Tree,\n                Pkg                    => No_Package,"}, {"sha": "2276e80d7ab7b1fda020a5d3c7478d9a9cae8b1e", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a3d7c71d19380804659c30babab27015a14c07/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=72a3d7c71d19380804659c30babab27015a14c07", "patch": "@@ -1193,7 +1193,6 @@ package Rtsfind is\n      RE_Get_Reference,                   -- System.Partition_Interface\n      RE_Asynchronous_P_To_Sync_Scope,    -- System.Partition_Interface\n      RE_Buffer_Stream_Type,              -- System.Partition_Interface\n-     RE_Allocate_Buffer,                 -- System.Partition_Interface\n      RE_Release_Buffer,                  -- System.Partition_Interface\n      RE_BS_To_Any,                       -- System.Partition_Interface\n      RE_Any_To_BS,                       -- System.Partition_Interface\n@@ -2350,7 +2349,6 @@ package Rtsfind is\n      RE_Get_Reference                    => System_Partition_Interface,\n      RE_Asynchronous_P_To_Sync_Scope     => System_Partition_Interface,\n      RE_Buffer_Stream_Type               => System_Partition_Interface,\n-     RE_Allocate_Buffer                  => System_Partition_Interface,\n      RE_Release_Buffer                   => System_Partition_Interface,\n      RE_BS_To_Any                        => System_Partition_Interface,\n      RE_Any_To_BS                        => System_Partition_Interface,"}]}