{"sha": "dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzZmJkOTMzZGFiZDIwYzMxZTI5M2IwZTBjZDA3MTRmYzlhNTZjZQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-06-13T15:55:10Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-06-13T15:55:10Z"}, "message": "s390.h (TARGET_CPU_CPP_BUILTINS): New macro.\n\n\t* config/s390/s390.h (TARGET_CPU_CPP_BUILTINS): New macro.\n\t* config/s390/linux.h (TARGET_OS_CPP_BUILTINS): New macro.\n\t(CPP_PREDEFINES, CPP_SPEC, CPP_ARCH31_SPEC, CPP_ARCH64_SPEC): Remove.\n\t(EXTRA_SPECS): Remove cpp_arch31 and cpp_arch64.\n\nFrom-SVN: r54586", "tree": {"sha": "c8790d76ab98342fcb1cfd5627124ac0178bae4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8790d76ab98342fcb1cfd5627124ac0178bae4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce/comments", "author": null, "committer": null, "parents": [{"sha": "0d0f605c7216d03116aea77a93975d41e4a35cd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0f605c7216d03116aea77a93975d41e4a35cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0f605c7216d03116aea77a93975d41e4a35cd1"}], "stats": {"total": 50, "additions": 34, "deletions": 16}, "files": [{"sha": "2fffb4223e1dcfc9cd873e124d40a1d3336129e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce", "patch": "@@ -1,3 +1,10 @@\n+2002-06-13  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.h (TARGET_CPU_CPP_BUILTINS): New macro.\n+\t* config/s390/linux.h (TARGET_OS_CPP_BUILTINS): New macro.\n+\t(CPP_PREDEFINES, CPP_SPEC, CPP_ARCH31_SPEC, CPP_ARCH64_SPEC): Remove.\n+\t(EXTRA_SPECS): Remove cpp_arch31 and cpp_arch64.\n+\n 2002-06-13  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* tree-inline.c (expand_call_inline): Don' mess with _DECL\n@@ -293,8 +300,6 @@ Wed Jun 12 01:50:28 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* config/xtensa/t-xtensa (LIBGCC1_TEST, CROSS_LIBGCC1): Delete.\n \n-2002-06-11  Ulrich Weigand  <uweigand@de.ibm.com>\n-\n \t* config/s390/s390.c (emit_prologue): gen_store_multiple\n \treturns an insn now, not a pattern.\n "}, {"sha": "50884653b8b64df3b590f3351e294c01900b7854", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce", "patch": "@@ -50,19 +50,23 @@ Boston, MA 02111-1307, USA.  */\n \n /* Target specific preprocessor settings.  */\n \n-#define CPP_PREDEFINES \\\n-  \"-Dunix -Asystem(unix) -D__gnu_linux__ -Dlinux -Asystem(linux) -D__ELF__ \\\n-   -Acpu(s390) -Amachine(s390) -D__s390__\"\n+#define TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define_std (\"linux\");\t\t\\\n+      builtin_define_std (\"unix\");\t\t\\\n+      builtin_assert (\"system=linux\");\t\t\\\n+      builtin_assert (\"system=unix\");\t\t\\\n+      builtin_define (\"__ELF__\");\t\t\\\n+      builtin_define (\"__gnu_linux__\");\t\t\\\n+      if (flag_pic)\t\t\t\t\\\n+        {\t\t\t\t\t\\\n+          builtin_define (\"__PIC__\");\t\t\\\n+          builtin_define (\"__pic__\");\t\t\\\n+        }\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n-#define CPP_ARCH31_SPEC \"\"\n-#define CPP_ARCH64_SPEC \"-D__s390x__\"\n-\n-#undef  CPP_SPEC\n-#ifdef DEFAULT_TARGET_64BIT\n-#define CPP_SPEC \"%{!m31:%(cpp_arch64)}\"\n-#else\n-#define CPP_SPEC \"%{m64:%(cpp_arch64)}\"\n-#endif\n \n /* Target specific compiler settings.  */\n \n@@ -118,8 +122,6 @@ Boston, MA 02111-1307, USA.  */\n    is an initializer with a subgrouping for each command option.  */\n \n #define EXTRA_SPECS \\\n-  { \"cpp_arch31\",\tCPP_ARCH31_SPEC },\t\\\n-  { \"cpp_arch64\",\tCPP_ARCH64_SPEC },\t\\\n   { \"link_arch31\",\tLINK_ARCH31_SPEC },\t\\\n   { \"link_arch64\",\tLINK_ARCH64_SPEC },\t\\\n "}, {"sha": "676a57d42142558dfbd24055e711db19279b2418", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=dd3fbd933dabd20c31e293b0e0cd0714fc9a56ce", "patch": "@@ -77,6 +77,17 @@ extern int target_flags;\n    been parsed.  */\n #define OVERRIDE_OPTIONS override_options ()\n \n+/* Target CPU builtins.  */\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      builtin_assert (\"cpu=s390\");\t\t\t\\\n+      builtin_assert (\"machine=s390\");\t\t\t\\\n+      builtin_define (\"__s390__\");\t\t\t\\\n+      if (TARGET_64BIT)\t\t\t\t\t\\\n+        builtin_define (\"__s390x__\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* Defines for real.c.  */\n #define IEEE_FLOAT 1"}]}