{"sha": "042136883328d54f5afdd0b9a3d2a01eedcc57ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQyMTM2ODgzMzI4ZDU0ZjVhZmRkMGI5YTNkMmEwMWVlZGNjNTdjYQ==", "commit": {"author": {"name": "Rekha Bhintade", "email": "rekhad@kpitcummins.com", "date": "2003-05-22T12:20:53Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-05-22T12:20:53Z"}, "message": "sh.h (TARGET_SWITCHES): Display all the target switches when --target-help option is specified.\n\n2003-05-22 Rekha Bhintade <rekhad@kpitcummins.com>\n\n\t* gcc/config/sh/sh.h (TARGET_SWITCHES): Display all the target\n\tswitches when --target-help option is specified.\n\nFrom-SVN: r67087", "tree": {"sha": "0025e2f06e3f10650d71f8fa37729aa30df9055b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0025e2f06e3f10650d71f8fa37729aa30df9055b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/042136883328d54f5afdd0b9a3d2a01eedcc57ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042136883328d54f5afdd0b9a3d2a01eedcc57ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042136883328d54f5afdd0b9a3d2a01eedcc57ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042136883328d54f5afdd0b9a3d2a01eedcc57ca/comments", "author": null, "committer": null, "parents": [{"sha": "fdbf04c8f421d56c8ee38b042e7cc9ccb8c6c6d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdbf04c8f421d56c8ee38b042e7cc9ccb8c6c6d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdbf04c8f421d56c8ee38b042e7cc9ccb8c6c6d4"}], "stats": {"total": 45, "additions": 25, "deletions": 20}, "files": [{"sha": "9696910053d60d9a2042632dc79c38a2054886eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042136883328d54f5afdd0b9a3d2a01eedcc57ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042136883328d54f5afdd0b9a3d2a01eedcc57ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=042136883328d54f5afdd0b9a3d2a01eedcc57ca", "patch": "@@ -1,3 +1,8 @@\n+2003-05-22 Rekha Bhintade <rekhad@kpitcummins.com>\n+\n+\t* gcc/config/sh/sh.h (TARGET_SWITCHES): Display all the target\n+\tswitches when --target-help option is specified. \n+\n 2003-05-22  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR bootstrap/10805"}, {"sha": "715365bef46aecfe9d731d62dc5c17d00095a43c", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/042136883328d54f5afdd0b9a3d2a01eedcc57ca/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/042136883328d54f5afdd0b9a3d2a01eedcc57ca/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=042136883328d54f5afdd0b9a3d2a01eedcc57ca", "patch": "@@ -279,23 +279,23 @@ extern int target_flags;\n \n #define TARGET_SWITCHES  \t\t\t\\\n { {\"1\",\t        TARGET_NONE, \"\" },\t\t\\\n-  {\"1\",\t        SELECT_SH1, \"\" },\t\t\\\n+  {\"1\",\t        SELECT_SH1, \"Generate SH1 code\" },\t\t\\\n   {\"2\",\t        TARGET_NONE, \"\" },\t\t\\\n-  {\"2\",\t        SELECT_SH2, \"\" },\t\t\\\n+  {\"2\",\t        SELECT_SH2, \"Generate SH2 code\" },\t\t\\\n   {\"2e\",        TARGET_NONE, \"\" },\t\t\\\n-  {\"2e\",        SELECT_SH2E, \"\" },\t\t\\\n+  {\"2e\",        SELECT_SH2E, \"Generate SH2e code\" },\t\t\\\n   {\"3\",\t        TARGET_NONE, \"\" },\t\t\\\n-  {\"3\",\t        SELECT_SH3, \"\" },\t\t\\\n+  {\"3\",\t        SELECT_SH3, \"Generate SH3 code\" },\t\t\\\n   {\"3e\",\tTARGET_NONE, \"\" },\t\t\\\n-  {\"3e\",\tSELECT_SH3E, \"\" },\t\t\\\n+  {\"3e\",\tSELECT_SH3E, \"Generate SH3e code\" },\t\t\\\n   {\"4-single-only\",\tTARGET_NONE, \"\" },\t\\\n-  {\"4-single-only\",\tSELECT_SH4_SINGLE_ONLY, \"\" },\t\\\n+  {\"4-single-only\",\tSELECT_SH4_SINGLE_ONLY, \"Generate only single-precision SH4 code\" },\t\\\n   {\"4-single\",\tTARGET_NONE, \"\" },\t\t\\\n-  {\"4-single\",\tSELECT_SH4_SINGLE, \"\" },\t\\\n+  {\"4-single\",\tSELECT_SH4_SINGLE, \"Generate default single-precision SH4 code\" },\t\\\n   {\"4-nofpu\",\tTARGET_NONE, \"\" },\t\t\\\n-  {\"4-nofpu\",\tSELECT_SH4_NOFPU, \"\" },\t\t\\\n+  {\"4-nofpu\",\tSELECT_SH4_NOFPU, \"Generate SH4 FPU-less code\" },\t\t\\\n   {\"4\",\t        TARGET_NONE, \"\" },\t\t\\\n-  {\"4\",\t        SELECT_SH4, \"\" }, \t\t\\\n+  {\"4\",\t        SELECT_SH4, \"Generate SH4 code\" }, \t\t\\\n   {\"5-64media\",\tTARGET_NONE, \"\" },\t\t\\\n   {\"5-64media\", SELECT_SH5_64, \"Generate 64-bit SHmedia code\" }, \\\n   {\"5-64media-nofpu\", TARGET_NONE, \"\" },\t\\\n@@ -308,21 +308,21 @@ extern int target_flags;\n   {\"5-compact\",\tSELECT_SH5_COMPACT, \"Generate SHcompact code\" }, \\\n   {\"5-compact-nofpu\", TARGET_NONE, \"\" },\t\\\n   {\"5-compact-nofpu\", SELECT_SH5_COMPACT_NOFPU, \"Generate FPU-less SHcompact code\" }, \\\n-  {\"b\",\t\t-LITTLE_ENDIAN_BIT, \"\" },  \t\\\n-  {\"bigtable\", \tBIGTABLE_BIT, \"\" },\t\t\\\n-  {\"dalign\",  \tDALIGN_BIT, \"\" },\t\t\\\n+  {\"b\",\t\t-LITTLE_ENDIAN_BIT, \"Generate code in big endian mode\" },  \t\\\n+  {\"bigtable\", \tBIGTABLE_BIT, \"Generate 32-bit offsets in switch tables\" },\t\t\\\n+  {\"dalign\",  \tDALIGN_BIT, \"Aligns doubles at 64-bit boundaries\" },\t\t\\\n   {\"fmovd\",  \tFMOVD_BIT, \"\" },\t\t\\\n-  {\"hitachi\",\tHITACHI_BIT, \"\" },\t\t\\\n-  {\"nomacsave\", NOMACSAVE_BIT, \"\" },\t\t\\\n-  {\"ieee\",  \tIEEE_BIT, \"\" },\t\t\t\\\n+  {\"hitachi\",\tHITACHI_BIT, \"Follow Renesas (formerly Hitachi) / SuperH calling conventions\" },\t\t\\\n+  {\"nomacsave\", NOMACSAVE_BIT, \"Mark MAC register as call-clobbered\" },\t\t\\\n+  {\"ieee\",  \tIEEE_BIT, \"Increase the IEEE compliance for floating-point code\" },\t\t\t\\\n   {\"isize\", \tISIZE_BIT, \"\" },\t\t\\\n-  {\"l\",\t\tLITTLE_ENDIAN_BIT, \"\" },  \t\\\n+  {\"l\",\t\tLITTLE_ENDIAN_BIT, \"Generate code in little endian mode\" },  \t\\\n   {\"no-ieee\",  \t-IEEE_BIT, \"\" },\t\t\\\n   {\"padstruct\", PADSTRUCT_BIT, \"\" },    \t\\\n-  {\"prefergot\",\tPREFERGOT_BIT, \"\" },\t\t\\\n-  {\"relax\",\tRELAX_BIT, \"\" },\t\t\\\n-  {\"space\", \tSPACE_BIT, \"\" },\t\t\\\n-  {\"usermode\",\tUSERMODE_BIT, \"\" },\t\t\\\n+  {\"prefergot\",\tPREFERGOT_BIT, \"Emit function-calls using global offset table when generating PIC\" },\t\t\\\n+  {\"relax\",\tRELAX_BIT, \"Shorten address references during linking\" },\t\t\\\n+  {\"space\", \tSPACE_BIT, \"Deprecated. Use -Os instead\" },\t\t\\\n+  {\"usermode\",\tUSERMODE_BIT, \"Generate library function call to invalidate instruction cache entries after fixing trampoline\" },\t\t\\\n   SUBTARGET_SWITCHES                            \\\n   {\"\",   \tTARGET_DEFAULT, \"\" } \t\t\\\n }"}]}