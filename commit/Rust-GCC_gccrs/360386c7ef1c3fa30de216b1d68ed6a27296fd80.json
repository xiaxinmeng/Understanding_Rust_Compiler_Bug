{"sha": "360386c7ef1c3fa30de216b1d68ed6a27296fd80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYwMzg2YzdlZjFjM2ZhMzBkZTIxNmIxZDY4ZWQ2YTI3Mjk2ZmQ4MA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-11-03T15:58:43Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-03T15:58:43Z"}, "message": "ipa-fnsummary.c (inline_read_section): Set vector size ahead of time.\n\n\t* ipa-fnsummary.c (inline_read_section): Set vector size\n\tahead of time.\n\nFrom-SVN: r277756", "tree": {"sha": "014d93005b447904b623d66fca1e1d6e0076356c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/014d93005b447904b623d66fca1e1d6e0076356c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/360386c7ef1c3fa30de216b1d68ed6a27296fd80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360386c7ef1c3fa30de216b1d68ed6a27296fd80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/360386c7ef1c3fa30de216b1d68ed6a27296fd80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360386c7ef1c3fa30de216b1d68ed6a27296fd80/comments", "author": null, "committer": null, "parents": [{"sha": "1532500ecbe8dbf59bef498e46b447b3a6b0fa65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1532500ecbe8dbf59bef498e46b447b3a6b0fa65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1532500ecbe8dbf59bef498e46b447b3a6b0fa65"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "c249890731442f0c625bf251cc6bb61ab41be474", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360386c7ef1c3fa30de216b1d68ed6a27296fd80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360386c7ef1c3fa30de216b1d68ed6a27296fd80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=360386c7ef1c3fa30de216b1d68ed6a27296fd80", "patch": "@@ -1,3 +1,8 @@\n+2019-11-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-fnsummary.c (inline_read_section): Set vector size\n+\tahead of time.\n+\n 2019-11-02  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-fnsummary.c (ipa_call_context): New constructor."}, {"sha": "96b50cc445f6258699723a19ea033d7cce489cfc", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/360386c7ef1c3fa30de216b1d68ed6a27296fd80/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/360386c7ef1c3fa30de216b1d68ed6a27296fd80/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=360386c7ef1c3fa30de216b1d68ed6a27296fd80", "patch": "@@ -3638,6 +3638,8 @@ inline_read_section (struct lto_file_decl_data *file_data, const char *data,\n \n       count2 = streamer_read_uhwi (&ib);\n       gcc_assert (!info || !info->conds);\n+      if (info)\n+        vec_safe_reserve_exact (info->conds, count2);\n       for (j = 0; j < count2; j++)\n \t{\n \t  struct condition c;\n@@ -3651,8 +3653,10 @@ inline_read_section (struct lto_file_decl_data *file_data, const char *data,\n \t  c.by_ref = bp_unpack_value (&bp, 1);\n \t  if (c.agg_contents)\n \t    c.offset = streamer_read_uhwi (&ib);\n-\t  c.param_ops = NULL;\n \t  count3 = streamer_read_uhwi (&ib);\n+\t  c.param_ops = NULL;\n+\t  if (info)\n+\t    vec_safe_reserve_exact (c.param_ops, count3);\n \t  for (k = 0; k < count3; k++)\n \t    {\n \t      struct expr_eval_op op;\n@@ -3682,13 +3686,16 @@ inline_read_section (struct lto_file_decl_data *file_data, const char *data,\n \t\t  fatal_error (UNKNOWN_LOCATION,\n \t\t\t       \"invalid fnsummary in LTO stream\");\n \t\t}\n-\t      vec_safe_push (c.param_ops, op);\n+\t      if (info)\n+\t        c.param_ops->quick_push (op);\n \t    }\n \t  if (info)\n-\t    vec_safe_push (info->conds, c);\n+\t    info->conds->quick_push (c);\n \t}\n       count2 = streamer_read_uhwi (&ib);\n       gcc_assert (!info || !info->size_time_table);\n+      if (info && count2)\n+        vec_safe_reserve_exact (info->size_time_table, count2);\n       for (j = 0; j < count2; j++)\n \t{\n \t  class size_time_entry e;\n@@ -3699,7 +3706,7 @@ inline_read_section (struct lto_file_decl_data *file_data, const char *data,\n \t  e.nonconst_predicate.stream_in (&ib);\n \n \t  if (info)\n-\t    vec_safe_push (info->size_time_table, e);\n+\t    info->size_time_table->quick_push (e);\n \t}\n \n       p.stream_in (&ib);"}]}