{"sha": "4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI3MWNkNmVkMmFjYzQ1ZjJiMThkZWUzOGM1ZjkxZDdhNWQ1ZDkwYw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1994-06-15T02:44:18Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1994-06-15T02:44:18Z"}, "message": "Support 32x32->64 bit multiply\n\nFrom-SVN: r7480", "tree": {"sha": "95cbc2f145a6c5f24c429d554b47c0560520839a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95cbc2f145a6c5f24c429d554b47c0560520839a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c/comments", "author": null, "committer": null, "parents": [{"sha": "1ecba59dce5a2fa45bf77a8b2370536e313b5e1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ecba59dce5a2fa45bf77a8b2370536e313b5e1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ecba59dce5a2fa45bf77a8b2370536e313b5e1a"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "7c6058303d0a72fc75e4f4c806ba1ff225aea5d5", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c", "patch": "@@ -410,6 +410,7 @@ enum reg_class\n {\n   NO_REGS,\n   AREG, DREG, CREG, BREG,\n+  AD_REGS,\t\t\t/* %eax/%edx for DImode */\n   Q_REGS,\t\t\t/* %eax %ebx %ecx %edx */\n   SIREG, DIREG,\n   INDEX_REGS,\t\t\t/* %eax %ebx %ecx %edx %esi %edi %ebp */\n@@ -428,6 +429,7 @@ enum reg_class\n #define REG_CLASS_NAMES \\\n {  \"NO_REGS\",\t\t\t\t\\\n    \"AREG\", \"DREG\", \"CREG\", \"BREG\",\t\\\n+   \"AD_REGS\",\t\t\t\t\\\n    \"Q_REGS\",\t\t\t\t\\\n    \"SIREG\", \"DIREG\",\t\t\t\\\n    \"INDEX_REGS\",\t\t\t\\\n@@ -443,6 +445,7 @@ enum reg_class\n #define REG_CLASS_CONTENTS \\\n {      0,\t\t\t\t\t\t\t\\\n      0x1,    0x2,  0x4,\t 0x8,\t/* AREG, DREG, CREG, BREG */\t\\\n+     0x3,\t\t\t/* AD_REGS */\t\t\t\\\n      0xf,\t\t\t/* Q_REGS */\t\t\t\\\n     0x10,   0x20,\t\t/* SIREG, DIREG */\t\t\\\n  0x1007f,\t\t\t/* INDEX_REGS */\t\t\\\n@@ -514,6 +517,7 @@ extern enum reg_class regclass_map[FIRST_PSEUDO_REGISTER];\n    (C) == 'b' ? BREG :\t\t\t\t\t\t\\\n    (C) == 'c' ? CREG :\t\t\t\t\t\t\\\n    (C) == 'd' ? DREG :\t\t\t\t\t\t\\\n+   (C) == 'A' ? AD_REGS :\t\t\t\t\t\\\n    (C) == 'D' ? DIREG :\t\t\t\t\t\t\\\n    (C) == 'S' ? SIREG : NO_REGS)\n "}, {"sha": "3e43fb0dea03104014a6f7856b86392962fd999b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4b71cd6ed2acc45f2b18dee38c5f91d7a5d5d90c", "patch": "@@ -2343,15 +2343,34 @@\n   return AS3 (imul%L0,%2,%1,%0);\n }\")\n \n-(define_insn \"\"\n+(define_insn \"umulqihi3\"\n   [(set (match_operand:HI 0 \"general_operand\" \"=a\")\n-\t(mult:HI (zero_extend:HI\n-\t\t  (match_operand:QI 1 \"nonimmediate_operand\" \"%0\"))\n-\t\t (zero_extend:HI\n-\t\t  (match_operand:QI 2 \"nonimmediate_operand\" \"qm\"))))]\n+\t(mult:HI (zero_extend:HI (match_operand:QI 1 \"nonimmediate_operand\" \"%0\"))\n+\t\t (zero_extend:HI (match_operand:QI 2 \"nonimmediate_operand\" \"qm\"))))]\n   \"\"\n   \"mul%B0 %2\")\n \n+(define_insn \"mulqihi3\"\n+  [(set (match_operand:HI 0 \"general_operand\" \"=a\")\n+\t(mult:HI (sign_extend:HI (match_operand:QI 1 \"nonimmediate_operand\" \"%0\"))\n+\t\t (sign_extend:HI (match_operand:QI 2 \"nonimmediate_operand\" \"qm\"))))]\n+  \"\"\n+  \"imul%B0 %2\")\n+\n+(define_insn \"umulsidi3\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=A\")\n+\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"%0\"))\n+\t\t (zero_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"rm\"))))]\n+  \"\"\n+  \"mul%L0 %2\")\n+\n+(define_insn \"mulsidi3\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=A\")\n+\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"%0\"))\n+\t\t (sign_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"rm\"))))]\n+  \"\"\n+  \"imul%L0 %2\")\n+\n ;; The patterns that match these are at the end of this file.\n \n (define_expand \"mulxf3\""}]}