{"sha": "12802c2b3dfcb02d1a44be26c595643674583b20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI4MDJjMmIzZGZjYjAyZDFhNDRiZTI2YzU5NTY0MzY3NDU4M2IyMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-03-29T13:14:06Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-03-29T13:14:06Z"}, "message": "bitmap.c (bitmap_last_set_bit): New function.\n\n\t* bitmap.c (bitmap_last_set_bit): New function.\n\t* bitmap.h (bitmap_last_set_bit): Declare.\n\nFrom-SVN: r145229", "tree": {"sha": "072f44d469a43191757dd46dd5ac39024fd01fdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/072f44d469a43191757dd46dd5ac39024fd01fdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12802c2b3dfcb02d1a44be26c595643674583b20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12802c2b3dfcb02d1a44be26c595643674583b20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12802c2b3dfcb02d1a44be26c595643674583b20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12802c2b3dfcb02d1a44be26c595643674583b20/comments", "author": null, "committer": null, "parents": [{"sha": "4ea80a418fb9c977a460b803842c3ba744813a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea80a418fb9c977a460b803842c3ba744813a11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ea80a418fb9c977a460b803842c3ba744813a11"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "64577280cf6638dd91d0f81db7bbd888243683c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12802c2b3dfcb02d1a44be26c595643674583b20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12802c2b3dfcb02d1a44be26c595643674583b20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12802c2b3dfcb02d1a44be26c595643674583b20", "patch": "@@ -1,3 +1,8 @@\n+2009-03-29  Jan Hubicka  <jh@suse.cz>\n+\n+\t* bitmap.c (bitmap_last_set_bit): New function.\n+\t* bitmap.h (bitmap_last_set_bit): Declare.\n+\n 2009-03-29  David Ayers  <ayers@fsfe.org>\n \n \tPR objc/27377"}, {"sha": "6230adbc029607cbefbe50bf3129d6f78b725b5b", "filename": "gcc/bitmap.c", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12802c2b3dfcb02d1a44be26c595643674583b20/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12802c2b3dfcb02d1a44be26c595643674583b20/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=12802c2b3dfcb02d1a44be26c595643674583b20", "patch": "@@ -806,6 +806,59 @@ bitmap_first_set_bit (const_bitmap a)\n #endif\n  return bit_no;\n }\n+\n+/* Return the bit number of the first set bit in the bitmap.  The\n+   bitmap must be non-empty.  */\n+\n+unsigned\n+bitmap_last_set_bit (const_bitmap a)\n+{\n+  const bitmap_element *elt = a->current ? a->current : a->first;\n+  unsigned bit_no;\n+  BITMAP_WORD word;\n+  int ix;\n+\n+  gcc_assert (elt);\n+  while (elt->next)\n+    elt = elt->next;\n+  bit_no = elt->indx * BITMAP_ELEMENT_ALL_BITS;\n+  for (ix = BITMAP_ELEMENT_WORDS - 1; ix >= 0; ix--)\n+    {\n+      word = elt->bits[ix];\n+      if (word)\n+\tgoto found_bit;\n+    }\n+  gcc_unreachable ();\n+ found_bit:\n+  bit_no += ix * BITMAP_WORD_BITS;\n+\n+  /* Binary search for the last set bit.  */\n+#if GCC_VERSION >= 3004\n+  gcc_assert (sizeof(long) == sizeof (word));\n+  bit_no += sizeof (long) * 8 - __builtin_ctzl (word);\n+#else\n+#if BITMAP_WORD_BITS > 64\n+#error \"Fill out the table.\"\n+#endif\n+#if BITMAP_WORD_BITS > 32\n+  if ((word & 0xffffffff00000000))\n+    word >>= 32, bit_no += 32;\n+#endif\n+  if (word & 0xffff0000)\n+    word >>= 16, bit_no += 16;\n+  if (!(word & 0xff00))\n+    word >>= 8, bit_no += 8;\n+  if (!(word & 0xf0))\n+    word >>= 4, bit_no += 4;\n+  if (!(word & 12))\n+    word >>= 2, bit_no += 2;\n+  if (!(word & 2))\n+    word >>= 1, bit_no += 1;\n+#endif\n+\n+ gcc_assert (word & 1);\n+ return bit_no;\n+}\n \f\n \n /* DST = A & B.  */"}, {"sha": "99cf752f6861c4758aada6b01d6931b5bfcc437c", "filename": "gcc/bitmap.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12802c2b3dfcb02d1a44be26c595643674583b20/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12802c2b3dfcb02d1a44be26c595643674583b20/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=12802c2b3dfcb02d1a44be26c595643674583b20", "patch": "@@ -183,6 +183,7 @@ extern void bitmap_obstack_free (bitmap);\n #define dump_bitmap(file, bitmap) bitmap_print (file, bitmap, \"\", \"\\n\")\n #define bitmap_zero(a) bitmap_clear (a)\n extern unsigned bitmap_first_set_bit (const_bitmap);\n+extern unsigned bitmap_last_set_bit (const_bitmap);\n \n /* Compute bitmap hash (for purposes of hashing etc.)  */\n extern hashval_t bitmap_hash(const_bitmap);"}]}