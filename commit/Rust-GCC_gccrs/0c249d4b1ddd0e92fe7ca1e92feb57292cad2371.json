{"sha": "0c249d4b1ddd0e92fe7ca1e92feb57292cad2371", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMyNDlkNGIxZGRkMGU5MmZlN2NhMWU5MmZlYjU3MjkyY2FkMjM3MQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2013-11-06T23:33:33Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2013-11-06T23:33:33Z"}, "message": "c-decl.c (locate_old_decl): If a previous conflicting decl is both explicit and builtin...\n\n* c-decl.c (locate_old_decl): If a previous conflicting decl is\nboth explicit and builtin, print the location of the explicit one.\n\n* gcc.dg/mismatch-decl-1.c: New test.\n\nFrom-SVN: r204491", "tree": {"sha": "89a946c331c96eda2b81fece95680fe4c085f7a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89a946c331c96eda2b81fece95680fe4c085f7a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371/comments", "author": null, "committer": null, "parents": [{"sha": "7f4d640cd9ecf834ce2f6ab469076ddd49021374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f4d640cd9ecf834ce2f6ab469076ddd49021374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f4d640cd9ecf834ce2f6ab469076ddd49021374"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "cc335e454b5179fc950177d4afa18dd237709009", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=0c249d4b1ddd0e92fe7ca1e92feb57292cad2371", "patch": "@@ -1,3 +1,8 @@\n+2013-11-06  DJ Delorie  <dj@redhat.com>\n+\n+\t* c-decl.c (locate_old_decl): If a previous conflicting decl is\n+\tboth explicit and builtin, print the location of the explicit one.\n+\n 2013-11-05  Tobias Burnus  <burnus@net-b.de>\n \n \t* c-parser.c (c_parser_omp_for, c_parser_omp_parallel,"}, {"sha": "23f05163a62636f3cb7a746ed306a1d217b0257b", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=0c249d4b1ddd0e92fe7ca1e92feb57292cad2371", "patch": "@@ -1634,7 +1634,8 @@ validate_proto_after_old_defn (tree newdecl, tree newtype, tree oldtype)\n static void\n locate_old_decl (tree decl)\n {\n-  if (TREE_CODE (decl) == FUNCTION_DECL && DECL_BUILT_IN (decl))\n+  if (TREE_CODE (decl) == FUNCTION_DECL && DECL_BUILT_IN (decl)\n+      && !C_DECL_DECLARED_BUILTIN (decl))\n     ;\n   else if (DECL_INITIAL (decl))\n     inform (input_location, \"previous definition of %q+D was here\", decl);"}, {"sha": "b857d00f851a1dc8dbf917bed71505d1690308fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c249d4b1ddd0e92fe7ca1e92feb57292cad2371", "patch": "@@ -1,3 +1,7 @@\n+2013-11-06  DJ Delorie  <dj@redhat.com>\n+\n+\t* gcc.dg/mismatch-decl-1.c: New test.\n+\n 2013-11-06  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/torture/float128-cmp-invalid.c,"}, {"sha": "da4db0a57f0efcd081c0adce11474a9ea74ca937", "filename": "gcc/testsuite/gcc.dg/mismatch-decl-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371/gcc%2Ftestsuite%2Fgcc.dg%2Fmismatch-decl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c249d4b1ddd0e92fe7ca1e92feb57292cad2371/gcc%2Ftestsuite%2Fgcc.dg%2Fmismatch-decl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmismatch-decl-1.c?ref=0c249d4b1ddd0e92fe7ca1e92feb57292cad2371", "patch": "@@ -0,0 +1,22 @@\n+/* This test assumes -fbuiltin and not -fansi to get \"index\" and \"memchr\" builtin DECLs.  */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+/* The bug this is testing is that if a new decl conflicts with an\n+   explicit decl, you don't get the \"changes type of builtin\" message,\n+   but if there was *also* a builtin, you *also* don't get the\n+   \"previous declaration was here\" message, leaving you with no clue\n+   where the previous declaration came from.  */\n+\n+extern char foo(int,int); /* { dg-message \"previous declaration of 'foo' was here\" } */\n+extern char *index(const char *,int); /* { dg-message \"previous declaration of 'index' was here\" } */\n+\n+/* This changes the type of \"index\", which is both a builtin and an\n+   explicit decl.  */\n+int index; /* { dg-error \"redeclared as different kind of symbol\" } */\n+\n+/* This changes the type of \"memchr\", which is only a builtin.  */\n+int memchr; /* { dg-warning \"built-in function 'memchr' declared as non-function\" } */\n+\n+/* This changes the type of \"foo\", which is only an explicit decl.  */\n+int foo; /* { dg-error \"redeclared as different kind of symbol\" } */"}]}