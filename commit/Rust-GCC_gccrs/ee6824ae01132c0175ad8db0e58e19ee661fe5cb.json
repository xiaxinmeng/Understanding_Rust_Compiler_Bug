{"sha": "ee6824ae01132c0175ad8db0e58e19ee661fe5cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU2ODI0YWUwMTEzMmMwMTc1YWQ4ZGIwZTU4ZTE5ZWU2NjFmZTVjYg==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@linaro.org", "date": "2011-05-06T10:56:32Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2011-05-06T10:56:32Z"}, "message": "re PR target/47930 (-marm is undocumented; driver accepts -mno-thumb)\n\n\n2011-05-06  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n      PR target/47930\n      * config/arm/arm.opt (marm): Document it.\n      (mthumb): Reject negative variant.\n\nFrom-SVN: r173481", "tree": {"sha": "c1dfa8ce7af1d0b08a3e401911908903e58050cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1dfa8ce7af1d0b08a3e401911908903e58050cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee6824ae01132c0175ad8db0e58e19ee661fe5cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee6824ae01132c0175ad8db0e58e19ee661fe5cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee6824ae01132c0175ad8db0e58e19ee661fe5cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee6824ae01132c0175ad8db0e58e19ee661fe5cb/comments", "author": null, "committer": null, "parents": [{"sha": "e7385332a07dc8254dfffcdc4958179a4f9ef121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7385332a07dc8254dfffcdc4958179a4f9ef121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7385332a07dc8254dfffcdc4958179a4f9ef121"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "9927119013ef09355fe92683785efa8b7cb5256c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee6824ae01132c0175ad8db0e58e19ee661fe5cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee6824ae01132c0175ad8db0e58e19ee661fe5cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee6824ae01132c0175ad8db0e58e19ee661fe5cb", "patch": "@@ -1,3 +1,9 @@\n+2011-05-06  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+      PR target/47930\n+      * config/arm/arm.opt (marm): Document it.\n+      (mthumb): Reject negative variant.\n+\n 2011-05-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/48898"}, {"sha": "89c8cbd47d4722e03d53c091f8f824efb715184a", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee6824ae01132c0175ad8db0e58e19ee661fe5cb/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee6824ae01132c0175ad8db0e58e19ee661fe5cb/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=ee6824ae01132c0175ad8db0e58e19ee661fe5cb", "patch": "@@ -52,7 +52,8 @@ Target RejectNegative Joined Enum(arm_arch) Var(arm_arch_option)\n Specify the name of the target architecture\n \n marm\n-Target RejectNegative InverseMask(THUMB) Undocumented\n+Target Report RejectNegative InverseMask(THUMB)\n+Generate code in 32 bit ARM state.\n \n mbig-endian\n Target Report RejectNegative Mask(BIG_END)\n@@ -131,8 +132,8 @@ Target RejectNegative Joined Var(structure_size_string)\n Specify the minimum bit alignment of structures\n \n mthumb\n-Target Report Mask(THUMB)\n-Compile for the Thumb not the ARM\n+Target Report RejectNegative Mask(THUMB)\n+Generate code for Thumb state\n \n mthumb-interwork\n Target Report Mask(INTERWORK)"}, {"sha": "848aa3746e06fe2f28fc53d16fb4266f72f22e45", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee6824ae01132c0175ad8db0e58e19ee661fe5cb/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee6824ae01132c0175ad8db0e58e19ee661fe5cb/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ee6824ae01132c0175ad8db0e58e19ee661fe5cb", "patch": "@@ -10282,15 +10282,15 @@ there is a function name embedded immediately preceding this location\n and has length @code{((pc[-3]) & 0xff000000)}.\n \n @item -mthumb\n+@itemx -marm\n+@opindex marm\n @opindex mthumb\n-Generate code for the Thumb instruction set.  The default is to\n-use the 32-bit ARM instruction set.\n-This option automatically enables either 16-bit Thumb-1 or\n-mixed 16/32-bit Thumb-2 instructions based on the @option{-mcpu=@var{name}}\n-and @option{-march=@var{name}} options.  This option is not passed to the\n-assembler. If you want to force assembler files to be interpreted as Thumb code,\n-either add a @samp{.thumb} directive to the source or pass the @option{-mthumb}\n-option directly to the assembler by prefixing it with @option{-Wa}.\n+\n+Select between generating code that executes in ARM and Thumb\n+states.  The default for most configurations is to generate code\n+that executes in ARM state, but the default can be changed by\n+configuring GCC with the @option{--with-mode=}@var{state}\n+configure option.\n \n @item -mtpcs-frame\n @opindex mtpcs-frame"}]}