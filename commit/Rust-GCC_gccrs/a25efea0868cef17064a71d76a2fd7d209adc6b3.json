{"sha": "a25efea0868cef17064a71d76a2fd7d209adc6b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI1ZWZlYTA4NjhjZWYxNzA2NGE3MWQ3NmEyZmQ3ZDIwOWFkYzZiMw==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2014-11-10T17:18:23Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2014-11-10T17:18:23Z"}, "message": "expmed.c (expand_shift_1): Expand 8 bit rotate of 16 bit value to bswaphi if available.\n\n2014-11-10  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    * expmed.c (expand_shift_1): Expand 8 bit rotate of 16 bit value to\n    bswaphi if available.\n\nFrom-SVN: r217302", "tree": {"sha": "226ebbd4f9da3be46dbca04c4c51e6b2f770d812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/226ebbd4f9da3be46dbca04c4c51e6b2f770d812"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a25efea0868cef17064a71d76a2fd7d209adc6b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25efea0868cef17064a71d76a2fd7d209adc6b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25efea0868cef17064a71d76a2fd7d209adc6b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25efea0868cef17064a71d76a2fd7d209adc6b3/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02ff56e68a381d449723b6d4c19189a08bb66484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ff56e68a381d449723b6d4c19189a08bb66484", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ff56e68a381d449723b6d4c19189a08bb66484"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "4b70b6208691545d9970a3faad630f9b6cda02d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a25efea0868cef17064a71d76a2fd7d209adc6b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a25efea0868cef17064a71d76a2fd7d209adc6b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a25efea0868cef17064a71d76a2fd7d209adc6b3", "patch": "@@ -1,3 +1,8 @@\n+2014-11-10  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* expmed.c (expand_shift_1): Expand 8 bit rotate of 16 bit value to\n+\tbswaphi if available.\n+\n 2014-11-10  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* config/nvptx/nvptx.c: New file."}, {"sha": "b099dc2555dd19221e29d7f71eab320f920246c3", "filename": "gcc/expmed.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a25efea0868cef17064a71d76a2fd7d209adc6b3/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a25efea0868cef17064a71d76a2fd7d209adc6b3/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=a25efea0868cef17064a71d76a2fd7d209adc6b3", "patch": "@@ -2164,6 +2164,18 @@ expand_shift_1 (enum tree_code code, machine_mode mode, rtx shifted,\n       code = left ? LROTATE_EXPR : RROTATE_EXPR;\n     }\n \n+  /* Rotation of 16bit values by 8 bits is effectively equivalent to a bswaphi.\n+     Note that this is not the case for bigger values.  For instance a rotation\n+     of 0x01020304 by 16 bits gives 0x03040102 which is different from\n+     0x04030201 (bswapsi).  */\n+  if (rotate\n+      && CONST_INT_P (op1)\n+      && INTVAL (op1) == BITS_PER_UNIT\n+      && GET_MODE_SIZE (scalar_mode) == 2\n+      && optab_handler (bswap_optab, HImode) != CODE_FOR_nothing)\n+    return expand_unop (HImode, bswap_optab, shifted, NULL_RTX,\n+\t\t\t\t  unsignedp);\n+\n   if (op1 == const0_rtx)\n     return shifted;\n "}]}