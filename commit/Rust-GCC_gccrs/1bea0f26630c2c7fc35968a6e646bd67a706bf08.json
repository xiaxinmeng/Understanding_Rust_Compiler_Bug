{"sha": "1bea0f26630c2c7fc35968a6e646bd67a706bf08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJlYTBmMjY2MzBjMmM3ZmMzNTk2OGE2ZTY0NmJkNjdhNzA2YmYwOA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2017-05-11T20:16:02Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2017-05-11T20:16:02Z"}, "message": "re PR target/80695 (gratuitous use of stxvx to store multiple pointers)\n\n[gcc]\n\n2017-05-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR target/80695\n\t* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost):\n\tAccount for direct move costs for vec_construct of integer\n\tvectors.\n\n[gcc/testsuite]\n\n2017-05-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR target/80695\n\t* gcc.target/powerpc/pr80695-p8.c: New file.\n\t* gcc.target/powerpc/pr80695-p9.c: New file.\n\nFrom-SVN: r247928", "tree": {"sha": "dfd08e0e33f2a9777ee93ccf2120ba5fd0befe9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfd08e0e33f2a9777ee93ccf2120ba5fd0befe9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bea0f26630c2c7fc35968a6e646bd67a706bf08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bea0f26630c2c7fc35968a6e646bd67a706bf08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bea0f26630c2c7fc35968a6e646bd67a706bf08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bea0f26630c2c7fc35968a6e646bd67a706bf08/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d86e68e2078bb59e4f4c2c73cd111f8fd509bea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d86e68e2078bb59e4f4c2c73cd111f8fd509bea4"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "24af7d1711b34954f2e2e6f05b176e86f691ac51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bea0f26630c2c7fc35968a6e646bd67a706bf08", "patch": "@@ -1,3 +1,10 @@\n+2017-05-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR target/80695\n+\t* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost):\n+\tAccount for direct move costs for vec_construct of integer\n+\tvectors.\n+\n 2017-05-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/80706"}, {"sha": "292742aeb6066d9705edb82b48728ddae7a24089", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=1bea0f26630c2c7fc35968a6e646bd67a706bf08", "patch": "@@ -5850,8 +5850,20 @@ rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n \tif (SCALAR_FLOAT_TYPE_P (elem_type)\n \t    && TYPE_PRECISION (elem_type) == 32)\n \t  return 5;\n+\t/* On POWER9, integer vector types are built up in GPRs and then\n+\t   use a direct move (2 cycles).  For POWER8 this is even worse,\n+\t   as we need two direct moves and a merge, and the direct moves\n+\t   are five cycles.  */\n+\telse if (INTEGRAL_TYPE_P (elem_type))\n+\t  {\n+\t    if (TARGET_P9_VECTOR)\n+\t      return TYPE_VECTOR_SUBPARTS (vectype) - 1 + 2;\n+\t    else\n+\t      return TYPE_VECTOR_SUBPARTS (vectype) - 1 + 11;\n+\t  }\n \telse\n-\t  return max (2, TYPE_VECTOR_SUBPARTS (vectype) - 1);\n+\t  /* V2DFmode doesn't need a direct move.  */\n+\t  return 2;\n \n       default:\n         gcc_unreachable ();"}, {"sha": "7fbf899d65e5dbbf16899cc7ba24443eec5653da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1bea0f26630c2c7fc35968a6e646bd67a706bf08", "patch": "@@ -1,3 +1,9 @@\n+2017-05-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR target/80695\n+\t* gcc.target/powerpc/pr80695-p8.c: New file.\n+\t* gcc.target/powerpc/pr80695-p9.c: New file.\n+\n 2017-05-11  Uros Bizjak  <ubizjak@gmail.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "165079a3a6c8145b3319e916c5794c054d3322ae", "filename": "gcc/testsuite/gcc.target/powerpc/pr80695-p8.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80695-p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80695-p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80695-p8.c?ref=1bea0f26630c2c7fc35968a6e646bd67a706bf08", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-options \"-mcpu=power8 -O3 -fdump-tree-slp-details\" } */\n+\n+/* PR80695: Verify cost model for vec_construct on POWER8.  */\n+\n+long a[10] __attribute__((aligned(16)));\n+\n+void foo (long i, long j, long k, long l)\n+{\n+  a[6] = i;\n+  a[7] = j;\n+  a[8] = k;\n+  a[9] = l;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorization is not profitable\" 1 \"slp2\" } } */"}, {"sha": "a81f90ac3c47b8ea3e375dc7b69c657c849089af", "filename": "gcc/testsuite/gcc.target/powerpc/pr80695-p9.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80695-p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bea0f26630c2c7fc35968a6e646bd67a706bf08/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80695-p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr80695-p9.c?ref=1bea0f26630c2c7fc35968a6e646bd67a706bf08", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-options \"-mcpu=power9 -O3 -fdump-tree-slp-details\" } */\n+\n+/* PR80695: Verify cost model for vec_construct on POWER9.  */\n+\n+long a[10] __attribute__((aligned(16)));\n+\n+void foo (long i, long j, long k, long l)\n+{\n+  a[6] = i;\n+  a[7] = j;\n+  a[8] = k;\n+  a[9] = l;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorization is not profitable\" 1 \"slp2\" } } */"}]}