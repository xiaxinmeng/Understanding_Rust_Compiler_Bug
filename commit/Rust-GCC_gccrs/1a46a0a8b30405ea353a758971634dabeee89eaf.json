{"sha": "1a46a0a8b30405ea353a758971634dabeee89eaf", "node_id": "C_kwDOANBUbNoAKDFhNDZhMGE4YjMwNDA1ZWEzNTNhNzU4OTcxNjM0ZGFiZWVlODllYWY", "commit": {"author": {"name": "Torbj\u00f6rn SVENSSON", "email": "torbjorn.svensson@foss.st.com", "date": "2022-09-19T16:18:58Z"}, "committer": {"name": "Torbj\u00f6rn SVENSSON", "email": "torbjorn.svensson@foss.st.com", "date": "2022-10-05T09:57:49Z"}, "message": "testsuite: 'b' instruction can't do long enough jumps\n\nAfter moving the testglue in commit 9d503515cee, the jump to exit and\nabort is too far for the 'b' instruction on Cortex-M0. As most of the\nC code would generate a 'bl' instruction instead of a 'b'\ninstruction, lets do the same for the inline assembler.\n\nThe error seen without this patch:\n\n/tmp/cccCRiCl.o: in function `main':\nstack-protector-1.c:(.text+0x4e): relocation truncated to fit: R_ARM_THM_JUMP11 against symbol `__wrap_exit' defined in .text section in gcc_tg.o\nstack-protector-1.c:(.text+0x50): relocation truncated to fit: R_ARM_THM_JUMP11 against symbol `__wrap_abort' defined in .text section in gcc_tg.o\ncollect2: error: ld returned 1 exit status\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/stack-protector-1.c: Use 'bl' instead of 'b'\n\tinstruction.\n\t* gcc.target/arm/stack-protector-3.c: Likewise.\n\nCo-Authored-By: Yvan ROUX  <yvan.roux@foss.st.com>\nSigned-off-by: Torbj\u00f6rn SVENSSON  <torbjorn.svensson@foss.st.com>", "tree": {"sha": "db84c838a2e0eca1f7ce8d56692a961c00205f87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db84c838a2e0eca1f7ce8d56692a961c00205f87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a46a0a8b30405ea353a758971634dabeee89eaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a46a0a8b30405ea353a758971634dabeee89eaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a46a0a8b30405ea353a758971634dabeee89eaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a46a0a8b30405ea353a758971634dabeee89eaf/comments", "author": null, "committer": null, "parents": [{"sha": "fa8e3a055a082e38aeab2561a5016b01ebfd6ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa8e3a055a082e38aeab2561a5016b01ebfd6ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa8e3a055a082e38aeab2561a5016b01ebfd6ebd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3f0ffc9c3f319d566b1a51d635bbd799e2784e58", "filename": "gcc/testsuite/gcc.target/arm/stack-protector-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a46a0a8b30405ea353a758971634dabeee89eaf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a46a0a8b30405ea353a758971634dabeee89eaf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-1.c?ref=1a46a0a8b30405ea353a758971634dabeee89eaf", "patch": "@@ -56,8 +56,8 @@ asm (\n \"\tldr\tr1, [sp, #4]\\n\"\n \tCHECK (r1)\n \"\tmov\tr0, #0\\n\"\n-\"\tb\texit\\n\"\n+\"\tbl\texit\\n\"\n \"1:\\n\"\n-\"\tb\tabort\\n\"\n+\"\tbl\tabort\\n\"\n \"\t.size\tmain, .-main\"\n );"}, {"sha": "2f710529b8ff178b514d4d1f5fdcfa1f9dad5036", "filename": "gcc/testsuite/gcc.target/arm/stack-protector-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a46a0a8b30405ea353a758971634dabeee89eaf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a46a0a8b30405ea353a758971634dabeee89eaf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-3.c?ref=1a46a0a8b30405ea353a758971634dabeee89eaf", "patch": "@@ -26,7 +26,7 @@ asm (\n \"\t.type\t__stack_chk_fail, %function\\n\"\n \"__stack_chk_fail:\\n\"\n \"\tmovs\tr0, #0\\n\"\n-\"\tb\texit\\n\"\n+\"\tbl\texit\\n\"\n \"\t.size\t__stack_chk_fail, .-__stack_chk_fail\"\n );\n "}]}