{"sha": "1bdf255a6b52e5927c40732a6776acc78efb0a57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJkZjI1NWE2YjUyZTU5MjdjNDA3MzJhNjc3NmFjYzc4ZWZiMGE1Nw==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-25T08:18:14Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-25T08:18:14Z"}, "message": "AVX-512. Add convert ps2pd and ps2dq.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_insn\n\t\"<fixsuffix>fix_trunc<mode><sselongvecmodelower>2<mask_name><round_saeonly_name>\"):\n\tNew.\n\t(define_insn \"<fixsuffix>fix_truncv2sfv2di2<mask_name>\"): Ditto.\n\t(define_insn \"ufix_trunc<mode><sseintvecmodelower>2<mask_name>\"): Ditto.\n\t(define_insn \"sse2_cvtss2sd<round_saeonly_name>\"): Change\n\t\"nonimmediate_operand\" to \"<round_saeonly_nimm_predicate>\".\n\t(define_insn \"avx_cvtpd2ps256<mask_name>\"): Add masking.\n\t(define_expand \"sse2_cvtpd2ps_mask): New.\n\t(define_insn \"*sse2_cvtpd2ps<mask_name>\"): Add masking.\n\t(define_insn \"sse2_cvtps2pd<mask_name>\"): Add masking.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215586", "tree": {"sha": "32844e763b861179b757f661eefa64a44d089da4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32844e763b861179b757f661eefa64a44d089da4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bdf255a6b52e5927c40732a6776acc78efb0a57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bdf255a6b52e5927c40732a6776acc78efb0a57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bdf255a6b52e5927c40732a6776acc78efb0a57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bdf255a6b52e5927c40732a6776acc78efb0a57/comments", "author": null, "committer": null, "parents": [{"sha": "42815c486a2ba14e1c71b387a75bb2fc0121a0ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42815c486a2ba14e1c71b387a75bb2fc0121a0ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42815c486a2ba14e1c71b387a75bb2fc0121a0ce"}], "stats": {"total": 100, "additions": 83, "deletions": 17}, "files": [{"sha": "68090de6f5ce9c7735ce5b461d7d697efb2c81b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdf255a6b52e5927c40732a6776acc78efb0a57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdf255a6b52e5927c40732a6776acc78efb0a57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bdf255a6b52e5927c40732a6776acc78efb0a57", "patch": "@@ -1,3 +1,25 @@\n+2014-09-25  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_insn\n+\t\"<fixsuffix>fix_trunc<mode><sselongvecmodelower>2<mask_name><round_saeonly_name>\"):\n+\tNew.\n+\t(define_insn \"<fixsuffix>fix_truncv2sfv2di2<mask_name>\"): Ditto.\n+\t(define_insn \"ufix_trunc<mode><sseintvecmodelower>2<mask_name>\"): Ditto.\n+\t(define_insn \"sse2_cvtss2sd<round_saeonly_name>\"): Change\n+\t\"nonimmediate_operand\" to \"<round_saeonly_nimm_predicate>\".\n+\t(define_insn \"avx_cvtpd2ps256<mask_name>\"): Add masking.\n+\t(define_expand \"sse2_cvtpd2ps_mask): New.\n+\t(define_insn \"*sse2_cvtpd2ps<mask_name>\"): Add masking.\n+\t(define_insn \"sse2_cvtps2pd<mask_name>\"): Add masking.\n+\n 2014-09-25  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "ac7b51b2517ed33e638924ea510582c6d2cc7dc0", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 61, "deletions": 17, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bdf255a6b52e5927c40732a6776acc78efb0a57/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bdf255a6b52e5927c40732a6776acc78efb0a57/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=1bdf255a6b52e5927c40732a6776acc78efb0a57", "patch": "@@ -4659,6 +4659,38 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseintvecmode2>\")])\n \n+(define_insn \"<fixsuffix>fix_trunc<mode><sselongvecmodelower>2<mask_name><round_saeonly_name>\"\n+  [(set (match_operand:<sselongvecmode> 0 \"register_operand\" \"=v\")\n+\t(any_fix:<sselongvecmode>\n+\t  (match_operand:VF1_128_256VL 1 \"<round_saeonly_nimm_predicate>\" \"<round_saeonly_constraint>\")))]\n+  \"TARGET_AVX512DQ && <round_saeonly_modev8sf_condition>\"\n+  \"vcvttps2<fixsuffix>qq\\t{<round_saeonly_mask_op2>%1, %0<mask_operand2>|%0<mask_operand2>, %1<round_saeonly_mask_op2>}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseintvecmode3>\")])\n+\n+(define_insn \"<fixsuffix>fix_truncv2sfv2di2<mask_name>\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n+\t(any_fix:V2DI\n+\t  (vec_select:V2SF\n+\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"vm\")\n+\t    (parallel [(const_int 0) (const_int 1)]))))]\n+  \"TARGET_AVX512DQ && TARGET_AVX512VL\"\n+  \"vcvttps2<fixsuffix>qq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"ufix_trunc<mode><sseintvecmodelower>2<mask_name>\"\n+  [(set (match_operand:<sseintvecmode> 0 \"register_operand\" \"=v\")\n+\t(unsigned_fix:<sseintvecmode>\n+\t  (match_operand:VF1_128_256VL 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vcvttps2udq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseintvecmode2>\")])\n+\n (define_expand \"avx_cvttpd2dq256_2\"\n   [(set (match_operand:V8SI 0 \"register_operand\")\n \t(vec_concat:V8SI\n@@ -4713,7 +4745,7 @@\n \t(vec_merge:V2DF\n \t  (float_extend:V2DF\n \t    (vec_select:V2SF\n-\t      (match_operand:V4SF 2 \"nonimmediate_operand\" \"x,m,<round_saeonly_constraint>\")\n+\t      (match_operand:V4SF 2 \"<round_saeonly_nimm_predicate>\" \"x,m,<round_saeonly_constraint>\")\n \t      (parallel [(const_int 0) (const_int 1)])))\n \t  (match_operand:V2DF 1 \"register_operand\" \"0,0,v\")\n \t  (const_int 1)))]\n@@ -4741,14 +4773,14 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"V8SF\")])\n \n-(define_insn \"avx_cvtpd2ps256\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+(define_insn \"avx_cvtpd2ps256<mask_name>\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n \t(float_truncate:V4SF\n-\t  (match_operand:V4DF 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_AVX\"\n-  \"vcvtpd2ps{y}\\t{%1, %0|%0, %1}\"\n+\t  (match_operand:V4DF 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX && <mask_avx512vl_condition>\"\n+  \"vcvtpd2ps{y}\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"btver2_decode\" \"vector\")\n    (set_attr \"mode\" \"V4SF\")])\n \n@@ -4761,16 +4793,28 @@\n   \"TARGET_SSE2\"\n   \"operands[2] = CONST0_RTX (V2SFmode);\")\n \n-(define_insn \"*sse2_cvtpd2ps\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+(define_expand \"sse2_cvtpd2ps_mask\"\n+  [(set (match_operand:V4SF 0 \"register_operand\")\n+\t(vec_merge:V4SF\n+\t  (vec_concat:V4SF\n+\t    (float_truncate:V2SF\n+\t      (match_operand:V2DF 1 \"nonimmediate_operand\"))\n+\t    (match_dup 4))\n+\t  (match_operand:V4SF 2 \"register_operand\")\n+\t  (match_operand:QI 3 \"register_operand\")))]\n+  \"TARGET_SSE2\"\n+  \"operands[4] = CONST0_RTX (V2SFmode);\")\n+\n+(define_insn \"*sse2_cvtpd2ps<mask_name>\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n \t(vec_concat:V4SF\n \t  (float_truncate:V2SF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \"vm\"))\n \t  (match_operand:V2SF 2 \"const0_operand\")))]\n-  \"TARGET_SSE2\"\n+  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n {\n   if (TARGET_AVX)\n-    return \"vcvtpd2ps{x}\\t{%1, %0|%0, %1}\";\n+    return \"vcvtpd2ps{x}\\t{%1, %0<mask_operand3>|%0<mask_operand3>, %1}\";\n   else\n     return \"cvtpd2ps\\t{%1, %0|%0, %1}\";\n }\n@@ -4824,14 +4868,14 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"V8DF\")])\n \n-(define_insn \"sse2_cvtps2pd\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n+(define_insn \"sse2_cvtps2pd<mask_name>\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=v\")\n \t(float_extend:V2DF\n \t  (vec_select:V2SF\n-\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)]))))]\n-  \"TARGET_SSE2\"\n-  \"%vcvtps2pd\\t{%1, %0|%0, %q1}\"\n+  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n+  \"%vcvtps2pd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"amdfam10_decode\" \"direct\")\n    (set_attr \"athlon_decode\" \"double\")"}]}