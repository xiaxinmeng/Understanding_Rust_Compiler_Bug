{"sha": "2842011664f2dd313ab8f5784fadc36ecb9f57cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg0MjAxMTY2NGYyZGQzMTNhYjhmNTc4NGZhZGMzNmVjYjlmNTdjZg==", "commit": {"author": {"name": "Per Bothner", "email": "pbothner@apple.com", "date": "2003-08-14T01:47:31Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2003-08-14T01:47:31Z"}, "message": "regclass.c (init_reg_modes): Make non-static.\n\n\n\t* regclass.c (init_reg_modes):  Make non-static.\n\tRename to init_reg_modes_once per new naming convention.\n\t(init_regs):  Don't call init_reg_modes here.\n\t* emit-rtl.c (init_emit_once):  Call init_reg_modes_once here instead.\n\t* rtl.h (init_reg_modes_once):  New declaration.\n\t* toplev.c (backend_init):  Call init_regs after init_emit_once.\n\nFrom-SVN: r70426", "tree": {"sha": "306712cf301a45c74786d429176b00ca9028d9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/306712cf301a45c74786d429176b00ca9028d9dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2842011664f2dd313ab8f5784fadc36ecb9f57cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2842011664f2dd313ab8f5784fadc36ecb9f57cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2842011664f2dd313ab8f5784fadc36ecb9f57cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2842011664f2dd313ab8f5784fadc36ecb9f57cf/comments", "author": null, "committer": null, "parents": [{"sha": "3def5fb4fdd830ec2e2a6a9df7dd29dbc33c8e25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3def5fb4fdd830ec2e2a6a9df7dd29dbc33c8e25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3def5fb4fdd830ec2e2a6a9df7dd29dbc33c8e25"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "104599baae1fce8a6510bc1c8bc1ccb25f82e4dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2842011664f2dd313ab8f5784fadc36ecb9f57cf", "patch": "@@ -1,3 +1,12 @@\n+2003-08-13  Per Bothner  <pbothner@apple.com>\n+\n+\t* regclass.c (init_reg_modes):  Make non-static.\n+\tRename to init_reg_modes_once per new naming convention.\n+\t(init_regs):  Don't call init_reg_modes here.\n+\t* emit-rtl.c (init_emit_once):  Call init_reg_modes_once here instead.\n+\t* rtl.h (init_reg_modes_once):  New declaration.\n+\t* toplev.c (backend_init):  Call init_regs after init_emit_once.\n+\n 2003-08-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/linux.h (DBX_REGISTER_NUMBER): Define so to map a"}, {"sha": "95b40ec508f357ae469819a79c0d270a8ac05884", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=2842011664f2dd313ab8f5784fadc36ecb9f57cf", "patch": "@@ -5317,6 +5317,9 @@ init_emit_once (int line_numbers)\n   enum machine_mode mode;\n   enum machine_mode double_mode;\n \n+  /* We need reg_raw_mode, so initialize the modes now. */\n+  init_reg_modes_once ();\n+\n   /* Initialize the CONST_INT, CONST_DOUBLE, and memory attribute hash\n      tables.  */\n   const_int_htab = htab_create_ggc (37, const_int_htab_hash,"}, {"sha": "9c496b6afdc10be871df45fb78c7df647520b686", "filename": "gcc/regclass.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=2842011664f2dd313ab8f5784fadc36ecb9f57cf", "patch": "@@ -46,7 +46,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"timevar.h\"\n \n static void init_reg_sets_1 (void);\n-static void init_reg_modes (void);\n static void init_reg_autoinc (void);\n \n /* If we have auto-increment or auto-decrement and we can have secondary\n@@ -546,8 +545,8 @@ init_reg_sets_1 (void)\n    These values are used to record death information for individual registers\n    (as opposed to a multi-register mode).  */\n \n-static void\n-init_reg_modes (void)\n+void\n+init_reg_modes_once (void)\n {\n   int i;\n \n@@ -575,8 +574,6 @@ init_regs (void)\n      until after register usage was specified.  */\n   init_reg_sets_1 ();\n \n-  init_reg_modes ();\n-\n   init_reg_autoinc ();\n }\n "}, {"sha": "82dddc74fa004739256f0a19d89c0eda29e5117b", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=2842011664f2dd313ab8f5784fadc36ecb9f57cf", "patch": "@@ -2149,6 +2149,7 @@ extern void build_insn_chain (rtx);\n extern int reg_classes_intersect_p (enum reg_class, enum reg_class);\n extern int reg_class_subset_p (enum reg_class, enum reg_class);\n extern void globalize_reg (int);\n+extern void init_reg_modes_once (void);\n extern void init_regs (void);\n extern void init_fake_stack_mems (void);\n extern void init_reg_sets (void);"}, {"sha": "418fa3575eef58881596a6b585617de962c8a06b", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2842011664f2dd313ab8f5784fadc36ecb9f57cf/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=2842011664f2dd313ab8f5784fadc36ecb9f57cf", "patch": "@@ -4250,9 +4250,6 @@ process_options (void)\n static void\n backend_init (void)\n {\n-  /* init_emit_once uses reg_raw_mode and therefore must be called\n-     after init_regs which initialized reg_raw_mode.  */\n-  init_regs ();\n   init_emit_once (debug_info_level == DINFO_LEVEL_NORMAL\n \t\t  || debug_info_level == DINFO_LEVEL_VERBOSE\n #ifdef VMS_DEBUGGING_INFO\n@@ -4261,6 +4258,8 @@ backend_init (void)\n #endif\n \t\t    || flag_test_coverage\n \t\t    || warn_notreached);\n+\n+  init_regs ();\n   init_fake_stack_mems ();\n   init_alias_once ();\n   init_loop ();"}]}