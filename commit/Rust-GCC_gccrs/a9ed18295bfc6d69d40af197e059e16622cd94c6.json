{"sha": "a9ed18295bfc6d69d40af197e059e16622cd94c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTllZDE4Mjk1YmZjNmQ2OWQ0MGFmMTk3ZTA1OWUxNjYyMmNkOTRjNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-22T18:03:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-22T18:04:55Z"}, "message": "c++: Fix up ubsan false positives on references [PR95693]\n\nAlex' 2 years old change to build_zero_init_1 to return NULL pointer with\nreference type for references breaks the sanitizers, the assignment of NULL\nto a reference typed member is then instrumented before it is overwritten\nwith a non-NULL address later on.\nThat change has been done to fix error recovery ICE during\nprocess_init_constructor_record, where we:\n          if (TYPE_REF_P (fldtype))\n            {\n              if (complain & tf_error)\n                error (\"member %qD is uninitialized reference\", field);\n              else\n                return PICFLAG_ERRONEOUS;\n            }\na few lines earlier, but then continue and ICE when build_zero_init returns\nNULL.\n\nThe following patch reverts the build_zero_init_1 change and instead creates\nthe NULL with reference type constants during the error recovery.\n\nThe pr84593.C testcase Alex' change was fixing still works as before.\n\n2021-01-22  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR sanitizer/95693\n\t* init.c (build_zero_init_1): Revert the 2018-03-06 change to\n\treturn build_zero_cst for reference types.\n\t* typeck2.c (process_init_constructor_record): Instead call\n\tbuild_zero_cst here during error recovery instead of build_zero_init.\n\n\t* g++.dg/ubsan/pr95693.C: New test.", "tree": {"sha": "53b7bf20b4ae710c6154de2330c0d2a76a65d612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53b7bf20b4ae710c6154de2330c0d2a76a65d612"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9ed18295bfc6d69d40af197e059e16622cd94c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ed18295bfc6d69d40af197e059e16622cd94c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9ed18295bfc6d69d40af197e059e16622cd94c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9ed18295bfc6d69d40af197e059e16622cd94c6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25fc4d01a8ed1888e6a65597a3387349eb3c950c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25fc4d01a8ed1888e6a65597a3387349eb3c950c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25fc4d01a8ed1888e6a65597a3387349eb3c950c"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "3b37c970dfa471ea8bc0382378c1b59edf715040", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ed18295bfc6d69d40af197e059e16622cd94c6/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ed18295bfc6d69d40af197e059e16622cd94c6/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=a9ed18295bfc6d69d40af197e059e16622cd94c6", "patch": "@@ -288,10 +288,7 @@ build_zero_init_1 (tree type, tree nelts, bool static_storage_p,\n   else if (VECTOR_TYPE_P (type))\n     init = build_zero_cst (type);\n   else\n-    {\n-      gcc_assert (TYPE_REF_P (type));\n-      init = build_zero_cst (type);\n-    }\n+    gcc_assert (TYPE_REF_P (type));\n \n   /* In all cases, the initializer is a constant.  */\n   if (init)"}, {"sha": "f4be72fc514fb2db47c5a10973ff58f343af937d", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ed18295bfc6d69d40af197e059e16622cd94c6/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ed18295bfc6d69d40af197e059e16622cd94c6/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=a9ed18295bfc6d69d40af197e059e16622cd94c6", "patch": "@@ -1609,10 +1609,14 @@ process_init_constructor_record (tree type, tree init, int nested, int flags,\n \t    warning (OPT_Wmissing_field_initializers,\n \t\t     \"missing initializer for member %qD\", field);\n \n-\t  if (!zero_init_p (fldtype)\n-\t      || skipped < 0)\n-\t    next = build_zero_init (fldtype, /*nelts=*/NULL_TREE,\n-\t\t\t\t    /*static_storage_p=*/false);\n+\t  if (!zero_init_p (fldtype) || skipped < 0)\n+\t    {\n+\t      if (TYPE_REF_P (fldtype))\n+\t\tnext = build_zero_cst (fldtype);\n+\t      else\n+\t\tnext = build_zero_init (fldtype, /*nelts=*/NULL_TREE,\n+\t\t\t\t\t/*static_storage_p=*/false);\n+\t    }\n \t  else\n \t    {\n \t      /* The default zero-initialization is fine for us; don't"}, {"sha": "13f688e8ec0c6f6ba78a89d9bbb2ccee7993898e", "filename": "gcc/testsuite/g++.dg/ubsan/pr95693.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9ed18295bfc6d69d40af197e059e16622cd94c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr95693.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9ed18295bfc6d69d40af197e059e16622cd94c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr95693.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr95693.C?ref=a9ed18295bfc6d69d40af197e059e16622cd94c6", "patch": "@@ -0,0 +1,26 @@\n+// PR sanitizer/95693\n+// { dg-do run }\n+// { dg-options \"-O2 -fsanitize=undefined -fno-sanitize-recover=undefined\" }\n+\n+int g = 9;\n+\n+struct A {\n+  A () : a(g) {}\n+private:\n+  int &a;\n+};\n+\n+struct B {\n+  A payload;\n+};\n+\n+struct C : public B {\n+  C () : B () {}\n+  A p;\n+};\n+\n+int\n+main ()\n+{\n+  C t;\n+}"}]}