{"sha": "7c9b8fb912cdbac53aab302ab0e6b1b0831036df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M5YjhmYjkxMmNkYmFjNTNhYWIzMDJhYjBlNmIxYjA4MzEwMzZkZg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-05-22T10:21:32Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-05-22T10:21:32Z"}, "message": "re PR fortran/44213 (ICE when extending abstract type)\n\n2010-05-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44213\n\t* resolve.c (ensure_not_abstract): Allow abstract types with\n\tnon-abstract ancestors.\n\n\n2010-05-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44213\n\t* gfortran.dg/abstract_type_7.f03: New.\n\nFrom-SVN: r159695", "tree": {"sha": "16d810c6e5b483bfbb839527ee681b103d9622fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16d810c6e5b483bfbb839527ee681b103d9622fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c9b8fb912cdbac53aab302ab0e6b1b0831036df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9b8fb912cdbac53aab302ab0e6b1b0831036df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c9b8fb912cdbac53aab302ab0e6b1b0831036df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9b8fb912cdbac53aab302ab0e6b1b0831036df/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "277e2873445daf04f771eacf8636ba15671dfeda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277e2873445daf04f771eacf8636ba15671dfeda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277e2873445daf04f771eacf8636ba15671dfeda"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "9e4702e40a4b3081855c78b6cfeeabb28ca2f345", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9b8fb912cdbac53aab302ab0e6b1b0831036df/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9b8fb912cdbac53aab302ab0e6b1b0831036df/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7c9b8fb912cdbac53aab302ab0e6b1b0831036df", "patch": "@@ -1,3 +1,9 @@\n+2010-05-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44213\n+\t* resolve.c (ensure_not_abstract): Allow abstract types with\n+\tnon-abstract ancestors.\n+\n 2010-05-21  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* trans-const.c: Include realmpfr.h."}, {"sha": "f08e1988816cc8a4b17ca2e48163415b4fcc6099", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9b8fb912cdbac53aab302ab0e6b1b0831036df/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9b8fb912cdbac53aab302ab0e6b1b0831036df/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=7c9b8fb912cdbac53aab302ab0e6b1b0831036df", "patch": "@@ -10541,7 +10541,10 @@ ensure_not_abstract (gfc_symbol* sub, gfc_symbol* ancestor)\n      This is not the most efficient way to do this, but it should be ok and is\n      clearer than something sophisticated.  */\n \n-  gcc_assert (ancestor && ancestor->attr.abstract && !sub->attr.abstract);\n+  gcc_assert (ancestor && !sub->attr.abstract);\n+  \n+  if (!ancestor->attr.abstract)\n+    return SUCCESS;\n \n   /* Walk bindings of this ancestor.  */\n   if (ancestor->f2k_derived)"}, {"sha": "faea1c4fe93e76f00120e4e5cd08498c7eff0667", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9b8fb912cdbac53aab302ab0e6b1b0831036df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9b8fb912cdbac53aab302ab0e6b1b0831036df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c9b8fb912cdbac53aab302ab0e6b1b0831036df", "patch": "@@ -1,3 +1,8 @@\n+2010-05-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44213\n+\t* gfortran.dg/abstract_type_7.f03: New.\n+\n 2010-05-21  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/eh/spec11.C: Test cleanup optimization."}, {"sha": "3ea0fdca614748845d0c915c3fafab68f8a5fa38", "filename": "gcc/testsuite/gfortran.dg/abstract_type_7.f03", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c9b8fb912cdbac53aab302ab0e6b1b0831036df/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c9b8fb912cdbac53aab302ab0e6b1b0831036df/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fabstract_type_7.f03?ref=7c9b8fb912cdbac53aab302ab0e6b1b0831036df", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+!\n+! PR 44213: ICE when extending abstract type\n+!\n+! Contributed by Hans-Werner Boschmann <boschmann@tp1.physik.uni-siegen.de>\n+\n+module ice_module\n+  type :: a_type\n+  end type a_type\n+\n+  type,extends(a_type),abstract :: b_type\n+  end type b_type\n+\n+  type,extends(b_type) :: c_type\n+  end type c_type\n+end module ice_module\n+ \n+! { dg-final { cleanup-modules \"ice_module\" } }"}]}