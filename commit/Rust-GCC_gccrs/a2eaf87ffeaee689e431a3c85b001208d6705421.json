{"sha": "a2eaf87ffeaee689e431a3c85b001208d6705421", "node_id": "C_kwDOANBUbNoAKGEyZWFmODdmZmVhZWU2ODllNDMxYTNjODViMDAxMjA4ZDY3MDU0MjE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-06-06T21:23:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-05T08:28:20Z"}, "message": "[Ada] Remove kludge for validity checks on Long_Float type\n\nThis patch reverts a fix for a spurious warning for validity checks on\ntype Long_Float. This fix was dubious (as it was only affecting\nLong_Float and not Float) and apparently is no longer needed.\n\nCleanup related to improved detection of uninitialised scalar objects.\n\ngcc/ada/\n\n\t* sem_attr.adb (Note_Possible_Modification): Revert a\n\tspecial-case for validity checks on Long_Float type.\n\t* snames.ads-tmpl (Name_Attr_Long_Float): Remove name added\n\texclusively for the mentioned fix.", "tree": {"sha": "84d52dd48f43850debba0efd0bf691e11b4e1fe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84d52dd48f43850debba0efd0bf691e11b4e1fe8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2eaf87ffeaee689e431a3c85b001208d6705421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2eaf87ffeaee689e431a3c85b001208d6705421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2eaf87ffeaee689e431a3c85b001208d6705421", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2eaf87ffeaee689e431a3c85b001208d6705421/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c96dcf055028510b5b1630e12015b86d5f5c2f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c96dcf055028510b5b1630e12015b86d5f5c2f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c96dcf055028510b5b1630e12015b86d5f5c2f6e"}], "stats": {"total": 42, "additions": 4, "deletions": 38}, "files": [{"sha": "cab2461a39c9f223c78a9e2f13474d0cec116547", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 4, "deletions": 37, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2eaf87ffeaee689e431a3c85b001208d6705421/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2eaf87ffeaee689e431a3c85b001208d6705421/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=a2eaf87ffeaee689e431a3c85b001208d6705421", "patch": "@@ -11145,43 +11145,10 @@ package body Sem_Attr is\n          =>\n             --  Note possible modification if we have a variable\n \n-            if Is_Variable (P) then\n-               declare\n-                  PN : constant Node_Id := Parent (N);\n-                  Nm : Node_Id;\n-\n-                  Note : Boolean := True;\n-                  --  Skip this for the case of Unrestricted_Access occurring\n-                  --  in the context of a Valid check, since this otherwise\n-                  --  leads to a missed warning (the Valid check does not\n-                  --  really modify!) If this case, Note will be reset to\n-                  --  False.\n-\n-                  --  Skip it as well if the type is an Access_To_Constant,\n-                  --  given that no use of the value can modify the prefix.\n-\n-               begin\n-                  if Attr_Id = Attribute_Unrestricted_Access\n-                    and then Nkind (PN) = N_Function_Call\n-                  then\n-                     Nm := Name (PN);\n-\n-                     if Nkind (Nm) = N_Expanded_Name\n-                       and then Chars (Nm) = Name_Valid\n-                       and then Nkind (Prefix (Nm)) = N_Identifier\n-                       and then Chars (Prefix (Nm)) = Name_Attr_Long_Float\n-                     then\n-                        Note := False;\n-                     end if;\n-\n-                  elsif Is_Access_Constant (Typ) then\n-                     Note := False;\n-                  end if;\n-\n-                  if Note then\n-                     Note_Possible_Modification (P, Sure => False);\n-                  end if;\n-               end;\n+            if Is_Variable (P)\n+              and then not Is_Access_Constant (Typ)\n+            then\n+               Note_Possible_Modification (P, Sure => False);\n             end if;\n \n             --  Case where prefix is an entity name"}, {"sha": "dbf711ddecaad43bf42b5418ab230a53d2d4db32", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2eaf87ffeaee689e431a3c85b001208d6705421/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2eaf87ffeaee689e431a3c85b001208d6705421/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=a2eaf87ffeaee689e431a3c85b001208d6705421", "patch": "@@ -776,7 +776,6 @@ package Snames is\n    Name_Allow                          : constant Name_Id := N + $;\n    Name_Amount                         : constant Name_Id := N + $;\n    Name_As_Is                          : constant Name_Id := N + $;\n-   Name_Attr_Long_Float                : constant Name_Id := N + $;\n    Name_Assertion                      : constant Name_Id := N + $;\n    Name_Assertions                     : constant Name_Id := N + $;\n    Name_Attribute_Name                 : constant Name_Id := N + $;"}]}