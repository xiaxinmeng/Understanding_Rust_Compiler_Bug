{"sha": "cddd8b72ad0e84a6ede84aed0c96d62871ef1f20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RkZDhiNzJhZDBlODRhNmVkZTg0YWVkMGM5NmQ2Mjg3MWVmMWYyMA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2002-02-11T06:07:03Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2002-02-11T06:07:03Z"}, "message": "combine.c (try_combine): Apply substitutions in CALL_INSN_FUNCTION_USAGE too.\n\n* combine.c (try_combine): Apply substitutions in\nCALL_INSN_FUNCTION_USAGE too.\n\nFrom-SVN: r49670", "tree": {"sha": "3e7fcbfd5aa2fab762cda1114ace46f614b57192", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e7fcbfd5aa2fab762cda1114ace46f614b57192"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cddd8b72ad0e84a6ede84aed0c96d62871ef1f20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cddd8b72ad0e84a6ede84aed0c96d62871ef1f20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cddd8b72ad0e84a6ede84aed0c96d62871ef1f20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cddd8b72ad0e84a6ede84aed0c96d62871ef1f20/comments", "author": null, "committer": null, "parents": [{"sha": "5c665b884d659613a8dea504e42411d9fbdc9da9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c665b884d659613a8dea504e42411d9fbdc9da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c665b884d659613a8dea504e42411d9fbdc9da9"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "0ae670751151680d29d8f9ee0884fa70c4d75c62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cddd8b72ad0e84a6ede84aed0c96d62871ef1f20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cddd8b72ad0e84a6ede84aed0c96d62871ef1f20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cddd8b72ad0e84a6ede84aed0c96d62871ef1f20", "patch": "@@ -1,3 +1,8 @@\n+2002-02-11  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* combine.c (try_combine): Apply substitutions in\n+\tCALL_INSN_FUNCTION_USAGE too.\n+\n 2002-02-11  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config/rs6000/rs6000.c (altivec_init_builtins): Handle"}, {"sha": "ba0bf35d21eacff2f7603924e840006a0f08b93b", "filename": "gcc/combine.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cddd8b72ad0e84a6ede84aed0c96d62871ef1f20/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cddd8b72ad0e84a6ede84aed0c96d62871ef1f20/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=cddd8b72ad0e84a6ede84aed0c96d62871ef1f20", "patch": "@@ -1478,6 +1478,7 @@ try_combine (i3, i2, i1, new_direct_jump_p)\n {\n   /* New patterns for I3 and I2, respectively.  */\n   rtx newpat, newi2pat = 0;\n+  int substed_i2 = 0, substed_i1 = 0;\n   /* Indicates need to preserve SET in I1 or I2 in I3 if it is not dead.  */\n   int added_sets_1, added_sets_2;\n   /* Total number of SETs to put into I3.  */\n@@ -1939,6 +1940,7 @@ try_combine (i3, i2, i1, new_direct_jump_p)\n       subst_low_cuid = INSN_CUID (i2);\n       newpat = subst (PATTERN (i3), i2dest, i2src, 0,\n \t\t      ! i1_feeds_i3 && i1dest_in_i1src);\n+      substed_i2 = 1;\n \n       /* Record whether i2's body now appears within i3's body.  */\n       i2_is_used = n_occurrences;\n@@ -1963,6 +1965,7 @@ try_combine (i3, i2, i1, new_direct_jump_p)\n       n_occurrences = 0;\n       subst_low_cuid = INSN_CUID (i1);\n       newpat = subst (newpat, i1dest, i1src, 0, 0);\n+      substed_i1 = 1;\n     }\n \n   /* Fail if an autoincrement side-effect has been duplicated.  Be careful\n@@ -2534,6 +2537,23 @@ try_combine (i3, i2, i1, new_direct_jump_p)\n \n     INSN_CODE (i3) = insn_code_number;\n     PATTERN (i3) = newpat;\n+\n+    if (GET_CODE (i3) == CALL_INSN && CALL_INSN_FUNCTION_USAGE (i3))\n+      {\n+\trtx call_usage = CALL_INSN_FUNCTION_USAGE (i3);\n+\n+\treset_used_flags (call_usage);\n+\tcall_usage = copy_rtx (call_usage);\n+\n+\tif (substed_i2)\n+\t  replace_rtx (call_usage, i2dest, i2src);\n+\n+\tif (substed_i1)\n+\t  replace_rtx (call_usage, i1dest, i1src);\n+\n+\tCALL_INSN_FUNCTION_USAGE (i3) = call_usage;\n+      }\n+\n     if (undobuf.other_insn)\n       INSN_CODE (undobuf.other_insn) = other_code_number;\n "}]}