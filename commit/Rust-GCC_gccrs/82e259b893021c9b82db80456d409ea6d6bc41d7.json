{"sha": "82e259b893021c9b82db80456d409ea6d6bc41d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJlMjU5Yjg5MzAyMWM5YjgyZGI4MDQ1NmQ0MDllYTZkNmJjNDFkNw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-02-07T21:08:51Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-02-07T21:08:51Z"}, "message": "re PR fortran/68560 (The test gfortran.dg/shape_8.f90 now fails when compiled with -flto)\n\n2018-02-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/68560\n\t* trans-intrinsic.c (gfc_conv_intrinsic_shape): New function.\n\t(gfc_conv_intrinsic_function): Call it.\n\n2018-02-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/68560\n\t* gfortran.dg/shape_9.f90: New test.\n\nFrom-SVN: r257462", "tree": {"sha": "bc6befe5f4dc22e140515185c56992b184d261cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc6befe5f4dc22e140515185c56992b184d261cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82e259b893021c9b82db80456d409ea6d6bc41d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e259b893021c9b82db80456d409ea6d6bc41d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82e259b893021c9b82db80456d409ea6d6bc41d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e259b893021c9b82db80456d409ea6d6bc41d7/comments", "author": null, "committer": null, "parents": [{"sha": "52b16cb3d48a328c9cdaa0ca55c151066ec65e4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b16cb3d48a328c9cdaa0ca55c151066ec65e4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52b16cb3d48a328c9cdaa0ca55c151066ec65e4d"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "7dbb9c1984918b0bad37bff124be536e8f39ce2a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e259b893021c9b82db80456d409ea6d6bc41d7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e259b893021c9b82db80456d409ea6d6bc41d7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=82e259b893021c9b82db80456d409ea6d6bc41d7", "patch": "@@ -1,3 +1,9 @@\n+2018-02-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/68560\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_shape): New function.\n+\t(gfc_conv_intrinsic_function): Call it.\n+\n 2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/82049"}, {"sha": "337227d3c0897fbe70d5bf12705c566efef632c4", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e259b893021c9b82db80456d409ea6d6bc41d7/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e259b893021c9b82db80456d409ea6d6bc41d7/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=82e259b893021c9b82db80456d409ea6d6bc41d7", "patch": "@@ -5592,6 +5592,22 @@ gfc_conv_intrinsic_ibits (gfc_se * se, gfc_expr * expr)\n   se->expr = fold_build2_loc (input_location, BIT_AND_EXPR, type, tmp, mask);\n }\n \n+static void\n+gfc_conv_intrinsic_shape (gfc_se *se, gfc_expr *expr)\n+{\n+  gfc_actual_arglist *s, *k;\n+  gfc_expr *e;\n+\n+  /* Remove the KIND argument, if present. */\n+  s = expr->value.function.actual;\n+  k = s->next;\n+  e = k->expr;\n+  gfc_free_expr (e);\n+  k->expr = NULL;\n+\n+  gfc_conv_intrinsic_funcall (se, expr);\n+}\n+\n static void\n gfc_conv_intrinsic_shift (gfc_se * se, gfc_expr * expr, bool right_shift,\n \t\t\t  bool arithmetic)\n@@ -8718,6 +8734,10 @@ gfc_conv_intrinsic_function (gfc_se * se, gfc_expr * expr)\n \t      gfc_conv_intrinsic_minmaxloc (se, expr, GT_EXPR);\n \t      break;\n \n+\t    case GFC_ISYM_SHAPE:\n+\t      gfc_conv_intrinsic_shape (se, expr);\n+\t      break;\n+\n \t    default:\n \t      gfc_conv_intrinsic_funcall (se, expr);\n \t      break;"}, {"sha": "24a99a58ecd8bc3230097c24355aa97313709b56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e259b893021c9b82db80456d409ea6d6bc41d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e259b893021c9b82db80456d409ea6d6bc41d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82e259b893021c9b82db80456d409ea6d6bc41d7", "patch": "@@ -1,3 +1,8 @@\n+2018-02-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/68560\n+\t* gfortran.dg/shape_9.f90: New test.\n+\n 2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/82049"}, {"sha": "6d33f976cb82005baf11c7653bdf6ee0dad9068c", "filename": "gcc/testsuite/gfortran.dg/shape_9.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e259b893021c9b82db80456d409ea6d6bc41d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e259b893021c9b82db80456d409ea6d6bc41d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_9.f90?ref=82e259b893021c9b82db80456d409ea6d6bc41d7", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do  run }\n+! { dg-require-effective-target lto }\n+! { dg-options \"-flto\" }\n+! Check that there are no warnings with LTO for a KIND argument.\n+!\n+program test\n+   implicit none\n+   real, allocatable :: x(:,:)\n+\n+   allocate(x(2,5))\n+   if (any(shape(x) /= [ 2, 5 ])) call abort\n+   if (any(shape(x,kind=1) /= [ 2, 5 ])) call abort\n+   if (any(shape(x,kind=2) /= [ 2, 5 ])) call abort\n+   if (any(shape(x,kind=4) /= [ 2, 5 ])) call abort\n+   if (any(shape(x,kind=8) /= [ 2, 5 ])) call abort\n+ end program test"}]}