{"sha": "139bd704f15614f21dc1113235cc5bd2dd81238f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM5YmQ3MDRmMTU2MTRmMjFkYzExMTMyMzVjYzViZDJkZDgxMjM4Zg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-12-02T11:20:14Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-12-02T11:20:14Z"}, "message": "re PR tree-optimization/59356 (ACATS C52102A and C52102C failures)\n\n\tPR tree-optimization/59356\n\t* tree-dfa.h (get_addr_base_and_unit_offset_1) <case ARRAY_REF>: Do the\n\toffset computation using the precision of the index type.\n\nFrom-SVN: r205585", "tree": {"sha": "8996b3856e8b5fe78d5f8abc322cbffb9f59af6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8996b3856e8b5fe78d5f8abc322cbffb9f59af6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/139bd704f15614f21dc1113235cc5bd2dd81238f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139bd704f15614f21dc1113235cc5bd2dd81238f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/139bd704f15614f21dc1113235cc5bd2dd81238f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139bd704f15614f21dc1113235cc5bd2dd81238f/comments", "author": null, "committer": null, "parents": [{"sha": "95044b50b030259b37c187862dca756ea58ef08a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95044b50b030259b37c187862dca756ea58ef08a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95044b50b030259b37c187862dca756ea58ef08a"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "78554aae7c703e1eed57ce70f5aeb0a9073eb3b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/139bd704f15614f21dc1113235cc5bd2dd81238f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/139bd704f15614f21dc1113235cc5bd2dd81238f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=139bd704f15614f21dc1113235cc5bd2dd81238f", "patch": "@@ -1,3 +1,9 @@\n+2013-12-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR tree-optimization/59356\n+\t* tree-dfa.h (get_addr_base_and_unit_offset_1) <case ARRAY_REF>: Do the\n+\toffset computation using the precision of the index type.\n+\n 2013-12-02  Yvan Roux  <yvan.roux@linaro.org>\n \n \tPR target/58785"}, {"sha": "c688c80232ef05bcf7ce97e5ab0ea8fe7a908012", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/139bd704f15614f21dc1113235cc5bd2dd81238f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/139bd704f15614f21dc1113235cc5bd2dd81238f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=139bd704f15614f21dc1113235cc5bd2dd81238f", "patch": "@@ -1,3 +1,7 @@\n+2013-12-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt30.adb: New test.\n+\n 2013-12-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/57354"}, {"sha": "12139c555c4d6c33a1327d1c21fdf050275520a8", "filename": "gcc/testsuite/gnat.dg/opt30.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/139bd704f15614f21dc1113235cc5bd2dd81238f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt30.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/139bd704f15614f21dc1113235cc5bd2dd81238f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt30.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt30.adb?ref=139bd704f15614f21dc1113235cc5bd2dd81238f", "patch": "@@ -0,0 +1,20 @@\n+-- { dg-do run }\n+-- { dg-options \"-O\" }\n+\n+procedure Opt30 is\n+\n+   function Id_I (I : Integer) return Integer is\n+   begin\n+      return I;\n+   end;\n+\n+   A : array (Integer range -4..4) of Integer;\n+\n+begin\n+   A := (-ID_I(4), -ID_I(3), -ID_I(2), -ID_I(1), ID_I(100),\n+          ID_I(1), ID_I(2), ID_I(3), ID_I(4));\n+   A(-4..0) := A(0..4);\n+   if A /= (100, 1, 2, 3, 4, 1, 2, 3, 4) then\n+      raise Program_Error;\n+   end if;\n+end;"}, {"sha": "71f2c21965c3ae1c7912201937081c2652e66004", "filename": "gcc/tree-dfa.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/139bd704f15614f21dc1113235cc5bd2dd81238f/gcc%2Ftree-dfa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/139bd704f15614f21dc1113235cc5bd2dd81238f/gcc%2Ftree-dfa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.h?ref=139bd704f15614f21dc1113235cc5bd2dd81238f", "patch": "@@ -102,11 +102,11 @@ get_addr_base_and_unit_offset_1 (tree exp, HOST_WIDE_INT *poffset,\n \t\t&& (unit_size = array_ref_element_size (exp),\n \t\t    TREE_CODE (unit_size) == INTEGER_CST))\n \t      {\n-\t\tHOST_WIDE_INT hindex = TREE_INT_CST_LOW (index);\n-\n-\t\thindex -= TREE_INT_CST_LOW (low_bound);\n-\t\thindex *= TREE_INT_CST_LOW (unit_size);\n-\t\tbyte_offset += hindex;\n+\t\tdouble_int doffset\n+\t\t  = (TREE_INT_CST (index) - TREE_INT_CST (low_bound))\n+\t\t    .sext (TYPE_PRECISION (TREE_TYPE (index)));\n+\t\tdoffset *= tree_to_double_int (unit_size);\n+\t\tbyte_offset += doffset.to_shwi ();\n \t      }\n \t    else\n \t      return NULL_TREE;"}]}