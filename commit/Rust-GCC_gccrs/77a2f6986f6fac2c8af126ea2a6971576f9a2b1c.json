{"sha": "77a2f6986f6fac2c8af126ea2a6971576f9a2b1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdhMmY2OTg2ZjZmYWMyYzhhZjEyNmVhMmE2OTcxNTc2ZjlhMmIxYw==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-10-20T22:10:38Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-10-20T22:10:38Z"}, "message": "(TRAMPOLINE_TEMPLATE): Rewrite.\n\n(TRAMPOLINE_SIZE): Update with new size.\n(INITIALIZE_TRAMPOLINE): Rewrite.\n\nFrom-SVN: r5838", "tree": {"sha": "dcc63cd9792b0d67d8d746c45e1fe97f12cfc5b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcc63cd9792b0d67d8d746c45e1fe97f12cfc5b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77a2f6986f6fac2c8af126ea2a6971576f9a2b1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a2f6986f6fac2c8af126ea2a6971576f9a2b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a2f6986f6fac2c8af126ea2a6971576f9a2b1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a2f6986f6fac2c8af126ea2a6971576f9a2b1c/comments", "author": null, "committer": null, "parents": [{"sha": "bdc87462e73937f06523adba73e993a0b11d2a47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc87462e73937f06523adba73e993a0b11d2a47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc87462e73937f06523adba73e993a0b11d2a47"}], "stats": {"total": 56, "additions": 34, "deletions": 22}, "files": [{"sha": "7665c4722e7b2a8b05647a87b19ddf94a403ea9a", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 34, "deletions": 22, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77a2f6986f6fac2c8af126ea2a6971576f9a2b1c/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77a2f6986f6fac2c8af126ea2a6971576f9a2b1c/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=77a2f6986f6fac2c8af126ea2a6971576f9a2b1c", "patch": "@@ -1000,24 +1000,30 @@ extern union tree_node *current_function_decl;\n    flush multiple lines in the cache.  */\n \n #define TRAMPOLINE_TEMPLATE(FILE) \\\n-{\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\tldw 12(0,%%r22),%%r21\\n\");\t\\\n-  fprintf (FILE, \"\\tbe 0(4,%%r21)\\n\");\t\t\\\n-  fprintf (FILE, \"\\tldw 16(0,%%r22),%%r29\\n\");\t\\\n-  fprintf (FILE, \"\\t.word 0\\n\");\t\t\\\n-  fprintf (FILE, \"\\t.word 0\\n\");\t\t\\\n-}\n+  {\t\t\t\t\t\t\t\\\n+    fprintf (FILE, \"\\tldw\t36(0,%%r22),%%r21\\n\");\t\\\n+    fprintf (FILE, \"\\tbb,>=,n\t%%r21,30,.+16\\n\");\t\\\n+    fprintf (FILE, \"\\tdepi\t0,31,2,%%r21\\n\");\t\\\n+    fprintf (FILE, \"\\tldw\t4(0,%%r21),%%r19\\n\");\t\\\n+    fprintf (FILE, \"\\tldw\t0(0,%%r21),%%r21\\n\");\t\\\n+    fprintf (FILE, \"\\tldsid\t(0,%%r21),%%r1\\n\");\t\\\n+    fprintf (FILE, \"\\tmtsp\t%%r1,%%sr0\\n\");\t\t\\\n+    fprintf (FILE, \"\\tbe\t0(%%sr0,%%r21)\\n\");\t\\\n+    fprintf (FILE, \"\\tldw\t40(0,%%r22),%%r29\\n\");\t\\\n+    fprintf (FILE, \"\\t.word\t0\\n\");\t\t\t\\\n+    fprintf (FILE, \"\\t.word\t0\\n\");\t\t\t\\\n+  }\n \n /* Length in units of the trampoline for entering a nested function.\n \n    Flush the cache entries corresponding to the first and last addresses\n    of the trampoline.  This is necessary as the trampoline may cross two\n    cache lines.  \n \n-   If the trampoline ever grows to > 32 bytes, then it will become\n-   necessary to hack on the cacheflush pattern in pa.md.  */\n+   If the code part of the trampoline ever grows to > 32 bytes, then it\n+   will become necessary to hack on the cacheflush pattern in pa.md.  */\n \n-#define TRAMPOLINE_SIZE (5 * 4)\n+#define TRAMPOLINE_SIZE (11 * 4)\n \n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code.\n@@ -1027,18 +1033,24 @@ extern union tree_node *current_function_decl;\n    Move the static chain value to trampoline template at offset 16.  */\n \n #define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT) \\\n-{\t\t\t\t\t\t\t\t\\\n-  rtx start_addr, end_addr, mem;\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  start_addr = memory_address (Pmode, plus_constant ((TRAMP), 12));\\\n-  emit_move_insn (gen_rtx (MEM, Pmode, start_addr), (FNADDR));\t\\\n-  start_addr = memory_address (Pmode, plus_constant ((TRAMP), 16));\\\n-  emit_move_insn (gen_rtx (MEM, Pmode, start_addr), (CXT));\t\\\n-  /* fdc and fic only use registers for the address to flush,\t\\\n-     they do not accept integer displacements.  */ \t\t\\\n-  start_addr = force_reg (SImode, (TRAMP));\t\t\t\\\n-  end_addr = force_reg (SImode, plus_constant ((TRAMP), 8));\t\\\n-  emit_insn (gen_cacheflush (start_addr, end_addr));\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  rtx start_addr, end_addr, masked_start_addr;\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  start_addr = memory_address (Pmode, plus_constant ((TRAMP), 36));\t\\\n+  emit_move_insn (gen_rtx (MEM, Pmode, start_addr), (FNADDR));\t\t\\\n+  start_addr = memory_address (Pmode, plus_constant ((TRAMP), 40));\t\\\n+  emit_move_insn (gen_rtx (MEM, Pmode, start_addr), (CXT));\t\t\\\n+  /* fdc and fic only use registers for the address to flush,\t\t\\\n+     they do not accept integer displacements.  */ \t\t\t\\\n+  start_addr = force_reg (SImode, (TRAMP));\t\t\t\t\\\n+  end_addr = force_reg (SImode, plus_constant ((TRAMP), 32));\t\t\\\n+  emit_insn (gen_dcacheflush (start_addr, end_addr));\t\t\t\\\n+  masked_start_addr = gen_reg_rtx (SImode);\t\t\t\t\\\n+  emit_insn (gen_andsi3 (masked_start_addr, start_addr,\t\t\t\\\n+\t\t\t GEN_INT (0x3fffffff)));\t\t\t\\\n+  end_addr = force_reg (SImode, plus_constant (masked_start_addr, 32));\t\\\n+  emit_insn (gen_icacheflush (masked_start_addr, end_addr, start_addr,\t\\\n+\t\t\t      gen_reg_rtx (SImode), gen_reg_rtx (SImode)));\\\n }\n \n /* Emit code for a call to builtin_saveregs.  We must emit USE insns which"}]}