{"sha": "8972bcd8211f43b2e6485a9f669ff27b8c0509e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk3MmJjZDgyMTFmNDNiMmU2NDg1YTlmNjY5ZmYyN2I4YzA1MDllNg==", "commit": {"author": {"name": "Andrew Ruder", "email": "andy@aeruder.net", "date": "2007-04-22T04:44:37Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2007-04-22T04:44:37Z"}, "message": "sendmsg.c (__objc_get_forward_imp): Call __objc_msg_forward2 for real.\n\n2007-04-21  Andrew Ruder  <andy@aeruder.net>\n\n        * sendmsg.c (__objc_get_forward_imp): Call\n        __objc_msg_forward2 for real.\n\nFrom-SVN: r124035", "tree": {"sha": "5ea9dd4a44b6c9deacdc6a55e9684e0829e25213", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ea9dd4a44b6c9deacdc6a55e9684e0829e25213"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8972bcd8211f43b2e6485a9f669ff27b8c0509e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8972bcd8211f43b2e6485a9f669ff27b8c0509e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8972bcd8211f43b2e6485a9f669ff27b8c0509e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8972bcd8211f43b2e6485a9f669ff27b8c0509e6/comments", "author": {"login": "aeruder", "id": 130169, "node_id": "MDQ6VXNlcjEzMDE2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/130169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeruder", "html_url": "https://github.com/aeruder", "followers_url": "https://api.github.com/users/aeruder/followers", "following_url": "https://api.github.com/users/aeruder/following{/other_user}", "gists_url": "https://api.github.com/users/aeruder/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeruder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeruder/subscriptions", "organizations_url": "https://api.github.com/users/aeruder/orgs", "repos_url": "https://api.github.com/users/aeruder/repos", "events_url": "https://api.github.com/users/aeruder/events{/privacy}", "received_events_url": "https://api.github.com/users/aeruder/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f06b0a10f9843a34d6df20c7803d900ff177e908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06b0a10f9843a34d6df20c7803d900ff177e908", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f06b0a10f9843a34d6df20c7803d900ff177e908"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "7ae9dd78ed406a0a19c08226e14440fa253da87e", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8972bcd8211f43b2e6485a9f669ff27b8c0509e6/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8972bcd8211f43b2e6485a9f669ff27b8c0509e6/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=8972bcd8211f43b2e6485a9f669ff27b8c0509e6", "patch": "@@ -1,3 +1,8 @@\n+2007-04-21  Andrew Ruder  <andy@aeruder.net>\n+\n+\t* sendmsg.c (__objc_get_forward_imp): Call\n+\t__objc_msg_forward2 for real.\n+\n 2007-04-09  Andrew Ruder  <andy@aeruder.net>\n \n \t* sendmsg.c: Added __objc_msg_forward2, a hook that allows"}, {"sha": "a0b66baf6a2e3e923c0fb93c30c30ef98caf7404", "filename": "libobjc/sendmsg.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8972bcd8211f43b2e6485a9f669ff27b8c0509e6/libobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8972bcd8211f43b2e6485a9f669ff27b8c0509e6/libobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fsendmsg.c?ref=8972bcd8211f43b2e6485a9f669ff27b8c0509e6", "patch": "@@ -96,6 +96,12 @@ __objc_get_forward_imp (id rcv, SEL sel)\n   /* If a custom forwarding hook was registered, try getting a forwarding\n      function from it. There are two forward routine hooks, one that\n      takes the receiver as an argument and one that does not. */\n+  if (__objc_msg_forward2)\n+    {\n+      IMP result;\n+      if ((result = __objc_msg_forward2 (rcv, sel)) != NULL)\n+       return result;\n+    }\n   if (__objc_msg_forward)\n     {\n       IMP result;"}]}