{"sha": "7d37abedf58d664ccb9c06272303a10021ee36a7", "node_id": "C_kwDOANBUbNoAKDdkMzdhYmVkZjU4ZDY2NGNjYjljMDYyNzIzMDNhMTAwMjFlZTM2YTc", "commit": {"author": {"name": "Paul A. Clarke", "email": "pc@us.ibm.com", "date": "2021-10-25T20:18:33Z"}, "committer": {"name": "Paul A. Clarke", "email": "pc@us.ibm.com", "date": "2021-10-26T17:02:44Z"}, "message": "rs6000: Fixes for tests including only <x86intrin.h>\n\nTests which only include <x86intrin.h> expect many other include files\nto be brought in, but not enough are.\n\nTry to increase compatibility with x86 headers by:\n- Create new immintrin.h, including the analogous subset of intrinsics\n  headers available for powerpc.\n- Create new x86gprintrin.h, serving exclusively as the umbrella for\n  bmiintrin.h and bmi2intrin.h.\n- Modify x86intrin.h:\n  - Include new immintrin.h.\n  - Remove mmintrin.h, xmmintrin.h, emmintrin.h, now included indirectly\n    from immintrin.h.\n  - Remove bmiintrin.h, bmi2intrin.h, now included indirectly from\n    x86gprintrin.h (which is now included from immintrin.h).\n\nAdd the new files to gcc/config.gcc.\n\nAlso, fix up the testcase that provoked PR102719, which requires\nPower8 vector support.\n\nFixes commit 29fb1e831bf1c25e4574bf2f98a9f534e5c67665.\n\n2021-10-25  Paul A. Clarke  <pc@us.ibm.com>\n\ngcc\n\tPR target/102719\n\t* config/rs6000/x86intrin.h: Move some included headers to new\n\theaders.  Include new immintrin.h instead of those headers.\n\t* config/rs6000/immintrin.h: New.\n\t* config/rs6000/x86gprintrin.h: New.\n\t* config.gcc (powerpc*-*-*): Add new headers to extra_headers.\n\ngcc/testsuite\n\t* gcc.target/powerpc/pr78102.c: Fix dg directives to require Power8\n\tvector support.  Also, add -DNO_WARN_X86_INTRINSICS.", "tree": {"sha": "760cfdd427e02623de8ae84c63190e19396e5e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/760cfdd427e02623de8ae84c63190e19396e5e4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d37abedf58d664ccb9c06272303a10021ee36a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d37abedf58d664ccb9c06272303a10021ee36a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d37abedf58d664ccb9c06272303a10021ee36a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d37abedf58d664ccb9c06272303a10021ee36a7/comments", "author": {"login": "ThinkOpenly", "id": 12301795, "node_id": "MDQ6VXNlcjEyMzAxNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/12301795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkOpenly", "html_url": "https://github.com/ThinkOpenly", "followers_url": "https://api.github.com/users/ThinkOpenly/followers", "following_url": "https://api.github.com/users/ThinkOpenly/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkOpenly/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkOpenly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkOpenly/subscriptions", "organizations_url": "https://api.github.com/users/ThinkOpenly/orgs", "repos_url": "https://api.github.com/users/ThinkOpenly/repos", "events_url": "https://api.github.com/users/ThinkOpenly/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkOpenly/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThinkOpenly", "id": 12301795, "node_id": "MDQ6VXNlcjEyMzAxNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/12301795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkOpenly", "html_url": "https://github.com/ThinkOpenly", "followers_url": "https://api.github.com/users/ThinkOpenly/followers", "following_url": "https://api.github.com/users/ThinkOpenly/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkOpenly/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkOpenly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkOpenly/subscriptions", "organizations_url": "https://api.github.com/users/ThinkOpenly/orgs", "repos_url": "https://api.github.com/users/ThinkOpenly/repos", "events_url": "https://api.github.com/users/ThinkOpenly/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkOpenly/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5469d58d6620195c6275d11b474d686f5921c3ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5469d58d6620195c6275d11b474d686f5921c3ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5469d58d6620195c6275d11b474d686f5921c3ba"}], "stats": {"total": 88, "additions": 76, "deletions": 12}, "files": [{"sha": "efd1f42ac234d9c73aaf952e229027c36beb4f2f", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=7d37abedf58d664ccb9c06272303a10021ee36a7", "patch": "@@ -490,7 +490,7 @@ powerpc*-*-*)\n \textra_headers=\"${extra_headers} xmmintrin.h mm_malloc.h emmintrin.h\"\n \textra_headers=\"${extra_headers} mmintrin.h x86intrin.h\"\n \textra_headers=\"${extra_headers} pmmintrin.h tmmintrin.h smmintrin.h\"\n-\textra_headers=\"${extra_headers} nmmintrin.h\"\n+\textra_headers=\"${extra_headers} nmmintrin.h immintrin.h x86gprintrin.h\"\n \textra_headers=\"${extra_headers} ppu_intrinsics.h spu2vmx.h vec_types.h si2vmx.h\"\n \textra_headers=\"${extra_headers} amo.h\"\n \tcase x$with_cpu in"}, {"sha": "647a5ae49b5a69085d5c0930cf4a6f9b81032a9d", "filename": "gcc/config/rs6000/immintrin.h", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Fconfig%2Frs6000%2Fimmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Fconfig%2Frs6000%2Fimmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fimmintrin.h?ref=7d37abedf58d664ccb9c06272303a10021ee36a7", "patch": "@@ -0,0 +1,41 @@\n+/* Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef _IMMINTRIN_H_INCLUDED\n+#define _IMMINTRIN_H_INCLUDED\n+\n+#include <x86gprintrin.h>\n+\n+#include <mmintrin.h>\n+\n+#include <xmmintrin.h>\n+\n+#include <emmintrin.h>\n+\n+#include <pmmintrin.h>\n+\n+#include <tmmintrin.h>\n+\n+#include <smmintrin.h>\n+\n+#endif /* _IMMINTRIN_H_INCLUDED */"}, {"sha": "57ef120f805f1ecadb7db9f1c8f87f28267d4f6f", "filename": "gcc/config/rs6000/x86gprintrin.h", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Fconfig%2Frs6000%2Fx86gprintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Fconfig%2Frs6000%2Fx86gprintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx86gprintrin.h?ref=7d37abedf58d664ccb9c06272303a10021ee36a7", "patch": "@@ -0,0 +1,31 @@\n+/* Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef _X86GPRINTRIN_H_INCLUDED\n+#define _X86GPRINTRIN_H_INCLUDED\n+\n+#include <bmiintrin.h>\n+\n+#include <bmi2intrin.h>\n+\n+#endif /* _X86GPRINTRIN_H_INCLUDED.  */"}, {"sha": "e8aa922dcf036736232b27ee430a6572241014b1", "filename": "gcc/config/rs6000/x86intrin.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Fconfig%2Frs6000%2Fx86intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Fconfig%2Frs6000%2Fx86intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx86intrin.h?ref=7d37abedf58d664ccb9c06272303a10021ee36a7", "patch": "@@ -36,15 +36,7 @@\n #define _X86INTRIN_H_INCLUDED\n \n #ifdef __ALTIVEC__\n-#include <mmintrin.h>\n-\n-#include <xmmintrin.h>\n-\n-#include <emmintrin.h>\n+#include <immintrin.h>\n #endif /* __ALTIVEC__ */\n \n-#include <bmiintrin.h>\n-\n-#include <bmi2intrin.h>\n-\n #endif /* _X86INTRIN_H_INCLUDED */"}, {"sha": "0b5091082754db083e2ec7a3a711eca19af42d13", "filename": "gcc/testsuite/gcc.target/powerpc/pr78102.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78102.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d37abedf58d664ccb9c06272303a10021ee36a7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78102.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr78102.c?ref=7d37abedf58d664ccb9c06272303a10021ee36a7", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mvsx\" } */\n-/* { dg-require-effective-target vsx_hw } */\n+/* { dg-options \"-O2 -mdejagnu-cpu=power8 -DNO_WARN_X86_INTRINSICS\" } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n \n #include <x86intrin.h>\n "}]}