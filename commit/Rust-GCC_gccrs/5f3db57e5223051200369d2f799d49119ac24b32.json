{"sha": "5f3db57e5223051200369d2f799d49119ac24b32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYzZGI1N2U1MjIzMDUxMjAwMzY5ZDJmNzk5ZDQ5MTE5YWMyNGIzMg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-02-05T14:38:32Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-05T14:38:32Z"}, "message": "loop.c (strength_reduce): Clear not_every_iteration when passing the NOTE_INSN_LOOP_CONT note.\n\n        * loop.c (strength_reduce): Clear not_every_iteration when\n        passing the NOTE_INSN_LOOP_CONT note.\n\nFrom-SVN: r25050", "tree": {"sha": "02c9bfa56c1e0180e91d432e214da935d14be972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02c9bfa56c1e0180e91d432e214da935d14be972"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f3db57e5223051200369d2f799d49119ac24b32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3db57e5223051200369d2f799d49119ac24b32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3db57e5223051200369d2f799d49119ac24b32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3db57e5223051200369d2f799d49119ac24b32/comments", "author": null, "committer": null, "parents": [{"sha": "d33c2956a4cce7a752b6326ea2f5ad5b2d12e259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d33c2956a4cce7a752b6326ea2f5ad5b2d12e259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d33c2956a4cce7a752b6326ea2f5ad5b2d12e259"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "1fdb2f0f21a36058ce3522bf75c08c4d291d9b67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3db57e5223051200369d2f799d49119ac24b32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3db57e5223051200369d2f799d49119ac24b32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f3db57e5223051200369d2f799d49119ac24b32", "patch": "@@ -9,6 +9,9 @@ Fri Feb  5 11:49:49 1999  Benjamin Kosnik  <bkoz@loony.cygnus.com>\n \n Fri Feb  5 12:37:05 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* loop.c (strength_reduce): Clear not_every_iteration when \n+\tpassing the NOTE_INSN_LOOP_CONT note.\n+\n \t* haifa-sched.c (add_dependence): Do not add a dependency on a\n \tnote.\n "}, {"sha": "29ef980ab9aa4993c9b500966ed87ef3f27bc376", "filename": "gcc/loop.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3db57e5223051200369d2f799d49119ac24b32/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3db57e5223051200369d2f799d49119ac24b32/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=5f3db57e5223051200369d2f799d49119ac24b32", "patch": "@@ -3824,8 +3824,13 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t{\n \t  /* At the virtual top of a converted loop, insns are again known to\n \t     be executed each iteration: logically, the loop begins here\n-\t     even though the exit code has been duplicated.  */\n-\t  if (NOTE_LINE_NUMBER (p) == NOTE_INSN_LOOP_VTOP && loop_depth == 0)\n+\t     even though the exit code has been duplicated.\n+\n+\t     Insns are also again known to be executed each iteration at\n+\t     the LOOP_CONT note.  */\n+\t  if ((NOTE_LINE_NUMBER (p) == NOTE_INSN_LOOP_VTOP\n+\t       || NOTE_LINE_NUMBER (p) == NOTE_INSN_LOOP_CONT)\n+\t      && loop_depth == 0)\n \t    not_every_iteration = 0;\n \t  else if (NOTE_LINE_NUMBER (p) == NOTE_INSN_LOOP_BEG)\n \t    loop_depth++;\n@@ -4381,8 +4386,13 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t{\n \t  /* At the virtual top of a converted loop, insns are again known to\n \t     be executed each iteration: logically, the loop begins here\n-\t     even though the exit code has been duplicated.  */\n-\t  if (NOTE_LINE_NUMBER (p) == NOTE_INSN_LOOP_VTOP && loop_depth == 0)\n+\t     even though the exit code has been duplicated.\n+\n+\t     Insns are also again known to be executed each iteration at\n+\t     the LOOP_CONT note.  */\n+\t  if ((NOTE_LINE_NUMBER (p) == NOTE_INSN_LOOP_VTOP\n+\t       || NOTE_LINE_NUMBER (p) == NOTE_INSN_LOOP_CONT)\n+\t      && loop_depth == 0)\n \t    not_every_iteration = 0;\n \t  else if (NOTE_LINE_NUMBER (p) == NOTE_INSN_LOOP_BEG)\n \t    loop_depth++;"}]}