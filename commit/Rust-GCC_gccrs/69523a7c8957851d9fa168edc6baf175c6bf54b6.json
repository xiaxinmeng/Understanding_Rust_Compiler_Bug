{"sha": "69523a7c8957851d9fa168edc6baf175c6bf54b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk1MjNhN2M4OTU3ODUxZDlmYTE2OGVkYzZiYWYxNzVjNmJmNTRiNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-05-06T18:55:20Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-05-06T18:55:20Z"}, "message": "lower-subreg.c (shift_cost): Use set_src_cost, avoiding the SET.\n\ngcc/\n\t* lower-subreg.c (shift_cost): Use set_src_cost, avoiding the SET.\n\t(compute_costs): Likewise for the zero extension.  Use set_rtx_cost\n\tto compute the cost of moves.  Set the mode of the target register.\n\nFrom-SVN: r187212", "tree": {"sha": "38d5ee74697d7aec32694c08a36c9d4d17ab1fcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38d5ee74697d7aec32694c08a36c9d4d17ab1fcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69523a7c8957851d9fa168edc6baf175c6bf54b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69523a7c8957851d9fa168edc6baf175c6bf54b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69523a7c8957851d9fa168edc6baf175c6bf54b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69523a7c8957851d9fa168edc6baf175c6bf54b6/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fe977f2d691e6c3b03056a5d9eae223d67ac526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fe977f2d691e6c3b03056a5d9eae223d67ac526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fe977f2d691e6c3b03056a5d9eae223d67ac526"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "8d6637fbc1973971f51d88cda1d624b3cb5574f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69523a7c8957851d9fa168edc6baf175c6bf54b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69523a7c8957851d9fa168edc6baf175c6bf54b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69523a7c8957851d9fa168edc6baf175c6bf54b6", "patch": "@@ -1,3 +1,9 @@\n+2012-05-06  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* lower-subreg.c (shift_cost): Use set_src_cost, avoiding the SET.\n+\t(compute_costs): Likewise for the zero extension.  Use set_rtx_cost\n+\tto compute the cost of moves.  Set the mode of the target register.\n+\n 2012-05-05  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* rtl.h (plus_constant, plus_constant_mode): Merge into a single"}, {"sha": "4a9227512963ad0919080e8e6ad52f5d9700b6bf", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69523a7c8957851d9fa168edc6baf175c6bf54b6/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69523a7c8957851d9fa168edc6baf175c6bf54b6/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=69523a7c8957851d9fa168edc6baf175c6bf54b6", "patch": "@@ -135,13 +135,11 @@ static int\n shift_cost (bool speed_p, struct cost_rtxes *rtxes, enum rtx_code code,\n \t    enum machine_mode mode, int op1)\n {\n-  PUT_MODE (rtxes->target, mode);\n   PUT_CODE (rtxes->shift, code);\n   PUT_MODE (rtxes->shift, mode);\n   PUT_MODE (rtxes->source, mode);\n   XEXP (rtxes->shift, 1) = GEN_INT (op1);\n-  SET_SRC (rtxes->set) = rtxes->shift;\n-  return insn_rtx_cost (rtxes->set, speed_p);\n+  return set_src_cost (rtxes->shift, speed_p);\n }\n \n /* For each X in the range [0, BITS_PER_WORD), set SPLITTING[X]\n@@ -189,11 +187,12 @@ compute_costs (bool speed_p, struct cost_rtxes *rtxes)\n   unsigned int i;\n   int word_move_zero_cost, word_move_cost;\n \n+  PUT_MODE (rtxes->target, word_mode);\n   SET_SRC (rtxes->set) = CONST0_RTX (word_mode);\n-  word_move_zero_cost = insn_rtx_cost (rtxes->set, speed_p);\n+  word_move_zero_cost = set_rtx_cost (rtxes->set, speed_p);\n \n   SET_SRC (rtxes->set) = rtxes->source;\n-  word_move_cost = insn_rtx_cost (rtxes->set, speed_p);\n+  word_move_cost = set_rtx_cost (rtxes->set, speed_p);\n \n   if (LOG_COSTS)\n     fprintf (stderr, \"%s move: from zero cost %d, from reg cost %d\\n\",\n@@ -209,7 +208,7 @@ compute_costs (bool speed_p, struct cost_rtxes *rtxes)\n \n \t  PUT_MODE (rtxes->target, mode);\n \t  PUT_MODE (rtxes->source, mode);\n-\t  mode_move_cost = insn_rtx_cost (rtxes->set, speed_p);\n+\t  mode_move_cost = set_rtx_cost (rtxes->set, speed_p);\n \n \t  if (LOG_COSTS)\n \t    fprintf (stderr, \"%s move: original cost %d, split cost %d * %d\\n\",\n@@ -236,10 +235,8 @@ compute_costs (bool speed_p, struct cost_rtxes *rtxes)\n \n       /* The only case here to check to see if moving the upper part with a\n \t zero is cheaper than doing the zext itself.  */\n-      PUT_MODE (rtxes->target, twice_word_mode);\n       PUT_MODE (rtxes->source, word_mode);\n-      SET_SRC (rtxes->set) = rtxes->zext;\n-      zext_cost = insn_rtx_cost (rtxes->set, speed_p);\n+      zext_cost = set_src_cost (rtxes->zext, speed_p);\n \n       if (LOG_COSTS)\n \tfprintf (stderr, \"%s %s: original cost %d, split cost %d + %d\\n\","}]}