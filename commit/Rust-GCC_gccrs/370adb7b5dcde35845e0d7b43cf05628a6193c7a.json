{"sha": "370adb7b5dcde35845e0d7b43cf05628a6193c7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcwYWRiN2I1ZGNkZTM1ODQ1ZTBkN2I0M2NmMDU2MjhhNjE5M2M3YQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2006-07-29T13:14:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-07-29T13:14:22Z"}, "message": "re PR middle-end/28071 (A file that can not be compiled in reasonable time/space)\n\n\n\tPR rtl-optimization/28071\n\t* cfgrtl.c (rtl_delete_block): Free regsets.\n\t* flow.c (allocate_bb_life_data): Re-use regsets if available.\n\nFrom-SVN: r115810", "tree": {"sha": "331dc480555ba8c366d3435b80e94c76d4cc12f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/331dc480555ba8c366d3435b80e94c76d4cc12f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/370adb7b5dcde35845e0d7b43cf05628a6193c7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370adb7b5dcde35845e0d7b43cf05628a6193c7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370adb7b5dcde35845e0d7b43cf05628a6193c7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370adb7b5dcde35845e0d7b43cf05628a6193c7a/comments", "author": null, "committer": null, "parents": [{"sha": "76ebb8de0046b5bbdb13c086618be11becd964d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ebb8de0046b5bbdb13c086618be11becd964d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ebb8de0046b5bbdb13c086618be11becd964d1"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "32c5848fc05b2af1176533ba9a306aa842607e8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370adb7b5dcde35845e0d7b43cf05628a6193c7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370adb7b5dcde35845e0d7b43cf05628a6193c7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=370adb7b5dcde35845e0d7b43cf05628a6193c7a", "patch": "@@ -1,3 +1,9 @@\n+2006-07-28  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR rtl-optimization/28071\n+\t* cfgrtl.c (rtl_delete_block): Free regsets.\n+\t* flow.c (allocate_bb_life_data): Re-use regsets if available.\n+\n 2006-07-28  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \t* Makefile.in: Use $(HEADER_H) instead of header.h in dependencies"}, {"sha": "b07bb9467eb17365c363ed7f071e89818ff6f9d3", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370adb7b5dcde35845e0d7b43cf05628a6193c7a/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370adb7b5dcde35845e0d7b43cf05628a6193c7a/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=370adb7b5dcde35845e0d7b43cf05628a6193c7a", "patch": "@@ -386,6 +386,13 @@ rtl_delete_block (basic_block b)\n   /* Selectively delete the entire chain.  */\n   BB_HEAD (b) = NULL;\n   delete_insn_chain (insn, end);\n+  if (b->il.rtl->global_live_at_start)\n+    {\n+      FREE_REG_SET (b->il.rtl->global_live_at_start);\n+      FREE_REG_SET (b->il.rtl->global_live_at_end);\n+      b->il.rtl->global_live_at_start = NULL;\n+      b->il.rtl->global_live_at_end = NULL;\n+    }\n }\n \f\n /* Records the basic block struct in BLOCK_FOR_INSN for every insn.  */"}, {"sha": "4989db3e39019da782645410f078bcbb99001440", "filename": "gcc/flow.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/370adb7b5dcde35845e0d7b43cf05628a6193c7a/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/370adb7b5dcde35845e0d7b43cf05628a6193c7a/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=370adb7b5dcde35845e0d7b43cf05628a6193c7a", "patch": "@@ -1564,8 +1564,16 @@ allocate_bb_life_data (void)\n \n   FOR_BB_BETWEEN (bb, ENTRY_BLOCK_PTR, NULL, next_bb)\n     {\n-      bb->il.rtl->global_live_at_start = ALLOC_REG_SET (&reg_obstack);\n-      bb->il.rtl->global_live_at_end = ALLOC_REG_SET (&reg_obstack);\n+      if (bb->il.rtl->global_live_at_start)\n+\t{\n+\t  CLEAR_REG_SET (bb->il.rtl->global_live_at_start);\n+\t  CLEAR_REG_SET (bb->il.rtl->global_live_at_end);\n+\t}\n+      else\n+\t{\n+\t  bb->il.rtl->global_live_at_start = ALLOC_REG_SET (&reg_obstack);\n+\t  bb->il.rtl->global_live_at_end = ALLOC_REG_SET (&reg_obstack);\n+\t}\n     }\n \n   regs_live_at_setjmp = ALLOC_REG_SET (&reg_obstack);"}]}