{"sha": "64a87aa5dbb2a62a042a2449e30c0fdddd8009e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRhODdhYTVkYmIyYTYyYTA0MmEyNDQ5ZTMwYzBmZGRkZDgwMDllOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-11-14T11:42:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-11-14T11:42:26Z"}, "message": "[Ada] Remove couple of recently added dead tests\n\nN_Quantified_Expression and N_Iterated_Component_Association are\nunrelated nodes that cannot appear in the same context: the former can\nappear wherever an expression node is acceptable whereas the latter can\nappear only as an element of a component association list.  So a test\ncombining both most likely contains a dead arm and this change removes a\ncouple of them.\n\nNo functional changes.\n\n2018-11-14  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_aggr.adb (Check_Static_Components): Remove dead test.\n\t(Flatten): Likewise.  Move comment around.\n\nFrom-SVN: r266133", "tree": {"sha": "a8585897b86b7c000a8bc4d68a08fb2c5b7fa2a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8585897b86b7c000a8bc4d68a08fb2c5b7fa2a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64a87aa5dbb2a62a042a2449e30c0fdddd8009e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a87aa5dbb2a62a042a2449e30c0fdddd8009e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64a87aa5dbb2a62a042a2449e30c0fdddd8009e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a87aa5dbb2a62a042a2449e30c0fdddd8009e8/comments", "author": null, "committer": null, "parents": [{"sha": "a2c54c951479b2eb5315f859a7035f48a3256c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c54c951479b2eb5315f859a7035f48a3256c50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c54c951479b2eb5315f859a7035f48a3256c50"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "742379be676d448e78f5522164bd24e254500d93", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a87aa5dbb2a62a042a2449e30c0fdddd8009e8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a87aa5dbb2a62a042a2449e30c0fdddd8009e8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=64a87aa5dbb2a62a042a2449e30c0fdddd8009e8", "patch": "@@ -1,3 +1,8 @@\n+2018-11-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_aggr.adb (Check_Static_Components): Remove dead test.\n+\t(Flatten): Likewise.  Move comment around.\n+\n 2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Null_Procedure): Capture Ghost and"}, {"sha": "7fc7a87f91aa1cc166d095654f7ccaa5e68a58c7", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a87aa5dbb2a62a042a2449e30c0fdddd8009e8/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a87aa5dbb2a62a042a2449e30c0fdddd8009e8/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=64a87aa5dbb2a62a042a2449e30c0fdddd8009e8", "patch": "@@ -4367,8 +4367,7 @@ package body Exp_Aggr is\n                elsif Nkind (Expression (Expr)) /= N_Aggregate\n                  or else not Compile_Time_Known_Aggregate (Expression (Expr))\n                  or else Expansion_Delayed (Expression (Expr))\n-                 or else Nkind_In (Expr, N_Iterated_Component_Association,\n-                                         N_Quantified_Expression)\n+                 or else Nkind (Expr) = N_Iterated_Component_Association\n                then\n                   Static_Components := False;\n                   exit;\n@@ -4521,16 +4520,15 @@ package body Exp_Aggr is\n \n                   --  If we have an others choice, fill in the missing elements\n                   --  subject to the limit established by Max_Others_Replicate.\n-                  --  If the expression involves a construct that generates\n-                  --  a loop, we must generate individual assignments and\n-                  --  no flattening is possible.\n \n                   if Nkind (Choice) = N_Others_Choice then\n                      Rep_Count := 0;\n \n-                     if Nkind_In (Expression (Elmt),\n-                                  N_Iterated_Component_Association,\n-                                  N_Quantified_Expression)\n+                     --  If the expression involves a construct that generates\n+                     --  a loop, we must generate individual assignments and\n+                     --  no flattening is possible.\n+\n+                     if Nkind (Expression (Elmt)) = N_Quantified_Expression\n                      then\n                         return False;\n                      end if;"}]}