{"sha": "935469daaa5c02ac5104c0d5c04a1f12e23529b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM1NDY5ZGFhYTVjMDJhYzUxMDRjMGQ1YzA0YTFmMTJlMjM1MjliMQ==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2019-05-17T04:55:37Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2019-05-17T04:55:37Z"}, "message": "Move from state of allocators (LWG2593)\n\n2019-05-17  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\tMove from state of allocators (LWG2593)\n\t* include/bits/stl_deque.h\n\t(_Deque_base(_Deque_base&&, false_type)): Remove.\n\t(_Deque_base(_Deque_base&&, true_type)): Remove.\n\t(_Deque_base(_Deque_base&&)): Adapt.\n\t(_Deque_base::_M_move_impl()): Remove.\n\t* testsuite/util/testsuite_allocator.h\n\t(propagating_allocator(propagating_allocator&&)): Preserve move from\n\tstate.\n\t* testsuite/23_containers/deque/allocator/move_assign.cc (test02):\n\tAdapt.\n\t* testsuite/23_containers/forward_list/allocator/move_assign.cc (test02):\n\tAdapt.\n\t* testsuite/23_containers/list/allocator/move_assign.cc (test02): Adapt.\n\t* testsuite/23_containers/map/allocator/move_assign.cc (test02): Adapt.\n\t* testsuite/23_containers/multimap/allocator/move_assign.cc (test02):\n\tAdapt.\n\t* testsuite/23_containers/multiset/allocator/move_assign.cc (test02):\n\tAdapt.\n\t* testsuite/23_containers/set/allocator/move_assign.cc (test02): Adapt.\n\t* testsuite/23_containers/unordered_map/allocator/move_assign.cc\n\t(test02): Adapt.\n\t* testsuite/23_containers/unordered_multimap/allocator/move_assign.cc\n\t(test02): Adapt.\n\t* testsuite/23_containers/unordered_multiset/allocator/move_assign.cc\n\t(test02): Adapt.\n\t* testsuite/23_containers/unordered_set/allocator/move_assign.cc\n\t(test02): Adapt.\n\t* testsuite/23_containers/vector/allocator/move_assign.cc (test02):\n\tAdapt.\n\t* testsuite/23_containers/vector/bool/allocator/move_assign.cc (test02):\n\tAdapt.\n\t* testsuite/21_strings/basic_string/allocator/char/move_assign.cc\n\t(test02): Adapt.\n\t* testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc\n\t(test02): Adapt.\n\nFrom-SVN: r271309", "tree": {"sha": "37f387121dc323ef876f4df0a95dcd0abae8623b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37f387121dc323ef876f4df0a95dcd0abae8623b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/935469daaa5c02ac5104c0d5c04a1f12e23529b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935469daaa5c02ac5104c0d5c04a1f12e23529b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935469daaa5c02ac5104c0d5c04a1f12e23529b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935469daaa5c02ac5104c0d5c04a1f12e23529b1/comments", "author": null, "committer": null, "parents": [{"sha": "395389bf9492a69db79747943d32abd0b7ac36c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/395389bf9492a69db79747943d32abd0b7ac36c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/395389bf9492a69db79747943d32abd0b7ac36c3"}], "stats": {"total": 122, "additions": 65, "deletions": 57}, "files": [{"sha": "5ba8c2212e357b5940378fe96784d34692b476ed", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -1,3 +1,42 @@\n+2019-05-17  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\tMove from state of allocators (LWG2593)\n+\t* include/bits/stl_deque.h\n+\t(_Deque_base(_Deque_base&&, false_type)): Remove.\n+\t(_Deque_base(_Deque_base&&, true_type)): Remove.\n+\t(_Deque_base(_Deque_base&&)): Adapt.\n+\t(_Deque_base::_M_move_impl()): Remove.\n+\t* testsuite/util/testsuite_allocator.h\n+\t(propagating_allocator(propagating_allocator&&)): Preserve move from\n+\tstate.\n+\t* testsuite/23_containers/deque/allocator/move_assign.cc (test02):\n+\tAdapt.\n+\t* testsuite/23_containers/forward_list/allocator/move_assign.cc (test02):\n+\tAdapt.\n+\t* testsuite/23_containers/list/allocator/move_assign.cc (test02): Adapt.\n+\t* testsuite/23_containers/map/allocator/move_assign.cc (test02): Adapt.\n+\t* testsuite/23_containers/multimap/allocator/move_assign.cc (test02):\n+\tAdapt.\n+\t* testsuite/23_containers/multiset/allocator/move_assign.cc (test02):\n+\tAdapt.\n+\t* testsuite/23_containers/set/allocator/move_assign.cc (test02): Adapt.\n+\t* testsuite/23_containers/unordered_map/allocator/move_assign.cc\n+\t(test02): Adapt.\n+\t* testsuite/23_containers/unordered_multimap/allocator/move_assign.cc\n+\t(test02): Adapt.\n+\t* testsuite/23_containers/unordered_multiset/allocator/move_assign.cc\n+\t(test02): Adapt.\n+\t* testsuite/23_containers/unordered_set/allocator/move_assign.cc\n+\t(test02): Adapt.\n+\t* testsuite/23_containers/vector/allocator/move_assign.cc (test02):\n+\tAdapt.\n+\t* testsuite/23_containers/vector/bool/allocator/move_assign.cc (test02):\n+\tAdapt.\n+\t* testsuite/21_strings/basic_string/allocator/char/move_assign.cc\n+\t(test02): Adapt.\n+\t* testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc\n+\t(test02): Adapt.\n+\n 2019-05-16  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* src/c++17/fs_ops.cc (absolute(const path&, error_code&))"}, {"sha": "d0b46c671d348e01d7d17a78b962c52b95922bb0", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -500,22 +500,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       { /* Caller must initialize map. */ }\n \n #if __cplusplus >= 201103L\n-      _Deque_base(_Deque_base&& __x, false_type)\n-      : _M_impl(__x._M_move_impl())\n-      { }\n-\n-      _Deque_base(_Deque_base&& __x, true_type)\n+      _Deque_base(_Deque_base&& __x)\n       : _M_impl(std::move(__x._M_get_Tp_allocator()))\n       {\n \t_M_initialize_map(0);\n \tif (__x._M_impl._M_map)\n \t  this->_M_impl._M_swap_data(__x._M_impl);\n       }\n \n-      _Deque_base(_Deque_base&& __x)\n-      : _Deque_base(std::move(__x), typename _Alloc_traits::is_always_equal{})\n-      { }\n-\n       _Deque_base(_Deque_base&& __x, const allocator_type& __a, size_t __n)\n       : _M_impl(__a)\n       {\n@@ -627,29 +619,6 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       enum { _S_initial_map_size = 8 };\n \n       _Deque_impl _M_impl;\n-\n-#if __cplusplus >= 201103L\n-    private:\n-      _Deque_impl\n-      _M_move_impl()\n-      {\n-\tif (!_M_impl._M_map)\n-\t  return std::move(_M_impl);\n-\n-\t// Create a copy of the current allocator.\n-\t_Tp_alloc_type __alloc{_M_get_Tp_allocator()};\n-\t// Put that copy in a moved-from state.\n-\t_Tp_alloc_type __sink __attribute((__unused__)) {std::move(__alloc)};\n-\t// Create an empty map that allocates using the moved-from allocator.\n-\t_Deque_base __empty{__alloc};\n-\t__empty._M_initialize_map(0);\n-\t// Now safe to modify current allocator and perform non-throwing swaps.\n-\t_Deque_impl __ret{std::move(_M_get_Tp_allocator())};\n-\t_M_impl._M_swap_data(__ret);\n-\t_M_impl._M_swap_data(__empty._M_impl);\n-\treturn __ret;\n-      }\n-#endif\n     };\n \n   template<typename _Tp, typename _Alloc>"}, {"sha": "d021831caeee757278dc943670d00beef9b8a236", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/char/move_assign.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fchar%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -80,31 +80,31 @@ void test02()\n   test_type v2(alloc_type(2));\n   v2.assign(1, c);\n   v2 = std::move(v1);\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n \n   test_type v3(alloc_type(3));\n   v3.assign(1, c);\n   test_type v4(alloc_type(4));\n   v4.assign(100, c);\n   v4 = std::move(v3);\n-  VERIFY(0 == v3.get_allocator().get_personality());\n+  VERIFY(3 == v3.get_allocator().get_personality());\n   VERIFY(3 == v4.get_allocator().get_personality());\n \n   test_type v5(alloc_type(5));\n   v5.assign(100, c);\n   test_type v6(alloc_type(6));\n   v6.assign(1, c);\n   v6 = std::move(v5);\n-  VERIFY(0 == v5.get_allocator().get_personality());\n+  VERIFY(5 == v5.get_allocator().get_personality());\n   VERIFY(5 == v6.get_allocator().get_personality());\n \n   test_type v7(alloc_type(7));\n   v7.assign(100, c);\n   test_type v8(alloc_type(8));\n   v8.assign(100, c);\n   v8 = std::move(v7);\n-  VERIFY(0 == v7.get_allocator().get_personality());\n+  VERIFY(7 == v7.get_allocator().get_personality());\n   VERIFY(7 == v8.get_allocator().get_personality());\n }\n "}, {"sha": "66a5036c5b81703f254a0108e1a7df3a812bd98b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fallocator%2Fwchar_t%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -80,31 +80,31 @@ void test02()\n   test_type v2(alloc_type(2));\n   v2.assign(1, c);\n   v2 = std::move(v1);\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n \n   test_type v3(alloc_type(3));\n   v3.assign(1, c);\n   test_type v4(alloc_type(4));\n   v4.assign(100, c);\n   v4 = std::move(v3);\n-  VERIFY(0 == v3.get_allocator().get_personality());\n+  VERIFY(3 == v3.get_allocator().get_personality());\n   VERIFY(3 == v4.get_allocator().get_personality());\n \n   test_type v5(alloc_type(5));\n   v5.assign(100, c);\n   test_type v6(alloc_type(6));\n   v6.assign(1, c);\n   v6 = std::move(v5);\n-  VERIFY(0 == v5.get_allocator().get_personality());\n+  VERIFY(5 == v5.get_allocator().get_personality());\n   VERIFY(5 == v6.get_allocator().get_personality());\n \n   test_type v7(alloc_type(7));\n   v7.assign(100, c);\n   test_type v8(alloc_type(8));\n   v8.assign(100, c);\n   v8 = std::move(v7);\n-  VERIFY(0 == v7.get_allocator().get_personality());\n+  VERIFY(7 == v7.get_allocator().get_personality());\n   VERIFY(7 == v8.get_allocator().get_personality());\n }\n "}, {"sha": "2eb66af9040e85d148229cbb2bc66bbcc094240d", "filename": "libstdc++-v3/testsuite/23_containers/deque/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -45,7 +45,7 @@ void test02()\n   test_type v2(1, alloc_type(2));\n   v2 = std::move(v1);\n   VERIFY( it == v2.begin() );\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n }\n "}, {"sha": "118ac2353916bd1b30dd8300643b2a7c5897a3fe", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -48,7 +48,7 @@ void test02()\n   test_type v2(alloc_type(2));\n   v2.push_front(T());\n   v2 = std::move(v1);\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n   VERIFY( it == v2.begin() );\n }"}, {"sha": "e739fadacef8494d2db421fb230135be2f2b1892", "filename": "libstdc++-v3/testsuite/23_containers/list/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -48,7 +48,7 @@ void test02()\n   test_type v2(alloc_type(2));\n   v2.push_front(T());\n   v2 = std::move(v1);\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n   VERIFY( it == v2.begin() );\n }"}, {"sha": "828e4dd7cc7388836bccf00c946a737c8750404e", "filename": "libstdc++-v3/testsuite/23_containers/map/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -58,7 +58,7 @@ void test02()\n   v2 = { test_type::value_type{} };\n   v2 = std::move(v1);\n \n-  VERIFY( 0 == v1.get_allocator().get_personality() );\n+  VERIFY( 1 == v1.get_allocator().get_personality() );\n   VERIFY( 1 == v2.get_allocator().get_personality() );\n   VERIFY( it == v2.begin() );\n }"}, {"sha": "a4cbe85158ac7febdf8811db353663f6963d8fa0", "filename": "libstdc++-v3/testsuite/23_containers/multimap/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -54,7 +54,7 @@ void test02()\n   test_type v2(alloc_type(2));\n   v2 = { test_type::value_type{} };\n   v2 = std::move(v1);\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n   VERIFY( it == v2.begin()  );\n }"}, {"sha": "0ba27c95aacc3c3ff611192dd8122da934ff8e73", "filename": "libstdc++-v3/testsuite/23_containers/multiset/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -52,7 +52,7 @@ void test02()\n   test_type v2(alloc_type(2));\n   v2 = { test_type::value_type{} };\n   v2 = std::move(v1);\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n   VERIFY( it == v2.begin() );\n }"}, {"sha": "17b15611283830b5f17d133fbcc9de2d5f7b0df9", "filename": "libstdc++-v3/testsuite/23_containers/set/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -55,7 +55,7 @@ void test02()\n   test_type v2(alloc_type(2));\n   v2 = { test_type::value_type{} };\n   v2 = std::move(v1);\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n   VERIFY( it == v2.begin() );\n }"}, {"sha": "577a2adb2de45471de02244abb6d7eb74ba5ee78", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -76,7 +76,7 @@ void test02()\n \n   v2 = std::move(v1);\n \n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n \n   VERIFY( counter_type::move_assign_count == 0 );"}, {"sha": "e58199673d33c13d303175c11d8e9118208d4046", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -76,7 +76,7 @@ void test02()\n \n   v2 = std::move(v1);\n \n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n \n   VERIFY( counter_type::move_assign_count == 0 );"}, {"sha": "92354241093f48f11c107e1ff32ffab3223d2b7d", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -70,7 +70,7 @@ void test02()\n \n   v2 = std::move(v1);\n \n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n \n   VERIFY( counter_type::move_count == 0 );"}, {"sha": "7243663ca5185a2b60d9a4c52c98ad49f572d37b", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -86,7 +86,7 @@ void test02()\n \n     v2 = std::move(v1);\n \n-    VERIFY(0 == v1.get_allocator().get_personality());\n+    VERIFY(1 == v1.get_allocator().get_personality());\n     VERIFY(1 == v2.get_allocator().get_personality());\n \n     VERIFY( counter_type::move_count == 0 );"}, {"sha": "2a2e33994256c2f7f0ebcc629badb3e2ada32e37", "filename": "libstdc++-v3/testsuite/23_containers/vector/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -49,7 +49,7 @@ void test02()\n   v2.push_back(T());\n   v2 = std::move(v1);\n   VERIFY( it == v2.begin() );\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n }\n "}, {"sha": "b14ecb7d6e4158f3d226124d80ef1198335fc173", "filename": "libstdc++-v3/testsuite/23_containers/vector/bool/allocator/move_assign.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fallocator%2Fmove_assign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fallocator%2Fmove_assign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fbool%2Fallocator%2Fmove_assign.cc?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -49,7 +49,7 @@ void test02()\n   v2.push_back(T());\n   v2 = std::move(v1);\n   VERIFY( it == v2.begin() );\n-  VERIFY(0 == v1.get_allocator().get_personality());\n+  VERIFY(1 == v1.get_allocator().get_personality());\n   VERIFY(1 == v2.get_allocator().get_personality());\n }\n "}, {"sha": "34dba16669fef84ae8bc4c989a75e2f199625029", "filename": "libstdc++-v3/testsuite/util/testsuite_allocator.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935469daaa5c02ac5104c0d5c04a1f12e23529b1/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h?ref=935469daaa5c02ac5104c0d5c04a1f12e23529b1", "patch": "@@ -465,12 +465,12 @@ namespace __gnu_test\n \t  return *this;\n   \t}\n \n-      // postcondition: a.get_personality() == 0\n+      // postcondition: LWG2593 a.get_personality() un-changed.\n       propagating_allocator(propagating_allocator&& a) noexcept\n-      : base_alloc()\n-      { swap_base(a); }\n+      : base_alloc(std::move(a.base()))\n+      { }\n \n-      // postcondition: a.get_personality() == 0\n+      // postcondition: LWG2593 a.get_personality() un-changed\n       propagating_allocator&\n       operator=(propagating_allocator&& a) noexcept\n       {"}]}