{"sha": "744ca1bf1cc07627f85c2f73a2ced3fb551e1f60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ0Y2ExYmYxY2MwNzYyN2Y4NWMyZjczYTJjZWQzZmI1NTFlMWY2MA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-02T15:28:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-02T15:31:40Z"}, "message": "c++:  Fix bootstrap\n\nI made the prefix for dumping a binding-vector slightly too small.\nFixed thusly.\n\n\tgcc/cp/\n\t* ptree.c (cxx_print_xnode): Increase binding-vector prefix size.", "tree": {"sha": "5327c458193257f726a8c627890334c0ef39ec58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5327c458193257f726a8c627890334c0ef39ec58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/744ca1bf1cc07627f85c2f73a2ced3fb551e1f60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/744ca1bf1cc07627f85c2f73a2ced3fb551e1f60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/744ca1bf1cc07627f85c2f73a2ced3fb551e1f60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/744ca1bf1cc07627f85c2f73a2ced3fb551e1f60/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "feb93adf76eda52385a73eb57c5bef7c870a2564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb93adf76eda52385a73eb57c5bef7c870a2564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feb93adf76eda52385a73eb57c5bef7c870a2564"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f8d22082ba7aa98878cd38ac6ccb6a061fc3220c", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744ca1bf1cc07627f85c2f73a2ced3fb551e1f60/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744ca1bf1cc07627f85c2f73a2ced3fb551e1f60/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=744ca1bf1cc07627f85c2f73a2ced3fb551e1f60", "patch": "@@ -259,15 +259,15 @@ cxx_print_xnode (FILE *file, tree node, int indent)\n \tfor (unsigned ix = 0; ix != len; ix++)\n \t  {\n \t    binding_cluster *cluster = &BINDING_VECTOR_CLUSTER (node, ix);\n-\t    char pfx[20];\n+\t    char pfx[24];\n \t    for (unsigned jx = 0; jx != BINDING_VECTOR_SLOTS_PER_CLUSTER; jx++)\n \t      if (cluster->indices[jx].span)\n \t\t{\n \t\t  int len = sprintf (pfx, \"module:%u\",\n \t\t\t\t     cluster->indices[jx].base);\n \t\t  if (cluster->indices[jx].span > 1)\n-\t\t    len\n-\t\t      += sprintf (&pfx[len], \"(+%u)\", cluster->indices[jx].span);\n+\t\t    len += sprintf (&pfx[len], \"(+%u)\",\n+\t\t\t\t    cluster->indices[jx].span);\n \t\t  len += sprintf (&pfx[len], \" cluster:%u/%u\", ix, jx);\n \t\t  binding_slot &slot = cluster->slots[jx];\n \t\t  if (slot.is_lazy ())"}]}