{"sha": "f411c849f0c36e909d82823c517fd6c6c9a457e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQxMWM4NDlmMGMzNmU5MDlkODI4MjNjNTE3ZmQ2YzZjOWE0NTdlMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-26T21:11:34Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-26T21:11:34Z"}, "message": "h8300-protos.h: Fix comment typos.\n\n\t* config/h8300/h8300-protos.h: Fix comment typos.\n\tUpdate copyright.\n\t* config/h8300/h8300.c: Fix comment typos.\n\nFrom-SVN: r60527", "tree": {"sha": "b1037815c7c3286518ab1f00bacc8db4feda07e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1037815c7c3286518ab1f00bacc8db4feda07e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f411c849f0c36e909d82823c517fd6c6c9a457e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f411c849f0c36e909d82823c517fd6c6c9a457e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f411c849f0c36e909d82823c517fd6c6c9a457e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f411c849f0c36e909d82823c517fd6c6c9a457e2/comments", "author": null, "committer": null, "parents": [{"sha": "b976d7a007c0bc4667379a7b2c5432d3cfa0e798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b976d7a007c0bc4667379a7b2c5432d3cfa0e798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b976d7a007c0bc4667379a7b2c5432d3cfa0e798"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "c5c66b518e212b7fd695822bb78c7b390cf297aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f411c849f0c36e909d82823c517fd6c6c9a457e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f411c849f0c36e909d82823c517fd6c6c9a457e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f411c849f0c36e909d82823c517fd6c6c9a457e2", "patch": "@@ -1,3 +1,9 @@\n+2002-12-26  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300-protos.h: Fix comment typos.\n+\tUpdate copyright.\n+\t* config/h8300/h8300.c: Fix comment typos.\n+\n 2002-12-26  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.h (IDENT_ASM_OP): End with a tab."}, {"sha": "9f52ea50673c6b97b22bbbd47cd3fc43fdbee7fd", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f411c849f0c36e909d82823c517fd6c6c9a457e2/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f411c849f0c36e909d82823c517fd6c6c9a457e2/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=f411c849f0c36e909d82823c517fd6c6c9a457e2", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Hitachi H8/300 version generating coff\n-   Copyright (C) 2000 Free SoftwareFoundation, Inc.\n+   Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com),\n    Jim Wilson (wilson@cygnus.com), and Doug Evans (dje@cygnus.com).\n "}, {"sha": "b32f9c3e4406c1c707a801f8a4d207b340b38c34", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f411c849f0c36e909d82823c517fd6c6c9a457e2/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f411c849f0c36e909d82823c517fd6c6c9a457e2/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=f411c849f0c36e909d82823c517fd6c6c9a457e2", "patch": "@@ -153,7 +153,7 @@ enum shift_type\n /* The shift algorithms for each machine, mode, shift type, and shift\n    count are defined below.  The three tables below correspond to\n    QImode, HImode, and SImode, respectively.  Each table is organized\n-   by, in the order of indecies, machine, shift type, and shift count.  */\n+   by, in the order of indices, machine, shift type, and shift count.  */\n \n static enum shift_alg shift_alg_qi[3][3][8] = {\n   {\n@@ -1032,7 +1032,7 @@ bit_operand (op, mode)\n      rtx op;\n      enum machine_mode mode;\n {\n-  /* We can except any general operand, expept that MEM operands must\n+  /* We can accept any general operand, except that MEM operands must\n      be limited to those that use addresses valid for the 'U' constraint.  */\n   if (!general_operand (op, mode))\n     return 0;\n@@ -1067,7 +1067,7 @@ bit_memory_operand (op, mode)\n /* Handle machine specific pragmas for compatibility with existing\n    compilers for the H8/300.\n \n-   pragma saveall generates prolog/epilog code which saves and\n+   pragma saveall generates prologue/epilogue code which saves and\n    restores all the registers on function entry.\n \n    pragma interrupt saves and restores all registers, and exits with\n@@ -2384,7 +2384,7 @@ compute_logical_op_cc (mode, operands)\n      simulate a shift by 8, 16, or 24 bits.  Once moved, a few inline\n      shifts can be added if the shift count is slightly more than 8 or\n      16.  This case also includes other oddballs that are not worth\n-     explaning here.\n+     explaining here.\n \n    o SHIFT_LOOP: Emit a loop using one (or two on H8S) bit shifts.\n \n@@ -4143,7 +4143,7 @@ h8300_adjust_insn_length (insn, length)\n \t  states += 6;\n \t}\n \n-      /* We use 2-bit rotatations on the H8S.  */\n+      /* We use 2-bit rotations on the H8S.  */\n       if (TARGET_H8300S)\n \tamount = amount / 2 + amount % 2;\n "}]}