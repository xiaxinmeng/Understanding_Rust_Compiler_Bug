{"sha": "50ea63572d0e1705c44eee2a8a5d16882093d0bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBlYTYzNTcyZDBlMTcwNWM0NGVlZTJhOGE1ZDE2ODgyMDkzZDBiYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T10:12:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T10:12:41Z"}, "message": "[multiple changes]\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb, sem_attr.adb,\n\tsem_aggr.adb, sinfo.ads, sem_eval.ads: Minor reformatting.\n\n2014-07-18  Pascal Obry  <obry@adacore.com>\n\n\t* sysdep.c (__gnat_wide_text_translation_required): Removed from here.\n\t* initialize.c (__gnat_wide_text_translation_required): Defined here.\n\n2014-07-18  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c (__gnat_fputwc): New routine.\n\t* s-crtl.ads (fputwc): Now imported as __gnat_fputwc.\n\n2014-07-18  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb: Flag 270 is now used as Stores_Attribute_Old_Prefix.\n\t(Set_Stores_Attribute_Old_Prefix): New routine.\n\t(Stores_Attribute_Old_Prefix): New routine.\n\t(Write_Entity_Flags):\n\tOutput flag Stores_Attribute_Old_Prefix.\n\t* einfo.ads Add new flag Stores_Attribute_Old_Prefix along with\n\tcomment on usage.\n\t(Set_Stores_Attribute_Old_Prefix): New routine\n\talong with pragma Inline.\n\t(Stores_Attribute_Old_Prefix): New\n\troutine along with pragma Inline.\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Mark the generated\n\tconstant which captures the result of attribute 'Old's prefix.\n\t* sem_util.adb (In_Assertion_Expression_Pragma): Recognize a\n\trelocated expression which acted as a prefix of attribute 'Old.\n\n2014-07-18  Bob Duff  <duff@adacore.com>\n\n\t* s-spsufi.adb (Finalize_And_Deallocate): Set Subpool.Owner to\n\tnull before dispatching to Deallocate_Subpool.\n\t* s-stposu.ads (Default_Subpool_For_Pool): Change mode of\n\tparameter of Default_Subpool_For_Pool to 'in out'.\n\t* s-stposu.adb (Set_Pool_Of_Subpool): Use raise expression. Add\n\ta message to the raise.\n\t* sem_util.adb: Minor reformatting.\n\nFrom-SVN: r212806", "tree": {"sha": "55f14146a481d50e1106fd100d22f9f2da802ec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55f14146a481d50e1106fd100d22f9f2da802ec3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50ea63572d0e1705c44eee2a8a5d16882093d0bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ea63572d0e1705c44eee2a8a5d16882093d0bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ea63572d0e1705c44eee2a8a5d16882093d0bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ea63572d0e1705c44eee2a8a5d16882093d0bc/comments", "author": null, "committer": null, "parents": [{"sha": "c624298a19aa42cc335c33b980a17da2bbd7fb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c624298a19aa42cc335c33b980a17da2bbd7fb94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c624298a19aa42cc335c33b980a17da2bbd7fb94"}], "stats": {"total": 207, "additions": 160, "deletions": 47}, "files": [{"sha": "8bbebc024b2f6e753d5352fca536a280f192d3cd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -1,3 +1,46 @@\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb, sem_attr.adb,\n+\tsem_aggr.adb, sinfo.ads, sem_eval.ads: Minor reformatting.\n+\n+2014-07-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* sysdep.c (__gnat_wide_text_translation_required): Removed from here.\n+\t* initialize.c (__gnat_wide_text_translation_required): Defined here.\n+\n+2014-07-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c (__gnat_fputwc): New routine.\n+\t* s-crtl.ads (fputwc): Now imported as __gnat_fputwc.\n+\n+2014-07-18  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb: Flag 270 is now used as Stores_Attribute_Old_Prefix.\n+\t(Set_Stores_Attribute_Old_Prefix): New routine.\n+\t(Stores_Attribute_Old_Prefix): New routine.\n+\t(Write_Entity_Flags):\n+\tOutput flag Stores_Attribute_Old_Prefix.\n+\t* einfo.ads Add new flag Stores_Attribute_Old_Prefix along with\n+\tcomment on usage.\n+\t(Set_Stores_Attribute_Old_Prefix): New routine\n+\talong with pragma Inline.\n+\t(Stores_Attribute_Old_Prefix): New\n+\troutine along with pragma Inline.\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Mark the generated\n+\tconstant which captures the result of attribute 'Old's prefix.\n+\t* sem_util.adb (In_Assertion_Expression_Pragma): Recognize a\n+\trelocated expression which acted as a prefix of attribute 'Old.\n+\n+2014-07-18  Bob Duff  <duff@adacore.com>\n+\n+\t* s-spsufi.adb (Finalize_And_Deallocate): Set Subpool.Owner to\n+\tnull before dispatching to Deallocate_Subpool.\n+\t* s-stposu.ads (Default_Subpool_For_Pool): Change mode of\n+\tparameter of Default_Subpool_For_Pool to 'in out'.\n+\t* s-stposu.adb (Set_Pool_Of_Subpool): Use raise expression. Add\n+\ta message to the raise.\n+\t* sem_util.adb: Minor reformatting.\n+\n 2014-07-18  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_util.adb (Check_Expression_Against_Static_Predicate):"}, {"sha": "184d645881ce61ced621fd4d9a67b99909706d16", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -229,6 +229,7 @@ extern unsigned int LIB$CALLG_64 (unsigned long long argument_list [],\n \n #else\n #include <utime.h>\n+#include <wchar.h>\n #endif\n \n #if defined (_WIN32)\n@@ -851,6 +852,16 @@ __gnat_rmdir (char *path)\n #endif\n }\n \n+int\n+__gnat_fputwc(int c, FILE *stream)\n+{\n+#if ! defined (__vxworks) && ! defined (IS_CROSS)\n+  return fputwc ((wchar_t)c, stream);\n+#else\n+  return fputc (c, stream);\n+#endif\n+}\n+\n FILE *\n __gnat_fopen (char *path, char *mode, int encoding ATTRIBUTE_UNUSED,\n               char *vms_form ATTRIBUTE_UNUSED)"}, {"sha": "dbefc1ad7735fae303c37fe17560f3b62e698186", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -211,7 +211,7 @@ package body Einfo is\n    --    Generic_Renamings               Elist23\n    --    Inner_Instances                 Elist23\n    --    Limited_View                    Node23\n-   --    Packed_Array_Impl_Type               Node23\n+   --    Packed_Array_Impl_Type          Node23\n    --    Protection_Object               Node23\n    --    Stored_Constraint               Elist23\n \n@@ -560,13 +560,12 @@ package body Einfo is\n    --    Has_Shift_Operator              Flag267\n    --    Is_Independent                  Flag268\n    --    Has_Static_Predicate            Flag269\n+   --    Stores_Attribute_Old_Prefix     Flag270\n \n    --    (unused)                        Flag1\n    --    (unused)                        Flag2\n    --    (unused)                        Flag3\n \n-   --    (unused)                        Flag270\n-\n    --    (unused)                        Flag271\n    --    (unused)                        Flag272\n    --    (unused)                        Flag273\n@@ -3004,6 +3003,11 @@ package body Einfo is\n       return Elist23 (Id);\n    end Stored_Constraint;\n \n+   function Stores_Attribute_Old_Prefix (Id : E) return B is\n+   begin\n+      return Flag270 (Id);\n+   end Stores_Attribute_Old_Prefix;\n+\n    function Strict_Alignment (Id : E) return B is\n    begin\n       return Flag145 (Implementation_Base_Type (Id));\n@@ -5784,6 +5788,12 @@ package body Einfo is\n       Set_Elist23 (Id, V);\n    end Set_Stored_Constraint;\n \n+   procedure Set_Stores_Attribute_Old_Prefix (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Ekind (Id) = E_Constant);\n+      Set_Flag270 (Id, V);\n+   end Set_Stores_Attribute_Old_Prefix;\n+\n    procedure Set_Strict_Alignment (Id : E; V : B := True) is\n    begin\n       pragma Assert (Id = Base_Type (Id));\n@@ -8413,6 +8423,7 @@ package body Einfo is\n       W (\"SPARK_Aux_Pragma_Inherited\",      Flag266 (Id));\n       W (\"SPARK_Pragma_Inherited\",          Flag265 (Id));\n       W (\"Static_Elaboration_Desired\",      Flag77  (Id));\n+      W (\"Stores_Attribute_Old_Prefix\",     Flag270 (Id));\n       W (\"Strict_Alignment\",                Flag145 (Id));\n       W (\"Suppress_Elaboration_Warnings\",   Flag148 (Id));\n       W (\"Suppress_Initialization\",         Flag105 (Id));"}, {"sha": "fb55d1b34637625b529fc034755003bbc175adda", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -3909,15 +3909,6 @@ package Einfo is\n --       or the declaration of a \"hook\" object.\n --       In which case is it a flag, or a hook object???\n \n---    Storage_Size_Variable (Node15) [implementation base type only]\n---       Defined in access types and task type entities. This flag is set\n---       if a valid and effective pragma Storage_Size applies to the base\n---       type. Points to the entity for a variable that is created to\n---       hold the value given in a Storage_Size pragma for an access\n---       collection or a task type. Note that in the access type case,\n---       this field is defined only in the root type (since derived types\n---       share the same storage pool).\n-\n --    Static_Elaboration_Desired (Flag77)\n --       Defined in library-level packages. Set by the pragma of the same\n --       name, to indicate that static initialization must be attempted for\n@@ -3933,13 +3924,26 @@ package Einfo is\n --       This attribute uses the same field as Overridden_Operation, which is\n --       irrelevant in init_procs.\n \n+--    Storage_Size_Variable (Node15) [implementation base type only]\n+--       Defined in access types and task type entities. This flag is set\n+--       if a valid and effective pragma Storage_Size applies to the base\n+--       type. Points to the entity for a variable that is created to\n+--       hold the value given in a Storage_Size pragma for an access\n+--       collection or a task type. Note that in the access type case,\n+--       this field is defined only in the root type (since derived types\n+--       share the same storage pool).\n+\n --    Stored_Constraint (Elist23)\n --       Defined in entities that can have discriminants (concurrent types\n --       subtypes, record types and subtypes, private types and subtypes,\n --       limited private types and subtypes and incomplete types). Points\n --       to an element list containing the expressions for each of the\n --       stored discriminants for the record (sub)type.\n \n+--    Stores_Attribute_Old_Prefix (Flag270)\n+--       Defined in constants. Set when the constant has been generated to save\n+--       the value of attribute 'Old's prefix.\n+\n --    Strict_Alignment (Flag145) [implementation base type only]\n --       Defined in all type entities. Indicates that some containing part\n --       is either aliased or tagged. This prohibits packing the object\n@@ -5423,6 +5427,7 @@ package Einfo is\n    --    Is_Return_Object                    (Flag209)\n    --    Is_True_Constant                    (Flag163)\n    --    Is_Volatile                         (Flag16)\n+   --    Stores_Attribute_Old_Prefix         (Flag270)  (constants only)\n    --    Optimize_Alignment_Space            (Flag241)  (constants only)\n    --    Optimize_Alignment_Time             (Flag242)  (constants only)\n    --    Treat_As_Volatile                   (Flag41)\n@@ -6778,6 +6783,7 @@ package Einfo is\n    function Status_Flag_Or_Transient_Decl       (Id : E) return E;\n    function Storage_Size_Variable               (Id : E) return E;\n    function Stored_Constraint                   (Id : E) return L;\n+   function Stores_Attribute_Old_Prefix         (Id : E) return B;\n    function Strict_Alignment                    (Id : E) return B;\n    function String_Literal_Length               (Id : E) return U;\n    function String_Literal_Low_Bound            (Id : E) return N;\n@@ -7410,6 +7416,7 @@ package Einfo is\n    procedure Set_Status_Flag_Or_Transient_Decl   (Id : E; V : E);\n    procedure Set_Storage_Size_Variable           (Id : E; V : E);\n    procedure Set_Stored_Constraint               (Id : E; V : L);\n+   procedure Set_Stores_Attribute_Old_Prefix     (Id : E; V : B := True);\n    procedure Set_Strict_Alignment                (Id : E; V : B := True);\n    procedure Set_String_Literal_Length           (Id : E; V : U);\n    procedure Set_String_Literal_Low_Bound        (Id : E; V : N);\n@@ -8192,6 +8199,7 @@ package Einfo is\n    pragma Inline (Status_Flag_Or_Transient_Decl);\n    pragma Inline (Storage_Size_Variable);\n    pragma Inline (Stored_Constraint);\n+   pragma Inline (Stores_Attribute_Old_Prefix);\n    pragma Inline (Strict_Alignment);\n    pragma Inline (String_Literal_Length);\n    pragma Inline (String_Literal_Low_Bound);\n@@ -8623,6 +8631,7 @@ package Einfo is\n    pragma Inline (Set_Status_Flag_Or_Transient_Decl);\n    pragma Inline (Set_Storage_Size_Variable);\n    pragma Inline (Set_Stored_Constraint);\n+   pragma Inline (Set_Stores_Attribute_Old_Prefix);\n    pragma Inline (Set_Strict_Alignment);\n    pragma Inline (Set_String_Literal_Length);\n    pragma Inline (Set_String_Literal_Low_Bound);"}, {"sha": "0232d67e0c69ac72393d1161d089d06ebc49d6b5", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -4060,6 +4060,12 @@ package body Exp_Attr is\n       begin\n          Temp := Make_Temporary (Loc, 'T', Pref);\n \n+         --  Set the entity kind now in order to mark the temporary as a\n+         --  handler of attribute 'Old's prefix.\n+\n+         Set_Ekind (Temp, E_Constant);\n+         Set_Stores_Attribute_Old_Prefix (Temp);\n+\n          --  Climb the parent chain looking for subprogram _Postconditions\n \n          Subp := N;"}, {"sha": "1eab27510ee62fbe60b5e1e37a7c244a32f923e8", "filename": "gcc/ada/initialize.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Finitialize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Finitialize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finitialize.c?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -62,6 +62,9 @@ extern \"C\" {\n /* __gnat_initialize (NT-mingw32 Version) */\n /******************************************/\n \n+char __gnat_wide_text_translation_required = 0;\n+// wide text translation, 0=none, 1=activated\n+\n #if defined (__MINGW32__)\n #include \"mingw32.h\"\n #include <windows.h>"}, {"sha": "faa7031584f3ee5d41a1544dec2a3f70c6f10811", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -123,7 +123,7 @@ package System.CRTL is\n    pragma Import (C, fputc, \"fputc\");\n \n    function fputwc (C : int; stream : FILEs) return int;\n-   pragma Import (C, fputwc, \"fputwc\");\n+   pragma Import (C, fputwc, \"__gnat_fputwc\");\n \n    function fputs (Strng : chars; Stream : FILEs) return int;\n    pragma Import (C, fputs, \"fputs\");"}, {"sha": "e6baee0f0498b7c6f9d1c98a2247e975de814113", "filename": "gcc/ada/s-spsufi.adb", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fs-spsufi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fs-spsufi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-spsufi.adb?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2011-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,9 +66,22 @@ package body System.Storage_Pools.Subpools.Finalization is\n \n       Free (Subpool.Node);\n \n-      --  Dispatch to the user-defined implementation of Deallocate_Subpool\n-\n-      Deallocate_Subpool (Pool_Of_Subpool (Subpool).all, Subpool);\n+      --  Dispatch to the user-defined implementation of Deallocate_Subpool. It\n+      --  is important to first set Subpool.Owner to null, because RM-13.11.5\n+      --  requires that \"The subpool no longer belongs to any pool\" BEFORE\n+      --  calling Deallocate_Subpool. The actual dispatching call required is:\n+      --\n+      --     Deallocate_Subpool(Pool_of_Subpool(Subpool).all, Subpool);\n+      --\n+      --  but that can't be taken literally, because Pool_of_Subpool will\n+      --  return null.\n+\n+      declare\n+         Owner : constant Any_Storage_Pool_With_Subpools_Ptr := Subpool.Owner;\n+      begin\n+         Subpool.Owner := null;\n+         Deallocate_Subpool (Owner.all, Subpool);\n+      end;\n \n       Subpool := null;\n    end Finalize_And_Deallocate;"}, {"sha": "31e8a7e0229f6b8c578c59f36506e06b8ce3192b", "filename": "gcc/ada/s-stposu.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fs-stposu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fs-stposu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stposu.adb?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2011-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -456,11 +456,13 @@ package body System.Storage_Pools.Subpools is\n    ------------------------------\n \n    function Default_Subpool_For_Pool\n-     (Pool : Root_Storage_Pool_With_Subpools) return not null Subpool_Handle\n+     (Pool : in out Root_Storage_Pool_With_Subpools)\n+      return not null Subpool_Handle\n    is\n+      pragma Unreferenced (Pool);\n    begin\n-      raise Program_Error;\n-      return Pool.Subpools.Subpool;\n+      return raise Program_Error with\n+        \"default Default_Subpool_For_Pool called; must be overridden\";\n    end Default_Subpool_For_Pool;\n \n    ------------"}, {"sha": "68f6b17920dea445ed5987311b63fd9aa0c2ec5d", "filename": "gcc/ada/s-stposu.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fs-stposu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fs-stposu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stposu.ads?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -95,16 +95,16 @@ package System.Storage_Pools.Subpools is\n      (Pool    : in out Root_Storage_Pool_With_Subpools;\n       Subpool : in out Subpool_Handle)\n    is abstract;\n+   --  This precondition causes errors in simple tests, disabled for now???\n+   --  with Pre'Class => Pool_Of_Subpool (Subpool) = Pool'Access;\n \n-   --  ??? This precondition causes errors in simple tests, disabled for now\n-\n-   --      with Pre'Class => Pool_Of_Subpool (Subpool) = Pool'Access;\n    --  This routine requires implementation. Reclaim the storage a particular\n    --  subpool occupies in a pool_with_subpools. This routine is called by\n    --  Ada.Unchecked_Deallocate_Subpool.\n \n    function Default_Subpool_For_Pool\n-     (Pool : Root_Storage_Pool_With_Subpools) return not null Subpool_Handle;\n+     (Pool : in out Root_Storage_Pool_With_Subpools)\n+      return not null Subpool_Handle;\n    --  Return a common subpool which is used for object allocations without a\n    --  Subpool_Handle_name in the allocator. The default implementation of this\n    --  routine raises Program_Error."}, {"sha": "0fe19377dbcc220a13d92db2084dfbcc36e35b5c", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -2279,7 +2279,8 @@ package body Sem_Aggr is\n                   --  is fine, it's just the wrong length. We skip this check\n                   --  for standard character types (since there are no literals\n                   --  and it is too much trouble to concoct them), and also if\n-                  --  any of the bounds have not-known-at-compile-time values.\n+                  --  any of the bounds have values that are not known at\n+                  --  compile time.\n \n                   --  Another case warranting a warning is when the length is\n                   --  right, but as above we have an index type that is an"}, {"sha": "9cb42b956b9be96f3fab7cdf3fded8d56ab8dc57", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -6349,6 +6349,7 @@ package body Sem_Attr is\n \n                            else\n                               Analyze_And_Resolve (Index, Etype (Index_Type));\n+\n                               if not Is_OK_Static_Expression (Index) then\n                                  Set_Do_Range_Check (Index);\n                               end if;"}, {"sha": "207e28ac2cea4beaef75a4bca30cf2950abe84c8", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -367,9 +367,10 @@ package Sem_Eval is\n    function Eval_Static_Predicate_Check\n      (N   : Node_Id;\n       Typ : Entity_Id) return Boolean;\n-   --  Evaluate a static predicate check applied to a known-at-compile-time\n-   --  value N, which can be of a discrete, real, or string type. The caller\n-   --  has checked that a static predicate does apply to Typ.\n+   --  Evaluate a static predicate check applied expression which represents\n+   --  a value that is known at compile time (does not have to be static). The\n+   --  caller has checked that a static predicate does apply to Typ, and thus\n+   --  the type is known to be scalar.\n \n    procedure Fold_Str (N : Node_Id; Val : String_Id; Static : Boolean);\n    --  Rewrite N with a new N_String_Literal node as the result of the compile"}, {"sha": "c32d89bbf81a206aa02611c829003aab4f68649d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -21937,9 +21937,9 @@ package body Sem_Prag is\n \n                Item_Id := Available_View (Entity_Of (Item));\n \n-               return\n-                 Ekind (Item_Id) = E_Abstract_State\n-                   and then Has_Null_Refinement (Item_Id);\n+               return Ekind (Item_Id) = E_Abstract_State\n+                 and then Has_Null_Refinement (Item_Id);\n+\n             else\n                return False;\n             end if;\n@@ -22146,8 +22146,8 @@ package body Sem_Prag is\n \n          if not Clause_Matched\n            and then Is_In_Out_State_Clause\n-           and then Contains\n-                      (Matched_Items, Available_View (Entity_Of (Dep_Input)))\n+           and then\n+             Contains (Matched_Items, Available_View (Entity_Of (Dep_Input)))\n          then\n             Clause_Matched := True;\n          end if;\n@@ -22163,8 +22163,8 @@ package body Sem_Prag is\n          if not Clause_Matched\n            and then Is_Null_Refined_State (Dep_Input)\n            and then Is_Entity_Name (Dep_Output)\n-           and then Contains\n-                      (Matched_Items, Available_View (Entity_Of (Dep_Output)))\n+           and then\n+             Contains (Matched_Items, Available_View (Entity_Of (Dep_Output)))\n          then\n             Clause_Matched := True;\n          end if;\n@@ -22180,8 +22180,8 @@ package body Sem_Prag is\n          if not Clause_Matched\n            and then Is_Null_Refined_State (Dep_Output)\n            and then Is_Entity_Name (Dep_Input)\n-           and then Contains\n-                      (Matched_Items, Available_View (Entity_Of (Dep_Input)))\n+           and then\n+             Contains (Matched_Items, Available_View (Entity_Of (Dep_Input)))\n          then\n             Clause_Matched := True;\n          end if;"}, {"sha": "ccebfe49e62a4406e2a9201cfd1612adca207a9b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -3477,12 +3477,13 @@ package body Sem_Util is\n \n          --  In Ada 2012, If the type has an incomplete partial view, there\n          --  may be primitive operations declared before the full view, so\n-         --  we need to start scanning from the incomplete view.\n+         --  we need to start scanning from the the incomplete view, which\n+         --  is earlier on the entity chain.\n \n          elsif Nkind (Parent (B_Type)) = N_Full_Type_Declaration\n            and then Present (Incomplete_View (Parent (B_Type)))\n          then\n-            Id := Defining_Entity (Next (Incomplete_View (Parent (B_Type))));\n+            Id := Defining_Entity (Incomplete_View (Parent (B_Type)));\n \n          else\n             Id := Next_Entity (B_Type);\n@@ -8695,6 +8696,19 @@ package body Sem_Util is\n             Prag := Original_Node (Par);\n             exit;\n \n+         --  The expansion of attribute 'Old generates a constant to capture\n+         --  the result of the prefix. If the parent traversal reaches\n+         --  one of these constants, then the node technically came from a\n+         --  postcondition-like pragma. Note that the Ekind is not tested here\n+         --  because N may be the expression of an object declaration which is\n+         --  currently being analyzed. Such objects carry Ekind of E_Void.\n+\n+         elsif Nkind (Par) = N_Object_Declaration\n+           and then Constant_Present (Par)\n+           and then Stores_Attribute_Old_Prefix (Defining_Entity (Par))\n+         then\n+            return True;\n+\n          --  Prevent the search from going too far\n \n          elsif Is_Body_Or_Package_Declaration (Par) then"}, {"sha": "86d953059486717684ab0015b405413c7169ae1a", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -1867,16 +1867,16 @@ package Sinfo is\n \n    --  Parameter_List_Truncated (Flag17-Sem)\n    --    Present in N_Function_Call and N_Procedure_Call_Statement nodes. Set\n-   --    (for OpenVMS ports of GNAT only) if the parameter list is truncated as\n-   --    a result of a First_Optional_Parameter specification in an\n-   --    Import_Function, Import_Procedure, or Import_Valued_Procedure pragma.\n+   --    (for OpenVMS ports of GNAT only) if the parameter list is truncated\n+   --    as a result of a First_Optional_Parameter specification in one of the\n+   --    pragmas Import_Function, Import_Procedure, or Import_Valued_Procedure.\n    --    The truncation is done by the expander by removing trailing parameters\n    --    from the argument list, in accordance with the set of rules allowing\n    --    such parameter removal. In particular, parameters can be removed\n    --    working from the end of the parameter list backwards up to and\n    --    including the entry designated by First_Optional_Parameter in the\n    --    Import pragma. Parameters can be removed if they are implicit and the\n-   --    default value is a known-at-compile-time value, including the use of\n+   --    default value is known at compile time value, including the use of\n    --    the Null_Parameter attribute, or if explicit parameter values are\n    --    present that match the corresponding defaults.\n "}, {"sha": "693fec2c4b57a01719403c6ac71f012ad43caa79", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea63572d0e1705c44eee2a8a5d16882093d0bc/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=50ea63572d0e1705c44eee2a8a5d16882093d0bc", "patch": "@@ -131,7 +131,6 @@ extern struct tm *localtime_r(const time_t *, struct tm *);\n #if defined (WINNT) || defined (__CYGWIN__)\n \n const char __gnat_text_translation_required = 1;\n-char __gnat_wide_text_translation_required = 0;\n \n #ifdef __CYGWIN__\n #define WIN_SETMODE setmode\n@@ -241,7 +240,6 @@ __gnat_ttyname (int filedes)\n #else\n \n const char __gnat_text_translation_required = 0;\n-const char __gnat_wide_text_translation_required = 0;\n \n /* These functions do nothing in non-DOS systems. */\n "}]}