{"sha": "9420f51f051e07b8c60e36e1ef45806788d4e590", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQyMGY1MWYwNTFlMDdiOGM2MGUzNmUxZWY0NTgwNjc4OGQ0ZTU5MA==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2014-07-31T12:24:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T12:24:57Z"}, "message": "sem_parg.adb, [...] (Collect_Subprogram_Inputs_Outputs): Make subprogram public.\n\n2014-07-31  Yannick Moy  <moy@adacore.com>\n\n\t* sem_parg.adb, sem_prag.ads (Collect_Subprogram_Inputs_Outputs):\n\tMake subprogram public.\n\nFrom-SVN: r213344", "tree": {"sha": "2e00f1e8973142f3875ce7760d16199e52eea84f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e00f1e8973142f3875ce7760d16199e52eea84f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9420f51f051e07b8c60e36e1ef45806788d4e590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9420f51f051e07b8c60e36e1ef45806788d4e590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9420f51f051e07b8c60e36e1ef45806788d4e590", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9420f51f051e07b8c60e36e1ef45806788d4e590/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9697805c7ad19e329c9fdc836c8f42f0c731d603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9697805c7ad19e329c9fdc836c8f42f0c731d603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9697805c7ad19e329c9fdc836c8f42f0c731d603"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "1519eaa0e5382e02fe7580cf736eaf671a259d4d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9420f51f051e07b8c60e36e1ef45806788d4e590/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9420f51f051e07b8c60e36e1ef45806788d4e590/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9420f51f051e07b8c60e36e1ef45806788d4e590", "patch": "@@ -1,3 +1,8 @@\n+2014-07-31  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_parg.adb, sem_prag.ads (Collect_Subprogram_Inputs_Outputs):\n+\tMake subprogram public.\n+\n 2014-07-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch9.adb (Expand_N_Protected_Type_Declaration): New"}, {"sha": "2f04875b286dc6e06a49ca5e37616fa165879aca", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9420f51f051e07b8c60e36e1ef45806788d4e590/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9420f51f051e07b8c60e36e1ef45806788d4e590/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=9420f51f051e07b8c60e36e1ef45806788d4e590", "patch": "@@ -237,17 +237,6 @@ package body Sem_Prag is\n    --  with visible refinement available in the corresponding mode. Flag\n    --  Has_Null_State is set when at least state has a null refinement.\n \n-   procedure Collect_Subprogram_Inputs_Outputs\n-     (Subp_Id      : Entity_Id;\n-      Subp_Inputs  : in out Elist_Id;\n-      Subp_Outputs : in out Elist_Id;\n-      Global_Seen  : out Boolean);\n-   --  Subsidiary to the analysis of pragma Depends, Global, Refined_Depends\n-   --  and Refined_Global. Gather all inputs and outputs of subprogram Subp_Id\n-   --  in lists Subp_Inputs and Subp_Outputs. If the case where the subprogram\n-   --  has no inputs and/oroutputs, the returned list is No_Elist. Global_Seen\n-   --  is set when the related subprogram has pragma [Refined_]Global.\n-\n    function Find_Related_Subprogram_Or_Body\n      (Prag      : Node_Id;\n       Do_Checks : Boolean := False) return Node_Id;"}, {"sha": "a97595c0f4d452241b065fe3ad819946452ee09b", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9420f51f051e07b8c60e36e1ef45806788d4e590/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9420f51f051e07b8c60e36e1ef45806788d4e590/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=9420f51f051e07b8c60e36e1ef45806788d4e590", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -170,6 +170,18 @@ package Sem_Prag is\n    --  state, variable or package instantiation denoted by Item_Id requires the\n    --  use of indicator/option Part_Of. If this is the case, emit an error.\n \n+   procedure Collect_Subprogram_Inputs_Outputs\n+     (Subp_Id      : Entity_Id;\n+      Subp_Inputs  : in out Elist_Id;\n+      Subp_Outputs : in out Elist_Id;\n+      Global_Seen  : out Boolean);\n+   --  Used during the analysis of pragmas Depends, Global, Refined_Depends,\n+   --  and Refined_Global. Also used by GNATprove. Gathers all inputs and\n+   --  outputs of subprogram Subp_Id in lists Subp_Inputs and Subp_Outputs.\n+   --  If subprogram has no inputs and/or outputs, then the returned list\n+   --  is No_Elist. Global_Seen is set when the related subprogram has\n+   --  pragma [Refined_]Global.\n+\n    function Delay_Config_Pragma_Analyze (N : Node_Id) return Boolean;\n    --  N is a pragma appearing in a configuration pragma file. Most such\n    --  pragmas are analyzed when the file is read, before parsing and analyzing"}]}