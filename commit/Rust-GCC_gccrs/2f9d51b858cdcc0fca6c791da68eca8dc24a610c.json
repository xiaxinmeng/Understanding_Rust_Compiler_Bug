{"sha": "2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY5ZDUxYjg1OGNkY2MwZmNhNmM3OTFkYTY4ZWNhOGRjMjRhNjEwYw==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-09-27T22:44:24Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-09-27T22:44:24Z"}, "message": "*: Add Doxygen hooks.\n\n2001-09-27  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* include/std/*:  Add Doxygen hooks.\n\t* docs/doxygen/Intro.3:  New file, general intro to the man pages.\n\t* docs/doxygen/mainpage.doxy:  Formatting tweaks.  List our own links\n\trather than using a generated index.\n\t* docs/doxygen/user.cfg.in:  Disable the index, enable man pages.\n\t* docs/doxygen/run_doxygen:  Massage the generated man pages, using...\n\t* docs/doxygen/stdheader.cc:  ...this new file.\n\nFrom-SVN: r45850", "tree": {"sha": "e42147f52307202bd4e083e2d18993fa06379a89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e42147f52307202bd4e083e2d18993fa06379a89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/comments", "author": null, "committer": null, "parents": [{"sha": "e9cf95237f29c5437666e350aac78b6a017cfa7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9cf95237f29c5437666e350aac78b6a017cfa7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9cf95237f29c5437666e350aac78b6a017cfa7a"}], "stats": {"total": 646, "additions": 592, "deletions": 54}, "files": [{"sha": "5c4de1b67f79585e300d76ee0d9e69ddd0901349", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -1,3 +1,13 @@\n+2001-09-27  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* include/std/*:  Add Doxygen hooks.\n+\t* docs/doxygen/Intro.3:  New file, general intro to the man pages.\n+\t* docs/doxygen/mainpage.doxy:  Formatting tweaks.  List our own links\n+\trather than using a generated index.\n+\t* docs/doxygen/user.cfg.in:  Disable the index, enable man pages.\n+\t* docs/doxygen/run_doxygen:  Massage the generated man pages, using...\n+\t* docs/doxygen/stdheader.cc:  ...this new file.\n+\n 2001-09-26  Stan Shebs  <shebs@apple.com>\n \n \t* include/Makefile.am: Remove RCS Id strings."}, {"sha": "5df718b118bcb17d770be4f0d26dfa203529f84e", "filename": "libstdc++-v3/docs/doxygen/Intro.3", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FIntro.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FIntro.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2FIntro.3?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -0,0 +1,24 @@\n+.\\\" This man page is released under the FDL as part of libstdc++-v3.\n+.TH Intro 3 \"27 September 2001\" \"GNU libstdc++-v3\" \"Standard C++ Library\"\n+.SH NAME\n+Intro \\- Introduction to the GNU libstdc++-v3 man pages\n+.SH DESCRIPTION\n+\n+This should mention the man pages generated for modules.\n+\n+.SH FILES\n+\n+Lots.  Wish I knew enough *roff syntax to list them nicely.\n+\n+.SH CONFORMING TO\n+Almost conforming to\n+.BI \"International Standard ISO/IEC 14882:1998(E), \" \"Programming Languages --- C++\"\n+(aka the C++ standard), in addition to corrections proposed by the Library\n+Working Group,\n+.SM JTC1/SC22/WG21.\n+.SH SEE ALSO\n+.UR\n+http://gcc.gnu.org/libstdc++/\n+.UE\n+for the Frequently Asked Questions, online documentation, and more.\n+"}, {"sha": "f1fa54d10373f04a47e62bd30f6fd85fed0fe068", "filename": "libstdc++-v3/docs/doxygen/mainpage.doxy", "status": "modified", "additions": 53, "deletions": 40, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.doxy", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.doxy", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fmainpage.doxy?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -1,62 +1,75 @@\n /*! \\mainpage\n \n-<h2> documentation overview </h2>\n+<h2> Documentation Overview </h2>\n \n-<p>\n-There are two types of documentation for libstdc++-v3. One is the distribution documentation, which can be read\n-<a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/documentation.html\">here</a>.\n+<p>There are two types of documentation for libstdc++-v3.  One is the\n+   distribution documentation, which can be read online at\n+   <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/documentation.html\">http://gcc.gnu.org/onlinedocs/libstdc++/documentation.html</a>\n+   or offline from docs/html/documentation.html in the library source\n+   directory.\n </p>\n \n-<p>\n-The other is the source documentation, of which this is the first page.\n+<p>The other type is the source documentation, of which this is the first page.\n+   Here are quick links to the pages which we seem to use the most; a full\n+   index is at the bottom:\n+   <!-- Keep this in sync with below. -->\n+   <ul>\n+    <li><a href=\"annotated.html\">Compound List</a>\n+    <li><a href=\"classes.html\">Alphabetical List</a>\n+    <li><a href=\"files.html\">File List</a>\n+    <!-- Will be useful, but not yet. <li><a href=\"modules.html\">Modules</a> -->\n+   </ul>\n </p>\n \n-<h2> generating this file </h2>\n-<p>\n-This page is automatically generated. The Makefile rule <tt>make\n-doxygen</tt> in the libstdc++-v3 build directory generates these pages\n-using a tool called, appropriately enough, doxygen. To learn more\n-about doxygen, take a look at <a href=\"http://www.doxygen.org\"> the\n-doxygen webpage </a>.\n+<h2> Generating this file </h2>\n+<p>This page is automatically generated.  The Makefile rule <code> make\n+   doxygen </code> in the libstdc++-v3 build directory generates these pages\n+   using a tool called, appropriately enough, Doxygen.  To learn more about\n+   Doxygen, take a look at <a href=\"http://www.doxygen.org\">the Doxygen\n+   webpage</a>.\n </p>\n \n-<p>\n-The libstdc++-v3 configuration files needed to generate doxygen output\n-are located:\n-<p> <tt> docs/doxygen/user.cfg.in</tt> </p>\n-<p> <tt> docs/doxygen/maint.cfg.in</tt> </p>\n+<p>The libstdc++-v3 configuration files needed to generate doxygen output\n+   are located:\n+   <ul><li><code>docs/doxygen/user.cfg.in</code>\n+       <li><code>docs/doxygen/maint.cfg.in</code>\n+   </ul>\n </p>\n \n <h2> libstdc++-v3 doxygen style guide </h2>\n-<p>\n-In general, libstdc++-v3 files should be formatted according to the\n-GNU C++ Coding Standard rules found in the file <a\n+<p>In general, libstdc++-v3 files should be formatted according to the\n+   GNU C++ Coding Standard rules found in the file <a\n href=\"http://gcc.gnu.org/onlinedocs/libstdc++/17_intro/C++STYLE\">C++STYLE</a>.\n-Before any doxygen-specific formatting tweaks are made, please try to\n-make sure that the initial formatting is sound.\n+   Before any doxygen-specific formatting tweaks are made, please try to\n+   make sure that the initial formatting is sound.\n </p>\n \n-<p>\n-The formatting guidelines for using libstdc++-v3 with doxygen are\n-still incomplete. There seems to be a marginal preference for the use\n-of Java-Doc style formatting, with the idea that the single-line style\n-(triple-slash) is the least intrusive mechanism for getting\n-libstdc++-v3 documented and cross-referenced while at the same time\n-minimizing disruption to the current formatting.\n+<p>The formatting guidelines for using libstdc++-v3 with doxygen are still\n+   incomplete.  There seems to be a marginal preference for the use of\n+   Java-Doc style formatting, with the idea that the single-line style\n+   (triple-slash) is the least intrusive mechanism for getting libstdc++-v3\n+   documented and cross-referenced while at the same time minimizing\n+   disruption to the current formatting.  Full documentation of functions\n+   (parameter types, return values, etc) will require the slash-splat-splat\n+   &quot;extended C&quot; commenting style.\n </p>\n \n-<p>\n-For the time being, please see <tt>include/bits/char_traits.h</tt>\n-which is the test bed for a finished doxygen style guide.\n+<h2> Full page index </h2>\n+<p>Here are entry points to all the pages generated by Doxygen:\n+   <ul>\n+    <li><a href=\"index.html\">Main Page</a>\n+    <li><a href=\"modules.html\">Modules</a>\n+    <li><a href=\"namespaces.html\">Namespace List</a>\n+    <li><a href=\"hierarchy.html\">Class Hierarchy</a>\n+    <li><a href=\"classes.html\">Alphabetical List</a>\n+    <li><a href=\"annotated.html\">Compound List</a>\n+    <li><a href=\"files.html\">File List</a>\n+    <li><a href=\"namespacemembers.html\">Namespace Members</a>\n+    <li><a href=\"functions.html\">Compound Members</a>\n+    <li><a href=\"globals.html\">File Members</a>\n+   </ul>\n </p>\n \n */\n \n \n-\n-\n-\n-\n-\n-\n-"}, {"sha": "d515dfde99a3f36ba7682bcdd9bd98f2d3b9e44c", "filename": "libstdc++-v3/docs/doxygen/run_doxygen", "status": "modified", "additions": 46, "deletions": 10, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Frun_doxygen?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -1,6 +1,6 @@\n #!/bin/sh\n \n-# Runs doxygen.  Possibly will massage the output files.\n+# Runs doxygen and massages the output files.\n #\n # Synopsis:  run_doxygen --mode=[user|maint]  v3srcdir  v3builddir\n #\n@@ -69,14 +69,6 @@ parse_options() {\n         mode=$arg ;;\n       --mode | --help | -h)\n         print_usage ;;\n-      --version | -v)\n-        # Aw, that's so cuuuute... don't ask, I needed it.\n-        blank=\n-        Id=is\n-        echo You expect this dinky script to track a version?  Okay, here\n-        echo it $Id: run_doxygen,v 1.6 2001/07/11 19:35:47 pme Exp $blank\n-        exit 0\n-        ;;\n       *)\n         # this turned out to be a mess, maybe change to --srcdir=, etc\n         if test $srcdir = unset; then\n@@ -129,12 +121,56 @@ chmod u+w $outdir\n   echo :: Finished, exit code was $?\n )\n \n-# mess with output files here?\n+# Mess with the man pages.  We don't need documentation of the internal\n+# headers, since the man pages for those contain nothing useful anyhow.  The\n+# man pages for doxygen modules need to be renamed (or deleted).  And the\n+# generated #include lines need to be changed from the internal names to the\n+# standard ones (e.g., \"#include <stl_tempbuf.h>\" -> \"#include <memory>\").\n+#\n+# File names with embedded spaces (EVIL!) need to be....?  renamed or removed?\n+cd $outdir/man/man3 && {\n+echo :: Fixing up the man pages...\n+\n+# requires GNU tools\n+find . -name \"* *\" -print0 | xargs -0 rm\n+rm *.h.3\n+\n+# can leave SGIextensions.3 alone, it's an okay name\n+mv s20_3_1_base.3           Intro_functors.3\n+mv s20_3_2_arithmetic.3     Arithmetic_functors.3\n+mv s20_3_3_comparisons.3    Comparison_functors.3\n+mv s20_3_4_logical.3        Logical_functors.3\n+mv s20_3_5_negators.3       Negation_functors.3\n+mv s20_3_6_binder.3         Binder_functors.3\n+mv s20_3_7_adaptors.3       Func_ptr_functors.3\n+mv s20_3_8_memadaptors.3    Member_ptr_functors.3\n+\n+# Standardize the displayed header names.  If anyone who knows perl cares\n+# enough to rewrite all this, feel free.  This only gets run once a century,\n+# and I'm off getting coffee then anyhow, so I didn't care enough to make\n+# this super-fast.\n+g++ ${srcdir}/docs/doxygen/stdheader.cc -o ./stdheader\n+problematic=`egrep -l '#include <.*_.*>' [a-z]*.3`\n+for f in $problematic; do\n+    # this is also slow, but safe and easy to debug\n+    oldh=`sed -n '/#include </s/.*<\\(.*\\)>.*/\\1/p' $f`\n+    newh=`echo $oldh | ./stdheader`\n+    sed \"s=${oldh}=${newh}=\" $f > TEMP\n+    mv TEMP $f\n+done\n+rm stdheader\n+\n+cp ${srcdir}/docs/doxygen/Intro.3 .\n \n+}\n+\n+# all done\n echo ::\n echo :: Doxygen output begins with\n echo :: ${outdir}/html_${mode}/index.html\n echo ::\n+echo :: Man pages in ${outdir}/man\n+echo ::\n \n exit 0\n "}, {"sha": "d705d0169c83f154d12868c31e24b0d55dff0da0", "filename": "libstdc++-v3/docs/doxygen/stdheader.cc", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fstdheader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fstdheader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fstdheader.cc?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -0,0 +1,146 @@\n+// This is a slow larval-stage kludge to help massage the generated man\n+// pages.  It's used like this:\n+const char* const usage = \n+\"\\nTakes on stdin, whitespace-separated words of the form\\n\"\n+\"\\n\"\n+\"    [bits/]stl_foo.h\\n\"\n+\"    [bits/]std_foo.h\\n\"\n+\"\\n\"\n+\"and writes on stdout the nearest matching standard header name.\\n\"\n+\"\\n\"\n+\"Takes no command-line arguments.\\n\"\n+\"\\n\";\n+\n+#include <string>\n+#include <map>\n+#include <iostream>\n+\n+typedef std::map<std::string, std::string>   Map;\n+\n+Map  headers;\n+\n+void init_map()\n+{\n+    // Enter the glamourous world of data entry!!  Maintain these!\n+    headers[\"algo.h\"]                   = \"algorithm\";\n+    headers[\"algobase.h\"]               = \"algorithm\";\n+    headers[\"algorithm.h\"]              = \"algorithm\";\n+    headers[\"alloc.h\"]                  = \"memory\";\n+    headers[\"basic_ios.h\"]              = \"ios\";\n+    headers[\"basic_ios.tcc\"]            = \"ios\";\n+    headers[\"basic_string.h\"]           = \"string\";\n+    headers[\"basic_string.tcc\"]         = \"string\";\n+    headers[\"bitset.h\"]                 = \"bitset\";\n+    headers[\"bvector.h\"]                = \"vector\";\n+    //headers[\"char_traits.h\"]            uhhhhhh\n+    headers[\"complex.h\"]                = \"complex\";\n+    //headers[\"construct.h\"]              stl_construct.h entirely internal\n+    headers[\"deque.h\"]                  = \"deque\";\n+    headers[\"fstream.h\"]                = \"fstream\";\n+    headers[\"fstream.tcc\"]              = \"fstream\";\n+    headers[\"function.h\"]               = \"functional\";\n+    headers[\"functional.h\"]             = \"functional\";\n+    headers[\"heap.h\"]                   = \"algorithm\";\n+    headers[\"iomanip.h\"]                = \"iomanip\";\n+    headers[\"ios.h\"]                    = \"ios\";\n+    headers[\"iosfwd.h\"]                 = \"iosfwd\";\n+    headers[\"iostream.h\"]               = \"iostream\";\n+    headers[\"istream.h\"]                = \"istream\";\n+    headers[\"istream.tcc\"]              = \"istream\";\n+    headers[\"iterator.h\"]               = \"iterator\";\n+    headers[\"iterator_base_funcs.h\"]    = \"iterator\";\n+    headers[\"iterator_base_types.h\"]    = \"iterator\";\n+    headers[\"limits.h\"]                 = \"limits\";\n+    headers[\"list.h\"]                   = \"list\";\n+    headers[\"locale.h\"]                 = \"locale\";\n+    headers[\"locale_facets.h\"]          = \"locale\";\n+    headers[\"locale_facets.tcc\"]        = \"locale\";\n+    headers[\"map.h\"]                    = \"map\";\n+    headers[\"memory.h\"]                 = \"memory\";\n+    headers[\"multimap.h\"]               = \"map\";\n+    headers[\"multiset.h\"]               = \"set\";\n+    headers[\"numeric.h\"]                = \"numeric\";\n+    headers[\"ostream.h\"]                = \"ostream\";\n+    headers[\"ostream.tcc\"]              = \"ostream\";\n+    headers[\"pair.h\"]                   = \"utility\";\n+    //headers[\"pthread_alloc.h\"]          who knows\n+    headers[\"queue.h\"]                  = \"queue\";\n+    headers[\"raw_storage_iter.h\"]       = \"memory\";\n+    headers[\"relops.h\"]                 = \"utility\";\n+    headers[\"set.h\"]                    = \"set\";\n+    headers[\"sstream.h\"]                = \"sstream\";\n+    headers[\"sstream.tcc\"]              = \"sstream\";\n+    headers[\"stack.h\"]                  = \"stack\";\n+    headers[\"stdexcept.h\"]              = \"stdexcept\";\n+    headers[\"streambuf.h\"]              = \"streambuf\";\n+    headers[\"streambuf.tcc\"]            = \"streambuf\";\n+    headers[\"string.h\"]                 = \"string\";\n+    headers[\"tempbuf.h\"]                = \"memory\";\n+    //headers[\"threads.h\"]                who knows\n+    headers[\"tree.h\"]                   = \"backward/tree.h\";\n+    headers[\"uninitialized.h\"]          = \"memory\";\n+    headers[\"utility.h\"]                = \"utility\";\n+    headers[\"valarray.h\"]               = \"valarray\";\n+    headers[\"valarray_array.h\"]         = \"valarray\";\n+    headers[\"valarray_array.tcc\"]       = \"valarray\";\n+    headers[\"valarray_meta.h\"]          = \"valarray\";\n+    headers[\"vector.h\"]                 = \"vector\";\n+\n+    // C wrappers -- probably was an easier way to do these, but oh well\n+    headers[\"cassert.h\"]                = \"cassert\";\n+    headers[\"cctype.h\"]                 = \"cctype\";\n+    headers[\"cerrno.h\"]                 = \"cerrno\";\n+    headers[\"cfloat.h\"]                 = \"cfloat\";\n+    headers[\"climits.h\"]                = \"climits\";\n+    headers[\"clocale.h\"]                = \"clocale\";\n+    headers[\"cmath.h\"]                  = \"cmath\";\n+    headers[\"csetjmp.h\"]                = \"csetjmp\";\n+    headers[\"csignal.h\"]                = \"csignal\";\n+    headers[\"cstdarg.h\"]                = \"cstdarg\";\n+    headers[\"cstddef.h\"]                = \"cstddef\";\n+    headers[\"cstdio.h\"]                 = \"cstdio\";\n+    headers[\"cstdlib.h\"]                = \"cstdlib\";\n+    headers[\"cstring.h\"]                = \"cstring\";\n+    headers[\"ctime.h\"]                  = \"ctime\";\n+    headers[\"cwchar.h\"]                 = \"cwchar\";\n+    headers[\"cwctype.h\"]                = \"cwctype\";\n+}\n+\n+\n+void do_word (std::string const& longheader)\n+{\n+    std::string::size_type start = 0;\n+\n+    if (longheader.substr(start,5) == \"bits/\")  start += 5;\n+    if ((longheader.substr(start,4) == \"stl_\") ||\n+        (longheader.substr(start,4) == \"std_\"))\n+    {\n+        start += 4;\n+    }\n+\n+    // come on, gdb, find `p' already...\n+    const char* p = longheader.substr(start).c_str();\n+    Map::iterator word = headers.find(p);\n+    if (word != headers.end())\n+        std::cout << word->second << '\\n';\n+    else std::cout << \"MAYBE_AN_ERROR_MESSAGE_HERE\\n\";\n+}\n+\n+\n+int main (int argc, char**)\n+{\n+    if (argc > 1)\n+    {\n+        std::cerr << usage;\n+        exit(0);\n+    }\n+\n+    init_map();\n+\n+    std::string w;\n+    while (std::cin >> w)\n+        do_word (w);\n+}\n+\n+// vim:ts=4:et:\n+"}, {"sha": "a78cd5c32f16bc0b3b95f9d21b65063e57d46d1b", "filename": "libstdc++-v3/docs/doxygen/user.cfg.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -344,13 +344,14 @@ RECURSIVE              = YES\n # subdirectory from a directory tree whose root is specified with the INPUT tag. \n \n EXCLUDE                = include/c \\\n-                         include/c_shadow\n+                         include/c_shadow \\\n+                         docs/doxygen/stdheader.cc\n \n # If the value of the INPUT tag contains directories, you can use the \n # EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude \n # certain files from those directories. \n \n-EXCLUDE_PATTERNS       = \n+EXCLUDE_PATTERNS       = CVS\n \n # The EXAMPLE_PATH tag can be used to specify one or more files or \n # directories that contain example code fragments that are included (see \n@@ -477,7 +478,7 @@ TOC_EXPAND             = NO\n # top of each HTML page. The value NO (the default) enables the index and \n # the value YES disables it. \n \n-DISABLE_INDEX          = NO\n+DISABLE_INDEX          = YES\n \n # This tag can be used to set the number of enum values (range [1..20]) \n # that doxygen will group on one line in the generated HTML documentation. \n@@ -601,7 +602,7 @@ RTF_STYLESHEET_FILE    =\n # If the GENERATE_MAN tag is set to YES (the default) Doxygen will \n # generate man pages \n \n-GENERATE_MAN           = NO\n+GENERATE_MAN           = YES\n \n # The MAN_OUTPUT tag is used to specify where the man pages will be put. \n # If a relative path is entered the value of OUTPUT_DIRECTORY will be "}, {"sha": "33ed8724b3c361cb99707361d25f2287865ce903", "filename": "libstdc++-v3/include/std/algorithm", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file algorithm\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_ALGORITHM\n #include <bits/std_algorithm.h>\n #endif"}, {"sha": "830ee7c7b0d2b1f538a64424268abcca7fbcb40c", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file bitset\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_BITSET\n #include <bits/std_bitset.h>\n #endif"}, {"sha": "5cb1e01eed15626dc395e8fd8a883b43e45bcbf6", "filename": "libstdc++-v3/include/std/cassert", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcassert", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcassert", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcassert?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cassert\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c assert.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n // This one should not have include guards.\n #include <bits/std_cassert.h>\n "}, {"sha": "b5bf92824554c63c9ea4136f252c8b047967da89", "filename": "libstdc++-v3/include/std/cctype", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcctype", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcctype", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcctype?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cctype\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c ctype.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CCTYPE\n #include <bits/std_cctype.h>\n #endif"}, {"sha": "0c1774984ee8906418d409dbffb288466a93cb1b", "filename": "libstdc++-v3/include/std/cerrno", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcerrno", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcerrno", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcerrno?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cerrno\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c errno.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CERRNO\n #include <bits/std_cerrno.h>\n #endif"}, {"sha": "fa5756daada7ffac291b39abc5ba16db253964fa", "filename": "libstdc++-v3/include/std/cfloat", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcfloat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcfloat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcfloat?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cfloat\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c float.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CFLOAT\n #include <bits/std_cfloat.h>\n #endif"}, {"sha": "c9f49fb6fc391355cc65ec18cf74e3a21e96f3f7", "filename": "libstdc++-v3/include/std/ciso646", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fciso646", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fciso646", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fciso646?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -26,3 +26,13 @@\n // the GNU General Public License.  This exception does not however\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n+\n+/** @file ciso646\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c iso646.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+"}, {"sha": "345ad6140d738552f75a8c172b7c9f1913f0bab6", "filename": "libstdc++-v3/include/std/climits", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclimits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclimits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclimits?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file climits\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c limits.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CLIMITS\n #include <bits/std_climits.h>\n #endif"}, {"sha": "3775010986a57da65949a28e49dc9ba776dff262", "filename": "libstdc++-v3/include/std/clocale", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclocale", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclocale", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fclocale?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file clocale\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c locale.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CLOCALE\n #include <bits/std_clocale.h>\n #endif"}, {"sha": "d565307c534eb3d32831761ebb5a5f2156920e0b", "filename": "libstdc++-v3/include/std/cmath", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcmath?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cmath\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c math.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CMATH\n #include <bits/std_cmath.h>\n #endif"}, {"sha": "6b7abcfa77e3c6d5c1f2837c2f697d2c4247e283", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file complex\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_COMPLEX\n #include <bits/std_complex.h>\n #endif"}, {"sha": "daf11b354a806ca8fa776d8fd3e73aff5b5a8fd2", "filename": "libstdc++-v3/include/std/csetjmp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsetjmp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsetjmp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsetjmp?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file csetjmp\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c setjmp.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CSETJMP\n #include <bits/std_csetjmp.h>\n #endif"}, {"sha": "3790ff51882d1defa57dc29d0ce82ddba0a34ff0", "filename": "libstdc++-v3/include/std/csignal", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsignal", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsignal", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcsignal?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file csignal\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c signal.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CSIGNAL\n #include <bits/std_csignal.h>\n #endif"}, {"sha": "8dfe625bcaec1179b1b60a018b58f5fdc2c5d440", "filename": "libstdc++-v3/include/std/cstdarg", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdarg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdarg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdarg?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cstdarg\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c stdarg.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CSTDARG\n #include <bits/std_cstdarg.h>\n #endif"}, {"sha": "4b3d1f5be78706b15b438ca7c10bcf29613adfaa", "filename": "libstdc++-v3/include/std/cstddef", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstddef", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstddef", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstddef?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cstddef\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c stddef.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CSTDDEF\n #include <bits/std_cstddef.h>\n #endif"}, {"sha": "b546585091d0df88c5c5a02c347c673c0d32efd4", "filename": "libstdc++-v3/include/std/cstdio", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdio?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cstdio\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c stdio.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CSTDIO\n #include <bits/std_cstdio.h>\n #endif"}, {"sha": "2feeb533b658eb495a78d421b1cf8f6d86d8b65f", "filename": "libstdc++-v3/include/std/cstdlib", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstdlib?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cstdlib\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c stdlib.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CSTDLIB\n #include <bits/std_cstdlib.h>\n #endif"}, {"sha": "5652803abd8782aa94832cd71cc4d9ffd6a23619", "filename": "libstdc++-v3/include/std/cstring", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcstring?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cstring\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c string.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CSTRING\n #include <bits/std_cstring.h>\n #endif"}, {"sha": "e1d6bc9d065e50c0bb61ad3b501d95af143dac39", "filename": "libstdc++-v3/include/std/ctime", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fctime", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fctime", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fctime?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ctime\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c time.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CTIME\n #include <bits/std_ctime.h>\n #endif"}, {"sha": "aa928d72870d3b10b51d5ef45455078da38bd517", "filename": "libstdc++-v3/include/std/cwchar", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwchar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwchar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwchar?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cwchar\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c wchar.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CWCHAR\n #include <bits/std_cwchar.h>\n #endif"}, {"sha": "b0de79eeb9d9a0bcf000097d41084de9e8eb1bed", "filename": "libstdc++-v3/include/std/cwctype", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwctype", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwctype", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcwctype?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,15 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file cwctype\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ *\n+ *  This is the C++ version of the Standard C Library header @c wctype.h,\n+ *  and its contents are (mostly) the same as that header, but are all\n+ *  contained in the namespace @c std.\n+ */\n+\n #ifndef _CPP_CWCTYPE\n #include <bits/std_cwctype.h>\n #endif"}, {"sha": "222d7cacb71d3305177fc0855ae90f54296a60cd", "filename": "libstdc++-v3/include/std/deque", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fdeque?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file deque\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_DEQUE\n #include <bits/std_deque.h>\n #endif"}, {"sha": "9d6fcfc73e49706834c1fc8a485e4e9fa2ba20cc", "filename": "libstdc++-v3/include/std/fstream", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file fstream\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_FSTREAM\n #include <bits/std_fstream.h>\n #endif"}, {"sha": "10c55256134e8e8b3d74f86940525f5d7729cf05", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file functional\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_FUNCTIONAL\n #include <bits/std_functional.h>\n #endif"}, {"sha": "56599183631d3a887e1d2873e49e9a8de5d34fab", "filename": "libstdc++-v3/include/std/iomanip", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file iomanip\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_IOMANIP\n #include <bits/std_iomanip.h>\n #endif"}, {"sha": "a017dd894bebd71992b4034de5dfc5504e9fe27c", "filename": "libstdc++-v3/include/std/ios", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fios", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fios", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fios?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ios\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_IOS\n #include <bits/std_ios.h>\n #endif"}, {"sha": "e48516a180ea89f9e3db1672133860a603c03f60", "filename": "libstdc++-v3/include/std/iosfwd", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiosfwd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiosfwd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiosfwd?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file iosfwd\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_IOSFWD\n #include <bits/std_iosfwd.h>\n #endif"}, {"sha": "a8098c6b312e200f9901133f4a1531be26cc4d14", "filename": "libstdc++-v3/include/std/iostream", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiostream?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file iostream\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_IOSTREAM\n #include <bits/std_iostream.h>\n #endif"}, {"sha": "c3835065a34475391d20931f10c5d719d1d7b842", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file istream\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_ISTREAM\n #include <bits/std_istream.h>\n #endif"}, {"sha": "6e42f5634f7b81e4f123050519f1b9a0c63e99ef", "filename": "libstdc++-v3/include/std/iterator", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiterator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiterator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiterator?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file iterator\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_ITERATOR\n #include <bits/std_iterator.h>\n #endif"}, {"sha": "ea55c7fc18e6114873605b2b01e6d51ed98261dc", "filename": "libstdc++-v3/include/std/limits", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flimits?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file limits\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_LIMITS\n #include <bits/std_limits.h>\n #endif"}, {"sha": "51490ee342e0469093fd0bcae420092b80f2dfc7", "filename": "libstdc++-v3/include/std/list", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flist?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file list\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_LIST\n #include <bits/std_list.h>\n #endif"}, {"sha": "5a1d62241e7b891344f263ccad779a7f763704cd", "filename": "libstdc++-v3/include/std/locale", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flocale", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flocale", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Flocale?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file locale\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_LOCALE\n #include <bits/std_locale.h>\n #endif"}, {"sha": "3d10673b41aae53c20f827d374cd1121779a8c8e", "filename": "libstdc++-v3/include/std/map", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmap?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file map\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_MAP\n #include <bits/std_map.h>\n #endif"}, {"sha": "a52f4921d929259a7a83625191c1138726539d87", "filename": "libstdc++-v3/include/std/memory", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file memory\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_MEMORY\n #include <bits/std_memory.h>\n #endif"}, {"sha": "0d2aea0e24e941225085529e74c64cbbadf329f7", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file numeric\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_NUMERIC\n #include <bits/std_numeric.h>\n #endif"}, {"sha": "eb4fd68fca0dfa3b05236578f5153b7df02e4d75", "filename": "libstdc++-v3/include/std/ostream", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file ostream\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_OSTREAM\n #include <bits/std_ostream.h>\n #endif"}, {"sha": "b3d9cdb34291cc4379d3665b710262dabf3203b0", "filename": "libstdc++-v3/include/std/queue", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fqueue", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fqueue", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fqueue?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file queue\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_QUEUE\n #include <bits/std_queue.h>\n #endif"}, {"sha": "414b04c741219877f1604d761487a0bd095a6540", "filename": "libstdc++-v3/include/std/set", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fset?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file set\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_SET\n #include <bits/std_set.h>\n #endif"}, {"sha": "2a53e3633c9b74d0b2839cecb7d8101eb5c4ca41", "filename": "libstdc++-v3/include/std/sstream", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file sstream\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_SSTREAM\n #include <bits/std_sstream.h>\n #endif"}, {"sha": "e901f84a1dc201a09bec3cd85a78da7653b2bd1d", "filename": "libstdc++-v3/include/std/stack", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstack", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstack", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstack?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file stack\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_STACK\n #include <bits/std_stack.h>\n #endif"}, {"sha": "03e89e82b6c041b85f01294e4144af4bf25809e6", "filename": "libstdc++-v3/include/std/stdexcept", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstdexcept", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstdexcept", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstdexcept?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file stdexcept\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_STDEXCEPT\n #include <bits/std_stdexcept.h>\n #endif"}, {"sha": "c0f4dd71a2843976d355488046337526cbe1f4ab", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file streambuf\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_STREAMBUF\n #include <bits/std_streambuf.h>\n #endif"}, {"sha": "0229afdb5e2c51107ec1ba6eab925477955178a3", "filename": "libstdc++-v3/include/std/string", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file string\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_STRING\n #include <bits/std_string.h>\n #endif"}, {"sha": "28822fa5a6ef6d6df30d602aee6c11d54b1ffb9c", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file utility\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_UTILITY\n #include <bits/std_utility.h>\n #endif"}, {"sha": "e20b7b8fd563dd9fb7397f2d8e71a19c34ebafb1", "filename": "libstdc++-v3/include/std/valarray", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file valarray\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_VALARRAY\n #include <bits/std_valarray.h>\n #endif"}, {"sha": "8fa361d5eacb535c4bc3d132a065babc188674ff", "filename": "libstdc++-v3/include/std/vector", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f9d51b858cdcc0fca6c791da68eca8dc24a610c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvector?ref=2f9d51b858cdcc0fca6c791da68eca8dc24a610c", "patch": "@@ -27,6 +27,11 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+/** @file vector\n+ *  This is a Standard C++ Library file.  You should @c #include this file\n+ *  in your programs, rather than any of the \"st[dl]_*.h\" implementation files.\n+ */\n+\n #ifndef _CPP_VECTOR\n #include <bits/std_vector.h>\n #endif"}]}