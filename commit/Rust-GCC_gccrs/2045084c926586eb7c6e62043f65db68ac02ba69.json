{"sha": "2045084c926586eb7c6e62043f65db68ac02ba69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA0NTA4NGM5MjY1ODZlYjdjNmU2MjA0M2Y2NWRiNjhhYzAyYmE2OQ==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1993-03-22T07:40:46Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1993-03-22T07:40:46Z"}, "message": "(eliminate_regs): Eliminate regs within a CLOBBER.\n\nFrom-SVN: r3826", "tree": {"sha": "d365414b3913e1c2dbc6bee605e9a04e2ee35b1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d365414b3913e1c2dbc6bee605e9a04e2ee35b1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2045084c926586eb7c6e62043f65db68ac02ba69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2045084c926586eb7c6e62043f65db68ac02ba69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2045084c926586eb7c6e62043f65db68ac02ba69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2045084c926586eb7c6e62043f65db68ac02ba69/comments", "author": null, "committer": null, "parents": [{"sha": "424aa086e1ad70390321e559c037d6038d994bbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/424aa086e1ad70390321e559c037d6038d994bbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/424aa086e1ad70390321e559c037d6038d994bbf"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "814a113dcee8c9a06520a249f0140971742cef65", "filename": "gcc/reload1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2045084c926586eb7c6e62043f65db68ac02ba69/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2045084c926586eb7c6e62043f65db68ac02ba69/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=2045084c926586eb7c6e62043f65db68ac02ba69", "patch": "@@ -2766,6 +2766,9 @@ eliminate_regs (x, mem_mode, insn)\n \tif (ep->to_rtx == XEXP (x, 0))\n \t  ep->can_eliminate = 0;\n \n+      new = eliminate_regs (XEXP (x, 0), mem_mode, NULL_RTX);\n+      if (new != XEXP (x, 0))\n+\treturn gen_rtx (code, GET_MODE (x), new);\n       return x;\n \n     case ASM_OPERANDS:"}]}