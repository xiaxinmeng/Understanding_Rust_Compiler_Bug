{"sha": "88f4509ce6f2b0035b0997b5dc72736d356e6c58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhmNDUwOWNlNmYyYjAwMzViMDk5N2I1ZGM3MjczNmQzNTZlNmM1OA==", "commit": {"author": {"name": "Sterling Augustine", "email": "saugustine@google.com", "date": "2013-10-22T18:12:28Z"}, "committer": {"name": "Sterling Augustine", "email": "sterling@gcc.gnu.org", "date": "2013-10-22T18:12:28Z"}, "message": "gdb-index.h: Merge from gdb tree.\n\n2013-10-22  Sterling Augustine  <saugustine@google.com>\n\n\t* gdb/gdb-index.h: Merge from gdb tree.\n\nFrom-SVN: r203931", "tree": {"sha": "6ab4f84424a9c42e602c13def43fc9460d497c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ab4f84424a9c42e602c13def43fc9460d497c21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88f4509ce6f2b0035b0997b5dc72736d356e6c58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f4509ce6f2b0035b0997b5dc72736d356e6c58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f4509ce6f2b0035b0997b5dc72736d356e6c58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f4509ce6f2b0035b0997b5dc72736d356e6c58/comments", "author": {"login": "Sterling-Augustine", "id": 56981066, "node_id": "MDQ6VXNlcjU2OTgxMDY2", "avatar_url": "https://avatars.githubusercontent.com/u/56981066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sterling-Augustine", "html_url": "https://github.com/Sterling-Augustine", "followers_url": "https://api.github.com/users/Sterling-Augustine/followers", "following_url": "https://api.github.com/users/Sterling-Augustine/following{/other_user}", "gists_url": "https://api.github.com/users/Sterling-Augustine/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sterling-Augustine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sterling-Augustine/subscriptions", "organizations_url": "https://api.github.com/users/Sterling-Augustine/orgs", "repos_url": "https://api.github.com/users/Sterling-Augustine/repos", "events_url": "https://api.github.com/users/Sterling-Augustine/events{/privacy}", "received_events_url": "https://api.github.com/users/Sterling-Augustine/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "843d68c67cba2d553d2b5b188dddeac7477fb6fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/843d68c67cba2d553d2b5b188dddeac7477fb6fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/843d68c67cba2d553d2b5b188dddeac7477fb6fb"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "c7a02daa288fb9b8a9d83618d2c248b20a8cbbea", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f4509ce6f2b0035b0997b5dc72736d356e6c58/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f4509ce6f2b0035b0997b5dc72736d356e6c58/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=88f4509ce6f2b0035b0997b5dc72736d356e6c58", "patch": "@@ -1,3 +1,7 @@\n+2013-10-22  Sterling Augustine  <saugustine@google.com>\n+\n+\t* gdb/gdb-index.h: Merge from gdb tree.\n+\n 2013-08-20  Alan Modra  <amodra@gmail.com>\n \n \t* floatformat.h (floatformat_ibm_long_double): Delete."}, {"sha": "b43c68f9e3b6bb3467c6462e801a74be51b0713e", "filename": "include/gdb/gdb-index.h", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88f4509ce6f2b0035b0997b5dc72736d356e6c58/include%2Fgdb%2Fgdb-index.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88f4509ce6f2b0035b0997b5dc72736d356e6c58/include%2Fgdb%2Fgdb-index.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fgdb%2Fgdb-index.h?ref=88f4509ce6f2b0035b0997b5dc72736d356e6c58", "patch": "@@ -0,0 +1,99 @@\n+/* Public attributes of the .gdb_index section.\n+   Copyright 2012 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* This file contains values for understanding the .gdb_index section\n+   needed by more than just GDB, e.g. readelf.  */\n+\n+#ifndef GDB_INDEX_H\n+#define GDB_INDEX_H\n+\n+/* Each symbol in .gdb_index refers to a set of CUs that defines the symbol.\n+   Each CU is represented by a 32 bit number that is the index of the CU in\n+   the CU table, plus some attributes of the use of the symbol in that CU.\n+\n+   The values are defined such that if all the bits are zero, then no\n+   special meaning is assigned to any of them.  This is done to preserve\n+   compatibility with older indices.  The way this is done is to specify\n+   that if the GDB_INDEX_SYMBOL_KIND value is zero then all other attribute\n+   bits must be zero.\n+\n+    0-23  CU index\n+   24-27  reserved\n+   28-30  symbol kind\n+   31     0 == global, 1 == static\n+\n+   Bits 24-27 are reserved because it's easier to relax restrictions than\n+   it is to impose them after the fact.  At present 24 bits to represent\n+   the CU index is plenty.  If we need more bits for the CU index or for\n+   attributes then we have them.  */\n+\n+/* Whether the symbol is in GLOBAL_BLOCK (== 0) or STATIC_BLOCK (== 1).  */\n+#define GDB_INDEX_SYMBOL_STATIC_SHIFT 31\n+#define GDB_INDEX_SYMBOL_STATIC_MASK 1\n+#define GDB_INDEX_SYMBOL_STATIC_VALUE(cu_index) \\\n+  (((cu_index) >> GDB_INDEX_SYMBOL_STATIC_SHIFT) & GDB_INDEX_SYMBOL_STATIC_MASK)\n+#define GDB_INDEX_SYMBOL_STATIC_SET_VALUE(cu_index, value) \\\n+  do { \\\n+    (cu_index) |= (((value) & GDB_INDEX_SYMBOL_STATIC_MASK) \\\n+\t\t   << GDB_INDEX_SYMBOL_STATIC_SHIFT); \\\n+  } while (0)\n+\n+/* The kind of the symbol.\n+   We don't use GDB's internal values as these numbers are published\n+   so that other tools can build and read .gdb_index.  */\n+\n+typedef enum {\n+  /* Special value to indicate no attributes are present.  */\n+  GDB_INDEX_SYMBOL_KIND_NONE = 0,\n+  GDB_INDEX_SYMBOL_KIND_TYPE = 1,\n+  GDB_INDEX_SYMBOL_KIND_VARIABLE = 2,\n+  GDB_INDEX_SYMBOL_KIND_FUNCTION = 3,\n+  GDB_INDEX_SYMBOL_KIND_OTHER = 4,\n+  /* We currently allocate 3 bits to record the symbol kind.\n+     Give the unused bits a value so gdb will print them sensibly.  */\n+  GDB_INDEX_SYMBOL_KIND_UNUSED5 = 5,\n+  GDB_INDEX_SYMBOL_KIND_UNUSED6 = 6,\n+  GDB_INDEX_SYMBOL_KIND_UNUSED7 = 7\n+} gdb_index_symbol_kind;\n+\n+#define GDB_INDEX_SYMBOL_KIND_SHIFT 28\n+#define GDB_INDEX_SYMBOL_KIND_MASK 7\n+#define GDB_INDEX_SYMBOL_KIND_VALUE(cu_index) \\\n+  ((gdb_index_symbol_kind) (((cu_index) >> GDB_INDEX_SYMBOL_KIND_SHIFT) \\\n+\t\t\t    & GDB_INDEX_SYMBOL_KIND_MASK))\n+#define GDB_INDEX_SYMBOL_KIND_SET_VALUE(cu_index, value) \\\n+  do { \\\n+    (cu_index) |= (((value) & GDB_INDEX_SYMBOL_KIND_MASK) \\\n+\t\t   << GDB_INDEX_SYMBOL_KIND_SHIFT); \\\n+  } while (0)\n+\n+#define GDB_INDEX_RESERVED_SHIFT 24\n+#define GDB_INDEX_RESERVED_MASK 15\n+#define GDB_INDEX_RESERVED_VALUE(cu_index) \\\n+  (((cu_index) >> GDB_INDEX_RESERVED_SHIFT) & GDB_INDEX_RESERVED_MASK)\n+\n+/* CU index.  */\n+#define GDB_INDEX_CU_BITSIZE 24\n+#define GDB_INDEX_CU_MASK ((1 << GDB_INDEX_CU_BITSIZE) - 1)\n+#define GDB_INDEX_CU_VALUE(cu_index) ((cu_index) & GDB_INDEX_CU_MASK)\n+#define GDB_INDEX_CU_SET_VALUE(cu_index, value) \\\n+  do { \\\n+    (cu_index) |= (value) & GDB_INDEX_CU_MASK; \\\n+  } while (0)\n+\n+#endif /* GDB_INDEX_H */"}]}