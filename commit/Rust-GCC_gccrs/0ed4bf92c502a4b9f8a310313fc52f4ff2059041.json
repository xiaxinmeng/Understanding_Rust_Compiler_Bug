{"sha": "0ed4bf92c502a4b9f8a310313fc52f4ff2059041", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVkNGJmOTJjNTAyYTRiOWY4YTMxMDMxM2ZjNTJmNGZmMjA1OTA0MQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2015-01-17T07:35:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-01-17T07:35:40Z"}, "message": "re PR rtl-optimization/52773 (internal error: in replace_pseudos_in, at reload1.c:577)\n\n\tPR rtl-optimization/52773\n\t* calls.c (emit_library_call_value): When pushing arguments use\n\tstack_pointer_rtx rather than virtual_outgoing_args_rtx in\n\tCALL_INSN_FUNCTION_USAGE.  Only emit one of use of the magic\n\tstack pointer reference into CALL_INSN_FUNCTION_USAGE.\n\n\tPR rtl-optimization/52773\n\t* gcc.c-torture/compile/pr52773.c: New test.\n\nFrom-SVN: r219796", "tree": {"sha": "c19aa88b81db253df6cd1adc638ebed96d974607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c19aa88b81db253df6cd1adc638ebed96d974607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ed4bf92c502a4b9f8a310313fc52f4ff2059041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed4bf92c502a4b9f8a310313fc52f4ff2059041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ed4bf92c502a4b9f8a310313fc52f4ff2059041", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed4bf92c502a4b9f8a310313fc52f4ff2059041/comments", "author": null, "committer": null, "parents": [{"sha": "bd5fb71cd07c61218d58cba2e779648c0ca8b3a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5fb71cd07c61218d58cba2e779648c0ca8b3a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5fb71cd07c61218d58cba2e779648c0ca8b3a2"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "80f8c927b0eba7721846e44ecf956f6b8c6c1f39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed4bf92c502a4b9f8a310313fc52f4ff2059041/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed4bf92c502a4b9f8a310313fc52f4ff2059041/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ed4bf92c502a4b9f8a310313fc52f4ff2059041", "patch": "@@ -1,3 +1,11 @@\n+2015-01-17  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tPR rtl-optimization/52773\n+\t* calls.c (emit_library_call_value): When pushing arguments use\n+\tstack_pointer_rtx rather than virtual_outgoing_args_rtx in\n+\tCALL_INSN_FUNCTION_USAGE.  Only emit one of use of the magic\n+\tstack pointer reference into CALL_INSN_FUNCTION_USAGE.\n+\n 2015-01-17  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/32790"}, {"sha": "ec44624d7c9af242937064a39bae0124f0836e48", "filename": "gcc/calls.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed4bf92c502a4b9f8a310313fc52f4ff2059041/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed4bf92c502a4b9f8a310313fc52f4ff2059041/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=0ed4bf92c502a4b9f8a310313fc52f4ff2059041", "patch": "@@ -3808,6 +3808,7 @@ emit_library_call_value_1 (int retval, rtx orgfun, rtx value,\n   int reg_parm_stack_space = 0;\n   int needed;\n   rtx_insn *before_call;\n+  bool have_push_fusage;\n   tree tfom;\t\t\t/* type_for_mode (outmode, 0) */\n \n #ifdef REG_PARM_STACK_SPACE\n@@ -4165,6 +4166,8 @@ emit_library_call_value_1 (int retval, rtx orgfun, rtx value,\n \n   /* Push the args that need to be pushed.  */\n \n+  have_push_fusage = false;\n+\n   /* ARGNUM indexes the ARGVEC array in the order in which the arguments\n      are to be pushed.  */\n   for (count = 0; count < nargs; count++, argnum--)\n@@ -4256,14 +4259,19 @@ emit_library_call_value_1 (int retval, rtx orgfun, rtx value,\n \t  if (argblock)\n \t    use = plus_constant (Pmode, argblock,\n \t\t\t\t argvec[argnum].locate.offset.constant);\n+\t  else if (have_push_fusage)\n+\t    continue;\n \t  else\n-\t    /* When arguments are pushed, trying to tell alias.c where\n-\t       exactly this argument is won't work, because the\n-\t       auto-increment causes confusion.  So we merely indicate\n-\t       that we access something with a known mode somewhere on\n-\t       the stack.  */\n-\t    use = gen_rtx_PLUS (Pmode, virtual_outgoing_args_rtx,\n-\t\t\t\tgen_rtx_SCRATCH (Pmode));\n+\t    {\n+\t      /* When arguments are pushed, trying to tell alias.c where\n+\t\t exactly this argument is won't work, because the\n+\t\t auto-increment causes confusion.  So we merely indicate\n+\t\t that we access something with a known mode somewhere on\n+\t\t the stack.  */\n+\t      use = gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n+\t\t\t\t  gen_rtx_SCRATCH (Pmode));\n+\t      have_push_fusage = true;\n+\t    }\n \t  use = gen_rtx_MEM (argvec[argnum].mode, use);\n \t  use = gen_rtx_USE (VOIDmode, use);\n \t  call_fusage = gen_rtx_EXPR_LIST (VOIDmode, use, call_fusage);"}, {"sha": "3d424ce53dd63d70915328bc17f38838f9e717a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed4bf92c502a4b9f8a310313fc52f4ff2059041/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed4bf92c502a4b9f8a310313fc52f4ff2059041/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ed4bf92c502a4b9f8a310313fc52f4ff2059041", "patch": "@@ -1,3 +1,8 @@\n+2015-01-16  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tPR rtl-optimization/52773\n+\t* gcc.c-torture/compile/pr52773.c: New test.\n+\n 2015-01-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/62134"}, {"sha": "8daa5ee03d6b1bd7c84d4eb6510f77c62431f3d5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr52773.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ed4bf92c502a4b9f8a310313fc52f4ff2059041/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr52773.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ed4bf92c502a4b9f8a310313fc52f4ff2059041/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr52773.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr52773.c?ref=0ed4bf92c502a4b9f8a310313fc52f4ff2059041", "patch": "@@ -0,0 +1,16 @@\n+/* pr52773.c */\n+\n+struct s {\n+    short x;\n+    short _pad[2];\n+};\n+\n+static short mat_a_x;\n+\n+void transform(const struct s *src, struct s *dst, int n)\n+{\n+    int i;\n+\n+    for (i = 0; i < n; ++i)\n+\tdst[i].x = (src[i].x * mat_a_x) >> 6;\n+}"}]}