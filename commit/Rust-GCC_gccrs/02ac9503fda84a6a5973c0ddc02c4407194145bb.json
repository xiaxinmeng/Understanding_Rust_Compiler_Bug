{"sha": "02ac9503fda84a6a5973c0ddc02c4407194145bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhYzk1MDNmZGE4NGE2YTU5NzNjMGRkYzAyYzQ0MDcxOTQxNDViYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-05T16:08:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-05T16:08:30Z"}, "message": "i386-c.c (ix86_target_macros): Define _SOFT_FLOAT for !TARGET_80387.\n\ngcc/\n\n\t* config/i386/i386-c.c (ix86_target_macros): Define _SOFT_FLOAT\n\tfor !TARGET_80387.\n\t* config/i386/rtemself.h (TARGET_OS_CPP_BUILTINS): Do not define\n\t_SOFT_FLOAT here.\n\t(LONG_DOUBLE_TYPE_SIZE): New define.\n\t(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Ditto.\n\nlibgcc/\n\n\t* config/i386/32/sfp-machine.h (_FP_MUL_MEAT_S): Define.\n\t(_FP_MUL_MEAT_D): Ditto.\n\t(_FP_DIV_MEAT_S): Ditto.\n\t(_FP_DIV_MEAT_D): Ditto.\n\t* config.host (i[34567]86-*-rtems*): Remove i386/t-softfp, add\n\tt-softfp-sfdf and t-softfp to tmake_file.\n\nM    gcc/config/i386/i386-c.c\nM    gcc/config/i386/rtemself.h\nM    gcc/ChangeLog\nM    libgcc/ChangeLog\nM    libgcc/config.host\nM    libgcc/config/i386/32/sfp-machine.h\n\nFrom-SVN: r204404", "tree": {"sha": "701e939718c2586014d56b1c40b3359df5fab2bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/701e939718c2586014d56b1c40b3359df5fab2bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02ac9503fda84a6a5973c0ddc02c4407194145bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ac9503fda84a6a5973c0ddc02c4407194145bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ac9503fda84a6a5973c0ddc02c4407194145bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ac9503fda84a6a5973c0ddc02c4407194145bb/comments", "author": null, "committer": null, "parents": [{"sha": "b1705a63884677d72924b7044610eb687287688b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1705a63884677d72924b7044610eb687287688b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1705a63884677d72924b7044610eb687287688b"}], "stats": {"total": 59, "additions": 45, "deletions": 14}, "files": [{"sha": "5da271fe8620d97706b98ff98e659ff1a32c0e87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ac9503fda84a6a5973c0ddc02c4407194145bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ac9503fda84a6a5973c0ddc02c4407194145bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02ac9503fda84a6a5973c0ddc02c4407194145bb", "patch": "@@ -1,3 +1,12 @@\n+2013-11-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386-c.c (ix86_target_macros): Define _SOFT_FLOAT\n+\tfor !TARGET_80387.\n+\t* config/i386/rtemself.h (TARGET_OS_CPP_BUILTINS): Do not define\n+\t_SOFT_FLOAT here.\n+\t(LONG_DOUBLE_TYPE_SIZE): New define.\n+\t(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Ditto.\n+\n 2013-11-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58724\n@@ -123,7 +132,8 @@\n \t(asan_add_global): Ditto.\n \t* asan.h (asan_function_start): New prototype.\n \t* final.c (final_start_function): Call asan_function_start.\n-\t* sanitizer.def (BUILT_IN_ASAN_INIT): Rename __asan_init_v1 to __asan_init_v3.\n+\t* sanitizer.def (BUILT_IN_ASAN_INIT): Rename __asan_init_v1\n+\tto __asan_init_v3.\n \n 2013-11-04  Wei Mi  <wmi@google.com>\n \n@@ -162,10 +172,8 @@\n \t* builtins.def (ATTR_NOTHROWCALL_LEAF_LIST): Define.\n \t* sync-builtins.def: Use ATTR_NOTHROWCALL_LEAF_LIST for all sync\n \tbuiltins that take pointers.\n-\t* lto-opts.c (lto_write_options): Write -fnon-call-exceptions\n-\tif set.\n-\t* lto-wrapper.c (merge_and_complain): Collect\n-\tOPT_fnon_call_exceptions.\n+\t* lto-opts.c (lto_write_options): Write -fnon-call-exceptions if set.\n+\t* lto-wrapper.c (merge_and_complain): Collect OPT_fnon_call_exceptions.\n \t(run_gcc): Pass -fnon-call-exceptions.\n \n 2013-11-04  Jakub Jelinek  <jakub@redhat.com>\n@@ -186,13 +194,11 @@\n \n 2013-11-04  Joseph Myers  <joseph@codesourcery.com>\n \n-\t* doc/cpp.texi (__GCC_IEC_559, __GCC_IEC_559_COMPLEX): Document\n-\tmacros.\n+\t* doc/cpp.texi (__GCC_IEC_559, __GCC_IEC_559_COMPLEX): Document macros.\n \t* target.def (float_exceptions_rounding_supported_p): New hook.\n \t* targhooks.c (default_float_exceptions_rounding_supported_p): New\n \tfunction.\n-\t* targhooks.h (default_float_exceptions_rounding_supported_p):\n-\tDeclare.\n+\t* targhooks.h (default_float_exceptions_rounding_supported_p): Declare.\n \t* doc/tm.texi.in (TARGET_FLOAT_EXCEPTIONS_ROUNDING_SUPPORTED_P):\n \tNew @hook.\n \t* doc/tm.texi: Regenerate.\n@@ -245,8 +251,7 @@\n \n \tImplement -fsanitize=vla-bound.\n \t* opts.c (common_handle_option): Handle vla-bound.\n-\t* sanitizer.def (BUILT_IN_UBSAN_HANDLE_VLA_BOUND_NOT_POSITIVE):\n-\tDefine.\n+\t* sanitizer.def (BUILT_IN_UBSAN_HANDLE_VLA_BOUND_NOT_POSITIVE): Define.\n \t* flag-types.h (enum sanitize_code): Add SANITIZE_VLA.\n \t* asan.c (initialize_sanitizer_builtins): Build BT_FN_VOID_PTR_PTR.\n "}, {"sha": "1c053b1e51eb7d12547b9409a321bf8a96b940e3", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ac9503fda84a6a5973c0ddc02c4407194145bb/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ac9503fda84a6a5973c0ddc02c4407194145bb/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=02ac9503fda84a6a5973c0ddc02c4407194145bb", "patch": "@@ -474,6 +474,9 @@ ix86_target_macros (void)\n       builtin_define_std (\"i386\");\n     }\n \n+  if (!TARGET_80387)\n+    cpp_define (parse_in, \"_SOFT_FLOAT\");\n+\n   if (TARGET_LONG_DOUBLE_64)\n     cpp_define (parse_in, \"__LONG_DOUBLE_64__\");\n "}, {"sha": "087179191cb3fa4b314cd8973852c97439a48d5b", "filename": "gcc/config/i386/rtemself.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ac9503fda84a6a5973c0ddc02c4407194145bb/gcc%2Fconfig%2Fi386%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ac9503fda84a6a5973c0ddc02c4407194145bb/gcc%2Fconfig%2Fi386%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtemself.h?ref=02ac9503fda84a6a5973c0ddc02c4407194145bb", "patch": "@@ -26,7 +26,15 @@ along with GCC; see the file COPYING3.  If not see\n \tbuiltin_define (\"__rtems__\");\t\t\\\n \tbuiltin_define (\"__USE_INIT_FINI__\");\t\\\n \tbuiltin_assert (\"system=rtems\");\t\\\n-\tif (!TARGET_80387)\t\t\t\\\n-\t  builtin_define (\"_SOFT_FLOAT\");\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n+\n+#undef LONG_DOUBLE_TYPE_SIZE\n+#define LONG_DOUBLE_TYPE_SIZE (TARGET_80387 ? 80 : 64)\n+\n+#undef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n+#ifdef _SOFT_FLOAT\n+#define LIBGCC2_LONG_DOUBLE_TYPE_SIZE 64\n+#else\n+#define LIBGCC2_LONG_DOUBLE_TYPE_SIZE 80\n+#endif"}, {"sha": "41bf1c55ff46e121c203d6f435ca55f171a4e44f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ac9503fda84a6a5973c0ddc02c4407194145bb/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ac9503fda84a6a5973c0ddc02c4407194145bb/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=02ac9503fda84a6a5973c0ddc02c4407194145bb", "patch": "@@ -1,3 +1,12 @@\n+2013-11-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/32/sfp-machine.h (_FP_MUL_MEAT_S): Define.\n+\t(_FP_MUL_MEAT_D): Ditto.\n+\t(_FP_DIV_MEAT_S): Ditto.\n+\t(_FP_DIV_MEAT_D): Ditto.\n+\t* config.host (i[34567]86-*-rtems*): Remove i386/t-softfp, add\n+\tt-softfp-sfdf and t-softfp to tmake_file.\n+\n 2013-11-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/crtfastmath.c: Compile only for !_SOFT_FLOAT."}, {"sha": "325ed84ad90ea0479d9861ac4954b905c41f28d0", "filename": "libgcc/config.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ac9503fda84a6a5973c0ddc02c4407194145bb/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ac9503fda84a6a5973c0ddc02c4407194145bb/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=02ac9503fda84a6a5973c0ddc02c4407194145bb", "patch": "@@ -564,7 +564,7 @@ i[34567]86-*-nto-qnx*)\n \textra_parts=crtbegin.o\n \t;;\n i[34567]86-*-rtems*)\n-\ttmake_file=\"$tmake_file i386/t-softfp i386/t-crtstuff\"\n+\ttmake_file=\"$tmake_file i386/t-crtstuff t-softfp-sfdf t-softfp\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)"}, {"sha": "b9eb16633ebcb8f1a1cdbb10364e29a2519efc20", "filename": "libgcc/config/i386/32/sfp-machine.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ac9503fda84a6a5973c0ddc02c4407194145bb/libgcc%2Fconfig%2Fi386%2F32%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ac9503fda84a6a5973c0ddc02c4407194145bb/libgcc%2Fconfig%2Fi386%2F32%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2F32%2Fsfp-machine.h?ref=02ac9503fda84a6a5973c0ddc02c4407194145bb", "patch": "@@ -65,9 +65,15 @@\n \t     \"g\" ((USItype) (y0)))\n \n \n+#define _FP_MUL_MEAT_S(R,X,Y)\t\t\t\t\\\n+  _FP_MUL_MEAT_1_wide(_FP_WFRACBITS_S,R,X,Y,umul_ppmm)\n+#define _FP_MUL_MEAT_D(R,X,Y)\t\t\t\t\\\n+  _FP_MUL_MEAT_2_wide(_FP_WFRACBITS_D,R,X,Y,umul_ppmm)\n #define _FP_MUL_MEAT_Q(R,X,Y)\t\t\t\t\\\n   _FP_MUL_MEAT_4_wide(_FP_WFRACBITS_Q,R,X,Y,umul_ppmm)\n \n+#define _FP_DIV_MEAT_S(R,X,Y)   _FP_DIV_MEAT_1_loop(S,R,X,Y)\n+#define _FP_DIV_MEAT_D(R,X,Y)   _FP_DIV_MEAT_2_udiv(D,R,X,Y)\n #define _FP_DIV_MEAT_Q(R,X,Y)   _FP_DIV_MEAT_4_udiv(Q,R,X,Y)\n \n #define _FP_NANFRAC_S\t\t_FP_QNANBIT_S"}]}