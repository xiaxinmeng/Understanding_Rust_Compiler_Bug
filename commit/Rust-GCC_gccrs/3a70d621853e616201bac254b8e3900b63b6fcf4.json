{"sha": "3a70d621853e616201bac254b8e3900b63b6fcf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E3MGQ2MjE4NTNlNjE2MjAxYmFjMjU0YjhlMzkwMGI2M2I2ZmNmNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-08-29T22:25:19Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-08-29T22:25:19Z"}, "message": "function.c (allocate_struct_function): New, split out of ...\n\n        * function.c (allocate_struct_function): New, split out of ...\n        (prepare_function_start, init_function_start): ... here.\n        * expr.c (init_expr): Use ggc_alloc_cleared.\n        * stmt.c (init_stmt_for_function): Likewise.\n        * tree.h (allocate_struct_function): Declare.\n\nFrom-SVN: r70929", "tree": {"sha": "2b7d9919b762379cce787bd3a1941eca17aa5e19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b7d9919b762379cce787bd3a1941eca17aa5e19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a70d621853e616201bac254b8e3900b63b6fcf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a70d621853e616201bac254b8e3900b63b6fcf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a70d621853e616201bac254b8e3900b63b6fcf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a70d621853e616201bac254b8e3900b63b6fcf4/comments", "author": null, "committer": null, "parents": [{"sha": "23b6da1098061c61f47bf0edd2fde594b42e8134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b6da1098061c61f47bf0edd2fde594b42e8134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23b6da1098061c61f47bf0edd2fde594b42e8134"}], "stats": {"total": 209, "additions": 62, "deletions": 147}, "files": [{"sha": "d3443b51638e20e02680f113ea147bf031afc87a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a70d621853e616201bac254b8e3900b63b6fcf4", "patch": "@@ -1,3 +1,11 @@\n+2003-08-29  Richard Henderson  <rth@redhat.com>\n+\n+\t* function.c (allocate_struct_function): New, split out of ...\n+\t(prepare_function_start, init_function_start): ... here.\n+\t* expr.c (init_expr): Use ggc_alloc_cleared.\n+\t* stmt.c (init_stmt_for_function): Likewise.\n+\t* tree.h (allocate_struct_function): Declare.\n+\n 2003-08-29  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n         * config.gcc: Don't use negated character class in shell case"}, {"sha": "94c453dec842fb9fc403888d9755b139a200c677", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3a70d621853e616201bac254b8e3900b63b6fcf4", "patch": "@@ -338,15 +338,7 @@ init_expr_once (void)\n void\n init_expr (void)\n {\n-  cfun->expr = ggc_alloc (sizeof (struct expr_status));\n-\n-  pending_chain = 0;\n-  pending_stack_adjust = 0;\n-  stack_pointer_delta = 0;\n-  inhibit_defer_pop = 0;\n-  saveregs_value = 0;\n-  apply_args_value = 0;\n-  forced_labels = 0;\n+  cfun->expr = ggc_alloc_cleared (sizeof (struct expr_status));\n }\n \n /* Small sanity check that the queue is empty at the end of a function.  */"}, {"sha": "6decfdf232ddb6e9545623ed64b9ec6262e39a38", "filename": "gcc/function.c", "status": "modified", "additions": 51, "deletions": 119, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=3a70d621853e616201bac254b8e3900b63b6fcf4", "patch": "@@ -284,7 +284,7 @@ static hashval_t insns_for_mem_hash (const void *);\n static int insns_for_mem_comp (const void *, const void *);\n static int insns_for_mem_walk (rtx *, void *);\n static void compute_insns_for_mem (rtx, rtx, htab_t);\n-static void prepare_function_start (void);\n+static void prepare_function_start (tree);\n static void do_clobber_return_reg (rtx, void *);\n static void do_use_return_reg (rtx, void *);\n static void instantiate_virtual_regs_lossage (rtx);\n@@ -6246,103 +6246,77 @@ debug_find_var_in_block_tree (tree var, tree block)\n   return NULL_TREE;\n }\n \f\n-/* Allocate a function structure and reset its contents to the defaults.  */\n+/* Allocate a function structure for FNDECL and set its contents\n+   to the defaults.  */\n \n-static void\n-prepare_function_start (void)\n+void\n+allocate_struct_function (tree fndecl)\n {\n-  cfun = ggc_alloc_cleared (sizeof (struct function));\n-\n-  init_stmt_for_function ();\n-  init_eh_for_function ();\n-\n-  cse_not_expected = ! optimize;\n-\n-  /* Caller save not needed yet.  */\n-  caller_save_needed = 0;\n-\n-  /* No stack slots have been made yet.  */\n-  stack_slot_list = 0;\n+  tree result;\n \n-  current_function_has_nonlocal_label = 0;\n-  current_function_has_nonlocal_goto = 0;\n+  cfun = ggc_alloc_cleared (sizeof (struct function));\n \n-  /* There is no stack slot for handling nonlocal gotos.  */\n-  nonlocal_goto_handler_slots = 0;\n-  nonlocal_goto_stack_level = 0;\n+  max_parm_reg = LAST_VIRTUAL_REGISTER + 1;\n \n-  /* No labels have been declared for nonlocal use.  */\n-  nonlocal_labels = 0;\n-  nonlocal_goto_handler_labels = 0;\n+  cfun->stack_alignment_needed = STACK_BOUNDARY;\n+  cfun->preferred_stack_boundary = STACK_BOUNDARY;\n \n-  /* No function calls so far in this function.  */\n-  function_call_count = 0;\n+  current_function_funcdef_no = funcdef_no++;\n \n-  /* No parm regs have been allocated.\n-     (This is important for output_inline_function.)  */\n-  max_parm_reg = LAST_VIRTUAL_REGISTER + 1;\n+  cfun->function_frequency = FUNCTION_FREQUENCY_NORMAL;\n \n-  /* Initialize the RTL mechanism.  */\n+  init_stmt_for_function ();\n+  init_eh_for_function ();\n   init_emit ();\n-\n-  /* Initialize the queue of pending postincrement and postdecrements,\n-     and some other info in expr.c.  */\n   init_expr ();\n-\n-  /* We haven't done register allocation yet.  */\n-  reg_renumber = 0;\n-\n   init_varasm_status (cfun);\n \n-  /* Clear out data used for inlining.  */\n-  cfun->inlinable = 0;\n-  cfun->original_decl_initial = 0;\n-  cfun->original_arg_vector = 0;\n+  (*lang_hooks.function.init) (cfun);\n+  if (init_machine_status)\n+    cfun->machine = (*init_machine_status) ();\n \n-  cfun->stack_alignment_needed = STACK_BOUNDARY;\n-  cfun->preferred_stack_boundary = STACK_BOUNDARY;\n+  if (fndecl == NULL)\n+    return;\n \n-  /* Set if a call to setjmp is seen.  */\n-  current_function_calls_setjmp = 0;\n+  DECL_SAVED_INSNS (fndecl) = cfun;\n+  cfun->decl = fndecl;\n \n-  /* Set if a call to longjmp is seen.  */\n-  current_function_calls_longjmp = 0;\n+  current_function_name = (*lang_hooks.decl_printable_name) (fndecl, 2);\n \n-  current_function_calls_alloca = 0;\n-  current_function_calls_eh_return = 0;\n-  current_function_calls_constant_p = 0;\n-  current_function_contains_functions = 0;\n-  current_function_is_leaf = 0;\n-  current_function_nothrow = 0;\n-  current_function_sp_is_unchanging = 0;\n-  current_function_uses_only_leaf_regs = 0;\n-  current_function_has_computed_jump = 0;\n-  current_function_is_thunk = 0;\n+  result = DECL_RESULT (fndecl);\n+  if (aggregate_value_p (result))\n+    {\n+#ifdef PCC_STATIC_STRUCT_RETURN\n+      current_function_returns_pcc_struct = 1;\n+#endif\n+      current_function_returns_struct = 1;\n+    }\n \n-  current_function_returns_pcc_struct = 0;\n-  current_function_returns_struct = 0;\n-  current_function_epilogue_delay_list = 0;\n-  current_function_uses_const_pool = 0;\n-  current_function_uses_pic_offset_table = 0;\n-  current_function_cannot_inline = 0;\n+  current_function_returns_pointer = POINTER_TYPE_P (TREE_TYPE (result));\n \n-  /* We have not yet needed to make a label to jump to for tail-recursion.  */\n-  tail_recursion_label = 0;\n+  current_function_needs_context\n+    = (decl_function_context (current_function_decl) != 0\n+       && ! DECL_NO_STATIC_CHAIN (current_function_decl));\n+}\n \n-  /* We haven't had a need to make a save area for ap yet.  */\n-  arg_pointer_save_area = 0;\n+/* Reset cfun, and other non-struct-function variables to defaults as\n+   appropriate for emiiting rtl at the start of a function.  */\n \n-  /* No stack slots allocated yet.  */\n-  frame_offset = 0;\n+static void\n+prepare_function_start (tree fndecl)\n+{\n+  if (fndecl && DECL_SAVED_INSNS (fndecl))\n+    cfun = DECL_SAVED_INSNS (fndecl);\n+  else\n+    allocate_struct_function (fndecl);\n \n-  /* No SAVE_EXPRs in this function yet.  */\n-  save_expr_regs = 0;\n+  cse_not_expected = ! optimize;\n \n-  /* No RTL_EXPRs in this function yet.  */\n-  rtl_expr_chain = 0;\n+  /* Caller save not needed yet.  */\n+  caller_save_needed = 0;\n \n-  /* Set up to allocate temporaries.  */\n-  init_temp_slots ();\n+  /* We haven't done register allocation yet.  */\n+  reg_renumber = 0;\n \n   /* Indicate that we need to distinguish between the return value of the\n      present function and the return value of a function being called.  */\n@@ -6356,27 +6330,6 @@ prepare_function_start (void)\n \n   /* Indicate we have no need of a frame pointer yet.  */\n   frame_pointer_needed = 0;\n-\n-  /* By default assume not stdarg.  */\n-  current_function_stdarg = 0;\n-\n-  /* We haven't made any trampolines for this function yet.  */\n-  trampoline_list = 0;\n-\n-  init_pending_stack_adjust ();\n-  inhibit_defer_pop = 0;\n-\n-  current_function_outgoing_args_size = 0;\n-\n-  current_function_funcdef_no = funcdef_no++;\n-\n-  cfun->function_frequency = FUNCTION_FREQUENCY_NORMAL;\n-\n-  cfun->max_jumptable_ents = 0;\n-\n-  (*lang_hooks.function.init) (cfun);\n-  if (init_machine_status)\n-    cfun->machine = (*init_machine_status) ();\n }\n \n /* Initialize the rtl expansion mechanism so that we can do simple things\n@@ -6385,7 +6338,7 @@ prepare_function_start (void)\n void\n init_dummy_function_start (void)\n {\n-  prepare_function_start ();\n+  prepare_function_start (NULL);\n }\n \n /* Generate RTL for the start of the function SUBR (a FUNCTION_DECL tree node)\n@@ -6395,16 +6348,7 @@ init_dummy_function_start (void)\n void\n init_function_start (tree subr)\n {\n-  prepare_function_start ();\n-\n-  current_function_name = (*lang_hooks.decl_printable_name) (subr, 2);\n-  cfun->decl = subr;\n-\n-  /* Nonzero if this is a nested function that uses a static chain.  */\n-\n-  current_function_needs_context\n-    = (decl_function_context (current_function_decl) != 0\n-       && ! DECL_NO_STATIC_CHAIN (current_function_decl));\n+  prepare_function_start (subr);\n \n   /* Within function body, compute a type's size as soon it is laid out.  */\n   immediate_size_expand++;\n@@ -6421,23 +6365,11 @@ init_function_start (tree subr)\n      Also, final expects a note to appear there.  */\n   emit_note (NOTE_INSN_DELETED);\n \n-  /* Set flags used by final.c.  */\n-  if (aggregate_value_p (DECL_RESULT (subr)))\n-    {\n-#ifdef PCC_STATIC_STRUCT_RETURN\n-      current_function_returns_pcc_struct = 1;\n-#endif\n-      current_function_returns_struct = 1;\n-    }\n-\n   /* Warn if this value is an aggregate type,\n      regardless of which calling convention we are using for it.  */\n   if (warn_aggregate_return\n       && AGGREGATE_TYPE_P (TREE_TYPE (DECL_RESULT (subr))))\n     warning (\"function returns an aggregate\");\n-\n-  current_function_returns_pointer\n-    = POINTER_TYPE_P (TREE_TYPE (DECL_RESULT (subr)));\n }\n \n /* Make sure all values used by the optimization passes have sane"}, {"sha": "54c93be7909a0803eb98b3e8806297d78706545e", "filename": "gcc/stmt.c", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=3a70d621853e616201bac254b8e3900b63b6fcf4", "patch": "@@ -433,25 +433,7 @@ using_eh_for_cleanups (void)\n void\n init_stmt_for_function (void)\n {\n-  cfun->stmt =ggc_alloc (sizeof (struct stmt_status));\n-\n-  /* We are not currently within any block, conditional, loop or case.  */\n-  block_stack = 0;\n-  stack_block_stack = 0;\n-  loop_stack = 0;\n-  case_stack = 0;\n-  cond_stack = 0;\n-  nesting_stack = 0;\n-  nesting_depth = 0;\n-\n-  current_block_start_count = 0;\n-\n-  /* No gotos have been expanded yet.  */\n-  goto_fixup_chain = 0;\n-\n-  /* We are not processing a ({...}) grouping.  */\n-  expr_stmts_for_value = 0;\n-  clear_last_expr ();\n+  cfun->stmt = ggc_alloc_cleared (sizeof (struct stmt_status));\n }\n \f\n /* Record the current file and line.  Called from emit_line_note.  */"}, {"sha": "ec60935542be990f00f10600ca5928e12ca6a5e9", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a70d621853e616201bac254b8e3900b63b6fcf4/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=3a70d621853e616201bac254b8e3900b63b6fcf4", "patch": "@@ -2856,6 +2856,7 @@ extern void expand_main_function (void);\n extern void init_dummy_function_start (void);\n extern void expand_dummy_function_end (void);\n extern void init_function_for_compilation (void);\n+extern void allocate_struct_function (tree);\n extern void init_function_start (tree);\n extern void assign_parms (tree);\n extern void put_var_into_stack (tree, int);"}]}