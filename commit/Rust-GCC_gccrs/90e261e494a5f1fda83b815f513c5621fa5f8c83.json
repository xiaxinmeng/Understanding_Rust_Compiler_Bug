{"sha": "90e261e494a5f1fda83b815f513c5621fa5f8c83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBlMjYxZTQ5NGE1ZjFmZGE4M2I4MTVmNTEzYzU2MjFmYTVmOGM4Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-10-25T17:11:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-25T17:11:49Z"}, "message": "tree.h (wi::fits_to_tree_p): Accept only 0 and 1 for boolean types.\n\n\t* tree.h (wi::fits_to_tree_p): Accept only 0 and 1 for boolean types.\n\t* tree.c (int_fits_type_p): Likewise.  Adjust head comment.\n\nFrom-SVN: r241529", "tree": {"sha": "287ecd3c49a6b519376afa6b2ba709f33d37870a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/287ecd3c49a6b519376afa6b2ba709f33d37870a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90e261e494a5f1fda83b815f513c5621fa5f8c83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e261e494a5f1fda83b815f513c5621fa5f8c83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90e261e494a5f1fda83b815f513c5621fa5f8c83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e261e494a5f1fda83b815f513c5621fa5f8c83/comments", "author": null, "committer": null, "parents": [{"sha": "cef026ecafe169871284fded6494efe33e763950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cef026ecafe169871284fded6494efe33e763950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cef026ecafe169871284fded6494efe33e763950"}], "stats": {"total": 123, "additions": 121, "deletions": 2}, "files": [{"sha": "9f1ddc7b56294371b499de539148f798c6d6c1a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90e261e494a5f1fda83b815f513c5621fa5f8c83", "patch": "@@ -1,3 +1,8 @@\n+2016-10-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree.h (wi::fits_to_tree_p): Accept only 0 and 1 for boolean types.\n+\t* tree.c (int_fits_type_p): Likewise.  Adjust head comment.\n+\n 2016-10-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* ggc-tests.c (forcibly_ggc_collect): Rename to..."}, {"sha": "2dc443193238264f32fc0af85fc3378d636c3939", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90e261e494a5f1fda83b815f513c5621fa5f8c83", "patch": "@@ -1,3 +1,10 @@\n+2016-10-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt59.adb: New test.\n+\t* gnat.dg/opt59_pkg.ad[sb]: New helper.\n+\n+\t* gnat.dg/opt60.adb: New test.\n+\n 2016-10-25  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/72770"}, {"sha": "29665f4ac64b7695258052d7231d4f13e932a37d", "filename": "gcc/testsuite/gnat.dg/opt59.adb", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2Fgnat.dg%2Fopt59.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2Fgnat.dg%2Fopt59.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt59.adb?ref=90e261e494a5f1fda83b815f513c5621fa5f8c83", "patch": "@@ -0,0 +1,49 @@\n+-- { dg-do run }\n+-- { dg-options \"-O\" }\n+\n+with Opt59_Pkg; use Opt59_Pkg;\n+\n+procedure Opt59 is\n+\n+  type Enum is (Zero, One, Two);\n+\n+  function Has_True (V : Boolean_Vector) return Boolean is\n+  begin\n+     for I in V'Range loop\n+        if V (I) then\n+           return True;\n+        end if;\n+     end loop;\n+     return False;\n+  end;\n+\n+  Data1  : constant Boolean_Vector := Get_BV1;\n+  Data2  : constant Boolean_Vector := Get_BV2;\n+  Result : Boolean_Vector;\n+\n+  function F return Enum is\n+    Res  : Enum := Zero;\n+    Set1 : constant Boolean := Has_True (Data1);\n+    Set2 : constant Boolean := Has_True (Data2);\n+  begin\n+    if Set1 then\n+      Res := Two;\n+    elsif Set2 then\n+      Res := One;\n+    end if;\n+    return Res;\n+  end;\n+\n+  Val : constant Enum := F;\n+\n+begin\n+\n+  for I in Result'Range loop\n+    Result (I) := Data1 (I) or Data2 (I);\n+  end loop;\n+\n+  if Val /= Zero then\n+    Test (Val = Two);\n+  end if;\n+\n+end;"}, {"sha": "16a183b47e56dc2a19fb5092123cfbf30c02e331", "filename": "gcc/testsuite/gnat.dg/opt59_pkg.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2Fgnat.dg%2Fopt59_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2Fgnat.dg%2Fopt59_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt59_pkg.adb?ref=90e261e494a5f1fda83b815f513c5621fa5f8c83", "patch": "@@ -0,0 +1,20 @@\n+package body Opt59_Pkg is\n+\n+  function Get_BV1 return Boolean_Vector is\n+  begin\n+    return (others => True);\n+  end;\n+\n+  function Get_BV2 return Boolean_Vector is\n+  begin\n+    return (others => False);\n+  end;\n+\n+  procedure Test (B : Boolean) is\n+  begin\n+    if not B then\n+      raise Program_Error;\n+    end if;\n+  end;\n+\n+end Opt59_Pkg;"}, {"sha": "f5628be98630a420e1368185abf8dda7e7b0e7b0", "filename": "gcc/testsuite/gnat.dg/opt59_pkg.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2Fgnat.dg%2Fopt59_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2Fgnat.dg%2Fopt59_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt59_pkg.ads?ref=90e261e494a5f1fda83b815f513c5621fa5f8c83", "patch": "@@ -0,0 +1,11 @@\n+package Opt59_Pkg is\n+\n+  type Boolean_Vector is array (1 .. 8) of Boolean;\n+\n+  function Get_BV1 return Boolean_Vector;\n+\n+  function Get_BV2 return Boolean_Vector;\n+\n+  procedure Test (B : Boolean);\n+\n+end Opt59_Pkg;"}, {"sha": "9154fb46fa651f3b872d5b28a0d726e66a32b71c", "filename": "gcc/testsuite/gnat.dg/opt60.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2Fgnat.dg%2Fopt60.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftestsuite%2Fgnat.dg%2Fopt60.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt60.adb?ref=90e261e494a5f1fda83b815f513c5621fa5f8c83", "patch": "@@ -0,0 +1,17 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws -O2 -fdump-tree-optimized\" }\n+\n+with System; use System;\n+with System.CRTL; use System.CRTL;\n+\n+function Opt60 (Size : size_t) return System.Address is\n+  Result : System.Address;\n+begin\n+  Result := malloc (Size);\n+  if Result = System.Null_Address then\n+    raise Program_Error;\n+  end if;\n+  return Result;\n+end;\n+\n+-- { dg-final { scan-tree-dump \"== 0B\" \"optimized\" } }"}, {"sha": "56cc653c875466e286dd48dd160cf50093600812", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=90e261e494a5f1fda83b815f513c5621fa5f8c83", "patch": "@@ -9065,8 +9065,8 @@ get_narrower (tree op, int *unsignedp_ptr)\n   return win;\n }\n \f\n-/* Returns true if integer constant C has a value that is permissible\n-   for type TYPE (an INTEGER_TYPE).  */\n+/* Return true if integer constant C has a value that is permissible\n+   for TYPE, an integral type.  */\n \n bool\n int_fits_type_p (const_tree c, const_tree type)\n@@ -9075,6 +9075,11 @@ int_fits_type_p (const_tree c, const_tree type)\n   bool ok_for_low_bound, ok_for_high_bound;\n   signop sgn_c = TYPE_SIGN (TREE_TYPE (c));\n \n+  /* Short-circuit boolean types since various transformations assume that\n+     they can only take values 0 and 1.  */\n+  if (TREE_CODE (type) == BOOLEAN_TYPE)\n+    return integer_zerop (c) || integer_onep (c);\n+\n retry:\n   type_low_bound = TYPE_MIN_VALUE (type);\n   type_high_bound = TYPE_MAX_VALUE (type);"}, {"sha": "c494f23c90d44fdbd86837c20e2af8c8f3037498", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e261e494a5f1fda83b815f513c5621fa5f8c83/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=90e261e494a5f1fda83b815f513c5621fa5f8c83", "patch": "@@ -5295,6 +5295,11 @@ template <typename T>\n bool\n wi::fits_to_tree_p (const T &x, const_tree type)\n {\n+  /* Short-circuit boolean types since various transformations assume that\n+     they can only take values 0 and 1.  */\n+  if (TREE_CODE (type) == BOOLEAN_TYPE)\n+    return eq_p (x, 0) || eq_p (x, 1);\n+\n   if (TYPE_SIGN (type) == UNSIGNED)\n     return eq_p (x, zext (x, TYPE_PRECISION (type)));\n   else"}]}