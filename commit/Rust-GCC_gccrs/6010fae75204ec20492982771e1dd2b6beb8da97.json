{"sha": "6010fae75204ec20492982771e1dd2b6beb8da97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAxMGZhZTc1MjA0ZWMyMDQ5Mjk4Mjc3MWUxZGQyYjZiZWI4ZGE5Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-07-03T04:32:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-07-03T04:32:25Z"}, "message": "tree.c (ctor_to_list): Use FOR_EACH_CONSTRUCTOR_ELT.\n\n        * gcc/tree.c (ctor_to_list): Use FOR_EACH_CONSTRUCTOR_ELT.                                       \n        * gcc/cp/Make-lang.in (cp/typeck2.o): Add  dependency.                                  \n        * libstdc++-v3/libsupc++/initializer_list: Uglify and wrap in                                    \n        __GXX_EXPERIMENTAL_CXX0X__.                                                                      \n        * libstdc++-v3/include/bits/stl_map.h (insert(initializer_list)): Wrap.\n\nFrom-SVN: r137406", "tree": {"sha": "d062c274abad0eba2f5d8903db46d47e94935cf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d062c274abad0eba2f5d8903db46d47e94935cf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6010fae75204ec20492982771e1dd2b6beb8da97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6010fae75204ec20492982771e1dd2b6beb8da97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6010fae75204ec20492982771e1dd2b6beb8da97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6010fae75204ec20492982771e1dd2b6beb8da97/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5aad9799181787991d1cf05a89c0647007b693be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aad9799181787991d1cf05a89c0647007b693be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aad9799181787991d1cf05a89c0647007b693be"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "433157ab87040fa7e180277e70f4066a6983047b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6010fae75204ec20492982771e1dd2b6beb8da97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6010fae75204ec20492982771e1dd2b6beb8da97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6010fae75204ec20492982771e1dd2b6beb8da97", "patch": "@@ -129,6 +129,8 @@\n \n 2008-07-02  Jason Merrill  <jason@redhat.com>\n \n+\t* tree.c (ctor_to_list): Use FOR_EACH_CONSTRUCTOR_ELT.\n+\n \t* tree.c (ctor_to_list): New fn.\n \t* tree.h: Declare it.\n \t(CONSTRUCTOR_ELT): New macro."}, {"sha": "6475b43fc1b7d24c731e73b7e165200a40e81af1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6010fae75204ec20492982771e1dd2b6beb8da97/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6010fae75204ec20492982771e1dd2b6beb8da97/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6010fae75204ec20492982771e1dd2b6beb8da97", "patch": "@@ -1,5 +1,7 @@\n 2008-07-02  Jason Merrill  <jason@redhat.com>\n \n+\t* Make-lang.in (cp/typeck2.o): Add $(REAL_H) dependency.\n+\n \tImplement WG21 N2672, Initializer List proposed wording\n \t* cp-tree.h (enum cp_tree_index): Add CPTI_INIT_LIST_TYPE.\n \t(struct lang_type_class): Add has_list_ctor bitfield."}, {"sha": "c7877205f2567f4f347cc9d12e05336bd972b1df", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6010fae75204ec20492982771e1dd2b6beb8da97/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6010fae75204ec20492982771e1dd2b6beb8da97/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=6010fae75204ec20492982771e1dd2b6beb8da97", "patch": "@@ -245,7 +245,7 @@ cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) \\\n   langhooks.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) debug.h \\\n   $(CXX_PRETTY_PRINT_H) cp/cp-objcp-common.h gt-cp-cp-objcp-common.h\n cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h output.h \\\n-  $(TM_P_H) $(DIAGNOSTIC_H) gt-cp-typeck2.h\n+  $(TM_P_H) $(DIAGNOSTIC_H) gt-cp-typeck2.h $(REAL_H)\n cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(RTL_H) $(EXPR_H) \\\n   toplev.h $(DIAGNOSTIC_H) convert.h $(C_COMMON_H) $(TARGET_H)\n cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h $(RTL_H) \\"}, {"sha": "491a7b319eeeaaf9edf44fc1556650a3cb8866dc", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6010fae75204ec20492982771e1dd2b6beb8da97/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6010fae75204ec20492982771e1dd2b6beb8da97/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6010fae75204ec20492982771e1dd2b6beb8da97", "patch": "@@ -1835,13 +1835,11 @@ ctor_to_list (tree ctor)\n   tree list = NULL_TREE;\n   tree *p = &list;\n   unsigned ix;\n-  constructor_elt *ce;\n+  tree purpose, val;\n \n-  for (ix = 0;\n-       VEC_iterate (constructor_elt, CONSTRUCTOR_ELTS (ctor), ix, ce);\n-       ++ix)\n+  FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (ctor), ix, purpose, val)\n     {\n-      *p = build_tree_list (ce->index, ce->value);\n+      *p = build_tree_list (purpose, val);\n       p = &TREE_CHAIN (*p);\n     }\n "}, {"sha": "6f0b4152c47a16d82be99e1e09e857c4591e481c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6010fae75204ec20492982771e1dd2b6beb8da97/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6010fae75204ec20492982771e1dd2b6beb8da97/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6010fae75204ec20492982771e1dd2b6beb8da97", "patch": "@@ -1,3 +1,9 @@\n+2008-07-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* libsupc++/initializer_list: Uglify and wrap in \n+\t__GXX_EXPERIMENTAL_CXX0X__.\n+\t* include/bits/stl_map.h (insert(initializer_list)): Wrap.\n+\n 2008-07-02  Jason Merrill  <jason@redhat.com>\n \n \t* libsupc++/initializer_list: New file."}, {"sha": "cd85b9ab75d6d796a3cffd0be7cd4f9a457d3dab", "filename": "libstdc++-v3/include/bits/stl_map.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6010fae75204ec20492982771e1dd2b6beb8da97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6010fae75204ec20492982771e1dd2b6beb8da97/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h?ref=6010fae75204ec20492982771e1dd2b6beb8da97", "patch": "@@ -469,6 +469,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       insert(const value_type& __x)\n       { return _M_t._M_insert_unique(__x); }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief Attempts to insert a list of std::pairs into the %map.\n        *  @param  list  A std::initializer_list<value_type> of pairs to be\n@@ -478,8 +479,9 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *\n        */\n       void\n-      insert(std::initializer_list<value_type> list)\n-      { insert (list.begin(), list.end()); }\n+      insert(std::initializer_list<value_type> __list)\n+      { insert (__list.begin(), __list.end()); }\n+#endif\n \n       /**\n        *  @brief Attempts to insert a std::pair into the %map."}, {"sha": "3c81bb69c8b3a22a906bc933ccd8e47aa25f6e2b", "filename": "libstdc++-v3/libsupc++/initializer_list", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6010fae75204ec20492982771e1dd2b6beb8da97/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6010fae75204ec20492982771e1dd2b6beb8da97/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list?ref=6010fae75204ec20492982771e1dd2b6beb8da97", "patch": "@@ -31,34 +31,37 @@\n #ifndef __CXX_INITIALIZER_LIST\n #define __CXX_INITIALIZER_LIST\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+\n #pragma GCC visibility push(default)\n \n #include <cstddef>\n \n namespace std\n {\n-  template<class E>\n+  template<class _E>\n   class initializer_list\n   {\n-    const E* _array;\n-    size_t _len;\n+    const _E* __array;\n+    size_t __len;\n \n     // The compiler can call a private constructor.\n-    initializer_list(const E* _a, size_t _l)\n-      : _array(_a), _len(_l) { }\n+    initializer_list(const _E* __a, size_t __l)\n+      : __array(__a), __len(__l) { }\n \n   public:\n     initializer_list()\n-      : _array(NULL), _len(0) {}\n+      : __array(NULL), __len(0) {}\n     \n     size_t size() const\t\t// number of elements\n-    { return _len; }\n-    const E* begin() const\t// first element\n-    { return _array; }\n-    const E* end() const\t// one past the last element\n+    { return __len; }\n+    const _E* begin() const\t// first element\n+    { return __array; }\n+    const _E* end() const\t// one past the last element\n     { return begin() + size(); }\n   };\n }\n \n #pragma GCC visibility pop\n+#endif // C++0x\n #endif // __CXX_INITIALIZER_LIST"}]}