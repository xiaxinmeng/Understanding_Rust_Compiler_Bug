{"sha": "3b6c7a7df89ca8deb7509311e8b9c3c4d883a3eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I2YzdhN2RmODljYThkZWI3NTA5MzExZThiOWMzYzRkODgzYTNlYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-25T06:26:22Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-25T06:26:22Z"}, "message": "(dbxout_symbol): For anonymous enum, output type anyway.\n\nFrom-SVN: r2246", "tree": {"sha": "8a3abe3d0d15844d4d3e28457ea07930618107ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a3abe3d0d15844d4d3e28457ea07930618107ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b6c7a7df89ca8deb7509311e8b9c3c4d883a3eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6c7a7df89ca8deb7509311e8b9c3c4d883a3eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b6c7a7df89ca8deb7509311e8b9c3c4d883a3eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6c7a7df89ca8deb7509311e8b9c3c4d883a3eb/comments", "author": null, "committer": null, "parents": [{"sha": "f979c996cd8307d2273ae258ab9372c3fd98358c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f979c996cd8307d2273ae258ab9372c3fd98358c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f979c996cd8307d2273ae258ab9372c3fd98358c"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "94fb6ca98e6b6f71d06c680d73cc628aadfbc0bb", "filename": "gcc/dbxout.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b6c7a7df89ca8deb7509311e8b9c3c4d883a3eb/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b6c7a7df89ca8deb7509311e8b9c3c4d883a3eb/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=3b6c7a7df89ca8deb7509311e8b9c3c4d883a3eb", "patch": "@@ -1445,6 +1445,7 @@ dbxout_symbol (decl, local)\n \n       {\n \tint tag_needed = 1;\n+\tint did_output = 0;\n \n \tif (DECL_NAME (decl))\n \t  {\n@@ -1504,6 +1505,7 @@ dbxout_symbol (decl, local)\n \n \t    dbxout_type (type, 1, 0);\n \t    dbxout_finish_symbol (decl);\n+\t    did_output = 1;\n \t  }\n \n \tif (tag_needed && TYPE_NAME (type) != 0\n@@ -1527,6 +1529,22 @@ dbxout_symbol (decl, local)\n \t\t     IDENTIFIER_POINTER (name));\n \t    dbxout_type (type, 1, 0);\n \t    dbxout_finish_symbol (NULL_TREE);\n+\t    did_output = 1;\n+\t  }\n+\n+\t/* If an enum type has no name, it cannot be referred to,\n+\t   but we must output it anyway, since the enumeration constants\n+\t   can be referred to.  */\n+\tif (!did_output && TREE_CODE (type) == ENUMERAL_TYPE)\n+\t  {\n+\t    current_sym_code = DBX_TYPE_DECL_STABS_CODE;\n+\t    current_sym_value = 0;\n+\t    current_sym_addr = 0;\n+\t    current_sym_nchars = 2;\n+\n+\t    fprintf (asmfile, \"%s \\\":T\", ASM_STABS_OP);\n+\t    dbxout_type (type, 1, 0);\n+\t    dbxout_finish_symbol (NULL_TREE);\n \t  }\n \n \t/* Prevent duplicate output of a typedef.  */"}]}