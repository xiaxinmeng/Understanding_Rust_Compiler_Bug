{"sha": "67e872336d0945523071ceec6580a584db7061a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdlODcyMzM2ZDA5NDU1MjMwNzFjZWVjNjU4MGE1ODRkYjcwNjFhOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-18T07:29:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-24T11:09:14Z"}, "message": "Merge vec_addsub patterns\n\nThis merges the vec_addsub<mode>3 patterns using a mode attribute\nfor the vec_merge merge operand.\n\n2021-06-18  Richard Biener  <rguenther@suse.de>\n\n\t* config/i386/sse.md (vec_addsubv4df3, vec_addsubv2df3,\n\tvec_addsubv8sf3, vec_addsubv4sf3): Merge into ...\n\t(vec_addsub<mode>3): ... using a new addsub_cst mode attribute.", "tree": {"sha": "bc43922ecff41b4605679b3ba9a60db29355773e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc43922ecff41b4605679b3ba9a60db29355773e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67e872336d0945523071ceec6580a584db7061a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e872336d0945523071ceec6580a584db7061a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67e872336d0945523071ceec6580a584db7061a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e872336d0945523071ceec6580a584db7061a9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a6c31f0f84a7295433ebac09b94fae2d5cc2892", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6c31f0f84a7295433ebac09b94fae2d5cc2892", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a6c31f0f84a7295433ebac09b94fae2d5cc2892"}], "stats": {"total": 81, "additions": 24, "deletions": 57}, "files": [{"sha": "2d29877f108d283dffc416f7ea5d5d2e8f3ee467", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 24, "deletions": 57, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67e872336d0945523071ceec6580a584db7061a9/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67e872336d0945523071ceec6580a584db7061a9/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=67e872336d0945523071ceec6580a584db7061a9", "patch": "@@ -2410,69 +2410,36 @@\n    (set_attr \"prefix\" \"<round_saeonly_scalar_prefix>\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n \n-(define_insn \"vec_addsubv4df3\"\n-  [(set (match_operand:V4DF 0 \"register_operand\" \"=x\")\n-\t(vec_merge:V4DF\n-\t  (minus:V4DF\n-\t    (match_operand:V4DF 1 \"register_operand\" \"x\")\n-\t    (match_operand:V4DF 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (plus:V4DF (match_dup 1) (match_dup 2))\n-\t  (const_int 5)))]\n-  \"TARGET_AVX\"\n-  \"vaddsubpd\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V4DF\")])\n-\n-(define_insn \"vec_addsubv2df3\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x,x\")\n-\t(vec_merge:V2DF\n-\t  (minus:V2DF\n-\t    (match_operand:V2DF 1 \"register_operand\" \"0,x\")\n-\t    (match_operand:V2DF 2 \"vector_operand\" \"xBm,xm\"))\n-\t  (plus:V2DF (match_dup 1) (match_dup 2))\n-\t  (const_int 1)))]\n-  \"TARGET_SSE3\"\n-  \"@\n-   addsubpd\\t{%2, %0|%0, %2}\n-   vaddsubpd\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx\")\n-   (set_attr \"type\" \"sseadd\")\n-   (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix\" \"orig,vex\")\n-   (set_attr \"mode\" \"V2DF\")])\n-\n-(define_insn \"vec_addsubv8sf3\"\n-  [(set (match_operand:V8SF 0 \"register_operand\" \"=x\")\n-\t(vec_merge:V8SF\n-\t  (minus:V8SF\n-\t    (match_operand:V8SF 1 \"register_operand\" \"x\")\n-\t    (match_operand:V8SF 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (plus:V8SF (match_dup 1) (match_dup 2))\n-\t  (const_int 85)))]\n-  \"TARGET_AVX\"\n-  \"vaddsubps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseadd\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"V8SF\")])\n+(define_mode_attr addsub_cst [(V4DF \"5\") (V2DF \"1\")\n+                              (V4SF \"5\") (V8SF \"85\")])\n \n-(define_insn \"vec_addsubv4sf3\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x\")\n-\t(vec_merge:V4SF\n-\t  (minus:V4SF\n-\t    (match_operand:V4SF 1 \"register_operand\" \"0,x\")\n-\t    (match_operand:V4SF 2 \"vector_operand\" \"xBm,xm\"))\n-\t  (plus:V4SF (match_dup 1) (match_dup 2))\n-\t  (const_int 5)))]\n+(define_insn \"vec_addsub<mode>3\"\n+  [(set (match_operand:VF_128_256 0 \"register_operand\" \"=x,x\")\n+        (vec_merge:VF_128_256\n+\t  (minus:VF_128_256\n+\t    (match_operand:VF_128_256 1 \"register_operand\" \"0,x\")\n+\t    (match_operand:VF_128_256 2 \"vector_operand\" \"xBm, xm\"))\n+\t  (plus:VF_128_256 (match_dup 1) (match_dup 2))\n+\t  (const_int <addsub_cst>)))]\n   \"TARGET_SSE3\"\n   \"@\n-   addsubps\\t{%2, %0|%0, %2}\n-   vaddsubps\\t{%2, %1, %0|%0, %1, %2}\"\n+   addsub<ssemodesuffix>\\t{%2, %0|%0, %2}\n+   vaddsub<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseadd\")\n+   (set (attr \"atom_unit\")\n+     (if_then_else\n+       (match_test \"<MODE>mode == V2DFmode\")\n+       (const_string \"complex\")\n+       (const_string \"*\")))\n    (set_attr \"prefix\" \"orig,vex\")\n-   (set_attr \"prefix_rep\" \"1,*\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set (attr \"prefix_rep\")\n+     (if_then_else\n+       (and (match_test \"<MODE>mode == V4SFmode\")\n+\t    (eq_attr \"alternative\" \"0\"))\n+       (const_string \"1\")\n+       (const_string \"*\")))\n+   (set_attr \"mode\" \"<MODE>\")])\n \n (define_split\n   [(set (match_operand:VF_128_256 0 \"register_operand\")"}]}