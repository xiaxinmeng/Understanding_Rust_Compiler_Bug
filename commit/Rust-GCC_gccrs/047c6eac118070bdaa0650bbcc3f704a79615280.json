{"sha": "047c6eac118070bdaa0650bbcc3f704a79615280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ3YzZlYWMxMTgwNzBiZGFhMDY1MGJiY2MzZjcwNGE3OTYxNTI4MA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-11-07T22:12:39Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-11-07T22:12:39Z"}, "message": "re PR pch/11654 (incorrect stabs when using pre-compiled headers)\n\n\tPR 11654\n\t* dbxout.c (struct dbx_file): Do not save for PCH.\n\t(current_file): Likewise.\n\t(dbxout_init): Don't allocate struct dbx_file using GC.\n\t(dbxout_start_source_file): Likewise.\n\nFrom-SVN: r73346", "tree": {"sha": "7f2ec2b792cf2bc0cb90fe3809ed0ec086fe92ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f2ec2b792cf2bc0cb90fe3809ed0ec086fe92ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/047c6eac118070bdaa0650bbcc3f704a79615280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047c6eac118070bdaa0650bbcc3f704a79615280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/047c6eac118070bdaa0650bbcc3f704a79615280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047c6eac118070bdaa0650bbcc3f704a79615280/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1cd93a2a2b60ad17a7dcaed3124c3fa0a4e65417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd93a2a2b60ad17a7dcaed3124c3fa0a4e65417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd93a2a2b60ad17a7dcaed3124c3fa0a4e65417"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "80f1b5f5dc27f22dd137e195dfa5d1767a82fa80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047c6eac118070bdaa0650bbcc3f704a79615280/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047c6eac118070bdaa0650bbcc3f704a79615280/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=047c6eac118070bdaa0650bbcc3f704a79615280", "patch": "@@ -1,3 +1,11 @@\n+2003-11-07  Geoffrey Keating  <geoffk@apple.com>\n+\n+\tPR 11654\n+\t* dbxout.c (struct dbx_file): Do not save for PCH.\n+\t(current_file): Likewise.\n+\t(dbxout_init): Don't allocate struct dbx_file using GC.\n+\t(dbxout_start_source_file): Likewise.\n+\n 2003-11-07  Falk Hueffner  <falk@debian.org>\n \n \t* config/alpha/elf.h, config/alpha/unicosmk.h,"}, {"sha": "e6b2c880f17ccc27783b2bb7529124fac3dc973f", "filename": "gcc/dbxout.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047c6eac118070bdaa0650bbcc3f704a79615280/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047c6eac118070bdaa0650bbcc3f704a79615280/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=047c6eac118070bdaa0650bbcc3f704a79615280", "patch": "@@ -185,19 +185,25 @@ enum binclstatus {BINCL_NOT_REQUIRED, BINCL_PENDING, BINCL_PROCESSED};\n    pair of the file number and the type number within the file.\n    This is a stack of input files.  */\n \n-struct dbx_file GTY(())\n+struct dbx_file\n {\n   struct dbx_file *next;\n   int file_number;\n   int next_type_number;\n-  enum binclstatus bincl_status;      /* Keep track of lazy bincl.  */\n-  const char *pending_bincl_name;     /* Name of bincl.  */\n-  struct dbx_file *prev;              /* Chain to traverse all pending bincls.  */\n+  enum binclstatus bincl_status;  /* Keep track of lazy bincl.  */\n+  const char *pending_bincl_name; /* Name of bincl.  */\n+  struct dbx_file *prev;          /* Chain to traverse all pending bincls.  */\n };\n \n-/* This is the top of the stack.  */\n+/* This is the top of the stack.  \n+   \n+   This is not saved for PCH, because restoring a PCH should not change it.\n+   next_file_number does have to be saved, because the PCH may use some\n+   file numbers; however, just before restoring a PCH, next_file_number\n+   should always be 0 because we should not have needed any file numbers\n+   yet.  */\n \n-static GTY(()) struct dbx_file *current_file;\n+static struct dbx_file *current_file;\n \n /* This is the next file number to use.  */\n \n@@ -513,7 +519,7 @@ dbxout_init (const char *input_file_name)\n   next_type_number = 1;\n \n #ifdef DBX_USE_BINCL\n-  current_file = ggc_alloc (sizeof *current_file);\n+  current_file = xmalloc (sizeof *current_file);\n   current_file->next = NULL;\n   current_file->file_number = 0;\n   current_file->next_type_number = 1;\n@@ -625,7 +631,7 @@ dbxout_start_source_file (unsigned int line ATTRIBUTE_UNUSED,\n \t\t\t  const char *filename ATTRIBUTE_UNUSED)\n {\n #ifdef DBX_USE_BINCL\n-  struct dbx_file *n = ggc_alloc (sizeof *n);\n+  struct dbx_file *n = xmalloc (sizeof *n);\n \n   n->next = current_file;\n   n->next_type_number = 1;"}]}