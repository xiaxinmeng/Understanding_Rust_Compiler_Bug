{"sha": "fcb82ab00fc48f48f59067ba7a94e9e331a74462", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNiODJhYjAwZmM0OGY0OGY1OTA2N2JhN2E5NGU5ZTMzMWE3NDQ2Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-04-07T16:19:02Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-04-07T16:19:02Z"}, "message": "ia64.c (ia64_builtins): Add IA64_BUILTIN_HUGE_VALQ.\n\n2009-04-07  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* config/ia64/ia64.c (ia64_builtins): Add IA64_BUILTIN_HUGE_VALQ.\n\t(ia64_init_builtins): Handle IA64_BUILTIN_HUGE_VALQ.\n\t(ia64_expand_builtin): Likewise.\n\nFrom-SVN: r145690", "tree": {"sha": "5f0d027ffc6570ec73c8568d25386af7dbd512f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f0d027ffc6570ec73c8568d25386af7dbd512f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcb82ab00fc48f48f59067ba7a94e9e331a74462", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcb82ab00fc48f48f59067ba7a94e9e331a74462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcb82ab00fc48f48f59067ba7a94e9e331a74462", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcb82ab00fc48f48f59067ba7a94e9e331a74462/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f16d05d91391edb8da0ac0091c8576c8724f8cdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f16d05d91391edb8da0ac0091c8576c8724f8cdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f16d05d91391edb8da0ac0091c8576c8724f8cdc"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "e52e732b9af386b8f4fe7606745f7d177965a49a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcb82ab00fc48f48f59067ba7a94e9e331a74462/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcb82ab00fc48f48f59067ba7a94e9e331a74462/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fcb82ab00fc48f48f59067ba7a94e9e331a74462", "patch": "@@ -1,3 +1,9 @@\n+2009-04-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/ia64/ia64.c (ia64_builtins): Add IA64_BUILTIN_HUGE_VALQ.\n+\t(ia64_init_builtins): Handle IA64_BUILTIN_HUGE_VALQ.\n+\t(ia64_expand_builtin): Likewise.\n+\n 2009-04-07  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-ssa-alias.c (refs_may_alias_p_1): Check for\n@@ -19,23 +25,23 @@\n \n 2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * optabs.c (can_compare_p): Test the predicate of a\n-        cbranch and cstore pattern.\n+\t* optabs.c (can_compare_p): Test the predicate of a\n+\tcbranch and cstore pattern.\n \n 2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * expr.c (convert_move): Use emit_store_flag instead of\n-        \"emulating\" it.\n+\t* expr.c (convert_move): Use emit_store_flag instead of\n+\t\"emulating\" it.\n \n 2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * config/i386/i386.c (ix86_compare_emitted): Remove.\n-        (ix86_expand_compare, ix86_expand_branch): Handle MODE_CC\n-        ix86_compare_op0 like ix86_compare_emitted used to be handled.\n-        * config/i386/i386.h (ix86_compare_emitted): Remove.\n-        * config/i386/i386.md (stack_protect_test): Set ix86_compare_op0\n-        instead of ix86_compare_emitted.\n-        * config/i386/sync.md (sync_compare_and_swap_cc): Likewise.\n+\t* config/i386/i386.c (ix86_compare_emitted): Remove.\n+\t(ix86_expand_compare, ix86_expand_branch): Handle MODE_CC\n+\tix86_compare_op0 like ix86_compare_emitted used to be handled.\n+\t* config/i386/i386.h (ix86_compare_emitted): Remove.\n+\t* config/i386/i386.md (stack_protect_test): Set ix86_compare_op0\n+\tinstead of ix86_compare_emitted.\n+\t* config/i386/sync.md (sync_compare_and_swap_cc): Likewise.\n \n 2009-04-07  Andrew Stubbs  <ams@codesourcery.com>\n \n@@ -1450,7 +1456,7 @@\n \n 2009-03-31  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n-        PR target/27237\n+\tPR target/27237\n \t* doc/invoke.texi (ARM Options): Update documentation for -mthumb.\n \t\n 2009-03-31  Richard Guenther  <rguenther@suse.de>\n@@ -1652,8 +1658,8 @@\n \n 2009-03-30  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * combine.c (simplify_comparison): Use have_insn_for.\n-        * dojump.c (do_jump): Likewise.\n+\t* combine.c (simplify_comparison): Use have_insn_for.\n+\t* dojump.c (do_jump): Likewise.\n \n 2009-03-30  Paolo Bonzini  <bonzini@gnu.org>\n \n@@ -1680,10 +1686,10 @@\n \n 2009-03-30  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * cfglayout.c (pass_into_cfg_layout_mode, pass_outof_cfg_layout_mode):\n-        Provide/destroy PROP_cfglayout respectively.\n-        * gcse.c (pass_jump_bypass, pass_gcse): Require it.\n-        * tree-pass.h (PROP_cfglayout): New.\n+\t* cfglayout.c (pass_into_cfg_layout_mode, pass_outof_cfg_layout_mode):\n+\tProvide/destroy PROP_cfglayout respectively.\n+\t* gcse.c (pass_jump_bypass, pass_gcse): Require it.\n+\t* tree-pass.h (PROP_cfglayout): New.\n \n 2009-03-30  Paolo Bonzini  <bonzini@gnu.org>\n "}, {"sha": "66ef5a84e07edd929a97596334acdf738441a5b3", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcb82ab00fc48f48f59067ba7a94e9e331a74462/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcb82ab00fc48f48f59067ba7a94e9e331a74462/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=fcb82ab00fc48f48f59067ba7a94e9e331a74462", "patch": "@@ -9771,7 +9771,8 @@ enum ia64_builtins\n   IA64_BUILTIN_COPYSIGNQ,\n   IA64_BUILTIN_FABSQ,\n   IA64_BUILTIN_FLUSHRS,\n-  IA64_BUILTIN_INFQ\n+  IA64_BUILTIN_INFQ,\n+  IA64_BUILTIN_HUGE_VALQ\n };\n \n void\n@@ -9808,6 +9809,10 @@ ia64_init_builtins (void)\n \t\t\t    IA64_BUILTIN_INFQ, BUILT_IN_MD,\n \t\t\t    NULL, NULL_TREE);\n \n+      add_builtin_function (\"__builtin_huge_valq\", ftype,\n+\t\t\t    IA64_BUILTIN_HUGE_VALQ, BUILT_IN_MD,\n+\t\t\t    NULL, NULL_TREE);\n+\n       ftype = build_function_type_list (float128_type,\n \t\t\t\t\tfloat128_type,\n \t\t\t\t\tNULL_TREE);\n@@ -9882,6 +9887,7 @@ ia64_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       return const0_rtx;\n \n     case IA64_BUILTIN_INFQ:\n+    case IA64_BUILTIN_HUGE_VALQ:\n       {\n \tREAL_VALUE_TYPE inf;\n \trtx tmp;"}]}