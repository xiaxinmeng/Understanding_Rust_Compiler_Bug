{"sha": "671d5bcb262855ea7193f8349f38a15c388fcb6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcxZDViY2IyNjI4NTVlYTcxOTNmODM0OWYzOGExNWMzODhmY2I2Zg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-05-18T14:22:01Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-05-18T14:22:01Z"}, "message": "Define CONSTEXPR macro and use it in vec.h.\n\n2017-05-18  Martin Liska  <mliska@suse.cz>\n\n\t* ansidecl.h: Define CONSTEXPR macro.\n2017-05-18  Martin Liska  <mliska@suse.cz>\n\n\t* vec.h (struct vnull): Use it.\n\nFrom-SVN: r248205", "tree": {"sha": "975c6f4fd6b0c9e00f69dda2bee8e4e93d6ad71b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/975c6f4fd6b0c9e00f69dda2bee8e4e93d6ad71b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/671d5bcb262855ea7193f8349f38a15c388fcb6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/671d5bcb262855ea7193f8349f38a15c388fcb6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/671d5bcb262855ea7193f8349f38a15c388fcb6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/671d5bcb262855ea7193f8349f38a15c388fcb6f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dbcb3c7446c4c9f8f491db6a71bbab318918c874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbcb3c7446c4c9f8f491db6a71bbab318918c874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbcb3c7446c4c9f8f491db6a71bbab318918c874"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "6ae69c3fe9d809ac967999ee1eca4a6deabf74bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671d5bcb262855ea7193f8349f38a15c388fcb6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671d5bcb262855ea7193f8349f38a15c388fcb6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=671d5bcb262855ea7193f8349f38a15c388fcb6f", "patch": "@@ -1,3 +1,7 @@\n+2017-05-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* vec.h (struct vnull): Use it.\n+\n 2017-05-18  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-inline-analysis.c (predicate_conditions): Move to ipa-inline.h"}, {"sha": "755a1f8356bc1b24c0e9c282ab63a6304f7881f3", "filename": "gcc/vec.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671d5bcb262855ea7193f8349f38a15c388fcb6f/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671d5bcb262855ea7193f8349f38a15c388fcb6f/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=671d5bcb262855ea7193f8349f38a15c388fcb6f", "patch": "@@ -416,10 +416,7 @@ struct GTY((user)) vec\n struct vnull\n {\n   template <typename T, typename A, typename L>\n-#if __cpp_constexpr >= 200704\n-  constexpr\n-#endif\n-  operator vec<T, A, L> () { return vec<T, A, L>(); }\n+  CONSTEXPR operator vec<T, A, L> () { return vec<T, A, L>(); }\n };\n extern vnull vNULL;\n "}, {"sha": "9b7a139bc26f85fd85d884be9069a35dea8be531", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671d5bcb262855ea7193f8349f38a15c388fcb6f/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671d5bcb262855ea7193f8349f38a15c388fcb6f/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=671d5bcb262855ea7193f8349f38a15c388fcb6f", "patch": "@@ -1,3 +1,7 @@\n+2017-05-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* ansidecl.h: Define CONSTEXPR macro.\n+\n 2017-04-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* ansidecl.h (ATTRIBUTE_PACKED): Fix typo in comment."}, {"sha": "f6e1761af2d0a2d788ff5f2d8007136f23b21dea", "filename": "include/ansidecl.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/671d5bcb262855ea7193f8349f38a15c388fcb6f/include%2Fansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/671d5bcb262855ea7193f8349f38a15c388fcb6f/include%2Fansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fansidecl.h?ref=671d5bcb262855ea7193f8349f38a15c388fcb6f", "patch": "@@ -313,6 +313,12 @@ So instead we use the macro below and test it against specific values.  */\n #define ENUM_BITFIELD(TYPE) unsigned int\n #endif\n \n+#if __cpp_constexpr >= 200704\n+#define CONSTEXPR constexpr\n+#else\n+#define CONSTEXPR\n+#endif\n+\n /* C++11 adds the ability to add \"override\" after an implementation of a\n    virtual function in a subclass, to:\n      (A) document that this is an override of a virtual function"}]}