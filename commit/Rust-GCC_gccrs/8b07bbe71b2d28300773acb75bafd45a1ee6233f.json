{"sha": "8b07bbe71b2d28300773acb75bafd45a1ee6233f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIwN2JiZTcxYjJkMjgzMDA3NzNhY2I3NWJhZmQ0NWExZWU2MjMzZg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-05-20T01:15:59Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-05-20T01:15:59Z"}, "message": "rs6000.c (rs6000_stack_info): Don't zero offsets when not saving registers.\n\n\t* config/rs6000/rs6000.c (rs6000_stack_info): Don't zero offsets\n\twhen not saving registers.\n\t(debug_stack_info): Adjust to omit printing unused offsets,\n\tas before.\n\t(rs6000_emit_epilogue): Adjust use_backchain_to_restore_sp\n\texpression.\n\nFrom-SVN: r223424", "tree": {"sha": "941e3c3cc1cb1a506b8948729271c53b5d081387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/941e3c3cc1cb1a506b8948729271c53b5d081387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b07bbe71b2d28300773acb75bafd45a1ee6233f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b07bbe71b2d28300773acb75bafd45a1ee6233f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b07bbe71b2d28300773acb75bafd45a1ee6233f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b07bbe71b2d28300773acb75bafd45a1ee6233f/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca5db45b8acffae092a10a716ba887047a211503", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5db45b8acffae092a10a716ba887047a211503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5db45b8acffae092a10a716ba887047a211503"}], "stats": {"total": 52, "additions": 19, "deletions": 33}, "files": [{"sha": "5fa48fa7d33bcff184ea2885c1562c3dee2cd4f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b07bbe71b2d28300773acb75bafd45a1ee6233f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b07bbe71b2d28300773acb75bafd45a1ee6233f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b07bbe71b2d28300773acb75bafd45a1ee6233f", "patch": "@@ -1,3 +1,12 @@\n+2015-05-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_stack_info): Don't zero offsets\n+\twhen not saving registers.\n+\t(debug_stack_info): Adjust to omit printing unused offsets,\n+\tas before.\n+\t(rs6000_emit_epilogue): Adjust use_backchain_to_restore_sp\n+\texpression.\n+\n 2015-05-19  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \tPR c++/65835"}, {"sha": "488799efd639b7a4b9dbec491ca391d01460fe26", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 33, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b07bbe71b2d28300773acb75bafd45a1ee6233f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b07bbe71b2d28300773acb75bafd45a1ee6233f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8b07bbe71b2d28300773acb75bafd45a1ee6233f", "patch": "@@ -22013,31 +22013,6 @@ rs6000_stack_info (void)\n   else\n     info_ptr->push_p = non_fixed_size > (TARGET_32BIT ? 220 : 288);\n \n-  /* Zero offsets if we're not saving those registers.  */\n-  if (info_ptr->fp_size == 0)\n-    info_ptr->fp_save_offset = 0;\n-\n-  if (info_ptr->gp_size == 0)\n-    info_ptr->gp_save_offset = 0;\n-\n-  if (! TARGET_ALTIVEC_ABI || info_ptr->altivec_size == 0)\n-    info_ptr->altivec_save_offset = 0;\n-\n-  /* Zero VRSAVE offset if not saved and restored.  */\n-  if (! TARGET_ALTIVEC_VRSAVE || info_ptr->vrsave_mask == 0)\n-    info_ptr->vrsave_save_offset = 0;\n-\n-  if (! TARGET_SPE_ABI\n-      || info_ptr->spe_64bit_regs_used == 0\n-      || info_ptr->spe_gp_size == 0)\n-    info_ptr->spe_gp_save_offset = 0;\n-\n-  if (! info_ptr->lr_save_p)\n-    info_ptr->lr_save_offset = 0;\n-\n-  if (! info_ptr->cr_save_p)\n-    info_ptr->cr_save_offset = 0;\n-\n   return info_ptr;\n }\n \n@@ -22143,28 +22118,28 @@ debug_stack_info (rs6000_stack_t *info)\n   if (info->calls_p)\n     fprintf (stderr, \"\\tcalls_p             = %5d\\n\", info->calls_p);\n \n-  if (info->gp_save_offset)\n+  if (info->gp_size)\n     fprintf (stderr, \"\\tgp_save_offset      = %5d\\n\", info->gp_save_offset);\n \n-  if (info->fp_save_offset)\n+  if (info->fp_size)\n     fprintf (stderr, \"\\tfp_save_offset      = %5d\\n\", info->fp_save_offset);\n \n-  if (info->altivec_save_offset)\n+  if (info->altivec_size)\n     fprintf (stderr, \"\\taltivec_save_offset = %5d\\n\",\n \t     info->altivec_save_offset);\n \n-  if (info->spe_gp_save_offset)\n+  if (info->spe_gp_size == 0)\n     fprintf (stderr, \"\\tspe_gp_save_offset  = %5d\\n\",\n \t     info->spe_gp_save_offset);\n \n-  if (info->vrsave_save_offset)\n+  if (info->vrsave_size)\n     fprintf (stderr, \"\\tvrsave_save_offset  = %5d\\n\",\n \t     info->vrsave_save_offset);\n \n-  if (info->lr_save_offset)\n+  if (info->lr_save_p)\n     fprintf (stderr, \"\\tlr_save_offset      = %5d\\n\", info->lr_save_offset);\n \n-  if (info->cr_save_offset)\n+  if (info->cr_save_p)\n     fprintf (stderr, \"\\tcr_save_offset      = %5d\\n\", info->cr_save_offset);\n \n   if (info->varargs_save_offset)\n@@ -24735,7 +24710,9 @@ rs6000_emit_epilogue (int sibcall)\n      here will not trigger at the moment;  We don't actually need a\n      frame pointer for alloca, but the generic parts of the compiler\n      give us one anyway.  */\n-  use_backchain_to_restore_sp = (info->total_size > 32767 - info->lr_save_offset\n+  use_backchain_to_restore_sp = (info->total_size + (info->lr_save_p\n+\t\t\t\t\t\t     ? info->lr_save_offset\n+\t\t\t\t\t\t     : 0) > 32767\n \t\t\t\t || (cfun->calls_alloca\n \t\t\t\t     && !frame_pointer_needed));\n   restore_lr = (info->lr_save_p"}]}