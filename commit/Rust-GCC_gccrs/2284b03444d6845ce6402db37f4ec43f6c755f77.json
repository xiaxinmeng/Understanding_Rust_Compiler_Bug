{"sha": "2284b03444d6845ce6402db37f4ec43f6c755f77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI4NGIwMzQ0NGQ2ODQ1Y2U2NDAyZGIzN2Y0ZWM0M2Y2Yzc1NWY3Nw==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2013-10-03T16:13:54Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2013-10-03T16:13:54Z"}, "message": "re PR c++/19476 (Missed null checking elimination with new)\n\n2013-10-03  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR c++/19476\ngcc/c-family/\n\t* c.opt (fcheck-new): Move to common.opt.\n\ngcc/\n\t* common.opt (fcheck-new): Moved from c.opt. Make it 'Common'.\n\t* calls.c (alloca_call_p): Use get_callee_fndecl.\n\t* fold-const.c (tree_expr_nonzero_warnv_p): Handle operator new.\n\t* tree-vrp.c (gimple_stmt_nonzero_warnv_p, stmt_interesting_for_vrp):\n\tLikewise.\n\t(vrp_visit_stmt): Remove duplicated code.\n\ngcc/testsuite/\n\t* g++.dg/tree-ssa/pr19476-1.C: New file.\n\t* g++.dg/tree-ssa/pr19476-2.C: Likewise.\n\t* g++.dg/tree-ssa/pr19476-3.C: Likewise.\n\t* g++.dg/tree-ssa/pr19476-4.C: Likewise.\n\nFrom-SVN: r203163", "tree": {"sha": "626a1783dbadedeb04e9dc7b74807b9ad23cc8c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/626a1783dbadedeb04e9dc7b74807b9ad23cc8c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2284b03444d6845ce6402db37f4ec43f6c755f77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2284b03444d6845ce6402db37f4ec43f6c755f77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2284b03444d6845ce6402db37f4ec43f6c755f77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2284b03444d6845ce6402db37f4ec43f6c755f77/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0609bdf2114919b570e7a3c4ab273fdf16262a4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0609bdf2114919b570e7a3c4ab273fdf16262a4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0609bdf2114919b570e7a3c4ab273fdf16262a4b"}], "stats": {"total": 126, "additions": 105, "deletions": 21}, "files": [{"sha": "e7e28363180f32e1ef50e157a08006d8960c92f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -1,3 +1,13 @@\n+2013-10-03  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c++/19476\n+\t* common.opt (fcheck-new): Moved from c.opt. Make it 'Common'.\n+\t* calls.c (alloca_call_p): Use get_callee_fndecl.\n+\t* fold-const.c (tree_expr_nonzero_warnv_p): Handle operator new.\n+\t* tree-vrp.c (gimple_stmt_nonzero_warnv_p, stmt_interesting_for_vrp):\n+\tLikewise.\n+\t(vrp_visit_stmt): Remove duplicated code.\n+\n 2013-10-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-builtin.def (XSRDPIM): Use floatdf2,"}, {"sha": "d468344c735e68859fcab03834607b6a9fc079c2", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -1,3 +1,8 @@\n+2013-10-03  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c++/19476\n+\t* c.opt (fcheck-new): Move to common.opt.\n+\n 2013-09-25  Marek Polacek  <polacek@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "e8dde935c169471b180d74a726ef70e1f92be1ab", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -855,10 +855,6 @@ fcilkplus\n C ObjC C++ ObjC++ LTO Report Var(flag_enable_cilkplus) Init(0)\n Enable Cilk Plus\n \n-fcheck-new\n-C++ ObjC++ Var(flag_check_new)\n-Check the return value of new\n-\n fcond-mismatch\n C ObjC C++ ObjC++\n Allow the arguments of the '?' operator to have different types"}, {"sha": "e25f2ab74f0b175dcfb2dbef4cd2fe5c2eb498cc", "filename": "gcc/calls.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -635,11 +635,10 @@ gimple_alloca_call_p (const_gimple stmt)\n bool\n alloca_call_p (const_tree exp)\n {\n+  tree fndecl;\n   if (TREE_CODE (exp) == CALL_EXPR\n-      && TREE_CODE (CALL_EXPR_FN (exp)) == ADDR_EXPR\n-      && (TREE_CODE (TREE_OPERAND (CALL_EXPR_FN (exp), 0)) == FUNCTION_DECL)\n-      && (special_function_p (TREE_OPERAND (CALL_EXPR_FN (exp), 0), 0)\n-\t  & ECF_MAY_BE_ALLOCA))\n+      && (fndecl = get_callee_fndecl (exp))\n+      && (special_function_p (fndecl, 0) & ECF_MAY_BE_ALLOCA))\n     return true;\n   return false;\n }"}, {"sha": "1f11fcd4d5d3cbd1e3f66771a6b5f02ea9cc0c26", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -913,6 +913,10 @@ fcheck-data-deps\n Common Report Var(flag_check_data_deps)\n Compare the results of several data dependence analyzers.\n \n+fcheck-new\n+Common Var(flag_check_new)\n+Check the return value of new in C++\n+\n fcombine-stack-adjustments\n Common Report Var(flag_combine_stack_adjustments) Optimization\n Looks for opportunities to reduce stack adjustments and stack references."}, {"sha": "03d62f51721d8220bb72315265b8d6149aa56ade", "filename": "gcc/fold-const.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -16222,7 +16222,15 @@ tree_expr_nonzero_warnv_p (tree t, bool *strict_overflow_p)\n \t\t\t\t\tstrict_overflow_p);\n \n     case CALL_EXPR:\n-      return alloca_call_p (t);\n+      {\n+\ttree fndecl = get_callee_fndecl (t);\n+\tif (!fndecl) return false;\n+\tif (flag_delete_null_pointer_checks && !flag_check_new\n+\t    && DECL_IS_OPERATOR_NEW (fndecl)\n+\t    && !TREE_NOTHROW (fndecl))\n+\t  return true;\n+\treturn alloca_call_p (t);\n+      }\n \n     default:\n       break;"}, {"sha": "6ea99fb73ffaef7e25070c9ecc1375f3fbc7ec47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -1,3 +1,11 @@\n+2013-10-03  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c++/19476\n+\t* g++.dg/tree-ssa/pr19476-1.C: New file.\n+\t* g++.dg/tree-ssa/pr19476-2.C: Likewise.\n+\t* g++.dg/tree-ssa/pr19476-3.C: Likewise.\n+\t* g++.dg/tree-ssa/pr19476-4.C: Likewise.\n+\n 2013-10-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/p8vector-fp.c: New test for floating point"}, {"sha": "f0fb8d6d1f47313f0a168c126e290c6860031770", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr19476-1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-1.C?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-ccp1\" } */\n+\n+#include <new>\n+\n+int f(){\n+  return 33 + (0 == new(std::nothrow) int);\n+}\n+int g(){\n+  return 42 + (0 == new int[50]);\n+}\n+\n+/* { dg-final { scan-tree-dump     \"return 42\" \"ccp1\" } } */\n+/* { dg-final { scan-tree-dump-not \"return 33\" \"ccp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"ccp1\" } } */"}, {"sha": "70002dbb5ea2edb54c6fd1323dad3210f95e31a6", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr19476-2.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-2.C?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+#include <new>\n+\n+int f(){\n+  int *p = new(std::nothrow) int;\n+  return 33 + (0 == p);\n+}\n+int g(){\n+  int *p = new int[50];\n+  return 42 + (0 == p);\n+}\n+\n+/* { dg-final { scan-tree-dump     \"return 42\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \"return 33\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "051866e13c1fda45ca607d9afd255c146aa83984", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr19476-3.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-3.C?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fcheck-new -fdump-tree-optimized\" } */\n+\n+#include <new>\n+\n+int g(){\n+  return 42 + (0 == new int);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"return 42\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "8ae16140d6499396f4b34686540b9ec55a3b3d6b", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr19476-4.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr19476-4.C?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fno-delete-null-pointer-checks -fdump-tree-optimized\" } */\n+\n+#include <new>\n+\n+int g(){\n+  return 42 + (0 == new int);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"return 42\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "cf0f1b1fce56e8701436bdbcbb502c1225dcb086", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2284b03444d6845ce6402db37f4ec43f6c755f77/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=2284b03444d6845ce6402db37f4ec43f6c755f77", "patch": "@@ -1051,7 +1051,15 @@ gimple_stmt_nonzero_warnv_p (gimple stmt, bool *strict_overflow_p)\n     case GIMPLE_ASSIGN:\n       return gimple_assign_nonzero_warnv_p (stmt, strict_overflow_p);\n     case GIMPLE_CALL:\n-      return gimple_alloca_call_p (stmt);\n+      {\n+\ttree fndecl = gimple_call_fndecl (stmt);\n+\tif (!fndecl) return false;\n+\tif (flag_delete_null_pointer_checks && !flag_check_new\n+\t    && DECL_IS_OPERATOR_NEW (fndecl)\n+\t    && !TREE_NOTHROW (fndecl))\n+\t  return true;\n+\treturn gimple_alloca_call_p (stmt);\n+      }\n     default:\n       gcc_unreachable ();\n     }\n@@ -6490,7 +6498,8 @@ stmt_interesting_for_vrp (gimple stmt)\n \t      || POINTER_TYPE_P (TREE_TYPE (lhs)))\n \t  && ((is_gimple_call (stmt)\n \t       && gimple_call_fndecl (stmt) != NULL_TREE\n-\t       && DECL_BUILT_IN (gimple_call_fndecl (stmt)))\n+\t       && (DECL_BUILT_IN (gimple_call_fndecl (stmt))\n+\t\t   || DECL_IS_OPERATOR_NEW (gimple_call_fndecl (stmt))))\n \t      || !gimple_vuse (stmt)))\n \treturn true;\n     }\n@@ -7411,16 +7420,7 @@ vrp_visit_stmt (gimple stmt, edge *taken_edge_p, tree *output_p)\n   if (!stmt_interesting_for_vrp (stmt))\n     gcc_assert (stmt_ends_bb_p (stmt));\n   else if (is_gimple_assign (stmt) || is_gimple_call (stmt))\n-    {\n-      /* In general, assignments with virtual operands are not useful\n-\t for deriving ranges, with the obvious exception of calls to\n-\t builtin functions.  */\n-      if ((is_gimple_call (stmt)\n-\t   && gimple_call_fndecl (stmt) != NULL_TREE\n-\t   && DECL_BUILT_IN (gimple_call_fndecl (stmt)))\n-\t  || !gimple_vuse (stmt))\n-\treturn vrp_visit_assignment_or_call (stmt, output_p);\n-    }\n+    return vrp_visit_assignment_or_call (stmt, output_p);\n   else if (gimple_code (stmt) == GIMPLE_COND)\n     return vrp_visit_cond_stmt (stmt, taken_edge_p);\n   else if (gimple_code (stmt) == GIMPLE_SWITCH)"}]}