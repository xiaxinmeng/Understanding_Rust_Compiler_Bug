{"sha": "cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VkZTI1NzdiOTBiZjg1MWI0NTM1ZmZkYjBlYTBiM2NmYmJmZGRhMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-10-28T09:25:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-10-28T09:25:18Z"}, "message": "tree-vect-stmts.c (vectorizable_shift): Give up if op1 has different vector mode from vectype's mode.\n\n\t* tree-vect-stmts.c (vectorizable_shift): Give up if op1 has different\n\tvector mode from vectype's mode.\n\nFrom-SVN: r180606", "tree": {"sha": "e0ca54aea6d06a191955ed05d214308f5de3e483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0ca54aea6d06a191955ed05d214308f5de3e483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0de82be51731d649414f86d09f9cd3d672df8dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de82be51731d649414f86d09f9cd3d672df8dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0de82be51731d649414f86d09f9cd3d672df8dda"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "282cb6dfa1f3758cef130e3a8e6102ea4bf7f37c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3", "patch": "@@ -1,3 +1,8 @@\n+2011-10-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-vect-stmts.c (vectorizable_shift): Give up if op1 has different\n+\tvector mode from vectype's mode.\n+\n 2011-10-28  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \tPR rtl-optimization/49720"}, {"sha": "dc81acb77e6d05f46f7a698609458e37f55f5847", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=cede2577b90bf851b4535ffdb0ea0b3cfbbfdda3", "patch": "@@ -2318,6 +2318,7 @@ vectorizable_shift (gimple stmt, gimple_stmt_iterator *gsi,\n   int nunits_in;\n   int nunits_out;\n   tree vectype_out;\n+  tree op1_vectype;\n   int ncopies;\n   int j, i;\n   VEC (tree, heap) *vec_oprnds0 = NULL, *vec_oprnds1 = NULL;\n@@ -2387,7 +2388,8 @@ vectorizable_shift (gimple stmt, gimple_stmt_iterator *gsi,\n     return false;\n \n   op1 = gimple_assign_rhs2 (stmt);\n-  if (!vect_is_simple_use (op1, loop_vinfo, bb_vinfo, &def_stmt, &def, &dt[1]))\n+  if (!vect_is_simple_use_1 (op1, loop_vinfo, bb_vinfo, &def_stmt, &def,\n+\t\t\t     &dt[1], &op1_vectype))\n     {\n       if (vect_print_dump_info (REPORT_DETAILS))\n         fprintf (vect_dump, \"use not simple.\");\n@@ -2444,6 +2446,13 @@ vectorizable_shift (gimple stmt, gimple_stmt_iterator *gsi,\n       optab = optab_for_tree_code (code, vectype, optab_vector);\n       if (vect_print_dump_info (REPORT_DETAILS))\n         fprintf (vect_dump, \"vector/vector shift/rotate found.\");\n+      if (TYPE_MODE (op1_vectype) != TYPE_MODE (vectype))\n+\t{\n+\t  if (vect_print_dump_info (REPORT_DETAILS))\n+\t    fprintf (vect_dump, \"unusable type for last operand in\"\n+\t\t\t\t\" vector/vector shift/rotate.\");\n+\t  return false;\n+\t}\n     }\n   /* See if the machine has a vector shifted by scalar insn and if not\n      then see if it has a vector shifted by vector insn.  */"}]}