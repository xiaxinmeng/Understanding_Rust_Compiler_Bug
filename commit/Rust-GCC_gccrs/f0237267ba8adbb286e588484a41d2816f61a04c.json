{"sha": "f0237267ba8adbb286e588484a41d2816f61a04c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAyMzcyNjdiYThhZGJiMjg2ZTU4ODQ4NGE0MWQyODE2ZjYxYTA0Yw==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-10-22T07:30:12Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-10-22T07:30:12Z"}, "message": "Make sparc's \"struct processor_costs\" private to sparc.c\n\n\t* config/sparc/sparc.h (sparc_costs): Remove extern decl.\n\t(struct processor_costs): Move from here..\n\t* config/sparc/sparc.c (struct processor_costs): To here.\n\t(sparc_costs): Mark static.\n\nFrom-SVN: r180324", "tree": {"sha": "8459268aa796d9a2622e446bae5957860ec1a19c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8459268aa796d9a2622e446bae5957860ec1a19c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0237267ba8adbb286e588484a41d2816f61a04c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0237267ba8adbb286e588484a41d2816f61a04c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0237267ba8adbb286e588484a41d2816f61a04c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0237267ba8adbb286e588484a41d2816f61a04c/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dc98917cce188038d303658a27d2de6450ad5c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc98917cce188038d303658a27d2de6450ad5c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dc98917cce188038d303658a27d2de6450ad5c3"}], "stats": {"total": 160, "additions": 81, "deletions": 79}, "files": [{"sha": "a09af51fb4a27b92349b2170b8dc2fe1ed13aef4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0237267ba8adbb286e588484a41d2816f61a04c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0237267ba8adbb286e588484a41d2816f61a04c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0237267ba8adbb286e588484a41d2816f61a04c", "patch": "@@ -5,6 +5,11 @@\n \t* config/sparc/sparc.c (TARGET_SECONDARY_RELOAD): Redefine.\n \t(sparc_secondary_reload): New function.\n \n+\t* config/sparc/sparc.h (sparc_costs): Remove extern decl.\n+\t(struct processor_costs): Move from here..\n+\t* config/sparc/sparc.c (struct processor_costs): To here.\n+\t(sparc_costs): Mark static.\n+\n 2011-10-21  Paul Brook  <paul@codesourcery.com>\n \n \t* config/c6x/c6x.c (c6x_asm_emit_except_personality,"}, {"sha": "717594d965e1f1a750fc2875b491264c2e951a73", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 76, "deletions": 1, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0237267ba8adbb286e588484a41d2816f61a04c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0237267ba8adbb286e588484a41d2816f61a04c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=f0237267ba8adbb286e588484a41d2816f61a04c", "patch": "@@ -59,6 +59,81 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n \n /* Processor costs */\n+\n+struct processor_costs {\n+  /* Integer load */\n+  const int int_load;\n+\n+  /* Integer signed load */\n+  const int int_sload;\n+\n+  /* Integer zeroed load */\n+  const int int_zload;\n+\n+  /* Float load */\n+  const int float_load;\n+\n+  /* fmov, fneg, fabs */\n+  const int float_move;\n+\n+  /* fadd, fsub */\n+  const int float_plusminus;\n+\n+  /* fcmp */\n+  const int float_cmp;\n+\n+  /* fmov, fmovr */\n+  const int float_cmove;\n+\n+  /* fmul */\n+  const int float_mul;\n+\n+  /* fdivs */\n+  const int float_div_sf;\n+\n+  /* fdivd */\n+  const int float_div_df;\n+\n+  /* fsqrts */\n+  const int float_sqrt_sf;\n+\n+  /* fsqrtd */\n+  const int float_sqrt_df;\n+\n+  /* umul/smul */\n+  const int int_mul;\n+\n+  /* mulX */\n+  const int int_mulX;\n+\n+  /* integer multiply cost for each bit set past the most\n+     significant 3, so the formula for multiply cost becomes:\n+\n+\tif (rs1 < 0)\n+\t  highest_bit = highest_clear_bit(rs1);\n+\telse\n+\t  highest_bit = highest_set_bit(rs1);\n+\tif (highest_bit < 3)\n+\t  highest_bit = 3;\n+\tcost = int_mul{,X} + ((highest_bit - 3) / int_mul_bit_factor);\n+\n+     A value of zero indicates that the multiply costs is fixed,\n+     and not variable.  */\n+  const int int_mul_bit_factor;\n+\n+  /* udiv/sdiv */\n+  const int int_div;\n+\n+  /* divX */\n+  const int int_divX;\n+\n+  /* movcc, movr */\n+  const int int_cmove;\n+\n+  /* penalty for shifts, due to scheduling rules etc. */\n+  const int shift_penalty;\n+};\n+\n static const\n struct processor_costs cypress_costs = {\n   COSTS_N_INSNS (2), /* int load */\n@@ -299,7 +374,7 @@ struct processor_costs niagara3_costs = {\n   0, /* shift penalty */\n };\n \n-const struct processor_costs *sparc_costs = &cypress_costs;\n+static const struct processor_costs *sparc_costs = &cypress_costs;\n \n #ifdef HAVE_AS_RELAX_OPTION\n /* If 'as' and 'ld' are relaxing tail call insns into branch always, use"}, {"sha": "d9ce9df1b28c32a0dd881f704d83cff0a0cdb300", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0237267ba8adbb286e588484a41d2816f61a04c/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0237267ba8adbb286e588484a41d2816f61a04c/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=f0237267ba8adbb286e588484a41d2816f61a04c", "patch": "@@ -27,84 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n /* Note that some other tm.h files include this one and then override\n    whatever definitions are necessary.  */\n \n-/* Define the specific costs for a given cpu */\n-\n-struct processor_costs {\n-  /* Integer load */\n-  const int int_load;\n-\n-  /* Integer signed load */\n-  const int int_sload;\n-\n-  /* Integer zeroed load */\n-  const int int_zload;\n-\n-  /* Float load */\n-  const int float_load;\n-\n-  /* fmov, fneg, fabs */\n-  const int float_move;\n-\n-  /* fadd, fsub */\n-  const int float_plusminus;\n-\n-  /* fcmp */\n-  const int float_cmp;\n-\n-  /* fmov, fmovr */\n-  const int float_cmove;\n-\n-  /* fmul */\n-  const int float_mul;\n-\n-  /* fdivs */\n-  const int float_div_sf;\n-\n-  /* fdivd */\n-  const int float_div_df;\n-\n-  /* fsqrts */\n-  const int float_sqrt_sf;\n-\n-  /* fsqrtd */\n-  const int float_sqrt_df;\n-\n-  /* umul/smul */\n-  const int int_mul;\n-\n-  /* mulX */\n-  const int int_mulX;\n-\n-  /* integer multiply cost for each bit set past the most\n-     significant 3, so the formula for multiply cost becomes:\n-\n-\tif (rs1 < 0)\n-\t  highest_bit = highest_clear_bit(rs1);\n-\telse\n-\t  highest_bit = highest_set_bit(rs1);\n-\tif (highest_bit < 3)\n-\t  highest_bit = 3;\n-\tcost = int_mul{,X} + ((highest_bit - 3) / int_mul_bit_factor);\n-\n-     A value of zero indicates that the multiply costs is fixed,\n-     and not variable.  */\n-  const int int_mul_bit_factor;\n-\n-  /* udiv/sdiv */\n-  const int int_div;\n-\n-  /* divX */\n-  const int int_divX;\n-\n-  /* movcc, movr */\n-  const int int_cmove;\n-\n-  /* penalty for shifts, due to scheduling rules etc. */\n-  const int shift_penalty;\n-};\n-\n-extern const struct processor_costs *sparc_costs;\n-\n #define TARGET_CPU_CPP_BUILTINS() sparc_target_macros ()\n \n /* Specify this in a cover file to provide bi-architecture (32/64) support.  */"}]}