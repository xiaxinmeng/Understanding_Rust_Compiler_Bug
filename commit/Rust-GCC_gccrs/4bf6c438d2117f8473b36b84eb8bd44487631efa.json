{"sha": "4bf6c438d2117f8473b36b84eb8bd44487631efa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJmNmM0MzhkMjExN2Y4NDczYjM2Yjg0ZWI4YmQ0NDQ4NzYzMWVmYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-08-17T13:12:22Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-08-17T13:12:22Z"}, "message": "mt-sde: New file.\n\n2007-08-17  Richard Sandiford  <richard@codesourcery.com>\n\t    Nigel Stephens  <nigel@mips.com>\n\n\t* config/mt-sde: New file.\n\t* configure.ac (mips*-sde-elf*): New stanza.  Use config/mt-sde\n\tas target_makefile_frag.\n\t* configure: Regenerate.\n\ngcc/\n2007-08-17  Richard Sandiford  <richard@codesourcery.com>\n\t    Nigel Stephens  <nigel@mips.com>\n\n\t* config/mips/sde.h (DRIVER_SELF_SPECS): Add commas.\n\tTreat -mno-data-in-code and -mcode-xonly as aliases for\n\t-mcode-readable=no and -mcode-readable=pcrel respectively.\n\t* config/mips/t-sde (TARGET_LIBGCC2_CFLAGS): Add -mcode-xonly.\n\t(MULTILIB_OPTIONS): Add -mcode-readable=no multilibs.\n\t(MULTILIB_DIRNAMES): Update accordingly.\n\nCo-Authored-By: Nigel Stephens <nigel@mips.com>\n\nFrom-SVN: r127586", "tree": {"sha": "85348025e1984659c5de01e02a8f9dd3289e02fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85348025e1984659c5de01e02a8f9dd3289e02fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bf6c438d2117f8473b36b84eb8bd44487631efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf6c438d2117f8473b36b84eb8bd44487631efa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bf6c438d2117f8473b36b84eb8bd44487631efa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf6c438d2117f8473b36b84eb8bd44487631efa/comments", "author": null, "committer": null, "parents": [{"sha": "000007c53553607813c99368b67c2691bf11eab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000007c53553607813c99368b67c2691bf11eab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/000007c53553607813c99368b67c2691bf11eab9"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "c66e671221287bcc73d3f7f1f52964bc318f48d8", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf6c438d2117f8473b36b84eb8bd44487631efa/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf6c438d2117f8473b36b84eb8bd44487631efa/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=4bf6c438d2117f8473b36b84eb8bd44487631efa", "patch": "@@ -1,3 +1,11 @@\n+2007-08-17  Richard Sandiford  <richard@codesourcery.com>\n+\t    Nigel Stephens  <nigel@mips.com>\n+\n+\t* config/mt-sde: New file.\n+\t* configure.ac (mips*-sde-elf*): New stanza.  Use config/mt-sde\n+\tas target_makefile_frag.\n+\t* configure: Regenerate.\n+\n 2007-08-16  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* Makefile.def (STAGE2_CFLAGS, STAGE3_CFLAGS, STAGE4_CFLAGS):"}, {"sha": "e74616105cfc6809c631e2b68867315d3fb7dbe6", "filename": "config/mt-sde", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf6c438d2117f8473b36b84eb8bd44487631efa/config%2Fmt-sde", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf6c438d2117f8473b36b84eb8bd44487631efa/config%2Fmt-sde", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmt-sde?ref=4bf6c438d2117f8473b36b84eb8bd44487631efa", "patch": "@@ -0,0 +1,8 @@\n+# We default to building libraries optimised for size.  We switch off\n+# sibling-call optimization to permit interlinking of MIPS16 and\n+# non-MIPS16 functions. The -mcode-xonly option allows MIPS16\n+# libraries to run on Harvard-style split I/D memories, so long as\n+# they have the D-to-I redirect for pc-relative loads.\n+\n+CFLAGS_FOR_TARGET = -Os -fno-optimize-sibling-calls -mcode-xonly\n+CXXFLAGS_FOR_TARGET = -Os -fno-optimize-sibling-calls -mcode-xonly"}, {"sha": "ac3eeb1d92ea4a3b6b7cb4352719f2e1643900fd", "filename": "configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf6c438d2117f8473b36b84eb8bd44487631efa/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf6c438d2117f8473b36b84eb8bd44487631efa/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=4bf6c438d2117f8473b36b84eb8bd44487631efa", "patch": "@@ -5224,6 +5224,9 @@ case \"${target}\" in\n   spu-*-*)\n     target_makefile_frag=\"config/mt-spu\"\n     ;;\n+  mips*-sde-elf*)\n+    target_makefile_frag=\"config/mt-sde\"\n+    ;;\n   *-*-netware*)\n     target_makefile_frag=\"config/mt-netware\"\n     ;;"}, {"sha": "9e0efc32c7c720efa5b543aa1b81634b4b196368", "filename": "configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf6c438d2117f8473b36b84eb8bd44487631efa/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf6c438d2117f8473b36b84eb8bd44487631efa/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=4bf6c438d2117f8473b36b84eb8bd44487631efa", "patch": "@@ -1748,6 +1748,9 @@ case \"${target}\" in\n   spu-*-*)\n     target_makefile_frag=\"config/mt-spu\"\n     ;;\n+  mips*-sde-elf*)\n+    target_makefile_frag=\"config/mt-sde\"\n+    ;;\n   *-*-netware*)\n     target_makefile_frag=\"config/mt-netware\"\n     ;;"}, {"sha": "00894c94cca0ef8f2157a2167c941785117d54b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf6c438d2117f8473b36b84eb8bd44487631efa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf6c438d2117f8473b36b84eb8bd44487631efa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4bf6c438d2117f8473b36b84eb8bd44487631efa", "patch": "@@ -1,3 +1,13 @@\n+2007-08-17  Richard Sandiford  <richard@codesourcery.com>\n+\t    Nigel Stephens  <nigel@mips.com>\n+\n+\t* config/mips/sde.h (DRIVER_SELF_SPECS): Add commas.\n+\tTreat -mno-data-in-code and -mcode-xonly as aliases for\n+\t-mcode-readable=no and -mcode-readable=pcrel respectively.\n+\t* config/mips/t-sde (TARGET_LIBGCC2_CFLAGS): Add -mcode-xonly.\n+\t(MULTILIB_OPTIONS): Add -mcode-readable=no multilibs.\n+\t(MULTILIB_DIRNAMES): Update accordingly.\n+\n 2007-08-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* Makefile.in (version.o): Depend on $(REVISION) only if"}, {"sha": "d8094c5a6a6730a40ac8327b7419570b861049f0", "filename": "gcc/config/mips/sde.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf6c438d2117f8473b36b84eb8bd44487631efa/gcc%2Fconfig%2Fmips%2Fsde.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf6c438d2117f8473b36b84eb8bd44487631efa/gcc%2Fconfig%2Fmips%2Fsde.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fsde.h?ref=4bf6c438d2117f8473b36b84eb8bd44487631efa", "patch": "@@ -36,11 +36,18 @@ Boston, MA 02111-1307, USA.  */\n   /* Remove a redundant -mfp64 for -mabi=n32; we want the !mfp64\t\\\n      multilibs.  There's no need to check whether the architecture\t\\\n      is 64-bit; cc1 will complain if it isn't.  */\t\t\t\\\n-  \"%{mabi=n32: %<mfp64}\"\t\t\t\t\t\t\\\n+  \"%{mabi=n32: %<mfp64}\",\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   /* Make sure that an endian option is always present.  This makes\t\\\n      things like LINK_SPEC easier to write.  */\t\t\t\t\\\n-  \"%{!EB:%{!EL:%(endian_spec)}}\"\n+  \"%{!EB:%{!EL:%(endian_spec)}}\",\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  /* -mcode-xonly is a traditional alias for -mcode-readable=pcrel and\t\\\n+     -mno-data-in-code is a traditional alias for -mcode-readable=no.\t\\\n+     The latter trumps the former.  */\t\t\t\t\t\\\n+  \"%{mno-data-in-code: -mcode-readable=no}\",\t\t\t\t\\\n+  \"%{!mcode-readable=no: %{mcode-xonly: -mcode-readable=pcrel}}\",\t\\\n+  \"%<mno-data-in-code %<mcode-xonly\"\n \n /* Use trap rather than break for all but MIPS I ISA.  Force -no-mips16,\n    so that MIPS16 assembler code requires an explicit \".set mips16\"."}, {"sha": "e019cbbb718a23d8619b8f78452eee9d4806e7ad", "filename": "gcc/config/mips/t-sde", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bf6c438d2117f8473b36b84eb8bd44487631efa/gcc%2Fconfig%2Fmips%2Ft-sde", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bf6c438d2117f8473b36b84eb8bd44487631efa/gcc%2Fconfig%2Fmips%2Ft-sde", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-sde?ref=4bf6c438d2117f8473b36b84eb8bd44487631efa", "patch": "@@ -14,10 +14,12 @@ $(T)crtn.o: $(srcdir)/config/mips/crtn.asm $(GCC_PASSES)\n # without the $gp register. Use -fno-optimize-sibling-calls in case\n # we have a mixed mips16/non-mips16 environment where a plain \"jump\"\n # instuction won't work across the divide (no jx instruction).\n-TARGET_LIBGCC2_CFLAGS = -G 0 -fno-optimize-sibling-calls\n+# Compile libraries with -mcode-xonly, so that they are link-compatible\n+# with both -mcode-readable=pcrel and -mcode-readable=yes.\n+TARGET_LIBGCC2_CFLAGS = -G 0 -fno-optimize-sibling-calls -mcode-xonly\n \n-MULTILIB_OPTIONS = EL/EB mips32/mips32r2/mips64 mips16 msoft-float/mfp64\n-MULTILIB_DIRNAMES = el eb mips32 mips32r2 mips64 mips16 sof f64\n+MULTILIB_OPTIONS = EL/EB mips32/mips32r2/mips64 mips16 msoft-float/mfp64 mcode-readable=no\n+MULTILIB_DIRNAMES = el eb mips32 mips32r2 mips64 mips16 sof f64 spram\n MULTILIB_MATCHES = EL=mel EB=meb\n \n # The -mfp64 option is only valid in conjunction with -mips32r2."}]}