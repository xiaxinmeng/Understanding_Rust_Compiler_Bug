{"sha": "e8ad90e50887516b9ae3533ed6d0946506af1bad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThhZDkwZTUwODg3NTE2YjlhZTM1MzNlZDZkMDk0NjUwNmFmMWJhZA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2000-07-24T16:39:45Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2000-07-24T16:39:45Z"}, "message": "Add D30V options\n\nFrom-SVN: r35228", "tree": {"sha": "314b5399fb070b98cb87ec543f6dd4b1c9def5b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/314b5399fb070b98cb87ec543f6dd4b1c9def5b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8ad90e50887516b9ae3533ed6d0946506af1bad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ad90e50887516b9ae3533ed6d0946506af1bad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ad90e50887516b9ae3533ed6d0946506af1bad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ad90e50887516b9ae3533ed6d0946506af1bad/comments", "author": null, "committer": null, "parents": [{"sha": "99b513595488d4bea7ec11ddb9c21834e7aefe36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b513595488d4bea7ec11ddb9c21834e7aefe36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b513595488d4bea7ec11ddb9c21834e7aefe36"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "7feb98f2f531c05ae18505749a08d5d84f4df3b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ad90e50887516b9ae3533ed6d0946506af1bad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ad90e50887516b9ae3533ed6d0946506af1bad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8ad90e50887516b9ae3533ed6d0946506af1bad", "patch": "@@ -1,3 +1,7 @@\n+2000-07-24  Michael Meissner  <meissner@redhat.com>\n+\n+\t* invoke.texi (D30V Options): Add d30v options.\n+\n Mon Jul 24 02:04:52 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* gcse.c (alloc_pre_mem): Do not alloc TRANSPOUT, it is not"}, {"sha": "cb3b6a3eb404e56e13977e6a015dd76741f0d758", "filename": "gcc/invoke.texi", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ad90e50887516b9ae3533ed6d0946506af1bad/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ad90e50887516b9ae3533ed6d0946506af1bad/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=e8ad90e50887516b9ae3533ed6d0946506af1bad", "patch": "@@ -3902,6 +3902,7 @@ that macro, which enables you to change the defaults.\n * NS32K Options::\n * AVR Options::\n * MCore Options::\n+* D30V Options::\n @end menu\n \n @node M680x0 Options\n@@ -7102,9 +7103,44 @@ Generate code for a little endian target.\n @itemx -m210\n @itemx -m340\n Generate code for the 210 processor.\n-\n @end table\n \n+@node D30V Options\n+@subsection D30V Options\n+@cindex D30V Options\n+\n+These @samp{-m} options are defined for D30V implementations:\n+\n+@table @code\n+@item -mextmem\n+Link the @samp{.text}, @samp{.data}, @samp{.bss}, @samp{.strings},\n+@samp{.rodata}, @samp{.rodata1}, @samp{.data1} sections into external\n+memory, which starts at location @code{0x80000000}.\n+\n+@item -mextmemory\n+Same as the @samp{-mextmem} switch.\n+\n+@item -monchip\n+Link the @samp{.text} section into onchip text memory, which starts at\n+location @code{0x0}.  Also link @samp{.data}, @samp{.bss},\n+@samp{.strings}, @samp{.rodata}, @samp{.rodata1}, @samp{.data1} sections\n+into onchip data memory, which starts at location @code{0x20000000}.\n+\n+@item -mno-asm-optimize\n+@itemx -masm-optimize\n+Disable (enable) passing @samp{-O} to the assembler when optimizing.\n+The assembler uses the @samp{-O} option to automatically parallelize\n+adjacent short instructions where possible.\n+\n+@item -mbranch-cost=@var{n}\n+Increase the internal costs of branches to @var{n}.  Higher costs means\n+that the compiler will issue more instructions to avoid doing a branch.\n+The default is 2.\n+\n+@item -mcond-exec=@var{n}\n+Specify the maximum number of conditionally executed instructions that\n+replace a branch.  The default is 4.\n+@end table\n \n @node Code Gen Options\n @section Options for Code Generation Conventions"}]}