{"sha": "387c47a3801e961f6fa0d7688f2db225a490fe86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg3YzQ3YTM4MDFlOTYxZjZmYTBkNzY4OGYyZGIyMjVhNDkwZmU4Ng==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.informatik.uni-dortmund.de", "date": "1998-02-13T02:26:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-13T02:26:35Z"}, "message": "call.c (build_over_call): Convert builtin abs, labs and fabs to tree-codes.\n\n\t* call.c (build_over_call): Convert builtin abs, labs and fabs to\n\ttree-codes.\n\t* decl.c (init_decl_processing): Reenable abs, labs and fabs as\n\tbuiltins.\n\nFrom-SVN: r17900", "tree": {"sha": "dc560cd0e00fd5fb5c9a70b0623cefd7c8fb813a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc560cd0e00fd5fb5c9a70b0623cefd7c8fb813a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/387c47a3801e961f6fa0d7688f2db225a490fe86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387c47a3801e961f6fa0d7688f2db225a490fe86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/387c47a3801e961f6fa0d7688f2db225a490fe86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387c47a3801e961f6fa0d7688f2db225a490fe86/comments", "author": null, "committer": null, "parents": [{"sha": "e3258cef3011a2f6c8a465b7fb8027dfb24867aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3258cef3011a2f6c8a465b7fb8027dfb24867aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3258cef3011a2f6c8a465b7fb8027dfb24867aa"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "2f1f6f0a077a1db737960d2f5b83000fb4ca9cc6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387c47a3801e961f6fa0d7688f2db225a490fe86/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387c47a3801e961f6fa0d7688f2db225a490fe86/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=387c47a3801e961f6fa0d7688f2db225a490fe86", "patch": "@@ -1,3 +1,10 @@\n+Fri Feb 13 02:26:10 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* call.c (build_over_call): Convert builtin abs, labs and fabs to\n+\ttree-codes.\n+\t* decl.c (init_decl_processing): Reenable abs, labs and fabs as\n+\tbuiltins.\n+\n Fri Feb 13 01:36:42 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* call.c (standard_conversion): A BASE_CONV replaces an RVALUE_CONV."}, {"sha": "424bfd5fbcbf7dff9f19f444421be1d8d32c11ef", "filename": "gcc/cp/call.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387c47a3801e961f6fa0d7688f2db225a490fe86/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387c47a3801e961f6fa0d7688f2db225a490fe86/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=387c47a3801e961f6fa0d7688f2db225a490fe86", "patch": "@@ -5656,6 +5656,23 @@ build_over_call (fn, convs, args, flags)\n   else\n     fn = build_addr_func (fn);\n \n+  /* Recognize certain built-in functions so we can make tree-codes\n+     other than CALL_EXPR.  We do this when it enables fold-const.c\n+     to do something useful.  */\n+\n+  if (TREE_CODE (fn) == ADDR_EXPR\n+      && TREE_CODE (TREE_OPERAND (fn, 0)) == FUNCTION_DECL\n+      && DECL_BUILT_IN (TREE_OPERAND (fn, 0)))\n+    switch (DECL_FUNCTION_CODE (TREE_OPERAND (fn, 0)))\n+      {\n+      case BUILT_IN_ABS:\n+      case BUILT_IN_LABS:\n+      case BUILT_IN_FABS:\n+\tif (converted_args == 0)\n+\t  return integer_zero_node;\n+\treturn build_unary_op (ABS_EXPR, TREE_VALUE (converted_args), 0);\n+      }\n+\n   fn = build_call (fn, TREE_TYPE (TREE_TYPE (TREE_TYPE (fn))), converted_args);\n   if (TREE_TYPE (fn) == void_type_node)\n     return fn;"}, {"sha": "c9eaeb8e519447c98739eee3c971494b76accbb2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/387c47a3801e961f6fa0d7688f2db225a490fe86/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/387c47a3801e961f6fa0d7688f2db225a490fe86/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=387c47a3801e961f6fa0d7688f2db225a490fe86", "patch": "@@ -5333,11 +5333,9 @@ init_decl_processing ()\n \n   if (!flag_no_builtin)\n     {\n-#if 0 /* These do not work well with libg++.  */\n       builtin_function (\"abs\", int_ftype_int, BUILT_IN_ABS, NULL_PTR);\n       builtin_function (\"fabs\", double_ftype_double, BUILT_IN_FABS, NULL_PTR);\n       builtin_function (\"labs\", long_ftype_long, BUILT_IN_LABS, NULL_PTR);\n-#endif\n       builtin_function (\"fabsf\", float_ftype_float, BUILT_IN_FABS, NULL_PTR);\n       builtin_function (\"fabsl\", ldouble_ftype_ldouble, BUILT_IN_FABS,\n \t\t\tNULL_PTR);"}]}