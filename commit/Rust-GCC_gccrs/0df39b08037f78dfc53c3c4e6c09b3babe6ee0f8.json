{"sha": "0df39b08037f78dfc53c3c4e6c09b3babe6ee0f8", "node_id": "C_kwDOANBUbNoAKDBkZjM5YjA4MDM3Zjc4ZGZjNTNjM2M0ZTZjMDliM2JhYmU2ZWUwZjg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-01T11:02:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-11T14:53:22Z"}, "message": "libstdc++: Move Filesystem TS path definitions out of class body\n\nThis fixes some errors with clang caused by instantiating vector<_Cmpt>\nbefore the _Cmpt type is complete.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/bits/fs_path.h (path): Define special\n\tmembers after path::_Cmpt is complete.", "tree": {"sha": "58ef8d954bf9f3f8618aac126e84d43b294f4b54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58ef8d954bf9f3f8618aac126e84d43b294f4b54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0df39b08037f78dfc53c3c4e6c09b3babe6ee0f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df39b08037f78dfc53c3c4e6c09b3babe6ee0f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df39b08037f78dfc53c3c4e6c09b3babe6ee0f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df39b08037f78dfc53c3c4e6c09b3babe6ee0f8/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d25f9b6f1e3c72149868fd66d5a3aac429ecb83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d25f9b6f1e3c72149868fd66d5a3aac429ecb83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d25f9b6f1e3c72149868fd66d5a3aac429ecb83"}], "stats": {"total": 59, "additions": 38, "deletions": 21}, "files": [{"sha": "b0825ba76e803d7eb7503610b6011ddef04f9726", "filename": "libstdc++-v3/include/experimental/bits/fs_path.h", "status": "modified", "additions": 38, "deletions": 21, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df39b08037f78dfc53c3c4e6c09b3babe6ee0f8/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df39b08037f78dfc53c3c4e6c09b3babe6ee0f8/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h?ref=0df39b08037f78dfc53c3c4e6c09b3babe6ee0f8", "patch": "@@ -212,21 +212,11 @@ namespace __detail\n \n     // constructors and destructor\n \n-    path() noexcept { }\n+    path() noexcept;\n+    path(const path& __p);\n+    path(path&& __p) noexcept;\n \n-    path(const path& __p) = default;\n-\n-    path(path&& __p) noexcept\n-    : _M_pathname(std::move(__p._M_pathname)), _M_type(__p._M_type)\n-    {\n-      if (_M_type == _Type::_Multi)\n-\t_M_split_cmpts();\n-      __p.clear();\n-    }\n-\n-    path(string_type&& __source)\n-    : _M_pathname(std::move(__source))\n-    { _M_split_cmpts(); }\n+    path(string_type&& __source);\n \n     template<typename _Source,\n \t     typename _Require = __detail::_Path<_Source>>\n@@ -256,11 +246,11 @@ namespace __detail\n       : _M_pathname(_S_convert_loc(__first, __last, __loc))\n       { _M_split_cmpts(); }\n \n-    ~path() = default;\n+    ~path();\n \n     // assignments\n \n-    path& operator=(const path& __p) = default;\n+    path& operator=(const path& __p);\n     path& operator=(path&& __p) noexcept;\n     path& operator=(string_type&& __source);\n     path& assign(string_type&& __source);\n@@ -449,11 +439,7 @@ namespace __detail\n \t_Multi, _Root_name, _Root_dir, _Filename\n     };\n \n-    path(string_type __str, _Type __type) : _M_pathname(__str), _M_type(__type)\n-    {\n-      __glibcxx_assert(!empty());\n-      __glibcxx_assert(_M_type != _Type::_Multi);\n-    }\n+    path(string_type __str, _Type __type);\n \n     enum class _Split { _Stem, _Extension };\n \n@@ -908,6 +894,37 @@ namespace __detail\n     bool\t\t\t_M_at_end;  // only used when type != _Multi\n   };\n \n+  inline\n+  path::path() noexcept = default;\n+\n+  inline\n+  path::path(const path&) = default;\n+\n+  inline\n+  path::path(path&& __p) noexcept\n+  : _M_pathname(std::move(__p._M_pathname)),\n+    _M_cmpts(__p._M_cmpts),\n+    _M_type(__p._M_type)\n+  { __p.clear(); }\n+\n+  inline\n+  path::path(string_type&& __source)\n+  : _M_pathname(std::move(__source))\n+  { _M_split_cmpts(); }\n+\n+  inline\n+  path::path(string_type __str, _Type __type)\n+  : _M_pathname(__str), _M_type(__type)\n+  {\n+    __glibcxx_assert(!empty());\n+    __glibcxx_assert(_M_type != _Type::_Multi);\n+  }\n+\n+  inline\n+  path::~path() = default;\n+\n+  inline path&\n+  path::operator=(const path& __p) = default;\n \n   inline path&\n   path::operator=(path&& __p) noexcept"}]}