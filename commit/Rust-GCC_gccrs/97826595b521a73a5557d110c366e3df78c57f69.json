{"sha": "97826595b521a73a5557d110c366e3df78c57f69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc4MjY1OTViNTIxYTczYTU1NTdkMTEwYzM2NmUzZGY3OGM1N2Y2OQ==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2014-06-05T12:22:07Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2014-06-05T12:22:07Z"}, "message": "[AArch64] Restructure callee save slot allocation logic.\n\n\nCo-Authored-By: Jiong Wang <jiong.wang@arm.com>\n\nFrom-SVN: r211271", "tree": {"sha": "03ae604fd83f1b5e9b676fc2a86c14aa7f63204e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03ae604fd83f1b5e9b676fc2a86c14aa7f63204e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97826595b521a73a5557d110c366e3df78c57f69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97826595b521a73a5557d110c366e3df78c57f69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97826595b521a73a5557d110c366e3df78c57f69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97826595b521a73a5557d110c366e3df78c57f69/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8799637aad7dbb838f262ce23f34ddd457a7ee99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8799637aad7dbb838f262ce23f34ddd457a7ee99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8799637aad7dbb838f262ce23f34ddd457a7ee99"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "777eb25a9103b6b3587d83a08cbfa52d5efc466e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97826595b521a73a5557d110c366e3df78c57f69/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97826595b521a73a5557d110c366e3df78c57f69/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97826595b521a73a5557d110c366e3df78c57f69", "patch": "@@ -1,3 +1,10 @@\n+2014-06-05  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* config/aarch64/aarch64.c (SLOT_NOT_REQUIRED, SLOT_REQUIRED): Define.\n+\t(aarch64_layout_frame): Use SLOT_NOT_REQUIRED and SLOT_REQUIRED.\n+\t(aarch64_register_saved_on_entry): Adjust test.\n+\n 2014-06-05  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64.h (machine_function): Move"}, {"sha": "a58d93ff613ebbdb921618312b74fa313f0346af", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97826595b521a73a5557d110c366e3df78c57f69/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97826595b521a73a5557d110c366e3df78c57f69/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=97826595b521a73a5557d110c366e3df78c57f69", "patch": "@@ -1812,28 +1812,32 @@ aarch64_layout_frame (void)\n   if (reload_completed && cfun->machine->frame.laid_out)\n     return;\n \n+#define SLOT_NOT_REQUIRED (-2)\n+#define SLOT_REQUIRED     (-1)\n+\n   /* First mark all the registers that really need to be saved...  */\n   for (regno = R0_REGNUM; regno <= R30_REGNUM; regno++)\n-    cfun->machine->frame.reg_offset[regno] = -1;\n+    cfun->machine->frame.reg_offset[regno] = SLOT_NOT_REQUIRED;\n \n   for (regno = V0_REGNUM; regno <= V31_REGNUM; regno++)\n-    cfun->machine->frame.reg_offset[regno] = -1;\n+    cfun->machine->frame.reg_offset[regno] = SLOT_NOT_REQUIRED;\n \n   /* ... that includes the eh data registers (if needed)...  */\n   if (crtl->calls_eh_return)\n     for (regno = 0; EH_RETURN_DATA_REGNO (regno) != INVALID_REGNUM; regno++)\n-      cfun->machine->frame.reg_offset[EH_RETURN_DATA_REGNO (regno)] = 0;\n+      cfun->machine->frame.reg_offset[EH_RETURN_DATA_REGNO (regno)]\n+\t= SLOT_REQUIRED;\n \n   /* ... and any callee saved register that dataflow says is live.  */\n   for (regno = R0_REGNUM; regno <= R30_REGNUM; regno++)\n     if (df_regs_ever_live_p (regno)\n \t&& !call_used_regs[regno])\n-      cfun->machine->frame.reg_offset[regno] = 0;\n+      cfun->machine->frame.reg_offset[regno] = SLOT_REQUIRED;\n \n   for (regno = V0_REGNUM; regno <= V31_REGNUM; regno++)\n     if (df_regs_ever_live_p (regno)\n \t&& !call_used_regs[regno])\n-      cfun->machine->frame.reg_offset[regno] = 0;\n+      cfun->machine->frame.reg_offset[regno] = SLOT_REQUIRED;\n \n   if (frame_pointer_needed)\n     {\n@@ -1844,14 +1848,14 @@ aarch64_layout_frame (void)\n \n   /* Now assign stack slots for them.  */\n   for (regno = R0_REGNUM; regno <= R28_REGNUM; regno++)\n-    if (cfun->machine->frame.reg_offset[regno] != -1)\n+    if (cfun->machine->frame.reg_offset[regno] == SLOT_REQUIRED)\n       {\n \tcfun->machine->frame.reg_offset[regno] = offset;\n \toffset += UNITS_PER_WORD;\n       }\n \n   for (regno = V0_REGNUM; regno <= V31_REGNUM; regno++)\n-    if (cfun->machine->frame.reg_offset[regno] != -1)\n+    if (cfun->machine->frame.reg_offset[regno] == SLOT_REQUIRED)\n       {\n \tcfun->machine->frame.reg_offset[regno] = offset;\n \toffset += UNITS_PER_WORD;\n@@ -1863,7 +1867,7 @@ aarch64_layout_frame (void)\n       offset += UNITS_PER_WORD;\n     }\n \n-  if (cfun->machine->frame.reg_offset[R30_REGNUM] != -1)\n+  if (cfun->machine->frame.reg_offset[R30_REGNUM] == SLOT_REQUIRED)\n     {\n       cfun->machine->frame.reg_offset[R30_REGNUM] = offset;\n       offset += UNITS_PER_WORD;\n@@ -1896,7 +1900,7 @@ aarch64_set_frame_expr (rtx frame_pattern)\n static bool\n aarch64_register_saved_on_entry (int regno)\n {\n-  return cfun->machine->frame.reg_offset[regno] != -1;\n+  return cfun->machine->frame.reg_offset[regno] >= 0;\n }\n \n "}]}