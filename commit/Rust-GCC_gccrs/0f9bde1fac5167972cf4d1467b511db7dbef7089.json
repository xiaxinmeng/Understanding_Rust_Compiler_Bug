{"sha": "0f9bde1fac5167972cf4d1467b511db7dbef7089", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY5YmRlMWZhYzUxNjc5NzJjZjRkMTQ2N2I1MTFkYjdkYmVmNzA4OQ==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@codesourcery.com", "date": "2013-08-16T22:23:29Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2013-08-16T22:23:29Z"}, "message": "mips16.S (CE_STARTFN, CE_ENDFN): New macros.\n\n\t* config/mips/mips16.S (CE_STARTFN, CE_ENDFN): New macros.\n\t(RET_FUNCTION): Use them in place of STARTFN and ENDFN.\n\t(CALL_STUB_NO_RET): Likewise.\n\t(CALL_STUB_RET): Likewise.\n\t* config/mips/libgcc-mips16.ver: Remove __mips16_call_stub and\n\t__mips16_ret call/return stub symbols.\n\t* config.host <mips*-*-linux>: For non-R5900 add t-slibgcc-libgcc\n\tto tmake_file.\n\nCo-Authored-By: Catherine Moore <clm@codesourcery.com>\nCo-Authored-By: Richard Sandiford <rdsandiford@googlemail.com>\n\nFrom-SVN: r201805", "tree": {"sha": "01618aa75cbd41f34836a665dd545b23f9ee7077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01618aa75cbd41f34836a665dd545b23f9ee7077"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f9bde1fac5167972cf4d1467b511db7dbef7089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9bde1fac5167972cf4d1467b511db7dbef7089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f9bde1fac5167972cf4d1467b511db7dbef7089", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9bde1fac5167972cf4d1467b511db7dbef7089/comments", "author": null, "committer": null, "parents": [{"sha": "c74f54a0c159e78d39dc2c68f87ac7dda139f4d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c74f54a0c159e78d39dc2c68f87ac7dda139f4d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c74f54a0c159e78d39dc2c68f87ac7dda139f4d6"}], "stats": {"total": 99, "additions": 48, "deletions": 51}, "files": [{"sha": "00fdc8d891efc1658a60f646594c13ff754f6abb", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9bde1fac5167972cf4d1467b511db7dbef7089/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9bde1fac5167972cf4d1467b511db7dbef7089/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0f9bde1fac5167972cf4d1467b511db7dbef7089", "patch": "@@ -1,3 +1,16 @@\n+2013-08-16  Maciej W. Rozycki  <macro@codesourcery.com>\n+            Catherine Moore  <clm@codesourcery.com>\n+            Richard Sandiford <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips16.S (CE_STARTFN, CE_ENDFN): New macros.\n+\t(RET_FUNCTION): Use them in place of STARTFN and ENDFN.\n+\t(CALL_STUB_NO_RET): Likewise.\n+\t(CALL_STUB_RET): Likewise.\n+\t* config/mips/libgcc-mips16.ver: Remove __mips16_call_stub and\n+\t__mips16_ret call/return stub symbols.\n+\t* config.host <mips*-*-linux>: For non-R5900 add t-slibgcc-libgcc\n+\tto tmake_file.\n+\n 2013-08-13  Maciej W. Rozycki  <macro@codesourcery.com>\n \n \t* config.host <mips*-*-linux*>: Remove a stray comment."}, {"sha": "187391e9a2e8de1d4e371a0d98de53c2403cacde", "filename": "libgcc/config.host", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9bde1fac5167972cf4d1467b511db7dbef7089/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9bde1fac5167972cf4d1467b511db7dbef7089/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=0f9bde1fac5167972cf4d1467b511db7dbef7089", "patch": "@@ -741,13 +741,13 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \ttmake_file=\"${tmake_file} t-crtfm\"\n \tcase ${host} in\n-\t\tmips64r5900* | mipsr5900*)\n-\t\t\t# The MIPS16 support code uses floating point\n-\t\t\t# instructions that are not supported on r5900.\n-\t\t\t;;\n-\t\t*)\n-\t\t\ttmake_file=\"${tmake_file} mips/t-mips16\"\n-\t\t\t;;\n+\t  mips64r5900* | mipsr5900*)\n+\t    # The MIPS16 support code uses floating point\n+\t    # instructions that are not supported on r5900.\n+\t    ;;\n+\t  *)\n+\t    tmake_file=\"${tmake_file} mips/t-mips16 t-slibgcc-libgcc\"\n+\t    ;;\n \tesac\n \tmd_unwind_header=mips/linux-unwind.h\n \tif test \"${ac_cv_sizeof_long_double}\" = 16; then"}, {"sha": "ed949c3af591d0783a0356a4ecc8ead024f772ff", "filename": "libgcc/config/mips/libgcc-mips16.ver", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9bde1fac5167972cf4d1467b511db7dbef7089/libgcc%2Fconfig%2Fmips%2Flibgcc-mips16.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9bde1fac5167972cf4d1467b511db7dbef7089/libgcc%2Fconfig%2Fmips%2Flibgcc-mips16.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Flibgcc-mips16.ver?ref=0f9bde1fac5167972cf4d1467b511db7dbef7089", "patch": "@@ -45,42 +45,4 @@ GCC_4.4.0 {\n   __mips16_floatsidf\n   __mips16_floatunsidf\n   __mips16_fix_truncdfsi\n-  __mips16_ret_sf\n-  __mips16_ret_sc\n-  __mips16_ret_df\n-  __mips16_ret_dc\n-  __mips16_call_stub_1\n-  __mips16_call_stub_5\n-  __mips16_call_stub_2\n-  __mips16_call_stub_6\n-  __mips16_call_stub_9\n-  __mips16_call_stub_10\n-  __mips16_call_stub_sf_0\n-  __mips16_call_stub_sf_1\n-  __mips16_call_stub_sf_5\n-  __mips16_call_stub_sf_2\n-  __mips16_call_stub_sf_6\n-  __mips16_call_stub_sf_9\n-  __mips16_call_stub_sf_10\n-  __mips16_call_stub_sc_0\n-  __mips16_call_stub_sc_1\n-  __mips16_call_stub_sc_5\n-  __mips16_call_stub_sc_2\n-  __mips16_call_stub_sc_6\n-  __mips16_call_stub_sc_9\n-  __mips16_call_stub_sc_10\n-  __mips16_call_stub_df_0\n-  __mips16_call_stub_df_1\n-  __mips16_call_stub_df_5\n-  __mips16_call_stub_df_2\n-  __mips16_call_stub_df_6\n-  __mips16_call_stub_df_9\n-  __mips16_call_stub_df_10\n-  __mips16_call_stub_dc_0\n-  __mips16_call_stub_dc_1\n-  __mips16_call_stub_dc_5\n-  __mips16_call_stub_dc_2\n-  __mips16_call_stub_dc_6\n-  __mips16_call_stub_dc_9\n-  __mips16_call_stub_dc_10\n }"}, {"sha": "d910758fe3ac9589da4c34b55627877cc0fbe713", "filename": "libgcc/config/mips/mips16.S", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9bde1fac5167972cf4d1467b511db7dbef7089/libgcc%2Fconfig%2Fmips%2Fmips16.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9bde1fac5167972cf4d1467b511db7dbef7089/libgcc%2Fconfig%2Fmips%2Fmips16.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Fmips16.S?ref=0f9bde1fac5167972cf4d1467b511db7dbef7089", "patch": "@@ -479,13 +479,35 @@ STARTFN (__mips16_fix_truncdfsi)\n #endif\n #endif /* !__mips_single_float */\n \n+/* We don't export stubs from libgcc_s.so and always require static\n+   versions to be pulled from libgcc.a as needed because they use $2\n+   and possibly $3 as arguments, diverging from the standard SysV ABI,\n+   and as such would require severe pessimisation of MIPS16 PLT entries\n+   just for this single special case.\n+\n+   For compatibility with old binaries that used safe standard MIPS PLT\n+   entries and referred to these functions we still export them at\n+   version GCC_4.4.0 for run-time loading only.  */\n+\n+#ifdef SHARED\n+#define CE_STARTFN(NAME)\t\t\t\\\n+STARTFN (NAME##_compat);\t\t\t\\\n+\t.symver NAME##_compat, NAME@GCC_4.4.0\n+#define CE_ENDFN(NAME) ENDFN (NAME##_compat)\n+#else\n+#define CE_STARTFN(NAME)\t\t\t\\\n+STARTFN (NAME);\t\t\t\t\t\\\n+\t.hidden NAME\n+#define CE_ENDFN(NAME) ENDFN (NAME)\n+#endif\n+\n /* Define a function NAME that moves a return value of mode MODE from\n    FPRs to GPRs.  */\n \n #define RET_FUNCTION(NAME, MODE)\t\\\n-STARTFN (NAME);\t\t\t\t\\\n+CE_STARTFN (NAME);\t\t\t\\\n \tMOVE_##MODE##_RET (t, $31);\t\\\n-\tENDFN (NAME)\n+\tCE_ENDFN (NAME)\n \n #ifdef L_m16retsf\n RET_FUNCTION (__mips16_ret_sf, SF)\n@@ -526,13 +548,13 @@ RET_FUNCTION (__mips16_ret_dc, DC)\n    to FPRs and then call function $2.  */\n \n #define CALL_STUB_NO_RET(NAME, CODE)\t\\\n-STARTFN (NAME);\t\t\t\t\\\n+CE_STARTFN (NAME);\t\t\t\\\n \tSTUB_ARGS_##CODE;\t\t\\\n \t.set\tnoreorder;\t\t\\\n \tjr\t$2;\t\t\t\\\n \tmove\t$25,$2;\t\t\t\\\n \t.set\treorder;\t\t\\\n-\tENDFN (NAME)\n+\tCE_ENDFN (NAME)\n \n #ifdef L_m16stub1\n CALL_STUB_NO_RET (__mips16_call_stub_1, 1)\n@@ -575,7 +597,7 @@ CALL_STUB_NO_RET (__mips16_call_stub_10, 10)\n    however, it's faster to always do the copy.  */\n \n #define CALL_STUB_RET(NAME, CODE, MODE)\t\t\t\t\t\\\n-STARTFN (NAME);\t\t\t\t\t\t\t\t\\\n+CE_STARTFN (NAME);\t\t\t\t\t\t\t\\\n \t.cfi_startproc;\t\t\t\t\t\t\t\\\n \t/* Create a fake CFA 4 bytes below the stack pointer.  */\t\\\n \t.cfi_def_cfa 29,-4;\t\t\t\t\t\t\\\n@@ -591,7 +613,7 @@ STARTFN (NAME);\t\t\t\t\t\t\t\t\\\n \t.set\treorder;\t\t\t\t\t\t\\\n \tMOVE_##MODE##_RET (f, $18);\t\t\t\t\t\\\n \t.cfi_endproc;\t\t\t\t\t\t\t\\\n-\tENDFN (NAME)\n+\tCE_ENDFN (NAME)\n \n /* First, instantiate the single-float set.  */\n "}]}