{"sha": "e9682728a3ec38280c58da47ff2fb21c485d8c74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk2ODI3MjhhM2VjMzgyODBjNThkYTQ3ZmYyZmIyMWM0ODVkOGM3NA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2004-03-17T01:57:09Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2004-03-17T01:57:09Z"}, "message": "* gcc.dg/torture/builtin-integral-1.c: New test.\n\nFrom-SVN: r79565", "tree": {"sha": "7c88623960be0a865d4df286497003cb5ea2abec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c88623960be0a865d4df286497003cb5ea2abec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9682728a3ec38280c58da47ff2fb21c485d8c74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9682728a3ec38280c58da47ff2fb21c485d8c74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9682728a3ec38280c58da47ff2fb21c485d8c74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9682728a3ec38280c58da47ff2fb21c485d8c74/comments", "author": null, "committer": null, "parents": [{"sha": "990ab4b403a4bce6f038ea7cb50edd0492f3f63f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/990ab4b403a4bce6f038ea7cb50edd0492f3f63f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/990ab4b403a4bce6f038ea7cb50edd0492f3f63f"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "e5df14eba575dfde58535da97fb69328be65dc08", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9682728a3ec38280c58da47ff2fb21c485d8c74/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9682728a3ec38280c58da47ff2fb21c485d8c74/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9682728a3ec38280c58da47ff2fb21c485d8c74", "patch": "@@ -1,3 +1,7 @@\n+2004-03-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.dg/torture/builtin-integral-1.c: New test.\n+\n 2004-03-16  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/14586"}, {"sha": "c358449cb9ac49f1d9ad90dd731c6a7795a17863", "filename": "gcc/testsuite/gcc.dg/torture/builtin-integral-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9682728a3ec38280c58da47ff2fb21c485d8c74/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-integral-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9682728a3ec38280c58da47ff2fb21c485d8c74/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-integral-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-integral-1.c?ref=e9682728a3ec38280c58da47ff2fb21c485d8c74", "patch": "@@ -0,0 +1,57 @@\n+/* Copyright (C) 2003  Free Software Foundation.\n+\n+   Verify that integral FP expressions are optimized.\n+\n+   Written by Kaveh Ghazi, 2004-03-16.  */\n+\n+/* { dg-do link } */\n+/* { dg-options \"-ffast-math\" } */\n+\n+#define PROTOTYPE1(FN) extern double FN(double); extern float FN##f(float); \\\n+  extern long double FN##l(long double);\n+\n+PROTOTYPE1(fabs)\n+\n+void test(int i1, int i2)\n+{\n+  /* Test that the various FP truncation builtins detect integral\n+     arguments.  */\n+#define CHECK_FN(MATHFN) \\\n+ PROTOTYPE1 (MATHFN) \\\n+ extern void link_failure_##MATHFN(void); \\\n+ extern void link_failure_##MATHFN##f(void); \\\n+ extern void link_failure_##MATHFN##l(void); \\\n+ if (MATHFN(i1) != i1) link_failure_##MATHFN(); \\\n+ if (MATHFN##f(i1) != i1) link_failure_##MATHFN##f(); \\\n+ if (MATHFN##l(i1) != i1) link_failure_##MATHFN##l(); \\\n+\n+  CHECK_FN(ceil);\n+  CHECK_FN(floor);\n+  CHECK_FN(nearbyint);\n+  CHECK_FN(round);\n+  CHECK_FN(trunc);\n+\n+  /* Check that various other integral expressions are detected.  */\n+#define CHECK_EXPR(EXPR,NAME) \\\n+ extern void link_failure_##NAME(void); \\\n+ if (ceill(EXPR) != (EXPR)) link_failure_##NAME(); \\\n+\n+  CHECK_EXPR (5.0, REAL_CST);\n+  CHECK_EXPR (5.0F, REAL_CSTf);\n+  CHECK_EXPR (5.0L, REAL_CSTl);\n+  CHECK_EXPR ((double)i1, FLOAT_EXPR);\n+  CHECK_EXPR ((float)i1, FLOAT_EXPRf);\n+  CHECK_EXPR ((long double)i1, FLOAT_EXPRl);\n+  CHECK_EXPR (fabs(i1), ABS_EXPR);\n+  CHECK_EXPR (fabsf(i1), ABS_EXPRf);\n+  CHECK_EXPR (fabsl(i1), ABS_EXPRl);\n+  CHECK_EXPR (((void)i1,(double)i2), COMPOUND_EXPR);\n+  CHECK_EXPR ((double)i1+i2, PLUS_EXPR);\n+  CHECK_EXPR ((double)i1-i2, MINUS_EXPR);\n+  CHECK_EXPR ((double)i1*i2, MULT_EXPR);\n+}\n+\n+int main (void)\n+{\n+  return 0;\n+}"}]}