{"sha": "b88c0704cf87c13c78f1a0741704b4e41897c195", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg4YzA3MDRjZjg3YzEzYzc4ZjFhMDc0MTcwNGI0ZTQxODk3YzE5NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-02-01T11:48:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-02-01T11:48:46Z"}, "message": "Makefile.in (c-parse.c): Handle .output file.\n\n        * Makefile.in (c-parse.c): Handle .output file.\n        * objc/Make-lang.in (objc-parse.c): Likewise.\n        * cp/Make-lang.in (parse.c): Handle .output file.\n\nFrom-SVN: r49393", "tree": {"sha": "b990213648d9eadbcb48715fd655bfcee42fc921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b990213648d9eadbcb48715fd655bfcee42fc921"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b88c0704cf87c13c78f1a0741704b4e41897c195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88c0704cf87c13c78f1a0741704b4e41897c195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b88c0704cf87c13c78f1a0741704b4e41897c195", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b88c0704cf87c13c78f1a0741704b4e41897c195/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac282977f6122a328b4bed3c9b14f39086ddea34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac282977f6122a328b4bed3c9b14f39086ddea34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac282977f6122a328b4bed3c9b14f39086ddea34"}], "stats": {"total": 45, "additions": 35, "deletions": 10}, "files": [{"sha": "b6097ca5def3b129d16f2d987b80f47b76da4bdc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b88c0704cf87c13c78f1a0741704b4e41897c195", "patch": "@@ -1,3 +1,8 @@\n+2002-01-31  Jason Merrill  <jason@redhat.com>\n+\n+\t* Makefile.in (c-parse.c): Handle .output file.\n+\t* objc/Make-lang.in (objc-parse.c): Likewise.\n+\n 2002-02-01  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/mips/mips.h (ENDIAN_SPEC): Output the endianness flag if\n@@ -74,7 +79,7 @@\n \n \t* expmed.c (emit_store_flag): Call protect_from_queue on op0 and op1.\n \n-2002-01-28  Jason Merrill  <jason@redhat.com>\n+2002-01-30  Jason Merrill  <jason@redhat.com>\n \n \t* dwarf2out.c (dwarf_cfi_name): Add other DWARF 3 codes.\n \t(output_cfi): Likewise. Disable DW_CFA_GNU_negative_offset_extended."}, {"sha": "f0f2b646371c7e348be40055140795219f726718", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b88c0704cf87c13c78f1a0741704b4e41897c195", "patch": "@@ -1128,8 +1128,15 @@ c-parse.o : $(srcdir)/c-parse.c $(CONFIG_H) $(TREE_H) c-lex.h $(GGC_H) intl.h \\\n \t       -c $(srcdir)/c-parse.c $(OUTPUT_OPTION)\n \n $(srcdir)/c-parse.c: $(srcdir)/c-parse.y\n-\t(cd $(srcdir) && $(BISON) $(BISONFLAGS) -o c-p$$$$.c c-parse.y && \\\n-\tmv -f c-p$$$$.c c-parse.c)\n+\tcd $(srcdir) && \\\n+\tif $(BISON) $(BISONFLAGS) -o c-p$$$$.c c-parse.y; then \\\n+\t  test -f c-p$$$$.output && mv -f c-p$$$$.output c-parse.output ; \\\n+\t  mv -f c-p$$$$.c c-parse.c ; \\\n+\telse \\\n+\t  rm -f c-p$$$$.* ; \\\n+\t  false ; \\\n+\tfi\n+\n $(srcdir)/c-parse.y: c-parse.in\n \techo '/*WARNING: This file is automatically generated!*/' >tmp-c-parse.y\n \tsed -e \"/^ifobjc$$/,/^end ifobjc$$/d\" \\"}, {"sha": "91d3dc69bd305e8284ff9cfb95815f3ca8193c75", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b88c0704cf87c13c78f1a0741704b4e41897c195", "patch": "@@ -1,5 +1,7 @@\n 2002-01-31  Jason Merrill  <jason@redhat.com>\n \n+\t* Make-lang.in (parse.c): Handle .output file.\n+\n \tPR c++/3395\n \t* decl.c (xref_tag): Remember early attributes in TYPE_ATTRIBUTES,\n \tnot TREE_TYPE."}, {"sha": "895b41096cf8b9ebb9e382f889f8e470ccba15ba", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=b88c0704cf87c13c78f1a0741704b4e41897c195", "patch": "@@ -120,10 +120,16 @@ $(srcdir)/cp/cfns.h: $(srcdir)/cp/cfns.gperf\n \n $(srcdir)/cp/parse.h: $(srcdir)/cp/parse.c\n $(srcdir)/cp/parse.c: $(srcdir)/cp/parse.y\n-\t@echo \"Expect 36 shift/reduce conflicts and 58 reduce/reduce conflicts.\"\n-\tcd $(srcdir)/cp; $(BISON) $(BISONFLAGS) -d -o p$$$$.c parse.y ; \\\n-\tgrep '^#define[ \t]*YYEMPTY' p$$$$.c >> p$$$$.h ; \\\n-\tmv -f p$$$$.c parse.c ; mv -f p$$$$.h parse.h\n+\t@echo \"Expect 31 shift/reduce conflicts and 58 reduce/reduce conflicts.\"\n+\tcd $(srcdir)/cp && \\\n+\tif $(BISON) $(BISONFLAGS) -d -o p$$$$.c parse.y; then \\\n+\t  grep '^#define[ \t]*YYEMPTY' p$$$$.c >> p$$$$.h ; \\\n+\t  test -f p$$$$.output && mv -f p$$$$.output parse.output ; \\\n+\t  mv -f p$$$$.c parse.c ; mv -f p$$$$.h parse.h ; \\\n+\telse \\\n+\t  rm -f p$$$$.* ; \\\n+\t  false ; \\\n+\tfi\n \n #\f\n # Build hooks:"}, {"sha": "bc5f709c579d1128eeb4f0cecffaf1468c89079f", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b88c0704cf87c13c78f1a0741704b4e41897c195/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=b88c0704cf87c13c78f1a0741704b4e41897c195", "patch": "@@ -1,4 +1,4 @@\n-# Top level makefile fragment for GNU Objective-C\n+# Top level -*- makefile -*- fragment for GNU Objective-C\n #   Copyright (C) 1997, 1998, 2000, 2001 Free Software Foundation, Inc.\n \n #This file is part of GNU CC.\n@@ -73,8 +73,13 @@ objc-parse.o : $(srcdir)/objc/objc-parse.c \\\n po-generated: $(srcdir)/objc/objc-parse.c\n $(srcdir)/objc/objc-parse.c : $(srcdir)/objc/objc-parse.y\n \tcd $(srcdir)/objc; \\\n-\t$(BISON) $(BISONFLAGS) -o op$$$$.c objc-parse.y ; \\\n-\tmv -f op$$$$.c objc-parse.c\n+\tif $(BISON) $(BISONFLAGS) -o op$$$$.c objc-parse.y ; then \\\n+\t  test -f op$$$$.output && mv -f op$$$$.output objc-parse.output ; \\\n+\t  mv -f op$$$$.c objc-parse.c ; \\\n+\telse \\\n+\t  rm -f op$$$$.* ; \\\n+\t  false ; \\\n+\tfi\n \n $(srcdir)/objc/objc-parse.y: $(srcdir)/c-parse.in\n \techo '/*WARNING: This file is automatically generated!*/' >tmp-objc-prs.y"}]}