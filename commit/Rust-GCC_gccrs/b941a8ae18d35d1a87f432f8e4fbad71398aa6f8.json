{"sha": "b941a8ae18d35d1a87f432f8e4fbad71398aa6f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk0MWE4YWUxOGQzNWQxYTg3ZjQzMmY4ZTRmYmFkNzEzOThhYTZmOA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2007-07-01T02:20:06Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2007-07-01T02:20:06Z"}, "message": "tree-ssa-pre.c (is_exception_related): New function\n\n2007-06-30  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-pre.c (is_exception_related): New function\n\t(can_value_number_operation): Use it.\n\nFrom-SVN: r126162", "tree": {"sha": "ad027c9a777ced30e1569288d9ec0af1065a1766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad027c9a777ced30e1569288d9ec0af1065a1766"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b941a8ae18d35d1a87f432f8e4fbad71398aa6f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b941a8ae18d35d1a87f432f8e4fbad71398aa6f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b941a8ae18d35d1a87f432f8e4fbad71398aa6f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b941a8ae18d35d1a87f432f8e4fbad71398aa6f8/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0333e3dca67c423658cfb3a42c7bc8388826670", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0333e3dca67c423658cfb3a42c7bc8388826670", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0333e3dca67c423658cfb3a42c7bc8388826670"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "7e576becf2f3b37dad8be0e3f1aa289a8e352eba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b941a8ae18d35d1a87f432f8e4fbad71398aa6f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b941a8ae18d35d1a87f432f8e4fbad71398aa6f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b941a8ae18d35d1a87f432f8e4fbad71398aa6f8", "patch": "@@ -24,6 +24,11 @@\n \t* pa-protos.h (hppa_can_use_return_insn_p): Delete declaration.\n \t* pa.c (hppa_can_use_return_insn_p): Delete function.  Include \"df.h\".\n \n+2007-06-30  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-pre.c (is_exception_related): New function\n+\t(can_value_number_operation): Use it.\n+\n 2007-06-30  Daniel Berlin  <dberlin@dberlin.org>\n \t\n \tFix PR tree-optimization/32540"}, {"sha": "b971de4498aa34cbb2c99292a67e228e36b32655", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b941a8ae18d35d1a87f432f8e4fbad71398aa6f8/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b941a8ae18d35d1a87f432f8e4fbad71398aa6f8/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=b941a8ae18d35d1a87f432f8e4fbad71398aa6f8", "patch": "@@ -2122,13 +2122,23 @@ can_value_number_call (tree stmt)\n   return false;\n }\n \n+/* Return true if OP is an exception handler related operation, such as\n+   FILTER_EXPRor EXC_PTR_EXPR.  */\n+\n+static bool\n+is_exception_related (tree op)\n+{\n+  return TREE_CODE (op) == FILTER_EXPR || TREE_CODE (op) == EXC_PTR_EXPR;\n+}\n+\n /* Return true if OP is a tree which we can perform value numbering\n    on.  */\n \n static bool\n can_value_number_operation (tree op)\n {\n-  return UNARY_CLASS_P (op)\n+  return (UNARY_CLASS_P (op) \n+\t  && !is_exception_related (TREE_OPERAND (op, 0)))\n     || BINARY_CLASS_P (op)\n     || COMPARISON_CLASS_P (op)\n     || REFERENCE_CLASS_P (op)"}]}