{"sha": "a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRkZTlmOWQ2ZjE3YzE2YzFlY2NjMjg5Y2JmMjAwZTg1Y2ZmYTFmZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-15T23:52:31Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-15T23:52:31Z"}, "message": "Merge from Cygnus etc 1998-05-15.\n\nFrom-SVN: r19796", "tree": {"sha": "4481adc9831726ec7463b7716c36f00c6854603a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4481adc9831726ec7463b7716c36f00c6854603a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe/comments", "author": null, "committer": null, "parents": [{"sha": "3affd5f0f4b9f9e7d3ecac2881604692ae52681e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3affd5f0f4b9f9e7d3ecac2881604692ae52681e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3affd5f0f4b9f9e7d3ecac2881604692ae52681e"}], "stats": {"total": 202, "additions": 151, "deletions": 51}, "files": [{"sha": "75c7f7c6ccc67431b51b5796c430712c37864bac", "filename": "etc/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe/etc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe/etc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/etc%2FChangeLog?ref=a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe", "patch": "@@ -1,3 +1,36 @@\n+Thu May 14 14:43:10 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* targetdoc/arm-interwork.texi: Document dlltool support of\n+\tinterworking. \n+\n+Thu May  7 16:49:38 1998  Jason Molenda  (crash@bugshack.cygnus.com)\n+\n+\t* Install.in: Remove references to TCL_LIBRARY, TK_LIBRARY,\n+\tand GDBTK_FILENAME.\n+\n+Wed Apr  1 17:11:44 1998  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* targetdoc/arm-interwork.texi: Document ARM/thumb interworking. \n+\n+Tue Mar 31 15:28:20 1998  Ian Lance Taylor  <ian@cygnus.com>\n+\n+\t* standards.texi, make-stds.texi: Update to current FSF versions.\n+\t* Makefile.in (standards.info): Depend upon make-std.texi.\n+\n+Tue Mar 24 16:13:26 1998  Stu Grossman  <grossman@bhuna.cygnus.co.uk>\n+\n+\t* configure:  Regenerate with autoconf 2.12.1 to fix shell issues\n+\tfor NT native builds. \n+\n+Mon Mar  9 16:41:04 1998  Doug Evans  <devans@canuck.cygnus.com>\n+\n+\t* make-rel-sym-tree (binprogs): Add objcopy.\n+\n+Tue Feb 24 18:11:58 1998  Doug Evans  <devans@canuck.cygnus.com>\n+\n+\t* make-rel-sym-tree: as.new -> as-new, ld.new -> ld-new\n+\tnm.new -> nm-new.  Make symlinks to crt*.o.\n+\n Fri Nov 21 12:54:58 1997  Manfred Hollstein <manfred@s-direktnet.de>\n \n \t* Makefile.in: Add --no-split argument to avoid creating files\n@@ -8,11 +41,25 @@ Tue Oct  7 16:27:34 1997  Manfred Hollstein  <manfred@s-direktnet.de>\n         * aclocal.m4: Substitute INSTALL.\n         * configure: Re-built.\n \n+Thu Sep 25 13:13:11 1997  Jason Molenda  (crash@pern.cygnus.com)\n+\n+\t* intro.texi: Add closing ifset.\n+\n Mon Sep 15 22:53:01 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* aclocal.m4: New file with replacement for AC_PROG_INSTALL.\n \t* configure.in: Use EGCS_PROG_INSTALL.\n \n+Mon Sep  1 10:31:32 1997  Angela Marie Thomas (angela@cygnus.com)\n+\n+\t* Install.in: Move setting HOST and TARGET to the beginning\n+\tof the file for editing convenience.\n+\n+Mon Sep  1 10:28:37 1997  Angela Marie Thomas (angela@cygnus.com)\n+\n+\t* Install.in.: More friendly options/messages when extracting\n+\tfrom a file instead of a tape device.\n+\n Tue Jun 17 15:50:23 1997  Angela Marie Thomas (angela@cygnus.com)\n \n \t* Install.in: Add /usr/bsd to PATH for Irix (home of compress)"}, {"sha": "c4900829c25f27a7596b601f7df22185b1aa6be8", "filename": "etc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe/etc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe/etc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/etc%2FMakefile.in?ref=a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe", "patch": "@@ -59,7 +59,7 @@ install-info: info\n \n dvi: $(DVIFILES)\n \n-standards.info: $(srcdir)/standards.texi\n+standards.info: $(srcdir)/standards.texi $(srcdir)/make-stds.texi\n \t$(MAKEINFO) --no-split -I$(srcdir) -o standards.info $(srcdir)/standards.texi\n \n standards.dvi: $(srcdir)/standards.texi"}, {"sha": "b8e0bbed4f18cedf2ae33d312cd1defbbe3f9d98", "filename": "etc/make-stds.texi", "status": "modified", "additions": 39, "deletions": 18, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe/etc%2Fmake-stds.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe/etc%2Fmake-stds.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/etc%2Fmake-stds.texi?ref=a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe", "patch": "@@ -209,11 +209,12 @@ don't need to replace them with other programs.\n Each program-name variable should come with an options variable that is\n used to supply options to the program.  Append @samp{FLAGS} to the\n program-name variable name to get the options variable name---for\n-example, @code{BISONFLAGS}.  (The name @code{CFLAGS} is an exception to\n-this rule, but we keep it because it is standard.)  Use @code{CPPFLAGS}\n-in any compilation command that runs the preprocessor, and use\n-@code{LDFLAGS} in any compilation command that does linking as well as\n-in any direct use of @code{ld}.\n+example, @code{BISONFLAGS}.  (The names @code{CFLAGS} for the C\n+compiler, @code{YFLAGS} for yacc, and @code{LFLAGS} for lex, are\n+exceptions to this rule, but we keep them because they are standard.)\n+Use @code{CPPFLAGS} in any compilation command that runs the\n+preprocessor, and use @code{LDFLAGS} in any compilation command that\n+does linking as well as in any direct use of @code{ld}.\n \n If there are C compiler options that @emph{must} be used for proper\n compilation of certain files, do not include them in @code{CFLAGS}.\n@@ -239,6 +240,9 @@ Put @code{CFLAGS} last in the compilation command, after other variables\n containing compiler options, so the user can use @code{CFLAGS} to\n override the others.\n \n+@code{CFLAGS} should be used in every invocation of the C compiler,\n+both those which do compilation and those which do linking.\n+\n Every Makefile should define the variable @code{INSTALL}, which is the\n basic command for installing a file into the system.\n \n@@ -253,6 +257,18 @@ $(INSTALL_PROGRAM) foo $(bindir)/foo\n $(INSTALL_DATA) libfoo.a $(libdir)/libfoo.a\n @end example\n \n+Optionally, you may prepend the value of @code{DESTDIR} to the target\n+filename.  Doing this allows the installer to create a snapshot of the\n+installation to be copied onto the real target filesystem later.  Do not\n+set the value of @code{DESTDIR} in your Makefile, and do not include it\n+in any installed files.  With support for @code{DESTDIR}, the above\n+examples become:\n+\n+@example\n+$(INSTALL_PROGRAM) foo $(DESTDIR)$(bindir)/foo\n+$(INSTALL_DATA) libfoo.a $(DESTDIR)$(libdir)/libfoo.a\n+@end example\n+\n @noindent\n Always use a file name, not a directory name, as the second argument of\n the installation commands.  Use a separate command for each file to be\n@@ -279,6 +295,10 @@ When building the complete GNU system, the prefix will be empty and\n @file{/usr} will be a symbolic link to @file{/}.\n (If you are using Autoconf, write it as @samp{@@prefix@@}.)\n \n+Running @samp{make install} with a different value of @code{prefix}\n+from the one used to build the program should @var{not} recompile\n+the program.\n+\n @item exec_prefix\n A prefix used in constructing the default values of some of the\n variables listed below.  The default value of @code{exec_prefix} should\n@@ -288,6 +308,10 @@ be @code{$(prefix)}.\n Generally, @code{$(exec_prefix)} is used for directories that contain\n machine-specific files (such as executables and subroutine libraries),\n while @code{$(prefix)} is used directly for other directories.\n+\n+Running @samp{make install} with a different value of @code{exec_prefix}\n+from the one used to build the program should @var{not} recompile the\n+program.\n @end table\n \n Executable programs are installed in one of the following directories.\n@@ -355,14 +379,11 @@ files.  This directory should normally be @file{/usr/local/etc}, but\n write it as @file{$(prefix)/etc}.\n (If you are using Autoconf, write it as @samp{@@sysconfdir@@}.)\n \n-@c rewritten to avoid overfull hbox --tower\n-Do not install executables\n-@c here\n-in this directory (they probably\n-belong in @file{$(libexecdir)} or @file{$(sbindir)}).  Also do not\n-install files that are modified in the normal course of their use\n-(programs whose purpose is to change the configuration of the system\n-excluded).  Those probably belong in @file{$(localstatedir)}.\n+Do not install executables here in this directory (they probably belong\n+in @file{$(libexecdir)} or @file{$(sbindir)}).  Also do not install\n+files that are modified in the normal course of their use (programs\n+whose purpose is to change the configuration of the system excluded).\n+Those probably belong in @file{$(localstatedir)}.\n \n @item sharedstatedir\n The directory for installing architecture-independent data files which\n@@ -415,7 +436,7 @@ should normally be @file{/usr/local/include}, but write it as\n @file{$(prefix)/include}.\n (If you are using Autoconf, write it as @samp{@@includedir@@}.)\n \n-Most compilers other than GCC do not look for header files in\n+Most compilers other than GCC do not look for header files in directory\n @file{/usr/local/include}.  So installing the header files this way is\n only useful with GCC.  Sometimes this is not a problem because some\n libraries are only really intended to work with GCC.  But some libraries\n@@ -567,21 +588,21 @@ Here is a sample rule to install an Info file:\n @comment This example has been carefully formatted for the Make manual.\n @comment Please do not reformat it without talking to roland@gnu.ai.mit.edu.\n @smallexample\n-$(infodir)/foo.info: foo.info\n+$(DESTDIR)$(infodir)/foo.info: foo.info\n         $(POST_INSTALL)\n # There may be a newer info file in . than in srcdir.\n         -if test -f foo.info; then d=.; \\\n          else d=$(srcdir); fi; \\\n-        $(INSTALL_DATA) $$d/foo.info $@@; \\\n+        $(INSTALL_DATA) $$d/foo.info $(DESTDIR)$@@; \\\n # Run install-info only if it exists.\n # Use `if' instead of just prepending `-' to the\n # line so we notice real errors from install-info.\n # We use `$(SHELL) -c' because some shells do not\n # fail gracefully when there is an unknown command.\n         if $(SHELL) -c 'install-info --version' \\\n            >/dev/null 2>&1; then \\\n-          install-info --dir-file=$(infodir)/dir \\\n-                       $(infodir)/foo.info; \\\n+          install-info --dir-file=$(DESTDIR)$(infodir)/dir \\\n+                       $(DESTDIR)$(infodir)/foo.info; \\\n         else true; fi\n @end smallexample\n "}, {"sha": "93fddcb0e2125d2e32502c59e1cc8f877524435d", "filename": "etc/standards.texi", "status": "modified", "additions": 64, "deletions": 32, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe/etc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe/etc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/etc%2Fstandards.texi?ref=a4de9f9d6f17c16c1eccc289cbf200e85cffa1fe", "patch": "@@ -2,8 +2,8 @@\n @c %**start of header\n @setfilename standards.info\n @settitle GNU Coding Standards\n-@c UPDATE THIS DATE WHENEVER YOU MAKE CHANGES!\n-@set lastupdate 16 January 1997\n+@c This date is automagically updated when you save this file:\n+@set lastupdate March 13, 1998\n @c %**end of header\n \n @ifinfo\n@@ -28,7 +28,7 @@ END-INFO-DIR-ENTRY\n \n @ifinfo\n GNU Coding Standards\n-Copyright (C) 1992, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n this manual provided the copyright notice and this permission notice\n@@ -59,7 +59,7 @@ by the Free Software Foundation.\n @page\n \n @vskip 0pt plus 1filll\n-Copyright @copyright{} 1992, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n+Copyright @copyright{} 1992, 1993, 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n this manual provided the copyright notice and this permission notice\n@@ -104,8 +104,8 @@ programs written in C, but many of the rules and principles are useful\n even if you write in another programming language.  The rules often\n state reasons for writing in a certain way.\n \n-Corrections or suggestions regarding this document should be sent to\n-@code{gnu@@prep.ai.mit.edu}.  If you make a suggestion, please include a\n+Corrections or suggestions for this document should be sent to\n+@email{gnu@@gnu.org}.  If you make a suggestion, please include a\n suggested new wording for it; our time is limited.  We prefer a context\n diff to the @file{standards.texi} or @file{make-stds.texi} files, but if\n you don't have those files, please mail your suggestion anyway.\n@@ -168,14 +168,18 @@ contributor to a program must sign some sort of legal papers in order\n for us to have clear title to the program.  The main author alone is not\n enough.\n \n-So, before adding in any contributions from other people, tell us\n-so we can arrange to get the papers.  Then wait until we tell you\n+So, before adding in any contributions from other people, please tell\n+us, so we can arrange to get the papers.  Then wait until we tell you\n that we have received the signed papers, before you actually use the\n contribution.\n \n This applies both before you release the program and afterward.  If\n you receive diffs to fix a bug, and they make significant changes, we\n-need legal papers for it.\n+need legal papers for that change.\n+\n+This also applies to comments and documentation files.  For copyright\n+law, comments and code are just text.  Copyright applies to all kinds of\n+text, so we need legal papers for all kinds.\n \n You don't need papers for changes of a few lines here or there, since\n they are not significant for copyright purposes.  Also, you don't need\n@@ -192,6 +196,10 @@ The very worst thing is if you forget to tell us about the other\n contributor.  We could be very embarrassed in court some day as a\n result.\n \n+We have more detailed advice for maintainers of programs; if you have\n+reached the stage of actually maintaining a program for GNU (whether\n+released or not), please ask us for a copy.\n+\n @node Design Advice\n @chapter General Program Design\n \n@@ -236,9 +244,6 @@ completely with something totally different and better.  (For example,\n feature as well.  (There is a free @code{vi} clone, so we offer it.)\n \n Additional useful features not in Berkeley Unix are welcome.\n-Additional programs with no counterpart in Unix may be useful,\n-but our first priority is usually to duplicate what Unix already\n-has.\n \n @node Using Extensions\n @section Using Non-standard Features\n@@ -323,13 +328,16 @@ write in @sc{ansi} C.\n Using a language other than C is like using a non-standard feature: it\n will cause trouble for users.  Even if GCC supports the other language,\n users may find it inconvenient to have to install the compiler for that\n-other language in order to build your program.  So please write in C.\n+other language in order to build your program.  For example, if you\n+write your program in C++, people will have to install the C++ compiler\n+in order to compile your program.  Thus, it is better if you write in C.\n \n-There are three exceptions for this rule:\n+But there are three situations when there is no disadvantage in using\n+some other language:\n \n @itemize @bullet\n @item\n-It is okay to use a special language if the same program contains an\n+It is okay to use another language if your program contains an\n interpreter for that language.\n \n For example, if your program links with GUILE, it is ok to write part of\n@@ -343,10 +351,14 @@ This is okay because the only people who want to build the tool will be\n those who have installed the other language anyway.\n \n @item\n-If an application is not of extremely widespread interest, then perhaps\n+If an application is of interest to a narrow community, then perhaps\n it's not important if the application is inconvenient to install.\n @end itemize\n \n+C has one other advantage over C++ and other compiled languages: more\n+people know C, so more people will find it easy to read and modify the\n+program if it is written in C.\n+\n @node Program Behavior\n @chapter Program Behavior for All Programs\n \n@@ -606,10 +618,10 @@ you can do so by printing an additional line of version info for each\n library you want to mention.  Use the same format for these lines as for\n the first line.\n \n-Please don't mention all the libraries that the program uses ``just for\n-completeness''---that would produce a lot of unhelpful clutter.  Please\n-mention library version numbers only if you find in practice that they\n-are very important to you in debugging.\n+Please do not mention all of the libraries that the program uses ``just\n+for completeness''---that would produce a lot of unhelpful clutter.\n+Please mention library version numbers only if you find in practice that\n+they are very important to you in debugging.\n \n The following line, after the version number line or lines, should be a\n copyright notice.  If more than one copyright notice is called for, put\n@@ -628,10 +640,12 @@ Here's an example of output that follows these rules:\n @smallexample\n GNU Emacs 19.34.5\n Copyright (C) 1996 Free Software Foundation, Inc.\n-GNU Emacs comes with NO WARRANTY, to the extent permitted by law.\n+GNU Emacs comes with NO WARRANTY,\n+to the extent permitted by law.\n You may redistribute copies of GNU Emacs\n under the terms of the GNU General Public License.\n-For more information about these matters, see the files named COPYING.\n+For more information about these matters,\n+see the files named COPYING.\n @end smallexample\n \n You should adapt this to your program, of course, filling in the proper\n@@ -664,7 +678,7 @@ Report bugs to @var{mailing-address}.\n Here is a table of long options used by GNU programs.  It is surely\n incomplete, but we aim to list all the options that a new program might\n want to be compatible with.  If you use names not already in the table,\n-please send @samp{gnu@@prep.ai.mit.edu} a list of them, with their\n+please send @email{gnu@@gnu.org} a list of them, with their\n meanings, so we can update the table.\n \n @c Please leave newlines between items in this table; it's much easier\n@@ -1159,7 +1173,7 @@ Used in @code{su}.\n @item machine\n No listing of which programs already use this;\n someone should check to\n-see if any actually do and tell @code{gnu@@prep.ai.mit.edu}.\n+see if any actually do, and tell @email{gnu@@gnu.org}.\n \n @item macro-name\n @samp{-M} in @code{ptx}.\n@@ -1962,6 +1976,11 @@ its sense}.  @samp{#else} should have a comment describing the condition\n   @dots{}\n #endif /* not foo */\n @end group\n+@group\n+#ifdef foo\n+  @dots{}\n+#endif /* foo */\n+@end group\n @end example\n \n @noindent\n@@ -1975,9 +1994,13 @@ but, by contrast, write the comments this way for a @samp{#ifndef}:\n   @dots{}\n #endif /* foo */\n @end group\n+@group\n+#ifndef foo\n+  @dots{}\n+#endif /* not foo */\n+@end group\n @end example\n \n-\n @node Syntactic Conventions\n @section Clean Use of C Constructs\n \n@@ -2433,7 +2456,7 @@ printf ((nfiles != 1 ? gettext (\"%d files processed\")\n @end example\n \n @noindent\n-This can any method of forming the plural of the word for ``file'', and\n+This can be any method of forming the plural of the word for ``file'', and\n also handles languages that require agreement in the word for\n ``processed''.\n \n@@ -2924,9 +2947,12 @@ to work with @var{package}.\n @c  Giving an optional @var{parameter} of\n @c @samp{no} should omit @var{package}, if it is used by default.\n \n-Possible values of @var{package} include @samp{x}, @samp{x-toolkit},\n-@samp{gnu-as} (or @samp{gas}), @samp{gnu-ld}, @samp{gnu-libc}, and\n-@samp{gdb}.\n+Possible values of @var{package} include \n+@samp{gnu-as} (or @samp{gas}), @samp{gnu-ld}, @samp{gnu-libc},\n+@samp{gdb},\n+@samp{x}, \n+and\n+@samp{x-toolkit}.\n \n Do not use a @samp{--with} option to specify the file name to use to\n find certain files.  That is outside the scope of what @samp{--with}\n@@ -2993,9 +3019,9 @@ ignore most of its arguments.\n @node Releases\n @section Making Releases\n \n-Package the distribution of Foo version 69.96 in a gzipped tar file\n-named @file{foo-69.96.tar.gz}.  It should unpack into a subdirectory\n-named @file{foo-69.96}.\n+Package the distribution of @code{Foo version 69.96} up in a gzipped tar\n+file with the name @file{foo-69.96.tar.gz}.  It should unpack into a\n+subdirectory named @file{foo-69.96}.\n \n Building and installing the program should never modify any of the files\n contained in the distribution.  This means that all the files that form\n@@ -3059,3 +3085,9 @@ other files to get.\n @contents\n \n @bye\n+Local variables:\n+update-date-leading-regexp: \"@c This date is automagically updated when you save this file:\\n@set lastupdate \"\n+update-date-trailing-regexp: \"\"\n+eval: (load \"/gd/gnuorg/update-date.el\")\n+eval: (add-hook 'write-file-hooks 'update-date)\n+End:"}]}