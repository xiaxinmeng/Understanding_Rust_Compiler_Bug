{"sha": "a5061eed103e5e87e8416ac9e181423a8853ce0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwNjFlZWQxMDNlNWU4N2U4NDE2YWM5ZTE4MTQyM2E4ODUzY2UwZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-10-07T23:06:16Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-10-07T23:06:16Z"}, "message": "re PR c++/51422 ([c++0x] ICE with invalid lambda expression)\n\n/cp\n2012-10-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51422\n\t* semantics.c (is_normal_capture_proxy): Return true for\n\terror_mark_node as DECL_VALUE_EXPR.\n\n/testsuite\n2012-10-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51422\n\t* g++.dg/cpp0x/lambda/lambda-ice8.C: New.\n\nFrom-SVN: r192187", "tree": {"sha": "c2cf834162555be1bbb9a7e9d64196509f3b95f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2cf834162555be1bbb9a7e9d64196509f3b95f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5061eed103e5e87e8416ac9e181423a8853ce0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5061eed103e5e87e8416ac9e181423a8853ce0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5061eed103e5e87e8416ac9e181423a8853ce0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5061eed103e5e87e8416ac9e181423a8853ce0f/comments", "author": null, "committer": null, "parents": [{"sha": "40c5ed5b5a7f1fc4e05c36c3f9d069467390b5d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40c5ed5b5a7f1fc4e05c36c3f9d069467390b5d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40c5ed5b5a7f1fc4e05c36c3f9d069467390b5d3"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "0113fa4a451c1f1c4bee385fcfaec578a13e1518", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5061eed103e5e87e8416ac9e181423a8853ce0f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5061eed103e5e87e8416ac9e181423a8853ce0f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a5061eed103e5e87e8416ac9e181423a8853ce0f", "patch": "@@ -1,3 +1,9 @@\n+2012-10-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51422\n+\t* semantics.c (is_normal_capture_proxy): Return true for\n+\terror_mark_node as DECL_VALUE_EXPR.\n+\n 2012-10-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-tree.h (SIZEOF_EXPR_TYPE_P): Define."}, {"sha": "7174927094c5cd208d434750d0f900c148d3a0a2", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5061eed103e5e87e8416ac9e181423a8853ce0f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5061eed103e5e87e8416ac9e181423a8853ce0f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=a5061eed103e5e87e8416ac9e181423a8853ce0f", "patch": "@@ -3,8 +3,7 @@\n    building RTL.  These routines are used both during actual parsing\n    and during the instantiation of template functions.\n \n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,\n-\t\t 2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n+   Copyright (C) 1998-2012 Free Software Foundation, Inc.\n    Written by Mark Mitchell (mmitchell@usa.net) based on code found\n    formerly in parse.y and pt.c.\n \n@@ -9005,14 +9004,15 @@ is_capture_proxy (tree decl)\n bool\n is_normal_capture_proxy (tree decl)\n {\n-  tree val;\n-\n   if (!is_capture_proxy (decl))\n     /* It's not a capture proxy.  */\n     return false;\n \n   /* It is a capture proxy, is it a normal capture?  */\n-  val = DECL_VALUE_EXPR (decl);\n+  tree val = DECL_VALUE_EXPR (decl);\n+  if (val == error_mark_node)\n+    return true;\n+\n   gcc_assert (TREE_CODE (val) == COMPONENT_REF);\n   val = TREE_OPERAND (val, 1);\n   return DECL_NORMAL_CAPTURE_P (val);"}, {"sha": "a1c4a3272f7a7789ecf2c5732cd6707d8211fe3c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5061eed103e5e87e8416ac9e181423a8853ce0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5061eed103e5e87e8416ac9e181423a8853ce0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5061eed103e5e87e8416ac9e181423a8853ce0f", "patch": "@@ -1,3 +1,8 @@\n+2012-10-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51422\n+\t* g++.dg/cpp0x/lambda/lambda-ice8.C: New.\n+\n 2012-10-07  Richard Sandiford  <rdsandiford@googlemail.com>\n \t    Sandra Loosemore  <sandra@codesourcery.com>\n "}, {"sha": "00078d53b7b75a1efbb03d0fb964e5da05ae2fcd", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-ice8.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5061eed103e5e87e8416ac9e181423a8853ce0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5061eed103e5e87e8416ac9e181423a8853ce0f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice8.C?ref=a5061eed103e5e87e8416ac9e181423a8853ce0f", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/51422\n+// { dg-do compile { target c++11 } }\n+\n+template<typename> struct A {};\n+\n+void foo()\n+{\n+  [i] { A<decltype(i)>(); };   // { dg-error \"not declared|invalid\" }\n+  [i] { A<decltype(i)>(); };   // { dg-error \"invalid\" }\n+}"}]}