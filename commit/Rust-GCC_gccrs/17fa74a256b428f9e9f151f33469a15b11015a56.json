{"sha": "17fa74a256b428f9e9f151f33469a15b11015a56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdmYTc0YTI1NmI0MjhmOWU5ZjE1MWYzMzQ2OWExNWIxMTAxNWE1Ng==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-11-16T18:33:29Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-11-16T18:33:29Z"}, "message": "* tlink.c: Fix formatting.\n\nFrom-SVN: r59176", "tree": {"sha": "ecdf42cc9ff2588a12f5fadd076ebbb55978d706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecdf42cc9ff2588a12f5fadd076ebbb55978d706"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17fa74a256b428f9e9f151f33469a15b11015a56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fa74a256b428f9e9f151f33469a15b11015a56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17fa74a256b428f9e9f151f33469a15b11015a56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fa74a256b428f9e9f151f33469a15b11015a56/comments", "author": null, "committer": null, "parents": [{"sha": "68a7da974b16a7508178655de67bde67c04c67ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a7da974b16a7508178655de67bde67c04c67ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a7da974b16a7508178655de67bde67c04c67ce"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "c0a444b71849abe77c6518ae27fa087cd09afd5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17fa74a256b428f9e9f151f33469a15b11015a56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17fa74a256b428f9e9f151f33469a15b11015a56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17fa74a256b428f9e9f151f33469a15b11015a56", "patch": "@@ -1,3 +1,7 @@\n+2002-11-16  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tlink.c: Fix formatting.\n+\n 2002-11-16  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR 8362"}, {"sha": "b4a724e19466b437c872ceacbc5c20991bb7d4e2", "filename": "gcc/tlink.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17fa74a256b428f9e9f151f33469a15b11015a56/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17fa74a256b428f9e9f151f33469a15b11015a56/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=17fa74a256b428f9e9f151f33469a15b11015a56", "patch": "@@ -73,16 +73,16 @@ hash_string_eq (s1_p, s2_p)\n      const void *s1_p;\n      const void *s2_p;\n {\n-  const char *const *s1 = (const char *const *)s1_p;\n-  const char *s2 = (const char *)s2_p;\n+  const char *const *s1 = (const char *const *) s1_p;\n+  const char *s2 = (const char *) s2_p;\n   return strcmp (*s1, s2) == 0;\n }\n \n static hashval_t\n hash_string_hash (s_p)\n      const void *s_p;\n {\n-  const char *const *s = (const char *const *)s_p;\n+  const char *const *s = (const char *const *) s_p;\n   return (*htab_hash_string) (*s);\n }\n \n@@ -120,7 +120,7 @@ symbol_hash_lookup (string, create)\n {\n   PTR *e;\n   e = htab_find_slot_with_hash (symbol_table, string,\n-\t\t\t\t(*htab_hash_string)(string),\n+\t\t\t\t(*htab_hash_string) (string),\n \t\t\t\tcreate ? INSERT : NO_INSERT);\n   if (e == NULL)\n     return NULL;\n@@ -143,7 +143,7 @@ file_hash_lookup (string)\n {\n   PTR *e;\n   e = htab_find_slot_with_hash (file_table, string,\n-\t\t\t\t(*htab_hash_string)(string),\n+\t\t\t\t(*htab_hash_string) (string),\n \t\t\t\tINSERT);\n   if (*e == NULL)\n     {\n@@ -165,7 +165,7 @@ demangled_hash_lookup (string, create)\n {\n   PTR *e;\n   e = htab_find_slot_with_hash (demangled_table, string,\n-\t\t\t\t(*htab_hash_string)(string),\n+\t\t\t\t(*htab_hash_string) (string),\n \t\t\t\tcreate ? INSERT : NO_INSERT);\n   if (e == NULL)\n     return NULL;\n@@ -583,13 +583,13 @@ scan_linker_output (fname)\n       symbol *sym;\n       int end;\n \n-      while (*p && ISSPACE ((unsigned char)*p))\n+      while (*p && ISSPACE ((unsigned char) *p))\n \t++p;\n \n       if (! *p)\n \tcontinue;\n \n-      for (q = p; *q && ! ISSPACE ((unsigned char)*q); ++q)\n+      for (q = p; *q && ! ISSPACE ((unsigned char) *q); ++q)\n \t;\n \n       /* Try the first word on the line.  */\n@@ -605,9 +605,9 @@ scan_linker_output (fname)\n       /* Some SVR4 linkers produce messages like\n \t ld: 0711-317 ERROR: Undefined symbol: .g__t3foo1Zi\n \t */\n-      if (! sym && ! end && strstr (q+1, \"Undefined symbol: \"))\n+      if (! sym && ! end && strstr (q + 1, \"Undefined symbol: \"))\n \t{\n-\t  char *p = strrchr (q+1, ' ');\n+\t  char *p = strrchr (q + 1, ' ');\n \t  p++;\n \t  if (*p == '.')\n \t    p++;\n@@ -619,7 +619,7 @@ scan_linker_output (fname)\n       if (! sym && ! end)\n \t/* Try a mangled name in quotes.  */\n \t{\n-\t  const char *oldq = q+1;\n+\t  const char *oldq = q + 1;\n \t  demangled *dem = 0;\n \t  q = 0;\n "}]}