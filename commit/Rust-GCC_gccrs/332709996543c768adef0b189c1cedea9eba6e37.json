{"sha": "332709996543c768adef0b189c1cedea9eba6e37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMyNzA5OTk2NTQzYzc2OGFkZWYwYjE4OWMxY2VkZWE5ZWJhNmUzNw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-05-03T17:00:59Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-05-03T17:00:59Z"}, "message": "re PR target/16888 (ICE: in print_reg, at config/i386/i386.c:7254)\n\ngcc/ChangeLog:\nPR target/16888\n* config/i386/i386.h (CONDITIONAL_REGISTER_USAGE): Clear reg names\nfor unavailable registers.\ngcc/testsuite/ChangeLog:\nPR target/16888\n* gcc.target/i386/asm-1.c: New test.\n\nFrom-SVN: r99167", "tree": {"sha": "544562d9c21dac60178169f4a69eb7f3102090f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/544562d9c21dac60178169f4a69eb7f3102090f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/332709996543c768adef0b189c1cedea9eba6e37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/332709996543c768adef0b189c1cedea9eba6e37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/332709996543c768adef0b189c1cedea9eba6e37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/332709996543c768adef0b189c1cedea9eba6e37/comments", "author": null, "committer": null, "parents": [{"sha": "64fe5271963de7f68994ce99bda3a380f20b5dbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64fe5271963de7f68994ce99bda3a380f20b5dbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64fe5271963de7f68994ce99bda3a380f20b5dbe"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "b768b2dc078c6e90543f6fe89191e30e3798bf0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/332709996543c768adef0b189c1cedea9eba6e37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/332709996543c768adef0b189c1cedea9eba6e37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=332709996543c768adef0b189c1cedea9eba6e37", "patch": "@@ -1,3 +1,9 @@\n+2005-05-03  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR target/16888\n+\t* config/i386/i386.h (CONDITIONAL_REGISTER_USAGE): Clear reg names\n+\tfor unavailable registers.\n+\n 2005-05-03  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-cfg.c (tree_forwarder_block_p): Fix a typo."}, {"sha": "d65ce49a4c56c7e95cd0e954b720240b7f5f2dc7", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/332709996543c768adef0b189c1cedea9eba6e37/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/332709996543c768adef0b189c1cedea9eba6e37/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=332709996543c768adef0b189c1cedea9eba6e37", "patch": "@@ -780,14 +780,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n \tint i;\t\t\t\t\t\t\t\t\\\n         for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t\\\n           if (TEST_HARD_REG_BIT (reg_class_contents[(int)MMX_REGS], i))\t\\\n-\t    fixed_regs[i] = call_used_regs[i] = 1;\t\t \t\\\n+\t    fixed_regs[i] = call_used_regs[i] = 1, reg_names[i] = \"\";\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     if (! TARGET_SSE)\t\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tint i;\t\t\t\t\t\t\t\t\\\n         for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t\\\n           if (TEST_HARD_REG_BIT (reg_class_contents[(int)SSE_REGS], i))\t\\\n-\t    fixed_regs[i] = call_used_regs[i] = 1;\t\t \t\\\n+\t    fixed_regs[i] = call_used_regs[i] = 1, reg_names[i] = \"\";\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     if (! TARGET_80387 && ! TARGET_FLOAT_RETURNS_IN_80387)\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n@@ -796,7 +796,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n         COPY_HARD_REG_SET (x, reg_class_contents[(int)FLOAT_REGS]);\t\\\n         for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\t\t\t\\\n           if (TEST_HARD_REG_BIT (x, i)) \t\t\t\t\\\n-\t    fixed_regs[i] = call_used_regs[i] = 1;\t\t\t\\\n+\t    fixed_regs[i] = call_used_regs[i] = 1, reg_names[i] = \"\";\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    if (! TARGET_64BIT)\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tint i;\t\t\t\t\t\t\t\t\\\n+\tfor (i = FIRST_REX_INT_REG; i <= LAST_REX_INT_REG; i++)\t\t\\\n+\t  reg_names[i] = \"\";\t\t\t\t\t\t\\\n+\tfor (i = FIRST_REX_SSE_REG; i <= LAST_REX_SSE_REG; i++)\t\t\\\n+\t  reg_names[i] = \"\";\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n "}, {"sha": "53428bf67ac9be51803adebe84d3bc5a58f825fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/332709996543c768adef0b189c1cedea9eba6e37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/332709996543c768adef0b189c1cedea9eba6e37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=332709996543c768adef0b189c1cedea9eba6e37", "patch": "@@ -1,3 +1,8 @@\n+2005-05-03  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR target/16888\n+\t* gcc.target/i386/asm-1.c: New test.\n+\n 2005-05-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/21330"}, {"sha": "63e7af78c63e4684e52ff96e89545ca8aa5b0cea", "filename": "gcc/testsuite/gcc.target/i386/asm-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/332709996543c768adef0b189c1cedea9eba6e37/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/332709996543c768adef0b189c1cedea9eba6e37/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-1.c?ref=332709996543c768adef0b189c1cedea9eba6e37", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-m32\" } */\n+\n+register unsigned int EAX asm (\"r14\"); /* { dg-error \"register name\" } */\n+\n+void foo ()\n+{\n+  EAX = 0;\n+}"}]}