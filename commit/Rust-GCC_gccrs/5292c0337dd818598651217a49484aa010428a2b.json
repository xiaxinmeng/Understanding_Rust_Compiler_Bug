{"sha": "5292c0337dd818598651217a49484aa010428a2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI5MmMwMzM3ZGQ4MTg1OTg2NTEyMTdhNDk0ODRhYTAxMDQyOGEyYg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2009-01-29T00:25:17Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2009-01-29T00:25:17Z"}, "message": "testsuite_common_types.h (has_trivial_cons_dtor): New.\n\n2009-01-28  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/util/testsuite_common_types.h (has_trivial_cons_dtor): New.\n\t(standard_layout): Just use !has_virtual_destructor for now.\n\t* testsuite/30_threads/mutex/requirements/standard_layout.cc: New.\n\t* testsuite/30_threads/timed_mutex/requirements/standard_layout.cc: New.\n\t* testsuite/30_threads/recursive_mutex/requirements/\n\tstandard_layout.cc: New.\n\t* testsuite/30_threads/condition_variable/requirements/\n\tstandard_layout.cc: New.\n\t* testsuite/29_atomics/atomic_address/requirements/\n\tstandard_layout.cc: Adjust.\n\t* testsuite/29_atomics/atomic_flag/requirements/\n\tstandard_layout.cc: Same.\n\t* testsuite/29_atomics/atomic_address/requirements/trivial.cc: New.\n\t* testsuite/29_atomics/atomic_integral/requirements/trivial.cc: Same.\n\t* testsuite/29_atomics/atomic_flag/requirements/trivial.cc: Same.\n\t* testsuite/30_threads/condition_variable/requirements/typedefs.cc: New.\n\t* testsuite/29_atomics/atomic_integral/cons/assign_neg.cc: Adjust\n\tline numbers.\n\t* testsuite/29_atomics/atomic_integral/cons/copy_neg.cc: Same.\n\t* testsuite/29_atomics/atomic/cons/assign_neg.cc: Same.\n\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Same.\n\t* testsuite/29_atomics/atomic/requirements/standard_layout.cc:\n\tRemove, not required.\n\nFrom-SVN: r143749", "tree": {"sha": "cd5f316e71130f64f0f1fb6e661f67e68c32714f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd5f316e71130f64f0f1fb6e661f67e68c32714f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5292c0337dd818598651217a49484aa010428a2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5292c0337dd818598651217a49484aa010428a2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5292c0337dd818598651217a49484aa010428a2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5292c0337dd818598651217a49484aa010428a2b/comments", "author": null, "committer": null, "parents": [{"sha": "e8eef5963f88a6a9f156c6703d9c4d06b38de38a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8eef5963f88a6a9f156c6703d9c4d06b38de38a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8eef5963f88a6a9f156c6703d9c4d06b38de38a"}], "stats": {"total": 422, "additions": 391, "deletions": 31}, "files": [{"sha": "6a58259edb79afbd35acfe27b251ff0f03f149bf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -1,3 +1,29 @@\n+2009-01-28  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/util/testsuite_common_types.h (has_trivial_cons_dtor): New.\n+\t(standard_layout): Just use !has_virtual_destructor for now.\n+\t* testsuite/30_threads/mutex/requirements/standard_layout.cc: New.\n+\t* testsuite/30_threads/timed_mutex/requirements/standard_layout.cc: New.\n+\t* testsuite/30_threads/recursive_mutex/requirements/\n+\tstandard_layout.cc: New.\n+\t* testsuite/30_threads/condition_variable/requirements/\n+\tstandard_layout.cc: New.\n+\t* testsuite/29_atomics/atomic_address/requirements/\n+\tstandard_layout.cc: Adjust.\n+\t* testsuite/29_atomics/atomic_flag/requirements/\n+\tstandard_layout.cc: Same.\n+\t* testsuite/29_atomics/atomic_address/requirements/trivial.cc: New.\n+\t* testsuite/29_atomics/atomic_integral/requirements/trivial.cc: Same.\n+\t* testsuite/29_atomics/atomic_flag/requirements/trivial.cc: Same.\n+\t* testsuite/30_threads/condition_variable/requirements/typedefs.cc: New.\n+\t* testsuite/29_atomics/atomic_integral/cons/assign_neg.cc: Adjust\n+\tline numbers.\n+\t* testsuite/29_atomics/atomic_integral/cons/copy_neg.cc: Same.\n+\t* testsuite/29_atomics/atomic/cons/assign_neg.cc: Same.\n+\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Same.\n+\t* testsuite/29_atomics/atomic/requirements/standard_layout.cc:\n+\tRemove, not required.\n+\n 2009-01-22  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/std/thread (__thread_data_base, thread): Rename member"}, {"sha": "820d5aa21b0b222658f1bc0af34f6f62516c5d57", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -38,7 +38,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 510 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 530 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 239 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 257 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 275 } "}, {"sha": "b723066d75b654844aee4f9989f7cb9d5b6c390a", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -38,7 +38,7 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 549 } \n+// { dg-error \"used here\" \"\" { target *-*-* } 569 } \n // { dg-error \"deleted function\" \"\" { target *-*-* } 238 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 256 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 274 }"}, {"sha": "3d5187d2137f107cbbfb685746b7b5e05ebd85e8", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_address/requirements/standard_layout.cc", "status": "renamed", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Frequirements%2Fstandard_layout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Frequirements%2Fstandard_layout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Frequirements%2Fstandard_layout.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -1,8 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n-// 2008-10-22 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2008 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,12 +19,20 @@\n // Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n // USA.\n \n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n #include <cstdatomic>\n #include <testsuite_common_types.h>\n \n void test01()\n {\n-  // Check for standard layout requirements\n   __gnu_test::standard_layout test;\n-  __gnu_cxx::typelist::apply_generator(test, __gnu_test::atomics_tl());\n+  test.operator()<std::atomic_address>();\n }", "previous_filename": "libstdc++-v3/testsuite/29_atomics/atomic/requirements/standard_layout.cc"}, {"sha": "de722ad232bc8aa79fc66c9c2b1547246bd39240", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_address/requirements/trivial.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Frequirements%2Ftrivial.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Frequirements%2Ftrivial.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_address%2Frequirements%2Ftrivial.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <cstdatomic>\n+#include <testsuite_common_types.h>\n+\n+void test01()\n+{\n+  __gnu_test::has_trivial_cons_dtor test;\n+  test.operator()<std::atomic_address>();\n+}"}, {"sha": "3542f0e2a75eef92585e5d5a4b22422a8a524c0d", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/requirements/standard_layout.cc", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Frequirements%2Fstandard_layout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Frequirements%2Fstandard_layout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Frequirements%2Fstandard_layout.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -1,6 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n \n-// Copyright (C) 2008 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,20 +29,10 @@\n // the GNU General Public License.\n \n #include <cstdatomic>\n-#include <type_traits>\n-#include <testsuite_hooks.h>\n+#include <testsuite_common_types.h>\n \n-int main()\n+void test01()\n {\n-  bool test __attribute__((unused)) = true;\n-\n-  typedef std::atomic_flag test_type;\n-  \n-  // libstdc++/37907\n-  // VERIFY( std::is_standard_layout<test_type>::value );\n-\n-  VERIFY( std::has_trivial_default_constructor<test_type>::value );\n-  VERIFY( std::has_trivial_destructor<test_type>::value );\n-\n-  return 0;\n+  __gnu_test::standard_layout test;\n+  test.operator()<std::atomic_flag>();\n }"}, {"sha": "ae8e9a4888138d448d1997c29ca79cd00639d297", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/requirements/trivial.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Frequirements%2Ftrivial.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Frequirements%2Ftrivial.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Frequirements%2Ftrivial.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -0,0 +1,38 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <cstdatomic>\n+#include <testsuite_common_types.h>\n+\n+void test01()\n+{\n+  __gnu_test::has_trivial_cons_dtor test;\n+  test.operator()<std::atomic_flag>();\n+}"}, {"sha": "85c737eb24af2fc7c611c6e8b499dfb9246e0962", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -39,11 +39,11 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 510 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 530 }\n // { dg-excess-errors \"deleted function\" } \n // { dg-excess-errors \"deleted function\" } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 38 } \n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 517 } \n+// { dg-error \"instantiated from\" \"\" { target *-*-* } 537 } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 173 } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 404 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 175 }  "}, {"sha": "69e45d959513a7157ec63fc20bcd96bfd3580ff0", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/copy_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -39,11 +39,11 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"used here\" \"\" { target *-*-* } 549 }\n+// { dg-error \"used here\" \"\" { target *-*-* } 569 }\n // { dg-excess-errors \"deleted function\" } \n // { dg-excess-errors \"deleted function\" } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 38 } \n-// { dg-error \"instantiated from\" \"\" { target *-*-* } 555 } \n+// { dg-error \"instantiated from\" \"\" { target *-*-* } 575 } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 173 } \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 404 }\n // { dg-error \"instantiated from\" \"\" { target *-*-* } 175 }  "}, {"sha": "8866ba8cab9c54b05a19f1f3637d586856cf2b45", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/requirements/trivial.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Frequirements%2Ftrivial.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Frequirements%2Ftrivial.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Frequirements%2Ftrivial.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -0,0 +1,39 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <cstdatomic>\n+#include <testsuite_common_types.h>\n+\n+void test01()\n+{\n+  __gnu_test::has_trivial_cons_dtor test;\n+  __gnu_cxx::typelist::apply_generator(test, \n+\t\t\t\t       __gnu_test::atomic_integrals::type());\n+}"}, {"sha": "f50e5c82714d7ccd3386496b6a9d076ce32a6ed0", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/requirements/standard_layout.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Frequirements%2Fstandard_layout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Frequirements%2Fstandard_layout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Frequirements%2Fstandard_layout.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -0,0 +1,40 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <condition_variable>\n+#include <testsuite_common_types.h>\n+\n+void test01()\n+{\n+  __gnu_test::standard_layout test;\n+  test.operator()<std::condition_variable>();\n+}"}, {"sha": "aec35e249a269e7e35b7877776fdc075cf244ff1", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/requirements/typedefs.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Frequirements%2Ftypedefs.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -0,0 +1,41 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+// 2009-01-28 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <condition_variable>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::condition_variable test_type;\n+  typedef test_type::native_handle_type type;\n+}"}, {"sha": "cbe76ad02522b8d2a00621a35106af490acc481a", "filename": "libstdc++-v3/testsuite/30_threads/mutex/requirements/standard_layout.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Frequirements%2Fstandard_layout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Frequirements%2Fstandard_layout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Frequirements%2Fstandard_layout.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -0,0 +1,40 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <mutex>\n+#include <testsuite_common_types.h>\n+\n+void test01()\n+{\n+  __gnu_test::standard_layout test;\n+  test.operator()<std::mutex>();\n+}"}, {"sha": "e736312400ac81284121208d08931a250f74d4e0", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/requirements/standard_layout.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Frequirements%2Fstandard_layout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Frequirements%2Fstandard_layout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Frequirements%2Fstandard_layout.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -0,0 +1,40 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <mutex>\n+#include <testsuite_common_types.h>\n+\n+void test01()\n+{\n+  __gnu_test::standard_layout test;\n+  test.operator()<std::recursive_mutex>();\n+}"}, {"sha": "57231b396e4873fe6a4ea0ab0231a9d8ff1d876b", "filename": "libstdc++-v3/testsuite/30_threads/timed_mutex/requirements/standard_layout.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Frequirements%2Fstandard_layout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Frequirements%2Fstandard_layout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Ftimed_mutex%2Frequirements%2Fstandard_layout.cc?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -0,0 +1,40 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <mutex>\n+#include <testsuite_common_types.h>\n+\n+void test01()\n+{\n+  __gnu_test::standard_layout test;\n+  test.operator()<std::timed_mutex>();\n+}"}, {"sha": "1ead6bf7fc81e441cd721ffbb9346208a10ea784", "filename": "libstdc++-v3/testsuite/util/testsuite_common_types.h", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5292c0337dd818598651217a49484aa010428a2b/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h?ref=5292c0337dd818598651217a49484aa010428a2b", "patch": "@@ -1,7 +1,7 @@\n // -*- C++ -*-\n // typelist for the C++ library testsuite. \n //\n-// Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -446,6 +446,29 @@ namespace __gnu_test\n \n   // Generator to test standard layout\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  struct has_trivial_cons_dtor\n+  {\n+    template<typename _Tp>\n+      void \n+      operator()()\n+      {\n+\tstruct _Concept\n+\t{\n+\t  void __constraint()\n+\t  {\n+\t    typedef std::has_trivial_default_constructor<_Tp> ctor_p;\n+\t    static_assert(ctor_p::value, \"default constructor not trivial\");\n+\n+\t    typedef std::has_trivial_destructor<_Tp> dtor_p;\n+\t    static_assert(dtor_p::value, \"destructor not trivial\");\n+\t  }\n+\t};\n+\n+\tvoid (_Concept::*__x)() __attribute__((unused))\n+\t  = &_Concept::__constraint;\n+      }\n+  };\n+\n   struct standard_layout\n   {\n     template<typename _Tp>\n@@ -459,12 +482,9 @@ namespace __gnu_test\n \t    // libstdc++/37907\n \t    // typedef std::is_standard_layout<_Tp> standard_layout_p;\n \t    // static_assert(standard_layout_p::value, \"not standard_layout\");\n-\t    \n-\t    typedef std::has_trivial_default_constructor<_Tp> ctor_p;\n-\t    static_assert(ctor_p::value, \"default ctor not trivial\");\n \n-\t    typedef std::has_trivial_destructor<_Tp> dtor_p;\n-\t    static_assert(dtor_p::value, \"dtor not trivial\");\n+\t    typedef std::has_virtual_destructor<_Tp> ctor_p;\n+\t    static_assert(!ctor_p::value, \"has virtual destructor\");\n \t  }\n \t};\n "}]}