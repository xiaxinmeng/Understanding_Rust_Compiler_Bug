{"sha": "55f7891bb79c49bca34c2866ca94fb754be30a88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVmNzg5MWJiNzljNDliY2EzNGMyODY2Y2E5NGZiNzU0YmUzMGE4OA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-10-10T05:30:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-10-10T05:30:28Z"}, "message": "gcse.c (gcse_main): Avoid global optimizations if we have a large number of basic blocks and the...\n\n        * gcse.c (gcse_main): Avoid global optimizations if we have a\n        large number of basic blocks and the ratio of edges to blocks\n        is high.\n        (delete_null_pointer_checks): Likewise.\n\nFrom-SVN: r29882", "tree": {"sha": "73d65cac827c1016f9fef47f276875dc6a6acec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73d65cac827c1016f9fef47f276875dc6a6acec3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55f7891bb79c49bca34c2866ca94fb754be30a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f7891bb79c49bca34c2866ca94fb754be30a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55f7891bb79c49bca34c2866ca94fb754be30a88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f7891bb79c49bca34c2866ca94fb754be30a88/comments", "author": null, "committer": null, "parents": [{"sha": "ba80674579d5de95a3b8d14187ceff27fc659b4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba80674579d5de95a3b8d14187ceff27fc659b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba80674579d5de95a3b8d14187ceff27fc659b4b"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "340125313c91cb02f8f56b98fe098016a7bd82cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55f7891bb79c49bca34c2866ca94fb754be30a88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55f7891bb79c49bca34c2866ca94fb754be30a88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55f7891bb79c49bca34c2866ca94fb754be30a88", "patch": "@@ -1,3 +1,10 @@\n+Sat Oct  9 23:26:55 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+        * gcse.c (gcse_main): Avoid global optimizations if we have a\n+        large number of basic blocks and the ratio of edges to blocks\n+        is high.\n+        (delete_null_pointer_checks): Likewise.\n+\n Sat Oct  9 23:16:01 1999  Ken Raeburn  <raeburn@mit.edu>\n \n \t* c-common.c (check_format_info): Warn if format string isn't a"}, {"sha": "cc9d2666dfb2468f4059a7bd73be8f3bf17cfeec", "filename": "gcc/gcse.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55f7891bb79c49bca34c2866ca94fb754be30a88/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55f7891bb79c49bca34c2866ca94fb754be30a88/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=55f7891bb79c49bca34c2866ca94fb754be30a88", "patch": "@@ -672,6 +672,21 @@ gcse_main (f, file)\n       return 0;\n     }\n \n+  /* Trying to perform global optimizations on flow graphs which have\n+     a high connectivity will take a long time and is unlikely to be\n+     particularly useful.\n+\n+     In normal circumstances a cfg should have about twice has many edges\n+     as blocks.  But we do not want to punish small functions which have\n+     a couple switch statements.  So we require a relatively large number\n+     of basic blocks and the ratio of edges to blocks to be high.  */\n+  if (n_basic_blocks > 1000 && n_edges / n_basic_blocks >= 20)\n+    {\n+      /* Free storage allocated by find_basic_blocks.  */\n+      free_basic_block_vars (0);\n+      return 0;\n+    }\n+\n   /* See what modes support reg/reg copy operations.  */\n   if (! can_copy_init_p)\n     {\n@@ -4908,6 +4923,21 @@ delete_null_pointer_checks (f)\n       return;\n     }\n \n+  /* Trying to perform global optimizations on flow graphs which have\n+     a high connectivity will take a long time and is unlikely to be\n+     particularly useful.\n+\n+     In normal circumstances a cfg should have about twice has many edges\n+     as blocks.  But we do not want to punish small functions which have\n+     a couple switch statements.  So we require a relatively large number\n+     of basic blocks and the ratio of edges to blocks to be high.  */\n+  if (n_basic_blocks > 1000 && n_edges / n_basic_blocks >= 20)\n+    {\n+      /* Free storage allocated by find_basic_blocks.  */\n+      free_basic_block_vars (0);\n+      return 0;\n+    }\n+\n   /* We need predecessor/successor lists as well as pred/succ counts for\n      each basic block.  */\n   s_preds = (int_list_ptr *) alloca (n_basic_blocks * sizeof (int_list_ptr));"}]}