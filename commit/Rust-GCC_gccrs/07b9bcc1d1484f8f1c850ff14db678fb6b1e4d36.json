{"sha": "07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36", "node_id": "C_kwDOANBUbNoAKDA3YjliY2MxZDE0ODRmOGYxYzg1MGZmMTRkYjY3OGZiNmIxZTRkMzY", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-11-27T20:10:18Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-11-28T18:53:53Z"}, "message": "Fortran: ICE with elemental and dummy argument with VALUE attribute [PR107819]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/107819\n\t* trans-stmt.cc (gfc_conv_elemental_dependencies): In checking for\n\telemental dependencies, treat dummy argument with VALUE attribute\n\tas implicitly having intent(in).\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/107819\n\t* gfortran.dg/elemental_dependency_7.f90: New test.", "tree": {"sha": "afb04aeb885aa4c0468f7019941c13b1375a7015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afb04aeb885aa4c0468f7019941c13b1375a7015"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2200b7054638bbf157192a4dca23886dd420becb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2200b7054638bbf157192a4dca23886dd420becb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2200b7054638bbf157192a4dca23886dd420becb"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "b288f1f90505b0e3c723863b96cb5b042acc4618", "filename": "gcc/fortran/trans-stmt.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36/gcc%2Ffortran%2Ftrans-stmt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36/gcc%2Ffortran%2Ftrans-stmt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.cc?ref=07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36", "patch": "@@ -264,6 +264,7 @@ gfc_conv_elemental_dependencies (gfc_se * se, gfc_se * loopse,\n       if (e->expr_type == EXPR_VARIABLE\n \t    && e->rank && fsym\n \t    && fsym->attr.intent != INTENT_IN\n+\t    && !fsym->attr.value\n \t    && gfc_check_fncall_dependency (e, fsym->attr.intent,\n \t\t\t\t\t    sym, arg0, check_variable))\n \t{"}, {"sha": "ad45ea5271b2b805e9fb6697a59e722a409d62a6", "filename": "gcc/testsuite/gfortran.dg/elemental_dependency_7.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_dependency_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_dependency_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_dependency_7.f90?ref=07b9bcc1d1484f8f1c850ff14db678fb6b1e4d36", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do run }\n+! PR fortran/107819 - ICE in gfc_check_argument_var_dependency\n+! Contributed by G.Steinmetz\n+!\n+! Note: the testcase is considered non-conforming for m>1 due to aliasing\n+\n+program p\n+  implicit none\n+  integer, parameter :: m = 1\n+  integer :: i\n+  integer :: a(m) = [(-i,i=1,m)]\n+  integer :: n(m) = [(i,i=m,1,-1)]\n+  integer :: b(m)\n+  b = a\n+  call s (a(n), a) ! { dg-warning \"might interfere with actual argument\" }\n+\n+  ! Compare to separate application of subroutine in element order\n+  do i = 1, size (b)\n+     call s (b(n(i)), b(i))\n+  end do\n+  if (any (a /= b)) stop 1\n+contains\n+  elemental subroutine s (x, y)\n+    integer, value       :: x\n+    integer, intent(out) :: y\n+    y = x\n+  end\n+end"}]}