{"sha": "2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJmYTczZTQxODJlZDBhM2VkN2M3ZTdjODA0OTFkMGJjOGY1MTFmYw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "2000-03-01T17:16:35Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "2000-03-01T17:16:35Z"}, "message": "Reorganize some warning code\n\nFrom-SVN: r32282", "tree": {"sha": "db3d9e8220bc7efd9442c0794b8cd8dba8fc3c72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db3d9e8220bc7efd9442c0794b8cd8dba8fc3c72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc/comments", "author": null, "committer": null, "parents": [{"sha": "765a46f99ec9bcaa90a593c977365853ba01bac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/765a46f99ec9bcaa90a593c977365853ba01bac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/765a46f99ec9bcaa90a593c977365853ba01bac1"}], "stats": {"total": 80, "additions": 41, "deletions": 39}, "files": [{"sha": "e42c76474c841c68e21602e5bb3529c0e29106a5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc", "patch": "@@ -1,3 +1,8 @@\n+2000-03-01  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* typeck.c (maybe_warn_about_returning_address_of_local): Reorganize\n+\tto merge reference/pointer code and fix incorrect warnings.\n+\n 2000-02-29  Jason Merrill  <jason@casey.cygnus.com>\n \n \t* search.c (protected_accessible_p): Use context_for_name_lookup."}, {"sha": "dd246afd8251f0e3461af4da4d04693a7c0cd5d9", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 36, "deletions": 39, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=2bfa73e4182ed0a3ed7c7e7c80491d0bc8f511fc", "patch": "@@ -6705,59 +6705,56 @@ maybe_warn_about_returning_address_of_local (retval)\n      tree retval;\n {\n   tree valtype = TREE_TYPE (DECL_RESULT (current_function_decl));\n+  tree whats_returned = retval;\n \n-  if (TREE_CODE (valtype) == REFERENCE_TYPE)\n+  for (;;)\n     {\n-      tree whats_returned;\n-\n-      /* Sort through common things to see what it is\n-\t we are returning.  */\n-      whats_returned = retval;\n       if (TREE_CODE (whats_returned) == COMPOUND_EXPR)\n-\t{\n-\t  whats_returned = TREE_OPERAND (whats_returned, 1);\n-\t  if (TREE_CODE (whats_returned) == ADDR_EXPR)\n-\t    whats_returned = TREE_OPERAND (whats_returned, 0);\n-\t}\n-      while (TREE_CODE (whats_returned) == CONVERT_EXPR\n-\t     || TREE_CODE (whats_returned) == NOP_EXPR)\n+\twhats_returned = TREE_OPERAND (whats_returned, 1);\n+      else if (TREE_CODE (whats_returned) == CONVERT_EXPR\n+\t       || TREE_CODE (whats_returned) == NON_LVALUE_EXPR\n+\t       || TREE_CODE (whats_returned) == NOP_EXPR)\n \twhats_returned = TREE_OPERAND (whats_returned, 0);\n-      if (TREE_CODE (whats_returned) == ADDR_EXPR)\n+      else\n+\tbreak;\n+    }\n+\n+  if (TREE_CODE (whats_returned) != ADDR_EXPR)\n+    return;\n+  whats_returned = TREE_OPERAND (whats_returned, 0);      \n+\n+  if (TREE_CODE (valtype) == REFERENCE_TYPE)\n+    {\n+      if (TREE_CODE (whats_returned) == AGGR_INIT_EXPR\n+\t  || TREE_CODE (whats_returned) == TARGET_EXPR)\n \t{\n+\t  /* Get the target.  */\n \t  whats_returned = TREE_OPERAND (whats_returned, 0);\n-\t  while (TREE_CODE (whats_returned) == AGGR_INIT_EXPR\n-\t\t || TREE_CODE (whats_returned) == TARGET_EXPR)\n-\t    {\n-\t      /* Get the target.  */\n-\t      whats_returned = TREE_OPERAND (whats_returned, 0);\n-\t      warning (\"returning reference to temporary\");\n-\t    }\n+\t  warning (\"returning reference to temporary\");\n+\t  return;\n \t}\n-\n       if (TREE_CODE (whats_returned) == VAR_DECL \n-\t  && DECL_NAME (whats_returned))\n+\t  && DECL_NAME (whats_returned)\n+\t  && TEMP_NAME_P (DECL_NAME (whats_returned)))\n \t{\n-\t  if (TEMP_NAME_P (DECL_NAME (whats_returned)))\n-\t    warning (\"reference to non-lvalue returned\");\n-\t  else if (TREE_CODE (TREE_TYPE (whats_returned)) != REFERENCE_TYPE\n-\t\t   && DECL_FUNCTION_SCOPE_P (whats_returned)\n-\t\t   && !(TREE_STATIC (whats_returned)\n-\t\t\t|| TREE_PUBLIC (whats_returned)))\n-\t    cp_warning_at (\"reference to local variable `%D' returned\", \n-\t\t\t   whats_returned);\n+\t  warning (\"reference to non-lvalue returned\");\n+\t  return;\n \t}\n     }\n-  else if (TREE_CODE (retval) == ADDR_EXPR)\n-    {\n-      tree whats_returned = TREE_OPERAND (retval, 0);\n \n-      if (TREE_CODE (whats_returned) == VAR_DECL\n-\t  && DECL_NAME (whats_returned)\n-\t  && DECL_FUNCTION_SCOPE_P (whats_returned)\n-\t  && !(TREE_STATIC (whats_returned)\n-\t       || TREE_PUBLIC (whats_returned)))\n+  if (TREE_CODE (whats_returned) == VAR_DECL\n+      && DECL_NAME (whats_returned)\n+      && DECL_FUNCTION_SCOPE_P (whats_returned)\n+      && !(TREE_STATIC (whats_returned)\n+\t   || TREE_PUBLIC (whats_returned)))\n+    {\n+      if (TREE_CODE (valtype) == REFERENCE_TYPE)\n+\tcp_warning_at (\"reference to local variable `%D' returned\", \n+\t\t       whats_returned);\n+      else\n \tcp_warning_at (\"address of local variable `%D' returned\", \n \t\t       whats_returned);\n+      return;\n     }\n }\n "}]}