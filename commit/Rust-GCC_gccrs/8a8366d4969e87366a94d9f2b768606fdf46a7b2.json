{"sha": "8a8366d4969e87366a94d9f2b768606fdf46a7b2", "node_id": "C_kwDOANBUbNoAKDhhODM2NmQ0OTY5ZTg3MzY2YTk0ZDlmMmI3Njg2MDZmZGY0NmE3YjI", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2022-02-14T20:51:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-13T08:04:24Z"}, "message": "[Ada] Ineffective use type clause warnings cause compile time crash\n\nThis patch corrects an error in the compiler whereby the presence of a\ngeneric instance featuring a use type clause at library level may cause\na crash at compile time when warnings for ineffective use clauses are\nenabled and the type in question is already use visible.\n\ngcc/ada/\n\n\t* sem_ch8.adb (Determine_Package_Scope): Created to centralize\n\tthe calculation of which package a given use clause belongs to.\n\t(Most_Descendant_Use_Clause): Modified to call\n\tDetermine_Package_Scope.\n\t* sem_util.adb, sem_util.ads (Enclosing_Package): Modified to\n\thandle both entity and node ids.", "tree": {"sha": "ab767dafc448f7f86859d0282b74f247d7b5a6ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab767dafc448f7f86859d0282b74f247d7b5a6ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a8366d4969e87366a94d9f2b768606fdf46a7b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a8366d4969e87366a94d9f2b768606fdf46a7b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a8366d4969e87366a94d9f2b768606fdf46a7b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a8366d4969e87366a94d9f2b768606fdf46a7b2/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bac63f1ea9121a59e980981cfb8b2ea1869f12f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bac63f1ea9121a59e980981cfb8b2ea1869f12f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bac63f1ea9121a59e980981cfb8b2ea1869f12f0"}], "stats": {"total": 59, "additions": 53, "deletions": 6}, "files": [{"sha": "60c2ce6e3bc3efef51afa40236df5149cf17b083", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a8366d4969e87366a94d9f2b768606fdf46a7b2/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a8366d4969e87366a94d9f2b768606fdf46a7b2/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=8a8366d4969e87366a94d9f2b768606fdf46a7b2", "patch": "@@ -9202,9 +9202,34 @@ package body Sem_Ch8 is\n      (Clause1 : Entity_Id;\n       Clause2 : Entity_Id) return Entity_Id\n    is\n+      function Determine_Package_Scope (Clause : Node_Id) return Entity_Id;\n+      --  Given a use clause, determine which package it belongs to\n+\n+      -----------------------------\n+      -- Determine_Package_Scope --\n+      -----------------------------\n+\n+      function Determine_Package_Scope (Clause : Node_Id) return Entity_Id is\n+      begin\n+         --  Check if the clause appears in the context area\n+\n+         --  Note we cannot employ Enclosing_Packge for use clauses within\n+         --  context clauses since they are not actually \"enclosed.\"\n+\n+         if Nkind (Parent (Clause)) = N_Compilation_Unit then\n+            return Entity_Of_Unit (Unit (Parent (Clause)));\n+         end if;\n+\n+         --  Otherwise, obtain the enclosing package normally\n+\n+         return Enclosing_Package (Clause);\n+      end Determine_Package_Scope;\n+\n       Scope1 : Entity_Id;\n       Scope2 : Entity_Id;\n \n+   --  Start of processing for Most_Descendant_Use_Clause\n+\n    begin\n       if Clause1 = Clause2 then\n          return Clause1;\n@@ -9213,8 +9238,8 @@ package body Sem_Ch8 is\n       --  We determine which one is the most descendant by the scope distance\n       --  to the ultimate parent unit.\n \n-      Scope1 := Entity_Of_Unit (Unit (Parent (Clause1)));\n-      Scope2 := Entity_Of_Unit (Unit (Parent (Clause2)));\n+      Scope1 := Determine_Package_Scope (Clause1);\n+      Scope2 := Determine_Package_Scope (Clause2);\n       while Scope1 /= Standard_Standard\n         and then Scope2 /= Standard_Standard\n       loop"}, {"sha": "f12dbc7a12040de5acc20b237e7052049d5e62e6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a8366d4969e87366a94d9f2b768606fdf46a7b2/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a8366d4969e87366a94d9f2b768606fdf46a7b2/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=8a8366d4969e87366a94d9f2b768606fdf46a7b2", "patch": "@@ -8287,10 +8287,32 @@ package body Sem_Util is\n    -- Enclosing_Package --\n    -----------------------\n \n-   function Enclosing_Package (E : Entity_Id) return Entity_Id is\n-      Dynamic_Scope : constant Entity_Id := Enclosing_Dynamic_Scope (E);\n+   function Enclosing_Package (N : Node_Or_Entity_Id) return Entity_Id is\n+      Dynamic_Scope : Entity_Id;\n \n    begin\n+      --  Obtain the enclosing scope when N is a Node_Id - taking care to\n+      --  handle the case when the enclosing scope is already a package.\n+\n+      if Nkind (N) not in N_Entity then\n+         declare\n+            Encl_Scop : constant Entity_Id := Find_Enclosing_Scope (N);\n+         begin\n+            if No (Encl_Scop) then\n+               return Empty;\n+            elsif Ekind (Encl_Scop) in\n+                    E_Generic_Package | E_Package | E_Package_Body\n+            then\n+               return Encl_Scop;\n+            end if;\n+\n+            return Enclosing_Package (Encl_Scop);\n+         end;\n+      end if;\n+\n+      --  When N is already an Entity_Id proceed\n+\n+      Dynamic_Scope := Enclosing_Dynamic_Scope (N);\n       if Dynamic_Scope = Standard_Standard then\n          return Standard_Standard;\n "}, {"sha": "4ab40164c651211ca049f98f01d3597e6ff292df", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a8366d4969e87366a94d9f2b768606fdf46a7b2/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a8366d4969e87366a94d9f2b768606fdf46a7b2/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=8a8366d4969e87366a94d9f2b768606fdf46a7b2", "patch": "@@ -816,9 +816,9 @@ package Sem_Util is\n    --  Enclosing_Comp_Unit_Node returns a subunit, then the corresponding\n    --  library unit. If no such item is found, returns Empty.\n \n-   function Enclosing_Package (E : Entity_Id) return Entity_Id;\n+   function Enclosing_Package (N : Node_Or_Entity_Id) return Entity_Id;\n    --  Utility function to return the Ada entity of the package enclosing\n-   --  the entity E, if any. Returns Empty if no enclosing package.\n+   --  the entity or node N, if any. Returns Empty if no enclosing package.\n \n    function Enclosing_Package_Or_Subprogram (E : Entity_Id) return Entity_Id;\n    --  Returns the entity of the package or subprogram enclosing E, if any."}]}