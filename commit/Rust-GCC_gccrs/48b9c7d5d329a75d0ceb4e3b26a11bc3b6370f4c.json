{"sha": "48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c", "node_id": "C_kwDOANBUbNoAKDQ4YjljN2Q1ZDMyOWE3NWQwY2ViNGUzYjI2YTExYmMzYjYzNzBmNGM", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2022-09-05T13:31:32Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2022-09-05T13:37:13Z"}, "message": "aarch64: Suggest an -mcpu option when user passes CPU name to -march\n\nThis small patch helps users who confuse -march and -mcpu on AArch64.\nSometimes users pass -march with a CPU name, where they most likely wanted to\nuse -mcpu, which would select the right architecture features *and* tune for\ntheir desired CPU. Currently we'll just error out with an unkown architecture\nmessage and list the valid architecture options.\nWith this patch we check if their string matches a known CPU and suggest they\nuse an -mcpu option instead.\n\nSo compiling with -march=neoverse-n1 will now give the error:\ncc1: error: unknown value 'neoverse-n1' for '-march'\ncc1: note: valid arguments are: armv8-a armv8.1-a armv8.2-a armv8.3-a armv8.4-a armv8.5-a armv8.6-a armv8.7-a armv8.8-a armv8-r armv9-a\ncc1: note: did you mean '-mcpu=neoverse-n1'?\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64.cc (aarch64_validate_march): Check if invalid arch\n\tstring is a valid -mcpu string and emit hint.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/spellcheck_10.c: New test.", "tree": {"sha": "367d6682b6909787adca1294a3da6dd990f652b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/367d6682b6909787adca1294a3da6dd990f652b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77e8e405a770bc40b304cfa55081575cf88f2b31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77e8e405a770bc40b304cfa55081575cf88f2b31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77e8e405a770bc40b304cfa55081575cf88f2b31"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "566763ce50c42f61fe1b9c80f7d5392c52dc1db9", "filename": "gcc/config/aarch64/aarch64.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.cc?ref=48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c", "patch": "@@ -18019,6 +18019,11 @@ aarch64_validate_march (const char *str, const struct processor **res,\n       case AARCH64_PARSE_INVALID_ARG:\n \terror (\"unknown value %qs for %<-march%>\", str);\n \taarch64_print_hint_for_arch (str);\n+\t/* A common user error is confusing -march and -mcpu.\n+\t   If the -march string matches a known CPU suggest -mcpu.  */\n+\tparse_res = aarch64_parse_cpu (str, res, isa_flags, &invalid_extension);\n+\tif (parse_res == AARCH64_PARSE_OK)\n+\t  inform (input_location, \"did you mean %<-mcpu=%s%>?\", str);\n \tbreak;\n       case AARCH64_PARSE_INVALID_FEATURE:\n \terror (\"invalid feature modifier %qs in %<-march=%s%>\","}, {"sha": "08540c9c25bc2a460794f9a93c8ea7ceafaad38c", "filename": "gcc/testsuite/gcc.target/aarch64/spellcheck_10.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fspellcheck_10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fspellcheck_10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fspellcheck_10.c?ref=48b9c7d5d329a75d0ceb4e3b26a11bc3b6370f4c", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-march=*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-mcpu=*\" } { \"\" } } */\n+/* { dg-options \"-march=neoverse-n1\" } */\n+\n+void\n+foo ()\n+{\n+}\n+\n+/* { dg-error \"unknown value .neoverse-n1. for .-march.\"  \"\" { target *-*-* } 0 } */\n+/* { dg-message \"valid arguments are: \\[^\\n\\r]*\"  \"\" { target *-*-* } 0 } */\n+/* { dg-message \"did you mean .-mcpu=neoverse-n1.?\"  \"\" { target *-*-* } 0 } */"}]}