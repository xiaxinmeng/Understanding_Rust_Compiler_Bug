{"sha": "c2f4dc5810517f3c5465ecea4ce3820f655a0375", "node_id": "C_kwDOANBUbNoAKGMyZjRkYzU4MTA1MTdmM2M1NDY1ZWNlYTRjZTM4MjBmNjU1YTAzNzU", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-08T02:34:30Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T06:44:50Z"}, "message": "RISC-V: Add vsbc.vvm/vsbc.vxm C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vsbc-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc-4.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vvm-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vvm-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vvm-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vvm_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vvm_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vvm_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_rv32-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_rv32-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_rv32-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_rv64-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv32-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv32-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv32-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv64-3.c: New test.", "tree": {"sha": "2036ae839bff17378595c0a1ac81372af0886aeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2036ae839bff17378595c0a1ac81372af0886aeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2f4dc5810517f3c5465ecea4ce3820f655a0375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f4dc5810517f3c5465ecea4ce3820f655a0375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2f4dc5810517f3c5465ecea4ce3820f655a0375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f4dc5810517f3c5465ecea4ce3820f655a0375/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5e7450a1734f01b6453c2c56c3278954825a905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e7450a1734f01b6453c2c56c3278954825a905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e7450a1734f01b6453c2c56c3278954825a905"}], "stats": {"total": 5476, "additions": 5476, "deletions": 0}, "files": [{"sha": "0ec5ac1f716ad5e4366d0477870063f64ed1cffe", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-1.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3\" } */\n+#include \"riscv_vector.h\"\n+\n+void f1 (void * in, void *out)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vint32m1_t v3 = __riscv_vsbc_vvm_i32m1 (v2, v2, mask, 4);\n+  vint32m1_t v4 = __riscv_vsbc_vvm_i32m1_tu (v3, v2, v2, mask, 4);\n+  __riscv_vse32_v_i32m1 (out, v4, 4);\n+}\n+\n+void f2 (void * in, void *out)\n+{\n+  vbool32_t mask = *(vbool32_t*)in;\n+  asm volatile (\"\":::\"memory\");\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tumu (mask, v, in, 4);\n+  vint32m1_t v3 = __riscv_vsbc_vvm_i32m1 (v2, v2, mask, 4);\n+  vint32m1_t v4 = __riscv_vsbc_vvm_i32m1_tu (v3, v2, v2, mask, 4);\n+  __riscv_vse32_v_i32m1 (out, v4, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 4 } } */\n+/* { dg-final { scan-assembler-not {vmv} } } */"}, {"sha": "02fd17edbf5989883f181d1aac78d33f31cd9c99", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc-2.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-2.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,56 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3\" } */\n+#include \"riscv_vector.h\"\n+\n+void f0 (void * in, void *out, int32_t x)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vint32m1_t v3 = __riscv_vsbc_vxm_i32m1 (v2, 0, mask, 4);\n+  vint32m1_t v4 = __riscv_vsbc_vxm_i32m1_tu (v3, v2, 0, mask, 4);\n+  __riscv_vse32_v_i32m1 (out, v4, 4);\n+}\n+\n+void f1 (void * in, void *out, int32_t x)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vint32m1_t v3 = __riscv_vsbc_vxm_i32m1 (v2, -16, mask, 4);\n+  vint32m1_t v4 = __riscv_vsbc_vxm_i32m1_tu (v3, v2, -16, mask, 4);\n+  __riscv_vse32_v_i32m1 (out, v4, 4);\n+}\n+\n+void f2 (void * in, void *out, int32_t x)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vint32m1_t v3 = __riscv_vsbc_vxm_i32m1 (v2, 15, mask, 4);\n+  vint32m1_t v4 = __riscv_vsbc_vxm_i32m1_tu (v3, v2, 15, mask, 4);\n+  __riscv_vse32_v_i32m1 (out, v4, 4);\n+}\n+\n+void f3 (void * in, void *out, int32_t x)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vint32m1_t v3 = __riscv_vsbc_vxm_i32m1 (v2, -17, mask, 4);\n+  vint32m1_t v4 = __riscv_vsbc_vxm_i32m1_tu (v3, v2, -17, mask, 4);\n+  __riscv_vse32_v_i32m1 (out, v4, 4);\n+}\n+\n+void f4 (void * in, void *out, int32_t x)\n+{\n+  vbool32_t mask = __riscv_vlm_v_b32 (in + 100, 4);\n+  vint32m1_t v = __riscv_vle32_v_i32m1 (in, 4);\n+  vint32m1_t v2 = __riscv_vle32_v_i32m1_tu (v, in, 4);\n+  vint32m1_t v3 = __riscv_vsbc_vxm_i32m1 (v2, 16, mask, 4);\n+  vint32m1_t v4 = __riscv_vsbc_vxm_i32m1_tu (v3, v2, 16, mask, 4);\n+  __riscv_vse32_v_i32m1 (out, v4, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*zero,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "85feeb93a59140b9bc47c773b29f3d2c2c318cb1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc-3.c", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-3.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,77 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f0 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 0, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 0, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f1 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 15, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 15, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f2 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, -17, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, -17, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f3 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 16, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 16, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f4 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 0xAAAAAAAA, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 0xAAAAAAAA, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f5 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 0xAAAAAAAAAAAAAAAA, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 0xAAAAAAAAAAAAAAAA, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f6 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, x, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, x, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*zero,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 12 } } */"}, {"sha": "2f6c64db0b61e5d78582e755d82c6e20b5bc37fe", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc-4.c", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc-4.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,78 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32 -O3\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+void f0 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 0, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 0, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f1 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 15, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 15, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f2 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, -17, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, -17, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f3 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 16, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 16, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f4 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 0xAAAAAAA, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 0xAAAAAAA, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f5 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, 0xAAAAAAAAAAAAAAAA, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, 0xAAAAAAAAAAAAAAAA, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+void f6 (void * in, void *out, int64_t x, int n)\n+{\n+  vbool64_t mask = __riscv_vlm_v_b64 (in + 100, 4);\n+  vint64m1_t v = __riscv_vle64_v_i64m1 (in + 1, 4);\n+  vint64m1_t v2 = __riscv_vle64_v_i64m1_tu (v, in + 2, 4);\n+  vint64m1_t v3 = __riscv_vsbc_vxm_i64m1 (v2, x, mask, 4);\n+  vint64m1_t v4 = __riscv_vsbc_vxm_i64m1 (v3, x, mask, 4);\n+  __riscv_vse64_v_i64m1 (out + 2, v4, 4);\n+}\n+\n+/* { dg-final { scan-assembler-times {vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*zero,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 8 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 4 } } */"}, {"sha": "6cc2acbcd787eabfd870dd1b2bf3f38b515e4de9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vvm-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-1.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vvm_i8mf8(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vvm_i8mf4(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vvm_i8mf2(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vvm_i8m1(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vvm_i8m2(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vvm_i8m4(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vvm_i8m8(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vvm_i16mf4(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vvm_i16mf2(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vvm_i16m1(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vvm_i16m2(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vvm_i16m4(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vvm_i16m8(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vvm_i32mf2(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vvm_i32m1(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vvm_i32m2(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vvm_i32m4(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vvm_i32m8(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vvm_i64m1(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vvm_i64m2(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vvm_i64m4(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vvm_i64m8(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vvm_u8mf8(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vvm_u8mf4(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vvm_u8mf2(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vvm_u8m1(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vvm_u8m2(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vvm_u8m4(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vvm_u8m8(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vvm_u16mf4(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vvm_u16mf2(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vvm_u16m1(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vvm_u16m2(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vvm_u16m4(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vvm_u16m8(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vvm_u32mf2(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vvm_u32m1(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vvm_u32m2(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vvm_u32m4(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vvm_u32m8(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vvm_u64m1(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vvm_u64m2(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vvm_u64m4(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vvm_u64m8(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "b9efdf9632e0af33038521b99a5f506c968d1a96", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vvm-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-2.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vvm_i8mf8(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vvm_i8mf4(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vvm_i8mf2(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vvm_i8m1(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vvm_i8m2(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vvm_i8m4(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vvm_i8m8(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vvm_i16mf4(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vvm_i16mf2(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vvm_i16m1(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vvm_i16m2(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vvm_i16m4(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vvm_i16m8(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vvm_i32mf2(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vvm_i32m1(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vvm_i32m2(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vvm_i32m4(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vvm_i32m8(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vvm_i64m1(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vvm_i64m2(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vvm_i64m4(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vvm_i64m8(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vvm_u8mf8(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vvm_u8mf4(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vvm_u8mf2(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vvm_u8m1(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vvm_u8m2(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vvm_u8m4(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vvm_u8m8(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vvm_u16mf4(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vvm_u16mf2(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vvm_u16m1(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vvm_u16m2(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vvm_u16m4(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vvm_u16m8(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vvm_u32mf2(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vvm_u32m1(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vvm_u32m2(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vvm_u32m4(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vvm_u32m8(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vvm_u64m1(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vvm_u64m2(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vvm_u64m4(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vvm_u64m8(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m8(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "1dbb7b90c53ec5c3d72f21862048b9edf8d91708", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vvm-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm-3.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vvm_i8mf8(vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vvm_i8mf4(vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vvm_i8mf2(vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vvm_i8m1(vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vvm_i8m2(vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vvm_i8m4(vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vvm_i8m8(vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vvm_i16mf4(vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vvm_i16mf2(vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vvm_i16m1(vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vvm_i16m2(vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vvm_i16m4(vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vvm_i16m8(vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vvm_i32mf2(vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vvm_i32m1(vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vvm_i32m2(vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vvm_i32m4(vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vvm_i32m8(vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vvm_i64m1(vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vvm_i64m2(vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vvm_i64m4(vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vvm_i64m8(vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vvm_u8mf8(vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vvm_u8mf4(vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vvm_u8mf2(vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vvm_u8m1(vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vvm_u8m2(vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vvm_u8m4(vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vvm_u8m8(vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vvm_u16mf4(vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vvm_u16mf2(vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vvm_u16m1(vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vvm_u16m2(vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vvm_u16m4(vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vvm_u16m8(vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vvm_u32mf2(vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vvm_u32m1(vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vvm_u32m2(vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vvm_u32m4(vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vvm_u32m8(vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vvm_u64m1(vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vvm_u64m2(vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vvm_u64m4(vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vvm_u64m8(vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m8(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "f45a90a27203dd1d2a9e296b49fbe42c4d3da36d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vvm_tu-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-1.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vvm_i8mf8_tu(vint8mf8_t maskedoff,vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vvm_i8mf4_tu(vint8mf4_t maskedoff,vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vvm_i8mf2_tu(vint8mf2_t maskedoff,vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vvm_i8m1_tu(vint8m1_t maskedoff,vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vvm_i8m2_tu(vint8m2_t maskedoff,vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vvm_i8m4_tu(vint8m4_t maskedoff,vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vvm_i8m8_tu(vint8m8_t maskedoff,vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vvm_i16mf4_tu(vint16mf4_t maskedoff,vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vvm_i16mf2_tu(vint16mf2_t maskedoff,vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vvm_i16m1_tu(vint16m1_t maskedoff,vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vvm_i16m2_tu(vint16m2_t maskedoff,vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vvm_i16m4_tu(vint16m4_t maskedoff,vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vvm_i16m8_tu(vint16m8_t maskedoff,vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vvm_i32mf2_tu(vint32mf2_t maskedoff,vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vvm_i32m1_tu(vint32m1_t maskedoff,vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vvm_i32m2_tu(vint32m2_t maskedoff,vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vvm_i32m4_tu(vint32m4_t maskedoff,vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vvm_i32m8_tu(vint32m8_t maskedoff,vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vvm_i64m1_tu(vint64m1_t maskedoff,vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vvm_i64m2_tu(vint64m2_t maskedoff,vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vvm_i64m4_tu(vint64m4_t maskedoff,vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vvm_i64m8_tu(vint64m8_t maskedoff,vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vvm_u8mf8_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vvm_u8mf4_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vvm_u8mf2_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vvm_u8m1_tu(vuint8m1_t maskedoff,vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vvm_u8m2_tu(vuint8m2_t maskedoff,vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vvm_u8m4_tu(vuint8m4_t maskedoff,vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vvm_u8m8_tu(vuint8m8_t maskedoff,vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vvm_u16mf4_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vvm_u16mf2_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vvm_u16m1_tu(vuint16m1_t maskedoff,vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vvm_u16m2_tu(vuint16m2_t maskedoff,vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vvm_u16m4_tu(vuint16m4_t maskedoff,vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vvm_u16m8_tu(vuint16m8_t maskedoff,vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vvm_u32mf2_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vvm_u32m1_tu(vuint32m1_t maskedoff,vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vvm_u32m2_tu(vuint32m2_t maskedoff,vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vvm_u32m4_tu(vuint32m4_t maskedoff,vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vvm_u32m8_tu(vuint32m8_t maskedoff,vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vvm_u64m1_tu(vuint64m1_t maskedoff,vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vvm_u64m2_tu(vuint64m2_t maskedoff,vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vvm_u64m4_tu(vuint64m4_t maskedoff,vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vvm_u64m8_tu(vuint64m8_t maskedoff,vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "e646d3365444a42d83f81835263ed6c73314a22e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vvm_tu-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-2.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vvm_i8mf8_tu(vint8mf8_t maskedoff,vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vvm_i8mf4_tu(vint8mf4_t maskedoff,vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vvm_i8mf2_tu(vint8mf2_t maskedoff,vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vvm_i8m1_tu(vint8m1_t maskedoff,vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vvm_i8m2_tu(vint8m2_t maskedoff,vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vvm_i8m4_tu(vint8m4_t maskedoff,vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vvm_i8m8_tu(vint8m8_t maskedoff,vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vvm_i16mf4_tu(vint16mf4_t maskedoff,vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vvm_i16mf2_tu(vint16mf2_t maskedoff,vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vvm_i16m1_tu(vint16m1_t maskedoff,vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vvm_i16m2_tu(vint16m2_t maskedoff,vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vvm_i16m4_tu(vint16m4_t maskedoff,vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vvm_i16m8_tu(vint16m8_t maskedoff,vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vvm_i32mf2_tu(vint32mf2_t maskedoff,vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vvm_i32m1_tu(vint32m1_t maskedoff,vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vvm_i32m2_tu(vint32m2_t maskedoff,vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vvm_i32m4_tu(vint32m4_t maskedoff,vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vvm_i32m8_tu(vint32m8_t maskedoff,vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vvm_i64m1_tu(vint64m1_t maskedoff,vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vvm_i64m2_tu(vint64m2_t maskedoff,vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vvm_i64m4_tu(vint64m4_t maskedoff,vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vvm_i64m8_tu(vint64m8_t maskedoff,vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vvm_u8mf8_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vvm_u8mf4_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vvm_u8mf2_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vvm_u8m1_tu(vuint8m1_t maskedoff,vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vvm_u8m2_tu(vuint8m2_t maskedoff,vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vvm_u8m4_tu(vuint8m4_t maskedoff,vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vvm_u8m8_tu(vuint8m8_t maskedoff,vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vvm_u16mf4_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vvm_u16mf2_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vvm_u16m1_tu(vuint16m1_t maskedoff,vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vvm_u16m2_tu(vuint16m2_t maskedoff,vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vvm_u16m4_tu(vuint16m4_t maskedoff,vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vvm_u16m8_tu(vuint16m8_t maskedoff,vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vvm_u32mf2_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vvm_u32m1_tu(vuint32m1_t maskedoff,vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vvm_u32m2_tu(vuint32m2_t maskedoff,vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vvm_u32m4_tu(vuint32m4_t maskedoff,vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vvm_u32m8_tu(vuint32m8_t maskedoff,vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vvm_u64m1_tu(vuint64m1_t maskedoff,vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vvm_u64m2_tu(vuint64m2_t maskedoff,vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vvm_u64m4_tu(vuint64m4_t maskedoff,vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vvm_u64m8_tu(vuint64m8_t maskedoff,vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "6bf79680fc6464be6e2f417ee1d34a6a860014fd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vvm_tu-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vvm_tu-3.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vvm_i8mf8_tu(vint8mf8_t maskedoff,vint8mf8_t op1,vint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vvm_i8mf4_tu(vint8mf4_t maskedoff,vint8mf4_t op1,vint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vvm_i8mf2_tu(vint8mf2_t maskedoff,vint8mf2_t op1,vint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vvm_i8m1_tu(vint8m1_t maskedoff,vint8m1_t op1,vint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vvm_i8m2_tu(vint8m2_t maskedoff,vint8m2_t op1,vint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vvm_i8m4_tu(vint8m4_t maskedoff,vint8m4_t op1,vint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vvm_i8m8_tu(vint8m8_t maskedoff,vint8m8_t op1,vint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i8m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vvm_i16mf4_tu(vint16mf4_t maskedoff,vint16mf4_t op1,vint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vvm_i16mf2_tu(vint16mf2_t maskedoff,vint16mf2_t op1,vint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vvm_i16m1_tu(vint16m1_t maskedoff,vint16m1_t op1,vint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vvm_i16m2_tu(vint16m2_t maskedoff,vint16m2_t op1,vint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vvm_i16m4_tu(vint16m4_t maskedoff,vint16m4_t op1,vint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vvm_i16m8_tu(vint16m8_t maskedoff,vint16m8_t op1,vint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i16m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vvm_i32mf2_tu(vint32mf2_t maskedoff,vint32mf2_t op1,vint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vvm_i32m1_tu(vint32m1_t maskedoff,vint32m1_t op1,vint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vvm_i32m2_tu(vint32m2_t maskedoff,vint32m2_t op1,vint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vvm_i32m4_tu(vint32m4_t maskedoff,vint32m4_t op1,vint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vvm_i32m8_tu(vint32m8_t maskedoff,vint32m8_t op1,vint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i32m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vvm_i64m1_tu(vint64m1_t maskedoff,vint64m1_t op1,vint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vvm_i64m2_tu(vint64m2_t maskedoff,vint64m2_t op1,vint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vvm_i64m4_tu(vint64m4_t maskedoff,vint64m4_t op1,vint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vvm_i64m8_tu(vint64m8_t maskedoff,vint64m8_t op1,vint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_i64m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vvm_u8mf8_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,vuint8mf8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vvm_u8mf4_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,vuint8mf4_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vvm_u8mf2_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,vuint8mf2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vvm_u8m1_tu(vuint8m1_t maskedoff,vuint8m1_t op1,vuint8m1_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vvm_u8m2_tu(vuint8m2_t maskedoff,vuint8m2_t op1,vuint8m2_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vvm_u8m4_tu(vuint8m4_t maskedoff,vuint8m4_t op1,vuint8m4_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vvm_u8m8_tu(vuint8m8_t maskedoff,vuint8m8_t op1,vuint8m8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u8m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vvm_u16mf4_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,vuint16mf4_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vvm_u16mf2_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,vuint16mf2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vvm_u16m1_tu(vuint16m1_t maskedoff,vuint16m1_t op1,vuint16m1_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vvm_u16m2_tu(vuint16m2_t maskedoff,vuint16m2_t op1,vuint16m2_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vvm_u16m4_tu(vuint16m4_t maskedoff,vuint16m4_t op1,vuint16m4_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vvm_u16m8_tu(vuint16m8_t maskedoff,vuint16m8_t op1,vuint16m8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u16m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vvm_u32mf2_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,vuint32mf2_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vvm_u32m1_tu(vuint32m1_t maskedoff,vuint32m1_t op1,vuint32m1_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vvm_u32m2_tu(vuint32m2_t maskedoff,vuint32m2_t op1,vuint32m2_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vvm_u32m4_tu(vuint32m4_t maskedoff,vuint32m4_t op1,vuint32m4_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vvm_u32m8_tu(vuint32m8_t maskedoff,vuint32m8_t op1,vuint32m8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u32m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vvm_u64m1_tu(vuint64m1_t maskedoff,vuint64m1_t op1,vuint64m1_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vvm_u64m2_tu(vuint64m2_t maskedoff,vuint64m2_t op1,vuint64m2_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vvm_u64m4_tu(vuint64m4_t maskedoff,vuint64m4_t op1,vuint64m4_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vvm_u64m8_tu(vuint64m8_t maskedoff,vuint64m8_t op1,vuint64m8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vvm_u64m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "327dcd98c63916d51854c5ae8fc20ba9f8739ffb", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_rv32-1.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-1.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "1a2cdac3de489fd408f2e8a86b888e9734b851db", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_rv32-2.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-2.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "113857fe89eee9ad69970850fd69e3c6d848d6fc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_rv32-3.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv32-3.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "7fab8c30cf187cdfe65d9da98745c56cd844fe1e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-1.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4(op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8(op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "6603e2a1746ef80f208f389771258b58f916603c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-2.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4(op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8(op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "4a1d42d71e445c197f6c3d1712f5e110c0da257b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_rv64-3.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8(vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4(vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2(vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1(vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2(vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4(vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8(vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4(vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2(vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1(vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2(vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4(vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8(vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2(vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1(vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2(vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4(vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8(vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1(vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2(vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4(vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8(vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8(vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4(vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2(vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1(vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2(vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4(vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8(vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4(vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2(vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1(vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2(vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4(vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8(vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2(vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1(vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2(vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4(vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8(vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1(vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2(vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4(vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4(op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8(vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8(op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "11adfa8a7ea3e95ac2ac273239f11adf3c948148", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv32-1.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-1.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "72ce96b7600fe849ad504104a6d81d38ab96c382", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv32-2.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-2.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "501101a7c2dc184f6f794160d855e9d73e1a41e5", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv32-3.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv32-3.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsbc\\.vvm\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 8 } } */"}, {"sha": "5822314efa3e4b554b736732cbc5862e4cdcb665", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-1.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8_tu(maskedoff,op1,op2,borrowin,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "a8894fd484db39466f9acf129e43598a4e70a6b4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-2.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8_tu(maskedoff,op1,op2,borrowin,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "4e17ef285a2ad998ac7f9717358cc0b4604cbf4e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vsbc_vxm_tu_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2f4dc5810517f3c5465ecea4ce3820f655a0375/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvsbc_vxm_tu_rv64-3.c?ref=c2f4dc5810517f3c5465ecea4ce3820f655a0375", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vsbc_vxm_i8mf8_tu(vint8mf8_t maskedoff,vint8mf8_t op1,int8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vsbc_vxm_i8mf4_tu(vint8mf4_t maskedoff,vint8mf4_t op1,int8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vsbc_vxm_i8mf2_tu(vint8mf2_t maskedoff,vint8mf2_t op1,int8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vsbc_vxm_i8m1_tu(vint8m1_t maskedoff,vint8m1_t op1,int8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vsbc_vxm_i8m2_tu(vint8m2_t maskedoff,vint8m2_t op1,int8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vsbc_vxm_i8m4_tu(vint8m4_t maskedoff,vint8m4_t op1,int8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vsbc_vxm_i8m8_tu(vint8m8_t maskedoff,vint8m8_t op1,int8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i8m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vsbc_vxm_i16mf4_tu(vint16mf4_t maskedoff,vint16mf4_t op1,int16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vsbc_vxm_i16mf2_tu(vint16mf2_t maskedoff,vint16mf2_t op1,int16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vsbc_vxm_i16m1_tu(vint16m1_t maskedoff,vint16m1_t op1,int16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vsbc_vxm_i16m2_tu(vint16m2_t maskedoff,vint16m2_t op1,int16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vsbc_vxm_i16m4_tu(vint16m4_t maskedoff,vint16m4_t op1,int16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vsbc_vxm_i16m8_tu(vint16m8_t maskedoff,vint16m8_t op1,int16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i16m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vsbc_vxm_i32mf2_tu(vint32mf2_t maskedoff,vint32mf2_t op1,int32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vsbc_vxm_i32m1_tu(vint32m1_t maskedoff,vint32m1_t op1,int32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vsbc_vxm_i32m2_tu(vint32m2_t maskedoff,vint32m2_t op1,int32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vsbc_vxm_i32m4_tu(vint32m4_t maskedoff,vint32m4_t op1,int32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vsbc_vxm_i32m8_tu(vint32m8_t maskedoff,vint32m8_t op1,int32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i32m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vsbc_vxm_i64m1_tu(vint64m1_t maskedoff,vint64m1_t op1,int64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vsbc_vxm_i64m2_tu(vint64m2_t maskedoff,vint64m2_t op1,int64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vsbc_vxm_i64m4_tu(vint64m4_t maskedoff,vint64m4_t op1,int64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vsbc_vxm_i64m8_tu(vint64m8_t maskedoff,vint64m8_t op1,int64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_i64m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vsbc_vxm_u8mf8_tu(vuint8mf8_t maskedoff,vuint8mf8_t op1,uint8_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vsbc_vxm_u8mf4_tu(vuint8mf4_t maskedoff,vuint8mf4_t op1,uint8_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vsbc_vxm_u8mf2_tu(vuint8mf2_t maskedoff,vuint8mf2_t op1,uint8_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vsbc_vxm_u8m1_tu(vuint8m1_t maskedoff,vuint8m1_t op1,uint8_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vsbc_vxm_u8m2_tu(vuint8m2_t maskedoff,vuint8m2_t op1,uint8_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vsbc_vxm_u8m4_tu(vuint8m4_t maskedoff,vuint8m4_t op1,uint8_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vsbc_vxm_u8m8_tu(vuint8m8_t maskedoff,vuint8m8_t op1,uint8_t op2,vbool1_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u8m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vsbc_vxm_u16mf4_tu(vuint16mf4_t maskedoff,vuint16mf4_t op1,uint16_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vsbc_vxm_u16mf2_tu(vuint16mf2_t maskedoff,vuint16mf2_t op1,uint16_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vsbc_vxm_u16m1_tu(vuint16m1_t maskedoff,vuint16m1_t op1,uint16_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vsbc_vxm_u16m2_tu(vuint16m2_t maskedoff,vuint16m2_t op1,uint16_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vsbc_vxm_u16m4_tu(vuint16m4_t maskedoff,vuint16m4_t op1,uint16_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vsbc_vxm_u16m8_tu(vuint16m8_t maskedoff,vuint16m8_t op1,uint16_t op2,vbool2_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u16m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vsbc_vxm_u32mf2_tu(vuint32mf2_t maskedoff,vuint32mf2_t op1,uint32_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32mf2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vsbc_vxm_u32m1_tu(vuint32m1_t maskedoff,vuint32m1_t op1,uint32_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vsbc_vxm_u32m2_tu(vuint32m2_t maskedoff,vuint32m2_t op1,uint32_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vsbc_vxm_u32m4_tu(vuint32m4_t maskedoff,vuint32m4_t op1,uint32_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vsbc_vxm_u32m8_tu(vuint32m8_t maskedoff,vuint32m8_t op1,uint32_t op2,vbool4_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u32m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vsbc_vxm_u64m1_tu(vuint64m1_t maskedoff,vuint64m1_t op1,uint64_t op2,vbool64_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m1_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vsbc_vxm_u64m2_tu(vuint64m2_t maskedoff,vuint64m2_t op1,uint64_t op2,vbool32_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m2_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vsbc_vxm_u64m4_tu(vuint64m4_t maskedoff,vuint64m4_t op1,uint64_t op2,vbool16_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m4_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vsbc_vxm_u64m8_tu(vuint64m8_t maskedoff,vuint64m8_t op1,uint64_t op2,vbool8_t borrowin,size_t vl)\n+{\n+    return __riscv_vsbc_vxm_u64m8_tu(maskedoff,op1,op2,borrowin,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vsbc\\.vxm\\s+v[0-9]+,\\s*v[0-9]+,\\s*[a-x0-9]+,\\s*v[0-9]+} 2 } } */"}]}