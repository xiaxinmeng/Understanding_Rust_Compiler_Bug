{"sha": "06ec22b7f627bf36fefeb643fa62313bce410b10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZlYzIyYjdmNjI3YmYzNmZlZmViNjQzZmE2MjMxM2JjZTQxMGIxMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-04-19T18:50:01Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-04-19T18:50:01Z"}, "message": "Improve constexpr handling of other loop forms.\n\n\t* constexpr.c (breaks): Handle EXIT_EXPR.\n\t(cxx_eval_loop_expr): Handle COMPOUND_EXPR body.\n\t(cxx_eval_constant_expression): Handle EXIT_EXPR, improve handling\n\tof COMPOUND_EXPR.\n\nFrom-SVN: r235218", "tree": {"sha": "1336ed93e5a4de77dfaa2b17b0c13904ac27463e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1336ed93e5a4de77dfaa2b17b0c13904ac27463e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06ec22b7f627bf36fefeb643fa62313bce410b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ec22b7f627bf36fefeb643fa62313bce410b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ec22b7f627bf36fefeb643fa62313bce410b10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ec22b7f627bf36fefeb643fa62313bce410b10/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f937929e9b6273bf9e9ec3168b8615fc180f5e1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f937929e9b6273bf9e9ec3168b8615fc180f5e1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f937929e9b6273bf9e9ec3168b8615fc180f5e1f"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "a2509af865b9cbf6233b4c25f5c2059d5950c91b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ec22b7f627bf36fefeb643fa62313bce410b10/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ec22b7f627bf36fefeb643fa62313bce410b10/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=06ec22b7f627bf36fefeb643fa62313bce410b10", "patch": "@@ -1,5 +1,10 @@\n 2016-04-19  Jason Merrill  <jason@redhat.com>\n \n+\t* constexpr.c (breaks): Handle EXIT_EXPR.\n+\t(cxx_eval_loop_expr): Handle COMPOUND_EXPR body.\n+\t(cxx_eval_constant_expression): Handle EXIT_EXPR, improve handling\n+\tof COMPOUND_EXPR.\n+\n \tPR c++/68206\n \tPR c++/68530\n \t* constexpr.c (potential_constant_expression_1): Handle LOOP_EXPR"}, {"sha": "41f0b5c00eece9fbe0e8bd0dc87665625b8332be", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ec22b7f627bf36fefeb643fa62313bce410b10/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ec22b7f627bf36fefeb643fa62313bce410b10/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=06ec22b7f627bf36fefeb643fa62313bce410b10", "patch": "@@ -3241,8 +3241,9 @@ static bool\n breaks (tree *jump_target)\n {\n   return *jump_target\n-    && TREE_CODE (*jump_target) == LABEL_DECL\n-    && LABEL_DECL_BREAK (*jump_target);\n+    && ((TREE_CODE (*jump_target) == LABEL_DECL\n+\t && LABEL_DECL_BREAK (*jump_target))\n+\t|| TREE_CODE (*jump_target) == EXIT_EXPR);\n }\n \n static bool\n@@ -3358,8 +3359,8 @@ cxx_eval_loop_expr (const constexpr_ctx *ctx, tree t,\n       hash_set<tree> save_exprs;\n       new_ctx.save_exprs = &save_exprs;\n \n-      cxx_eval_statement_list (&new_ctx, body,\n-\t\t\t       non_constant_p, overflow_p, jump_target);\n+      cxx_eval_constant_expression (&new_ctx, body, /*lval*/false,\n+\t\t\t\t    non_constant_p, overflow_p, jump_target);\n \n       /* Forget saved values of SAVE_EXPRs.  */\n       for (hash_set<tree>::iterator iter = save_exprs.begin();\n@@ -3750,6 +3751,8 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t    cxx_eval_constant_expression (ctx, op0,\n \t\t\t\t\t  true, non_constant_p, overflow_p,\n \t\t\t\t\t  jump_target);\n+\t    if (*non_constant_p)\n+\t      return t;\n \t    op1 = TREE_OPERAND (t, 1);\n \t    r = cxx_eval_constant_expression (ctx, op1,\n \t\t\t\t\t      lval, non_constant_p, overflow_p,\n@@ -4015,6 +4018,17 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t}\n       break;\n \n+    case EXIT_EXPR:\n+      {\n+\ttree cond = TREE_OPERAND (t, 0);\n+\tcond = cxx_eval_constant_expression (ctx, cond, /*lval*/false,\n+\t\t\t\t\t     non_constant_p, overflow_p);\n+\tVERIFY_CONSTANT (cond);\n+\tif (integer_nonzerop (cond))\n+\t  *jump_target = t;\n+      }\n+      break;\n+\n     case GOTO_EXPR:\n       *jump_target = TREE_OPERAND (t, 0);\n       gcc_assert (breaks (jump_target) || continues (jump_target));"}]}