{"sha": "9e291a01a2ce6f17e591f5c7577fd82a4aa273e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUyOTFhMDFhMmNlNmYxN2U1OTFmNWM3NTc3ZmQ4MmE0YWEyNzNlMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-03-20T19:14:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-03-20T19:14:29Z"}, "message": "re PR c++/52510 (libitm/config/posix/rwlock.cc doesn't compile)\n\n\tPR c++/52510\n\t* decl.c (reshape_init_class): Handle repeated reshaping.\n\t* search.c (lookup_field_1): Add sanity check.\n\nFrom-SVN: r185587", "tree": {"sha": "fcc3d147d1d2d43c265217902c14c870832d75f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcc3d147d1d2d43c265217902c14c870832d75f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f78f04734698395409df0c244955109364a726d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78f04734698395409df0c244955109364a726d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78f04734698395409df0c244955109364a726d7"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "5fbf3f57a45f1f2a7d31636e50102760f27837bd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e291a01a2ce6f17e591f5c7577fd82a4aa273e1", "patch": "@@ -1,3 +1,9 @@\n+2012-03-20  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/52510\n+\t* decl.c (reshape_init_class): Handle repeated reshaping.\n+\t* search.c (lookup_field_1): Add sanity check.\n+\n 2012-03-19  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/14710"}, {"sha": "2b2a551740ec501b719e175ce4fb940cfa88cc6c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=9e291a01a2ce6f17e591f5c7577fd82a4aa273e1", "patch": "@@ -5110,7 +5110,11 @@ reshape_init_class (tree type, reshape_iter *d, bool first_initializer_p,\n \t      return error_mark_node;\n \t    }\n \n-\t  field = lookup_field_1 (type, d->cur->index, /*want_type=*/false);\n+\t  if (TREE_CODE (d->cur->index) == FIELD_DECL)\n+\t    /* We already reshaped this.  */\n+\t    gcc_assert (d->cur->index == field);\n+\t  else\n+\t    field = lookup_field_1 (type, d->cur->index, /*want_type=*/false);\n \n \t  if (!field || TREE_CODE (field) != FIELD_DECL)\n \t    {"}, {"sha": "bd1bc576429b5c476b92cbcdf38e768fd9b9ed34", "filename": "gcc/cp/search.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=9e291a01a2ce6f17e591f5c7577fd82a4aa273e1", "patch": "@@ -384,6 +384,8 @@ lookup_field_1 (tree type, tree name, bool want_type)\n {\n   tree field;\n \n+  gcc_assert (TREE_CODE (name) == IDENTIFIER_NODE);\n+\n   if (TREE_CODE (type) == TEMPLATE_TYPE_PARM\n       || TREE_CODE (type) == BOUND_TEMPLATE_TEMPLATE_PARM\n       || TREE_CODE (type) == TYPENAME_TYPE)"}, {"sha": "f86eb1944ea1095b4601c27a3bc948a58959143d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e291a01a2ce6f17e591f5c7577fd82a4aa273e1", "patch": "@@ -1,3 +1,8 @@\n+2012-03-20  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/52510\n+\t* g++.dg/cpp0x/initlist66.C: New.\n+\n 2012-03-20  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* gcc.target/avr/progmem.h (pgm_read_char): Define depending on"}, {"sha": "4fc162e10f587c14f9f4d6d5facf177e1d51573d", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist66.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist66.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e291a01a2ce6f17e591f5c7577fd82a4aa273e1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist66.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist66.C?ref=9e291a01a2ce6f17e591f5c7577fd82a4aa273e1", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/52510\n+// { dg-do compile { target c++11 } }\n+\n+typedef unsigned char uint8_t;\n+typedef unsigned short uint16_t;\n+typedef unsigned int uint32_t;\n+typedef unsigned long long uint64_t;\n+typedef uint64_t upad64_t;\n+\n+typedef struct _pthread_cond {\n+ struct {\n+  uint8_t __pthread_cond_flag[4];\n+  uint16_t __pthread_cond_type;\n+  uint16_t __pthread_cond_magic;\n+ } __pthread_cond_flags;\n+ upad64_t __pthread_cond_data;\n+} pthread_cond_t;\n+\n+class gtm_rwlock\n+{\n+  pthread_cond_t c_readers;\n+ public:\n+  gtm_rwlock();\n+};\n+\n+gtm_rwlock::gtm_rwlock()\n+  : c_readers ({{{0, 0, 0, 0}, 0, 0x4356}, 0})\n+{ }\n+"}]}