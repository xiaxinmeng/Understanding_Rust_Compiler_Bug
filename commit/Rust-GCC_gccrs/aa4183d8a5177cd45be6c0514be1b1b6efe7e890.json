{"sha": "aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0MTgzZDhhNTE3N2NkNDViZTZjMDUxNGJlMWIxYjZlZmU3ZTg5MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2006-11-07T09:11:08Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2006-11-07T09:11:08Z"}, "message": "decl.c (match_attr_spec, [...]): Unify gfc_notify_std message for GFC_STD_F2003.\n\nfortran/\n2006-11-06  Tobias Burnus  <burnus@net-b.de>\n\n       * decl.c (match_attr_spec, gfc_match_enum): Unify gfc_notify_std\n         message for GFC_STD_F2003.\n       * array.c (gfc_match_array_constructor): Unify gfc_notify_std\n         message for GFC_STD_F2003.\n       * io.c (check_io_constraints): Unify gfc_notify_std message for\n         GFC_STD_F2003.\n       * resolve.c (resolve_actual_arglist): Unify gfc_notify_std message\n         for GFC_STD_F2003.\n\ntestsuite/\n2006-11-06  Tobias Burnus  <burnus@net-b.de>\n\n       * gfortran.dg/io_constraints_2.f90: Adjust pattern\n         for matching error messages.\n       * gfortran.dg/specifics_3.f90: Adjust pattern\n         for matching error messages.\n\nFrom-SVN: r118542", "tree": {"sha": "1c82f6f58c7aefb56720a5f327ed2e062d9f672f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c82f6f58c7aefb56720a5f327ed2e062d9f672f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9519e677aa364957a00d6ac07be28efaac6de69f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9519e677aa364957a00d6ac07be28efaac6de69f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9519e677aa364957a00d6ac07be28efaac6de69f"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "5cec70a8ff0491f86c4404f4fca62a2f2dd11314", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "patch": "@@ -1,3 +1,14 @@\n+2006-11-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* decl.c (match_attr_spec, gfc_match_enum): Unify gfc_notify_std\n+\t  message for GFC_STD_F2003.\n+\t* array.c (gfc_match_array_constructor): Unify gfc_notify_std\n+\t  message for GFC_STD_F2003.\n+\t* io.c (check_io_constraints): Unify gfc_notify_std message for\n+\t  GFC_STD_F2003.\n+\t* resolve.c (resolve_actual_arglist): Unify gfc_notify_std message\n+\t  for GFC_STD_F2003.\n+\n 2006-11-06  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* intrinsic.texi: Added documentation for FTELL, GETLOG, and"}, {"sha": "ace828c1c2a6bc28c6b4c0a7cb91a882db4dcece", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "patch": "@@ -874,7 +874,7 @@ gfc_match_array_constructor (gfc_expr ** result)\n         return MATCH_NO;\n       else\n         {\n-          if (gfc_notify_std (GFC_STD_F2003, \"New in Fortran 2003: [...] \"\n+          if (gfc_notify_std (GFC_STD_F2003, \"Fortran 2003: [...] \"\n                               \"style array constructors at %C\") == FAILURE)\n             return MATCH_ERROR;\n           end_delim = \" ]\";"}, {"sha": "e326b94e8c8793327276222e596f31ec909be155", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "patch": "@@ -2191,8 +2191,8 @@ match_attr_spec (void)\n \t  if (d == DECL_ALLOCATABLE)\n \t    {\n \t      if (gfc_notify_std (GFC_STD_F2003, \n-\t\t\t\t   \"In the selected standard, the ALLOCATABLE \"\n-\t\t\t\t   \"attribute at %C is not allowed in a TYPE \"\n+\t\t\t\t   \"Fortran 2003: ALLOCATABLE \"\n+\t\t\t\t   \"attribute at %C in a TYPE \"\n \t\t\t\t   \"definition\") == FAILURE)         \n \t\t{\n \t\t  m = MATCH_ERROR;\n@@ -4143,7 +4143,7 @@ gfc_match_enum (void)\n     return m;\n \n   if (gfc_notify_std (GFC_STD_F2003, \n-\t\t      \"New in Fortran 2003: ENUM AND ENUMERATOR at %C\")\n+\t\t      \"Fortran 2003: ENUM AND ENUMERATOR at %C\")\n       == FAILURE)\n     return MATCH_ERROR;\n "}, {"sha": "3da0d2642a9b3a896be217865656767d69c16b54", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "patch": "@@ -2599,7 +2599,7 @@ if (condition) \\\n       if (dt->namelist != NULL)\n         {\n           if (gfc_notify_std(GFC_STD_F2003,\n-                         \"Internal file at %L is incompatible with namelist\",\n+                         \"Fortran 2003: Internal file at %L with namelist\",\n                          &expr->where) == FAILURE)\n             m = MATCH_ERROR;\n         }"}, {"sha": "02069156ab9f8c8c9463fe87fab9ec4928de8d87", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "patch": "@@ -888,7 +888,7 @@ resolve_actual_arglist (gfc_actual_arglist * arg)\n \t     function allowed as actual argument in F2003 and not allowed\n \t     in F95.  */\n \t    gfc_notify_std (GFC_STD_F2003, \"Fortran 2003: CHAR intrinsic \"\n-\t\t\t    \"allowed as actual argument at %L\", &e->where);\n+\t\t\t    \"as actual argument at %L\", &e->where);\n \n \t  if (sym->attr.contained && !sym->attr.use_assoc\n \t      && sym->ns->proc_name->attr.flavor != FL_MODULE)"}, {"sha": "b133c30ce6a63fc033e760e99d26313050e99b38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "patch": "@@ -1,3 +1,10 @@\n+2006-11-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/io_constraints_2.f90: Adjust pattern\n+\t  for matching error messages.\n+\t* gfortran.dg/specifics_3.f90: Adjust pattern\n+\t  for matching error messages.\n+\n 2006-11-06  Janis Johnson  <janis187@us.ibm.com\n \t    Bernhard Fischer  <aldot@gcc.gnu.org>\n "}, {"sha": "73c4979f2a9ce385163a93a762ce85c8fd838252", "filename": "gcc/testsuite/gfortran.dg/io_constraints_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fio_constraints_2.f90?ref=aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "patch": "@@ -40,7 +40,7 @@ end module global\n !\n ! Not allowed with internal unit\n !Was correctly picked up before patch.\n- write(buffer, NML=NL)                          !  { dg-error \"incompatible with namelist\" }\n+ write(buffer, NML=NL)                          !  { dg-error \"Internal file at \\\\(1\\\\) with namelist\" }\n !Was correctly picked up before patch.\n  write(buffer, fmt='(i6)', REC=10) a            !  { dg-error \"REC tag\" }\n  write(buffer, fmt='(i6)', END=10) a            !  { dg-error \"END tag\" }"}, {"sha": "7f5c427dd62a43754782db710ef91c0a4d467845", "filename": "gcc/testsuite/gfortran.dg/specifics_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4183d8a5177cd45be6c0514be1b1b6efe7e890/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fspecifics_3.f90?ref=aa4183d8a5177cd45be6c0514be1b1b6efe7e890", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n ! { dg-options \"-std=f95\" }\n   intrinsic char\n-  call foo(char) ! { dg-error \"Fortran 2003: CHAR intrinsic allowed as actual argument\" }\n+  call foo(char) ! { dg-error \"Fortran 2003: CHAR intrinsic as actual argument\" }\n   end"}]}