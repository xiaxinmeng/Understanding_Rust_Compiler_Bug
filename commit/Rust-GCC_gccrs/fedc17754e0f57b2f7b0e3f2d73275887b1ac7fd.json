{"sha": "fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVkYzE3NzU0ZTBmNTdiMmY3YjBlM2YyZDczMjc1ODg3YjFhYzdmZA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-03-30T09:11:19Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-03-30T09:11:19Z"}, "message": "combine.c (simplify_comparison): Use have_insn_for.\n\n2009-03-30  Paolo Bonzini  <bonzini@gnu.org>\n\n        * combine.c (simplify_comparison): Use have_insn_for.\n        * dojump.c (do_jump): Likewise.\n\nFrom-SVN: r145285", "tree": {"sha": "379b404a62228e3db7adc84f3a8d869fcd833ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/379b404a62228e3db7adc84f3a8d869fcd833ffa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65c5ae8b1d8c9f86dd398f0c0313598fb5172f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65c5ae8b1d8c9f86dd398f0c0313598fb5172f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65c5ae8b1d8c9f86dd398f0c0313598fb5172f02"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "72721e35f7349d2701f67e635e346ddc2dd4db1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd", "patch": "@@ -1,3 +1,8 @@\n+2009-03-30  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        * combine.c (simplify_comparison): Use have_insn_for.\n+        * dojump.c (do_jump): Likewise.\n+\n 2009-03-30  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* config/sparc/sparc.c (sparc_compare_emitted): Remove."}, {"sha": "3ce8a75ca2f7044dec64648b78ca64182b84fcec", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd", "patch": "@@ -10534,7 +10534,7 @@ simplify_comparison (enum rtx_code code, rtx *pop0, rtx *pop1)\n \t      && ((unsigned HOST_WIDE_INT) const_op\n \t\t  < (((unsigned HOST_WIDE_INT) 1\n \t\t      << (GET_MODE_BITSIZE (mode) - 1))))\n-\t      && optab_handler (cmp_optab, mode)->insn_code != CODE_FOR_nothing)\n+\t      && have_insn_for (COMPARE, mode))\n \t    {\n \t      op0 = XEXP (op0, 0);\n \t      continue;\n@@ -10615,7 +10615,7 @@ simplify_comparison (enum rtx_code code, rtx *pop0, rtx *pop1)\n \t      && (unsigned_comparison_p || equality_comparison_p)\n \t      && (GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT)\n \t      && ((unsigned HOST_WIDE_INT) const_op < GET_MODE_MASK (mode))\n-\t      && optab_handler (cmp_optab, mode)->insn_code != CODE_FOR_nothing)\n+\t      && have_insn_for (COMPARE, mode))\n \t    {\n \t      op0 = XEXP (op0, 0);\n \t      continue;"}, {"sha": "715e7373eeefc07ab767ae9e2a0915ed77de5238", "filename": "gcc/dojump.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=fedc17754e0f57b2f7b0e3f2d73275887b1ac7fd", "patch": "@@ -257,8 +257,7 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n         if (! SLOW_BYTE_ACCESS\n             && type != 0 && bitsize >= 0\n             && TYPE_PRECISION (type) < TYPE_PRECISION (TREE_TYPE (exp))\n-            && (optab_handler (cmp_optab, TYPE_MODE (type))->insn_code\n-\t\t!= CODE_FOR_nothing))\n+            && have_insn_for (COMPARE, TYPE_MODE (type)))\n           {\n             do_jump (fold_convert (type, exp), if_false_label, if_true_label);\n             break;\n@@ -499,8 +498,7 @@ do_jump (tree exp, rtx if_false_label, rtx if_true_label)\n           && (mode = mode_for_size (i + 1, MODE_INT, 0)) != BLKmode\n           && (type = lang_hooks.types.type_for_mode (mode, 1)) != 0\n           && TYPE_PRECISION (type) < TYPE_PRECISION (TREE_TYPE (exp))\n-          && (optab_handler (cmp_optab, TYPE_MODE (type))->insn_code\n-              != CODE_FOR_nothing))\n+          && have_insn_for (COMPARE, TYPE_MODE (type)))\n         {\n           do_jump (fold_convert (type, exp), if_false_label, if_true_label);\n           break;"}]}