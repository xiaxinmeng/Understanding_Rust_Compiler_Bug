{"sha": "636172b5bebed879968b5a5b3e6fa25c718d53b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2MTcyYjViZWJlZDg3OTk2OGI1YTViM2U2ZmEyNWM3MThkNTNiNw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-10-02T01:29:26Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-10-02T01:29:26Z"}, "message": "rs6000: Add \"cannot_copy\" attribute, use it (PR67788, PR67789)\n\nAfter the shrink-wrapping patches the prologue will often be pushed\n\"deeper\" into the function, which in turn means the software trace cache\npass will more often want to duplicate the basic block containing the\nprologue.  This caused failures for 32-bit SVR4 with -msecure-plt PIC.\n\nThis configuration uses the load_toc_v4_PIC_1 instruction, which creates\nassembler labels without using the normal machinery for that.  If now\nthe compiler decides to duplicate the insn, it will emit the same label\ntwice.  Boom.\n\nIt isn't so easy to fix this to use labels the compiler knows about (let\nalone test that properly).  Instead, this patch wires up a \"cannot_copy\"\nattribute to be used by TARGET_CANNOT_COPY_P, and sets that attribute on\nthese insns we do not want copied.\n\n\n2015-10-01  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\tPR target/67788\n\tPR target/67789\n\t* config/rs6000/rs6000.c (TARGET_CANNOT_COPY_INSN_P): New.\n\t(rs6000_cannot_copy_insn_p): New function.\n\t* config/rs6000/rs6000.md (cannot_copy): New attribute.\n\t(load_toc_v4_PIC_1_normal): Set cannot_copy.\n\t(load_toc_v4_PIC_1_476): Ditto.\n\ngcc/testsuite/\n\tPR target/67788\n\tPR target/67789\n\t* gcc.target/powerpc/pr67789.c: New testcase.\n\nFrom-SVN: r228366", "tree": {"sha": "fe5d904153fd085c40646af0676d98536020e37e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe5d904153fd085c40646af0676d98536020e37e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/636172b5bebed879968b5a5b3e6fa25c718d53b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636172b5bebed879968b5a5b3e6fa25c718d53b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/636172b5bebed879968b5a5b3e6fa25c718d53b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636172b5bebed879968b5a5b3e6fa25c718d53b7/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d30ecc9c2bc9fc8373433302c9e351d545eed061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30ecc9c2bc9fc8373433302c9e351d545eed061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30ecc9c2bc9fc8373433302c9e351d545eed061"}], "stats": {"total": 75, "additions": 73, "deletions": 2}, "files": [{"sha": "bec087b4e486dcf2f79536a2704781df27e4de73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=636172b5bebed879968b5a5b3e6fa25c718d53b7", "patch": "@@ -1,3 +1,13 @@\n+2015-10-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/67788\n+\tPR target/67789\n+\t* config/rs6000/rs6000.c (TARGET_CANNOT_COPY_INSN_P): New.\n+\t(rs6000_cannot_copy_insn_p): New function.\n+\t* config/rs6000/rs6000.md (cannot_copy): New attribute.\n+\t(load_toc_v4_PIC_1_normal): Set cannot_copy.\n+\t(load_toc_v4_PIC_1_476): Ditto.\n+\n 2015-10-01  Aditya Kumar  <aditya.k7@samsung.com>\n \n \t* graphite-scop-detection.c (struct sese_l): New conversion constructor"}, {"sha": "e4082959992fec810bde74082240009289495813", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=636172b5bebed879968b5a5b3e6fa25c718d53b7", "patch": "@@ -1513,6 +1513,8 @@ static const struct attribute_spec rs6000_attribute_table[] =\n #define TARGET_REGISTER_MOVE_COST rs6000_register_move_cost\n #undef TARGET_MEMORY_MOVE_COST\n #define TARGET_MEMORY_MOVE_COST rs6000_memory_move_cost\n+#undef TARGET_CANNOT_COPY_INSN_P\n+#define TARGET_CANNOT_COPY_INSN_P rs6000_cannot_copy_insn_p\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS rs6000_rtx_costs\n #undef TARGET_ADDRESS_COST\n@@ -31267,6 +31269,15 @@ rs6000_xcoff_encode_section_info (tree decl, rtx rtl, int first)\n #endif /* HAVE_AS_TLS */\n #endif /* TARGET_XCOFF */\n \n+/* Return true if INSN should not be copied.  */\n+\n+static bool\n+rs6000_cannot_copy_insn_p (rtx_insn *insn)\n+{\n+  return recog_memoized (insn) >= 0\n+\t && get_attr_cannot_copy (insn);\n+}\n+\n /* Compute a (partial) cost for rtx X.  Return true if the complete\n    cost has been computed, and false if subexpressions should be\n    scanned.  In either case, *TOTAL contains the cost result.  */"}, {"sha": "8c53c40aba7ee037dee0b77c8be4e341d6af9faf", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=636172b5bebed879968b5a5b3e6fa25c718d53b7", "patch": "@@ -226,6 +226,9 @@\n \t\t\t      (const_string \"no\"))\n \t\t(const_string \"no\")))\n \n+;; Is copying of this instruction disallowed?\n+(define_attr \"cannot_copy\" \"no,yes\" (const_string \"no\"))\n+\n ;; Define floating point instruction sub-types for use with Xfpu.md\n (define_attr \"fp_type\" \"fp_default,fp_addsub_s,fp_addsub_d,fp_mul_s,fp_mul_d,fp_div_s,fp_div_d,fp_maddsub_s,fp_maddsub_d,fp_sqrt_s,fp_sqrt_d\" (const_string \"fp_default\"))\n \n@@ -9130,7 +9133,8 @@\n    && (flag_pic == 2 || (flag_pic && TARGET_SECURE_PLT))\"\n   \"bcl 20,31,%0\\\\n%0:\"\n   [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"4\")])\n+   (set_attr \"length\" \"4\")\n+   (set_attr \"cannot_copy\" \"yes\")])\n \n (define_insn \"load_toc_v4_PIC_1_476\"\n   [(set (reg:SI LR_REGNO)\n@@ -9148,7 +9152,8 @@\n   return templ;\n }\"\n   [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"4\")])\n+   (set_attr \"length\" \"4\")\n+   (set_attr \"cannot_copy\" \"yes\")])\n \n (define_expand \"load_toc_v4_PIC_1b\"\n   [(parallel [(set (reg:SI LR_REGNO)"}, {"sha": "3df0caa811f33918583952d52cd6e553d7e96e0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=636172b5bebed879968b5a5b3e6fa25c718d53b7", "patch": "@@ -1,3 +1,9 @@\n+2015-10-01  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/67788\n+\tPR target/67789\n+\t* gcc.target/powerpc/pr67789.c: New testcase.\n+\n 2015-10-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran.67802"}, {"sha": "d1bd0479cca58006a160e31eccdae953d9f08556", "filename": "gcc/testsuite/gcc.target/powerpc/pr67789.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr67789.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636172b5bebed879968b5a5b3e6fa25c718d53b7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr67789.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr67789.c?ref=636172b5bebed879968b5a5b3e6fa25c718d53b7", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -msecure-plt -fPIC\" } */\n+\n+#define FE_TONEAREST 0\n+#define FE_UPWARD 1\n+#define FE_DOWNWARD 2\n+#define FE_TOWARDZERO 3\n+\n+extern int fesetround(int);\n+\n+void\n+set_fpu_rounding_mode (int mode)\n+{\n+  int rnd_mode;\n+\n+  switch (mode)\n+    {\n+      case 2:\n+       rnd_mode = FE_TONEAREST;\n+       break;\n+\n+      case 4:\n+        rnd_mode = FE_UPWARD;\n+        break;\n+\n+      case 1:\n+        rnd_mode = FE_DOWNWARD;\n+        break;\n+\n+      case 3:\n+        rnd_mode = FE_TOWARDZERO; \n+        break;\n+\n+      default:\n+        return;\n+    }\n+\n+  fesetround (rnd_mode);\n+}"}]}