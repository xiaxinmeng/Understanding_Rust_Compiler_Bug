{"sha": "9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE0ZWI3MjBiMzQzMzI0ZjdmOGZkMmRjZWVkNWQwMzQ3ZTVhMDE1Mw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-02-15T16:56:52Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-02-24T19:23:45Z"}, "message": "testsuite, coroutines : Make final_suspend calls noexcept.\n\nThe wording of [dcl.fct.def.coroutine]/15 states:\nThe expression co_await promise.final_suspend() shall not be\npotentially-throwing.  A fair number of testcases are not correctly\nmarked. Fixed here.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/coroutines/co-await-void_type.C: Mark promise\n\tfinal_suspend call as noexcept.\n\t* g++.dg/coroutines/co-return-syntax-08-bad-return.C: Likewise.\n\t* g++.dg/coroutines/co-return-syntax-10-movable.C: Likewise.\n\t* g++.dg/coroutines/co-return-warning-1.C: Likewise.\n\t* g++.dg/coroutines/co-yield-syntax-08-needs-expr.C: Likewise.\n\t* g++.dg/coroutines/coro-bad-gro-00-class-gro-scalar-return.C: Likewise.\n\t* g++.dg/coroutines/coro-bad-gro-01-void-gro-non-class-coro.C: Likewise.\n\t* g++.dg/coroutines/coro-missing-gro.C: Likewise.\n\t* g++.dg/coroutines/coro-missing-promise-yield.C: Likewise.\n\t* g++.dg/coroutines/coro-missing-ret-value.C: Likewise.\n\t* g++.dg/coroutines/coro-missing-ret-void.C: Likewise.\n\t* g++.dg/coroutines/coro-missing-ueh.h: Likewise.\n\t* g++.dg/coroutines/coro1-allocators.h: Likewise.\n\t* g++.dg/coroutines/coro1-refs-and-ctors.h: Likewise.\n\t* g++.dg/coroutines/coro1-ret-int-yield-int.h: Likewise.\n\t* g++.dg/coroutines/pr94682-preview-this.C: Likewise.\n\t* g++.dg/coroutines/pr94752.C: Likewise.\n\t* g++.dg/coroutines/pr94760-mismatched-traits-and-promise-prev.C: Likewise.\n\t* g++.dg/coroutines/pr94879-folly-1.C: Likewise.\n\t* g++.dg/coroutines/pr94883-folly-2.C: Likewise.\n\t* g++.dg/coroutines/pr95050.C: Likewise.\n\t* g++.dg/coroutines/pr95345.C: Likewise.\n\t* g++.dg/coroutines/pr95440.C: Likewise.\n\t* g++.dg/coroutines/pr95591.C: Likewise.\n\t* g++.dg/coroutines/pr95711.C: Likewise.\n\t* g++.dg/coroutines/pr95813.C: Likewise.\n\t* g++.dg/coroutines/symmetric-transfer-00-basic.C: Likewise.\n\t* g++.dg/coroutines/torture/co-await-07-tmpl.C: Likewise.\n\t* g++.dg/coroutines/torture/co-await-17-capture-comp-ref.C: Likewise.\n\t* g++.dg/coroutines/torture/co-ret-00-void-return-is-ready.C: Likewise.\n\t* g++.dg/coroutines/torture/co-ret-01-void-return-is-suspend.C: Likewise.\n\t* g++.dg/coroutines/torture/co-ret-03-different-GRO-type.C: Likewise.\n\t* g++.dg/coroutines/torture/co-ret-04-GRO-nontriv.C: Likewise.\n\t* g++.dg/coroutines/torture/co-ret-06-template-promise-val-1.C: Likewise.\n\t* g++.dg/coroutines/torture/co-ret-08-template-cast-ret.C: Likewise.\n\t* g++.dg/coroutines/torture/co-ret-09-bool-await-susp.C: Likewise.\n\t* g++.dg/coroutines/torture/co-ret-15-default-return_void.C: Likewise.\n\t* g++.dg/coroutines/torture/co-ret-17-void-ret-coro.C: Likewise.\n\t* g++.dg/coroutines/torture/co-yield-00-triv.C: Likewise.\n\t* g++.dg/coroutines/torture/co-yield-03-tmpl.C: Likewise.\n\t* g++.dg/coroutines/torture/co-yield-04-complex-local-state.C: Likewise.\n\t* g++.dg/coroutines/torture/exceptions-test-0.C: Likewise.\n\t* g++.dg/coroutines/torture/exceptions-test-01-n4849-a.C: Likewise.\n\t* g++.dg/coroutines/torture/func-params-04.C: Likewise.\n\t* g++.dg/coroutines/torture/local-var-06-structured-binding.C: Likewise.\n\t* g++.dg/coroutines/torture/mid-suspend-destruction-0.C: Likewise.", "tree": {"sha": "23d2041a64b67fbbb72faa4fce731b27aacf761b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23d2041a64b67fbbb72faa4fce731b27aacf761b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d2a69106beb346be1c511a9c1a61a256b697868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d2a69106beb346be1c511a9c1a61a256b697868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d2a69106beb346be1c511a9c1a61a256b697868"}], "stats": {"total": 97, "additions": 49, "deletions": 48}, "files": [{"sha": "370068fb5cb16d47db31e0577dd5a3e7557ae316", "filename": "gcc/testsuite/g++.dg/coroutines/co-await-void_type.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-await-void_type.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-await-void_type.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-await-void_type.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -28,7 +28,7 @@ struct resumable::promise_type {\n     return coro_handle::from_promise(*this);\n   }\n   auto initial_suspend() { return std::suspend_always(); }\n-  auto final_suspend() { return std::suspend_always(); }\n+  auto final_suspend() noexcept { return std::suspend_always(); }\n   void yield_value(int v) { value_ = v; }\n   void unhandled_exception() {}\n };"}, {"sha": "148ee4543e8725e29d973026a5eef21347d17230", "filename": "gcc/testsuite/g++.dg/coroutines/co-return-syntax-08-bad-return.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-return-syntax-08-bad-return.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-return-syntax-08-bad-return.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-return-syntax-08-bad-return.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -24,7 +24,7 @@ struct Coro {\n   ~promise_type() {}\n   Coro get_return_object () { return Coro (handle_type::from_promise (*this)); }\n   auto initial_suspend () { return coro::suspend_always{}; }\n-  auto final_suspend () { return coro::suspend_always{}; }\n+  auto final_suspend () noexcept { return coro::suspend_always{}; }\n   void return_void () { }\n    void unhandled_exception() { }\n   };"}, {"sha": "0cf3c394dc2ba225991bf2207d9f1d77bb4189dd", "filename": "gcc/testsuite/g++.dg/coroutines/co-return-syntax-10-movable.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-return-syntax-10-movable.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-return-syntax-10-movable.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-return-syntax-10-movable.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -32,7 +32,7 @@ struct coro1 {\n \n   auto get_return_object () { return handle_type::from_promise (*this);}\n   coro::suspend_always initial_suspend () const { return {}; }\n-  coro::suspend_always final_suspend () const {  return {}; }\n+  coro::suspend_always final_suspend () const noexcept {  return {}; }\n \n   void return_value(T&& v) noexcept { value = std::move(v); }\n   void return_value(const T&) noexcept = delete;"}, {"sha": "b2aaba15ae35bc20c2709d438c3e0cf3589f6e9b", "filename": "gcc/testsuite/g++.dg/coroutines/co-return-warning-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-return-warning-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-return-warning-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-return-warning-1.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -28,7 +28,7 @@ struct resumable::promise_type {\n     return coro_handle::from_promise(*this);\n   }\n   auto initial_suspend() { return std::suspend_always(); }\n-  auto final_suspend() { return std::suspend_always(); }\n+  auto final_suspend() noexcept { return std::suspend_always(); }\n   void return_value(int v) { value_ = v; }\n   std::suspend_always yield_value(int v) {\n     value_ = v;"}, {"sha": "aec1214db4a235c1a193b259c9ad2bfbb70ab124", "filename": "gcc/testsuite/g++.dg/coroutines/co-yield-syntax-08-needs-expr.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-yield-syntax-08-needs-expr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-yield-syntax-08-needs-expr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fco-yield-syntax-08-needs-expr.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -10,7 +10,7 @@ struct DummyYield {\n   DummyYield (coro::coroutine_handle<> handle) : handle (handle) {}\n   struct dummy_yield {\n     coro::suspend_never initial_suspend() { return {}; }\n-    coro::suspend_never final_suspend() { return {}; }\n+    coro::suspend_never final_suspend() noexcept { return {}; }\n     DummyYield get_return_object() {\n       return DummyYield (coro::coroutine_handle<dummy_yield>::from_promise (*this));\n     }"}, {"sha": "f9e8a5f398bcfaffc06109fb2cb795ec6b346b28", "filename": "gcc/testsuite/g++.dg/coroutines/coro-bad-gro-00-class-gro-scalar-return.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-gro-00-class-gro-scalar-return.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-gro-00-class-gro-scalar-return.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-gro-00-class-gro-scalar-return.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -21,11 +21,11 @@ struct std::coroutine_traits<R, HandleRef, T...> {\n         }\n \t~promise_type () { PRINT (\"Destroyed Promise\"); g_promise = 0;}\n         Thing get_return_object() { return {}; }\n-\n+\t//int get_return_object() { return 0; }\n         auto initial_suspend() {\n           return std::suspend_always{};\n          }\n-        auto final_suspend() { return std::suspend_never{}; }\n+        auto final_suspend() noexcept { return std::suspend_never{}; }\n \n         void return_void() {}\n         void unhandled_exception() {}"}, {"sha": "2671ce7ca2892d1ea5aacb6ee957d22261ea6cab", "filename": "gcc/testsuite/g++.dg/coroutines/coro-bad-gro-01-void-gro-non-class-coro.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-gro-01-void-gro-non-class-coro.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-gro-01-void-gro-non-class-coro.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-bad-gro-01-void-gro-non-class-coro.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -19,7 +19,7 @@ struct std::coroutine_traits<R, HandleRef, T...> {\n         auto initial_suspend() {\n           return std::suspend_always{};\n          }\n-        auto final_suspend() { return std::suspend_never{}; }\n+        auto final_suspend() noexcept { return std::suspend_never{}; }\n \n         void return_void() {}\n         void unhandled_exception() {}"}, {"sha": "44a629b13869e09c9c68d8ca84cb4a6ef356b632", "filename": "gcc/testsuite/g++.dg/coroutines/coro-missing-gro.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-gro.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-gro.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-gro.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -10,7 +10,7 @@ struct MissingGRO {\n   MissingGRO (coro::coroutine_handle<> handle) : handle (handle) {}\n   struct missing_gro {\n     coro::suspend_never initial_suspend() { return {}; }\n-    coro::suspend_never final_suspend() { return {}; }\n+    coro::suspend_never final_suspend() noexcept { return {}; }\n     void return_void () {}\n     void unhandled_exception() { /*std::terminate();*/ };\n   };"}, {"sha": "01cc41488e951b8e13448eb356567958d192e377", "filename": "gcc/testsuite/g++.dg/coroutines/coro-missing-promise-yield.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-promise-yield.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-promise-yield.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-promise-yield.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -7,7 +7,7 @@ struct MissingPromiseYield {\n   MissingPromiseYield (coro::coroutine_handle<> handle) : handle (handle) {}\n   struct missing_yield {\n     coro::suspend_never initial_suspend() { return {}; }\n-    coro::suspend_never final_suspend() { return {}; }\n+    coro::suspend_never final_suspend() noexcept { return {}; }\n     MissingPromiseYield get_return_object() {\n       return MissingPromiseYield (coro::coroutine_handle<missing_yield>::from_promise (*this));\n     }"}, {"sha": "91c29d34f333f78e121969306ce01eb565cbce09", "filename": "gcc/testsuite/g++.dg/coroutines/coro-missing-ret-value.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-ret-value.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-ret-value.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-ret-value.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -10,7 +10,7 @@ struct MissingRetValue {\n   MissingRetValue (coro::coroutine_handle<> handle) : handle (handle) {}\n   struct missing_retvoid {\n     coro::suspend_never initial_suspend() { return {}; }\n-    coro::suspend_never final_suspend() { return {}; }\n+    coro::suspend_never final_suspend() noexcept { return {}; }\n     MissingRetValue get_return_object() {\n       return MissingRetValue (coro::coroutine_handle<missing_retvoid>::from_promise (*this));\n     }"}, {"sha": "502391acc80fbadf76e39eba6541efc966cb0ba5", "filename": "gcc/testsuite/g++.dg/coroutines/coro-missing-ret-void.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-ret-void.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-ret-void.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-ret-void.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -10,7 +10,7 @@ struct MissingRetVoid {\n   MissingRetVoid (coro::coroutine_handle<> handle) : handle (handle) {}\n   struct missing_retvoid {\n     coro::suspend_never initial_suspend() { return {}; }\n-    coro::suspend_never final_suspend() { return {}; }\n+    coro::suspend_never final_suspend() noexcept { return {}; }\n     MissingRetVoid get_return_object() {\n       return MissingRetVoid (coro::coroutine_handle<missing_retvoid>::from_promise (*this));\n     }"}, {"sha": "361003ce04b52ac4ed11031773e41a2b9fa9bd9b", "filename": "gcc/testsuite/g++.dg/coroutines/coro-missing-ueh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-ueh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-ueh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro-missing-ueh.h?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -8,7 +8,7 @@ struct MissingUEH {\n   MissingUEH (coro::coroutine_handle<> handle) : handle (handle) {}\n   struct missing_ueh {\n     coro::suspend_never initial_suspend() { return {}; }\n-    coro::suspend_never final_suspend() { return {}; }\n+    coro::suspend_never final_suspend() noexcept { return {}; }\n     MissingUEH get_return_object() {\n       return MissingUEH (coro::coroutine_handle<missing_ueh>::from_promise (*this));\n     }"}, {"sha": "cf73dc09ef7cf587781893ccfc7f51e9a9c970be", "filename": "gcc/testsuite/g++.dg/coroutines/coro1-allocators.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro1-allocators.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro1-allocators.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro1-allocators.h?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -100,7 +100,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "8831a07875eb35da37a43c18b97d6c683671f151", "filename": "gcc/testsuite/g++.dg/coroutines/coro1-refs-and-ctors.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro1-refs-and-ctors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro1-refs-and-ctors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro1-refs-and-ctors.h?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -19,7 +19,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "826519e8a46c43e6dd313b2c8f46370104f70df7", "filename": "gcc/testsuite/g++.dg/coroutines/coro1-ret-int-yield-int.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro1-ret-int-yield-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro1-ret-int-yield-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fcoro1-ret-int-yield-int.h?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -108,7 +108,7 @@ struct coro1 {\n #endif\n #ifdef MISSING_FINAL_SUSPEND\n #else\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "7c4bae2af1951f85d116b5c6b75b60e34a1c5afe", "filename": "gcc/testsuite/g++.dg/coroutines/pr94682-preview-this.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94682-preview-this.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94682-preview-this.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94682-preview-this.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -13,7 +13,7 @@ struct promise\n   promise(Class &,int) { static_assert(!std::is_pointer<Class>::value, \"\"); }\n \n   coro::suspend_never initial_suspend() { return {}; }\n-  coro::suspend_never final_suspend() { return {}; }\n+  coro::suspend_never final_suspend() noexcept { return {}; }\n \n   future get_return_object() { return {}; }\n "}, {"sha": "e5e4ece4bd712faa52c1a56094737f2106069ece", "filename": "gcc/testsuite/g++.dg/coroutines/pr94752.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94752.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94752.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94752.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -9,7 +9,7 @@ struct task {\n         promise_type() {}\n         task get_return_object() { return {}; }\n         suspend_never initial_suspend() { return {}; }\n-        suspend_never final_suspend() { return {}; }\n+        suspend_never final_suspend() noexcept { return {}; }\n         void return_void() {}\n         void unhandled_exception() {}\n     };"}, {"sha": "90a558d0fe2223e979f161c81956b8718391dc0d", "filename": "gcc/testsuite/g++.dg/coroutines/pr94760-mismatched-traits-and-promise-prev.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94760-mismatched-traits-and-promise-prev.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94760-mismatched-traits-and-promise-prev.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94760-mismatched-traits-and-promise-prev.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -14,7 +14,7 @@ struct std::coroutine_traits<R, CallOp, T...> {\n         promise_type (CallOp op, T ...args) {}\n         Fake get_return_object() { return {}; }\n         std::suspend_always initial_suspend() { return {}; }\n-        std::suspend_never final_suspend() { return {}; }\n+        std::suspend_never final_suspend() noexcept { return {}; }\n         void return_void() {}\n         void unhandled_exception() {}\n     };"}, {"sha": "e815ca707354c60e4d630e5502fe016f45b24264", "filename": "gcc/testsuite/g++.dg/coroutines/pr94879-folly-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94879-folly-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94879-folly-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94879-folly-1.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -31,7 +31,7 @@ class j {\n \n public:\n   std::g initial_suspend();\n-  l final_suspend();\n+  l final_suspend() noexcept;\n };\n class m : public j {\n public:"}, {"sha": "c5fa65931e0ff21a84ea4f425fa973c623908a91", "filename": "gcc/testsuite/g++.dg/coroutines/pr94883-folly-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94883-folly-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94883-folly-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr94883-folly-2.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -24,7 +24,7 @@ class h {\n public:\n   void get_return_object();\n   std::b initial_suspend();\n-  j final_suspend();\n+  j final_suspend() noexcept;\n   void unhandled_exception();\n   template <typename g> \n     auto await_transform (g c) { return ab(f, c); }"}, {"sha": "2867cfc9b086c1083842b963a695ab1bf83676f5", "filename": "gcc/testsuite/g++.dg/coroutines/pr95050.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95050.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95050.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95050.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -21,7 +21,7 @@ struct task\n   {\n     auto get_return_object () -> task  { return {}; }\n     auto initial_suspend () -> suspend_always { return {}; }\n-    auto final_suspend () -> suspend_always { return {}; }\n+    auto final_suspend () noexcept -> suspend_always { return {}; }\n     void return_void () {} \n     void unhandled_exception () { }\n     void thing (ret_type x) {} "}, {"sha": "8eae611b8d38c8e0d8af8e81631efa2e58229bbd", "filename": "gcc/testsuite/g++.dg/coroutines/pr95345.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95345.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95345.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95345.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -14,7 +14,7 @@ struct dummy_coro\n   void await_resume() { }\n   dummy_coro get_return_object() { return {}; }\n   dummy_coro initial_suspend() { return {}; }\n-  dummy_coro final_suspend() { return {}; }\n+  dummy_coro final_suspend() noexcept { return {}; }\n   void return_void() { }\n   void unhandled_exception() { }\n };"}, {"sha": "1169da4ea7db8a126bc5ffd98aeb384ff26f72a7", "filename": "gcc/testsuite/g++.dg/coroutines/pr95440.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95440.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95440.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95440.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -22,7 +22,7 @@ struct task\n //    static constexpr suspend_n initial_suspend()  { return {2}; }\n #endif\n     static constexpr std::suspend_always initial_suspend()  { return {}; }\n-    static constexpr std::suspend_never final_suspend() { return {}; }\n+    static constexpr std::suspend_never final_suspend() noexcept { return {}; }\n     static constexpr void return_void() {}\n     static constexpr void unhandled_exception() {}\n   };"}, {"sha": "a1a2e57429b3839feb0d080e1214510758edbc99", "filename": "gcc/testsuite/g++.dg/coroutines/pr95591.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95591.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95591.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95591.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -12,7 +12,7 @@ struct generator {\n         void return_void();\n         void unhandled_exception();\n         suspend_always initial_suspend();\n-        suspend_always final_suspend();\n+        suspend_always final_suspend() noexcept;\n \n         template<typename Arg>\n         suspend_always yield_value(Arg&&) {"}, {"sha": "682a221509ea622c47c45e670944c742840b18a4", "filename": "gcc/testsuite/g++.dg/coroutines/pr95711.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95711.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95711.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95711.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -23,7 +23,7 @@ struct generator{\n         std::suspend_always initial_suspend (){\n             return {};\n         }\n-        std::suspend_always final_suspend (){\n+        std::suspend_always final_suspend () noexcept {\n             return {};\n         }\n "}, {"sha": "269cba7b06d26052712c4229db714fe6c3a238cf", "filename": "gcc/testsuite/g++.dg/coroutines/pr95813.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95813.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95813.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr95813.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -21,7 +21,7 @@ template <typename T, typename... Args>\n struct coroutine_traits<lazy<T>, Args...> {\n     struct promise_type {\n         suspend_always initial_suspend() const { return {}; }\n-        suspend_always final_suspend() const { return {}; }\n+        suspend_always final_suspend() const noexcept { return {}; }\n         void return_value(T val) {}\n         lazy<T> get_return_object() {\n             return lazy<T>();"}, {"sha": "a959408513560619ddc4fa30778e5253831f816d", "filename": "gcc/testsuite/g++.dg/coroutines/symmetric-transfer-00-basic.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fsymmetric-transfer-00-basic.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fsymmetric-transfer-00-basic.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fsymmetric-transfer-00-basic.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -44,7 +44,7 @@ struct Loopy {\n     }\n \n     coro::suspend_always initial_suspend() { return {}; }\n-    coro::suspend_always final_suspend() { return {}; }\n+    coro::suspend_always final_suspend() noexcept { return {}; }\n \n     void unhandled_exception() { /*std::terminate();*/  }\n     void return_void() {}"}, {"sha": "17dff0dbbeca58cbac13e9a4e3a9f6fc17ff9e2c", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-await-07-tmpl.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-await-07-tmpl.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-await-07-tmpl.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-await-07-tmpl.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -71,7 +71,7 @@ struct coro1 {\n     return suspend_never_prt{};\n   }\n \n-  auto final_suspend() {\n+  auto final_suspend() noexcept {\n     PRINT (\"get final_suspend\");\n     return suspend_always_prt{};\n   }"}, {"sha": "3eefe9e775da0e04179019e098adf83cc1a3174b", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-await-17-capture-comp-ref.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-await-17-capture-comp-ref.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-await-17-capture-comp-ref.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-await-17-capture-comp-ref.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -20,7 +20,7 @@ struct resumable::promise_type {\n     return coro_handle::from_promise(*this);\n   }\n   auto initial_suspend() { return std::suspend_never(); }\n-  auto final_suspend() { return std::suspend_always(); }\n+  auto final_suspend() noexcept { return std::suspend_always(); }\n   void return_value(int x) {used = x;}\n   void unhandled_exception() {}\n "}, {"sha": "dd0a3b749aacecb96efa2150c176838ee381275c", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-00-void-return-is-ready.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-00-void-return-is-ready.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-00-void-return-is-ready.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-00-void-return-is-ready.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -57,7 +57,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (never) \");\n     return suspend_never_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always) \");\n     return suspend_always_prt{};\n   }"}, {"sha": "1f4c3debc03b8acf98ca177460263d95bd8bf42f", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-01-void-return-is-suspend.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-01-void-return-is-suspend.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-01-void-return-is-suspend.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-01-void-return-is-suspend.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -57,7 +57,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "1a095c627ea3c80a31431863aabb8805969b9b1e", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-03-different-GRO-type.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-03-different-GRO-type.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-03-different-GRO-type.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-03-different-GRO-type.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -55,7 +55,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "abb789aa7aecae65d77981ea2afb6bb58f9f044c", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-04-GRO-nontriv.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-04-GRO-nontriv.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-04-GRO-nontriv.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-04-GRO-nontriv.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -72,7 +72,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "91f591a30fc50aea4fb951de9b7f563d99e74709", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-06-template-promise-val-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-06-template-promise-val-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-06-template-promise-val-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-06-template-promise-val-1.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -63,7 +63,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () const {\n+  auto final_suspend () const noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "ac4cca49e9809df0bfd9d65ebbf11af9356fd29a", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-08-template-cast-ret.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-08-template-cast-ret.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-08-template-cast-ret.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-08-template-cast-ret.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -60,7 +60,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  suspend_always_prt final_suspend () const {\n+  suspend_always_prt final_suspend () const noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "33683226f632d5672ddeabda495ceff60989499a", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-09-bool-await-susp.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-09-bool-await-susp.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-09-bool-await-susp.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-09-bool-await-susp.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -70,7 +70,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always, but really never) \");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always, but never) \");\n     return suspend_always_prt{};\n   }"}, {"sha": "300052c94ae79a40afa1567c366181241464dfab", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-15-default-return_void.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-15-default-return_void.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-15-default-return_void.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-15-default-return_void.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -28,7 +28,7 @@ public:\n   using coro_handle = std::coroutine_handle<promise_type>;\n   auto get_return_object() { return coro_handle::from_promise(*this); }\n   auto initial_suspend() { return std::suspend_always(); }\n-  auto final_suspend() { return std::suspend_always(); }\n+  auto final_suspend() noexcept { return std::suspend_always(); }\n   void return_void() { value_ = -1; }\n   void unhandled_exception() {}\n private:"}, {"sha": "9c9d2fa816dd7265697780e91001c836dd3e0187", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-ret-17-void-ret-coro.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-17-void-ret-coro.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-17-void-ret-coro.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-ret-17-void-ret-coro.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -21,7 +21,7 @@ struct std::coroutine_traits<R, HandleRef, T...> {\n         auto initial_suspend() {\n           return std::suspend_always{};\n          }\n-        auto final_suspend() { return std::suspend_never{}; }\n+        auto final_suspend() noexcept { return std::suspend_never{}; }\n \n         void return_void() {}\n         void unhandled_exception() {}"}, {"sha": "15e390ed2008c4d53924b3e61ca316e070cb7fd2", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-yield-00-triv.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-yield-00-triv.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-yield-00-triv.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-yield-00-triv.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -62,7 +62,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "45fc8d71a079157a242b198a7e6b3831a756ad6b", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-yield-03-tmpl.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-yield-03-tmpl.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-yield-03-tmpl.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-yield-03-tmpl.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -22,7 +22,7 @@ struct looper {\n     return suspend_always_prt{};\n   }\n \n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "f97bd2377f7bea119cf7e846cb37a9d1d5dc84a9", "filename": "gcc/testsuite/g++.dg/coroutines/torture/co-yield-04-complex-local-state.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-yield-04-complex-local-state.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-yield-04-complex-local-state.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fco-yield-04-complex-local-state.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -25,7 +25,7 @@ struct looper {\n     return suspend_always_prt{};\n   }\n \n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "85135fc50c42d57dd731ea18d66fcd90fdf0dacc", "filename": "gcc/testsuite/g++.dg/coroutines/torture/exceptions-test-0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fexceptions-test-0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fexceptions-test-0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fexceptions-test-0.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -60,7 +60,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "6433b62109fcc5517e3c99d16ef735e11c488ec1", "filename": "gcc/testsuite/g++.dg/coroutines/torture/exceptions-test-01-n4849-a.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fexceptions-test-01-n4849-a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fexceptions-test-01-n4849-a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fexceptions-test-01-n4849-a.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -87,7 +87,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_susp_throws_prt(throw_control);\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}, {"sha": "c90c1525e4010f85f84a832a45e07e4c8e9b895f", "filename": "gcc/testsuite/g++.dg/coroutines/torture/func-params-04.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Ffunc-params-04.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Ffunc-params-04.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Ffunc-params-04.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -12,19 +12,20 @@ struct nontriv {\n   int a, b, c;\n   nontriv (int _a, int _b, int _c) : a(_a), b(_b), c(_c) {}\n   virtual int getA () { return a; }\n+  ~nontriv() { a = -1; }\n };\n \n struct coro1\n f (nontriv t) noexcept\n {\n   if (t.a > 30)\n     {\n-      PRINTF (\"coro1: about to return %d\", t.b);\n+      PRINTF (\"coro1: about to return %d\\n\", t.b);\n       co_return t.b;\n     }\n   else if (t.a > 20)\n     {\n-      PRINTF (\"coro1: about to co-return %d\", t.c);\n+      PRINTF (\"coro1: about to co-return %d\\n\", t.c);\n       co_return t.c;\n     }\n   else"}, {"sha": "282aa7a7cac5367336bce2a7e6586147f0dbc716", "filename": "gcc/testsuite/g++.dg/coroutines/torture/local-var-06-structured-binding.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Flocal-var-06-structured-binding.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Flocal-var-06-structured-binding.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Flocal-var-06-structured-binding.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -15,7 +15,7 @@ struct promise\n   promise (Args&... args) {}\n  \n   coro::suspend_never initial_suspend() { return {}; }\n-  coro::suspend_never final_suspend() { return {}; }\n+  coro::suspend_never final_suspend() noexcept { return {}; }\n \n   future get_return_object() { return {}; }\n "}, {"sha": "63561ea2ae7fee50bcf741a43a11dc17212202c4", "filename": "gcc/testsuite/g++.dg/coroutines/torture/mid-suspend-destruction-0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fmid-suspend-destruction-0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4eb720b343324f7f8fd2dceed5d0347e5a0153/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fmid-suspend-destruction-0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fmid-suspend-destruction-0.C?ref=9a4eb720b343324f7f8fd2dceed5d0347e5a0153", "patch": "@@ -61,7 +61,7 @@ struct coro1 {\n     PRINT (\"get initial_suspend (always)\");\n     return suspend_always_prt{};\n   }\n-  auto final_suspend () {\n+  auto final_suspend () noexcept {\n     PRINT (\"get final_suspend (always)\");\n     return suspend_always_prt{};\n   }"}]}