{"sha": "bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMwODRmODRiM2JhZWU3YjlmZGM3M2NjMDViNmFhOGFkZjFlOTdlNQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2016-09-21T09:17:32Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2016-09-21T09:17:32Z"}, "message": "re PR target/77326 ([avr] Invalid optimization omits comparison)\n\ngcc/\n\tPR target/77326\n\t* config/avr/avr.c (avr_notice_update_cc) [CC_NONE]: If insn\n\ttouches some regs mentioned in cc_status, do CC_STATUS_INIT.\ngcc/testsuite/\n\tPR target/77326\n\t* gcc.target/avr/torture/pr77326.c: New test.\n\nFrom-SVN: r240306", "tree": {"sha": "de1b810bcf4ee0b024d117dbedd3ed67f5be8921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de1b810bcf4ee0b024d117dbedd3ed67f5be8921"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c075003a1fc901d487c4cca0b10847d8fc1135fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c075003a1fc901d487c4cca0b10847d8fc1135fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c075003a1fc901d487c4cca0b10847d8fc1135fb"}], "stats": {"total": 77, "additions": 75, "deletions": 2}, "files": [{"sha": "b7c06f4993cfd3652376249a66cb98e5afb88f42", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5", "patch": "@@ -1,3 +1,9 @@\n+2016-09-21  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/77326\n+\t* config/avr/avr.c (avr_notice_update_cc) [CC_NONE]: If insn\n+\ttouches some regs mentioned in cc_status, do CC_STATUS_INIT.\n+\n 2016-09-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77648"}, {"sha": "5ac65b7b82aad1dd185b1db4fc375815531219f4", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5", "patch": "@@ -2511,8 +2511,44 @@ avr_notice_update_cc (rtx body ATTRIBUTE_UNUSED, rtx_insn *insn)\n       break;\n \n     case CC_NONE:\n-      /* Insn does not affect CC at all.  */\n-      break;\n+      /* Insn does not affect CC at all, but it might set some registers\n+         that are stored in cc_status.  If such a register is affected by\n+         the current insn, for example by means of a SET or a CLOBBER,\n+         then we must reset cc_status; cf. PR77326.\n+\n+         Unfortunately, set_of cannot be used as reg_overlap_mentioned_p\n+         will abort on COMPARE (which might be found in cc_status.value1/2).\n+         Thus work out the registers set by the insn and regs mentioned\n+         in cc_status.value1/2.  */\n+\n+      if (cc_status.value1\n+          || cc_status.value2)\n+        {\n+          HARD_REG_SET regs_used;\n+          HARD_REG_SET regs_set;\n+          CLEAR_HARD_REG_SET (regs_used);\n+\n+          if (cc_status.value1\n+              && !CONSTANT_P (cc_status.value1))\n+            {\n+              find_all_hard_regs (cc_status.value1, &regs_used);\n+            }\n+\n+          if (cc_status.value2\n+              && !CONSTANT_P (cc_status.value2))\n+            {\n+              find_all_hard_regs (cc_status.value2, &regs_used);\n+            }\n+\n+          find_all_hard_reg_sets (insn, &regs_set, false);\n+\n+          if (hard_reg_set_intersect_p (regs_used, regs_set))\n+            {\n+              CC_STATUS_INIT;\n+            }\n+        }\n+\n+      break; // CC_NONE\n \n     case CC_SET_N:\n       CC_STATUS_INIT;"}, {"sha": "bc9d2b01a1279ea3e19c211b17ee1baf347b2277", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5", "patch": "@@ -1,3 +1,8 @@\n+2016-09-21  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/77326\n+\t* gcc.target/avr/torture/pr77326.c: New test.\n+\n 2016-09-21  Louis Krupp  <louis.krupp@zoho.com>\n \n \t* gfortran.dg/pr68078.f90: Run on x86_64_*_linux* only."}, {"sha": "7fe11ec390a7d2a41299a2efcda419787e94c0a0", "filename": "gcc/testsuite/gcc.target/avr/torture/pr77326.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fpr77326.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fpr77326.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fpr77326.c?ref=bc084f84b3baee7b9fdc73cc05b6aa8adf1e97e5", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-options \"-Wl,--defsym,test1=0\" } */\n+\n+extern void test1 (void) __attribute__((weak));\n+\n+__attribute__((noinline,noclone))\n+static void va_pseudo (int flag, ...)\n+{\n+  __asm (\"nop\":);\n+}\n+\n+__attribute__((noinline,noclone))\n+static void func (void)\n+{\n+  va_pseudo (0, 0, 0, 0);\n+\n+  if (test1)\n+    __builtin_abort ();\n+}\n+\n+int main (void)\n+{\n+  func();\n+  __builtin_exit (0);\n+  return 0;\n+}"}]}