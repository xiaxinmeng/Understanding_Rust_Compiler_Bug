{"sha": "22a7e82c200d01d12e34e757e86dc9796a9bf085", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhN2U4MmMyMDBkMDFkMTJlMzRlNzU3ZTg2ZGM5Nzk2YTliZjA4NQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-12-18T16:52:24Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-12-18T16:52:24Z"}, "message": "libstdc++: Fix build failure on AArch64 ILP32 [PR98370]\n\nThis should fix a build failure on AArch64 ILP32 due to int32_t mapping\nto long int instead of int on this platform, which causes type deduction\nto fail in the below call to std::max as reported in the PR.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/98370\n\t* src/c++17/floating_to_chars.cc (__floating_to_chars_shortest):\n\tProvide explicit template arguments to the call to std::max.", "tree": {"sha": "3ce2454afb6c2561553a70284de18524cd166360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ce2454afb6c2561553a70284de18524cd166360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22a7e82c200d01d12e34e757e86dc9796a9bf085", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a7e82c200d01d12e34e757e86dc9796a9bf085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a7e82c200d01d12e34e757e86dc9796a9bf085", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a7e82c200d01d12e34e757e86dc9796a9bf085/comments", "author": null, "committer": null, "parents": [{"sha": "d7bab388b818fc21dbb9111311e114ae33e11fff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7bab388b818fc21dbb9111311e114ae33e11fff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7bab388b818fc21dbb9111311e114ae33e11fff"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3f46bce7a15c407a54104d19c045fc4e092efb36", "filename": "libstdc++-v3/src/c++17/floating_to_chars.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22a7e82c200d01d12e34e757e86dc9796a9bf085/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffloating_to_chars.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22a7e82c200d01d12e34e757e86dc9796a9bf085/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffloating_to_chars.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffloating_to_chars.cc?ref=22a7e82c200d01d12e34e757e86dc9796a9bf085", "patch": "@@ -977,7 +977,7 @@ template<typename T>\n \t// fd.exponent contain all of the information needed to format the\n \t// number in fixed notation \"as if by std::printf\" (with precision\n \t// equal to -fd.exponent).\n-\tconst int whole_digits = max(mantissa_length + fd.exponent, 1);\n+\tconst int whole_digits = max<int>(mantissa_length + fd.exponent, 1);\n \tconst int expected_output_length\n \t  = fd.sign + whole_digits + strlen(\".\") + -fd.exponent;\n \tif (last - first < expected_output_length)"}]}