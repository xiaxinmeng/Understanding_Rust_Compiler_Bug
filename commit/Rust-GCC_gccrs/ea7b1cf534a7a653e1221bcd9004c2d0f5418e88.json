{"sha": "ea7b1cf534a7a653e1221bcd9004c2d0f5418e88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE3YjFjZjUzNGE3YTY1M2UxMjIxYmNkOTAwNGMyZDBmNTQxOGU4OA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-04-20T23:15:33Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-04-21T00:27:49Z"}, "message": "libphobos: Fix build fails for powerpc-linux\n\nAs register names are required for darwin, but not accepted by gas\nunless you use `-mregnames', they have been conditionally removed on\nnon-darwin targets.\n\nTo avoid duplicating large blocks of almost identical code, the inline\nassembly is now statically generated.\n\nlibphobos/ChangeLog:\n\n\t* libdruntime/core/thread/osthread.d (callWithStackShell): Statically\n\tgenerate PPC and PPC64 asm implementations, and conditionally remove\n\tPPC register names on non-Darwin targets.", "tree": {"sha": "825ff7ba151cace25c260779968411505fa62a0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/825ff7ba151cace25c260779968411505fa62a0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea7b1cf534a7a653e1221bcd9004c2d0f5418e88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea7b1cf534a7a653e1221bcd9004c2d0f5418e88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea7b1cf534a7a653e1221bcd9004c2d0f5418e88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea7b1cf534a7a653e1221bcd9004c2d0f5418e88/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be8aad8d73f47e2581c873ba1069489e071c2a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8aad8d73f47e2581c873ba1069489e071c2a86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be8aad8d73f47e2581c873ba1069489e071c2a86"}], "stats": {"total": 68, "additions": 24, "deletions": 44}, "files": [{"sha": "9fcd30e50fb77d9194b6eacdee59b901087cc5de", "filename": "libphobos/libdruntime/core/thread/osthread.d", "status": "modified", "additions": 24, "deletions": 44, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea7b1cf534a7a653e1221bcd9004c2d0f5418e88/libphobos%2Flibdruntime%2Fcore%2Fthread%2Fosthread.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea7b1cf534a7a653e1221bcd9004c2d0f5418e88/libphobos%2Flibdruntime%2Fcore%2Fthread%2Fosthread.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fthread%2Fosthread.d?ref=ea7b1cf534a7a653e1221bcd9004c2d0f5418e88", "patch": "@@ -1444,55 +1444,35 @@ in (fn)\n         else version (PPC)\n         {\n             void*[19] regs = void;\n-            asm pure nothrow @nogc\n-            {\n-                \"stw r13, %0\" : \"=m\" (regs[ 0]);\n-                \"stw r14, %0\" : \"=m\" (regs[ 1]);\n-                \"stw r15, %0\" : \"=m\" (regs[ 2]);\n-                \"stw r16, %0\" : \"=m\" (regs[ 3]);\n-                \"stw r17, %0\" : \"=m\" (regs[ 4]);\n-                \"stw r18, %0\" : \"=m\" (regs[ 5]);\n-                \"stw r19, %0\" : \"=m\" (regs[ 6]);\n-                \"stw r20, %0\" : \"=m\" (regs[ 7]);\n-                \"stw r21, %0\" : \"=m\" (regs[ 9]);\n-                \"stw r22, %0\" : \"=m\" (regs[ 9]);\n-                \"stw r23, %0\" : \"=m\" (regs[10]);\n-                \"stw r24, %0\" : \"=m\" (regs[11]);\n-                \"stw r25, %0\" : \"=m\" (regs[12]);\n-                \"stw r26, %0\" : \"=m\" (regs[13]);\n-                \"stw r27, %0\" : \"=m\" (regs[14]);\n-                \"stw r28, %0\" : \"=m\" (regs[15]);\n-                \"stw r29, %0\" : \"=m\" (regs[16]);\n-                \"stw r30, %0\" : \"=m\" (regs[17]);\n-                \"stw r31, %0\" : \"=m\" (regs[18]);\n-            }\n+            version (Darwin)\n+                enum regname = \"r\";\n+            else\n+                enum regname = \"\";\n+            static foreach (i; 0 .. regs.length)\n+            {{\n+                enum int j = 13 + i; // source register\n+                asm pure nothrow @nogc\n+                {\n+                    \"stw \"~regname~j.stringof~\", %0\" : \"=m\" (regs[i]);\n+                }\n+            }}\n             sp = cast(void*)&regs[0];\n         }\n         else version (PPC64)\n         {\n             void*[19] regs = void;\n-            asm pure nothrow @nogc\n-            {\n-                \"std r13, %0\" : \"=m\" (regs[ 0]);\n-                \"std r14, %0\" : \"=m\" (regs[ 1]);\n-                \"std r15, %0\" : \"=m\" (regs[ 2]);\n-                \"std r16, %0\" : \"=m\" (regs[ 3]);\n-                \"std r17, %0\" : \"=m\" (regs[ 4]);\n-                \"std r18, %0\" : \"=m\" (regs[ 5]);\n-                \"std r19, %0\" : \"=m\" (regs[ 6]);\n-                \"std r20, %0\" : \"=m\" (regs[ 7]);\n-                \"std r21, %0\" : \"=m\" (regs[ 8]);\n-                \"std r22, %0\" : \"=m\" (regs[ 9]);\n-                \"std r23, %0\" : \"=m\" (regs[10]);\n-                \"std r24, %0\" : \"=m\" (regs[11]);\n-                \"std r25, %0\" : \"=m\" (regs[12]);\n-                \"std r26, %0\" : \"=m\" (regs[13]);\n-                \"std r27, %0\" : \"=m\" (regs[14]);\n-                \"std r28, %0\" : \"=m\" (regs[15]);\n-                \"std r29, %0\" : \"=m\" (regs[16]);\n-                \"std r30, %0\" : \"=m\" (regs[17]);\n-                \"std r31, %0\" : \"=m\" (regs[18]);\n-            }\n+            version (Darwin)\n+                enum regname = \"r\";\n+            else\n+                enum regname = \"\";\n+            static foreach (i; 0 .. regs.length)\n+            {{\n+                enum int j = 13 + i; // source register\n+                asm pure nothrow @nogc\n+                {\n+                    \"std \"~regname~j.stringof~\", %0\" : \"=m\" (regs[i]);\n+                }\n+            }}\n             sp = cast(void*)&regs[0];\n         }\n         else"}]}