{"sha": "dff70323a39a34ba26c729f50fe45d78912133e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZmNzAzMjNhMzlhMzRiYTI2YzcyOWY1MGZlNDVkNzg5MTIxMzNlOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-05-11T13:59:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-05-11T13:59:34Z"}, "message": "re PR debug/71057 (ICE in schedule_generic_params_dies_gen, at dwarf2out.c:24142)\n\n2016-05-11  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/71057\n\t* dwarf2out.c (retry_incomplete_types): Set early_dwarf.\n\t(dwarf2out_finish): Move retry_incomplete_types call ...\n\t(dwarf2out_early_finish): ... here.\n\n\t* g++.dg/debug/pr71057.C: New testcase.\n\nFrom-SVN: r236121", "tree": {"sha": "539ecd9c43fcd1d2a855009251ccd6fcccc93bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/539ecd9c43fcd1d2a855009251ccd6fcccc93bbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dff70323a39a34ba26c729f50fe45d78912133e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff70323a39a34ba26c729f50fe45d78912133e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dff70323a39a34ba26c729f50fe45d78912133e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dff70323a39a34ba26c729f50fe45d78912133e8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56a3d28ba3f48c5d4c6d00c558e2432fd8b03d6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56a3d28ba3f48c5d4c6d00c558e2432fd8b03d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56a3d28ba3f48c5d4c6d00c558e2432fd8b03d6e"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "233273270430e1053f3aa980b5fe79cdc31d9cc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff70323a39a34ba26c729f50fe45d78912133e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff70323a39a34ba26c729f50fe45d78912133e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dff70323a39a34ba26c729f50fe45d78912133e8", "patch": "@@ -1,3 +1,10 @@\n+2016-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/71057\n+\t* dwarf2out.c (retry_incomplete_types): Set early_dwarf.\n+\t(dwarf2out_finish): Move retry_incomplete_types call ...\n+\t(dwarf2out_early_finish): ... here.\n+\n 2016-05-11  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/71002"}, {"sha": "b0173f7a5ce73099f22bc9394cef6251eda7c5ce", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff70323a39a34ba26c729f50fe45d78912133e8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff70323a39a34ba26c729f50fe45d78912133e8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=dff70323a39a34ba26c729f50fe45d78912133e8", "patch": "@@ -19405,11 +19405,13 @@ gen_entry_point_die (tree decl, dw_die_ref context_die)\n static void\n retry_incomplete_types (void)\n {\n+  set_early_dwarf s;\n   int i;\n \n   for (i = vec_safe_length (incomplete_types) - 1; i >= 0; i--)\n     if (should_emit_struct_debug ((*incomplete_types)[i], DINFO_USAGE_DIR_USE))\n       gen_type_die ((*incomplete_types)[i], comp_unit_die ());\n+  vec_safe_truncate (incomplete_types, 0);\n }\n \n /* Determine what tag to use for a record type.  */\n@@ -27390,10 +27392,6 @@ dwarf2out_finish (const char *filename)\n   resolve_addr (comp_unit_die ());\n   move_marked_base_types ();\n \n-  /* Walk through the list of incomplete types again, trying once more to\n-     emit full debugging info for them.  */\n-  retry_incomplete_types ();\n-\n   if (flag_eliminate_unused_debug_types)\n     prune_unused_types ();\n \n@@ -27694,6 +27692,10 @@ dwarf2out_finish (const char *filename)\n static void\n dwarf2out_early_finish (void)\n {\n+  /* Walk through the list of incomplete types again, trying once more to\n+     emit full debugging info for them.  */\n+  retry_incomplete_types ();\n+\n   /* The point here is to flush out the limbo list so that it is empty\n      and we don't need to stream it for LTO.  */\n   flush_limbo_die_list ();"}, {"sha": "4f7f0f86788e75b152dac1911b923963679458ff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff70323a39a34ba26c729f50fe45d78912133e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff70323a39a34ba26c729f50fe45d78912133e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dff70323a39a34ba26c729f50fe45d78912133e8", "patch": "@@ -1,3 +1,8 @@\n+2016-05-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/71057\n+\t* g++.dg/debug/pr71057.C: New testcase.\n+\n 2016-05-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/70855"}, {"sha": "2ed1eed988ee6984a79a74b0b40cae71dcfaa46b", "filename": "gcc/testsuite/g++.dg/debug/pr71057.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dff70323a39a34ba26c729f50fe45d78912133e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr71057.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dff70323a39a34ba26c729f50fe45d78912133e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr71057.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr71057.C?ref=dff70323a39a34ba26c729f50fe45d78912133e8", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+// { dg-options \"-g\" }\n+template <typename _Tp> using decay_t = _Tp;\n+template <typename> struct A;\n+template <typename> struct B { B(A<int>); };\n+template <typename> struct C {\n+      template <typename U> using constructor = B<decay_t<U>>;\n+        typedef constructor<int> dummy;\n+};\n+template <typename> struct D {};\n+C<int> a;\n+D<B<int>> fn1() { fn1, a; }"}]}