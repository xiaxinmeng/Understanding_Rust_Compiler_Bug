{"sha": "3219c65bc950a06b5fea0a2b579c0c730e63e20a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIxOWM2NWJjOTUwYTA2YjVmZWEwYTJiNTc5YzBjNzMwZTYzZTIwYQ==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2002-06-27T23:17:46Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2002-06-27T23:17:46Z"}, "message": "xtensa.md: Give \"*xxx\" names to all unnamed insn's.\n\n        * config/xtensa/xtensa.md: Give \"*xxx\" names to all unnamed insn's.\n        (*lsiu, *ssiu, movstrsi_internal, zero_cost_loop_start,\n        zero_cost_loop_end): Remove unnecessary \"parallel\" from insns.\n\nFrom-SVN: r55046", "tree": {"sha": "cde406895552f1b106f1b87db590b758e2211761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cde406895552f1b106f1b87db590b758e2211761"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3219c65bc950a06b5fea0a2b579c0c730e63e20a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3219c65bc950a06b5fea0a2b579c0c730e63e20a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3219c65bc950a06b5fea0a2b579c0c730e63e20a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3219c65bc950a06b5fea0a2b579c0c730e63e20a/comments", "author": null, "committer": null, "parents": [{"sha": "07a6e20be91fb7d10ade34cf5c8edb07efdc80ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07a6e20be91fb7d10ade34cf5c8edb07efdc80ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07a6e20be91fb7d10ade34cf5c8edb07efdc80ae"}], "stats": {"total": 107, "additions": 54, "deletions": 53}, "files": [{"sha": "496d52bc1042c94984930a1514263b63cbd90b87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3219c65bc950a06b5fea0a2b579c0c730e63e20a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3219c65bc950a06b5fea0a2b579c0c730e63e20a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3219c65bc950a06b5fea0a2b579c0c730e63e20a", "patch": "@@ -1,3 +1,9 @@\n+2002-06-27  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/xtensa.md: Give \"*xxx\" names to all unnamed insn's.\n+\t(*lsiu, *ssiu, movstrsi_internal, zero_cost_loop_start,\n+\tzero_cost_loop_end): Remove unnecessary \"parallel\" from insns.\n+\n 2002-06-27  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/d30v/d30v.h: Remove commented out STACK_REGS #defines."}, {"sha": "d4f8c84852e05e438e1f647fa6253a5699ad32c9", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 48, "deletions": 53, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3219c65bc950a06b5fea0a2b579c0c730e63e20a/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3219c65bc950a06b5fea0a2b579c0c730e63e20a/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=3219c65bc950a06b5fea0a2b579c0c730e63e20a", "patch": "@@ -142,7 +142,7 @@\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"2,2,3,3,3\")])\n \n-(define_insn \"\"\n+(define_insn \"*addx2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n \t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t  (const_int 2))\n@@ -153,7 +153,7 @@\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*addx4\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n \t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t  (const_int 4))\n@@ -164,7 +164,7 @@\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*addx8\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n \t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t  (const_int 8))\n@@ -236,7 +236,7 @@\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*subx2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n \t(minus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t   (const_int 2))\n@@ -247,7 +247,7 @@\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*subx4\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n \t(minus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t   (const_int 4))\n@@ -258,7 +258,7 @@\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*subx8\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n \t(minus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t   (const_int 8))\n@@ -423,7 +423,7 @@\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*recipsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(div:SF (match_operand:SF 1 \"const_float_1_operand\" \"\")\n \t\t(match_operand:SF 2 \"register_operand\" \"f\")))]\n@@ -480,7 +480,7 @@\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*rsqrtsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(div:SF (match_operand:SF 1 \"const_float_1_operand\" \"\")\n \t\t(sqrt:SF (match_operand:SF 2 \"register_operand\" \"f\"))))]\n@@ -1142,13 +1142,12 @@\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"3,3,3,2,2,2,3,3,3,3,3,3\")])\n \n-(define_insn \"\"\n-  [(parallel\n-    [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t  (mem:SF (plus:SI (match_operand:SI 1 \"register_operand\" \"+a\")\n-\t\t\t   (match_operand:SI 2 \"fpmem_offset_operand\" \"i\"))))\n-     (set (match_dup 1)\n-\t  (plus:SI (match_dup 1) (match_dup 2)))])]\n+(define_insn \"*lsiu\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(mem:SF (plus:SI (match_operand:SI 1 \"register_operand\" \"+a\")\n+\t\t\t (match_operand:SI 2 \"fpmem_offset_operand\" \"i\"))))\n+   (set (match_dup 1)\n+\t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_HARD_FLOAT\"\n   \"*\n {\n@@ -1160,13 +1159,12 @@\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n-  [(parallel\n-    [(set (mem:SF (plus:SI (match_operand:SI 0 \"register_operand\" \"+a\")\n-\t\t\t   (match_operand:SI 1 \"fpmem_offset_operand\" \"i\")))\n-\t  (match_operand:SF 2 \"register_operand\" \"f\"))\n-     (set (match_dup 0)\n-\t  (plus:SI (match_dup 0) (match_dup 1)))])]\n+(define_insn \"*ssiu\"\n+  [(set (mem:SF (plus:SI (match_operand:SI 0 \"register_operand\" \"+a\")\n+\t\t\t (match_operand:SI 1 \"fpmem_offset_operand\" \"i\")))\n+\t(match_operand:SF 2 \"register_operand\" \"f\"))\n+   (set (match_dup 0)\n+\t(plus:SI (match_dup 0) (match_dup 1)))]\n   \"TARGET_HARD_FLOAT\"\n   \"*\n {\n@@ -1275,12 +1273,12 @@\n }\")\n \n (define_insn \"movstrsi_internal\"\n-  [(parallel [(set (match_operand:BLK 0 \"memory_operand\" \"=U\")\n-\t\t   (match_operand:BLK 1 \"memory_operand\" \"U\"))\n-\t      (use (match_operand:SI 2 \"arith_operand\" \"\"))\n-\t      (use (match_operand:SI 3 \"const_int_operand\" \"\"))\n-\t      (clobber (match_scratch:SI 4 \"=&r\"))\n-\t      (clobber (match_scratch:SI 5 \"=&r\"))])]\n+  [(set (match_operand:BLK 0 \"memory_operand\" \"=U\")\n+\t(match_operand:BLK 1 \"memory_operand\" \"U\"))\n+   (use (match_operand:SI 2 \"arith_operand\" \"\"))\n+   (use (match_operand:SI 3 \"const_int_operand\" \"\"))\n+   (clobber (match_scratch:SI 4 \"=&r\"))\n+   (clobber (match_scratch:SI 5 \"=&r\"))]\n   \"\"\n   \"*\n {\n@@ -1553,7 +1551,7 @@\n \n ;; Branch patterns for standard integer comparisons\n \n-(define_insn \"\"\n+(define_insn \"*btrue\"\n   [(set (pc)\n \t(if_then_else (match_operator 3 \"branch_operator\"\n \t\t\t [(match_operand:SI 0 \"register_operand\" \"r,r\")\n@@ -1607,7 +1605,7 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3,3\")])\n \n-(define_insn \"\"\n+(define_insn \"*bfalse\"\n   [(set (pc)\n \t(if_then_else (match_operator 3 \"branch_operator\"\n \t\t\t [(match_operand:SI 0 \"register_operand\" \"r,r\")\n@@ -1661,7 +1659,7 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3,3\")])\n \n-(define_insn \"\"\n+(define_insn \"*ubtrue\"\n   [(set (pc)\n \t(if_then_else (match_operator 3 \"ubranch_operator\"\n \t\t\t [(match_operand:SI 0 \"register_operand\" \"r,r\")\n@@ -1696,7 +1694,7 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3,3\")])\n \n-(define_insn \"\"\n+(define_insn \"*ubfalse\"\n   [(set (pc)\n \t(if_then_else (match_operator 3 \"ubranch_operator\"\n \t\t\t [(match_operand:SI 0 \"register_operand\" \"r,r\")\n@@ -1733,7 +1731,7 @@\n \n ;; Branch patterns for bit testing\n \n-(define_insn \"\"\n+(define_insn \"*bittrue\"\n   [(set (pc)\n \t(if_then_else (match_operator 3 \"boolean_operator\"\n \t\t\t[(zero_extract:SI\n@@ -1773,7 +1771,7 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*bitfalse\"\n   [(set (pc)\n \t(if_then_else (match_operator 3 \"boolean_operator\"\n \t\t\t[(zero_extract:SI\n@@ -1813,7 +1811,7 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*masktrue\"\n   [(set (pc)\n \t(if_then_else (match_operator 3 \"boolean_operator\"\n \t\t [(and:SI (match_operand:SI 0 \"register_operand\" \"r\")\n@@ -1837,7 +1835,7 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*maskfalse\"\n   [(set (pc)\n \t(if_then_else (match_operator 3 \"boolean_operator\"\n \t\t [(and:SI (match_operand:SI 0 \"register_operand\" \"r\")\n@@ -1868,27 +1866,24 @@\n ;; since since loop end is handled in hardware.\n \n (define_insn \"zero_cost_loop_start\"\n-  [(parallel [(set (pc) (if_then_else (eq (match_operand:SI 0 \"register_operand\" \"a\")\n-\t\t\t\t\t  (const_int 0))\n-\t\t\t\t      (label_ref (match_operand 1 \"\" \"\"))\n-\t\t\t\t      (pc)))\n-\t      (set (reg:SI 19)\n-\t\t   (plus:SI (match_dup 0)\n-\t\t\t    (const_int -1)))])]\n+  [(set (pc) (if_then_else (eq (match_operand:SI 0 \"register_operand\" \"a\")\n+\t\t\t       (const_int 0))\n+\t\t\t   (label_ref (match_operand 1 \"\" \"\"))\n+\t\t\t   (pc)))\n+   (set (reg:SI 19)\n+\t(plus:SI (match_dup 0) (const_int -1)))]\n   \"\"\n   \"loopnez %0, %l1\"\n   [(set_attr \"type\"\t\"jump\")\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3\")])\n \n (define_insn \"zero_cost_loop_end\"\n-  [(parallel [(set (pc) (if_then_else (ne (reg:SI 19)\n-\t\t\t\t\t  (const_int 0))\n-\t\t\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t\t\t      (pc)))\n-\t      (set (reg:SI 19)\n-\t\t   (plus:SI (reg:SI 19)\n-\t\t\t    (const_int -1)))])]\n+  [(set (pc) (if_then_else (ne (reg:SI 19) (const_int 0))\n+\t\t\t   (label_ref (match_operand 0 \"\" \"\"))\n+\t\t\t   (pc)))\n+   (set (reg:SI 19)\n+\t(plus:SI (reg:SI 19) (const_int -1)))]\n   \"\"\n   \"*\n     xtensa_emit_loop_end (insn, operands);\n@@ -2426,7 +2421,7 @@\n ;; The preceding splitter needs something to split the insn into;\n ;; things start breaking if the result is just a \"use\" so instead we\n ;; generate the following insn.\n-(define_insn \"\"\n+(define_insn \"*unspec_nop\"\n   [(unspec [(const_int 0)] UNSPEC_NOP)]\n   \"\"\n   \"\"\n@@ -2461,7 +2456,7 @@ srli\\\\t%3, %3, 30\\;slli\\\\t%0, %1, 2\\;ssai\\\\t2\\;src\\\\t%0, %3, %0\"\n \n ;; branch patterns\n \n-(define_insn \"\"\n+(define_insn \"*booltrue\"\n   [(set (pc)\n \t(if_then_else (match_operator 2 \"boolean_operator\"\n \t\t\t [(match_operand:CC 0 \"register_operand\" \"b\")\n@@ -2480,7 +2475,7 @@ srli\\\\t%3, %3, 30\\;slli\\\\t%0, %1, 2\\;ssai\\\\t2\\;src\\\\t%0, %3, %0\"\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3\")])\n \n-(define_insn \"\"\n+(define_insn \"*boolfalse\"\n   [(set (pc)\n \t(if_then_else (match_operator 2 \"boolean_operator\"\n \t\t\t [(match_operand:CC 0 \"register_operand\" \"b\")"}]}