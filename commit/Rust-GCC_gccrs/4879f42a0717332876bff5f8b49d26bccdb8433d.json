{"sha": "4879f42a0717332876bff5f8b49d26bccdb8433d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3OWY0MmEwNzE3MzMyODc2YmZmNWY4YjQ5ZDI2YmNjZGI4NDMzZA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2013-10-29T13:19:08Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2013-10-29T13:19:08Z"}, "message": "re PR tree-optimization/19831 (Missing DSE/malloc/free optimization)\n\n2013-10-29  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/19831\ngcc/\n\t* tree-ssa-alias.c (stmt_kills_ref_p_1): Handle BUILT_IN_FREE.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/alias-25.c: New file.\n\nFrom-SVN: r204160", "tree": {"sha": "5bcb5b0ffa3c67a0e28995a6eb2346aea53ffdd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bcb5b0ffa3c67a0e28995a6eb2346aea53ffdd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4879f42a0717332876bff5f8b49d26bccdb8433d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4879f42a0717332876bff5f8b49d26bccdb8433d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4879f42a0717332876bff5f8b49d26bccdb8433d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4879f42a0717332876bff5f8b49d26bccdb8433d/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eda14d6a857eab422c6027990fa82d68c1952b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda14d6a857eab422c6027990fa82d68c1952b55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda14d6a857eab422c6027990fa82d68c1952b55"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "3bb38ebf4fb4533ef02d8ecc48c7a8c810970575", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4879f42a0717332876bff5f8b49d26bccdb8433d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4879f42a0717332876bff5f8b49d26bccdb8433d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4879f42a0717332876bff5f8b49d26bccdb8433d", "patch": "@@ -1,3 +1,8 @@\n+2013-10-29  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/19831\n+\t* tree-ssa-alias.c (stmt_kills_ref_p_1): Handle BUILT_IN_FREE.\n+\n 2013-10-29  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* tree-outof-ssa.h: Remove include files."}, {"sha": "69937edf632818f6f9e24c7bff51c45ff3a51c48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4879f42a0717332876bff5f8b49d26bccdb8433d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4879f42a0717332876bff5f8b49d26bccdb8433d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4879f42a0717332876bff5f8b49d26bccdb8433d", "patch": "@@ -1,3 +1,8 @@\n+2013-10-29  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/19831\n+\t* gcc.dg/tree-ssa/alias-25.c: New file.\n+\n 2013-10-29  Richard Biener  <rguenther@suse.de>\n \n \t* g++.dg/vect/slp-pr56812.cc: Adjust with respect to -fvect-cost-model"}, {"sha": "f5705d03cd96c9e8200f1d5418c65ab94e0d18cb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-25.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4879f42a0717332876bff5f8b49d26bccdb8433d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4879f42a0717332876bff5f8b49d26bccdb8433d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-25.c?ref=4879f42a0717332876bff5f8b49d26bccdb8433d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-optimized\" } */\n+\n+void f (long *p) {\n+  *p = 42;\n+  p[4] = 42;\n+  __builtin_free (p);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"= 42\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+"}, {"sha": "4db83bd1f983ad75bddd34968cc75f22a6273c8c", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4879f42a0717332876bff5f8b49d26bccdb8433d/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4879f42a0717332876bff5f8b49d26bccdb8433d/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=4879f42a0717332876bff5f8b49d26bccdb8433d", "patch": "@@ -2057,6 +2057,16 @@ stmt_kills_ref_p_1 (gimple stmt, ao_ref *ref)\n \t  && DECL_BUILT_IN_CLASS (callee) == BUILT_IN_NORMAL)\n \tswitch (DECL_FUNCTION_CODE (callee))\n \t  {\n+\t  case BUILT_IN_FREE:\n+\t    {\n+\t      tree ptr = gimple_call_arg (stmt, 0);\n+\t      tree base = ao_ref_base (ref);\n+\t      if (base && TREE_CODE (base) == MEM_REF\n+\t\t  && TREE_OPERAND (base, 0) == ptr)\n+\t\treturn true;\n+\t      break;\n+\t    }\n+\n \t  case BUILT_IN_MEMCPY:\n \t  case BUILT_IN_MEMPCPY:\n \t  case BUILT_IN_MEMMOVE:"}]}