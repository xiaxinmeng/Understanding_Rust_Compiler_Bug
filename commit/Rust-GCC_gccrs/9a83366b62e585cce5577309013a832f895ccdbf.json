{"sha": "9a83366b62e585cce5577309013a832f895ccdbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE4MzM2NmI2MmU1ODVjY2U1NTc3MzA5MDEzYTgzMmY4OTVjY2RiZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-23T08:11:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-23T08:11:41Z"}, "message": "Fix up plugin header install\n\nJeff has noticed and I've confirmed that config/i386/i386.h header which is\ninstalled on x86 in plugin/include/ directory newly in GCC 11 has\nwhich breaks all plugins that include tm.h etc. because that header is not\nshipped.\nThe following patch seems to fix that.  Unfortunately it isn't just a matter\nof TM_H += t-i386 change, because the header has full path and therefore\nneeds to be installed in its full path.\nAdditionally, I've noticed that the b-header-vars generation is completely\nbroken, it will just throw many of the dependencies away, because it\nincorrectly removed everything from first ... remaining till the last /,\nwhile what it clearly wants to do is remove each ... till last / in the same\nheader path (i.e. instead of .* should have used [^     ]* and g modifier).\nI've also noticed that some other headers mentioned in #include of other\nheaders aren't included (gomp-constants.h as dependency of omp-general.h\nand various dependencies of expr.h (where omp-general.h and expr.h were\npreviously installed)).\n\n2020-10-23  Jakub Jelinek  <jakub@redhat.com>\n\n\t* Makefile.in (PLUGIN_HEADERS): Add gomp-constants.h and $(EXPR_H).\n\t(s-header-vars): Accept not just spaces but also tabs between *_H name\n\tand =.  Handle common/config/ headers similarly to config.  Don't\n\tthrow away everything from first ... to last / on the remaining\n\tstring, instead skip just ... to corresponding last / without\n\tintervening spaces and tabs.\n\t(install-plugin): Treat common/config headers like config headers.\n\t* config/i386/t-i386 (TM_H): Add\n\t$(srcdir)/common/config/i386/i386-cpuinfo.h.", "tree": {"sha": "0f5b6ade2e69a48b7756538fce9fd59e9e236bad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f5b6ade2e69a48b7756538fce9fd59e9e236bad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a83366b62e585cce5577309013a832f895ccdbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a83366b62e585cce5577309013a832f895ccdbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a83366b62e585cce5577309013a832f895ccdbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a83366b62e585cce5577309013a832f895ccdbf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bc94898fac1bd9cc1dabf227208fb5d369c4c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50bc94898fac1bd9cc1dabf227208fb5d369c4c4"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "f883c81ee5dbba7fdb87e2c87c5b2c0fa34c4132", "filename": "gcc/Makefile.in", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a83366b62e585cce5577309013a832f895ccdbf/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a83366b62e585cce5577309013a832f895ccdbf/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9a83366b62e585cce5577309013a832f895ccdbf", "patch": "@@ -3594,7 +3594,8 @@ PLUGIN_HEADERS = $(TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   tree-ssa-threadupdate.h inchash.h wide-int.h signop.h hash-map.h \\\n   hash-set.h dominance.h cfg.h cfgrtl.h cfganal.h cfgbuild.h cfgcleanup.h \\\n   lcm.h cfgloopmanip.h file-prefix-map.h builtins.def $(INSN_ATTR_H) \\\n-  pass-instances.def params.list\n+  pass-instances.def params.list $(srcdir)/../include/gomp-constants.h \\\n+  $(EXPR_H)\n \n # generate the 'build fragment' b-header-vars\n s-header-vars: Makefile\n@@ -3604,7 +3605,7 @@ s-header-vars: Makefile\n # more portable than a trailing \"-e d\" to filter out the uninteresting lines,\n # in particular on ia64-hpux where \"s/.../p\" only prints if -n was requested\n # as well.\n-\t$(foreach header_var,$(shell sed < Makefile -n -e 's/^\\([A-Z0-9_]*_H\\)[      ]*=.*/\\1/p'),echo $(header_var)=$(shell echo $($(header_var):$(srcdir)/%=.../%) | sed -e 's~\\.\\.\\./config/~config/~' -e 's~\\.\\.\\..*/~~') >> tmp-header-vars;) \\\n+\t$(foreach header_var,$(shell sed < Makefile -n -e 's/^\\([A-Z0-9_]*_H\\)[ \t]*=.*/\\1/p'),echo $(header_var)=$(shell echo $($(header_var):$(srcdir)/%=.../%) | sed -e 's~\\.\\.\\./config/~config/~' -e 's~\\.\\.\\./common/config/~common/config/~' -e 's~\\.\\.\\.[^ \t]*/~~g') >> tmp-header-vars;)\n \t$(SHELL) $(srcdir)/../move-if-change tmp-header-vars b-header-vars\n \t$(STAMP) s-header-vars\n \n@@ -3617,8 +3618,8 @@ install-gengtype: installdirs gengtype$(exeext) gtype.state\n \n # Install the headers needed to build a plugin.\n install-plugin: installdirs lang.install-plugin s-header-vars install-gengtype\n-# We keep the directory structure for files in config or c-family and .def\n-# files. All other files are flattened to a single directory.\n+# We keep the directory structure for files in config, common/config or\n+# c-family and .def files. All other files are flattened to a single directory.\n \t$(mkinstalldirs) $(DESTDIR)$(plugin_includedir)\n \theaders=`echo $(PLUGIN_HEADERS) $$(cd $(srcdir); echo *.h *.def) | tr ' ' '\\012' | sort -u`; \\\n \tsrcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`; \\\n@@ -3630,7 +3631,8 @@ install-plugin: installdirs lang.install-plugin s-header-vars install-gengtype\n \t  else continue; \\\n \t  fi; \\\n \t  case $$path in \\\n-\t  \"$(srcdir)\"/config/* | \"$(srcdir)\"/c-family/* | \"$(srcdir)\"/*.def ) \\\n+\t  \"$(srcdir)\"/config/* | \"$(srcdir)\"/common/config/* \\\n+\t  | \"$(srcdir)\"/c-family/* | \"$(srcdir)\"/*.def ) \\\n \t    base=`echo \"$$path\" | sed -e \"s|$$srcdirstrip/||\"`;; \\\n \t  *) base=`basename $$path` ;; \\\n \t  esac; \\"}, {"sha": "e5fb0618fe630920cb9dad0ff49f47ffa80e686b", "filename": "gcc/config/i386/t-i386", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a83366b62e585cce5577309013a832f895ccdbf/gcc%2Fconfig%2Fi386%2Ft-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a83366b62e585cce5577309013a832f895ccdbf/gcc%2Fconfig%2Fi386%2Ft-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-i386?ref=9a83366b62e585cce5577309013a832f895ccdbf", "patch": "@@ -17,7 +17,8 @@\n # <http://www.gnu.org/licenses/>.\n \n OPTIONS_H_EXTRA += $(srcdir)/config/i386/stringop.def\n-TM_H += $(srcdir)/config/i386/x86-tune.def\n+TM_H += $(srcdir)/config/i386/x86-tune.def \\\n+\t$(srcdir)/common/config/i386/i386-cpuinfo.h\n PASSES_EXTRA += $(srcdir)/config/i386/i386-passes.def\n \n i386-c.o: $(srcdir)/config/i386/i386-c.c"}]}