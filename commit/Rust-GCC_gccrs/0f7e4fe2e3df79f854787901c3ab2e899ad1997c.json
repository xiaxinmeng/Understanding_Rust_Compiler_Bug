{"sha": "0f7e4fe2e3df79f854787901c3ab2e899ad1997c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY3ZTRmZTJlM2RmNzlmODU0Nzg3OTAxYzNhYjJlODk5YWQxOTk3Yw==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2019-04-24T08:16:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-04-24T08:16:07Z"}, "message": "re PR target/89093 (C++ exception handling clobbers d8 VFP register)\n\n\tPR target/89093\n\t* raise-gcc.c (TARGET_ATTRIBUTE): Define.\n\t(continue_unwind, personality_body, PERSONALITY_FUNCTION): Add\n\tTARGET_ATTRIBUTE.\n\nCo-Authored-By: Bernd Edlinger <bernd.edlinger@hotmail.de>\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r270535", "tree": {"sha": "9f8159c505b73d98eaa53a8ecc99e2fd2fcbd306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f8159c505b73d98eaa53a8ecc99e2fd2fcbd306"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f7e4fe2e3df79f854787901c3ab2e899ad1997c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f7e4fe2e3df79f854787901c3ab2e899ad1997c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f7e4fe2e3df79f854787901c3ab2e899ad1997c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f7e4fe2e3df79f854787901c3ab2e899ad1997c/comments", "author": null, "committer": null, "parents": [{"sha": "3795b582ace1a4d050c21e5ea0ae29e69b5fbde1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3795b582ace1a4d050c21e5ea0ae29e69b5fbde1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3795b582ace1a4d050c21e5ea0ae29e69b5fbde1"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "0888f548ec70f0d495d81edb03714fd56eabcdf0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7e4fe2e3df79f854787901c3ab2e899ad1997c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7e4fe2e3df79f854787901c3ab2e899ad1997c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0f7e4fe2e3df79f854787901c3ab2e899ad1997c", "patch": "@@ -1,3 +1,12 @@\n+2019-04-24  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\t    Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/89093\n+\t* raise-gcc.c (TARGET_ATTRIBUTE): Define.\n+\t(continue_unwind, personality_body, PERSONALITY_FUNCTION): Add\n+\tTARGET_ATTRIBUTE.\n+\n 2019-04-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* libgnat/i-cexten.ads (CFloat_128): New type."}, {"sha": "6092a87b881b4b36d5542ad003f41134d6aaad81", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7e4fe2e3df79f854787901c3ab2e899ad1997c/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7e4fe2e3df79f854787901c3ab2e899ad1997c/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=0f7e4fe2e3df79f854787901c3ab2e899ad1997c", "patch": "@@ -1154,10 +1154,18 @@ extern void __gnat_notify_unhandled_exception (struct Exception_Occurrence *);\n #define PERSONALITY_FUNCTION    __gnat_personality_v0\n #endif\n \n+#if defined (__ARM_EABI_UNWINDER__) \\\n+    && (defined (IN_RTS) || GCC_VERSION > 9000)\n+#define TARGET_ATTRIBUTE __attribute__((target (\"general-regs-only\")))\n+#else\n+#define TARGET_ATTRIBUTE\n+#endif\n+\n /* Code executed to continue unwinding.  With the ARM unwinder, the\n    personality routine must unwind one frame (per EHABI 7.3 4.).  */\n \n static _Unwind_Reason_Code\n+TARGET_ATTRIBUTE\n continue_unwind (struct _Unwind_Exception* ue_header ATTRIBUTE_UNUSED,\n \t\t struct _Unwind_Context* uw_context ATTRIBUTE_UNUSED)\n {\n@@ -1172,6 +1180,7 @@ continue_unwind (struct _Unwind_Exception* ue_header ATTRIBUTE_UNUSED,\n    between all unwinders.  */\n \n static _Unwind_Reason_Code\n+TARGET_ATTRIBUTE\n personality_body (_Unwind_Action uw_phases,\n \t\t  _Unwind_Exception *uw_exception,\n \t\t  _Unwind_Context *uw_context)\n@@ -1342,6 +1351,7 @@ PERSONALITY_FUNCTION (_Unwind_State state,\n \t\t      struct _Unwind_Context* uw_context);\n \n PERSONALITY_STORAGE _Unwind_Reason_Code\n+TARGET_ATTRIBUTE\n PERSONALITY_FUNCTION (_Unwind_State state,\n \t\t      struct _Unwind_Exception* uw_exception,\n \t\t      struct _Unwind_Context* uw_context)"}]}