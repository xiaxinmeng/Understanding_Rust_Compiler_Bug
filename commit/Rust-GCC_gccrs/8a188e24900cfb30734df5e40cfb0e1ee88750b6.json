{"sha": "8a188e24900cfb30734df5e40cfb0e1ee88750b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExODhlMjQ5MDBjZmIzMDczNGRmNWU0MGNmYjBlMWVlODg3NTBiNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2002-10-18T08:09:58Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-10-18T08:09:58Z"}, "message": "class.c (add_method): Compare template parms too.\n\ncp:\n\t* class.c (add_method): Compare template parms too.\ntestsuite:\n\t* g++.dg/overload/member2.C: New test.\n\nFrom-SVN: r58278", "tree": {"sha": "338aa389ed355ded202d085305820a23b45a64eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/338aa389ed355ded202d085305820a23b45a64eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a188e24900cfb30734df5e40cfb0e1ee88750b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a188e24900cfb30734df5e40cfb0e1ee88750b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a188e24900cfb30734df5e40cfb0e1ee88750b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a188e24900cfb30734df5e40cfb0e1ee88750b6/comments", "author": null, "committer": null, "parents": [{"sha": "e6ffac8ac0122ad5ee19e88b10243b96076e5ddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ffac8ac0122ad5ee19e88b10243b96076e5ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6ffac8ac0122ad5ee19e88b10243b96076e5ddc"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "e2a0976f7a108870219ce8067dc8617a4e1ed1f3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a188e24900cfb30734df5e40cfb0e1ee88750b6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a188e24900cfb30734df5e40cfb0e1ee88750b6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8a188e24900cfb30734df5e40cfb0e1ee88750b6", "patch": "@@ -1,3 +1,7 @@\n+2002-10-17  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (add_method): Compare template parms too.\n+\n 2002-10-17  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/7584"}, {"sha": "7c660980c5774fbd3f1b21bed5e039093bdbdf0b", "filename": "gcc/cp/class.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a188e24900cfb30734df5e40cfb0e1ee88750b6/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a188e24900cfb30734df5e40cfb0e1ee88750b6/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8a188e24900cfb30734df5e40cfb0e1ee88750b6", "patch": "@@ -950,6 +950,13 @@ add_method (type, method, error_p)\n \t      && (TYPE_QUALS (TREE_TYPE (TREE_VALUE (parms1)))\n \t\t  != TYPE_QUALS (TREE_TYPE (TREE_VALUE (parms2)))))\n \t    same = 0;\n+\t  \n+\t  /* For templates, the template parms must be identical.  */\n+\t  if (TREE_CODE (fn) == TEMPLATE_DECL\n+\t      && !comp_template_parms (DECL_TEMPLATE_PARMS (fn),\n+\t\t\t\t       DECL_TEMPLATE_PARMS (method)))\n+\t    same = 0;\n+\t  \n \t  if (! DECL_STATIC_FUNCTION_P (fn))\n \t    parms1 = TREE_CHAIN (parms1);\n \t  if (! DECL_STATIC_FUNCTION_P (method))"}, {"sha": "20fda9f5999cd014740d3dbc30dd6cb8ffe59c39", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a188e24900cfb30734df5e40cfb0e1ee88750b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a188e24900cfb30734df5e40cfb0e1ee88750b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a188e24900cfb30734df5e40cfb0e1ee88750b6", "patch": "@@ -1,3 +1,7 @@\n+2002-10-17  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/overload/member2.C: New test.\n+\n 2002-10-17  Janis Johnson  <janis187@us.ibm.com>\n \n \t* g++.dg/README: Describe new compat directory."}, {"sha": "b8914146f16832b02063fc7b06a8c18d113ebbeb", "filename": "gcc/testsuite/g++.dg/overload/member2.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a188e24900cfb30734df5e40cfb0e1ee88750b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fmember2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a188e24900cfb30734df5e40cfb0e1ee88750b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fmember2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fmember2.C?ref=8a188e24900cfb30734df5e40cfb0e1ee88750b6", "patch": "@@ -0,0 +1,41 @@\n+// { dg-do run }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 17 Oct 2002 <nathan@codesourcery.com>\n+\n+// PR 7676. We didn't notice template members were different.\n+\n+struct foo\n+{\n+  template<class T>\n+  int bar() {return 1;}\n+  \n+  template<int I>\n+  int bar() {return 2;}\n+    \n+};\n+\n+struct baz : foo\n+{\n+  using foo::bar;\n+  template<int I>\n+  int bar () {return 3;}\n+};\n+\n+int main ()\n+{\n+  baz b;\n+  foo f;\n+\n+  if (f.bar<1> () != 2)\n+    return 1;\n+  if (f.bar<int> () != 1)\n+    return 2;\n+  \n+  if (b.bar<1> () != 3)\n+    return 1;\n+  if (b.bar<int> () != 1)\n+    return 2;\n+\n+  return 0;\n+}"}]}