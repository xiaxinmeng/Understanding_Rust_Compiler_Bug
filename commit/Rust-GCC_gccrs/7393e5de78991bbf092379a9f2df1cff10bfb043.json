{"sha": "7393e5de78991bbf092379a9f2df1cff10bfb043", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM5M2U1ZGU3ODk5MWJiZjA5MjM3OWE5ZjJkZjFjZmYxMGJmYjA0Mw==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2018-06-22T14:34:37Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2018-06-22T14:34:37Z"}, "message": "Fix test case failures for pdp11 target.\n\n\t* gcc.c-torture/execute/builtins/lib/chk.c: Use smaller alignment\n\tif pdp11.\n\t* gcc.c-torture/compile/20010518-2.c: Skip if pdp11 -mint32.\n\t* gcc.c-torture/compile/20040101-1.c: Ditto.\n\t* gcc.c-torture/compile/20050622-1.c: Ditto.\n\t* gcc.c-torture/compile/20080625-1.c: Ditto.\n\t* gcc.c-torture/compile/20090107-1.c: Ditto.\n\t* gcc.c-torture/compile/920501-12.c: Ditto.\n\t* gcc.c-torture/compile/920501-4.c: Ditto.\n\t* gcc.c-torture/compile/961203-1.c: Ditto.\n\t* gcc.c-torture/compile/limits-externdecl.c: Ditto.\n\t* gcc.c-torture/compile/pr25310.c: Ditto.\n\nFrom-SVN: r261897", "tree": {"sha": "994f61d8fcd333eda7b93082144766c091e58a2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/994f61d8fcd333eda7b93082144766c091e58a2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7393e5de78991bbf092379a9f2df1cff10bfb043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7393e5de78991bbf092379a9f2df1cff10bfb043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7393e5de78991bbf092379a9f2df1cff10bfb043", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7393e5de78991bbf092379a9f2df1cff10bfb043/comments", "author": null, "committer": null, "parents": [{"sha": "38a4d6da179a0c88cc8b697470f928488e0553ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a4d6da179a0c88cc8b697470f928488e0553ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a4d6da179a0c88cc8b697470f928488e0553ee"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "b3bb851c8abffd4801d1ac336fbac6e070f70319", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,3 +1,18 @@\n+2018-06-22  Paul Koning  <ni1d@arrl.net>\n+\n+\t* gcc.c-torture/execute/builtins/lib/chk.c: Use smaller alignment\n+\tif pdp11.\n+\t* gcc.c-torture/compile/20010518-2.c: Skip if pdp11 -mint32.\n+\t* gcc.c-torture/compile/20040101-1.c: Ditto.\n+\t* gcc.c-torture/compile/20050622-1.c: Ditto.\n+\t* gcc.c-torture/compile/20080625-1.c: Ditto.\n+\t* gcc.c-torture/compile/20090107-1.c: Ditto.\n+\t* gcc.c-torture/compile/920501-12.c: Ditto.\n+\t* gcc.c-torture/compile/920501-4.c: Ditto.\n+\t* gcc.c-torture/compile/961203-1.c: Ditto.\n+\t* gcc.c-torture/compile/limits-externdecl.c: Ditto.\n+\t* gcc.c-torture/compile/pr25310.c: Ditto.\n+\n 2018-06-22  Cesar Philippidis  <cesar@codesourcery.com>\n \t    James Norris  <jnorris@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>"}, {"sha": "0a1bb74f9b13cbba0d743ad8647928ed454b4abd", "filename": "gcc/testsuite/gcc.c-torture/compile/20010518-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010518-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010518-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010518-2.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-skip-if \"Array too big\" { \"pdp11-*-*\" } { \"-mint32\" } } */\n \n /* Large static storage.  */\n "}, {"sha": "5c2688ad830f6681a3046907216e46ebe66af6bf", "filename": "gcc/testsuite/gcc.c-torture/compile/20040101-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040101-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040101-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20040101-1.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-skip-if \"not enough registers\" { pdp11-*-* } { \"-O[12s]\" } { \"\" } } */\n+/* { dg-skip-if \"not enough registers\" { pdp11-*-* } } */\n \n typedef unsigned short uint16_t;\n typedef unsigned int uint32_t;"}, {"sha": "829f9dd857d3c7367ab73b59b21914429bf676fe", "filename": "gcc/testsuite/gcc.c-torture/compile/20050622-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050622-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050622-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050622-1.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"Array too big\" { \"pdp11-*-*\" } { \"-mint32\" } } */\n+\n #if __SCHAR_MAX__ == 127 && __INT_MAX__ >= 2147483647\n struct S { char buf[72*1024*1024]; };\n #else"}, {"sha": "33e2d63508d4906e6edad8fc97c6c231500e2ce5", "filename": "gcc/testsuite/gcc.c-torture/compile/20080625-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,4 +1,5 @@\n /* { dg-require-effective-target int32plus } */\n+/* { dg-skip-if \"Array too big\" { \"pdp11-*-*\" } { \"-mint32\" } } */\n \n struct peakbufStruct {\n     unsigned int lnum [5000];"}, {"sha": "75a80fdfff93ebf9811e489decf476aaa812be29", "filename": "gcc/testsuite/gcc.c-torture/compile/20090107-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090107-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090107-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090107-1.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"Array too big\" { \"pdp11-*-*\" } { \"-mint32\" } } */\n+\n /* Verify that we don't ICE by forming invalid addresses for unaligned\n    doubleword loads (originally for PPC64).  */\n "}, {"sha": "68892a689dfb578bb6e1edce9fdd854164a98eea", "filename": "gcc/testsuite/gcc.c-torture/compile/920501-12.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-12.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do assemble } */\n+/* { dg-skip-if \"Array too big\" { \"pdp11-*-*\" } { \"-mint32\" } } */\n \n x(x){            return 3 + x;}\n a(x){int y[994]; return 3 + x;}"}, {"sha": "10736ae76a470ff7834a86de6c105361f6a5be98", "filename": "gcc/testsuite/gcc.c-torture/compile/920501-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-4.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do assemble } */\n /* { dg-skip-if \"ptxas times out\" { nvptx-*-* } { \"-O1\" } { \"\" } } */\n+/* { dg-skip-if \"Array too big\" { \"pdp11-*-*\" } { \"-mint32\" } } */\n \n foo ()\n {"}, {"sha": "91823524a2e58cde96b0d92a6a25ed34d3a13d41", "filename": "gcc/testsuite/gcc.c-torture/compile/961203-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F961203-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F961203-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F961203-1.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,6 +1,7 @@\n /* The structure is too large for the xstormy16 - won't fit in 16\n    bits.  */\n /* { dg-do assemble } */\n+/* { dg-skip-if \"Array too big\" { \"pdp11-*-*\" } { \"-mint32\" } } */\n \n #if __INT_MAX__ >= 2147483647L\n struct s {"}, {"sha": "d3828015a75dd1d19fb35c72e5beb669604fc20f", "filename": "gcc/testsuite/gcc.c-torture/compile/limits-externdecl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,4 +1,5 @@\n /* { dg-skip-if \"ptxas runs out of memory\" { nvptx-*-* } } */\n+/* { dg-skip-if \"Array too big\" { \"pdp11-*-*\" } { \"-mint32\" } } */\n \n /* { dg-require-effective-target int32plus } */\n /* Inspired by the test case for PR middle-end/52640.  */"}, {"sha": "54695e05b4f5c7cade165dc28aac893579729d95", "filename": "gcc/testsuite/gcc.c-torture/compile/pr25310.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr25310.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr25310.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr25310.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"Array too big\" { \"pdp11-*-*\" } { \"-mint32\" } } */\n \n /* Prevent spurious test failures on 16-bit targets.  */\n #if __INT_MAX__ >= 2147483647L"}, {"sha": "fd9e6015faac9a0ee94d2bad9e3f29f4a54587e1", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/lib/chk.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Flib%2Fchk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7393e5de78991bbf092379a9f2df1cff10bfb043/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Flib%2Fchk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Flib%2Fchk.c?ref=7393e5de78991bbf092379a9f2df1cff10bfb043", "patch": "@@ -3,10 +3,18 @@\n #include <sys/types.h>\n #endif\n \n+/* If some target has a Max alignment less than 16, please create\n+   a #ifdef around the alignment and add your alignment.  */\n+#ifdef __pdp11__\n+#define ALIGNMENT 2\n+#else\n+#define ALIGNMENT 16\n+#endif\n+\n extern void abort (void);\n \n extern int inside_main;\n-void *chk_fail_buf[256] __attribute__((aligned (16)));\n+void *chk_fail_buf[256] __attribute__((aligned (ALIGNMENT)));\n volatile int chk_fail_allowed, chk_calls;\n volatile int memcpy_disallowed, mempcpy_disallowed, memmove_disallowed;\n volatile int memset_disallowed, strcpy_disallowed, stpcpy_disallowed;"}]}