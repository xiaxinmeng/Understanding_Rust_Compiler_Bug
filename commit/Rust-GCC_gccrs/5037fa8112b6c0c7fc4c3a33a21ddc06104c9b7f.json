{"sha": "5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAzN2ZhODExMmI2YzBjN2ZjNGMzYTMzYTIxZGRjMDYxMDRjOWI3Zg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2001-10-25T17:38:14Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-10-25T17:38:14Z"}, "message": "msgs.exp: Delete.\n\n\t* gcc.misc-tests/msgs.exp: Delete.\n\t* gcc.misc-tests/m-un-1.c: Move to gcc.dg.\n\t* gcc.misc-tests/m-un-2.c: Move to gcc.dg.  Update expected\n\terror set to match recent changes.\n\nFrom-SVN: r46491", "tree": {"sha": "b7b6bb637ed08f8680755b6190d03d752063230f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7b6bb637ed08f8680755b6190d03d752063230f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f/comments", "author": null, "committer": null, "parents": [{"sha": "e16ffa0d616f9e073bca1c2ad0b2521247178194", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e16ffa0d616f9e073bca1c2ad0b2521247178194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e16ffa0d616f9e073bca1c2ad0b2521247178194"}], "stats": {"total": 42, "additions": 10, "deletions": 32}, "files": [{"sha": "a11905eba62998fc32ac237f2a2d9ca72def439f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f", "patch": "@@ -1,3 +1,10 @@\n+2001-10-25  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gcc.misc-tests/msgs.exp: Delete.\n+\t* gcc.misc-tests/m-un-1.c: Move to gcc.dg.\n+\t* gcc.misc-tests/m-un-2.c: Move to gcc.dg.  Update expected\n+\terror set to match recent changes.\n+\n 2001-10-24  Zack Weinberg  <zack@codesourcery.com>\n \n \t* gcc.dg/20011021-1.c: New test."}, {"sha": "ad84d44ca1512faca1e7d6cece1b5097d89a8455", "filename": "gcc/testsuite/gcc.dg/m-un-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-1.c?ref=5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f", "previous_filename": "gcc/testsuite/gcc.misc-tests/m-un-1.c"}, {"sha": "e31646b6f204c29630910bbc02231b179f46f4b9", "filename": "gcc/testsuite/gcc.dg/m-un-2.c", "status": "renamed", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-2.c?ref=5037fa8112b6c0c7fc4c3a33a21ddc06104c9b7f", "patch": "@@ -18,11 +18,12 @@ struct vtable mtable = {\n }; /* { dg-warning \"missing initializer\" \"warning regression\" { target *-*-* } {18} } */\n    /* { dg-warning \"initialization for `mtable._realloc'\" \"warning regression\" { target *-*-* } {18} } */\n \n+/* With designated initializers, we assume you meant to leave out the\n+   initialization of any blank fields.  */\n struct vtable mtable2 = {\n   ._malloc = malloc,\n   ._realloc = realloc\n-}; /* { dg-warning \"missing initializer\" \"warning regression\" { target *-*-* } {24} } */\n-   /* { dg-warning \"initialization for `mtable2._free'\" \"warning regression\" { target *-*-* } {24} } */\n+};\n \n struct vtable mtable3 = {\n   ._free = free,", "previous_filename": "gcc/testsuite/gcc.misc-tests/m-un-2.c"}, {"sha": "219facdaf41170572a0ad4779314a4183c133e24", "filename": "gcc/testsuite/gcc.misc-tests/msgs.exp", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e16ffa0d616f9e073bca1c2ad0b2521247178194/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fmsgs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e16ffa0d616f9e073bca1c2ad0b2521247178194/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fmsgs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fmsgs.exp?ref=e16ffa0d616f9e073bca1c2ad0b2521247178194", "patch": "@@ -1,30 +0,0 @@\n-#   Copyright (C) 1997 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n-\n-# Test gcc warning and error messages.\n-# Our testcases are named m-*.c (\"m\" and not \"msg\" to avoid DOS problems).\n-\n-# Load support procs.\n-load_lib gcc-dg.exp\n-\n-# Initialize harness.\n-dg-init\n-\n-# Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/m-*.c]] \"\" \"\"\n-\n-# All done.\n-dg-finish"}]}