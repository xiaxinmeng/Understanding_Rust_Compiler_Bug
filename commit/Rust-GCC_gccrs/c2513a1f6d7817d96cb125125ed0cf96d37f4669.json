{"sha": "c2513a1f6d7817d96cb125125ed0cf96d37f4669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI1MTNhMWY2ZDc4MTdkOTZjYjEyNTEyNWVkMGNmOTZkMzdmNDY2OQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-10-29T18:22:05Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-10-29T18:22:05Z"}, "message": "any: Add feature-testing macro.\n\n\t* include/experimental/any: Add feature-testing macro.\n\t* include/experimental/optional: Likewise.\n\t* include/experimental/string_view: Likewise.\n\t* include/experimental/tuple: Likewise.\n\t* include/experimental/type_traits: Likewise.\n\t* testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error.\n\nFrom-SVN: r216848", "tree": {"sha": "d450a31e72dd42a2b24d66141d1479a372d6eca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d450a31e72dd42a2b24d66141d1479a372d6eca9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2513a1f6d7817d96cb125125ed0cf96d37f4669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2513a1f6d7817d96cb125125ed0cf96d37f4669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2513a1f6d7817d96cb125125ed0cf96d37f4669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2513a1f6d7817d96cb125125ed0cf96d37f4669/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43e9f72225b84f101fed8d86b27d47b008d0910f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43e9f72225b84f101fed8d86b27d47b008d0910f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43e9f72225b84f101fed8d86b27d47b008d0910f"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "e513ac7a5d5bece4d3fb6fcf5d764ce692d0749e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c2513a1f6d7817d96cb125125ed0cf96d37f4669", "patch": "@@ -12,6 +12,13 @@\n \t* testsuite/experimental/functional/value.cc: New.\n \t* testsuite/experimental/feat-lib-fund.cc: Add headers and reorder.\n \n+\t* include/experimental/any: Add feature-testing macro.\n+\t* include/experimental/optional: Likewise.\n+\t* include/experimental/string_view: Likewise.\n+\t* include/experimental/tuple: Likewise.\n+\t* include/experimental/type_traits: Likewise.\n+\t* testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error.\n+\n 2014-10-25  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* doc/xml/manual/status_cxx2011.xml: Update unordered container"}, {"sha": "1de467c1254cf2a71f84e5cf0154a5abcf8d8fec", "filename": "libstdc++-v3/include/experimental/any", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany?ref=c2513a1f6d7817d96cb125125ed0cf96d37f4669", "patch": "@@ -60,6 +60,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @{\n    */\n \n+#define __cpp_lib_experimental_any 201402\n+\n   /**\n    *  @brief Exception class thrown by a failed @c any_cast\n    *  @ingroup exceptions"}, {"sha": "973775bd92556c16e1166ff9feb31df140ce12a3", "filename": "libstdc++-v3/include/experimental/optional", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional?ref=c2513a1f6d7817d96cb125125ed0cf96d37f4669", "patch": "@@ -67,6 +67,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @{\n    */\n \n+#define __cpp_lib_experimental_optional 201406\n+\n   // All subsequent [X.Y.n] references are against n3793.\n \n   // [X.Y.4]"}, {"sha": "320d72db321628c20210c33fe49afc6d5b97744a", "filename": "libstdc++-v3/include/experimental/string_view", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fstring_view?ref=c2513a1f6d7817d96cb125125ed0cf96d37f4669", "patch": "@@ -50,6 +50,8 @@ inline namespace fundamentals_v1\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+#define __cpp_lib_experimental_string_view 201402\n+\n   /**\n    *  @class basic_string_view <experimental/string_view>\n    *  @brief  A non-owning reference to a string."}, {"sha": "5cf02d38256d14b6fb0973fa1481cb12ec7afef0", "filename": "libstdc++-v3/include/experimental/tuple", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple?ref=c2513a1f6d7817d96cb125125ed0cf96d37f4669", "patch": "@@ -44,10 +44,13 @@ namespace experimental\n inline namespace fundamentals_v1\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n   // See C++14 \u00a720.4.2.5, tuple helper classes\n   template <typename _Tp>\n     constexpr size_t tuple_size_v = tuple_size<_Tp>::value;\n \n+#define __cpp_lib_experimental_tuple 201402\n+\n   template <typename _Fn, typename _Tuple, std::size_t... _Idx>\n     constexpr decltype(auto)\n     __apply_impl(_Fn&& f, _Tuple&& t, std::index_sequence<_Idx...>)"}, {"sha": "72aadbe6a25e5d2b4dfefd2ae9609f8aeadecb25", "filename": "libstdc++-v3/include/experimental/type_traits", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits?ref=c2513a1f6d7817d96cb125125ed0cf96d37f4669", "patch": "@@ -50,6 +50,8 @@ inline namespace fundamentals_v1\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+#define __cpp_lib_experimental_type_trait_variable_templates 201402\n+\n // See C++14 \u00a720.10.4.1, primary type categories\n template <typename _Tp>\n   constexpr bool is_void_v = is_void<_Tp>::value;"}, {"sha": "9ef7194a1da150f4a797b70b63f494ca328cc172", "filename": "libstdc++-v3/testsuite/experimental/any/misc/any_cast_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2513a1f6d7817d96cb125125ed0cf96d37f4669/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fany%2Fmisc%2Fany_cast_neg.cc?ref=c2513a1f6d7817d96cb125125ed0cf96d37f4669", "patch": "@@ -26,5 +26,5 @@ void test01()\n   using std::experimental::any_cast;\n \n   const any y(1);\n-  any_cast<int&>(y); // { dg-error \"qualifiers\" \"\" { target { *-*-* } } 380 }\n+  any_cast<int&>(y); // { dg-error \"qualifiers\" \"\" { target { *-*-* } } 382 }\n }"}]}