{"sha": "cb2ef49e8387eb8b454e6d8d27c9909ca3964341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IyZWY0OWU4Mzg3ZWI4YjQ1NGU2ZDhkMjdjOTkwOWNhMzk2NDM0MQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-05-02T11:20:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-02T11:20:03Z"}, "message": "re PR libstdc++/65978 (missing constexpr on std::forward_as_tuple and std::tie (LWG issues 2275 and 2301))\n\n\tPR libstdc++/65978\n\t* include/std/tuple (forward_as_tuple, tie): Add constexpr.\n\t* testsuite/20_util/tuple/creation_functions/constexpr.cc: Uncomment\n\tand fix tests for forward_as_tuple and tie.\n\nFrom-SVN: r222719", "tree": {"sha": "f9ef02a302aac053d48477d7d5ff10120254b0fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9ef02a302aac053d48477d7d5ff10120254b0fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb2ef49e8387eb8b454e6d8d27c9909ca3964341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2ef49e8387eb8b454e6d8d27c9909ca3964341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb2ef49e8387eb8b454e6d8d27c9909ca3964341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb2ef49e8387eb8b454e6d8d27c9909ca3964341/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58f270df2501206548bc691b93d18b3844aef550", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58f270df2501206548bc691b93d18b3844aef550", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58f270df2501206548bc691b93d18b3844aef550"}], "stats": {"total": 47, "additions": 30, "deletions": 17}, "files": [{"sha": "9ba7c30d7ecaaa955d1681bbd5ba2867bfa47ab4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2ef49e8387eb8b454e6d8d27c9909ca3964341/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2ef49e8387eb8b454e6d8d27c9909ca3964341/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cb2ef49e8387eb8b454e6d8d27c9909ca3964341", "patch": "@@ -1,5 +1,10 @@\n 2015-05-02  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/65978\n+\t* include/std/tuple (forward_as_tuple, tie): Add constexpr.\n+\t* testsuite/20_util/tuple/creation_functions/constexpr.cc: Uncomment\n+\tand fix tests for forward_as_tuple and tie.\n+\n \t* src/filesystem/ops.cc (last_write_time) [_GLIBCXX_USE_UTIMENSAT]:\n \tSet timespec members explicitly instead of with a braced-init-list.\n \t[_GLIBCXX_HAVE_UTIME_H]: Use lambda to handle st_atime being a macro."}, {"sha": "ad132bd83084af838a748ab3b12f1915bafd24af", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2ef49e8387eb8b454e6d8d27c9909ca3964341/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2ef49e8387eb8b454e6d8d27c9909ca3964341/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=cb2ef49e8387eb8b454e6d8d27c9909ca3964341", "patch": "@@ -970,8 +970,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __result_type(std::forward<_Elements>(__args)...);\n     }\n \n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2275. Why is forward_as_tuple not constexpr?\n   template<typename... _Elements>\n-    tuple<_Elements&&...>\n+    constexpr tuple<_Elements&&...>\n     forward_as_tuple(_Elements&&... __args) noexcept\n     { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }\n \n@@ -1120,9 +1122,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __concater::_S_do(std::forward<_Tpls>(__tpls)...);\n     }\n \n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 2301. Why is tie not constexpr?\n   /// tie\n   template<typename... _Elements>\n-    inline tuple<_Elements&...>\n+    constexpr tuple<_Elements&...>\n     tie(_Elements&... __args) noexcept\n     { return tuple<_Elements&...>(__args...); }\n "}, {"sha": "3ededfcf5507e8026e1c8c7ec0e14f421e91f8a5", "filename": "libstdc++-v3/testsuite/20_util/tuple/creation_functions/constexpr.cc", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb2ef49e8387eb8b454e6d8d27c9909ca3964341/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb2ef49e8387eb8b454e6d8d27c9909ca3964341/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcreation_functions%2Fconstexpr.cc?ref=cb2ef49e8387eb8b454e6d8d27c9909ca3964341", "patch": "@@ -45,49 +45,51 @@ test_make_tuple()\n   }\n }\n \n-#if 0\n // forward_as_tuple\n void\n test_forward_as_tuple()\n {\n   {\n-    typedef std::tuple<int, float> tuple_type;\n+    static int i(22);\n+    static float f(22.222);\n+    typedef std::tuple<int&, float&&> tuple_type;\n     constexpr tuple_type p1 __attribute__((unused))\n-      = std::forward_as_tuple(22, 22.222);\n+      = std::forward_as_tuple(i, std::move(f));\n   }\n \n   {\n-    typedef std::tuple<int, float, int> tuple_type;\n+    static int i(22);\n+    static float f(22.222);\n+    static int ii(77799);\n+\n+    typedef std::tuple<int&, float&, int&&> tuple_type;\n     constexpr tuple_type p1 __attribute__((unused))\n-      = std::forward_as_tuple(22, 22.222, 77799);\n+      = std::forward_as_tuple(i, f, std::move(ii));\n   }\n }\n-#endif\n \n-#if 0\n // tie\n void\n test_tie()\n {\n   {\n-    int i(22);\n-    float f(22.222);\n-    typedef std::tuple<int, float> tuple_type;\n+    static int i(22);\n+    static float f(22.222);\n+    typedef std::tuple<int&, float&> tuple_type;\n     constexpr tuple_type p1 __attribute__((unused))\n       = std::tie(i, f);\n   }\n \n   {\n-    int i(22);\n-    float f(22.222);\n-    int ii(77799);\n+    static int i(22);\n+    static float f(22.222);\n+    static const int ii(77799);\n \n-    typedef std::tuple<int, float, int> tuple_type;\n+    typedef std::tuple<int&, float&, const int&> tuple_type;\n     constexpr tuple_type p1 __attribute__((unused))\n       = std::tie(i, f, ii);\n   }\n }\n-#endif\n \n // get\n void\n@@ -124,6 +126,8 @@ int\n main()\n {\n   test_make_tuple();\n+  test_forward_as_tuple();\n+  test_tie();\n   test_get();\n   test_tuple_cat();\n "}]}