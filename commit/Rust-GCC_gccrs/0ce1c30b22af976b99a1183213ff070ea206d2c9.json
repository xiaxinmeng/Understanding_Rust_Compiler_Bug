{"sha": "0ce1c30b22af976b99a1183213ff070ea206d2c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlMWMzMGIyMmFmOTc2Yjk5YTExODMyMTNmZjA3MGVhMjA2ZDJjOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2019-02-14T01:21:03Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-02-14T01:21:03Z"}, "message": "go-gcc.cc: #include \"opts.h\".\n\n\t* go-gcc.cc: #include \"opts.h\".\n\t(Gcc_backend::function): Compile thunks with -Os.\n\nFrom-SVN: r268861", "tree": {"sha": "4cdc9d7600498de405e0a3725dc520f1f0afa154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cdc9d7600498de405e0a3725dc520f1f0afa154"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ce1c30b22af976b99a1183213ff070ea206d2c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce1c30b22af976b99a1183213ff070ea206d2c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce1c30b22af976b99a1183213ff070ea206d2c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce1c30b22af976b99a1183213ff070ea206d2c9/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "471f9e24a61aea7284a3f67ed7cd861e0c6805e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/471f9e24a61aea7284a3f67ed7cd861e0c6805e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/471f9e24a61aea7284a3f67ed7cd861e0c6805e3"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "ac2c2e185c96b4b7d1c920079182f54b64c43942", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce1c30b22af976b99a1183213ff070ea206d2c9/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce1c30b22af976b99a1183213ff070ea206d2c9/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=0ce1c30b22af976b99a1183213ff070ea206d2c9", "patch": "@@ -1,3 +1,8 @@\n+2019-02-13  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* go-gcc.cc: #include \"opts.h\".\n+\t(Gcc_backend::function): Compile thunks with -Os.\n+\n 2019-02-05  Nikhil Benesch  <nikhil.benesch@gmail.com>\n \n         PR go/89019"}, {"sha": "d781ef5b3b2d2166bf61f8b401a10db7472551a2", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce1c30b22af976b99a1183213ff070ea206d2c9/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce1c30b22af976b99a1183213ff070ea206d2c9/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=0ce1c30b22af976b99a1183213ff070ea206d2c9", "patch": "@@ -25,6 +25,7 @@\n #include <gmp.h>\n \n #include \"tree.h\"\n+#include \"opts.h\"\n #include \"fold-const.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n@@ -3103,6 +3104,41 @@ Gcc_backend::function(Btype* fntype, const std::string& name,\n       DECL_DECLARED_INLINE_P(decl) = 1;\n     }\n \n+  // Optimize thunk functions for size.  A thunk created for a defer\n+  // statement that may call recover looks like:\n+  //     if runtime.setdeferretaddr(L1) {\n+  //         goto L1\n+  //     }\n+  //     realfn()\n+  // L1:\n+  // The idea is that L1 should be the address to which realfn\n+  // returns.  This only works if this little function is not over\n+  // optimized.  At some point GCC started duplicating the epilogue in\n+  // the basic-block reordering pass, breaking this assumption.\n+  // Optimizing the function for size avoids duplicating the epilogue.\n+  // This optimization shouldn't matter for any thunk since all thunks\n+  // are small.\n+  size_t pos = name.find(\"..thunk\");\n+  if (pos != std::string::npos)\n+    {\n+      for (pos += 7; pos < name.length(); ++pos)\n+\t{\n+\t  if (name[pos] < '0' || name[pos] > '9')\n+\t    break;\n+\t}\n+      if (pos == name.length())\n+\t{\n+\t  struct cl_optimization cur_opts;\n+\t  cl_optimization_save(&cur_opts, &global_options);\n+\t  global_options.x_optimize_size = 1;\n+\t  global_options.x_optimize_fast = 0;\n+\t  global_options.x_optimize_debug = 0;\n+\t  DECL_FUNCTION_SPECIFIC_OPTIMIZATION(decl) =\n+\t    build_optimization_node(&global_options);\n+\t  cl_optimization_restore(&global_options, &cur_opts);\n+\t}\n+    }\n+\n   go_preserve_from_gc(decl);\n   return new Bfunction(decl);\n }"}]}