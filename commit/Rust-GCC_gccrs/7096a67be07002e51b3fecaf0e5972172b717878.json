{"sha": "7096a67be07002e51b3fecaf0e5972172b717878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA5NmE2N2JlMDcwMDJlNTFiM2ZlY2FmMGU1OTcyMTcyYjcxNzg3OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-29T14:31:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-29T14:31:08Z"}, "message": "[multiple changes]\n\n2013-01-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* sprint.adb (Sprint_Node_Actual): Output freeze nodes for\n\titypes even if Dump_Freeze_Null is not set.\n\n2013-01-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb: Minor reformatting.\n\t* s-rident.ads: Minor comment fixes.\n\n2013-01-29  Pascal Obry  <obry@adacore.com>\n\n\t* prj-env.ads, prj-env.adb (Add_Directories): Add parameter to\n\tcontrol if the path is prepended or appended.\n\nFrom-SVN: r195544", "tree": {"sha": "3583702f3bbfcb39c8de68868c5151bd4feb6a2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3583702f3bbfcb39c8de68868c5151bd4feb6a2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7096a67be07002e51b3fecaf0e5972172b717878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7096a67be07002e51b3fecaf0e5972172b717878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7096a67be07002e51b3fecaf0e5972172b717878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7096a67be07002e51b3fecaf0e5972172b717878/comments", "author": null, "committer": null, "parents": [{"sha": "a52e6d7e22be254f33fceb8899cd6d5d3d0e0413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a52e6d7e22be254f33fceb8899cd6d5d3d0e0413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a52e6d7e22be254f33fceb8899cd6d5d3d0e0413"}], "stats": {"total": 114, "additions": 73, "deletions": 41}, "files": [{"sha": "f23c566acfb4b7ac691f6db55d4c12eda3b72f74", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7096a67be07002e51b3fecaf0e5972172b717878", "patch": "@@ -1,3 +1,18 @@\n+2013-01-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sprint.adb (Sprint_Node_Actual): Output freeze nodes for\n+\titypes even if Dump_Freeze_Null is not set.\n+\n+2013-01-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.adb: Minor reformatting.\n+\t* s-rident.ads: Minor comment fixes.\n+\n+2013-01-29  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-env.ads, prj-env.adb (Add_Directories): Add parameter to\n+\tcontrol if the path is prepended or appended.\n+\n 2013-01-29  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Expression_Function): An expression"}, {"sha": "d4bda03aac647024d5e93b74c3ed2587bf218de7", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=7096a67be07002e51b3fecaf0e5972172b717878", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1836,16 +1836,21 @@ package body Prj.Env is\n    ---------------------\n \n    procedure Add_Directories\n-     (Self : in out Project_Search_Path;\n-      Path : String)\n+     (Self    : in out Project_Search_Path;\n+      Path    : String;\n+      Prepend : Boolean := False)\n    is\n       Tmp : String_Access;\n    begin\n       if Self.Path = null then\n          Self.Path := new String'(Uninitialized_Prefix & Path);\n       else\n          Tmp := Self.Path;\n-         Self.Path := new String'(Tmp.all & Path_Separator & Path);\n+         if Prepend then\n+            Self.Path := new String'(Path & Path_Separator & Tmp.all);\n+         else\n+            Self.Path := new String'(Tmp.all & Path_Separator & Path);\n+         end if;\n          Free (Tmp);\n       end if;\n "}, {"sha": "39d805c2bc6f92d345c094ffe38d3587543aada0", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=7096a67be07002e51b3fecaf0e5972172b717878", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -189,8 +189,9 @@ package Prj.Env is\n    --  Free the memory used by Self\n \n    procedure Add_Directories\n-     (Self : in out Project_Search_Path;\n-      Path : String);\n+     (Self    : in out Project_Search_Path;\n+      Path    : String;\n+      Prepend : Boolean := False);\n    --  Add one or more directories to the path. Directories added with this\n    --  procedure are added in order after the current directory and before the\n    --  path given by the environment variable GPR_PROJECT_PATH. A value of \"-\""}, {"sha": "fcdf2ad87f7c74da628312fd1e90fe5766293871", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=7096a67be07002e51b3fecaf0e5972172b717878", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -382,10 +382,11 @@ package System.Rident is\n       --  value of the parameter permitted by the profile.\n    end record;\n \n-   Profile_Info : constant array (Profile_Name_Actual) of Profile_Data :=\n+   Profile_Info : constant array (Profile_Name_Actual) of Profile_Data := (\n \n-                    (No_Implementation_Extensions =>\n-                        --  Restrictions for Restricted profile\n+                     --  No_Implementation_Extensions profile\n+\n+                     No_Implementation_Extensions =>\n \n                        (Set   =>\n                           (No_Implementation_Aspect_Specifications => True,"}, {"sha": "0fc236559002063a72a60283e3e3750c67ece453", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 25, "deletions": 26, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=7096a67be07002e51b3fecaf0e5972172b717878", "patch": "@@ -1242,7 +1242,8 @@ package body Sem_Util is\n       --  Return the entity associated with the function call\n \n       procedure Preanalyze_Without_Errors (N : Node_Id);\n-      --  Preanalyze N without reporting errors\n+      --  Preanalyze N without reporting errors. Very dubious, you can't just\n+      --  go analyzing things more than once???\n \n       -------------------------\n       -- Collect_Identifiers --\n@@ -1273,14 +1274,12 @@ package body Sem_Util is\n                if No (Entity (N)) then\n                   return Skip;\n \n-               --  We don't collect identifiers of packages, called functions,\n-               --  etc.\n+               --  Don't collect identifiers of packages, called functions, etc\n \n-               elsif Ekind_In (Entity (N),\n-                       E_Package,\n-                       E_Function,\n-                       E_Procedure,\n-                       E_Entry)\n+               elsif Ekind_In (Entity (N), E_Package,\n+                                           E_Function,\n+                                           E_Procedure,\n+                                           E_Entry)\n                then\n                   return Skip;\n \n@@ -1350,21 +1349,22 @@ package body Sem_Util is\n             pragma Assert (Nkind (N) in N_Has_Entity);\n \n             Elmt : Elmt_Id;\n+\n          begin\n             if List = No_Elist then\n                return False;\n             end if;\n \n             Elmt := First_Elmt (List);\n-            loop\n-               if No (Elmt) then\n-                  return False;\n-               elsif Entity (Node (Elmt)) = Entity (N) then\n+            while Present (Elmt) loop\n+               if Entity (Node (Elmt)) = Entity (N) then\n                   return True;\n                else\n                   Next_Elmt (Elmt);\n                end if;\n             end loop;\n+\n+            return False;\n          end Contains;\n \n          ------------------\n@@ -1397,6 +1397,7 @@ package body Sem_Util is\n       function Get_Function_Id (Call : Node_Id) return Entity_Id is\n          Nam : constant Node_Id := Name (Call);\n          Id  : Entity_Id;\n+\n       begin\n          if Nkind (Nam) = N_Explicit_Dereference then\n             Id := Etype (Nam);\n@@ -1432,15 +1433,14 @@ package body Sem_Util is\n    begin\n       if Ada_Version < Ada_2012\n         or else (not (Nkind (N) in N_Op)\n-                   and then not (Nkind (N) in N_Membership_Test)\n-                   and then not Nkind_In (N,\n-                                  N_Range,\n-                                  N_Aggregate,\n-                                  N_Extension_Aggregate,\n-                                  N_Full_Type_Declaration,\n-                                  N_Function_Call,\n-                                  N_Procedure_Call_Statement,\n-                                  N_Entry_Call_Statement))\n+                  and then not (Nkind (N) in N_Membership_Test)\n+                  and then not Nkind_In (N, N_Range,\n+                                            N_Aggregate,\n+                                            N_Extension_Aggregate,\n+                                            N_Full_Type_Declaration,\n+                                            N_Function_Call,\n+                                            N_Procedure_Call_Statement,\n+                                            N_Entry_Call_Statement))\n         or else (Nkind (N) = N_Full_Type_Declaration\n                    and then not Is_Record_Type (Defining_Identifier (N)))\n       then\n@@ -1502,6 +1502,7 @@ package body Sem_Util is\n                Comp   : Node_Id;\n                Def_Id : Entity_Id := Defining_Identifier (N);\n                Rec    : Node_Id   := Get_Record_Part (N);\n+\n             begin\n                --  No need to perform any analysis if the record has no\n                --  components\n@@ -1650,9 +1651,8 @@ package body Sem_Util is\n                      end loop;\n \n                      Num_Components :=\n-                       Expr_Value (High_Bound (Aggregate_Bounds (N)))\n-                         - Expr_Value (Low_Bound (Aggregate_Bounds (N)))\n-                         + 1;\n+                       Expr_Value (High_Bound (Aggregate_Bounds (N))) -\n+                         Expr_Value (Low_Bound (Aggregate_Bounds (N))) + 1;\n \n                      pragma Assert (Count_Components <= Num_Components);\n \n@@ -1735,8 +1735,7 @@ package body Sem_Util is\n \n                            if Nkind (Choice) in N_Has_Entity\n                              and then Present (Entity (Choice))\n-                             and then Ekind (Entity (Choice))\n-                                        = E_Discriminant\n+                             and then Ekind (Entity (Choice)) = E_Discriminant\n                            then\n                               null;\n "}, {"sha": "6aa045ff4e29488c63715bd72278dcc7fef3da21", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7096a67be07002e51b3fecaf0e5972172b717878/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=7096a67be07002e51b3fecaf0e5972172b717878", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -70,7 +70,10 @@ package body Sprint is\n    --  or for Print_Generated_Code (-gnatG) or Dump_Generated_Code (-gnatD).\n \n    Dump_Freeze_Null : Boolean;\n-   --  Set True if freeze nodes and non-source null statements output\n+   --  Set True if empty freeze nodes and non-source null statements output.\n+   --  Note that freeze nodes containing freeze actions are always output,\n+   --  as are freeze nodes for itypes, which in general have the effect of\n+   --  causing elaboration of the itype.\n \n    Freeze_Indent : Int := 0;\n    --  Keep track of freeze indent level (controls output of blank lines before\n@@ -1827,7 +1830,15 @@ package body Sprint is\n             if Dump_Original_Only then\n                null;\n \n-            elsif Present (Actions (Node)) or else Dump_Freeze_Null then\n+            --  A freeze node is output if it has some effect (i.e. non-empty\n+            --  actions, or freeze node for an itype, which causes elaboration\n+            --  of the itype), and is also always output if Dump_Freeze_Null\n+            --  is set True.\n+\n+            elsif Present (Actions (Node))\n+              or else Is_Itype (Entity (Node))\n+              or else Dump_Freeze_Null\n+            then\n                Write_Indent;\n                Write_Rewrite_Str (\"<<<\");\n                Write_Str_With_Col_Check_Sloc (\"freeze \");\n@@ -4084,7 +4095,7 @@ package body Sprint is\n \n                   when E_Modular_Integer_Type =>\n                      Write_Header;\n-                     Write_Str (\" mod \");\n+                     Write_Str (\"mod \");\n                      Write_Uint_With_Col_Check (Modulus (Typ), Auto);\n \n                   --  Floating point types and subtypes"}]}