{"sha": "5ba6918ee8902e201afea501752ee53dca9f5271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJhNjkxOGVlODkwMmUyMDFhZmVhNTAxNzUyZWU1M2RjYTlmNTI3MQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-03-18T20:21:18Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-03-18T20:21:18Z"}, "message": "Makefile.in (emit-rtl.o): Add gt-emit-rtl.h to dependencies.\n\n\t* Makefile.in (emit-rtl.o): Add gt-emit-rtl.h to dependencies.\n\n\t* gengtype.c: Include rtl.h.\n\t(enum rtx_code): Don't define.\n\t(rtx_format): Make declaration match rtl.h.\n\t(rtx_next_new): Rename from rtx_next to avoid conflict.  Change all\n\tusers.\n\t(adjust_field_rtx_def): Describe strings in NOTE_LINE_NUMBER notes.\n\t* Makefile.in (gengtype.o): Update dependencies.\n\nFrom-SVN: r64554", "tree": {"sha": "4997cfa9ea10fa07dd0538caf80ddcb7f25a7bcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4997cfa9ea10fa07dd0538caf80ddcb7f25a7bcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ba6918ee8902e201afea501752ee53dca9f5271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ba6918ee8902e201afea501752ee53dca9f5271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ba6918ee8902e201afea501752ee53dca9f5271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ba6918ee8902e201afea501752ee53dca9f5271/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f83b236e2a13b63ccb7330fba634be38dbdfbecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f83b236e2a13b63ccb7330fba634be38dbdfbecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f83b236e2a13b63ccb7330fba634be38dbdfbecf"}], "stats": {"total": 84, "additions": 56, "deletions": 28}, "files": [{"sha": "be8631f167882dd15beb617bc603124ddec1e7d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba6918ee8902e201afea501752ee53dca9f5271/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba6918ee8902e201afea501752ee53dca9f5271/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ba6918ee8902e201afea501752ee53dca9f5271", "patch": "@@ -1,3 +1,15 @@\n+2003-03-18  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* Makefile.in (emit-rtl.o): Add gt-emit-rtl.h to dependencies.\n+\n+\t* gengtype.c: Include rtl.h.\n+\t(enum rtx_code): Don't define.\n+\t(rtx_format): Make declaration match rtl.h.\n+\t(rtx_next_new): Rename from rtx_next to avoid conflict.  Change all\n+\tusers.\n+\t(adjust_field_rtx_def): Describe strings in NOTE_LINE_NUMBER notes.\n+\t* Makefile.in (gengtype.o): Update dependencies.\n+\n 2003-03-18  Andreas Schwab  <schwab@suse.de>\n \n \t* config/m68k/m68k.md (iordi3): Fix setting low half to -1.  From"}, {"sha": "ce560e74f3fe7b4fcc912eee8c00005c91f94bd5", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba6918ee8902e201afea501752ee53dca9f5271/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba6918ee8902e201afea501752ee53dca9f5271/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5ba6918ee8902e201afea501752ee53dca9f5271", "patch": "@@ -1561,7 +1561,7 @@ xcoffout.o : xcoffout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    flags.h function.h $(REGS_H) insn-config.h $(RECOG_H) real.h $(GGC_H) \\\n    $(EXPR_H) $(srcdir)/../include/obstack.h hard-reg-set.h bitmap.h toplev.h \\\n-   $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h\n+   $(HASHTAB_H) $(TM_P_H) debug.h langhooks.h gt-emit-rtl.h\n real.o : real.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) toplev.h $(TM_P_H)\n integrate.o : integrate.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    flags.h debug.h $(INTEGRATE_H) insn-config.h $(EXPR_H) real.h $(REGS_H) \\\n@@ -2188,7 +2188,7 @@ gengtype$(build_exeext) : gengtype.o gengtype-lex.o gengtype-yacc.o \\\n \t gengtype.o gengtype-lex.o gengtype-yacc.o $(BUILD_LIBS)\n \n gengtype.o : gengtype.c gengtype.h $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n-  real.h rtl.def gtyp-gen.h\n+  real.h $(RTL_BASE_H) gtyp-gen.h\n \t$(BUILD_CC) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/gengtype.c $(OUTPUT_OPTION)\n "}, {"sha": "73c9580b655f6c1139ab19318aba3b833350afd3", "filename": "gcc/gengtype.c", "status": "modified", "additions": 42, "deletions": 26, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba6918ee8902e201afea501752ee53dca9f5271/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba6918ee8902e201afea501752ee53dca9f5271/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=5ba6918ee8902e201afea501752ee53dca9f5271", "patch": "@@ -25,6 +25,10 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"gengtype.h\"\n #include \"gtyp-gen.h\"\n \n+#define NO_GENRTL_H\n+#include \"rtl.h\"\n+#undef abort\n+\n /* Nonzero iff an error has occurred.  */\n static int hit_error = 0;\n \n@@ -347,22 +351,15 @@ note_variable (s, t, o, pos)\n   variables = n;\n }\n \n-enum rtx_code {\n-#define DEF_RTL_EXPR(ENUM, NAME, FORMAT, CLASS)   ENUM ,\n-#include \"rtl.def\"\n-#undef DEF_RTL_EXPR\n-    NUM_RTX_CODE\n-};\n-\n /* We really don't care how long a CONST_DOUBLE is.  */\n #define CONST_DOUBLE_FORMAT \"ww\"\n-static const char * const rtx_format[NUM_RTX_CODE] = {\n+const char * const rtx_format[NUM_RTX_CODE] = {\n #define DEF_RTL_EXPR(ENUM, NAME, FORMAT, CLASS)   FORMAT ,\n #include \"rtl.def\"\n #undef DEF_RTL_EXPR\n };\n \n-static int rtx_next[NUM_RTX_CODE];\n+static int rtx_next_new[NUM_RTX_CODE];\n \n /* Generate the contents of the rtx_next array.  This really doesn't belong\n    in gengtype at all, but it's needed for adjust_field_rtx_def.  */\n@@ -375,15 +372,15 @@ gen_rtx_next ()\n     {\n       int k;\n       \n-      rtx_next[i] = -1;\n+      rtx_next_new[i] = -1;\n       if (strncmp (rtx_format[i], \"iuu\", 3) == 0)\n-\trtx_next[i] = 2;\n+\trtx_next_new[i] = 2;\n       else if (i == COND_EXEC || i == SET || i == EXPR_LIST || i == INSN_LIST)\n-\trtx_next[i] = 1;\n+\trtx_next_new[i] = 1;\n       else \n \tfor (k = strlen (rtx_format[i]) - 1; k >= 0; k--)\n \t  if (rtx_format[i][k] == 'e' || rtx_format[i][k] == 'u')\n-\t    rtx_next[i] = k;\n+\t    rtx_next_new[i] = k;\n     }\n }\n \n@@ -397,12 +394,12 @@ write_rtx_next ()\n   oprintf (f, \"\\n/* Used to implement the RTX_NEXT macro.  */\\n\");\n   oprintf (f, \"const unsigned char rtx_next[NUM_RTX_CODE] = {\\n\");\n   for (i = 0; i < NUM_RTX_CODE; i++)\n-    if (rtx_next[i] == -1)\n+    if (rtx_next_new[i] == -1)\n       oprintf (f, \"  0,\\n\");\n     else\n       oprintf (f, \n \t       \"  offsetof (struct rtx_def, fld) + %d * sizeof (rtunion),\\n\",\n-\t       rtx_next[i]);\n+\t       rtx_next_new[i]);\n   oprintf (f, \"};\\n\");\n }\n \n@@ -451,28 +448,47 @@ adjust_field_rtx_def (t, opt)\n   {\n     pair_p note_flds = NULL;\n     int c;\n-    \n-    for (c = 0; c < 3; c++)\n+\n+    for (c = NOTE_INSN_BIAS; c <= NOTE_INSN_MAX; c++)\n       {\n \tpair_p old_note_flds = note_flds;\n \t\n \tnote_flds = xmalloc (sizeof (*note_flds));\n \tnote_flds->line.file = __FILE__;\n \tnote_flds->line.line = __LINE__;\n-\tnote_flds->name = \"rttree\";\n-\tnote_flds->type = tree_tp;\n \tnote_flds->opt = xmalloc (sizeof (*note_flds->opt));\n \tnote_flds->opt->next = nodot;\n \tnote_flds->opt->name = \"tag\";\n+\tnote_flds->opt->info = xasprintf (\"%d\", c);\n \tnote_flds->next = old_note_flds;\n+\n+\tswitch (c)\n+\t  {\n+\t    /* NOTE_INSN_MAX is used as the default field for line\n+\t       number notes.  */\n+\t  case NOTE_INSN_MAX:\n+\t    note_flds->opt->name = \"default\";\n+\t    note_flds->name = \"rtstr\";\n+\t    note_flds->type = &string_type;\n+\t    break;\n+\n+\t  case NOTE_INSN_BLOCK_BEG:\n+\t  case NOTE_INSN_BLOCK_END:\n+\t    note_flds->name = \"rttree\";\n+\t    note_flds->type = tree_tp;\n+\t    break;\n+\t    \n+\t  case NOTE_INSN_EXPECTED_VALUE:\n+\t    note_flds->name = \"rtx\";\n+\t    note_flds->type = rtx_tp;\n+\t    break;\n+\n+\t  default:\n+\t    note_flds->name = \"rtint\";\n+\t    note_flds->type = scalar_tp;\n+\t    break;\n+\t  }\n       }\n-    \n-    note_flds->type = rtx_tp;\n-    note_flds->name = \"rtx\";\n-    note_flds->opt->info = \"NOTE_INSN_EXPECTED_VALUE\";\n-    note_flds->next->opt->info = \"NOTE_INSN_BLOCK_BEG\";\n-    note_flds->next->next->opt->info = \"NOTE_INSN_BLOCK_END\";\n-    \n     new_structure (\"rtx_def_note_subunion\", 1, &lexer_line, note_flds, NULL);\n   }\n   "}]}