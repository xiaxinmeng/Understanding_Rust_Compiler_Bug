{"sha": "c497c412b4f86260b62e8105cf983d204a9ccc86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ5N2M0MTJiNGY4NjI2MGI2MmU4MTA1Y2Y5ODNkMjA0YTljY2M4Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-25T19:48:44Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-05-25T19:48:44Z"}, "message": "sse.md (*<sse>_maskcmp<mode>3_comm): New pattern.\n\n\t* config/i386/sse.md (*<sse>_maskcmp<mode>3_comm): New pattern.\n\nFrom-SVN: r174224", "tree": {"sha": "d480ed3ddf611f8b975fe323e3cc50e04eb368c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d480ed3ddf611f8b975fe323e3cc50e04eb368c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c497c412b4f86260b62e8105cf983d204a9ccc86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c497c412b4f86260b62e8105cf983d204a9ccc86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c497c412b4f86260b62e8105cf983d204a9ccc86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c497c412b4f86260b62e8105cf983d204a9ccc86/comments", "author": null, "committer": null, "parents": [{"sha": "e470affed023863f9fe24ddfeb07d20ba646d0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e470affed023863f9fe24ddfeb07d20ba646d0f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e470affed023863f9fe24ddfeb07d20ba646d0f8"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "a1da8c1e927ce80d3c8e277b58b382f09daa4e60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c497c412b4f86260b62e8105cf983d204a9ccc86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c497c412b4f86260b62e8105cf983d204a9ccc86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c497c412b4f86260b62e8105cf983d204a9ccc86", "patch": "@@ -1,3 +1,7 @@\n+2011-05-25  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (*<sse>_maskcmp<mode>3_comm): New pattern.\n+\n 2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.md (*movqi_extv_1)): Put back\n@@ -6,8 +10,7 @@\n \n 2011-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n-\t* doc/extend.texi (X86 Built-in Functions): Update pause\n-\tintrinsic.\n+\t* doc/extend.texi (X86 Built-in Functions): Update pause intrinsic.\n \n 2011-05-25  Bernd Schmidt  <bernds@codesourcery.com>\n \n@@ -52,7 +55,7 @@\n \tPR tree-optimization/46728\n \t* tree-ssa-math-opts.c (gimple_expand_builtin_pow): New.\n \t(execute_cse_sincos): Add switch case for BUILT_IN_POW.\n-\t\n+\n 2011-05-25  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree.h (struct tree_exp): Inherit from struct tree_typed.\n@@ -204,7 +207,7 @@\n \t(go_finish): Create and delete invalid_hash.\n \n 2011-05-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n-\t\n+\n \tPR tree-optimization/46728\n \t* tree-ssa-math-opts.c (powi_table): New.\n \t(powi_lookup_cost): New."}, {"sha": "058f82bb26dec8eff6461ff97858e7146231eed1", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c497c412b4f86260b62e8105cf983d204a9ccc86/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c497c412b4f86260b62e8105cf983d204a9ccc86/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=c497c412b4f86260b62e8105cf983d204a9ccc86", "patch": "@@ -1184,6 +1184,22 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n \n+(define_insn \"*<sse>_maskcmp<mode>3_comm\"\n+  [(set (match_operand:VF 0 \"register_operand\" \"=x,x\")\n+\t(match_operator:VF 3 \"sse_comparison_operator\"\n+\t  [(match_operand:VF 1 \"register_operand\" \"%0,x\")\n+\t   (match_operand:VF 2 \"nonimmediate_operand\" \"xm,xm\")]))]\n+  \"TARGET_SSE\n+   && GET_RTX_CLASS (GET_CODE (operands[3])) == RTX_COMM_COMPARE\"\n+  \"@\n+   cmp%D3<ssemodesuffix>\\t{%2, %0|%0, %2}\n+   vcmp%D3<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"ssecmp\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"<sse>_maskcmp<mode>3\"\n   [(set (match_operand:VF 0 \"register_operand\" \"=x,x\")\n \t(match_operator:VF 3 \"sse_comparison_operator\""}]}