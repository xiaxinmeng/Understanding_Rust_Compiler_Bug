{"sha": "61c7fb308a746e03d3ae8ba54234a8e18b2479da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFjN2ZiMzA4YTc0NmUwM2QzYWU4YmE1NDIzNGE4ZTE4YjI0NzlkYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-04-16T10:50:58Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-04-16T10:50:58Z"}, "message": "tree-ssa-operands.c (create_vop_var): Set DECL_IGNORED_P.\n\n\t* tree-ssa-operands.c (create_vop_var): Set DECL_IGNORED_P.\n\t(append_use): Run at -O0.\n\t(append_vdef): Likewise.\n\t* tree-ssa-ter.c (ter_is_replaceable_p): Do not special-case -O0.\n\t* tree-ssa-uninit.c (warn_uninitialized_vars): Remove obsolete comment.\n\nFrom-SVN: r209443", "tree": {"sha": "0bef9cf3d4562a596b955f1762e194e90daca6b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bef9cf3d4562a596b955f1762e194e90daca6b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61c7fb308a746e03d3ae8ba54234a8e18b2479da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c7fb308a746e03d3ae8ba54234a8e18b2479da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c7fb308a746e03d3ae8ba54234a8e18b2479da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c7fb308a746e03d3ae8ba54234a8e18b2479da/comments", "author": null, "committer": null, "parents": [{"sha": "42fae17c3741000efa1124cd0af0665ff6141f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42fae17c3741000efa1124cd0af0665ff6141f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42fae17c3741000efa1124cd0af0665ff6141f05"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "f15c6432194e33e09ec07e9293f57b53170a6137", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61c7fb308a746e03d3ae8ba54234a8e18b2479da", "patch": "@@ -1,3 +1,11 @@\n+2014-04-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-ssa-operands.c (create_vop_var): Set DECL_IGNORED_P.\n+\t(append_use): Run at -O0.\n+\t(append_vdef): Likewise.\n+\t* tree-ssa-ter.c (ter_is_replaceable_p): Do not special-case -O0.\n+\t* tree-ssa-uninit.c (warn_uninitialized_vars): Remove obsolete comment.\n+\n 2014-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/60844"}, {"sha": "3c0f63e548f54650c69fa579c127a41474350af1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61c7fb308a746e03d3ae8ba54234a8e18b2479da", "patch": "@@ -1,3 +1,9 @@\n+2014-04-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/uninit-B-O0.c: Remove XFAIL.\n+\t* gcc.dg/uninit-I-O0.c: Likewise.\n+\t* gcc.dg/uninit-pr19430-O0.c: Remove some XFAILs.\n+\n 2014-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/60844"}, {"sha": "5557ace6f8d02ab349c3f387288c6a99b5dcb8a4", "filename": "gcc/testsuite/gcc.dg/uninit-B-O0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-B-O0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-B-O0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-B-O0.c?ref=61c7fb308a746e03d3ae8ba54234a8e18b2479da", "patch": "@@ -9,7 +9,7 @@ void\n baz (void)\n {\n   int i;\n-  if (i) /* { dg-warning \"uninit\" \"uninit i warning\" { xfail *-*-* } } */\n+  if (i) /* { dg-warning \"'i' is used uninitialized in this function\" } */\n     bar (i);\n   foo (&i);\n }"}, {"sha": "761f65b485b1f97238133f990c9147cf2124415e", "filename": "gcc/testsuite/gcc.dg/uninit-I-O0.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-I-O0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-I-O0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-I-O0.c?ref=61c7fb308a746e03d3ae8ba54234a8e18b2479da", "patch": "@@ -3,6 +3,6 @@\n \n int sys_msgctl (void)\n {\n-  struct { int mode; } setbuf;  /* { dg-warning \"'setbuf\\.mode' is used\" {} { xfail *-*-* } } */\n-  return setbuf.mode;\n+  struct { int mode; } setbuf;\n+  return setbuf.mode; /* { dg-warning \"'setbuf\\.mode' is used uninitialized in this function\" } */\n }"}, {"sha": "63f0b2b44f3e23e1667c6944d73327bbbd432fc0", "filename": "gcc/testsuite/gcc.dg/uninit-pr19430-O0.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr19430-O0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr19430-O0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr19430-O0.c?ref=61c7fb308a746e03d3ae8ba54234a8e18b2479da", "patch": "@@ -16,10 +16,9 @@ foo (int i)\n   return j;\n }\n \n-\n int foo2( void ) {\n-  int rc;  /* { dg-warning \"'rc' is used uninitialized in this function\" \"uninitialized\" { xfail *-*-* } 21 } */\n-  return rc;\n+  int rc;\n+  return rc; /* { dg-warning \"'rc' is used uninitialized in this function\" } */\n   *&rc = 0;\n }\n \n@@ -29,7 +28,7 @@ void frob(int *pi);\n int main(void)\n {\n   int i; \n-  printf(\"i = %d\\n\", i); /* { dg-warning \"'i' is used uninitialized in this function\" \"uninitialized\" { xfail *-*-* } 32 } */\n+  printf(\"i = %d\\n\", i); /* { dg-warning \"'i' is used uninitialized in this function\" } */\n   frob(&i);\n \n   return 0;\n@@ -38,6 +37,6 @@ int main(void)\n void foo3(int*);\n void bar3(void) { \n   int x; \n-  if(x) /* { dg-warning \"'x' is used uninitialized in this function\" \"uninitialized\" { xfail *-*-* } 41 } */\n+  if(x) /* { dg-warning \"'x' is used uninitialized in this function\" } */\n     foo3(&x); \n }"}, {"sha": "03d3e4d271ad1098e1a7bf03aac43afab3ae4ff2", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=61c7fb308a746e03d3ae8ba54234a8e18b2479da", "patch": "@@ -166,6 +166,7 @@ create_vop_var (struct function *fn)\n \t\t\t   get_identifier (\".MEM\"),\n \t\t\t   void_type_node);\n   DECL_ARTIFICIAL (global_var) = 1;\n+  DECL_IGNORED_P (global_var) = 1;\n   TREE_READONLY (global_var) = 0;\n   DECL_EXTERNAL (global_var) = 1;\n   TREE_STATIC (global_var) = 1;\n@@ -477,9 +478,6 @@ append_use (tree *use_p)\n static inline void\n append_vdef (tree var)\n {\n-  if (!optimize)\n-    return;\n-\n   gcc_assert ((build_vdef == NULL_TREE\n \t       || build_vdef == var)\n \t      && (build_vuse == NULL_TREE\n@@ -495,9 +493,6 @@ append_vdef (tree var)\n static inline void\n append_vuse (tree var)\n {\n-  if (!optimize)\n-    return;\n-\n   gcc_assert (build_vuse == NULL_TREE\n \t      || build_vuse == var);\n "}, {"sha": "78bedfc2e9a7c489a5d6f8e45d4a29e879d19a1f", "filename": "gcc/tree-ssa-ter.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftree-ssa-ter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftree-ssa-ter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ter.c?ref=61c7fb308a746e03d3ae8ba54234a8e18b2479da", "patch": "@@ -441,11 +441,6 @@ ter_is_replaceable_p (gimple stmt)\n \t      || (block1 != NULL_TREE && block1 != block2)))\n \treturn false;\n \n-      /* Without alias info we can't move around loads.  */\n-      if (!optimize && gimple_assign_single_p (stmt)\n-\t  && !is_gimple_val (gimple_assign_rhs1 (stmt)))\n-\treturn false;\n-\n       return true;\n     }\n   return false;"}, {"sha": "1de1394b4b57bc7e624757aca133cc92d02a7299", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7fb308a746e03d3ae8ba54234a8e18b2479da/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=61c7fb308a746e03d3ae8ba54234a8e18b2479da", "patch": "@@ -210,7 +210,6 @@ warn_uninitialized_vars (bool warn_possibly_uninitialized)\n \n \t  /* For memory the only cheap thing we can do is see if we\n \t     have a use of the default def of the virtual operand.\n-\t     ???  Note that at -O0 we do not have virtual operands.\n \t     ???  Not so cheap would be to use the alias oracle via\n \t     walk_aliased_vdefs, if we don't find any aliasing vdef\n \t     warn as is-used-uninitialized, if we don't find an aliasing"}]}