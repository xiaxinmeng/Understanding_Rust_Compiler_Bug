{"sha": "a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg4ZmRjMmFjM2U5ZmIwMmZjMWVmZDY4ZGQ4ZDQwMTIzYjdjZTRlMw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-04-29T17:31:51Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-04-29T17:31:51Z"}, "message": "In gcc/: 2011-04-29 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/:\n2011-04-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* Makefile.in (ENABLE_MAINTAINER_RULES): New.\n\nIn gcc/cp/:\n2011-04-29  Nicola Pero  <nicola.pero@meta-innovation.com>,\n\t    Mike Stump <mikestump@comcast.net>\n\n\t* Make-lang.in ($(srcdir)/cp/cfns.h): Enable the dependency only\n\tin maintainer mode.  Use the --output-file option of gperf instead\n\tof > to prevent creating an empty cp/cfns.h when gperf is not\n\tavailable.\n\nFrom-SVN: r173178", "tree": {"sha": "4f32fbcd681aec71ce44cdb1c154efe37d13950c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f32fbcd681aec71ce44cdb1c154efe37d13950c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3/comments", "author": null, "committer": null, "parents": [{"sha": "d984c8ef7d4c467e80159dc010358c703dfa7fce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d984c8ef7d4c467e80159dc010358c703dfa7fce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d984c8ef7d4c467e80159dc010358c703dfa7fce"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "f097822601b7014b39cb7202dc435f2675d13115", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3", "patch": "@@ -1,3 +1,7 @@\n+2011-04-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* Makefile.in (ENABLE_MAINTAINER_RULES): New.\n+\n 2011-04-27  Xinliang David Li  <davidxl@google.com>\n \n \t* tree-profile.c (init_ic_make_global_vars): Set"}, {"sha": "d6c176ad91b2219c72b8862762a46f83065dce56", "filename": "gcc/Makefile.in", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3", "patch": "@@ -165,8 +165,19 @@ C_STRICT_WARN = @c_strict_warn@\n NOCOMMON_FLAG = @nocommon_flag@\n \n # This is set by --disable-maintainer-mode (default) to \"#\"\n+# FIXME: 'MAINT' will always be set to an empty string, no matter if\n+# --disable-maintainer-mode is used or not.  This is because the\n+# following will expand to \"MAINT := \" in maintainer mode, and to\n+# \"MAINT := #\" in non-maintainer mode, but because '#' starts a comment,\n+# they mean exactly the same thing for make.\n MAINT := @MAINT@\n \n+# The following provides the variable ENABLE_MAINTAINER_RULES that can\n+# be used in language Make-lang.in makefile fragments to enable\n+# maintainer rules.  So, ENABLE_MAINTAINER_RULES is 'true' in\n+# maintainer mode, and '' otherwise.\n+@MAINT@ ENABLE_MAINTAINER_RULES = true\n+\n # These are set by --enable-checking=valgrind.\n RUN_GEN = @valgrind_command@\n VALGRIND_DRIVER_DEFINES = @valgrind_path_defines@"}, {"sha": "7cd5eb66bcfbb3a3f07615e875198bbe3a4e45c0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3", "patch": "@@ -1,3 +1,11 @@\n+2011-04-29  Nicola Pero  <nicola.pero@meta-innovation.com>,\n+\t    Mike Stump <mikestump@comcast.net>\n+\n+\t* Make-lang.in ($(srcdir)/cp/cfns.h): Enable the dependency only\n+\tin maintainer mode.  Use the --output-file option of gperf instead\n+\tof > to prevent creating an empty cp/cfns.h when gperf is not\n+\tavailable.\n+\n 2011-04-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/48798"}, {"sha": "3aef055346cf1886c9b82b5dac0b95772d72a023", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=a88fdc2ac3e9fb02fc1efd68dd8d40123b7ce4e3", "patch": "@@ -104,10 +104,20 @@ cc1plus$(exeext): $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n-# Special build rules.\n+ifeq ($(ENABLE_MAINTAINER_RULES), true)\n+# Special build rule.  This is a maintainer rule, that is only\n+# available when GCC is configured with --enable-maintainer-mode.  In\n+# other cases, it is not available to avoid triggering rebuilds if a\n+# user has the source checked out with unusual timestamps.\n $(srcdir)/cp/cfns.h: $(srcdir)/cp/cfns.gperf\n+else\n+# We keep the rule so that you can still force a rebuild, even if you\n+# didn't configure GCC with --enable-maintainer-mode, by manually\n+# deleting the $(srcdir)/cp/cfns.h file.\n+$(srcdir)/cp/cfns.h:\n+endif\n \tgperf -o -C -E -k '1-6,$$' -j1 -D -N 'libc_name_p' -L ANSI-C \\\n-\t\t$(srcdir)/cp/cfns.gperf > $(srcdir)/cp/cfns.h\n+\t\t$(srcdir)/cp/cfns.gperf --output-file $(srcdir)/cp/cfns.h\n \n #\f\n # Build hooks:"}]}