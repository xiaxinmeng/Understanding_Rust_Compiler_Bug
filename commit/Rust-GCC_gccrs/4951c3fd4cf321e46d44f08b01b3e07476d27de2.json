{"sha": "4951c3fd4cf321e46d44f08b01b3e07476d27de2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk1MWMzZmQ0Y2YzMjFlNDZkNDRmMDhiMDFiM2UwNzQ3NmQyN2RlMg==", "commit": {"author": {"name": "Dorit Naishlos", "email": "dorit@il.ibm.com", "date": "2004-11-14T18:25:33Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2004-11-14T18:25:33Z"}, "message": "re PR tree-optimization/18425 (ICE in vector.tcc when -ftree-vectorize enabled)\n\n2004-11-14  Dorit Naishlos  <dorit@il.ibm.com>\n            Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/18425\n        * tree-vectorize.c (vect_build_loop_niters): Do not insert\n        NULL into the instruction stream. Initialize new_bb to NULL.\n        (vect_update_ivs_after_vectorizer): Likewise.\n        (vect_gen_niters_for_prolog_loop): Likewise.\n\nCo-Authored-By: Andrew Pinski <pinskia@physics.uc.edu>\n\nFrom-SVN: r90625", "tree": {"sha": "764fd71b6c4ca088f3c911386d45d5b5575c5818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/764fd71b6c4ca088f3c911386d45d5b5575c5818"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4951c3fd4cf321e46d44f08b01b3e07476d27de2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4951c3fd4cf321e46d44f08b01b3e07476d27de2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4951c3fd4cf321e46d44f08b01b3e07476d27de2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4951c3fd4cf321e46d44f08b01b3e07476d27de2/comments", "author": null, "committer": null, "parents": [{"sha": "9beeb4ee4c1bf42a2d3a66d75d250cf20c9c1f9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9beeb4ee4c1bf42a2d3a66d75d250cf20c9c1f9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9beeb4ee4c1bf42a2d3a66d75d250cf20c9c1f9f"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "601a1364f7236137ee93d987537973ab196c715b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4951c3fd4cf321e46d44f08b01b3e07476d27de2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4951c3fd4cf321e46d44f08b01b3e07476d27de2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4951c3fd4cf321e46d44f08b01b3e07476d27de2", "patch": "@@ -1,3 +1,12 @@\n+2004-11-14  Dorit Naishlos  <dorit@il.ibm.com>\n+            Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/18425\n+\t* tree-vectorize.c (vect_build_loop_niters): Do not insert\n+\tNULL into the instruction stream. Initialize new_bb to NULL.\n+\t(vect_update_ivs_after_vectorizer): Likewise.\n+\t(vect_gen_niters_for_prolog_loop): Likewise.\n+\n 2004-11-14  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR tree-optimization/18431"}, {"sha": "e01330242558bcf92a685064111e8d3b91cad37f", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4951c3fd4cf321e46d44f08b01b3e07476d27de2/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4951c3fd4cf321e46d44f08b01b3e07476d27de2/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=4951c3fd4cf321e46d44f08b01b3e07476d27de2", "patch": "@@ -2684,7 +2684,7 @@ vect_build_loop_niters (loop_vec_info loop_vinfo)\n {\n   tree ni_name, stmt, var;\n   edge pe;\n-  basic_block new_bb;\n+  basic_block new_bb = NULL;\n   struct loop *loop = LOOP_VINFO_LOOP (loop_vinfo);\n   tree ni = unshare_expr (LOOP_VINFO_NITERS(loop_vinfo));\n \n@@ -2702,7 +2702,8 @@ vect_build_loop_niters (loop_vec_info loop_vinfo)\n     ni_name = force_gimple_operand (ni, &stmt, false, var);\n \n   pe = loop_preheader_edge (loop);\n-  new_bb = bsi_insert_on_edge_immediate (pe, stmt);\n+  if (stmt)\n+    new_bb = bsi_insert_on_edge_immediate (pe, stmt);\n   if (new_bb)\n     add_bb_to_loop (new_bb, EDGE_PRED (new_bb, 0)->src->loop_father);\n       \n@@ -3115,7 +3116,8 @@ vect_gen_niters_for_prolog_loop (loop_vec_info loop_vinfo, tree niters)\n \n   /* Insert stmt on loop preheader edge.  */\n   pe = loop_preheader_edge (loop);\n-  new_bb = bsi_insert_on_edge_immediate (pe, stmt);\n+  if (stmt)\n+    new_bb = bsi_insert_on_edge_immediate (pe, stmt);\n   if (new_bb)\n     add_bb_to_loop (new_bb, EDGE_PRED (new_bb, 0)->src->loop_father);\n "}]}