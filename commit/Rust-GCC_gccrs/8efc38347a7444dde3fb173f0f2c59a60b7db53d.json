{"sha": "8efc38347a7444dde3fb173f0f2c59a60b7db53d", "node_id": "C_kwDOANBUbNoAKDhlZmMzODM0N2E3NDQ0ZGRlM2ZiMTczZjBmMmM1OWE2MGI3ZGI1M2Q", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-13T15:51:29Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-14T16:43:02Z"}, "message": "Implement range-op entry for __builtin_copysign.\n\ncopysign(MAGNITUDE, SIGN) is implemented as the absolute of MAGNITUDE,\nwith SIGN applied.  If the sign of \"SIGN\" cannot be determined, we\nreturn a range of [-MAGNITUDE, +MAGNITUDE].\n\ngcc/ChangeLog:\n\n\t* gimple-range-op.cc (class cfn_copysign): New.\n\t(gimple_range_op_handler::maybe_builtin_call): Add\n\tCFN_BUILT_IN_COPYSIGN*.", "tree": {"sha": "e86212f0412780f94d9206d52af30d02d481047e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e86212f0412780f94d9206d52af30d02d481047e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8efc38347a7444dde3fb173f0f2c59a60b7db53d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8efc38347a7444dde3fb173f0f2c59a60b7db53d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8efc38347a7444dde3fb173f0f2c59a60b7db53d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8efc38347a7444dde3fb173f0f2c59a60b7db53d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3760dd553eed21ac5614cf0d0841ca984b4361e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3760dd553eed21ac5614cf0d0841ca984b4361e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3760dd553eed21ac5614cf0d0841ca984b4361e2"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "2662319aadcd8bc54ee5f12a00271629aed65243", "filename": "gcc/gimple-range-op.cc", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efc38347a7444dde3fb173f0f2c59a60b7db53d/gcc%2Fgimple-range-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efc38347a7444dde3fb173f0f2c59a60b7db53d/gcc%2Fgimple-range-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-op.cc?ref=8efc38347a7444dde3fb173f0f2c59a60b7db53d", "patch": "@@ -342,6 +342,38 @@ class cfn_signbit : public range_operator_float\n   }\n } op_cfn_signbit;\n \n+// Implement range operator for CFN_BUILT_IN_COPYSIGN\n+class cfn_copysign : public range_operator_float\n+{\n+public:\n+  using range_operator_float::fold_range;\n+  virtual bool fold_range (frange &r, tree type, const frange &lh,\n+\t\t\t   const frange &rh, relation_kind) const override\n+  {\n+    frange neg;\n+    range_op_handler abs_op (ABS_EXPR, type);\n+    range_op_handler neg_op (NEGATE_EXPR, type);\n+    if (!abs_op || !abs_op.fold_range (r, type, lh, frange (type)))\n+      return false;\n+    if (!neg_op || !neg_op.fold_range (neg, type, r, frange (type)))\n+      return false;\n+\n+    bool signbit;\n+    if (rh.signbit_p (signbit))\n+      {\n+\t// If the sign is negative, flip the result from ABS,\n+\t// otherwise leave things positive.\n+\tif (signbit)\n+\t  r = neg;\n+      }\n+    else\n+      // If the sign is unknown, keep the positive and negative\n+      // alternatives.\n+      r.union_ (neg);\n+    return true;\n+  }\n+} op_cfn_copysign;\n+\n // Implement range operator for CFN_BUILT_IN_TOUPPER and CFN_BUILT_IN_TOLOWER.\n class cfn_toupper_tolower : public range_operator\n {\n@@ -762,6 +794,13 @@ gimple_range_op_handler::maybe_builtin_call ()\n       m_valid = true;\n       break;\n \n+    CASE_CFN_COPYSIGN_ALL:\n+      m_op1 = gimple_call_arg (call, 0);\n+      m_op2 = gimple_call_arg (call, 1);\n+      m_float = &op_cfn_copysign;\n+      m_valid = true;\n+      break;\n+\n     case CFN_BUILT_IN_TOUPPER:\n     case CFN_BUILT_IN_TOLOWER:\n       // Only proceed If the argument is compatible with the LHS."}]}