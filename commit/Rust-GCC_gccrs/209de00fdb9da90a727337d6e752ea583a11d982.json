{"sha": "209de00fdb9da90a727337d6e752ea583a11d982", "node_id": "C_kwDOANBUbNoAKDIwOWRlMDBmZGI5ZGE5MGE3MjczMzdkNmU3NTJlYTU4M2ExMWQ5ODI", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-06-09T12:48:24Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-06-09T12:48:24Z"}, "message": "OpenMP: Handle ancestor:1 with discover_declare_target\n\ngcc/\n\t* omp-offload.cc (omp_discover_declare_target_tgt_fn_r,\n\tomp_discover_declare_target_fn_r): Don't walk reverse-offload\n\ttarget regions.\n\ngcc/testsuite/\n\t* c-c++-common/gomp/reverse-offload-1.c: New.", "tree": {"sha": "5325e73d88d7f5d333c55d87b40fc85c7621315e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5325e73d88d7f5d333c55d87b40fc85c7621315e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/209de00fdb9da90a727337d6e752ea583a11d982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209de00fdb9da90a727337d6e752ea583a11d982", "html_url": "https://github.com/Rust-GCC/gccrs/commit/209de00fdb9da90a727337d6e752ea583a11d982", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209de00fdb9da90a727337d6e752ea583a11d982/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dc19a1b590b9afb58fd5f779e87ae8fc1998ae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc19a1b590b9afb58fd5f779e87ae8fc1998ae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dc19a1b590b9afb58fd5f779e87ae8fc1998ae7"}], "stats": {"total": 114, "additions": 104, "deletions": 10}, "files": [{"sha": "fcbe6cf83d8cad3348eaeb28fd805be08dc5c331", "filename": "gcc/omp-offload.cc", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209de00fdb9da90a727337d6e752ea583a11d982/gcc%2Fomp-offload.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209de00fdb9da90a727337d6e752ea583a11d982/gcc%2Fomp-offload.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-offload.cc?ref=209de00fdb9da90a727337d6e752ea583a11d982", "patch": "@@ -268,12 +268,12 @@ omp_discover_declare_target_tgt_fn_r (tree *tp, int *walk_subtrees, void *data)\n     }\n   else if (TYPE_P (*tp))\n     *walk_subtrees = 0;\n-  /* else if (TREE_CODE (*tp) == OMP_TARGET)\n-       {\n-\t if (tree dev = omp_find_clause (OMP_TARGET_CLAUSES (*tp)))\n-\t   if (OMP_DEVICE_ANCESTOR (dev))\n-\t     *walk_subtrees = 0;\n-       } */\n+  else if (TREE_CODE (*tp) == OMP_TARGET)\n+    {\n+      tree c = omp_find_clause (OMP_CLAUSES (*tp), OMP_CLAUSE_DEVICE);\n+      if (c && OMP_CLAUSE_DEVICE_ANCESTOR (c))\n+\t*walk_subtrees = 0;\n+    }\n   return NULL_TREE;\n }\n \n@@ -284,10 +284,11 @@ omp_discover_declare_target_fn_r (tree *tp, int *walk_subtrees, void *data)\n {\n   if (TREE_CODE (*tp) == OMP_TARGET)\n     {\n-      /* And not OMP_DEVICE_ANCESTOR.  */\n-      walk_tree_without_duplicates (&OMP_TARGET_BODY (*tp),\n-\t\t\t\t    omp_discover_declare_target_tgt_fn_r,\n-\t\t\t\t    data);\n+      tree c = omp_find_clause (OMP_CLAUSES (*tp), OMP_CLAUSE_DEVICE);\n+      if (!c || !OMP_CLAUSE_DEVICE_ANCESTOR (c))\n+\twalk_tree_without_duplicates (&OMP_TARGET_BODY (*tp),\n+\t\t\t\t      omp_discover_declare_target_tgt_fn_r,\n+\t\t\t\t      data);\n       *walk_subtrees = 0;\n     }\n   else if (TYPE_P (*tp))"}, {"sha": "9a3fa5230f8b956e6a5bba676d8e4951b2f3c0d9", "filename": "gcc/testsuite/c-c++-common/gomp/reverse-offload-1.c", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209de00fdb9da90a727337d6e752ea583a11d982/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Freverse-offload-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209de00fdb9da90a727337d6e752ea583a11d982/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Freverse-offload-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Freverse-offload-1.c?ref=209de00fdb9da90a727337d6e752ea583a11d982", "patch": "@@ -0,0 +1,93 @@\n+/* { dg-additional-options \"-fdump-tree-omplower\" } */\n+\n+/* { dg-final { scan-tree-dump-times \"omp declare target\\[^ \\]\" 3 \"omplower\" } }  */\n+\n+/* { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target\\\\)\\\\)\\[\\n\\r\\]*int called_in_target1\" 1 \"omplower\" } }  */\n+/* { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target\\\\)\\\\)\\[\\n\\r\\]*int called_in_target2\" 1 \"omplower\" } }  */\n+/* { dg-final { scan-tree-dump-times \"__attribute__\\\\(\\\\(omp declare target, omp declare target block\\\\)\\\\)\\[\\n\\r\\]*void tg_fn\" 1 \"omplower\" } }  */\n+\n+/* { dg-prune-output \"'reverse_offload' clause on 'requires' directive not supported yet\" } */\n+\n+#pragma omp requires reverse_offload\n+\n+extern int add_3 (int);\n+\n+static int global_var = 5;\n+\n+void\n+check_offload (int *x, int *y)\n+{\n+  *x = add_3 (*x);\n+  *y = add_3 (*y);\n+}\n+\n+int\n+called_in_target1 ()\n+{\n+  return 42;\n+}\n+\n+int\n+called_in_target2 ()\n+{\n+  return -6;\n+}\n+\n+#pragma omp declare target\n+void\n+tg_fn (int *x, int *y)\n+{\n+  int x2 = *x, y2 = *y;\n+  if (x2 != 2 || y2 != 3)\n+    __builtin_abort ();\n+  x2 = x2 + 2 + called_in_target1 ();\n+  y2 = y2 + 7;\n+\n+  #pragma omp target device(ancestor : 1) map(tofrom: x2)\n+    check_offload(&x2, &y2);\n+\n+  if (x2 != 2+2+3+42 || y2 != 3 + 7)\n+    __builtin_abort ();\n+  *x = x2, *y = y2;\n+}\n+#pragma omp end declare target\n+\n+void\n+my_func (int *x, int *y)\n+{\n+  if (global_var != 5)\n+    __builtin_abort ();\n+  global_var = 242;\n+  *x = 2*add_3(*x);\n+  *y = 3*add_3(*y);\n+}\n+\n+int\n+main ()\n+{\n+  #pragma omp target\n+  {\n+     int x = 2, y = 3;\n+     tg_fn (&x, &y);\n+  }\n+\n+  #pragma omp target\n+  {\n+     int x = -2, y = -1;\n+     x += called_in_target2 ();\n+     #pragma omp target device ( ancestor:1 ) firstprivate(y) map(tofrom:x)\n+     {\n+       if (x != -2-6 || y != -1)\n+         __builtin_abort ();\n+       my_func (&x, &y);\n+       if (x != 2*(3-2) || y != 3*(3-1))\n+         __builtin_abort ();\n+     }\n+     if (x != 2*(3-2) || y != -1)\n+       __builtin_abort ();\n+  }\n+\n+  if (global_var != 242)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}