{"sha": "c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBmOGMyMmEzZTlmOGNkNDVjMWNiNGJlNWY4M2FmYmViZTNiZmRjOQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-06-11T21:44:36Z"}, "committer": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-06-29T15:19:56Z"}, "message": "Fortran: Re-enable 128-bit integers for AMD GCN\n\nThis patch reverts the part of Tobias's patch for PR target/96306 that\ndisables 128-bit integer support for AMD GCN.\n\n2021-06-18  Julian Brown  <julian@codesourcery.com>\n\nlibgfortran/\n\tPR target/96306\n\t* configure.ac: Remove stanza that removes KIND=16 integers for AMD GCN.\n\t* configure: Regenerate.", "tree": {"sha": "7cbc558981af32921a143cd619bc183a41717544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cbc558981af32921a143cd619bc183a41717544"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8a730cd99184e62c4d026b8c775b96589a9c262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a730cd99184e62c4d026b8c775b96589a9c262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a730cd99184e62c4d026b8c775b96589a9c262"}], "stats": {"total": 26, "additions": 4, "deletions": 22}, "files": [{"sha": "886216f69d4597cd5f8d8492170cdfa7825353eb", "filename": "libgfortran/configure", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9", "patch": "@@ -6017,7 +6017,7 @@ case \"$host\" in\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n-\t# and if assembler supports CET insn.\n+\t# and if compiler and assembler support CET insn.\n \tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n@@ -6216,10 +6216,6 @@ fi\n LIBGOMP_CHECKED_INT_KINDS=\"1 2 4 8 16\"\n LIBGOMP_CHECKED_REAL_KINDS=\"4 8 10 16\"\n \n-if test \"x${target_cpu}\" = xamdgcn; then\n-  # amdgcn only has limited support for __int128.\n-  LIBGOMP_CHECKED_INT_KINDS=\"1 2 4 8\"\n-fi\n \n \n \n@@ -12731,7 +12727,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12744 \"configure\"\n+#line 12730 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12837,7 +12833,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12850 \"configure\"\n+#line 12836 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15532,16 +15528,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -15663,7 +15649,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n # project, but have not yet been accepted: they are GCC-local changes\n # for the time being.  (See\n # https://lists.gnu.org/archive/html/libtool-patches/2018-05/msg00000.html)\n-linux* | k*bsd*-gnu | kopensolaris*-gnu | uclinuxfdpiceabi)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu* | uclinuxfdpiceabi)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no"}, {"sha": "523eb24bca1d5aa0b510a74962f87db743c8900a", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=c0f8c22a3e9f8cd45c1cb4be5f83afbebe3bfdc9", "patch": "@@ -222,10 +222,6 @@ AM_CONDITIONAL(LIBGFOR_MINIMAL, [test \"x${target_cpu}\" = xnvptx])\n LIBGOMP_CHECKED_INT_KINDS=\"1 2 4 8 16\"\n LIBGOMP_CHECKED_REAL_KINDS=\"4 8 10 16\"\n \n-if test \"x${target_cpu}\" = xamdgcn; then\n-  # amdgcn only has limited support for __int128.\n-  LIBGOMP_CHECKED_INT_KINDS=\"1 2 4 8\"\n-fi\n AC_SUBST(LIBGOMP_CHECKED_INT_KINDS)\n AC_SUBST(LIBGOMP_CHECKED_REAL_KINDS)\n "}]}