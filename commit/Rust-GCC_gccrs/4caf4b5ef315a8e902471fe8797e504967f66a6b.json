{"sha": "4caf4b5ef315a8e902471fe8797e504967f66a6b", "node_id": "C_kwDOANBUbNoAKDRjYWY0YjVlZjMxNWE4ZTkwMjQ3MWZlODc5N2U1MDQ5NjdmNjZhNmI", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2022-09-05T10:20:18Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-12T08:16:52Z"}, "message": "[Ada] Accept explicit SPARK_Mode Auto as configuration pragma\n\nAn explicit value of Auto is now accepted for a configuration pragma\nSPARK_Mode, as a way to exempt a unit from complete adherence to\nSPARK rules when using a global configuration pragma file where\nSPARK_Mode=>On is specified.\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Pragma): Accept SPARK_Mode=>Auto as\n\tconfiguration pragma.\n\t(Get_SPARK_Mode): Make the value for Auto explicit.\n\t* snames.ads-tmpl (Name_Auto): Add name.", "tree": {"sha": "9cbd5b9b9aa511bfc5b12318e20887389be54ec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cbd5b9b9aa511bfc5b12318e20887389be54ec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4caf4b5ef315a8e902471fe8797e504967f66a6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caf4b5ef315a8e902471fe8797e504967f66a6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4caf4b5ef315a8e902471fe8797e504967f66a6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caf4b5ef315a8e902471fe8797e504967f66a6b/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "517817a434f0c15a355cb1e9ab3aaea14a54e9a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517817a434f0c15a355cb1e9ab3aaea14a54e9a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/517817a434f0c15a355cb1e9ab3aaea14a54e9a6"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "67d00d2aa64d006331aca97cc9c467bf38e9f98d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caf4b5ef315a8e902471fe8797e504967f66a6b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caf4b5ef315a8e902471fe8797e504967f66a6b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=4caf4b5ef315a8e902471fe8797e504967f66a6b", "patch": "@@ -23176,7 +23176,7 @@ package body Sem_Prag is\n          -- SPARK_Mode --\n          ----------------\n \n-         --  pragma SPARK_Mode [(On | Off)];\n+         --  pragma SPARK_Mode [(Auto | On | Off)];\n \n          when Pragma_SPARK_Mode => Do_SPARK_Mode : declare\n             Mode_Id : SPARK_Mode_Type;\n@@ -23662,7 +23662,7 @@ package body Sem_Prag is\n             --  Check the legality of the mode (no argument = ON)\n \n             if Arg_Count = 1 then\n-               Check_Arg_Is_One_Of (Arg1, Name_On, Name_Off);\n+               Check_Arg_Is_One_Of (Arg1, Name_Auto, Name_On, Name_Off);\n                Mode := Chars (Get_Pragma_Arg (Arg1));\n             else\n                Mode := Name_On;\n@@ -23713,6 +23713,15 @@ package body Sem_Prag is\n             --  the pragma resides to find a potential construct.\n \n             else\n+               --  An explicit mode of Auto is only allowed as a configuration\n+               --  pragma. Escape \"pragma\" to avoid replacement with \"aspect\".\n+\n+               if Mode_Id = None then\n+                  Error_Pragma_Arg\n+                    (\"only configuration 'p'r'a'g'm'a% can have value &\",\n+                     Arg1);\n+               end if;\n+\n                Stmt := Prev (N);\n                while Present (Stmt) loop\n \n@@ -31169,7 +31178,9 @@ package body Sem_Prag is\n \n    function Get_SPARK_Mode_Type (N : Name_Id) return SPARK_Mode_Type is\n    begin\n-      if N = Name_On then\n+      if N = Name_Auto then\n+         return None;\n+      elsif N = Name_On then\n          return On;\n       elsif N = Name_Off then\n          return Off;"}, {"sha": "8f71ad98db3e22aab84fe9f99f866e12efdc966a", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caf4b5ef315a8e902471fe8797e504967f66a6b/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caf4b5ef315a8e902471fe8797e504967f66a6b/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=4caf4b5ef315a8e902471fe8797e504967f66a6b", "patch": "@@ -782,6 +782,7 @@ package Snames is\n    Name_Assertion                      : constant Name_Id := N + $;\n    Name_Assertions                     : constant Name_Id := N + $;\n    Name_Attribute_Name                 : constant Name_Id := N + $;\n+   Name_Auto                           : constant Name_Id := N + $;\n    Name_Body_File_Name                 : constant Name_Id := N + $;\n    Name_Boolean_Entry_Barriers         : constant Name_Id := N + $;\n    Name_By_Any                         : constant Name_Id := N + $;"}]}