{"sha": "1240df7b4075f043a00c5314318f3bbf9af719e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0MGRmN2I0MDc1ZjA0M2EwMGM1MzE0MzE4ZjNiYmY5YWY3MTllNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2019-06-22T15:32:51Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-06-22T15:32:51Z"}, "message": "alias-access-path-6.c: New testcase.\n\n\t* gcc.dg/tree-ssa/alias-access-path-6.c: New testcase.\n\t* tree-ssa-alias.c (nonoverlapping_component_refs_p): Do not\n\tgive up on bitfields; continue searching for different refs\n\tappearing later.\n\nFrom-SVN: r272587", "tree": {"sha": "afc8d42d6f812236b8cd6de35319555455c70d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afc8d42d6f812236b8cd6de35319555455c70d83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1240df7b4075f043a00c5314318f3bbf9af719e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1240df7b4075f043a00c5314318f3bbf9af719e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1240df7b4075f043a00c5314318f3bbf9af719e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1240df7b4075f043a00c5314318f3bbf9af719e6/comments", "author": null, "committer": null, "parents": [{"sha": "78f7607db4c53f8cfe4653a6c91c0328bc2854c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78f7607db4c53f8cfe4653a6c91c0328bc2854c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78f7607db4c53f8cfe4653a6c91c0328bc2854c3"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "03e174883241d2e1a5fd773f42580a876976a635", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1240df7b4075f043a00c5314318f3bbf9af719e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1240df7b4075f043a00c5314318f3bbf9af719e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1240df7b4075f043a00c5314318f3bbf9af719e6", "patch": "@@ -1,3 +1,9 @@\n+2019-06-22  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-ssa-alias.c (nonoverlapping_component_refs_p): Do not\n+\tgive up on bitfields; continue searching for different refs\n+\tappearing later.\n+\n 2019-06-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-vect-data-refs.c (vect_find_stmt_data_reference): Handle"}, {"sha": "0b122c6075de6c349a4b633a335da6ca18646efa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1240df7b4075f043a00c5314318f3bbf9af719e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1240df7b4075f043a00c5314318f3bbf9af719e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1240df7b4075f043a00c5314318f3bbf9af719e6", "patch": "@@ -1,3 +1,7 @@\n+2019-06-22  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/tree-ssa/alias-access-path-6.c: New testcase.\n+\n 2019-06-22  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/86476 - noexcept-specifier is a complete-class context."}, {"sha": "c0de453355fa2b8ddb5aa414a228f4790c3ab596", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-access-path-6.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1240df7b4075f043a00c5314318f3bbf9af719e6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-access-path-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1240df7b4075f043a00c5314318f3bbf9af719e6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-access-path-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-access-path-6.c?ref=1240df7b4075f043a00c5314318f3bbf9af719e6", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+/* This tests that nonoveralpping_component_refs does not give up\n+   on field delcs and continues looking to find mismatch between\n+   a1 and a2.  */\n+struct a {\n+\tint a:3;\n+\tint b:3;\n+};\n+struct b {struct a a1,a2;};\n+struct c {struct b b[10];} *cptr;\n+struct d {struct c c;} *dptr;\n+int\n+test(int i,int j)\n+{\n+  cptr->b[i].a1.a=0;\n+  dptr->c.b[j].a2.b=1;\n+  return cptr->b[i].a1.a;\n+}\n+int\n+test2(int i,int j)\n+{\n+  cptr->b[i].a1.a=1;\n+  dptr->c.b[j].a1.a=0;\n+  return cptr->b[i].a1.a;\n+}\n+/* { dg-final { scan-tree-dump-times \"return 0\" 1 \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-not \"return 1\" \"optimized\"} } */"}, {"sha": "32583156350b88561b3f489dc6b949d0e5de339d", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1240df7b4075f043a00c5314318f3bbf9af719e6/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1240df7b4075f043a00c5314318f3bbf9af719e6/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=1240df7b4075f043a00c5314318f3bbf9af719e6", "patch": "@@ -1350,19 +1350,16 @@ nonoverlapping_component_refs_p (const_tree x, const_tree y)\n \t\t same.  */\n \t      if (DECL_BIT_FIELD_REPRESENTATIVE (fieldx) == fieldy\n \t\t  || DECL_BIT_FIELD_REPRESENTATIVE (fieldy) == fieldx)\n-\t\t{\n-\t\t   ++alias_stats.nonoverlapping_component_refs_p_may_alias;\n-\t\t   return false;\n-\t\t}\n+\t\t;\n \t      /* Different fields of the same record type cannot overlap.\n \t\t ??? Bitfields can overlap at RTL level so punt on them.  */\n-\t      if (DECL_BIT_FIELD (fieldx) && DECL_BIT_FIELD (fieldy))\n+\t      else if (DECL_BIT_FIELD (fieldx) && DECL_BIT_FIELD (fieldy))\n+\t\t;\n+\t      else\n \t\t{\n-\t\t   ++alias_stats.nonoverlapping_component_refs_p_may_alias;\n-\t\t   return false;\n+\t\t  ++alias_stats.nonoverlapping_component_refs_p_no_alias;\n+\t\t  return true;\n \t\t}\n-\t      ++alias_stats.nonoverlapping_component_refs_p_no_alias;\n-\t      return true;\n \t    }\n \t}\n       if (TYPE_UID (typex) < TYPE_UID (typey))"}]}