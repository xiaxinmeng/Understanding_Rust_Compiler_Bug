{"sha": "2936419d1cbff6e526a77bbba46b06c5552a60e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkzNjQxOWQxY2JmZjZlNTI2YTc3YmJiYTQ2YjA2YzU1NTJhNjBlMQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2000-12-04T02:27:21Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-12-04T02:27:21Z"}, "message": "Point2D.java: Added protected constructor.\n\n\t* java/awt/geom/Point2D.java: Added protected constructor.\n\t(equals): New method.\n\t(Float.setLocation(float,float)): New method.\n\t* java/awt/geom/Dimension2D.java: Added protected constructor.\n\t* java/awt/geom/AffineTransform.java: Made all constants public.\n\t(concatenate): Fixed typo in name.\n\t* java/awt/event/WindowAdapter.java: Class now abstract.\n\t* java/awt/event/KeyEvent.java (CHAR_UNDEFINED): Now final.\n\t* java/awt/event/FocusEvent.java: Extend ComponentEvent, not\n\tAWTEvent.\n\nFrom-SVN: r37988", "tree": {"sha": "e139b5064992884cfee2221339e0e820f5c01c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e139b5064992884cfee2221339e0e820f5c01c3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2936419d1cbff6e526a77bbba46b06c5552a60e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2936419d1cbff6e526a77bbba46b06c5552a60e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2936419d1cbff6e526a77bbba46b06c5552a60e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2936419d1cbff6e526a77bbba46b06c5552a60e1/comments", "author": null, "committer": null, "parents": [{"sha": "c06093a0a3f29c3eda90917197caaca34afef58d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c06093a0a3f29c3eda90917197caaca34afef58d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c06093a0a3f29c3eda90917197caaca34afef58d"}], "stats": {"total": 69, "additions": 51, "deletions": 18}, "files": [{"sha": "3bdd4d1cab3f2a79ed26028145723069313906d1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2936419d1cbff6e526a77bbba46b06c5552a60e1", "patch": "@@ -1,5 +1,16 @@\n 2000-12-03  Tom Tromey  <tromey@redhat.com>\n \n+\t* java/awt/geom/Point2D.java: Added protected constructor.\n+\t(equals): New method.\n+\t(Float.setLocation(float,float)): New method.\n+\t* java/awt/geom/Dimension2D.java: Added protected constructor.\n+\t* java/awt/geom/AffineTransform.java: Made all constants public.\n+\t(concatenate): Fixed typo in name.\n+\t* java/awt/event/WindowAdapter.java: Class now abstract.\n+\t* java/awt/event/KeyEvent.java (CHAR_UNDEFINED): Now final.\n+\t* java/awt/event/FocusEvent.java: Extend ComponentEvent, not\n+\tAWTEvent.\n+\n \t* java/awt/AWTError.java: Extend Error, not\n \tIllegalStateException.\n "}, {"sha": "d4759275a627c79e7241589dc6156ab2c18b017b", "filename": "libjava/java/awt/event/FocusEvent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FFocusEvent.java?ref=2936419d1cbff6e526a77bbba46b06c5552a60e1", "patch": "@@ -16,7 +16,7 @@\n \n /* Status: Believed complete and correct to JDK 1.2.  */\n \n-public class FocusEvent extends AWTEvent\n+public class FocusEvent extends ComponentEvent\n {\n   public static final int FOCUS_FIRST = 1004;\n   public static final int FOCUS_GAINED = 1004;"}, {"sha": "caca0d4e7163e6f718a8fc48d83aa08b4f7573e6", "filename": "libjava/java/awt/event/KeyEvent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java?ref=2936419d1cbff6e526a77bbba46b06c5552a60e1", "patch": "@@ -13,7 +13,7 @@\n \n public class KeyEvent extends InputEvent\n {\n-  public static char CHAR_UNDEFINED = 0;;\n+  public static final char CHAR_UNDEFINED = 0;;\n   public static final int KEY_FIRST = 400;\n   public static final int KEY_LAST = 402;\n   public static final int KEY_PRESSED = 401;"}, {"sha": "d264756f3708fba6debb13c6b68b5a0e17297230", "filename": "libjava/java/awt/event/WindowAdapter.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java?ref=2936419d1cbff6e526a77bbba46b06c5552a60e1", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -10,12 +10,12 @@\n \n /**\n  * @author Per Bothner <bothner@cygnus.com>\n- * @date Fenruary, 1999.\n+ * @date February, 1999.\n  */\n \n /* Status:  Believed complete and correct. */\n \n-public class WindowAdapter implements WindowListener\n+public abstract class WindowAdapter implements WindowListener\n {\n   public void windowActivated (WindowEvent w) { }\n   public void windowClosed (WindowEvent w) { }"}, {"sha": "3e9bb8abb647a21b418d92b0e0d37461dd9a090c", "filename": "libjava/java/awt/geom/AffineTransform.java", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FAffineTransform.java?ref=2936419d1cbff6e526a77bbba46b06c5552a60e1", "patch": "@@ -20,16 +20,16 @@\n \n public class AffineTransform implements Cloneable, Serializable\n {\n-  static final int TYPE_IDENTITY = 0;\n-  static final int TYPE_FLIP = 64;\n-  static final int TYPE_GENERAL_ROTATION = 16;\n-  static final int TYPE_GENERAL_SCALE = 4;\n-  static final int TYPE_GENERAL_TRANSFORM = 32;\n-  static final int TYPE_MASK_ROTATION = 24;\n-  static final int TYPE_MASK_SCALE = 6;\n-  static final int TYPE_QUADRANT_ROTATION = 8;\n-  static final int TYPE_TRANSLATION = 1;\n-  static final int TYPE_UNIFORM_SCALE = 2;\n+  public static final int TYPE_IDENTITY = 0;\n+  public static final int TYPE_FLIP = 64;\n+  public static final int TYPE_GENERAL_ROTATION = 16;\n+  public static final int TYPE_GENERAL_SCALE = 4;\n+  public static final int TYPE_GENERAL_TRANSFORM = 32;\n+  public static final int TYPE_MASK_ROTATION = 24;\n+  public static final int TYPE_MASK_SCALE = 6;\n+  public static final int TYPE_QUADRANT_ROTATION = 8;\n+  public static final int TYPE_TRANSLATION = 1;\n+  public static final int TYPE_UNIFORM_SCALE = 2;\n \n   public AffineTransform ()\n   {\n@@ -300,7 +300,7 @@ public void setTransform (double m00, double m10, double m01,\n     this.type = 0;\t\t// FIXME\n   }\n \n-  public void concatentate (AffineTransform tx)\n+  public void concatenate (AffineTransform tx)\n   {\n     double n00 = m00 * tx.m00 + m01 * tx.m10;\n     double n01 = m00 * tx.m01 + m01 * tx.m11;"}, {"sha": "47bfb78bdc6e1836a05181fd3ec277eb8938c87a", "filename": "libjava/java/awt/geom/Dimension2D.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java?ref=2936419d1cbff6e526a77bbba46b06c5552a60e1", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2000  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -10,7 +10,7 @@\n \n /**\n  * @author Per Bothner <bothner@cygnus.com>\n- * @date Fenruary, 1999.\n+ * @date February, 1999.\n  */\n \n /* Written using online API docs for JDK 1.2 beta from http://www.javasoft.com.\n@@ -37,4 +37,8 @@ public Object clone ()\n     } \n     catch (CloneNotSupportedException _) {return null;}\n   }\n+\n+  protected Dimension2D ()\n+  {\n+  }\n }"}, {"sha": "df631a463be18c4a88f8d595ec14d0d44ee00acd", "filename": "libjava/java/awt/geom/Point2D.java", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2936419d1cbff6e526a77bbba46b06c5552a60e1/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java?ref=2936419d1cbff6e526a77bbba46b06c5552a60e1", "patch": "@@ -26,6 +26,10 @@ public abstract class Point2D implements Cloneable\n \n   public abstract void setLocation (double x, double y);\n \n+  protected Point2D ()\n+  {\n+  }\n+\n   public void setLocation (Point2D pt)  { setLocation(pt.getX(), pt.getY()); }\n \n   static public double distanceSq (double X1, double Y1, double X2, double Y2)\n@@ -71,6 +75,14 @@ public Object clone()\n     catch (CloneNotSupportedException _) {return null;}\n   }\n \n+  public boolean equals (Object o)\n+  {\n+    if (! (o instanceof Point2D))\n+      return false;\n+    Point2D p = (Point2D) o;\n+    return getX () == p.getX () && getY () == p.getY ();\n+  }\n+\n   public static class Double extends Point2D\n   {\n     public double x;\n@@ -143,6 +155,12 @@ public void setLocation (double x, double y)\n       this.y = (float) y;\n     }\n \n+    public void setLocation (float x, float y)\n+    {\n+      this.x = x;\n+      this.y = y;\n+    }\n+\n     public String toString ()\n     {\n       return \"(\" + x + \", \" + y + \")\";"}]}