{"sha": "b2c24c1b9f722c57ed70c067e77d4fda1c63abda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJjMjRjMWI5ZjcyMmM1N2VkNzBjMDY3ZTc3ZDRmZGExYzYzYWJkYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-06T15:14:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-06T15:14:11Z"}, "message": "tree-phinodes.c (remove_all_phi_nodes_for): Speed up using a pointer to the last PHI node in the new PHI chain.\n\n\t* tree-phinodes.c (remove_all_phi_nodes_for): Speed up using a\n\tpointer to the last PHI node in the new PHI chain.\n\nFrom-SVN: r90173", "tree": {"sha": "6838e695ad282ca52b22e7f2649ebf6c69aeecde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6838e695ad282ca52b22e7f2649ebf6c69aeecde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2c24c1b9f722c57ed70c067e77d4fda1c63abda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c24c1b9f722c57ed70c067e77d4fda1c63abda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2c24c1b9f722c57ed70c067e77d4fda1c63abda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c24c1b9f722c57ed70c067e77d4fda1c63abda/comments", "author": null, "committer": null, "parents": [{"sha": "b741fa00f60003bd0974704fd911ccb65b2acd19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b741fa00f60003bd0974704fd911ccb65b2acd19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b741fa00f60003bd0974704fd911ccb65b2acd19"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "402f31d8903ed05a833e4cb8b4e350e908a476d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c24c1b9f722c57ed70c067e77d4fda1c63abda/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c24c1b9f722c57ed70c067e77d4fda1c63abda/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2c24c1b9f722c57ed70c067e77d4fda1c63abda", "patch": "@@ -1,3 +1,8 @@\n+2004-11-06  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-phinodes.c (remove_all_phi_nodes_for): Speed up using a\n+\tpointer to the last PHI node in the new PHI chain.\n+\n 2004-11-06  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (prepare_move_operands): Emit a use of r12"}, {"sha": "0d621b5333967ae8759a6c94af8069ead0f79277", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c24c1b9f722c57ed70c067e77d4fda1c63abda/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c24c1b9f722c57ed70c067e77d4fda1c63abda/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=b2c24c1b9f722c57ed70c067e77d4fda1c63abda", "patch": "@@ -449,10 +449,10 @@ remove_all_phi_nodes_for (bitmap vars)\n   FOR_EACH_BB (bb)\n     {\n       /* Build a new PHI list for BB without variables in VARS.  */\n-      tree phi, new_phi_list, last_phi, next;\n+      tree phi, new_phi_list, next;\n+      tree *lastp = &new_phi_list;\n \n-      last_phi = new_phi_list = NULL_TREE;\n-      for (phi = phi_nodes (bb), next = NULL; phi; phi = next)\n+      for (phi = phi_nodes (bb); phi; phi = next)\n \t{\n \t  tree var = SSA_NAME_VAR (PHI_RESULT (phi));\n \n@@ -465,13 +465,8 @@ remove_all_phi_nodes_for (bitmap vars)\n \t\t Note that fact in PHI_REWRITTEN.  */\n \t      PHI_REWRITTEN (phi) = 1;\n \n-\t      if (new_phi_list == NULL_TREE)\n-\t\tnew_phi_list = last_phi = phi;\n-\t      else\n-\t\t{\n-\t\t  PHI_CHAIN (last_phi) = phi;\n-\t\t  last_phi = phi;\n-\t\t}\n+\t      *lastp = phi;\n+\t      lastp = &PHI_CHAIN (phi);\n \t    }\n \t  else\n \t    {\n@@ -483,8 +478,7 @@ remove_all_phi_nodes_for (bitmap vars)\n \t}\n \n       /* Make sure the last node in the new list has no successors.  */\n-      if (last_phi)\n-\tPHI_CHAIN (last_phi) = NULL_TREE;\n+      *lastp = NULL;\n       bb_ann (bb)->phi_nodes = new_phi_list;\n \n #if defined ENABLE_CHECKING"}]}