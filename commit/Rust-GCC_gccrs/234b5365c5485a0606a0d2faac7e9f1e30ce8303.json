{"sha": "234b5365c5485a0606a0d2faac7e9f1e30ce8303", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM0YjUzNjVjNTQ4NWEwNjA2YTBkMmZhYWM3ZTlmMWUzMGNlODMwMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-04-16T08:26:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-04-16T08:26:26Z"}, "message": "re PR rtl-optimization/90082 (ICE in delete_unmarked_insns, at dce.c:653)\n\n\tPR rtl-optimization/90082\n\t* dce.c (can_delete_call): New function.\n\t(deletable_insn_p, mark_insn): Use it.\n\n\t* gcc.dg/pr90082.c: New test.\n\nFrom-SVN: r270380", "tree": {"sha": "147f1985df30d9d59b8e88e486e3c2c03cd5ff39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/147f1985df30d9d59b8e88e486e3c2c03cd5ff39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/234b5365c5485a0606a0d2faac7e9f1e30ce8303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234b5365c5485a0606a0d2faac7e9f1e30ce8303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/234b5365c5485a0606a0d2faac7e9f1e30ce8303", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234b5365c5485a0606a0d2faac7e9f1e30ce8303/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41b5808d56c2f4c98cf783b13d97b775f59f123c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b5808d56c2f4c98cf783b13d97b775f59f123c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41b5808d56c2f4c98cf783b13d97b775f59f123c"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "368f36affc26c61ffbd858cdfcad20468c147402", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234b5365c5485a0606a0d2faac7e9f1e30ce8303/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234b5365c5485a0606a0d2faac7e9f1e30ce8303/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=234b5365c5485a0606a0d2faac7e9f1e30ce8303", "patch": "@@ -1,5 +1,9 @@\n 2019-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/90082\n+\t* dce.c (can_delete_call): New function.\n+\t(deletable_insn_p, mark_insn): Use it.\n+\n \tPR tree-optimization/90090\n \t* tree-ssa-math-opts.c (is_division_by): Ignore divisions that can\n \tthrow internally."}, {"sha": "68d3713b0918c9a1b3eb6f9090d6484e906d16e4", "filename": "gcc/dce.c", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234b5365c5485a0606a0d2faac7e9f1e30ce8303/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234b5365c5485a0606a0d2faac7e9f1e30ce8303/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=234b5365c5485a0606a0d2faac7e9f1e30ce8303", "patch": "@@ -87,6 +87,32 @@ deletable_insn_p_1 (rtx body)\n     }\n }\n \n+/* Don't delete calls that may throw if we cannot do so.  */\n+\n+static bool\n+can_delete_call (rtx_insn *insn)\n+{\n+  if (cfun->can_delete_dead_exceptions && can_alter_cfg)\n+    return true;\n+  if (!insn_nothrow_p (insn))\n+    return false;\n+  if (can_alter_cfg)\n+    return true;\n+  /* If we can't alter cfg, even when the call can't throw exceptions, it\n+     might have EDGE_ABNORMAL_CALL edges and so we shouldn't delete such\n+     calls.  */\n+  gcc_assert (CALL_P (insn));\n+  if (BLOCK_FOR_INSN (insn) && BB_END (BLOCK_FOR_INSN (insn)) == insn)\n+    {\n+      edge e;\n+      edge_iterator ei;\n+\n+      FOR_EACH_EDGE (e, ei, BLOCK_FOR_INSN (insn)->succs)\n+\tif ((e->flags & EDGE_ABNORMAL_CALL) != 0)\n+\t  return false;\n+    }\n+  return true;\n+}\n \n /* Return true if INSN is a normal instruction that can be deleted by\n    the DCE pass.  */\n@@ -111,8 +137,7 @@ deletable_insn_p (rtx_insn *insn, bool fast, bitmap arg_stores)\n       && (RTL_CONST_OR_PURE_CALL_P (insn)\n \t  && !RTL_LOOPING_CONST_OR_PURE_CALL_P (insn))\n       /* Don't delete calls that may throw if we cannot do so.  */\n-      && ((cfun->can_delete_dead_exceptions && can_alter_cfg)\n-\t  || insn_nothrow_p (insn)))\n+      && can_delete_call (insn))\n     return find_call_stack_args (as_a <rtx_call_insn *> (insn), false,\n \t\t\t\t fast, arg_stores);\n \n@@ -206,8 +231,7 @@ mark_insn (rtx_insn *insn, bool fast)\n \t  && !SIBLING_CALL_P (insn)\n \t  && (RTL_CONST_OR_PURE_CALL_P (insn)\n \t      && !RTL_LOOPING_CONST_OR_PURE_CALL_P (insn))\n-\t  && ((cfun->can_delete_dead_exceptions && can_alter_cfg)\n-\t      || insn_nothrow_p (insn)))\n+\t  && can_delete_call (insn))\n \tfind_call_stack_args (as_a <rtx_call_insn *> (insn), true, fast, NULL);\n     }\n }"}, {"sha": "92f9bb5911b4f376cb62a8323218f22c8d1b0ce0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234b5365c5485a0606a0d2faac7e9f1e30ce8303/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234b5365c5485a0606a0d2faac7e9f1e30ce8303/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=234b5365c5485a0606a0d2faac7e9f1e30ce8303", "patch": "@@ -1,5 +1,8 @@\n 2019-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/90082\n+\t* gcc.dg/pr90082.c: New test.\n+\n \tPR tree-optimization/90090\n \t* g++.dg/opt/pr90090.C: New test.\n "}, {"sha": "bb8293fb63370f2621c4a9341841346a769ab792", "filename": "gcc/testsuite/gcc.dg/pr90082.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234b5365c5485a0606a0d2faac7e9f1e30ce8303/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90082.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234b5365c5485a0606a0d2faac7e9f1e30ce8303/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90082.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr90082.c?ref=234b5365c5485a0606a0d2faac7e9f1e30ce8303", "patch": "@@ -0,0 +1,13 @@\n+/* PR rtl-optimization/90082 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fnon-call-exceptions -ftrapv\" } */\n+\n+void *buf[5];\n+\n+void\n+foo (int a)\n+{\n+  if (__builtin_setjmp (buf) == 0)\n+    __asm__ (\"\" : : \"n\" (a * 2));\t/* { dg-error \"impossible constraint in 'asm'\" } */\n+\t\t\t\t\t/* { dg-warning \"asm operand 0 probably doesn't match constraints\" \"\" { target *-*-* } .-1 } */\n+}"}]}