{"sha": "2d977ff983f86b3f7b7c9f1cb5a479af75cd589e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ5NzdmZjk4M2Y4NmIzZjdiN2M5ZjFjYjVhNDc5YWY3NWNkNTg5ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-03-10T21:03:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-03-10T21:03:21Z"}, "message": "re PR target/65368 (_bzhi_u32 intrinsic generates incorrect code when -O1 or above is specified and index is an immediate)\n\n\tPR target/65368\n\t* config/i386/i386.md (bmi2_bzhi_<mode>3): Removed define_insn,\n\tnew define_expand.\n\t(*bmi2_bzhi_<mode>3, *bmi2_bzhi_<mode>3_1): New define_insns.\n\n\t* gcc.target/i386/bmi2-bzhi-2.c: New test.\n\nFrom-SVN: r221335", "tree": {"sha": "c87f415ef71f1c48e9b1ccc38f4e78d1b89918ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c87f415ef71f1c48e9b1ccc38f4e78d1b89918ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48188959fd8a9bb1d7da833466f314210693bc11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48188959fd8a9bb1d7da833466f314210693bc11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48188959fd8a9bb1d7da833466f314210693bc11"}], "stats": {"total": 123, "additions": 118, "deletions": 5}, "files": [{"sha": "b77fb5e99d0f5e1d61e836c3c21c9ed41e8b30be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d977ff983f86b3f7b7c9f1cb5a479af75cd589e", "patch": "@@ -1,3 +1,10 @@\n+2015-03-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/65368\n+\t* config/i386/i386.md (bmi2_bzhi_<mode>3): Removed define_insn,\n+\tnew define_expand.\n+\t(*bmi2_bzhi_<mode>3, *bmi2_bzhi_<mode>3_1): New define_insns.\n+\n 2015-03-10  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-icf.c (sem_function::equals_wpa): Move here some checks"}, {"sha": "1129b935a17fb28c1c1794d15dcf7219d8be6a27", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=2d977ff983f86b3f7b7c9f1cb5a479af75cd589e", "patch": "@@ -12678,18 +12678,52 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; BMI2 instructions.\n-(define_insn \"bmi2_bzhi_<mode>3\"\n+(define_expand \"bmi2_bzhi_<mode>3\"\n+  [(parallel\n+    [(set (match_operand:SWI48 0 \"register_operand\")\n+\t  (zero_extract:SWI48\n+\t    (match_operand:SWI48 1 \"nonimmediate_operand\")\n+\t    (umin:SWI48\n+\t      (and:SWI48 (match_operand:SWI48 2 \"register_operand\")\n+\t\t\t (const_int 255))\n+\t      (match_dup 3))\n+\t    (const_int 0)))\n+     (clobber (reg:CC FLAGS_REG))])]\n+  \"TARGET_BMI2\"\n+  \"operands[3] = GEN_INT (<MODE_SIZE> * BITS_PER_UNIT);\")\n+\n+(define_insn \"*bmi2_bzhi_<mode>3\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n-\t(and:SWI48 (lshiftrt:SWI48 (const_int -1)\n-\t\t\t\t   (match_operand:SWI48 2 \"register_operand\" \"r\"))\n-\t\t   (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")))\n+\t(zero_extract:SWI48\n+\t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n+\t  (umin:SWI48\n+\t    (and:SWI48 (match_operand:SWI48 2 \"register_operand\" \"r\")\n+\t\t       (const_int 255))\n+\t    (match_operand:SWI48 3 \"const_int_operand\" \"n\"))\n+\t  (const_int 0)))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_BMI2\"\n+  \"TARGET_BMI2 && INTVAL (operands[3]) == <MODE_SIZE> * BITS_PER_UNIT\"\n   \"bzhi\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"bitmanip\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_mode_attr k [(SI \"k\") (DI \"q\")])\n+(define_insn \"*bmi2_bzhi_<mode>3_1\"\n+  [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n+\t(zero_extract:SWI48\n+\t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n+\t  (umin:SWI48\n+\t    (zero_extend:SWI48 (match_operand:QI 2 \"register_operand\" \"r\"))\n+\t    (match_operand:SWI48 3 \"const_int_operand\" \"n\"))\n+\t  (const_int 0)))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_BMI2 && INTVAL (operands[3]) == <MODE_SIZE> * BITS_PER_UNIT\"\n+  \"bzhi\\t{%<k>2, %1, %0|%0, %1, %<k>2}\"\n+  [(set_attr \"type\" \"bitmanip\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"bmi2_pdep_<mode>3\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n         (unspec:SWI48 [(match_operand:SWI48 1 \"register_operand\" \"r\")"}, {"sha": "2a201e18ff68bb3aecd2ce0321c35c3fd6fd500f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d977ff983f86b3f7b7c9f1cb5a479af75cd589e", "patch": "@@ -1,3 +1,8 @@\n+2015-03-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/65368\n+\t* gcc.target/i386/bmi2-bzhi-2.c: New test.\n+\n 2015-03-10  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/65024"}, {"sha": "34579d52695d0324ef31d3708cb6daf22a389bd0", "filename": "gcc/testsuite/gcc.target/i386/bmi2-bzhi-2.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-bzhi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d977ff983f86b3f7b7c9f1cb5a479af75cd589e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-bzhi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi2-bzhi-2.c?ref=2d977ff983f86b3f7b7c9f1cb5a479af75cd589e", "patch": "@@ -0,0 +1,67 @@\n+/* PR target/65368 */\n+/* { dg-do assemble { target bmi2 } } */\n+/* { dg-options \"-O2 -mbmi2\" } */\n+\n+#include <x86intrin.h>\n+#include \"bmi2-check.h\"\n+\n+unsigned int a;\n+unsigned long long b;\n+\n+#define A __attribute__((noinline, noclone))\n+\n+A unsigned int f1 (void) { return _bzhi_u32 (a, 0); }\n+A unsigned int f2 (unsigned int x) { return _bzhi_u32 (x, 0); }\n+A unsigned int f3 (void) { return _bzhi_u32 (a, 5); }\n+A unsigned int f4 (unsigned int x) { return _bzhi_u32 (x, 5); }\n+A unsigned int f5 (void) { return _bzhi_u32 (a, 31); }\n+A unsigned int f6 (unsigned int x) { return _bzhi_u32 (x, 31); }\n+A unsigned int f7 (void) { return _bzhi_u32 (a, 32); }\n+A unsigned int f8 (unsigned int x) { return _bzhi_u32 (x, 32); }\n+A unsigned int f9 (void) { return _bzhi_u32 (a, 37); }\n+A unsigned int f10 (unsigned int x) { return _bzhi_u32 (x, 37); }\n+A unsigned int f11 (void) { return _bzhi_u32 (a, 257); }\n+A unsigned int f12 (unsigned int x) { return _bzhi_u32 (x, 257); }\n+A unsigned int f13 (void) { return _bzhi_u32 (a, 289); }\n+A unsigned int f14 (unsigned int x) { return _bzhi_u32 (x, 289); }\n+#ifdef __x86_64__\n+A unsigned long long f21 (void) { return _bzhi_u64 (b, 0); }\n+A unsigned long long f22 (unsigned long long x) { return _bzhi_u64 (x, 0); }\n+A unsigned long long f23 (void) { return _bzhi_u64 (b, 5); }\n+A unsigned long long f24 (unsigned long long x) { return _bzhi_u64 (x, 5); }\n+A unsigned long long f25 (void) { return _bzhi_u64 (b, 63); }\n+A unsigned long long f26 (unsigned long long x) { return _bzhi_u64 (x, 63); }\n+A unsigned long long f27 (void) { return _bzhi_u64 (b, 64); }\n+A unsigned long long f28 (unsigned long long x) { return _bzhi_u64 (x, 64); }\n+A unsigned long long f29 (void) { return _bzhi_u64 (b, 69); }\n+A unsigned long long f30 (unsigned long long x) { return _bzhi_u64 (x, 69); }\n+A unsigned long long f31 (void) { return _bzhi_u64 (b, 257); }\n+A unsigned long long f32 (unsigned long long x) { return _bzhi_u64 (x, 257); }\n+A unsigned long long f33 (void) { return _bzhi_u64 (b, 321); }\n+A unsigned long long f34 (unsigned long long x) { return _bzhi_u64 (x, 321); }\n+#endif\n+\n+static void\n+bmi2_test ()\n+{\n+  a = -1U;\n+  b = -1ULL;\n+  if (f1 () != 0 || f2 (-1U) != 0\n+      || f3 () != 0x1f || f4 (-1U) != 0x1f\n+      || f5 () != 0x7fffffffU || f6 (-1U) != 0x7fffffffU\n+      || f7 () != -1U || f8 (-1U) != -1U\n+      || f9 () != -1U || f10 (-1U) != -1U\n+      || f11 () != 1 || f12 (-1U) != 1\n+      || f13 () != -1U || f14 (-1U) != -1U)\n+    abort ();\n+#ifdef __x86_64__\n+  if (f21 () != 0 || f22 (-1ULL) != 0\n+      || f23 () != 0x1f || f24 (-1ULL) != 0x1f\n+      || f25 () != 0x7fffffffffffffffULL || f26 (-1ULL) != 0x7fffffffffffffffULL\n+      || f27 () != -1ULL || f28 (-1ULL) != -1ULL\n+      || f29 () != -1ULL || f30 (-1ULL) != -1ULL\n+      || f31 () != 1 || f32 (-1ULL) != 1\n+      || f33 () != -1ULL || f34 (-1ULL) != -1ULL)\n+    abort ();\n+#endif\n+}"}]}