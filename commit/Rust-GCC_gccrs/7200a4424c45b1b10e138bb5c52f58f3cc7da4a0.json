{"sha": "7200a4424c45b1b10e138bb5c52f58f3cc7da4a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIwMGE0NDI0YzQ1YjFiMTBlMTM4YmI1YzUyZjU4ZjNjYzdkYTRhMA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-03T09:45:03Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-09-03T13:30:57Z"}, "message": "RAII class to change dump_file.\n\nThe function dump_ranger() shows everything the ranger knows at the\ncurrent time.  To do this, we tickle all the statements to force ranger\nto provide as much information as possible.  During this process, the\nrelation code will dump status out to the dump_file, whereas in\ndump_ranger, we want to dump it out to a specific file (most likely\nstderr).  This patch changes the dump_file through the life of\ndump_ranger() and resets it when its done.\n\nThis patch only affects dump/debugging code.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* gimple-range-trace.cc (push_dump_file::push_dump_file): New.\n\t(push_dump_file::~push_dump_file): New.\n\t(dump_ranger): Change dump_file temporarily while dumping\n\tranger.\n\t* gimple-range-trace.h (class push_dump_file): New.", "tree": {"sha": "66aeb110f62077c06d27bb65047b768198c45d06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66aeb110f62077c06d27bb65047b768198c45d06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7200a4424c45b1b10e138bb5c52f58f3cc7da4a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7200a4424c45b1b10e138bb5c52f58f3cc7da4a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7200a4424c45b1b10e138bb5c52f58f3cc7da4a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7200a4424c45b1b10e138bb5c52f58f3cc7da4a0/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4db10cbf21dfe48e72880f592c1b5640baaf16cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4db10cbf21dfe48e72880f592c1b5640baaf16cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4db10cbf21dfe48e72880f592c1b5640baaf16cf"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "5175d1400c44df0f380bf946de813b79424eb00b", "filename": "gcc/gimple-range-trace.cc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7200a4424c45b1b10e138bb5c52f58f3cc7da4a0/gcc%2Fgimple-range-trace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7200a4424c45b1b10e138bb5c52f58f3cc7da4a0/gcc%2Fgimple-range-trace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-trace.cc?ref=7200a4424c45b1b10e138bb5c52f58f3cc7da4a0", "patch": "@@ -155,11 +155,31 @@ debug_seed_ranger (gimple_ranger &ranger)\n       }\n }\n \n+// Change the current dump_file and dump_flags to F and FLAGS while\n+// saving them for later restoring.\n+\n+push_dump_file::push_dump_file (FILE *f, dump_flags_t flags)\n+{\n+  old_dump_file = dump_file;\n+  old_dump_flags = dump_flags;\n+  dump_file = f;\n+  dump_flags = flags;\n+}\n+\n+// Restore saved dump_file and dump_flags.\n+\n+push_dump_file::~push_dump_file ()\n+{\n+  dump_file = old_dump_file;\n+  dump_flags = old_dump_flags;\n+}\n+\n // Dump all that ranger knows for the current function.\n \n DEBUG_FUNCTION void\n dump_ranger (FILE *out)\n {\n+  push_dump_file save (out, dump_flags);\n   gimple_ranger ranger;\n \n   fprintf (out, \";; Function \");"}, {"sha": "b9546a245d139be49d57bdacf654d43b57d16d2a", "filename": "gcc/gimple-range-trace.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7200a4424c45b1b10e138bb5c52f58f3cc7da4a0/gcc%2Fgimple-range-trace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7200a4424c45b1b10e138bb5c52f58f3cc7da4a0/gcc%2Fgimple-range-trace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-trace.h?ref=7200a4424c45b1b10e138bb5c52f58f3cc7da4a0", "patch": "@@ -58,4 +58,18 @@ range_tracer::header (const char *str)\n     return do_header (str);\n   return 0;\n }\n+\n+// RAII class to change current dump_file and dump_flags, and restore\n+// when the object goes out of scope.\n+\n+class push_dump_file\n+{\n+public:\n+  push_dump_file (FILE *, dump_flags_t);\n+  ~push_dump_file ();\n+private:\n+  FILE *old_dump_file;\n+  dump_flags_t old_dump_flags;\n+};\n+\n #endif // GCC_GIMPLE_RANGE_TRACE_H"}]}