{"sha": "61c7cbf8e5502fe6da677581d5c151193049d850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFjN2NiZjhlNTUwMmZlNmRhNjc3NTgxZDVjMTUxMTkzMDQ5ZDg1MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-31T17:01:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-31T17:01:38Z"}, "message": "re PR middle-end/42898 (volatile structures and compound literal initializers)\n\n2010-01-31  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/42898\n\t* gimplify.c (gimplify_init_constructor): For volatile LHS\n\tinitialize a temporary.\n\n\t* gcc.dg/torture/pr42898.c: New testcase.\n\nFrom-SVN: r156404", "tree": {"sha": "4d98e1d16b91ce092b061d30f5405e34bf72230c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d98e1d16b91ce092b061d30f5405e34bf72230c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61c7cbf8e5502fe6da677581d5c151193049d850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c7cbf8e5502fe6da677581d5c151193049d850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c7cbf8e5502fe6da677581d5c151193049d850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c7cbf8e5502fe6da677581d5c151193049d850/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e4a660f122aa663077ebc4250597a40904a0720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e4a660f122aa663077ebc4250597a40904a0720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e4a660f122aa663077ebc4250597a40904a0720"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "d91b75e9a2d40b623f28e63a2ef04bb5001ccec2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7cbf8e5502fe6da677581d5c151193049d850/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7cbf8e5502fe6da677581d5c151193049d850/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61c7cbf8e5502fe6da677581d5c151193049d850", "patch": "@@ -1,3 +1,9 @@\n+2010-01-31  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/42898\n+\t* gimplify.c (gimplify_init_constructor): For volatile LHS\n+\tinitialize a temporary.\n+\n 2010-01-31  Matthias Klose  <doko@ubuntu.com>\n \n \t* configure.ac: Fix __stack_chk_fail check for cross builds configured"}, {"sha": "fac3fdaa223615f8509b72a774607873351fd260", "filename": "gcc/gimplify.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7cbf8e5502fe6da677581d5c151193049d850/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7cbf8e5502fe6da677581d5c151193049d850/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=61c7cbf8e5502fe6da677581d5c151193049d850", "patch": "@@ -3745,6 +3745,21 @@ gimplify_init_constructor (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t      }\n \t  }\n \n+\t/* If the target is volatile and we have non-zero elements\n+\t   initialize the target from a temporary.  */\n+\tif (TREE_THIS_VOLATILE (object)\n+\t    && !TREE_ADDRESSABLE (type)\n+\t    && num_nonzero_elements > 0)\n+\t  {\n+\t    tree temp = create_tmp_var (TYPE_MAIN_VARIANT (type), NULL);\n+\t    TREE_OPERAND (*expr_p, 0) = temp;\n+\t    *expr_p = build2 (COMPOUND_EXPR, TREE_TYPE (*expr_p),\n+\t\t\t      *expr_p,\n+\t\t\t      build2 (MODIFY_EXPR, void_type_node,\n+\t\t\t\t      object, temp));\n+\t    return GS_OK;\n+\t  }\n+\n \tif (notify_temp_creation)\n \t  return GS_OK;\n "}, {"sha": "23730795d5d4c104ae9030628154a1330a8f7de4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7cbf8e5502fe6da677581d5c151193049d850/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7cbf8e5502fe6da677581d5c151193049d850/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61c7cbf8e5502fe6da677581d5c151193049d850", "patch": "@@ -1,3 +1,8 @@\n+2010-01-31  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/42898\n+\t* gcc.dg/torture/pr42898.c: New testcase.\n+\n 2010-01-31  Paul Thomas  <pault@gcc.gnu.org>\n \n         PR fortran/38324"}, {"sha": "df8b46a62950de83c9cbd492e122463cd91f7501", "filename": "gcc/testsuite/gcc.dg/torture/pr42898.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c7cbf8e5502fe6da677581d5c151193049d850/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr42898.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c7cbf8e5502fe6da677581d5c151193049d850/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr42898.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr42898.c?ref=61c7cbf8e5502fe6da677581d5c151193049d850", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-optimized\" } */\n+\n+struct hardware {\n+  int parm1:8;\n+  int :4;\n+  int parm2:4;\n+  int parm3:15;\n+  int parm4:1;\n+};\n+\n+void f1(volatile struct hardware *ptr)\n+{\n+  *ptr=(struct hardware) {\n+    .parm1=42,\n+    .parm2=13,\n+    .parm3=11850,\n+    .parm4=1,\n+  };\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"\\\\*ptr\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}