{"sha": "c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdiNGQ5NDg4YWJiNzNmMGZiMTQ4ZTFjY2I5NGEyZTYxYjE2ODJiYw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-12-07T22:22:37Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-12-07T22:22:37Z"}, "message": "Remove all FMA4 splitters.\n\n\t* config/i386/sse.md: Remove all FMA4 splitters.\n\tAllow the second operand of FMA4 insns to be a nonimmediate.\n\tFix comments punctuation.\n\nFrom-SVN: r155056", "tree": {"sha": "a3d8dcbfc277cfbe8940993ec98a2340e9ddd772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3d8dcbfc277cfbe8940993ec98a2340e9ddd772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85f28bf1ff2ab2616450e3960c2ac9ffd1404032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85f28bf1ff2ab2616450e3960c2ac9ffd1404032", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85f28bf1ff2ab2616450e3960c2ac9ffd1404032"}], "stats": {"total": 405, "additions": 104, "deletions": 301}, "files": [{"sha": "8c9ab25517d9765328eb2499d5c7bbdac5d777a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc", "patch": "@@ -1,3 +1,9 @@\n+2009-12-07  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* config/i386/sse.md: Remove all FMA4 splitters.\n+\tAllow the second operand of FMA4 insns to be a nonimmediate.\n+\tFix comments punctuation.\n+\n 2009-12-07  Julian Brown  <julian@codesourcery.com>\n \n \t* config/arm/constraints.md (Ps, Pt): New constraint letters."}, {"sha": "6500de3018e7a8dc21f022ad5631e7caacc39da9", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 98, "deletions": 301, "changes": 399, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=c7b4d9488abb73f0fb148e1ccb94a2e61b1682bc", "patch": "@@ -1686,8 +1686,9 @@\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n-;; FMA4 floating point multiply/accumulate instructions This includes the\n-;; scalar version of the instructions as well as the vector\n+;; FMA4 floating point multiply/accumulate instructions.  This\n+;; includes the scalar version of the instructions as well as the\n+;; vector.\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n@@ -1706,367 +1707,193 @@\n   [(set (match_operand:FMA4MODEF4 0 \"register_operand\" \"=x,x\")\n \t(plus:FMA4MODEF4\n \t (mult:FMA4MODEF4\n-\t  (match_operand:FMA4MODEF4 1 \"register_operand\" \"%x,x\")\n+\t  (match_operand:FMA4MODEF4 1 \"nonimmediate_operand\" \"%x,x\")\n \t  (match_operand:FMA4MODEF4 2 \"nonimmediate_operand\" \"x,m\"))\n \t (match_operand:FMA4MODEF4 3 \"nonimmediate_operand\" \"xm,x\")))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmadd<fma4modesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Split fmadd with two memory operands into a load and the fmadd.\n-(define_split\n-  [(set (match_operand:FMA4MODEF4 0 \"register_operand\" \"\")\n-\t(plus:FMA4MODEF4\n-\t (mult:FMA4MODEF4\n-\t  (match_operand:FMA4MODEF4 1 \"register_operand\" \"\")\n-\t  (match_operand:FMA4MODEF4 2 \"memory_operand\" \"\"))\n-\t (match_operand:FMA4MODEF4 3 \"memory_operand\" \"\")))]\n-  \"TARGET_FMA4\"\n-  [(set (match_dup 0)\n-        (plus:FMA4MODEF4\n-         (mult:FMA4MODEF4 (match_dup 1) (match_dup 2))\n-         (match_dup 3)))]\n-{\n- if (!ix86_expand_fma4_multiple_memory (operands, <MODE>mode))\n-   FAIL;\n-})\n-\n-;; Floating multiply and subtract\n-;; Allow two memory operands the same as fmadd\n+;; Floating multiply and subtract.\n (define_insn \"fma4_fmsub<mode>4256\"\n   [(set (match_operand:FMA4MODEF4 0 \"register_operand\" \"=x,x\")\n \t(minus:FMA4MODEF4\n \t (mult:FMA4MODEF4\n-\t  (match_operand:FMA4MODEF4 1 \"register_operand\" \"%x,x\")\n+\t  (match_operand:FMA4MODEF4 1 \"nonimmediate_operand\" \"%x,x\")\n \t  (match_operand:FMA4MODEF4 2 \"nonimmediate_operand\" \"x,m\"))\n \t (match_operand:FMA4MODEF4 3 \"nonimmediate_operand\" \"xm,x\")))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsub<fma4modesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Split fmsub with two memory operands into a load and the fmsub.\n-(define_split\n-  [(set (match_operand:FMA4MODEF4 0 \"register_operand\" \"\")\n-\t(minus:FMA4MODEF4\n-\t (mult:FMA4MODEF4\n-\t  (match_operand:FMA4MODEF4 1 \"register_operand\" \"\")\n-\t  (match_operand:FMA4MODEF4 2 \"memory_operand\" \"\"))\n-\t (match_operand:FMA4MODEF4 3 \"memory_operand\" \"\")))]\n-  \"TARGET_FMA4\"\n-  [(set (match_dup 0)\n-        (minus:FMA4MODEF4\n-         (mult:FMA4MODEF4 (match_dup 1) (match_dup 2))\n-         (match_dup 3)))]\n-{\n- if (!ix86_expand_fma4_multiple_memory (operands, <MODE>mode))\n-   FAIL;\n-})\n-\n-;; Floating point negative multiply and add\n-;; Rewrite (- (a * b) + c) into the canonical form: c - (a * b)\n-;; Note operands are out of order to simplify call to ix86_fma4_valid_p\n-;; Allow two memory operands to help in optimizing.\n+;; Floating point negative multiply and add.\n+;; Rewrite (- (a * b) + c) into the canonical form: c - (a * b).\n (define_insn \"fma4_fnmadd<mode>4256\"\n   [(set (match_operand:FMA4MODEF4 0 \"register_operand\" \"=x,x\")\n \t(minus:FMA4MODEF4\n \t (match_operand:FMA4MODEF4 3 \"nonimmediate_operand\" \"xm,x\")\n \t (mult:FMA4MODEF4\n-\t  (match_operand:FMA4MODEF4 1 \"register_operand\" \"%x,x\")\n+\t  (match_operand:FMA4MODEF4 1 \"nonimmediate_operand\" \"%x,x\")\n \t  (match_operand:FMA4MODEF4 2 \"nonimmediate_operand\" \"x,m\"))))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmadd<fma4modesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Split fnmadd with two memory operands into a load and the fnmadd.\n-(define_split\n-  [(set (match_operand:FMA4MODEF4 0 \"register_operand\" \"\")\n-\t(minus:FMA4MODEF4\n-\t (match_operand:FMA4MODEF4 3 \"memory_operand\" \"\")\n-\t (mult:FMA4MODEF4\n-\t  (match_operand:FMA4MODEF4 1 \"register_operand\" \"\")\n-\t  (match_operand:FMA4MODEF4 2 \"memory_operand\" \"\"))))]\n-  \"TARGET_FMA4\"\n-  [(set (match_dup 0)\n-        (minus:FMA4MODEF4\n-\t (match_dup 3)\n-         (mult:FMA4MODEF4 (match_dup 1) (match_dup 2))))]\n-{\n-  if (!ix86_expand_fma4_multiple_memory (operands, <MODE>mode))\n-    FAIL;\n-})\n-\n-;; Floating point negative multiply and subtract\n-;; Rewrite (- (a * b) - c) into the canonical form: ((-a) * b) - c\n-;; Allow 2 memory operands to help with optimization\n+;; Floating point negative multiply and subtract.\n (define_insn \"fma4_fnmsub<mode>4256\"\n   [(set (match_operand:FMA4MODEF4 0 \"register_operand\" \"=x,x\")\n \t(minus:FMA4MODEF4\n \t (mult:FMA4MODEF4\n \t  (neg:FMA4MODEF4\n-\t   (match_operand:FMA4MODEF4 1 \"register_operand\" \"%x,x\"))\n+\t   (match_operand:FMA4MODEF4 1 \"nonimmediate_operand\" \"%x,x\"))\n \t  (match_operand:FMA4MODEF4 2 \"nonimmediate_operand\" \"x,m\"))\n \t (match_operand:FMA4MODEF4 3 \"nonimmediate_operand\" \"xm,x\")))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmsub<fma4modesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Split fnmsub with two memory operands into a load and the fmsub.\n-(define_split\n-  [(set (match_operand:FMA4MODEF4 0 \"register_operand\" \"\")\n-\t(minus:FMA4MODEF4\n-\t (mult:FMA4MODEF4\n-\t  (neg:FMA4MODEF4\n-\t   (match_operand:FMA4MODEF4 1 \"register_operand\" \"\"))\n-\t  (match_operand:FMA4MODEF4 2 \"memory_operand\" \"\"))\n-\t (match_operand:FMA4MODEF4 3 \"memory_operand\" \"\")))]\n-  \"TARGET_FMA4\"\n-  [(set (match_dup 0)\n-        (minus:FMA4MODEF4\n-         (mult:FMA4MODEF4\n-\t  (neg:FMA4MODEF4 (match_dup 1))\n-\t  (match_dup 2))\n-         (match_dup 3)))]\n-{\n-  if (!ix86_expand_fma4_multiple_memory (operands, <MODE>mode))\n-    FAIL;\n-})\n-\n-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n (define_insn \"fma4_fmadd<mode>4\"\n   [(set (match_operand:SSEMODEF4 0 \"register_operand\" \"=x,x\")\n \t(plus:SSEMODEF4\n \t (mult:SSEMODEF4\n-\t  (match_operand:SSEMODEF4 1 \"register_operand\" \"%x,x\")\n+\t  (match_operand:SSEMODEF4 1 \"nonimmediate_operand\" \"%x,x\")\n \t  (match_operand:SSEMODEF4 2 \"nonimmediate_operand\" \"x,m\"))\n \t (match_operand:SSEMODEF4 3 \"nonimmediate_operand\" \"xm,x\")))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmadd<ssemodesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Split fmadd with two memory operands into a load and the fmadd.\n-(define_split\n-  [(set (match_operand:SSEMODEF4 0 \"register_operand\" \"\")\n-\t(plus:SSEMODEF4\n-\t (mult:SSEMODEF4\n-\t  (match_operand:SSEMODEF4 1 \"register_operand\" \"\")\n-\t  (match_operand:SSEMODEF4 2 \"memory_operand\" \"\"))\n-\t (match_operand:SSEMODEF4 3 \"memory_operand\" \"\")))]\n-  \"TARGET_FMA4\"\n-  [(set (match_dup 0)\n-        (plus:SSEMODEF4\n-         (mult:SSEMODEF4 (match_dup 1) (match_dup 2))\n-         (match_dup 3)))]\n-{\n-  if (!ix86_expand_fma4_multiple_memory (operands, <MODE>mode))\n-    FAIL;\n-})\n-\n ;; For the scalar operations, use operand1 for the upper words that aren't\n ;; modified, so restrict the forms that are generated.\n-;; Scalar version of fmadd\n+;; Scalar version of fmadd.\n (define_insn \"fma4_vmfmadd<mode>4\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x,x\")\n \t(vec_merge:SSEMODEF2P\n \t (plus:SSEMODEF2P\n \t  (mult:SSEMODEF2P\n-\t   (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\")\n+\t   (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\")\n \t   (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\"))\n \t  (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\"))\n \t (match_dup 0)\n \t (const_int 1)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmadd<ssemodesuffixf2s>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Floating multiply and subtract\n-;; Allow two memory operands the same as fmadd\n+;; Floating multiply and subtract.\n+;; Allow two memory operands the same as fmadd.\n (define_insn \"fma4_fmsub<mode>4\"\n   [(set (match_operand:SSEMODEF4 0 \"register_operand\" \"=x,x\")\n \t(minus:SSEMODEF4\n \t (mult:SSEMODEF4\n-\t  (match_operand:SSEMODEF4 1 \"register_operand\" \"%x,x\")\n+\t  (match_operand:SSEMODEF4 1 \"nonimmediate_operand\" \"%x,x\")\n \t  (match_operand:SSEMODEF4 2 \"nonimmediate_operand\" \"x,m\"))\n \t (match_operand:SSEMODEF4 3 \"nonimmediate_operand\" \"xm,x\")))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsub<ssemodesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Split fmsub with two memory operands into a load and the fmsub.\n-(define_split\n-  [(set (match_operand:SSEMODEF4 0 \"register_operand\" \"\")\n-\t(minus:SSEMODEF4\n-\t (mult:SSEMODEF4\n-\t  (match_operand:SSEMODEF4 1 \"register_operand\" \"\")\n-\t  (match_operand:SSEMODEF4 2 \"memory_operand\" \"\"))\n-\t (match_operand:SSEMODEF4 3 \"memory_operand\" \"\")))]\n-  \"TARGET_FMA4\"\n-  [(set (match_dup 0)\n-        (minus:SSEMODEF4\n-         (mult:SSEMODEF4 (match_dup 1) (match_dup 2))\n-         (match_dup 3)))]\n-{\n-  if (!ix86_expand_fma4_multiple_memory (operands, <MODE>mode))\n-    FAIL;\n-})\n-\n ;; For the scalar operations, use operand1 for the upper words that aren't\n ;; modified, so restrict the forms that are generated.\n-;; Scalar version of fmsub\n+;; Scalar version of fmsub.\n (define_insn \"fma4_vmfmsub<mode>4\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x,x\")\n \t(vec_merge:SSEMODEF2P\n \t (minus:SSEMODEF2P\n \t  (mult:SSEMODEF2P\n-\t   (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\")\n+\t   (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\")\n \t   (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\"))\n \t  (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\"))\n \t (match_dup 0)\n \t (const_int 1)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsub<ssemodesuffixf2s>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Floating point negative multiply and add\n-;; Rewrite (- (a * b) + c) into the canonical form: c - (a * b)\n-;; Note operands are out of order to simplify call to ix86_fma4_valid_p\n-;; Allow two memory operands to help in optimizing.\n+;; Floating point negative multiply and add.\n+;; Rewrite (- (a * b) + c) into the canonical form: c - (a * b).\n (define_insn \"fma4_fnmadd<mode>4\"\n   [(set (match_operand:SSEMODEF4 0 \"register_operand\" \"=x,x\")\n \t(minus:SSEMODEF4\n \t (match_operand:SSEMODEF4 3 \"nonimmediate_operand\" \"xm,x\")\n \t (mult:SSEMODEF4\n-\t  (match_operand:SSEMODEF4 1 \"register_operand\" \"%x,x\")\n+\t  (match_operand:SSEMODEF4 1 \"nonimmediate_operand\" \"%x,x\")\n \t  (match_operand:SSEMODEF4 2 \"nonimmediate_operand\" \"x,m\"))))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmadd<ssemodesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Split fnmadd with two memory operands into a load and the fnmadd.\n-(define_split\n-  [(set (match_operand:SSEMODEF4 0 \"register_operand\" \"\")\n-\t(minus:SSEMODEF4\n-\t (match_operand:SSEMODEF4 3 \"memory_operand\" \"\")\n-\t (mult:SSEMODEF4\n-\t  (match_operand:SSEMODEF4 1 \"register_operand\" \"\")\n-\t  (match_operand:SSEMODEF4 2 \"memory_operand\" \"\"))))]\n-  \"TARGET_FMA4\"\n-  [(set (match_dup 0)\n-        (minus:SSEMODEF4\n-\t (match_dup 3)\n-         (mult:SSEMODEF4 (match_dup 1) (match_dup 2))))]\n-{\n-  if (!ix86_expand_fma4_multiple_memory (operands, <MODE>mode))\n-    FAIL;\n-})\n-\n ;; For the scalar operations, use operand1 for the upper words that aren't\n ;; modified, so restrict the forms that are generated.\n-;; Scalar version of fnmadd\n+;; Scalar version of fnmadd.\n (define_insn \"fma4_vmfnmadd<mode>4\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x,x\")\n \t(vec_merge:SSEMODEF2P\n \t (minus:SSEMODEF2P\n \t  (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\")\n \t  (mult:SSEMODEF2P\n-\t   (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\")\n+\t   (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\")\n \t   (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\")))\n \t (match_dup 0)\n \t (const_int 1)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmadd<ssemodesuffixf2s>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Floating point negative multiply and subtract\n-;; Rewrite (- (a * b) - c) into the canonical form: ((-a) * b) - c\n-;; Allow 2 memory operands to help with optimization\n+;; Floating point negative multiply and subtract.\n+;; Rewrite (- (a * b) - c) into the canonical form: ((-a) * b) - c.\n (define_insn \"fma4_fnmsub<mode>4\"\n   [(set (match_operand:SSEMODEF4 0 \"register_operand\" \"=x,x\")\n \t(minus:SSEMODEF4\n \t (mult:SSEMODEF4\n \t  (neg:SSEMODEF4\n-\t   (match_operand:SSEMODEF4 1 \"register_operand\" \"%x,x\"))\n+\t   (match_operand:SSEMODEF4 1 \"nonimmediate_operand\" \"%x,x\"))\n \t  (match_operand:SSEMODEF4 2 \"nonimmediate_operand\" \"x,m\"))\n \t (match_operand:SSEMODEF4 3 \"nonimmediate_operand\" \"xm,x\")))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmsub<ssemodesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; Split fnmsub with two memory operands into a load and the fmsub.\n-(define_split\n-  [(set (match_operand:SSEMODEF4 0 \"register_operand\" \"\")\n-\t(minus:SSEMODEF4\n-\t (mult:SSEMODEF4\n-\t  (neg:SSEMODEF4\n-\t   (match_operand:SSEMODEF4 1 \"register_operand\" \"\"))\n-\t  (match_operand:SSEMODEF4 2 \"memory_operand\" \"\"))\n-\t (match_operand:SSEMODEF4 3 \"memory_operand\" \"\")))]\n-  \"TARGET_FMA4\"\n-  [(set (match_dup 0)\n-        (minus:SSEMODEF4\n-         (mult:SSEMODEF4\n-\t  (neg:SSEMODEF4 (match_dup 1))\n-\t  (match_dup 2))\n-         (match_dup 3)))]\n-{\n-  if (!ix86_expand_fma4_multiple_memory (operands, <MODE>mode))\n-    FAIL;\n-})\n-\n ;; For the scalar operations, use operand1 for the upper words that aren't\n ;; modified, so restrict the forms that are generated.\n-;; Scalar version of fnmsub\n+;; Scalar version of fnmsub.\n (define_insn \"fma4_vmfnmsub<mode>4\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x,x\")\n \t(vec_merge:SSEMODEF2P\n \t (minus:SSEMODEF2P\n \t  (mult:SSEMODEF2P\n \t   (neg:SSEMODEF2P\n-\t    (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\"))\n+\t    (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\"))\n \t   (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\"))\n \t  (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\"))\n \t (match_dup 0)\n \t (const_int 1)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmsub<ssemodesuffixf2s>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n-\n (define_insn \"fma4i_fmadd<mode>4256\"\n   [(set (match_operand:FMA4MODEF4 0 \"register_operand\" \"=x,x\")\n \t(unspec:FMA4MODEF4\n \t [(plus:FMA4MODEF4\n \t   (mult:FMA4MODEF4\n-\t    (match_operand:FMA4MODEF4 1 \"register_operand\" \"%x,x\")\n+\t    (match_operand:FMA4MODEF4 1 \"nonimmediate_operand\" \"%x,x\")\n \t    (match_operand:FMA4MODEF4 2 \"nonimmediate_operand\" \"x,m\"))\n \t   (match_operand:FMA4MODEF4 3 \"nonimmediate_operand\" \"xm,x\"))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmadd<fma4modesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n@@ -2076,12 +1903,11 @@\n \t(unspec:FMA4MODEF4\n \t [(minus:FMA4MODEF4\n \t   (mult:FMA4MODEF4\n-\t    (match_operand:FMA4MODEF4 1 \"register_operand\" \"%x,x\")\n+\t    (match_operand:FMA4MODEF4 1 \"nonimmediate_operand\" \"%x,x\")\n \t    (match_operand:FMA4MODEF4 2 \"nonimmediate_operand\" \"x,m\"))\n \t   (match_operand:FMA4MODEF4 3 \"nonimmediate_operand\" \"xm,x\"))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsub<fma4modesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n@@ -2092,11 +1918,10 @@\n \t [(minus:FMA4MODEF4\n \t   (match_operand:FMA4MODEF4 3 \"nonimmediate_operand\" \"xm,x\")\n \t   (mult:FMA4MODEF4\n-\t    (match_operand:FMA4MODEF4 1 \"register_operand\" \"%x,x\")\n+\t    (match_operand:FMA4MODEF4 1 \"nonimmediate_operand\" \"%x,x\")\n \t    (match_operand:FMA4MODEF4 2 \"nonimmediate_operand\" \"x,m\")))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmadd<fma4modesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n@@ -2107,28 +1932,25 @@\n \t [(minus:FMA4MODEF4\n \t   (mult:FMA4MODEF4\n \t    (neg:FMA4MODEF4\n-\t     (match_operand:FMA4MODEF4 1 \"register_operand\" \"%x,x\"))\n+\t     (match_operand:FMA4MODEF4 1 \"nonimmediate_operand\" \"%x,x\"))\n \t    (match_operand:FMA4MODEF4 2 \"nonimmediate_operand\" \"x,m\"))\n \t   (match_operand:FMA4MODEF4 3 \"nonimmediate_operand\" \"xm,x\"))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmsub<fma4modesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n (define_insn \"fma4i_fmadd<mode>4\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x,x\")\n \t(unspec:SSEMODEF2P\n \t [(plus:SSEMODEF2P\n \t   (mult:SSEMODEF2P\n-\t    (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\")\n+\t    (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\")\n \t    (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\"))\n \t   (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\"))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmadd<ssemodesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n@@ -2138,12 +1960,11 @@\n \t(unspec:SSEMODEF2P\n \t [(minus:SSEMODEF2P\n \t   (mult:SSEMODEF2P\n-\t    (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\")\n+\t    (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\")\n \t    (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\"))\n \t   (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\"))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsub<ssemodesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n@@ -2154,11 +1975,10 @@\n \t [(minus:SSEMODEF2P\n \t   (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\")\n \t   (mult:SSEMODEF2P\n-\t    (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\")\n+\t    (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\")\n \t    (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\")))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmadd<ssemodesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n@@ -2169,12 +1989,11 @@\n \t [(minus:SSEMODEF2P\n \t   (mult:SSEMODEF2P\n \t    (neg:SSEMODEF2P\n-\t     (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\"))\n+\t     (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\"))\n \t    (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\"))\n \t   (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\"))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmsub<ssemodesuffixf4>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n@@ -2187,14 +2006,13 @@\n \t [(vec_merge:SSEMODEF2P\n \t   (plus:SSEMODEF2P\n \t    (mult:SSEMODEF2P\n-\t     (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\")\n+\t     (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\")\n \t     (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (match_dup 0)\n \t   (const_int 1))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmadd<ssemodesuffixf2s>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n@@ -2205,14 +2023,13 @@\n \t [(vec_merge:SSEMODEF2P\n \t   (minus:SSEMODEF2P\n \t    (mult:SSEMODEF2P\n-\t     (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\")\n+\t     (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\")\n \t     (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (match_dup 0)\n \t   (const_int 1))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsub<ssemodesuffixf2s>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n@@ -2224,13 +2041,12 @@\n \t   (minus:SSEMODEF2P\n \t    (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\")\n \t    (mult:SSEMODEF2P\n-\t     (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\")\n+\t     (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\")\n \t     (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\")))\n \t   (match_dup 0)\n \t   (const_int 1))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmadd<ssemodesuffixf2s>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n@@ -2242,21 +2058,20 @@\n \t   (minus:SSEMODEF2P\n \t    (mult:SSEMODEF2P\n \t     (neg:SSEMODEF2P\n-\t      (match_operand:SSEMODEF2P 1 \"register_operand\" \"%x,x\"))\n+\t      (match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%x,x\"))\n \t     (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:SSEMODEF2P 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (match_dup 0)\n \t   (const_int 1))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfnmsub<ssemodesuffixf2s>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<ssescalarmode>\")])\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n-;; FMA4 Parallel floating point multiply addsub and subadd operations\n+;; FMA4 Parallel floating point multiply addsub and subadd operations.\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n@@ -2265,7 +2080,7 @@\n \t(vec_merge:V8SF\n \t  (plus:V8SF\n \t    (mult:V8SF\n-\t      (match_operand:V8SF 1 \"register_operand\" \"%x,x\")\n+\t      (match_operand:V8SF 1 \"nonimmediate_operand\" \"%x,x\")\n \t      (match_operand:V8SF 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:V8SF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t  (minus:V8SF\n@@ -2274,8 +2089,7 @@\n \t      (match_dup 2))\n \t    (match_dup 3))\n \t  (const_int 170)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmaddsubps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V8SF\")])\n@@ -2285,7 +2099,7 @@\n \t(vec_merge:V4DF\n \t  (plus:V4DF\n \t    (mult:V4DF\n-\t      (match_operand:V4DF 1 \"register_operand\" \"%x,x\")\n+\t      (match_operand:V4DF 1 \"nonimmediate_operand\" \"%x,x\")\n \t      (match_operand:V4DF 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:V4DF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t  (minus:V4DF\n@@ -2294,8 +2108,7 @@\n \t      (match_dup 2))\n \t    (match_dup 3))\n \t  (const_int 10)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmaddsubpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V4DF\")])\n@@ -2305,7 +2118,7 @@\n \t(vec_merge:V4SF\n \t  (plus:V4SF\n \t    (mult:V4SF\n-\t      (match_operand:V4SF 1 \"register_operand\" \"%x,x\")\n+\t      (match_operand:V4SF 1 \"nonimmediate_operand\" \"%x,x\")\n \t      (match_operand:V4SF 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:V4SF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t  (minus:V4SF\n@@ -2314,8 +2127,7 @@\n \t      (match_dup 2))\n \t    (match_dup 3))\n \t  (const_int 10)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmaddsubps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V4SF\")])\n@@ -2325,7 +2137,7 @@\n \t(vec_merge:V2DF\n \t  (plus:V2DF\n \t    (mult:V2DF\n-\t      (match_operand:V2DF 1 \"register_operand\" \"%x,x\")\n+\t      (match_operand:V2DF 1 \"nonimmediate_operand\" \"%x,x\")\n \t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:V2DF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t  (minus:V2DF\n@@ -2334,8 +2146,7 @@\n \t      (match_dup 2))\n \t    (match_dup 3))\n \t  (const_int 2)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmaddsubpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V2DF\")])\n@@ -2345,7 +2156,7 @@\n \t(vec_merge:V8SF\n \t  (plus:V8SF\n \t    (mult:V8SF\n-\t      (match_operand:V8SF 1 \"register_operand\" \"%x,x\")\n+\t      (match_operand:V8SF 1 \"nonimmediate_operand\" \"%x,x\")\n \t      (match_operand:V8SF 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:V8SF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t  (minus:V8SF\n@@ -2354,8 +2165,7 @@\n \t      (match_dup 2))\n \t    (match_dup 3))\n \t  (const_int 85)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsubaddps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V8SF\")])\n@@ -2365,7 +2175,7 @@\n \t(vec_merge:V4DF\n \t  (plus:V4DF\n \t    (mult:V4DF\n-\t      (match_operand:V4DF 1 \"register_operand\" \"%x,x\")\n+\t      (match_operand:V4DF 1 \"nonimmediate_operand\" \"%x,x\")\n \t      (match_operand:V4DF 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:V4DF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t  (minus:V4DF\n@@ -2374,8 +2184,7 @@\n \t      (match_dup 2))\n \t    (match_dup 3))\n \t  (const_int 5)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsubaddpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V4DF\")])\n@@ -2385,7 +2194,7 @@\n \t(vec_merge:V4SF\n \t  (plus:V4SF\n \t    (mult:V4SF\n-\t      (match_operand:V4SF 1 \"register_operand\" \"%x,x\")\n+\t      (match_operand:V4SF 1 \"nonimmediate_operand\" \"%x,x\")\n \t      (match_operand:V4SF 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:V4SF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t  (minus:V4SF\n@@ -2394,8 +2203,7 @@\n \t      (match_dup 2))\n \t    (match_dup 3))\n \t  (const_int 5)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsubaddps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V4SF\")])\n@@ -2405,7 +2213,7 @@\n \t(vec_merge:V2DF\n \t  (plus:V2DF\n \t    (mult:V2DF\n-\t      (match_operand:V2DF 1 \"register_operand\" \"%x,x\")\n+\t      (match_operand:V2DF 1 \"nonimmediate_operand\" \"%x,x\")\n \t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"x,m\"))\n \t    (match_operand:V2DF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t  (minus:V2DF\n@@ -2414,21 +2222,18 @@\n \t      (match_dup 2))\n \t    (match_dup 3))\n \t  (const_int 1)))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsubaddpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V2DF\")])\n \n-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n-\n (define_insn \"fma4i_fmaddsubv8sf4\"\n   [(set (match_operand:V8SF 0 \"register_operand\" \"=x,x\")\n \t(unspec:V8SF\n \t [(vec_merge:V8SF\n \t   (plus:V8SF\n \t     (mult:V8SF\n-\t       (match_operand:V8SF 1 \"register_operand\" \"%x,x\")\n+\t       (match_operand:V8SF 1 \"nonimmediate_operand\" \"%x,x\")\n \t       (match_operand:V8SF 2 \"nonimmediate_operand\" \"x,m\"))\n \t     (match_operand:V8SF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (minus:V8SF\n@@ -2438,8 +2243,7 @@\n \t     (match_dup 3))\n \t   (const_int 170))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmaddsubps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V8SF\")])\n@@ -2450,7 +2254,7 @@\n \t [(vec_merge:V4DF\n \t   (plus:V4DF\n \t     (mult:V4DF\n-\t       (match_operand:V4DF 1 \"register_operand\" \"%x,x\")\n+\t       (match_operand:V4DF 1 \"nonimmediate_operand\" \"%x,x\")\n \t       (match_operand:V4DF 2 \"nonimmediate_operand\" \"x,m\"))\n \t     (match_operand:V4DF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (minus:V4DF\n@@ -2460,8 +2264,7 @@\n \t     (match_dup 3))\n \t   (const_int 10))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmaddsubpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V4DF\")])\n@@ -2472,7 +2275,7 @@\n \t [(vec_merge:V4SF\n \t   (plus:V4SF\n \t     (mult:V4SF\n-\t       (match_operand:V4SF 1 \"register_operand\" \"%x,x\")\n+\t       (match_operand:V4SF 1 \"nonimmediate_operand\" \"%x,x\")\n \t       (match_operand:V4SF 2 \"nonimmediate_operand\" \"x,m\"))\n \t     (match_operand:V4SF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (minus:V4SF\n@@ -2482,8 +2285,7 @@\n \t     (match_dup 3))\n \t   (const_int 10))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmaddsubps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V4SF\")])\n@@ -2494,7 +2296,7 @@\n \t [(vec_merge:V2DF\n \t   (plus:V2DF\n \t     (mult:V2DF\n-\t       (match_operand:V2DF 1 \"register_operand\" \"%x,x\")\n+\t       (match_operand:V2DF 1 \"nonimmediate_operand\" \"%x,x\")\n \t       (match_operand:V2DF 2 \"nonimmediate_operand\" \"x,m\"))\n \t     (match_operand:V2DF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (minus:V2DF\n@@ -2504,8 +2306,7 @@\n \t     (match_dup 3))\n \t   (const_int 2))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmaddsubpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V2DF\")])\n@@ -2516,7 +2317,7 @@\n \t [(vec_merge:V8SF\n \t   (plus:V8SF\n \t     (mult:V8SF\n-\t       (match_operand:V8SF 1 \"register_operand\" \"%x,x\")\n+\t       (match_operand:V8SF 1 \"nonimmediate_operand\" \"%x,x\")\n \t       (match_operand:V8SF 2 \"nonimmediate_operand\" \"x,m\"))\n \t     (match_operand:V8SF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (minus:V8SF\n@@ -2526,8 +2327,7 @@\n \t     (match_dup 3))\n \t   (const_int 85))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsubaddps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V8SF\")])\n@@ -2538,7 +2338,7 @@\n \t [(vec_merge:V4DF\n \t   (plus:V4DF\n \t     (mult:V4DF\n-\t       (match_operand:V4DF 1 \"register_operand\" \"%x,x\")\n+\t       (match_operand:V4DF 1 \"nonimmediate_operand\" \"%x,x\")\n \t       (match_operand:V4DF 2 \"nonimmediate_operand\" \"x,m\"))\n \t     (match_operand:V4DF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (minus:V4DF\n@@ -2548,8 +2348,7 @@\n \t     (match_dup 3))\n \t   (const_int 5))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsubaddpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V4DF\")])\n@@ -2560,7 +2359,7 @@\n \t [(vec_merge:V4SF\n \t   (plus:V4SF\n \t     (mult:V4SF\n-\t       (match_operand:V4SF 1 \"register_operand\" \"%x,x\")\n+\t       (match_operand:V4SF 1 \"nonimmediate_operand\" \"%x,x\")\n \t       (match_operand:V4SF 2 \"nonimmediate_operand\" \"x,m\"))\n \t     (match_operand:V4SF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (minus:V4SF\n@@ -2570,8 +2369,7 @@\n \t     (match_dup 3))\n \t   (const_int 5))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsubaddps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V4SF\")])\n@@ -2582,7 +2380,7 @@\n \t [(vec_merge:V2DF\n \t   (plus:V2DF\n \t     (mult:V2DF\n-\t       (match_operand:V2DF 1 \"register_operand\" \"%x,x\")\n+\t       (match_operand:V2DF 1 \"nonimmediate_operand\" \"%x,x\")\n \t       (match_operand:V2DF 2 \"nonimmediate_operand\" \"x,m\"))\n \t     (match_operand:V2DF 3 \"nonimmediate_operand\" \"xm,x\"))\n \t   (minus:V2DF\n@@ -2592,8 +2390,7 @@\n \t     (match_dup 3))\n \t   (const_int 1))]\n \t UNSPEC_FMA4_INTRINSIC))]\n-  \"TARGET_FMA4 && TARGET_FUSED_MADD\n-   && !(MEM_P (operands[2]) && MEM_P (operands[3]))\"\n+  \"TARGET_FMA4 && TARGET_FUSED_MADD\"\n   \"vfmsubaddpd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"V2DF\")])"}]}