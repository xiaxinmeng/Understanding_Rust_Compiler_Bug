{"sha": "c51dc544b1c7f64888f9c3023700a5793e427aba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUxZGM1NDRiMWM3ZjY0ODg4ZjljMzAyMzcwMGE1NzkzZTQyN2FiYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-02-10T16:30:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-02-10T16:30:08Z"}, "message": "decl.c (build_enumerator): Don't perform integral promotions on non-integral constants.\n\n\t* decl.c (build_enumerator): Don't perform integral promotions on\n\tnon-integral constants.\n\nFrom-SVN: r170008", "tree": {"sha": "8a08fe54bb8ae6f3014108c6fcd1a0db20193062", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a08fe54bb8ae6f3014108c6fcd1a0db20193062"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c51dc544b1c7f64888f9c3023700a5793e427aba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51dc544b1c7f64888f9c3023700a5793e427aba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c51dc544b1c7f64888f9c3023700a5793e427aba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51dc544b1c7f64888f9c3023700a5793e427aba/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb8384a3f592146069847a1f608a4b17fe0dfada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8384a3f592146069847a1f608a4b17fe0dfada", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8384a3f592146069847a1f608a4b17fe0dfada"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "20b0d4be65f1efbf02cceced2cdf6c807f923f82", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c51dc544b1c7f64888f9c3023700a5793e427aba", "patch": "@@ -1,5 +1,8 @@\n 2011-02-09  Jason Merrill  <jason@redhat.com>\n \n+\t* decl.c (build_enumerator): Don't perform integral promotions on\n+\tnon-integral constants.\n+\n \t* cvt.c (convert_to_void): Handle null op1.\n \n \t* class.c (type_has_constexpr_default_constructor): Make sure the"}, {"sha": "866069dd3e71b208e8764dbb45c258c4f4bd8f8b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c51dc544b1c7f64888f9c3023700a5793e427aba", "patch": "@@ -11869,7 +11869,8 @@ build_enumerator (tree name, tree value, tree enumtype, location_t loc)\n \t{\n \t  value = cxx_constant_value (value);\n \n-\t  if (TREE_CODE (value) == INTEGER_CST)\n+\t  if (TREE_CODE (value) == INTEGER_CST\n+\t      && INTEGRAL_OR_ENUMERATION_TYPE_P (TREE_TYPE (value)))\n \t    {\n \t      value = perform_integral_promotions (value);\n \t    }"}, {"sha": "dc522e3e84618756dfb962f946b30302dc74a3f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c51dc544b1c7f64888f9c3023700a5793e427aba", "patch": "@@ -1,5 +1,8 @@\n 2011-02-09  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/ext/label10.C: Adjust for C++0x mode.\n+\t* g++.dg/cpp0x/regress/ext-label10.C: Copy it.\n+\n \t* g++.dg/cpp0x/regress/ext-cond1.C: Copy from ext/cond1.C.\n \n \t* g++.dg/cpp0x/regress/abi-empty7.C: New."}, {"sha": "652d94af0365c6da433418c2a8cd439a2d2486c4", "filename": "gcc/testsuite/g++.dg/cpp0x/regress/ext-label10.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fext-label10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fext-label10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fext-label10.C?ref=c51dc544b1c7f64888f9c3023700a5793e427aba", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/33836\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+template<int N> struct A\n+{\n+  enum { M = && N };\t// { dg-error \"referenced outside|cannot appear in|not an integer constant\" }\n+};\n+\n+A<0> a;\n+\n+void foo ()\n+{\n+  __label__ P;\n+  enum { O = && P };\t// { dg-error \"cannot appear in|not an integer constant\" }\n+  P:;\n+}"}, {"sha": "632b2426ed51c2934f04eb249a71728422a9bdc5", "filename": "gcc/testsuite/g++.dg/ext/label10.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c51dc544b1c7f64888f9c3023700a5793e427aba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel10.C?ref=c51dc544b1c7f64888f9c3023700a5793e427aba", "patch": "@@ -1,17 +1,17 @@\n // PR c++/33836\n // { dg-do compile }\n-// { dg-options \"-std=gnu++98\" }\n+// { dg-options \"\" }\n \n template<int N> struct A\n {\n-  enum { M = && N };\t// { dg-error \"referenced outside|cannot appear in\" }\n+  enum { M = && N };\t// { dg-error \"referenced outside|cannot appear in|not an integer constant\" }\n };\n \n A<0> a;\n \n void foo ()\n {\n   __label__ P;\n-  enum { O = && P };\t// { dg-error \"cannot appear in\" }\n+  enum { O = && P };\t// { dg-error \"cannot appear in|not an integer constant\" }\n   P:;\n }"}]}