{"sha": "4504a6554658e2b23a73856e99c50bc70ca6a324", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUwNGE2NTU0NjU4ZTJiMjNhNzM4NTZlOTljNTBiYzcwY2E2YTMyNA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-08-31T22:31:40Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-08-31T22:31:40Z"}, "message": "Re-merge with Classpath:\n\n\t* java/util/Comparator (equals): Added.\n\t* java/io/PipedWriter.java (write): Changed argument to `int'.\n\n\t* java/io/FileDescriptor.java (FileDescriptor()): New\n\tconstructor.\n\t* java/io/File.java (getAbsoluteFile): Doesn't throw IOException.\n\nFrom-SVN: r45337", "tree": {"sha": "58afefccc03082c2ba80876586e2554dee250583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58afefccc03082c2ba80876586e2554dee250583"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4504a6554658e2b23a73856e99c50bc70ca6a324", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4504a6554658e2b23a73856e99c50bc70ca6a324", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4504a6554658e2b23a73856e99c50bc70ca6a324", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4504a6554658e2b23a73856e99c50bc70ca6a324/comments", "author": null, "committer": null, "parents": [{"sha": "eb3ae3e105091e44f38d0b33dae7f39f1aa555a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb3ae3e105091e44f38d0b33dae7f39f1aa555a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb3ae3e105091e44f38d0b33dae7f39f1aa555a6"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "261aafa6f564f75785a9cf0d4c67a9b36b9590cd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4504a6554658e2b23a73856e99c50bc70ca6a324", "patch": "@@ -1,5 +1,13 @@\n 2001-08-31  Tom Tromey  <tromey@redhat.com>\n \n+\tRe-merge with Classpath:\n+\t* java/util/Comparator (equals): Added.\n+\t* java/io/PipedWriter.java (write): Changed argument to `int'.\n+\n+\t* java/io/FileDescriptor.java (FileDescriptor()): New\n+\tconstructor.\n+\t* java/io/File.java (getAbsoluteFile): Doesn't throw IOException.\n+\n \t* Makefile.in: Rebuilt.\n \t* Makefile.am (ordinary_java_source_files): Removed\n \tEnumerationChain, added DoubleEnumeration."}, {"sha": "12297acc4aea3b6ca6ba44c06bd684e63b5ade59", "filename": "libjava/java/io/File.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2Fjava%2Fio%2FFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2Fjava%2Fio%2FFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFile.java?ref=4504a6554658e2b23a73856e99c50bc70ca6a324", "patch": "@@ -157,7 +157,7 @@ public String getAbsolutePath ()\n   }\n \n   /** @since 1.2 */\n-  public File getAbsoluteFile () throws IOException\n+  public File getAbsoluteFile ()\n   {\n     return new File (getAbsolutePath());\n   }"}, {"sha": "a8bf7512c66d25b2e4d22afdb06f22836cbdc260", "filename": "libjava/java/io/FileDescriptor.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2Fjava%2Fio%2FFileDescriptor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2Fjava%2Fio%2FFileDescriptor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FFileDescriptor.java?ref=4504a6554658e2b23a73856e99c50bc70ca6a324", "patch": "@@ -43,6 +43,11 @@\n   static final int SET = 0;\n   static final int CUR = 1;\n \n+  // This constructor is specified to create an invalid descriptor.\n+  public FileDescriptor ()\n+  {\n+  }\n+\n   // Open a file.  MODE is a combination of the above mode flags.\n   FileDescriptor (String path, int mode) throws FileNotFoundException\n   {"}, {"sha": "d5dd8bf58992ad69bab1d659547ae58dd64f82f6", "filename": "libjava/java/io/PipedWriter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2Fjava%2Fio%2FPipedWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2Fjava%2Fio%2FPipedWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPipedWriter.java?ref=4504a6554658e2b23a73856e99c50bc70ca6a324", "patch": "@@ -104,9 +104,9 @@ public void connect(PipedReader sink) throws IOException\n     * @exception IOException If the stream has not been connected or has\n     *                        been closed.\n     */  \n-  public void write(char b) throws IOException\n+  public void write(int b) throws IOException\n   {\n-    read_buf[0] = b;\n+    read_buf[0] = (char) (b & 0xffff);\n     sink.receive (read_buf, 0, 1);\n   }\n   "}, {"sha": "fc61fc302806efcab253fdb84f442bd2f36da7f4", "filename": "libjava/java/util/Comparator.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2Fjava%2Futil%2FComparator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504a6554658e2b23a73856e99c50bc70ca6a324/libjava%2Fjava%2Futil%2FComparator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FComparator.java?ref=4504a6554658e2b23a73856e99c50bc70ca6a324", "patch": "@@ -1,5 +1,5 @@\n /* Comparator.java -- Interface for objects that specify an ordering\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -61,4 +61,13 @@\n    *   compared by this ordering.\n    */\n   int compare(Object o1, Object o2);\n+\n+  /**\n+   * Return true if the object is equal to this object.  To be\n+   * considered equal, the argument object must satisfy the constraints\n+   * of <code>Object.equals()</code>, be a Comparator, and impose the\n+   * same ordering as this Comparator.\n+   * @param obj The object\n+   */\n+  boolean equals(Object obj);\n }"}]}