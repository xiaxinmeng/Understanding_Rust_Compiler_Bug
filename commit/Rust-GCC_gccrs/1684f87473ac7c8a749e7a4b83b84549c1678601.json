{"sha": "1684f87473ac7c8a749e7a4b83b84549c1678601", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY4NGY4NzQ3M2FjN2M4YTc0OWU3YTRiODNiODQ1NDljMTY3ODYwMQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@cygnus.com", "date": "1999-12-09T12:32:48Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "1999-12-09T12:32:48Z"}, "message": "> * decl.c (init_decl_processing): Mark throw_node as a noreturn > function with side effects.\n\n  >     * decl.c (init_decl_processing): Mark throw_node as a noreturn\n  >     function with side effects.\n  >     (init_decl_processing): Mark all memory allocating DECLs with\n  >     DECL_IS_MALLOC.\n\nFrom-SVN: r30845", "tree": {"sha": "3c2cf46fa1b4c3719b269a17a191df1861b404f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c2cf46fa1b4c3719b269a17a191df1861b404f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1684f87473ac7c8a749e7a4b83b84549c1678601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1684f87473ac7c8a749e7a4b83b84549c1678601", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1684f87473ac7c8a749e7a4b83b84549c1678601", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1684f87473ac7c8a749e7a4b83b84549c1678601/comments", "author": null, "committer": null, "parents": [{"sha": "2756c3d86b49ceed753c9f94e22545be7056ea54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2756c3d86b49ceed753c9f94e22545be7056ea54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2756c3d86b49ceed753c9f94e22545be7056ea54"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "f8df0fe9255b309b3ca9ea817f879d9b237174af", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1684f87473ac7c8a749e7a4b83b84549c1678601/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1684f87473ac7c8a749e7a4b83b84549c1678601/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1684f87473ac7c8a749e7a4b83b84549c1678601", "patch": "@@ -1,3 +1,10 @@\n+1999-12-5  Anthony Green  <green@cygnus.com>\n+\n+\t* decl.c (init_decl_processing): Mark throw_node as a noreturn\n+\tfunction with side effects.\n+\t(init_decl_processing): Mark all memory allocating DECLs with\n+\tDECL_IS_MALLOC.\n+\n Wed Dec  1 04:25:06 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n         * except.c (expand_end_java_handler): Call"}, {"sha": "4d6ecbd579c213c566401eab67e8d8cfc1d5a644", "filename": "gcc/java/decl.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1684f87473ac7c8a749e7a4b83b84549c1678601/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1684f87473ac7c8a749e7a4b83b84549c1678601/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=1684f87473ac7c8a749e7a4b83b84549c1678601", "patch": "@@ -699,6 +699,7 @@ init_decl_processing ()\n   alloc_object_node = builtin_function (\"_Jv_AllocObject\",\n \t\t\t\t\tbuild_function_type (ptr_type_node, t),\n \t\t\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n+  DECL_IS_MALLOC (alloc_object_node) = 1;\n   soft_initclass_node = builtin_function (\"_Jv_InitClass\",\n \t\t\t\t\t  build_function_type (void_type_node,\n \t\t\t\t\t\t\t       t),\n@@ -708,6 +709,9 @@ init_decl_processing ()\n   throw_node = builtin_function (\"_Jv_Throw\",\n \t\t\t\t build_function_type (ptr_type_node, t),\n \t\t\t\t 0, NOT_BUILT_IN, NULL_PTR);\n+  /* Mark throw_node as a `noreturn' function with side effects.  */\n+  TREE_THIS_VOLATILE (throw_node) = 1;\n+  TREE_SIDE_EFFECTS (throw_node) = 1;\n   t = build_function_type (int_type_node, endlink);\n   soft_monitorenter_node \n     = builtin_function (\"_Jv_MonitorEnter\", t, 0, NOT_BUILT_IN,\n@@ -722,6 +726,7 @@ init_decl_processing ()\n       = builtin_function (\"_Jv_NewArray\",\n \t\t\t  build_function_type(ptr_type_node, t),\n \t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n+  DECL_IS_MALLOC (soft_newarray_node) = 1;\n \n   t = tree_cons (NULL_TREE, int_type_node,\n \t\t tree_cons (NULL_TREE, class_ptr_type,\n@@ -730,19 +735,23 @@ init_decl_processing ()\n       = builtin_function (\"_Jv_NewObjectArray\",\n \t\t\t  build_function_type (ptr_type_node, t),\n \t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n+  DECL_IS_MALLOC (soft_anewarray_node) = 1;\n \n   t = tree_cons (NULL_TREE, ptr_type_node,\n \t\t tree_cons (NULL_TREE, int_type_node, endlink));\n   soft_multianewarray_node\n       = builtin_function (\"_Jv_NewMultiArray\",\n \t\t\t  build_function_type (ptr_type_node, t),\n \t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n+  DECL_IS_MALLOC (soft_multianewarray_node) = 1;\n \n   t = build_function_type (void_type_node, \n \t\t\t   tree_cons (NULL_TREE, int_type_node, endlink));\n   soft_badarrayindex_node\n       = builtin_function (\"_Jv_ThrowBadArrayIndex\", t, \n \t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n+  /* Mark soft_badarrayindex_node as a `noreturn' function with side\n+     effects.  */\n   TREE_THIS_VOLATILE (soft_badarrayindex_node) = 1;\n   TREE_SIDE_EFFECTS (soft_badarrayindex_node) = 1;\n "}]}