{"sha": "c5b001b5f0d4e8355de686a4c84abae96efbbbcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzViMDAxYjVmMGQ0ZTgzNTVkZTY4NmE0Yzg0YWJhZTk2ZWZiYmJjZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-02-28T16:51:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-02-28T16:51:21Z"}, "message": "re PR c++/60314 ([C++1y] ICE with decltype(auto) when generating debug information)\n\n2014-02-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/60314\n\t* dwarf2out.c (is_cxx_auto): Handle decltype(auto).\n\n/testsuite\n2014-02-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/60314\n\t* g++.dg/cpp1y/auto-fn24.C: New.\n\nFrom-SVN: r208225", "tree": {"sha": "629b8fbac986b6c3659ffa145e7f3b152ece0fbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/629b8fbac986b6c3659ffa145e7f3b152ece0fbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5b001b5f0d4e8355de686a4c84abae96efbbbcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b001b5f0d4e8355de686a4c84abae96efbbbcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5b001b5f0d4e8355de686a4c84abae96efbbbcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b001b5f0d4e8355de686a4c84abae96efbbbcd/comments", "author": null, "committer": null, "parents": [{"sha": "5750e120d44393e4bac57bf51ecf97dc223033f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5750e120d44393e4bac57bf51ecf97dc223033f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5750e120d44393e4bac57bf51ecf97dc223033f1"}], "stats": {"total": 53, "additions": 44, "deletions": 9}, "files": [{"sha": "87e4bb3e884874d65ab25cf801f2d46226703cdb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b001b5f0d4e8355de686a4c84abae96efbbbcd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b001b5f0d4e8355de686a4c84abae96efbbbcd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5b001b5f0d4e8355de686a4c84abae96efbbbcd", "patch": "@@ -1,3 +1,11 @@\n+2014-02-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/60314\n+\t* dwarf2out.c (decltype_auto_die): New static.\n+\t(gen_subprogram_die): Handle 'decltype(auto)' like 'auto'.\n+\t(gen_type_die_with_usage): Handle 'decltype(auto)'.\n+\t(is_cxx_auto): Likewise.\n+\n 2014-02-28  Ian Bolton  <ian.bolton@arm.com>\n \n \t* config/aarch64/aarch64.h: Define __ARM_NEON by default if"}, {"sha": "1c3ff03efe5cecd90ad349fa078a687f99446f71", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b001b5f0d4e8355de686a4c84abae96efbbbcd/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b001b5f0d4e8355de686a4c84abae96efbbbcd/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=c5b001b5f0d4e8355de686a4c84abae96efbbbcd", "patch": "@@ -250,6 +250,9 @@ static GTY(()) section *cold_text_section;\n /* The DIE for C++1y 'auto' in a function return type.  */\n static GTY(()) dw_die_ref auto_die;\n \n+/* The DIE for C++1y 'decltype(auto)' in a function return type.  */\n+static GTY(()) dw_die_ref decltype_auto_die;\n+\n /* Forward declarations for functions defined in this file.  */\n \n static char *stripattributes (const char *);\n@@ -10230,7 +10233,8 @@ is_cxx_auto (tree type)\n       tree name = TYPE_NAME (type);\n       if (TREE_CODE (name) == TYPE_DECL)\n \tname = DECL_NAME (name);\n-      if (name == get_identifier (\"auto\"))\n+      if (name == get_identifier (\"auto\")\n+\t  || name == get_identifier (\"decltype(auto)\"))\n \treturn true;\n     }\n   return false;\n@@ -18022,10 +18026,11 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t  if (get_AT_unsigned (old_die, DW_AT_decl_line) != (unsigned) s.line)\n \t    add_AT_unsigned (subr_die, DW_AT_decl_line, s.line);\n \n-\t  /* If the prototype had an 'auto' return type, emit the real\n-\t     type on the definition die.  */\n+\t  /* If the prototype had an 'auto' or 'decltype(auto)' return type,\n+\t     emit the real type on the definition die.  */\n \t  if (is_cxx() && debug_info_level > DINFO_LEVEL_TERSE\n-\t      && get_AT_ref (old_die, DW_AT_type) == auto_die)\n+\t      && (get_AT_ref (old_die, DW_AT_type) == auto_die\n+\t\t  || get_AT_ref (old_die, DW_AT_type) == decltype_auto_die))\n \t    add_type_attribute (subr_die, TREE_TYPE (TREE_TYPE (decl)),\n \t\t\t\t0, 0, context_die);\n \t}\n@@ -19852,13 +19857,18 @@ gen_type_die_with_usage (tree type, dw_die_ref context_die,\n     default:\n       if (is_cxx_auto (type))\n \t{\n-\t  if (!auto_die)\n+\t  tree name = TYPE_NAME (type);\n+\t  if (TREE_CODE (name) == TYPE_DECL)\n+\t    name = DECL_NAME (name);\n+\t  dw_die_ref *die = (name == get_identifier (\"auto\")\n+\t\t\t     ? &auto_die : &decltype_auto_die);\n+\t  if (!*die)\n \t    {\n-\t      auto_die = new_die (DW_TAG_unspecified_type,\n-\t\t\t\t  comp_unit_die (), NULL_TREE);\n-\t      add_name_attribute (auto_die, \"auto\");\n+\t      *die = new_die (DW_TAG_unspecified_type,\n+\t\t\t      comp_unit_die (), NULL_TREE);\n+\t      add_name_attribute (*die, IDENTIFIER_POINTER (name));\n \t    }\n-\t  equate_type_number_to_die (type, auto_die);\n+\t  equate_type_number_to_die (type, *die);\n \t  break;\n \t}\n       gcc_unreachable ();"}, {"sha": "c8a7fb4f094e0843d74660dad2f88a354747386b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b001b5f0d4e8355de686a4c84abae96efbbbcd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b001b5f0d4e8355de686a4c84abae96efbbbcd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c5b001b5f0d4e8355de686a4c84abae96efbbbcd", "patch": "@@ -1,3 +1,8 @@\n+2014-02-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/60314\n+\t* g++.dg/cpp1y/auto-fn24.C: New.\n+\n 2014-02-28  Joey Ye  <joey.ye@arm.com>\n \n \tPR target/PR60169"}, {"sha": "8808575907f8da5b659b8933d441f6db95f6e8cd", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn24.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b001b5f0d4e8355de686a4c84abae96efbbbcd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b001b5f0d4e8355de686a4c84abae96efbbbcd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn24.C?ref=c5b001b5f0d4e8355de686a4c84abae96efbbbcd", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/60314\n+// { dg-options \"-std=c++1y -g\" }\n+\n+// fine\n+decltype(auto) qux() { return 42; }\n+\n+struct foo\n+{\n+  // also ICEs if not static \n+  static decltype(auto) bar()\n+  { return 42; }\n+};"}]}