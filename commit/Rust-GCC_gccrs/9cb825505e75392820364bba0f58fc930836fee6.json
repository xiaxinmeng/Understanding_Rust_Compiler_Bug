{"sha": "9cb825505e75392820364bba0f58fc930836fee6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNiODI1NTA1ZTc1MzkyODIwMzY0YmJhMGY1OGZjOTMwODM2ZmVlNg==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2008-12-31T23:00:17Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2008-12-31T23:00:17Z"}, "message": "inclhack.def (openbsd_null_definition): Redefine NULL to (void *)0 in case of C.\n\n2009-01-01  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* inclhack.def (openbsd_null_definition): Redefine NULL to (void *)0\n\tin case of C.\n\t* fixincl.x: Regenerate.\n\nFrom-SVN: r142989", "tree": {"sha": "5a48e9516f366715ca8c593bd4a3c0e572ef719b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a48e9516f366715ca8c593bd4a3c0e572ef719b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cb825505e75392820364bba0f58fc930836fee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb825505e75392820364bba0f58fc930836fee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cb825505e75392820364bba0f58fc930836fee6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb825505e75392820364bba0f58fc930836fee6/comments", "author": null, "committer": null, "parents": [{"sha": "a11fe69921144efb1f1cbe5268ec3232b85ea869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a11fe69921144efb1f1cbe5268ec3232b85ea869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a11fe69921144efb1f1cbe5268ec3232b85ea869"}], "stats": {"total": 114, "additions": 109, "deletions": 5}, "files": [{"sha": "ac3a39105fc2ceb5f1a51d55c7a7f6cb12b57aaa", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb825505e75392820364bba0f58fc930836fee6/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb825505e75392820364bba0f58fc930836fee6/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=9cb825505e75392820364bba0f58fc930836fee6", "patch": "@@ -1,3 +1,9 @@\n+2009-01-01  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* inclhack.def (openbsd_null_definition): Redefine NULL to (void *)0\n+\tin case of C.\n+\t* fixincl.x: Regenerate.\n+\n 2008-12-31  Andreas Tobler  <a.tobler@schweiz.org>\n \n \tPR target/35460"}, {"sha": "120728ee0526ce2ce46aefcf46025b63055cd2bf", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 65, "deletions": 5, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb825505e75392820364bba0f58fc930836fee6/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb825505e75392820364bba0f58fc930836fee6/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=9cb825505e75392820364bba0f58fc930836fee6", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Wednesday December 31, 2008 at 02:49:07 PM CET\n+ * It has been AutoGen-ed  Wednesday December 31, 2008 at 11:51:30 PM CET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Dec 31 14:49:07 CET 2008\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Dec 31 23:51:30 CET 2008\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 178 fixup descriptions.\n+ * This file contains 179 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -4697,6 +4697,60 @@ static const char* apzNodeent_SyntaxPatch[] = {\n     \"%0;\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Openbsd_Null_Definition fix\n+ */\n+tSCC zOpenbsd_Null_DefinitionName[] =\n+     \"openbsd_null_definition\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zOpenbsd_Null_DefinitionList[] =\n+  \"locale.h\\0stddef.h\\0stdio.h\\0string.h\\0time.h\\0unistd.h\\0wchar.h\\0sys/param.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzOpenbsd_Null_DefinitionMachs[] = {\n+        \"*-*-openbsd*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zOpenbsd_Null_DefinitionSelect0[] =\n+       \"__GNUG__\";\n+\n+#define    OPENBSD_NULL_DEFINITION_TEST_CT  1\n+static tTestDesc aOpenbsd_Null_DefinitionTests[] = {\n+  { TT_EGREP,    zOpenbsd_Null_DefinitionSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Openbsd_Null_Definition\n+ */\n+static const char* apzOpenbsd_Null_DefinitionPatch[] = {\n+    \"format\",\n+    \"#ifndef NULL\\n\\\n+#ifdef __cplusplus\\n\\\n+#ifdef __GNUG__\\n\\\n+#define NULL\\t__null\\n\\\n+#else\\t /* ! __GNUG__  */\\n\\\n+#define NULL\\t0L\\n\\\n+#endif\\t /* __GNUG__  */\\n\\\n+#else\\t /* ! __cplusplus  */\\n\\\n+#define NULL\\t((void *)0)\\n\\\n+#endif\\t /* __cplusplus  */\\n\\\n+#endif\\t /* !NULL  */\",\n+    \"^#ifndef[ \\t]*NULL\\n\\\n+^#ifdef[ \\t]*__GNUG__\\n\\\n+^#define[ \\t]*NULL[ \\t]*__null\\n\\\n+^#else\\n\\\n+^#define[ \\t]*NULL[ \\t]*0L\\n\\\n+^#endif\\n\\\n+^#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Obstack_Lvalue_Cast fix\n@@ -7219,9 +7273,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          224\n+#define REGEX_COUNT          225\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            178\n+#define FIX_COUNT            179\n \n /*\n  *  Enumerate the fixes\n@@ -7343,6 +7397,7 @@ typedef enum {\n     NEXT_VOLITILE_FIXIDX,\n     NEXT_WAIT_UNION_FIXIDX,\n     NODEENT_SYNTAX_FIXIDX,\n+    OPENBSD_NULL_DEFINITION_FIXIDX,\n     OBSTACK_LVALUE_CAST_FIXIDX,\n     OPENBSD_VA_START_FIXIDX,\n     OSF_NAMESPACE_A_FIXIDX,\n@@ -7988,6 +8043,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      NODEENT_SYNTAX_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aNodeent_SyntaxTests,   apzNodeent_SyntaxPatch, 0 },\n \n+  {  zOpenbsd_Null_DefinitionName,    zOpenbsd_Null_DefinitionList,\n+     apzOpenbsd_Null_DefinitionMachs,\n+     OPENBSD_NULL_DEFINITION_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aOpenbsd_Null_DefinitionTests,   apzOpenbsd_Null_DefinitionPatch, 0 },\n+\n   {  zObstack_Lvalue_CastName,    zObstack_Lvalue_CastList,\n      apzObstack_Lvalue_CastMachs,\n      OBSTACK_LVALUE_CAST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "adab21ef89ba53765271361551b0f85703c12162", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb825505e75392820364bba0f58fc930836fee6/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb825505e75392820364bba0f58fc930836fee6/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=9cb825505e75392820364bba0f58fc930836fee6", "patch": "@@ -2516,6 +2516,44 @@ fix = {\n     test_text = \"char *na_addr\\t\";\n };\n \n+/* \n+ * Fix OpenBSD's NULL definition.\n+ */\n+fix = {\n+  hackname  = openbsd_null_definition;\n+  mach      = \"*-*-openbsd*\";\n+  files     = locale.h, stddef.h, stdio.h, string.h,\n+  time.h, unistd.h, wchar.h, sys/param.h;\n+  select    = \"__GNUG__\";\n+  c_fix = format;\n+  c_fix_arg = \"#ifndef NULL\\n\"\n+\t      \"#ifdef __cplusplus\\n\"\n+\t      \"#ifdef __GNUG__\\n\"\n+\t      \"#define NULL\\t__null\\n\"\n+\t      \"#else\\t /* ! __GNUG__  */\\n\"\n+\t      \"#define NULL\\t0L\\n\"\n+              \"#endif\\t /* __GNUG__  */\\n\"\n+\t      \"#else\\t /* ! __cplusplus  */\\n\"\n+\t      \"#define NULL\\t((void *)0)\\n\"\n+              \"#endif\\t /* __cplusplus  */\\n\"\n+              \"#endif\\t /* !NULL  */\";\n+\n+  c_fix_arg = \"^#ifndef[ \\t]*NULL\\n\"\n+\t      \"^#ifdef[ \\t]*__GNUG__\\n\"\n+  \t      \"^#define[ \\t]*NULL[ \\t]*__null\\n\"\n+  \t      \"^#else\\n\"\n+              \"^#define[ \\t]*NULL[ \\t]*0L\\n\"\n+              \"^#endif\\n\"\n+              \"^#endif\";\n+  test_text = \n+\t\"#ifndef NULL\\n\"\n+\t\"#ifdef  __GNUG__\\n\"\n+\t\"#define NULL    __null\\n\"\n+\t\"#else\\n\"\n+\t\"#define NULL    0L\\n\"\n+\t\"#endif\\n\"\n+\t\"#endif\\n\";\n+};\n \n /*\n  *  obstack.h used casts as lvalues."}]}