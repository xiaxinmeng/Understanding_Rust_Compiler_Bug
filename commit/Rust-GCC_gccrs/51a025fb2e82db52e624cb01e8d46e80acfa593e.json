{"sha": "51a025fb2e82db52e624cb01e8d46e80acfa593e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFhMDI1ZmIyZTgyZGI1MmU2MjRjYjAxZThkNDZlODBhY2ZhNTkzZQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-11-24T09:07:23Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-11-24T09:07:23Z"}, "message": "2018-11-24  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/888143\n\t* resolve.c (resolve_variable): Check for associate names with\n\tNULL target.\n\n2018-11-24  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/888143\n\t* gfortran.dg/associate_46.f90: New test.\n\nFrom-SVN: r266427", "tree": {"sha": "1be5259e9830c8e6dc00125d58053f94eba081ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1be5259e9830c8e6dc00125d58053f94eba081ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51a025fb2e82db52e624cb01e8d46e80acfa593e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a025fb2e82db52e624cb01e8d46e80acfa593e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51a025fb2e82db52e624cb01e8d46e80acfa593e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51a025fb2e82db52e624cb01e8d46e80acfa593e/comments", "author": null, "committer": null, "parents": [{"sha": "eabec4d3c56af2e8959c8329b5257a81c606da60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eabec4d3c56af2e8959c8329b5257a81c606da60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eabec4d3c56af2e8959c8329b5257a81c606da60"}], "stats": {"total": 54, "additions": 51, "deletions": 3}, "files": [{"sha": "58ca2635eaf5557f998194d81958d0c5ba25ef88", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a025fb2e82db52e624cb01e8d46e80acfa593e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a025fb2e82db52e624cb01e8d46e80acfa593e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=51a025fb2e82db52e624cb01e8d46e80acfa593e", "patch": "@@ -1,3 +1,9 @@\n+2018-11-24  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/888143\n+\t* resolve.c (resolve_variable): Check for associate names with\n+\tNULL target.\n+\n 2018-11-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* lang.opt (fpad-source): New option."}, {"sha": "b2090218d48637d6c27196d8d0fd46bcc639bd80", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a025fb2e82db52e624cb01e8d46e80acfa593e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a025fb2e82db52e624cb01e8d46e80acfa593e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=51a025fb2e82db52e624cb01e8d46e80acfa593e", "patch": "@@ -5410,7 +5410,7 @@ resolve_variable (gfc_expr *e)\n      the ts' type of the component refs is still array valued, which\n      can't be translated that way.  */\n   if (sym->assoc && e->rank == 0 && e->ref && sym->ts.type == BT_CLASS\n-      && sym->assoc->target->ts.type == BT_CLASS\n+      && sym->assoc->target && sym->assoc->target->ts.type == BT_CLASS\n       && CLASS_DATA (sym->assoc->target)->as)\n     {\n       gfc_ref *ref = e->ref;"}, {"sha": "de3196e59c34aaf3dbab95f6aebee0d80925c4f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a025fb2e82db52e624cb01e8d46e80acfa593e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a025fb2e82db52e624cb01e8d46e80acfa593e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51a025fb2e82db52e624cb01e8d46e80acfa593e", "patch": "@@ -1,3 +1,8 @@\n+2018-11-24  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/888143\n+\t* gfortran.dg/associate_46.f90: New test.\n+\n 2018-11-23  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/84768\n@@ -585,7 +590,7 @@\n \tLikewise.\n \t* gcc.target/s390/global-array-even-element.c: Likewise.\n \n-2018-11-14  Wilco Dijkstra  <wdijkstr@arm.com>  \n+2018-11-14  Wilco Dijkstra  <wdijkstr@arm.com>\n \t    Jackson Woodruff  <jackson.woodruff@arm.com>\n \n \tPR 71026/tree-optimization\n@@ -600,7 +605,7 @@\n \tPR rtl-optimization/87817\n \t* gcc.target/i386/bmi2-bzhi-3.c (main): Add a couple of new tests.\n \n-2018-11-14  Wilco Dijkstra  <wdijkstr@arm.com>  \n+2018-11-14  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/aarch64/pr62178.c: Relax scan-assembler checks.\n "}, {"sha": "69cc189bfa4e83b00032b3d14f6f2e20157bf72f", "filename": "gcc/testsuite/gfortran.dg/associate_46.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51a025fb2e82db52e624cb01e8d46e80acfa593e/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_46.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51a025fb2e82db52e624cb01e8d46e80acfa593e/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_46.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_46.f90?ref=51a025fb2e82db52e624cb01e8d46e80acfa593e", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do run }\n+!\n+! Check the fix for PR88143, in which the associate name caused\n+! a segfault in resolve.c. Make sure that the associate construct\n+! does its job correctly, as well as compiles.\n+!\n+! Contributed by Andrew Wood  <andrew@fluidgravity.co.uk>\n+!\n+MODULE m\n+   IMPLICIT NONE\n+   TYPE t\n+      INTEGER, DIMENSION(:), ALLOCATABLE :: i\n+   END TYPE\n+   CONTAINS\n+      SUBROUTINE s(x, idx1, idx2, k)\n+         CLASS(*), DIMENSION(:), INTENT(IN), OPTIONAL :: x\n+         INTEGER :: idx1, idx2, k\n+         SELECT TYPE ( x )\n+         CLASS IS ( t )\n+            ASSOCIATE ( j => x(idx1)%i )\n+               k = j(idx2)\n+            END ASSOCIATE\n+         END SELECT\n+      END\n+END\n+\n+  use m\n+  class (t), allocatable :: c(:)\n+  integer :: k\n+  allocate (c(2))\n+  allocate (c(1)%i, source = [3,2,1])\n+  allocate (c(2)%i, source = [6,5,4])\n+  call s(c, 1, 3, k)\n+  if (k .ne. 1) stop 1\n+  call s(c, 2, 1, k)\n+  if (k .ne. 6) stop 2\n+end"}]}