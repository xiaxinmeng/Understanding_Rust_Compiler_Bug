{"sha": "78d087bc6ccc74c3ca8d1483d660fad535cad358", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhkMDg3YmM2Y2NjNzRjM2NhOGQxNDgzZDY2MGZhZDUzNWNhZDM1OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-01-29T14:22:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-01-29T14:22:47Z"}, "message": "re PR c/56113 (out of memory when compiling a function with many goto labels (50k > ))\n\n2013-01-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/56113\n\t* tree-ssa-structalias.c (equiv_class_lookup): Also return\n\tthe bitmap leader.\n\t(label_visit): Free duplicate bitmaps and record the leader instead.\n\t(perform_var_substitution): Adjust.\n\nFrom-SVN: r195541", "tree": {"sha": "53ed24d2dc1f4973861b51fd4a6e3c8de75d095c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53ed24d2dc1f4973861b51fd4a6e3c8de75d095c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78d087bc6ccc74c3ca8d1483d660fad535cad358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d087bc6ccc74c3ca8d1483d660fad535cad358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d087bc6ccc74c3ca8d1483d660fad535cad358", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d087bc6ccc74c3ca8d1483d660fad535cad358/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d38207955c35124725ee6a92a06b8074851f0a82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d38207955c35124725ee6a92a06b8074851f0a82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d38207955c35124725ee6a92a06b8074851f0a82"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "c9273e4881adafadfb08b3f82d9550d814c5c4e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d087bc6ccc74c3ca8d1483d660fad535cad358/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d087bc6ccc74c3ca8d1483d660fad535cad358/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78d087bc6ccc74c3ca8d1483d660fad535cad358", "patch": "@@ -1,3 +1,11 @@\n+2013-01-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56113\n+\t* tree-ssa-structalias.c (equiv_class_lookup): Also return\n+\tthe bitmap leader.\n+\t(label_visit): Free duplicate bitmaps and record the leader instead.\n+\t(perform_var_substitution): Adjust.\n+\n 2013-01-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/55270"}, {"sha": "cacfdab373254ec093b7e3b261b1c4a6bb4e8d52", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78d087bc6ccc74c3ca8d1483d660fad535cad358/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78d087bc6ccc74c3ca8d1483d660fad535cad358/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=78d087bc6ccc74c3ca8d1483d660fad535cad358", "patch": "@@ -1907,10 +1907,10 @@ equiv_class_label_eq (const void *p1, const void *p2)\n }\n \n /* Lookup a equivalence class in TABLE by the bitmap of LABELS it\n-   contains.  */\n+   contains.  Sets *REF_LABELS to the bitmap LABELS is equivalent to.  */\n \n static unsigned int\n-equiv_class_lookup (htab_t table, bitmap labels)\n+equiv_class_lookup (htab_t table, bitmap labels, bitmap *ref_labels)\n {\n   void **slot;\n   struct equiv_class_label ecl;\n@@ -1921,9 +1921,18 @@ equiv_class_lookup (htab_t table, bitmap labels)\n   slot = htab_find_slot_with_hash (table, &ecl,\n \t\t\t\t   ecl.hashcode, NO_INSERT);\n   if (!slot)\n-    return 0;\n+    {\n+      if (ref_labels)\n+\t*ref_labels = NULL;\n+      return 0;\n+    }\n   else\n-    return ((equiv_class_label_t) *slot)->equivalence_class;\n+    {\n+      equiv_class_label_t ec = (equiv_class_label_t) *slot;\n+      if (ref_labels)\n+\t*ref_labels = ec->labels;\n+      return ec->equivalence_class;\n+    }\n }\n \n \n@@ -2123,14 +2132,21 @@ label_visit (constraint_graph_t graph, struct scc_info *si, unsigned int n)\n \n   if (!bitmap_empty_p (graph->points_to[n]))\n     {\n+      bitmap ref_points_to;\n       unsigned int label = equiv_class_lookup (pointer_equiv_class_table,\n-\t\t\t\t\t       graph->points_to[n]);\n+\t\t\t\t\t       graph->points_to[n],\n+\t\t\t\t\t       &ref_points_to);\n       if (!label)\n \t{\n \t  label = pointer_equiv_class++;\n \t  equiv_class_add (pointer_equiv_class_table,\n \t\t\t   label, graph->points_to[n]);\n \t}\n+      else\n+\t{\n+\t  BITMAP_FREE (graph->points_to[n]);\n+\t  graph->points_to[n] = ref_points_to;\n+\t}\n       graph->pointer_label[n] = label;\n     }\n }\n@@ -2190,7 +2206,7 @@ perform_var_substitution (constraint_graph_t graph)\n       /* Look up the location equivalence label if one exists, or make\n \t one otherwise.  */\n       label = equiv_class_lookup (location_equiv_class_table,\n-\t\t\t\t  pointed_by);\n+\t\t\t\t  pointed_by, NULL);\n       if (label == 0)\n \t{\n \t  label = location_equiv_class++;"}]}