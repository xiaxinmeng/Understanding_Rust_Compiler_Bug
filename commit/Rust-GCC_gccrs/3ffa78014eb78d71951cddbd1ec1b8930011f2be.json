{"sha": "3ffa78014eb78d71951cddbd1ec1b8930011f2be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZmYTc4MDE0ZWI3OGQ3MTk1MWNkZGJkMWVjMWI4OTMwMDExZjJiZQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2015-03-06T18:43:24Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2015-03-06T18:43:24Z"}, "message": "re PR testsuite/63175 (FAIL: gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a.c scan-tree-dump-times slp2\" basic block vectorized using SLP\" 1)\n\n2015-03-05  Martin Sebor  <msebor@redhat.com>\n\n\t* PR testsuite/63175\n\t* gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a.c (main1): Move\n\tchecking of results into main to prevent it from getting optimized\n\taway.\n\t* gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a-pr63175.c: New test.\n\nFrom-SVN: r221248", "tree": {"sha": "6d98a4ac781f4ac99cba84ed080078b62cea704a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d98a4ac781f4ac99cba84ed080078b62cea704a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ffa78014eb78d71951cddbd1ec1b8930011f2be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffa78014eb78d71951cddbd1ec1b8930011f2be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ffa78014eb78d71951cddbd1ec1b8930011f2be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffa78014eb78d71951cddbd1ec1b8930011f2be/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74d353152300399d53a36f0089a2cd679d4fad0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74d353152300399d53a36f0089a2cd679d4fad0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74d353152300399d53a36f0089a2cd679d4fad0b"}], "stats": {"total": 62, "additions": 48, "deletions": 14}, "files": [{"sha": "702e06bad09baceb7e0df3cd18f198afe5fddd6c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa78014eb78d71951cddbd1ec1b8930011f2be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa78014eb78d71951cddbd1ec1b8930011f2be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ffa78014eb78d71951cddbd1ec1b8930011f2be", "patch": "@@ -1,3 +1,11 @@\n+2015-03-05  Martin Sebor  <msebor@redhat.com>\n+\n+\t* PR testsuite/63175\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a.c (main1): Move\n+\tchecking of results into main to prevent it from getting optimized\n+\taway.\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a-pr63175.c: New test.\n+\n 2015-03-06  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n \n \t* gcc.dg/tree-ssa/pr45685.c: Move to gcc.target/i386."}, {"sha": "73c0afa02dc03ff09efa2b41c7c00ec66f3e82c3", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a-pr63175.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa78014eb78d71951cddbd1ec1b8930011f2be/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a-pr63175.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa78014eb78d71951cddbd1ec1b8930011f2be/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a-pr63175.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a-pr63175.c?ref=3ffa78014eb78d71951cddbd1ec1b8930011f2be", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-do compile } */\n+\n+#define N 16 \n+\n+const unsigned int in[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+unsigned int out[N];\n+\n+__attribute__ ((noinline)) int\n+main1 (void)\n+{\n+  const unsigned int *pin = &in[1];\n+  unsigned int *pout = &out[0];\n+\n+  /* Misaligned load.  */\n+  *pout++ = *pin++;\n+  *pout++ = *pin++;\n+  *pout++ = *pin++;\n+  *pout++ = *pin++;\n+\n+  return 0;\n+}\n+\n+/* Verify that the assembly contains vector instructions alone\n+   with no word loads (lw, lwu, lwz, lwzu, or their indexed forms)\n+   or word stores (stw, stwu, stwx, stwux, or their indexed forms).  */\n+\n+/* { dg-final { scan-assembler \"\\t\\(lxv|lvsr|stxv\\)\" } } */\n+/* { dg-final { scan-assembler-not \"\\tlwz?u?x? \" } } */\n+/* { dg-final { scan-assembler-not \"\\tstwu?x? \" } } */"}, {"sha": "45046f4a09b6fbd2946b5fd7e1c000ace20fbab9", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a.c", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ffa78014eb78d71951cddbd1ec1b8930011f2be/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ffa78014eb78d71951cddbd1ec1b8930011f2be/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fppc%2Fcostmodel-bb-slp-9a.c?ref=3ffa78014eb78d71951cddbd1ec1b8930011f2be", "patch": "@@ -1,6 +1,5 @@\n /* { dg-require-effective-target vect_int } */\n \n-#include <stdarg.h>\n #include \"../../tree-vect.h\"\n \n #define N 16 \n@@ -9,38 +8,35 @@ unsigned int out[N];\n unsigned int in[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n \n __attribute__ ((noinline)) int\n-main1 (unsigned int x, unsigned int y)\n+main1 (void)\n {\n-  int i;\n   unsigned int *pin = &in[1];\n   unsigned int *pout = &out[0];\n-  unsigned int a0, a1, a2, a3;\n \n   /* Misaligned load.  */\n   *pout++ = *pin++;\n   *pout++ = *pin++;\n   *pout++ = *pin++;\n   *pout++ = *pin++;\n \n-  /* Check results.  */\n-  if (out[0] != in[1]\n-      || out[1] != in[2]\n-      || out[2] != in[3]\n-      || out[3] != in[4])\n-    abort();\n-\n   return 0;\n }\n \n int main (void)\n {\n   check_vect ();\n \n-  main1 (2, 3);\n+  main1 ();\n+\n+  /* Check results.  */\n+  if (out[0] != in[1]\n+      || out[1] != in[2]\n+      || out[2] != in[3]\n+      || out[3] != in[4])\n+    abort();\n \n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"basic block vectorized using SLP\" 1 \"slp2\"  { xfail  vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"basic block vectorized\" 1 \"slp2\"  { xfail  vect_no_align } } } */\n /* { dg-final { cleanup-tree-dump \"slp2\" } } */\n-  "}]}