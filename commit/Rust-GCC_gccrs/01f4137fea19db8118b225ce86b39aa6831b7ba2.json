{"sha": "01f4137fea19db8118b225ce86b39aa6831b7ba2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFmNDEzN2ZlYTE5ZGI4MTE4YjIyNWNlODZiMzlhYTY4MzFiN2JhMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-10-07T09:49:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-10-07T09:49:18Z"}, "message": "* decl2.c, pt.c: Revert c++/7754 fix.\n\nFrom-SVN: r57895", "tree": {"sha": "0d089283cc0b3bd7f56abba2312f1b85af69eff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d089283cc0b3bd7f56abba2312f1b85af69eff5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01f4137fea19db8118b225ce86b39aa6831b7ba2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f4137fea19db8118b225ce86b39aa6831b7ba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01f4137fea19db8118b225ce86b39aa6831b7ba2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f4137fea19db8118b225ce86b39aa6831b7ba2/comments", "author": null, "committer": null, "parents": [{"sha": "e0fbf84951e1cd77d57af16257ec71501dcd92bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0fbf84951e1cd77d57af16257ec71501dcd92bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0fbf84951e1cd77d57af16257ec71501dcd92bc"}], "stats": {"total": 79, "additions": 36, "deletions": 43}, "files": [{"sha": "c5e1ed18881be1fe89814b6dae70d1fe3768ac89", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f4137fea19db8118b225ce86b39aa6831b7ba2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f4137fea19db8118b225ce86b39aa6831b7ba2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=01f4137fea19db8118b225ce86b39aa6831b7ba2", "patch": "@@ -1,3 +1,7 @@\n+2002-10-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* decl2.c, pt.c: Revert c++/7754 fix.\n+\n 2002-10-05  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/7804"}, {"sha": "90a4d4a571bfafa073326004a96b9d50aef48506", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 17, "deletions": 22, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f4137fea19db8118b225ce86b39aa6831b7ba2/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f4137fea19db8118b225ce86b39aa6831b7ba2/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=01f4137fea19db8118b225ce86b39aa6831b7ba2", "patch": "@@ -1382,31 +1382,26 @@ finish_anon_union (anon_union_decl)\n       return;\n     }\n \n-  if (!processing_template_decl)\n-    {\n-      main_decl \n-\t= build_anon_union_vars (anon_union_decl,\n-\t\t\t\t &DECL_ANON_UNION_ELEMS (anon_union_decl),\n-\t\t\t\t static_p, external_p);\n-      \n-      if (main_decl == NULL_TREE)\n-\t{\n-\t  warning (\"anonymous aggregate with no members\");\n-\t  return;\n-\t}\n+  main_decl = build_anon_union_vars (anon_union_decl,\n+\t\t\t\t     &DECL_ANON_UNION_ELEMS (anon_union_decl),\n+\t\t\t\t     static_p, external_p);\n \n-      if (static_p)\n-\t{\n-\t  make_decl_rtl (main_decl, 0);\n-\t  COPY_DECL_RTL (main_decl, anon_union_decl);\n-\t  expand_anon_union_decl (anon_union_decl, \n-\t\t\t\t  NULL_TREE,\n-\t\t\t\t  DECL_ANON_UNION_ELEMS (anon_union_decl));\n-\t  return;\n-\t}\n+  if (main_decl == NULL_TREE)\n+    {\n+      warning (\"anonymous aggregate with no members\");\n+      return;\n     }\n \n-  add_decl_stmt (anon_union_decl);\n+  if (static_p)\n+    {\n+      make_decl_rtl (main_decl, 0);\n+      COPY_DECL_RTL (main_decl, anon_union_decl);\n+      expand_anon_union_decl (anon_union_decl, \n+\t\t\t      NULL_TREE,\n+\t\t\t      DECL_ANON_UNION_ELEMS (anon_union_decl));\n+    }\n+  else\n+    add_decl_stmt (anon_union_decl);\n }\n \n /* Finish processing a builtin type TYPE.  It's name is NAME,"}, {"sha": "aec77d92ce0298dbf8aa21a5e68a6909e9e4de8b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f4137fea19db8118b225ce86b39aa6831b7ba2/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f4137fea19db8118b225ce86b39aa6831b7ba2/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=01f4137fea19db8118b225ce86b39aa6831b7ba2", "patch": "@@ -6134,7 +6134,7 @@ tsubst_decl (t, args, type, complain)\n \t  }\n \n \tr = copy_decl (t);\n-\tTREE_TYPE (r) = complete_type (type);\n+\tTREE_TYPE (r) = type;\n \tc_apply_type_quals_to_decl (cp_type_quals (type), r);\n \tDECL_CONTEXT (r) = ctx;\n \t/* Clear out the mangled name and RTL for the instantiation.  */\n@@ -6173,8 +6173,6 @@ tsubst_decl (t, args, type, complain)\n \tTREE_CHAIN (r) = NULL_TREE;\n \tif (TREE_CODE (r) == VAR_DECL && VOID_TYPE_P (type))\n \t  cp_error_at (\"instantiation of `%D' as type `%T'\", r, type);\n-\t/* Compute the size, alignment, etc. of R.  */\n-\tlayout_decl (r, 0);\n       }\n       break;\n \n@@ -7426,6 +7424,9 @@ tsubst_expr (t, args, complain, in_decl)\n \t    decl = tsubst (decl, args, complain, in_decl);\n \t    if (decl != error_mark_node)\n \t      {\n+                if (TREE_CODE (decl) != TYPE_DECL)\n+                  /* Make sure the type is instantiated now.  */\n+                  complete_type (TREE_TYPE (decl));\n \t        if (init)\n \t          DECL_INITIAL (decl) = error_mark_node;\n \t        /* By marking the declaration as instantiated, we avoid\n@@ -7435,26 +7436,19 @@ tsubst_expr (t, args, complain, in_decl)\n \t           do.  */\n \t        if (TREE_CODE (decl) == VAR_DECL)\n \t          DECL_TEMPLATE_INSTANTIATED (decl) = 1;\n-\t\tif (TREE_CODE (decl) == VAR_DECL\n-\t\t    && ANON_AGGR_TYPE_P (TREE_TYPE (decl)))\n-\t\t  /* Anonymous aggregates are a special case.  */\n-\t\t  finish_anon_union (decl);\n-\t\telse \n+\t        maybe_push_decl (decl);\n+\t\tif (DECL_PRETTY_FUNCTION_P (decl))\n \t\t  {\n-\t\t    maybe_push_decl (decl);\n-\t\t    if (DECL_PRETTY_FUNCTION_P (decl))\n-\t\t      {\n-\t\t\t/* For __PRETTY_FUNCTION__ we have to adjust the\n-\t\t\t   initializer.  */\n-\t\t\tconst char *const name\n-\t\t\t  = cxx_printable_name (current_function_decl, 2);\n-\t\t\tinit = cp_fname_init (name);\n-\t\t\tTREE_TYPE (decl) = TREE_TYPE (init);\n-\t\t      }\n-\t\t    else\n-\t\t      init = tsubst_expr (init, args, complain, in_decl);\n-\t\t    cp_finish_decl (decl, init, NULL_TREE, 0);\n+\t\t    /* For __PRETTY_FUNCTION__ we have to adjust the\n+\t\t       initializer.  */\n+\t\t    const char *const name\n+\t\t      = cxx_printable_name (current_function_decl, 2);\n+\t\t    init = cp_fname_init (name);\n+\t\t    TREE_TYPE (decl) = TREE_TYPE (init);\n \t\t  }\n+\t\telse\n+\t\t  init = tsubst_expr (init, args, complain, in_decl);\n+\t        cp_finish_decl (decl, init, NULL_TREE, 0);\n \t      }\n \t  }\n "}]}