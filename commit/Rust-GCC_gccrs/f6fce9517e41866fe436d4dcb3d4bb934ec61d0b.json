{"sha": "f6fce9517e41866fe436d4dcb3d4bb934ec61d0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmY2U5NTE3ZTQxODY2ZmU0MzZkNGRjYjNkNGJiOTM0ZWM2MWQwYg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@google.com", "date": "2012-11-30T20:06:27Z"}, "committer": {"name": "Doug Evans", "email": "devans@gcc.gnu.org", "date": "2012-11-30T20:06:27Z"}, "message": "validate_failures.py: Add function GetManifestPath.\n\n\t* testsuite-management/validate_failures.py: Add function\n\tGetManifestPath.  New global _MANIFEST_SUBDIR.\n\nFrom-SVN: r194007", "tree": {"sha": "43d78bd838e5fab869341039e00f39bdc0a0df77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43d78bd838e5fab869341039e00f39bdc0a0df77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6fce9517e41866fe436d4dcb3d4bb934ec61d0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fce9517e41866fe436d4dcb3d4bb934ec61d0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6fce9517e41866fe436d4dcb3d4bb934ec61d0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fce9517e41866fe436d4dcb3d4bb934ec61d0b/comments", "author": null, "committer": null, "parents": [{"sha": "3cdc1f858d5488d426ec9626eef76a6cdec2248d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cdc1f858d5488d426ec9626eef76a6cdec2248d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cdc1f858d5488d426ec9626eef76a6cdec2248d"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "09b3816459a645e20aa00731348c91bb7f2251ed", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fce9517e41866fe436d4dcb3d4bb934ec61d0b/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fce9517e41866fe436d4dcb3d4bb934ec61d0b/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=f6fce9517e41866fe436d4dcb3d4bb934ec61d0b", "patch": "@@ -1,3 +1,8 @@\n+2012-11-30  Doug Evans  <dje@google.com>\n+\n+\t* testsuite-management/validate_failures.py: Add function\n+\tGetManifestPath.  New global _MANIFEST_SUBDIR.\n+\n 2012-11-29  Doug Evans  <dje@google.com>\n \n \t* testsuite-management/validate_failures.py: Remove pass/fail"}, {"sha": "35ea29b666b7a995df65ac01b2a61cb60e524160", "filename": "contrib/testsuite-management/validate_failures.py", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fce9517e41866fe436d4dcb3d4bb934ec61d0b/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fce9517e41866fe436d4dcb3d4bb934ec61d0b/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftestsuite-management%2Fvalidate_failures.py?ref=f6fce9517e41866fe436d4dcb3d4bb934ec61d0b", "patch": "@@ -37,7 +37,7 @@\n 1- Determine the target built: TARGET\n 2- Determine the source directory: SRCDIR\n 3- Look for a failure manifest file in\n-   <SRCDIR>/contrib/testsuite-management/<TARGET>.xfail\n+   <SRCDIR>/<MANIFEST_SUBDIR>/<MANIFEST_NAME>.xfail\n 4- Collect all the <tool>.sum files from the build tree.\n 5- Produce a report stating:\n    a- Failures expected in the manifest but not present in the build.\n@@ -55,10 +55,15 @@\n # Handled test results.\n _VALID_TEST_RESULTS = [ 'FAIL', 'UNRESOLVED', 'XPASS', 'ERROR' ]\n \n-# Pattern for naming manifest files.  The first argument should be\n-# the toplevel GCC source directory.  The second argument is the\n-# target triple used during the build.\n-_MANIFEST_PATH_PATTERN = '%s/contrib/testsuite-management/%s.xfail'\n+# Subdirectory of srcdir in which to find the manifest file.\n+_MANIFEST_SUBDIR = 'contrib/testsuite-management'\n+\n+# Pattern for naming manifest files.\n+# The first argument should be the toplevel GCC(/GNU tool) source directory.\n+# The second argument is the manifest subdir.\n+# The third argument is the manifest target, which defaults to the target\n+# triplet used during the build.\n+_MANIFEST_PATH_PATTERN = '%s/%s/%s.xfail'\n \n # The options passed to the program.\n _OPTIONS = None\n@@ -284,6 +289,17 @@ def CompareResults(manifest, actual):\n   return actual_vs_manifest, manifest_vs_actual\n \n \n+def GetManifestPath(srcdir, target, user_provided_must_exist):\n+  \"\"\"Return the full path to the manifest file.\"\"\"\n+  manifest_path = _OPTIONS.manifest\n+  if manifest_path:\n+    if user_provided_must_exist and not os.path.exists(manifest_path):\n+      Error('Manifest does not exist: %s' % manifest_path)\n+    return manifest_path\n+  else:\n+    return _MANIFEST_PATH_PATTERN % (srcdir, _MANIFEST_SUBDIR, target)\n+\n+\n def GetBuildData():\n   target = GetMakefileValue('%s/Makefile' % _OPTIONS.build_dir, 'target_alias=')\n   srcdir = GetMakefileValue('%s/Makefile' % _OPTIONS.build_dir, 'srcdir =')\n@@ -333,14 +349,8 @@ def PerformComparison(expected, actual, ignore_missing_failures):\n \n \n def CheckExpectedResults():\n-  if not _OPTIONS.manifest:\n-    (srcdir, target) = GetBuildData()\n-    manifest_path = _MANIFEST_PATH_PATTERN % (srcdir, target)\n-  else:\n-    manifest_path = _OPTIONS.manifest\n-    if not os.path.exists(manifest_path):\n-      Error('Manifest file %s does not exist.' % manifest_path)\n-\n+  (srcdir, target) = GetBuildData()\n+  manifest_path = GetManifestPath(srcdir, target, True)\n   print 'Manifest:         %s' % manifest_path\n   manifest = GetManifest(manifest_path)\n   sum_files = GetSumFiles(_OPTIONS.results, _OPTIONS.build_dir)\n@@ -355,7 +365,8 @@ def CheckExpectedResults():\n \n def ProduceManifest():\n   (srcdir, target) = GetBuildData()\n-  manifest_path = _MANIFEST_PATH_PATTERN % (srcdir, target)\n+  manifest_path = GetManifestPath(srcdir, target, False)\n+  print 'Manifest:         %s' % manifest_path\n   if os.path.exists(manifest_path) and not _OPTIONS.force:\n     Error('Manifest file %s already exists.\\nUse --force to overwrite.' %\n           manifest_path)"}]}