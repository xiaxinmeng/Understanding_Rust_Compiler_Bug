{"sha": "7d4549b2cd209eb621453ce13be7ffd84ffa720a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q0NTQ5YjJjZDIwOWViNjIxNDUzY2UxM2JlN2ZmZDg0ZmZhNzIwYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-03-20T10:01:13Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-03-20T10:01:13Z"}, "message": "Fix correct offset in ipa_get_jf_ancestor_result.\n\n\tPR ipa/94232\n\t* ipa-cp.c (ipa_get_jf_ancestor_result): Use offset in bytes. Previously\n\tbuild_ref_for_offset function was used and it transforms off to bytes\n\tfrom bits.", "tree": {"sha": "f85983d269003a49f0b6bef1f68261d17ceec5f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f85983d269003a49f0b6bef1f68261d17ceec5f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d4549b2cd209eb621453ce13be7ffd84ffa720a", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl50lGkACgkQTcGC3A+n\nN4VxGAf/YaRzFzA8ijkG+UTVxD8c9d2Nt0Y8kOij54ABl9cVZ06gZ4g/kkFpvvLp\naS2ISgQDTXf+XOvZiJEXWhQ/FRP7VU+Lkh5bdPBUF5g7MpuMPYWm9Dmdxje5qe04\noY6C5zJ3dGT38gFXL0hxoA/sTjv5FQao5FKKlBm43OXdFYxtA8f7Ixn0Ox3vWUoY\neo6UALK8HU7M12Jlk3rERgOk1wn/VFOCKMHduiRnqLXEQu5XsANhsXY2To6XcGVL\nseV0TycElmlcvz08ufmNAoR4AfBsGClyfdgIrWQdiRF20Y9qygnO4xcLsnk01XJ3\n9sl10x7uDdrdKNrtMY4nfyz03hq8EQ==\n=w0I3\n-----END PGP SIGNATURE-----", "payload": "tree f85983d269003a49f0b6bef1f68261d17ceec5f9\nparent 8fefa21fcf67f30c467eb3cb73d09cb96d0ea6a8\nauthor Martin Liska <mliska@suse.cz> 1584698473 +0100\ncommitter Martin Liska <mliska@suse.cz> 1584698473 +0100\n\nFix correct offset in ipa_get_jf_ancestor_result.\n\n\tPR ipa/94232\n\t* ipa-cp.c (ipa_get_jf_ancestor_result): Use offset in bytes. Previously\n\tbuild_ref_for_offset function was used and it transforms off to bytes\n\tfrom bits.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4549b2cd209eb621453ce13be7ffd84ffa720a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d4549b2cd209eb621453ce13be7ffd84ffa720a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4549b2cd209eb621453ce13be7ffd84ffa720a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fefa21fcf67f30c467eb3cb73d09cb96d0ea6a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fefa21fcf67f30c467eb3cb73d09cb96d0ea6a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fefa21fcf67f30c467eb3cb73d09cb96d0ea6a8"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "c7b3325876d62aef52dc9c86717388ceb1c9cf1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4549b2cd209eb621453ce13be7ffd84ffa720a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4549b2cd209eb621453ce13be7ffd84ffa720a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d4549b2cd209eb621453ce13be7ffd84ffa720a", "patch": "@@ -1,3 +1,10 @@\n+2020-03-20  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/94232\n+\t* ipa-cp.c (ipa_get_jf_ancestor_result): Use offset in bytes. Previously\n+\tbuild_ref_for_offset function was used and it transforms off to bytes\n+\tfrom bits.\n+\n 2020-03-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/94266"}, {"sha": "c64e9104a94411891a82367dc79cec2d9313fcd3", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4549b2cd209eb621453ce13be7ffd84ffa720a/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4549b2cd209eb621453ce13be7ffd84ffa720a/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=7d4549b2cd209eb621453ce13be7ffd84ffa720a", "patch": "@@ -1356,9 +1356,10 @@ ipa_get_jf_ancestor_result (struct ipa_jump_func *jfunc, tree input)\n       poly_int64 off = ipa_get_jf_ancestor_offset (jfunc);\n       if (known_eq (off, 0))\n \treturn input;\n+      poly_int64 byte_offset = exact_div (off, BITS_PER_UNIT);\n       return build1 (ADDR_EXPR, TREE_TYPE (input),\n-\t\t     fold_build2 (MEM_REF, TREE_TYPE (TREE_TYPE (input)),\n-\t\t\t\t  input, build_int_cst (ptr_type_node, off)));\n+\t\t     fold_build2 (MEM_REF, TREE_TYPE (TREE_TYPE (input)), input,\n+\t\t\t\t  build_int_cst (ptr_type_node, byte_offset)));\n     }\n   else\n     return NULL_TREE;"}]}