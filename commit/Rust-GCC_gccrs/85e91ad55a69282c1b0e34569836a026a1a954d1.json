{"sha": "85e91ad55a69282c1b0e34569836a026a1a954d1", "node_id": "C_kwDOANBUbNoAKDg1ZTkxYWQ1NWE2OTI4MmMxYjBlMzQ1Njk4MzZhMDI2YTFhOTU0ZDE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-29T08:15:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-29T08:20:27Z"}, "message": "tree-optimization/103458 - avoid creating new loops in CD-DCE\n\nWhen creating forwarders in CD-DCE we have to avoid creating loops\nwhere we formerly did not consider those because of abnormal\npredecessors.  At this point simply excuse us when there are any\nabnormal predecessors.\n\n2021-11-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/103458\n\t* tree-ssa-dce.c (make_forwarders_with_degenerate_phis): Do not\n\tcreate forwarders for blocks with abnormal predecessors.\n\n\t* gcc.dg/torture/pr103458.c: New testcase.", "tree": {"sha": "4a67dedbb8e9fc421c05838b034d9e7e6c275647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a67dedbb8e9fc421c05838b034d9e7e6c275647"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85e91ad55a69282c1b0e34569836a026a1a954d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e91ad55a69282c1b0e34569836a026a1a954d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85e91ad55a69282c1b0e34569836a026a1a954d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e91ad55a69282c1b0e34569836a026a1a954d1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e5f880d0452ef2cffb94f4a686d56833c9f4215", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e5f880d0452ef2cffb94f4a686d56833c9f4215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e5f880d0452ef2cffb94f4a686d56833c9f4215"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "3fd3b5fd2ffbc46d47e309bd34d389753875f1c2", "filename": "gcc/testsuite/gcc.dg/torture/pr103458.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85e91ad55a69282c1b0e34569836a026a1a954d1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr103458.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85e91ad55a69282c1b0e34569836a026a1a954d1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr103458.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr103458.c?ref=85e91ad55a69282c1b0e34569836a026a1a954d1", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-div-by-zero\" } */\n+\n+__attribute__ ((returns_twice)) int\n+bar (void);\n+\n+void\n+foo (int *p, int x)\n+{\n+  *p = 0;\n+  while (*p < 1)\n+    {\n+      x = 0;\n+      while (x < 1)\n+        bar ();\n+\n+      x /= 0;\n+    }\n+\n+  foo (p, x);\n+}"}, {"sha": "1f817b95faba63de7af31e4bb591c3fdfe0b1352", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85e91ad55a69282c1b0e34569836a026a1a954d1/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85e91ad55a69282c1b0e34569836a026a1a954d1/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=85e91ad55a69282c1b0e34569836a026a1a954d1", "patch": "@@ -1650,8 +1650,12 @@ make_forwarders_with_degenerate_phis (function *fn)\n       /* Only PHIs with three or more arguments have opportunities.  */\n       if (EDGE_COUNT (bb->preds) < 3)\n \tcontinue;\n-      /* Do not touch loop headers.  */\n-      if (bb->loop_father->header == bb)\n+      /* Do not touch loop headers or blocks with abnormal predecessors.\n+\t ???  This is to avoid creating valid loops here, see PR103458.\n+\t We might want to improve things to either explicitely add those\n+\t loops or at least consider blocks with no backedges.  */\n+      if (bb->loop_father->header == bb\n+\t  || bb_has_abnormal_pred (bb))\n \tcontinue;\n \n       /* Take one PHI node as template to look for identical"}]}