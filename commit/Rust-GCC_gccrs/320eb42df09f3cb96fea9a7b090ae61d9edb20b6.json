{"sha": "320eb42df09f3cb96fea9a7b090ae61d9edb20b6", "node_id": "C_kwDOANBUbNoAKDMyMGViNDJkZjA5ZjNjYjk2ZmVhOWE3YjA5MGFlNjFkOWVkYjIwYjY", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-01-10T15:29:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-09T09:27:30Z"}, "message": "[Ada] Use \"aspect\" instead of \"pragma\" in warnings\n\nFor warnings related to the Unreferenced, Unmodified, and Unused\naspects, refer to the \"aspect\", not the \"pragma\". Note that the aspect\ncan be set by an aspect_specification or a pragma, so the term \"aspect\"\nis correct even in the pragma case.  However, messages in sem_prag.adb\nuse Fix_Error, so they refer to \"aspect\" or \"pragma\". It's not clear\nthat we really ought to refer to \"pragma\", now that those are obsolete,\nbut de call Fix_Error for uniformity. We do not attempt to make\nFix_Error available outside sem_prag.adb -- too much trouble for\nsomething that perhaps ought to be removed.\n\ngcc/ada/\n\n\t* lib-xref.adb, sem_util.adb: Change wording of warning messages\n\tto use \"aspect\".\n\t* sem_prag.adb: Use Fix_Error to change wording of warnings.\n\t* doc/gnat_rm/implementation_defined_pragmas.rst: Minor: fix\n\tcut&paste error.\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "ef796f5f7aec8a09b419b42879bb05840b4554f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef796f5f7aec8a09b419b42879bb05840b4554f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/320eb42df09f3cb96fea9a7b090ae61d9edb20b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320eb42df09f3cb96fea9a7b090ae61d9edb20b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320eb42df09f3cb96fea9a7b090ae61d9edb20b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82bd388bf08329b4e271ef83adca22b3816ff14f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82bd388bf08329b4e271ef83adca22b3816ff14f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82bd388bf08329b4e271ef83adca22b3816ff14f"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "895180e67639f18197fcfd1a6088c0cd13190ad5", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=320eb42df09f3cb96fea9a7b090ae61d9edb20b6", "patch": "@@ -7313,7 +7313,7 @@ For the variable case, warnings are never given for unreferenced\n variables whose name contains one of the substrings\n ``DISCARD, DUMMY, IGNORE, JUNK, UNUSED`` in any casing. Such names\n are typically to be used in cases where such warnings are expected.\n-Thus it is never necessary to use ``pragma Unmodified`` for such\n+Thus it is never necessary to use ``pragma Unused`` for such\n variables, though it is harmless to do so.\n \n Pragma Validity_Checks"}, {"sha": "4bee272dfd41c99efd3287042b06a7ea1a011c0e", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=320eb42df09f3cb96fea9a7b090ae61d9edb20b6", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT Reference Manual , Jan 03, 2022\n+GNAT Reference Manual , Apr 22, 2022\n \n AdaCore\n \n@@ -8837,7 +8837,7 @@ For the variable case, warnings are never given for unreferenced\n variables whose name contains one of the substrings\n @code{DISCARD, DUMMY, IGNORE, JUNK, UNUSED} in any casing. Such names\n are typically to be used in cases where such warnings are expected.\n-Thus it is never necessary to use @code{pragma Unmodified} for such\n+Thus it is never necessary to use @code{pragma Unused} for such\n variables, though it is harmless to do so.\n \n @node Pragma Validity_Checks,Pragma Volatile,Pragma Unused,Implementation Defined Pragmas"}, {"sha": "610a4bd17ad6d3f9f34d8bc67c623490525d686a", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=320eb42df09f3cb96fea9a7b090ae61d9edb20b6", "patch": "@@ -936,10 +936,10 @@ package body Lib.Xref is\n                      if Chars (BE) = Chars (E) then\n                         if Has_Pragma_Unused (E) then\n                            Error_Msg_NE -- CODEFIX\n-                             (\"??pragma Unused given for&!\", N, BE);\n+                             (\"??aspect Unused specified for&!\", N, BE);\n                         else\n                            Error_Msg_NE -- CODEFIX\n-                             (\"??pragma Unreferenced given for&!\", N, BE);\n+                             (\"??aspect Unreferenced specified for&!\", N, BE);\n                         end if;\n                         exit;\n                      end if;\n@@ -952,10 +952,10 @@ package body Lib.Xref is\n \n             elsif Has_Pragma_Unused (E) then\n                Error_Msg_NE -- CODEFIX\n-                 (\"??pragma Unused given for&!\", N, E);\n+                 (\"??aspect Unused specified for&!\", N, E);\n             else\n                Error_Msg_NE -- CODEFIX\n-                 (\"??pragma Unreferenced given for&!\", N, E);\n+                 (\"??aspect Unreferenced specified for&!\", N, E);\n             end if;\n          end if;\n "}, {"sha": "1289f4fbe99eb645c7a442388faa8c3243c6c007", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=320eb42df09f3cb96fea9a7b090ae61d9edb20b6", "patch": "@@ -5168,12 +5168,12 @@ package body Sem_Prag is\n                elsif Has_Pragma_Unmodified (Arg_Id) then\n                   if Has_Pragma_Unused (Arg_Id) then\n                      Error_Msg_NE\n-                       (\"??pragma Unused already given for &!\", Arg_Expr,\n-                         Arg_Id);\n+                       (Fix_Error (\"??pragma Unused already given for &!\"),\n+                        Arg_Expr, Arg_Id);\n                   else\n                      Error_Msg_NE\n-                       (\"??pragma Unmodified already given for &!\", Arg_Expr,\n-                         Arg_Id);\n+                       (Fix_Error (\"??pragma Unmodified already given for &!\"),\n+                        Arg_Expr, Arg_Id);\n                   end if;\n \n                --  Otherwise the pragma referenced an illegal entity\n@@ -5276,12 +5276,13 @@ package body Sem_Prag is\n                   if Has_Pragma_Unreferenced (Arg_Id) then\n                      if Has_Pragma_Unused (Arg_Id) then\n                         Error_Msg_NE\n-                          (\"??pragma Unused already given for &!\", Arg_Expr,\n-                            Arg_Id);\n+                          (Fix_Error (\"??pragma Unused already given for &!\"),\n+                           Arg_Expr, Arg_Id);\n                      else\n                         Error_Msg_NE\n-                          (\"??pragma Unreferenced already given for &!\",\n-                            Arg_Expr, Arg_Id);\n+                          (Fix_Error\n+                             (\"??pragma Unreferenced already given for &!\"),\n+                           Arg_Expr, Arg_Id);\n                      end if;\n \n                   --  Apply Unreferenced to the entity"}, {"sha": "a4199679700f1c8f7ec6d66ec37b6f42543e556a", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320eb42df09f3cb96fea9a7b090ae61d9edb20b6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=320eb42df09f3cb96fea9a7b090ae61d9edb20b6", "patch": "@@ -25698,10 +25698,11 @@ package body Sem_Util is\n                      --  of pragma Unused.\n \n                      if Has_Pragma_Unused (Ent) then\n-                        Error_Msg_NE (\"??pragma Unused given for &!\", N, Ent);\n+                        Error_Msg_NE\n+                          (\"??aspect Unused specified for &!\", N, Ent);\n                      else\n                         Error_Msg_NE\n-                          (\"??pragma Unmodified given for &!\", N, Ent);\n+                          (\"??aspect Unmodified specified for &!\", N, Ent);\n                      end if;\n                   end if;\n "}]}