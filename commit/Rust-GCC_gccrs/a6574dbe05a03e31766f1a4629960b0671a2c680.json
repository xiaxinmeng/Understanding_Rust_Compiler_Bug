{"sha": "a6574dbe05a03e31766f1a4629960b0671a2c680", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY1NzRkYmUwNWEwM2UzMTc2NmYxYTQ2Mjk5NjBiMDY3MWEyYzY4MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-01-17T15:58:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-01-17T15:58:48Z"}, "message": "i386.c (indirect_thunk_name): Declare regno as unsigned int.\n\n\t* config/i386/i386.c (indirect_thunk_name): Declare regno\n\tas unsigned int.  Compare regno with INVALID_REGNUM.\n\t(output_indirect_thunk): Ditto.\n\t(output_indirect_thunk_function): Ditto.\n\t(ix86_code_end): Declare regno as unsigned int.  Use INVALID_REGNUM\n\tin the call to output_indirect_thunk_function.\n\nFrom-SVN: r256797", "tree": {"sha": "76332131935a12942c0b62144fba9bc310bcabfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76332131935a12942c0b62144fba9bc310bcabfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6574dbe05a03e31766f1a4629960b0671a2c680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6574dbe05a03e31766f1a4629960b0671a2c680", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6574dbe05a03e31766f1a4629960b0671a2c680", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6574dbe05a03e31766f1a4629960b0671a2c680/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab612f39a4b756e3a58ec3cb36b4033f84825b9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab612f39a4b756e3a58ec3cb36b4033f84825b9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab612f39a4b756e3a58ec3cb36b4033f84825b9b"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "2945d4c89d0d7ad604ef6b199f0eed29da961795", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6574dbe05a03e31766f1a4629960b0671a2c680/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6574dbe05a03e31766f1a4629960b0671a2c680/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6574dbe05a03e31766f1a4629960b0671a2c680", "patch": "@@ -1,3 +1,12 @@\n+2018-01-17  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (indirect_thunk_name): Declare regno\n+\tas unsigned int.  Compare regno with INVALID_REGNUM.\n+\t(output_indirect_thunk): Ditto.\n+\t(output_indirect_thunk_function): Ditto.\n+\t(ix86_code_end): Declare regno as unsigned int.  Use INVALID_REGNUM\n+\tin the call to output_indirect_thunk_function.\n+\n 2018-01-17  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR middle-end/83884\n@@ -1639,7 +1648,7 @@\n \t* config/alpha/alpha.md (*saddsi_1): New insn_ans_split pattern.\n \t(*saddl_se_1): Ditto.\n \t(*ssubsi_1): Ditto.\n-\t(*saddl_se_1): Ditto.\n+\t(*ssubl_se_1): Ditto.\n \n 2018-01-12  Richard Sandiford  <richard.sandiford@linaro.org>\n "}, {"sha": "cb0f4ed5e6a3be1ec33afdcbe927fc0ab522db98", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6574dbe05a03e31766f1a4629960b0671a2c680/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6574dbe05a03e31766f1a4629960b0671a2c680/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a6574dbe05a03e31766f1a4629960b0671a2c680", "patch": "@@ -10765,16 +10765,16 @@ static int indirect_thunks_bnd_used;\n /* Fills in the label name that should be used for the indirect thunk.  */\n \n static void\n-indirect_thunk_name (char name[32], int regno, bool need_bnd_p,\n-\t\t     bool ret_p)\n+indirect_thunk_name (char name[32], unsigned int regno,\n+\t\t     bool need_bnd_p, bool ret_p)\n {\n-  if (regno >= 0 && ret_p)\n+  if (regno != INVALID_REGNUM && ret_p)\n     gcc_unreachable ();\n \n   if (USE_HIDDEN_LINKONCE)\n     {\n       const char *bnd = need_bnd_p ? \"_bnd\" : \"\";\n-      if (regno >= 0)\n+      if (regno != INVALID_REGNUM)\n \t{\n \t  const char *reg_prefix;\n \t  if (LEGACY_INT_REGNO_P (regno))\n@@ -10792,7 +10792,7 @@ indirect_thunk_name (char name[32], int regno, bool need_bnd_p,\n     }\n   else\n     {\n-      if (regno >= 0)\n+      if (regno != INVALID_REGNUM)\n \t{\n \t  if (need_bnd_p)\n \t    ASM_GENERATE_INTERNAL_LABEL (name, \"LITBR\", regno);\n@@ -10844,7 +10844,7 @@ indirect_thunk_name (char name[32], int regno, bool need_bnd_p,\n  */\n \n static void\n-output_indirect_thunk (bool need_bnd_p, int regno)\n+output_indirect_thunk (bool need_bnd_p, unsigned int regno)\n {\n   char indirectlabel1[32];\n   char indirectlabel2[32];\n@@ -10874,7 +10874,7 @@ output_indirect_thunk (bool need_bnd_p, int regno)\n \n   ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, indirectlabel2);\n \n-  if (regno >= 0)\n+  if (regno != INVALID_REGNUM)\n     {\n       /* MOV.  */\n       rtx xops[2];\n@@ -10898,12 +10898,12 @@ output_indirect_thunk (bool need_bnd_p, int regno)\n }\n \n /* Output a funtion with a call and return thunk for indirect branch.\n-   If BND_P is true, the BND prefix is needed.   If REGNO != -1,  the\n-   function address is in REGNO.  Otherwise, the function address is\n+   If BND_P is true, the BND prefix is needed.  If REGNO != UNVALID_REGNUM,\n+   the function address is in REGNO.  Otherwise, the function address is\n    on the top of stack.  */\n \n static void\n-output_indirect_thunk_function (bool need_bnd_p, int regno)\n+output_indirect_thunk_function (bool need_bnd_p, unsigned int regno)\n {\n   char name[32];\n   tree decl;\n@@ -10952,7 +10952,7 @@ output_indirect_thunk_function (bool need_bnd_p, int regno)\n \tASM_OUTPUT_LABEL (asm_out_file, name);\n       }\n \n-  if (regno < 0)\n+  if (regno == INVALID_REGNUM)\n     {\n       /* Create alias for __x86.return_thunk/__x86.return_thunk_bnd.  */\n       char alias[32];\n@@ -11026,16 +11026,16 @@ static void\n ix86_code_end (void)\n {\n   rtx xops[2];\n-  int regno;\n+  unsigned int regno;\n \n   if (indirect_thunk_needed)\n-    output_indirect_thunk_function (false, -1);\n+    output_indirect_thunk_function (false, INVALID_REGNUM);\n   if (indirect_thunk_bnd_needed)\n-    output_indirect_thunk_function (true, -1);\n+    output_indirect_thunk_function (true, INVALID_REGNUM);\n \n   for (regno = FIRST_REX_INT_REG; regno <= LAST_REX_INT_REG; regno++)\n     {\n-      int i = regno - FIRST_REX_INT_REG + LAST_INT_REG + 1;\n+      unsigned int i = regno - FIRST_REX_INT_REG + LAST_INT_REG + 1;\n       if ((indirect_thunks_used & (1 << i)))\n \toutput_indirect_thunk_function (false, regno);\n "}]}