{"sha": "45c45e79fc5661a448f0ff3d40ab1c2a6ca44563", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVjNDVlNzlmYzU2NjFhNDQ4ZjBmZjNkNDBhYjFjMmE2Y2E0NDU2Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-15T18:53:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-15T18:53:41Z"}, "message": "(ASM_OUTPUT_{INT,SHORT,CHAR,BYTE}): Truncate constant to maximum range\npermitted in order to avoid assembler error.\n\nFrom-SVN: r3739", "tree": {"sha": "f4031e3b4267c6e8adf3d96fc91f7b6713853e49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4031e3b4267c6e8adf3d96fc91f7b6713853e49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45c45e79fc5661a448f0ff3d40ab1c2a6ca44563", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c45e79fc5661a448f0ff3d40ab1c2a6ca44563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c45e79fc5661a448f0ff3d40ab1c2a6ca44563", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c45e79fc5661a448f0ff3d40ab1c2a6ca44563/comments", "author": null, "committer": null, "parents": [{"sha": "5eb9c92c63cb100237da01600644eb19a8926612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eb9c92c63cb100237da01600644eb19a8926612", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eb9c92c63cb100237da01600644eb19a8926612"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "5d352493ab220234cb18241f0b7d030ce1bbe34f", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c45e79fc5661a448f0ff3d40ab1c2a6ca44563/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c45e79fc5661a448f0ff3d40ab1c2a6ca44563/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=45c45e79fc5661a448f0ff3d40ab1c2a6ca44563", "patch": "@@ -1462,9 +1462,9 @@ literal_section ()\t\t\t\t\t\t\\\n /* This is how to output an assembler line defining an `int' constant.  */\n \n #define ASM_OUTPUT_INT(FILE,VALUE)  \t\t\\\n-( fprintf (FILE, \"\\t.long \"),\t\t\t\\\n-  output_addr_const (FILE, (VALUE)),\t\t\\\n-  fprintf (FILE, \"\\n\"))\n+  fprintf (FILE, \"\\t.long %d\\n\",\t\t\\\n+    (GET_CODE (VALUE) == CONST_INT\t\t\\\n+     ? INTVAL (VALUE) & 0xffffffff : (abort (), 0)))\n \n /* This is how to output an assembler line defining a `long' constant.  */\n \n@@ -1476,14 +1476,14 @@ literal_section ()\t\t\t\t\t\t\\\n /* Likewise for `char' and `short' constants.  */\n \n #define ASM_OUTPUT_SHORT(FILE,VALUE)  \\\n-( fprintf (FILE, \"\\t.word \"),\t\t\t\\\n-  output_addr_const (FILE, (VALUE)),\t\t\\\n-  fprintf (FILE, \"\\n\"))\n+  fprintf (FILE, \"\\t.short %d\\n\",\t\t\\\n+    (GET_CODE (VALUE) == CONST_INT\t\t\\\n+     ? INTVAL (VALUE) & 0xffff : (abort (), 0)))\n \n #define ASM_OUTPUT_CHAR(FILE,VALUE)\t\t\\\n-( fprintf (FILE, \"\\t.byte \"),\t\t\t\\\n-  output_addr_const (FILE, (VALUE)),\t\t\\\n-  fprintf (FILE, \"\\n\"))\n+  fprintf (FILE, \"\\t.byte %d\\n\",\t\t\\\n+    (GET_CODE (VALUE) == CONST_INT\t\t\\\n+     ? INTVAL (VALUE) & 0xff : (abort (), 0)))\n \n /* We use the default ASCII-output routine, except that we don't write more\n    than 50 characters since the assembler doesn't support very long lines.  */\n@@ -1548,7 +1548,7 @@ literal_section ()\t\t\t\t\t\t\\\n /* This is how to output an assembler line for a numeric constant byte.  */\n \n #define ASM_OUTPUT_BYTE(FILE,VALUE)  \\\n-  fprintf (FILE, \"\\t.byte 0x%x\\n\", (VALUE))\n+  fprintf (FILE, \"\\t.byte 0x%x\\n\", (VALUE) & 0xff)\n \n /* This is how to output an element of a case-vector that is absolute.  */\n "}]}