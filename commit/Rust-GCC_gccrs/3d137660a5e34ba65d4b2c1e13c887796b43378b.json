{"sha": "3d137660a5e34ba65d4b2c1e13c887796b43378b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QxMzc2NjBhNWUzNGJhNjVkNGIyYzFlMTNjODg3Nzk2YjQzMzc4Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-01-09T18:20:55Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-01-09T18:20:55Z"}, "message": "sol2-unwind.h (sparc64_is_sighandler): Check that the purported sigacthandler address isn't null before dereferencing it.\n\n\t* config/sparc/sol2-unwind.h (sparc64_is_sighandler): Check that the\n\tpurported sigacthandler address isn't null before dereferencing it.\n\t(sparc_is_sighandler): Likewise.\n\nFrom-SVN: r183020", "tree": {"sha": "5d1af631f6932f93241c8a3097e503a89ffc4751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d1af631f6932f93241c8a3097e503a89ffc4751"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d137660a5e34ba65d4b2c1e13c887796b43378b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d137660a5e34ba65d4b2c1e13c887796b43378b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d137660a5e34ba65d4b2c1e13c887796b43378b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d137660a5e34ba65d4b2c1e13c887796b43378b/comments", "author": null, "committer": null, "parents": [{"sha": "fabe41e40f37003467d3376f1661a75e807813de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabe41e40f37003467d3376f1661a75e807813de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabe41e40f37003467d3376f1661a75e807813de"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "778848ba5bc058c09efd174e2a73ef4085851b3f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d137660a5e34ba65d4b2c1e13c887796b43378b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d137660a5e34ba65d4b2c1e13c887796b43378b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=3d137660a5e34ba65d4b2c1e13c887796b43378b", "patch": "@@ -1,3 +1,9 @@\n+2012-01-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sol2-unwind.h (sparc64_is_sighandler): Check that the\n+\tpurported sigacthandler address isn't null before dereferencing it.\n+\t(sparc_is_sighandler): Likewise.\n+\n 2012-01-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/41929"}, {"sha": "7d6bd221dd51dc280cbacb8a72776aa6de9df13a", "filename": "libgcc/config/sparc/sol2-unwind.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d137660a5e34ba65d4b2c1e13c887796b43378b/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d137660a5e34ba65d4b2c1e13c887796b43378b/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h?ref=3d137660a5e34ba65d4b2c1e13c887796b43378b", "patch": "@@ -124,10 +124,9 @@ sparc64_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n \t  /* This matches the call_user_handler pattern for Solaris 10.\n \t     There are 2 cases so we look for the return address of the\n \t     caller's caller frame in order to do more pattern matching.  */\n-\t  unsigned int sah_pattern\n-\t    = *(unsigned int *)(*(unsigned long *)(cfa + 176 + 15*8) - 4);\n+\t  unsigned long sah_address = *(unsigned long *)(cfa + 176 + 15*8);\n \n-          if (sah_pattern == 0x92100019)\n+          if (sah_address && *(unsigned int *)(sah_address - 4) == 0x92100019)\n \t    /* This is the same setup as for Solaris 9, see below.  */\n \t    *nframes = 3;\n \t  else\n@@ -302,10 +301,9 @@ sparc_is_sighandler (unsigned int *pc, void *cfa, int *nframes)\n \t  /* This matches the call_user_handler pattern for Solaris 10.\n \t     There are 2 cases so we look for the return address of the\n \t     caller's caller frame in order to do more pattern matching.  */\n-\t  unsigned int sah_pattern\n-\t    = *(unsigned int *)(*(unsigned int *)(cfa + 96 + 15*4) - 4);\n+\t  unsigned int sah_address = *(unsigned int *)(cfa + 96 + 15*4);\n \n-          if (sah_pattern == 0x92100019)\n+          if (sah_address && *(unsigned int *)(sah_address - 4) == 0x92100019)\n \t    /* This is the same setup as for Solaris 9, see below.  */\n \t    *nframes = 3;\n \t  else"}]}