{"sha": "008355a6ed0180b715a34bd49f67a987a78057fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA4MzU1YTZlZDAxODBiNzE1YTM0YmQ0OWY2N2E5ODdhNzgwNTdmZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-05-13T22:17:02Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-05-13T22:17:02Z"}, "message": "tm.texi (THREAD_MODEL_SPEC): Document it.\n\n* tm.texi (THREAD_MODEL_SPEC): Document it.\n* gcc.c (main): Use it.\n* config/rs6000/aix43.h (THREAD_MODEL_SPEC): Define it.\n* config/rs6000/aix51.h (THREAD_MODEL_SPEC): Likewise.\n\nFrom-SVN: r42048", "tree": {"sha": "a3526c03074a27c32916d665bc6dcbed04376861", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3526c03074a27c32916d665bc6dcbed04376861"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/008355a6ed0180b715a34bd49f67a987a78057fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/008355a6ed0180b715a34bd49f67a987a78057fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/008355a6ed0180b715a34bd49f67a987a78057fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/008355a6ed0180b715a34bd49f67a987a78057fe/comments", "author": null, "committer": null, "parents": [{"sha": "ff0b6b992118d179779efac155b3484d32a1cf0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff0b6b992118d179779efac155b3484d32a1cf0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff0b6b992118d179779efac155b3484d32a1cf0d"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "22f729ffa1ebc3625fbf4ed59bd80dfa1a4b7097", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=008355a6ed0180b715a34bd49f67a987a78057fe", "patch": "@@ -1,3 +1,10 @@\n+2001-05-13  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* tm.texi (THREAD_MODEL_SPEC): Document it.\n+\t* gcc.c (main): Use it.\n+\t* config/rs6000/aix43.h (THREAD_MODEL_SPEC): Define it.\n+\t* config/rs6000/aix51.h (THREAD_MODEL_SPEC): Likewise.\n+\n 2001-05-13  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n \t* rtl.h (SYMBOL_REF_WEAK): New macro."}, {"sha": "78700eaa209cc55a0ac424425d5f70194f5d2251", "filename": "gcc/config/rs6000/aix43.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2Fconfig%2Frs6000%2Faix43.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2Fconfig%2Frs6000%2Faix43.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix43.h?ref=008355a6ed0180b715a34bd49f67a987a78057fe", "patch": "@@ -199,6 +199,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n        %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n        %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}}\"\n \n+/* Since there are separate multilibs for pthreads, determine the\n+   thread model based on the command-line arguments.  */\n+#define THREAD_MODEL_SPEC \"%{pthread:posix}%{!pthread:single}\"\n+\n /* AIX 4.3 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n \n #undef PTRDIFF_TYPE"}, {"sha": "a72d986cd1e232ec17d1f5ba1b483ca16d2324b1", "filename": "gcc/config/rs6000/aix51.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2Fconfig%2Frs6000%2Faix51.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2Fconfig%2Frs6000%2Faix51.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix51.h?ref=008355a6ed0180b715a34bd49f67a987a78057fe", "patch": "@@ -202,6 +202,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n        %{pthread:%{pg:gcrt0_r%O%s}%{!pg:%{p:mcrt0_r%O%s}%{!p:crt0_r%O%s}}}\\\n        %{!pthread:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}}}}}\"\n \n+/* Since there are separate multilibs for pthreads, determine the\n+   thread model based on the command-line arguments.  */\n+#define THREAD_MODEL_SPEC \"%{pthread:posix}%{!pthread:single}\"\n+\n /* AIX V5 typedefs ptrdiff_t as \"long\" while earlier releases used \"int\".  */\n \n #undef PTRDIFF_TYPE"}, {"sha": "1ba86eebc9d5a6e3b32da90ea8346cb2c767ae3c", "filename": "gcc/gcc.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=008355a6ed0180b715a34bd49f67a987a78057fe", "patch": "@@ -5801,10 +5801,23 @@ main (argc, argv)\n   if (verbose_flag)\n     {\n       int n;\n+      const char *thrmod;\n \n       notice (\"Configured with: %s\\n\", configuration_arguments);\n \n-      notice (\"Thread model: %s\\n\", thread_model);\n+#ifdef THREAD_MODEL_SPEC\n+      /* We could have defined THREAD_MODEL_SPEC to \"%*\" by default,\n+\t but there's no point in doing all this processing just to get\n+\t thread_model back.  */\n+      obstack_init (&obstack);\n+      do_spec_1 (THREAD_MODEL_SPEC, 0, thread_model);\n+      obstack_1grow (&obstack, '\\0');\n+      thrmod = obstack_finish (&obstack);\n+#else\n+      thrmod = thread_model;\n+#endif\n+\n+      notice (\"Thread model: %s\\n\", thrmod);\n \n       /* compiler_version is truncated at the first space when initialized\n \t from version string, so truncate version_string at the first space"}, {"sha": "e777ea9a37b62af83d3f01ad3f33a9243b6b6b22", "filename": "gcc/tm.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/008355a6ed0180b715a34bd49f67a987a78057fe/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=008355a6ed0180b715a34bd49f67a987a78057fe", "patch": "@@ -248,6 +248,16 @@ the very end of the command given to the linker.\n \n Do not define this macro if it does not need to do anything.\n \n+@findex THREAD_MODEL_SPEC\n+@item THREAD_MODEL_SPEC\n+GCC @code{-v} will print the thread model GCC was configured to use.\n+However, this doesn't work on platforms that are multilibbed on thread\n+models, such as AIX 4.3.  On such platforms, define\n+@code{THREAD_MODEL_SPEC} such that it evaluates to a string without\n+blanks that names one of the recognized thread models.  @code{%*}, the\n+default value of this macro, will expand to the value of\n+@code{thread_file} set in @file{config.gcc}.\n+\n @findex EXTRA_SPECS\n @item EXTRA_SPECS\n Define this macro to provide additional specifications to put in the"}]}