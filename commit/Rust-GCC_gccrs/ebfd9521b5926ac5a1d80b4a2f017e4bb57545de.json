{"sha": "ebfd9521b5926ac5a1d80b4a2f017e4bb57545de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJmZDk1MjFiNTkyNmFjNWExZDgwYjRhMmYwMTdlNGJiNTc1NDVkZQ==", "commit": {"author": {"name": "Dirk Mueller", "email": "dmueller@suse.com", "date": "2006-01-04T15:26:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-01-04T15:26:15Z"}, "message": "decl.c (finish_constructor_body): create simple compound stmt instead of a if(1) { } construct.\n\n2002-01-04  Dirk Mueller <dmueller@suse.com>\n\n\t* decl.c (finish_constructor_body): create simple\n\tcompound stmt instead of a if(1) { } construct.\n\nFrom-SVN: r109331", "tree": {"sha": "68b979aad07636e1ccefd80d4cad57a4adad2687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68b979aad07636e1ccefd80d4cad57a4adad2687"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebfd9521b5926ac5a1d80b4a2f017e4bb57545de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebfd9521b5926ac5a1d80b4a2f017e4bb57545de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebfd9521b5926ac5a1d80b4a2f017e4bb57545de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebfd9521b5926ac5a1d80b4a2f017e4bb57545de/comments", "author": {"login": "dirkmueller", "id": 1029152, "node_id": "MDQ6VXNlcjEwMjkxNTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1029152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirkmueller", "html_url": "https://github.com/dirkmueller", "followers_url": "https://api.github.com/users/dirkmueller/followers", "following_url": "https://api.github.com/users/dirkmueller/following{/other_user}", "gists_url": "https://api.github.com/users/dirkmueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirkmueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirkmueller/subscriptions", "organizations_url": "https://api.github.com/users/dirkmueller/orgs", "repos_url": "https://api.github.com/users/dirkmueller/repos", "events_url": "https://api.github.com/users/dirkmueller/events{/privacy}", "received_events_url": "https://api.github.com/users/dirkmueller/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8701f023e1eddc20439eb2dc1b887b2225acb77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8701f023e1eddc20439eb2dc1b887b2225acb77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8701f023e1eddc20439eb2dc1b887b2225acb77"}], "stats": {"total": 30, "additions": 5, "deletions": 25}, "files": [{"sha": "29389f45bdd15d06fe1c76f6b5897a001d0dd195", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebfd9521b5926ac5a1d80b4a2f017e4bb57545de/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebfd9521b5926ac5a1d80b4a2f017e4bb57545de/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ebfd9521b5926ac5a1d80b4a2f017e4bb57545de", "patch": "@@ -1,3 +1,8 @@\n+2002-01-04  Dirk Mueller <dmueller@suse.com>\n+\n+\t* decl.c (finish_constructor_body): create simple\n+\tcompound stmt instead of a if(1) { } construct.\n+\n 2006-01-03  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/25492"}, {"sha": "2f8533412fdb38244bd5cb35ea773d9758c07225", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebfd9521b5926ac5a1d80b4a2f017e4bb57545de/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebfd9521b5926ac5a1d80b4a2f017e4bb57545de/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ebfd9521b5926ac5a1d80b4a2f017e4bb57545de", "patch": "@@ -10625,31 +10625,8 @@ finish_constructor_body (void)\n static void\n begin_destructor_body (void)\n {\n-  tree if_stmt;\n   tree compound_stmt;\n \n-  /* If the dtor is empty, and we know there is not any possible\n-     way we could use any vtable entries, before they are possibly\n-     set by a base class dtor, we don't have to setup the vtables,\n-     as we know that any base class dtor will set up any vtables\n-     it needs.  We avoid MI, because one base class dtor can do a\n-     virtual dispatch to an overridden function that would need to\n-     have a non-related vtable set up, we cannot avoid setting up\n-     vtables in that case.  We could change this to see if there\n-     is just one vtable.\n-\n-     ??? In the destructor for a class, the vtables are set\n-     appropriately for that class.  There will be no non-related\n-     vtables.  jason 2001-12-11.  */\n-  if_stmt = begin_if_stmt ();\n-\n-  /* If it is not safe to avoid setting up the vtables, then\n-     someone will change the condition to be boolean_true_node.\n-     (Actually, for now, we do not have code to set the condition\n-     appropriately, so we just assume that we always need to\n-     initialize the vtables.)  */\n-  finish_if_stmt_cond (boolean_true_node, if_stmt);\n-\n   compound_stmt = begin_compound_stmt (0);\n \n   /* Make all virtual function table pointers in non-virtual base\n@@ -10658,8 +10635,6 @@ begin_destructor_body (void)\n   initialize_vtbl_ptrs (current_class_ptr);\n \n   finish_compound_stmt (compound_stmt);\n-  finish_then_clause (if_stmt);\n-  finish_if_stmt (if_stmt);\n \n   /* And insert cleanups for our bases and members so that they\n      will be properly destroyed if we throw.  */"}]}