{"sha": "ab044c7412113ecafc602f51f0764130c0525666", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIwNDRjNzQxMjExM2VjYWZjNjAyZjUxZjA3NjQxMzBjMDUyNTY2Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-01-31T21:27:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-01-31T21:27:42Z"}, "message": "tinfo.h (old abi): #include \"tconfig.h\".\n\n        * tinfo.h (old abi): #include \"tconfig.h\".\n        * tinfo.cc (convert_to_base): Move into old abi section.\n\nFrom-SVN: r31725", "tree": {"sha": "f5eb4226cefecaedd3b029d94178aae9bd7f81c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5eb4226cefecaedd3b029d94178aae9bd7f81c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab044c7412113ecafc602f51f0764130c0525666", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab044c7412113ecafc602f51f0764130c0525666", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab044c7412113ecafc602f51f0764130c0525666", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab044c7412113ecafc602f51f0764130c0525666/comments", "author": null, "committer": null, "parents": [{"sha": "5e19c0539080471ad7097fa5c441031334f12bdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e19c0539080471ad7097fa5c441031334f12bdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e19c0539080471ad7097fa5c441031334f12bdd"}], "stats": {"total": 41, "additions": 20, "deletions": 21}, "files": [{"sha": "98e2b2f0e8ae755f51586b0ffa696837853574dd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab044c7412113ecafc602f51f0764130c0525666/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab044c7412113ecafc602f51f0764130c0525666/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ab044c7412113ecafc602f51f0764130c0525666", "patch": "@@ -1,3 +1,8 @@\n+2000-01-31  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* tinfo.h (old abi): #include \"tconfig.h\".\n+\t* tinfo.cc (convert_to_base): Move into old abi section.\n+\n 2000-01-31  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (BINFO_VIRTUALS): Tweak documentation."}, {"sha": "20e6c9eee11bcc6c0a645cbe671bd34f6e502788", "filename": "gcc/cp/tinfo.cc", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab044c7412113ecafc602f51f0764130c0525666/gcc%2Fcp%2Ftinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab044c7412113ecafc602f51f0764130c0525666/gcc%2Fcp%2Ftinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftinfo.cc?ref=ab044c7412113ecafc602f51f0764130c0525666", "patch": "@@ -31,45 +31,37 @@\n #include \"tinfo.h\"\n #include \"new\"\t\t\t// for placement new\n \n+// This file contains the minimal working set necessary to link with code\n+// that uses virtual functions and -frtti but does not actually use RTTI\n+// functionality.\n+\n+std::type_info::\n+~type_info ()\n+{ }\n+\n+#if !defined(__GXX_ABI_VERSION) || __GXX_ABI_VERSION < 100\n+// original (old) abi\n+\n namespace\n {\n // ADDR is a pointer to an object.  Convert it to a pointer to a base,\n // using OFFSET.\n inline void*\n-convert_to_base (void *addr, bool is_virtual, USItype offset)\n+convert_to_base (void *addr, bool is_virtual, myint32 offset)\n {\n   if (!addr)\n     return NULL;\n \n   if (!is_virtual)\n     return (char *) addr + offset;\n \n-#if defined(__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100\n-  // Under the new ABI, the offset gives us an index into the vtable,\n-  // which contains an offset to the virtual base.  The vptr is always\n-  // the first thing in the object.\n-  std::ptrdiff_t *vtable = *((std::ptrdiff_t **) addr);\n-  return ((char *) addr) + vtable[offset];\n-#else\n   // Under the old ABI, the offset gives us the address of a pointer\n   // to the virtual base.\n   return *((void **) ((char *) addr + offset));\n-#endif\n }\n \n }\n \n-// This file contains the minimal working set necessary to link with code\n-// that uses virtual functions and -frtti but does not actually use RTTI\n-// functionality.\n-\n-std::type_info::\n-~type_info ()\n-{ }\n-\n-#if !defined(__GXX_ABI_VERSION) || __GXX_ABI_VERSION < 100\n-// original (old) abi\n-\n // We can't rely on common symbols being shared between shared objects.\n bool std::type_info::\n operator== (const std::type_info& arg) const"}, {"sha": "3df662dfef238791aafa5e5afa4c8a2902303893", "filename": "gcc/cp/tinfo.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab044c7412113ecafc602f51f0764130c0525666/gcc%2Fcp%2Ftinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab044c7412113ecafc602f51f0764130c0525666/gcc%2Fcp%2Ftinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftinfo.h?ref=ab044c7412113ecafc602f51f0764130c0525666", "patch": "@@ -171,6 +171,8 @@ class __si_type_info : public __user_type_info {\n // type_info for a general class.\n \n // Kludge, kludge, kludge.\n+#include \"tconfig.h\"\n+\n #if BITS_PER_UNIT == 8\n typedef int myint32 __attribute__ ((mode (SI)));\n #elif BITS_PER_UNIT == 16\n@@ -428,6 +430,6 @@ void *__dynamic_cast (const void *src_ptr,    // object started from\n     // -2: src_type is not a public base of dst_type\n     // -3: src_type is a multiple public non-virtual base of dst_type\n \n-}; // namespace std\n+} // namespace std\n \n #endif"}]}