{"sha": "e0ad3e6bd66b1c025cf2666f23596cefc8cde695", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhZDNlNmJkNjZiMWMwMjVjZjI2NjZmMjM1OTZjZWZjOGNkZTY5NQ==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2018-08-15T20:24:57Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2018-08-15T20:24:57Z"}, "message": "rs600.c (rs6000_gimple_fold_builtin): Add entries to allow folding of mergeh() and mergel() for the float and double...\n\n[gcc]\n\n2018-08-07 Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* config/rs6000/rs600.c (rs6000_gimple_fold_builtin): Add entries to\n\tallow folding of mergeh() and mergel() for the float and double types.\n\t(fold_mergehl_helper): Rework to handle building a permute tree\n\tfor float vectors.\n\nFrom-SVN: r263569", "tree": {"sha": "d557a572206602af6dfd90abc4e1906a84359530", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d557a572206602af6dfd90abc4e1906a84359530"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0ad3e6bd66b1c025cf2666f23596cefc8cde695", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0ad3e6bd66b1c025cf2666f23596cefc8cde695", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0ad3e6bd66b1c025cf2666f23596cefc8cde695", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0ad3e6bd66b1c025cf2666f23596cefc8cde695/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8eac4d06438eb3dfe3c7d88b4b5b16ee0f9816b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8eac4d06438eb3dfe3c7d88b4b5b16ee0f9816b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8eac4d06438eb3dfe3c7d88b4b5b16ee0f9816b"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "b257e694abacd9a6e2a0f1c9c34f88d1b5947381", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0ad3e6bd66b1c025cf2666f23596cefc8cde695/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0ad3e6bd66b1c025cf2666f23596cefc8cde695/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0ad3e6bd66b1c025cf2666f23596cefc8cde695", "patch": "@@ -1,3 +1,10 @@\n+2018-08-15 Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* config/rs6000/rs600.c (rs6000_gimple_fold_builtin): Add entries to\n+\tallow folding of mergeh() and mergel() for the float and double types.\n+\t(fold_mergehl_helper): Rework to handle building a permute tree\n+\tfor float vectors.\n+\n 2018-08-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (expand_vec_perm_movs): Enable V4SFmode"}, {"sha": "97b922fa7f4c9654330c0e70b1a94911432e64ef", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0ad3e6bd66b1c025cf2666f23596cefc8cde695/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0ad3e6bd66b1c025cf2666f23596cefc8cde695/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e0ad3e6bd66b1c025cf2666f23596cefc8cde695", "patch": "@@ -15122,20 +15122,36 @@ fold_mergehl_helper (gimple_stmt_iterator *gsi, gimple *stmt, int use_high)\n   tree arg1 = gimple_call_arg (stmt, 1);\n   tree lhs = gimple_call_lhs (stmt);\n   tree lhs_type = TREE_TYPE (lhs);\n-  tree lhs_type_type = TREE_TYPE (lhs_type);\n   int n_elts = TYPE_VECTOR_SUBPARTS (lhs_type);\n   int midpoint = n_elts / 2;\n   int offset = 0;\n \n   if (use_high == 1)\n     offset = midpoint;\n \n-  tree_vector_builder elts (lhs_type, VECTOR_CST_NELTS (arg0), 1);\n+  /* The permute_type will match the lhs for integral types.  For double and\n+     float types, the permute type needs to map to the V2 or V4 type that\n+     matches size.  */\n+  tree permute_type;\n+  if (INTEGRAL_TYPE_P (TREE_TYPE (lhs_type)))\n+    permute_type = lhs_type;\n+  else\n+    {\n+      if (TREE_TYPE (lhs_type) == TREE_TYPE (V2DF_type_node))\n+\tpermute_type = V2DI_type_node;\n+      else if (TREE_TYPE (lhs_type) == TREE_TYPE (V4SF_type_node))\n+\tpermute_type = V4SI_type_node;\n+      else\n+\tgcc_unreachable ();\n+    }\n+  tree_vector_builder elts (permute_type, VECTOR_CST_NELTS (arg0), 1);\n \n   for (int i = 0; i < midpoint; i++)\n     {\n-      elts.safe_push (build_int_cst (lhs_type_type, offset + i));\n-      elts.safe_push (build_int_cst (lhs_type_type, offset + n_elts + i));\n+      elts.safe_push (build_int_cst (TREE_TYPE (permute_type),\n+\t\t\t\t     offset + i));\n+      elts.safe_push (build_int_cst (TREE_TYPE (permute_type),\n+\t\t\t\t     offset + n_elts + i));\n     }\n \n   tree permute = elts.build ();\n@@ -15760,6 +15776,8 @@ rs6000_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n     case VSX_BUILTIN_XXMRGLW_4SI:\n     case ALTIVEC_BUILTIN_VMRGLB:\n     case VSX_BUILTIN_VEC_MERGEL_V2DI:\n+    case VSX_BUILTIN_XXMRGLW_4SF:\n+    case VSX_BUILTIN_VEC_MERGEL_V2DF:\n \tfold_mergehl_helper (gsi, stmt, 1);\n \treturn true;\n     /* vec_mergeh (integrals).  */\n@@ -15768,6 +15786,8 @@ rs6000_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n     case VSX_BUILTIN_XXMRGHW_4SI:\n     case ALTIVEC_BUILTIN_VMRGHB:\n     case VSX_BUILTIN_VEC_MERGEH_V2DI:\n+    case VSX_BUILTIN_XXMRGHW_4SF:\n+    case VSX_BUILTIN_VEC_MERGEH_V2DF:\n \tfold_mergehl_helper (gsi, stmt, 0);\n \treturn true;\n "}]}