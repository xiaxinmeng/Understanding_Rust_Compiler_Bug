{"sha": "cc8187fc1da50b99899be52de1ce2aa83483d238", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M4MTg3ZmMxZGE1MGI5OTg5OWJlNTJkZTFjZTJhYTgzNDgzZDIzOA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-10-21T02:42:50Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-10-21T02:42:50Z"}, "message": "Allow -h*, -z*, -G for linker; map -static/-symbolic/-shared into -B switches.;Do not  put .size out for ROSE\n\nFrom-SVN: r5853", "tree": {"sha": "2362b125da20359b95fd9559b2301537347efb09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2362b125da20359b95fd9559b2301537347efb09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc8187fc1da50b99899be52de1ce2aa83483d238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8187fc1da50b99899be52de1ce2aa83483d238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc8187fc1da50b99899be52de1ce2aa83483d238", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8187fc1da50b99899be52de1ce2aa83483d238/comments", "author": null, "committer": null, "parents": [{"sha": "a0292f624b3d61e8e40a7b333dc841620e92c45e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0292f624b3d61e8e40a7b333dc841620e92c45e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0292f624b3d61e8e40a7b333dc841620e92c45e"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "83c93f43c454225b13083885b3eff7a334de7de9", "filename": "gcc/config/i386/osfelf.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8187fc1da50b99899be52de1ce2aa83483d238/gcc%2Fconfig%2Fi386%2Fosfelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8187fc1da50b99899be52de1ce2aa83483d238/gcc%2Fconfig%2Fi386%2Fosfelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfelf.h?ref=cc8187fc1da50b99899be52de1ce2aa83483d238", "patch": "@@ -55,9 +55,14 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n %{mrose:\t%{!noshrlib: %{pic-none: -noshrlib} %{!pic-none: -warn_nopic}} \\\n \t\t%{nostdlib} %{noshrlib} %{glue}} \\\n %{!mrose:\t%{dy} %{dn} %{glue: } \\\n-\t\t%{!dy: %{!dn: \\\n+\t\t%{h*} %{z*} \\\n+\t\t%{static:-dn -Bstatic} \\\n+\t\t%{shared:-G -dy} \\\n+\t\t%{symbolic:-Bsymbolic -G -dy} \\\n+\t\t%{G:-G} \\\n+\t\t%{!dy: %{!dn: %{!static: %{!shared: %{!symbolic: \\\n \t\t\t%{noshrlib: -dn } %{pic-none: -dn } \\\n-\t\t\t%{!noshrlib: %{!pic-none: -dy}}}}}\"\n+\t\t\t%{!noshrlib: %{!pic-none: -dy}}}}}}}}\"\n \n #undef TARGET_VERSION_INTERNAL\n #undef TARGET_VERSION"}, {"sha": "f8d778d2c42372db5c4cb1e64a62563b818f4927", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8187fc1da50b99899be52de1ce2aa83483d238/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8187fc1da50b99899be52de1ce2aa83483d238/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=cc8187fc1da50b99899be52de1ce2aa83483d238", "patch": "@@ -30,6 +30,24 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define WORD_SWITCH_TAKES_ARG(STR)\t\t\t\t\t\\\n  (DEFAULT_WORD_SWITCH_TAKES_ARG (STR) || !strcmp (STR, \"pic-names\"))\n \n+/* This defines which switch letters take arguments.  On svr4, most of\n+   the normal cases (defined in gcc.c) apply, and we also have -h* and\n+   -z* options (for the linker).  */\n+\n+#define SWITCH_TAKES_ARG(CHAR) \\\n+  (   (CHAR) == 'D' \\\n+   || (CHAR) == 'U' \\\n+   || (CHAR) == 'o' \\\n+   || (CHAR) == 'e' \\\n+   || (CHAR) == 'T' \\\n+   || (CHAR) == 'u' \\\n+   || (CHAR) == 'I' \\\n+   || (CHAR) == 'm' \\\n+   || (CHAR) == 'L' \\\n+   || (CHAR) == 'A' \\\n+   || (CHAR) == 'h' \\\n+   || (CHAR) == 'z')\n+\n #define MASK_HALF_PIC     \t0x40000000\t/* Mask for half-pic code */\n #define MASK_HALF_PIC_DEBUG\t0x20000000\t/* Debug flag */\n #define MASK_ELF\t\t0x10000000\t/* ELF not rose */\n@@ -112,9 +130,14 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n %{!melf:\t%{!noshrlib: %{pic-none: -noshrlib} %{!pic-none: -warn_nopic}} \\\n \t\t%{nostdlib} %{noshrlib} %{glue}} \\\n %{melf:\t\t%{dy} %{dn} %{glue: } \\\n-\t\t%{!dy: %{!dn: \\\n+\t\t%{h*} %{z*} \\\n+\t\t%{static:-dn -Bstatic} \\\n+\t\t%{shared:-G -dy} \\\n+\t\t%{symbolic:-Bsymbolic -G -dy} \\\n+\t\t%{G:-G} \\\n+\t\t%{!dy: %{!dn: %{!static: %{!shared: %{!symbolic: \\\n \t\t\t%{noshrlib: -dn } %{pic-none: -dn } \\\n-\t\t\t%{!noshrlib: %{!pic-none: -dy}}}}}\"\n+\t\t\t%{!noshrlib: %{!pic-none: -dy}}}}}}}}\"\n \n #undef  LIB_SPEC\n #define LIB_SPEC \"-lc\"\n@@ -751,7 +774,8 @@ while (0)\n #define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t \\\n do {\t\t\t\t\t\t\t\t\t \\\n      char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t\t \\\n-     if (!flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n+     if (TARGET_ELF\t\t\t\t\t\t\t \\\n+\t && !flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n          && ! AT_END && TOP_LEVEL\t\t\t\t\t \\\n \t && DECL_INITIAL (DECL) == error_mark_node\t\t\t \\\n \t && !size_directive_output)\t\t\t\t\t \\"}]}