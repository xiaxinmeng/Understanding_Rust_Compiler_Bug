{"sha": "f84ae14c4eeb561868722929e229213348d81dc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg0YWUxNGM0ZWViNTYxODY4NzIyOTI5ZTIyOTIxMzM0OGQ4MWRjOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-02-19T02:13:17Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-02-19T02:13:17Z"}, "message": "re PR lto/47788 (New LTO failures)\n\n\n\tPR middle-end/47788\n\t* ipa-inline.c (compute_inline_parameters): Clear disregard_inline_limits\n\twhen function is not inlinable at all.\n\nFrom-SVN: r170300", "tree": {"sha": "45902cef416c7ddecf15996e212ff5325ed2a1ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45902cef416c7ddecf15996e212ff5325ed2a1ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f84ae14c4eeb561868722929e229213348d81dc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84ae14c4eeb561868722929e229213348d81dc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f84ae14c4eeb561868722929e229213348d81dc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84ae14c4eeb561868722929e229213348d81dc9/comments", "author": null, "committer": null, "parents": [{"sha": "6da97b7be46db2e3e27d3817b51833366360e7c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da97b7be46db2e3e27d3817b51833366360e7c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da97b7be46db2e3e27d3817b51833366360e7c2"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "f59306b7927bb2478086b3ce64df6e23f427a9aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84ae14c4eeb561868722929e229213348d81dc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84ae14c4eeb561868722929e229213348d81dc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f84ae14c4eeb561868722929e229213348d81dc9", "patch": "@@ -1,3 +1,9 @@\n+2011-02-18  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/47788\n+\t* ipa-inline.c (compute_inline_parameters): Clear disregard_inline_limits\n+\twhen function is not inlinable at all.\n+\n 2011-02-18  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* config.gcc (hppa[12]*-*-hpux11*): Set extra_parts."}, {"sha": "10e57a8750ecf06e419c9ef400b141d27c7cb96b", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84ae14c4eeb561868722929e229213348d81dc9/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84ae14c4eeb561868722929e229213348d81dc9/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=f84ae14c4eeb561868722929e229213348d81dc9", "patch": "@@ -1990,6 +1990,8 @@ compute_inline_parameters (struct cgraph_node *node)\n \n   /* Can this function be inlined at all?  */\n   node->local.inlinable = tree_inlinable_function_p (node->decl);\n+  if (!node->local.inlinable)\n+    node->local.disregard_inline_limits = 0;\n \n   /* Inlinable functions always can change signature.  */\n   if (node->local.inlinable)"}]}