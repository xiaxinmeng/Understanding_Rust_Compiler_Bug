{"sha": "e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI0NDEwMjFhODVkNzdmODkxNWVlNGI1ZmI4MDQ2YmI4MmM3ZjkxYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T13:33:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T13:33:53Z"}, "message": "[multiple changes]\n\n2013-04-11  Pascal Obry  <obry@adacore.com>\n\n\t* gnat_ugn.texi: Remove obsolete comment about DLL calling\n\tconvention.\n\n2013-04-11  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch6.adb (Expand_Call): For the call to the target primitive\n\tof an interface thunks do not compute the extra actuals; just\n\tpropagate the extra actuals received by the thunk.\n\t* exp_disp.adb (Expand_Interface_Thunk): Decorate new attribute\n\tThunk_Entity.\n\t* sem_ch6.adb (Create_Extra_Formals): Do not generate extra\n\tformals in interface thunks whose target primitive has no extra\n\tformals.\n\n2013-04-11  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma): Detect\n\ta renaming by looking at the Renamed_Object attribute.\n\t(Is_Renaming): Removed.\n\n2013-04-11  Vincent Celier  <celier@adacore.com>\n\n\t* prj-env.adb (Initialize_Default_Project_Path): Take\n\tinto account a project path file, specified by environment\n\tvariable GPR_PROJECT_PATH_FILE, before taking into account\n\tGPR_PROJECT_PATH.\n\t* projects.texi: Add documentation for GPR_PROJECT_PATH_FILE\n\n2013-04-11  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-cdlili.adb, a-cdlili.ads, a-cihama.adb, a-cihama.ads, a-coinve.adb,\n\ta-coinve.ads, a-ciorse.adb, a-ciorse.ads, a-coorma.adb, a-coorma.ads,\n\ta-cfdlli.adb, a-cfdlli.ads, a-cborma.adb, a-cborma.ads, a-cidlli.adb,\n\ta-cidlli.ads, a-ciormu.adb, a-ciormu.ads, a-cihase.adb, a-cihase.ads,\n\ta-cohama.adb, a-cohama.ads, a-coorse.adb, a-coorse.ads, a-cbhama.adb,\n\ta-cbhama.ads, a-cborse.adb, a-cborse.ads, a-ciorma.adb, a-cobove.adb,\n\ta-ciorma.ads, a-cobove.ads, a-coormu.adb, a-coormu.ads, a-cohase.adb,\n\ta-cohase.ads, a-cbdlli.adb, a-cbdlli.ads, a-cbhase.adb, a-cbhase.ads:\n\tMove Iterator operations from body to private part of spec.\n\nFrom-SVN: r197797", "tree": {"sha": "dcfe6552cae9ec8262a7e4cb2f72cc082d3b06d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcfe6552cae9ec8262a7e4cb2f72cc082d3b06d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/comments", "author": null, "committer": null, "parents": [{"sha": "a96157e6ace9ca07460ab73739bd7b9c33a084ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96157e6ace9ca07460ab73739bd7b9c33a084ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a96157e6ace9ca07460ab73739bd7b9c33a084ef"}], "stats": {"total": 1000, "additions": 560, "deletions": 440}, "files": [{"sha": "9628a886ba1141bfe291e33138591b0e6507dc0b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -1,3 +1,45 @@\n+2013-04-11  Pascal Obry  <obry@adacore.com>\n+\n+\t* gnat_ugn.texi: Remove obsolete comment about DLL calling\n+\tconvention.\n+\n+2013-04-11  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Call): For the call to the target primitive\n+\tof an interface thunks do not compute the extra actuals; just\n+\tpropagate the extra actuals received by the thunk.\n+\t* exp_disp.adb (Expand_Interface_Thunk): Decorate new attribute\n+\tThunk_Entity.\n+\t* sem_ch6.adb (Create_Extra_Formals): Do not generate extra\n+\tformals in interface thunks whose target primitive has no extra\n+\tformals.\n+\n+2013-04-11  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Detect\n+\ta renaming by looking at the Renamed_Object attribute.\n+\t(Is_Renaming): Removed.\n+\n+2013-04-11  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-env.adb (Initialize_Default_Project_Path): Take\n+\tinto account a project path file, specified by environment\n+\tvariable GPR_PROJECT_PATH_FILE, before taking into account\n+\tGPR_PROJECT_PATH.\n+\t* projects.texi: Add documentation for GPR_PROJECT_PATH_FILE\n+\n+2013-04-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-cdlili.adb, a-cdlili.ads, a-cihama.adb, a-cihama.ads, a-coinve.adb,\n+\ta-coinve.ads, a-ciorse.adb, a-ciorse.ads, a-coorma.adb, a-coorma.ads,\n+\ta-cfdlli.adb, a-cfdlli.ads, a-cborma.adb, a-cborma.ads, a-cidlli.adb,\n+\ta-cidlli.ads, a-ciormu.adb, a-ciormu.ads, a-cihase.adb, a-cihase.ads,\n+\ta-cohama.adb, a-cohama.ads, a-coorse.adb, a-coorse.ads, a-cbhama.adb,\n+\ta-cbhama.ads, a-cborse.adb, a-cborse.ads, a-ciorma.adb, a-cobove.adb,\n+\ta-ciorma.ads, a-cobove.ads, a-coormu.adb, a-coormu.ads, a-cohase.adb,\n+\ta-cohase.ads, a-cbdlli.adb, a-cbdlli.ads, a-cbhase.adb, a-cbhase.ads:\n+\tMove Iterator operations from body to private part of spec.\n+\n 2013-04-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* ttypes.ads, get_targ.ads: More minor rewording of comments."}, {"sha": "36b9b81e83b5d4bdd037bfedd15bcd2ef3115579", "filename": "gcc/ada/a-cbdlli.adb", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbdlli.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -27,32 +27,10 @@\n -- This unit was originally developed by Matthew J Heaney.                  --\n ------------------------------------------------------------------------------\n \n-with Ada.Finalization; use Ada.Finalization;\n-\n with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Doubly_Linked_Lists is\n \n-   type Iterator is new Limited_Controlled and\n-     List_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : List_Access;\n-      Node      : Count_Type;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "291c1e0eb7206149ef9842f8cb53ab74360a0bf2", "filename": "gcc/ada/a-cbdlli.ads", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbdlli.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -34,6 +34,7 @@\n with Ada.Iterator_Interfaces;\n \n private with Ada.Streams;\n+private with Ada.Finalization;\n \n generic\n    type Element_Type is private;\n@@ -248,6 +249,7 @@ private\n    pragma Inline (Previous);\n \n    use Ada.Streams;\n+   use Ada.Finalization;\n \n    type Node_Type is record\n       Prev    : Count_Type'Base;\n@@ -334,4 +336,24 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, 0);\n \n+   type Iterator is new Limited_Controlled and\n+     List_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : List_Access;\n+      Node      : Count_Type;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Bounded_Doubly_Linked_Lists;"}, {"sha": "f4a953c1401a0be493686a2e1cac5f5b7b912090", "filename": "gcc/ada/a-cbhama.adb", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,26 +34,11 @@ with Ada.Containers.Hash_Tables.Generic_Bounded_Keys;\n pragma Elaborate_All (Ada.Containers.Hash_Tables.Generic_Bounded_Keys);\n \n with Ada.Containers.Prime_Numbers;  use Ada.Containers.Prime_Numbers;\n-with Ada.Finalization;              use Ada.Finalization;\n \n with System;  use type System.Address;\n \n package body Ada.Containers.Bounded_Hashed_Maps is\n \n-   type Iterator is new Limited_Controlled and\n-     Map_Iterator_Interfaces.Forward_Iterator with\n-   record\n-      Container : Map_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "076fac240e1c868cc567cc4f01f51ceb4b91a980", "filename": "gcc/ada/a-cbhama.ads", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,6 +35,7 @@ with Ada.Iterator_Interfaces;\n \n private with Ada.Containers.Hash_Tables;\n private with Ada.Streams;\n+private with Ada.Finalization;\n \n generic\n    type Key_Type is private;\n@@ -339,6 +340,7 @@ private\n \n    use HT_Types;\n    use Ada.Streams;\n+   use Ada.Finalization;\n \n    procedure Write\n      (Stream    : not null access Root_Stream_Type'Class;\n@@ -412,5 +414,18 @@ private\n      (Hash_Table_Type with Capacity => 0, Modulus => 0);\n \n    No_Element : constant Cursor := (Container => null, Node => 0);\n+   type Iterator is new Limited_Controlled and\n+     Map_Iterator_Interfaces.Forward_Iterator with\n+   record\n+      Container : Map_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n \n end Ada.Containers.Bounded_Hashed_Maps;"}, {"sha": "99efc1dcf795978081e91a1e0c9ebe4ce49c77d6", "filename": "gcc/ada/a-cbhase.adb", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhase.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,26 +34,11 @@ with Ada.Containers.Hash_Tables.Generic_Bounded_Keys;\n pragma Elaborate_All (Ada.Containers.Hash_Tables.Generic_Bounded_Keys);\n \n with Ada.Containers.Prime_Numbers; use Ada.Containers.Prime_Numbers;\n-with Ada.Finalization;             use Ada.Finalization;\n \n with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Hashed_Sets is\n \n-   type Iterator is new Limited_Controlled and\n-     Set_Iterator_Interfaces.Forward_Iterator with\n-   record\n-      Container : Set_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "5de5d2832ecf563bcac9d808a89624491b259c56", "filename": "gcc/ada/a-cbhase.ads", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cbhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhase.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,6 +35,7 @@ with Ada.Iterator_Interfaces;\n \n private with Ada.Containers.Hash_Tables;\n private with Ada.Streams;\n+private with Ada.Finalization; use Ada.Finalization;\n \n generic\n    type Element_Type is private;\n@@ -537,4 +538,18 @@ private\n \n    No_Element : constant Cursor := (Container => null, Node => 0);\n \n+   type Iterator is new Limited_Controlled and\n+     Set_Iterator_Interfaces.Forward_Iterator with\n+   record\n+      Container : Set_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Bounded_Hashed_Sets;"}, {"sha": "f508fc5642cd51bd0f6218950ed503c3a6a084b6", "filename": "gcc/ada/a-cborma.adb", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cborma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cborma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborma.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,32 +35,10 @@ with Ada.Containers.Red_Black_Trees.Generic_Bounded_Keys;\n pragma Elaborate_All\n   (Ada.Containers.Red_Black_Trees.Generic_Bounded_Keys);\n \n-with Ada.Finalization; use Ada.Finalization;\n-\n with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Ordered_Maps is\n \n-   type Iterator is new Limited_Controlled and\n-     Map_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Map_Access;\n-      Node      : Count_Type;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------------\n    -- Node Access Subprograms --\n    -----------------------------"}, {"sha": "2c2a8a50e1b7a9d0415d6ad38b6bf787cc3b7f4c", "filename": "gcc/ada/a-cborma.ads", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cborma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cborma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborma.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,6 +35,7 @@ with Ada.Iterator_Interfaces;\n \n private with Ada.Containers.Red_Black_Trees;\n private with Ada.Streams;\n+private with Ada.Finalization;\n \n generic\n    type Key_Type is private;\n@@ -315,4 +316,26 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, 0);\n \n+   use Ada.Finalization;\n+\n+   type Iterator is new Limited_Controlled and\n+     Map_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Map_Access;\n+      Node      : Count_Type;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Bounded_Ordered_Maps;"}, {"sha": "eacd3eb7442dc8f58dc1db688ebc7f81d110c9c5", "filename": "gcc/ada/a-cborse.adb", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cborse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cborse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborse.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -38,32 +38,10 @@ with Ada.Containers.Red_Black_Trees.Generic_Bounded_Set_Operations;\n pragma Elaborate_All\n   (Ada.Containers.Red_Black_Trees.Generic_Bounded_Set_Operations);\n \n-with Ada.Finalization; use Ada.Finalization;\n-\n with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Ordered_Sets is\n \n-   type Iterator is new Limited_Controlled and\n-     Set_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Set_Access;\n-      Node      : Count_Type;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    ------------------------------\n    -- Access to Fields of Node --\n    ------------------------------"}, {"sha": "d22ef54b21b9ff18bac66eadb185bace1b64a56b", "filename": "gcc/ada/a-cborse.ads", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cborse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cborse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborse.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,6 +35,7 @@ with Ada.Iterator_Interfaces;\n \n private with Ada.Containers.Red_Black_Trees;\n private with Ada.Streams;\n+private with Ada.Finalization;\n \n generic\n    type Element_Type is private;\n@@ -374,4 +375,26 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, 0);\n \n+   use Ada.Finalization;\n+\n+   type Iterator is new Limited_Controlled and\n+     Set_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Set_Access;\n+      Node      : Count_Type;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Bounded_Ordered_Sets;"}, {"sha": "9bd8899e2dd1c3a328c0befce44157ef9226f443", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -33,26 +33,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Doubly_Linked_Lists is\n \n-   type Iterator is new Limited_Controlled and\n-     List_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : List_Access;\n-      Node      : Node_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "c99e7350afc2e4c9ce2d2655ad1d9a91e5251aca", "filename": "gcc/ada/a-cdlili.ads", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cdlili.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cdlili.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -358,4 +358,24 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n+   type Iterator is new Limited_Controlled and\n+     List_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : List_Access;\n+      Node      : Node_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Doubly_Linked_Lists;"}, {"sha": "f0ed99871186ffbe83643c9f9f90b869facd4796", "filename": "gcc/ada/a-cfdlli.adb", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cfdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cfdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,30 +26,9 @@\n ------------------------------------------------------------------------------\n \n with System;  use type System.Address;\n-with Ada.Finalization;\n \n package body Ada.Containers.Formal_Doubly_Linked_Lists is\n \n-   type Iterator is new Ada.Finalization.Limited_Controlled and\n-     List_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : List_Access;\n-      Node      : Count_Type;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "58a67fae177c87626cdaefd2f9799556b7fa7456", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -52,7 +52,7 @@\n --    See detailed specifications for these subprograms\n \n private with Ada.Streams;\n-with Ada.Containers;\n+private with Ada.Finalization;\n with Ada.Iterator_Interfaces;\n \n generic\n@@ -326,4 +326,26 @@ private\n \n    No_Element : constant Cursor := (Node => 0);\n \n+   use Ada.Finalization;\n+\n+   type Iterator is new Limited_Controlled and\n+     List_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : List_Access;\n+      Node      : Count_Type;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Formal_Doubly_Linked_Lists;"}, {"sha": "04d0597a22c50b537b0d288f4447549204e2fb01", "filename": "gcc/ada/a-cidlli.adb", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -36,26 +36,6 @@ package body Ada.Containers.Indefinite_Doubly_Linked_Lists is\n    procedure Free is\n      new Ada.Unchecked_Deallocation (Element_Type, Element_Access);\n \n-   type Iterator is new Limited_Controlled and\n-     List_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : List_Access;\n-      Node      : Node_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "a7e133c303d474e5f532545cba1037ffa2f04557", "filename": "gcc/ada/a-cidlli.ads", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cidlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cidlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -352,4 +352,24 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n+   type Iterator is new Limited_Controlled and\n+     List_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : List_Access;\n+      Node      : Node_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Indefinite_Doubly_Linked_Lists;"}, {"sha": "e3e3d5ee43da480ccaed4ec4b1b5c3fb7d0d5621", "filename": "gcc/ada/a-cihama.adb", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,20 +45,6 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n    procedure Free_Element is\n       new Ada.Unchecked_Deallocation (Element_Type, Element_Access);\n \n-   type Iterator is new Limited_Controlled and\n-     Map_Iterator_Interfaces.Forward_Iterator with\n-   record\n-      Container : Map_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "6e2df212a22bf602c3f18f4cb20cec05612acb05", "filename": "gcc/ada/a-cihama.ads", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cihama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cihama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -418,4 +418,18 @@ private\n \n    No_Element : constant Cursor := (Container => null, Node => null);\n \n+   type Iterator is new Limited_Controlled and\n+     Map_Iterator_Interfaces.Forward_Iterator with\n+   record\n+      Container : Map_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Indefinite_Hashed_Maps;"}, {"sha": "7a70bf65a871213047f5c63cdc27fef4736e23f0", "filename": "gcc/ada/a-cihase.adb", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cihase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cihase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,20 +41,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Hashed_Sets is\n \n-   type Iterator is new Limited_Controlled and\n-     Set_Iterator_Interfaces.Forward_Iterator with\n-   record\n-      Container : Set_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "2c4dec59996941dc279e31d6802507477a55f9c9", "filename": "gcc/ada/a-cihase.ads", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cihase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cihase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -541,4 +541,18 @@ private\n \n    No_Element : constant Cursor := (Container => null, Node => null);\n \n+   type Iterator is new Limited_Controlled and\n+     Set_Iterator_Interfaces.Forward_Iterator with\n+   record\n+      Container : Set_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Indefinite_Hashed_Sets;"}, {"sha": "b836dc69fd091a46f4c9a896b98831914fc6a1fc", "filename": "gcc/ada/a-ciorma.adb", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,26 +40,6 @@ with System; use type System.Address;\n package body Ada.Containers.Indefinite_Ordered_Maps is\n    pragma Suppress (All_Checks);\n \n-   type Iterator is new Limited_Controlled and\n-     Map_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Map_Access;\n-      Node      : Node_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------------\n    -- Node Access Subprograms --\n    -----------------------------"}, {"sha": "e414d39cf71e81d64052f9fb603087edf96784c2", "filename": "gcc/ada/a-ciorma.ads", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -353,4 +353,24 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n+   type Iterator is new Limited_Controlled and\n+     Map_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Map_Access;\n+      Node      : Node_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Indefinite_Ordered_Maps;"}, {"sha": "2bc1200014bfbb3a8c786a07b4ce183fe5872963", "filename": "gcc/ada/a-ciormu.adb", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,26 +42,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Ordered_Multisets is\n \n-   type Iterator is new Limited_Controlled and\n-     Set_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Set_Access;\n-      Node      : Node_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------------\n    -- Node Access Subprograms --\n    -----------------------------"}, {"sha": "575d5d8321ec7871799da1e8207745022956e415", "filename": "gcc/ada/a-ciormu.ads", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -508,4 +508,24 @@ private\n                                            Busy   => 0,\n                                            Lock   => 0));\n \n+   type Iterator is new Limited_Controlled and\n+     Set_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Set_Access;\n+      Node      : Node_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Indefinite_Ordered_Multisets;"}, {"sha": "2f8820cb952362bdb5794051b2179ef4baa817a8", "filename": "gcc/ada/a-ciorse.adb", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -42,26 +42,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Indefinite_Ordered_Sets is\n \n-   type Iterator is new Limited_Controlled and\n-     Set_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Set_Access;\n-      Node      : Node_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "0dba13e42ed75c88e67390af4a7568b3562ff79b", "filename": "gcc/ada/a-ciorse.ads", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-ciorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -416,4 +416,24 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n+   type Iterator is new Limited_Controlled and\n+     Set_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Set_Access;\n+      Node      : Node_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Indefinite_Ordered_Sets;"}, {"sha": "c2790517e017994e869e74965a662db85cd2d428", "filename": "gcc/ada/a-cobove.adb", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cobove.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -28,32 +28,11 @@\n ------------------------------------------------------------------------------\n \n with Ada.Containers.Generic_Array_Sort;\n-with Ada.Finalization; use Ada.Finalization;\n \n with System; use type System.Address;\n \n package body Ada.Containers.Bounded_Vectors is\n \n-   type Iterator is new Limited_Controlled and\n-     Vector_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Vector_Access;\n-      Index     : Index_Type'Base;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "267c64de4255b94a6e40ababc4837de3e19a086b", "filename": "gcc/ada/a-cobove.ads", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cobove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cobove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cobove.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -34,6 +34,7 @@\n with Ada.Iterator_Interfaces;\n \n private with Ada.Streams;\n+private with Ada.Finalization;\n \n generic\n    type Index_Type is range <>;\n@@ -364,6 +365,7 @@ private\n    pragma Inline (Previous);\n \n    use Ada.Streams;\n+   use Ada.Finalization;\n \n    type Elements_Array is array (Count_Type range <>) of aliased Element_Type;\n    function \"=\" (L, R : Elements_Array) return Boolean is abstract;\n@@ -441,4 +443,24 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, Index_Type'First);\n \n+   type Iterator is new Limited_Controlled and\n+     Vector_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Vector_Access;\n+      Index     : Index_Type'Base;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Bounded_Vectors;"}, {"sha": "6af16eec227645e561b0fdf57a9c0c5a9560efb6", "filename": "gcc/ada/a-cohama.adb", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,20 +39,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Hashed_Maps is\n \n-   type Iterator is new Limited_Controlled and\n-     Map_Iterator_Interfaces.Forward_Iterator with\n-   record\n-      Container : Map_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "540e24af19d67f9abfc3467dc1ad809a16d1d7c0", "filename": "gcc/ada/a-cohama.ads", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -424,4 +424,18 @@ private\n \n    No_Element : constant Cursor := (Container => null, Node => null);\n \n+   type Iterator is new Limited_Controlled and\n+     Map_Iterator_Interfaces.Forward_Iterator with\n+   record\n+      Container : Map_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Hashed_Maps;"}, {"sha": "f9e1b2aa8c09a9d88569b247223e92625a277329", "filename": "gcc/ada/a-cohase.adb", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,17 +41,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Hashed_Sets is\n \n-   type Iterator is limited new\n-     Set_Iterator_Interfaces.Forward_Iterator with record\n-        Container : Set_Access;\n-     end record;\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "2931800aaf883ef0512f4c49363cfcf3d428cfa2", "filename": "gcc/ada/a-cohase.ads", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -543,4 +543,15 @@ private\n \n    No_Element : constant Cursor := (Container => null, Node => null);\n \n+   type Iterator is limited new\n+     Set_Iterator_Interfaces.Forward_Iterator with record\n+        Container : Set_Access;\n+     end record;\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Hashed_Sets;"}, {"sha": "cff3a286edb47b62f909d48c1ba3949a276aa6dc", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -40,26 +40,6 @@ package body Ada.Containers.Indefinite_Vectors is\n    procedure Free is\n      new Ada.Unchecked_Deallocation (Element_Type, Element_Access);\n \n-   type Iterator is new Limited_Controlled and\n-     Vector_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Vector_Access;\n-      Index     : Index_Type'Base;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    ---------\n    -- \"&\" --\n    ---------"}, {"sha": "2c841671af422c5a6aa2956db63a9ec6f4f821bc", "filename": "gcc/ada/a-coinve.ads", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -463,4 +463,24 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, Index_Type'First);\n \n+   type Iterator is new Limited_Controlled and\n+     Vector_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Vector_Access;\n+      Index     : Index_Type'Base;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Indefinite_Vectors;"}, {"sha": "52025bb5c2c0eac8d4dda2643b8e1adbf8f57570", "filename": "gcc/ada/a-coorma.adb", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,26 +39,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Ordered_Maps is\n \n-   type Iterator is new Limited_Controlled and\n-     Map_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Map_Access;\n-      Node      : Node_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------------\n    -- Node Access Subprograms --\n    -----------------------------"}, {"sha": "2a642ac47cb7aa6f97d90e46cb51d686c00fa159", "filename": "gcc/ada/a-coorma.ads", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -354,4 +354,24 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n+   type Iterator is new Limited_Controlled and\n+     Map_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Map_Access;\n+      Node      : Node_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Ordered_Maps;"}, {"sha": "a3c5ab5c97e9f03f68e8ec71197cc939b7cad4e3", "filename": "gcc/ada/a-coormu.adb", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,26 +42,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Ordered_Multisets is\n \n-   type Iterator is new Limited_Controlled and\n-     Set_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Set_Access;\n-      Node      : Node_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    -----------------------------\n    -- Node Access Subprograms --\n    -----------------------------"}, {"sha": "8d684741e9452b270751b6d07a5f2d3877c85a33", "filename": "gcc/ada/a-coormu.ads", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -512,4 +512,24 @@ private\n                                            Busy   => 0,\n                                            Lock   => 0));\n \n+   type Iterator is new Limited_Controlled and\n+     Set_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Set_Access;\n+      Node      : Node_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Ordered_Multisets;"}, {"sha": "e7ac52b2325a806af94fdc870d267806604fd37e", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -42,26 +42,6 @@ with System; use type System.Address;\n \n package body Ada.Containers.Ordered_Sets is\n \n-   type Iterator is new Limited_Controlled and\n-     Set_Iterator_Interfaces.Reversible_Iterator with\n-   record\n-      Container : Set_Access;\n-      Node      : Node_Access;\n-   end record;\n-\n-   overriding procedure Finalize (Object : in out Iterator);\n-\n-   overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-\n-   overriding function Next\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n-   overriding function Previous\n-     (Object   : Iterator;\n-      Position : Cursor) return Cursor;\n-\n    ------------------------------\n    -- Access to Fields of Node --\n    ------------------------------"}, {"sha": "cf0110c74c2fe68c2b9969e5fbd379c3fc8ad86d", "filename": "gcc/ada/a-coorse.ads", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.ads?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -399,4 +399,24 @@ private\n \n    No_Element : constant Cursor := Cursor'(null, null);\n \n+   type Iterator is new Limited_Controlled and\n+     Set_Iterator_Interfaces.Reversible_Iterator with\n+   record\n+      Container : Set_Access;\n+      Node      : Node_Access;\n+   end record;\n+\n+   overriding procedure Finalize (Object : in out Iterator);\n+\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n end Ada.Containers.Ordered_Sets;"}, {"sha": "85dc076bacd6392afc39050876970c728d851f79", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -2559,6 +2559,39 @@ package body Exp_Ch6 is\n       --  as we go through the loop, since this is a convenient place to do it.\n       --  (Though it seems that this would be better done in Expand_Actuals???)\n \n+      --  Special case: Thunks must not compute the extra actuals; they must\n+      --  just propagate to the target primitive their extra actuals.\n+\n+      if Is_Thunk (Current_Scope)\n+        and then Thunk_Entity (Current_Scope) = Subp\n+        and then Present (Extra_Formals (Subp))\n+      then\n+         pragma Assert (Present (Extra_Formals (Current_Scope)));\n+\n+         declare\n+            Target_Formal : Entity_Id;\n+            Thunk_Formal  : Entity_Id;\n+\n+         begin\n+            Target_Formal := Extra_Formals (Subp);\n+            Thunk_Formal  := Extra_Formals (Current_Scope);\n+            while Present (Target_Formal) loop\n+               Add_Extra_Actual\n+                 (New_Occurrence_Of (Thunk_Formal, Loc), Thunk_Formal);\n+\n+               Target_Formal := Extra_Formal (Target_Formal);\n+               Thunk_Formal  := Extra_Formal (Thunk_Formal);\n+            end loop;\n+\n+            while Is_Non_Empty_List (Extra_Actuals) loop\n+               Add_Actual_Parameter (Remove_Head (Extra_Actuals));\n+            end loop;\n+\n+            Expand_Actuals (Call_Node, Subp);\n+            return;\n+         end;\n+      end if;\n+\n       Formal := First_Formal (Subp);\n       Actual := First_Actual (Call_Node);\n       Param_Count := 1;"}, {"sha": "b003d854dbdecfba94dba5dde02701737a666d48", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -1886,6 +1886,7 @@ package body Exp_Disp is\n       Set_Ekind (Thunk_Id, Ekind (Prim));\n       Set_Is_Thunk (Thunk_Id);\n       Set_Convention (Thunk_Id, Convention (Prim));\n+      Set_Thunk_Entity (Thunk_Id, Target);\n \n       --  Procedure case\n "}, {"sha": "d84bc04d99bbcbb92ffd55588b4875565023fdf9", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -29729,12 +29729,6 @@ end API;\n @end group\n @end smallexample\n \n-@noindent\n-Note that a variable is\n-@strong{always imported with a DLL convention}. A function\n-can have @code{C} or @code{Stdcall} convention.\n-(@pxref{Windows Calling Conventions}).\n-\n @node Creating an Import Library\n @subsection Creating an Import Library\n @cindex Import library"}, {"sha": "ee4d0396fb23aee01919cf67fbb95541a368eb86", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 57, "deletions": 10, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -23,6 +23,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Text_IO; use Ada.Text_IO;\n+\n with Fmap;\n with Hostparm;\n with Makeutl;  use Makeutl;\n@@ -1895,14 +1897,17 @@ package body Prj.Env is\n       New_Len         : Positive;\n       New_Last        : Positive;\n \n-      Ada_Project_Path : constant String := \"ADA_PROJECT_PATH\";\n-      Gpr_Project_Path : constant String := \"GPR_PROJECT_PATH\";\n-      --  Name of alternate env. variable that contain path name(s) of\n-      --  directories where project files may reside. GPR_PROJECT_PATH has\n-      --  precedence over ADA_PROJECT_PATH.\n-\n-      Gpr_Prj_Path : String_Access;\n-      Ada_Prj_Path : String_Access;\n+      Ada_Project_Path      : constant String := \"ADA_PROJECT_PATH\";\n+      Gpr_Project_Path      : constant String := \"GPR_PROJECT_PATH\";\n+      Gpr_Project_Path_File : constant String := \"GPR_PROJECT_PATH_FILE\";\n+      --  Names of alternate env. variable that contain path name(s) of\n+      --  directories where project files may reside. They are taken into\n+      --  account in this order: GPR_PROJECT_PATH_FILE, GPR_PROJECT_PATH,\n+      --  ADA_PROJECT_PATH.\n+\n+      Gpr_Prj_Path_File : String_Access;\n+      Gpr_Prj_Path      : String_Access;\n+      Ada_Prj_Path      : String_Access;\n       --  The path name(s) of directories where project files may reside.\n       --  May be empty.\n \n@@ -1926,8 +1931,50 @@ package body Prj.Env is\n \n       --  If environment variables are defined and not empty, add their content\n \n-      Gpr_Prj_Path := Getenv (Gpr_Project_Path);\n-      Ada_Prj_Path := Getenv (Ada_Project_Path);\n+      Gpr_Prj_Path_File := Getenv (Gpr_Project_Path_File);\n+      Gpr_Prj_Path      := Getenv (Gpr_Project_Path);\n+      Ada_Prj_Path      := Getenv (Ada_Project_Path);\n+\n+      if Gpr_Prj_Path_File.all /= \"\" then\n+         declare\n+            File : Ada.Text_IO.File_Type;\n+            Line : String (1 .. 10_000);\n+            Last : Natural;\n+\n+            Tmp : String_Access;\n+\n+         begin\n+            Open (File, In_File, Gpr_Prj_Path_File.all);\n+\n+            while not End_Of_File (File) loop\n+               Get_Line (File, Line, Last);\n+\n+               if Last /= 0\n+                 and then (Last = 1 or else Line (1 .. 2) /= \"--\")\n+               then\n+                  Tmp := Self.Path;\n+                  Self.Path :=\n+                    new String'\n+                      (Tmp.all & Path_Separator & Line (1 .. Last));\n+                  Free (Tmp);\n+               end if;\n+\n+               if Current_Verbosity = High then\n+                  Debug_Output (\"Adding directory to Project_Path: \"\"\"\n+                                & Line (1 .. Last) & '\"');\n+               end if;\n+            end loop;\n+\n+            Close (File);\n+\n+         exception\n+            when others =>\n+               Write_Str (\"warning: could not read project path file \"\"\");\n+               Write_Str (Gpr_Prj_Path_File.all);\n+               Write_Line (\"\"\"\");\n+         end;\n+\n+      end if;\n \n       if Gpr_Prj_Path.all /= \"\" then\n          Add_Directories (Self, Gpr_Prj_Path.all);"}, {"sha": "ca477369b13bfb56ab05319adec1949e91192017", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -1209,12 +1209,18 @@ the search stops:\n   current project file.\n \n @item\n-@cindex @code{ADA_PROJECT_PATH}\n+@cindex @code{GPR_PROJECT_PATH_FILE}\n @cindex @code{GPR_PROJECT_PATH}\n+@cindex @code{ADA_PROJECT_PATH}\n   Then it is searched relative to all the directories specified in the\n-  ^environment variables^logical names^ @b{GPR_PROJECT_PATH} and\n-  @b{ADA_PROJECT_PATH} (in that order) if they exist. The former is\n-  recommended, the latter is kept for backward compatibility.\n+  ^environment variables^logical names^ @b{GPR_PROJECT_PATH_FILE},\n+  @b{GPR_PROJECT_PATH} and @b{ADA_PROJECT_PATH} (in that order) if they exist.\n+  The value of @b{GPR_PROJECT_PATH_FILE}, when defined, is the path name of\n+  a text file that contains project directory path names, one per line.\n+  @b{GPR_PROJECT_PATH} and @b{ADA_PROJECT_PATH}, when defined, contain\n+  project directory path names separated by directory separators.\n+  @b{ADA_PROJECT_PATH} is used for compatibility, it is recommended to\n+  use @b{GPR_PROJECT_PATH_FILE} or @b{GPR_PROJECT_PATH}.\n \n @item Finally, it is searched relative to the default project directories.\n   Such directories depends on the tool used. The different locations searched"}, {"sha": "2257f4756b05dac4dbc47a9fd7cf351e34cb2eba", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -7901,6 +7901,13 @@ package body Sem_Ch6 is\n          return;\n       end if;\n \n+      --  No need to generate extra formals in interface thunks whose target\n+      --  primitive has no extra formals.\n+\n+      if Is_Thunk (E) and then No (Extra_Formals (Thunk_Entity (E))) then\n+         return;\n+      end if;\n+\n       --  If this is a derived subprogram then the subtypes of the parent\n       --  subprogram's formal parameters will be used to determine the need\n       --  for extra formals."}, {"sha": "7c27f0f927b2e81ee1ff31ba3641fa8336b5e2d7", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2441021a85d77f8915ee4b5fb8046bb82c7f91b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=e2441021a85d77f8915ee4b5fb8046bb82c7f91b", "patch": "@@ -806,9 +806,6 @@ package body Sem_Prag is\n       --  Returns True if pragma appears within the context clause of a unit,\n       --  and False for any other placement (does not generate any messages).\n \n-      function Is_Renaming (N : Node_Id) return Boolean;\n-      --  Determine whether arbitrary node N is a renaming\n-\n       function Is_Static_String_Expression (Arg : Node_Id) return Boolean;\n       --  Analyzes the argument, and determines if it is a static string\n       --  expression, returns True if so, False if non-static or not String.\n@@ -3016,17 +3013,6 @@ package body Sem_Prag is\n          return True;\n       end Is_In_Context_Clause;\n \n-      -----------------\n-      -- Is_Renaming --\n-      -----------------\n-\n-      function Is_Renaming (N : Node_Id) return Boolean is\n-      begin\n-         return\n-           Is_Entity_Name (N)\n-             and then Present (Renamed_Object (Entity (N)));\n-      end Is_Renaming;\n-\n       ---------------------------------\n       -- Is_Static_String_Expression --\n       ---------------------------------\n@@ -9169,7 +9155,7 @@ package body Sem_Prag is\n                            --  When the item renames an entire object, replace\n                            --  the item with a reference to the object.\n \n-                           if Is_Renaming (Item) then\n+                           if Present (Renamed_Object (Entity (Item))) then\n                               Rewrite (Item,\n                                 New_Reference_To (Item_Id, Sloc (Item)));\n                               Analyze (Item);\n@@ -10884,7 +10870,7 @@ package body Sem_Prag is\n                      --  When the item renames an entire object, replace the\n                      --  item with a reference to the object.\n \n-                     if Is_Renaming (Item) then\n+                     if Present (Renamed_Object (Entity (Item))) then\n                         Rewrite (Item,\n                           New_Reference_To (Item_Id, Sloc (Item)));\n                         Analyze (Item);"}]}