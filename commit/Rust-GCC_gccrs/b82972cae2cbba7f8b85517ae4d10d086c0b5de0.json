{"sha": "b82972cae2cbba7f8b85517ae4d10d086c0b5de0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgyOTcyY2FlMmNiYmE3ZjhiODU1MTdhZTRkMTBkMDg2YzBiNWRlMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-10T03:55:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-10T03:55:48Z"}, "message": "* pt.c (build_non_dependent_expr): Use fold_non_dependent_expr_sfinae.\n\nFrom-SVN: r174883", "tree": {"sha": "5004f20164b9d3e4af698de8de8e259f98c84a1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5004f20164b9d3e4af698de8de8e259f98c84a1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b82972cae2cbba7f8b85517ae4d10d086c0b5de0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82972cae2cbba7f8b85517ae4d10d086c0b5de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82972cae2cbba7f8b85517ae4d10d086c0b5de0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82972cae2cbba7f8b85517ae4d10d086c0b5de0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1623cc545933d93b4b34b3159d03554525f6e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1623cc545933d93b4b34b3159d03554525f6e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1623cc545933d93b4b34b3159d03554525f6e04"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "377780ae3adb53474c4c672a973038ad6de34883", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82972cae2cbba7f8b85517ae4d10d086c0b5de0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82972cae2cbba7f8b85517ae4d10d086c0b5de0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b82972cae2cbba7f8b85517ae4d10d086c0b5de0", "patch": "@@ -1,5 +1,7 @@\n 2011-06-09  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (build_non_dependent_expr): Use fold_non_dependent_expr_sfinae.\n+\n \t* parser.c (cp_parser_constant_expression): Just return the\n \tnon-constant expression.\n "}, {"sha": "ac150cedd64c56caee1e209fb4e18e183070a0f9", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82972cae2cbba7f8b85517ae4d10d086c0b5de0/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82972cae2cbba7f8b85517ae4d10d086c0b5de0/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b82972cae2cbba7f8b85517ae4d10d086c0b5de0", "patch": "@@ -19124,7 +19124,7 @@ build_non_dependent_expr (tree expr)\n   /* Try to get a constant value for all non-type-dependent expressions in\n       order to expose bugs in *_dependent_expression_p and constexpr.  */\n   if (cxx_dialect >= cxx0x)\n-    maybe_constant_value (fold_non_dependent_expr (expr));\n+    maybe_constant_value (fold_non_dependent_expr_sfinae (expr, tf_none));\n #endif\n \n   /* Preserve OVERLOADs; the functions must be available to resolve"}]}