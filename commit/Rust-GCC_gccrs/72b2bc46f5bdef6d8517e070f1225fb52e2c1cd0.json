{"sha": "72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJiMmJjNDZmNWJkZWY2ZDg1MTdlMDcwZjEyMjVmYjUyZTJjMWNkMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-11-25T20:20:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-11-25T20:20:40Z"}, "message": "re PR target/42165 (-masm=intel doesn't know how to print AVX instructions)\n\n\tPR target/42165\n\t* config/i386/i386.c (print_operand): For 32-byte memory use\n\tYMMWORD in -masm=intel mode.  Use TBYTE instead of XWORD.\n\t* config/i386/i386.md (crc32modesuffix): Expand to nothing\n\tin -masm=intel mode.\n\t(sse4_2_crc32di): Print just crc32 instead of crc32q in\n\t-masm=intel mode.\n\t* config/i386/mmx.md (*mmx_pinsrw): Print correct size of\n\tmemory operand in -masm=intel mode.\n\t* config/i386/sse.md (*avx_pinsr<ssevecsize>, *sse4_1_pinsrb,\n\t*sse2_pinsrw): Likewise.\n\t(sse_cvtss2siq, sse_cvtss2siq_2, sse_cvttss2siq): Don't print\n\tq suffix in -masm=intel mode.\n\nFrom-SVN: r154652", "tree": {"sha": "e8f70e4e5e0887a8b8f2955c30b51d23d316cd83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8f70e4e5e0887a8b8f2955c30b51d23d316cd83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a2bbeef66ab5b6d2d2c733ccbed7002933d587d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2bbeef66ab5b6d2d2c733ccbed7002933d587d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a2bbeef66ab5b6d2d2c733ccbed7002933d587d"}], "stats": {"total": 49, "additions": 38, "deletions": 11}, "files": [{"sha": "c59457268006736decd146e91b5cd11fb88b5409", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0", "patch": "@@ -3,6 +3,20 @@\n \t* print-rtl.c (print_rtx): When printing newline, append\n \tprint_rtx_head and indentation after the newline.\n \n+\tPR target/42165\n+\t* config/i386/i386.c (print_operand): For 32-byte memory use\n+\tYMMWORD in -masm=intel mode.  Use TBYTE instead of XWORD.\n+\t* config/i386/i386.md (crc32modesuffix): Expand to nothing\n+\tin -masm=intel mode.\n+\t(sse4_2_crc32di): Print just crc32 instead of crc32q in\n+\t-masm=intel mode.\n+\t* config/i386/mmx.md (*mmx_pinsrw): Print correct size of\n+\tmemory operand in -masm=intel mode.\n+\t* config/i386/sse.md (*avx_pinsr<ssevecsize>, *sse4_1_pinsrb,\n+\t*sse2_pinsrw): Likewise.\n+\t(sse_cvtss2siq, sse_cvtss2siq_2, sse_cvttss2siq): Don't print\n+\tq suffix in -masm=intel mode.\n+\n 2009-11-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/10127"}, {"sha": "f1bb9ec0bdd3d86d16e2b04036cfa82b078ddb59", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0", "patch": "@@ -11842,13 +11842,14 @@ print_operand (FILE *file, rtx x, int code)\n \t    case 2: size = \"WORD\"; break;\n \t    case 4: size = \"DWORD\"; break;\n \t    case 8: size = \"QWORD\"; break;\n-\t    case 12: size = \"XWORD\"; break;\n+\t    case 12: size = \"TBYTE\"; break;\n \t    case 16:\n \t      if (GET_MODE (x) == XFmode)\n-\t\tsize = \"XWORD\";\n+\t\tsize = \"TBYTE\";\n               else\n \t\tsize = \"XMMWORD\";\n               break;\n+\t    case 32: size = \"YMMWORD\"; break;\n \t    default:\n \t      gcc_unreachable ();\n \t    }"}, {"sha": "6059dd4d551976579ca7948469bd3fb24ff7af87", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0", "patch": "@@ -21168,7 +21168,7 @@\n   [(set_attr \"type\" \"multi\")])\n \n (define_mode_iterator CRC32MODE [QI HI SI])\n-(define_mode_attr crc32modesuffix [(QI \"b\") (HI \"w\") (SI \"l\")])\n+(define_mode_attr crc32modesuffix [(QI \"{b}\") (HI \"{w}\") (SI \"{l}\")])\n (define_mode_attr crc32modeconstraint [(QI \"qm\") (HI \"rm\") (SI \"rm\")])\n \n (define_insn \"sse4_2_crc32<mode>\"\n@@ -21199,7 +21199,7 @@\n \t   (match_operand:DI 2 \"nonimmediate_operand\" \"rm\")]\n \t  UNSPEC_CRC32))]\n   \"TARGET_64BIT && (TARGET_SSE4_2 || TARGET_CRC32)\"\n-  \"crc32q\\t{%2, %0|%0, %2}\"\n+  \"crc32{q}\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix_rep\" \"1\")\n    (set_attr \"prefix_extra\" \"1\")"}, {"sha": "b07b5e3a1226a4b1c6b5ac68d4133f7188efa5c9", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0", "patch": "@@ -1250,7 +1250,10 @@\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n {\n   operands[3] = GEN_INT (exact_log2 (INTVAL (operands[3])));\n-  return \"pinsrw\\t{%3, %k2, %0|%0, %k2, %3}\";\n+  if (MEM_P (operands[2]))\n+    return \"pinsrw\\t{%3, %2, %0|%0, %2, %3}\";\n+  else\n+    return \"pinsrw\\t{%3, %k2, %0|%0, %k2, %3}\";\n }\n   [(set_attr \"type\" \"mmxcvt\")\n    (set_attr \"length_immediate\" \"1\")"}, {"sha": "8661b4ab376312cfcdd2eddfdbf4e0ba5f02f5cc", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=72b2bc46f5bdef6d8517e070f1225fb52e2c1cd0", "patch": "@@ -2734,7 +2734,7 @@\n \t     (parallel [(const_int 0)]))]\n \t  UNSPEC_FIX_NOTRUNC))]\n   \"TARGET_SSE && TARGET_64BIT\"\n-  \"%vcvtss2siq\\t{%1, %0|%0, %1}\"\n+  \"%vcvtss2si{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n    (set_attr \"prefix_rep\" \"1\")\n@@ -2746,7 +2746,7 @@\n \t(unspec:DI [(match_operand:SF 1 \"nonimmediate_operand\" \"x,m\")]\n \t\t   UNSPEC_FIX_NOTRUNC))]\n   \"TARGET_SSE && TARGET_64BIT\"\n-  \"%vcvtss2siq\\t{%1, %0|%0, %1}\"\n+  \"%vcvtss2si{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n    (set_attr \"amdfam10_decode\" \"double,double\")\n@@ -2776,7 +2776,7 @@\n \t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,m\")\n \t    (parallel [(const_int 0)]))))]\n   \"TARGET_SSE && TARGET_64BIT\"\n-  \"%vcvttss2siq\\t{%1, %0|%0, %1}\"\n+  \"%vcvttss2si{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"athlon_decode\" \"double,vector\")\n    (set_attr \"amdfam10_decode\" \"double,double\")\n@@ -7127,7 +7127,10 @@\n   \"TARGET_AVX\"\n {\n   operands[3] = GEN_INT (exact_log2 (INTVAL (operands[3])));\n-  return \"vpinsr<ssevecsize>\\t{%3, %k2, %1, %0|%0, %1, %k2, %3}\";\n+  if (MEM_P (operands[2]))\n+    return \"vpinsr<ssevecsize>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n+  else\n+    return \"vpinsr<ssevecsize>\\t{%3, %k2, %1, %0|%0, %1, %k2, %3}\";\n }\n   [(set_attr \"type\" \"sselog\")\n    (set (attr \"prefix_extra\")\n@@ -7148,7 +7151,10 @@\n   \"TARGET_SSE4_1\"\n {\n   operands[3] = GEN_INT (exact_log2 (INTVAL (operands[3])));\n-  return \"pinsrb\\t{%3, %k2, %0|%0, %k2, %3}\";\n+  if (MEM_P (operands[2]))\n+    return \"pinsrb\\t{%3, %2, %0|%0, %2, %3}\";\n+  else\n+    return \"pinsrb\\t{%3, %k2, %0|%0, %k2, %3}\";\n }\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -7165,7 +7171,10 @@\n   \"TARGET_SSE2\"\n {\n   operands[3] = GEN_INT (exact_log2 (INTVAL (operands[3])));\n-  return \"pinsrw\\t{%3, %k2, %0|%0, %k2, %3}\";\n+  if (MEM_P (operands[2]))\n+    return \"pinsrw\\t{%3, %2, %0|%0, %2, %3}\";\n+  else\n+    return \"pinsrw\\t{%3, %k2, %0|%0, %k2, %3}\";\n }\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix_data16\" \"1\")"}]}