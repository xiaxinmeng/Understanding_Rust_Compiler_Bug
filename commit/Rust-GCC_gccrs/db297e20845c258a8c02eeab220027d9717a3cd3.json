{"sha": "db297e20845c258a8c02eeab220027d9717a3cd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIyOTdlMjA4NDVjMjU4YThjMDJlZWFiMjIwMDI3ZDk3MTdhM2NkMw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-07-04T12:28:02Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-07-04T12:28:02Z"}, "message": "re PR target/44643 ([avr] ICE in c-typeck.c)\n\n\tPR target/44643\n\t* config/avr/avr.c (avr_insert_attributes): Use TYPE_READONLY\n\tinstead of TREE_READONLY.\n\nFrom-SVN: r175809", "tree": {"sha": "8c07efed8d3d61f18f4aad4f161d235422578424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c07efed8d3d61f18f4aad4f161d235422578424"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db297e20845c258a8c02eeab220027d9717a3cd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db297e20845c258a8c02eeab220027d9717a3cd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db297e20845c258a8c02eeab220027d9717a3cd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db297e20845c258a8c02eeab220027d9717a3cd3/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f451d14dcc3720d959a95efa6eb1f79ae6edd0ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f451d14dcc3720d959a95efa6eb1f79ae6edd0ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f451d14dcc3720d959a95efa6eb1f79ae6edd0ae"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "1b56a8f79f88b63dd24945a7176324250f3e16e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db297e20845c258a8c02eeab220027d9717a3cd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db297e20845c258a8c02eeab220027d9717a3cd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db297e20845c258a8c02eeab220027d9717a3cd3", "patch": "@@ -1,3 +1,9 @@\n+2011-07-04  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/44643\n+\t* config/avr/avr.c (avr_insert_attributes): Use TYPE_READONLY\n+\tinstead of TREE_READONLY.\n+\n 2011-07-04  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* doc/extend.texi (AVR Built-in Functions): Update documentation"}, {"sha": "89da4fbe6495c642e3ae67cec264491a205b0966", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db297e20845c258a8c02eeab220027d9717a3cd3/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db297e20845c258a8c02eeab220027d9717a3cd3/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=db297e20845c258a8c02eeab220027d9717a3cd3", "patch": "@@ -5030,7 +5030,19 @@ avr_insert_attributes (tree node, tree *attributes)\n       && (TREE_STATIC (node) || DECL_EXTERNAL (node))\n       && avr_progmem_p (node, *attributes))\n     {\n-      if (TREE_READONLY (node)) \n+      tree node0 = node;\n+\n+      /* For C++, we have to peel arrays in order to get correct\n+         determination of readonlyness.  */\n+      \n+      do\n+        node0 = TREE_TYPE (node0);\n+      while (TREE_CODE (node0) == ARRAY_TYPE);\n+\n+      if (error_mark_node == node0)\n+        return;\n+      \n+      if (TYPE_READONLY (node0))\n         {\n           static const char dsec[] = \".progmem.data\";\n "}]}