{"sha": "b3a68dbae82fa22528936f7eb25c7acab1eaa6d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNhNjhkYmFlODJmYTIyNTI4OTM2ZjdlYjI1YzdhY2FiMWVhYTZkMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-08-29T16:01:59Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-08-29T16:01:59Z"}, "message": "h8300.md (movsi_h8300hs): Optimize loading of several special constants.\n\n\t* h8300.md (movsi_h8300hs): Optimize loading of several\n\tspecial constants.\n\nFrom-SVN: r45261", "tree": {"sha": "f48eccd5737c3ab64c833c6f3e9bab68f7f27887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f48eccd5737c3ab64c833c6f3e9bab68f7f27887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0/comments", "author": null, "committer": null, "parents": [{"sha": "45a4bc1dc5a87d97635627568444a71525e711f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45a4bc1dc5a87d97635627568444a71525e711f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45a4bc1dc5a87d97635627568444a71525e711f1"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "f245fa60c18ce3ebe2a94721c1fe7a0c90e03f54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3a68dbae82fa22528936f7eb25c7acab1eaa6d0", "patch": "@@ -1,3 +1,8 @@\n+2001-08-29  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* h8300.md (movsi_h8300hs): Optimize loading of several\n+\tspecial constants.\n+\n 2001-08-29  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/lib1funcs.asm: Fix comment typos."}, {"sha": "216524ec070f277cf6a2283893e5f51079931289", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3a68dbae82fa22528936f7eb25c7acab1eaa6d0/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=b3a68dbae82fa22528936f7eb25c7acab1eaa6d0", "patch": "@@ -436,12 +436,31 @@\n \t      return \\\"sub.l\\\\t%S0,%S0\\;add.b\\\\t%1,%x0\\\";\n \t    }\n \n-\t  /* Now look for small negative numbers.  We can subtract them\n-\t     from zero to get the desired constant.  */\n-\t  if (val == -4 || val == -2 || val == -1)\n+\t  /* Look for constants that can be obtained by subs, inc, and\n+             dec to 0.  */\n+\t  switch (val)\n \t    {\n-\t      operands[1] = GEN_INT (-INTVAL (operands[1]));\n-\t      return \\\"sub.l\\\\t%S0,%S0\\;subs\\\\t%1,%S0\\\";\n+\t    case 0xffffffff:\n+\t      return \\\"sub.l\\\\t%S0,%S0\\;subs\\\\t#1,%S0\\\";\n+\t    case 0xfffffffe:\n+\t      return \\\"sub.l\\\\t%S0,%S0\\;subs\\\\t#2,%S0\\\";\n+\t    case 0xfffffffc:\n+\t      return \\\"sub.l\\\\t%S0,%S0\\;subs\\\\t#4,%S0\\\";\n+\n+\t    case 0x0000ffff:\n+\t      return \\\"sub.l\\\\t%S0,%S0\\;dec.w\\\\t#1,%f0\\\";\n+\t    case 0x0000fffe:\n+\t      return \\\"sub.l\\\\t%S0,%S0\\;dec.w\\\\t#2,%f0\\\";\n+\n+\t    case 0xffff0000:\n+\t      return \\\"sub.l\\\\t%S0,%S0\\;dec.w\\\\t#1,%e0\\\";\n+\t    case 0xfffe0000:\n+\t      return \\\"sub.l\\\\t%S0,%S0\\;dec.w\\\\t#2,%e0\\\";\n+\n+\t    case 0x00010000:\n+\t      return \\\"sub.l\\\\t%S0,%S0\\;inc.w\\\\t#1,%e0\\\";\n+\t    case 0x00020000:\n+\t      return \\\"sub.l\\\\t%S0,%S0\\;inc.w\\\\t#2,%e0\\\";\n \t    }\n \t}\n     }"}]}