{"sha": "1494c5345d46b90b685bb310d99fef3a52ad23c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ5NGM1MzQ1ZDQ2YjkwYjY4NWJiMzEwZDk5ZmVmM2E1MmFkMjNjMw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2004-08-27T18:29:52Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-08-27T18:29:52Z"}, "message": "rs6000.c (rs6000_override_options): Increase maximum skip to 15.\n\n\t* config/rs6000/rs6000.c (rs6000_override_options): Increase\n\tmaximum skip to 15.  Set function alignment, jump alignment, and\n\tloop alignment to 16 for processors that form dispatch groups.\n\t(rs6000_rtx_costs): Outer code is used.\n\nFrom-SVN: r86670", "tree": {"sha": "8f90c67ff3ca012057d91ec7c43c1b1acf1c19c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f90c67ff3ca012057d91ec7c43c1b1acf1c19c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1494c5345d46b90b685bb310d99fef3a52ad23c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1494c5345d46b90b685bb310d99fef3a52ad23c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1494c5345d46b90b685bb310d99fef3a52ad23c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1494c5345d46b90b685bb310d99fef3a52ad23c3/comments", "author": null, "committer": null, "parents": [{"sha": "50bc768da122bde65bc31bf4054f29603893455a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bc768da122bde65bc31bf4054f29603893455a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50bc768da122bde65bc31bf4054f29603893455a"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "fdf25f2b52def700f68e1e515746a946cf8362e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1494c5345d46b90b685bb310d99fef3a52ad23c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1494c5345d46b90b685bb310d99fef3a52ad23c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1494c5345d46b90b685bb310d99fef3a52ad23c3", "patch": "@@ -1,3 +1,10 @@\n+2004-08-27  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_override_options): Increase\n+\tmaximum skip to 15.  Set function alignment, jump alignment, and\n+\tloop alignment to 16 for processors that form dispatch groups.\n+\t(rs6000_rtx_costs): Outer code is used.\n+\n 2004-08-27  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* stor-layout.c (sizetype_set): Remove."}, {"sha": "0ec9c57c6eb7c8cb0b4573cb83431a7c8c1cfbd5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1494c5345d46b90b685bb310d99fef3a52ad23c3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1494c5345d46b90b685bb310d99fef3a52ad23c3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=1494c5345d46b90b685bb310d99fef3a52ad23c3", "patch": "@@ -1429,9 +1429,23 @@ rs6000_override_options (const char *default_cpu)\n       targetm.asm_out.unaligned_op.di = NULL;\n     }\n \n-  /* Set maximum branch target alignment at two instructions, eight bytes.  */\n-  align_jumps_max_skip = 8;\n-  align_loops_max_skip = 8;\n+  /* Set branch target alignment, if not optimizing for size.  */\n+  if (!optimize_size)\n+    {\n+      if (rs6000_sched_groups)\n+\t{\n+\t  if (align_functions <= 0)\n+\t    align_functions = 16;\n+\t  if (align_jumps <= 0)\n+\t    align_jumps = 16;\n+\t  if (align_loops <= 0)\n+\t    align_loops = 16;\n+\t}\n+      if (align_jumps_max_skip <= 0)\n+\talign_jumps_max_skip = 15;\n+      if (align_loops_max_skip <= 0)\n+\talign_loops_max_skip = 15;\n+    }\n \n   /* Arrange to save and restore machine status around nested functions.  */\n   init_machine_status = rs6000_init_machine_status;\n@@ -17070,8 +17084,7 @@ rs6000_binds_local_p (tree decl)\n    scanned.  In either case, *TOTAL contains the cost result.  */\n \n static bool\n-rs6000_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED,\n-\t\t  int *total)\n+rs6000_rtx_costs (rtx x, int code, int outer_code, int *total)\n {\n   enum machine_mode mode = GET_MODE (x);\n "}]}