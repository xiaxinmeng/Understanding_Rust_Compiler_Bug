{"sha": "923f9dedd65a58b2bd051d7c998373476042baa4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIzZjlkZWRkNjVhNThiMmJkMDUxZDdjOTk4MzczNDc2MDQyYmFhNA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2012-10-27T02:57:50Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2012-10-27T02:57:50Z"}, "message": "Update sparc constraint comments and documentation.\n\n\t* config/sparc/constraints.md: Update unused letter list, move\n\t\"w\" near other memory constraints.  Remove no longer relevant\n\tcomment.\n\t* doc/md.texi: Sync sparc constraint documentation with reality.\n\nFrom-SVN: r192871", "tree": {"sha": "215be93ecbd7f31f624e0cdcec97252fe1ed2aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/215be93ecbd7f31f624e0cdcec97252fe1ed2aaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/923f9dedd65a58b2bd051d7c998373476042baa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923f9dedd65a58b2bd051d7c998373476042baa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/923f9dedd65a58b2bd051d7c998373476042baa4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923f9dedd65a58b2bd051d7c998373476042baa4/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8b15f967690523d441b45f78966c899d92e917e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b15f967690523d441b45f78966c899d92e917e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b15f967690523d441b45f78966c899d92e917e"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "e31a0418093136ff84cce4e07522c79042945c55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923f9dedd65a58b2bd051d7c998373476042baa4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923f9dedd65a58b2bd051d7c998373476042baa4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=923f9dedd65a58b2bd051d7c998373476042baa4", "patch": "@@ -1,3 +1,10 @@\n+2012-10-26  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/constraints.md: Update unused letter list, move\n+\t\"w\" near other memory constraints.  Remove no longer relevant\n+\tcomment.\n+\t* doc/md.texi: Sync sparc constraint documentation with reality.\n+\n 2012-10-26  DJ Delorie  <dj@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_as_legitimate_address): Do not allow"}, {"sha": "71670eedf535f819b5010776ed463aa46bd77201", "filename": "gcc/config/sparc/constraints.md", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923f9dedd65a58b2bd051d7c998373476042baa4/gcc%2Fconfig%2Fsparc%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923f9dedd65a58b2bd051d7c998373476042baa4/gcc%2Fconfig%2Fsparc%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fconstraints.md?ref=923f9dedd65a58b2bd051d7c998373476042baa4", "patch": "@@ -18,7 +18,7 @@\n ;; <http://www.gnu.org/licenses/>.\n \n ;;; Unused letters:\n-;;;    AB                       \n+;;;    AB                  U\n ;;;    a        jkl    q  tuv xyz\n \n \n@@ -44,10 +44,6 @@\n (define_register_constraint \"h\" \"(TARGET_V9 && TARGET_V8PLUS ? I64_REGS : NO_REGS)\"\n  \"64-bit global or out register in V8+ mode\")\n \n-(define_memory_constraint \"w\"\n-  \"A memory with only a base register\"\n-  (match_operand 0 \"mem_noofs_operand\"))\n-\n ;; Floating-point constant constraints\n \n (define_constraint \"G\"\n@@ -107,10 +103,6 @@\n  (and (match_code \"const_int\")\n       (match_test \"ival == -1\")))\n \n-;; Extra constraints\n-;; Our memory extra constraints have to emulate the behavior of 'm' and 'o',\n-;; i.e. accept pseudo-registers during reload.\n-\n (define_constraint \"D\"\n  \"const_vector\"\n   (and (match_code \"const_vector\")\n@@ -144,6 +136,10 @@\n  (and (match_code \"mem\")\n       (match_test \"memory_ok_for_ldd (op)\")))\n \n+(define_memory_constraint \"w\"\n+  \"A memory with only a base register\"\n+  (match_operand 0 \"mem_noofs_operand\"))\n+\n (define_constraint \"Y\"\n  \"The vector zero constant\"\n  (and (match_code \"const_vector\")"}, {"sha": "dfbdc4c290390cf956d5fbced0b015e8ed4ad8ae", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923f9dedd65a58b2bd051d7c998373476042baa4/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923f9dedd65a58b2bd051d7c998373476042baa4/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=923f9dedd65a58b2bd051d7c998373476042baa4", "patch": "@@ -3219,6 +3219,9 @@ when the Visual Instruction Set is available.\n @item h\n 64-bit global or out register for the SPARC-V8+ architecture.\n \n+@item C\n+The constant all-ones, for floating-point.\n+\n @item D\n A vector constant\n \n@@ -3233,10 +3236,12 @@ Zero\n loaded with the @code{sethi} instruction)\n \n @item L\n-A constant in the range supported by @code{movcc} instructions\n+A constant in the range supported by @code{movcc} instructions (11-bit\n+signed immediate)\n \n @item M\n-A constant in the range supported by @code{movrcc} instructions\n+A constant in the range supported by @code{movrcc} instructions (10-bit\n+signed immediate)\n \n @item N\n Same as @samp{K}, except that it verifies that bits that are not in the\n@@ -3252,6 +3257,9 @@ Floating-point zero\n @item H\n Signed 13-bit constant, sign-extended to 32 or 64 bits\n \n+@item P\n+The constant -1\n+\n @item Q\n Floating-point constant whose integral representation can\n be moved into an integer register using a single sethi\n@@ -3270,12 +3278,12 @@ instruction sequence\n @item T\n Memory address aligned to an 8-byte boundary\n \n-@item U\n-Even register\n-\n @item W\n Memory address for @samp{e} constraint registers\n \n+@item w\n+Memory address with only a base register\n+\n @item Y\n Vector zero\n "}]}