{"sha": "566cdc73b667b4de2f1c98458f26e71a2facd2b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY2Y2RjNzNiNjY3YjRkZTJmMWM5ODQ1OGYyNmU3MWEyZmFjZDJiMA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-03-31T14:35:03Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-03-31T14:35:03Z"}, "message": "Add -fpack-struct.\n\nFrom-SVN: r9275", "tree": {"sha": "f2c75cf7bb2136590dae5f5d4bc8703039ed9264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2c75cf7bb2136590dae5f5d4bc8703039ed9264"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/566cdc73b667b4de2f1c98458f26e71a2facd2b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566cdc73b667b4de2f1c98458f26e71a2facd2b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/566cdc73b667b4de2f1c98458f26e71a2facd2b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566cdc73b667b4de2f1c98458f26e71a2facd2b0/comments", "author": null, "committer": null, "parents": [{"sha": "7b09543e23a742fb42db0a0796b73b7b679854b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b09543e23a742fb42db0a0796b73b7b679854b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b09543e23a742fb42db0a0796b73b7b679854b0"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "0fb85cae6c26e32ea8a52ac579bee1895d3ebace", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566cdc73b667b4de2f1c98458f26e71a2facd2b0/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566cdc73b667b4de2f1c98458f26e71a2facd2b0/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=566cdc73b667b4de2f1c98458f26e71a2facd2b0", "patch": "@@ -1083,7 +1083,7 @@ convert.o: convert.c $(CONFIG_H) $(TREE_H) flags.h convert.h\n \n tree.o : tree.c $(CONFIG_H) $(TREE_H) flags.h function.h\n print-tree.o : print-tree.c $(CONFIG_H) $(TREE_H)\n-stor-layout.o : stor-layout.c $(CONFIG_H) $(TREE_H) function.h\n+stor-layout.o : stor-layout.c $(CONFIG_H) $(TREE_H) flags.h function.h\n fold-const.o : fold-const.c $(CONFIG_H) $(TREE_H) flags.h \n toplev.o : toplev.c $(CONFIG_H) $(TREE_H) $(RTL_H) flags.h input.h \\\n    insn-attr.h xcoffout.h defaults.h output.h"}, {"sha": "a1b6738c2f97340d19bddaeae92cf046cb9ed38d", "filename": "gcc/flags.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566cdc73b667b4de2f1c98458f26e71a2facd2b0/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566cdc73b667b4de2f1c98458f26e71a2facd2b0/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=566cdc73b667b4de2f1c98458f26e71a2facd2b0", "patch": "@@ -1,5 +1,5 @@\n /* Compilation switch flag definitions for GNU CC.\n-   Copyright (C) 1987, 1988, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -334,6 +334,9 @@ extern int flag_verbose_asm;\n /* -fgnu-linker specifies use of the GNU linker for initializations.\n    -fno-gnu-linker says that collect will be used.  */\n extern int flag_gnu_linker;\n+\n+/* Tag all structures with __attribute__(packed) */\n+extern int flag_pack_struct;\n \f\n /* Other basic status info about current function.  */\n "}, {"sha": "669a1de2523ee76c4e71020e0b983ba6446bf130", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566cdc73b667b4de2f1c98458f26e71a2facd2b0/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566cdc73b667b4de2f1c98458f26e71a2facd2b0/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=566cdc73b667b4de2f1c98458f26e71a2facd2b0", "patch": "@@ -1,5 +1,5 @@\n /* C-compiler utilities for types and variables storage layout\n-   Copyright (C) 1987, 1988, 1992, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -22,6 +22,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include <stdio.h>\n \n #include \"tree.h\"\n+#include \"flags.h\"\n #include \"function.h\"\n \n #define CEIL(x,y) (((x) + (y) - 1) / (y))\n@@ -241,6 +242,8 @@ layout_decl (decl, known_align)\n       DECL_BIT_FIELD_TYPE (decl) = DECL_BIT_FIELD (decl) ? type : 0;\n       if (maximum_field_alignment != 0)\n \tDECL_ALIGN (decl) = MIN (DECL_ALIGN (decl), maximum_field_alignment);\n+      else if (flag_pack_struct)\n+\tDECL_ALIGN (decl) = MIN (DECL_ALIGN (decl), BITS_PER_UNIT);\n     }\n \n   if (DECL_BIT_FIELD (decl)\n@@ -364,6 +367,8 @@ layout_record (rec)\n \t      int type_align = TYPE_ALIGN (TREE_TYPE (field));\n \t      if (maximum_field_alignment != 0)\n \t\ttype_align = MIN (type_align, maximum_field_alignment);\n+\t      else if (flag_pack_struct)\n+\t\ttype_align = MIN (type_align, BITS_PER_UNIT);\n \n \t      record_align = MAX (record_align, type_align);\n \t    }\n@@ -406,6 +411,7 @@ layout_record (rec)\n \t  && !DECL_PACKED (field)\n \t  /* If #pragma pack is in effect, turn off this feature.  */\n \t  && maximum_field_alignment == 0\n+\t  && !flag_pack_struct\n \t  && !integer_zerop (DECL_SIZE (field)))\n \t{\n \t  int type_align = TYPE_ALIGN (TREE_TYPE (field));\n@@ -440,6 +446,8 @@ layout_record (rec)\n \n \t  if (maximum_field_alignment != 0)\n \t    type_align = MIN (type_align, maximum_field_alignment);\n+\t  else if (flag_pack_struct)\n+\t    type_align = MIN (type_align, BITS_PER_UNIT);\n \n \t  /* A bit field may not span the unit of alignment of its type.\n \t     Advance to next boundary if necessary.  */"}, {"sha": "3b8874c6db3591377f69453a8aa4eec039a1f81e", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566cdc73b667b4de2f1c98458f26e71a2facd2b0/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566cdc73b667b4de2f1c98458f26e71a2facd2b0/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=566cdc73b667b4de2f1c98458f26e71a2facd2b0", "patch": "@@ -513,6 +513,9 @@ int flag_gnu_linker = 0;\n int flag_gnu_linker = 1;\n #endif\n \n+/* Tag all structures with __attribute__(packed) */\n+int flag_pack_struct = 0;\n+\n /* Table of language-independent -f options.\n    STRING is the option name.  VARIABLE is the address of the variable.\n    ON_VALUE is the value to store in VARIABLE\n@@ -558,6 +561,7 @@ struct { char *string; int *variable; int on_value;} f_options[] =\n   {\"inhibit-size-directive\", &flag_inhibit_size_directive, 1},\n   {\"verbose-asm\", &flag_verbose_asm, 1},\n   {\"gnu-linker\", &flag_gnu_linker, 1},\n+  {\"pack-struct\", &flag_pack_struct, 1},\n   {\"bytecode\", &output_bytecode, 1}\n };\n "}]}