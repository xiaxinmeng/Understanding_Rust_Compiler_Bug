{"sha": "1679340f35849566c6a0437fbbfd37fbd0c6b6c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY3OTM0MGYzNTg0OTU2NmM2YTA0MzdmYmJmZDM3ZmJkMGM2YjZjMg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2004-09-28T17:40:56Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2004-09-28T17:40:56Z"}, "message": "re PR java/17586 (kawa build fails with ICE)\n\n2004-09-28  Andrew Haley  <aph@redhat.com>\n\n\tPR java/17586\n\t* jcf-parse.c (load_class): Don't try to read a class that we've\n\talready read.\n\nFrom-SVN: r88239", "tree": {"sha": "d4a6be607900d43739a5e693d31177ebd42ada44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4a6be607900d43739a5e693d31177ebd42ada44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1679340f35849566c6a0437fbbfd37fbd0c6b6c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1679340f35849566c6a0437fbbfd37fbd0c6b6c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1679340f35849566c6a0437fbbfd37fbd0c6b6c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1679340f35849566c6a0437fbbfd37fbd0c6b6c2/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc15e98f650fb1d16c8853ddf0ce586661974604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc15e98f650fb1d16c8853ddf0ce586661974604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc15e98f650fb1d16c8853ddf0ce586661974604"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "eaf591e58b61ed8a636bf7706d926d99515a098a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1679340f35849566c6a0437fbbfd37fbd0c6b6c2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1679340f35849566c6a0437fbbfd37fbd0c6b6c2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1679340f35849566c6a0437fbbfd37fbd0c6b6c2", "patch": "@@ -1,3 +1,9 @@\n+2004-09-28  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/17586\n+\t* jcf-parse.c (load_class): Don't try to read a class that we've\n+\talready read.\n+\n 2004-09-28  Andrew Haley  <aph@redhat.com>\n \n \t* jcf-parse.c (load_class): Back out previous broken patch."}, {"sha": "e1a4bab88c9d3f232174156d1e67e8cd632a8dd1", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1679340f35849566c6a0437fbbfd37fbd0c6b6c2/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1679340f35849566c6a0437fbbfd37fbd0c6b6c2/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=1679340f35849566c6a0437fbbfd37fbd0c6b6c2", "patch": "@@ -567,6 +567,7 @@ load_class (tree class_or_name, int verbose)\n {\n   tree name, saved;\n   int class_loaded;\n+  tree class_decl;\n \n   /* class_or_name can be the name of the class we want to load */\n   if (TREE_CODE (class_or_name) == IDENTIFIER_NODE)\n@@ -577,12 +578,12 @@ load_class (tree class_or_name, int verbose)\n     name = TYPE_NAME (TREE_PURPOSE (class_or_name));\n   /* Or it's a type in the making */\n   else\n-    {\n-      /* If the class is from source code, then it must already be loaded.  */\n-      if (CLASS_FROM_SOURCE_P (class_or_name))\n-        return;\n-      name = DECL_NAME (TYPE_NAME (class_or_name));\n-    }\n+    name = DECL_NAME (TYPE_NAME (class_or_name));\n+\n+  /* If the class is from source code, then it must already be loaded.  */\n+  class_decl = IDENTIFIER_CLASS_VALUE (name);\n+  if (class_decl && CLASS_FROM_SOURCE_P (TREE_TYPE (class_decl)))\n+    return;\n \n   saved = name;\n   while (1)"}]}