{"sha": "4b8a7a6e81b269897cc516db32b7b9e548baf5f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI4YTdhNmU4MWIyNjk4OTdjYzUxNmRiMzJiN2I5ZTU0OGJhZjVmNg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2021-02-01T23:00:23Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2021-02-02T12:14:39Z"}, "message": "aarch64: Relax flags for floating-point builtins to FP where appropriate\n\nThis patch relaxes various floating-point builtins to use the FP flags to signify they\nmade use the FPCR or raise exceptions.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd-builtins.def (fcmla_lane0, fcmla_lane90,\n\tfcmla_lane180, fcmla_lane270, fcmlaq_lane0, fcmlaq_lane90, fcmlaq_lane180,\n\tfcmlaq_lane270, scvtf, ucvtf, fcvtzs, fcvtzu, scvtfsi, scvtfdi, ucvtfsi,\n\tucvtfdi, fcvtzshf, fcvtzuhf, fmlal_lane_low, fmlsl_lane_low,\n\tfmlal_laneq_low, fmlsl_laneq_low, fmlalq_lane_low, fmlslq_lane_low,\n\tfmlalq_laneq_low, fmlslq_laneq_low, fmlal_lane_high, fmlsl_lane_high,\n\tfmlal_laneq_high, fmlsl_laneq_high, fmlalq_lane_high, fmlslq_lane_high,\n\tfmlalq_laneq_high, fmlslq_laneq_high): Use FP flags.", "tree": {"sha": "85abd63bbdab00a28f546a2115f0c04662d7c87e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85abd63bbdab00a28f546a2115f0c04662d7c87e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b8a7a6e81b269897cc516db32b7b9e548baf5f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8a7a6e81b269897cc516db32b7b9e548baf5f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b8a7a6e81b269897cc516db32b7b9e548baf5f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8a7a6e81b269897cc516db32b7b9e548baf5f6/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8062ad468062f40064d2a648f02f993fe0070ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8062ad468062f40064d2a648f02f993fe0070ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8062ad468062f40064d2a648f02f993fe0070ba"}], "stats": {"total": 68, "additions": 34, "deletions": 34}, "files": [{"sha": "d711e5c8b9aac8b4be591081125a09640adcb7d8", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8a7a6e81b269897cc516db32b7b9e548baf5f6/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8a7a6e81b269897cc516db32b7b9e548baf5f6/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=4b8a7a6e81b269897cc516db32b7b9e548baf5f6", "patch": "@@ -344,15 +344,15 @@\n   BUILTIN_VHSDF (TERNOP, fcmla90, 0, FP)\n   BUILTIN_VHSDF (TERNOP, fcmla180, 0, FP)\n   BUILTIN_VHSDF (TERNOP, fcmla270, 0, FP)\n-  BUILTIN_VHSDF (QUADOP_LANE_PAIR, fcmla_lane0, 0, ALL)\n-  BUILTIN_VHSDF (QUADOP_LANE_PAIR, fcmla_lane90, 0, ALL)\n-  BUILTIN_VHSDF (QUADOP_LANE_PAIR, fcmla_lane180, 0, ALL)\n-  BUILTIN_VHSDF (QUADOP_LANE_PAIR, fcmla_lane270, 0, ALL)\n+  BUILTIN_VHSDF (QUADOP_LANE_PAIR, fcmla_lane0, 0, FP)\n+  BUILTIN_VHSDF (QUADOP_LANE_PAIR, fcmla_lane90, 0, FP)\n+  BUILTIN_VHSDF (QUADOP_LANE_PAIR, fcmla_lane180, 0, FP)\n+  BUILTIN_VHSDF (QUADOP_LANE_PAIR, fcmla_lane270, 0, FP)\n \n-  BUILTIN_VQ_HSF (QUADOP_LANE_PAIR, fcmlaq_lane0, 0, ALL)\n-  BUILTIN_VQ_HSF (QUADOP_LANE_PAIR, fcmlaq_lane90, 0, ALL)\n-  BUILTIN_VQ_HSF (QUADOP_LANE_PAIR, fcmlaq_lane180, 0, ALL)\n-  BUILTIN_VQ_HSF (QUADOP_LANE_PAIR, fcmlaq_lane270, 0, ALL)\n+  BUILTIN_VQ_HSF (QUADOP_LANE_PAIR, fcmlaq_lane0, 0, FP)\n+  BUILTIN_VQ_HSF (QUADOP_LANE_PAIR, fcmlaq_lane90, 0, FP)\n+  BUILTIN_VQ_HSF (QUADOP_LANE_PAIR, fcmlaq_lane180, 0, FP)\n+  BUILTIN_VQ_HSF (QUADOP_LANE_PAIR, fcmlaq_lane270, 0, FP)\n \n   BUILTIN_VDQ_I (SHIFTIMM, ashr, 3, NONE)\n   VAR1 (SHIFTIMM, ashr_simd, 0, NONE, di)\n@@ -684,16 +684,16 @@\n   BUILTIN_VSDQ_HSI (QUADOP_LANE, sqrdmlsh_laneq, 0, NONE)\n \n   /* Implemented by <FCVT_F2FIXED/FIXED2F:fcvt_fixed_insn><*><*>3.  */\n-  BUILTIN_VSDQ_HSDI (SHIFTIMM, scvtf, 3, ALL)\n-  BUILTIN_VSDQ_HSDI (FCVTIMM_SUS, ucvtf, 3, ALL)\n-  BUILTIN_VHSDF_HSDF (SHIFTIMM, fcvtzs, 3, ALL)\n-  BUILTIN_VHSDF_HSDF (SHIFTIMM_USS, fcvtzu, 3, ALL)\n-  VAR1 (SHIFTIMM, scvtfsi, 3, ALL, hf)\n-  VAR1 (SHIFTIMM, scvtfdi, 3, ALL, hf)\n-  VAR1 (FCVTIMM_SUS, ucvtfsi, 3, ALL, hf)\n-  VAR1 (FCVTIMM_SUS, ucvtfdi, 3, ALL, hf)\n-  BUILTIN_GPI (SHIFTIMM, fcvtzshf, 3, ALL)\n-  BUILTIN_GPI (SHIFTIMM_USS, fcvtzuhf, 3, ALL)\n+  BUILTIN_VSDQ_HSDI (SHIFTIMM, scvtf, 3, FP)\n+  BUILTIN_VSDQ_HSDI (FCVTIMM_SUS, ucvtf, 3, FP)\n+  BUILTIN_VHSDF_HSDF (SHIFTIMM, fcvtzs, 3, FP)\n+  BUILTIN_VHSDF_HSDF (SHIFTIMM_USS, fcvtzu, 3, FP)\n+  VAR1 (SHIFTIMM, scvtfsi, 3, FP, hf)\n+  VAR1 (SHIFTIMM, scvtfdi, 3, FP, hf)\n+  VAR1 (FCVTIMM_SUS, ucvtfsi, 3, FP, hf)\n+  VAR1 (FCVTIMM_SUS, ucvtfdi, 3, FP, hf)\n+  BUILTIN_GPI (SHIFTIMM, fcvtzshf, 3, FP)\n+  BUILTIN_GPI (SHIFTIMM_USS, fcvtzuhf, 3, FP)\n \n   /* Implemented by aarch64_rsqrte<mode>.  */\n   BUILTIN_VHSDF_HSDF (UNOP, rsqrte, 0, FP)\n@@ -784,29 +784,29 @@\n   VAR1 (TERNOP, fmlalq_high, 0, FP, v4sf)\n   VAR1 (TERNOP, fmlslq_high, 0, FP, v4sf)\n   /* Implemented by aarch64_fml<f16mac1>l_lane_lowv2sf.  */\n-  VAR1 (QUADOP_LANE, fmlal_lane_low, 0, ALL, v2sf)\n-  VAR1 (QUADOP_LANE, fmlsl_lane_low, 0, ALL, v2sf)\n+  VAR1 (QUADOP_LANE, fmlal_lane_low, 0, FP, v2sf)\n+  VAR1 (QUADOP_LANE, fmlsl_lane_low, 0, FP, v2sf)\n   /* Implemented by aarch64_fml<f16mac1>l_laneq_lowv2sf.  */\n-  VAR1 (QUADOP_LANE, fmlal_laneq_low, 0, ALL, v2sf)\n-  VAR1 (QUADOP_LANE, fmlsl_laneq_low, 0, ALL, v2sf)\n+  VAR1 (QUADOP_LANE, fmlal_laneq_low, 0, FP, v2sf)\n+  VAR1 (QUADOP_LANE, fmlsl_laneq_low, 0, FP, v2sf)\n   /* Implemented by aarch64_fml<f16mac1>lq_lane_lowv4sf.  */\n-  VAR1 (QUADOP_LANE, fmlalq_lane_low, 0, ALL, v4sf)\n-  VAR1 (QUADOP_LANE, fmlslq_lane_low, 0, ALL, v4sf)\n+  VAR1 (QUADOP_LANE, fmlalq_lane_low, 0, FP, v4sf)\n+  VAR1 (QUADOP_LANE, fmlslq_lane_low, 0, FP, v4sf)\n   /* Implemented by aarch64_fml<f16mac1>lq_laneq_lowv4sf.  */\n-  VAR1 (QUADOP_LANE, fmlalq_laneq_low, 0, ALL, v4sf)\n-  VAR1 (QUADOP_LANE, fmlslq_laneq_low, 0, ALL, v4sf)\n+  VAR1 (QUADOP_LANE, fmlalq_laneq_low, 0, FP, v4sf)\n+  VAR1 (QUADOP_LANE, fmlslq_laneq_low, 0, FP, v4sf)\n   /* Implemented by aarch64_fml<f16mac1>l_lane_highv2sf.  */\n-  VAR1 (QUADOP_LANE, fmlal_lane_high, 0, ALL, v2sf)\n-  VAR1 (QUADOP_LANE, fmlsl_lane_high, 0, ALL, v2sf)\n+  VAR1 (QUADOP_LANE, fmlal_lane_high, 0, FP, v2sf)\n+  VAR1 (QUADOP_LANE, fmlsl_lane_high, 0, FP, v2sf)\n   /* Implemented by aarch64_fml<f16mac1>l_laneq_highv2sf.  */\n-  VAR1 (QUADOP_LANE, fmlal_laneq_high, 0, ALL, v2sf)\n-  VAR1 (QUADOP_LANE, fmlsl_laneq_high, 0, ALL, v2sf)\n+  VAR1 (QUADOP_LANE, fmlal_laneq_high, 0, FP, v2sf)\n+  VAR1 (QUADOP_LANE, fmlsl_laneq_high, 0, FP, v2sf)\n   /* Implemented by aarch64_fml<f16mac1>lq_lane_highv4sf.  */\n-  VAR1 (QUADOP_LANE, fmlalq_lane_high, 0, ALL, v4sf)\n-  VAR1 (QUADOP_LANE, fmlslq_lane_high, 0, ALL, v4sf)\n+  VAR1 (QUADOP_LANE, fmlalq_lane_high, 0, FP, v4sf)\n+  VAR1 (QUADOP_LANE, fmlslq_lane_high, 0, FP, v4sf)\n   /* Implemented by aarch64_fml<f16mac1>lq_laneq_highv4sf.  */\n-  VAR1 (QUADOP_LANE, fmlalq_laneq_high, 0, ALL, v4sf)\n-  VAR1 (QUADOP_LANE, fmlslq_laneq_high, 0, ALL, v4sf)\n+  VAR1 (QUADOP_LANE, fmlalq_laneq_high, 0, FP, v4sf)\n+  VAR1 (QUADOP_LANE, fmlslq_laneq_high, 0, FP, v4sf)\n \n   /* Implemented by aarch64_<frintnzs_op><mode>.  */\n   BUILTIN_VSFDF (UNOP, frint32z, 0, FP)"}]}