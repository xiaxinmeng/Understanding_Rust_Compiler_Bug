{"sha": "713df810031e8183d0ec88a490a8677ab0932e2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEzZGY4MTAwMzFlODE4M2QwZWM4OGE0OTBhODY3N2FiMDkzMmUyYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-07-06T09:27:10Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-07-06T09:27:10Z"}, "message": "mips.c (compute_frame_size): Restore the original gp_sp_offset for !GENERATE_MIPS16E_SAVE_RESTORE and remove...\n\ngcc/\n\t* config/mips/mips.c (compute_frame_size): Restore the original\n\tgp_sp_offset for !GENERATE_MIPS16E_SAVE_RESTORE and remove the\n\tfp_size term from the GENERATE_MIPS16E_SAVE_RESTORE calculation.\n\tDocument why the difference is needed.\n\nFrom-SVN: r126406", "tree": {"sha": "f74efefd4216ca4b93906516c2a9dc367cea71d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f74efefd4216ca4b93906516c2a9dc367cea71d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/713df810031e8183d0ec88a490a8677ab0932e2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713df810031e8183d0ec88a490a8677ab0932e2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713df810031e8183d0ec88a490a8677ab0932e2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713df810031e8183d0ec88a490a8677ab0932e2c/comments", "author": null, "committer": null, "parents": [{"sha": "b5119fa1391d75ecd9c7e041151acb04bd6c7234", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5119fa1391d75ecd9c7e041151acb04bd6c7234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5119fa1391d75ecd9c7e041151acb04bd6c7234"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "3d7ac29448537b01b0bc3d3db13eab5ec9ba87fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713df810031e8183d0ec88a490a8677ab0932e2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713df810031e8183d0ec88a490a8677ab0932e2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=713df810031e8183d0ec88a490a8677ab0932e2c", "patch": "@@ -1,3 +1,10 @@\n+2007-07-06  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/mips/mips.c (compute_frame_size): Restore the original\n+\tgp_sp_offset for !GENERATE_MIPS16E_SAVE_RESTORE and remove the\n+\tfp_size term from the GENERATE_MIPS16E_SAVE_RESTORE calculation.\n+\tDocument why the difference is needed.\n+\n 2007-07-06  Richard Guenther  <rguenther@suse.de>\n \n \t* c-common.c (boolean_increment): Use correctly typed"}, {"sha": "980c928a10f8d36911966a21426af3ffbc336ba9", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713df810031e8183d0ec88a490a8677ab0932e2c/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713df810031e8183d0ec88a490a8677ab0932e2c/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=713df810031e8183d0ec88a490a8677ab0932e2c", "patch": "@@ -6781,12 +6781,16 @@ compute_frame_size (HOST_WIDE_INT size)\n     {\n       HOST_WIDE_INT offset;\n \n-      /* MIPS16e SAVE and RESTORE instructions require the GP save area\n-\t to be aligned at the high end with any padding at the low end,\n-\t so do it that way all the time.  */\n-      offset = (total_size\n-\t\t- MIPS_STACK_ALIGN (fp_reg_size)\n-\t\t- GET_MODE_SIZE (gpr_mode));\n+      if (GENERATE_MIPS16E_SAVE_RESTORE)\n+\t/* MIPS16e SAVE and RESTORE instructions require the GP save area\n+\t   to be aligned at the high end with any padding at the low end.\n+\t   It is only safe to use this calculation for o32, where we never\n+\t   have pretend arguments, and where any varargs will be saved in\n+\t   the caller-allocated area rather than at the top of the frame.  */\n+\toffset = (total_size - GET_MODE_SIZE (gpr_mode));\n+      else\n+\toffset = (args_size + cprestore_size + var_size\n+\t\t  + gp_reg_size - GET_MODE_SIZE (gpr_mode));\n       cfun->machine->frame.gp_sp_offset = offset;\n       cfun->machine->frame.gp_save_offset = offset - total_size;\n     }"}]}