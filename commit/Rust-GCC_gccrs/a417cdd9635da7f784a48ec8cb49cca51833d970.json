{"sha": "a417cdd9635da7f784a48ec8cb49cca51833d970", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQxN2NkZDk2MzVkYTdmNzg0YTQ4ZWM4Y2I0OWNjYTUxODMzZDk3MA==", "commit": {"author": {"name": "Catherine Moore", "email": "clm@codesourcery.com", "date": "2009-04-15T21:40:25Z"}, "committer": {"name": "Catherine Moore", "email": "clm@gcc.gnu.org", "date": "2009-04-15T21:40:25Z"}, "message": "debug.h (set_name): Declare.\n\n2009-04-15  Catherine Moore  <clm@codesourcery.com>\n\n        * debug.h (set_name):  Declare.\n        * dwarf2out.c (dwarf2out_set_name): Declare.\n        (dwarf2_debug_hooks): Add set_name.\n        (find_AT_string): New.\n        (add_AT_string): Call find_AT_string.\n        (dwarf2out_set_name): New.\n        * cp/decl.c (grokdeclarator): Call set_name.\n        * vmsdbgout.c (vmsdbg_debug_hooks): Add set_name_debug_nothing.\n        * debug.c (do_nothing_debug_hooks):  Likewise.\n        * dbxout.c (dbx_debug_hooks): Likewise.\n        * sdbout.c (sdb_debug_hooks): Likewise.\n\nFrom-SVN: r146137", "tree": {"sha": "0402e3e8283f7c4c4e6a30872b20d24962d60c70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0402e3e8283f7c4c4e6a30872b20d24962d60c70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a417cdd9635da7f784a48ec8cb49cca51833d970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a417cdd9635da7f784a48ec8cb49cca51833d970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a417cdd9635da7f784a48ec8cb49cca51833d970", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a417cdd9635da7f784a48ec8cb49cca51833d970/comments", "author": {"login": "CatherineMoore", "id": 15636327, "node_id": "MDQ6VXNlcjE1NjM2MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/15636327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CatherineMoore", "html_url": "https://github.com/CatherineMoore", "followers_url": "https://api.github.com/users/CatherineMoore/followers", "following_url": "https://api.github.com/users/CatherineMoore/following{/other_user}", "gists_url": "https://api.github.com/users/CatherineMoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/CatherineMoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CatherineMoore/subscriptions", "organizations_url": "https://api.github.com/users/CatherineMoore/orgs", "repos_url": "https://api.github.com/users/CatherineMoore/repos", "events_url": "https://api.github.com/users/CatherineMoore/events{/privacy}", "received_events_url": "https://api.github.com/users/CatherineMoore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4268e5a55062bfa28f1527cda5c7c2f88317dbfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4268e5a55062bfa28f1527cda5c7c2f88317dbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4268e5a55062bfa28f1527cda5c7c2f88317dbfb"}], "stats": {"total": 82, "additions": 75, "deletions": 7}, "files": [{"sha": "fa122a9da70705b0c796f8d782593f73b1753604", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a417cdd9635da7f784a48ec8cb49cca51833d970", "patch": "@@ -1,3 +1,17 @@\n+2009-04-15  Catherine Moore  <clm@codesourcery.com>\n+\n+        * debug.h (set_name):  Declare.\n+        * dwarf2out.c (dwarf2out_set_name): Declare.\n+        (dwarf2_debug_hooks): Add set_name.\n+        (find_AT_string): New.\n+        (add_AT_string): Call find_AT_string.\n+        (dwarf2out_set_name): New.\n+        * cp/decl.c (grokdeclarator): Call set_name.\n+        * vmsdbgout.c (vmsdbg_debug_hooks): Add set_name_debug_nothing.\n+        * debug.c (do_nothing_debug_hooks):  Likewise.\n+        * dbxout.c (dbx_debug_hooks): Likewise.\n+        * sdbout.c (sdb_debug_hooks): Likewise.\n+\n 2009-04-15  Michael Eager <eager@eagercon.com>\n \n \t* config/rs6000/rs6000.c: rs6000_function_value: set function return"}, {"sha": "2c13e84b64c4442f11dcd3d15d60ead65f738804", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=a417cdd9635da7f784a48ec8cb49cca51833d970", "patch": "@@ -8828,8 +8828,13 @@ grokdeclarator (const cp_declarator *declarator,\n \n \t  /* Replace the anonymous name with the real name everywhere.  */\n \t  for (t = TYPE_MAIN_VARIANT (type); t; t = TYPE_NEXT_VARIANT (t))\n-\t    if (ANON_AGGRNAME_P (TYPE_IDENTIFIER (t)))\n-\t      TYPE_NAME (t) = decl;\n+\t    {\n+\t      if (ANON_AGGRNAME_P (TYPE_IDENTIFIER (t)))\n+\t\t{\n+\t\t  debug_hooks->set_name (t, decl);\n+\t\t  TYPE_NAME (t) = decl;\n+\t\t}\n+  \t    }\n \n \t  if (TYPE_LANG_SPECIFIC (type))\n \t    TYPE_WAS_ANONYMOUS (type) = 1;"}, {"sha": "dc63c7c80c45834210ebc744a46b26c879800b07", "filename": "gcc/dbxout.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=a417cdd9635da7f784a48ec8cb49cca51833d970", "patch": "@@ -376,6 +376,7 @@ const struct gcc_debug_hooks dbx_debug_hooks =\n   dbxout_handle_pch,\t\t         /* handle_pch */\n   debug_nothing_rtx,\t\t         /* var_location */\n   debug_nothing_void,                    /* switch_text_section */\n+  debug_nothing_tree_tree,\t\t /* set_name */\n   0                                      /* start_end_main_source_file */\n };\n #endif /* DBX_DEBUGGING_INFO  */"}, {"sha": "3946debc519f101f4e651a7a546807c6a313f47a", "filename": "gcc/debug.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fdebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fdebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.c?ref=a417cdd9635da7f784a48ec8cb49cca51833d970", "patch": "@@ -50,6 +50,7 @@ const struct gcc_debug_hooks do_nothing_debug_hooks =\n   debug_nothing_int,\t\t         /* handle_pch */\n   debug_nothing_rtx,\t\t         /* var_location */\n   debug_nothing_void,                    /* switch_text_section */\n+  debug_nothing_tree_tree,\t\t /* set_name */\n   0                                      /* start_end_main_source_file */\n };\n \n@@ -66,6 +67,12 @@ debug_nothing_tree (tree decl ATTRIBUTE_UNUSED)\n {\n }\n \n+void\n+debug_nothing_tree_tree (tree t1 ATTRIBUTE_UNUSED,\n+\t\t\t tree t2 ATTRIBUTE_UNUSED)\n+{\n+}\n+\n void\n debug_nothing_tree_tree_tree_bool (tree t1 ATTRIBUTE_UNUSED,\n \t\t\t\t   tree t2 ATTRIBUTE_UNUSED,"}, {"sha": "1169c51a66bd9fb889f5bba868b282df96b98fa8", "filename": "gcc/debug.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.h?ref=a417cdd9635da7f784a48ec8cb49cca51833d970", "patch": "@@ -126,6 +126,8 @@ struct gcc_debug_hooks\n      text sections.  */\n   void (* switch_text_section) (void);\n \n+  void (* set_name) (tree, tree);\n+\n   /* This is 1 if the debug writer wants to see start and end commands for the\n      main source files, and 0 otherwise.  */\n   int start_end_main_source_file;\n@@ -140,6 +142,7 @@ extern void debug_nothing_int_charstar (unsigned int, const char *);\n extern void debug_nothing_int (unsigned int);\n extern void debug_nothing_int_int (unsigned int, unsigned int);\n extern void debug_nothing_tree (tree);\n+extern void debug_nothing_tree_tree (tree, tree);\n extern void debug_nothing_tree_int (tree, int);\n extern void debug_nothing_tree_tree_tree_bool (tree, tree, tree, bool);\n extern bool debug_true_const_tree (const_tree);"}, {"sha": "81a5062fc204477d917bc095378e03d4a39cc63b", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 41, "deletions": 5, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a417cdd9635da7f784a48ec8cb49cca51833d970", "patch": "@@ -4549,6 +4549,7 @@ static void dwarf2out_imported_module_or_decl_1 (tree, tree, tree,\n static void dwarf2out_abstract_function (tree);\n static void dwarf2out_var_location (rtx);\n static void dwarf2out_begin_function (tree);\n+static void dwarf2out_set_name (tree, tree);\n \n /* The debug hooks structure.  */\n \n@@ -4582,6 +4583,7 @@ const struct gcc_debug_hooks dwarf2_debug_hooks =\n   debug_nothing_int,\t\t/* handle_pch */\n   dwarf2out_var_location,\n   dwarf2out_switch_text_section,\n+  dwarf2out_set_name,\n   1                             /* start_end_main_source_file */\n };\n #endif\n@@ -5929,12 +5931,9 @@ debug_str_eq (const void *x1, const void *x2)\n \t\t (const char *)x2) == 0;\n }\n \n-/* Add a string attribute value to a DIE.  */\n-\n-static inline void\n-add_AT_string (dw_die_ref die, enum dwarf_attribute attr_kind, const char *str)\n+static struct indirect_string_node *\n+find_AT_string (const char *str)\n {\n-  dw_attr_node attr;\n   struct indirect_string_node *node;\n   void **slot;\n \n@@ -5955,6 +5954,18 @@ add_AT_string (dw_die_ref die, enum dwarf_attribute attr_kind, const char *str)\n     node = (struct indirect_string_node *) *slot;\n \n   node->refcount++;\n+  return node;\n+}\n+\n+/* Add a string attribute value to a DIE.  */\n+\n+static inline void\n+add_AT_string (dw_die_ref die, enum dwarf_attribute attr_kind, const char *str)\n+{\n+  dw_attr_node attr;\n+  struct indirect_string_node *node;\n+\n+  node = find_AT_string (str);\n \n   attr.dw_attr = attr_kind;\n   attr.dw_attr_val.val_class = dw_val_class_str;\n@@ -15763,6 +15774,31 @@ maybe_emit_file (struct dwarf_file_data * fd)\n   return fd->emitted_number;\n }\n \n+/* Replace DW_AT_name for the decl with name.  */\n+ \n+static void\n+dwarf2out_set_name (tree decl, tree name)\n+{\n+  dw_die_ref die;\n+  dw_attr_ref attr;\n+\n+  die = TYPE_SYMTAB_DIE (decl);\n+  if (!die)\n+    return;\n+\n+  attr = get_AT (die, DW_AT_name);\n+  if (attr)\n+    {\n+      struct indirect_string_node *node;\n+\n+      node = find_AT_string (dwarf2_name (name, 0));\n+      /* replace the string.  */\n+      attr->dw_attr_val.v.val_str = node;\n+    }\n+\n+  else\n+    add_name_attribute (die, dwarf2_name (name, 0));\n+}\n /* Called by the final INSN scan whenever we see a var location.  We\n    use it to drop labels in the right places, and throw the location in\n    our lookup table.  */"}, {"sha": "9874db7d0c06c6d85967043c33667a81b7f2d601", "filename": "gcc/sdbout.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=a417cdd9635da7f784a48ec8cb49cca51833d970", "patch": "@@ -337,6 +337,7 @@ const struct gcc_debug_hooks sdb_debug_hooks =\n   debug_nothing_int,\t\t         /* handle_pch */\n   debug_nothing_rtx,\t\t         /* var_location */\n   debug_nothing_void,                    /* switch_text_section */\n+  debug_nothing_tree_tree,\t\t /* set_name */\n   0                                      /* start_end_main_source_file */\n };\n "}, {"sha": "134c7d99225971136ff32a23ffdf717ea76792b6", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a417cdd9635da7f784a48ec8cb49cca51833d970/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=a417cdd9635da7f784a48ec8cb49cca51833d970", "patch": "@@ -211,6 +211,7 @@ const struct gcc_debug_hooks vmsdbg_debug_hooks\n    debug_nothing_int,\t\t  /* handle_pch */\n    debug_nothing_rtx,\t\t  /* var_location */\n    debug_nothing_void,            /* switch_text_section */\n+   debug_nothing_tree_tree,\t  /* set_name */\n    0                              /* start_end_main_source_file */\n };\n "}]}