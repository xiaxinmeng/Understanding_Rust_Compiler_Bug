{"sha": "2fb62c6af6848f6fcbbd861039c88b41af7bc599", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZiNjJjNmFmNjg0OGY2ZmNiYmQ4NjEwMzljODhiNDFhZjdiYzU5OQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-10-09T22:06:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-10-09T22:06:32Z"}, "message": "Move some definitions from abi64.h to iris6.h\n\nFrom-SVN: r12941", "tree": {"sha": "84f9b89f3d0e3beeb2f3bcad5f72ad82f69279a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84f9b89f3d0e3beeb2f3bcad5f72ad82f69279a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fb62c6af6848f6fcbbd861039c88b41af7bc599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb62c6af6848f6fcbbd861039c88b41af7bc599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb62c6af6848f6fcbbd861039c88b41af7bc599", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb62c6af6848f6fcbbd861039c88b41af7bc599/comments", "author": null, "committer": null, "parents": [{"sha": "df0faff11b6b6122bdd5d877d89109d3d901df19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0faff11b6b6122bdd5d877d89109d3d901df19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df0faff11b6b6122bdd5d877d89109d3d901df19"}], "stats": {"total": 139, "additions": 70, "deletions": 69}, "files": [{"sha": "9a0a6e928050d9a7ee9de031810a2319d6b676b4", "filename": "gcc/config/mips/abi64.h", "status": "modified", "additions": 1, "deletions": 69, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb62c6af6848f6fcbbd861039c88b41af7bc599/gcc%2Fconfig%2Fmips%2Fabi64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb62c6af6848f6fcbbd861039c88b41af7bc599/gcc%2Fconfig%2Fmips%2Fabi64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fabi64.h?ref=2fb62c6af6848f6fcbbd861039c88b41af7bc599", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  64 bit ABI support.\n-   Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -21,78 +21,10 @@ Boston, MA 02111-1307, USA.  */\n /* Macros to implement the 64 bit ABI.  This file is meant to be included\n    after mips.h.  */\n \n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT MASK_ABICALLS|MASK_FLOAT64|MASK_64BIT\n-\n-/* For Irix 6, -mips3 implies TARGET_LONG64.  */\n-#undef TARGET_LONG64\n-#define TARGET_LONG64\t\t(mips_abi == ABI_64)\n-\n #undef SUBTARGET_TARGET_OPTIONS\n #define SUBTARGET_TARGET_OPTIONS\\\n   { \"abi=\", &mips_abi_string\t},\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n- \"-Dunix -Dmips -Dsgi -Dhost_mips -DMIPSEB -D_MIPSEB -DSYSTYPE_SVR4 \\\n-  -D_SVR4_SOURCE -D_MODERN_C -D__DSO__ \\\n-  -Asystem(unix) -Asystem(svr4) -Acpu(mips) -Amachine(sgi)\"\n-\n-/* We must make -mips3 do what -mlong64 used to do.  */\n-/* ??? If no mipsX option given, but a mabi=X option is, then should set\n-   _MIPS_ISA based on the mabi=X option.  */\n-/* ??? If no mabi=X option give, but a mipsX option is, then should set\n-   _MIPS_SIM based on the mipsX option.  */\n-/* ??? Same for _MIPS_SZINT.  */\n-/* ??? Same for _MIPS_SZPTR.  */\n-/* ??? Same for __SIZE_TYPE and __PTRDIFF_TYPE.  */\n-#undef CPP_SPEC\n-#define CPP_SPEC \"\\\n-%{!ansi:-D__EXTENSIONS__ -D_SGI_SOURCE -D_LONGLONG} \\\n-%{.cc:\t-D_LANGUAGE_C_PLUS_PLUS} \\\n-%{.cxx:\t-D_LANGUAGE_C_PLUS_PLUS} \\\n-%{.C:\t-D_LANGUAGE_C_PLUS_PLUS} \\\n-%{.m:\t-D_LANGUAGE_OBJECTIVE_C -D_LANGUAGE_C} \\\n-%{.S:\t-D_LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n-%{.s:\t-D_LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n-%{!.S:%{!.s: %{!.cc: %{!.cxx: %{!.C: %{!.m: -D_LANGUAGE_C %{!ansi:-DLANGUAGE_C}}}}}}}\\\n-%{mfp32: -D_MIPS_FPSET=16}%{!mfp32: -D_MIPS_FPSET=32} \\\n-%{mips1: -D_MIPS_ISA=_MIPS_ISA_MIPS1} \\\n-%{mips2: -D_MIPS_ISA=_MIPS_ISA_MIPS2} \\\n-%{mips3: -D_MIPS_ISA=_MIPS_ISA_MIPS3} \\\n-%{mips4: -D_MIPS_ISA=_MIPS_ISA_MIPS4} \\\n-%{!mips1: %{!mips2: %{!mips3: %{!mips4: -D_MIPS_ISA=_MIPS_ISA_MIPS3}}}} \\\n-%{mabi=32: -D_MIPS_SIM=_MIPS_SIM_ABI32}\t\\\n-%{mabi=n32: -D_ABIN32=2 -D_MIPS_SIM=_ABIN32} \\\n-%{mabi=64: -D_ABI64=3 -D_MIPS_SIM=_ABI64} \\\n-%{!mabi=32: %{!mabi=n32: %{!mabi=64: -D_ABIN32=2 -D_MIPS_SIM=_ABIN32}}}\t\\\n-%{!mint64: -D_MIPS_SZINT=32}%{mint64: -D_MIPS_SZINT=64} \\\n-%{mabi=32: -D_MIPS_SZLONG=32} \\\n-%{mabi=n32: -D_MIPS_SZLONG=32} \\\n-%{mabi=64: -D_MIPS_SZLONG=64} \\\n-%{!mabi=32: %{!mabi=n32: %{!mabi=64: -D_MIPS_SZLONG=32}}} \\\n-%{mabi=32: -D_MIPS_SZPTR=32} \\\n-%{mabi=n32: -D_MIPS_SZPTR=32} \\\n-%{mabi=64: -D_MIPS_SZPTR=64} \\\n-%{!mabi=32: %{!mabi=n32: %{!mabi=64: -D_MIPS_SZPTR=32}}} \\\n-%{!mips1:%{!mips2: -D_COMPILER_VERSION=601}}\t\t\\\n-%{mabi=32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-%{mabi=n32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n-%{mabi=64: -D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n-%{!mabi=32:%{!mabi=n32: %{!mabi=64: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}} \\\n-%{mips3: -U__mips -D__mips=3} \\\n-%{mips4: -U__mips -D__mips=4} \\\n-%{!mips1:%{!mips2:%{!mips3:%{!mips4: -U__mips -D__mips=3}}}} \\\n-%{mgp32: -U__mips64}%{mgp64: -D__mips64} \\\n-%{mabi=32: -U__mips64} \\\n-%{mabi=n32: -D__mips64} \\\n-%{mabi=64: -D__mips64} \\\n-%{!mabi=32: %{!mabi=n32: %{!mabi=64: -D__mips64}}} \\\n-%{msingle-float:%{!msoft-float:-D__mips_single_float}} \\\n-%{m4650:%{!msoft-float:-D__mips_single_float}} \\\n-%{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \\\n-%{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}}\"\n-\n #undef EMPTY_FIELD_BOUNDARY\n #define EMPTY_FIELD_BOUNDARY\t32\n "}, {"sha": "55b9288dae62a130901974f95253aac6353a42fd", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fb62c6af6848f6fcbbd861039c88b41af7bc599/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fb62c6af6848f6fcbbd861039c88b41af7bc599/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=2fb62c6af6848f6fcbbd861039c88b41af7bc599", "patch": "@@ -23,9 +23,78 @@ Boston, MA 02111-1307, USA.  */\n #define MIPS_ABI_DEFAULT ABI_N32\n #define MULTILIB_DEFAULTS { \"mabi=n32\" }\n \n+#ifndef TARGET_DEFAULT\n+#define TARGET_DEFAULT MASK_ABICALLS|MASK_FLOAT64|MASK_64BIT\n+#endif\n+\n #include \"mips/iris5.h\"\n #include \"mips/abi64.h\"\n \n+/* For Irix 6, -mips3 implies TARGET_LONG64.  */\n+#undef TARGET_LONG64\n+#define TARGET_LONG64\t\t(mips_abi == ABI_64)\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \\\n+ \"-Dunix -Dmips -Dsgi -Dhost_mips -DMIPSEB -D_MIPSEB -DSYSTYPE_SVR4 \\\n+  -D_SVR4_SOURCE -D_MODERN_C -D__DSO__ \\\n+  -Asystem(unix) -Asystem(svr4) -Acpu(mips) -Amachine(sgi)\"\n+\n+/* We must make -mips3 do what -mlong64 used to do.  */\n+/* ??? If no mipsX option given, but a mabi=X option is, then should set\n+   _MIPS_ISA based on the mabi=X option.  */\n+/* ??? If no mabi=X option give, but a mipsX option is, then should set\n+   _MIPS_SIM based on the mipsX option.  */\n+/* ??? Same for _MIPS_SZINT.  */\n+/* ??? Same for _MIPS_SZPTR.  */\n+/* ??? Same for __SIZE_TYPE and __PTRDIFF_TYPE.  */\n+#undef CPP_SPEC\n+#define CPP_SPEC \"\\\n+%{!ansi:-D__EXTENSIONS__ -D_SGI_SOURCE -D_LONGLONG} \\\n+%{.cc:\t-D_LANGUAGE_C_PLUS_PLUS} \\\n+%{.cxx:\t-D_LANGUAGE_C_PLUS_PLUS} \\\n+%{.C:\t-D_LANGUAGE_C_PLUS_PLUS} \\\n+%{.m:\t-D_LANGUAGE_OBJECTIVE_C -D_LANGUAGE_C} \\\n+%{.S:\t-D_LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n+%{.s:\t-D_LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n+%{!.S:%{!.s: %{!.cc: %{!.cxx: %{!.C: %{!.m: -D_LANGUAGE_C %{!ansi:-DLANGUAGE_C}}}}}}}\\\n+%{mfp32: -D_MIPS_FPSET=16}%{!mfp32: -D_MIPS_FPSET=32} \\\n+%{mips1: -D_MIPS_ISA=_MIPS_ISA_MIPS1} \\\n+%{mips2: -D_MIPS_ISA=_MIPS_ISA_MIPS2} \\\n+%{mips3: -D_MIPS_ISA=_MIPS_ISA_MIPS3} \\\n+%{mips4: -D_MIPS_ISA=_MIPS_ISA_MIPS4} \\\n+%{!mips1: %{!mips2: %{!mips3: %{!mips4: -D_MIPS_ISA=_MIPS_ISA_MIPS3}}}} \\\n+%{mabi=32: -D_MIPS_SIM=_MIPS_SIM_ABI32}\t\\\n+%{mabi=n32: -D_ABIN32=2 -D_MIPS_SIM=_ABIN32} \\\n+%{mabi=64: -D_ABI64=3 -D_MIPS_SIM=_ABI64} \\\n+%{!mabi=32: %{!mabi=n32: %{!mabi=64: -D_ABIN32=2 -D_MIPS_SIM=_ABIN32}}}\t\\\n+%{!mint64: -D_MIPS_SZINT=32}%{mint64: -D_MIPS_SZINT=64} \\\n+%{mabi=32: -D_MIPS_SZLONG=32} \\\n+%{mabi=n32: -D_MIPS_SZLONG=32} \\\n+%{mabi=64: -D_MIPS_SZLONG=64} \\\n+%{!mabi=32: %{!mabi=n32: %{!mabi=64: -D_MIPS_SZLONG=32}}} \\\n+%{mabi=32: -D_MIPS_SZPTR=32} \\\n+%{mabi=n32: -D_MIPS_SZPTR=32} \\\n+%{mabi=64: -D_MIPS_SZPTR=64} \\\n+%{!mabi=32: %{!mabi=n32: %{!mabi=64: -D_MIPS_SZPTR=32}}} \\\n+%{!mips1:%{!mips2: -D_COMPILER_VERSION=601}}\t\t\\\n+%{mabi=32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+%{mabi=n32: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+%{mabi=64: -D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+%{!mabi=32:%{!mabi=n32: %{!mabi=64: -D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int}}} \\\n+%{mips3: -U__mips -D__mips=3} \\\n+%{mips4: -U__mips -D__mips=4} \\\n+%{!mips1:%{!mips2:%{!mips3:%{!mips4: -U__mips -D__mips=3}}}} \\\n+%{mgp32: -U__mips64}%{mgp64: -D__mips64} \\\n+%{mabi=32: -U__mips64} \\\n+%{mabi=n32: -D__mips64} \\\n+%{mabi=64: -D__mips64} \\\n+%{!mabi=32: %{!mabi=n32: %{!mabi=64: -D__mips64}}} \\\n+%{msingle-float:%{!msoft-float:-D__mips_single_float}} \\\n+%{m4650:%{!msoft-float:-D__mips_single_float}} \\\n+%{EB:-UMIPSEL -U_MIPSEL -U__MIPSEL -U__MIPSEL__ -D_MIPSEB -D__MIPSEB -D__MIPSEB__ %{!ansi:-DMIPSEB}} \\\n+%{EL:-UMIPSEB -U_MIPSEB -U__MIPSEB -U__MIPSEB__ -D_MIPSEL -D__MIPSEL -D__MIPSEL__ %{!ansi:-DMIPSEL}}\"\n+\n /* Irix 6 uses DWARF.  */\n #define DWARF_DEBUGGING_INFO\n #define DWARF_VERSION 2"}]}