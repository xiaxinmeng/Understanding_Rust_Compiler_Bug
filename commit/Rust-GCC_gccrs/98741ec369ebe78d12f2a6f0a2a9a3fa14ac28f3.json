{"sha": "98741ec369ebe78d12f2a6f0a2a9a3fa14ac28f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg3NDFlYzM2OWViZTc4ZDEyZjJhNmYwYTJhOWEzZmExNGFjMjhmMw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-11-27T22:47:42Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-11-27T22:47:42Z"}, "message": "* Makefile.in: Forgotten commit.\n\nFrom-SVN: r47389", "tree": {"sha": "bf7b9d7abab89f8e940396a99c6f7a6da5651a9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf7b9d7abab89f8e940396a99c6f7a6da5651a9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98741ec369ebe78d12f2a6f0a2a9a3fa14ac28f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98741ec369ebe78d12f2a6f0a2a9a3fa14ac28f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98741ec369ebe78d12f2a6f0a2a9a3fa14ac28f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98741ec369ebe78d12f2a6f0a2a9a3fa14ac28f3/comments", "author": null, "committer": null, "parents": [{"sha": "0abc6a6a4f074142719263a69355b702ac92f79b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0abc6a6a4f074142719263a69355b702ac92f79b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0abc6a6a4f074142719263a69355b702ac92f79b"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "154540e64f749141b24a997dc1b34c6c1ded799b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98741ec369ebe78d12f2a6f0a2a9a3fa14ac28f3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98741ec369ebe78d12f2a6f0a2a9a3fa14ac28f3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=98741ec369ebe78d12f2a6f0a2a9a3fa14ac28f3", "patch": "@@ -724,7 +724,7 @@ CXX_TARGET_OBJS=@cxx_target_objs@\n # Language-specific object files for C and Objective C.\n C_AND_OBJC_OBJS = attribs.o c-errors.o c-lex.o c-pragma.o c-decl.o c-typeck.o \\\n   c-convert.o c-aux-info.o c-common.o c-format.o c-semantics.o \\\n-  libcpp.a $(C_TARGET_OBJS)\n+  c-objc-common.o libcpp.a $(C_TARGET_OBJS)\n \n # Language-specific object files for C.\n C_OBJS = c-parse.o c-lang.o $(C_AND_OBJC_OBJS)\n@@ -1171,13 +1171,15 @@ c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) $(C_TREE_H) \\\n c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n     $(TARGET_H) flags.h intl.h output.h $(EXPR_H) $(RTL_H) toplev.h $(TM_P_H)\n c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n-    $(GGC_H) c-lex.h toplev.h diagnostic.h output.h function.h $(VARRAY_H) \\\n-    $(RTL_H) $(EXPR_H) tree-inline.h insn-config.h integrate.h langhooks.h \\\n-    langhooks-def.h c-common.h\n+    $(GGC_H) toplev.h function.h $(VARRAY_H) \\\n+    $(RTL_H) $(EXPR_H) langhooks.h langhooks-def.h\n c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) c-lex.h \\\n     debug.h $(C_TREE_H) \\\n     c-pragma.h input.h intl.h flags.h toplev.h output.h \\\n     mbchar.h $(CPPLIB_H) $(EXPR_H) $(TM_P_H)\n+c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n+    $(C_TREE_H) $(RTL_H) insn-config.h integrate.h $(EXPR_H) $(C_TREE_H) \\\n+    flags.h toplev.h tree-inline.h diagnostic.h integrate.h\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n     flags.h toplev.h\n c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h toplev.h"}]}