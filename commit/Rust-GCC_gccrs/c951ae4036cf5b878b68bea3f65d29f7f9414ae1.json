{"sha": "c951ae4036cf5b878b68bea3f65d29f7f9414ae1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk1MWFlNDAzNmNmNWI4NzhiNjhiZWEzZjY1ZDI5ZjdmOTQxNGFlMQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2008-02-20T04:20:59Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2008-02-20T04:20:59Z"}, "message": "inclhack.def (solaris_math_10): New.\n\n\t* inclhack.def (solaris_math_10): New.\n\t* tests/base/iso/math_c99.h: Update.\n\n\t* fixincl.x: Regenerate.\n\nFrom-SVN: r132468", "tree": {"sha": "bca251aea4e82b3a8827eaa7b41fff22abb82ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bca251aea4e82b3a8827eaa7b41fff22abb82ee8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c951ae4036cf5b878b68bea3f65d29f7f9414ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c951ae4036cf5b878b68bea3f65d29f7f9414ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c951ae4036cf5b878b68bea3f65d29f7f9414ae1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c951ae4036cf5b878b68bea3f65d29f7f9414ae1/comments", "author": null, "committer": null, "parents": [{"sha": "2bf41bf05df81d26e70bca9642c065cd90b49be7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf41bf05df81d26e70bca9642c065cd90b49be7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bf41bf05df81d26e70bca9642c065cd90b49be7"}], "stats": {"total": 114, "additions": 101, "deletions": 13}, "files": [{"sha": "c241666d04714207d73ceff41518c184626d84b6", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c951ae4036cf5b878b68bea3f65d29f7f9414ae1/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c951ae4036cf5b878b68bea3f65d29f7f9414ae1/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=c951ae4036cf5b878b68bea3f65d29f7f9414ae1", "patch": "@@ -1,3 +1,10 @@\n+2008-02-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* inclhack.def (solaris_math_10): New.\n+\t* tests/base/iso/math_c99.h: Update.\n+\n+\t* fixincl.x: Regenerate.\n+\n 2008-02-04  Ismail D\ufffdnmez  <ismail@pardus.org.tr>\n \n \t* inclhack.def: (bsd_stdio_attrs_conflict, freebsd_gcc3_breakage,"}, {"sha": "9da75308834ad2ded685e9e1ddd3fab057f54847", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 63, "deletions": 13, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c951ae4036cf5b878b68bea3f65d29f7f9414ae1/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c951ae4036cf5b878b68bea3f65d29f7f9414ae1/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=c951ae4036cf5b878b68bea3f65d29f7f9414ae1", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Monday February  4, 2008 at 09:22:58 PM GMTST\n+ * It has been AutoGen-ed  Wednesday February 20, 2008 at 05:10:00 AM CET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Feb  4 21:22:58 GMTST 2008\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Feb 20 05:10:00 CET 2008\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,25 +15,30 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 211 fixup descriptions.\n+ * This file contains 212 fixup descriptions.\n  *\n  * See README for more information.\n  *\n  *  inclhack copyright (c) 1998, 1999, 2000, 2001\n  *  The Free Software Foundation, Inc.\n  *\n-  *  inclhack is free software: you can redistribute it and/or modify it\n- *  under the terms of the GNU General Public License as published by the\n- *  Free Software Foundation, either version 3 of the License, or\n- *  (at your option) any later version.\n+  *  inclhack is free software.\n  *  \n- *  inclhack is distributed in the hope that it will be useful, but\n- *  WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  You may redistribute it and/or modify it under the terms of the\n+ *  GNU General Public License, as published by the Free Software\n+ *  Foundation; either version 2 of the License, or (at your option)\n+ *  any later version.\n+ *  \n+ *  inclhack is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n  *  See the GNU General Public License for more details.\n  *  \n- *  You should have received a copy of the GNU General Public License along\n- *  with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with inclhack.  If not, write to:\n+ *  \tThe Free Software Foundation, Inc.,\n+ *  \t51 Franklin Street, Fifth Floor\n+ *  \tBoston, MA  02110-1301, USA.\n  */\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -5884,6 +5889,45 @@ static const char* apzSolaris_Math_9Patch[] = {\n     \"^#define[ \\t]+([a-z]+)\\\\(x, y\\\\)([ \\t]+)\\\\(\\\\(x\\\\) __builtin_[a-z]+\\\\(y\\\\)\\\\)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Solaris_Math_10 fix\n+ */\n+tSCC zSolaris_Math_10Name[] =\n+     \"solaris_math_10\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSolaris_Math_10List[] =\n+  \"iso/math_c99.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzSolaris_Math_10Machs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSolaris_Math_10Select0[] =\n+       \"@\\\\(#\\\\)math_c99.h[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n+\n+#define    SOLARIS_MATH_10_TEST_CT  1\n+static tTestDesc aSolaris_Math_10Tests[] = {\n+  { TT_EGREP,    zSolaris_Math_10Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Solaris_Math_10\n+ */\n+static const char* apzSolaris_Math_10Patch[] = {\n+    \"format\",\n+    \"#define\\tisinf(x) __builtin_isinf(x)\",\n+    \"^#define[ \\t]+isinf\\\\(x\\\\)[ \\t]+__extension__\\\\([ \\t]*\\\\\\\\\\n\\\n+[ \\t]*\\\\{[ \\t]*__typeof\\\\(x\\\\)[ \\t]*__x_i[ \\t]*=[ \\t]*\\\\(x\\\\);[ \\t]*\\\\\\\\\\n\\\n+[ \\t]*__x_i[ \\t]*==[ \\t]*\\\\(__typeof\\\\(__x_i\\\\)\\\\)[ \\t]*INFINITY[ \\t]*\\\\|\\\\|[ \\t]*\\\\\\\\\\n\\\n+[ \\t]*__x_i[ \\t]*==[ \\t]*\\\\(__typeof\\\\(__x_i\\\\)\\\\)[ \\t]*\\\\(-INFINITY\\\\);[ \\t]*\\\\}\\\\)\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Solaris_Mutex_Init_1 fix\n@@ -8567,9 +8611,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          254\n+#define REGEX_COUNT          255\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            211\n+#define FIX_COUNT            212\n \n /*\n  *  Enumerate the fixes\n@@ -8718,6 +8762,7 @@ typedef enum {\n     SOLARIS_MATH_4_FIXIDX,\n     SOLARIS_MATH_8_FIXIDX,\n     SOLARIS_MATH_9_FIXIDX,\n+    SOLARIS_MATH_10_FIXIDX,\n     SOLARIS_MUTEX_INIT_1_FIXIDX,\n     SOLARIS_MUTEX_INIT_2_FIXIDX,\n     SOLARIS_RWLOCK_INIT_1_FIXIDX,\n@@ -9504,6 +9549,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SOLARIS_MATH_9_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aSolaris_Math_9Tests,   apzSolaris_Math_9Patch, 0 },\n \n+  {  zSolaris_Math_10Name,    zSolaris_Math_10List,\n+     apzSolaris_Math_10Machs,\n+     SOLARIS_MATH_10_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aSolaris_Math_10Tests,   apzSolaris_Math_10Patch, 0 },\n+\n   {  zSolaris_Mutex_Init_1Name,    zSolaris_Mutex_Init_1List,\n      apzSolaris_Mutex_Init_1Machs,\n      SOLARIS_MUTEX_INIT_1_TEST_CT, FD_MACH_ONLY,"}, {"sha": "e7447d497ae63f347f42a5c8cbfc22e7b1b8944f", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c951ae4036cf5b878b68bea3f65d29f7f9414ae1/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c951ae4036cf5b878b68bea3f65d29f7f9414ae1/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=c951ae4036cf5b878b68bea3f65d29f7f9414ae1", "patch": "@@ -3222,6 +3222,30 @@ fix = {\n     \"#define\tisunordered(x, y)\t((x) __builtin_isunordered(y))\";\n };\n \n+/*\n+ * On Solaris 11, if you do isinf(NaN) you'll get a floating point\n+ * exception.  Provide an alternative using GCC's builtin.\n+ */\n+\n+fix = {\n+    hackname  = solaris_math_10;\n+    select    = '@\\(#\\)math_c99.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n+    files     = iso/math_c99.h;\n+    c_fix     = format;\n+    c_fix_arg = \"#define\\tisinf(x) __builtin_isinf(x)\";\n+    c_fix_arg = \"^#define[ \\t]+isinf\\\\(x\\\\)[ \\t]+__extension__\\\\([ \\t]*\\\\\\\\\\n\"\n+                \"[ \\t]*\\\\{[ \\t]*__typeof\\\\(x\\\\)[ \\t]*__x_i[ \\t]*=[ \\t]*\\\\(x\\\\);[ \\t]*\\\\\\\\\\n\"\n+                \"[ \\t]*__x_i[ \\t]*==[ \\t]*\\\\(__typeof\\\\(__x_i\\\\)\\\\)[ \\t]*INFINITY[ \\t]*\\\\|\\\\|[ \\t]*\\\\\\\\\\n\"\n+                \"[ \\t]*__x_i[ \\t]*==[ \\t]*\\\\(__typeof\\\\(__x_i\\\\)\\\\)[ \\t]*\\\\(-INFINITY\\\\);[ \\t]*\\\\}\\\\)\";\n+    test_text =\n+    '#pragma ident\t\"@(#)math_c99.h\t1.12\t07/01/21 SMI\"'\"\\n\"\n+    \"#undef\tisinf\\n\"\n+    \"#define\tisinf(x)\t__extension__( \\\\\\\\\\n\"\n+    \"\t\t\t{ __typeof(x) __x_i = (x); \\\\\\\\\\n\"\n+    \"\t\t\t__x_i == (__typeof(__x_i)) INFINITY || \\\\\\\\\\n\"\n+    \"\t\t\t__x_i == (__typeof(__x_i)) (-INFINITY); })\";\n+};\n+\n /*\n  *  Sun Solaris 2.5.1, 2.6 defines PTHREAD_{MUTEX|COND}_INITIALIZER\n  *  incorrectly, so we replace them with versions that correspond to"}, {"sha": "e3b279944228fec1b7320bbe3aec375668160939", "filename": "fixincludes/tests/base/iso/math_c99.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c951ae4036cf5b878b68bea3f65d29f7f9414ae1/fixincludes%2Ftests%2Fbase%2Fiso%2Fmath_c99.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c951ae4036cf5b878b68bea3f65d29f7f9414ae1/fixincludes%2Ftests%2Fbase%2Fiso%2Fmath_c99.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fiso%2Fmath_c99.h?ref=c951ae4036cf5b878b68bea3f65d29f7f9414ae1", "patch": "@@ -77,3 +77,10 @@\n #undef\tisunordered\n #define\tisunordered(x, y)\t__builtin_isunordered(x, y)\n #endif  /* SOLARIS_MATH_9_CHECK */\n+\n+\n+#if defined( SOLARIS_MATH_10_CHECK )\n+#pragma ident\t\"@(#)math_c99.h\t1.12\t07/01/21 SMI\"\n+#undef\tisinf\n+#define\tisinf(x) __builtin_isinf(x)\n+#endif  /* SOLARIS_MATH_10_CHECK */"}]}