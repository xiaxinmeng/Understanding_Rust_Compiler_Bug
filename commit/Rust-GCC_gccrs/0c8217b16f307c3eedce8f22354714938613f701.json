{"sha": "0c8217b16f307c3eedce8f22354714938613f701", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM4MjE3YjE2ZjMwN2MzZWVkY2U4ZjIyMzU0NzE0OTM4NjEzZjcwMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-29T15:31:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-29T15:31:26Z"}, "message": "x86: Fix -O0 remaining intrinsic macros [PR94832]\n\nA few other macros seem to suffer from the same issue.  What I've done was:\ncat gcc/config/i386/*intrin.h | sed -e ':x /\\\\$/ { N; s/\\\\\\n//g ; bx }' \\\n| grep '^[[:blank:]]*#[[:blank:]]*define[[:blank:]].*(' | sed 's/[ \t]\\+/ /g' \\\n> /tmp/macros\nand then looking for regexps:\n)[a-zA-Z]\n) [a-zA-Z]\n[a-zA-Z][-+*/%]\n[a-zA-Z] [-+*/%]\n[-+*/%][a-zA-Z]\n[-+*/%] [a-zA-Z]\nin the resulting file.\n\n2020-04-29  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94832\n\t* config/i386/avx512bwintrin.h (_mm512_alignr_epi8,\n\t_mm512_mask_alignr_epi8, _mm512_maskz_alignr_epi8): Wrap macro operands\n\tused in casts into parens.\n\t* config/i386/avx512fintrin.h (_mm512_cvt_roundps_ph, _mm512_cvtps_ph,\n\t_mm512_mask_cvt_roundps_ph, _mm512_mask_cvtps_ph,\n\t_mm512_maskz_cvt_roundps_ph, _mm512_maskz_cvtps_ph,\n\t_mm512_mask_cmp_epi64_mask, _mm512_mask_cmp_epi32_mask,\n\t_mm512_mask_cmp_epu64_mask, _mm512_mask_cmp_epu32_mask,\n\t_mm512_mask_cmp_round_pd_mask, _mm512_mask_cmp_round_ps_mask,\n\t_mm512_mask_cmp_pd_mask, _mm512_mask_cmp_ps_mask): Likewise.\n\t* config/i386/avx512vlbwintrin.h (_mm256_mask_alignr_epi8,\n\t_mm256_maskz_alignr_epi8, _mm_mask_alignr_epi8, _mm_maskz_alignr_epi8,\n\t_mm256_mask_cmp_epu8_mask): Likewise.\n\t* config/i386/avx512vlintrin.h (_mm_mask_cvtps_ph, _mm_maskz_cvtps_ph,\n\t_mm256_mask_cvtps_ph, _mm256_maskz_cvtps_ph): Likewise.\n\t* config/i386/f16cintrin.h (_mm_cvtps_ph, _mm256_cvtps_ph): Likewise.\n\t* config/i386/shaintrin.h (_mm_sha1rnds4_epu32): Likewise.", "tree": {"sha": "75f7a7cd991de834ba75b86c48b0f94a7ac0383f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75f7a7cd991de834ba75b86c48b0f94a7ac0383f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c8217b16f307c3eedce8f22354714938613f701", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c8217b16f307c3eedce8f22354714938613f701", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c8217b16f307c3eedce8f22354714938613f701", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c8217b16f307c3eedce8f22354714938613f701/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78cef09019cc9c80d1b39a49861f8827a2ee2e60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78cef09019cc9c80d1b39a49861f8827a2ee2e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78cef09019cc9c80d1b39a49861f8827a2ee2e60"}], "stats": {"total": 79, "additions": 49, "deletions": 30}, "files": [{"sha": "72e38d89308226698b0656f2c266a4c2aeab4159", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8217b16f307c3eedce8f22354714938613f701/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8217b16f307c3eedce8f22354714938613f701/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c8217b16f307c3eedce8f22354714938613f701", "patch": "@@ -1,5 +1,24 @@\n 2020-04-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/94832\n+\t* config/i386/avx512bwintrin.h (_mm512_alignr_epi8,\n+\t_mm512_mask_alignr_epi8, _mm512_maskz_alignr_epi8): Wrap macro operands\n+\tused in casts into parens.\n+\t* config/i386/avx512fintrin.h (_mm512_cvt_roundps_ph, _mm512_cvtps_ph,\n+\t_mm512_mask_cvt_roundps_ph, _mm512_mask_cvtps_ph,\n+\t_mm512_maskz_cvt_roundps_ph, _mm512_maskz_cvtps_ph,\n+\t_mm512_mask_cmp_epi64_mask, _mm512_mask_cmp_epi32_mask,\n+\t_mm512_mask_cmp_epu64_mask, _mm512_mask_cmp_epu32_mask,\n+\t_mm512_mask_cmp_round_pd_mask, _mm512_mask_cmp_round_ps_mask,\n+\t_mm512_mask_cmp_pd_mask, _mm512_mask_cmp_ps_mask): Likewise.\n+\t* config/i386/avx512vlbwintrin.h (_mm256_mask_alignr_epi8,\n+\t_mm256_maskz_alignr_epi8, _mm_mask_alignr_epi8, _mm_maskz_alignr_epi8,\n+\t_mm256_mask_cmp_epu8_mask): Likewise.\n+\t* config/i386/avx512vlintrin.h (_mm_mask_cvtps_ph, _mm_maskz_cvtps_ph,\n+\t_mm256_mask_cvtps_ph, _mm256_maskz_cvtps_ph): Likewise.\n+\t* config/i386/f16cintrin.h (_mm_cvtps_ph, _mm256_cvtps_ph): Likewise.\n+\t* config/i386/shaintrin.h (_mm_sha1rnds4_epu32): Likewise.\n+\n \tPR target/94832\n \t* config/i386/avx2intrin.h (_mm_mask_i32gather_pd,\n \t_mm256_mask_i32gather_pd, _mm_mask_i64gather_pd,"}, {"sha": "d19c10444714c9fd147454a37fe1992ffbcbf7c3", "filename": "gcc/config/i386/avx512bwintrin.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512bwintrin.h?ref=0c8217b16f307c3eedce8f22354714938613f701", "patch": "@@ -3128,16 +3128,16 @@ _mm512_bsrli_epi128 (__m512i __A, const int __N)\n #define _mm512_alignr_epi8(X, Y, N)\t\t\t\t\t\t    \\\n   ((__m512i) __builtin_ia32_palignr512 ((__v8di)(__m512i)(X),\t\t\t    \\\n \t\t\t\t\t(__v8di)(__m512i)(Y),\t\t\t    \\\n-\t\t\t\t\t(int)(N * 8)))\n+\t\t\t\t\t(int)((N) * 8)))\n \n #define _mm512_mask_alignr_epi8(W, U, X, Y, N)\t\t\t\t\t    \\\n   ((__m512i) __builtin_ia32_palignr512_mask ((__v8di)(__m512i)(X),\t\t    \\\n-\t\t\t\t\t    (__v8di)(__m512i)(Y), (int)(N * 8),\t    \\\n+\t\t\t\t\t    (__v8di)(__m512i)(Y), (int)((N) * 8),   \\\n \t\t\t\t\t    (__v8di)(__m512i)(W), (__mmask64)(U)))\n \n #define _mm512_maskz_alignr_epi8(U, X, Y, N)\t\t\t\t\t    \\\n   ((__m512i) __builtin_ia32_palignr512_mask ((__v8di)(__m512i)(X),\t\t    \\\n-\t\t\t\t\t     (__v8di)(__m512i)(Y), (int)(N * 8),    \\\n+\t\t\t\t\t     (__v8di)(__m512i)(Y), (int)((N) * 8),  \\\n \t\t\t\t\t     (__v8di)(__m512i)\t\t\t    \\\n \t\t\t\t\t     _mm512_setzero_si512 (),\t\t    \\\n \t\t\t\t\t     (__mmask64)(U)))"}, {"sha": "012cf4eb31e2065fd447968bffefd3d8fb760384", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=0c8217b16f307c3eedce8f22354714938613f701", "patch": "@@ -8570,22 +8570,22 @@ _mm512_maskz_cvtps_ph (__mmask16 __W, __m512 __A, const int __I)\n     (__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(A), (__v16sf)_mm512_setzero_ps(), U, B)\n \n #define _mm512_cvt_roundps_ph(A, I)\t\t\t\t\t\t \\\n-  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I),\\\n+  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I),\\\n     (__v16hi)_mm256_undefined_si256 (), -1))\n #define _mm512_cvtps_ph(A, I)\t\t\t\t\t\t \\\n-  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I),\\\n+  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I),\\\n     (__v16hi)_mm256_undefined_si256 (), -1))\n #define _mm512_mask_cvt_roundps_ph(U, W, A, I)\t\t\t\t \\\n-  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I),\\\n+  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I),\\\n     (__v16hi)(__m256i)(U), (__mmask16) (W)))\n #define _mm512_mask_cvtps_ph(U, W, A, I)\t\t\t\t \\\n-  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I),\\\n+  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I),\\\n     (__v16hi)(__m256i)(U), (__mmask16) (W)))\n #define _mm512_maskz_cvt_roundps_ph(W, A, I)\t\t\t\t\t \\\n-  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I),\\\n+  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I),\\\n     (__v16hi)_mm256_setzero_si256 (), (__mmask16) (W)))\n #define _mm512_maskz_cvtps_ph(W, A, I)\t\t\t\t\t \\\n-  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) A, (int) (I),\\\n+  ((__m256i) __builtin_ia32_vcvtps2ph512_mask ((__v16sf)(__m512) (A), (int) (I),\\\n     (__v16hi)_mm256_setzero_si256 (), (__mmask16) (W)))\n #endif\n \n@@ -10081,32 +10081,32 @@ _mm_mask_cmp_round_ss_mask (__mmask8 __M, __m128 __X, __m128 __Y,\n #define _mm512_mask_cmp_epi64_mask(M, X, Y, P)\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmpq512_mask ((__v8di)(__m512i)(X),\t\\\n \t\t\t\t\t   (__v8di)(__m512i)(Y), (int)(P),\\\n-\t\t\t\t\t   (__mmask8)M))\n+\t\t\t\t\t   (__mmask8)(M)))\n \n #define _mm512_mask_cmp_epi32_mask(M, X, Y, P)\t\t\t\t\\\n   ((__mmask16) __builtin_ia32_cmpd512_mask ((__v16si)(__m512i)(X),\t\\\n \t\t\t\t\t    (__v16si)(__m512i)(Y), (int)(P), \\\n-\t\t\t\t\t    (__mmask16)M))\n+\t\t\t\t\t    (__mmask16)(M)))\n \n #define _mm512_mask_cmp_epu64_mask(M, X, Y, P)\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_ucmpq512_mask ((__v8di)(__m512i)(X),\t\\\n \t\t\t\t\t    (__v8di)(__m512i)(Y), (int)(P),\\\n-\t\t\t\t\t    (__mmask8)M))\n+\t\t\t\t\t    (__mmask8)(M)))\n \n #define _mm512_mask_cmp_epu32_mask(M, X, Y, P)\t\t\t\t\\\n   ((__mmask16) __builtin_ia32_ucmpd512_mask ((__v16si)(__m512i)(X),\t\\\n \t\t\t\t\t     (__v16si)(__m512i)(Y), (int)(P), \\\n-\t\t\t\t\t     (__mmask16)M))\n+\t\t\t\t\t     (__mmask16)(M)))\n \n #define _mm512_mask_cmp_round_pd_mask(M, X, Y, P, R)\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X),\t\\\n \t\t\t\t\t    (__v8df)(__m512d)(Y), (int)(P),\\\n-\t\t\t\t\t    (__mmask8)M, R))\n+\t\t\t\t\t    (__mmask8)(M), R))\n \n #define _mm512_mask_cmp_round_ps_mask(M, X, Y, P, R)\t\t\t\\\n   ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X),\t\\\n \t\t\t\t\t     (__v16sf)(__m512)(Y), (int)(P),\\\n-\t\t\t\t\t     (__mmask16)M, R))\n+\t\t\t\t\t     (__mmask16)(M), R))\n \n #define _mm_cmp_round_sd_mask(X, Y, P, R)\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X),\t\t\\\n@@ -15498,12 +15498,12 @@ _mm_mask_cmp_ss_mask (__mmask8 __M, __m128 __X, __m128 __Y, const int __P)\n #define _mm512_mask_cmp_pd_mask(M, X, Y, P)\t\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmppd512_mask ((__v8df)(__m512d)(X),\t\\\n \t\t\t\t\t    (__v8df)(__m512d)(Y), (int)(P),\\\n-\t\t\t\t\t    (__mmask8)M, _MM_FROUND_CUR_DIRECTION))\n+\t\t\t\t\t    (__mmask8)(M), _MM_FROUND_CUR_DIRECTION))\n \n #define _mm512_mask_cmp_ps_mask(M, X, Y, P)\t\t\t\t\t\\\n   ((__mmask16) __builtin_ia32_cmpps512_mask ((__v16sf)(__m512)(X),\t\\\n \t\t\t\t\t     (__v16sf)(__m512)(Y), (int)(P),\\\n-\t\t\t\t\t     (__mmask16)M,_MM_FROUND_CUR_DIRECTION))\n+\t\t\t\t\t     (__mmask16)(M),_MM_FROUND_CUR_DIRECTION))\n \n #define _mm_cmp_sd_mask(X, Y, P)\t\t\t\t\t\\\n   ((__mmask8) __builtin_ia32_cmpsd_mask ((__v2df)(__m128d)(X),\t\t\\"}, {"sha": "bee2639d60a07d99db58d8676b1463dbc512c51a", "filename": "gcc/config/i386/avx512vlbwintrin.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Favx512vlbwintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Favx512vlbwintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vlbwintrin.h?ref=0c8217b16f307c3eedce8f22354714938613f701", "patch": "@@ -1787,7 +1787,7 @@ _mm_maskz_slli_epi16 (__mmask8 __U, __m128i __A, int __B)\n #else\n #define _mm256_mask_alignr_epi8(W, U, X, Y, N)\t\t\t\t\t    \\\n   ((__m256i) __builtin_ia32_palignr256_mask ((__v4di)(__m256i)(X),\t\t    \\\n-\t\t\t\t\t    (__v4di)(__m256i)(Y), (int)(N * 8),\t    \\\n+\t\t\t\t\t    (__v4di)(__m256i)(Y), (int)((N) * 8),   \\\n \t\t\t\t\t    (__v4di)(__m256i)(X), (__mmask32)(U)))\n \n #define _mm256_mask_srli_epi16(W, U, A, B)                              \\\n@@ -1864,18 +1864,18 @@ _mm_maskz_slli_epi16 (__mmask8 __U, __m128i __A, int __B)\n \n #define _mm256_maskz_alignr_epi8(U, X, Y, N)\t\t\t\t\t    \\\n   ((__m256i) __builtin_ia32_palignr256_mask ((__v4di)(__m256i)(X),\t\t    \\\n-\t\t\t\t\t    (__v4di)(__m256i)(Y), (int)(N * 8),\t    \\\n+\t\t\t\t\t    (__v4di)(__m256i)(Y), (int)((N) * 8),   \\\n \t\t\t\t\t    (__v4di)(__m256i)_mm256_setzero_si256 (),   \\\n \t\t\t\t\t    (__mmask32)(U)))\n \n #define _mm_mask_alignr_epi8(W, U, X, Y, N)\t\t\t\t\t    \\\n   ((__m128i) __builtin_ia32_palignr128_mask ((__v2di)(__m128i)(X),\t\t    \\\n-\t\t\t\t\t    (__v2di)(__m128i)(Y), (int)(N * 8),\t    \\\n+\t\t\t\t\t    (__v2di)(__m128i)(Y), (int)((N) * 8),   \\\n \t\t\t\t\t    (__v2di)(__m128i)(X), (__mmask16)(U)))\n \n #define _mm_maskz_alignr_epi8(U, X, Y, N)\t\t\t\t\t    \\\n   ((__m128i) __builtin_ia32_palignr128_mask ((__v2di)(__m128i)(X),\t\t    \\\n-\t\t\t\t\t    (__v2di)(__m128i)(Y), (int)(N * 8),\t    \\\n+\t\t\t\t\t    (__v2di)(__m128i)(Y), (int)((N) * 8),   \\\n \t\t\t\t\t    (__v2di)(__m128i)_mm_setzero_si128 (),  \\\n \t\t\t\t\t    (__mmask16)(U)))\n \n@@ -2033,7 +2033,7 @@ _mm_maskz_slli_epi16 (__mmask8 __U, __m128i __A, int __B)\n #define _mm256_mask_cmp_epu8_mask(M, X, Y, P)\t\t\t\t\\\n   ((__mmask32) __builtin_ia32_ucmpb256_mask ((__v32qi)(__m256i)(X),\t\\\n \t\t\t\t\t    (__v32qi)(__m256i)(Y), (int)(P),\\\n-\t\t\t\t\t    (__mmask32)M))\n+\t\t\t\t\t    (__mmask32)(M)))\n #endif\n \n extern __inline __mmask32"}, {"sha": "cb6cc0ce7821ae3c99d26faa8ab1fd8c3fdedf43", "filename": "gcc/config/i386/avx512vlintrin.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Favx512vlintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Favx512vlintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vlintrin.h?ref=0c8217b16f307c3eedce8f22354714938613f701", "patch": "@@ -13466,19 +13466,19 @@ _mm256_permutex_pd (__m256d __X, const int __M)\n         (__mmask8)(U)))\n \n #define _mm_mask_cvtps_ph(W, U, A, I)\t\t\t\t\t\t\\\n-  ((__m128i) __builtin_ia32_vcvtps2ph_mask ((__v4sf)(__m128) A, (int) (I),      \\\n+  ((__m128i) __builtin_ia32_vcvtps2ph_mask ((__v4sf)(__m128) (A), (int) (I),\t\\\n       (__v8hi)(__m128i) (W), (__mmask8) (U)))\n \n #define _mm_maskz_cvtps_ph(U, A, I)\t\t\t\t\t\t\\\n-  ((__m128i) __builtin_ia32_vcvtps2ph_mask ((__v4sf)(__m128) A, (int) (I),      \\\n+  ((__m128i) __builtin_ia32_vcvtps2ph_mask ((__v4sf)(__m128) (A), (int) (I),\t\\\n       (__v8hi)(__m128i) _mm_setzero_si128 (), (__mmask8) (U)))\n \n #define _mm256_mask_cvtps_ph(W, U, A, I)\t\t\t\t\t\\\n-  ((__m128i) __builtin_ia32_vcvtps2ph256_mask ((__v8sf)(__m256) A, (int) (I),\t\\\n+  ((__m128i) __builtin_ia32_vcvtps2ph256_mask ((__v8sf)(__m256) (A), (int) (I),\t\\\n       (__v8hi)(__m128i) (W), (__mmask8) (U)))\n \n #define _mm256_maskz_cvtps_ph(U, A, I)\t\t\t\t\t\t\\\n-  ((__m128i) __builtin_ia32_vcvtps2ph256_mask ((__v8sf)(__m256) A, (int) (I),   \\\n+  ((__m128i) __builtin_ia32_vcvtps2ph256_mask ((__v8sf)(__m256) (A), (int) (I),\t\\\n       (__v8hi)(__m128i) _mm_setzero_si128 (), (__mmask8) (U)))\n \n #define _mm256_mask_srai_epi32(W, U, A, B)\t\t\t\t\\"}, {"sha": "8276e8d652155cdeaafff339f4602ed79f53ee23", "filename": "gcc/config/i386/f16cintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Ff16cintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Ff16cintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ff16cintrin.h?ref=0c8217b16f307c3eedce8f22354714938613f701", "patch": "@@ -84,10 +84,10 @@ _mm256_cvtps_ph (__m256 __A, const int __I)\n     }))\n \n #define _mm_cvtps_ph(A, I) \\\n-  ((__m128i) __builtin_ia32_vcvtps2ph ((__v4sf)(__m128) A, (int) (I)))\n+  ((__m128i) __builtin_ia32_vcvtps2ph ((__v4sf)(__m128) (A), (int) (I)))\n \n #define _mm256_cvtps_ph(A, I) \\\n-  ((__m128i) __builtin_ia32_vcvtps2ph256 ((__v8sf)(__m256) A, (int) (I)))\n+  ((__m128i) __builtin_ia32_vcvtps2ph256 ((__v8sf)(__m256) (A), (int) (I)))\n #endif /* __OPTIMIZE */\n \n #ifdef __DISABLE_F16C__"}, {"sha": "13833b261c615380eedb1297b4a7126aa0bbdda8", "filename": "gcc/config/i386/shaintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Fshaintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8217b16f307c3eedce8f22354714938613f701/gcc%2Fconfig%2Fi386%2Fshaintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fshaintrin.h?ref=0c8217b16f307c3eedce8f22354714938613f701", "patch": "@@ -64,8 +64,8 @@ _mm_sha1rnds4_epu32 (__m128i __A, __m128i __B, const int __I)\n }\n #else\n #define _mm_sha1rnds4_epu32(A, B, I)\t\t\t\t    \\\n-  ((__m128i) __builtin_ia32_sha1rnds4 ((__v4si)(__m128i)A,\t    \\\n-\t\t\t\t       (__v4si)(__m128i)B, (int)I))\n+  ((__m128i) __builtin_ia32_sha1rnds4 ((__v4si)(__m128i)(A),\t    \\\n+\t\t\t\t       (__v4si)(__m128i)(B), (int)(I)))\n #endif\n \n extern __inline __m128i"}]}