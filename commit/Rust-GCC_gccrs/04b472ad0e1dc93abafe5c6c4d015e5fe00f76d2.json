{"sha": "04b472ad0e1dc93abafe5c6c4d015e5fe00f76d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRiNDcyYWQwZTFkYzkzYWJhZmU1YzZjNGQwMTVlNWZlMDBmNzZkMg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2021-01-19T15:37:25Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2021-01-19T17:27:52Z"}, "message": "aarch64: Relax flags of saturation builtins\n\nThis patch relaxes the flags for the saturating arithmetic builtins to\nNONE, allowing for more optimisation.\n\ngcc/ChangeLog\n\n\t* config/aarch64/aarch64-simd-builtins.def (sqshl, uqshl,\n\tsqrshl, uqrshl, sqadd, uqadd, sqsub, uqsub, suqadd, usqadd, sqmovn,\n\tuqmovn, sqxtn2, uqxtn2, sqabs, sqneg, sqdmlal, sqdmlsl, sqdmlal_lane,\n\tsqdmlsl_lane, sqdmlal_laneq, sqdmlsl_laneq, sqdmlal_n, sqdmlsl_n,\n\tsqdmlal2, sqdmlsl2, sqdmlal2_lane, sqdmlsl2_lane, sqdmlal2_laneq,\n\tsqdmlsl2_laneq, sqdmlal2_n, sqdmlsl2_n, sqdmull, sqdmull_lane,\n\tsqdmull_laneq, sqdmull_n, sqdmull2, sqdmull2_lane, sqdmull2_laneq,\n\tsqdmull2_n, sqdmulh, sqrdmulh, sqdmulh_lane, sqdmulh_laneq,\n\tsqrdmulh_lane, sqrdmulh_laneq, sqshrun_n, sqrshrun_n, sqshrn_n,\n\tuqshrn_n, sqrshrn_n, uqrshrn_n, sqshlu_n, sqshl_n, uqshl_n, sqrdmlah,\n\tsqrdmlsh, sqrdmlah_lane, sqrdmlsh_lane, sqrdmlah_laneq, sqrdmlsh_laneq,\n\tsqmovun): Use NONE flags.", "tree": {"sha": "9bfc06fc7e11a9d54084aaa41c978bf84c6ee6e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bfc06fc7e11a9d54084aaa41c978bf84c6ee6e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04b472ad0e1dc93abafe5c6c4d015e5fe00f76d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b472ad0e1dc93abafe5c6c4d015e5fe00f76d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b472ad0e1dc93abafe5c6c4d015e5fe00f76d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b472ad0e1dc93abafe5c6c4d015e5fe00f76d2/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "763b865a17d32ff1d19720e333999de25132d3d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/763b865a17d32ff1d19720e333999de25132d3d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/763b865a17d32ff1d19720e333999de25132d3d4"}], "stats": {"total": 126, "additions": 63, "deletions": 63}, "files": [{"sha": "168e47da95f03d48d280fa2b2d4e6b7895357984", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b472ad0e1dc93abafe5c6c4d015e5fe00f76d2/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b472ad0e1dc93abafe5c6c4d015e5fe00f76d2/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=04b472ad0e1dc93abafe5c6c4d015e5fe00f76d2", "patch": "@@ -56,18 +56,18 @@\n   BUILTIN_VB (UNOP, popcount, 2, ALL)\n \n   /* Implemented by aarch64_<sur>q<r>shl<mode>.  */\n-  BUILTIN_VSDQ_I (BINOP, sqshl, 0, ALL)\n-  BUILTIN_VSDQ_I (BINOP_UUS, uqshl, 0, ALL)\n-  BUILTIN_VSDQ_I (BINOP, sqrshl, 0, ALL)\n-  BUILTIN_VSDQ_I (BINOP_UUS, uqrshl, 0, ALL)\n+  BUILTIN_VSDQ_I (BINOP, sqshl, 0, NONE)\n+  BUILTIN_VSDQ_I (BINOP_UUS, uqshl, 0, NONE)\n+  BUILTIN_VSDQ_I (BINOP, sqrshl, 0, NONE)\n+  BUILTIN_VSDQ_I (BINOP_UUS, uqrshl, 0, NONE)\n   /* Implemented by aarch64_<su_optab><optab><mode>.  */\n-  BUILTIN_VSDQ_I (BINOP, sqadd, 0, ALL)\n-  BUILTIN_VSDQ_I (BINOPU, uqadd, 0, ALL)\n-  BUILTIN_VSDQ_I (BINOP, sqsub, 0, ALL)\n-  BUILTIN_VSDQ_I (BINOPU, uqsub, 0, ALL)\n+  BUILTIN_VSDQ_I (BINOP, sqadd, 0, NONE)\n+  BUILTIN_VSDQ_I (BINOPU, uqadd, 0, NONE)\n+  BUILTIN_VSDQ_I (BINOP, sqsub, 0, NONE)\n+  BUILTIN_VSDQ_I (BINOPU, uqsub, 0, NONE)\n   /* Implemented by aarch64_<sur>qadd<mode>.  */\n-  BUILTIN_VSDQ_I (BINOP_SSU, suqadd, 0, ALL)\n-  BUILTIN_VSDQ_I (BINOP_UUS, usqadd, 0, ALL)\n+  BUILTIN_VSDQ_I (BINOP_SSU, suqadd, 0, NONE)\n+  BUILTIN_VSDQ_I (BINOP_UUS, usqadd, 0, NONE)\n \n   /* Implemented by aarch64_get_dreg<VSTRUCT:mode><VDC:mode>.  */\n   BUILTIN_VDC (GETREG, get_dregoi, 0, AUTO_FP)\n@@ -186,40 +186,40 @@\n   BUILTIN_VQW (TERNOP, smlsl_hi, 0, NONE)\n   BUILTIN_VQW (TERNOPU, umlsl_hi, 0, NONE)\n \n-  BUILTIN_VSQN_HSDI (UNOPUS, sqmovun, 0, ALL)\n+  BUILTIN_VSQN_HSDI (UNOPUS, sqmovun, 0, NONE)\n   /* Implemented by aarch64_<sur>qmovn<mode>.  */\n-  BUILTIN_VSQN_HSDI (UNOP, sqmovn, 0, ALL)\n-  BUILTIN_VSQN_HSDI (UNOP, uqmovn, 0, ALL)\n+  BUILTIN_VSQN_HSDI (UNOP, sqmovn, 0, NONE)\n+  BUILTIN_VSQN_HSDI (UNOP, uqmovn, 0, NONE)\n \n   /* Implemented by aarch64_<su>qxtn2<mode>.  */\n-  BUILTIN_VQN (BINOP, sqxtn2, 0, ALL)\n-  BUILTIN_VQN (BINOPU, uqxtn2, 0, ALL)\n+  BUILTIN_VQN (BINOP, sqxtn2, 0, NONE)\n+  BUILTIN_VQN (BINOPU, uqxtn2, 0, NONE)\n \n   /* Implemented by aarch64_s<optab><mode>.  */\n-  BUILTIN_VSDQ_I (UNOP, sqabs, 0, ALL)\n-  BUILTIN_VSDQ_I (UNOP, sqneg, 0, ALL)\n+  BUILTIN_VSDQ_I (UNOP, sqabs, 0, NONE)\n+  BUILTIN_VSDQ_I (UNOP, sqneg, 0, NONE)\n \n   /* Implemented by aarch64_sqdml<SBINQOPS:as>l<mode>.  */\n-  BUILTIN_VSD_HSI (TERNOP, sqdmlal, 0, ALL)\n-  BUILTIN_VSD_HSI (TERNOP, sqdmlsl, 0, ALL)\n+  BUILTIN_VSD_HSI (TERNOP, sqdmlal, 0, NONE)\n+  BUILTIN_VSD_HSI (TERNOP, sqdmlsl, 0, NONE)\n   /* Implemented by aarch64_sqdml<SBINQOPS:as>l_lane<mode>.  */\n-  BUILTIN_VSD_HSI (QUADOP_LANE, sqdmlal_lane, 0, ALL)\n-  BUILTIN_VSD_HSI (QUADOP_LANE, sqdmlsl_lane, 0, ALL)\n+  BUILTIN_VSD_HSI (QUADOP_LANE, sqdmlal_lane, 0, NONE)\n+  BUILTIN_VSD_HSI (QUADOP_LANE, sqdmlsl_lane, 0, NONE)\n   /* Implemented by aarch64_sqdml<SBINQOPS:as>l_laneq<mode>.  */\n-  BUILTIN_VSD_HSI (QUADOP_LANE, sqdmlal_laneq, 0, ALL)\n-  BUILTIN_VSD_HSI (QUADOP_LANE, sqdmlsl_laneq, 0, ALL)\n+  BUILTIN_VSD_HSI (QUADOP_LANE, sqdmlal_laneq, 0, NONE)\n+  BUILTIN_VSD_HSI (QUADOP_LANE, sqdmlsl_laneq, 0, NONE)\n   /* Implemented by aarch64_sqdml<SBINQOPS:as>l_n<mode>.  */\n-  BUILTIN_VD_HSI (TERNOP, sqdmlal_n, 0, ALL)\n-  BUILTIN_VD_HSI (TERNOP, sqdmlsl_n, 0, ALL)\n-\n-  BUILTIN_VQ_HSI (TERNOP, sqdmlal2, 0, ALL)\n-  BUILTIN_VQ_HSI (TERNOP, sqdmlsl2, 0, ALL)\n-  BUILTIN_VQ_HSI (QUADOP_LANE, sqdmlal2_lane, 0, ALL)\n-  BUILTIN_VQ_HSI (QUADOP_LANE, sqdmlsl2_lane, 0, ALL)\n-  BUILTIN_VQ_HSI (QUADOP_LANE, sqdmlal2_laneq, 0, ALL)\n-  BUILTIN_VQ_HSI (QUADOP_LANE, sqdmlsl2_laneq, 0, ALL)\n-  BUILTIN_VQ_HSI (TERNOP, sqdmlal2_n, 0, ALL)\n-  BUILTIN_VQ_HSI (TERNOP, sqdmlsl2_n, 0, ALL)\n+  BUILTIN_VD_HSI (TERNOP, sqdmlal_n, 0, NONE)\n+  BUILTIN_VD_HSI (TERNOP, sqdmlsl_n, 0, NONE)\n+\n+  BUILTIN_VQ_HSI (TERNOP, sqdmlal2, 0, NONE)\n+  BUILTIN_VQ_HSI (TERNOP, sqdmlsl2, 0, NONE)\n+  BUILTIN_VQ_HSI (QUADOP_LANE, sqdmlal2_lane, 0, NONE)\n+  BUILTIN_VQ_HSI (QUADOP_LANE, sqdmlsl2_lane, 0, NONE)\n+  BUILTIN_VQ_HSI (QUADOP_LANE, sqdmlal2_laneq, 0, NONE)\n+  BUILTIN_VQ_HSI (QUADOP_LANE, sqdmlsl2_laneq, 0, NONE)\n+  BUILTIN_VQ_HSI (TERNOP, sqdmlal2_n, 0, NONE)\n+  BUILTIN_VQ_HSI (TERNOP, sqdmlsl2_n, 0, NONE)\n \n   BUILTIN_VD_BHSI (BINOP, intrinsic_vec_smult_lo_, 0, NONE)\n   BUILTIN_VD_BHSI (BINOPU, intrinsic_vec_umult_lo_, 0, NONE)\n@@ -236,22 +236,22 @@\n   BUILTIN_VD_HSI (TERNOPU_LANE, vec_umult_laneq_, 0, ALL)\n   BUILTIN_VD_HSI (QUADOPU_LANE, vec_umlal_laneq_, 0, ALL)\n \n-  BUILTIN_VSD_HSI (BINOP, sqdmull, 0, ALL)\n-  BUILTIN_VSD_HSI (TERNOP_LANE, sqdmull_lane, 0, ALL)\n-  BUILTIN_VSD_HSI (TERNOP_LANE, sqdmull_laneq, 0, ALL)\n-  BUILTIN_VD_HSI (BINOP, sqdmull_n, 0, ALL)\n-  BUILTIN_VQ_HSI (BINOP, sqdmull2, 0, ALL)\n-  BUILTIN_VQ_HSI (TERNOP_LANE, sqdmull2_lane, 0, ALL)\n-  BUILTIN_VQ_HSI (TERNOP_LANE, sqdmull2_laneq, 0, ALL)\n-  BUILTIN_VQ_HSI (BINOP, sqdmull2_n, 0, ALL)\n+  BUILTIN_VSD_HSI (BINOP, sqdmull, 0, NONE)\n+  BUILTIN_VSD_HSI (TERNOP_LANE, sqdmull_lane, 0, NONE)\n+  BUILTIN_VSD_HSI (TERNOP_LANE, sqdmull_laneq, 0, NONE)\n+  BUILTIN_VD_HSI (BINOP, sqdmull_n, 0, NONE)\n+  BUILTIN_VQ_HSI (BINOP, sqdmull2, 0, NONE)\n+  BUILTIN_VQ_HSI (TERNOP_LANE, sqdmull2_lane, 0, NONE)\n+  BUILTIN_VQ_HSI (TERNOP_LANE, sqdmull2_laneq, 0, NONE)\n+  BUILTIN_VQ_HSI (BINOP, sqdmull2_n, 0, NONE)\n   /* Implemented by aarch64_sq<r>dmulh<mode>.  */\n-  BUILTIN_VSDQ_HSI (BINOP, sqdmulh, 0, ALL)\n-  BUILTIN_VSDQ_HSI (BINOP, sqrdmulh, 0, ALL)\n+  BUILTIN_VSDQ_HSI (BINOP, sqdmulh, 0, NONE)\n+  BUILTIN_VSDQ_HSI (BINOP, sqrdmulh, 0, NONE)\n   /* Implemented by aarch64_sq<r>dmulh_lane<q><mode>.  */\n-  BUILTIN_VSDQ_HSI (TERNOP_LANE, sqdmulh_lane, 0, ALL)\n-  BUILTIN_VSDQ_HSI (TERNOP_LANE, sqdmulh_laneq, 0, ALL)\n-  BUILTIN_VSDQ_HSI (TERNOP_LANE, sqrdmulh_lane, 0, ALL)\n-  BUILTIN_VSDQ_HSI (TERNOP_LANE, sqrdmulh_laneq, 0, ALL)\n+  BUILTIN_VSDQ_HSI (TERNOP_LANE, sqdmulh_lane, 0, NONE)\n+  BUILTIN_VSDQ_HSI (TERNOP_LANE, sqdmulh_laneq, 0, NONE)\n+  BUILTIN_VSDQ_HSI (TERNOP_LANE, sqrdmulh_lane, 0, NONE)\n+  BUILTIN_VSDQ_HSI (TERNOP_LANE, sqrdmulh_laneq, 0, NONE)\n \n   BUILTIN_VSDQ_I_DI (BINOP, ashl, 3, ALL)\n   /* Implemented by aarch64_<sur>shl<mode>.  */\n@@ -311,12 +311,12 @@\n   BUILTIN_VQW (SHIFTIMM, sshll2_n, 0, ALL)\n   BUILTIN_VQW (SHIFTIMM, ushll2_n, 0, ALL)\n   /* Implemented by aarch64_<sur>q<r>shr<u>n_n<mode>.  */\n-  BUILTIN_VSQN_HSDI (SHIFTIMM, sqshrun_n, 0, ALL)\n-  BUILTIN_VSQN_HSDI (SHIFTIMM, sqrshrun_n, 0, ALL)\n-  BUILTIN_VSQN_HSDI (SHIFTIMM, sqshrn_n, 0, ALL)\n-  BUILTIN_VSQN_HSDI (USHIFTIMM, uqshrn_n, 0, ALL)\n-  BUILTIN_VSQN_HSDI (SHIFTIMM, sqrshrn_n, 0, ALL)\n-  BUILTIN_VSQN_HSDI (USHIFTIMM, uqrshrn_n, 0, ALL)\n+  BUILTIN_VSQN_HSDI (SHIFTIMM, sqshrun_n, 0, NONE)\n+  BUILTIN_VSQN_HSDI (SHIFTIMM, sqrshrun_n, 0, NONE)\n+  BUILTIN_VSQN_HSDI (SHIFTIMM, sqshrn_n, 0, NONE)\n+  BUILTIN_VSQN_HSDI (USHIFTIMM, uqshrn_n, 0, NONE)\n+  BUILTIN_VSQN_HSDI (SHIFTIMM, sqrshrn_n, 0, NONE)\n+  BUILTIN_VSQN_HSDI (USHIFTIMM, uqrshrn_n, 0, NONE)\n   /* Implemented by aarch64_<sur>q<r>shr<u>n2_n<mode>.  */\n   BUILTIN_VQN (SHIFT2IMM_UUSS, sqshrun2_n, 0, NONE)\n   BUILTIN_VQN (SHIFT2IMM_UUSS, sqrshrun2_n, 0, NONE)\n@@ -331,9 +331,9 @@\n   VAR2 (SHIFTINSERTP, ssli_n, 0, ALL, di, v2di)\n   BUILTIN_VSDQ_I_DI (USHIFTACC, usli_n, 0, ALL)\n   /* Implemented by aarch64_<sur>qshl<u>_n<mode>.  */\n-  BUILTIN_VSDQ_I (SHIFTIMM_USS, sqshlu_n, 0, ALL)\n-  BUILTIN_VSDQ_I (SHIFTIMM, sqshl_n, 0, ALL)\n-  BUILTIN_VSDQ_I (USHIFTIMM, uqshl_n, 0, ALL)\n+  BUILTIN_VSDQ_I (SHIFTIMM_USS, sqshlu_n, 0, NONE)\n+  BUILTIN_VSDQ_I (SHIFTIMM, sqshl_n, 0, NONE)\n+  BUILTIN_VSDQ_I (USHIFTIMM, uqshl_n, 0, NONE)\n \n   /* Implemented by aarch64_xtn2<mode>.  */\n   BUILTIN_VQN (UNOP, xtn2, 0, NONE)\n@@ -606,16 +606,16 @@\n   /* Builtins for ARMv8.1-A Adv.SIMD instructions.  */\n \n   /* Implemented by aarch64_sqrdml<SQRDMLH_AS:rdma_as>h<mode>.  */\n-  BUILTIN_VSDQ_HSI (TERNOP, sqrdmlah, 0, ALL)\n-  BUILTIN_VSDQ_HSI (TERNOP, sqrdmlsh, 0, ALL)\n+  BUILTIN_VSDQ_HSI (TERNOP, sqrdmlah, 0, NONE)\n+  BUILTIN_VSDQ_HSI (TERNOP, sqrdmlsh, 0, NONE)\n \n   /* Implemented by aarch64_sqrdml<SQRDMLH_AS:rdma_as>h_lane<mode>.  */\n-  BUILTIN_VSDQ_HSI (QUADOP_LANE, sqrdmlah_lane, 0, ALL)\n-  BUILTIN_VSDQ_HSI (QUADOP_LANE, sqrdmlsh_lane, 0, ALL)\n+  BUILTIN_VSDQ_HSI (QUADOP_LANE, sqrdmlah_lane, 0, NONE)\n+  BUILTIN_VSDQ_HSI (QUADOP_LANE, sqrdmlsh_lane, 0, NONE)\n \n   /* Implemented by aarch64_sqrdml<SQRDMLH_AS:rdma_as>h_laneq<mode>.  */\n-  BUILTIN_VSDQ_HSI (QUADOP_LANE, sqrdmlah_laneq, 0, ALL)\n-  BUILTIN_VSDQ_HSI (QUADOP_LANE, sqrdmlsh_laneq, 0, ALL)\n+  BUILTIN_VSDQ_HSI (QUADOP_LANE, sqrdmlah_laneq, 0, NONE)\n+  BUILTIN_VSDQ_HSI (QUADOP_LANE, sqrdmlsh_laneq, 0, NONE)\n \n   /* Implemented by <FCVT_F2FIXED/FIXED2F:fcvt_fixed_insn><*><*>3.  */\n   BUILTIN_VSDQ_HSDI (SHIFTIMM, scvtf, 3, ALL)"}]}