{"sha": "bff3ce71a12e8244111bc9e349de8cd685053c89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZmM2NlNzFhMTJlODI0NDExMWJjOWUzNDlkZThjZDY4NTA1M2M4OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-01-06T23:54:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-01-06T23:54:34Z"}, "message": "error.c (dump_decl): operator new, not operatornew.\n\n        * error.c (dump_decl): operator new, not operatornew.\n\n        * class.c (field_decl_cmp): A nontype is \"greater\" than a type.\n        * search.c (lookup_field_1): Look for the last field with the\n        desired name.\n\nFrom-SVN: r31262", "tree": {"sha": "222c544e1b0913b902e981084f81695790538d0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/222c544e1b0913b902e981084f81695790538d0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bff3ce71a12e8244111bc9e349de8cd685053c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff3ce71a12e8244111bc9e349de8cd685053c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bff3ce71a12e8244111bc9e349de8cd685053c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff3ce71a12e8244111bc9e349de8cd685053c89/comments", "author": null, "committer": null, "parents": [{"sha": "ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee07f4f4b1bc7170dc29f9bd3ebf16d3932edb79"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "c3a9a97c56bcd383cc29d4a88e623f111472d7bd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bff3ce71a12e8244111bc9e349de8cd685053c89/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bff3ce71a12e8244111bc9e349de8cd685053c89/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bff3ce71a12e8244111bc9e349de8cd685053c89", "patch": "@@ -1,3 +1,11 @@\n+2000-01-06  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* error.c (dump_decl): operator new, not operatornew.\n+\n+\t* class.c (field_decl_cmp): A nontype is \"greater\" than a type.\n+\t* search.c (lookup_field_1): Look for the last field with the\n+\tdesired name.\n+\n 2000-01-05  Nathan Sidwell  <nathan@acm.org>\n \n \t* decl2.c (lookup_arg_dependent): Deal with FNS not being a\n@@ -323,7 +331,8 @@\n \t(avoid_overlap): Moved here from tree.c.\n \t(build_base_fields): Likewise.\n \t(check_bases): New function, split out from finish_base_struct.\n-\t(check_bases_and_members): New function, split out from finish_struct_1.\n+\t(check_bases_and_members): New function, split out from \n+\tfinish_struct_1.\n \t(struct base_info): Remove cant_have_default_ctor,\n \tcant_have_const_ctor, cant_have_asn_ref.\n \t(finish_base_struct): Split semantic analysis into check_bases."}, {"sha": "89d687703a4808f35361654231cba4ab5d9fe6a7", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bff3ce71a12e8244111bc9e349de8cd685053c89/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bff3ce71a12e8244111bc9e349de8cd685053c89/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=bff3ce71a12e8244111bc9e349de8cd685053c89", "patch": "@@ -1946,7 +1946,8 @@ field_decl_cmp (x, y)\n      const tree *x, *y;\n {\n   if (DECL_NAME (*x) == DECL_NAME (*y))\n-    return 0;\n+    /* A nontype is \"greater\" than a type.  */\n+    return DECL_DECLARES_TYPE_P (*y) - DECL_DECLARES_TYPE_P (*x);\n   if (DECL_NAME (*x) == NULL_TREE)\n     return -1;\n   if (DECL_NAME (*y) == NULL_TREE)"}, {"sha": "f76b4da772ca0d2aeac29fd9f21264a509b5d20d", "filename": "gcc/cp/error.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bff3ce71a12e8244111bc9e349de8cd685053c89/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bff3ce71a12e8244111bc9e349de8cd685053c89/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=bff3ce71a12e8244111bc9e349de8cd685053c89", "patch": "@@ -951,6 +951,8 @@ dump_decl (t, flags)\n \t  {\n \t    const char *name_string = operator_name_string (t);\n \t    OB_PUTS (\"operator\");\n+\t    if (ISALPHA (name_string[0]))\n+\t      OB_PUTC (' ');\n \t    OB_PUTCP (name_string);\n \t  }\n \telse\n@@ -1282,6 +1284,8 @@ dump_function_name (t, flags)\n     {\n       const char *name_string = operator_name_string (name);\n       OB_PUTS (\"operator\");\n+      if (ISALPHA (name_string[0]))\n+\tOB_PUTC (' ');\n       OB_PUTCP (name_string);\n     }\n   else"}, {"sha": "c5ec089c1ee9c0b9da39778f2742483243e486f6", "filename": "gcc/cp/search.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bff3ce71a12e8244111bc9e349de8cd685053c89/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bff3ce71a12e8244111bc9e349de8cd685053c89/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=bff3ce71a12e8244111bc9e349de8cd685053c89", "patch": "@@ -611,7 +611,16 @@ lookup_field_1 (type, name)\n \t  else if (DECL_NAME (fields[i]) < name)\n \t    lo = i + 1;\n \t  else\n-\t    return fields[i];\n+\t    {\n+\t      /* We might have a nested class and a field with the\n+\t\t same name; we sorted them appropriately via\n+\t\t field_decl_cmp, so just look for the last field with\n+\t\t this name.  */\n+\t      while (i + 1 < hi\n+\t\t     && DECL_NAME (fields[i+1]) == name)\n+\t\t++i;\n+\t      return fields[i];\n+\t    }\n \t}\n       return NULL_TREE;\n     }"}]}