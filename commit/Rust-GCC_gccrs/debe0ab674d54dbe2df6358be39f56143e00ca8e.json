{"sha": "debe0ab674d54dbe2df6358be39f56143e00ca8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGViZTBhYjY3NGQ1NGRiZTJkZjYzNThiZTM5ZjU2MTQzZTAwY2E4ZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2005-03-29T16:14:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:14:20Z"}, "message": "errutil.adb, errout.adb: Minor comment updates on Line_Terminator references\n\n2005-03-29  Robert Dewar  <dewar@adacore.com>\n\n\t* errutil.adb, errout.adb:\n\tMinor comment updates on Line_Terminator references\n\n\t* par-ch10.adb: Add ??? comment about line terminator\n\n\t* styleg.adb (Check_Line_Terminator): Add check for new switch -gnatyd\n\t(check dos line terminator).\n\t(Check_Line_Max_Length): New procedure, split off from the existing\n\tCheck_Line_Terminator routine. Separating this out allows -gnatyf to\n\tbe properly recognized.\n\n\t* styleg.adb: Add ??? comment for line terminator reference\n\n\t* scng.adb (Check_End_Of_Line): Fix bug of -gnatyf being ignored\n\t(Check_End_Of_Line): Add -gnatyd handling (check dos line terminators)\n\n\t* styleg.ads (Check_Line_Terminator): Add check for new switch -gnatyd\n\t(check dos line terminator).\n\t(Check_Line_Max_Length): New procedure, split off from the existing\n\tCheck_Line_Terminator routine. Separating this out allows -gnatyf to\n\tbe properly recognized.\n\n\t* stylesw.ads, stylesw.adb:\n\tAdd handling for new -gnatyd switch (check dos line terminator)\n\n\t* switch-c.adb: Recognize new -gnatyd switch (check dos line terminator)\n\tRecognize -gnatwb/-gnatwB switches\n\tInclude Warn_On_Bad_Fixed_Value for -gnatg\n\n\t* usage.adb:\n\tAdd line for new -gnatyd switch (check dos line terminator)\n\n\t* usage.adb: Add lines for -gnatwb/-gnatwB\n\n\t* vms_data.ads: Add entry for NOCRLF (-gnatyd)\n\n\t* vms_data.ads: [NO_]BAD_FIXED_VALUES synonym for -gnatwb/-gnatwB\n\n\t* gnat_ugn.texi: Fix overlong lines\n\tDocument new -gnatyd switch\n\tDocument new -gnatwb/-gnatwB switches\n\nFrom-SVN: r97169", "tree": {"sha": "bcdecf2cbba892fbd44f1149051ea028d0d1c515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcdecf2cbba892fbd44f1149051ea028d0d1c515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/debe0ab674d54dbe2df6358be39f56143e00ca8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/debe0ab674d54dbe2df6358be39f56143e00ca8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/debe0ab674d54dbe2df6358be39f56143e00ca8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/debe0ab674d54dbe2df6358be39f56143e00ca8e/comments", "author": null, "committer": null, "parents": [{"sha": "d127f91b1d4b99d53d31a80076bf178ceb4053df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d127f91b1d4b99d53d31a80076bf178ceb4053df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d127f91b1d4b99d53d31a80076bf178ceb4053df"}], "stats": {"total": 258, "additions": 181, "deletions": 77}, "files": [{"sha": "eb12d2d5a03fdd678bc72f6fd05abca95ad282ce", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -493,6 +493,9 @@ package body Errout is\n       --  since there may be white space inside the literal and we don't want\n       --  to stop on that white space.\n \n+      --  Note: since this is an error recovery issue anyway, it is not worth\n+      --  worrying about special UTF_32 line terminator characters here.\n+\n       if Prev_Token = Tok_String_Literal then\n          loop\n             S1 := S1 + 1;\n@@ -512,7 +515,10 @@ package body Errout is\n \n       --  Otherwise we search forward for the end of the current token, marked\n       --  by a line terminator, white space, a comment symbol or if we bump\n-      --  into the following token (i.e. the current token)\n+      --  into the following token (i.e. the current token).\n+\n+      --  Again, it is not worth worrying about UTF_32 special line terminator\n+      --  characters in this context, since this is only for error recovery.\n \n       else\n          while Source (S1) not in Line_Terminator\n@@ -528,7 +534,6 @@ package body Errout is\n       --  S1 is now set to the location for the flag\n \n       Error_Msg (Msg, S1);\n-\n    end Error_Msg_AP;\n \n    ------------------"}, {"sha": "ef30c7d48382d97e09ad05a657c24d24ef9679aa", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1991-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1991-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -100,6 +100,10 @@ package body Errutil is\n       --  since there may be white space inside the literal and we don't want\n       --  to stop on that white space.\n \n+      --  Note that it is not worth worrying about special UTF_32 line\n+      --  terminator characters in this context, since this is only about\n+      --  error recovery anyway.\n+\n       if Prev_Token = Tok_String_Literal then\n          loop\n             S1 := S1 + 1;\n@@ -121,6 +125,10 @@ package body Errutil is\n       --  by a line terminator, white space, a comment symbol or if we bump\n       --  into the following token (i.e. the current token)\n \n+      --  Note that it is not worth worrying about special UTF_32 line\n+      --  terminator characters in this context, since this is only about\n+      --  error recovery anyway.\n+\n       else\n          while Source (S1) not in Line_Terminator\n            and then Source (S1) /= ' '"}, {"sha": "1952011001c952b79ba7b97a6b6ce3041da68883", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -4567,6 +4567,26 @@ This switch suppresses all optional warning messages, see remaining list\n in this section for details on optional warning messages that can be\n individually controlled.\n \n+@item -gnatwb\n+@emph{Activate warnings on bad fixed values.}\n+@cindex @option{-gnatwb} (@command{gcc})\n+@cindex Bad fixed values\n+@cindex Fixed-point Small value\n+@cindex Small value\n+This switch activates warnings for static fixed-point expressions whose\n+value is not an exact multiple of Small. Such values are implementation\n+dependent, since an implementation is free to choose either of the multiples\n+that surround the value. GNAT always chooses the closer one, but this is not\n+required behavior, and it is better to specify a value that is an exact\n+multiple, ensuring predictable execution. The default is that such warnings\n+are not generated.\n+\n+@item -gnatwB\n+@emph{Suppress warnings on bad fixed values.}\n+@cindex @option{-gnatwB} (@command{gcc})\n+This switch suppresses warnings for static fixed-point expressions whose\n+value is not an exact multiple of Small.\n+\n @item -gnatwc\n @emph{Activate warnings on conditionals.}\n @cindex @option{-gnatwc} (@command{gcc})\n@@ -5341,6 +5361,12 @@ example:\n @end smallexample\n @end itemize\n \n+@item ^d^DOS_LINE_ENDINGS^\n+@emph{Check no DOS line terminators present.}\n+If the ^letter d^word NOCRLF^ appears in the string after @option{-gnaty}\n+then all lines must be terminated by a single ASCII.LF character (in\n+particular the DOS line terminator sequence CR/LF is not allowed).\n+\n @item ^e^END^\n @emph{Check end/exit labels.}\n If the ^letter e^word END^ appears in the string after @option{-gnaty} then\n@@ -14646,7 +14672,8 @@ Align @code{:=} in assignment statements\n Align @code{=>} in associations\n \n @item ^-A5^/ALIGN=COMPONENT_CLAUSES^\n-Align @code{at} keywords in the component clauses in record representation clauses\n+Align @code{at} keywords in the component clauses in record\n+representation clauses\n @end table\n \n @noindent\n@@ -15420,8 +15447,9 @@ the casing defined by the dictionary; no subwords are checked for this word\n \n @item\n for every subword @command{gnatpp} checks if the dictionary contains the\n-corresponding string of the form @code{*@var{simple_identifier}*}, and if it does, the\n-casing of this @var{simple_identifier} is used for this subword\n+corresponding string of the form @code{*@var{simple_identifier}*},\n+and if it does, the casing of this @var{simple_identifier} is used\n+for this subword\n \n @item\n if the whole name does not contain any ``_'' inside, and if for this name"}, {"sha": "bf76e4704b492564e46509bcc2157b9733c90bed", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1090,6 +1090,8 @@ package body Ch10 is\n          loop\n             exit when Loc = Token_Ptr;\n \n+            --  Should we worry about UTF_32 line terminators here\n+\n             if Source (Loc) in Line_Terminator then\n                Skip_Line_Terminators (Loc, Physical);\n                exit when Physical;"}, {"sha": "13ef75c88eefba5dcc401f9eaa2855f24031862f", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -342,8 +342,14 @@ package body Scng is\n          Len : constant Int := Int (Scan_Ptr) - Int (Current_Line_Start);\n \n       begin\n-         if Style_Check and Style_Check_Max_Line_Length then\n+         if Style_Check then\n             Style.Check_Line_Terminator (Len);\n+         end if;\n+\n+         --  Deal with checking maximum line length\n+\n+         if Style_Check and Style_Check_Max_Line_Length then\n+            Style.Check_Line_Max_Length (Len);\n \n          --  If style checking is inactive, check maximum line length against\n          --  standard value. Note that we take this from Opt.Max_Line_Length"}, {"sha": "aec09dd028eb10d136792f0859d858839273c5f0", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 43, "deletions": 22, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -265,6 +265,8 @@ package body Styleg is\n          S : Source_Ptr;\n \n       begin\n+         --  Do we need to worry about UTF_32 line terminators here ???\n+\n          S := Scan_Ptr + 3;\n          while Source (S) not in Line_Terminator loop\n             S := S + 1;\n@@ -461,19 +463,37 @@ package body Styleg is\n       end if;\n    end Check_Left_Paren;\n \n+   ---------------------------\n+   -- Check_Line_Max_Length --\n+   ---------------------------\n+\n+   --  In check max line length mode (-gnatym), the line length must\n+   --  not exceed the permitted maximum value.\n+\n+   procedure Check_Line_Max_Length (Len : Int) is\n+   begin\n+      if Style_Check_Max_Line_Length then\n+         if Len > Style_Max_Line_Length then\n+            Error_Msg\n+              (\"(style) this line is too long\",\n+               Current_Line_Start + Source_Ptr (Style_Max_Line_Length));\n+         end if;\n+      end if;\n+   end Check_Line_Max_Length;\n+\n    ---------------------------\n    -- Check_Line_Terminator --\n    ---------------------------\n \n    --  In check blanks at end mode (-gnatyb), lines may not end with a\n    --  trailing space.\n \n-   --  In check max line length mode (-gnatym), the line length must\n-   --  not exceed the permitted maximum value.\n-\n    --  In check form feeds mode (-gnatyf), the line terminator may not\n    --  be either of the characters FF or VT.\n \n+   --  In check DOS line terminators node (-gnatyd), the line terminator\n+   --  must be a single LF, without a following CR.\n+\n    procedure Check_Line_Terminator (Len : Int) is\n       S : Source_Ptr;\n \n@@ -483,18 +503,30 @@ package body Styleg is\n       if Style_Check_Form_Feeds then\n          if Source (Scan_Ptr) = ASCII.FF then\n             Error_Msg_S (\"(style) form feed not allowed\");\n-\n          elsif Source (Scan_Ptr) = ASCII.VT then\n             Error_Msg_S (\"(style) vertical tab not allowed\");\n          end if;\n       end if;\n \n-      --  We are now possibly going to check for trailing spaces and maximum\n-      --  line length. There is no point in doing this if the current line is\n-      --  empty. It is actually wrong in the case of trailing spaces, because\n-      --  we scan backwards for this purpose, so we would end up looking at a\n-      --  different line, or even at invalid buffer locations if we have the\n-      --  first source line at hand.\n+      --  Check DOS line terminator (ignore EOF, since we only get called\n+      --  with an EOF if it is the last character in the buffer, and was\n+      --  therefore not present in the sources\n+\n+      if Style_Check_DOS_Line_Terminator then\n+         if Source (Scan_Ptr) = EOF then\n+            null;\n+         elsif Source (Scan_Ptr) /= LF\n+           or else Source (Scan_Ptr + 1) = CR\n+         then\n+            Error_Msg_S (\"(style) incorrect line terminator\");\n+         end if;\n+      end if;\n+\n+      --  We are now possibly going to check for trailing spaces. There is no\n+      --  point in doing this if the current line is empty. It is actually\n+      --  wrong to do so, because we scan backwards for this purpose, so we\n+      --  would end up looking at different line, or even at invalid buffer\n+      --  locations if we have the first source line at hand.\n \n       if Len = 0 then\n          return;\n@@ -515,17 +547,6 @@ package body Styleg is\n             end if;\n          end if;\n       end if;\n-\n-      --  Check max line length\n-\n-      if Style_Check_Max_Line_Length then\n-         if Len > Style_Max_Line_Length then\n-            Error_Msg\n-              (\"(style) this line is too long\",\n-               Current_Line_Start + Source_Ptr (Style_Max_Line_Length));\n-         end if;\n-      end if;\n-\n    end Check_Line_Terminator;\n \n    --------------------------"}, {"sha": "3bd0712efa55d2d5314569b49dda036055bd468b", "filename": "gcc/ada/styleg.ads", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fstyleg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fstyleg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.ads?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -104,11 +104,15 @@ package Styleg is\n    procedure Check_Left_Paren;\n    --  Called after scanning out a left parenthesis to check spacing.\n \n+   procedure Check_Line_Max_Length (Len : Int);\n+   --  Called with Scan_Ptr pointing to the first line terminator character\n+   --  terminating the current line. Used to check for appropriate line length.\n+   --  The parameter Len is the length of the current line.\n+\n    procedure Check_Line_Terminator (Len : Int);\n    --  Called with Scan_Ptr pointing to the first line terminator terminating\n-   --  the current line, used to check for appropriate line terminator and\n-   --  to check the line length (Len is the length of the current line).\n-   --  Note that the terminator may be the EOF character.\n+   --  the current line, used to check for appropriate line terminator usage.\n+   --  The parameter Len is the length of the current line.\n \n    procedure Check_Pragma_Name;\n    --  The current token is a pragma identifier. Check that it is spelled"}, {"sha": "3979f74e984daff8ab58b230db3cd3a574454b48", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 43, "deletions": 38, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,25 +34,26 @@ package body Stylesw is\n \n    procedure Reset_Style_Check_Options is\n    begin\n-      Style_Check_Indentation       := 0;\n-      Style_Check_Attribute_Casing  := False;\n-      Style_Check_Blanks_At_End     := False;\n-      Style_Check_Comments          := False;\n-      Style_Check_End_Labels        := False;\n-      Style_Check_Form_Feeds        := False;\n-      Style_Check_Horizontal_Tabs   := False;\n-      Style_Check_If_Then_Layout    := False;\n-      Style_Check_Keyword_Casing    := False;\n-      Style_Check_Layout            := False;\n-      Style_Check_Max_Line_Length   := False;\n-      Style_Check_Max_Nesting_Level := False;\n-      Style_Check_Order_Subprograms := False;\n-      Style_Check_Pragma_Casing     := False;\n-      Style_Check_References        := False;\n-      Style_Check_Specs             := False;\n-      Style_Check_Standard          := False;\n-      Style_Check_Tokens            := False;\n-      Style_Check_Xtra_Parens       := False;\n+      Style_Check_Indentation         := 0;\n+      Style_Check_Attribute_Casing    := False;\n+      Style_Check_Blanks_At_End       := False;\n+      Style_Check_Comments            := False;\n+      Style_Check_DOS_Line_Terminator := False;\n+      Style_Check_End_Labels          := False;\n+      Style_Check_Form_Feeds          := False;\n+      Style_Check_Horizontal_Tabs     := False;\n+      Style_Check_If_Then_Layout      := False;\n+      Style_Check_Keyword_Casing      := False;\n+      Style_Check_Layout              := False;\n+      Style_Check_Max_Line_Length     := False;\n+      Style_Check_Max_Nesting_Level   := False;\n+      Style_Check_Order_Subprograms   := False;\n+      Style_Check_Pragma_Casing       := False;\n+      Style_Check_References          := False;\n+      Style_Check_Specs               := False;\n+      Style_Check_Standard            := False;\n+      Style_Check_Tokens              := False;\n+      Style_Check_Xtra_Parens         := False;\n    end Reset_Style_Check_Options;\n \n    ------------------------------\n@@ -107,6 +108,7 @@ package body Stylesw is\n       Add ('a', Style_Check_Attribute_Casing);\n       Add ('b', Style_Check_Blanks_At_End);\n       Add ('c', Style_Check_Comments);\n+      Add ('d', Style_Check_DOS_Line_Terminator);\n       Add ('e', Style_Check_End_Labels);\n       Add ('f', Style_Check_Form_Feeds);\n       Add ('h', Style_Check_Horizontal_Tabs);\n@@ -186,31 +188,34 @@ package body Stylesw is\n                   := Character'Pos (C) - Character'Pos ('0');\n \n             when 'a' =>\n-               Style_Check_Attribute_Casing  := True;\n+               Style_Check_Attribute_Casing    := True;\n \n             when 'b' =>\n-               Style_Check_Blanks_At_End     := True;\n+               Style_Check_Blanks_At_End       := True;\n \n             when 'c' =>\n-               Style_Check_Comments          := True;\n+               Style_Check_Comments            := True;\n+\n+            when 'd' =>\n+               Style_Check_DOS_Line_Terminator := True;\n \n             when 'e' =>\n-               Style_Check_End_Labels        := True;\n+               Style_Check_End_Labels          := True;\n \n             when 'f' =>\n-               Style_Check_Form_Feeds        := True;\n+               Style_Check_Form_Feeds          := True;\n \n             when 'h' =>\n-               Style_Check_Horizontal_Tabs   := True;\n+               Style_Check_Horizontal_Tabs     := True;\n \n             when 'i' =>\n-               Style_Check_If_Then_Layout    := True;\n+               Style_Check_If_Then_Layout      := True;\n \n             when 'k' =>\n-               Style_Check_Keyword_Casing    := True;\n+               Style_Check_Keyword_Casing      := True;\n \n             when 'l' =>\n-               Style_Check_Layout            := True;\n+               Style_Check_Layout              := True;\n \n             when 'L' =>\n                Style_Max_Nesting_Level := 0;\n@@ -242,11 +247,11 @@ package body Stylesw is\n                Style_Check_Max_Nesting_Level := Style_Max_Nesting_Level /= 0;\n \n             when 'm' =>\n-               Style_Check_Max_Line_Length   := True;\n-               Style_Max_Line_Length         := 79;\n+               Style_Check_Max_Line_Length     := True;\n+               Style_Max_Line_Length           := 79;\n \n             when 'n' =>\n-               Style_Check_Standard          := True;\n+               Style_Check_Standard            := True;\n \n             when 'N' =>\n                Reset_Style_Check_Options;\n@@ -281,22 +286,22 @@ package body Stylesw is\n                Style_Check_Max_Line_Length   := Style_Max_Line_Length /= 0;\n \n             when 'o' =>\n-               Style_Check_Order_Subprograms := True;\n+               Style_Check_Order_Subprograms   := True;\n \n             when 'p' =>\n-               Style_Check_Pragma_Casing     := True;\n+               Style_Check_Pragma_Casing       := True;\n \n             when 'r' =>\n-               Style_Check_References        := True;\n+               Style_Check_References          := True;\n \n             when 's' =>\n-               Style_Check_Specs             := True;\n+               Style_Check_Specs               := True;\n \n             when 't' =>\n-               Style_Check_Tokens            := True;\n+               Style_Check_Tokens              := True;\n \n             when 'x' =>\n-               Style_Check_Xtra_Parens       := True;\n+               Style_Check_Xtra_Parens         := True;\n \n             when ' ' =>\n                null;"}, {"sha": "bd9d1a866b33b0e64568e1505ea4cbc80a024af8", "filename": "gcc/ada/stylesw.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fstylesw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fstylesw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.ads?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -84,6 +84,11 @@ package Stylesw is\n    --  Note: the reason for the last two conditions is to allow \"boxed\"\n    --  comments where only a single space separates the comment characters.\n \n+   Style_Check_DOS_Line_Terminator : Boolean := False;\n+   --  This can be set true by using the -gnatg or -gnatyd switches. If\n+   --  it is True, then the line terminator must be a single LF, without an\n+   --  associated CR (e.g. DOS line terminator sequence CR/LF not allowed).\n+\n    Style_Check_End_Labels : Boolean := False;\n    --  This can be set True by using the -gnatg or -gnatye switches. If\n    --  it is True, then optional END labels must always be present.\n@@ -242,7 +247,7 @@ package Stylesw is\n \n    procedure Set_Default_Style_Check_Options;\n    --  This procedure is called to set the default style checking options\n-   --  in response to a -gnatg switch or -gnaty with no suboptions.\n+   --  in response to a -gnaty switch with no suboptions.\n \n    procedure Set_Style_Check_Options\n      (Options  : String;"}, {"sha": "a91f9ea464e80ec4a949b79d2e86bdc5d76062a4", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -485,14 +485,15 @@ package body Switch.C is\n                System_Extend_Unit := Empty;\n                Warning_Mode := Treat_As_Error;\n \n-               --  Set default warnings (basically -gnatwa)\n+               --  Set default warnings for -gnatg (same set as -gnatwa)\n \n                Check_Unreferenced           := True;\n                Check_Unreferenced_Formals   := True;\n                Check_Withs                  := True;\n                Constant_Condition_Warnings  := True;\n                Implementation_Unit_Warnings := True;\n                Ineffective_Inline_Warnings  := True;\n+               Warn_On_Bad_Fixed_Value      := True;\n                Warn_On_Constant             := True;\n                Warn_On_Export_Import        := True;\n                Warn_On_Modified_Unread      := True;\n@@ -502,7 +503,7 @@ package body Switch.C is\n                Warn_On_Unchecked_Conversion := True;\n                Warn_On_Unrecognized_Pragma  := True;\n \n-               Set_Default_Style_Check_Options;\n+               Set_Style_Check_Options (\"3abcdefhiklmnprst\");\n \n             --  Processing for G switch\n \n@@ -762,6 +763,7 @@ package body Switch.C is\n                         Constant_Condition_Warnings     := True;\n                         Implementation_Unit_Warnings    := True;\n                         Ineffective_Inline_Warnings     := True;\n+                        Warn_On_Bad_Fixed_Value         := True;\n                         Warn_On_Constant                := True;\n                         Warn_On_Export_Import           := True;\n                         Warn_On_Modified_Unread         := True;\n@@ -779,6 +781,7 @@ package body Switch.C is\n                         Elab_Warnings                   := False;\n                         Implementation_Unit_Warnings    := False;\n                         Ineffective_Inline_Warnings     := False;\n+                        Warn_On_Bad_Fixed_Value         := False;\n                         Warn_On_Constant                := False;\n                         Warn_On_Dereference             := False;\n                         Warn_On_Export_Import           := False;\n@@ -790,6 +793,12 @@ package body Switch.C is\n                         Warn_On_Unchecked_Conversion    := False;\n                         Warn_On_Unrecognized_Pragma     := False;\n \n+                     when 'b' =>\n+                        Warn_On_Bad_Fixed_Value         := True;\n+\n+                     when 'B' =>\n+                        Warn_On_Bad_Fixed_Value         := False;\n+\n                      when 'c' =>\n                         Constant_Condition_Warnings     := True;\n "}, {"sha": "e57f9ed5b7258a52c0a8e26db5c68f1e9922e55f", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -346,6 +346,10 @@ begin\n    Write_Line (\"Enable selected warning modes, xx = list of parameters:\");\n    Write_Line (\"        a    turn on all optional warnings (except d,h,l)\");\n    Write_Line (\"        A    turn off all optional warnings\");\n+   Write_Line (\"        b    turn on warnings for bad fixed value \" &\n+                                                  \"(not multiple of small)\");\n+   Write_Line (\"        B*   turn off warnings for bad fixed value \" &\n+                                                  \"(not multiple of small)\");\n    Write_Line (\"        c    turn on warnings for constant conditional\");\n    Write_Line (\"        C*   turn off warnings for constant conditional\");\n    Write_Line (\"        d    turn on warnings for implicit dereference\");\n@@ -430,6 +434,7 @@ begin\n    Write_Line (\"        a    check attribute casing\");\n    Write_Line (\"        b    check no blanks at end of lines\");\n    Write_Line (\"        c    check comment format\");\n+   Write_Line (\"        d    check no DOS line terminators\");\n    Write_Line (\"        e    check end/exit labels present\");\n    Write_Line (\"        f    check no form feeds/vertical tabs in source\");\n    Write_Line (\"        h    check no horizontal tabs in source\");"}, {"sha": "40a262f684d71487c838b16d275e4541e302a76b", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/debe0ab674d54dbe2df6358be39f56143e00ca8e/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=debe0ab674d54dbe2df6358be39f56143e00ca8e", "patch": "@@ -1800,6 +1800,8 @@ package VMS_Data is\n                                                \"-gnatyb \"                  &\n                                             \"COMMENTS \"                    &\n                                                \"-gnatyc \"                  &\n+                                            \"NOCRLF\"                       &\n+                                               \"-gnatyd \"                  &\n                                             \"END \"                         &\n                                                \"-gnatye \"                  &\n                                             \"VTABS \"                       &\n@@ -2357,6 +2359,10 @@ package VMS_Data is\n                                                \"-gnatwA \"                  &\n                                             \"ALL_GCC \"                     &\n                                                \"-Wall \"                    &\n+                                            \"BAD_FIXED_VALUES \"            &\n+                                               \"-gnatwb \"                  &\n+                                            \"NO_BAD_FIXED_VALUES \"         &\n+                                               \"-gnatwB \"                  &\n                                             \"CONDITIONALS \"                &\n                                                \"-gnatwc \"                  &\n                                             \"NOCONDITIONALS \"              &"}]}