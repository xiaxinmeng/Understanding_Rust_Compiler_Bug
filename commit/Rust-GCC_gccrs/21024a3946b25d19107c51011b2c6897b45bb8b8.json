{"sha": "21024a3946b25d19107c51011b2c6897b45bb8b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwMjRhMzk0NmIyNWQxOTEwN2M1MTAxMWIyYzY4OTdiNDViYjhiOA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2005-11-15T14:04:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:04:10Z"}, "message": "sem_util.ads, [...]: Change name Is_Package to Is_Package_Or_Generic_Package.\n\n2005-11-14  Robert Dewar  <dewar@adacore.com>\n\t    Thomas Quinot  <quinot@adacore.com>\n\t    Hristian Kirtchev  <kirtchev@adacore.com>\n\t    Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.ads, sem_util.adb: Change name Is_Package to\n\tIs_Package_Or_Generic_Package.\n\t(Check_Obsolescent): New procedure.\n\t(Set_Is_Public): Remove obsolete junk test.\n\t(Set_Public_Status): Do not set Is_Public on an object whose declaration\n\toccurs within a handled_sequence_of_statemets.\n\t(Is_Controlling_Limited_Procedure): Factor some of the logic, account\n\tfor a parameterless procedure.\n\t(Enter_Name): Recognize renaming declarations created for private\n\tcomponent of a protected type within protected operations, so that\n\tthe source name of the component can be used in the debugger.\n\nFrom-SVN: r107007", "tree": {"sha": "89d081f5dd86209733320581662ca2c2f3d6e472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89d081f5dd86209733320581662ca2c2f3d6e472"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21024a3946b25d19107c51011b2c6897b45bb8b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21024a3946b25d19107c51011b2c6897b45bb8b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21024a3946b25d19107c51011b2c6897b45bb8b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21024a3946b25d19107c51011b2c6897b45bb8b8/comments", "author": null, "committer": null, "parents": [{"sha": "861d669e3d66091b304d687c0f9239399983f5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861d669e3d66091b304d687c0f9239399983f5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861d669e3d66091b304d687c0f9239399983f5d8"}], "stats": {"total": 161, "additions": 127, "deletions": 34}, "files": [{"sha": "25f33b15a6ba2888fff1d8a90ee15cb6873eb924", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 121, "deletions": 34, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21024a3946b25d19107c51011b2c6897b45bb8b8/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21024a3946b25d19107c51011b2c6897b45bb8b8/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=21024a3946b25d19107c51011b2c6897b45bb8b8", "patch": "@@ -41,6 +41,8 @@ with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Output;   use Output;\n with Opt;      use Opt;\n+with Restrict; use Restrict;\n+with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Scans;    use Scans;\n with Scn;      use Scn;\n@@ -863,6 +865,52 @@ package body Sem_Util is\n       end if;\n    end Check_Fully_Declared;\n \n+   -----------------------\n+   -- Check_Obsolescent --\n+   -----------------------\n+\n+   procedure Check_Obsolescent (Nam : Entity_Id; N : Node_Id) is\n+      W : Node_Id;\n+\n+   begin\n+      --  Note that we always allow obsolescent references in the compiler\n+      --  itself and the run time, since we assume that we know what we are\n+      --  doing in such cases. For example the calls in Ada.Characters.Handling\n+      --  to its own obsolescent subprograms are just fine.\n+\n+      if Is_Obsolescent (Nam) and then not GNAT_Mode then\n+         Check_Restriction (No_Obsolescent_Features, N);\n+\n+         if Warn_On_Obsolescent_Feature then\n+            if Is_Package_Or_Generic_Package (Nam) then\n+               Error_Msg_NE (\"with of obsolescent package&?\", N, Nam);\n+            else\n+               Error_Msg_NE (\"call to obsolescent subprogram&?\", N, Nam);\n+            end if;\n+\n+            --  Output additional warning if present\n+\n+            W := Obsolescent_Warning (Nam);\n+\n+            if Present (W) then\n+               Name_Buffer (1) := '|';\n+               Name_Buffer (2) := '?';\n+               Name_Len := 2;\n+\n+               --  Add characters to message, and output message\n+\n+               for J in 1 .. String_Length (Strval (W)) loop\n+                  Add_Char_To_Name_Buffer (''');\n+                  Add_Char_To_Name_Buffer\n+                    (Get_Character (Get_String_Char (Strval (W), J)));\n+               end loop;\n+\n+               Error_Msg_N (Name_Buffer (1 .. Name_Len), N);\n+            end if;\n+         end if;\n+      end if;\n+   end Check_Obsolescent;\n+\n    ------------------------------------------\n    -- Check_Potentially_Blocking_Operation --\n    ------------------------------------------\n@@ -955,11 +1003,10 @@ package body Sem_Util is\n             null;\n          end if;\n \n-      elsif (Is_Package (B_Scope)\n-               and then Nkind (\n-                 Parent (Declaration_Node (First_Subtype (T))))\n-                   /=  N_Package_Body)\n-\n+      elsif (Is_Package_Or_Generic_Package (B_Scope)\n+              and then\n+                Nkind (Parent (Declaration_Node (First_Subtype (T)))) /=\n+                                                            N_Package_Body)\n         or else Is_Derived_Type (B_Type)\n       then\n          --  The primitive operations appear after the base type, except\n@@ -1618,6 +1665,26 @@ package body Sem_Util is\n       E : constant Entity_Id := Current_Entity_In_Scope (Def_Id);\n       S : constant Entity_Id := Current_Scope;\n \n+      function Is_Private_Component_Renaming (N : Node_Id) return Boolean;\n+      --  Recognize a renaming declaration that is introduced for private\n+      --  components of a protected type. We treat these as weak declarations\n+      --  so that they are overridden by entities with the same name that\n+      --  come from source, such as formals or local variables of a given\n+      --  protected declaration.\n+\n+      -----------------------------------\n+      -- Is_Private_Component_Renaming --\n+      -----------------------------------\n+\n+      function Is_Private_Component_Renaming (N : Node_Id) return Boolean is\n+      begin\n+         return not Comes_From_Source (N)\n+           and then not Comes_From_Source (Current_Scope)\n+           and then Nkind (N) = N_Object_Renaming_Declaration;\n+      end Is_Private_Component_Renaming;\n+\n+   --  Start of processing for Enter_Name\n+\n    begin\n       Generate_Definition (Def_Id);\n \n@@ -1742,6 +1809,9 @@ package body Sem_Util is\n          then\n             return;\n \n+         elsif Is_Private_Component_Renaming (Parent (Def_Id)) then\n+            return;\n+\n          --  In the body or private part of an instance, a type extension\n          --  may introduce a component with the same name as that of an\n          --  actual. The legality rule is not enforced, but the semantics\n@@ -3181,7 +3251,7 @@ package body Sem_Util is\n    function In_Visible_Part (Scope_Id : Entity_Id) return Boolean is\n    begin\n       return\n-        Is_Package (Scope_Id)\n+        Is_Package_Or_Generic_Package (Scope_Id)\n           and then In_Open_Scopes (Scope_Id)\n           and then not In_Package_Body (Scope_Id)\n           and then not In_Private_Part (Scope_Id);\n@@ -3450,26 +3520,30 @@ package body Sem_Util is\n    function Is_Controlling_Limited_Procedure\n      (Proc_Nam : Entity_Id) return Boolean\n    is\n-      Param_Typ : Entity_Id;\n+      Param_Typ : Entity_Id := Empty;\n \n    begin\n-      --  Proc_Nam was found to be a primitive operation of a limited interface\n-\n-      if Ekind (Proc_Nam) = E_Procedure then\n-         Param_Typ := Etype (Parameter_Type (First (Parameter_Specifications (\n-           Parent (Proc_Nam)))));\n-         return\n-           Is_Interface (Param_Typ)\n-             and then Is_Limited_Record (Param_Typ);\n+      if Ekind (Proc_Nam) = E_Procedure\n+        and then Present (Parameter_Specifications (Parent (Proc_Nam)))\n+      then\n+         Param_Typ := Etype (Parameter_Type (First (\n+                        Parameter_Specifications (Parent (Proc_Nam)))));\n \n       --  In this case where an Itype was created, the procedure call has been\n       --  rewritten.\n \n       elsif Present (Associated_Node_For_Itype (Proc_Nam))\n         and then Present (Original_Node (Associated_Node_For_Itype (Proc_Nam)))\n+        and then\n+          Present (Parameter_Associations\n+                     (Associated_Node_For_Itype (Proc_Nam)))\n       then\n-         Param_Typ := Etype (First (Parameter_Associations (\n-           Associated_Node_For_Itype (Proc_Nam))));\n+         Param_Typ :=\n+           Etype (First (Parameter_Associations\n+                          (Associated_Node_For_Itype (Proc_Nam))));\n+      end if;\n+\n+      if Present (Param_Typ) then\n          return\n            Is_Interface (Param_Typ)\n              and then Is_Limited_Record (Param_Typ);\n@@ -3500,7 +3574,6 @@ package body Sem_Util is\n       function Is_Declared_Within_Variant (Comp : Entity_Id) return Boolean is\n          Comp_Decl : constant Node_Id   := Parent (Comp);\n          Comp_List : constant Node_Id   := Parent (Comp_Decl);\n-\n       begin\n          return Nkind (Parent (Comp_List)) = N_Variant;\n       end Is_Declared_Within_Variant;\n@@ -3717,7 +3790,6 @@ package body Sem_Util is\n       S : constant Ureal := Small_Value (T);\n       M : Urealp.Save_Mark;\n       R : Boolean;\n-\n    begin\n       M := Urealp.Mark;\n       R := (U = UR_Trunc (U / S) * S);\n@@ -4033,14 +4105,12 @@ package body Sem_Util is\n          declare\n             Ent : constant Entity_Id := Entity (Expr);\n             Sub : constant Entity_Id := Enclosing_Subprogram (Ent);\n-\n          begin\n             if Ekind (Ent) /= E_Variable\n                  and then\n                Ekind (Ent) /= E_In_Out_Parameter\n             then\n                return False;\n-\n             else\n                return Present (Sub) and then Sub = Current_Subprogram;\n             end if;\n@@ -4181,10 +4251,10 @@ package body Sem_Util is\n          return True;\n \n       --  Unchecked conversions are allowed only if they come from the\n-      --  generated code, which sometimes uses unchecked conversions for\n-      --  out parameters in cases where code generation is unaffected.\n-      --  We tell source unchecked conversions by seeing if they are\n-      --  rewrites of an original UC function call, or of an explicit\n+      --  generated code, which sometimes uses unchecked conversions for out\n+      --  parameters in cases where code generation is unaffected. We tell\n+      --  source unchecked conversions by seeing if they are rewrites of an\n+      --  original Unchecked_Conversion function call, or of an explicit\n       --  conversion of a function call.\n \n       elsif Nkind (AV) = N_Unchecked_Type_Conversion then\n@@ -4346,7 +4416,6 @@ package body Sem_Util is\n       elsif Is_Private_Type (Typ) then\n          declare\n             U : constant Entity_Id := Underlying_Type (Typ);\n-\n          begin\n             if No (U) then\n                return True;\n@@ -4446,6 +4515,7 @@ package body Sem_Util is\n          if Nkind (The_Unit) /= N_Package_Declaration then\n             return False;\n          end if;\n+\n          return Is_Remote_Call_Interface (Defining_Entity (The_Unit));\n       end Is_RCI_Pkg_Decl_Cunit;\n \n@@ -6451,20 +6521,37 @@ package body Sem_Util is\n       S : constant Entity_Id := Current_Scope;\n \n    begin\n-      if S = Standard_Standard\n-        or else (Is_Public (S)\n-                  and then (Ekind (S) = E_Package\n-                             or else Is_Record_Type (S)\n-                             or else Ekind (S) = E_Void))\n+      --  Everything in the scope of Standard is public\n+\n+      if S = Standard_Standard then\n+         Set_Is_Public (Id);\n+\n+      --  Entity is definitely not public if enclosing scope is not public\n+\n+      elsif not Is_Public (S) then\n+         return;\n+\n+      --  An object declaration that occurs in a handled sequence of statements\n+      --  is the declaration for a temporary object generated by the expander.\n+      --  It never needs to be made public and furthermore, making it public\n+      --  can cause back end problems if it is of variable size.\n+\n+      elsif Nkind (Parent (Id)) = N_Object_Declaration\n+        and then\n+          Nkind (Parent (Parent (Id))) = N_Handled_Sequence_Of_Statements\n       then\n+         return;\n+\n+      --  Entities in public packages or records are public\n+\n+      elsif Ekind (S) = E_Package or Is_Record_Type (S) then\n          Set_Is_Public (Id);\n \n       --  The bounds of an entry family declaration can generate object\n       --  declarations that are visible to the back-end, e.g. in the\n       --  the declaration of a composite type that contains tasks.\n \n-      elsif Is_Public (S)\n-        and then Is_Concurrent_Type (S)\n+      elsif Is_Concurrent_Type (S)\n         and then not Has_Completion (S)\n         and then Nkind (Parent (Id)) = N_Object_Declaration\n       then\n@@ -6959,7 +7046,7 @@ package body Sem_Util is\n          end if;\n \n          if Is_Entity_Name (Expr)\n-           and then Is_Package (Entity (Expr))\n+           and then Is_Package_Or_Generic_Package (Entity (Expr))\n          then\n             Error_Msg_N (\"found package name!\", Expr);\n "}, {"sha": "64dd828a0508b7cb025bf50991f2b826215ce438", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21024a3946b25d19107c51011b2c6897b45bb8b8/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21024a3946b25d19107c51011b2c6897b45bb8b8/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=21024a3946b25d19107c51011b2c6897b45bb8b8", "patch": "@@ -108,6 +108,12 @@ package Sem_Util is\n    --  place error message on node N. Used in  object declarations, type\n    --  conversions, qualified expressions.\n \n+   procedure Check_Obsolescent (Nam : Entity_Id; N : Node_Id);\n+   --  Nam is either a subprogram or a (generic) package entity. This procedure\n+   --  checks if the Is_Obsolescent flag is set and if so, outputs appropriate\n+   --  diagnostics (it also checks the appropriate restriction). N is the node\n+   --  to which error messages are attached.\n+\n    procedure Check_Potentially_Blocking_Operation (N : Node_Id);\n    --  N is one of the statement forms that is a potentially blocking\n    --  operation. If it appears within a protected action, emit warning."}]}