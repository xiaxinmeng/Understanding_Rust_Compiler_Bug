{"sha": "e86f9f3267b0127af29d48afc8e803c8e0028ae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg2ZjlmMzI2N2IwMTI3YWYyOWQ0OGFmYzhlODAzYzhlMDAyOGFlMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-05-19T11:51:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-05-19T11:51:32Z"}, "message": "recog.c (general_operand): Modify last change to allow it if reload has completed.\n\n\t* recog.c (general_operand): Modify last change to allow it if reload\n\thas completed.\n\nFrom-SVN: r42309", "tree": {"sha": "f1349933ad673ebcd68c11621455ddb300fa4a77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1349933ad673ebcd68c11621455ddb300fa4a77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e86f9f3267b0127af29d48afc8e803c8e0028ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e86f9f3267b0127af29d48afc8e803c8e0028ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e86f9f3267b0127af29d48afc8e803c8e0028ae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e86f9f3267b0127af29d48afc8e803c8e0028ae2/comments", "author": null, "committer": null, "parents": [{"sha": "30cf266f9443bc624bf965ea91f1018ac40904db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30cf266f9443bc624bf965ea91f1018ac40904db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30cf266f9443bc624bf965ea91f1018ac40904db"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "d8598505427a0b23f6990491eb5f19c07e844e1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e86f9f3267b0127af29d48afc8e803c8e0028ae2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e86f9f3267b0127af29d48afc8e803c8e0028ae2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e86f9f3267b0127af29d48afc8e803c8e0028ae2", "patch": "@@ -1,3 +1,8 @@\n+Sat May 19 07:53:42 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* recog.c (general_operand): Modify last change to allow it if reload\n+\thas completed.\n+\n Sat May 19 10:23:54 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* recog.c (general_operand): Prohibit nonzero subreg bytes on"}, {"sha": "833a12253a76826c19d1bc63024fb271837cb2f7", "filename": "gcc/recog.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e86f9f3267b0127af29d48afc8e803c8e0028ae2/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e86f9f3267b0127af29d48afc8e803c8e0028ae2/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=e86f9f3267b0127af29d48afc8e803c8e0028ae2", "patch": "@@ -961,8 +961,12 @@ general_operand (op, mode)\n #endif\n       /* Avoid memories with nonzero SUBREG_BYTE, as offsetting the memory\n          may result in incorrect reference.  We should simplify all valid\n-         subregs of MEM anyway.  */\n-      if (SUBREG_BYTE (op) && GET_CODE (SUBREG_REG (op)) == MEM)\n+         subregs of MEM anyway.  But allow this after reload because we\n+\t might be called from cleanup_subreg_operands. \n+\n+\t ??? This is a kludge.  */\n+      if (!reload_completed && SUBREG_BYTE (op) != 0\n+\t  && GET_CODE (SUBREG_REG (op)) == MEM)\n         return 0;\n \n       op = SUBREG_REG (op);"}]}