{"sha": "14431f58e4d1d53d56e38bb34fb9c5880815f8ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ0MzFmNThlNGQxZDUzZDU2ZTM4YmIzNGZiOWM1ODgwODE1ZjhhZQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-04-07T19:58:24Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-04-07T19:58:24Z"}, "message": "mips.h (REG_MODE_OK_FOR_BASE_P, [...]): Remove macros.\n\n\t* config/mips/mips.h (REG_MODE_OK_FOR_BASE_P, REG_OK_FOR_INDEX_P):\n\tRemove macros.\n\nFrom-SVN: r172125", "tree": {"sha": "37cdd883635346edc0176b7a86921311ff85d8ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37cdd883635346edc0176b7a86921311ff85d8ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14431f58e4d1d53d56e38bb34fb9c5880815f8ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14431f58e4d1d53d56e38bb34fb9c5880815f8ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14431f58e4d1d53d56e38bb34fb9c5880815f8ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14431f58e4d1d53d56e38bb34fb9c5880815f8ae/comments", "author": null, "committer": null, "parents": [{"sha": "3729983c938dcf0255ab306c481292f9ea554fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3729983c938dcf0255ab306c481292f9ea554fcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3729983c938dcf0255ab306c481292f9ea554fcd"}], "stats": {"total": 27, "additions": 5, "deletions": 22}, "files": [{"sha": "f55348589b862d18ea0e6bc8ef8257302c6795cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14431f58e4d1d53d56e38bb34fb9c5880815f8ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14431f58e4d1d53d56e38bb34fb9c5880815f8ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14431f58e4d1d53d56e38bb34fb9c5880815f8ae", "patch": "@@ -1,3 +1,8 @@\n+2011-04-07  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/mips/mips.h (REG_MODE_OK_FOR_BASE_P, REG_OK_FOR_INDEX_P):\n+\tRemove macros.\n+\n 2011-04-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md: Update copyright year."}, {"sha": "ba226bf8f4a2feda29e07bcf30a0a7c03f7516f0", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14431f58e4d1d53d56e38bb34fb9c5880815f8ae/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14431f58e4d1d53d56e38bb34fb9c5880815f8ae/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=14431f58e4d1d53d56e38bb34fb9c5880815f8ae", "patch": "@@ -2305,28 +2305,6 @@ typedef struct mips_args {\n #define REGNO_OK_FOR_INDEX_P(REGNO) 0\n #define REGNO_MODE_OK_FOR_BASE_P(REGNO, MODE) \\\n   mips_regno_mode_ok_for_base_p (REGNO, MODE, 1)\n-\n-/* The macros REG_OK_FOR..._P assume that the arg is a REG rtx\n-   and check its validity for a certain class.\n-   We have two alternate definitions for each of them.\n-   The usual definition accepts all pseudo regs; the other rejects them all.\n-   The symbol REG_OK_STRICT causes the latter definition to be used.\n-\n-   Most source files want to accept pseudo regs in the hope that\n-   they will get allocated to the class that the insn wants them to be in.\n-   Some source files that are used after register allocation\n-   need to be strict.  */\n-\n-#ifndef REG_OK_STRICT\n-#define REG_MODE_OK_FOR_BASE_P(X, MODE) \\\n-  mips_regno_mode_ok_for_base_p (REGNO (X), MODE, 0)\n-#else\n-#define REG_MODE_OK_FOR_BASE_P(X, MODE) \\\n-  mips_regno_mode_ok_for_base_p (REGNO (X), MODE, 1)\n-#endif\n-\n-#define REG_OK_FOR_INDEX_P(X) 0\n-\n \f\n /* Maximum number of registers that can appear in a valid memory address.  */\n "}]}