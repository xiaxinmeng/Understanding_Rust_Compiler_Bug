{"sha": "01ad093b5f3fa16a22fb24db093375ed3b9315cc", "node_id": "C_kwDOANBUbNoAKDAxYWQwOTNiNWYzZmExNmEyMmZiMjRkYjA5MzM3NWVkM2I5MzE1Y2M", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-27T00:16:46Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-27T00:16:46Z"}, "message": "Daily bump.", "tree": {"sha": "da6c84fb0738b2454b97686b5563de8f238ed7be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da6c84fb0738b2454b97686b5563de8f238ed7be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01ad093b5f3fa16a22fb24db093375ed3b9315cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ad093b5f3fa16a22fb24db093375ed3b9315cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ad093b5f3fa16a22fb24db093375ed3b9315cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ad093b5f3fa16a22fb24db093375ed3b9315cc/comments", "author": null, "committer": null, "parents": [{"sha": "9ace5d4dab2ab39072b0f07089621a823580f27c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ace5d4dab2ab39072b0f07089621a823580f27c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ace5d4dab2ab39072b0f07089621a823580f27c"}], "stats": {"total": 168, "additions": 167, "deletions": 1}, "files": [{"sha": "51fdfda6d9b7da39ca598802b7a37c52ca2f715f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01ad093b5f3fa16a22fb24db093375ed3b9315cc", "patch": "@@ -1,3 +1,35 @@\n+2022-04-26  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* config/gcn/gcn.cc (gcn_print_lds_decl): Make \"gang-private\n+\tdata-share memory exhausted\" error more verbose.\n+\n+2022-04-26  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/105364\n+\t* lto-wrapper.cc (print_lto_docs_link): Use global_dc.\n+\t(run_gcc): Parse OPT_fdiagnostics_urls_.\n+\t(main): Initialize global_dc.\n+\n+2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/105314\n+\t* ifcvt.cc (noce_try_store_flag_mask): Don't require that the non-zero\n+\toperand is equal to if_info->x, instead use the non-zero operand\n+\tas one of the operands of AND with if_info->x as target.\n+\n+2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/105374\n+\t* tree-ssa-reassoc.cc (eliminate_redundant_comparison): Punt if\n+\t!fold_convertible_p rather than assuming fold_convert must succeed.\n+\n+2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/105367\n+\t* config/i386/i386.cc (ix86_veclibabi_svml, ix86_veclibabi_acml): Pass\n+\tel_mode == DFmode ? double_type_node : float_type_node instead of\n+\tTREE_TYPE (type_in) as first arguments to mathfn_built_in.\n+\n 2022-04-25  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104308"}, {"sha": "b8093fcf599a2e45253925f50f8f75b5edfef8ff", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=01ad093b5f3fa16a22fb24db093375ed3b9315cc", "patch": "@@ -1 +1 @@\n-20220426\n+20220427"}, {"sha": "d7447d07afbff1e39b4f38dc9778d84b60ac014a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=01ad093b5f3fa16a22fb24db093375ed3b9315cc", "patch": "@@ -1,3 +1,9 @@\n+2022-04-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105304\n+\t* c-common.cc (verify_tree) [restart]: Move up to before the\n+\tNULL test.\n+\n 2022-04-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/105186"}, {"sha": "b936f1fe0f9d3498e1bed2c2698bf446dec0c966", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=01ad093b5f3fa16a22fb24db093375ed3b9315cc", "patch": "@@ -1,3 +1,32 @@\n+2022-04-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/102629\n+\t* pt.cc (gen_elem_of_pack_expansion_instantiation): Clear\n+\tTEMPLATE_TYPE_PARAMETER_PACK on auto.\n+\n+2022-04-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105386\n+\t* semantics.cc (finish_decltype_type): Pass tf_decltype to\n+\tinstantiate_non_dependent_expr_sfinae.\n+\n+2022-04-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104624\n+\t* pt.cc (check_for_bare_parameter_packs): Check for lambda\n+\tfunction parameter pack.\n+\n+2022-04-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105289\n+\tPR c++/86193\n+\t* pt.cc (process_partial_specialization): Downgrade \"partial\n+\tspecialization isn't more specialized\" diagnostic from permerror\n+\tto an on-by-default pedwarn.\n+\t(unify) <case TEMPLATE_PARM_INDEX>: When substituting into the\n+\tNTTP type a second time, use the original type not the\n+\tsubstituted type.\n+\n 2022-04-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/105353"}, {"sha": "be2dd57004698df97d4b4acad75c49134561fd33", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=01ad093b5f3fa16a22fb24db093375ed3b9315cc", "patch": "@@ -1,3 +1,7 @@\n+2022-04-26  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2022-04-14  Joseph Myers  <joseph@codesourcery.com>\n \n \t* de.po, fr.po, sv.po: Update."}, {"sha": "658693bdfcde60bc6ac6a361c2763045960885d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ad093b5f3fa16a22fb24db093375ed3b9315cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01ad093b5f3fa16a22fb24db093375ed3b9315cc", "patch": "@@ -1,3 +1,67 @@\n+2022-04-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/102629\n+\t* g++.dg/cpp2a/lambda-pack-init7.C: New test.\n+\n+2022-04-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105386\n+\t* g++.dg/cpp0x/decltype81.C: New test.\n+\n+2022-04-26  Segher Boessenkoool  <segher@kernel.crashing.org>\n+\n+\tPR target/105349\n+\t* lib/target-supports.exp (check_effective_target_has_arch_pwr5): Use\n+\tthe specified dg-options.\n+\t(check_effective_target_has_arch_pwr6): Ditto.\n+\t(check_effective_target_has_arch_pwr7): Ditto.\n+\t(check_effective_target_has_arch_pwr8): Ditto.\n+\t(check_effective_target_has_arch_pwr9): Ditto.\n+\t(check_effective_target_has_arch_pwr10): Ditto.\n+\t(check_effective_target_has_arch_ppc64): Ditto.\n+\n+2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/105314\n+\t* gcc.target/riscv/pr105314.c: New test.\n+\n+2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/65211\n+\t* g++.target/i386/vec-tmpl1.C: Add -Wno-psabi as\n+\tdg-additional-options.\n+\n+2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/105367\n+\t* gcc.target/i386/pr105367.c: New test.\n+\n+2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/103662\n+\t* lib/target-supports.exp (check_effective_target___OPTIMIZE__): Add\n+\ta var definition to avoid pedwarn about empty translation unit.\n+\t* gfortran.dg/unlimited_polymorphic_3.f03: Remove -ftree-dse from\n+\tdg-additional-options, guard scan-tree-dump-not directives on\n+\t__OPTIMIZE__ target.\n+\n+2022-04-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104624\n+\t* g++.dg/cpp1y/lambda-generic-variadic22.C: New test.\n+\n+2022-04-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105304\n+\t* g++.dg/cpp2a/concepts-requires30.C: New test.\n+\n+2022-04-26  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105289\n+\tPR c++/86193\n+\t* g++.dg/template/partial-specialization11.C: New test.\n+\t* g++.dg/template/partial-specialization12.C: New test.\n+\n 2022-04-25  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/105365"}, {"sha": "1b36447f0c4589cc6e497a9a6feb204ec221fda5", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ad093b5f3fa16a22fb24db093375ed3b9315cc/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ad093b5f3fa16a22fb24db093375ed3b9315cc/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=01ad093b5f3fa16a22fb24db093375ed3b9315cc", "patch": "@@ -1,3 +1,16 @@\n+2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/105358\n+\t* work.c (gomp_init_work_share): Don't mask of adjustment for\n+\tdynamic long long realignment if struct gomp_work_share has smaller\n+\talignof than long long.\n+\t* loop.c (GOMP_loop_start): Don't use inline_ordered_team_ids if\n+\tstruct gomp_work_share has smaller alignof than long long or if\n+\tsizeof (struct gomp_work_share) is smaller than\n+\tINLINE_ORDERED_TEAM_IDS_OFF.\n+\t* loop_ull.c (GOMP_loop_ull_start): Likewise.\n+\t* sections.c (GOMP_sections2_start): Likewise.\n+\n 2022-04-25  Jakub Jelinek  <jakub@redhat.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>\n "}, {"sha": "0a9d916ee18445a91c809185c15514ab1a3e43ac", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ad093b5f3fa16a22fb24db093375ed3b9315cc/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ad093b5f3fa16a22fb24db093375ed3b9315cc/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=01ad093b5f3fa16a22fb24db093375ed3b9315cc", "patch": "@@ -1,3 +1,8 @@\n+2022-04-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/gcc/emutls.d (emutlsDestroyThread): Clear the per-thread\n+\tTLS array, don't call free().\n+\n 2022-04-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* libdruntime/MERGE: Merge upstream druntime 27834edb."}, {"sha": "6e629ebb81c14a576a2f6acce3b0be6c27cd02e6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ad093b5f3fa16a22fb24db093375ed3b9315cc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ad093b5f3fa16a22fb24db093375ed3b9315cc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=01ad093b5f3fa16a22fb24db093375ed3b9315cc", "patch": "@@ -1,3 +1,16 @@\n+2022-04-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/shared_ptr_atomic.h (atomic<shared_ptr>): Add\n+\tconstructor for constant initialization from nullptr_t.\n+\t* testsuite/20_util/shared_ptr/atomic/atomic_shared_ptr.cc:\n+\tCheck for new constructor.\n+\n+2022-04-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/fs_path.h (hash<filesystem::path>): Define.\n+\t* testsuite/27_io/filesystem/path/nonmember/hash_value.cc:\n+\tCheck std::hash specialization.\n+\n 2022-04-25  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/ptr_traits.h (__cpp_lib_constexpr_memory): Define"}]}