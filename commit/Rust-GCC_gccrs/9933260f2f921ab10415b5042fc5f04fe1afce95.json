{"sha": "9933260f2f921ab10415b5042fc5f04fe1afce95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkzMzI2MGYyZjkyMWFiMTA0MTViNTA0MmZjNWYwNGZlMWFmY2U5NQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-03-05T13:36:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-03-05T13:36:21Z"}, "message": "locale_conv.h (wstring_convert::_M_conv): Handle noconv result.\n\n\t* include/bits/locale_conv.h (wstring_convert::_M_conv): Handle\n\tnoconv result.\n\t* testsuite/22_locale/conversions/string/2.cc: Also test UTF-8.\n\t* testsuite/22_locale/conversions/string/3.cc: Likewise, and UTF-16.\n\nFrom-SVN: r221212", "tree": {"sha": "50604d2946731d58d3d58508dcad099b1efe9b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50604d2946731d58d3d58508dcad099b1efe9b27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9933260f2f921ab10415b5042fc5f04fe1afce95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9933260f2f921ab10415b5042fc5f04fe1afce95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9933260f2f921ab10415b5042fc5f04fe1afce95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9933260f2f921ab10415b5042fc5f04fe1afce95/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcda57c130753b36ee3dd495a1404bed4b43d291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcda57c130753b36ee3dd495a1404bed4b43d291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcda57c130753b36ee3dd495a1404bed4b43d291"}], "stats": {"total": 83, "additions": 81, "deletions": 2}, "files": [{"sha": "ed4edf8b89f6ac4398d3eb21837fc3ceb055e0ce", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9933260f2f921ab10415b5042fc5f04fe1afce95/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9933260f2f921ab10415b5042fc5f04fe1afce95/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9933260f2f921ab10415b5042fc5f04fe1afce95", "patch": "@@ -1,3 +1,10 @@\n+2015-03-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/locale_conv.h (wstring_convert::_M_conv): Handle\n+\tnoconv result.\n+\t* testsuite/22_locale/conversions/string/2.cc: Also test UTF-8.\n+\t* testsuite/22_locale/conversions/string/3.cc: Likewise, and UTF-16.\n+\n 2015-03-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/64797"}, {"sha": "9b49617b7a94f861bcc2c850ec6a85743b1e0fa6", "filename": "libstdc++-v3/include/bits/locale_conv.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9933260f2f921ab10415b5042fc5f04fe1afce95/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9933260f2f921ab10415b5042fc5f04fe1afce95/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h?ref=9933260f2f921ab10415b5042fc5f04fe1afce95", "patch": "@@ -213,6 +213,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  while (__result == codecvt_base::partial && __next != __last\n \t\t && (__outstr.size() - __outchars) < __maxlen);\n \n+\t  if (__result == codecvt_base::noconv)\n+\t    {\n+\t      __outstr.assign(__first, __last);\n+\t      _M_count = __outstr.size();\n+\t      return __outstr;\n+\t    }\n+\n \t  __outstr.resize(__outchars);\n \t  _M_count = __next - __first;\n "}, {"sha": "9341f8928c4525842fbe3fbdb9bddb0ff992a23e", "filename": "libstdc++-v3/testsuite/22_locale/conversions/string/2.cc", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9933260f2f921ab10415b5042fc5f04fe1afce95/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fstring%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9933260f2f921ab10415b5042fc5f04fe1afce95/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fstring%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fstring%2F2.cc?ref=9933260f2f921ab10415b5042fc5f04fe1afce95", "patch": "@@ -36,6 +36,24 @@ using std::u32string;\n // test conversion errors, with and without error strings\n \n void test01()\n+{\n+  typedef str_conv<char> sc;\n+\n+  const sc::byte_string berr = \"invalid wide string\";\n+  const sc::wide_string werr = u8\"invalid byte string\";\n+\n+  sc c(berr, werr);\n+  string input = \"Stop\";\n+  input += char(0xFF);\n+  string woutput = c.from_bytes(input);\n+  VERIFY( input == woutput ); // noconv case doesn't detect invalid input\n+  string winput = u8\"Stop\";\n+  winput += char(0xFF);\n+  string output = c.to_bytes(winput);\n+  VERIFY( winput == output ); // noconv case doesn't detect invalid input\n+}\n+\n+void test02()\n {\n   typedef str_conv<char16_t> sc;\n \n@@ -53,7 +71,7 @@ void test01()\n   VERIFY( berr == output );\n }\n \n-void test02()\n+void test03()\n {\n   typedef str_conv<char32_t> sc;\n \n@@ -75,4 +93,5 @@ int main()\n {\n   test01();\n   test02();\n+  test03();\n }"}, {"sha": "6afa62ba2d1b0ebe5a81383d69ee35c2d1bde3cf", "filename": "libstdc++-v3/testsuite/22_locale/conversions/string/3.cc", "status": "modified", "additions": 47, "deletions": 1, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9933260f2f921ab10415b5042fc5f04fe1afce95/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fstring%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9933260f2f921ab10415b5042fc5f04fe1afce95/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fstring%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fstring%2F3.cc?ref=9933260f2f921ab10415b5042fc5f04fe1afce95", "patch": "@@ -30,11 +30,54 @@ template<typename Elem>\n using str_conv = std::wstring_convert<cvt<Elem>, Elem>;\n \n using std::string;\n+using std::u16string;\n using std::u32string;\n \n // test construction with state, for partial conversions\n \n void test01()\n+{\n+  typedef str_conv<char> wsc;\n+\n+  wsc c;\n+  string input = u8\"\\u00a3 shillings pence\";\n+  string woutput = c.from_bytes(input.substr(0, 1));\n+  auto partial_state = c.state();\n+  auto partial_count = c.converted();\n+\n+  auto woutput2 = c.from_bytes(u8\"state reset on next conversion\");\n+  VERIFY( woutput2 == u8\"state reset on next conversion\" );\n+\n+  wsc c2(new cvt<char>, partial_state);\n+  woutput += c2.from_bytes(input.substr(partial_count));\n+  VERIFY( u8\"\\u00a3 shillings pence\" == woutput );\n+\n+  string roundtrip = c2.to_bytes(woutput);\n+  VERIFY( input == roundtrip );\n+}\n+\n+void test02()\n+{\n+  typedef str_conv<char16_t> wsc;\n+\n+  wsc c;\n+  string input = u8\"\\u00a3 shillings pence\";\n+  u16string woutput = c.from_bytes(input.substr(0, 1));\n+  auto partial_state = c.state();\n+  auto partial_count = c.converted();\n+\n+  auto woutput2 = c.from_bytes(u8\"state reset on next conversion\");\n+  VERIFY( woutput2 == u\"state reset on next conversion\" );\n+\n+  wsc c2(new cvt<char16_t>, partial_state);\n+  woutput += c2.from_bytes(input.substr(partial_count));\n+  VERIFY( u\"\\u00a3 shillings pence\" == woutput );\n+\n+  string roundtrip = c2.to_bytes(woutput);\n+  VERIFY( input == roundtrip );\n+}\n+\n+void test03()\n {\n   typedef str_conv<char32_t> wsc;\n \n@@ -44,7 +87,7 @@ void test01()\n   auto partial_state = c.state();\n   auto partial_count = c.converted();\n \n-  auto woutput2 = c.from_bytes(\"state reset on next conversion\");\n+  auto woutput2 = c.from_bytes(u8\"state reset on next conversion\");\n   VERIFY( woutput2 == U\"state reset on next conversion\" );\n \n   wsc c2(new cvt<char32_t>, partial_state);\n@@ -55,7 +98,10 @@ void test01()\n   VERIFY( input == roundtrip );\n }\n \n+\n int main()\n {\n   test01();\n+  test02();\n+  test03();\n }"}]}