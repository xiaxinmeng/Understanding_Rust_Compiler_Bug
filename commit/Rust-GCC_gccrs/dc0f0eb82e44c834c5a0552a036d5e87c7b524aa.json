{"sha": "dc0f0eb82e44c834c5a0552a036d5e87c7b524aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMwZjBlYjgyZTQ0YzgzNGM1YTA1NTJhMDM2ZDVlODdjN2I1MjRhYQ==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "1998-04-20T15:06:40Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-04-20T15:06:40Z"}, "message": "Patch from John Wehle to fix movxf_push spill reg allocation failure.\n\n\t* i386.md (movsf_push, movdf_push, movxf_push): Allow memory\n\toperands during and after reload.\n\nFrom-SVN: r19346", "tree": {"sha": "638a341cad9d7be4b87228d41430c775109add9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/638a341cad9d7be4b87228d41430c775109add9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba70e85a7719a544573acff0de64730c1bf045f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba70e85a7719a544573acff0de64730c1bf045f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba70e85a7719a544573acff0de64730c1bf045f2"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "fbac26bdaf325608aa21037acdaab2d4eabd0d54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc0f0eb82e44c834c5a0552a036d5e87c7b524aa", "patch": "@@ -1,3 +1,8 @@\n+Mon Apr 20 15:04:14 1998  John Wehle  (john@feith.com)\n+\n+\t* i386.md (movsf_push, movdf_push, movxf_push): Allow memory\n+\toperands during and after reload.\n+\n Mon Apr 20 22:37:50 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* final.c (shorten_branches, init_insn_lengths): Move code"}, {"sha": "7fe22aafbd1d37d81c24dd20f3534ccd9d82bfe3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc0f0eb82e44c834c5a0552a036d5e87c7b524aa/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=dc0f0eb82e44c834c5a0552a036d5e87c7b524aa", "patch": "@@ -1189,8 +1189,8 @@\n \n (define_insn \"movsf_push\"\n   [(set (match_operand:SF 0 \"push_operand\" \"=<,<\")\n-\t(match_operand:SF 1 \"nonmemory_operand\" \"rF,f\"))]\n-  \"\"\n+\t(match_operand:SF 1 \"general_operand\" \"*rfF,m\"))]\n+  \"GET_CODE (operands[1]) != MEM || reload_in_progress || reload_completed\"\n   \"*\n {\n   if (STACK_REG_P (operands[1]))\n@@ -1213,6 +1213,7 @@\n \n       RET;\n     }\n+\n   return AS1 (push%L0,%1);\n }\")\n \n@@ -1336,8 +1337,8 @@\n \n (define_insn \"movdf_push\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<,<\")\n-\t(match_operand:DF 1 \"nonmemory_operand\" \"rF,f\"))]\n-  \"\"\n+\t(match_operand:DF 1 \"general_operand\" \"*rfF,o\"))]\n+  \"GET_CODE (operands[1]) != MEM || reload_in_progress || reload_completed\"\n   \"*\n {\n   if (STACK_REG_P (operands[1]))\n@@ -1357,6 +1358,10 @@\n \n       RET;\n     }\n+\n+  if (which_alternative == 1)\n+    return output_move_pushmem (operands, insn, GET_MODE_SIZE (DFmode), 0, 0);\n+\n   return output_move_double (operands);\n }\")\n \n@@ -1482,8 +1487,8 @@\n \n (define_insn \"movxf_push\"\n   [(set (match_operand:XF 0 \"push_operand\" \"=<,<\")\n- \t(match_operand:XF 1 \"nonmemory_operand\" \"rF,f\"))]\n-  \"\"\n+ \t(match_operand:XF 1 \"general_operand\" \"*rfF,o\"))]\n+  \"GET_CODE (operands[1]) != MEM || reload_in_progress || reload_completed\"\n   \"*\n {\n   if (STACK_REG_P (operands[1]))\n@@ -1502,6 +1507,10 @@\n \n       RET;\n     }\n+\n+  if (which_alternative == 1)\n+    return output_move_pushmem (operands, insn, GET_MODE_SIZE (XFmode), 0, 0);\n+\n   return output_move_double (operands);\n  }\")\n "}]}