{"sha": "22d8d6160281e66502cc39f5496119250f2b929c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJkOGQ2MTYwMjgxZTY2NTAyY2MzOWY1NDk2MTE5MjUwZjJiOTI5Yw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-11-03T13:39:39Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-11-03T13:39:39Z"}, "message": "In gcc/: 2010-11-03 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/:\n2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Implemented -fobjc-std=objc1 flag.\n        * doc/invoke.texi (Option Summary): Document -fobjc-std=objc1\n        option.\n        * doc/standards.texi (Standards): Updated the section on\n        Objective-C; mention support for Objective-C 2.0 features and the\n        new -fstd-objc=objc1 flag to disable them.\n\nIn gcc/c-family/:\n2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Implemented -fobjc-std=objc1 flag.\n        * c.opt (fobjc-std=objc1): New option.\n\nIn gcc/objc/:\n2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Implemented -fobjc-std=objc1 flag.\n        * objc-act.c (objc_start_class_interface): If attributes are\n        specified when flag_objc1_only is set, print an error.\n        (objc_start_category_interface): Same change.\n        (objc_start_protocol): Same change.\n        (objc_add_method_declaration): Same change.\n        (objc_start_method_definition): Same change.\n        (objc_build_keyword_decl): Same change.\n        (objc_set_method_opt): If flag_objc1_only is set, print an error.\n        (objc_add_property_declaration): Same change.\n        (objc_add_synthesize_declaration): Same change.\n        (objc_add_dynamic_declaration): Same change.\n        (objc_finish_foreach_loop): Same change.\n        (objc_maybe_build_component_ref): If flag_objc1_only is set,\n        return immediately.\n\nIn gcc/testsuite/:\n2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        Implemented -fobjc-std=objc1 flag.\n        * objc.dg/fobjc-std-1.m: New.\n        * obj-c++.dg/fobjc-std-1.mm: New.\n\nFrom-SVN: r166246", "tree": {"sha": "d7da73886d7150ae4b9af474952eace642cc12be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7da73886d7150ae4b9af474952eace642cc12be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22d8d6160281e66502cc39f5496119250f2b929c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22d8d6160281e66502cc39f5496119250f2b929c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22d8d6160281e66502cc39f5496119250f2b929c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22d8d6160281e66502cc39f5496119250f2b929c/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68a22980da9a9705dff9d870e422c8efce414ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a22980da9a9705dff9d870e422c8efce414ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a22980da9a9705dff9d870e422c8efce414ae2"}], "stats": {"total": 262, "additions": 244, "deletions": 18}, "files": [{"sha": "2408777c319c0c63e31c6ee921067d68f27dcd5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -1,3 +1,12 @@\n+2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tImplemented -fobjc-std=objc1 flag.\n+\t* doc/invoke.texi (Option Summary): Document -fobjc-std=objc1\n+\toption.\n+\t* doc/standards.texi (Standards): Updated the section on\n+\tObjective-C; mention support for Objective-C 2.0 features and the\n+\tnew -fstd-objc=objc1 flag to disable them.\n+\n 2010-11-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/46241"}, {"sha": "cffdf098eb0934b201b940305eb47c023f731eda", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -1,3 +1,8 @@\n+2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tImplemented -fobjc-std=objc1 flag.\n+\t* c.opt (fobjc-std=objc1): New option.\n+\n 2010-11-01  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tImplemented format and noreturn attributes for Objective-C methods."}, {"sha": "97ed248b8d28b1c3ddb02e5410c8b57431343de5", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -870,6 +870,10 @@ fobjc-sjlj-exceptions\n ObjC ObjC++ Var(flag_objc_sjlj_exceptions) Init(-1)\n Enable Objective-C setjmp exception handling runtime\n \n+fobjc-std=objc1\n+ObjC ObjC++ Var(flag_objc1_only)\n+Conform to the Objective-C 1.0 language as implemented in GCC 4.0\n+\n fopenmp\n C ObjC C++ ObjC++ Var(flag_openmp)\n Enable OpenMP (implies -frecursive in Fortran)"}, {"sha": "3aefa09c89fe208a8354c8173343ec6184d54760", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -212,6 +212,7 @@ Objective-C and Objective-C++ Dialects}.\n -fobjc-direct-dispatch @gol\n -fobjc-exceptions @gol\n -fobjc-gc @gol\n+-fobjc-std=objc1 @gol\n -freplace-objc-classes @gol\n -fzero-link @gol\n -gen-decls @gol\n@@ -2591,6 +2592,17 @@ programs.  This option is only available with the NeXT runtime; the\n GNU runtime has a different garbage collection implementation that\n does not require special compiler flags.\n \n+@item -fobjc-std=objc1\n+@opindex fobjc-std\n+Conform to the language syntax of Objective-C 1.0, the language\n+recognized by GCC 4.0.  This only affects the Objective-C additions to\n+the C/C++ language; it does not affect conformance to C/C++ standards,\n+which is controlled by the separate C/C++ dialect option flags.  When\n+this option is used with the Objective-C or Objective-C++ compiler,\n+any Objective-C syntax that is not recognized by GCC 4.0 is rejected.\n+This is useful if you need to make sure that your Objective-C code can\n+be compiled with older versions of GCC.\n+\n @item -freplace-objc-classes\n @opindex freplace-objc-classes\n Emit a special marker instructing @command{ld(1)} not to statically link in"}, {"sha": "59fbf037d67fcddab53cb6a0a8a7f2b035f15fa4", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -209,11 +209,13 @@ no C++ language dialect options are given, is @option{-std=gnu++98}.\n @cindex Objective-C++\n \n GCC supports ``traditional'' Objective-C (also known as ``Objective-C\n-1.0''), and contains support for the Objective-C exception and\n-synchronization syntax.  At the time of writing, it has no support for\n-``Objective-C 2.0'' language extensions.  GCC supports Objective-C++\n-and features available in Objective-C are also available in\n-Objective-C++@.\n+1.0'') and contains support for the Objective-C exception and\n+synchronization syntax.  It has also support for a number of\n+``Objective-C 2.0'' language extensions, including properties, fast\n+enumeration (only for Objective-C), method attributes and the\n+@@optional and @@required keywords in protocols.  GCC supports\n+Objective-C++ and features available in Objective-C are also available\n+in Objective-C++@.\n \n GCC by default uses the GNU Objective-C runtime library, which is part\n of GCC and is not the same as the Apple/NeXT Objective-C runtime\n@@ -242,12 +244,25 @@ not documentation on the newer ``Objective-C 2.0'' language\n \n The Objective-C exception and synchronization syntax (that is, the\n keywords @@try, @@throw, @@catch, @@finally and @@synchronized) is\n-fully supported by GCC and is enabled with the option\n+supported by GCC and is enabled with the option\n @option{-fobjc-exceptions}.  The syntax is briefly documented in this\n manual and in the Objective-C 2.0 manuals from Apple.\n \n-At the time of writing, GCC supports no Objective-C 2.0 features.  The\n-authoritative manual on Objective-C 2.0 is available from Apple:\n+The Objective-C 2.0 language extensions and features are automatically\n+enabled; they include properties (via the @@property, @@synthesize and\n+@@dynamic keywords), fast enumeration (not available in\n+Objective-C++), attributes for methods (such as deprecated, noreturn,\n+sentinel, format), the unused attribute for method arguments, the\n+@@package keyword for instance variables and the @@optional and\n+@@required keywords in protocols.  You can disable all these\n+Objective-C 2.0 language extensions with the option\n+@option{-fobjc-std=objc1}, which causes the compiler to recognize the\n+same Objective-C language syntax recognized by GCC 4.0, and to produce\n+an error if one of the new features is used.\n+\n+GCC has currently no support for non-fragile instance variables.\n+\n+The authoritative manual on Objective-C 2.0 is available from Apple:\n @itemize\n @item\n @uref{http://developer.apple.com/@/mac/@/library/@/documentation/@/Cocoa/@/Conceptual/@/ObjectiveC/}"}, {"sha": "61c5a961c3d27b7c06f24e7284129bc4f0d36ffa", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -1,3 +1,23 @@\n+2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tImplemented -fobjc-std=objc1 flag.\n+\t* objc-act.c (objc_start_class_interface): If attributes are\n+\tspecified when flag_objc1_only is set, print an error.\n+\t(objc_start_category_interface): Same change.\n+\t(objc_start_protocol): Same change.\n+\t(objc_add_method_declaration): Same change.\n+\t(objc_start_method_definition): Same change.\n+\t(objc_build_keyword_decl): Same change.\n+\t(objc_set_visibility): If OBJC_IVAR_VIS_PACKAGE is used when\n+\tflag_objc1_set is set, print an error.\n+\t(objc_set_method_opt): If flag_objc1_only is set, print an error.\n+\t(objc_add_property_declaration): Same change.\n+\t(objc_add_synthesize_declaration): Same change.\n+\t(objc_add_dynamic_declaration): Same change.\n+\t(objc_finish_foreach_loop): Same change.\n+\t(objc_maybe_build_component_ref): If flag_objc1_only is set,\n+\treturn immediately.\n+\n 2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (maybe_make_artificial_property_decl): New."}, {"sha": "1c97f46775fafd05675299c7d042d0cc82e1e31c", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 56, "deletions": 10, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -686,9 +686,14 @@ objc_start_class_interface (tree klass, tree super_class,\n \t\t\t    tree protos, tree attributes)\n {\n   if (attributes)\n-    warning_at (input_location, OPT_Wattributes, \n-\t\t\"class attributes are not available in this version\"\n-\t\t\" of the compiler, (ignored)\");\n+    {\n+      if (flag_objc1_only)\n+\terror_at (input_location, \"class attributes are not available in Objective-C 1.0\");\n+      else\n+\twarning_at (input_location, OPT_Wattributes, \n+\t\t    \"class attributes are not available in this version\"\n+\t\t    \" of the compiler, (ignored)\");\n+    }\n   objc_interface_context\n     = objc_ivar_context\n     = start_class (CLASS_INTERFACE_TYPE, klass, super_class, protos);\n@@ -700,9 +705,14 @@ objc_start_category_interface (tree klass, tree categ,\n \t\t\t       tree protos, tree attributes)\n {\n   if (attributes)\n-    warning_at (input_location, OPT_Wattributes, \n-\t\t\"category attributes are not available in this version\"\n-\t\t\" of the compiler, (ignored)\");\n+    {\n+      if (flag_objc1_only)\n+\terror_at (input_location, \"category attributes are not available in Objective-C 1.0\");\n+      else\n+\twarning_at (input_location, OPT_Wattributes, \n+\t\t    \"category attributes are not available in this version\"\n+\t\t    \" of the compiler, (ignored)\");\n+    }\n   objc_interface_context\n     = start_class (CATEGORY_INTERFACE_TYPE, klass, categ, protos);\n   objc_ivar_chain\n@@ -713,9 +723,14 @@ void\n objc_start_protocol (tree name, tree protos, tree attributes)\n {\n   if (attributes)\n-    warning_at (input_location, OPT_Wattributes, \n-\t\t\"protocol attributes are not available in this version\"\n-\t\t\" of the compiler, (ignored)\");\n+    {\n+      if (flag_objc1_only)\n+\terror_at (input_location, \"protocol attributes are not available in Objective-C 1.0\");\t\n+      else\n+\twarning_at (input_location, OPT_Wattributes, \n+\t\t    \"protocol attributes are not available in this version\"\n+\t\t    \" of the compiler, (ignored)\");\n+    }\n   objc_interface_context\n     = start_protocol (PROTOCOL_INTERFACE_TYPE, name, protos);\n   objc_method_optional_flag = false;\n@@ -783,13 +798,21 @@ void\n objc_set_visibility (objc_ivar_visibility_kind visibility)\n {\n   if (visibility == OBJC_IVAR_VIS_PACKAGE)\n-    warning (0, \"%<@package%> presently has the same effect as %<@public%>\");\n+    {\n+      if (flag_objc1_only)\n+\terror (\"%<@package%> is not available in Objective-C 1.0\");\n+      else\n+\twarning (0, \"%<@package%> presently has the same effect as %<@public%>\");\n+    }\n   objc_ivar_visibility = visibility;\n }\n \n void\n objc_set_method_opt (bool optional)\n {\n+  if (flag_objc1_only)\n+    error_at (input_location, \"@optional/@required are not available in Objective-C 1.0\");\t\n+\n   objc_method_optional_flag = optional;\n   if (!objc_interface_context \n       || TREE_CODE (objc_interface_context) != PROTOCOL_INTERFACE_TYPE)\n@@ -827,6 +850,9 @@ objc_add_property_declaration (location_t location, tree decl,\n   bool property_readonly = false;\n   objc_property_assign_semantics property_assign_semantics = OBJC_PROPERTY_ASSIGN;\n \n+  if (flag_objc1_only)\n+    error_at (input_location, \"%<@property%> is not available in Objective-C 1.0\");\n+\n   if (parsed_property_readonly && parsed_property_readwrite)\n     {\n       error_at (location, \"%<readonly%> attribute conflicts with %<readwrite%> attribute\");\n@@ -1155,6 +1181,11 @@ objc_maybe_build_component_ref (tree object, tree property_ident)\n   tree x = NULL_TREE;\n   tree rtype;\n \n+  /* If we are in Objective-C 1.0 mode, properties are not\n+     available.  */\n+  if (flag_objc1_only)\n+    return NULL_TREE;\n+\n   /* Try to determine quickly if 'object' is an Objective-C object or\n      not.  If not, return.  */\n   if (object == NULL_TREE || object == error_mark_node \n@@ -1346,6 +1377,9 @@ objc_add_method_declaration (bool is_class_method, tree decl, tree attributes)\n       fatal_error (\"method declaration not in @interface context\");\n     }\n \n+  if (flag_objc1_only && attributes)\n+    error_at (input_location, \"method attributes are not available in Objective-C 1.0\");\n+\n   objc_decl_method_attributes (&decl, attributes, 0);\n   objc_add_method (objc_interface_context,\n \t\t   decl,\n@@ -6632,6 +6666,9 @@ objc_build_keyword_decl (tree key_name, tree arg_type,\n {\n   tree keyword_decl;\n \n+  if (flag_objc1_only && attributes)\n+    error_at (input_location, \"method argument attributes are not available in Objective-C 1.0\");\n+\n   /* If no type is specified, default to \"id\".  */\n   arg_type = adjust_type_for_id_default (arg_type);\n \n@@ -9339,6 +9376,9 @@ objc_add_synthesize_declaration (location_t location, tree property_and_ivar_lis\n {\n   tree interface, chain;\n \n+  if (flag_objc1_only)\n+    error_at (input_location, \"%<@synthesize%> is not available in Objective-C 1.0\");\n+\n   if (property_and_ivar_list == error_mark_node)\n     return;\n \n@@ -9459,6 +9499,9 @@ objc_add_dynamic_declaration (location_t location, tree property_list)\n {\n   tree interface, chain;\n \n+  if (flag_objc1_only)\n+    error_at (input_location, \"%<@dynamic%> is not available in Objective-C 1.0\");\n+\n   if (property_list == error_mark_node)\n     return;\n \n@@ -12163,6 +12206,9 @@ objc_finish_foreach_loop (location_t location, tree object_expression, tree coll\n   tree t;\n   int i;\n \n+  if (flag_objc1_only)\n+    error_at (location, \"fast enumeration is not available in Objective-C 1.0\");\n+\n   if (object_expression == error_mark_node)\n     return;\n "}, {"sha": "53b1b48b24d8a074c0f5344a56363202ad4d7fbc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -1,3 +1,9 @@\n+2010-11-03  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tImplemented -fobjc-std=objc1 flag.\n+\t* objc.dg/fobjc-std-1.m: New.\t\n+\t* obj-c++.dg/fobjc-std-1.mm: New.\n+\n 2010-11-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/46241"}, {"sha": "b8234ee0ccd7a313330baba1a67328b176d327c3", "filename": "gcc/testsuite/obj-c++.dg/fobjc-std-1.mm", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ffobjc-std-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ffobjc-std-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ffobjc-std-1.mm?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -0,0 +1,55 @@\n+/* Test warnings when using -fobjc-std=objc1.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-fobjc-std=objc1\" } */\n+\n+#include <objc/objc.h>\n+\n+__attribute__ ((deprecated))\n+@interface MyRootClass /* { dg-error \"class attributes are not available in Objective.C 1.0\" } */\n+{\n+  Class isa; /* { dg-error \".@package. is not available in Objective.C 1.0\" } */\n+@package\n+  int a;\n+  int b;\n+}\n++ (id) alloc __attribute__ ((deprecated)); /* { dg-error \"not available in Objective.C 1.0\" } */\n+- (id) init;\n+- (id) testMe: (id) __attribute__((unused)) argument; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@property (nonatomic) int a; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@property (nonatomic) int b; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@end\n+\n+@implementation MyRootClass\n++ (id) alloc { return self; }\n+- (id) init  { return self; }\n+- (id) testMe: (id) __attribute__((unused)) argument { return self; } /* { dg-error \"not available in Objective.C 1.0\" } */\n+@synthesize a; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@dynamic b; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@end\n+\n+__attribute__ ((deprecated))\n+@protocol MyProtocol /* { dg-error \"protocol attributes are not available in Objective.C 1.0\" } */\n+\n+@required /* { dg-error \"not available in Objective.C 1.0\" } */\n+- (id) variable __attribute__ ((deprecated)); /* { dg-error \"not available in Objective.C 1.0\" } */\n+@optional /* { dg-error \"not available in Objective.C 1.0\" } */\n+@end\n+#if 0 /* fast enumeration is not implemented even in Objective-C 2.0 */\n+@interface MyRootClass (NSFastEnumeration)\n+- (unsigned long)countByEnumeratingWithState: (struct __objcFastEnumerationState *)state\n+                                     objects:(id *)stackbuf \n+                                       count:(unsigned int)len;\n+@end\n+\n+@class NSArray;\n+\n+int array_length (NSArray *array)\n+{\n+  int i = 0;\n+\n+  for (id object in array) /*  dg-error \"not available in Objective.C 1.0\"  */\n+    i++;\n+      \n+  return i;\n+}\n+#endif\n\\ No newline at end of file"}, {"sha": "3ef4857b2e57e3cf61e84e6152283fa72f8e82a4", "filename": "gcc/testsuite/objc.dg/fobjc-std-1.m", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Ftestsuite%2Fobjc.dg%2Ffobjc-std-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d8d6160281e66502cc39f5496119250f2b929c/gcc%2Ftestsuite%2Fobjc.dg%2Ffobjc-std-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ffobjc-std-1.m?ref=22d8d6160281e66502cc39f5496119250f2b929c", "patch": "@@ -0,0 +1,54 @@\n+/* Test warnings when using -fobjc-std=objc1.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-fobjc-std=objc1\" } */\n+\n+#include <objc/objc.h>\n+\n+__attribute__ ((deprecated))\n+@interface MyRootClass\n+{  /* { dg-error \"class attributes are not available in Objective.C 1.0\" } */\n+  Class isa;\n+@package /* { dg-error \"not available in Objective.C 1.0\" } */\n+  int a;\n+  int b;\n+}\n++ (id) alloc __attribute__ ((deprecated)); /* { dg-error \"not available in Objective.C 1.0\" } */\n+- (id) init;\n+- (id) testMe: (id) __attribute__((unused)) argument; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@property (nonatomic) int a; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@property (nonatomic) int b; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@end\n+\n+@implementation MyRootClass\n++ (id) alloc { return self; }\n+- (id) init  { return self; }\n+- (id) testMe: (id) __attribute__((unused)) argument { return self; } /* { dg-error \"not available in Objective.C 1.0\" } */\n+@synthesize a; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@dynamic b; /* { dg-error \"not available in Objective.C 1.0\" } */\n+@end\n+\n+__attribute__ ((deprecated))\n+@protocol MyProtocol\n+- (id) test; /* { dg-error \"protocol attributes are not available in Objective.C 1.0\" } */\n+@required /* { dg-error \"not available in Objective.C 1.0\" } */\n+- (id) variable __attribute__ ((deprecated)); /* { dg-error \"not available in Objective.C 1.0\" } */\n+@optional /* { dg-error \"not available in Objective.C 1.0\" } */\n+@end\n+\n+@interface MyRootClass (NSFastEnumeration)\n+- (unsigned long)countByEnumeratingWithState: (struct __objcFastEnumerationState *)state\n+                                     objects:(id *)stackbuf \n+                                       count:(unsigned int)len;\n+@end\n+\n+@class NSArray;\n+\n+int array_length (NSArray *array)\n+{\n+  int i = 0;\n+\n+  for (id object in array) /* { dg-error \"not available in Objective.C 1.0\" } */\n+    i++;\n+      \n+  return i;\n+}"}]}