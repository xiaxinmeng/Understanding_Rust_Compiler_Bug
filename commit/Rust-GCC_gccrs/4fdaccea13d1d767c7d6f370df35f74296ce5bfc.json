{"sha": "4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZkYWNjZWExM2QxZDc2N2M3ZDZmMzcwZGYzNWY3NDI5NmNlNWJmYw==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2009-07-14T15:01:55Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2009-07-14T15:01:55Z"}, "message": "re PR debug/40705 (ICE in gen_type_die_with_usage, at dwarf2out.c:15117)\n\n2009-07-14  Dodji Seketeli  <dodji@redhat.com>\n\ngcc/ChangeLog:\n\tPR debug/40705\n\tPR c++/403057\n\t* dwarf2.out.c (gen_type_die_with_usage): Added comment.\n\ngcc/cp/ChangeLog:\n\tPR debug/40705\n\tPR c++/403057\n\t* decl2.c (grokfield): Don't call set_underlying_type on typedef\n\tdecls that are type names.\n\ngcc/testsuite/ChangeLog:\n\tPR debug/40705\n\tPR c++/403057\n\t* g++.dg/debug/dwarf2/typedef1.C: New test.\n\t* g++.dg/other/typedef3.C: Likewise.\n\nFrom-SVN: r149628", "tree": {"sha": "3d532c6c5fe4fdf982f382093c35a0367eb115fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d532c6c5fe4fdf982f382093c35a0367eb115fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/comments", "author": null, "committer": null, "parents": [{"sha": "0b200b806d0fb670fbf4d38750cc3eb563cc1401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b200b806d0fb670fbf4d38750cc3eb563cc1401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b200b806d0fb670fbf4d38750cc3eb563cc1401"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "8f78256d4b7b37f160033e9d9c98a6e907ceae75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "patch": "@@ -1,3 +1,9 @@\n+2009-07-14  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR debug/40705\n+\tPR c++/403057\n+\t* dwarf2.out.c (gen_type_die_with_usage): Added comment.\n+\n 2009-07-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/40745"}, {"sha": "db1bc36cde05af8839c2c4a65f548b03bc8785e5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "patch": "@@ -1,3 +1,10 @@\n+2009-07-14  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR debug/40705\n+\tPR c++/403057\n+\t* decl2.c (grokfield): Don't call set_underlying_type on typedef\n+\tdecls that are type names.\n+\n 2009-07-13  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR C++/22154"}, {"sha": "3a5d2fa929bdc5bae3251a9ce54e5ed150c59d25", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "patch": "@@ -821,7 +821,9 @@ grokfield (const cp_declarator *declarator,\n \t  cplus_decl_attributes (&value, attrlist, attrflags);\n \t}\n \n-      if (declspecs->specs[(int)ds_typedef])\n+      if (declspecs->specs[(int)ds_typedef]\n+          && TREE_TYPE (value) != error_mark_node\n+          && TYPE_NAME (TYPE_MAIN_VARIANT (TREE_TYPE (value))) != value)\n \tset_underlying_type (value);\n \n       return value;"}, {"sha": "2c5d0562562af6349325c59e47b2954bcba391f0", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "patch": "@@ -15135,6 +15135,8 @@ gen_type_die_with_usage (tree type, dw_die_ref context_die,\n   if (type == NULL_TREE || type == error_mark_node)\n     return;\n \n+  /* If TYPE is a typedef type variant, let's generate debug info\n+     for the parent typedef which TYPE is a type of.  */\n   if (TYPE_NAME (type) && TREE_CODE (TYPE_NAME (type)) == TYPE_DECL\n       && DECL_ORIGINAL_TYPE (TYPE_NAME (type)))\n     {"}, {"sha": "4ccfdc1c5e18a7d0b37ca7279361f50b37cea397", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "patch": "@@ -1,3 +1,11 @@\n+2009-07-14  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR debug/40705\n+\t* g++.dg/debug/dwarf2/typedef1.C: New test.\n+\n+\tPR c++/403057\n+\t* g++.dg/other/typedef3.C: New test.\n+\n 2009-07-14  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* gcc.dg/20090709-1.c: Move to a proper place ..."}, {"sha": "f325ac54ad2918945f71235d626137f42c16d31e", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/typedef1.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Ftypedef1.C?ref=4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "patch": "@@ -0,0 +1,33 @@\n+// Contributed by Dodji Seketeli <dodji@redhat.com>\n+// Origin: PR c++/40705\n+// { dg-options \"-g -dA\" }\n+// { dg-do compile }\n+// { dg-final { scan-assembler-times \"DW_TAG_structure_type\" 2 } }\n+// { dg-final { scan-assembler-times \"DW_AT_name: \\\"foo<1u>\\\"\" 1 } }\n+// { dg-final { scan-assembler-times \"DW_TAG_enumeration_type\" 2 } }\n+// { dg-final { scan-assembler-times \"DW_AT_name: \\\"typedef foo<1u>::type type\\\"\" 1 } }\n+// { dg-final { scan-assembler-times \"DIE (.*) DW_TAG_enumeration_type\" 2 } }\n+// { dg-final { scan-assembler-times \"\\\"e0..\\\".*DW_AT_name\" 1 } }\n+// { dg-final { scan-assembler-times \"\\\"e1..\\\".*DW_AT_name\" 1 } }\n+\n+template <unsigned int n>\n+struct foo\n+{\n+public:\n+    typedef\n+ unsigned char type;\n+};\n+\n+template<>\n+struct foo<1>\n+{\n+    typedef enum { e0, e1 } type;\n+};\n+\n+int\n+main()\n+{\n+    foo<1> f;\n+    foo<1>::type t = foo<1>::e1;\n+    return t;\n+}"}, {"sha": "8ead5b84520c2b3e69a2d82950a98ff1581102e1", "filename": "gcc/testsuite/g++.dg/other/typedef3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ftypedef3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdaccea13d1d767c7d6f370df35f74296ce5bfc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ftypedef3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ftypedef3.C?ref=4fdaccea13d1d767c7d6f370df35f74296ce5bfc", "patch": "@@ -0,0 +1,12 @@\n+// Contributed by Dodji Seketeli <dodji@redhat.com>\n+// Origin: PR c++/40357\n+// { dg-do compile }\n+\n+struct XalanCProcessor\n+{\n+      typedef enum {eInvalid, eXalanSourceTree, eXercesDOM} ParseOptionType;\n+          ParseOptionType getParseOption(void);\n+};\n+typedef XalanCProcessor::ParseOptionType ParseOptionType;\n+ParseOptionType XalanCProcessor::getParseOption(void) {}\n+"}]}