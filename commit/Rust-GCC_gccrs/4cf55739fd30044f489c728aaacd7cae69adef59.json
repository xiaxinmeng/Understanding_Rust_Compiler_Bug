{"sha": "4cf55739fd30044f489c728aaacd7cae69adef59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNmNTU3MzlmZDMwMDQ0ZjQ4OWM3MjhhYWFjZDdjYWU2OWFkZWY1OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-02-16T08:16:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-02-16T08:16:17Z"}, "message": "re PR tree-optimization/84399 ([graphite] ICE in set_codegen_error, at graphite-isl-ast-to-gimple.c:206)\n\n2018-02-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/84399\n\t* graphite-scop-detection.c (scop_detection::stmt_simple_for_scop_p):\n\tFor operands we can analyze at their definition make sure we can\n\tanalyze them at each use as well.\n\n\t* gcc.dg/graphite/pr84399.c: New testcase.\n\nFrom-SVN: r257723", "tree": {"sha": "4380c4aa5bbdb48c445fa6d19a49572086ffa275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4380c4aa5bbdb48c445fa6d19a49572086ffa275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cf55739fd30044f489c728aaacd7cae69adef59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf55739fd30044f489c728aaacd7cae69adef59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cf55739fd30044f489c728aaacd7cae69adef59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf55739fd30044f489c728aaacd7cae69adef59/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd74f4d876ffa7090603bb5d317d7b6e52df43c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd74f4d876ffa7090603bb5d317d7b6e52df43c0"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "f97986b0e9a0dd8dcc12706ee3d688f59354c59a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf55739fd30044f489c728aaacd7cae69adef59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf55739fd30044f489c728aaacd7cae69adef59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cf55739fd30044f489c728aaacd7cae69adef59", "patch": "@@ -1,3 +1,10 @@\n+2018-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84399\n+\t* graphite-scop-detection.c (scop_detection::stmt_simple_for_scop_p):\n+\tFor operands we can analyze at their definition make sure we can\n+\tanalyze them at each use as well.\n+\n 2018-02-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/84190"}, {"sha": "70cb773186ac0014d3d2f3f381fd8c1a5b487595", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf55739fd30044f489c728aaacd7cae69adef59/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf55739fd30044f489c728aaacd7cae69adef59/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=4cf55739fd30044f489c728aaacd7cae69adef59", "patch": "@@ -1027,7 +1027,23 @@ scop_detection::stmt_simple_for_scop_p (sese_l scop, gimple *stmt,\n \n     case GIMPLE_ASSIGN:\n     case GIMPLE_CALL:\n-      return true;\n+      {\n+\ttree op;\n+\tssa_op_iter i;\n+\t/* Verify that if we can analyze operands at their def site we\n+\t   also can represent them when analyzed at their uses.  */\n+\tFOR_EACH_SSA_TREE_OPERAND (op, stmt, i, SSA_OP_USE)\n+\t  if (scev_analyzable_p (op, scop)\n+\t      && !graphite_can_represent_expr (scop, bb->loop_father, op))\n+\t    {\n+\t      DEBUG_PRINT (dp << \"[scop-detection-fail] \"\n+\t\t\t   << \"Graphite cannot represent stmt:\\n\";\n+\t\t\t   print_gimple_stmt (dump_file, stmt, 0,\n+\t\t\t\t\t      TDF_VOPS | TDF_MEMSYMS));\n+\t      return false;\n+\t    }\n+\treturn true;\n+      }\n \n     default:\n       /* These nodes cut a new scope.  */"}, {"sha": "772879fd90aeb1cce20a0b2730f61d55e9f85d67", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf55739fd30044f489c728aaacd7cae69adef59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf55739fd30044f489c728aaacd7cae69adef59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4cf55739fd30044f489c728aaacd7cae69adef59", "patch": "@@ -1,3 +1,8 @@\n+2018-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/84399\n+\t* gcc.dg/graphite/pr84399.c: New testcase.\n+\n 2018-02-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/84190"}, {"sha": "4b142df75a2e691272ab31dab9b21454fc044f33", "filename": "gcc/testsuite/gcc.dg/graphite/pr84399.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf55739fd30044f489c728aaacd7cae69adef59/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84399.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf55739fd30044f489c728aaacd7cae69adef59/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84399.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84399.c?ref=4cf55739fd30044f489c728aaacd7cae69adef59", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -floop-nest-optimize -fno-tree-loop-im --param scev-max-expr-size=1\" } */\n+\n+void\n+h8 (int cv, int od)\n+{\n+  for (;;)\n+    {\n+      int ih = (__UINTPTR_TYPE__)&od;\n+      if (cv == 0)\n+\twhile (od < 1)\n+\t  {\n+\t    int lq;\n+\n+\t    for (lq = 0; lq < 3; ++lq)\n+\t      for (ih = 0; ih < 4; ++ih)\n+\t\tod += lq;\n+\t  }\n+      while (ih < 1)\n+\t{\n+\t}\n+    }\n+}"}]}