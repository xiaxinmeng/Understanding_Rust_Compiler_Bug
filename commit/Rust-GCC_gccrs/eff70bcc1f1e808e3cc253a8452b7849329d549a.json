{"sha": "eff70bcc1f1e808e3cc253a8452b7849329d549a", "node_id": "C_kwDOANBUbNoAKGVmZjcwYmNjMWYxZTgwOGUzY2MyNTNhODQ1MmI3ODQ5MzI5ZDU0OWE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-04-13T19:39:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-19T14:05:30Z"}, "message": "[Ada] Ignore Predicate_Failure in GNATprove mode\n\nIn GNATprove mode we are don't want predicate failure to pollute the\npredicate expression extracted from the predicate function.\n\ngcc/ada/\n\n\t* sem_ch13.adb (Build_Predicate_Function): Ignore predicate\n\tfailure in GNATprove mode.", "tree": {"sha": "293ecd0157368c3bd67bf391caa4bdd1ee1d42a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/293ecd0157368c3bd67bf391caa4bdd1ee1d42a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eff70bcc1f1e808e3cc253a8452b7849329d549a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff70bcc1f1e808e3cc253a8452b7849329d549a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eff70bcc1f1e808e3cc253a8452b7849329d549a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff70bcc1f1e808e3cc253a8452b7849329d549a/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55a11c7e345dd06d6975fe8f4dc0e11ecbb581ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55a11c7e345dd06d6975fe8f4dc0e11ecbb581ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55a11c7e345dd06d6975fe8f4dc0e11ecbb581ff"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "c12253cf26a2e571073fb27143d9755d5e6da0d6", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eff70bcc1f1e808e3cc253a8452b7849329d549a/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eff70bcc1f1e808e3cc253a8452b7849329d549a/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=eff70bcc1f1e808e3cc253a8452b7849329d549a", "patch": "@@ -10487,7 +10487,13 @@ package body Sem_Ch13 is\n                Second_Formal : constant Entity_Id :=\n                  Next_Entity (Object_Entity);\n             begin\n-               if Present (PF_Expr) then\n+               --  In GNATprove mode we are only interested in the predicate\n+               --  expression itself and don't want a raise expression that\n+               --  comes from the Predicate_Failure.\n+\n+               if Present (PF_Expr)\n+                 and then not GNATprove_Mode\n+               then\n                   pragma Assert (Present (Second_Formal));\n \n                   --  This is an ugly hack to cope with an ugly situation."}]}