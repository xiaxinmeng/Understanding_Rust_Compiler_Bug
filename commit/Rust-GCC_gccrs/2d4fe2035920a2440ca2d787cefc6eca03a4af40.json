{"sha": "2d4fe2035920a2440ca2d787cefc6eca03a4af40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0ZmUyMDM1OTIwYTI0NDBjYTJkNzg3Y2VmYzZlY2EwM2E0YWY0MA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-06-13T16:38:00Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-27T08:05:19Z"}, "message": "[Ada] Ada2020: wording of 'Image messages\n\ngcc/ada/\n\n\t* errout.ads, errout.adb (Error_Msg_Ada_2020_Feature): New\n\tprocedure analogous to Error_Msg_Ada_2012_Feature.\n\t* sem_attr.adb (Analyze_Image_Attribute): Use\n\tError_Msg_Ada_2012_Feature and Error_Msg_Ada_2020_Feature to\n\tindicate that Object'Image is allowed in Ada 2012, and that\n\t'Image is allowed for any type in Ada 2020.", "tree": {"sha": "1ea85f0e52ac3d422dbdd87c9e9f575622a25ad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ea85f0e52ac3d422dbdd87c9e9f575622a25ad4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d4fe2035920a2440ca2d787cefc6eca03a4af40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4fe2035920a2440ca2d787cefc6eca03a4af40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4fe2035920a2440ca2d787cefc6eca03a4af40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4fe2035920a2440ca2d787cefc6eca03a4af40/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21717db17a8264b7f75366aafa3d21afce5dd41b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21717db17a8264b7f75366aafa3d21afce5dd41b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21717db17a8264b7f75366aafa3d21afce5dd41b"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "1063d7d0548498f8f96a354a5819189966a05c47", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4fe2035920a2440ca2d787cefc6eca03a4af40/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4fe2035920a2440ca2d787cefc6eca03a4af40/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=2d4fe2035920a2440ca2d787cefc6eca03a4af40", "patch": "@@ -630,6 +630,24 @@ package body Errout is\n       end if;\n    end Error_Msg_Ada_2012_Feature;\n \n+   --------------------------------\n+   -- Error_Msg_Ada_2020_Feature --\n+   --------------------------------\n+\n+   procedure Error_Msg_Ada_2020_Feature (Feature : String; Loc : Source_Ptr) is\n+   begin\n+      if Ada_Version < Ada_2020 then\n+         Error_Msg (Feature & \" is an Ada 2020 feature\", Loc);\n+\n+         if No (Ada_Version_Pragma) then\n+            Error_Msg (\"\\unit must be compiled with -gnat2020 switch\", Loc);\n+         else\n+            Error_Msg_Sloc := Sloc (Ada_Version_Pragma);\n+            Error_Msg (\"\\incompatible with Ada version set#\", Loc);\n+         end if;\n+      end if;\n+   end Error_Msg_Ada_2020_Feature;\n+\n    ------------------\n    -- Error_Msg_AP --\n    ------------------"}, {"sha": "83a23cc63f09832ba47b32b8950b247abbb1cd05", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4fe2035920a2440ca2d787cefc6eca03a4af40/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4fe2035920a2440ca2d787cefc6eca03a4af40/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=2d4fe2035920a2440ca2d787cefc6eca03a4af40", "patch": "@@ -895,12 +895,15 @@ package Errout is\n    --  first formal (RM 9.4(11.9/3)).\n \n    procedure Error_Msg_Ada_2012_Feature (Feature : String; Loc : Source_Ptr);\n-   --  If not operating in Ada 2012 mode, posts errors complaining that Feature\n-   --  is only supported in Ada 2012, with appropriate suggestions to fix this.\n-   --  Loc is the location at which the flag is to be posted. Feature, which\n-   --  appears at the start of the first generated message, may contain error\n-   --  message insertion characters in the normal manner, and in particular\n-   --  may start with | to flag a non-serious error.\n+   --  If not operating in Ada 2012 mode or higher, posts errors complaining\n+   --  that Feature is only supported in Ada 2012, with appropriate suggestions\n+   --  to fix this. Loc is the location at which the flag is to be posted.\n+   --  Feature, which appears at the start of the first generated message, may\n+   --  contain error message insertion characters in the normal manner, and in\n+   --  particular may start with | to flag a non-serious error.\n+\n+   procedure Error_Msg_Ada_2020_Feature (Feature : String; Loc : Source_Ptr);\n+   --  Analogous to Error_Msg_Ada_2012_Feature\n \n    procedure dmsg (Id : Error_Msg_Id) renames Erroutc.dmsg;\n    --  Debugging routine to dump an error message"}, {"sha": "e3c027df1e07d5d5ed99007eb7d8912ce3c0f200", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4fe2035920a2440ca2d787cefc6eca03a4af40/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4fe2035920a2440ca2d787cefc6eca03a4af40/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2d4fe2035920a2440ca2d787cefc6eca03a4af40", "patch": "@@ -1457,16 +1457,11 @@ package body Sem_Attr is\n \n          procedure Check_Image_Type (Image_Type : Entity_Id) is\n          begin\n-            if Ada_Version >= Ada_2020 then\n-               null; -- all types are OK\n-            elsif not Is_Scalar_Type (Image_Type) then\n-               if Ada_Version >= Ada_2012 then\n-                  Error_Attr_P\n-                    (\"prefix of % attribute must be a scalar type or a scalar \"\n-                       & \"object name\");\n-               else\n-                  Error_Attr_P (\"prefix of % attribute must be a scalar type\");\n-               end if;\n+            if Ada_Version < Ada_2020\n+              and then not Is_Scalar_Type (Image_Type)\n+            then\n+               Error_Msg_Ada_2020_Feature (\"|nonscalar ''Image\", Sloc (P));\n+               Error_Attr;\n             end if;\n          end Check_Image_Type;\n \n@@ -1483,7 +1478,7 @@ package body Sem_Attr is\n             Check_Image_Type (Etype (P));\n \n             if Attr_Id /= Attribute_Img and then Ada_Version < Ada_2012 then\n-               Error_Attr_P (\"prefix of % attribute must be a scalar type\");\n+               Error_Msg_Ada_2012_Feature (\"|Object''Image\", Sloc (P));\n             end if;\n          else\n             Check_E1;"}]}