{"sha": "cc99421ec4b3b94aa328175635782f6f5c36f9e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M5OTQyMWVjNGIzYjk0YWEzMjgxNzU2MzU3ODJmNmY1YzM2ZjllOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-12-14T20:27:06Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-12-14T20:27:06Z"}, "message": "re PR target/59874 (Missing builtin (__builtin_clzs) when compiling with g++)\n\n\tPR target/59874\n\t* config/i386/i386-builtin.def: Add __builtin_clzs and __builtin_ctzs.\n\t(ix86_fold_builtin): Handle IX86_BUILTIN_CTZS and IX86_BUILTIN_CLZS.\n\t* config/i386/i386.md (*ctzhi2): New insn_and_split pattern.\n\t(*clzhi2): Ditto.\n\ntestsuite/ChangeLog\n\n\tPR target/59874\n\t* gcc.target/i386/pr59874-1.c: New test.\n\t* gcc.target/i386/pr59874-2.c: Ditto.\n\nFrom-SVN: r243668", "tree": {"sha": "9040d890f5c23059afba6984baea15264e0c7ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9040d890f5c23059afba6984baea15264e0c7ee0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc99421ec4b3b94aa328175635782f6f5c36f9e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc99421ec4b3b94aa328175635782f6f5c36f9e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc99421ec4b3b94aa328175635782f6f5c36f9e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc99421ec4b3b94aa328175635782f6f5c36f9e9/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3cab14ab383a8b52fec55c8fd4621865205c693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cab14ab383a8b52fec55c8fd4621865205c693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3cab14ab383a8b52fec55c8fd4621865205c693"}], "stats": {"total": 85, "additions": 83, "deletions": 2}, "files": [{"sha": "1fbc8727a52e8ac6ad03a3fe9299e3018bedc6ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc99421ec4b3b94aa328175635782f6f5c36f9e9", "patch": "@@ -1,3 +1,11 @@\n+2016-12-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/59874\n+\t* config/i386/i386-builtin.def: Add __builtin_clzs and __builtin_ctzs.\n+\t(ix86_fold_builtin): Handle IX86_BUILTIN_CTZS and IX86_BUILTIN_CLZS.\n+\t* config/i386/i386.md (*ctzhi2): New insn_and_split pattern.\n+\t(*clzhi2): Ditto.\n+\n 2016-12-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/77844"}, {"sha": "498207a9a537d2cefceb09b9330e2c0c396836fe", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=cc99421ec4b3b94aa328175635782f6f5c36f9e9", "patch": "@@ -1188,6 +1188,8 @@ BDESC (OPTION_MASK_ISA_AVX2, CODE_FOR_avx2_lshrvv4si, \"__builtin_ia32_psrlv4si\",\n \n /* LZCNT */\n BDESC (OPTION_MASK_ISA_LZCNT, CODE_FOR_lzcnt_hi, \"__builtin_ia32_lzcnt_u16\", IX86_BUILTIN_LZCNT16, UNKNOWN, (int) UINT16_FTYPE_UINT16)\n+/* Same as above, for backward compatibility.  */\n+BDESC (OPTION_MASK_ISA_LZCNT, CODE_FOR_lzcnt_hi, \"__builtin_clzs\", IX86_BUILTIN_CLZS, UNKNOWN, (int) UINT16_FTYPE_UINT16)\n BDESC (OPTION_MASK_ISA_LZCNT, CODE_FOR_lzcnt_si, \"__builtin_ia32_lzcnt_u32\", IX86_BUILTIN_LZCNT32, UNKNOWN, (int) UINT_FTYPE_UINT)\n BDESC (OPTION_MASK_ISA_LZCNT | OPTION_MASK_ISA_64BIT, CODE_FOR_lzcnt_di, \"__builtin_ia32_lzcnt_u64\", IX86_BUILTIN_LZCNT64, UNKNOWN, (int) UINT64_FTYPE_UINT64)\n \n@@ -1196,6 +1198,8 @@ BDESC (OPTION_MASK_ISA_BMI, CODE_FOR_bmi_bextr_si, \"__builtin_ia32_bextr_u32\", I\n BDESC (OPTION_MASK_ISA_BMI | OPTION_MASK_ISA_64BIT, CODE_FOR_bmi_bextr_di, \"__builtin_ia32_bextr_u64\", IX86_BUILTIN_BEXTR64, UNKNOWN, (int) UINT64_FTYPE_UINT64_UINT64)\n \n BDESC (OPTION_MASK_ISA_BMI, CODE_FOR_bmi_tzcnt_hi, \"__builtin_ia32_tzcnt_u16\", IX86_BUILTIN_TZCNT16, UNKNOWN, (int) UINT16_FTYPE_UINT16)\n+/* Same as above, for backward compatibility.  */\n+BDESC (OPTION_MASK_ISA_BMI, CODE_FOR_bmi_tzcnt_hi, \"__builtin_ctzs\", IX86_BUILTIN_CTZS, UNKNOWN, (int) UINT16_FTYPE_UINT16)\n BDESC (OPTION_MASK_ISA_BMI, CODE_FOR_bmi_tzcnt_si, \"__builtin_ia32_tzcnt_u32\", IX86_BUILTIN_TZCNT32, UNKNOWN, (int) UINT_FTYPE_UINT)\n BDESC (OPTION_MASK_ISA_BMI | OPTION_MASK_ISA_64BIT, CODE_FOR_bmi_tzcnt_di, \"__builtin_ia32_tzcnt_u64\", IX86_BUILTIN_TZCNT64, UNKNOWN, (int) UINT64_FTYPE_UINT64)\n "}, {"sha": "3d9d485ad19e2b242dba8959350fbd581adf6016", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=cc99421ec4b3b94aa328175635782f6f5c36f9e9", "patch": "@@ -33573,14 +33573,16 @@ ix86_fold_builtin (tree fndecl, int n_args,\n \t  }\n \n \tcase IX86_BUILTIN_TZCNT16:\n+\tcase IX86_BUILTIN_CTZS:\n \tcase IX86_BUILTIN_TZCNT32:\n \tcase IX86_BUILTIN_TZCNT64:\n \t  gcc_assert (n_args == 1);\n \t  if (TREE_CODE (args[0]) == INTEGER_CST)\n \t    {\n \t      tree type = TREE_TYPE (TREE_TYPE (fndecl));\n \t      tree arg = args[0];\n-\t      if (fn_code == IX86_BUILTIN_TZCNT16)\n+\t      if (fn_code == IX86_BUILTIN_TZCNT16\n+\t\t  || fn_code == IX86_BUILTIN_CTZS)\n \t\targ = fold_convert (short_unsigned_type_node, arg);\n \t      if (integer_zerop (arg))\n \t\treturn build_int_cst (type, TYPE_PRECISION (TREE_TYPE (arg)));\n@@ -33590,14 +33592,16 @@ ix86_fold_builtin (tree fndecl, int n_args,\n \t  break;\n \n \tcase IX86_BUILTIN_LZCNT16:\n+\tcase IX86_BUILTIN_CLZS:\n \tcase IX86_BUILTIN_LZCNT32:\n \tcase IX86_BUILTIN_LZCNT64:\n \t  gcc_assert (n_args == 1);\n \t  if (TREE_CODE (args[0]) == INTEGER_CST)\n \t    {\n \t      tree type = TREE_TYPE (TREE_TYPE (fndecl));\n \t      tree arg = args[0];\n-\t      if (fn_code == IX86_BUILTIN_LZCNT16)\n+\t      if (fn_code == IX86_BUILTIN_LZCNT16\n+\t\t  || fn_code == IX86_BUILTIN_CLZS)\n \t\targ = fold_convert (short_unsigned_type_node, arg);\n \t      if (integer_zerop (arg))\n \t\treturn build_int_cst (type, TYPE_PRECISION (TREE_TYPE (arg)));"}, {"sha": "30d049544111275fd0f7f11a308cb7e4725c4067", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=cc99421ec4b3b94aa328175635782f6f5c36f9e9", "patch": "@@ -12606,6 +12606,24 @@\n \t    (match_operand:SWI48 1 \"nonimmediate_operand\")))\n      (clobber (reg:CC FLAGS_REG))])])\n \n+(define_insn_and_split \"*ctzhi2\"\n+  [(set (match_operand:SI 0 \"register_operand\")\n+\t(ctz:SI\n+\t  (zero_extend:SI (match_operand:HI 1 \"nonimmediate_operand\"))))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_BMI\n+   && can_create_pseudo_p ()\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n+{\n+  rtx tmp = gen_reg_rtx (HImode);\n+\n+  emit_insn (gen_bmi_tzcnt_hi (tmp, operands[1]));\n+  emit_insn (gen_zero_extendhisi2 (operands[0], tmp));\n+  DONE;\n+})\n+\n ; False dependency happens when destination is only updated by tzcnt,\n ; lzcnt or popcnt.  There is no false dependency when destination is\n ; also used in source.\n@@ -12768,6 +12786,27 @@\n      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_LZCNT\")\n \n+(define_insn_and_split \"*clzhi2\"\n+  [(set (match_operand:SI 0 \"register_operand\")\n+\t(clz:SI\n+\t  (zero_extend:SI (match_operand:HI 1 \"nonimmediate_operand\"))))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_LZCNT\n+   && can_create_pseudo_p ()\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n+{\n+  rtx tmp = gen_reg_rtx (HImode);\n+\n+  emit_insn (gen_lzcnt_hi (tmp, operands[1]));\n+  emit_insn (gen_zero_extendhisi2 (operands[0], tmp));\n+  DONE;\n+})\n+\n+; False dependency happens when destination is only updated by tzcnt,\n+; lzcnt or popcnt.  There is no false dependency when destination is\n+; also used in source.\n (define_insn_and_split \"*clz<mode>2_lzcnt_falsedep_1\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r\")\n \t(clz:SWI48"}, {"sha": "7875060bcb76f403cde020b781096225c21fae4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc99421ec4b3b94aa328175635782f6f5c36f9e9", "patch": "@@ -1,3 +1,9 @@\n+2016-12-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/59874\n+\t* gcc.target/i386/pr59874-1.c: New test.\n+\t* gcc.target/i386/pr59874-2.c: Ditto.\n+\n 2016-12-14  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.dg/torture/pr78515.c: Add -Wno-psabi for AIX."}, {"sha": "e6a8a06dd52d38ffeaeda0b12fd36aa11cd1d6c4", "filename": "gcc/testsuite/gcc.target/i386/pr59874-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59874-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59874-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59874-1.c?ref=cc99421ec4b3b94aa328175635782f6f5c36f9e9", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/59874 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mbmi -masm=att\" } */\n+/* { dg-final { scan-assembler \"tzcntw\" } } */\n+\n+unsigned int\n+foo (unsigned short x)\n+{\n+  return x ? __builtin_ctz (x) : 16U;\n+}"}, {"sha": "710aa7a482c3d83265b7f2345937893ca1ae4c1e", "filename": "gcc/testsuite/gcc.target/i386/pr59874-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59874-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc99421ec4b3b94aa328175635782f6f5c36f9e9/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59874-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr59874-2.c?ref=cc99421ec4b3b94aa328175635782f6f5c36f9e9", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/59874 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mlzcnt -masm=att\" } */\n+/* { dg-final { scan-assembler \"lzcntw\" } } */\n+\n+unsigned int\n+foo (unsigned short x)\n+{\n+  return x ? __builtin_clz (x) : 16U;\n+}"}]}