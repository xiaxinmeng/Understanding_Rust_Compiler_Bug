{"sha": "df3927406e3ca1ed7620332a8608ad4bce4c45c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYzOTI3NDA2ZTNjYTFlZDc2MjAzMzJhODYwOGFkNGJjZTRjNDVjNg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2014-02-08T16:22:46Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2014-02-08T16:22:46Z"}, "message": "re PR fortran/60066 (Bad elemental invocation of non-scalar base object)\n\n2014-02-08  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/60066\n\t* gfortran.dg/elemental_subroutine_10.f90 : New test. This PR\n\twas fixed by the patch for PR59906.\n\nFrom-SVN: r207633", "tree": {"sha": "5d0b5ca535d709f025cc12d6a5409c5296c6b3b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d0b5ca535d709f025cc12d6a5409c5296c6b3b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df3927406e3ca1ed7620332a8608ad4bce4c45c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df3927406e3ca1ed7620332a8608ad4bce4c45c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df3927406e3ca1ed7620332a8608ad4bce4c45c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df3927406e3ca1ed7620332a8608ad4bce4c45c6/comments", "author": null, "committer": null, "parents": [{"sha": "41475e966c921f732cef0fb16481f7c1b9cbef9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41475e966c921f732cef0fb16481f7c1b9cbef9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41475e966c921f732cef0fb16481f7c1b9cbef9b"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "8448c42b9b6848966c81ed3cc11408138efc2bc3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df3927406e3ca1ed7620332a8608ad4bce4c45c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df3927406e3ca1ed7620332a8608ad4bce4c45c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df3927406e3ca1ed7620332a8608ad4bce4c45c6", "patch": "@@ -1,3 +1,9 @@\n+2014-02-08  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/60066\n+\t* gfortran.dg/elemental_subroutine_10.f90 : New test. This PR\n+\twas fixed by the patch for PR59906.\n+\n 2014-02-08  Andreas Schwab  <schwab@linux-m68k.org>\n \n \tPR translation/52289"}, {"sha": "be343e6ff25ab97ff9d618d6d59c1c91be4e712c", "filename": "gcc/testsuite/gfortran.dg/elemental_subroutine_10.f90", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df3927406e3ca1ed7620332a8608ad4bce4c45c6/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_subroutine_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df3927406e3ca1ed7620332a8608ad4bce4c45c6/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_subroutine_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_subroutine_10.f90?ref=df3927406e3ca1ed7620332a8608ad4bce4c45c6", "patch": "@@ -0,0 +1,68 @@\n+! { dg-do run }\n+!\n+! PR fortran/60066\n+!\n+! Contributed by F Martinez Fadrique  <fmartinez@gmv.com>\n+!\n+! Fixed by the patch for PR59906 but adds another, different test.\n+!\n+module m_assertion_character\n+  implicit none\n+  type :: t_assertion_character\n+    character(len=8) :: name\n+  contains\n+    procedure :: assertion_character\n+    procedure :: write => assertion_array_write\n+  end type t_assertion_character\n+contains\n+  elemental subroutine assertion_character( ast, name )\n+    class(t_assertion_character), intent(out) :: ast\n+    character(len=*), intent(in) :: name\n+    ast%name = name\n+  end subroutine assertion_character\n+  subroutine assertion_array_write( ast, unit )\n+    class(t_assertion_character), intent(in) :: ast\n+    character(*), intent(inOUT) :: unit\n+    write(unit,*) trim (unit(2:len(unit)))//trim (ast%name)\n+  end subroutine assertion_array_write\n+end module m_assertion_character\n+\n+module m_assertion_array_character\n+  use m_assertion_character\n+  implicit none\n+  type :: t_assertion_array_character\n+    type(t_assertion_character), dimension(:), allocatable :: rast\n+  contains\n+    procedure :: assertion_array_character\n+    procedure :: write => assertion_array_character_write\n+  end type t_assertion_array_character\n+contains\n+  pure subroutine assertion_array_character( ast, name, nast )\n+    class(t_assertion_array_character), intent(out) :: ast\n+    character(len=*), intent(in) :: name\n+    integer, intent(in) :: nast\n+    integer :: i\n+    allocate ( ast%rast(nast) )\n+    call ast%rast%assertion_character ( name )\n+  end subroutine assertion_array_character\n+  subroutine assertion_array_character_write( ast, unit )\n+    class(t_assertion_array_character), intent(in) :: ast\n+    CHARACTER(*), intent(inOUT) :: unit\n+    integer :: i\n+    do i = 1, size (ast%rast)\n+      call ast%rast(i)%write (unit)\n+    end do\n+  end subroutine assertion_array_character_write\n+end module m_assertion_array_character\n+\n+program main\n+  use m_assertion_array_character\n+  implicit none\n+  type(t_assertion_array_character) :: ast\n+  character(len=8) :: name\n+  character (26) :: line = ''\n+  name = 'test'\n+  call ast%assertion_array_character ( name, 5 )\n+  call ast%write (line)\n+  if (line(2:len (line)) .ne. \"testtesttesttesttest\") call abort\n+end program main"}]}