{"sha": "154516d9d2011112deeb5becd98819d63397b2b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU0NTE2ZDlkMjAxMTExMmRlZWI1YmVjZDk4ODE5ZDYzMzk3YjJiMQ==", "commit": {"author": {"name": "Wei Guozhi", "email": "carrot@google.com", "date": "2011-07-29T01:27:29Z"}, "committer": {"name": "Wei Guozhi", "email": "carrot@gcc.gnu.org", "date": "2011-07-29T01:27:29Z"}, "message": "re PR rtl-optimization/49799 (gcc arm generates illegal sbfx instruction)\n\n\tPR rtl-optimization/49799\n\n\t* combine.c (make_compound_operation): Check if the bit field is valid\n\tbefore change it to bit field extraction.\n\n\t* gcc.dg/pr49799.c: New test case.\n\nFrom-SVN: r176911", "tree": {"sha": "04bc619662014eaed8079e64815b5d6ac56e7ce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04bc619662014eaed8079e64815b5d6ac56e7ce9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/154516d9d2011112deeb5becd98819d63397b2b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/154516d9d2011112deeb5becd98819d63397b2b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/154516d9d2011112deeb5becd98819d63397b2b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/154516d9d2011112deeb5becd98819d63397b2b1/comments", "author": {"login": "weiguozhi", "id": 57237827, "node_id": "MDQ6VXNlcjU3MjM3ODI3", "avatar_url": "https://avatars.githubusercontent.com/u/57237827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiguozhi", "html_url": "https://github.com/weiguozhi", "followers_url": "https://api.github.com/users/weiguozhi/followers", "following_url": "https://api.github.com/users/weiguozhi/following{/other_user}", "gists_url": "https://api.github.com/users/weiguozhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiguozhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiguozhi/subscriptions", "organizations_url": "https://api.github.com/users/weiguozhi/orgs", "repos_url": "https://api.github.com/users/weiguozhi/repos", "events_url": "https://api.github.com/users/weiguozhi/events{/privacy}", "received_events_url": "https://api.github.com/users/weiguozhi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bd1d898d253cbe668033d3ae85e203b090ba05c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bd1d898d253cbe668033d3ae85e203b090ba05c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bd1d898d253cbe668033d3ae85e203b090ba05c"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "0b70415acad0e9684e65e6a1003d277aba4ecdc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/154516d9d2011112deeb5becd98819d63397b2b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/154516d9d2011112deeb5becd98819d63397b2b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=154516d9d2011112deeb5becd98819d63397b2b1", "patch": "@@ -1,3 +1,9 @@\n+2011-07-29  Wei Guozhi  <carrot@google.com>\n+\n+\tPR rtl-optimization/49799\n+\t* combine.c (make_compound_operation): Check if the bit field is valid\n+\tbefore change it to bit field extraction.\n+\n 2011-07-29  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR rtl-optimization/49891"}, {"sha": "b5cf245f761ca1388bcf065ef7c41e13f9a4d3ec", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/154516d9d2011112deeb5becd98819d63397b2b1/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/154516d9d2011112deeb5becd98819d63397b2b1/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=154516d9d2011112deeb5becd98819d63397b2b1", "patch": "@@ -7787,6 +7787,7 @@ make_compound_operation (rtx x, enum rtx_code in_code)\n \t  && GET_CODE (lhs) == ASHIFT\n \t  && CONST_INT_P (XEXP (lhs, 1))\n \t  && INTVAL (rhs) >= INTVAL (XEXP (lhs, 1))\n+\t  && INTVAL (XEXP (lhs, 1)) >= 0\n \t  && INTVAL (rhs) < mode_width)\n \t{\n \t  new_rtx = make_compound_operation (XEXP (lhs, 0), next_code);"}, {"sha": "d5e61cb5e8b840febd156cb36b1e44c4b3ea7dc7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/154516d9d2011112deeb5becd98819d63397b2b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/154516d9d2011112deeb5becd98819d63397b2b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=154516d9d2011112deeb5becd98819d63397b2b1", "patch": "@@ -1,3 +1,8 @@\n+2011-07-29  Wei Guozhi  <carrot@google.com>\n+\n+\tPR rtl-optimization/49799\n+\t* gcc.dg/pr49799.c: New test case.\n+\n 2011-07-22  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/48648"}, {"sha": "61ac261be51fdf2648aeedd087cc13d6ffeccec8", "filename": "gcc/testsuite/gcc.dg/pr49799.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/154516d9d2011112deeb5becd98819d63397b2b1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49799.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/154516d9d2011112deeb5becd98819d63397b2b1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49799.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49799.c?ref=154516d9d2011112deeb5becd98819d63397b2b1", "patch": "@@ -0,0 +1,25 @@\n+/* PR rtl-optimization/49799 */\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -w\" } */\n+\n+static __inline int bar(int a)\n+{\n+    int tmp;\n+\n+    if (a <= 0) a ^= 0xFFFFFFFF;\n+\n+    return tmp - 1;\n+}\n+\n+void foo(short *K)\n+{\n+    short tmp;\n+    short *pptr, P[14];\n+\n+    pptr = P;\n+    tmp = bar(*K);\n+    *pptr = (*K << tmp) >> 16;\n+\n+    if (*P < tmp)\n+        *K++ = 0;\n+}"}]}