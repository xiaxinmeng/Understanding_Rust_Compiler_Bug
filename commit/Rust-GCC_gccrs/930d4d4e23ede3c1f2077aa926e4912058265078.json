{"sha": "930d4d4e23ede3c1f2077aa926e4912058265078", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMwZDRkNGUyM2VkZTNjMWYyMDc3YWE5MjZlNDkxMjA1ODI2NTA3OA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2011-10-16T22:06:19Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2011-10-16T22:06:19Z"}, "message": "frontend-passes.c (current_ns): Make static.\n\n2011-10-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\t* frontend-passes.c (current_ns):  Make static.\n\t(create_var):  Note parent of newly created namespace.\n\t(optimize_namespace):  Don't wak sibling namespaces\n\tif they are EXEC_BLOCK because this is handled...\n\t(gfc_code_walker):  ... here.  Also walk ASSOCIATE lists.\n\nFrom-SVN: r180063", "tree": {"sha": "70c943f230ff04ba01f5685051e8b59fa8ff736f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70c943f230ff04ba01f5685051e8b59fa8ff736f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/930d4d4e23ede3c1f2077aa926e4912058265078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930d4d4e23ede3c1f2077aa926e4912058265078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/930d4d4e23ede3c1f2077aa926e4912058265078", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930d4d4e23ede3c1f2077aa926e4912058265078/comments", "author": null, "committer": null, "parents": [{"sha": "bee64a2b9e0c63a3e731bba71c5e3c709204d288", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bee64a2b9e0c63a3e731bba71c5e3c709204d288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bee64a2b9e0c63a3e731bba71c5e3c709204d288"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "1d515dc1069a068f1781283a3d73569f3b41194b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930d4d4e23ede3c1f2077aa926e4912058265078/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930d4d4e23ede3c1f2077aa926e4912058265078/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=930d4d4e23ede3c1f2077aa926e4912058265078", "patch": "@@ -1,3 +1,11 @@\n+2011-10-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* frontend-passes.c (current_ns):  Make static.\n+\t(create_var):  Note parent of newly created namespace.\n+\t(optimize_namespace):  Don't wak sibling namespaces\n+\tif they are EXEC_BLOCK because this is handled...\n+\t(gfc_code_walker):  ... here.  Also walk ASSOCIATE lists.\n+\n 2011-10-16  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/47023"}, {"sha": "5b1a644e247a18cd0e24bcf540c36b31025393c3", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930d4d4e23ede3c1f2077aa926e4912058265078/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930d4d4e23ede3c1f2077aa926e4912058265078/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=930d4d4e23ede3c1f2077aa926e4912058265078", "patch": "@@ -60,7 +60,7 @@ static gfc_code *inserted_block, **changed_statement;\n \n /* The namespace we are currently dealing with.  */\n \n-gfc_namespace *current_ns;\n+static gfc_namespace *current_ns;\n \n /* If we are within any forall loop.  */\n \n@@ -261,6 +261,7 @@ create_var (gfc_expr * e)\n       (*current_code)->next = NULL;\n       /* Insert the BLOCK at the right position.  */\n       *current_code = inserted_block;\n+      ns->parent = current_ns;\n     }\n   else\n     ns = inserted_block->ext.block.ns;\n@@ -509,8 +510,12 @@ optimize_namespace (gfc_namespace *ns)\n   gfc_code_walker (&ns->code, cfe_code, cfe_expr_0, NULL);\n   gfc_code_walker (&ns->code, optimize_code, optimize_expr, NULL);\n \n+  /* BLOCKs are handled in the expression walker below.  */\n   for (ns = ns->contained; ns; ns = ns->sibling)\n-    optimize_namespace (ns);\n+    {\n+      if (ns->code == NULL || ns->code->op != EXEC_BLOCK)\n+\toptimize_namespace (ns);\n+    }\n }\n \n /* Replace code like\n@@ -1143,6 +1148,7 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t  gfc_code *b;\n \t  gfc_actual_arglist *a;\n \t  gfc_code *co;\n+\t  gfc_association_list *alist;\n \n \t  /* There might be statement insertions before the current code,\n \t     which must not affect the expression walker.  */\n@@ -1151,6 +1157,13 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \n \t  switch (co->op)\n \t    {\n+\n+\t    case EXEC_BLOCK:\n+\t      WALK_SUBCODE (co->ext.block.ns->code);\n+\t      for (alist = co->ext.block.assoc; alist; alist = alist->next)\n+\t\tWALK_SUBEXPR (alist->target);\n+\t      break;\n+\n \t    case EXEC_DO:\n \t      WALK_SUBEXPR (co->ext.iterator->var);\n \t      WALK_SUBEXPR (co->ext.iterator->start);"}]}