{"sha": "9a472a42247d099c512b6d992890f88643612c8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE0NzJhNDIyNDdkMDk5YzUxMmI2ZDk5Mjg5MGY4ODY0MzYxMmM4Yw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-06-28T16:23:29Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-06-28T16:23:29Z"}, "message": "diagnostic.h (diagnostic_set_info): Replace file and lineno parameters with a location_t.\n\n\t* diagnostic.h (diagnostic_set_info): Replace file and lineno\n\tparameters with a location_t.\n\t* diagnostic.c (diagnostic_set_info): Replace file and lineno\n\tparameters with a location_t.\n\t(inform, warning, pedwarn, error, sorry, fatal_error,\n\tinternal_error, warning_with_decl, pedwarn_with_decl,\n\terror_with_decl): Adjust.\n\t* c-error.c (pedwarn_c99): Adjust.\n\t* c-format.c (status_warning): Adjust.\n\t* rtl-error.c (file_and_line_for_asm): Rename to ...\n\t(location_for_asm): Return a location_t.\n\t(diagnostic_for_asm): Adjust.\n\n\t* cp/cp-tree.h (cp_line_of, cp_file_of): Remove.\n\t* cp/error.c (cp_line_of, cp_file_of): Merge into ...\n\t(location_of): ... here. Make static, return a location_t.\n\t(cp_error_at, cp_warning_at, cp_pedwarn_at): Adjust.\n\n\t* testsuite/g++.old-deja/g++.robertl/eb133.C: Set expected line\n\tnumber.\n\t* testsuite/g++.old-deja/g++.robertl/eb133a.C: Likewise.\n\t* testsuite/g++.old-deja/g++.robertl/eb133b.C: Likewise.\n\nFrom-SVN: r68643", "tree": {"sha": "38b43c524490adad24cd4d5c9105cbbdd3fca991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38b43c524490adad24cd4d5c9105cbbdd3fca991"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a472a42247d099c512b6d992890f88643612c8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a472a42247d099c512b6d992890f88643612c8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a472a42247d099c512b6d992890f88643612c8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a472a42247d099c512b6d992890f88643612c8c/comments", "author": null, "committer": null, "parents": [{"sha": "debdeb5d7073803b2acc0f92a0c8b09d1cfde5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/debdeb5d7073803b2acc0f92a0c8b09d1cfde5e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/debdeb5d7073803b2acc0f92a0c8b09d1cfde5e5"}], "stats": {"total": 162, "additions": 77, "deletions": 85}, "files": [{"sha": "5a31bb03b166fc8603dd2ea9779552a9b8f7d8de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -1,3 +1,18 @@\n+2003-06-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* diagnostic.h (diagnostic_set_info): Replace file and lineno\n+\tparameters with a location_t.\n+\t* diagnostic.c (diagnostic_set_info): Replace file and lineno\n+\tparameters with a location_t.\n+\t(inform, warning, pedwarn, error, sorry, fatal_error,\n+\tinternal_error, warning_with_decl, pedwarn_with_decl,\n+\terror_with_decl): Adjust.\n+\t* c-error.c (pedwarn_c99): Adjust.\n+\t* c-format.c (status_warning): Adjust.\n+\t* rtl-error.c (file_and_line_for_asm): Rename to ...\n+\t(location_for_asm): Return a location_t.\n+\t(diagnostic_for_asm): Adjust.\n+\n 2003-06-28  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* cpptrad.c (skip_macro_block_comment): New."}, {"sha": "2a2fdc0c440cf87f22af9e44c690f6e57d4f0c6d", "filename": "gcc/c-errors.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fc-errors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fc-errors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-errors.c?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -38,7 +38,7 @@ pedwarn_c99 (const char *msgid, ...)\n   va_list ap;\n   \n   va_start (ap, msgid);\n-  diagnostic_set_info (&diagnostic, msgid, &ap, input_filename, input_line,\n+  diagnostic_set_info (&diagnostic, msgid, &ap, input_location,\n                        flag_isoc99 ? pedantic_error_kind () : DK_WARNING);\n   report_diagnostic (&diagnostic);\n   va_end (ap);"}, {"sha": "dc17f0e9f8b4d67ff009b52315a6e73c4ff0b2c5", "filename": "gcc/c-format.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-format.c?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -1004,7 +1004,7 @@ status_warning (int *status, const char *msgid, ...)\n     {\n       /* This duplicates the warning function behavior.  */\n       diagnostic_set_info (&diagnostic, _(msgid), &ap,\n-\t\t\t   input_filename, input_line, DK_WARNING);\n+\t\t\t   input_location, DK_WARNING);\n       report_diagnostic (&diagnostic);\n     }\n "}, {"sha": "16a909e7735aa10ebe605473dc21aa7d276525d3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -1,3 +1,10 @@\n+2003-06-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cp-tree.h (cp_line_of, cp_file_of): Remove.\n+\t* error.c (cp_line_of, cp_file_of): Merge into ...\n+\t(location_of): ... here. Make static, return a location_t.\n+\t(cp_error_at, cp_warning_at, cp_pedwarn_at): Adjust.\n+\n 2003-06-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/10784"}, {"sha": "51243f92dae07fd5376c405a33adf6fa6ee1e42a", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -3820,8 +3820,6 @@ extern const char *decl_as_string\t\t(tree, int);\n extern const char *expr_as_string\t\t(tree, int);\n extern const char *context_as_string            (tree, int);\n extern const char *lang_decl_name\t\t(tree, int);\n-extern const char *cp_file_of\t\t\t(tree);\n-extern int cp_line_of\t\t\t\t(tree);\n extern const char *language_to_string           (enum languages, int);\n extern void print_instantiation_context         (void);\n "}, {"sha": "a5420a7d0b5cecacae4768c754c596801ffd8a5a", "filename": "gcc/cp/error.c", "status": "modified", "additions": 11, "deletions": 34, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -113,6 +113,7 @@ static bool cp_printer (output_buffer *, text_info *);\n static void print_non_consecutive_character (output_buffer *, int);\n static void print_integer (output_buffer *, HOST_WIDE_INT);\n static tree locate_error (const char *, va_list);\n+static location_t location_of (tree);\n \n void\n init_error (void)\n@@ -2121,40 +2122,17 @@ lang_decl_name (tree decl, int v)\n   return output_finalize_message (scratch_buffer);\n }\n \n-const char *\n-cp_file_of (tree t)\n+static location_t\n+location_of (tree t)\n {\n   if (TREE_CODE (t) == PARM_DECL && DECL_CONTEXT (t))\n-    return DECL_SOURCE_FILE (DECL_CONTEXT (t));\n+    t = DECL_CONTEXT (t);\n   else if (TYPE_P (t))\n-    return DECL_SOURCE_FILE (TYPE_MAIN_DECL (t));\n-  else if (TREE_CODE (t) == OVERLOAD)\n-    return DECL_SOURCE_FILE (OVL_FUNCTION (t));\n-  else\n-    return DECL_SOURCE_FILE (t);\n-}\n-\n-int\n-cp_line_of (tree t)\n-{\n-  int line = 0;\n-  if (TREE_CODE (t) == PARM_DECL && DECL_CONTEXT (t))\n-    line = DECL_SOURCE_LINE (DECL_CONTEXT (t));\n-  if (TREE_CODE (t) == TYPE_DECL && DECL_ARTIFICIAL (t)\n-      && TYPE_MAIN_DECL (TREE_TYPE (t)))\n-    t = TREE_TYPE (t);\n-\n-  if (TYPE_P (t))\n-    line = DECL_SOURCE_LINE (TYPE_MAIN_DECL (t));\n+    t = TYPE_MAIN_DECL (t);\n   else if (TREE_CODE (t) == OVERLOAD)\n-    line = DECL_SOURCE_LINE (OVL_FUNCTION (t));\n-  else\n-    line = DECL_SOURCE_LINE (t);\n-\n-  if (line == 0)\n-    return input_line;\n-\n-  return line;\n+    t = OVL_FUNCTION (t);\n+  \n+  return DECL_SOURCE_LOCATION (t);\n }\n \n /* Now the interfaces from error et al to dump_type et al. Each takes an\n@@ -2612,7 +2590,7 @@ cp_error_at (const char *msgid, ...)\n \n   va_start (ap, msgid);\n   diagnostic_set_info (&diagnostic, msgid, &ap,\n-                       cp_file_of (here), cp_line_of (here), DK_ERROR);\n+                       location_of (here), DK_ERROR);\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n }\n@@ -2630,7 +2608,7 @@ cp_warning_at (const char *msgid, ...)\n \n   va_start (ap, msgid);\n   diagnostic_set_info (&diagnostic, msgid, &ap,\n-                       cp_file_of (here), cp_line_of (here), DK_WARNING);\n+                       location_of (here), DK_WARNING);\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n }\n@@ -2648,8 +2626,7 @@ cp_pedwarn_at (const char *msgid, ...)\n \n   va_start (ap, msgid);\n   diagnostic_set_info (&diagnostic, msgid, &ap,\n-                       cp_file_of (here), cp_line_of (here),\n-                       pedantic_error_kind());\n+                       location_of (here), pedantic_error_kind());\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n }"}, {"sha": "1312ca9924e5300088fab0245e63428afdc2263b", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 14, "deletions": 26, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -761,19 +761,16 @@ text_specifies_location (text_info *text, location_t *locus)\n \n void\n diagnostic_set_info (diagnostic_info *diagnostic, const char *msgid,\n-\t\t     va_list *args, const char *file,  int line,\n+\t\t     va_list *args, location_t location,\n \t\t     diagnostic_t kind)\n {\n   diagnostic->message.err_no = errno;\n   diagnostic->message.args_ptr = args;\n   diagnostic->message.format_spec = _(msgid);\n   /* If the diagnostic message doesn't specify a location,\n-     use FILE and LINE.  */\n+     use LOCATION.  */\n   if (!text_specifies_location (&diagnostic->message, &diagnostic->location))\n-    {\n-      diagnostic->location.file = file;\n-      diagnostic->location.line = line;\n-    }\n+    diagnostic->location = location;\n   diagnostic->kind = kind;\n }\n \n@@ -1134,8 +1131,7 @@ inform (const char *msgid, ...)\n   va_list ap;\n \n   va_start (ap, msgid);\n-  diagnostic_set_info (&diagnostic, msgid, &ap, input_filename, input_line,\n-                       DK_NOTE);\n+  diagnostic_set_info (&diagnostic, msgid, &ap, input_location, DK_NOTE);\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n }\n@@ -1149,8 +1145,7 @@ warning (const char *msgid, ...)\n   va_list ap;\n \n   va_start (ap, msgid);\n-  diagnostic_set_info (&diagnostic, msgid, &ap, input_filename, input_line,\n-                       DK_WARNING);\n+  diagnostic_set_info (&diagnostic, msgid, &ap, input_location, DK_WARNING);\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n }\n@@ -1170,8 +1165,8 @@ pedwarn (const char *msgid, ...)\n   va_list ap;\n \n   va_start (ap, msgid);\n-  diagnostic_set_info (&diagnostic, msgid, &ap, input_filename, input_line,\n-                       pedantic_error_kind ());\n+  diagnostic_set_info (&diagnostic, msgid, &ap, input_location,\n+\t\t       pedantic_error_kind ());\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n }\n@@ -1185,8 +1180,7 @@ error (const char *msgid, ...)\n   va_list ap;\n \n   va_start (ap, msgid);\n-  diagnostic_set_info (&diagnostic, msgid, &ap, input_filename, input_line,\n-                       DK_ERROR);\n+  diagnostic_set_info (&diagnostic, msgid, &ap, input_location, DK_ERROR);\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n }\n@@ -1201,8 +1195,7 @@ sorry (const char *msgid, ...)\n   va_list ap;\n \n   va_start (ap, msgid);\n-  diagnostic_set_info (&diagnostic, msgid, &ap, input_filename, input_line,\n-\t\t       DK_SORRY);\n+  diagnostic_set_info (&diagnostic, msgid, &ap, input_location, DK_SORRY);\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n }\n@@ -1217,8 +1210,7 @@ fatal_error (const char *msgid, ...)\n   va_list ap;\n \n   va_start (ap, msgid);\n-  diagnostic_set_info (&diagnostic, msgid, &ap, input_filename, input_line,\n-                       DK_FATAL);\n+  diagnostic_set_info (&diagnostic, msgid, &ap, input_location, DK_FATAL);\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n \n@@ -1237,8 +1229,7 @@ internal_error (const char *msgid, ...)\n   va_list ap;\n \n   va_start (ap, msgid);\n-  diagnostic_set_info (&diagnostic, msgid, &ap, input_filename, input_line,\n-                       DK_ICE);\n+  diagnostic_set_info (&diagnostic, msgid, &ap, input_location, DK_ICE);\n   report_diagnostic (&diagnostic);\n   va_end (ap);\n \n@@ -1263,8 +1254,7 @@ warning_with_decl (tree decl, const char *msgid, ...)\n     return;\n \n   diagnostic_set_info (&diagnostic, msgid, &ap,\n-                       DECL_SOURCE_FILE (decl), DECL_SOURCE_LINE (decl),\n-                       DK_WARNING);\n+                       DECL_SOURCE_LOCATION (decl), DK_WARNING);\n   diagnostic_for_decl (global_dc, &diagnostic, decl);\n   va_end (ap);\n }\n@@ -1283,8 +1273,7 @@ pedwarn_with_decl (tree decl, const char *msgid, ...)\n     return;\n \n   diagnostic_set_info (&diagnostic, msgid, &ap,\n-                       DECL_SOURCE_FILE (decl), DECL_SOURCE_LINE (decl),\n-                       pedantic_error_kind ());\n+                       DECL_SOURCE_LOCATION (decl), pedantic_error_kind ());\n   diagnostic_for_decl (global_dc, &diagnostic, decl);\n \n   va_end (ap);\n@@ -1298,8 +1287,7 @@ error_with_decl (tree decl, const char *msgid, ...)\n \n   va_start (ap, msgid);\n   diagnostic_set_info (&diagnostic, msgid, &ap,\n-                       DECL_SOURCE_FILE (decl), DECL_SOURCE_LINE (decl),\n-                       DK_ERROR);\n+                       DECL_SOURCE_LOCATION (decl), DK_ERROR);\n   diagnostic_for_decl (global_dc, &diagnostic, decl);\n   va_end (ap);\n }"}, {"sha": "18a11b673541a783f29985e2f685d36fb6f04834", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -298,7 +298,7 @@ extern void diagnostic_flush_buffer (diagnostic_context *);\n extern void diagnostic_report_diagnostic (diagnostic_context *,\n \t\t\t\t\t  diagnostic_info *);\n extern void diagnostic_set_info (diagnostic_info *, const char *, va_list *,\n-\t\t\t\t const char *, int, diagnostic_t);\n+\t\t\t\t location_t, diagnostic_t);\n extern char *diagnostic_build_prefix (diagnostic_info *);\n \n /* Pure text formatting support functions.  */"}, {"sha": "028cedd2ca1400d8c3e27a1e2ec7d73620089e1f", "filename": "gcc/rtl-error.c", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Frtl-error.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Frtl-error.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-error.c?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -33,20 +33,19 @@ Boston, MA 02111-1307, USA.  */\n #include \"intl.h\"\n #include \"diagnostic.h\"\n \n-static void file_and_line_for_asm PARAMS ((rtx, const char **, int *));\n+static location_t location_for_asm PARAMS ((rtx));\n static void diagnostic_for_asm PARAMS ((rtx, const char *, va_list *,\n                                         diagnostic_t));\n \n-/* Figure file and line of the given INSN.  */\n-static void\n-file_and_line_for_asm (insn, pfile, pline)\n+/* Figure the location of the given INSN.  */\n+static location_t\n+location_for_asm (insn)\n      rtx insn;\n-     const char **pfile;\n-     int *pline;\n {\n   rtx body = PATTERN (insn);\n   rtx asmop;\n-\n+  location_t loc;\n+  \n   /* Find the (or one of the) ASM_OPERANDS in the insn.  */\n   if (GET_CODE (body) == SET && GET_CODE (SET_SRC (body)) == ASM_OPERANDS)\n     asmop = SET_SRC (body);\n@@ -63,14 +62,12 @@ file_and_line_for_asm (insn, pfile, pline)\n \n   if (asmop)\n     {\n-      *pfile = ASM_OPERANDS_SOURCE_FILE (asmop);\n-      *pline = ASM_OPERANDS_SOURCE_LINE (asmop);\n+      loc.file = ASM_OPERANDS_SOURCE_FILE (asmop);\n+      loc.line = ASM_OPERANDS_SOURCE_LINE (asmop);\n     }\n   else\n-    {\n-      *pfile = input_filename;\n-      *pline = input_line;\n-    }\n+    loc = input_location;\n+  return loc;\n }\n \n /* Report a diagnostic MESSAGE (an errror or a WARNING) at the line number\n@@ -84,10 +81,9 @@ diagnostic_for_asm (insn, msg, args_ptr, kind)\n      diagnostic_t kind;\n {\n   diagnostic_info diagnostic;\n-\n-  diagnostic_set_info (&diagnostic, msg, args_ptr, NULL, 0, kind);\n-  file_and_line_for_asm (insn, &diagnostic.location.file,\n-                         &diagnostic.location.line);\n+  \n+  diagnostic_set_info (&diagnostic, msg, args_ptr,\n+\t\t       location_for_asm (insn), kind);\n   report_diagnostic (&diagnostic);\n }\n "}, {"sha": "3af77db3dcb9f8757efa92eb10c79dcf520ac59d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -1,3 +1,9 @@\n+2003-06-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.robertl/eb133.C: Set expected line number.\n+\t* g++.old-deja/g++.robertl/eb133a.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb133b.C: Likewise.\n+\n 2003-06-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/execute/builtins/string-8.c: New test."}, {"sha": "b6002248d558f01d3ee94a80d34fd3f2218c6f8f", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb133.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133.C?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -3,16 +3,17 @@\n // From: Klaus-Georg Adams <Klaus-Georg.Adams@chemie.uni-karlsruhe.de> \n // Reported against EGCS snaps 98/06/28.\n \n+// { dg-error \"forward declaration\" \"\" { target *-*-* } 0 }\n+\n using namespace std;\n \n int main()\n {\n \ttry {\n \t}\n-\tcatch (bad_alloc) { // { dg-error \"\" } parse error\n+\tcatch (bad_alloc) { // { dg-error \"invalid use\" }\n \t\treturn 1;\n \t}\n \treturn 0;\n }\n \n-\t"}, {"sha": "f9265851d11c8b50edc23d19832f5e25703fe039", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb133a.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133a.C?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -3,6 +3,8 @@\n // From: Klaus-Georg Adams <Klaus-Georg.Adams@chemie.uni-karlsruhe.de> \n // Reported against EGCS snaps 98/06/28.\n \n+// { dg-error \"forward declaration\" \"\" { target *-*-* } 0 }\n+\n int main()\n {\n \ttry {"}, {"sha": "82605146a191cb50e1f61b8fb78ea85911a9ecd3", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb133b.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a472a42247d099c512b6d992890f88643612c8c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb133b.C?ref=9a472a42247d099c512b6d992890f88643612c8c", "patch": "@@ -3,13 +3,15 @@\n // From: Klaus-Georg Adams <Klaus-Georg.Adams@chemie.uni-karlsruhe.de> \n // Reported against EGCS snaps 98/06/28.\n \n+// { dg-error \"forward declaration\" \"\" { target *-*-* } 0 }\n+\n using namespace std;\n \n int main()\n {\n \ttry {\n \t}\n-\tcatch (bad_alloc) { // { dg-error \"\" } parse error\n+\tcatch (bad_alloc) { // { dg-error \"invalid use\" }\n \t\treturn 1;\n \t}\n \treturn 0;"}]}