{"sha": "010c262fc5fc1b3320431977df7def93277ede3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEwYzI2MmZjNWZjMWIzMzIwNDMxOTc3ZGY3ZGVmOTMyNzdlZGUzYQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-01-07T20:32:15Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1993-01-07T20:32:15Z"}, "message": "(output_floatsisf2, output_floatsidf2): Remove.\n\nFrom-SVN: r3144", "tree": {"sha": "019df6ef3c8457668ed72bc92a3c55024b7ff9a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/019df6ef3c8457668ed72bc92a3c55024b7ff9a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/010c262fc5fc1b3320431977df7def93277ede3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/010c262fc5fc1b3320431977df7def93277ede3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/010c262fc5fc1b3320431977df7def93277ede3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/010c262fc5fc1b3320431977df7def93277ede3a/comments", "author": null, "committer": null, "parents": [{"sha": "e061ef25849dacf3c7d71729a3785805adcba227", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e061ef25849dacf3c7d71729a3785805adcba227", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e061ef25849dacf3c7d71729a3785805adcba227"}], "stats": {"total": 28, "additions": 2, "deletions": 26}, "files": [{"sha": "15a544bc2c07d335fbbeb0f2875438cd0f061848", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 2, "deletions": 26, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/010c262fc5fc1b3320431977df7def93277ede3a/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/010c262fc5fc1b3320431977df7def93277ede3a/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=010c262fc5fc1b3320431977df7def93277ede3a", "patch": "@@ -1957,7 +1957,7 @@ print_operand (file, x, code)\n \tcase EQ:\n \t  fprintf (file, \"=\");  break;\n \tcase NE:\n-\t  fprintf (file, \"<>\"); break;\n+\t  fprintf (file, \"<>\");  break;\n \tcase GT:\n \t  fprintf (file, \">\");  break;\n \tcase GE:\n@@ -1985,7 +1985,7 @@ print_operand (file, x, code)\n       switch (GET_CODE (x))\n \t{\n \tcase EQ:\n-\t  fprintf (file, \"<>\"); break;\n+\t  fprintf (file, \"<>\");  break;\n \tcase NE:\n \t  fprintf (file, \"=\");  break;\n \tcase GT:\n@@ -2152,30 +2152,6 @@ output_global_address (file, x)\n     output_addr_const (file, x);\n }\n \n-/* MEM rtls here are never SYMBOL_REFs (I think), so fldws is safe. */\n-\n-char *\n-output_floatsisf2 (operands)\n-     rtx *operands;\n-{\n-  if (GET_CODE (operands[1]) == MEM)\n-    return \"fldws %1,%0\\n\\tfcnvxf,sgl,sgl %0,%0\";\n-  else if (FP_REG_P (operands[1]))\n-    return \"fcnvxf,sgl,sgl %1,%0\";\n-  abort();\n-}\n-\n-char *\n-output_floatsidf2 (operands)\n-     rtx *operands;\n-{\n-  if (GET_CODE (operands[1]) == MEM)\n-    return \"fldws %1,%0\\n\\tfcnvxf,sgl,dbl %0,%0\";\n-  else if (FP_REG_P (operands[1]))\n-    return \"fcnvxf,sgl,dbl %1,%0\";\n-  abort();\n-}\n-\n enum rtx_code\n reverse_relop (code)\n      enum rtx_code code;"}]}