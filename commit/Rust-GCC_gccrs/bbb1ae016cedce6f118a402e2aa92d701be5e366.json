{"sha": "bbb1ae016cedce6f118a402e2aa92d701be5e366", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJiMWFlMDE2Y2VkY2U2ZjExOGE0MDJlMmFhOTJkNzAxYmU1ZTM2Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-10T12:20:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-10T12:20:09Z"}, "message": "(enum attrs): New attribute, A_NOCOMMON.\n\n(init_attribute): Initialize it.\n(decl_attributes): Implement it.\n\nFrom-SVN: r9347", "tree": {"sha": "822bec375fea5df287456e0dcfdb6e8ebf873c57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/822bec375fea5df287456e0dcfdb6e8ebf873c57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbb1ae016cedce6f118a402e2aa92d701be5e366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb1ae016cedce6f118a402e2aa92d701be5e366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbb1ae016cedce6f118a402e2aa92d701be5e366", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb1ae016cedce6f118a402e2aa92d701be5e366/comments", "author": null, "committer": null, "parents": [{"sha": "f507a0704432f434b19063ced39f4e5cba986a5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f507a0704432f434b19063ced39f4e5cba986a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f507a0704432f434b19063ced39f4e5cba986a5d"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "1c1a5da57e314b7ab79ef77bbc177807b02aa642", "filename": "gcc/c-common.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb1ae016cedce6f118a402e2aa92d701be5e366/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb1ae016cedce6f118a402e2aa92d701be5e366/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=bbb1ae016cedce6f118a402e2aa92d701be5e366", "patch": "@@ -28,8 +28,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n extern struct obstack permanent_obstack;\n \n-enum attrs {A_PACKED, A_NORETURN, A_CONST, A_T_UNION, A_CONSTRUCTOR,\n-\t    A_DESTRUCTOR, A_MODE, A_SECTION, A_ALIGNED, A_FORMAT};\n+enum attrs {A_PACKED, A_NOCOMMON, A_NORETURN, A_CONST, A_T_UNION,\n+\t    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE, A_SECTION, A_ALIGNED,\n+\t    A_FORMAT};\n \n static void declare_hidden_char_array\tPROTO((char *, char *));\n static void add_attribute\t\tPROTO((enum attrs, char *,\n@@ -246,6 +247,7 @@ static void\n init_attributes ()\n {\n   add_attribute (A_PACKED, \"packed\", 0, 0, 1);\n+  add_attribute (A_NOCOMMON, \"nocommon\", 0, 0, 1);\n   add_attribute (A_NORETURN, \"noreturn\", 0, 0, 1);\n   add_attribute (A_NORETURN, \"volatile\", 0, 0, 1);\n   add_attribute (A_CONST, \"const\", 0, 0, 1);\n@@ -329,6 +331,13 @@ decl_attributes (node, attributes, prefix_attributes)\n \t    warning (\"`%s' attribute ignored\", IDENTIFIER_POINTER (name));\n \t  break;\n \n+\tcase A_NOCOMMON:\n+\t  if (TREE_CODE (decl) == VAR_DECL)\n+\t    DECL_COMMON (decl) = 0;\n+\t  else\n+\t    warning (\"`%s' attribute ignored\", IDENTIFIER_POINTER (name));\n+\t  break;\n+\n \tcase A_NORETURN:\n \t  if (TREE_CODE (decl) == FUNCTION_DECL)\n \t    TREE_THIS_VOLATILE (decl) = 1;"}]}