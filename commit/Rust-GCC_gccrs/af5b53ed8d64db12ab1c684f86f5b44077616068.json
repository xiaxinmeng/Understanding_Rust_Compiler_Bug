{"sha": "af5b53ed8d64db12ab1c684f86f5b44077616068", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY1YjUzZWQ4ZDY0ZGIxMmFiMWM2ODRmODZmNWI0NDA3NzYxNjA2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-06T10:53:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-06T10:53:40Z"}, "message": "(expand_expr, case ADDR_EXPR): Call mark_temp_addr_taken.\n\nFrom-SVN: r8225", "tree": {"sha": "8bed59aa96a2a02647a513afd6204e22d59a4bb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bed59aa96a2a02647a513afd6204e22d59a4bb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af5b53ed8d64db12ab1c684f86f5b44077616068", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af5b53ed8d64db12ab1c684f86f5b44077616068", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af5b53ed8d64db12ab1c684f86f5b44077616068", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af5b53ed8d64db12ab1c684f86f5b44077616068/comments", "author": null, "committer": null, "parents": [{"sha": "a25d4ba2f68f0bb062146dbccea67c785a173f59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25d4ba2f68f0bb062146dbccea67c785a173f59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25d4ba2f68f0bb062146dbccea67c785a173f59"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "72f68b4ad64c67efeace5ccb91a3a9e98f890dbe", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af5b53ed8d64db12ab1c684f86f5b44077616068/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af5b53ed8d64db12ab1c684f86f5b44077616068/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=af5b53ed8d64db12ab1c684f86f5b44077616068", "patch": "@@ -5992,7 +5992,10 @@ expand_expr (exp, target, tmode, modifier)\n \t    op0 = force_const_mem (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0))),\n \t\t\t\t   op0);\n \t  else if (GET_CODE (op0) == MEM)\n-\t    temp = XEXP (op0, 0);\n+\t    {\n+\t      mark_temp_addr_taken (op0);\n+\t      temp = XEXP (op0, 0);\n+\t    }\n \n \t  else if (GET_CODE (op0) == REG || GET_CODE (op0) == SUBREG\n \t\t   || GET_CODE (op0) == CONCAT)"}]}