{"sha": "d2b0caaab886179f1f8b57ea4d889426e644466e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJiMGNhYWFiODg2MTc5ZjFmOGI1N2VhNGQ4ODk0MjZlNjQ0NDY2ZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2011-02-08T18:33:31Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2011-02-08T18:33:31Z"}, "message": "appendix_porting.xml: Add doc section.\n\n2011-02-08  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* doc/xml/manual/appendix_porting.xml: Add doc section.\n\t* doc/xml/manual/appendix_contributing.xml: Split out doc bits to...\n\t* doc/xml/manual/documentation_hacking.xml: ...here.\n\n\t* doc/xml/manual/debug_mode.xml: Adjust.\n\t* doc/xml/manual/prerequisites.xml: Adjust.\n\t* doc/Makefile.am (xml_sources): Add dot files,\n\tdocumentation_hacking.xml.\n\t* doc/Makefile.in: Regenerate.\n\n\t* doc/xml/manual/build_hacking.xml: Use absolute paths for images.\n\t* doc/xml/images/confdeps.pdf: Add.\n\nFrom-SVN: r169932", "tree": {"sha": "996623394fa1c65bcb0eb5b38106e733bfbd2253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/996623394fa1c65bcb0eb5b38106e733bfbd2253"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2b0caaab886179f1f8b57ea4d889426e644466e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b0caaab886179f1f8b57ea4d889426e644466e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2b0caaab886179f1f8b57ea4d889426e644466e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b0caaab886179f1f8b57ea4d889426e644466e/comments", "author": null, "committer": null, "parents": [{"sha": "9b5484722f59da81e0e87148b46a2ad7d9f54966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b5484722f59da81e0e87148b46a2ad7d9f54966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b5484722f59da81e0e87148b46a2ad7d9f54966"}], "stats": {"total": 1761, "additions": 1043, "deletions": 718}, "files": [{"sha": "f796047dc081767c5d4acf41eb92f76ca048df39", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d2b0caaab886179f1f8b57ea4d889426e644466e", "patch": "@@ -1,3 +1,18 @@\n+2011-02-08  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* doc/xml/manual/appendix_porting.xml: Add doc section.\n+\t* doc/xml/manual/appendix_contributing.xml: Split out doc bits to...\n+\t* doc/xml/manual/documentation_hacking.xml: ...here.\n+\n+\t* doc/xml/manual/debug_mode.xml: Adjust.\n+\t* doc/xml/manual/prerequisites.xml: Adjust.\n+\t* doc/Makefile.am (xml_sources): Add dot files,\n+\tdocumentation_hacking.xml.\n+\t* doc/Makefile.in: Regenerate.\n+\n+\t* doc/xml/manual/build_hacking.xml: Use absolute paths for images.\n+\t* doc/xml/images/confdeps.pdf: Add.\n+\n 2011-02-08  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* doc/xml/gnu/fdl-1.2.xml: Remove."}, {"sha": "3cdb1fd8bc6652e9e9e7dc05405f6bac9313dbba", "filename": "libstdc++-v3/doc/Makefile.am", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.am?ref=d2b0caaab886179f1f8b57ea4d889426e644466e", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the doc subdirectory of the GNU C++ Standard library.\n ##\n-## Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n+## Copyright (C) 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n ## Process this file with automake to produce Makefile.in.\n@@ -318,6 +318,7 @@ xml_sources_manual = \\\n \t${xml_dir}/manual/debug_mode.xml \\\n \t${xml_dir}/manual/debug.xml \\\n \t${xml_dir}/manual/diagnostics.xml \\\n+\t${xml_dir}/manual/documentation_hacking.xml \\\n \t${xml_dir}/manual/evolution.xml \\\n \t${xml_dir}/manual/extensions.xml \\\n \t${xml_dir}/manual/internals.xml \\\n@@ -360,7 +361,10 @@ xml_sources = \\\n xml_noinst = \\\n \t${xml_dir}/book.txml \\\n \t${xml_dir}/chapter.txml \\\n-\t${xml_dir}/class.txml\n+\t${xml_dir}/class.txml \\\n+\t${xml_dir}/images/confdeps.dot \\\n+\t${xml_dir}/images/confdeps.png \\\n+\t${xml_dir}/images/confdeps.pdf\n \n XSLTPROC       = xsltproc\n XSLTPROC_FLAGS = --nonet --xinclude"}, {"sha": "60b1eb06d3ff8845666d62ba1004debfa03b6622", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=d2b0caaab886179f1f8b57ea4d889426e644466e", "patch": "@@ -369,6 +369,7 @@ xml_sources_manual = \\\n \t${xml_dir}/manual/debug_mode.xml \\\n \t${xml_dir}/manual/debug.xml \\\n \t${xml_dir}/manual/diagnostics.xml \\\n+\t${xml_dir}/manual/documentation_hacking.xml \\\n \t${xml_dir}/manual/evolution.xml \\\n \t${xml_dir}/manual/extensions.xml \\\n \t${xml_dir}/manual/internals.xml \\\n@@ -411,7 +412,10 @@ xml_sources = \\\n xml_noinst = \\\n \t${xml_dir}/book.txml \\\n \t${xml_dir}/chapter.txml \\\n-\t${xml_dir}/class.txml\n+\t${xml_dir}/class.txml \\\n+\t${xml_dir}/images/confdeps.dot \\\n+\t${xml_dir}/images/confdeps.png \\\n+\t${xml_dir}/images/confdeps.pdf\n \n XSLTPROC_FLAGS = --nonet --xinclude\n #XSL_STYLE_DIR = /usr/share/sgml/docbook/xsl-stylesheets"}, {"sha": "dab5ef341ebf2a6abbf38849d9f47217bce06151", "filename": "libstdc++-v3/doc/xml/images/confdeps.pdf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fconfdeps.pdf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fconfdeps.pdf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fconfdeps.pdf?ref=d2b0caaab886179f1f8b57ea4d889426e644466e"}, {"sha": "49cbcab9ba390121a044501f007124ac5792bf92", "filename": "libstdc++-v3/doc/xml/manual/appendix_contributing.xml", "status": "modified", "additions": 0, "deletions": 692, "changes": 692, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_contributing.xml?ref=d2b0caaab886179f1f8b57ea4d889426e644466e", "patch": "@@ -940,698 +940,6 @@ indicate a place that may require attention for multi-thread safety.\n   </section>\n </section>\n \n-<section xml:id=\"contrib.doc_style\" xreflabel=\"Documentation Style\"><info><title>Documentation Style</title></info>\n-  <?dbhtml filename=\"documentation_style.html\"?>\n-  \n-  <section xml:id=\"doc_style.doxygen\"><info><title>Doxygen</title></info>\n-    \n-    <section xml:id=\"doxygen.prereq\"><info><title>Prerequisites</title></info>\n-      \n-      <para>\n-\tPrerequisite tools are Bash 2.0 or later,\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.doxygen.org/\">Doxygen</link>, and\n-\tthe <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.gnu.org/software/coreutils/\">GNU\n-\tcoreutils</link>. (GNU versions of find, xargs, and possibly\n-\tsed and grep are used, just because the GNU versions make\n-\tthings very easy.) \n-      </para>\n-\n-      <para>\n-\tTo generate the pretty pictures and hierarchy\n-\tgraphs, the\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.graphviz.org\">Graphviz</link> package\n-\twill need to be installed. For PDF\n-\toutput, <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.tug.org/applications/pdftex/\">\n-\tpdflatex</link> is required.\n-      </para>\n-    </section>\n-\n-    <section xml:id=\"doxygen.rules\"><info><title>Generating the Doxygen Files</title></info>\n-      \n-      <para>\n-\tThe following Makefile rules run Doxygen to generate HTML\n-\tdocs, XML docs, XML docs as a single file, PDF docs, and the man pages.\n-      </para>\n-\n-      <para>\n-      <screen><userinput>make doc-html-doxygen</userinput></screen>\n-      </para>\n-\n-      <para>\n-      <screen><userinput>make doc-xml-doxygen</userinput></screen>\n-      </para>\n-\n-      <para>\n-      <screen><userinput>make doc-xml-single-doxygen</userinput></screen>\n-      </para>\n-\n-      <para>\n-      <screen><userinput>make doc-pdf-doxygen</userinput></screen>\n-      </para>\n-\n-      <para>\n-      <screen><userinput>make doc-man-doxygen</userinput></screen>\n-      </para>\n-\n-      <para>\n-\tGenerated files are output into separate sub directores of\n-\t<filename class=\"directory\">doc/doxygen/</filename> in the\n-\tbuild directory, based on the output format. For instance, the\n-\tHTML docs will be in <filename class=\"directory\">doc/doxygen/html</filename>.\n-      </para>\n-\n-      <para>\n-\tCareful observers will see that the Makefile rules simply call\n-\ta script from the source tree, <filename>run_doxygen</filename>, which\n-\tdoes the actual work of running Doxygen and then (most\n-\timportantly) massaging the output files. If for some reason\n-\tyou prefer to not go through the Makefile, you can call this\n-\tscript directly. (Start by passing <literal>--help</literal>.)\n-      </para>\n-\n-      <para>\n-\tIf you wish to tweak the Doxygen settings, do so by editing\n-\t<filename>doc/doxygen/user.cfg.in</filename>. Notes to fellow\n-\tlibrary hackers are written in triple-# comments.\n-      </para>\n-\n-    </section>\n-\n-    <section xml:id=\"doxygen.markup\"><info><title>Markup</title></info>\n-      \n-\n-      <para>\n-\tIn general, libstdc++ files should be formatted according to\n-\tthe rules found in the\n-\t<link linkend=\"contrib.coding_style\">Coding Standard</link>. Before\n-\tany doxygen-specific formatting tweaks are made, please try to\n-\tmake sure that the initial formatting is sound.\n-      </para>\n-\n-      <para>\n-\tAdding Doxygen markup to a file (informally called\n-\t<quote>doxygenating</quote>) is very simple. The Doxygen manual can be\n-\tfound\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.stack.nl/~dimitri/doxygen/download.html#latestman\">here</link>.\n-\tWe try to use a very-recent version of Doxygen.\n-      </para>\n-\n-      <para>\n-\tFor classes, use\n-\t<classname>deque</classname>/<classname>vector</classname>/<classname>list</classname>\n-\tand <classname>std::pair</classname> as examples.  For\n-\tfunctions, see their member functions, and the free functions\n-\tin <filename>stl_algobase.h</filename>. Member functions of\n-\tother container-like types should read similarly to these\n-\tmember functions.\n-      </para>\n-\n-      <para>\n-\tSome commentary to accompany\n-\tthe first list in the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.stack.nl/~dimitri/doxygen/docblocks.html\">Special\n-\tDocumentation Blocks</link> section of\n-\tthe Doxygen manual:\n-      </para>\n-\n-      <orderedlist inheritnum=\"ignore\" continuation=\"restarts\">\n-\t<listitem>\n-\t  <para>For longer comments, use the Javadoc style...</para>\n-\t</listitem>\n-\n-\t<listitem>\n-\t  <para>\n-\t    ...not the Qt style. The intermediate *'s are preferred.\n-\t  </para>\n-\t</listitem>\n-\n- \t<listitem>\n-\t  <para>\n-\t    Use the triple-slash style only for one-line comments (the\n-\t    <quote>brief</quote> mode).\n-\t  </para>\n-\t</listitem>\n-\n-\t<listitem>\n-\t  <para>\n-\t    This is disgusting. Don't do this.\n-\t  </para>\n-\t</listitem>\n-      </orderedlist>\n-\n-      <para>\n-\tSome specific guidelines:\n-      </para>\n-\n-      <para>\n-\tUse the @-style of commands, not the !-style. Please be\n-\tcareful about whitespace in your markup comments. Most of the\n-\ttime it doesn't matter; doxygen absorbs most whitespace, and\n-\tboth HTML and *roff are agnostic about whitespace. However,\n-\tin &lt;pre&gt; blocks and @code/@endcode sections, spacing can\n-\thave <quote>interesting</quote> effects.\n-      </para>\n-\n-      <para>\n-\tUse either kind of grouping, as\n-\tappropriate. <filename>doxygroups.cc</filename> exists for this\n-\tpurpose. See <filename>stl_iterator.h</filename> for a good example\n-\tof the <quote>other</quote> kind of grouping.\n-      </para>\n-\n-      <para>\n-\tPlease use markup tags like @p and @a when referring to things\n-\tsuch as the names of function parameters. Use @e for emphasis\n-\twhen necessary. Use @c to refer to other standard names.\n-\t(Examples of all these abound in the present code.)\n-      </para>\n-\n-      <para>\n-\tComplicated math functions should use the multi-line\n-\tformat. An example from <filename>random.h</filename>:\n-      </para>\n-\n-      <para>\n-<literallayout class=\"normal\">\n-  /**\n-   * @brief A model of a linear congruential random number generator.\n-   *\n-   * @f[\n-   *     x_{i+1}\\leftarrow(ax_{i} + c) \\bmod m\n-   * @f]\n-   */\n-</literallayout>\n-      </para>\n-\n-      <para>\n-\tBe careful about using certain, special characters when\n-\twriting Doxygen comments. Single and double quotes, and\n-\tseparators in filenames are two common trouble spots. When in\n-\tdoubt, consult the following table.\n-      </para>\n-\n-<table frame=\"all\">\n-<title>HTML to Doxygen Markup Comparison</title>\n-\n-<tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-<colspec colname=\"c1\"/>\n-<colspec colname=\"c2\"/>\n-\n-  <thead>\n-    <row>\n-      <entry>HTML</entry>\n-      <entry>Doxygen</entry>\n-    </row>\n-  </thead>\n-\n-  <tbody>\n-    <row>\n-      <entry>\\</entry>\n-      <entry>\\\\</entry>\n-    </row>\n-\n-    <row>\n-      <entry>\"</entry>\n-      <entry>\\\"</entry>\n-    </row>\n-\n-    <row>\n-      <entry>'</entry>\n-      <entry>\\'</entry>\n-    </row>\n-\n-    <row>\n-      <entry>&lt;i&gt;</entry>\n-      <entry>@a word</entry>\n-    </row>\n-\n-    <row>\n-      <entry>&lt;b&gt;</entry>\n-      <entry>@b word</entry>\n-    </row>\n-\n-    <row>\n-      <entry>&lt;code&gt;</entry>\n-      <entry>@c word</entry>\n-    </row>\n-\n-    <row>\n-      <entry>&lt;em&gt;</entry>\n-      <entry>@a word</entry>\n-    </row>\n-\n-    <row>\n-      <entry>&lt;em&gt;</entry>\n-      <entry>&lt;em&gt;two words or more&lt;/em&gt;</entry>\n-    </row>\n-  </tbody>\n-\n-</tgroup>\n-</table>\n-\n-\n-    </section>\n-\n-  </section>\n-\n-  <section xml:id=\"doc_style.docbook\"><info><title>Docbook</title></info>\n-    \n-\n-    <section xml:id=\"docbook.prereq\"><info><title>Prerequisites</title></info>\n-      \n-      <para>\n-\tEditing the DocBook sources requires an XML editor. Many\n-\texist: some notable options\n-\tinclude <command>emacs</command>, <application>Kate</application>,\n-\tor <application>Conglomerate</application>.\n-      </para>\n-\n-      <para>\n-\tSome editors support special <quote>XML Validation</quote>\n-\tmodes that can validate the file as it is\n-\tproduced. Recommended is the <command>nXML Mode</command>\n-\tfor <command>emacs</command>.\n-      </para>\n-\n-      <para>\n-\tBesides an editor, additional DocBook files and XML tools are\n-\talso required.\n-      </para>\n-\n-      <para>\n-\tAccess to the DocBook 5.0 stylesheets and schema is required. The\n-\tstylesheets are usually packaged by vendor, in something\n-\tlike <filename>docbook5-style-xsl</filename>. To exactly match\n-\tgenerated output, please use a version of the stylesheets\n-\tequivalent\n-\tto <filename>docbook5-style-xsl-1.75.2-3</filename>. The\n-\tinstallation directory for this package corresponds to\n-\tthe <literal>XSL_STYLE_DIR</literal>\n-\tin <filename>doc/Makefile.am</filename> and defaults\n-\tto <filename class=\"directory\">/usr/share/sgml/docbook/xsl-ns-stylesheets</filename>.\n-      </para>\n-\n-      <para>\n-\tFor processing XML, an XML processor and some style\n-\tsheets are necessary. Defaults are <command>xsltproc</command>\n-\tprovided by <filename>libxslt</filename>.\n-      </para>\n-\n-      <para>\n-\tFor validating the XML document, you'll need\n-\tsomething like <command>xmllint</command> and access to the\n-\trelevant DocBook schema. These are provided\n-\tby a vendor package like <filename>libxml2</filename> and <filename>docbook5-schemas-5.0-4</filename>\n-      </para>\n-\n-      <para>\n-\tFor PDF output, something that transforms valid Docbook XML to PDF is\n-\trequired. Possible solutions include <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://dblatex.sourceforge.net\">dblatex</link>,\n-\t<command>xmlto</command>, or <command>prince</command>. Of\n-\tthese, <command>dblatex</command> is the default. Other\n-\toptions are listed on the DocBook web <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://wiki.docbook.org/topic/DocBookPublishingTools\">pages</link>. Please\n-\tconsult the <email>libstdc++@gcc.gnu.org</email> list when\n-\tpreparing printed manuals for current best practice and\n-\tsuggestions.\n-      </para>\n-\n-      <para>\n-\tFor Texinfo output, something that transforms valid Docbook\n-\tXML to Texinfo is required. The default choice is <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://docbook2x.sourceforge.net/\">docbook2X</link>.\n-      </para>\n-\n-      <para>\n-\tPlease make sure that the XML documentation and markup is valid for\n-\tany change. This can be done easily, with the validation rule\n-\tdetailed below, which is equivalent to doing:\n-      </para>\n-\n-\t<screen>\n-\t  <userinput>\n-xmllint --noout --valid <filename>xml/index.xml</filename>\n-\t  </userinput>\n-\t</screen>\n-    </section>\n-\n-    <section xml:id=\"docbook.rules\"><info><title>Generating the DocBook Files</title></info>\n-      \n-\n-      <para>\n-\tThe following Makefile rules generate (in order): an HTML\n-\tversion of all the DocBook documentation, a PDF version of the same, a\n-\tsingle XML document, and the result of validating the entire XML\n-\tdocument.\n-      </para>\n-\n-      <para>\n-      <screen><userinput>make doc-html-docbook</userinput></screen>\n-      </para>\n-\n-      <para>\n-      <screen><userinput>make doc-pdf-docbook</userinput></screen>\n-      </para>\n-\n-      <para>\n-      <screen><userinput>make doc-xml-single-docbook</userinput></screen>\n-      </para>\n-\n-      <para>\n-      <screen><userinput>make doc-xml-validate-docbook</userinput></screen>\n-      </para>\n-\n-      <para>\n-\tGenerated files are output into separate sub directores of\n-\t<filename class=\"directory\">doc/docbook/</filename> in the\n-\tbuild directory, based on the output format. For instance, the\n-\tHTML docs will be in <filename class=\"directory\">doc/docbook/html</filename>.\n-      </para>\n-    </section>\n-\n-    <section xml:id=\"docbook.examples\"><info><title>File Organization and Basics</title></info>\n-      \n-\n-    <literallayout class=\"normal\">\n-      <emphasis>Which files are important</emphasis>\n-\n-      All Docbook files are in the directory\n-      libstdc++-v3/doc/xml\n-\n-      Inside this directory, the files of importance:\n-      spine.xml\t \t- index to documentation set\n-      manual/spine.xml  - index to manual\n-      manual/*.xml  \t- individual chapters and sections of the manual\n-      faq.xml  \t\t- index to FAQ\n-      api.xml  \t\t- index to source level / API\n-\n-      All *.txml files are template xml files, i.e., otherwise empty files with\n-      the correct structure, suitable for filling in with new information.\n-\n-      <emphasis>Canonical Writing Style</emphasis>\n-\n-      class template\n-      function template\n-      member function template\n-      (via C++ Templates, Vandevoorde)\n-\n-      class in namespace std: allocator, not std::allocator\n-\n-      header file: iostream, not &lt;iostream&gt;\n-\n-\n-      <emphasis>General structure</emphasis>\n-\n-      &lt;set&gt;\n-      &lt;book&gt;\n-      &lt;/book&gt;\n-\n-      &lt;book&gt;\n-      &lt;chapter&gt;\n-      &lt;/chapter&gt;\n-      &lt;/book&gt;\n-\n-      &lt;book&gt;\n-      &lt;part&gt;\n-      &lt;chapter&gt;\n-      &lt;section&gt;\n-      &lt;/section&gt;\n-\n-      &lt;sect1&gt;\n-      &lt;/sect1&gt;\n-\n-      &lt;sect1&gt;\n-      &lt;sect2&gt;\n-      &lt;/sect2&gt;\n-      &lt;/sect1&gt;\n-      &lt;/chapter&gt;\n-\n-      &lt;chapter&gt;\n-      &lt;/chapter&gt;\n-      &lt;/part&gt;\n-      &lt;/book&gt;\n-\n-      &lt;/set&gt;\n-    </literallayout>\n-    </section>\n-\n-    <section xml:id=\"docbook.markup\"><info><title>Markup By Example</title></info>\n-      \n-\n-      <para>\n-\tComplete details on Docbook markup can be found in the DocBook\n-\tElement Reference,\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.docbook.org/tdg/en/html/part2.html\">online</link>.\n-\tAn incomplete reference for HTML to Docbook conversion is\n-\tdetailed in the table below.\n-      </para>\n-\n-<table frame=\"all\">\n-<title>HTML to Docbook XML Markup Comparison</title>\n-\n-<tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-<colspec colname=\"c1\"/>\n-<colspec colname=\"c2\"/>\n-\n-  <thead>\n-    <row>\n-      <entry>HTML</entry>\n-      <entry>Docbook</entry>\n-    </row>\n-  </thead>\n-\n-  <tbody>\n-    <row>\n-      <entry>&lt;p&gt;</entry>\n-      <entry>&lt;para&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;pre&gt;</entry>\n-      <entry>&lt;computeroutput&gt;, &lt;programlisting&gt;,\n-\t&lt;literallayout&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;ul&gt;</entry>\n-      <entry>&lt;itemizedlist&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;ol&gt;</entry>\n-      <entry>&lt;orderedlist&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;il&gt;</entry>\n-      <entry>&lt;listitem&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;dl&gt;</entry>\n-      <entry>&lt;variablelist&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;dt&gt;</entry>\n-      <entry>&lt;term&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;dd&gt;</entry>\n-      <entry>&lt;listitem&gt;</entry>\n-    </row>\n-\n-    <row>\n-      <entry>&lt;a href=\"\"&gt;</entry>\n-      <entry>&lt;ulink url=\"\"&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;code&gt;</entry>\n-      <entry>&lt;literal&gt;, &lt;programlisting&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;strong&gt;</entry>\n-      <entry>&lt;emphasis&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;em&gt;</entry>\n-      <entry>&lt;emphasis&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>\"</entry>\n-      <entry>&lt;quote&gt;</entry>\n-    </row>\n-   </tbody>\n-</tgroup>\n-</table>\n-\n-<para>\n-  And examples of detailed markup for which there are no real HTML\n-  equivalents are listed in the table below.\n-</para>\n-\n-<table frame=\"all\">\n-<title>Docbook XML Element Use</title>\n-\n-<tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-<colspec colname=\"c1\"/>\n-<colspec colname=\"c2\"/>\n-\n-  <thead>\n-    <row>\n-      <entry>Element</entry>\n-      <entry>Use</entry>\n-    </row>\n-  </thead>\n-\n-  <tbody>\n-    <row>\n-      <entry>&lt;structname&gt;</entry>\n-      <entry>&lt;structname&gt;char_traits&lt;/structname&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;classname&gt;</entry>\n-      <entry>&lt;classname&gt;string&lt;/classname&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;function&gt;</entry>\n-      <entry>\n-\t<para>&lt;function&gt;clear()&lt;/function&gt;</para>\n-\t<para>&lt;function&gt;fs.clear()&lt;/function&gt;</para>\n-      </entry>\n-    </row>\n-    <row>\n-      <entry>&lt;type&gt;</entry>\n-      <entry>&lt;type&gt;long long&lt;/type&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;varname&gt;</entry>\n-      <entry>&lt;varname&gt;fs&lt;/varname&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;literal&gt;</entry>\n-      <entry>\n-\t<para>&lt;literal&gt;-Weffc++&lt;/literal&gt;</para>\n-\t<para>&lt;literal&gt;rel_ops&lt;/literal&gt;</para>\n-      </entry>\n-    </row>\n-    <row>\n-      <entry>&lt;constant&gt;</entry>\n-      <entry>\n-\t<para>&lt;constant&gt;_GNU_SOURCE&lt;/constant&gt;</para>\n-\t<para>&lt;constant&gt;3.0&lt;/constant&gt;</para>\n-      </entry>\n-    </row>\n-    <row>\n-      <entry>&lt;command&gt;</entry>\n-      <entry>&lt;command&gt;g++&lt;/command&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;errortext&gt;</entry>\n-      <entry>&lt;errortext&gt;In instantiation of&lt;/errortext&gt;</entry>\n-    </row>\n-    <row>\n-      <entry>&lt;filename&gt;</entry>\n-      <entry>\n-\t<para>&lt;filename class=\"headerfile\"&gt;ctype.h&lt;/filename&gt;</para>\n-\t<para>&lt;filename class=\"directory\"&gt;/home/gcc/build&lt;/filename&gt;</para>\n-\t<para>&lt;filename class=\"libraryfile\"&gt;libstdc++.so&lt;/filename&gt;</para>\n-      </entry>\n-    </row>\n-   </tbody>\n-</tgroup>\n-</table>\n-\n-    </section>\n-  </section>\n-\n-  <section xml:id=\"doc_style.combines\"><info><title>Combines</title></info>\n-    \n-\n-    <section xml:id=\"combines.rules\"><info><title>Generating Combines and Assemblages</title></info>\n-      \n-\n-      <para>\n-\tThe following Makefile rules are defaults, and are usually\n-\taliased to more detailed rules. They are shortcuts for\n-\tgenerating HTML, PDF, Texinfo, XML, or man files and then collecting\n-\tthe generated files into the build directory's doc directory.\n-      </para>\n-\n-<variablelist>\n-\n-<varlistentry><term>\n-      <emphasis>make doc-html</emphasis>\n-    </term>\n-<listitem>\n-      <para>\n-\tGenerates multi-page HTML documentation in the following directories:\n-      </para>\n-      <para>\n-\t<filename class=\"directory\">doc/libstdc++-api.html</filename>\n-      </para>\n-      <para>\n-\t<filename class=\"directory\">doc/libstdc++-manual.html</filename>\n-      </para>\n-</listitem>\n-</varlistentry>\n-\n-<varlistentry><term>\n-      <emphasis>make doc-man</emphasis>\n-    </term>\n-<listitem>\n-      <para>\n-\tGenerates man pages in the following directory:\n-      </para>\n-      <para>\n-\t<filename class=\"directory\">doc/libstdc++-api.man</filename>\n-      </para>\n-</listitem>\n-</varlistentry>\n-\n-<varlistentry><term>\n-      <emphasis>make doc-pdf</emphasis>\n-    </term>\n-<listitem>\n-      <para>\n-\tGenerates indexed PDF documentation in the following files:\n-      </para>\n-      <para>\n-\t<filename>doc/libstdc++-api.pdf</filename>\n-      </para>\n-      <para>\n-\t<filename>doc/libstdc++-manual.pdf</filename>\n-      </para>\n-</listitem>\n-</varlistentry>\n-\n-<varlistentry><term>\n-      <emphasis>make doc-texinfo</emphasis>\n-    </term>\n-<listitem>\n-      <para>\n-\tGenerates Texinfo documentation in the following files:\n-      </para>\n-      <para>\n-\t<filename>doc/libstdc++-manual.texinfo</filename>\n-      </para>\n-</listitem>\n-</varlistentry>\n-\n-<varlistentry><term>\n-      <emphasis>make doc-xml</emphasis>\n-    </term>\n-<listitem>\n-      <para>\n-\tGenerates single-file XML documentation in the following files:\n-      </para>\n-      <para>\n-\t<filename>doc/libstdc++-api.xml</filename>\n-      </para>\n-      <para>\n-\t<filename>doc/libstdc++-manual.xml</filename>\n-      </para>\n-</listitem>\n-</varlistentry>\n-\n-</variablelist>\n-\n-\n-  </section>\n-  </section>\n-</section>\n-\n <section xml:id=\"contrib.design_notes\" xreflabel=\"Design Notes\"><info><title>Design Notes</title></info>\n   <?dbhtml filename=\"source_design_notes.html\"?>\n   "}, {"sha": "68f3f435d99cf09df9bf1402ec7ebe3f6ece4ccb", "filename": "libstdc++-v3/doc/xml/manual/appendix_porting.xml", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_porting.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_porting.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fappendix_porting.xml?ref=d2b0caaab886179f1f8b57ea4d889426e644466e", "patch": "@@ -19,12 +19,14 @@\n   </keywordset>\n </info>\n \n-\n-\n   <!-- Hacking the Build System -->\n   <xi:include xmlns:xi=\"http://www.w3.org/2001/XInclude\" parse=\"xml\" href=\"build_hacking.xml\">\n   </xi:include>\n \n+  <!-- Hacking the Documentation Systems -->\n+  <xi:include xmlns:xi=\"http://www.w3.org/2001/XInclude\" parse=\"xml\" href=\"documentation_hacking.xml\">\n+  </xi:include>\n+\n   <!-- Internals: Porting to New Hardware or Operating Systems -->\n   <xi:include xmlns:xi=\"http://www.w3.org/2001/XInclude\" parse=\"xml\" href=\"internals.xml\">\n   </xi:include>"}, {"sha": "945ef499681cb06f0e0bf4ed48dc1d110bd1753b", "filename": "libstdc++-v3/doc/xml/manual/build_hacking.xml", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fbuild_hacking.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fbuild_hacking.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fbuild_hacking.xml?ref=d2b0caaab886179f1f8b57ea4d889426e644466e", "patch": "@@ -1,4 +1,4 @@\n-<section xmlns=\"http://docbook.org/ns/docbook\" version=\"5.0\" \n+<section xmlns=\"http://docbook.org/ns/docbook\" version=\"5.0\"\n \t xml:id=\"appendix.porting.build_hacking\" xreflabel=\"Build Hacking\">\n <?dbhtml filename=\"build_hacking.html\"?>\n \n@@ -22,10 +22,8 @@\n   </keywordset>\n </info>\n \n-\n-\n <section xml:id=\"build_hacking.prereq\"><info><title>Prerequisites</title></info>\n-  \n+\n   <para>\n     As noted <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://gcc.gnu.org/install/prerequisites.html\">previously</link>,\n     certain other tools are necessary for hacking on files that\n@@ -41,18 +39,22 @@\n </section>\n \n <section xml:id=\"build_hacking.map\"><info><title>Overview: What Comes from Where</title></info>\n-  \n \n-  <screen>\n-  <inlinemediaobject>\n+\n+  <figure>\n+    <title>Configure and Build File Dependencies</title>\n+  <mediaobject>\n+    <imageobject>\n+      <imagedata align=\"center\" format=\"PDF\" fileref=\"/mnt/share/src/gcc.svn-trunk/libstdc++-v3/doc/xml/images/confdeps.pdf\"/>\n+    </imageobject>\n     <imageobject>\n-      <imagedata fileref=\"images/confdeps.png\"/>\n+      <imagedata align=\"center\" format=\"PNG\" fileref=\"/mnt/share/src/gcc.svn-trunk/libstdc++-v3/doc/xml/images/confdeps.png\"/>\n     </imageobject>\n     <textobject>\n-      <phrase>Dependency Graph Configure to Build Files</phrase>\n+      <phrase>Dependency Graph for Configure and Build Files</phrase>\n     </textobject>\n-  </inlinemediaobject>\n-  </screen>\n+  </mediaobject>\n+  </figure>\n \n   <para>\n     Regenerate all generated files by using the command sequence\n@@ -68,7 +70,7 @@\n </section>\n \n <section xml:id=\"build_hacking.scripts\"><info><title>Storing Information in non-AC files (like configure.host)</title></info>\n-  \n+\n \n   <para>\n     Until that glorious day when we can use AC_TRY_LINK with a\n@@ -100,7 +102,7 @@\n </section>\n \n <section xml:id=\"build_hacking.conventions\"><info><title>Coding and Commenting Conventions</title></info>\n-  \n+\n \n   <para>\n     Most comments should use {octothorpes, shibboleths, hash marks,\n@@ -125,7 +127,7 @@\n </section>\n \n <section xml:id=\"build_hacking.acinclude\"><info><title>The acinclude.m4 layout</title></info>\n-  \n+\n   <para>\n     The nice thing about acinclude.m4/aclocal.m4 is that macros aren't\n     actually performed/called/expanded/whatever here, just loaded.  So\n@@ -216,7 +218,7 @@\n </section>\n \n <section xml:id=\"build_hacking.enable\"><info><title><constant>GLIBCXX_ENABLE</constant>, the <literal>--enable</literal> maker</title></info>\n-  \n+\n \n   <para>\n     All the GLIBCXX_ENABLE_FOO macros use a common helper,"}, {"sha": "c58bde3406546b68d3c66c98946855f6af541787", "filename": "libstdc++-v3/doc/xml/manual/debug_mode.xml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug_mode.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug_mode.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdebug_mode.xml?ref=d2b0caaab886179f1f8b57ea4d889426e644466e", "patch": "@@ -627,7 +627,7 @@ namespace std\n </programlisting>\n \n <para>In debug mode we include the release-mode container (which is now\n-defined in the namespace <code>__norm</code>) and also the\n+defined in the namespace <code>__cxx1998</code>) and also the\n debug-mode container. The debug-mode container is defined within the\n namespace <code>__debug</code>, which is associated with namespace\n <code>std</code> via the C++0x namespace association language feature.  This\n@@ -639,7 +639,7 @@ to C++ code as follows:</para>\n <programlisting>\n namespace std\n {\n-  namespace __norm\n+  namespace __cxx1998\n   {\n     template&lt;typename _Tp, typename _Alloc = allocator&lt;_Tp&gt; &gt;\n       class list\n@@ -652,12 +652,12 @@ namespace std\n   {\n     template&lt;typename _Tp, typename _Alloc = allocator&lt;_Tp&gt; &gt;\n       class list\n-      : public __norm::list&lt;_Tp, _Alloc&gt;,\n+      : public __cxx1998::list&lt;_Tp, _Alloc&gt;,\n \tpublic __gnu_debug::_Safe_sequence&lt;list&lt;_Tp, _Alloc&gt; &gt;\n       {\n \t// ...\n       };\n-  } // namespace __norm\n+  } // namespace __cxx1998\n \n   // namespace __debug __attribute__ ((strong));\n   inline namespace __debug { }"}, {"sha": "a2d1cddd814e3688225d0b76b96a28227aa939d6", "filename": "libstdc++-v3/doc/xml/manual/documentation_hacking.xml", "status": "added", "additions": 990, "deletions": 0, "changes": 990, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdocumentation_hacking.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdocumentation_hacking.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fdocumentation_hacking.xml?ref=d2b0caaab886179f1f8b57ea4d889426e644466e", "patch": "@@ -0,0 +1,990 @@\n+<section xmlns=\"http://docbook.org/ns/docbook\" version=\"5.0\" \n+\t xml:id=\"appendix.porting.doc\" xreflabel=\"Documentation Hacking\">\n+<?dbhtml filename=\"documentation_hacking.html\"?>\n+\n+<info><title>Writing and Generating Documentation</title>\n+  <keywordset>\n+    <keyword>ISO C++</keyword>\n+    <keyword>documentation</keyword>\n+    <keyword>style</keyword>\n+    <keyword>docbook</keyword>\n+    <keyword>doxygen</keyword>\n+  </keywordset>\n+</info>\n+\n+  <section xml:id=\"doc.intro\">\n+    <info>\n+    <title>Introduction</title>\n+    </info>\n+    <para>\n+      Documentation for the GNU C++ Library is created from three\n+      independent sources: a manual, a FAQ, and an API reference.\n+    </para>\n+    <para>\n+      The sub-directory <filename class=\"directory\">doc</filename>\n+      within the main source directory contains\n+      <filename>Makefile.am</filename> and\n+      <filename>Makefile.in</filename>, which provide rules for\n+      generating documentation, described in excruciating detail\n+      below. The <filename class=\"directory\">doc</filename>\n+      sub-directory also contains three directories: <filename\n+      class=\"directory\">doxygen</filename>, which contains scripts and\n+      fragments for <command>doxygen</command>, <filename\n+      class=\"directory\">html</filename>, which contains an html\n+      version of the manual, and <filename\n+      class=\"directory\">xml</filename>, which contains an xml version\n+      of the manual.\n+    </para>\n+    <para>\n+      Diverging from established documentation conventions in the rest\n+      of the GCC project, libstdc++ does not use Texinfo as a markup\n+      language. Instead, Docbook is used to create the manual and the\n+      FAQ, and Doxygen is used to construct the API\n+      reference. Although divergent, this conforms to the GNU Project\n+      recommendations as long as the output is of sufficient quality,\n+      as per\n+      <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n+      xlink:href=\"http://www.gnu.org/prep/standards/standards.html#Documentation\">\n+      GNU Manuals</link>.\n+    </para>\n+  </section>\n+\n+  <section xml:id=\"doc.generation\">\n+    <info>\n+    <title>Generating Documentation</title>\n+    </info>\n+    \n+    <para>\n+      Certain Makefile rules are required by the GNU Coding\n+      Standards. These standard rules generate HTML, PDF, XML, or man\n+      files. For each of the generative rules, there is an additional\n+      install rule that is used to install any generated documentation\n+      files into the prescribed installation directory. Files are\n+      installed into <filename class=\"directory\">share/doc</filename>\n+      or <filename class=\"directory\">share/man</filename> directories.\n+    </para>\n+\n+    <para>\n+      The standard Makefile rules are conditionally supported, based\n+      on the results of examining the host environment for\n+      prerequisites at configuration time. If requirements are not\n+      found, the rule is aliased to a dummy rule that does nothing,\n+      and produces no documentation. If the requirements are found,\n+      the rule forwards to a private rule that produces the requested\n+      documentation.\n+    </para>\n+\n+    <para>\n+      For more details on what prerequisites were found and where,\n+      please consult the file <filename>config.log</filename> in the\n+      libstdc++ build directory. Compare this log to what is expected\n+      for the relevant Makefile conditionals:\n+      <literal>BUILD_INFO</literal>, <literal>BUILD_XML</literal>,\n+      <literal>BUILD_HTML</literal>, <literal>BUILD_MAN</literal>,\n+      <literal>BUILD_PDF</literal>, and <literal>BUILD_EPUB</literal>.\n+    </para>\n+\n+    <para>\n+      Supported Makefile rules:\n+    </para>\n+\n+    <variablelist>\n+      <varlistentry>\n+\t<term>\n+\t  <emphasis>make html</emphasis>\n+\t</term>\n+\t<term>\n+\t  <emphasis>make install-html</emphasis>\n+\t</term>\n+\t<listitem>\n+\t  <para>\n+\t    Generates multi-page HTML documentation, and installs it\n+\t    in the following directories:\n+\t  </para>\n+\t  <para>\n+\t    <filename class=\"directory\">\n+\t      doc/libstdc++/libstdc++-api.html\n+\t    </filename>\n+\t  </para>\n+\t  <para>\n+\t    <filename class=\"directory\">\n+\t      doc/libstdc++/libstdc++-manual.html\n+\t    </filename>\n+\t  </para>\n+\t</listitem>\n+      </varlistentry>\n+\n+      <varlistentry>\n+\t<term>\n+\t  <emphasis>make pdf</emphasis>\n+\t</term>\n+\t<term>\n+\t  <emphasis>make install-pdf</emphasis>\n+\t</term>\n+\t<listitem>\n+\t  <para>\n+\t    Generates indexed PDF documentation, and installs it as\n+\t    the following files:\n+\t  </para>\n+\t  <para>\n+\t    <filename>doc/libstdc++/libstdc++-api.pdf</filename>\n+\t  </para>\n+\t  <para>\n+\t    <filename>doc/libstdc++/libstdc++-manual.pdf</filename>\n+\t  </para>\n+\t</listitem>\n+      </varlistentry>\n+      \n+      <varlistentry>\n+\t<term>\n+\t  <emphasis>make man</emphasis>\n+\t</term>\n+\t<term>\n+\t  <emphasis>make install-man</emphasis>\n+\t</term>\n+\t<listitem>\n+\t  <para>\n+\t    Generates man pages, and installs it in the following directory:\n+\t  </para>\n+\t  <para>\n+\t    <filename class=\"directory\">man/man3/</filename>\n+\t  </para>\n+\t  <para>\n+\t    The generated man pages are namespace-qualified, so to look at\n+\t    the man page for <classname>vector</classname>, one would use\n+\t    <command>man std::vector</command>.\n+\t  </para>\n+\t</listitem>\n+      </varlistentry>\n+\n+      <varlistentry>\n+\t<term>\n+\t  <emphasis>make epub</emphasis>\n+\t</term>\n+\t<term>\n+\t  <emphasis>make install-epub</emphasis>\n+\t</term>\n+\t<listitem>\n+\t  <para>\n+\t    Generates documentation in the ebook/portable electronic\n+\t    reader format called Epub, and installs it as the\n+\t    following file.\n+\t  </para>\n+\t  <para>\n+\t    <filename>doc/libstdc++/libstdc++-manual.epub</filename>\n+\t  </para>\n+\t</listitem>\n+      </varlistentry>      \n+\n+      <varlistentry>\n+\t<term>\n+\t  <emphasis>make xml</emphasis>\n+\t</term>\n+\t<term>\n+\t  <emphasis>make install-xml</emphasis>\n+\t</term>\n+\t<listitem>\n+\t  <para>\n+\t    Generates single-file XML documentation, and installs it\n+\t    as the following files:\n+\t  </para>\n+\t  <para>\n+\t    <filename>doc/libstdc++/libstdc++-api-single.xml</filename>\n+\t  </para>\n+\t  <para>\n+\t    <filename>doc/libstdc++/libstdc++-manual-single.xml</filename>\n+\t  </para>\n+\t</listitem>\n+      </varlistentry>\n+    </variablelist>\n+\n+    <para>\n+      Makefile rules for several other formats are explicitly not\n+      supported, and are always aliased to dummy rules. These\n+      unsupported formats are: <emphasis>info</emphasis>,\n+      <emphasis>ps</emphasis>, and <emphasis>dvi</emphasis>.\n+    </para>\n+  </section>\n+\n+  <section xml:id=\"doc.doxygen\"><info><title>Doxygen</title></info>\n+    \n+    <section xml:id=\"doxygen.prereq\"><info><title>Prerequisites</title></info>\n+      \n+ <table frame=\"all\">\n+<title>Doxygen Prerequisites</title>\n+\n+<tgroup cols=\"3\" align=\"center\" colsep=\"1\" rowsep=\"1\">\n+<colspec colname=\"c1\"/>\n+<colspec colname=\"c2\"/>\n+<colspec colname=\"c3\"/>\n+\n+  <thead>\n+    <row>\n+      <entry>Tool</entry>\n+      <entry>Version</entry>\n+      <entry>Required By</entry>\n+    </row>\n+  </thead>\n+\n+  <tbody>\n+\n+    <row>\n+      <entry>coreutils</entry>\n+      <entry>8.5</entry>\n+      <entry>all</entry>\n+    </row>\n+\n+    <row>\n+      <entry>bash</entry>\n+      <entry>4.1</entry>\n+      <entry>all</entry>\n+    </row>\n+\n+    <row>\n+      <entry>doxygen</entry>\n+      <entry>1.7.0</entry>\n+      <entry>all</entry>\n+    </row>\n+\n+    <row>\n+      <entry>graphviz</entry>\n+      <entry>2.26</entry>\n+      <entry>graphical hierarchies</entry>\n+    </row>\n+\n+    <row>\n+      <entry>pdflatex</entry>\n+      <entry>2007-59</entry>\n+      <entry>pdf output</entry>\n+    </row>\n+\n+  </tbody>\n+</tgroup>\n+</table>\n+\n+\n+      <para>\n+\tPrerequisite tools are Bash 2.0 or later,\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.doxygen.org/\">Doxygen</link>, and\n+\tthe <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.gnu.org/software/coreutils/\">GNU\n+\tcoreutils</link>. (GNU versions of find, xargs, and possibly\n+\tsed and grep are used, just because the GNU versions make\n+\tthings very easy.) \n+      </para>\n+\n+      <para>\n+\tTo generate the pretty pictures and hierarchy\n+\tgraphs, the\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.graphviz.org\">Graphviz</link> package\n+\twill need to be installed. For PDF\n+\toutput, <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.tug.org/applications/pdftex/\">\n+\tpdflatex</link> is required.\n+      </para>\n+    </section>\n+\n+    <section xml:id=\"doxygen.rules\"><info><title>Generating the Doxygen Files</title></info>\n+      \n+      <para>\n+\tThe following Makefile rules run Doxygen to generate HTML\n+\tdocs, XML docs, XML docs as a single file, PDF docs, and the\n+\tman pages. These rules are not conditional! If the required\n+\ttools are not found, or are the wrong versions, the rule may\n+\tend in an error.\n+      </para>\n+\n+      <para>\n+      <screen><userinput>make doc-html-doxygen</userinput></screen>\n+      </para>\n+\n+      <para>\n+      <screen><userinput>make doc-xml-doxygen</userinput></screen>\n+      </para>\n+\n+      <para>\n+      <screen><userinput>make doc-xml-single-doxygen</userinput></screen>\n+      </para>\n+\n+      <para>\n+      <screen><userinput>make doc-pdf-doxygen</userinput></screen>\n+      </para>\n+\n+      <para>\n+      <screen><userinput>make doc-man-doxygen</userinput></screen>\n+      </para>\n+\n+      <para>\n+\tGenerated files are output into separate sub directories of\n+\t<filename class=\"directory\">doc/doxygen/</filename> in the\n+\tbuild directory, based on the output format. For instance, the\n+\tHTML docs will be in <filename class=\"directory\">doc/doxygen/html</filename>.\n+      </para>\n+\n+      <para>\n+\tCareful observers will see that the Makefile rules simply call\n+\ta script from the source tree, <filename>run_doxygen</filename>, which\n+\tdoes the actual work of running Doxygen and then (most\n+\timportantly) massaging the output files. If for some reason\n+\tyou prefer to not go through the Makefile, you can call this\n+\tscript directly. (Start by passing <literal>--help</literal>.)\n+      </para>\n+\n+      <para>\n+\tIf you wish to tweak the Doxygen settings, do so by editing\n+\t<filename>doc/doxygen/user.cfg.in</filename>. Notes to fellow\n+\tlibrary hackers are written in triple-# comments.\n+      </para>\n+\n+    </section>\n+\n+    <section xml:id=\"doxygen.markup\"><info><title>Markup</title></info>\n+      \n+\n+      <para>\n+\tIn general, libstdc++ files should be formatted according to\n+\tthe rules found in the\n+\t<link linkend=\"contrib.coding_style\">Coding Standard</link>. Before\n+\tany doxygen-specific formatting tweaks are made, please try to\n+\tmake sure that the initial formatting is sound.\n+      </para>\n+\n+      <para>\n+\tAdding Doxygen markup to a file (informally called\n+\t<quote>doxygenating</quote>) is very simple. The Doxygen manual can be\n+\tfound\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.stack.nl/~dimitri/doxygen/download.html#latestman\">here</link>.\n+\tWe try to use a very-recent version of Doxygen.\n+      </para>\n+\n+      <para>\n+\tFor classes, use\n+\t<classname>deque</classname>/<classname>vector</classname>/<classname>list</classname>\n+\tand <classname>std::pair</classname> as examples.  For\n+\tfunctions, see their member functions, and the free functions\n+\tin <filename>stl_algobase.h</filename>. Member functions of\n+\tother container-like types should read similarly to these\n+\tmember functions.\n+      </para>\n+\n+      <para>\n+\tSome commentary to accompany\n+\tthe first list in the <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.stack.nl/~dimitri/doxygen/docblocks.html\">Special\n+\tDocumentation Blocks</link> section of\n+\tthe Doxygen manual:\n+      </para>\n+\n+      <orderedlist inheritnum=\"ignore\" continuation=\"restarts\">\n+\t<listitem>\n+\t  <para>For longer comments, use the Javadoc style...</para>\n+\t</listitem>\n+\n+\t<listitem>\n+\t  <para>\n+\t    ...not the Qt style. The intermediate *'s are preferred.\n+\t  </para>\n+\t</listitem>\n+\n+ \t<listitem>\n+\t  <para>\n+\t    Use the triple-slash style only for one-line comments (the\n+\t    <quote>brief</quote> mode).\n+\t  </para>\n+\t</listitem>\n+\n+\t<listitem>\n+\t  <para>\n+\t    This is disgusting. Don't do this.\n+\t  </para>\n+\t</listitem>\n+      </orderedlist>\n+\n+      <para>\n+\tSome specific guidelines:\n+      </para>\n+\n+      <para>\n+\tUse the @-style of commands, not the !-style. Please be\n+\tcareful about whitespace in your markup comments. Most of the\n+\ttime it doesn't matter; doxygen absorbs most whitespace, and\n+\tboth HTML and *roff are agnostic about whitespace. However,\n+\tin &lt;pre&gt; blocks and @code/@endcode sections, spacing can\n+\thave <quote>interesting</quote> effects.\n+      </para>\n+\n+      <para>\n+\tUse either kind of grouping, as\n+\tappropriate. <filename>doxygroups.cc</filename> exists for this\n+\tpurpose. See <filename>stl_iterator.h</filename> for a good example\n+\tof the <quote>other</quote> kind of grouping.\n+      </para>\n+\n+      <para>\n+\tPlease use markup tags like @p and @a when referring to things\n+\tsuch as the names of function parameters. Use @e for emphasis\n+\twhen necessary. Use @c to refer to other standard names.\n+\t(Examples of all these abound in the present code.)\n+      </para>\n+\n+      <para>\n+\tComplicated math functions should use the multi-line\n+\tformat. An example from <filename>random.h</filename>:\n+      </para>\n+\n+      <para>\n+<literallayout class=\"normal\">\n+/**\n+ * @brief A model of a linear congruential random number generator.\n+ *\n+ * @f[\n+ *     x_{i+1}\\leftarrow(ax_{i} + c) \\bmod m\n+ * @f]\n+ */\n+</literallayout>\n+      </para>\n+\n+      <para>\n+\tOne area of note is the markup required for\n+\t<literal>@file</literal> markup in header files. Two details\n+\tare important: for filenames that have the same name in\n+\tmultiple directories, include part of the installed path to\n+\tdisambiguate. For example:\n+      </para>\n+\n+      <para>\n+<literallayout class=\"normal\">\n+/** @file debug/vector\n+ *  This file is a GNU debug extension to the Standard C++ Library.\n+ */\n+</literallayout>\n+      </para>\n+\n+      <para>\n+\tThe other relevant detail for header files is the use of a\n+\tlibstdc++-specific doxygen alias that helps distinguish\n+\tbetween public header files (like <filename>random</filename>)\n+\tfrom implementation or private header files (like\n+\t<filename>bits/c++config.h</filename>.) This alias is spelled\n+\t<literal>@headername</literal> and can take one or two\n+\targuments that detail the public header file or files that\n+\tshould be included to use the contents of the file. All header\n+\tfiles that are not intended for direct inclusion must use\n+\t<literal>headername</literal> in the <literal>file</literal>\n+\tblock. An example:\n+      </para>\n+\n+      <para>\n+<literallayout class=\"normal\">\n+/** @file bits/basic_string.h\n+ *  This is an internal header file, included by other library headers.\n+ *  Do not attempt to use it directly. @headername{string}\n+ */\n+</literallayout>\n+      </para>\n+\n+      <para>\n+\tBe careful about using certain, special characters when\n+\twriting Doxygen comments. Single and double quotes, and\n+\tseparators in filenames are two common trouble spots. When in\n+\tdoubt, consult the following table.\n+      </para>\n+\n+<table frame=\"all\">\n+<title>HTML to Doxygen Markup Comparison</title>\n+\n+<tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n+<colspec colname=\"c1\"/>\n+<colspec colname=\"c2\"/>\n+\n+  <thead>\n+    <row>\n+      <entry>HTML</entry>\n+      <entry>Doxygen</entry>\n+    </row>\n+  </thead>\n+\n+  <tbody>\n+    <row>\n+      <entry>\\</entry>\n+      <entry>\\\\</entry>\n+    </row>\n+\n+    <row>\n+      <entry>\"</entry>\n+      <entry>\\\"</entry>\n+    </row>\n+\n+    <row>\n+      <entry>'</entry>\n+      <entry>\\'</entry>\n+    </row>\n+\n+    <row>\n+      <entry>&lt;i&gt;</entry>\n+      <entry>@a word</entry>\n+    </row>\n+\n+    <row>\n+      <entry>&lt;b&gt;</entry>\n+      <entry>@b word</entry>\n+    </row>\n+\n+    <row>\n+      <entry>&lt;code&gt;</entry>\n+      <entry>@c word</entry>\n+    </row>\n+\n+    <row>\n+      <entry>&lt;em&gt;</entry>\n+      <entry>@a word</entry>\n+    </row>\n+\n+    <row>\n+      <entry>&lt;em&gt;</entry>\n+      <entry>&lt;em&gt;two words or more&lt;/em&gt;</entry>\n+    </row>\n+  </tbody>\n+\n+</tgroup>\n+</table>\n+\n+\n+    </section>\n+\n+  </section>\n+\n+  <section xml:id=\"doc.docbook\"><info><title>Docbook</title></info>\n+    \n+\n+    <section xml:id=\"docbook.prereq\"><info><title>Prerequisites</title></info>\n+      \n+      \n+ <table frame=\"all\">\n+<title>Docbook Prerequisites</title>\n+\n+<tgroup cols=\"3\" align=\"center\" colsep=\"1\" rowsep=\"1\">\n+<colspec colname=\"c1\"/>\n+<colspec colname=\"c2\"/>\n+<colspec colname=\"c3\"/>\n+\n+  <thead>\n+    <row>\n+      <entry>Tool</entry>\n+      <entry>Version</entry>\n+      <entry>Required By</entry>\n+    </row>\n+  </thead>\n+\n+  <tbody>\n+\n+    <row>\n+      <entry>docbook5-style-xsl</entry>\n+      <entry>1.76.1</entry>\n+      <entry>all</entry>\n+    </row>\n+\n+    <row>\n+      <entry>xsltproc</entry>\n+      <entry>1.1.26</entry>\n+      <entry>all</entry>\n+    </row>\n+\n+    <row>\n+      <entry>xmllint</entry>\n+      <entry>2.7.7</entry>\n+      <entry>validation</entry>\n+    </row>\n+\n+    <row>\n+      <entry>dblatex</entry>\n+      <entry>0.3</entry>\n+      <entry>pdf output</entry>\n+    </row>\n+\n+    <row>\n+      <entry>pdflatex</entry>\n+      <entry>2007-59</entry>\n+      <entry>pdf output</entry>\n+    </row>\n+\n+    <row>\n+      <entry>docbook2X</entry>\n+      <entry>0.8.8</entry>\n+      <entry>info output</entry>\n+    </row>\n+\n+  </tbody>\n+</tgroup>\n+</table>\n+\n+      <para>\n+\tEditing the DocBook sources requires an XML editor. Many\n+\texist: some notable options\n+\tinclude <command>emacs</command>, <application>Kate</application>,\n+\tor <application>Conglomerate</application>.\n+      </para>\n+\n+      <para>\n+\tSome editors support special <quote>XML Validation</quote>\n+\tmodes that can validate the file as it is\n+\tproduced. Recommended is the <command>nXML Mode</command>\n+\tfor <command>emacs</command>.\n+      </para>\n+\n+      <para>\n+\tBesides an editor, additional DocBook files and XML tools are\n+\talso required.\n+      </para>\n+\n+      <para>\n+\tAccess to the DocBook 5.0 stylesheets and schema is required. The\n+\tstylesheets are usually packaged by vendor, in something\n+\tlike <filename>docbook5-style-xsl</filename>. To exactly match\n+\tgenerated output, please use a version of the stylesheets\n+\tequivalent\n+\tto <filename>docbook5-style-xsl-1.75.2-3</filename>. The\n+\tinstallation directory for this package corresponds to\n+\tthe <literal>XSL_STYLE_DIR</literal>\n+\tin <filename>doc/Makefile.am</filename> and defaults\n+\tto <filename class=\"directory\">/usr/share/sgml/docbook/xsl-ns-stylesheets</filename>.\n+      </para>\n+\n+      <para>\n+\tFor processing XML, an XML processor and some style\n+\tsheets are necessary. Defaults are <command>xsltproc</command>\n+\tprovided by <filename>libxslt</filename>.\n+      </para>\n+\n+      <para>\n+\tFor validating the XML document, you'll need\n+\tsomething like <command>xmllint</command> and access to the\n+\trelevant DocBook schema. These are provided\n+\tby a vendor package like <filename>libxml2</filename> and <filename>docbook5-schemas-5.0-4</filename>\n+      </para>\n+\n+      <para>\n+\tFor PDF output, something that transforms valid Docbook XML to PDF is\n+\trequired. Possible solutions include <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://dblatex.sourceforge.net\">dblatex</link>,\n+\t<command>xmlto</command>, or <command>prince</command>. Of\n+\tthese, <command>dblatex</command> is the default. Other\n+\toptions are listed on the DocBook web <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://wiki.docbook.org/topic/DocBookPublishingTools\">pages</link>. Please\n+\tconsult the <email>libstdc++@gcc.gnu.org</email> list when\n+\tpreparing printed manuals for current best practice and\n+\tsuggestions.\n+      </para>\n+\n+      <para>\n+\tFor Texinfo output, something that transforms valid Docbook\n+\tXML to Texinfo is required. The default choice is <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://docbook2x.sourceforge.net/\">docbook2X</link>.\n+      </para>\n+    </section>\n+\n+    <section xml:id=\"docbook.rules\"><info><title>Generating the DocBook Files</title></info>\n+      \n+\n+      <para>\n+\tThe following Makefile rules generate (in order): an HTML\n+\tversion of all the DocBook documentation, a PDF version of the\n+\tsame, and a single XML document.  These rules are not\n+\tconditional! If the required tools are not found, or are the\n+\twrong versions, the rule may end in an error.\n+      </para>\n+\n+      <para>\n+      <screen><userinput>make doc-html-docbook</userinput></screen>\n+      </para>\n+\n+      <para>\n+      <screen><userinput>make doc-pdf-docbook</userinput></screen>\n+      </para>\n+\n+      <para>\n+      <screen><userinput>make doc-xml-single-docbook</userinput></screen>\n+      </para>\n+\n+      <para>\n+\tGenerated files are output into separate sub directores of\n+\t<filename class=\"directory\">doc/docbook/</filename> in the\n+\tbuild directory, based on the output format. For instance, the\n+\tHTML docs will be in <filename\n+\tclass=\"directory\">doc/docbook/html</filename>.\n+      </para>\n+\n+      <para>\n+\tIf the Docbook stylesheets are installed in a custom location,\n+\tone can use the variable <literal>XSL_STYLE_DIR</literal> to\n+\tover-ride the Makefile defaults. As so:\n+      </para>\n+\n+      <screen>\n+\t<userinput>\n+make <literal>XSL_STYLE_DIR=\"/usr/share/xml/docbook/stylesheet/nwalsh\"</literal> doc-html-docbook\n+\t</userinput>\n+      </screen>\n+\n+      </section>\n+\n+    <section xml:id=\"docbook.validation\"><info><title>Editing and Validation</title></info>\n+\n+      <para>\n+\tAfter editing the xml sources, please make sure that the XML\n+\tdocumentation and markup is still valid. This can be\n+\tdone easily, with the following validation rule:\n+      </para>\n+\n+      <screen>\n+\t<userinput>make doc-xml-validate-docbook</userinput>\n+      </screen>\n+\n+      <para>\n+\tThis is equivalent to doing:\n+      </para>\n+      \n+      <screen>\n+\t<userinput>\n+\t  xmllint --noout --valid <filename>xml/index.xml</filename>\n+\t</userinput>\n+      </screen>\n+\n+      <para>\n+\tPlease note that individual sections and chapters of the\n+\tmanual can be validated by substiuting the file desired for\n+\t<filename>xml/index.xml</filename> in the command\n+\tabove. Reducing scope in this manner can be helpful when\n+\tvalidation on the entire manual fails.\n+      </para>\n+\n+      <para>\n+\tAll Docbook xml sources should always validate. No excuses!\n+      </para>\n+\n+    </section>\n+\n+    <section xml:id=\"docbook.examples\"><info><title>File Organization and Basics</title></info>\n+      \n+\n+    <literallayout class=\"normal\">\n+      <emphasis>Which files are important</emphasis>\n+\n+      All Docbook files are in the directory\n+      libstdc++-v3/doc/xml\n+\n+      Inside this directory, the files of importance:\n+      spine.xml\t \t- index to documentation set\n+      manual/spine.xml  - index to manual\n+      manual/*.xml  \t- individual chapters and sections of the manual\n+      faq.xml  \t\t- index to FAQ\n+      api.xml  \t\t- index to source level / API\n+\n+      All *.txml files are template xml files, i.e., otherwise empty files with\n+      the correct structure, suitable for filling in with new information.\n+\n+      <emphasis>Canonical Writing Style</emphasis>\n+\n+      class template\n+      function template\n+      member function template\n+      (via C++ Templates, Vandevoorde)\n+\n+      class in namespace std: allocator, not std::allocator\n+\n+      header file: iostream, not &lt;iostream&gt;\n+\n+\n+      <emphasis>General structure</emphasis>\n+\n+      &lt;set&gt;\n+      &lt;book&gt;\n+      &lt;/book&gt;\n+\n+      &lt;book&gt;\n+      &lt;chapter&gt;\n+      &lt;/chapter&gt;\n+      &lt;/book&gt;\n+\n+      &lt;book&gt;\n+      &lt;part&gt;\n+      &lt;chapter&gt;\n+      &lt;section&gt;\n+      &lt;/section&gt;\n+\n+      &lt;sect1&gt;\n+      &lt;/sect1&gt;\n+\n+      &lt;sect1&gt;\n+      &lt;sect2&gt;\n+      &lt;/sect2&gt;\n+      &lt;/sect1&gt;\n+      &lt;/chapter&gt;\n+\n+      &lt;chapter&gt;\n+      &lt;/chapter&gt;\n+      &lt;/part&gt;\n+      &lt;/book&gt;\n+\n+      &lt;/set&gt;\n+    </literallayout>\n+    </section>\n+\n+    <section xml:id=\"docbook.markup\"><info><title>Markup By Example</title></info>\n+      \n+\n+      <para>\n+\tComplete details on Docbook markup can be found in the DocBook\n+\tElement Reference,\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.docbook.org/tdg/en/html/part2.html\">online</link>.\n+\tAn incomplete reference for HTML to Docbook conversion is\n+\tdetailed in the table below.\n+      </para>\n+\n+<table frame=\"all\">\n+<title>HTML to Docbook XML Markup Comparison</title>\n+\n+<tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n+<colspec colname=\"c1\"/>\n+<colspec colname=\"c2\"/>\n+\n+  <thead>\n+    <row>\n+      <entry>HTML</entry>\n+      <entry>Docbook</entry>\n+    </row>\n+  </thead>\n+\n+  <tbody>\n+    <row>\n+      <entry>&lt;p&gt;</entry>\n+      <entry>&lt;para&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;pre&gt;</entry>\n+      <entry>&lt;computeroutput&gt;, &lt;programlisting&gt;,\n+\t&lt;literallayout&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;ul&gt;</entry>\n+      <entry>&lt;itemizedlist&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;ol&gt;</entry>\n+      <entry>&lt;orderedlist&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;il&gt;</entry>\n+      <entry>&lt;listitem&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;dl&gt;</entry>\n+      <entry>&lt;variablelist&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;dt&gt;</entry>\n+      <entry>&lt;term&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;dd&gt;</entry>\n+      <entry>&lt;listitem&gt;</entry>\n+    </row>\n+\n+    <row>\n+      <entry>&lt;a href=\"\"&gt;</entry>\n+      <entry>&lt;ulink url=\"\"&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;code&gt;</entry>\n+      <entry>&lt;literal&gt;, &lt;programlisting&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;strong&gt;</entry>\n+      <entry>&lt;emphasis&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;em&gt;</entry>\n+      <entry>&lt;emphasis&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>\"</entry>\n+      <entry>&lt;quote&gt;</entry>\n+    </row>\n+   </tbody>\n+</tgroup>\n+</table>\n+\n+<para>\n+  And examples of detailed markup for which there are no real HTML\n+  equivalents are listed in the table below.\n+</para>\n+\n+<table frame=\"all\">\n+<title>Docbook XML Element Use</title>\n+\n+<tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n+<colspec colname=\"c1\"/>\n+<colspec colname=\"c2\"/>\n+\n+  <thead>\n+    <row>\n+      <entry>Element</entry>\n+      <entry>Use</entry>\n+    </row>\n+  </thead>\n+\n+  <tbody>\n+    <row>\n+      <entry>&lt;structname&gt;</entry>\n+      <entry>&lt;structname&gt;char_traits&lt;/structname&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;classname&gt;</entry>\n+      <entry>&lt;classname&gt;string&lt;/classname&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;function&gt;</entry>\n+      <entry>\n+\t<para>&lt;function&gt;clear()&lt;/function&gt;</para>\n+\t<para>&lt;function&gt;fs.clear()&lt;/function&gt;</para>\n+      </entry>\n+    </row>\n+    <row>\n+      <entry>&lt;type&gt;</entry>\n+      <entry>&lt;type&gt;long long&lt;/type&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;varname&gt;</entry>\n+      <entry>&lt;varname&gt;fs&lt;/varname&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;literal&gt;</entry>\n+      <entry>\n+\t<para>&lt;literal&gt;-Weffc++&lt;/literal&gt;</para>\n+\t<para>&lt;literal&gt;rel_ops&lt;/literal&gt;</para>\n+      </entry>\n+    </row>\n+    <row>\n+      <entry>&lt;constant&gt;</entry>\n+      <entry>\n+\t<para>&lt;constant&gt;_GNU_SOURCE&lt;/constant&gt;</para>\n+\t<para>&lt;constant&gt;3.0&lt;/constant&gt;</para>\n+      </entry>\n+    </row>\n+    <row>\n+      <entry>&lt;command&gt;</entry>\n+      <entry>&lt;command&gt;g++&lt;/command&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;errortext&gt;</entry>\n+      <entry>&lt;errortext&gt;In instantiation of&lt;/errortext&gt;</entry>\n+    </row>\n+    <row>\n+      <entry>&lt;filename&gt;</entry>\n+      <entry>\n+\t<para>&lt;filename class=\"headerfile\"&gt;ctype.h&lt;/filename&gt;</para>\n+\t<para>&lt;filename class=\"directory\"&gt;/home/gcc/build&lt;/filename&gt;</para>\n+\t<para>&lt;filename class=\"libraryfile\"&gt;libstdc++.so&lt;/filename&gt;</para>\n+      </entry>\n+    </row>\n+   </tbody>\n+</tgroup>\n+</table>\n+\n+</section>\n+</section>\n+</section>\n\\ No newline at end of file"}, {"sha": "0a41c44ea75220a845abc66776bdde6d1cad9182", "filename": "libstdc++-v3/doc/xml/manual/prerequisites.xml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprerequisites.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b0caaab886179f1f8b57ea4d889426e644466e/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprerequisites.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprerequisites.xml?ref=d2b0caaab886179f1f8b57ea4d889426e644466e", "patch": "@@ -43,8 +43,8 @@\n \n    <para>\n      To generate the API documentation from the sources you will need\n-     Doxygen, see <link linkend=\"contrib.doc_style\">Documentation\n-     Style</link> in the appendix for full details.\n+     Doxygen, see <link linkend=\"appendix.porting.doc\">Documentation\n+     Hacking</link> in the appendix for full details.\n    </para>\n \n    <para>"}]}