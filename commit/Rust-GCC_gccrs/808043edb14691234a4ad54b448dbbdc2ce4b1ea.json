{"sha": "808043edb14691234a4ad54b448dbbdc2ce4b1ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA4MDQzZWRiMTQ2OTEyMzRhNGFkNTRiNDQ4ZGJiZGMyY2U0YjFlYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-25T17:30:34Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-25T17:30:34Z"}, "message": "(regclass): Fix paren error.\n\nFrom-SVN: r4566", "tree": {"sha": "668cd759da8a443180ed13a5f3309280fc9b78b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/668cd759da8a443180ed13a5f3309280fc9b78b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/808043edb14691234a4ad54b448dbbdc2ce4b1ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808043edb14691234a4ad54b448dbbdc2ce4b1ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/808043edb14691234a4ad54b448dbbdc2ce4b1ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808043edb14691234a4ad54b448dbbdc2ce4b1ea/comments", "author": null, "committer": null, "parents": [{"sha": "6056afa0efb8f37ff28e1897cdbe6aaad85b7f06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6056afa0efb8f37ff28e1897cdbe6aaad85b7f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6056afa0efb8f37ff28e1897cdbe6aaad85b7f06"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1960355972465121f47035bb96d4cf84b7dd99e8", "filename": "gcc/regclass.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808043edb14691234a4ad54b448dbbdc2ce4b1ea/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808043edb14691234a4ad54b448dbbdc2ce4b1ea/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=808043edb14691234a4ad54b448dbbdc2ce4b1ea", "patch": "@@ -553,7 +553,7 @@ regclass (f, nregs)\n \t    REGNO (r) = j;\n \n \t    for (m = VOIDmode; (int) m < (int) MAX_MACHINE_MODE;\n-\t\t m = (enum machine_mode) ((int) m) + 1)\n+\t\t m = (enum machine_mode) ((int) m + 1))\n \t      if (HARD_REGNO_MODE_OK (j, m))\n \t\t{\n \t\t  PUT_MODE (r, m);"}]}