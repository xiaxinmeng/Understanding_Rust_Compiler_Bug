{"sha": "c050422f1eb7cb1d7e28387c22ddebffc35c52e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1MDQyMmYxZWI3Y2IxZDdlMjgzODdjMjJkZGViZmZjMzVjNTJlMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-04T19:42:13Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-04T19:42:13Z"}, "message": "(convert): Handle conversion to complex type.\n\nFrom-SVN: r3640", "tree": {"sha": "ac7b1d0934a65ac120fd4edeb807d9a33ddd6909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac7b1d0934a65ac120fd4edeb807d9a33ddd6909"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c050422f1eb7cb1d7e28387c22ddebffc35c52e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c050422f1eb7cb1d7e28387c22ddebffc35c52e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c050422f1eb7cb1d7e28387c22ddebffc35c52e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c050422f1eb7cb1d7e28387c22ddebffc35c52e3/comments", "author": null, "committer": null, "parents": [{"sha": "0b1278213bf3d8fbc14be61416a2467755d77ed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b1278213bf3d8fbc14be61416a2467755d77ed2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b1278213bf3d8fbc14be61416a2467755d77ed2"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "cfa590cfa6c26334462ddd192a3ef2d34ecc77ec", "filename": "gcc/c-convert.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c050422f1eb7cb1d7e28387c22ddebffc35c52e3/gcc%2Fc-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c050422f1eb7cb1d7e28387c22ddebffc35c52e3/gcc%2Fc-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-convert.c?ref=c050422f1eb7cb1d7e28387c22ddebffc35c52e3", "patch": "@@ -87,6 +87,8 @@ convert (type, expr)\n     return fold (convert_to_pointer (type, e));\n   if (code == REAL_TYPE)\n     return fold (convert_to_real (type, e));\n+  if (code == COMPLEX_TYPE)\n+    return fold (convert_to_complex (type, e));\n \n   error (\"conversion to non-scalar type requested\");\n   return error_mark_node;"}]}