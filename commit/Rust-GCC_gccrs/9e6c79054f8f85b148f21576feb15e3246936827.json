{"sha": "9e6c79054f8f85b148f21576feb15e3246936827", "node_id": "C_kwDOANBUbNoAKDllNmM3OTA1NGY4Zjg1YjE0OGYyMTU3NmZlYjE1ZTMyNDY5MzY4Mjc", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2023-01-14T22:35:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-14T22:35:55Z"}, "message": "Merge #1736\n\n1736: Change how CompileVarDecl outputs Bvariable's r=philberty a=powerboat9\n\nThis allows patterns to declare multiple/no variables\r\n\r\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>\r\n---\n\nCo-authored-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "087adfda1099f03c7d8432bfeb3883ca1c91c5a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/087adfda1099f03c7d8432bfeb3883ca1c91c5a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e6c79054f8f85b148f21576feb15e3246936827", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjwy5LCRBK7hj4Ov3rIwAAfkQIAG3tgOEirKlrqIzZnqq2Kx5+\n8s7erJY32Qc2MJRfY2VKHCi9Vf/hLvSMFxoswM0vOWV4dcnh10zv8j10ovqAHREX\nd02pqYfkJonfeA2HzcUvOd/HUR9KFPHOVUe9FeH327YCXGFBl2JeIXMnnz+LwWa/\njnYVa2X17lNQQfZ3vqLGtA9aGG8A/OeYc1S8HzTL55sFBEHEo+xEZ9wVJxAqfIwv\nce3kBCjqw4fe997VdlpIbbfuhD54fGOcU5wdkZHbApCjJzDF4fORjTfcHr6q5uyi\njRGZ7n4tOV8Ce6DsncsuNtixURZxDIMp+Ht+rfKupMpWZWaAtnHYeDXDuYqAaOE=\n=SDnn\n-----END PGP SIGNATURE-----\n", "payload": "tree 087adfda1099f03c7d8432bfeb3883ca1c91c5a1\nparent 2f9f77f9dd6330fe60554400133d7217f78afa43\nparent dc31146d6392c620a31b0f3e3625224ca4afb3cd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1673735755 +0000\ncommitter GitHub <noreply@github.com> 1673735755 +0000\n\nMerge #1736\n\n1736: Change how CompileVarDecl outputs Bvariable's r=philberty a=powerboat9\n\nThis allows patterns to declare multiple/no variables\r\n\r\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>\r\n---\n\nCo-authored-by: Owen Avery <powerboat9.gamer@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6c79054f8f85b148f21576feb15e3246936827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e6c79054f8f85b148f21576feb15e3246936827", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6c79054f8f85b148f21576feb15e3246936827/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f9f77f9dd6330fe60554400133d7217f78afa43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9f77f9dd6330fe60554400133d7217f78afa43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9f77f9dd6330fe60554400133d7217f78afa43"}, {"sha": "dc31146d6392c620a31b0f3e3625224ca4afb3cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc31146d6392c620a31b0f3e3625224ca4afb3cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc31146d6392c620a31b0f3e3625224ca4afb3cd"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "5e7ab3195c3747747cf1b953b7e37971151c87a3", "filename": "gcc/rust/backend/rust-compile-base.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6c79054f8f85b148f21576feb15e3246936827/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6c79054f8f85b148f21576feb15e3246936827/gcc%2Frust%2Fbackend%2Frust-compile-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-base.cc?ref=9e6c79054f8f85b148f21576feb15e3246936827", "patch": "@@ -457,9 +457,7 @@ HIRCompileBase::compile_locals_for_block (Context *ctx, Resolver::Rib &rib,\n \n       // compile the local\n       tree type = TyTyResolveCompile::compile (ctx, tyty);\n-      Bvariable *compiled\n-\t= CompileVarDecl::compile (fndecl, type, pattern, ctx);\n-      locals.push_back (compiled);\n+      CompileVarDecl::compile (fndecl, type, pattern, locals, ctx);\n     }\n   return locals;\n }"}, {"sha": "a1dee2d770b0853699b769ccba194adb095a686a", "filename": "gcc/rust/backend/rust-compile-var-decl.h", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6c79054f8f85b148f21576feb15e3246936827/gcc%2Frust%2Fbackend%2Frust-compile-var-decl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6c79054f8f85b148f21576feb15e3246936827/gcc%2Frust%2Fbackend%2Frust-compile-var-decl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-var-decl.h?ref=9e6c79054f8f85b148f21576feb15e3246936827", "patch": "@@ -30,39 +30,42 @@ class CompileVarDecl : public HIRCompileBase, public HIR::HIRPatternVisitor\n   using HIR::HIRPatternVisitor::visit;\n \n public:\n-  static ::Bvariable *compile (tree fndecl, tree translated_type,\n-\t\t\t       HIR::Pattern *pattern, Context *ctx)\n+  static void compile (tree fndecl, tree translated_type, HIR::Pattern *pattern,\n+\t\t       std::vector<Bvariable *> &locals, Context *ctx)\n   {\n-    CompileVarDecl compiler (ctx, fndecl, translated_type);\n+    CompileVarDecl compiler (ctx, fndecl, translated_type, locals);\n     pattern->accept_vis (compiler);\n-    return compiler.compiled_variable;\n   }\n \n   void visit (HIR::IdentifierPattern &pattern) override\n   {\n     if (!pattern.is_mut ())\n       translated_type = ctx->get_backend ()->immutable_type (translated_type);\n \n-    compiled_variable\n+    Bvariable *var\n       = ctx->get_backend ()->local_variable (fndecl, pattern.get_identifier (),\n \t\t\t\t\t     translated_type, NULL /*decl_var*/,\n \t\t\t\t\t     pattern.get_locus ());\n \n     HirId stmt_id = pattern.get_pattern_mappings ().get_hirid ();\n-    ctx->insert_var_decl (stmt_id, compiled_variable);\n+    ctx->insert_var_decl (stmt_id, var);\n+\n+    locals.push_back (var);\n   }\n \n   void visit (HIR::WildcardPattern &pattern) override\n   {\n     translated_type = ctx->get_backend ()->immutable_type (translated_type);\n \n-    compiled_variable\n+    Bvariable *var\n       = ctx->get_backend ()->local_variable (fndecl, \"_\", translated_type,\n \t\t\t\t\t     NULL /*decl_var*/,\n \t\t\t\t\t     pattern.get_locus ());\n \n     HirId stmt_id = pattern.get_pattern_mappings ().get_hirid ();\n-    ctx->insert_var_decl (stmt_id, compiled_variable);\n+    ctx->insert_var_decl (stmt_id, var);\n+\n+    locals.push_back (var);\n   }\n \n   // Empty visit for unused Pattern HIR nodes.\n@@ -78,15 +81,16 @@ class CompileVarDecl : public HIRCompileBase, public HIR::HIRPatternVisitor\n   void visit (HIR::TupleStructPattern &) override {}\n \n private:\n-  CompileVarDecl (Context *ctx, tree fndecl, tree translated_type)\n+  CompileVarDecl (Context *ctx, tree fndecl, tree translated_type,\n+\t\t  std::vector<Bvariable *> &locals)\n     : HIRCompileBase (ctx), fndecl (fndecl), translated_type (translated_type),\n-      compiled_variable (ctx->get_backend ()->error_variable ())\n+      locals (locals)\n   {}\n \n   tree fndecl;\n   tree translated_type;\n \n-  Bvariable *compiled_variable;\n+  std::vector<Bvariable *> &locals;\n };\n \n } // namespace Compile"}]}