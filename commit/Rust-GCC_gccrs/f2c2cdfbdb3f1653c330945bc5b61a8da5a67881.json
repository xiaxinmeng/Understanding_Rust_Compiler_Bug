{"sha": "f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJjMmNkZmJkYjNmMTY1M2MzMzA5NDViYzViNjFhOGRhNWE2Nzg4MQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-07-17T08:07:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-17T08:07:59Z"}, "message": "[Ada] Minor reformatting\n\n2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch13.adb, exp_ch7.adb, exp_unst.adb, freeze.adb,\n\tlibgnat/s-os_lib.adb, sem_ch3.adb, sem_ch3.ads, sem_ch5.adb,\n\tsem_eval.adb, sem_res.adb, sem_util.adb: Minor reformatting.\n\nFrom-SVN: r262786", "tree": {"sha": "12de736e88d6b03d55aabb8b41f0c20d75fdd339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12de736e88d6b03d55aabb8b41f0c20d75fdd339"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4d29736249cc9c5e62b0f8b3ecfed1a93b6d73d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d29736249cc9c5e62b0f8b3ecfed1a93b6d73d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4d29736249cc9c5e62b0f8b3ecfed1a93b6d73d"}], "stats": {"total": 286, "additions": 153, "deletions": 133}, "files": [{"sha": "c41693033a0b8314b5001dc0008ce16e26874cc0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -1,3 +1,9 @@\n+2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch13.adb, exp_ch7.adb, exp_unst.adb, freeze.adb,\n+\tlibgnat/s-os_lib.adb, sem_ch3.adb, sem_ch3.ads, sem_ch5.adb,\n+\tsem_eval.adb, sem_res.adb, sem_util.adb: Minor reformatting.\n+\n 2018-07-17  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_ch13.adb (Expand_N_Freeze_Entity): Handle subtype declared for an"}, {"sha": "4f95fc8275f3034476e058d5b66bf72314e1f36b", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -471,7 +471,7 @@ package body Exp_Ch13 is\n       then\n          E_Scope := Scope (E_Scope);\n \n-      --  The entity may be a subtype declared for an iterator.\n+      --  The entity may be a subtype declared for an iterator\n \n       elsif Ekind (E_Scope) = E_Loop then\n          E_Scope := Scope (E_Scope);"}, {"sha": "eb352c33bfba9d8a9a02be8d82a69e6d08a12def", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 36, "deletions": 30, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -3989,21 +3989,19 @@ package body Exp_Ch7 is\n    --------------------------------------\n \n    procedure Check_Unnesting_Elaboration_Code (N : Node_Id) is\n-      Loc       : constant Source_Ptr := Sloc (N);\n-      Elab_Body : Node_Id;\n-      Elab_Call : Node_Id;\n-      Elab_Proc : Entity_Id;\n-      Stat      : Node_Id;\n+      Loc : constant Source_Ptr := Sloc (N);\n+\n       function Contains_Subprogram (Blk : Entity_Id) return Boolean;\n-      --  Check recursively whether a loop or block contains a subprogram\n-      --  that may need an activation record.\n+      --  Check recursively whether a loop or block contains a subprogram that\n+      --  may need an activation record.\n \n       --------------------------\n       --  Contains_Subprogram --\n       --------------------------\n \n       function Contains_Subprogram (Blk : Entity_Id) return Boolean is\n          E : Entity_Id;\n+\n       begin\n          E := First_Entity (Blk);\n \n@@ -4023,6 +4021,15 @@ package body Exp_Ch7 is\n          return False;\n       end Contains_Subprogram;\n \n+      --  Local variables\n+\n+      Elab_Body : Node_Id;\n+      Elab_Call : Node_Id;\n+      Elab_Proc : Entity_Id;\n+      Stat      : Node_Id;\n+\n+   --  Start of processing for Check_Unnesting_Elaboration_Code\n+\n    begin\n       if Unnest_Subprogram_Mode\n         and then Present (Handled_Statement_Sequence (N))\n@@ -8695,32 +8702,11 @@ package body Exp_Ch7 is\n       Action : Node_Id;\n       Par    : Node_Id) return Node_Id\n    is\n-      function Within_Loop_Statement (N : Node_Id) return Boolean;\n-      --  Return True when N appears within a loop and no block is containing N\n-\n       function Manages_Sec_Stack (Id : Entity_Id) return Boolean;\n       --  Determine whether scoping entity Id manages the secondary stack\n \n-      ---------------------------\n-      -- Within_Loop_Statement --\n-      ---------------------------\n-\n-      function Within_Loop_Statement (N : Node_Id) return Boolean is\n-         Par : Node_Id := Parent (N);\n-\n-      begin\n-         while not (Nkind_In (Par,\n-                              N_Loop_Statement,\n-                              N_Handled_Sequence_Of_Statements,\n-                              N_Package_Specification)\n-                      or else Nkind (Par) in N_Proper_Body)\n-         loop\n-            pragma Assert (Present (Par));\n-            Par := Parent (Par);\n-         end loop;\n-\n-         return Nkind (Par) = N_Loop_Statement;\n-      end Within_Loop_Statement;\n+      function Within_Loop_Statement (N : Node_Id) return Boolean;\n+      --  Return True when N appears within a loop and no block is containing N\n \n       -----------------------\n       -- Manages_Sec_Stack --\n@@ -8751,6 +8737,26 @@ package body Exp_Ch7 is\n          end case;\n       end Manages_Sec_Stack;\n \n+      ---------------------------\n+      -- Within_Loop_Statement --\n+      ---------------------------\n+\n+      function Within_Loop_Statement (N : Node_Id) return Boolean is\n+         Par : Node_Id := Parent (N);\n+\n+      begin\n+         while not (Nkind_In (Par, N_Handled_Sequence_Of_Statements,\n+                                   N_Loop_Statement,\n+                                   N_Package_Specification)\n+                      or else Nkind (Par) in N_Proper_Body)\n+         loop\n+            pragma Assert (Present (Par));\n+            Par := Parent (Par);\n+         end loop;\n+\n+         return Nkind (Par) = N_Loop_Statement;\n+      end Within_Loop_Statement;\n+\n       --  Local variables\n \n       Decls    : constant List_Id   := New_List;"}, {"sha": "9f54eb2bd8d0c647915218675b16dabfd5b559f9", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -711,11 +711,11 @@ package body Exp_Unst is\n             procedure Register_Subprogram (E : Entity_Id; Bod : Node_Id) is\n                L : constant Nat := Get_Level (Subp, E);\n \n-            --  Subprograms declared in tasks and protected types cannot\n-            --  be eliminated because calls to them may be in other units,\n-            --  so they must be treated as reachable.\n-\n             begin\n+               --  Subprograms declared in tasks and protected types cannot\n+               --  be eliminated because calls to them may be in other units,\n+               --  so they must be treated as reachable.\n+\n                Subps.Append\n                  ((Ent           => E,\n                    Bod           => Bod,"}, {"sha": "c0da0eb3ccbc686f80950aacdf0b673b9960b594", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -7027,13 +7027,14 @@ package body Freeze is\n       --  Local variables\n \n       In_Spec_Exp : constant Boolean := In_Spec_Expression;\n-      Typ         : Entity_Id;\n-      Nam         : Entity_Id;\n-      Desig_Typ   : Entity_Id;\n-      P           : Node_Id;\n-      Parent_P    : Node_Id;\n \n-      Freeze_Outside       : Boolean := False;\n+      Desig_Typ : Entity_Id;\n+      Nam       : Entity_Id;\n+      P         : Node_Id;\n+      Parent_P  : Node_Id;\n+      Typ       : Entity_Id;\n+\n+      Freeze_Outside : Boolean := False;\n       --  This flag is set true if the entity must be frozen outside the\n       --  current subprogram. This happens in the case of expander generated\n       --  subprograms (_Init_Proc, _Input, _Output, _Read, _Write) which do\n@@ -7090,8 +7091,8 @@ package body Freeze is\n          if not Is_Frozen (Etype (N)) then\n             Typ := Etype (N);\n \n-         --  Base type may be an derived numeric type that is frozen at\n-         --  the point of declaration, but first_subtype is still unfrozen.\n+         --  Base type may be an derived numeric type that is frozen at the\n+         --  point of declaration, but first_subtype is still unfrozen.\n \n          elsif not Is_Frozen (First_Subtype (Etype (N))) then\n             Typ := First_Subtype (Etype (N));\n@@ -7147,8 +7148,7 @@ package body Freeze is\n             if Is_Array_Type (Etype (N))\n               and then Is_Access_Type (Component_Type (Etype (N)))\n             then\n-\n-               --  Check whether aggregate includes allocators.\n+               --  Check whether aggregate includes allocators\n \n                Desig_Typ := Find_Aggregate_Component_Desig_Type;\n             end if;\n@@ -7224,7 +7224,7 @@ package body Freeze is\n          end;\n       end if;\n \n-      --  Examine the enclosing context by climbing the parent chain.\n+      --  Examine the enclosing context by climbing the parent chain\n \n       --  If we identified that we must freeze the entity outside of a given\n       --  subprogram then we just climb up to that subprogram checking if some\n@@ -7254,8 +7254,10 @@ package body Freeze is\n                return;\n             end if;\n \n-            exit when Nkind (Parent_P) = N_Subprogram_Body\n-              and then Unique_Defining_Entity (Parent_P) = Freeze_Outside_Subp;\n+            exit when\n+              Nkind (Parent_P) = N_Subprogram_Body\n+                and then Unique_Defining_Entity (Parent_P) =\n+                           Freeze_Outside_Subp;\n \n             P := Parent_P;\n          end loop;\n@@ -7354,10 +7356,10 @@ package body Freeze is\n                      --  function call for overloading analysis purposes.\n \n                      elsif Nkind (Parent (N)) = N_Function_Call\n-                        and then\n-                          Nkind (Parent (Parent (N))) = N_Component_Association\n-                        and then\n-                          First (Choices (Parent (Parent (N)))) = Parent (N)\n+                        and then Nkind (Parent (Parent (N))) =\n+                                   N_Component_Association\n+                        and then First (Choices (Parent (Parent (N)))) =\n+                                   Parent (N)\n                      then\n                         return;\n                      end if;"}, {"sha": "b896daf24f11bd0b8b40306f890a8aef841ea46d", "filename": "gcc/ada/libgnat/s-os_lib.adb", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Flibgnat%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Flibgnat%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-os_lib.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -178,6 +178,7 @@ package body System.OS_Lib is\n \n       return Len;\n    end Args_Length;\n+\n    -----------------------------\n    -- Argument_String_To_List --\n    -----------------------------\n@@ -186,22 +187,22 @@ package body System.OS_Lib is\n      (Arg_String : String) return Argument_List_Access\n    is\n       Max_Args : constant Integer := Arg_String'Length;\n-      New_Argv : Argument_List (1 .. Max_Args);\n+\n+      Backslash_Is_Sep : constant Boolean := Directory_Separator = '\\';\n+      --  Whether '\\' is a directory separator (as on Windows), or a way to\n+      --  quote special characters.\n+\n+      Backqd   : Boolean := False;\n       Idx      : Integer;\n       New_Argc : Natural := 0;\n-\n-      Backqd : Boolean := False;\n-      Quoted : Boolean := False;\n+      New_Argv : Argument_List (1 .. Max_Args);\n+      Quoted   : Boolean := False;\n \n       Cleaned     : String (1 .. Arg_String'Length);\n       Cleaned_Idx : Natural;\n       --  A cleaned up version of the argument. This function is taking\n-      --  backslash escapes when computing the bounds for arguments. It is\n-      --  then removing the extra backslashes from the argument.\n-\n-      Backslash_Is_Sep : constant Boolean := Directory_Separator = '\\';\n-      --  Whether '\\' is a directory separator (as on Windows), or a way to\n-      --  quote special characters.\n+      --  backslash escapes when computing the bounds for arguments. It\n+      --  is then removing the extra backslashes from the argument.\n \n    begin\n       Idx := Arg_String'First;\n@@ -222,25 +223,19 @@ package body System.OS_Lib is\n          loop\n             --  An unquoted space is the end of an argument\n \n-            if not (Backqd or Quoted)\n-              and then Arg_String (Idx) = ' '\n-            then\n+            if not (Backqd or Quoted) and then Arg_String (Idx) = ' ' then\n                exit;\n \n             --  Start of a quoted string\n \n-            elsif not (Backqd or Quoted)\n-              and then Arg_String (Idx) = '\"'\n-            then\n+            elsif not (Backqd or Quoted) and then Arg_String (Idx) = '\"' then\n                Quoted := True;\n                Cleaned (Cleaned_Idx) := Arg_String (Idx);\n                Cleaned_Idx := Cleaned_Idx + 1;\n \n             --  End of a quoted string and end of an argument\n \n-            elsif (Quoted and not Backqd)\n-              and then Arg_String (Idx) = '\"'\n-            then\n+            elsif (Quoted and not Backqd) and then Arg_String (Idx) = '\"' then\n                Cleaned (Cleaned_Idx) := Arg_String (Idx);\n                Cleaned_Idx := Cleaned_Idx + 1;\n                Idx := Idx + 1;"}, {"sha": "349ece787613136aff383d39ef31920af4f4ee32", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -19824,10 +19824,13 @@ package body Sem_Ch3 is\n    procedure Preanalyze_Default_Expression (N : Node_Id; T : Entity_Id) is\n       Save_In_Default_Expr    : constant Boolean := In_Default_Expr;\n       Save_In_Spec_Expression : constant Boolean := In_Spec_Expression;\n+\n    begin\n       In_Default_Expr    := True;\n       In_Spec_Expression := True;\n+\n       Preanalyze_With_Freezing_And_Resolve (N, T);\n+\n       In_Default_Expr    := Save_In_Default_Expr;\n       In_Spec_Expression := Save_In_Spec_Expression;\n    end Preanalyze_Default_Expression;"}, {"sha": "70daae843e0962f9fcf7bb72e3bc8ae19b858967", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -236,6 +236,10 @@ package Sem_Ch3 is\n    --  Always False in Ada 95 mode. Equivalent to OK_For_Limited_Init_In_05 in\n    --  Ada 2005 mode.\n \n+   procedure Preanalyze_Assert_Expression (N : Node_Id; T : Entity_Id);\n+   --  Wrapper on Preanalyze_Spec_Expression for assertion expressions, so that\n+   --  In_Assertion_Expr can be properly adjusted.\n+\n    procedure Preanalyze_Spec_Expression (N : Node_Id; T : Entity_Id);\n    --  Default and per object expressions do not freeze their components, and\n    --  must be analyzed and resolved accordingly. The analysis is done by\n@@ -246,10 +250,6 @@ package Sem_Ch3 is\n    --  This mechanism is also used for aspect specifications that have an\n    --  expression parameter that needs similar preanalysis.\n \n-   procedure Preanalyze_Assert_Expression (N : Node_Id; T : Entity_Id);\n-   --  Wrapper on Preanalyze_Spec_Expression for assertion expressions, so that\n-   --  In_Assertion_Expr can be properly adjusted.\n-\n    procedure Process_Full_View (N : Node_Id; Full_T, Priv_T : Entity_Id);\n    --  Process some semantic actions when the full view of a private type is\n    --  encountered and analyzed. The first action is to create the full views"}, {"sha": "f35b37d9c36bbf821361936fad8d6b5cd017daf4", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -3594,36 +3594,38 @@ package body Sem_Ch5 is\n         and then not Is_Wrapped_In_Block (N)\n       then\n          declare\n-            LPS       : constant Node_Id :=\n-                          Loop_Parameter_Specification (Iter);\n-            DSD       : constant Node_Id :=\n-                          Original_Node (Discrete_Subtype_Definition (LPS));\n-            Block_Nod : Node_Id;\n+            LPS : constant Node_Id := Loop_Parameter_Specification (Iter);\n+            DSD : constant Node_Id :=\n+                    Original_Node (Discrete_Subtype_Definition (LPS));\n+\n             Block_Id  : Entity_Id;\n+            Block_Nod : Node_Id;\n             HB        : Node_Id;\n             LB        : Node_Id;\n \n          begin\n             if Nkind (DSD) = N_Subtype_Indication\n               and then Nkind (Range_Expression (Constraint (DSD))) = N_Range\n             then\n-               LB := New_Copy_Tree\n-                       (Low_Bound (Range_Expression (Constraint (DSD))));\n-               HB := New_Copy_Tree\n-                       (High_Bound (Range_Expression (Constraint (DSD))));\n+               LB :=\n+                 New_Copy_Tree\n+                   (Low_Bound (Range_Expression (Constraint (DSD))));\n+               HB :=\n+                 New_Copy_Tree\n+                   (High_Bound (Range_Expression (Constraint (DSD))));\n \n                Preanalyze (LB);\n                Preanalyze (HB);\n \n                if Has_Call_Using_Secondary_Stack (LB)\n-                    or else Has_Call_Using_Secondary_Stack (HB)\n+                 or else Has_Call_Using_Secondary_Stack (HB)\n                then\n                   Block_Nod :=\n                     Make_Block_Statement (Loc,\n-                      Declarations => New_List,\n-                    Handled_Statement_Sequence =>\n-                      Make_Handled_Sequence_Of_Statements (Loc,\n-                        Statements => New_List (Relocate_Node (N))));\n+                      Declarations               => New_List,\n+                      Handled_Statement_Sequence =>\n+                        Make_Handled_Sequence_Of_Statements (Loc,\n+                          Statements => New_List (Relocate_Node (N))));\n \n                   Add_Block_Identifier (Block_Nod, Block_Id);\n                   Set_Uses_Sec_Stack (Block_Id);"}, {"sha": "2bdf73d72de660385577403689dc2de579341525", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -2733,7 +2733,7 @@ package body Sem_Eval is\n       --  Check_Non_Static_Context on an expanded literal may lead to spurious\n       --  and misleading warnings.\n \n-      if (Nkind_In (Par, N_If_Expression, N_Case_Expression_Alternative)\n+      if (Nkind_In (Par, N_Case_Expression_Alternative, N_If_Expression)\n            or else Nkind (Parent (N)) not in N_Subexpr)\n         and then (not Nkind_In (Par, N_Case_Expression_Alternative,\n                                      N_If_Expression)"}, {"sha": "b45e917a308b41cab86441e29bbf85a38076200f", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -1739,7 +1739,9 @@ package body Sem_Res is\n    -- Preanalyze_With_Freezing_And_Resolve --\n    ------------------------------------------\n \n-   procedure Preanalyze_With_Freezing_And_Resolve (N : Node_Id; T : Entity_Id)\n+   procedure Preanalyze_With_Freezing_And_Resolve\n+     (N : Node_Id;\n+      T : Entity_Id)\n    is\n    begin\n       Preanalyze_And_Resolve (N, T, With_Freezing => True);"}, {"sha": "bfa2b4fb141fa2e81e5144f94d30e08487ec633f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 46, "deletions": 42, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c2cdfbdb3f1653c330945bc5b61a8da5a67881/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=f2c2cdfbdb3f1653c330945bc5b61a8da5a67881", "patch": "@@ -6894,61 +6894,60 @@ package body Sem_Util is\n    --------------------------\n \n    function Enclosing_Subprogram (E : Entity_Id) return Entity_Id is\n-      Dynamic_Scope : constant Entity_Id := Enclosing_Dynamic_Scope (E);\n+      Dyn_Scop : constant Entity_Id := Enclosing_Dynamic_Scope (E);\n \n    begin\n-      if Dynamic_Scope = Standard_Standard then\n+      if Dyn_Scop = Standard_Standard then\n          return Empty;\n \n-      elsif Dynamic_Scope = Empty then\n+      elsif Dyn_Scop = Empty then\n          return Empty;\n \n-      elsif Ekind (Dynamic_Scope) = E_Subprogram_Body then\n-         return Corresponding_Spec (Parent (Parent (Dynamic_Scope)));\n+      elsif Ekind (Dyn_Scop) = E_Subprogram_Body then\n+         return Corresponding_Spec (Parent (Parent (Dyn_Scop)));\n \n-      elsif Ekind_In (Dynamic_Scope, E_Block, E_Return_Statement) then\n-         return Enclosing_Subprogram (Dynamic_Scope);\n+      elsif Ekind_In (Dyn_Scop, E_Block, E_Return_Statement) then\n+         return Enclosing_Subprogram (Dyn_Scop);\n \n-      elsif Ekind (Dynamic_Scope) = E_Entry then\n+      elsif Ekind (Dyn_Scop) = E_Entry then\n \n          --  For a task entry, return the enclosing subprogram of the\n          --  task itself.\n \n-         if Ekind (Scope (Dynamic_Scope)) = E_Task_Type then\n-            return Enclosing_Subprogram (Dynamic_Scope);\n+         if Ekind (Scope (Dyn_Scop)) = E_Task_Type then\n+            return Enclosing_Subprogram (Dyn_Scop);\n \n-         --  A protected entry is rewritten as a protected procedure\n-         --  which is the desired enclosing subprogram. This is relevant\n-         --  when unnesting a procedure local to an entry body\n+         --  A protected entry is rewritten as a protected procedure which is\n+         --  the desired enclosing subprogram. This is relevant when unnesting\n+         --  a procedure local to an entry body.\n \n          else\n-            return Protected_Body_Subprogram (Dynamic_Scope);\n+            return Protected_Body_Subprogram (Dyn_Scop);\n          end if;\n \n-      elsif Ekind (Dynamic_Scope) = E_Task_Type then\n-         return Get_Task_Body_Procedure (Dynamic_Scope);\n+      elsif Ekind (Dyn_Scop) = E_Task_Type then\n+         return Get_Task_Body_Procedure (Dyn_Scop);\n \n       --  The scope may appear as a private type or as a private extension\n       --  whose completion is a task or protected type.\n \n-      elsif Ekind_In (Dynamic_Scope,\n-              E_Limited_Private_Type, E_Record_Type_With_Private)\n-        and then Present (Full_View (Dynamic_Scope))\n-        and then Ekind_In (Full_View (Dynamic_Scope),\n-                            E_Task_Type, E_Protected_Type)\n+      elsif Ekind_In (Dyn_Scop, E_Limited_Private_Type,\n+                                E_Record_Type_With_Private)\n+        and then Present (Full_View (Dyn_Scop))\n+        and then Ekind_In (Full_View (Dyn_Scop), E_Task_Type, E_Protected_Type)\n       then\n-         return Get_Task_Body_Procedure (Full_View (Dynamic_Scope));\n+         return Get_Task_Body_Procedure (Full_View (Dyn_Scop));\n \n       --  No body is generated if the protected operation is eliminated\n \n-      elsif Convention (Dynamic_Scope) = Convention_Protected\n-        and then not Is_Eliminated (Dynamic_Scope)\n-        and then Present (Protected_Body_Subprogram (Dynamic_Scope))\n+      elsif Convention (Dyn_Scop) = Convention_Protected\n+        and then not Is_Eliminated (Dyn_Scop)\n+        and then Present (Protected_Body_Subprogram (Dyn_Scop))\n       then\n-         return Protected_Body_Subprogram (Dynamic_Scope);\n+         return Protected_Body_Subprogram (Dyn_Scop);\n \n       else\n-         return Dynamic_Scope;\n+         return Dyn_Scop;\n       end if;\n    end Enclosing_Subprogram;\n \n@@ -8823,18 +8822,19 @@ package body Sem_Util is\n       Assoc := First (Governed_By);\n       Find_Constraint : loop\n          Discrim := First (Choices (Assoc));\n-         exit Find_Constraint when Chars (Discrim_Name) = Chars (Discrim)\n-           or else (Present (Corresponding_Discriminant (Entity (Discrim)))\n-                     and then\n-                       Chars (Corresponding_Discriminant (Entity (Discrim))) =\n-                                                       Chars  (Discrim_Name))\n-           or else Chars (Original_Record_Component (Entity (Discrim)))\n-                         = Chars (Discrim_Name);\n+         exit Find_Constraint when\n+           Chars (Discrim_Name) = Chars (Discrim)\n+             or else\n+               (Present (Corresponding_Discriminant (Entity (Discrim)))\n+                 and then Chars (Corresponding_Discriminant\n+                            (Entity (Discrim))) = Chars  (Discrim_Name))\n+             or else\n+               Chars (Original_Record_Component (Entity (Discrim))) =\n+                 Chars (Discrim_Name);\n \n          if No (Next (Assoc)) then\n-            if not Is_Constrained (Typ)\n-              and then Is_Derived_Type (Typ)\n-            then\n+            if not Is_Constrained (Typ) and then Is_Derived_Type (Typ) then\n+\n                --  If the type is a tagged type with inherited discriminants,\n                --  use the stored constraint on the parent in order to find\n                --  the values of discriminants that are otherwise hidden by an\n@@ -8853,8 +8853,8 @@ package body Sem_Util is\n                --  value.\n \n                declare\n-                  D : Entity_Id;\n                   C : Elmt_Id;\n+                  D : Entity_Id;\n                   T : Entity_Id := Typ;\n \n                begin\n@@ -8879,6 +8879,7 @@ package body Sem_Util is\n                                        (New_Occurrence_Of (D, Sloc (Typ))),\n                                      Duplicate_Subexpr_No_Checks (Node (C)));\n                               end if;\n+\n                               exit Find_Constraint;\n                            end if;\n \n@@ -8888,15 +8889,18 @@ package body Sem_Util is\n                      end if;\n \n                      --  Discriminant may be inherited from ancestor\n+\n                      T := Etype (T);\n                   end loop;\n                end;\n             end if;\n          end if;\n \n          if No (Next (Assoc)) then\n-            Error_Msg_NE (\" missing value for discriminant&\",\n-              First (Governed_By), Discrim_Name);\n+            Error_Msg_NE\n+              (\" missing value for discriminant&\",\n+               First (Governed_By), Discrim_Name);\n+\n             Report_Errors := True;\n             return;\n          end if;\n@@ -21043,8 +21047,8 @@ package body Sem_Util is\n    -----------------\n \n    function Next_Actual (Actual_Id : Node_Id) return Node_Id is\n-      N   : Node_Id;\n       Par : constant Node_Id := Parent (Actual_Id);\n+      N   : Node_Id;\n \n    begin\n       --  If we are pointing at a positional parameter, it is a member of a\n@@ -24029,7 +24033,7 @@ package body Sem_Util is\n          then\n             return True;\n \n-         --  Ditto for the body of a protected operation.\n+         --  Ditto for the body of a protected operation\n \n          elsif Is_Subprogram (Curr)\n            and then Outer = Protected_Body_Subprogram (Curr)"}]}