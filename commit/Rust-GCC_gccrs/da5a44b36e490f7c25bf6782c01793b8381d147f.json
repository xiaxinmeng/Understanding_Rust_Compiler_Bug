{"sha": "da5a44b36e490f7c25bf6782c01793b8381d147f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE1YTQ0YjM2ZTQ5MGY3YzI1YmY2NzgyYzAxNzkzYjgzODFkMTQ3Zg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "crux@pool.informatik.rwth-aachen.de", "date": "1998-10-05T20:20:39Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-05T20:20:39Z"}, "message": "* loop.c (combine_givs_p): Fix test for identical givs.\n\nFrom-SVN: r22845", "tree": {"sha": "6ea2abfbb5492d4e5e390263c8418e5bc0bf3dab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ea2abfbb5492d4e5e390263c8418e5bc0bf3dab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da5a44b36e490f7c25bf6782c01793b8381d147f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da5a44b36e490f7c25bf6782c01793b8381d147f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da5a44b36e490f7c25bf6782c01793b8381d147f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da5a44b36e490f7c25bf6782c01793b8381d147f/comments", "author": null, "committer": null, "parents": [{"sha": "5d7d0cae2fc5628a6c2c34c4d55763ed3cbb2288", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7d0cae2fc5628a6c2c34c4d55763ed3cbb2288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7d0cae2fc5628a6c2c34c4d55763ed3cbb2288"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "f42f2f97c00a934da478882febe2062d81d6f29c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da5a44b36e490f7c25bf6782c01793b8381d147f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da5a44b36e490f7c25bf6782c01793b8381d147f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da5a44b36e490f7c25bf6782c01793b8381d147f", "patch": "@@ -1,3 +1,7 @@\n+Mon Oct  5 21:18:45 1998  Bernd Schmidt <crux@Pool.Informatik.RWTH-Aachen.DE>\n+\n+\t* loop.c (combine_givs_p): Fix test for identical givs.\n+\n Mon Oct  5 10:11:28 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* dwarf2out.c (gen_subprogram_die): If errorcount nonzero, don't"}, {"sha": "97744573c60f570e888914c185f825d35e4c8fa5", "filename": "gcc/loop.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da5a44b36e490f7c25bf6782c01793b8381d147f/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da5a44b36e490f7c25bf6782c01793b8381d147f/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=da5a44b36e490f7c25bf6782c01793b8381d147f", "patch": "@@ -6299,10 +6299,10 @@ express_from (g1, g2)\n     return gen_rtx_PLUS (g2->mode, mult, add);\n }\n \f\n-/* Return 1 if giv G2 can be combined with G1.  This means that G2 can use\n-   (either directly or via an address expression) a register used to represent\n-   G1.  Set g2->new_reg to a represtation of G1 (normally just\n-   g1->dest_reg).  */\n+/* Return an rtx, if any, that expresses giv G2 as a function of the register\n+   represented by G1.  This indicates that G2 should be combined with G1 and\n+   that G2 can use (either directly or via an address expression) a register\n+   used to represent G1.  */\n \n static rtx\n combine_givs_p (g1, g2)\n@@ -6313,7 +6313,7 @@ combine_givs_p (g1, g2)\n   /* If these givs are identical, they can be combined.  We use the results\n      of express_from because the addends are not in a canonical form, so\n      rtx_equal_p is a weaker test.  */\n-  if (tem == const0_rtx)\n+  if (tem == g1->dest_reg)\n     {\n       return g1->dest_reg;\n     }"}]}