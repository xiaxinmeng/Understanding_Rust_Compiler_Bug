{"sha": "f92076037c2930954aebaea4e0e66f18cdcc833c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkyMDc2MDM3YzI5MzA5NTRhZWJhZWE0ZTBlNjZmMThjZGNjODMzYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-08-12T02:25:20Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-08-12T02:25:20Z"}, "message": "(hash_is_key_in_hash): Function somehow got lost.\n\nFrom-SVN: r12614", "tree": {"sha": "0a94403e7a9d8086e63441da4b62d4925195d6d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a94403e7a9d8086e63441da4b62d4925195d6d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f92076037c2930954aebaea4e0e66f18cdcc833c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f92076037c2930954aebaea4e0e66f18cdcc833c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f92076037c2930954aebaea4e0e66f18cdcc833c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f92076037c2930954aebaea4e0e66f18cdcc833c/comments", "author": null, "committer": null, "parents": [{"sha": "3e2b54f56db22dc9d0d9ba826e26c5ac6b9afbd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2b54f56db22dc9d0d9ba826e26c5ac6b9afbd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e2b54f56db22dc9d0d9ba826e26c5ac6b9afbd6"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "6d67aa00ab0d606ade393f5b186570cd151a16e2", "filename": "gcc/objc/hash.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f92076037c2930954aebaea4e0e66f18cdcc833c/gcc%2Fobjc%2Fhash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f92076037c2930954aebaea4e0e66f18cdcc833c/gcc%2Fobjc%2Fhash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fhash.c?ref=f92076037c2930954aebaea4e0e66f18cdcc833c", "patch": "@@ -251,3 +251,22 @@ hash_value_for_key (cache_ptr cache, const void *key)\n \n   return retval;\n }\n+\n+/* Given KEY, return YES if it exists in the CACHE.\n+   Return NO if it does not */\n+\n+BOOL\n+hash_is_key_in_hash (cache_ptr cache, const void *key)\n+{\n+  node_ptr node = cache->node_table[(*cache->hash_func)(cache, key)];\n+\n+  if (node)\n+    do {\n+      if ((*cache->compare_func)(node->key, key))\n+\t  return YES;\n+      else\n+        node = node->next;\n+    } while (node);\n+\n+  return NO;\n+}"}]}