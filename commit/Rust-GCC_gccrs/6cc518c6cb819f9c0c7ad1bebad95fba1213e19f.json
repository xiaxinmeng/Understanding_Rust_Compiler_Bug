{"sha": "6cc518c6cb819f9c0c7ad1bebad95fba1213e19f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNjNTE4YzZjYjgxOWY5YzBjN2FkMWJlYmFkOTVmYmExMjEzZTE5Zg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@cavium.com", "date": "2017-07-31T21:44:34Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2017-07-31T21:44:34Z"}, "message": "re PR tree-optimization/80925 (vect peeling failures)\n\n2017-07-31  Steve Ellcey  <sellcey@cavium.com>\n\n\tPR tree-optimization/80925\n\t* gcc.dg/vect/no-section-anchors-vect-69.c: Add \n\t--param vect-max-peeling-for-alignment=0 option.\n\tRemove unaligned access and peeling checks.\n\t* gcc.dg/vect/section-anchors-vect-69.c: Ditto.\n\nFrom-SVN: r250752", "tree": {"sha": "524a449afaa16f3e4821379219ea20333abf17bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/524a449afaa16f3e4821379219ea20333abf17bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f/comments", "author": {"login": "sellcey", "id": 25938520, "node_id": "MDQ6VXNlcjI1OTM4NTIw", "avatar_url": "https://avatars.githubusercontent.com/u/25938520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sellcey", "html_url": "https://github.com/sellcey", "followers_url": "https://api.github.com/users/sellcey/followers", "following_url": "https://api.github.com/users/sellcey/following{/other_user}", "gists_url": "https://api.github.com/users/sellcey/gists{/gist_id}", "starred_url": "https://api.github.com/users/sellcey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sellcey/subscriptions", "organizations_url": "https://api.github.com/users/sellcey/orgs", "repos_url": "https://api.github.com/users/sellcey/repos", "events_url": "https://api.github.com/users/sellcey/events{/privacy}", "received_events_url": "https://api.github.com/users/sellcey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "24c8e8eb65b6f6c406e2a3247adff83fc7636745", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24c8e8eb65b6f6c406e2a3247adff83fc7636745", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24c8e8eb65b6f6c406e2a3247adff83fc7636745"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "be58e3c877b0aae0b09bfbbab8689afe272496b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6cc518c6cb819f9c0c7ad1bebad95fba1213e19f", "patch": "@@ -1,3 +1,11 @@\n+2017-07-31  Steve Ellcey  <sellcey@cavium.com>\n+\n+\tPR tree-optimization/80925\n+\t* gcc.dg/vect/no-section-anchors-vect-69.c: Add \n+\t--param vect-max-peeling-for-alignment=0 option.\n+\tRemove unaligned access and peeling checks.\n+\t* gcc.dg/vect/section-anchors-vect-69.c: Ditto.\n+\n 2017-07-31  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/builtins-4-runnable.c: Fix dg argument that got"}, {"sha": "1458ba60426e7268e318afcdef93dc160c18cac0", "filename": "gcc/testsuite/gcc.dg/vect/no-section-anchors-vect-69.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-69.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-69.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-69.c?ref=6cc518c6cb819f9c0c7ad1bebad95fba1213e19f", "patch": "@@ -1,5 +1,6 @@\n /* { dg-require-effective-target vect_int } */\n /* { dg-add-options bind_pic_locally } */\n+/* { dg-additional-options \"--param vect-max-peeling-for-alignment=0\" } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -114,7 +115,4 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail { {! vector_alignment_reachable} || { vect_sizes_32B_16B} } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" { target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */"}, {"sha": "26bcf4b0d76517df2cfd772f966abc22c1c7314e", "filename": "gcc/testsuite/gcc.dg/vect/section-anchors-vect-69.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fsection-anchors-vect-69.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cc518c6cb819f9c0c7ad1bebad95fba1213e19f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fsection-anchors-vect-69.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fsection-anchors-vect-69.c?ref=6cc518c6cb819f9c0c7ad1bebad95fba1213e19f", "patch": "@@ -1,4 +1,5 @@\n /* { dg-require-effective-target section_anchors } */\n+/* { dg-additional-options \"--param vect-max-peeling-for-alignment=0\" } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -112,8 +113,6 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" { target vect_int } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* Alignment forced using versioning until the pass that increases alignment\n   is extended to handle structs.  */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { target {vect_int && vector_alignment_reachable } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 4 \"vect\" { target {vect_int && {! vector_alignment_reachable} } } } } */"}]}