{"sha": "71bb2d869202498a24fbb0a40787c912c971d2cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFiYjJkODY5MjAyNDk4YTI0ZmJiMGE0MDc4N2M5MTJjOTcxZDJjYg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-08-20T15:26:56Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-08-20T15:26:56Z"}, "message": "ggc-common.c (ggc_mark_root_tab): New function, split out from...\n\n\t* ggc-common.c (ggc_mark_root_tab): New function, split out from...\n\t(ggc_mark_roots): ...here.\n\nFrom-SVN: r163407", "tree": {"sha": "5cae300ef89647dadc0019c7c30a4ffb2eae6845", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cae300ef89647dadc0019c7c30a4ffb2eae6845"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71bb2d869202498a24fbb0a40787c912c971d2cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71bb2d869202498a24fbb0a40787c912c971d2cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71bb2d869202498a24fbb0a40787c912c971d2cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71bb2d869202498a24fbb0a40787c912c971d2cb/comments", "author": null, "committer": null, "parents": [{"sha": "1d4d95886e98bb684c413c5d8efe463b7c6448aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d4d95886e98bb684c413c5d8efe463b7c6448aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d4d95886e98bb684c413c5d8efe463b7c6448aa"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "b1ad8511f2ff86c7e885de3ab741729b53c51c5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71bb2d869202498a24fbb0a40787c912c971d2cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71bb2d869202498a24fbb0a40787c912c971d2cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71bb2d869202498a24fbb0a40787c912c971d2cb", "patch": "@@ -1,3 +1,8 @@\n+2010-08-20  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* ggc-common.c (ggc_mark_root_tab): New function, split out from...\n+\t(ggc_mark_roots): ...here.\n+\n 2010-08-20  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* vec.h (FOR_EACH_VEC_ELT): Define."}, {"sha": "5b66bb4fa5978d2a81a1b8abe90e0094d455867a", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71bb2d869202498a24fbb0a40787c912c971d2cb/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71bb2d869202498a24fbb0a40787c912c971d2cb/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=71bb2d869202498a24fbb0a40787c912c971d2cb", "patch": "@@ -147,14 +147,25 @@ ggc_scan_cache_tab (const_ggc_cache_tab_t ctp)\n       }\n }\n \n+/* Mark all the roots in the table RT.  */\n+\n+static void\n+ggc_mark_root_tab (const_ggc_root_tab_t rt)\n+{\n+  size_t i;\n+\n+  for ( ; rt->base != NULL; rt++)\n+    for (i = 0; i < rt->nelt; i++)\n+      (*rt->cb) (*(void **) ((char *)rt->base + rt->stride * i));\n+}\n+\n /* Iterate through all registered roots and mark each element.  */\n \n void\n ggc_mark_roots (void)\n {\n   const struct ggc_root_tab *const *rt;\n-  const struct ggc_root_tab *rti;\n-  const_ggc_root_tab_t rtp;\n+  const_ggc_root_tab_t rtp, rti;\n   const struct ggc_cache_tab *const *ct;\n   const_ggc_cache_tab_t ctp;\n   size_t i;\n@@ -164,16 +175,10 @@ ggc_mark_roots (void)\n       memset (rti->base, 0, rti->stride);\n \n   for (rt = gt_ggc_rtab; *rt; rt++)\n-    for (rti = *rt; rti->base != NULL; rti++)\n-      for (i = 0; i < rti->nelt; i++)\n-\t(*rti->cb) (*(void **)((char *)rti->base + rti->stride * i));\n+    ggc_mark_root_tab (*rt);\n \n   FOR_EACH_VEC_ELT (const_ggc_root_tab_t, extra_root_vec, i, rtp)\n-    {\n-      for (rti = rtp; rti->base != NULL; rti++)\n-        for (i = 0; i < rti->nelt; i++)\n-          (*rti->cb) (*(void **) ((char *)rti->base + rti->stride * i));\n-    }\n+    ggc_mark_root_tab (rtp);\n \n   if (ggc_protect_identifiers)\n     ggc_mark_stringpool ();"}]}