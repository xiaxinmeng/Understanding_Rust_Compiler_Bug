{"sha": "87fd6bde4c3a6772dca6920c6bd2f849442eea2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdmZDZiZGU0YzNhNjc3MmRjYTY5MjBjNmJkMmY4NDk0NDJlZWEyZg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2017-12-20T10:30:00Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2017-12-20T10:30:00Z"}, "message": "[arm] PR target/83105: Minor change of default CPU for arm-linux-gnueabi\n\nWhen GCC for ARM/linux is configured with --with-float=hard, or\n--with-float=softfp the compiler will now die when trying to build the\nsupport libraries because the baseline architecture is too old to\nsupport VFP (older versions of GCC just emitted the VFP instructions\nanyway, even though they wouldn't run on that version of the\narchitecture; but we're now more prickly about it).\n\nThis patch fixed the problem by raising the default architecture\n(actually the default CPU) to ARMv5te (ARM10e) when we need to generate\nHW floating-point code.\n\n\tPR target/83105\n\t* config.gcc (arm*-*-linux*): When configured with --with-float=hard\n\tor --with-float=softfp, set the default CPU to arm10e.\n\nFrom-SVN: r255858", "tree": {"sha": "ea1be43e13cae7ddbb54a32e70ac9e455c37b2ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea1be43e13cae7ddbb54a32e70ac9e455c37b2ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87fd6bde4c3a6772dca6920c6bd2f849442eea2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fd6bde4c3a6772dca6920c6bd2f849442eea2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87fd6bde4c3a6772dca6920c6bd2f849442eea2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fd6bde4c3a6772dca6920c6bd2f849442eea2f/comments", "author": null, "committer": null, "parents": [{"sha": "0e0cefc62e713f0b419bca0c8a931c9c912e214e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e0cefc62e713f0b419bca0c8a931c9c912e214e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e0cefc62e713f0b419bca0c8a931c9c912e214e"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "39824787de8bb2554be2126fbc019a33eaeb5cf4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fd6bde4c3a6772dca6920c6bd2f849442eea2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fd6bde4c3a6772dca6920c6bd2f849442eea2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87fd6bde4c3a6772dca6920c6bd2f849442eea2f", "patch": "@@ -1,3 +1,9 @@\n+2017-12-20  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/83105\n+\t* config.gcc (arm*-*-linux*): When configured with --with-float=hard\n+\tor --with-float=softfp, set the default CPU to arm10e.\n+\n 2017-12-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/visium/constraints.md (J, K, L): Use IN_RANGE macro."}, {"sha": "1a0d67655526ac2e84c9f59be51d334044d2aedc", "filename": "gcc/config.gcc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fd6bde4c3a6772dca6920c6bd2f849442eea2f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fd6bde4c3a6772dca6920c6bd2f849442eea2f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=87fd6bde4c3a6772dca6920c6bd2f849442eea2f", "patch": "@@ -1134,7 +1134,12 @@ arm*-*-linux-*)\t\t\t# ARM GNU/Linux with ELF\n \tesac\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-arm-elf arm/t-bpabi arm/t-linux-eabi\"\n \ttm_file=\"$tm_file arm/bpabi.h arm/linux-eabi.h arm/aout.h vxworks-dummy.h arm/arm.h\"\n-\ttarget_cpu_cname=\"arm10tdmi\"\n+\t# Generation of floating-point instructions requires at least ARMv5te.\n+\tif [ \"$with_float\" = \"hard\" -o \"$with_float\" = \"softfp\" ] ; then\n+\t    target_cpu_cname=\"arm10e\"\n+\telse\n+\t    target_cpu_cname=\"arm10tdmi\"\n+\tfi\n \t# Define multilib configuration for arm-linux-androideabi.\n \tcase ${target} in\n \t*-androideabi)"}]}