{"sha": "6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRjZWUyZDZjYTFlZjBmNTg2ODY0MGM0ODgwYzgwZDUzZGZmYjVjMw==", "commit": {"author": {"name": "Ollie Wild", "email": "aaw@google.com", "date": "2007-09-29T03:47:05Z"}, "committer": {"name": "Ollie Wild", "email": "aaw@gcc.gnu.org", "date": "2007-09-29T03:47:05Z"}, "message": "Revert\n\t2007-09-27  Ollie Wild  <aaw@google.com>\n\n\tgcc/\n\t* varasm.c (compare_constant): Removed call to\n\tlang_hooks.expand_constant.\n\t(copy_constants): Removed call to lang_hooks.expand_constant.\n\t(compute_reloc_for_constant): Removed call to\n\tlang_hooks.expand_constant.\n\t(output_addressed_constants): Removed call to\n\tlang_hooks.expand_constant.\n\t(constructor_static_from_elts_p): Removed call to\n\tlang_hooks.expand_constant.\n\t(output_constant): Removed calls to lang_hooks.expand_constant.\n\t* langhooks.h (struct lang_hooks): Removed field expand_constant.\n\t* langhooks-def.h (lhd_return_tree): Removed.\n\t(LANG_HOOKS_EXPAND_CONSTANT): Removed.\n\t(LANG_HOOKS_INITIALIZER): Removed LANG_HOOKS_EXPAND_CONSTANT.\n\t* langhooks.c (lhd_return_tree): Removed.\n\n\tgcc/cp/\n\t* typeck2.c (digest_init): Call cplus_expand_constant after\n\tconvert_for_initialization.\n\t* cp-objcp-common.h (LANG_HOOKS_EXPAND_CONSTANT): Removed.\n\t* expr.c (cplus_expand_constant): Updated function description.\n\nFrom-SVN: r128881", "tree": {"sha": "117f5e7112f351b5d67c496778a7e3a085dcdc1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/117f5e7112f351b5d67c496778a7e3a085dcdc1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/comments", "author": {"login": "olliewild", "id": 11523068, "node_id": "MDQ6VXNlcjExNTIzMDY4", "avatar_url": "https://avatars.githubusercontent.com/u/11523068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olliewild", "html_url": "https://github.com/olliewild", "followers_url": "https://api.github.com/users/olliewild/followers", "following_url": "https://api.github.com/users/olliewild/following{/other_user}", "gists_url": "https://api.github.com/users/olliewild/gists{/gist_id}", "starred_url": "https://api.github.com/users/olliewild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olliewild/subscriptions", "organizations_url": "https://api.github.com/users/olliewild/orgs", "repos_url": "https://api.github.com/users/olliewild/repos", "events_url": "https://api.github.com/users/olliewild/events{/privacy}", "received_events_url": "https://api.github.com/users/olliewild/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "387b05077888ce040a6263a62e0aaef63570ccfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/387b05077888ce040a6263a62e0aaef63570ccfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/387b05077888ce040a6263a62e0aaef63570ccfb"}], "stats": {"total": 108, "additions": 88, "deletions": 20}, "files": [{"sha": "ce12f805c0c4e51632eaf70c234ef564aadfb706", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "patch": "@@ -1,3 +1,24 @@\n+2007-09-28  Ollie Wild  <aaw@google.com>\n+\n+\tRevert\n+\t2007-09-27  Ollie Wild  <aaw@google.com>\n+\n+\t* varasm.c (compare_constant): Removed call to\n+\tlang_hooks.expand_constant.\n+\t(copy_constants): Removed call to lang_hooks.expand_constant.\n+\t(compute_reloc_for_constant): Removed call to\n+\tlang_hooks.expand_constant.\n+\t(output_addressed_constants): Removed call to\n+\tlang_hooks.expand_constant.\n+\t(constructor_static_from_elts_p): Removed call to\n+\tlang_hooks.expand_constant.\n+\t(output_constant): Removed calls to lang_hooks.expand_constant.\n+\t* langhooks.h (struct lang_hooks): Removed field expand_constant.\n+\t* langhooks-def.h (lhd_return_tree): Removed.\n+\t(LANG_HOOKS_EXPAND_CONSTANT): Removed.\n+\t(LANG_HOOKS_INITIALIZER): Removed LANG_HOOKS_EXPAND_CONSTANT.\n+\t* langhooks.c (lhd_return_tree): Removed.\n+\n 2007-09-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR target/33347"}, {"sha": "5827a57964e3b1769c37783fac4fe9d2271d5b8e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "patch": "@@ -1,3 +1,13 @@\n+2007-09-28  Ollie Wild  <aaw@google.com>\n+\n+\tRevert\n+\t2007-09-27  Ollie Wild  <aaw@google.com>\n+\n+\t* typeck2.c (digest_init): Call cplus_expand_constant after\n+\tconvert_for_initialization.\n+\t* cp-objcp-common.h (LANG_HOOKS_EXPAND_CONSTANT): Removed.\n+\t* expr.c (cplus_expand_constant): Updated function description.\n+\n 2007-09-28  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/10179"}, {"sha": "7f8138c6e60431805c96402336ecf631de5145c8", "filename": "gcc/cp/cp-objcp-common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fcp%2Fcp-objcp-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fcp%2Fcp-objcp-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.h?ref=6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "patch": "@@ -50,6 +50,8 @@ extern tree objcp_tsubst_copy_and_build (tree, tree, tsubst_flags_t,\n #define LANG_HOOKS_POST_OPTIONS c_common_post_options\n #undef LANG_HOOKS_GET_ALIAS_SET\n #define LANG_HOOKS_GET_ALIAS_SET cxx_get_alias_set\n+#undef LANG_HOOKS_EXPAND_CONSTANT\n+#define LANG_HOOKS_EXPAND_CONSTANT cplus_expand_constant\n #undef LANG_HOOKS_EXPAND_EXPR\n #define LANG_HOOKS_EXPAND_EXPR cxx_expand_expr\n #undef LANG_HOOKS_EXPAND_DECL"}, {"sha": "267b847770ea220aa7381178961d52b1989ddd8b", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "patch": "@@ -33,7 +33,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"tm_p.h\"\n \n-/* Expand C++-specific constants.  Currently, this means PTRMEM_CST.  */\n+/* Hook used by output_constant to expand language-specific\n+   constants.  */\n \n tree\n cplus_expand_constant (tree cst)"}, {"sha": "53e22023f27e9b3c8359e151820d14ec1642ee48", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "patch": "@@ -703,23 +703,8 @@ digest_init (tree type, tree init)\n   /* Handle scalar types (including conversions) and references.  */\n   if (TREE_CODE (type) != COMPLEX_TYPE\n       && (SCALAR_TYPE_P (type) || code == REFERENCE_TYPE))\n-    {\n-      tree *exp;\n-\n-      init = convert_for_initialization (0, type, init, LOOKUP_NORMAL,\n-\t\t\t\t\t \"initialization\", NULL_TREE, 0);\n-      exp = &init;\n-\n-      /* Skip any conversions since we'll be outputting the underlying\n-\t constant.  */\n-      while (TREE_CODE (*exp) == NOP_EXPR || TREE_CODE (*exp) == CONVERT_EXPR\n-\t     || TREE_CODE (*exp) == NON_LVALUE_EXPR)\n-\texp = &TREE_OPERAND (*exp, 0);\n-\n-      *exp = cplus_expand_constant (*exp);\n-\n-      return init;\n-    }\n+    return convert_for_initialization (0, type, init, LOOKUP_NORMAL,\n+\t\t\t\t       \"initialization\", NULL_TREE, 0);\n \n   /* Come here only for aggregates: records, arrays, unions, complex numbers\n      and vectors.  */"}, {"sha": "6eca2f0497f03810ed74ee874e26412f9fcacd0f", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "patch": "@@ -41,6 +41,7 @@ extern void lhd_do_nothing_i (int);\n extern void lhd_do_nothing_f (struct function *);\n extern bool lhd_post_options (const char **);\n extern alias_set_type lhd_get_alias_set (tree);\n+extern tree lhd_return_tree (tree);\n extern tree lhd_return_null_tree_v (void);\n extern tree lhd_return_null_tree (tree);\n extern tree lhd_return_null_const_tree (const_tree);\n@@ -92,6 +93,7 @@ extern void lhd_omp_firstprivatize_type_sizes (struct gimplify_omp_ctx *,\n #define LANG_HOOKS_MISSING_ARGUMENT\thook_bool_constcharptr_size_t_false\n #define LANG_HOOKS_POST_OPTIONS\t\tlhd_post_options\n #define LANG_HOOKS_GET_ALIAS_SET\tlhd_get_alias_set\n+#define LANG_HOOKS_EXPAND_CONSTANT\tlhd_return_tree\n #define LANG_HOOKS_EXPAND_EXPR\t\tlhd_expand_expr\n #define LANG_HOOKS_EXPAND_DECL\t\tlhd_expand_decl\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL lhd_do_nothing_t\n@@ -248,6 +250,7 @@ extern tree lhd_make_node (enum tree_code);\n   LANG_HOOKS_PARSE_FILE, \\\n   LANG_HOOKS_CLEAR_BINDING_STACK, \\\n   LANG_HOOKS_GET_ALIAS_SET, \\\n+  LANG_HOOKS_EXPAND_CONSTANT, \\\n   LANG_HOOKS_EXPAND_EXPR, \\\n   LANG_HOOKS_EXPAND_DECL, \\\n   LANG_HOOKS_FINISH_INCOMPLETE_DECL, \\"}, {"sha": "4682514508d121e6cf2bb855453305c7229ab2a3", "filename": "gcc/langhooks.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "patch": "@@ -76,6 +76,14 @@ lhd_do_nothing_f (struct function * ARG_UNUSED (f))\n {\n }\n \n+/* Do nothing (return the tree node passed).  */\n+\n+tree\n+lhd_return_tree (tree t)\n+{\n+  return t;\n+}\n+\n /* Do nothing (return NULL_TREE).  */\n \n tree"}, {"sha": "8a442753b1f9c9ba4f9dabb76d9b5319106ad0e7", "filename": "gcc/langhooks.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "patch": "@@ -287,6 +287,11 @@ struct lang_hooks\n      Returns -1 if the language does nothing special for it.  */\n   alias_set_type (*get_alias_set) (tree);\n \n+  /* Called with an expression that is to be processed as a constant.\n+     Returns either the same expression or a language-independent\n+     constant equivalent to its input.  */\n+  tree (*expand_constant) (tree);\n+\n   /* Called by expand_expr for language-specific tree codes.\n      Fourth argument is actually an enum expand_modifier.  */\n   rtx (*expand_expr) (tree, rtx, enum machine_mode, int, rtx *);"}, {"sha": "9dece23fefeb6ab3aea422ab1d6897d50ba6eef3", "filename": "gcc/varasm.c", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=6dcee2d6ca1ef0f5868640c4880c80d53dffb5c3", "patch": "@@ -2985,7 +2985,15 @@ compare_constant (const tree t1, const tree t2)\n       return compare_constant (TREE_OPERAND (t1, 0), TREE_OPERAND (t2, 0));\n \n     default:\n-      return 0;\n+      {\n+\ttree nt1, nt2;\n+\tnt1 = lang_hooks.expand_constant (t1);\n+\tnt2 = lang_hooks.expand_constant (t2);\n+\tif (nt1 != t1 || nt2 != t2)\n+\t  return compare_constant (nt1, nt2);\n+\telse\n+\t  return 0;\n+      }\n     }\n \n   gcc_unreachable ();\n@@ -3053,7 +3061,12 @@ copy_constant (tree exp)\n       }\n \n     default:\n-      gcc_unreachable ();\n+      {\n+\ttree t = lang_hooks.expand_constant (exp);\n+\n+\tgcc_assert (t != exp);\n+\treturn copy_constant (t);\n+      }\n     }\n }\n \f\n@@ -3897,6 +3910,10 @@ compute_reloc_for_constant (tree exp)\n   int reloc = 0, reloc2;\n   tree tem;\n \n+  /* Give the front-end a chance to convert VALUE to something that\n+     looks more like a constant to the back-end.  */\n+  exp = lang_hooks.expand_constant (exp);\n+\n   switch (TREE_CODE (exp))\n     {\n     case ADDR_EXPR:\n@@ -3961,6 +3978,10 @@ output_addressed_constants (tree exp)\n {\n   tree tem;\n \n+  /* Give the front-end a chance to convert VALUE to something that\n+     looks more like a constant to the back-end.  */\n+  exp = lang_hooks.expand_constant (exp);\n+\n   switch (TREE_CODE (exp))\n     {\n     case ADDR_EXPR:\n@@ -4034,6 +4055,10 @@ constructor_static_from_elts_p (const_tree ctor)\n tree\n initializer_constant_valid_p (tree value, tree endtype)\n {\n+  /* Give the front-end a chance to convert VALUE to something that\n+     looks more like a constant to the back-end.  */\n+  value = lang_hooks.expand_constant (value);\n+\n   switch (TREE_CODE (value))\n     {\n     case CONSTRUCTOR:\n@@ -4292,6 +4317,11 @@ output_constant (tree exp, unsigned HOST_WIDE_INT size, unsigned int align)\n   enum tree_code code;\n   unsigned HOST_WIDE_INT thissize;\n \n+  /* Some front-ends use constants other than the standard language-independent\n+     varieties, but which may still be output directly.  Give the front-end a\n+     chance to convert EXP to a language-independent representation.  */\n+  exp = lang_hooks.expand_constant (exp);\n+\n   if (size == 0 || flag_syntax_only)\n     return;\n \n@@ -4348,6 +4378,9 @@ output_constant (tree exp, unsigned HOST_WIDE_INT size, unsigned int align)\n   code = TREE_CODE (TREE_TYPE (exp));\n   thissize = int_size_in_bytes (TREE_TYPE (exp));\n \n+  /* Give the front end another chance to expand constants.  */\n+  exp = lang_hooks.expand_constant (exp);\n+\n   /* Allow a constructor with no elements for any data type.\n      This means to fill the space with zeros.  */\n   if (TREE_CODE (exp) == CONSTRUCTOR"}]}