{"sha": "3703d0958bac9f21b75d91bc1e87c922d86434a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcwM2QwOTU4YmFjOWYyMWI3NWQ5MWJjMWU4N2M5MjJkODY0MzRhMw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2016-12-06T10:35:37Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2016-12-06T10:35:37Z"}, "message": "re PR middle-end/78548 (ICE on valid C code on x86_64-linux-gnu at -O2 and -O3 in 64-bit mode with -Wall (*** Error in `/usr/local/gcc-trunk/libexec/gcc/x86_64-pc-linux-gnu/7.0.0/cc1': double free or corruption (fasttop): 0x0000000003c15810 ***))\n\n\tPR middle-end/78548\n\t* tree-ssa-uninit.c (simplify_preds_4): Call release() instead of\n\tdestroy_predicate_vecs.\n\t(uninit_uses_cannot_happen): Make uninit_preds a scalar.\n\nFrom-SVN: r243289", "tree": {"sha": "b8096af316ccaea2b1b71a64bd9af69475f8bbe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8096af316ccaea2b1b71a64bd9af69475f8bbe5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3703d0958bac9f21b75d91bc1e87c922d86434a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3703d0958bac9f21b75d91bc1e87c922d86434a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3703d0958bac9f21b75d91bc1e87c922d86434a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3703d0958bac9f21b75d91bc1e87c922d86434a3/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95ac78ce0efbc5d8396a9effa99e25e4ca50d8a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95ac78ce0efbc5d8396a9effa99e25e4ca50d8a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95ac78ce0efbc5d8396a9effa99e25e4ca50d8a9"}], "stats": {"total": 64, "additions": 50, "deletions": 14}, "files": [{"sha": "3c842b67b6bd790d418a5ae73e01b8ac96ee4531", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3703d0958bac9f21b75d91bc1e87c922d86434a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3703d0958bac9f21b75d91bc1e87c922d86434a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3703d0958bac9f21b75d91bc1e87c922d86434a3", "patch": "@@ -1,3 +1,10 @@\n+2016-12-06  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR middle-end/78548\n+\t* tree-ssa-uninit.c (simplify_preds_4): Call release() instead of\n+\tdestroy_predicate_vecs.\n+\t(uninit_uses_cannot_happen): Make uninit_preds a scalar.\n+\n 2016-12-06  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR middle-end/78566"}, {"sha": "12e06dd175c03f9cf233070ac3b8c1a0b37e1483", "filename": "gcc/testsuite/gcc.dg/uninit-pr78548.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3703d0958bac9f21b75d91bc1e87c922d86434a3/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr78548.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3703d0958bac9f21b75d91bc1e87c922d86434a3/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr78548.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr78548.c?ref=3703d0958bac9f21b75d91bc1e87c922d86434a3", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall -w -O2\" } */\n+\n+char a;\n+int b;\n+unsigned c, d;\n+short e;\n+int main_f;\n+int main (  ) {\n+L0:\n+    if ( e )     goto L1;\n+    b = c & d || a;\n+    if ( !c )     printf ( \"\", ( long long ) main_f );\n+    if ( d || !c )     {\n+        printf ( \"%llu\\n\", ( long long ) main );\n+        goto L2;\n+    }\n+    unsigned g = b;\n+L1:\n+    b = g;\n+L2:\n+    if ( b )     goto L0;\n+  return 0;\n+}"}, {"sha": "b4892c7f6c0ae536c4ae6d07bb7c65f799ad5c1a", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3703d0958bac9f21b75d91bc1e87c922d86434a3/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3703d0958bac9f21b75d91bc1e87c922d86434a3/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=3703d0958bac9f21b75d91bc1e87c922d86434a3", "patch": "@@ -1774,7 +1774,7 @@ simplify_preds_4 (pred_chain_union *preds)\n \t  s_preds.safe_push ((*preds)[i]);\n \t}\n \n-      destroy_predicate_vecs (preds);\n+      preds->release ();\n       (*preds) = s_preds;\n       s_preds = vNULL;\n     }\n@@ -2211,10 +2211,9 @@ uninit_uses_cannot_happen (gphi *phi, unsigned uninit_opnds,\n \n   /* Look for the control dependencies of all the uninitialized\n      operands and build guard predicates describing them.  */\n-  unsigned i;\n-  pred_chain_union uninit_preds[max_phi_args];\n-  memset (uninit_preds, 0, sizeof (pred_chain_union) * phi_args);\n-  for (i = 0; i < phi_args; ++i)\n+  pred_chain_union uninit_preds;\n+  bool ret = true;\n+  for (unsigned i = 0; i < phi_args; ++i)\n     {\n       if (!MASK_TEST_BIT (uninit_opnds, i))\n \tcontinue;\n@@ -2226,26 +2225,32 @@ uninit_uses_cannot_happen (gphi *phi, unsigned uninit_opnds,\n       int num_calls = 0;\n \n       /* Build the control dependency chain for uninit operand `i'...  */\n+      uninit_preds = vNULL;\n       if (!compute_control_dep_chain (find_dom (e->src),\n \t\t\t\t      e->src, dep_chains, &num_chains,\n \t\t\t\t      &cur_chain, &num_calls))\n-\treturn false;\n+\t{\n+\t  ret = false;\n+\t  break;\n+\t}\n       /* ...and convert it into a set of predicates.  */\n       convert_control_dep_chain_into_preds (dep_chains, num_chains,\n-\t\t\t\t\t    &uninit_preds[i]);\n+\t\t\t\t\t    &uninit_preds);\n       for (size_t j = 0; j < num_chains; ++j)\n \tdep_chains[j].release ();\n-      simplify_preds (&uninit_preds[i], NULL, false);\n-      uninit_preds[i]\n-\t= normalize_preds (uninit_preds[i], NULL, false);\n+      simplify_preds (&uninit_preds, NULL, false);\n+      uninit_preds = normalize_preds (uninit_preds, NULL, false);\n \n       /* Can the guard for this uninitialized operand be invalidated\n \t by the PHI use?  */\n-      if (!can_chain_union_be_invalidated_p (uninit_preds[i],\n-\t\t\t\t\t     phi_use_guards[0]))\n-\treturn false;\n+      if (!can_chain_union_be_invalidated_p (uninit_preds, phi_use_guards[0]))\n+\t{\n+\t  ret = false;\n+\t  break;\n+\t}\n     }\n-  return true;\n+  destroy_predicate_vecs (&uninit_preds);\n+  return ret;\n }\n \n /* Computes the predicates that guard the use and checks"}]}