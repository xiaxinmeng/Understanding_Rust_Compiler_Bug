{"sha": "1c432a87d9bff9e86ef664d3c9f87189ec035d72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM0MzJhODdkOWJmZjllODZlZjY2NGQzYzlmODcxODllYzAzNWQ3Mg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dan@cgsoftware.com", "date": "2001-07-20T19:12:46Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2001-07-20T19:12:46Z"}, "message": "Make-lang.in (cp/optimize.o): Depend on $(PARAMS_H), not params.h.\n\n2001-07-20  Daniel Berlin  <dan@cgsoftware.com>\n\n\t* Make-lang.in (cp/optimize.o): Depend on $(PARAMS_H), not\n\tparams.h.\n\n2001-07-20  Daniel Berlin  <dan@cgsoftware.com>\n\n\t* params.def: Change default max inline insns to 100.\n\nFrom-SVN: r44203", "tree": {"sha": "b90b0928b762ebabdbac6f0748b0b5ebd3b1b2c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b90b0928b762ebabdbac6f0748b0b5ebd3b1b2c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c432a87d9bff9e86ef664d3c9f87189ec035d72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c432a87d9bff9e86ef664d3c9f87189ec035d72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c432a87d9bff9e86ef664d3c9f87189ec035d72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c432a87d9bff9e86ef664d3c9f87189ec035d72/comments", "author": null, "committer": null, "parents": [{"sha": "9def18da54cfc452cf859502c56063ad0a904b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9def18da54cfc452cf859502c56063ad0a904b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9def18da54cfc452cf859502c56063ad0a904b35"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "f7af8bd48d7bf4f347b34fcef36b275b8b264122", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c432a87d9bff9e86ef664d3c9f87189ec035d72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c432a87d9bff9e86ef664d3c9f87189ec035d72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c432a87d9bff9e86ef664d3c9f87189ec035d72", "patch": "@@ -1,3 +1,7 @@\n+2001-07-20  Daniel Berlin  <dan@cgsoftware.com>\n+\n+\t* params.def: Change default max inline insns to 100.\n+\n 2001-07-20  Diego Novillo  <dnovillo@redhat.com>\n \n \t* combine.c (combine_simplify_rtx): Generate a new shift operation"}, {"sha": "0ea4cb77a7fc7ab7396c452d8bfdac93b17b8872", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c432a87d9bff9e86ef664d3c9f87189ec035d72/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c432a87d9bff9e86ef664d3c9f87189ec035d72/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1c432a87d9bff9e86ef664d3c9f87189ec035d72", "patch": "@@ -1,3 +1,8 @@\n+2001-07-20  Daniel Berlin  <dan@cgsoftware.com>\n+\n+\t* Make-lang.in (cp/optimize.o): Depend on $(PARAMS_H), not\n+\tparams.h.\n+\n 2001-07-19  Mark Mitchell  <mark@codesourcery.com>\n \n \t* class.c (finish_struct_anon): Forbid nested classes."}, {"sha": "50190d3ac061b5bf828b0bf30828b63b25de1a4b", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c432a87d9bff9e86ef664d3c9f87189ec035d72/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c432a87d9bff9e86ef664d3c9f87189ec035d72/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=1c432a87d9bff9e86ef664d3c9f87189ec035d72", "patch": "@@ -277,7 +277,7 @@ cp/semantics.o: cp/semantics.c $(CXX_TREE_H) cp/lex.h except.h toplev.h \\\n   flags.h $(GGC_H) debug.h output.h $(RTL_H) $(TIMEVAR_H) $(EXPR_H)\n cp/dump.o: cp/dump.c $(CXX_TREE_H) c-dump.h\n cp/optimize.o: cp/optimize.c $(CXX_TREE_H) rtl.h integrate.h insn-config.h \\\n-  input.h params.h debug.h\n+  input.h $(PARAMS_H) debug.h\n cp/mangle.o: cp/mangle.c $(CXX_TREE_H) toplev.h\n \n cp/parse.o: cp/parse.c $(CXX_TREE_H) flags.h cp/lex.h except.h output.h \\"}, {"sha": "d7e9bc07c42dd033a196f321c1be502746a76b14", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c432a87d9bff9e86ef664d3c9f87189ec035d72/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c432a87d9bff9e86ef664d3c9f87189ec035d72/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=1c432a87d9bff9e86ef664d3c9f87189ec035d72", "patch": "@@ -44,7 +44,7 @@ Boston, MA 02111-1307, USA.\n DEFPARAM (PARAM_MAX_INLINE_INSNS,\n \t  \"max-inline-insns\",\n \t  \"The maximum number of instructions in a function that is eligible for inlining\",\n-\t  10000)\n+\t  100)\n \n /* The maximum number of instructions to consider when looking for an\n    instruction to fill a delay slot.  If more than this arbitrary"}]}