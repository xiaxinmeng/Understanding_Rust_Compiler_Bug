{"sha": "f7ad4446274831234e5acd3506fd2e01c7594c6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhZDQ0NDYyNzQ4MzEyMzRlNWFjZDM1MDZmZDJlMDFjNzU5NGM2YQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@gmail.com", "date": "2020-07-28T10:15:48Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2020-12-11T16:13:53Z"}, "message": "arc: Use separate predicated patterns for mpyd(u)\n\nThe compiler can match mpyd.eq r0,r1,r0 as a predicated instruction,\nwhich is incorrect. The mpyd(u) instruction takes as input two 32-bit\nregisters, returning into a double 64-bit even-odd register pair.  For\nthe predicated case, the ARC instruction decoder expects the\ndestination register to be the same as the first input register. In\nthe big-endian case the result is swaped in the destination register\npair, however, the instruction encoding remains the same.  Refurbish\nthe mpyd(u) patterns to take into account the above observation.\n\ngcc/\n2020-12-11  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.md (mpyd<su_optab>_arcv2hs): New template\n\tpattern.\n\t(*pmpyd<su_optab>_arcv2hs): Likewise.\n\t(*pmpyd<su_optab>_imm_arcv2hs): Likewise.\n\t(mpyd_arcv2hs): Moved into above template.\n\t(mpyd_imm_arcv2hs): Moved into above template.\n\t(mpydu_arcv2hs): Likewise.\n\t(mpydu_imm_arcv2hs): Likewise.\n\t(su_optab): New optab prefix for sign/zero-extending operations.\n\ngcc/testsuite/\n2020-12-11  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* gcc.target/arc/pmpyd.c: New test.\n\t* gcc.target/arc/tmac-1.c: Update.\n\nSigned-off-by: Claudiu Zissulescu <claziss@gmail.com>", "tree": {"sha": "0c119c203adee9865e604e7b763e9bff5380f6a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c119c203adee9865e604e7b763e9bff5380f6a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7ad4446274831234e5acd3506fd2e01c7594c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ad4446274831234e5acd3506fd2e01c7594c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7ad4446274831234e5acd3506fd2e01c7594c6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7ad4446274831234e5acd3506fd2e01c7594c6a/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "078c7498908d9b74caff34d12099b5c85470e277", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078c7498908d9b74caff34d12099b5c85470e277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/078c7498908d9b74caff34d12099b5c85470e277"}], "stats": {"total": 118, "additions": 67, "deletions": 51}, "files": [{"sha": "2b46e26553861ea6f4a1f1de32460e3d64f256f4", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 51, "deletions": 50, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ad4446274831234e5acd3506fd2e01c7594c6a/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ad4446274831234e5acd3506fd2e01c7594c6a/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=f7ad4446274831234e5acd3506fd2e01c7594c6a", "patch": "@@ -871,6 +871,8 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n \n (define_code_iterator SEZ [sign_extend zero_extend])\n (define_code_attr SEZ_prefix [(sign_extend \"sex\") (zero_extend \"ext\")])\n+; Optab prefix for sign/zero-extending operations\n+(define_code_attr su_optab [(sign_extend \"\") (zero_extend \"u\")])\n \n (define_insn \"*<SEZ_prefix>xt<SQH_postfix>_cmp0_noout\"\n   [(set (match_operand 0 \"cc_set_register\" \"\")\n@@ -6385,66 +6387,65 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n    (set_attr \"predicable\" \"no\")\n    (set_attr \"cond\" \"nocond\")])\n \n-(define_insn \"mpyd_arcv2hs\"\n-  [(set (match_operand:DI 0 \"even_register_operand\"\t\t\t\"=Rcr, r\")\n-\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\"\t \"  0, c\"))\n-\t\t (sign_extend:DI (match_operand:SI 2 \"register_operand\"\t \"  c, c\"))))\n+(define_insn \"mpyd<su_optab>_arcv2hs\"\n+  [(set (match_operand:DI 0 \"even_register_operand\"\t       \"=r\")\n+\t(mult:DI (SEZ:DI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t (SEZ:DI (match_operand:SI 2 \"register_operand\" \"r\"))))\n    (set (reg:DI ARCV2_ACC)\n \t(mult:DI\n-\t  (sign_extend:DI (match_dup 1))\n-\t  (sign_extend:DI (match_dup 2))))]\n+\t  (SEZ:DI (match_dup 1))\n+\t  (SEZ:DI (match_dup 2))))]\n   \"TARGET_PLUS_MACD\"\n-  \"mpyd%? %0,%1,%2\"\n-  [(set_attr \"length\" \"4,4\")\n-  (set_attr \"iscompact\" \"false\")\n-  (set_attr \"type\" \"multi\")\n-  (set_attr \"predicable\" \"yes,no\")\n-  (set_attr \"cond\" \"canuse,nocond\")])\n-\n-(define_insn \"mpyd_imm_arcv2hs\"\n-  [(set (match_operand:DI 0 \"even_register_operand\"\t\t\t\"=Rcr, r,r,Rcr,\t r\")\n-\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\"\t \"  0, c,0,  0,\t c\"))\n-\t\t (match_operand 2\t\t    \"immediate_operand\"\t \"  L, L,I,Cal,Cal\")))\n+  \"mpyd<su_optab>%?\\\\t%0,%1,%2\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"iscompact\" \"false\")\n+   (set_attr \"type\" \"multi\")\n+   (set_attr \"predicable\" \"no\")])\n+\n+(define_insn \"*pmpyd<su_optab>_arcv2hs\"\n+  [(set (match_operand:DI 0 \"even_register_operand\"\t     \"=r\")\n+\t(mult:DI\n+\t (SEZ:DI (match_operand:SI 1 \"even_register_operand\" \"%0\"))\n+\t (SEZ:DI (match_operand:SI 2 \"register_operand\"      \"r\"))))\n    (set (reg:DI ARCV2_ACC)\n-\t(mult:DI (sign_extend:DI (match_dup 1))\n-\t\t (match_dup 2)))]\n+\t(mult:DI\n+\t  (SEZ:DI (match_dup 1))\n+\t  (SEZ:DI (match_dup 2))))]\n   \"TARGET_PLUS_MACD\"\n-  \"mpyd%? %0,%1,%2\"\n-  [(set_attr \"length\" \"4,4,4,8,8\")\n-  (set_attr \"iscompact\" \"false\")\n-  (set_attr \"type\" \"multi\")\n-  (set_attr \"predicable\" \"yes,no,no,yes,no\")\n-  (set_attr \"cond\" \"canuse,nocond,nocond,canuse_limm,nocond\")])\n-\n-(define_insn \"mpydu_arcv2hs\"\n-  [(set (match_operand:DI 0 \"even_register_operand\"\t\t\t\"=Rcr, r\")\n-\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\"\t \"  0, c\"))\n-\t\t (zero_extend:DI (match_operand:SI 2 \"register_operand\" \"   c, c\"))))\n+  \"mpyd<su_optab>%?\\\\t%0,%1,%2\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"iscompact\" \"false\")\n+   (set_attr \"type\" \"multi\")\n+   (set_attr \"predicable\" \"yes\")])\n+\n+(define_insn \"mpyd<su_optab>_imm_arcv2hs\"\n+  [(set (match_operand:DI 0 \"even_register_operand\"\t\t\"=r,r,  r\")\n+\t(mult:DI (SEZ:DI (match_operand:SI 1 \"register_operand\"  \"r,0,  r\"))\n+\t\t (match_operand 2\t     \"immediate_operand\" \"L,I,Cal\")))\n    (set (reg:DI ARCV2_ACC)\n-\t(mult:DI (zero_extend:DI (match_dup 1))\n-\t\t (zero_extend:DI (match_dup 2))))]\n+\t(mult:DI (SEZ:DI (match_dup 1))\n+\t\t (match_dup 2)))]\n   \"TARGET_PLUS_MACD\"\n-  \"mpydu%? %0,%1,%2\"\n-  [(set_attr \"length\" \"4,4\")\n-  (set_attr \"iscompact\" \"false\")\n-  (set_attr \"type\" \"multi\")\n-  (set_attr \"predicable\" \"yes,no\")\n-  (set_attr \"cond\" \"canuse,nocond\")])\n-\n-(define_insn \"mpydu_imm_arcv2hs\"\n-  [(set (match_operand:DI 0 \"even_register_operand\"\t\t\t\"=Rcr, r,r,Rcr,\t r\")\n-\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\"\t \"  0, c,0,  0,\t c\"))\n-\t\t (match_operand 2\t\t    \"immediate_operand\"\t \"  L, L,I,Cal,Cal\")))\n+  \"mpyd<su_optab>%?\\\\t%0,%1,%2\"\n+  [(set_attr \"length\" \"4,4,8\")\n+   (set_attr \"iscompact\" \"false\")\n+   (set_attr \"type\" \"multi\")\n+   (set_attr \"predicable\" \"no\")])\n+\n+(define_insn \"*pmpyd<su_optab>_imm_arcv2hs\"\n+  [(set (match_operand:DI 0 \"even_register_operand\"\t    \"=r,r\")\n+\t(mult:DI\n+\t (SEZ:DI (match_operand:SI 1 \"even_register_operand\" \"0,0\"))\n+\t (match_operand 2\t     \"immediate_operand\"     \"L,Cal\")))\n    (set (reg:DI ARCV2_ACC)\n-\t(mult:DI (zero_extend:DI (match_dup 1))\n+\t(mult:DI (SEZ:DI (match_dup 1))\n \t\t (match_dup 2)))]\n   \"TARGET_PLUS_MACD\"\n-  \"mpydu%? %0,%1,%2\"\n-  [(set_attr \"length\" \"4,4,4,8,8\")\n-  (set_attr \"iscompact\" \"false\")\n-  (set_attr \"type\" \"multi\")\n-  (set_attr \"predicable\" \"yes,no,no,yes,no\")\n-  (set_attr \"cond\" \"canuse,nocond,nocond,canuse_limm,nocond\")])\n+  \"mpyd<su_optab>%?\\\\t%0,%1,%2\"\n+  [(set_attr \"length\" \"4,8\")\n+   (set_attr \"iscompact\" \"false\")\n+   (set_attr \"type\" \"multi\")\n+   (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"*add_shift\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=q,r,r\")"}, {"sha": "0eb0ff7f11b6d9152cd22fe1b33f9e2cce5e2be0", "filename": "gcc/testsuite/gcc.target/arc/pmpyd.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ad4446274831234e5acd3506fd2e01c7594c6a/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fpmpyd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ad4446274831234e5acd3506fd2e01c7594c6a/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fpmpyd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fpmpyd.c?ref=f7ad4446274831234e5acd3506fd2e01c7594c6a", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do assemble } */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n+/* { dg-options \"-mcpu=hs38 -Os -EB\" } */\n+\n+/* This example is found during big-endian build.  The compiler is\n+   matching mpydu.hi r12,r13,r3 as a predicated instruction, which is\n+   incorrect.  The error is due to different predicates between the\n+   output operand and the first operand of the instruction.  */\n+unsigned int test(unsigned int x, unsigned long long y)\n+{\n+  y /= 0x20000000;\n+  if (x > 1)\n+    y *= x;\n+  return y;\n+}"}, {"sha": "5b302cad4a4a2a69427b6a89a536df46b2b85677", "filename": "gcc/testsuite/gcc.target/arc/tmac-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7ad4446274831234e5acd3506fd2e01c7594c6a/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftmac-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7ad4446274831234e5acd3506fd2e01c7594c6a/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftmac-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftmac-1.c?ref=f7ad4446274831234e5acd3506fd2e01c7594c6a", "patch": "@@ -7,5 +7,5 @@\n \n /* { dg-final { scan-assembler \"macd \" } } */\n /* { dg-final { scan-assembler \"macdu\" } } */\n-/* { dg-final { scan-assembler \"mpyd \" } } */\n+/* { dg-final { scan-assembler \"mpyd\\\\t\" } } */\n /* { dg-final { scan-assembler \"mpydu\" } } */"}]}