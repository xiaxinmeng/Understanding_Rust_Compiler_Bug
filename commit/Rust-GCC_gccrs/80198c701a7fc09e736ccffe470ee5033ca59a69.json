{"sha": "80198c701a7fc09e736ccffe470ee5033ca59a69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAxOThjNzAxYTdmYzA5ZTczNmNjZmZlNDcwZWU1MDMzY2E1OWE2OQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2021-01-26T11:26:54Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2021-01-26T11:27:54Z"}, "message": "Commit test case for PR 67539.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/67539\n\t* gfortran.dg/elemental_assignment_1.f90: New test.", "tree": {"sha": "2e2e816ac19201a5b257626feaa53013bf369d48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e2e816ac19201a5b257626feaa53013bf369d48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80198c701a7fc09e736ccffe470ee5033ca59a69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80198c701a7fc09e736ccffe470ee5033ca59a69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80198c701a7fc09e736ccffe470ee5033ca59a69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80198c701a7fc09e736ccffe470ee5033ca59a69/comments", "author": null, "committer": null, "parents": [{"sha": "b3cc0c9a6ac2065253203ac33663e28fd25397ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3cc0c9a6ac2065253203ac33663e28fd25397ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3cc0c9a6ac2065253203ac33663e28fd25397ff"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "23d764313b26022a4ca657de25ea193c01016253", "filename": "gcc/testsuite/gfortran.dg/elemental_assignment_1.f90", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80198c701a7fc09e736ccffe470ee5033ca59a69/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_assignment_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80198c701a7fc09e736ccffe470ee5033ca59a69/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_assignment_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_assignment_1.f90?ref=80198c701a7fc09e736ccffe470ee5033ca59a69", "patch": "@@ -0,0 +1,59 @@\n+! { dg-do run }\n+! PR 67539 - this used to give a segfault at runtime.\n+! Test case by \"mrestelli\".\n+\n+module m\n+ implicit none\n+\n+ type :: t_a\n+  real, allocatable :: x\n+ end type t_a\n+\n+ interface assignment(=)\n+  module procedure copy_t_a\n+ end interface\n+\n+contains\n+ \n+ elemental subroutine copy_t_a(y,x)\n+  type(t_a), intent(in)  :: x\n+  type(t_a), intent(out) :: y\n+   allocate( y%x , source=x%x )\n+ end subroutine copy_t_a\n+\n+ elemental function new_t_a(x) result(res)\n+  real, intent(in) :: x\n+  type(t_a) :: res\n+   allocate( res%x )\n+   res%x = x\n+ end function new_t_a\n+\n+end module m\n+\n+\n+program p\n+ use m\n+ implicit none\n+\n+ integer :: i\n+ type(t_a) :: tmp\n+ type(t_a), allocatable :: v(:)\n+\n+ allocate( v(2) )\n+\n+ v = new_t_a(1.5)   ! -> segmentation fault\n+\n+ !tmp = new_t_a(1.5) ! -> OK\n+ !v = tmp\n+\n+ !do i=1,size(v)     ! -> also OK\n+ !  v(i) = new_t_a(1.5)\n+ !enddo\n+\n+ do i=1,size(v)\n+   write(*,*) \" i = \",i\n+   write(*,*) allocated(v(i)%x)\n+   write(*,*) v(i)%x\n+ enddo\n+ \n+end program p"}]}