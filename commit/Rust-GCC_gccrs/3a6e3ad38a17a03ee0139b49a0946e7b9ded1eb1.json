{"sha": "3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E2ZTNhZDM4YTE3YTAzZWUwMTM5YjQ5YTA5NDZlN2I5ZGVkMWViMQ==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2020-12-08T09:00:04Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2020-12-08T09:00:04Z"}, "message": "gimple-isel: Fold x CMP y ? -1 : 0 to x CMP y [PR97872]\n\ngcc/\n2020-12-08  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\tPR target/97872\n\t* gimple-isel.cc (gimple_expand_vec_cond_expr): Try to fold\n\tx CMP y ? -1 : 0 to x CMP y.\n\ngcc/testsuite/\n2020-12-08  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\tPR target/97872\n\t* gcc.target/arm/pr97872.c: New test.", "tree": {"sha": "7f183717821fc4422d514302c8950b6033ba2d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f183717821fc4422d514302c8950b6033ba2d53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1/comments", "author": null, "committer": null, "parents": [{"sha": "e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "1ab75e72c2e7a534f551171a76690e7e58c1fcf6", "filename": "gcc/gimple-isel.cc", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1/gcc%2Fgimple-isel.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1/gcc%2Fgimple-isel.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-isel.cc?ref=3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1", "patch": "@@ -184,6 +184,20 @@ gimple_expand_vec_cond_expr (gimple_stmt_iterator *gsi,\n \n \t  tree op0_type = TREE_TYPE (op0);\n \t  tree op0a_type = TREE_TYPE (op0a);\n+\n+\t  /* Try to fold x CMP y ? -1 : 0 to x CMP y.  */\n+\n+\t  if (integer_minus_onep (op1)\n+\t      && integer_zerop (op2)\n+\t      && TYPE_MODE (TREE_TYPE (lhs)) == TYPE_MODE (TREE_TYPE (op0))\n+\t      && expand_vec_cmp_expr_p (op0a_type, op0_type, tcode))\n+\t    {\n+\t      tree conv_op = build1 (VIEW_CONVERT_EXPR, TREE_TYPE (lhs), op0);\n+\t      gassign *new_stmt = gimple_build_assign (lhs, conv_op);\n+\t      gsi_replace (gsi, new_stmt, true);\n+\t      return new_stmt;\n+\t    }\n+\n \t  if (used_vec_cond_exprs >= 2\n \t      && (get_vcond_mask_icode (mode, TYPE_MODE (op0_type))\n \t\t  != CODE_FOR_nothing)"}, {"sha": "eeb4dd9d6bce513b4ef812a9d3501b30d2ebfb4d", "filename": "gcc/testsuite/gcc.target/arm/pr97872.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr97872.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr97872.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr97872.c?ref=3a6e3ad38a17a03ee0139b49a0946e7b9ded1eb1", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include <arm_neon.h>\n+\n+uint8x8_t f1(int8x8_t a, int8x8_t b) {\n+  return a < b;\n+}\n+\n+/* { dg-final { scan-assembler-not \"vbsl\" } } */"}]}