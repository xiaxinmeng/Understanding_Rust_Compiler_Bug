{"sha": "76e0721abb9283c9127921850bee619f354701c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZlMDcyMWFiYjkyODNjOTEyNzkyMTg1MGJlZTYxOWYzNTQ3MDFjOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-03-07T15:05:11Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-10T13:35:02Z"}, "message": "[Ada] Ada 202x AI12-0192 \"requires late initialization\"\n\n2020-06-10  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb (Build_Init_Statements): Implement the notion of\n\t\"require late initialization\".", "tree": {"sha": "25b10ff1a366b668972822a7a076c9dd1f93861e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25b10ff1a366b668972822a7a076c9dd1f93861e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76e0721abb9283c9127921850bee619f354701c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e0721abb9283c9127921850bee619f354701c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76e0721abb9283c9127921850bee619f354701c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e0721abb9283c9127921850bee619f354701c9/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c0c89cb163ec78c3dd1ca7cdffe026c706bedd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0c89cb163ec78c3dd1ca7cdffe026c706bedd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c0c89cb163ec78c3dd1ca7cdffe026c706bedd7"}], "stats": {"total": 206, "additions": 182, "deletions": 24}, "files": [{"sha": "76b620197781b4c1f357f4ab02fa768339b145de", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 182, "deletions": 24, "changes": 206, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76e0721abb9283c9127921850bee619f354701c9/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76e0721abb9283c9127921850bee619f354701c9/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=76e0721abb9283c9127921850bee619f354701c9", "patch": "@@ -2826,16 +2826,16 @@ package body Exp_Ch3 is\n       ---------------------------\n \n       function Build_Init_Statements (Comp_List : Node_Id) return List_Id is\n-         Checks       : constant List_Id := New_List;\n-         Actions      : List_Id          := No_List;\n-         Counter_Id   : Entity_Id        := Empty;\n-         Comp_Loc     : Source_Ptr;\n-         Decl         : Node_Id;\n-         Has_POC      : Boolean;\n-         Id           : Entity_Id;\n-         Parent_Stmts : List_Id;\n-         Stmts        : List_Id;\n-         Typ          : Entity_Id;\n+         Checks             : constant List_Id := New_List;\n+         Actions            : List_Id          := No_List;\n+         Counter_Id         : Entity_Id        := Empty;\n+         Comp_Loc           : Source_Ptr;\n+         Decl               : Node_Id;\n+         Has_Late_Init_Comp : Boolean;\n+         Id                 : Entity_Id;\n+         Parent_Stmts       : List_Id;\n+         Stmts              : List_Id;\n+         Typ                : Entity_Id;\n \n          procedure Increment_Counter (Loc : Source_Ptr);\n          --  Generate an \"increment by one\" statement for the current counter\n@@ -2846,6 +2846,12 @@ package body Exp_Ch3 is\n          --  creates a new defining Id, adds an object declaration and sets\n          --  the Id generator for the next variant.\n \n+         function Requires_Late_Initialization\n+           (Decl     : Node_Id;\n+            Rec_Type : Entity_Id) return Boolean;\n+         --  Return whether the given Decl requires late initialization, as\n+         --  defined by 3.3.1 (8.1/5).\n+\n          -----------------------\n          -- Increment_Counter --\n          -----------------------\n@@ -2892,6 +2898,158 @@ package body Exp_Ch3 is\n                   Make_Integer_Literal (Loc, 0)));\n          end Make_Counter;\n \n+         ----------------------------------\n+         -- Requires_Late_Initialization --\n+         ----------------------------------\n+\n+         function Requires_Late_Initialization\n+           (Decl     : Node_Id;\n+            Rec_Type : Entity_Id) return Boolean\n+         is\n+            References_Current_Instance : Boolean := False;\n+            Has_Access_Discriminant     : Boolean := False;\n+            Has_Internal_Call           : Boolean := False;\n+\n+            function Find_Access_Discriminant\n+              (N : Node_Id) return Traverse_Result;\n+            --  Look for a name denoting an access discriminant\n+\n+            function Find_Current_Instance\n+              (N : Node_Id) return Traverse_Result;\n+            --  Look for a reference to the current instance of the type\n+\n+            function Find_Internal_Call\n+              (N : Node_Id) return Traverse_Result;\n+            --  Look for an internal protected function call\n+\n+            ------------------------------\n+            -- Find_Access_Discriminant --\n+            ------------------------------\n+\n+            function Find_Access_Discriminant\n+              (N : Node_Id) return Traverse_Result is\n+            begin\n+               if Is_Entity_Name (N)\n+                 and then Denotes_Discriminant (N)\n+                 and then Is_Access_Type (Etype (N))\n+               then\n+                  Has_Access_Discriminant := True;\n+                  return Abandon;\n+               else\n+                  return OK;\n+               end if;\n+            end Find_Access_Discriminant;\n+\n+            ---------------------------\n+            -- Find_Current_Instance --\n+            ---------------------------\n+\n+            function Find_Current_Instance\n+              (N : Node_Id) return Traverse_Result is\n+            begin\n+               if Nkind (N) = N_Attribute_Reference\n+                 and then Is_Access_Type (Etype (N))\n+                 and then Is_Entity_Name (Prefix (N))\n+                 and then Is_Type (Entity (Prefix (N)))\n+               then\n+                  References_Current_Instance := True;\n+                  return Abandon;\n+               else\n+                  return OK;\n+               end if;\n+            end Find_Current_Instance;\n+\n+            ------------------------\n+            -- Find_Internal_Call --\n+            ------------------------\n+\n+            function Find_Internal_Call (N : Node_Id) return Traverse_Result is\n+\n+               function Call_Scope (N : Node_Id) return Entity_Id;\n+               --  Return the scope enclosing a given call node N\n+\n+               ----------------\n+               -- Call_Scope --\n+               ----------------\n+\n+               function Call_Scope (N : Node_Id) return Entity_Id is\n+                  Nam : constant Node_Id := Name (N);\n+               begin\n+                  if Nkind (Nam) = N_Selected_Component then\n+                     return Scope (Entity (Prefix (Nam)));\n+                  else\n+                     return Scope (Entity (Nam));\n+                  end if;\n+               end Call_Scope;\n+\n+            begin\n+               if Nkind (N) = N_Function_Call\n+                 and then Call_Scope (N)\n+                            = Corresponding_Concurrent_Type (Rec_Type)\n+               then\n+                  Has_Internal_Call := True;\n+                  return Abandon;\n+               else\n+                  return OK;\n+               end if;\n+            end Find_Internal_Call;\n+\n+            procedure Search_Access_Discriminant is new\n+              Traverse_Proc (Find_Access_Discriminant);\n+\n+            procedure Search_Current_Instance is new\n+              Traverse_Proc (Find_Current_Instance);\n+\n+            procedure Search_Internal_Call is new\n+              Traverse_Proc (Find_Internal_Call);\n+\n+         begin\n+            --  A component of an object is said to require late initialization\n+            --  if:\n+\n+            --  it has an access discriminant value constrained by a per-object\n+            --  expression;\n+\n+            if Has_Access_Constraint (Defining_Identifier (Decl))\n+              and then No (Expression (Decl))\n+            then\n+               return True;\n+\n+            elsif Present (Expression (Decl)) then\n+\n+               --  it has an initialization expression that includes a name\n+               --  denoting an access discriminant;\n+\n+               Search_Access_Discriminant (Expression (Decl));\n+\n+               if Has_Access_Discriminant then\n+                  return True;\n+               end if;\n+\n+               --  or it has an initialization expression that includes a\n+               --  reference to the current instance of the type either by\n+               --  name...\n+\n+               Search_Current_Instance (Expression (Decl));\n+\n+               if References_Current_Instance then\n+                  return True;\n+               end if;\n+\n+               --  ...or implicitly as the target object of a call.\n+\n+               if Is_Protected_Record_Type (Rec_Type) then\n+                  Search_Internal_Call (Expression (Decl));\n+\n+                  if Has_Internal_Call then\n+                     return True;\n+                  end if;\n+               end if;\n+            end if;\n+\n+            return False;\n+         end Requires_Late_Initialization;\n+\n       --  Start of processing for Build_Init_Statements\n \n       begin\n@@ -2945,10 +3103,9 @@ package body Exp_Ch3 is\n \n          --  Loop through components, skipping pragmas, in 2 steps. The first\n          --  step deals with regular components. The second step deals with\n-         --  components that have per object constraints and no explicit\n-         --  initialization.\n+         --  components that require late initialization.\n \n-         Has_POC := False;\n+         Has_Late_Init_Comp := False;\n \n          --  First pass : regular components\n \n@@ -2961,11 +3118,11 @@ package body Exp_Ch3 is\n             Id  := Defining_Identifier (Decl);\n             Typ := Etype (Id);\n \n-            --  Leave any processing of per-object constrained component for\n-            --  the second pass.\n+            --  Leave any processing of component requiring late initialization\n+            --  for the second pass.\n \n-            if Has_Access_Constraint (Id) and then No (Expression (Decl)) then\n-               Has_POC := True;\n+            if Requires_Late_Initialization (Decl, Rec_Type) then\n+               Has_Late_Init_Comp := True;\n \n             --  Regular component cases\n \n@@ -3267,19 +3424,21 @@ package body Exp_Ch3 is\n               Make_Initialize_Protection (Rec_Type));\n          end if;\n \n-         --  Second pass: components with per-object constraints\n+         --  Second pass: components that require late initialization\n \n-         if Has_POC then\n+         if Has_Late_Init_Comp then\n             Decl := First_Non_Pragma (Component_Items (Comp_List));\n             while Present (Decl) loop\n                Comp_Loc := Sloc (Decl);\n                Id := Defining_Identifier (Decl);\n                Typ := Etype (Id);\n \n-               if Has_Access_Constraint (Id)\n-                 and then No (Expression (Decl))\n-               then\n-                  if Has_Non_Null_Base_Init_Proc (Typ) then\n+               if Requires_Late_Initialization (Decl, Rec_Type) then\n+                  if Present (Expression (Decl)) then\n+                     Append_List_To (Stmts,\n+                       Build_Assignment (Id, Expression (Decl)));\n+\n+                  elsif Has_Non_Null_Base_Init_Proc (Typ) then\n                      Append_List_To (Stmts,\n                        Build_Initialization_Call (Comp_Loc,\n                          Make_Selected_Component (Comp_Loc,\n@@ -3302,7 +3461,6 @@ package body Exp_Ch3 is\n \n                         Increment_Counter (Comp_Loc);\n                      end if;\n-\n                   elsif Component_Needs_Simple_Initialization (Typ) then\n                      Append_List_To (Stmts,\n                        Build_Assignment"}]}