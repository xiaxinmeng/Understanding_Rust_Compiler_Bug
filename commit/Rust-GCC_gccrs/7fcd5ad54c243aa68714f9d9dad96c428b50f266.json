{"sha": "7fcd5ad54c243aa68714f9d9dad96c428b50f266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZjZDVhZDU0YzI0M2FhNjg3MTRmOWQ5ZGFkOTZjNDI4YjUwZjI2Ng==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-02-10T16:48:24Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-02-10T16:48:24Z"}, "message": "[multiple changes]\n\n2010-02-10  Joost VandeVondele <jv244@cam.ac.uk>\n            Tobias Burnus <burnus@net-b.de>\n\n        PR fortran/40823\n        * decl.c (gfc_match_subroutine): Explicitly set\n        * sym->declared_at.\n\n2010-02-10  Tobias Burnus <burnus@net-b.de>\n\n        PR fortran/40823\n        * gfortran.dg/private_type_1.f90: Update error location.\n        * gfortran.dg/invalid_interface_assignment.f90: Ditto.\n        * gfortran.dg/typebound_operator_2.f03: Ditto.\n        * gfortran.dg/assignment_2.f90: Ditto.\n        * gfortran.dg/redefined_intrinsic_assignment.f90: Ditto.\n        * gfortran.dg/binding_label_tests_9.f03: Ditto.\n\nFrom-SVN: r156665", "tree": {"sha": "b6a7bb8f5481310a105cb032a2302d44b7be6d30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6a7bb8f5481310a105cb032a2302d44b7be6d30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fcd5ad54c243aa68714f9d9dad96c428b50f266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fcd5ad54c243aa68714f9d9dad96c428b50f266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fcd5ad54c243aa68714f9d9dad96c428b50f266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fcd5ad54c243aa68714f9d9dad96c428b50f266/comments", "author": null, "committer": null, "parents": [{"sha": "975d3303cc10d90d73d3e9344fe3765ca7e9efa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975d3303cc10d90d73d3e9344fe3765ca7e9efa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/975d3303cc10d90d73d3e9344fe3765ca7e9efa2"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "5efa90cdcfa32ce3ecc3dfebfe1126bb8c3b3a3e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7fcd5ad54c243aa68714f9d9dad96c428b50f266", "patch": "@@ -1,3 +1,9 @@\n+2010-02-10  Joost VandeVondele <jv244@cam.ac.uk>\n+\t    Tobias Burnus <burnus@net-b.de>\n+\n+\tPR fortran/40823\n+\t* decl.c (gfc_match_subroutine): Explicitly set sym->declared_at.\n+\n 2010-02-10  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/43015"}, {"sha": "82c67ae004594e4b2f67ebc09faa30527c35319c", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=7fcd5ad54c243aa68714f9d9dad96c428b50f266", "patch": "@@ -1,5 +1,5 @@\n /* Declaration statement matcher\n-   Copyright (C) 2002, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n@@ -5100,6 +5100,10 @@ gfc_match_subroutine (void)\n   if (get_proc_name (name, &sym, false))\n     return MATCH_ERROR;\n \n+  /* Set declared_at as it might point to, e.g., a PUBLIC statement, if\n+     the symbol existed before. */\n+  sym->declared_at = gfc_current_locus;\n+\n   if (add_hidden_procptr_result (sym) == SUCCESS)\n     sym = sym->result;\n "}, {"sha": "b3b5d770da4c32f7abbccd0e2e7b4ba2c679c55a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7fcd5ad54c243aa68714f9d9dad96c428b50f266", "patch": "@@ -1,3 +1,13 @@\n+2010-02-10  Tobias Burnus <burnus@net-b.de>\n+\n+\tPR fortran/40823\n+\t* gfortran.dg/private_type_1.f90: Update error location.\n+\t* gfortran.dg/invalid_interface_assignment.f90: Ditto.\n+\t* gfortran.dg/typebound_operator_2.f03: Ditto.\n+\t* gfortran.dg/assignment_2.f90: Ditto.\n+\t* gfortran.dg/redefined_intrinsic_assignment.f90: Ditto.\n+\t* gfortran.dg/binding_label_tests_9.f03: Ditto.\n+\n 2010-02-10  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/43015"}, {"sha": "47e400962cb78246770a98134f7240c75c1e41c3", "filename": "gcc/testsuite/gfortran.dg/assignment_2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Fassignment_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Fassignment_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassignment_2.f90?ref=7fcd5ad54c243aa68714f9d9dad96c428b50f266", "patch": "@@ -38,10 +38,10 @@ end module m2\n \n MODULE m3\n           INTERFACE ASSIGNMENT(=)\n-             module procedure s ! { dg-error \"must not redefine an INTRINSIC type\" }\n+             module procedure s\n           END Interface\n contains\n-             SUBROUTINE s(a,b)\n+             SUBROUTINE s(a,b) ! { dg-error \"must not redefine an INTRINSIC type\" }\n                  REAL,INTENT(OUT),VOLATILE :: a(1,*)\n                  REAL,INTENT(IN) :: b(:,:)\n              END SUBROUTINE"}, {"sha": "cdf1ef880dfd4d4322a071f0e388abeae088d089", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_9.f03", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_9.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_9.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_9.f03?ref=7fcd5ad54c243aa68714f9d9dad96c428b50f266", "patch": "@@ -2,18 +2,18 @@\n module x\n   use iso_c_binding\n   implicit none\n-  private :: bar ! { dg-warning \"PRIVATE but has been given the binding label\" }\n+  private :: bar\n   private :: my_private_sub\n-  private :: my_private_sub_2 ! { dg-warning \"PRIVATE but has been given the binding label\" }\n+  private :: my_private_sub_2\n   public :: my_public_sub\n contains\n-  subroutine bar() bind(c,name=\"foo\") \n+  subroutine bar() bind(c,name=\"foo\") ! { dg-warning \"PRIVATE but has been given the binding label\" }\n   end subroutine bar\n   \n   subroutine my_private_sub() bind(c, name=\"\")\n   end subroutine my_private_sub\n \n-  subroutine my_private_sub_2() bind(c) \n+  subroutine my_private_sub_2() bind(c) ! { dg-warning \"PRIVATE but has been given the binding label\" }\n   end subroutine my_private_sub_2\n \n   subroutine my_public_sub() bind(c, name=\"my_sub\")"}, {"sha": "f3c6e1269b229fa659d47c514e967e1fd2612d5a", "filename": "gcc/testsuite/gfortran.dg/invalid_interface_assignment.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Finvalid_interface_assignment.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Finvalid_interface_assignment.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finvalid_interface_assignment.f90?ref=7fcd5ad54c243aa68714f9d9dad96c428b50f266", "patch": "@@ -9,10 +9,10 @@ MODULE TT\n    INTEGER :: I\n  END TYPE data_type\n  INTERFACE ASSIGNMENT (=)\n-   MODULE PROCEDURE set   ! { dg-error \"Alternate return cannot appear\" }\n+   MODULE PROCEDURE set\n  END INTERFACE\n CONTAINS\n-  PURE SUBROUTINE set(x1,*)\n+  PURE SUBROUTINE set(x1,*) ! { dg-error \"Alternate return cannot appear\" }\n     TYPE(data_type), INTENT(OUT) :: x1\n     x1%i=0\n   END SUBROUTINE set"}, {"sha": "96b2eb4c8be92006c273bdfa45bc0db9610b0355", "filename": "gcc/testsuite/gfortran.dg/private_type_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprivate_type_1.f90?ref=7fcd5ad54c243aa68714f9d9dad96c428b50f266", "patch": "@@ -6,12 +6,12 @@\n module modboom\n   implicit none\n   private\n-  public:: dummysub ! { dg-error \"PRIVATE type and cannot be a dummy argument\" }\n+  public:: dummysub\n   type:: intwrapper\n     integer n\n   end type intwrapper\n contains\n-  subroutine dummysub(size, arg_array)\n+  subroutine dummysub(size, arg_array) ! { dg-error \"PRIVATE type and cannot be a dummy argument\" }\n    type(intwrapper) :: size\n    real, dimension(size%n) :: arg_array\n    real :: local_array(4)"}, {"sha": "40a0910b1ed9b15c96ed710627dcedb9fb5c3631", "filename": "gcc/testsuite/gfortran.dg/redefined_intrinsic_assignment.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Fredefined_intrinsic_assignment.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Fredefined_intrinsic_assignment.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fredefined_intrinsic_assignment.f90?ref=7fcd5ad54c243aa68714f9d9dad96c428b50f266", "patch": "@@ -7,10 +7,10 @@\n MODULE M1\n  IMPLICIT NONE\n  INTERFACE ASSIGNMENT(=)\n-  MODULE PROCEDURE T1 ! { dg-error \"redefine an INTRINSIC type assignment\" }\n+  MODULE PROCEDURE T1\n  END INTERFACE\n CONTAINS\n- SUBROUTINE T1(I,J)\n+ SUBROUTINE T1(I,J) ! { dg-error \"redefine an INTRINSIC type assignment\" }\n    INTEGER, INTENT(OUT)  :: I\n    INTEGER, INTENT(IN)  :: J\n    I=-J"}, {"sha": "cae2cdab71fec3406e6cddb69781359c30c66408", "filename": "gcc/testsuite/gfortran.dg/typebound_operator_2.f03", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcd5ad54c243aa68714f9d9dad96c428b50f266/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_operator_2.f03?ref=7fcd5ad54c243aa68714f9d9dad96c428b50f266", "patch": "@@ -14,7 +14,7 @@ MODULE m\n     PROCEDURE, NOPASS :: nopassed => onearg\n     PROCEDURE, PASS :: threearg\n     PROCEDURE, PASS :: sub\n-    PROCEDURE, PASS :: sub2 ! { dg-error \"must be a FUNCTION\" }\n+    PROCEDURE, PASS :: sub2\n     PROCEDURE, PASS :: func\n \n     ! These give errors at the targets' definitions.\n@@ -57,7 +57,7 @@ SUBROUTINE sub (a)\n     CLASS(t), INTENT(IN) :: a\n   END SUBROUTINE sub\n \n-  SUBROUTINE sub2 (a, x)\n+  SUBROUTINE sub2 (a, x) ! { dg-error \"must be a FUNCTION\" }\n     CLASS(t), INTENT(IN) :: a\n     INTEGER, INTENT(IN) :: x\n   END SUBROUTINE sub2"}]}