{"sha": "5b3d5f769bef7b9a8b43fc8269c14b56ad3be465", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIzZDVmNzY5YmVmN2I5YThiNDNmYzgyNjljMTRiNTZhZDNiZTQ2NQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2016-01-18T02:43:06Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2016-01-18T02:43:06Z"}, "message": "re PR tree-optimization/68799 (lto ICE on powerpc64le-linux-gnu builing python 2.7.x)\n\n2016-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR tree-optimization/68799\n\t* gimple-ssa-strength-reduction.c (create_phi_basis): Directly\n\tlook up phi candidates in the statement-candidate map.\n\t(phi_add_costs): Likewise.\n\t(record_phi_increments): Likewise.\n\t(phi_incr_cost): Likewise.\n\t(ncd_with_phi): Likewise.\n\t(all_phi_incrs_profitable): Likewise.\n\nFrom-SVN: r232491", "tree": {"sha": "f555b1b7028252865a63d347f260a5ad3dbf8dba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f555b1b7028252865a63d347f260a5ad3dbf8dba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43d57b29d1da9e6addf24f743bef05a68fccc507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43d57b29d1da9e6addf24f743bef05a68fccc507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43d57b29d1da9e6addf24f743bef05a68fccc507"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "8a1839e7e86b058c98d7056674e13795f59d7e66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b3d5f769bef7b9a8b43fc8269c14b56ad3be465", "patch": "@@ -1,3 +1,14 @@\n+2016-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/68799\n+\t* gimple-ssa-strength-reduction.c (create_phi_basis): Directly\n+\tlook up phi candidates in the statement-candidate map.\n+\t(phi_add_costs): Likewise.\n+\t(record_phi_increments): Likewise.\n+\t(phi_incr_cost): Likewise.\n+\t(ncd_with_phi): Likewise.\n+\t(all_phi_incrs_profitable): Likewise.\n+\n 2016-01-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* omp-low.c (mark_loops_in_oacc_kernels_region): Work around"}, {"sha": "46ee7a75b76e23661db560f04a8074352bb148c4", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=5b3d5f769bef7b9a8b43fc8269c14b56ad3be465", "patch": "@@ -2230,7 +2230,7 @@ create_phi_basis (slsr_cand_t c, gimple *from_phi, tree basis_name,\n   slsr_cand_t basis = lookup_cand (c->basis);\n   int nargs = gimple_phi_num_args (from_phi);\n   basic_block phi_bb = gimple_bb (from_phi);\n-  slsr_cand_t phi_cand = base_cand_from_table (gimple_phi_result (from_phi));\n+  slsr_cand_t phi_cand = *stmt_cand_map->get (from_phi);\n   auto_vec<tree> phi_args (nargs);\n \n   /* Process each argument of the existing phi that represents\n@@ -2339,7 +2339,7 @@ phi_add_costs (gimple *phi, slsr_cand_t c, int one_add_cost)\n {\n   unsigned i;\n   int cost = 0;\n-  slsr_cand_t phi_cand = base_cand_from_table (gimple_phi_result (phi));\n+  slsr_cand_t phi_cand = *stmt_cand_map->get (phi);\n \n   /* If we work our way back to a phi that isn't dominated by the hidden\n      basis, this isn't a candidate for replacement.  Indicate this by\n@@ -2550,7 +2550,7 @@ static void\n record_phi_increments (slsr_cand_t basis, gimple *phi)\n {\n   unsigned i;\n-  slsr_cand_t phi_cand = base_cand_from_table (gimple_phi_result (phi));\n+  slsr_cand_t phi_cand = *stmt_cand_map->get (phi);\n   \n   for (i = 0; i < gimple_phi_num_args (phi); i++)\n     {\n@@ -2622,7 +2622,7 @@ phi_incr_cost (slsr_cand_t c, const widest_int &incr, gimple *phi,\n   unsigned i;\n   int cost = 0;\n   slsr_cand_t basis = lookup_cand (c->basis);\n-  slsr_cand_t phi_cand = base_cand_from_table (gimple_phi_result (phi));\n+  slsr_cand_t phi_cand = *stmt_cand_map->get (phi);\n \n   for (i = 0; i < gimple_phi_num_args (phi); i++)\n     {\n@@ -2966,7 +2966,7 @@ ncd_with_phi (slsr_cand_t c, const widest_int &incr, gphi *phi,\n {\n   unsigned i;\n   slsr_cand_t basis = lookup_cand (c->basis);\n-  slsr_cand_t phi_cand = base_cand_from_table (gimple_phi_result (phi));\n+  slsr_cand_t phi_cand = *stmt_cand_map->get (phi);\n \n   for (i = 0; i < gimple_phi_num_args (phi); i++)\n     {\n@@ -3176,7 +3176,7 @@ all_phi_incrs_profitable (slsr_cand_t c, gimple *phi)\n {\n   unsigned i;\n   slsr_cand_t basis = lookup_cand (c->basis);\n-  slsr_cand_t phi_cand = base_cand_from_table (gimple_phi_result (phi));\n+  slsr_cand_t phi_cand = *stmt_cand_map->get (phi);\n \n   for (i = 0; i < gimple_phi_num_args (phi); i++)\n     {"}]}