{"sha": "f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBlZjg0YTI3ZmI2NzZmOTczMjMyZGEzN2I3YzhjNmNlZWQ5Yjk2YQ==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2001-05-21T12:20:51Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2001-05-21T12:20:51Z"}, "message": "msp.c (A_SIZE): Define according to STACK_SIZE;\n\n\t* gcc.c-torture/unsorted/msp.c (A_SIZE): Define according to\n\tSTACK_SIZE;\n\t* gcc.c-torture/compile/991214-2.c (HISTO_SIZE): Define according\n\tto STACK_SIZE; Use it to define size of add_histo array.\n\t* gcc.c-torture/compile/920723-1.c (GITT_SIZE): Define according\n\tto STACK_SIZE.\n\t(f): Use GITT_SIZE to define size of gitt local table.\n\t* gcc.c-torture/compile/930621-1.c (BYTEMEM_SIZE): Define according\n\tto STACK_SIZE; Use it to define size of bytemem array.\n\nFrom-SVN: r42384", "tree": {"sha": "abb9c5aac876929bc85140757ff8ef2e2ba6222a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abb9c5aac876929bc85140757ff8ef2e2ba6222a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/comments", "author": null, "committer": null, "parents": [{"sha": "ef73e13988eeb6e1966237f0af5d1b89c8a31284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef73e13988eeb6e1966237f0af5d1b89c8a31284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef73e13988eeb6e1966237f0af5d1b89c8a31284"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "5a0bea3ad44154ee4a679c33490b707fa27528c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "patch": "@@ -1,3 +1,15 @@\n+2001-05-21  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* gcc.c-torture/unsorted/msp.c (A_SIZE): Define according to\n+\tSTACK_SIZE;\n+\t* gcc.c-torture/compile/991214-2.c (HISTO_SIZE): Define according\n+\tto STACK_SIZE; Use it to define size of add_histo array.\n+\t* gcc.c-torture/compile/920723-1.c (GITT_SIZE): Define according \n+\tto STACK_SIZE.\n+\t(f): Use GITT_SIZE to define size of gitt local table.\n+\t* gcc.c-torture/compile/930621-1.c (BYTEMEM_SIZE): Define according \n+\tto STACK_SIZE; Use it to define size of bytemem array.\n+\n 2001-05-21  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* gcc.c-torture/compile/20000804-1.x: New file, this test fails"}, {"sha": "d8734a6796e3951d30385985a8628ddfa152d450", "filename": "gcc/testsuite/gcc.c-torture/compile/920723-1.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920723-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920723-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920723-1.c?ref=f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "patch": "@@ -1,3 +1,11 @@\n+#if defined(STACK_SIZE) && STACK_SIZE < 65536\n+# define GITT_SIZE 75\n+#endif\n+\n+#ifndef GITT_SIZE\n+# define GITT_SIZE 150\n+#endif\n+\n typedef struct {\n   double x, y;\n } vector_t;\n@@ -6,7 +14,7 @@ f(int count,vector_t*pos,double r,double *rho)\n {\n   int i, j, miny, maxy, hy;\n   float help, d;\n-  int gitt[150][150];\n+  int gitt[GITT_SIZE][GITT_SIZE];\n   int *data = (int *)malloc(count*sizeof(int));\n   for (i = 0; i < count; i++)\n     rho[i] = 0;"}, {"sha": "4199bbe0870c6bd4cee40da35fbd222737f2c962", "filename": "gcc/testsuite/gcc.c-torture/compile/930621-1.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930621-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930621-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930621-1.c?ref=f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "patch": "@@ -1,6 +1,14 @@\n+#if defined(STACK_SIZE) && (STACK_SIZE < 65536)\n+# define BYTEMEM_SIZE 10000L\n+#endif\n+\n+#ifndef BYTEMEM_SIZE\n+# define BYTEMEM_SIZE 45000L\n+#endif\n+\n int bytestart[5000 + 1];\n unsigned char modtext[400 + 1];\n-unsigned char bytemem[2][45000L + 1];\n+unsigned char bytemem[2][BYTEMEM_SIZE + 1];\n \n long\n modlookup (int l)"}, {"sha": "3e18d215e1391c912ccaeb0719d2eda7170d72db", "filename": "gcc/testsuite/gcc.c-torture/compile/991214-2.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F991214-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F991214-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F991214-2.c?ref=f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "patch": "@@ -1,3 +1,9 @@\n+#if defined(STACK_SIZE) && (STACK_SIZE < 65536)\n+# define HISTO_SIZE 9\n+#else\n+# define HISTO_SIZE 36\n+#endif\n+\n extern int N;\n extern int nrows;\n extern int or_num_angles;\n@@ -8,7 +14,7 @@ typedef struct\n   int count;\n }Histo;\n \n-Histo add_histo[10][2][36][36];\n+Histo add_histo[10][2][HISTO_SIZE][HISTO_SIZE];\n \n void cmd_connection_statistics( )\n {"}, {"sha": "5d350fd5ee04aaf61cfdaac392d147299889549d", "filename": "gcc/testsuite/gcc.c-torture/unsorted/msp.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2Fgcc.c-torture%2Funsorted%2Fmsp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0ef84a27fb676f973232da37b7c8c6ceed9b96a/gcc%2Ftestsuite%2Fgcc.c-torture%2Funsorted%2Fmsp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Funsorted%2Fmsp.c?ref=f0ef84a27fb676f973232da37b7c8c6ceed9b96a", "patch": "@@ -1,5 +1,10 @@\n+#ifdef STACK_SIZE\n+# define A_SIZE (STACK_SIZE/sizeof(int))\n+#else\n+# define A_SIZE 16384\n+#endif\n foo ()\n {\n-  int a[16384];\n+  int a[A_SIZE];\n   bar (a);\n }"}]}