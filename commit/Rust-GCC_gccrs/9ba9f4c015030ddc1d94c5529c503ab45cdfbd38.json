{"sha": "9ba9f4c015030ddc1d94c5529c503ab45cdfbd38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJhOWY0YzAxNTAzMGRkYzFkOTRjNTUyOWM1MDNhYjQ1Y2RmYmQzOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-13T13:18:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-13T13:18:02Z"}, "message": "[multiple changes]\n\n2015-11-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_attr.adb: Minor reformatting.\n\n2015-11-13  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c: Ensure that it is possible to get killed process\n\tstatus on Windows.\n\nFrom-SVN: r230318", "tree": {"sha": "81d0d2ca1432cdfb9453e6af8b8391c0262558f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81d0d2ca1432cdfb9453e6af8b8391c0262558f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38/comments", "author": null, "committer": null, "parents": [{"sha": "e4779ba467b9e46298e8d7e9720d36928df10994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4779ba467b9e46298e8d7e9720d36928df10994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4779ba467b9e46298e8d7e9720d36928df10994"}], "stats": {"total": 70, "additions": 46, "deletions": 24}, "files": [{"sha": "7155aa4a948a5fc8845de78f12e625106fa2d687", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9ba9f4c015030ddc1d94c5529c503ab45cdfbd38", "patch": "@@ -1,3 +1,26 @@\n+2015-11-13  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_attr.adb: Minor reformatting.\n+\n+2015-11-13  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c: Ensure that it is possible to get killed process\n+\tstatus on Windows.\n+\n+2015-11-13  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat_rm.texi, gnat_ugn.texi, doc/gnat_ugn/gnat_project_manager.rst\n+\tdoc/gnat_ugn/building_executable_programs_with_gnat.rst,\n+\tdoc/gnat_ugn/platform_specific_information.rst,\n+\tdoc/gnat_ugn/gnat_and_program_execution.rst,\n+\tdoc/gnat_ugn/gnat_utility_programs.rst,\n+\tdoc/gnat_ugn/the_gnat_compilation_model.rst,\n+\tdoc/gnat_rm/compatibility_and_porting_guide.rst,\n+\tdoc/gnat_rm/implementation_defined_pragmas.rst,\n+\tdoc/gnat_rm/representation_clauses_and_pragmas.rst,\n+\tdoc/gnat_rm/standard_and_implementation_defined_restrictions.rst:\n+\tUpdate documentation.\n+\n 2015-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sigtramp-ios.c, init.c: Minor cosmetic tweaks."}, {"sha": "1c6d323f0e7d64618266091837753d4efa4c674f", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=9ba9f4c015030ddc1d94c5529c503ab45cdfbd38", "patch": "@@ -3200,8 +3200,7 @@ __gnat_kill (int pid, int sig, int close ATTRIBUTE_UNUSED)\n     return;\n   if (sig == 9)\n     {\n-      TerminateProcess (h, 0);\n-      __gnat_win32_remove_handle (NULL, pid);\n+      TerminateProcess (h, 1);\n     }\n   else if (sig == SIGINT)\n     GenerateConsoleCtrlEvent (CTRL_C_EVENT, pid);"}, {"sha": "abf7f1bfbcddb6a4d909b59d3f2da1955a3b3a82", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba9f4c015030ddc1d94c5529c503ab45cdfbd38/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=9ba9f4c015030ddc1d94c5529c503ab45cdfbd38", "patch": "@@ -4523,28 +4523,28 @@ package body Exp_Attr is\n               Right_Opnd => Y_Addr);\n \n          Rewrite (N,\n-           Make_If_Expression (Loc,\n-             New_List (\n-               Cond,\n-\n-               Make_Op_Ge (Loc,\n-                  Left_Opnd   =>\n-                   Make_Op_Add (Loc,\n-                     Left_Opnd  => New_Copy_Tree (X_Addr),\n-                     Right_Opnd =>\n-                       Make_Op_Subtract (Loc,\n-                         Left_Opnd  => X_Size,\n-                         Right_Opnd => Make_Integer_Literal (Loc, 1))),\n-                  Right_Opnd => Y_Addr),\n-\n-               Make_Op_Ge (Loc,\n-                   Make_Op_Add (Loc,\n-                     Left_Opnd  => New_Copy_Tree (Y_Addr),\n-                     Right_Opnd =>\n-                       Make_Op_Subtract (Loc,\n-                         Left_Opnd  => Y_Size,\n-                         Right_Opnd => Make_Integer_Literal (Loc, 1))),\n-                  Right_Opnd => X_Addr))));\n+           Make_If_Expression (Loc, New_List (\n+             Cond,\n+\n+             Make_Op_Ge (Loc,\n+               Left_Opnd   =>\n+                 Make_Op_Add (Loc,\n+                   Left_Opnd  => New_Copy_Tree (X_Addr),\n+                   Right_Opnd =>\n+                     Make_Op_Subtract (Loc,\n+                       Left_Opnd  => X_Size,\n+                       Right_Opnd => Make_Integer_Literal (Loc, 1))),\n+               Right_Opnd => Y_Addr),\n+\n+             Make_Op_Ge (Loc,\n+               Left_Opnd  =>\n+                 Make_Op_Add (Loc,\n+                   Left_Opnd  => New_Copy_Tree (Y_Addr),\n+                   Right_Opnd =>\n+                     Make_Op_Subtract (Loc,\n+                       Left_Opnd  => Y_Size,\n+                       Right_Opnd => Make_Integer_Literal (Loc, 1))),\n+               Right_Opnd => X_Addr))));\n \n          Analyze_And_Resolve (N, Standard_Boolean);\n       end Overlaps_Storage;"}]}