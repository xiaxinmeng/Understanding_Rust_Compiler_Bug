{"sha": "2cdc207340d10fdbf643ae6b83cb289af1ba32d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNkYzIwNzM0MGQxMGZkYmY2NDNhZTZiODNjYjI4OWFmMWJhMzJkNg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2005-02-19T18:18:31Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2005-02-19T18:18:31Z"}, "message": "mklibgcc.in: If libgcc_eh.a would be empty, put a dummy object inside.\n\n\t* mklibgcc.in: If libgcc_eh.a would be empty, put a dummy\n\tobject inside.\n\t* config/ia64/hpux.h: Don't define LIBGCC_SPEC.\n\nFrom-SVN: r95286", "tree": {"sha": "22e07c5a6de6c9d4e9a3151d3560e09aaff6fe15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22e07c5a6de6c9d4e9a3151d3560e09aaff6fe15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cdc207340d10fdbf643ae6b83cb289af1ba32d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cdc207340d10fdbf643ae6b83cb289af1ba32d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cdc207340d10fdbf643ae6b83cb289af1ba32d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cdc207340d10fdbf643ae6b83cb289af1ba32d6/comments", "author": null, "committer": null, "parents": [{"sha": "d3f9c1b9bc8e9a0f7d565070ad524a2aefa50f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f9c1b9bc8e9a0f7d565070ad524a2aefa50f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f9c1b9bc8e9a0f7d565070ad524a2aefa50f38"}], "stats": {"total": 112, "additions": 66, "deletions": 46}, "files": [{"sha": "7b1551883ddafba313d0c06a2b494373f3272006", "filename": "gcc/ChangeLog", "status": "modified", "additions": 45, "deletions": 39, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdc207340d10fdbf643ae6b83cb289af1ba32d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdc207340d10fdbf643ae6b83cb289af1ba32d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cdc207340d10fdbf643ae6b83cb289af1ba32d6", "patch": "@@ -1,3 +1,9 @@\n+2005-02-19  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* mklibgcc.in: If libgcc_eh.a would be empty, put a dummy\n+\tobject inside.\n+\t* config/ia64/hpux.h: Don't define LIBGCC_SPEC.\n+\n 2005-02-19  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR other/19525\n@@ -133,7 +139,7 @@\n \t* stmt.c (emit_case_bit_tests): Call fold_convert instead of convert.\n \t(estimate_case_costs): Don't call convert.\n \t* expmed.c (expand_shift): Likewise.\n-\t(make_tree): Call fold_convert instead of convert. \n+\t(make_tree): Call fold_convert instead of convert.\n \n 2005-02-18  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -180,9 +186,9 @@\n 2005-02-17  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* builtins.c (expand_builtin_return_addr): Remove tem parameter.\n-\ttem becomes a local variable which is set to the value of the \n+\ttem becomes a local variable which is set to the value of the\n \tback end defined INITIAL_FRAME_ADDRESS macro.\n-\t(expand_builtin_frame_address): Omit the base parameter to \n+\t(expand_builtin_frame_address): Omit the base parameter to\n \texpand_builtin_return_addr.\n \t(expand_builtin_profile_func): Likewise.\n \t* config/s390/s390.h (INITIAL_FRAME_ADDRESS_RTX): Define new macro.\n@@ -264,11 +270,11 @@\n \n 2005-02-17  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n-\t* config/rs6000/t-rtems: Completely reworked. \n+\t* config/rs6000/t-rtems: Completely reworked.\n \n 2005-02-17  Ira Rosen  <irar@il.ibm.com>\n \n-        * tree-data-ref.c (array_base_name_differ_p): Remove gcc_assert.\n+\t* tree-data-ref.c (array_base_name_differ_p): Remove gcc_assert.\n \n 2005-02-17  Ira Rosen  <irar@il.ibm.com>\n \n@@ -293,11 +299,11 @@\n \tdeclaration in tree-vectorizer.c, now has an extern declaration in\n \ttree-vectorizer.h).\n \t(slpeel_make_loop_iterate_ntimes, slpeel_can_duplicate_loop_p,\n-\tslpeel_verify_cfg_after_peeling, vect_strip_conversion, \n-\tget_vectype_for_scalar_type, vect_is_simple_use, \n+\tslpeel_verify_cfg_after_peeling, vect_strip_conversion,\n+\tget_vectype_for_scalar_type, vect_is_simple_use,\n \tvect_is_simple_iv_evolution, vect_can_force_dr_alignment_p,\n \tvect_supportable_dr_alignment, new_loop_vec_info, destroy_loop_vec_info,\n-\tnew_stmt_vec_info, vect_analyze_loop, vectorizable_load, \n+\tnew_stmt_vec_info, vect_analyze_loop, vectorizable_load,\n \tvectorizable_store, vectorizable_operation, vectorizable_assignment,\n \tvect_transform_loop, vect_print_dump_info, vect_set_verbosity_level,\n \tfind_loop_location): Likewise.\n@@ -313,7 +319,7 @@\n \tdestroy_loop_vec_info, new_stmt_vec_info, vect_print_dump_info,\n \tvect_set_verbosity_level, find_loop_location): Likewise.\n \n-\t(vect_analyze_loop): Function externalized. Declaration moved to \n+\t(vect_analyze_loop): Function externalized. Declaration moved to\n \ttree-vectorized.h. Function definition moved to tree-vect-analyze.c.\n \t(vect_analyze_loop_form): Moved to tree-vect-analyze.c.\n \t(vect_mark_stmts_to_be_vectorized, vect_analyze_scalar_cycles,\n@@ -328,12 +334,12 @@\n \tvect_base_addr_differ_p, vect_object_analysis, vect_address_analysis,\n \tvect_get_memtag): Likewise.\n \n-\t(vectorizable_load): Function externalized. Declaration moved to \n+\t(vectorizable_load): Function externalized. Declaration moved to\n \ttree-vectorized.h. Function definition moved to tree-vect-transform.c.\n \t(vectorizable_store, vectorizable_operation, vectorizable_assignment,\n \tvect_transform_loop): Likewise.\n \t(vect_transform_stmt): Moved to tree-vect-transform.c.\n-\t(vect_align_data_ref, vect_create_destination_var, \n+\t(vect_align_data_ref, vect_create_destination_var,\n \tvect_create_data_ref_ptr, vect_create_index_for_vector_ref,\n \tvect_create_addr_base_for_vector_ref, vect_get_new_vect_var,\n \tvect_get_vec_def_for_operand, vect_init_vector,\n@@ -342,7 +348,7 @@\n \tvect_gen_niters_for_prolog_loop, vect_update_inits_of_dr,\n \tvect_update_inits_of_drs, vect_do_peeling_for_alignment,\n \tvect_do_peeling_for_loop_bound): Likewise.\n-\t\n+\n \t* tree-vect-analyze.c: New file.\n \t* tree-vect-transform.c: New file.\n \n@@ -356,7 +362,7 @@\n \n \t* doc/install.texi (Specific): Update link for Darwin-specific\n \ttool binary site.\n-\t\n+\n 2005-02-16  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* fold-const.c (invert_truthvalue): <INTEGER_CST>: Call\n@@ -530,7 +536,7 @@\n \n 2005-02-15  Richard Henderson  <rth@redhat.com>\n \n-\t* bb-reorder.c (find_traces_1_round): Force fallthru edge from a \n+\t* bb-reorder.c (find_traces_1_round): Force fallthru edge from a\n \tcall to be best_edge.\n \n 2005-02-14  Kazu Hirata  <kazu@cs.umass.edu>\n@@ -546,7 +552,7 @@\n \t* rtl.h: Adjust the prototype for recompute_reg_usage.\n \n 2005-02-14  Daniel Berlin  <dberlin@dberlin.org>\n-\t\n+\n \t* tree-dump.c (dump_files): Update to reflect new member\n \tof dump_file_info.\n \t(dump_register): Add new argument.\n@@ -812,7 +818,7 @@\n \t* config/rs6000/t-rtems:\n \t(MULTILIB_OPTIONS): Remove mcpu=602.\n \t(MUTLILIB_DIRNAMES): Remove m602.\n-\t(MULTILIB_MATCHES): Add ${MULTILIB_MATCHES_FLOAT}. \n+\t(MULTILIB_MATCHES): Add ${MULTILIB_MATCHES_FLOAT}.\n \tLet mcpu=602 match mcpu=603.\n \t(MULTILIB_NEW_EXCEPTIONS_ONLY): Add mcpu=601, mcpu=602, mcpu=m603.\n \n@@ -989,7 +995,7 @@\n \n 2005-02-09  Dorit Naishlos  <dorit@il.ibm.com>\n \n-\t* tree-vectorizer.c (vect_set_dump_settings): Check that dump_file \n+\t* tree-vectorizer.c (vect_set_dump_settings): Check that dump_file\n \texists.\n \n 2005-02-09  Richard Guenther  <rguenth@gcc.gnu.org>\n@@ -1100,8 +1106,8 @@\n \t(slpeel_tree_peel_loop_to_edge): Likewise.\n \n \t(vect_analyze_offset_expr): Call to vect_print_dump_info with\n-\tappropriate verbosity level instead of call to vect_debug_details \n-\tor vect_debug_stats. \n+\tappropriate verbosity level instead of call to vect_debug_details\n+\tor vect_debug_stats.\n \t(vect_get_base_and_offset):\n \t(vect_create_addr_base_for_vector_ref):\n \t(get_vectype_for_scalar_type):\n@@ -1155,7 +1161,7 @@\n \t(vect_mark_stmts_to_be_vectorized):\n \t(vect_get_loop_niters):\n \t(vect_analyze_loop_form):\n-\t(vect_analyze_loop): Likewise. \n+\t(vect_analyze_loop): Likewise.\n \t(vect_mark_stmts_to_be_vectorized): Add call to print_generic_expr.\n \n 2005-02-07  Richard Sandiford  <rsandifo@redhat.com>\n@@ -1185,7 +1191,7 @@\n \n 2005-02-07  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n-\t* config/arm/rtems-elf.h (SUBTARGET_EXTRA_ASM_SPEC): \n+\t* config/arm/rtems-elf.h (SUBTARGET_EXTRA_ASM_SPEC):\n \tLet !-mhard-float !-msoft-float imply -mfpu=softfpa.\n \n 2005-02-06  Roger Sayle  <roger@eyesopen.com>\n@@ -1346,7 +1352,7 @@\n \t(vect_analyze_loop_form): Argument in call to vect_debug_details/stats\n \tchanged from loop to loop_loc.\n \n-\t(vect_enhance_data_refs_alignment): Removed unused variable loop.\t\n+\t(vect_enhance_data_refs_alignment): Removed unused variable loop.\n \n 2005-02-03  Leehod Baruch  <leehod@il.ibm.com>\n \t    Dorit Naishlos  <dorit@il.ibm.com>\n@@ -1361,7 +1367,7 @@\n \t(vect_create_index_for_vector_ref): Likewise.\n \t(vect_update_ivs_after_vectorizer): Likewise.\n \t(new_stmt_vec_info): Likewise.\n-\t\n+\n \t(new_loop_vec_info): Second argument in call to new_stmt_vec_info was\n \tchanged from loop to loop_vinfo.\n \t(vect_create_data_ref_ptr): First argument in call to\n@@ -1377,7 +1383,7 @@\n \twas changed from loop to loop_vinfo.\n \t(vect_analyze_data_ref_dependences): Third argument in call to\n \tvect_analyze_data_ref_dependence was changed from loop to loop_vinfo.\n-\t\n+\n \t(vect_create_index_for_vector_ref): Get the loop from loop_vinfo.\n \t(vect_create_data_ref_ptr): Likewise.\n \t(vect_init_vector): Likewise.\n@@ -1456,11 +1462,11 @@\n 2005-02-03  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* tree-vectorizer.c (slpeel_make_loop_iterate_ntimes): Call\n-\tstandard_iv_increment_position. Remove call to bsi_next \n+\tstandard_iv_increment_position. Remove call to bsi_next\n \t(no need to bump the iterator anymore).\n \t(vect_create_index_for_vector_ref): Call\n \tstandard_iv_increment_position. Remove second function argument.\n-\t(vect_finish_stmt_generation): Remove call to bsi_next \n+\t(vect_finish_stmt_generation): Remove call to bsi_next\n \t(no need to bump the iterator anymore).\n \t(vect_create_data_ref_ptr): Remove second argument (bsi) in call\n \tto vect_create_index_for_vector_ref.\n@@ -1728,16 +1734,16 @@\n \n \t* config.gcc: Don't include embedded systems fragment, switches default\n \tdebugging format to ELF.\n-\t* config/i386/openbsdelf.h: Add DBX_REGISTER_NUMBER since we no \n+\t* config/i386/openbsdelf.h: Add DBX_REGISTER_NUMBER since we no\n \tlonger pick it up there.\n \n 2005-01-31  Dale Johannesen  <dalej@apple.com>\n-\t\n+\n \t* doc/extend.texi (nested functions): Fix linkage description.\n \tClarify that static is not allowed.\n \n 2005-01-31  Dale Johannesen  <dalej@apple.com>\n-\t\n+\n \t* config/rs6000/darwin.md (movsf_low_di):  Make work.\n \t(movdf_low_di):  Make work.\n \n@@ -1818,7 +1824,7 @@\n 2005-01-30  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/19624\n-\t\n+\n \t* Makefile.in (tree-ssa-pre.o): Add CFGLOOP_H.\n \t* tree-ssa-pre.c: Add cfgloop.h.\n \tUpdate comment.\n@@ -1851,7 +1857,7 @@\n \tPR target/19700\n \t* config/i386/i386.c (ix86_expand_copysign): New.\n \t(ix86_split_copysign_const): New.\n-\t(ix86_split_copysign_var): Rename from ix86_split_copysign, \n+\t(ix86_split_copysign_var): Rename from ix86_split_copysign,\n \trearrange op1/nmask operands.\n \t* config/i386/i386-protos.h: Update.\n \t* config/i386/i386.md (copysignsf3): Use ix86_expand_copysign.\n@@ -2227,7 +2233,7 @@\n \n 2005-01-26  Steven Bosscher  <stevenb@suse.de>\n \n-\tPR middle-end/19616\t\n+\tPR middle-end/19616\n \t* tree.h (CALL_EXPR_TAILCALL): Add comment.\n \t* calls.c (check_sibcall_argument_overlap_1): Revert the change\n \tto this function from 2004-07-10.\n@@ -2623,7 +2629,7 @@\n \n 2005-01-21  Mark Dettinger  <dettinge@de.ibm.com>\n \n-\t* config/s390/s390.c (struct processor_costs): New fields \n+\t* config/s390/s390.c (struct processor_costs): New fields\n \tdlgr, dlr, dr, dsgfr, dsgr.\n \t(z900_cost, z990_cost): Values for new fields.\n \t(s390_rtx_costs): New cases MEM und COMPARE in switch\n@@ -2807,7 +2813,7 @@\n \t(add_location_or_const_value_attribute): Use it.\n \tAlso try to generate a frame_base from a single element location\n \tlist.\n-\t\n+\n 2005-01-20  Kazu Hirata  <kazu@cs.umass.edu>\n \n \tPR tree-optimization/15349\n@@ -2947,7 +2953,7 @@\n 2005-01-19  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n \tPR target/19529\n-\t* config/sh/t-rtems: New. \n+\t* config/sh/t-rtems: New.\n \t* config.gcc (sh-*-rtems*): Reflect having added config/sh/t-rtems.\n \n 2005-01-19  Zdenek Dvorak  <dvorakz@suse.cz>\n@@ -3369,7 +3375,7 @@\n 2005-01-15  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n \t* config/mips/rtems.h (MIPS_DEFAULT_GVALUE): Set to 0.\n-\t* config/mips/t-rtems (MULTILIBS_DIRNAMES,MULTILIB_OPTIONS): \n+\t* config/mips/t-rtems (MULTILIBS_DIRNAMES,MULTILIB_OPTIONS):\n \tRemove little endian multilib variants.\n \tAdd mips32 multilib variant.\n \n@@ -3481,7 +3487,7 @@\n \t(TARGET_ASM_FILE_END): Call arm_file_end.\n \t(aof_file_end): Likewise.\n \t* arm-protos.h (thumb_call_via_reg): Declare.\n-\t* arm.md (call_reg_thumb, call_value_reg_thumb): Call \n+\t* arm.md (call_reg_thumb, call_value_reg_thumb): Call\n \tthumb_call_via_reg in normal case.\n \n 2005-01-14  Jakub Jelinek  <jakub@redhat.com>\n@@ -3568,7 +3574,7 @@\n \tIX86_BUILTIN_MOVDQ2Q): Remove.\n \t(IX86_BUILTIN_VEC_EXT_V4SI): New.\n \t(ix86_init_mmx_sse_builtins, ix86_expand_builtin): Update to match.\n-\t(ix86_expand_vector_extract): For V4S[FI], extract element 0 after \n+\t(ix86_expand_vector_extract): For V4S[FI], extract element 0 after\n \tshuffling.\n \t* config/i386/sse.md (sse_concatv2sf): Accept zero operand 2.\n \t(sse2_pextrw): Fix immediate constraint.\n@@ -3729,7 +3735,7 @@\n \tvec_extractv16qi, vec_initv16qi): New.\n \n \t* config/i386/emmintrin.h (__m128i, __m128d): Use typedef, not define.\n-\t(_mm_set_sd, _mm_set1_pd, _mm_setzero_pd, _mm_set_epi64x, \n+\t(_mm_set_sd, _mm_set1_pd, _mm_setzero_pd, _mm_set_epi64x,\n \t_mm_set_epi32, _mm_set_epi16, _mm_set_epi8, _mm_setzero_si128): Use\n \tconstructor form.\n \t(_mm_load_pd, _mm_store_pd): Use plain dereference."}, {"sha": "9b66a633ba1925f2648f1d913cd43e1bdc73431e", "filename": "gcc/config/ia64/hpux.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdc207340d10fdbf643ae6b83cb289af1ba32d6/gcc%2Fconfig%2Fia64%2Fhpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdc207340d10fdbf643ae6b83cb289af1ba32d6/gcc%2Fconfig%2Fia64%2Fhpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fhpux.h?ref=2cdc207340d10fdbf643ae6b83cb289af1ba32d6", "patch": "@@ -91,13 +91,6 @@ do {\t\t\t\t\t\t\t\\\n \t  %{mlp64:-L/usr/lib/hpux64/libp} -lgprof} \\\n      %{!symbolic:-lc}}\"\n \n-#ifndef CROSS_COMPILE\n-#undef LIBGCC_SPEC\n-#define LIBGCC_SPEC \\\n-  \"%{shared-libgcc:%{!mlp64:-lgcc_s}%{mlp64:-lgcc_s_hpux64} -lgcc} \\\n-   %{!shared-libgcc:-lgcc}\"\n-#endif\n-\n #undef SUBTARGET_SWITCHES\n #define SUBTARGET_SWITCHES \\\n   { \"ilp32\",    MASK_ILP32,     \"Generate ILP32 code\" }, \\"}, {"sha": "f444ff2b686a5806c27adafeeb43b5a40222098d", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cdc207340d10fdbf643ae6b83cb289af1ba32d6/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cdc207340d10fdbf643ae6b83cb289af1ba32d6/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=2cdc207340d10fdbf643ae6b83cb289af1ba32d6", "patch": "@@ -94,6 +94,9 @@ libgcov_c_dep='stmp-dirs $(srcdir)/libgcov.c $(srcdir)/gcov-io.h $(srcdir)/gcov-\n # Dependencies for fp-bit.c\n fpbit_c_dep='stmp-dirs config.status tsystem.h'\n \n+# Flag whether we need eh_dummy.c\n+need_eh_dummy=\n+\n if [ \"$SHLIB_LINK\" ]; then\n   # Test -fvisibility=hidden.  We need both a -fvisibility=hidden on\n   # the command line, and a #define to prevent libgcc2.h etc from\n@@ -540,6 +543,19 @@ for ml in $MULTILIBS; do\n       fi\n     done\n \n+    # If nothing went into libgcc_eh.a, create a dummy object -\n+    # some linkers don't like totally empty archives.\n+    if [ -z \"$LIB2ADDEHSTATIC\" ]; then\n+      file=eh_dummy.c\n+      out=\"libgcc/${dir}/eh_dummy${objext}\"\n+      need_eh_dummy=1\n+\n+      echo $out: stmp-dirs $file\n+      echo \"\t$gcc_compile\" $flags '$(vis_hide)' -fexceptions -c $file -o $out\n+      echo $libgcc_eh_a: $out\n+    fi\n+   \n+\n   else # no libgcc_eh.a\n     for file in $LIB2ADDEH; do\n       case $file in\n@@ -760,6 +776,11 @@ echo \"\t  if [ -d \\$\\$d ]; then true; else $mkinstalldirs \\$\\$d; fi; \\\\\"\n echo \"\tdone\"\n echo \"\tif [ -f stmp-dirs ]; then true; else touch stmp-dirs; fi\"\n \n+if [ \"$need_eh_dummy\" ]; then\n+  echo \"eh_dummy.c:\"\n+  echo \"\techo 'struct eh_dummy;' > \\$@\"\n+fi\n+\n echo \"\"\n echo \"install: all\"\n for ml in $MULTILIBS; do"}]}