{"sha": "7a3248463c2095ba112a31809f2965d04bed03b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EzMjQ4NDYzYzIwOTViYTExMmEzMTgwOWYyOTY1ZDA0YmVkMDNiMw==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2019-10-07T09:13:16Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2019-10-07T09:13:16Z"}, "message": "Delete auto-in_equiv.f90 forgot to use svn delete the first time.\n\nFrom-SVN: r276651", "tree": {"sha": "4aa8d186b2fb5240db587f12e0337ffe5926799a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4aa8d186b2fb5240db587f12e0337ffe5926799a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a3248463c2095ba112a31809f2965d04bed03b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3248463c2095ba112a31809f2965d04bed03b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a3248463c2095ba112a31809f2965d04bed03b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3248463c2095ba112a31809f2965d04bed03b3/comments", "author": null, "committer": null, "parents": [{"sha": "9b0365879b3c4917f5a2485a1fca8bb678484bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0365879b3c4917f5a2485a1fca8bb678484bfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0365879b3c4917f5a2485a1fca8bb678484bfe"}], "stats": {"total": 63, "additions": 0, "deletions": 63}, "files": [{"sha": "57c384d17720620da84aa94ea62db1687daedc1e", "filename": "gcc/testsuite/gfortran.dg/auto_in_equiv_3.f90", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0365879b3c4917f5a2485a1fca8bb678484bfe/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_in_equiv_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0365879b3c4917f5a2485a1fca8bb678484bfe/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_in_equiv_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_in_equiv_3.f90?ref=9b0365879b3c4917f5a2485a1fca8bb678484bfe", "patch": "@@ -1,63 +0,0 @@\n-! { dg-do run }\n-! { dg-options \"-fdec-static -fno-automatic\" }\n-\n-! Contributed by Mark Eggleston <mark.eggleston@codethink.com>\n-\n-! Storage is NOT on the static unless explicitly specified using the\n-! DEC extension \"automatic\". The address of the first local variable\n-! is used to determine that storage for the automatic local variable\n-! is different to that of a local variable with no attributes. The\n-! contents of the local variable in suba should be overwritten by the\n-! call to subb. \n-!\n-program test\n-  integer :: dummy\n-  integer, parameter :: address = kind(loc(dummy))\n-  integer(address) :: ad1\n-  integer(address) :: ad2\n-  integer(address) :: ad3\n-  logical :: ok\n-\n-  call suba(0, ad1)\n-  call subb(0, ad2)\n-  call suba(1, ad1)\n-  call subc(0, ad3)\n-  ok = (ad1.eq.ad3).and.(ad1.ne.ad2)\n-  if (.not.ok) stop 4\n-\n-contains\n-  subroutine suba(option, addr) \n-    integer, intent(in) :: option\n-    integer(address), intent(out) :: addr\n-    integer, automatic :: a\n-    integer :: b\n-    equivalence (a, b)\n-    addr = loc(a)\n-    if (option.eq.0) then\n-      ! initialise a and c\n-      a = 9\n-      if (a.ne.b) stop 1\n-      if (loc(a).ne.loc(b)) stop 2\n-    else\n-      ! a should've been overwritten\n-      if (a.eq.9) stop 3\n-    end if\n-  end subroutine suba\n-\n-  subroutine subb(dummy, addr)\n-    integer, intent(in) :: dummy\n-    integer(address), intent(out) :: addr\n-    integer :: x\n-    addr = loc(x)\n-    x = 77\n-  end subroutine subb\n-\n-  subroutine subc(dummy, addr)\n-    integer, intent(in) :: dummy\n-    integer(address), intent(out) :: addr\n-    integer, automatic :: y\n-    addr = loc(y)\n-    y = 77\n-  end subroutine subc\n-\n-end program test"}]}