{"sha": "70cdce4f3070899e0844fa8ed44afbea70561aac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBjZGNlNGYzMDcwODk5ZTA4NDRmYThlZDQ0YWZiZWE3MDU2MWFhYw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-12-01T21:53:07Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-12-01T21:53:07Z"}, "message": "re PR c++/87523 (ICE: Closures apparently fail to capture constexpr)\n\n\tPR c++/87523\n\t* g++.dg/cpp1y/lambda-generic-87523.C: New test.\n\nFrom-SVN: r266714", "tree": {"sha": "072e9e70a28a2e111ad8ecb5610f9600e9059e31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/072e9e70a28a2e111ad8ecb5610f9600e9059e31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70cdce4f3070899e0844fa8ed44afbea70561aac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70cdce4f3070899e0844fa8ed44afbea70561aac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70cdce4f3070899e0844fa8ed44afbea70561aac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70cdce4f3070899e0844fa8ed44afbea70561aac/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a5129a0dfde266e7a1736c61045f656459d0cf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5129a0dfde266e7a1736c61045f656459d0cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5129a0dfde266e7a1736c61045f656459d0cf8"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "2cdbba498b722685c5f6e1225a6491d481728edd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70cdce4f3070899e0844fa8ed44afbea70561aac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70cdce4f3070899e0844fa8ed44afbea70561aac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=70cdce4f3070899e0844fa8ed44afbea70561aac", "patch": "@@ -40,6 +40,9 @@\n \tPR c++/79629\n \t* g++.dg/other/error35.C: New test.\n \n+\tPR c++/87523\n+\t* g++.dg/cpp1y/lambda-generic-87523.C: New test.\n+\n 2018-12-01  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/predict-22.c: Update expected output."}, {"sha": "ecba1cfc32276b9b11997c5832438da722950000", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-87523.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70cdce4f3070899e0844fa8ed44afbea70561aac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-87523.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70cdce4f3070899e0844fa8ed44afbea70561aac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-87523.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-87523.C?ref=70cdce4f3070899e0844fa8ed44afbea70561aac", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/87523\n+// { dg-do compile { target c++14 } }\n+\n+template <typename T, T v>\n+struct my_integer_constant {\n+    constexpr my_integer_constant() {}\n+    constexpr operator T() const { return v; }\n+    constexpr T operator()() const { return v; }\n+};\n+\n+template <typename T, T... u>\n+struct constant_call {\n+    template <typename Callback>\n+    static void call(T v, Callback f) {\n+        char dummy[sizeof...(u)] = { ( (v == u) ? (f(my_integer_constant<T, u>{}), static_cast<char>(0)) : static_cast<char>(0))... };\n+        (void)dummy;\n+    }\n+};\n+\n+void f(bool reverse_in, bool other_bool_in) {\n+    auto helper = [&] (auto reverse_t) {\n+        bool constexpr reverse_v = reverse_t;\n+        (void)reverse_v;\n+        constant_call<bool, true, false>::call(other_bool_in,\n+                                               [&] (auto newb) {\n+                                                   bool reverse_v_dyn = reverse_v;\n+                                               });\n+    };\n+    constant_call<bool, true, false>::call(reverse_in, [&] (auto reverse_t) {\n+            helper(reverse_t);\n+        });\n+}"}]}