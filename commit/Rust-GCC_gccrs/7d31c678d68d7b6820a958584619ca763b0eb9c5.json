{"sha": "7d31c678d68d7b6820a958584619ca763b0eb9c5", "node_id": "C_kwDOANBUbNoAKDdkMzFjNjc4ZDY4ZDdiNjgyMGE5NTg1ODQ2MTljYTc2M2IwZWI5YzU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-26T08:11:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-26T08:11:58Z"}, "message": "ifcvt: Improve noce_try_store_flag_mask [PR105314]\n\nThe following testcase regressed on riscv due to the splitting of critical\nedges in the sink pass, similarly to x86_64 compared to GCC 11 we now swap\nthe edges, whether true or false edge goes to an empty forwarded bb.\nFrom GIMPLE POV, those 2 forms are equivalent, but as can be seen here, for\nsome ifcvt opts it matters one way or another.\n\nOn this testcase, noce_try_store_flag_mask used to trigger and transformed\nif (pseudo2) pseudo1 = 0;\ninto\npseudo1 &= -(pseudo2 == 0);\nBut with the swapped edges ifcvt actually sees\nif (!pseudo2) pseudo3 = pseudo1; else pseudo3 = 0;\nand noce_try_store_flag_mask punts.  IMHO there is no reason why it\nshould punt those, it is equivalent to\npseudo3 = pseudo1 & -(pseudo2 == 0);\nand especially if the target has 3 operand AND, it shouldn't be any more\ncostly (and even with 2 operand AND, it might very well happen that RA\ncan make it happen without any extra moves).\n\nInitially I've just removed the rtx_equal_p calls from the conditions\nand didn't add anything there, but that broke aarch64 bootstrap and\nregressed some testcases on x86_64, where if_info->a or if_info->b could be\nsome larger expression that we can't force into a register.\nFurthermore, the case where both if_info->a and if_info->b are constants is\nbetter handled by other ifcvt optimizations like noce_try_store_flag\nor noce_try_inverse_constants or noce_try_store_flag_constants.\nSo, I've restricted it to just a REG (perhaps SUBREG of REG might be ok too)\nnext to what has been handled previously.\n\n2022-04-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/105314\n\t* ifcvt.cc (noce_try_store_flag_mask): Don't require that the non-zero\n\toperand is equal to if_info->x, instead use the non-zero operand\n\tas one of the operands of AND with if_info->x as target.\n\n\t* gcc.target/riscv/pr105314.c: New test.", "tree": {"sha": "3f8d3e92e1860d492cbaffdef9beadd65404187e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f8d3e92e1860d492cbaffdef9beadd65404187e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d31c678d68d7b6820a958584619ca763b0eb9c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d31c678d68d7b6820a958584619ca763b0eb9c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d31c678d68d7b6820a958584619ca763b0eb9c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d31c678d68d7b6820a958584619ca763b0eb9c5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4836ac9acd0c991a4fe1dec9438773a2c4eb5ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4836ac9acd0c991a4fe1dec9438773a2c4eb5ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4836ac9acd0c991a4fe1dec9438773a2c4eb5ac"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "b983e87389fc40ff2a50746617ef62e8d04e97bf", "filename": "gcc/ifcvt.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31c678d68d7b6820a958584619ca763b0eb9c5/gcc%2Fifcvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31c678d68d7b6820a958584619ca763b0eb9c5/gcc%2Fifcvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.cc?ref=7d31c678d68d7b6820a958584619ca763b0eb9c5", "patch": "@@ -1678,18 +1678,18 @@ noce_try_store_flag_mask (struct noce_if_info *if_info)\n   reversep = 0;\n \n   if ((if_info->a == const0_rtx\n-       && rtx_equal_p (if_info->b, if_info->x))\n+       && (REG_P (if_info->b) || rtx_equal_p (if_info->b, if_info->x)))\n       || ((reversep = (noce_reversed_cond_code (if_info) != UNKNOWN))\n \t  && if_info->b == const0_rtx\n-\t  && rtx_equal_p (if_info->a, if_info->x)))\n+\t  && (REG_P (if_info->a) || rtx_equal_p (if_info->a, if_info->x))))\n     {\n       start_sequence ();\n       target = noce_emit_store_flag (if_info,\n \t\t\t\t     gen_reg_rtx (GET_MODE (if_info->x)),\n \t\t\t\t     reversep, -1);\n       if (target)\n         target = expand_simple_binop (GET_MODE (if_info->x), AND,\n-\t\t\t\t      if_info->x,\n+\t\t\t\t      reversep ? if_info->a : if_info->b,\n \t\t\t\t      target, if_info->x, 0,\n \t\t\t\t      OPTAB_WIDEN);\n "}, {"sha": "7a54577e9a98d5efd698eb25d524b82b26d9aec9", "filename": "gcc/testsuite/gcc.target/riscv/pr105314.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d31c678d68d7b6820a958584619ca763b0eb9c5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr105314.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d31c678d68d7b6820a958584619ca763b0eb9c5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr105314.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpr105314.c?ref=7d31c678d68d7b6820a958584619ca763b0eb9c5", "patch": "@@ -0,0 +1,12 @@\n+/* PR rtl-optimization/105314 */\n+/* { dg-do compile } *\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-not \"\\tbeq\\t\" } } */\n+\n+long\n+foo (long a, long b, long c)\n+{\n+  if (c)\n+    a = 0;\n+  return a;\n+}"}]}