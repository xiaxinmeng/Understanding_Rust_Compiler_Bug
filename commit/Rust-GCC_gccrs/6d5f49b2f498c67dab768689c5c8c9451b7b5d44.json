{"sha": "6d5f49b2f498c67dab768689c5c8c9451b7b5d44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ1ZjQ5YjJmNDk4YzY3ZGFiNzY4Njg5YzVjOGM5NDUxYjdiNWQ0NA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-07-17T06:54:45Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-07-17T06:54:45Z"}, "message": "m68k.c: Include expr.h and reload.h.\n\n        * config/m68k/m68k.c: Include expr.h and reload.h.\n        (print_operand_address) [16 bit int]: Cast INTVAL to int for %d.\n        [general int]: Use HOST_WIDE_INT_PRINT_DEC.\n\nFrom-SVN: r44065", "tree": {"sha": "4c57fc5459fa32c64720b9d38a042d4462f834e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c57fc5459fa32c64720b9d38a042d4462f834e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d5f49b2f498c67dab768689c5c8c9451b7b5d44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d5f49b2f498c67dab768689c5c8c9451b7b5d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d5f49b2f498c67dab768689c5c8c9451b7b5d44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d5f49b2f498c67dab768689c5c8c9451b7b5d44/comments", "author": null, "committer": null, "parents": [{"sha": "0021de69a61e2562e356284718444c1182d1f942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0021de69a61e2562e356284718444c1182d1f942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0021de69a61e2562e356284718444c1182d1f942"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "c704023f6b0c250ad6b7bfff760cfa4d06683865", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d5f49b2f498c67dab768689c5c8c9451b7b5d44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d5f49b2f498c67dab768689c5c8c9451b7b5d44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d5f49b2f498c67dab768689c5c8c9451b7b5d44", "patch": "@@ -1,3 +1,9 @@\n+2001-07-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/m68k/m68k.c: Include expr.h and reload.h.\n+\t(print_operand_address) [16 bit int]: Cast INTVAL to int for %d.\n+\t[general int]: Use HOST_WIDE_INT_PRINT_DEC.\n+\n 2001-07-16  Daniel Berlin  <dan@cgsoftware.com>\n \t    Richard Henderson  <rth@redhat.com>\n "}, {"sha": "54e4d376ed3f528e88fa727c871e76c44d4f6f7b", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d5f49b2f498c67dab768689c5c8c9451b7b5d44/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d5f49b2f498c67dab768689c5c8c9451b7b5d44/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=6d5f49b2f498c67dab768689c5c8c9451b7b5d44", "patch": "@@ -33,6 +33,8 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"toplev.h\"\n+#include \"expr.h\"\n+#include \"reload.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n@@ -3828,23 +3830,17 @@ print_operand_address (file, addr)\n #ifdef MOTOROLA\n #ifdef SGS\n \t    /* Many SGS assemblers croak on size specifiers for constants. */\n-\t    fprintf (file, \"%d\", INTVAL (addr));\n+\t    fprintf (file, \"%d\", (int) INTVAL (addr));\n #else\n-\t    fprintf (file, \"%d.w\", INTVAL (addr));\n+\t    fprintf (file, \"%d.w\", (int) INTVAL (addr));\n #endif\n #else\n-\t    fprintf (file, \"%d:w\", INTVAL (addr));\n+\t    fprintf (file, \"%d:w\", (int) INTVAL (addr));\n #endif\n \t  }\n \telse if (GET_CODE (addr) == CONST_INT)\n \t  {\n-\t    fprintf (file,\n-#if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n-\t\t     \"%d\",\n-#else\n-\t\t     \"%ld\",\n-#endif\n-\t\t     INTVAL (addr));\n+\t    fprintf (file, HOST_WIDE_INT_PRINT_DEC, INTVAL (addr));\n \t  }\n \telse if (TARGET_PCREL)\n \t  {"}]}