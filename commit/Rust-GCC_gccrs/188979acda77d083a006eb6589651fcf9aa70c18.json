{"sha": "188979acda77d083a006eb6589651fcf9aa70c18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg4OTc5YWNkYTc3ZDA4M2EwMDZlYjY1ODk2NTFmY2Y5YWE3MGMxOA==", "commit": {"author": {"name": "Jiong Wang", "email": "jiong.wang@arm.com", "date": "2014-10-22T08:44:44Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2014-10-22T08:44:44Z"}, "message": "[Dejagnu] fix gcc-dg-prune glitch when filtering \"relocation truncation\" error\n\n  gcc/testsuite/\n    * lib/compat.exp (compat-run): Remove \"unresolved\".\n    * lib/gcc-defs.exp (${tools}_check_compile): Update code logic for\n    unsupported testcase.\n\nFrom-SVN: r216543", "tree": {"sha": "938320480d4affc005606c649a276522600fb641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/938320480d4affc005606c649a276522600fb641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/188979acda77d083a006eb6589651fcf9aa70c18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/188979acda77d083a006eb6589651fcf9aa70c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/188979acda77d083a006eb6589651fcf9aa70c18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/188979acda77d083a006eb6589651fcf9aa70c18/comments", "author": null, "committer": null, "parents": [{"sha": "3d2cf79f8112e357327a1a8a1765ab1c6022244c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2cf79f8112e357327a1a8a1765ab1c6022244c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d2cf79f8112e357327a1a8a1765ab1c6022244c"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "b11d3a9dce43a2a910649c92e3c71f61bd5a2833", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/188979acda77d083a006eb6589651fcf9aa70c18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/188979acda77d083a006eb6589651fcf9aa70c18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=188979acda77d083a006eb6589651fcf9aa70c18", "patch": "@@ -1,3 +1,9 @@\n+2014-10-22  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* lib/compat.exp (compat-run): Remove \"unresolved\".\n+\t* lib/gcc-defs.exp (${tools}_check_compile): Update code logic for\n+\tunsupported testcase.\n+\n 2014-10-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/63594"}, {"sha": "45cf0e07d581cc639c32daef383fbb9d59bb32d3", "filename": "gcc/testsuite/lib/compat.exp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/188979acda77d083a006eb6589651fcf9aa70c18/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/188979acda77d083a006eb6589651fcf9aa70c18/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fcompat.exp?ref=188979acda77d083a006eb6589651fcf9aa70c18", "patch": "@@ -134,7 +134,6 @@ proc compat-run { testname objlist dest optall optfile optstr } {\n \t\t     \"$options\"]\n     if ![${tool}_check_compile \"$testcase $testname link\" \"\" \\\n \t $dest $comp_output] then {\n-\tunresolved \"$testcase $testname execute $optstr\"\n \treturn\n     }\n "}, {"sha": "d4796674f3a5d0d6887e82cde69d9e4dfea49673", "filename": "gcc/testsuite/lib/gcc-defs.exp", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/188979acda77d083a006eb6589651fcf9aa70c18/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/188979acda77d083a006eb6589651fcf9aa70c18/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp?ref=188979acda77d083a006eb6589651fcf9aa70c18", "patch": "@@ -54,12 +54,17 @@ proc ${tool}_check_compile {testcase option objname gcc_output} {\n     if { [info proc ${tool}-dg-prune] != \"\" } {\n \tglobal target_triplet\n \tset gcc_output [${tool}-dg-prune $target_triplet $gcc_output]\n-    }\n-\n-    set unsupported_message [${tool}_check_unsupported_p $gcc_output]\n-    if { $unsupported_message != \"\" } {\n-\tunsupported \"$testcase: $unsupported_message\"\n-\treturn 0\n+\tif [string match \"*::unsupported::*\" $gcc_output] then {\n+\t    regsub -- \"::unsupported::\" $gcc_output \"\" gcc_output\n+\t    unsupported \"$testcase: $gcc_output\"\n+\t    return 0\n+\t}\n+    } else {\n+\tset unsupported_message [${tool}_check_unsupported_p $gcc_output]\n+\tif { $unsupported_message != \"\" } {\n+\t    unsupported \"$testcase: $unsupported_message\"\n+\t    return 0\n+\t}\n     }\n \n     # remove any leftover LF/CR to make sure any output is legit"}]}