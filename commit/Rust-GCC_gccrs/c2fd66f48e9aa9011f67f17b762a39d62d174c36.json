{"sha": "c2fd66f48e9aa9011f67f17b762a39d62d174c36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJmZDY2ZjQ4ZTlhYTkwMTFmNjdmMTdiNzYyYTM5ZDYyZDE3NGMzNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-12-29T13:13:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-12-29T13:13:42Z"}, "message": "local-alloc.c (update_equiv_regs): Don't use copy_rtx on PATTERN.\n\n2000-12-29  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* local-alloc.c (update_equiv_regs): Don't use copy_rtx on PATTERN.\n\n*** local-alloc.c\t2000/11/30 21:40:33\t1.75\n--- local-alloc.c\t2000/12/29 13:10:59\n*************** update_equiv_regs ()\n*** 1141,1146 ****\n  \t\t  rtx new_insn;\n\n! \t\t  new_insn = emit_insn_before (copy_rtx (PATTERN (equiv_insn)),\n! \t\t\t\t\t       insn);\n  \t\t  REG_NOTES (PREV_INSN (insn)) = REG_NOTES (equiv_insn);\n  \t\t  REG_NOTES (equiv_insn) = 0;\n--- 1141,1145 ----\n  \t\t  rtx new_insn;\n\n! \t\t  new_insn = emit_insn_before (PATTERN (equiv_insn), insn);\n  \t\t  REG_NOTES (PREV_INSN (insn)) = REG_NOTES (equiv_insn);\n  \t\t  REG_NOTES (equiv_insn) = 0;\n\nFrom-SVN: r38536", "tree": {"sha": "91ea9477d30ea98886a71cebd854ccbdcf0120dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91ea9477d30ea98886a71cebd854ccbdcf0120dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2fd66f48e9aa9011f67f17b762a39d62d174c36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2fd66f48e9aa9011f67f17b762a39d62d174c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2fd66f48e9aa9011f67f17b762a39d62d174c36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2fd66f48e9aa9011f67f17b762a39d62d174c36/comments", "author": null, "committer": null, "parents": [{"sha": "e1a132c650dc39229d566e3105cfaa7be4415f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1a132c650dc39229d566e3105cfaa7be4415f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1a132c650dc39229d566e3105cfaa7be4415f17"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "1f2b7971823670904694ba7843b4be9e0967b305", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fd66f48e9aa9011f67f17b762a39d62d174c36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fd66f48e9aa9011f67f17b762a39d62d174c36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2fd66f48e9aa9011f67f17b762a39d62d174c36", "patch": "@@ -1,5 +1,7 @@\n 2000-12-29  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* local-alloc.c (update_equiv_regs): Don't use copy_rtx on PATTERN.\n+\n \t* toplev.c (main): Call xmalloc_set_program_name.\n \t* gcc.c (main): Likewise.\n "}, {"sha": "f1d1b8527b3144f708fdf93969760449bb246539", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2fd66f48e9aa9011f67f17b762a39d62d174c36/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2fd66f48e9aa9011f67f17b762a39d62d174c36/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=c2fd66f48e9aa9011f67f17b762a39d62d174c36", "patch": "@@ -1131,17 +1131,16 @@ update_equiv_regs ()\n \t\t  NOTE_LINE_NUMBER (equiv_insn) = NOTE_INSN_DELETED;\n \t\t  NOTE_SOURCE_FILE (equiv_insn) = 0;\n \t\t  \n-\t\t  reg_equiv[regno].init_insns = \n-\t\t    XEXP (reg_equiv[regno].init_insns, 1);\n+\t\t  reg_equiv[regno].init_insns\n+\t\t    = XEXP (reg_equiv[regno].init_insns, 1);\n \t\t}\n \t      /* Move the initialization of the register to just before\n \t\t INSN.  Update the flow information.  */\n \t      else if (PREV_INSN (insn) != equiv_insn)\n \t\t{\n \t\t  rtx new_insn;\n \n-\t\t  new_insn = emit_insn_before (copy_rtx (PATTERN (equiv_insn)),\n-\t\t\t\t\t       insn);\n+\t\t  new_insn = emit_insn_before (PATTERN (equiv_insn), insn);\n \t\t  REG_NOTES (PREV_INSN (insn)) = REG_NOTES (equiv_insn);\n \t\t  REG_NOTES (equiv_insn) = 0;\n "}]}