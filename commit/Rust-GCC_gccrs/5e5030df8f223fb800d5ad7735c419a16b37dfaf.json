{"sha": "5e5030df8f223fb800d5ad7735c419a16b37dfaf", "node_id": "C_kwDOANBUbNoAKDVlNTAzMGRmOGYyMjNmYjgwMGQ1YWQ3NzM1YzQxOWExNmIzN2RmYWY", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-12-10T20:53:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-07T16:24:05Z"}, "message": "[Ada] treepr: Print value of static expression\n\ngcc/ada/\n\n\t* treepr.adb (Print_Node_Ref): Print the value if available.", "tree": {"sha": "02c9b99fe2f7ac44399caf9ba0b4190174c2fd33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02c9b99fe2f7ac44399caf9ba0b4190174c2fd33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e5030df8f223fb800d5ad7735c419a16b37dfaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e5030df8f223fb800d5ad7735c419a16b37dfaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e5030df8f223fb800d5ad7735c419a16b37dfaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e5030df8f223fb800d5ad7735c419a16b37dfaf/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1226283cd9ec5c1a916ed219895ffe11b89ea9c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1226283cd9ec5c1a916ed219895ffe11b89ea9c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1226283cd9ec5c1a916ed219895ffe11b89ea9c0"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "ad2bbf07df8dc7fd27f6a9df2cd1b823649e12b4", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e5030df8f223fb800d5ad7735c419a16b37dfaf/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e5030df8f223fb800d5ad7735c419a16b37dfaf/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=5e5030df8f223fb800d5ad7735c419a16b37dfaf", "patch": "@@ -37,6 +37,7 @@ with Namet;                use Namet;\n with Nlists;               use Nlists;\n with Output;               use Output;\n with Seinfo;               use Seinfo;\n+with Sem_Eval;             use Sem_Eval;\n with Sinfo;                use Sinfo;\n with Sinfo.Nodes;          use Sinfo.Nodes;\n with Sinfo.Utils;          use Sinfo.Utils;\n@@ -1642,6 +1643,24 @@ package body Treepr is\n             end if;\n          end if;\n \n+         --  If this is an integer-like expression whose value is known, print\n+         --  that value.\n+\n+         if Nkind (N) in N_Subexpr\n+           and then Compile_Time_Known_Value (N)\n+           and then Present (Etype (N))\n+           and then not Is_Array_Type (Etype (N))\n+         then\n+            if Is_Entity_Name (N) -- e.g. enumeration literal\n+              or else Nkind (N) in N_Integer_Literal\n+                                 | N_Character_Literal\n+                                 | N_Unchecked_Type_Conversion\n+            then\n+               Print_Str (\" val = \");\n+               UI_Write (Expr_Value (N));\n+            end if;\n+         end if;\n+\n          if Nkind (N) in N_Entity then\n             Write_Str (\" (Entity_Id=\");\n          else"}]}