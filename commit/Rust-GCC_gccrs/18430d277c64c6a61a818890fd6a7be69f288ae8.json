{"sha": "18430d277c64c6a61a818890fd6a7be69f288ae8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg0MzBkMjc3YzY0YzZhNjFhODE4ODkwZmQ2YTdiZTY5ZjI4OGFlOA==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2008-12-18T03:27:27Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2008-12-18T03:27:27Z"}, "message": "* config.sub, config.guess: Update from upstream sources.\n\nFrom-SVN: r142805", "tree": {"sha": "4ec18c6ace4aba906d37af14f4a28d5c35760829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ec18c6ace4aba906d37af14f4a28d5c35760829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18430d277c64c6a61a818890fd6a7be69f288ae8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18430d277c64c6a61a818890fd6a7be69f288ae8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18430d277c64c6a61a818890fd6a7be69f288ae8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18430d277c64c6a61a818890fd6a7be69f288ae8/comments", "author": null, "committer": null, "parents": [{"sha": "27937508d156bd78e814fdda2b15438673bdb0e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27937508d156bd78e814fdda2b15438673bdb0e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27937508d156bd78e814fdda2b15438673bdb0e6"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "756e732ed011970889b38cd859153814d83226d5", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18430d277c64c6a61a818890fd6a7be69f288ae8/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18430d277c64c6a61a818890fd6a7be69f288ae8/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=18430d277c64c6a61a818890fd6a7be69f288ae8", "patch": "@@ -1,3 +1,7 @@\n+2008-12-02  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* config.sub, config.guess: Update from upstream sources.\n+\n 2008-12-12  Sebastian Pop <sebastian.pop@amd.com>\n \n \t* configure.ac (ppllibs): Add by default the lib flags."}, {"sha": "aeb53233ecbee901697c4a833dd7dc1aca3b77fd", "filename": "config.guess", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18430d277c64c6a61a818890fd6a7be69f288ae8/config.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18430d277c64c6a61a818890fd6a7be69f288ae8/config.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.guess?ref=18430d277c64c6a61a818890fd6a7be69f288ae8", "patch": "@@ -4,7 +4,7 @@\n #   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n #   Free Software Foundation, Inc.\n \n-timestamp='2008-11-15'\n+timestamp='2008-12-18'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -337,7 +337,7 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n \t# This test works for both compilers.\n \tif [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n-\t    if echo '\\n#ifdef __amd64\\nIS_64BIT_ARCH\\n#endif' | \\\n+\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n \t\t(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n \t\tgrep IS_64BIT_ARCH >/dev/null\n \t    then"}, {"sha": "9489dc7867b2850efa0907b6a625fdc143761fe9", "filename": "config.sub", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18430d277c64c6a61a818890fd6a7be69f288ae8/config.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18430d277c64c6a61a818890fd6a7be69f288ae8/config.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.sub?ref=18430d277c64c6a61a818890fd6a7be69f288ae8", "patch": "@@ -4,7 +4,7 @@\n #   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n #   Free Software Foundation, Inc.\n \n-timestamp='2008-09-08'\n+timestamp='2008-12-11'\n \n # This file is (in principle) common to ALL GNU software.\n # The presence of a machine in this file suggests that SOME GNU software\n@@ -249,6 +249,7 @@ case $basic_machine in\n \t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n \t| i370 | i860 | i960 | ia64 \\\n \t| ip2k | iq2000 \\\n+\t| lm32 \\\n \t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n \t| maxq | mb | microblaze | mcore | mep | metag \\\n \t| mips | mipsbe | mipseb | mipsel | mipsle \\\n@@ -279,7 +280,7 @@ case $basic_machine in\n \t| powerpc | powerpc64 | powerpc64le | powerpcle | ppcbe \\\n \t| pyramid \\\n \t| score \\\n-\t| sh | sh[1234] | sh[24]a | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n \t| sh64 | sh64le \\\n \t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n \t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n@@ -331,6 +332,7 @@ case $basic_machine in\n \t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n \t| i*86-* | i860-* | i960-* | ia64-* \\\n \t| ip2k-* | iq2000-* \\\n+\t| lm32-* \\\n \t| m32c-* | m32r-* | m32rle-* \\\n \t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n \t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n@@ -362,7 +364,7 @@ case $basic_machine in\n \t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* | ppcbe-* \\\n \t| pyramid-* \\\n \t| romp-* | rs6000-* \\\n-\t| sh-* | sh[1234]-* | sh[24]a-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n+\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n \t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n \t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n \t| sparclite-* \\\n@@ -1182,7 +1184,7 @@ case $basic_machine in\n \twe32k)\n \t\tbasic_machine=we32k-att\n \t\t;;\n-\tsh[1234] | sh[24]a | sh[34]eb | sh[1234]le | sh[23]ele)\n+\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n \t\tbasic_machine=sh-unknown\n \t\t;;\n \tsparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)"}]}