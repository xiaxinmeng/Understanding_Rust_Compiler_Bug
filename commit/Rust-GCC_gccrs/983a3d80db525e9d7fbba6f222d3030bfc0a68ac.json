{"sha": "983a3d80db525e9d7fbba6f222d3030bfc0a68ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgzYTNkODBkYjUyNWU5ZDdmYmJhNmYyMjJkMzAzMGJmYzBhNjhhYw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-04-11T10:52:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-11T10:52:33Z"}, "message": "sem_res.adb: Minor code reorganization and comment fixes.\n\n2013-04-11  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_res.adb: Minor code reorganization and comment fixes.\n\t* sem_type.adb: Minor reformatting.\n\nFrom-SVN: r197768", "tree": {"sha": "0cd18bc76b9356903ed69ddcf5c366358e91c993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cd18bc76b9356903ed69ddcf5c366358e91c993"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/983a3d80db525e9d7fbba6f222d3030bfc0a68ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/983a3d80db525e9d7fbba6f222d3030bfc0a68ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/983a3d80db525e9d7fbba6f222d3030bfc0a68ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/983a3d80db525e9d7fbba6f222d3030bfc0a68ac/comments", "author": null, "committer": null, "parents": [{"sha": "1486a00e3be13869fa6b38d75643df52499a535f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1486a00e3be13869fa6b38d75643df52499a535f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1486a00e3be13869fa6b38d75643df52499a535f"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "051a222b3f009e7dfa85045f7869806beb8556c7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983a3d80db525e9d7fbba6f222d3030bfc0a68ac/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983a3d80db525e9d7fbba6f222d3030bfc0a68ac/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=983a3d80db525e9d7fbba6f222d3030bfc0a68ac", "patch": "@@ -1,3 +1,8 @@\n+2013-04-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb: Minor code reorganization and comment fixes.\n+\t* sem_type.adb: Minor reformatting.\n+\n 2013-04-11  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch4.adb (Process_Transient_Object): Add new"}, {"sha": "e320acd52fa5ec69662e4499e4d70723515b67b8", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983a3d80db525e9d7fbba6f222d3030bfc0a68ac/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983a3d80db525e9d7fbba6f222d3030bfc0a68ac/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=983a3d80db525e9d7fbba6f222d3030bfc0a68ac", "patch": "@@ -4032,7 +4032,7 @@ earlier versions of the package body.\n Syntax:\n \n @smallexample @c ada\n-pragma No_Inline (NAME {, NAME});\n+pragma No_Inline (NAME @{, NAME@});\n @end smallexample\n \n @noindent"}, {"sha": "e60f91161ddf408dd7c842d0ebfa23822aea8156", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983a3d80db525e9d7fbba6f222d3030bfc0a68ac/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983a3d80db525e9d7fbba6f222d3030bfc0a68ac/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=983a3d80db525e9d7fbba6f222d3030bfc0a68ac", "patch": "@@ -2060,16 +2060,17 @@ package body Sem_Res is\n          Analyze_Dimension (N);\n          return;\n \n-      --  A Raise_Expression takes its type from context. The expression\n-      --  itself does not specify any possible interpretation.\n-\n-      --  Seems confusing to set the Etype to Typ here, only to be overwritten\n-      --  and set to Ctx_Type in the big case statement???\n+      --  A Raise_Expression takes its type from context. The Etype was set\n+      --  to Any_Type, reflecting the fact that the expression itself does\n+      --  not specify any possible interpretation. So we set the type to the\n+      --  resolution type here and now. We need to do this before Resolve sees\n+      --  the Any_Type value.\n \n       elsif Nkind (N) = N_Raise_Expression then\n          Set_Etype (N, Typ);\n \n-      --  Return if type = Any_Type (previous error encountered).\n+      --  Any other case of Any_Type as the Etype value means that we had\n+      --  a previous error.\n \n       elsif Etype (N) = Any_Type then\n          Debug_A_Exit (\"resolving  \", N, \"  (done, Etype = Any_Type)\");\n@@ -2815,10 +2816,14 @@ package body Sem_Res is\n \n             --  Why is the following null, needs a comment ???\n \n-            when N_Quantified_Expression => null;\n+            when N_Quantified_Expression\n+                             => null;\n+\n+            --  Nothing to do for Raise_Expression, since we took care of\n+            --  setting the Etype earlier, and no other processing is needed.\n \n             when N_Raise_Expression\n-                             => Set_Etype (N, Ctx_Type);\n+                             => null;\n \n             when N_Raise_xxx_Error\n                              => Set_Etype (N, Ctx_Type);\n@@ -4480,7 +4485,7 @@ package body Sem_Res is\n                if In_Instance_Body then\n                   Error_Msg_N\n                     (\"??type in allocator has deeper level than \"\n-                     & \" designated class-wide type\", E);\n+                     & \"designated class-wide type\", E);\n                   Error_Msg_N\n                     (\"\\??Program_Error will be raised at run time\", E);\n                   Rewrite (N,\n@@ -10662,7 +10667,7 @@ package body Sem_Res is\n                then\n                   if In_Instance_Body then\n                      Conversion_Error_N\n-                       (\"??source array type has deeper accesibility \"\n+                       (\"??source array type has deeper accessibility \"\n                         & \"level than target\", Operand);\n                      Conversion_Error_N\n                        (\"\\??Program_Error will be raised at run time\","}, {"sha": "fb897755e33950026d8715f1690a561b64721c5e", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983a3d80db525e9d7fbba6f222d3030bfc0a68ac/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983a3d80db525e9d7fbba6f222d3030bfc0a68ac/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=983a3d80db525e9d7fbba6f222d3030bfc0a68ac", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -780,7 +780,7 @@ package body Sem_Type is\n          RA  : Entity_Id;\n \n       begin\n-         --  Retrieve parent subtype from subtype declaration for actual.\n+         --  Retrieve parent subtype from subtype declaration for actual\n \n          if Nkind (Par) = N_Subtype_Declaration\n            and then not Comes_From_Source (Par)\n@@ -793,7 +793,7 @@ package body Sem_Type is\n             end if;\n          end if;\n \n-         --  Otherwise actual is not the actual of an enclosing instance.\n+         --  Otherwise actual is not the actual of an enclosing instance\n \n          return T;\n       end Real_Actual;\n@@ -1313,7 +1313,7 @@ package body Sem_Type is\n       --  Determine whether a subprogram is an actual in an enclosing instance.\n       --  An overloading between such a subprogram and one declared outside the\n       --  instance is resolved in favor of the first, because it resolved in\n-      --  the generic. Within the instance the eactual is represented by a\n+      --  the generic. Within the instance the actual is represented by a\n       --  constructed subprogram renaming.\n \n       function Matches (Actual, Formal : Node_Id) return Boolean;"}]}