{"sha": "0cf736575286f841f6144bd58b981c269652b82e", "node_id": "C_kwDOANBUbNoAKDBjZjczNjU3NTI4NmY4NDFmNjE0NGJkNThiOTgxYzI2OTY1MmI4MmU", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-31T06:52:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-31T11:03:43Z"}, "message": "tree-optimization/73550 - more switch handling improvements for uninit\n\nThe following makes predicate analysis handle case labels with\na non-singleton contiguous range.\n\n\tPR tree-optimization/73550\n\t* gimple-predicate-analysis.cc (predicate::init_from_control_deps):\n\tSanitize debug dumping.  Handle case labels with a CASE_HIGH.\n\t(predicate::dump): Adjust for better readability.", "tree": {"sha": "1efb5a48ded3774780b28feac77e5c0e8c1845a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1efb5a48ded3774780b28feac77e5c0e8c1845a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cf736575286f841f6144bd58b981c269652b82e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf736575286f841f6144bd58b981c269652b82e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cf736575286f841f6144bd58b981c269652b82e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf736575286f841f6144bd58b981c269652b82e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b911ca4231a366ddfd026f190b126bd517f4e640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b911ca4231a366ddfd026f190b126bd517f4e640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b911ca4231a366ddfd026f190b126bd517f4e640"}], "stats": {"total": 77, "additions": 50, "deletions": 27}, "files": [{"sha": "6b2e347536aff59a1957cc3f9352ae2c6641149e", "filename": "gcc/gimple-predicate-analysis.cc", "status": "modified", "additions": 50, "deletions": 27, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cf736575286f841f6144bd58b981c269652b82e/gcc%2Fgimple-predicate-analysis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cf736575286f841f6144bd58b981c269652b82e/gcc%2Fgimple-predicate-analysis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.cc?ref=0cf736575286f841f6144bd58b981c269652b82e", "patch": "@@ -1674,6 +1674,10 @@ predicate::init_from_control_deps (const vec<edge> *dep_chains,\n   if (num_chains == 0)\n     return;\n \n+  if (DEBUG_PREDICATE_ANALYZER && dump_file)\n+    fprintf (dump_file, \"init_from_control_deps {%s}:\\n\",\n+\t     format_edge_vecs (dep_chains, num_chains).c_str ());\n+\n   /* Convert the control dependency chain into a set of predicates.  */\n   m_preds.reserve (num_chains);\n \n@@ -1740,7 +1744,8 @@ predicate::init_from_control_deps (const vec<edge> *dep_chains,\n \n \t      if (DEBUG_PREDICATE_ANALYZER && dump_file)\n \t\t{\n-\t\t  fprintf (dump_file, \"one_pred = \");\n+\t\t  fprintf (dump_file, \"%d -> %d: one_pred = \",\n+\t\t\t   e->src->index, e->dest->index);\n \t\t  dump_pred_info (one_pred);\n \t\t  fputc ('\\n', dump_file);\n \t\t}\n@@ -1773,24 +1778,41 @@ predicate::init_from_control_deps (const vec<edge> *dep_chains,\n \t\t    }\n \t\t}\n \t      /* If more than one label reaches this block or the case\n-\t\t label doesn't have a single value (like the default one)\n-\t\t fail.  */\n-\t      if (!l\n-\t\t  || !CASE_LOW (l)\n-\t\t  || (CASE_HIGH (l)\n-\t\t      && !operand_equal_p (CASE_LOW (l), CASE_HIGH (l), 0)))\n+\t\t label doesn't have a contiguous range of values (like the\n+\t\t default one) fail.  */\n+\t      if (!l || !CASE_LOW (l))\n \t\t{\n \t\t  has_valid_pred = false;\n \t\t  break;\n \t\t}\n-\n-\t      pred_info one_pred;\n-\t      one_pred.pred_lhs = gimple_switch_index (gs);\n-\t      one_pred.pred_rhs = CASE_LOW (l);\n-\t      one_pred.cond_code = EQ_EXPR;\n-\t      one_pred.invert = false;\n-\t      t_chain.safe_push (one_pred);\n-\t      has_valid_pred = true;\n+\t      else if (!CASE_HIGH (l)\n+\t\t      || operand_equal_p (CASE_LOW (l), CASE_HIGH (l)))\n+\t\t{\n+\t\t  pred_info one_pred;\n+\t\t  one_pred.pred_lhs = gimple_switch_index (gs);\n+\t\t  one_pred.pred_rhs = CASE_LOW (l);\n+\t\t  one_pred.cond_code = EQ_EXPR;\n+\t\t  one_pred.invert = false;\n+\t\t  t_chain.safe_push (one_pred);\n+\t\t  has_valid_pred = true;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  /* Support a case label with a range with\n+\t\t     two predicates.  We're overcommitting on\n+\t\t     the MAX_CHAIN_LEN budget by at most a factor\n+\t\t     of two here.  */\n+\t\t  pred_info one_pred;\n+\t\t  one_pred.pred_lhs = gimple_switch_index (gs);\n+\t\t  one_pred.pred_rhs = CASE_LOW (l);\n+\t\t  one_pred.cond_code = GE_EXPR;\n+\t\t  one_pred.invert = false;\n+\t\t  t_chain.safe_push (one_pred);\n+\t\t  one_pred.pred_rhs = CASE_HIGH (l);\n+\t\t  one_pred.cond_code = LE_EXPR;\n+\t\t  t_chain.safe_push (one_pred);\n+\t\t  has_valid_pred = true;\n+\t\t}\n \t    }\n \t  else\n \t    {\n@@ -1803,22 +1825,24 @@ predicate::init_from_control_deps (const vec<edge> *dep_chains,\n       if (!has_valid_pred)\n \tbreak;\n       else\n-\tm_preds.safe_push (t_chain);\n+\tm_preds.quick_push (t_chain);\n     }\n \n-  if (DEBUG_PREDICATE_ANALYZER && dump_file)\n+  if (has_valid_pred)\n     {\n-      fprintf (dump_file, \"init_from_control_deps {%s}:\\n\",\n-\t       format_edge_vecs (dep_chains, num_chains).c_str ());\n-      dump (NULL, \"\");\n+      gcc_assert (m_preds.length () != 0);\n+      if (DEBUG_PREDICATE_ANALYZER && dump_file)\n+\tdump (NULL, \"\");\n     }\n-\n-  if (has_valid_pred)\n-    gcc_assert (m_preds.length () != 0);\n   else\n-    /* Clear M_PREDS to indicate failure.  */\n-    m_preds.release ();\n+    {\n+      if (DEBUG_PREDICATE_ANALYZER && dump_file)\n+\tfprintf (dump_file, \"\\tFAILED\\n\");\n+      /* Clear M_PREDS to indicate failure.  */\n+      m_preds.release ();\n+    }\n }\n+\n /* Store a PRED in *THIS.  */\n \n void\n@@ -1856,9 +1880,8 @@ predicate::dump (gimple *stmt, const char *msg) const\n       else\n \tfprintf (dump_file, \"\\t(\");\n       dump_pred_chain (m_preds[i]);\n-      fputc (')', dump_file);\n+      fprintf (dump_file, \")\\n\");\n     }\n-  fputc ('\\n', dump_file);\n }\n \n /* Initialize USE_PREDS with the predicates of the control dependence chains"}]}