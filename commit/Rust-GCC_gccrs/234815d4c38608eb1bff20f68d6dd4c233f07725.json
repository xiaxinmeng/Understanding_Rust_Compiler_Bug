{"sha": "234815d4c38608eb1bff20f68d6dd4c233f07725", "node_id": "C_kwDOANBUbNoAKDIzNDgxNWQ0YzM4NjA4ZWIxYmZmMjBmNjhkNmRkNGMyMzNmMDc3MjU", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-10-11T12:09:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-25T15:07:21Z"}, "message": "[Ada] Simplify iteration of record components when expanding equality\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_Composite_Equality): Fix style.\n\t(Element_To_Compare): Simplify loop.\n\t(Expand_Record_Equality): Adapt calls to Element_To_Compare.", "tree": {"sha": "4482c5b47a65106c5ae59021979efd7550606382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4482c5b47a65106c5ae59021979efd7550606382"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/234815d4c38608eb1bff20f68d6dd4c233f07725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234815d4c38608eb1bff20f68d6dd4c233f07725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/234815d4c38608eb1bff20f68d6dd4c233f07725", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234815d4c38608eb1bff20f68d6dd4c233f07725/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ddc39479b999841e0b0e994a47bf3cec8a4e54e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ddc39479b999841e0b0e994a47bf3cec8a4e54e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ddc39479b999841e0b0e994a47bf3cec8a4e54e"}], "stats": {"total": 48, "additions": 21, "deletions": 27}, "files": [{"sha": "3dd0cc4f1af06873d2fe1c18fee737799be08e90", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 21, "deletions": 27, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234815d4c38608eb1bff20f68d6dd4c233f07725/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234815d4c38608eb1bff20f68d6dd4c233f07725/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=234815d4c38608eb1bff20f68d6dd4c233f07725", "patch": "@@ -2583,7 +2583,7 @@ package body Exp_Ch4 is\n \n          return\n            Make_Function_Call (Loc,\n-             Name => New_Occurrence_Of (Eq_Op, Loc),\n+             Name                   => New_Occurrence_Of (Eq_Op, Loc),\n              Parameter_Associations =>\n                New_List\n                  (Unchecked_Convert_To (Etype (First_Formal (Eq_Op)), Lhs),\n@@ -2606,7 +2606,7 @@ package body Exp_Ch4 is\n                begin\n                   return\n                     Make_Function_Call (Loc,\n-                      Name                  => New_Occurrence_Of (Eq_Op, Loc),\n+                      Name                   => New_Occurrence_Of (Eq_Op, Loc),\n                       Parameter_Associations => New_List (\n                         OK_Convert_To (T, Lhs),\n                         OK_Convert_To (T, Rhs)));\n@@ -13116,41 +13116,35 @@ package body Exp_Ch4 is\n       ------------------------\n \n       function Element_To_Compare (C : Entity_Id) return Entity_Id is\n-         Comp : Entity_Id;\n+         Comp : Entity_Id := C;\n \n       begin\n-         Comp := C;\n-         loop\n-            --  Exit loop when the next element to be compared is found, or\n-            --  there is no more such element.\n-\n-            exit when No (Comp);\n-\n-            exit when Ekind (Comp) in E_Discriminant | E_Component\n-              and then not (\n+         while Present (Comp) loop\n+            --  Skip inherited components\n \n-              --  Skip inherited components\n+            --  Note: for a tagged type, we always generate the \"=\" primitive\n+            --  for the base type (not on the first subtype), so the test for\n+            --  Comp /= Original_Record_Component (Comp) is True for inherited\n+            --  components only.\n \n-              --  Note: for a tagged type, we always generate the \"=\" primitive\n-              --  for the base type (not on the first subtype), so the test for\n-              --  Comp /= Original_Record_Component (Comp) is True for\n-              --  inherited components only.\n-\n-              (Is_Tagged_Type (Typ)\n+            if (Is_Tagged_Type (Typ)\n                 and then Comp /= Original_Record_Component (Comp))\n \n-              --  Skip _Tag\n+            --  Skip _Tag\n \n               or else Chars (Comp) = Name_uTag\n \n-              --  Skip interface elements (secondary tags???)\n-\n-              or else Is_Interface (Etype (Comp)));\n+            --  Skip interface elements (secondary tags???)\n \n-            Next_Entity (Comp);\n+              or else Is_Interface (Etype (Comp))\n+            then\n+               Next_Component_Or_Discriminant (Comp);\n+            else\n+               return Comp;\n+            end if;\n          end loop;\n \n-         return Comp;\n+         return Empty;\n       end Element_To_Compare;\n \n    --  Start of processing for Expand_Record_Equality\n@@ -13166,7 +13160,7 @@ package body Exp_Ch4 is\n       --    and then Lhs.Cmpn = Rhs.Cmpn\n \n       Result := New_Occurrence_Of (Standard_True, Loc);\n-      C := Element_To_Compare (First_Entity (Typ));\n+      C := Element_To_Compare (First_Component_Or_Discriminant (Typ));\n       while Present (C) loop\n          declare\n             New_Lhs : Node_Id;\n@@ -13224,7 +13218,7 @@ package body Exp_Ch4 is\n          end;\n \n          First_Time := False;\n-         C := Element_To_Compare (Next_Entity (C));\n+         C := Element_To_Compare (Next_Component_Or_Discriminant (C));\n       end loop;\n \n       return Result;"}]}