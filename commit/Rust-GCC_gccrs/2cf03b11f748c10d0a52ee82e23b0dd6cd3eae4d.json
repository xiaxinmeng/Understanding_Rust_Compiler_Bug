{"sha": "2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNmMDNiMTFmNzQ4YzEwZDBhNTJlZTgyZTIzYjBkZDZjZDNlYWU0ZA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2014-04-30T14:10:44Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2014-04-30T14:10:44Z"}, "message": "Simplify Solaris 2 configuration\n\n\t* config/sol2-10.h (TARGET_LIBC_HAS_FUNCTION): Move ...\n\t* config/sol2.h: ... here.\n\t* config/sol2-10.h: Remove.\n\n\t* config/sol2-bi.h (WCHAR_TYPE, WCHAR_TYPE_SIZE, WINT_TYPE)\n\t(WINT_TYPE_SIZE, MULTILIB_DEFAULTS, DEF_ARCH32_SPEC)\n\t(DEF_ARCH64_SPEC, ASM_CPU_DEFAULT_SPEC, LINK_ARCH64_SPEC_BASE)\n\t(LINK_ARCH64_SPEC, ARCH_DEFAULT_EMULATION, TARGET_LD_EMULATION)\n\t(LINK_ARCH_SPEC, SUBTARGET_EXTRA_SPECS): Move ...\n\t* config/sol2.h: ... here.\n\t(SECTION_NAME_FORMAT): Don't redefine.\n\t(STARTFILE_ARCH32_SPEC): Rename to ...\n\t(STARTFILE_ARCH_SPEC): ... this.\n\t(ASM_OUTPUT_ALIGNED_COMMON): Move ...\n\t* config/sparc/sol2.h: ... here.\n\t(SECTION_NAME_FORMAT): Don't undef.\n\t* config/i386/sol2.h (ASM_CPU_DEFAULT_SPEC)\n\t(SUBTARGET_EXTRA_SPECS): Remove.\n\t* config/sparc/sol2.h (ASM_CPU_DEFAULT_SPEC): Remove.\n\n\t* config/i386/sol2-bi.h (TARGET_SUBTARGET_DEFAULT)\n\t(MD_STARTFILE_PREFIX): Remove.\n\t(SUBTARGET_OPTIMIZATION_OPTIONS, ASM_CPU32_DEFAULT_SPEC)\n\t(ASM_CPU64_DEFAULT_SPEC, ASM_CPU_SPEC, ASM_SPEC, DEFAULT_ARCH32_P)\n\t(ARCH64_SUBDIR, ARCH32_EMULATION, ARCH64_EMULATION)\n\t(ASM_COMMENT_START, JUMP_TABLES_IN_TEXT_SECTION)\n\t(ASM_OUTPUT_DWARF_PCREL, ASM_OUTPUT_ALIGNED_COMMON)\n\t(USE_IX86_FRAME_POINTER, USE_X86_64_FRAME_POINTER): Move ...\n\t* config/i386/sol2.h: ... here.\n\t(TARGET_SUBTARGET_DEFAULT, SIZE_TYPE, PTRDIFF_TYPE): Remove.\n\t* config/i386/sol2-bi.h: Remove.\n\t* config/sol2.h (MD_STARTFILE_PREFIX): Remove.\n\t(LINK_ARCH32_SPEC_BASE): Remove /usr/ccs/lib/libp, /usr/ccs/lib.\n\n\t* config/i386/t-sol2-64: Rename to ...\n\t* config/i386/t-sol2: ... this.\n\t* config/sparc/t-sol2-64: Rename to ...\n\t* config/sparc/t-sol2: ... this.\n\n\t* config.gcc (*-*-solaris2*): Split sol2_tm_file into\n\tsol2_tm_file_head, sol2_tm_file_tail.\n\tInclude ${cpu_type}/sol2.h before sol2.h.\n\tRemove sol2-10.h.\n\t(i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*): Include\n\ti386/x86-64.h between sol2_tm_file_head and sol2_tm_file_tail.\n\tRemove i386/sol2-bi.h, sol2-bi.h from tm_file.\n\tReflect i386/t-sol2-64 renaming.\n\t(sparc*-*-solaris2*): Remove sol2-bi.h from tm_file.\n\tReflect sparc/t-sol2-64 renaming.\n\nFrom-SVN: r209931", "tree": {"sha": "e993c7a0834ed9227be305f1d1ce69dab71d8321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e993c7a0834ed9227be305f1d1ce69dab71d8321"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a32776927ec9dd5757b52224d4cc63e80525adba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32776927ec9dd5757b52224d4cc63e80525adba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a32776927ec9dd5757b52224d4cc63e80525adba"}], "stats": {"total": 616, "additions": 264, "deletions": 352}, "files": [{"sha": "704dfc16278cd221e1d662532ff20c0a7c1582ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "patch": "@@ -1,3 +1,55 @@\n+2014-04-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/sol2-10.h (TARGET_LIBC_HAS_FUNCTION): Move ...\n+\t* config/sol2.h: ... here.\n+\t* config/sol2-10.h: Remove.\n+\n+\t* config/sol2-bi.h (WCHAR_TYPE, WCHAR_TYPE_SIZE, WINT_TYPE)\n+\t(WINT_TYPE_SIZE, MULTILIB_DEFAULTS, DEF_ARCH32_SPEC)\n+\t(DEF_ARCH64_SPEC, ASM_CPU_DEFAULT_SPEC, LINK_ARCH64_SPEC_BASE)\n+\t(LINK_ARCH64_SPEC, ARCH_DEFAULT_EMULATION, TARGET_LD_EMULATION)\n+\t(LINK_ARCH_SPEC, SUBTARGET_EXTRA_SPECS): Move ...\n+\t* config/sol2.h: ... here.\n+\t(SECTION_NAME_FORMAT): Don't redefine.\n+\t(STARTFILE_ARCH32_SPEC): Rename to ...\n+\t(STARTFILE_ARCH_SPEC): ... this.\n+\t(ASM_OUTPUT_ALIGNED_COMMON): Move ...\n+\t* config/sparc/sol2.h: ... here.\n+\t(SECTION_NAME_FORMAT): Don't undef.\n+\t* config/i386/sol2.h (ASM_CPU_DEFAULT_SPEC)\n+\t(SUBTARGET_EXTRA_SPECS): Remove.\n+\t* config/sparc/sol2.h (ASM_CPU_DEFAULT_SPEC): Remove.\n+\n+\t* config/i386/sol2-bi.h (TARGET_SUBTARGET_DEFAULT)\n+\t(MD_STARTFILE_PREFIX): Remove.\n+\t(SUBTARGET_OPTIMIZATION_OPTIONS, ASM_CPU32_DEFAULT_SPEC)\n+\t(ASM_CPU64_DEFAULT_SPEC, ASM_CPU_SPEC, ASM_SPEC, DEFAULT_ARCH32_P)\n+\t(ARCH64_SUBDIR, ARCH32_EMULATION, ARCH64_EMULATION)\n+\t(ASM_COMMENT_START, JUMP_TABLES_IN_TEXT_SECTION)\n+\t(ASM_OUTPUT_DWARF_PCREL, ASM_OUTPUT_ALIGNED_COMMON)\n+\t(USE_IX86_FRAME_POINTER, USE_X86_64_FRAME_POINTER): Move ...\n+\t* config/i386/sol2.h: ... here.\n+\t(TARGET_SUBTARGET_DEFAULT, SIZE_TYPE, PTRDIFF_TYPE): Remove.\n+\t* config/i386/sol2-bi.h: Remove.\n+\t* config/sol2.h (MD_STARTFILE_PREFIX): Remove.\n+\t(LINK_ARCH32_SPEC_BASE): Remove /usr/ccs/lib/libp, /usr/ccs/lib.\n+\n+\t* config/i386/t-sol2-64: Rename to ...\n+\t* config/i386/t-sol2: ... this.\n+\t* config/sparc/t-sol2-64: Rename to ...\n+\t* config/sparc/t-sol2: ... this.\n+\n+\t* config.gcc (*-*-solaris2*): Split sol2_tm_file into\n+\tsol2_tm_file_head, sol2_tm_file_tail.\n+\tInclude ${cpu_type}/sol2.h before sol2.h.\n+\tRemove sol2-10.h.\n+\t(i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*): Include\n+\ti386/x86-64.h between sol2_tm_file_head and sol2_tm_file_tail.\n+\tRemove i386/sol2-bi.h, sol2-bi.h from tm_file.\n+\tReflect i386/t-sol2-64 renaming.\n+\t(sparc*-*-solaris2*): Remove sol2-bi.h from tm_file.\n+\tReflect sparc/t-sol2-64 renaming.\n+\n 2014-04-30  Richard Biener  <rguenther@suse.de>\n \n \t* passes.c (execute_function_todo): Move TODO_verify_stmts"}, {"sha": "81205ff0c8f6fd17178183c72fad322d1b0ff1b4", "filename": "gcc/config.gcc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "patch": "@@ -808,8 +808,9 @@ case ${target} in\n *-*-solaris2*)\n   # i?86-*-solaris2* needs to insert headers between cpu default and\n   # Solaris 2 specific ones.\n-  sol2_tm_file=\"dbxelf.h elfos.h ${cpu_type}/sysv4.h sol2.h ${cpu_type}/sol2.h\"\n-  sol2_tm_file=\"${sol2_tm_file} sol2-10.h\"\n+  sol2_tm_file_head=\"dbxelf.h elfos.h ${cpu_type}/sysv4.h\"\n+  sol2_tm_file_tail=\"${cpu_type}/sol2.h sol2.h\"\n+  sol2_tm_file=\"${sol2_tm_file_head} ${sol2_tm_file_tail}\"\n   use_gcc_stdint=wrap\n   if test x$gnu_ld = xyes; then\n     tm_file=\"usegld.h ${tm_file}\"\n@@ -1515,14 +1516,13 @@ i[34567]86-*-rtems*)\n \ttmake_file=\"${tmake_file} i386/t-rtems\"\n \t;;\n i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h ${sol2_tm_file}\"\n \t# Set default arch_32 to pentium4, tune_32 to generic like the other\n \t# i386 targets, although config.guess defaults to i386-pc-solaris2*.\n \twith_arch_32=${with_arch_32:-pentium4}\n \twith_tune_32=${with_tune_32:-generic}\n-\ttm_file=\"${tm_file} i386/x86-64.h i386/sol2-bi.h sol2-bi.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h ${sol2_tm_file_head} i386/x86-64.h ${sol2_tm_file_tail}\"\n \ttm_defines=\"${tm_defines} TARGET_BI_ARCH=1\"\n-\ttmake_file=\"$tmake_file i386/t-sol2-64\"\n+\ttmake_file=\"$tmake_file i386/t-sol2\"\n \tneed_64bit_isa=yes\n \tif test x$with_cpu = x; then\n \t\tif test x$with_cpu_64 = x; then\n@@ -2661,7 +2661,7 @@ sparc-*-netbsdelf*)\n \ttmake_file=\"${tmake_file} sparc/t-sparc\"\n \t;;\n sparc*-*-solaris2*)\n-\ttm_file=\"sparc/biarch64.h ${tm_file} ${sol2_tm_file} sol2-bi.h sparc/tso.h\"\n+\ttm_file=\"sparc/biarch64.h ${tm_file} ${sol2_tm_file} sparc/tso.h\"\n \tcase ${target} in\n \t    sparc64-*-* | sparcv9-*-*)\n \t\ttm_file=\"sparc/default-64.h ${tm_file}\"\n@@ -2670,7 +2670,7 @@ sparc*-*-solaris2*)\n \t\ttest x$with_cpu != x || with_cpu=v9\n \t\t;;\n \tesac\n-\ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-sol2-64\"\n+\ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-sol2\"\n \t;;\n sparc-wrs-vxworks)\n \ttm_file=\"${tm_file} elfos.h sparc/sysv4.h vx-common.h vxworks.h sparc/vxworks.h\""}, {"sha": "66d17801f03849996127a351f32bac6c8ae62e51", "filename": "gcc/config/i386/sol2-bi.h", "status": "removed", "additions": 0, "deletions": 109, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32776927ec9dd5757b52224d4cc63e80525adba/gcc%2Fconfig%2Fi386%2Fsol2-bi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32776927ec9dd5757b52224d4cc63e80525adba/gcc%2Fconfig%2Fi386%2Fsol2-bi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-bi.h?ref=a32776927ec9dd5757b52224d4cc63e80525adba", "patch": "@@ -1,109 +0,0 @@\n-/* Definitions of target machine for GCC, for bi-arch Solaris 2/x86.\n-   Copyright (C) 2004-2014 Free Software Foundation, Inc.\n-   Contributed by CodeSourcery, LLC.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* Override i386/sol2.h version: return 8-byte vectors in MMX registers if\n-   possible, matching Sun Studio 12 Update 1+ compilers and other x86\n-   targets.  */\n-#undef TARGET_SUBTARGET_DEFAULT\n-#define TARGET_SUBTARGET_DEFAULT \\\n-\t(MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS)\n-\n-#define SUBTARGET_OPTIMIZATION_OPTIONS\t\t\t\t\\\n-  { OPT_LEVELS_1_PLUS, OPT_momit_leaf_frame_pointer, NULL, 1 }\n-\n-/* GNU as understands --32 and --64, but the native Solaris\n-   assembler requires -xarch=generic or -xarch=generic64 instead.  */\n-#ifdef USE_GAS\n-#define ASM_CPU32_DEFAULT_SPEC \"--32\"\n-#define ASM_CPU64_DEFAULT_SPEC \"--64\"\n-#else\n-#define ASM_CPU32_DEFAULT_SPEC \"-xarch=generic\"\n-#define ASM_CPU64_DEFAULT_SPEC \"-xarch=generic64\"\n-#endif\n-\n-#undef ASM_CPU_SPEC\n-#define ASM_CPU_SPEC \"%(asm_cpu_default)\"\n-\n-/* Don't let i386/x86-64.h override i386/sol2.h version.  Still cannot use\n-   -K PIC with the Solaris 10+ assembler, it gives many warnings:\n-\tAbsolute relocation is used for symbol \"<symbol>\"  */\n-#undef ASM_SPEC\n-#define ASM_SPEC ASM_SPEC_BASE\n-\n-/* We do not need to search a special directory for startup files.  */\n-#undef MD_STARTFILE_PREFIX\n-\n-#define DEFAULT_ARCH32_P !TARGET_64BIT_DEFAULT\n-\n-#define ARCH64_SUBDIR \"amd64\"\n-\n-#ifdef USE_GLD\n-/* Since binutils 2.21, GNU ld supports new *_sol2 emulations to strictly\n-   follow the Solaris 2 ABI.  Prefer them if present.  */\n-#ifdef HAVE_LD_SOL2_EMULATION\n-#define ARCH32_EMULATION \"elf_i386_sol2\"\n-#define ARCH64_EMULATION \"elf_x86_64_sol2\"\n-#else\n-#define ARCH32_EMULATION \"elf_i386\"\n-#define ARCH64_EMULATION \"elf_x86_64\"\n-#endif\n-#endif\n-\n-#undef ASM_COMMENT_START\n-#define ASM_COMMENT_START \"/\"\n-\n-/* The native Solaris assembler can't calculate the difference between\n-   symbols in different sections, which causes problems for -fPIC jump\n-   tables in .rodata.  */\n-#ifndef HAVE_AS_IX86_DIFF_SECT_DELTA\n-#undef JUMP_TABLES_IN_TEXT_SECTION\n-#define JUMP_TABLES_IN_TEXT_SECTION 1\n-\n-/* The native Solaris assembler cannot handle the SYMBOL-. syntax, but\n-   requires SYMBOL@rel/@rel64 instead.  */\n-#define ASM_OUTPUT_DWARF_PCREL(FILE, SIZE, LABEL)\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    fputs (integer_asm_op (SIZE, FALSE), FILE);\t\t\\\n-    assemble_name (FILE, LABEL);\t\t\t\\\n-    fputs (SIZE == 8 ? \"@rel64\" : \"@rel\", FILE);\t\\\n-  } while (0)\n-#endif\n-\n-/* As in sol2.h, override the default from i386/x86-64.h to work around\n-   Sun as TLS bug.  */\n-#undef  ASM_OUTPUT_ALIGNED_COMMON\n-#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (TARGET_SUN_TLS\t\t\t\t\t\t\\\n-\t  && in_section\t\t\t\t\t\t\t\\\n-\t  && ((in_section->common.flags & SECTION_TLS) == SECTION_TLS))\t\\\n-\tswitch_to_section (bss_section);\t\t\t\t\\\n-      x86_elf_aligned_common (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while  (0)\n-\n-#define USE_IX86_FRAME_POINTER 1\n-#define USE_X86_64_FRAME_POINTER 1\n-\n-#undef NO_PROFILE_COUNTERS\n-\n-#undef MCOUNT_NAME\n-#define MCOUNT_NAME \"_mcount\""}, {"sha": "9c3a6f49662b013bb827dfa9295a4d221b941b36", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 77, "deletions": 24, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "patch": "@@ -18,12 +18,8 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/* Augment i386/unix.h version to return 8-byte vectors in memory, matching\n-   Sun Studio compilers until version 12, the only ones supported on\n-   Solaris 9.  */\n-#undef TARGET_SUBTARGET_DEFAULT\n-#define TARGET_SUBTARGET_DEFAULT \\\n-\t(MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_VECT8_RETURNS)\n+#define SUBTARGET_OPTIMIZATION_OPTIONS\t\t\t\t\\\n+  { OPT_LEVELS_1_PLUS, OPT_momit_leaf_frame_pointer, NULL, 1 }\n \n /* Old versions of the Solaris assembler can not handle the difference of\n    labels in different sections, so force DW_EH_PE_datarel if so.  */\n@@ -50,27 +46,46 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_SUN_TLS\n #define TARGET_SUN_TLS 1\n \n-#undef  SIZE_TYPE\n-#define SIZE_TYPE \"unsigned int\"\n-\n-#undef  PTRDIFF_TYPE\n-#define PTRDIFF_TYPE \"int\"\n-\n /* Solaris 2/Intel as chokes on #line directives before Solaris 10.  */\n #undef CPP_SPEC\n #define CPP_SPEC \"%{,assembler-with-cpp:-P} %(cpp_subtarget)\"\n \n-#define ASM_CPU_DEFAULT_SPEC \"\"\n+/* GNU as understands --32 and --64, but the native Solaris\n+   assembler requires -xarch=generic or -xarch=generic64 instead.  */\n+#ifdef USE_GAS\n+#define ASM_CPU32_DEFAULT_SPEC \"--32\"\n+#define ASM_CPU64_DEFAULT_SPEC \"--64\"\n+#else\n+#define ASM_CPU32_DEFAULT_SPEC \"-xarch=generic\"\n+#define ASM_CPU64_DEFAULT_SPEC \"-xarch=generic64\"\n+#endif\n+\n+#undef ASM_CPU_SPEC\n+#define ASM_CPU_SPEC \"%(asm_cpu_default)\"\n \n-#define ASM_CPU_SPEC \"\"\n- \n-/* Don't include ASM_PIC_SPEC.  While the Solaris 9 assembler accepts\n-   -K PIC, it gives many warnings:\n-\tR_386_32 relocation is used for symbol \"<symbol>\"\n+/* Don't include ASM_PIC_SPEC.  While the Solaris 10+ assembler accepts -K PIC,\n+   it gives many warnings: \n+\tAbsolute relocation is used for symbol \"<symbol>\"\n    GNU as doesn't recognize -K at all.  */\n #undef ASM_SPEC\n #define ASM_SPEC ASM_SPEC_BASE\n \n+#define DEFAULT_ARCH32_P !TARGET_64BIT_DEFAULT\n+\n+#define ARCH64_SUBDIR \"amd64\"\n+\n+#ifdef USE_GLD\n+/* Since binutils 2.21, GNU ld supports new *_sol2 emulations to strictly\n+   follow the Solaris 2 ABI.  Prefer them if present.  */\n+#ifdef HAVE_LD_SOL2_EMULATION\n+#define ARCH32_EMULATION \"elf_i386_sol2\"\n+#define ARCH64_EMULATION \"elf_x86_64_sol2\"\n+#else\n+#define ARCH32_EMULATION \"elf_i386\"\n+#define ARCH64_EMULATION \"elf_x86_64\"\n+#endif\n+#endif\n+\n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n   \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n@@ -84,23 +99,39 @@ along with GCC; see the file COPYING3.  If not see\n   { \"asm_cpu\",\t\t ASM_CPU_SPEC },\t\t\\\n   { \"asm_cpu_default\",\t ASM_CPU_DEFAULT_SPEC },\t\\\n \n-#undef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS \\\n-  { \"startfile_arch\",\tSTARTFILE_ARCH_SPEC },\t\t\\\n-  { \"link_arch\",\tLINK_ARCH_SPEC },\t\t\\\n-  SUBTARGET_CPU_EXTRA_SPECS\n-\n /* Register the Solaris-specific #pragma directives.  */\n #define REGISTER_SUBTARGET_PRAGMAS() solaris_register_pragmas ()\n \n #undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX \".\"\n \n+/* The Solaris 10 FCS as doesn't accept \"#\" comments, while later versions\n+   do.  */\n+#undef ASM_COMMENT_START\n+#define ASM_COMMENT_START \"/\"\n+\n /* The 32-bit Solaris assembler does not support .quad.  Do not use it.  */\n #ifndef HAVE_AS_IX86_QUAD\n #undef ASM_QUAD\n #endif\n \n+/* The native Solaris assembler can't calculate the difference between\n+   symbols in different sections, which causes problems for -fPIC jump\n+   tables in .rodata.  */\n+#ifndef HAVE_AS_IX86_DIFF_SECT_DELTA\n+#undef JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n+\n+/* The native Solaris assembler cannot handle the SYMBOL-. syntax, but\n+   requires SYMBOL@rel/@rel64 instead.  */\n+#define ASM_OUTPUT_DWARF_PCREL(FILE, SIZE, LABEL)\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    fputs (integer_asm_op (SIZE, FALSE), FILE);\t\t\\\n+    assemble_name (FILE, LABEL);\t\t\t\\\n+    fputs (SIZE == 8 ? \"@rel64\" : \"@rel\", FILE);\t\\\n+  } while (0)\n+#endif\n+\n /* The Solaris assembler wants a .local for non-exported aliases.  */\n #define ASM_OUTPUT_DEF_FROM_DECLS(FILE, DECL, TARGET)\t\\\n   do {\t\t\t\t\t\t\t\\\n@@ -148,6 +179,20 @@ along with GCC; see the file COPYING3.  If not see\n   while (0)\n #endif /* !USE_GAS */\n \n+/* As in sparc/sol2.h, override the default from i386/x86-64.h to work\n+   around Sun as TLS bug.  */\n+#undef  ASM_OUTPUT_ALIGNED_COMMON\n+#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (TARGET_SUN_TLS\t\t\t\t\t\t\\\n+\t  && in_section\t\t\t\t\t\t\t\\\n+\t  && ((in_section->common.flags & SECTION_TLS) == SECTION_TLS))\t\\\n+\tswitch_to_section (bss_section);\t\t\t\t\\\n+      x86_elf_aligned_common (FILE, NAME, SIZE, ALIGN);\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while  (0)\n+\n /* Output a simple call for .init/.fini.  */\n #define ASM_OUTPUT_CALL(FILE, FN)\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n@@ -174,6 +219,14 @@ along with GCC; see the file COPYING3.  If not see\n #define DTORS_SECTION_ASM_OP\t\"\\t.section\\t.dtors, \\\"aw\\\"\"\n #endif\n \n+#define USE_IX86_FRAME_POINTER 1\n+#define USE_X86_64_FRAME_POINTER 1\n+\n+#undef NO_PROFILE_COUNTERS\n+\n+#undef MCOUNT_NAME\n+#define MCOUNT_NAME \"_mcount\"\n+\n /* We do not need NT_VERSION notes.  */\n #undef X86_FILE_START_VERSION_DIRECTIVE\n #define X86_FILE_START_VERSION_DIRECTIVE false"}, {"sha": "4e70f0bed272d7949039f4922b648c09910badf7", "filename": "gcc/config/i386/t-sol2", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fi386%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fi386%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-sol2?ref=2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "previous_filename": "gcc/config/i386/t-sol2-64"}, {"sha": "4488a40cba63713844adc5e570a3c3d4c9a09854", "filename": "gcc/config/sol2-10.h", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32776927ec9dd5757b52224d4cc63e80525adba/gcc%2Fconfig%2Fsol2-10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32776927ec9dd5757b52224d4cc63e80525adba/gcc%2Fconfig%2Fsol2-10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-10.h?ref=a32776927ec9dd5757b52224d4cc63e80525adba", "patch": "@@ -1,24 +0,0 @@\n-/* Operating system specific defines to be used when targeting GCC for any\n-   Solaris 2 system starting from Solaris 10.\n-   Copyright (C) 2006-2014 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* Solaris 10 has the float and long double forms of math functions.\n-   We redefine this hook so the version from elfos.h header won't be used.  */\n-#undef TARGET_LIBC_HAS_FUNCTION\n-#define TARGET_LIBC_HAS_FUNCTION default_libc_has_function"}, {"sha": "fdb2a28178cf020a8658f3e4be23d2899557f7bc", "filename": "gcc/config/sol2-bi.h", "status": "removed", "additions": 0, "deletions": 135, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32776927ec9dd5757b52224d4cc63e80525adba/gcc%2Fconfig%2Fsol2-bi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32776927ec9dd5757b52224d4cc63e80525adba/gcc%2Fconfig%2Fsol2-bi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-bi.h?ref=a32776927ec9dd5757b52224d4cc63e80525adba", "patch": "@@ -1,135 +0,0 @@\n-/* Definitions of target machine for GCC, for bi-arch Solaris 2.\n-   Copyright (C) 2011-2014 Free Software Foundation, Inc.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it under\n-   the terms of the GNU General Public License as published by the Free\n-   Software Foundation; either version 3, or (at your option) any later\n-   version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-   for more details.\n-\n-   Under Section 7 of GPL version 3, you are granted additional\n-   permissions described in the GCC Runtime Library Exception, version\n-   3.1, as published by the Free Software Foundation.\n-\n-   You should have received a copy of the GNU General Public License and\n-   a copy of the GCC Runtime Library Exception along with this program;\n-   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* wchar_t is called differently in <wchar.h> for 32 and 64-bit\n-   compilations.  This is called for by SCD 2.4.1, p. 6-83, Figure 6-65\n-   (32-bit) and p. 6P-10, Figure 6.38 (64-bit).  */\n-\n-#undef WCHAR_TYPE\n-#define WCHAR_TYPE (TARGET_64BIT ? \"int\" : \"long int\")\n-\n-#undef WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE 32\n-\n-/* Same for wint_t.  See SCD 2.4.1, p. 6-83, Figure 6-66 (32-bit).  There's\n-   no corresponding 64-bit definition, but this is what Solaris 8\n-   <iso/wchar_iso.h> uses.  */\n-\n-#undef WINT_TYPE\n-#define WINT_TYPE (TARGET_64BIT ? \"int\" : \"long int\")\n-\n-#undef WINT_TYPE_SIZE\n-#define WINT_TYPE_SIZE 32\n-\n-#if DEFAULT_ARCH32_P\n-#define MULTILIB_DEFAULTS { \"m32\" }\n-#else\n-#define MULTILIB_DEFAULTS { \"m64\" }\n-#endif\n-\n-#if DEFAULT_ARCH32_P\n-#define DEF_ARCH32_SPEC(__str) \"%{!m64:\" __str \"}\"\n-#define DEF_ARCH64_SPEC(__str) \"%{m64:\" __str \"}\"\n-#else\n-#define DEF_ARCH32_SPEC(__str) \"%{m32:\" __str \"}\"\n-#define DEF_ARCH64_SPEC(__str) \"%{!m32:\" __str \"}\"\n-#endif\n-\n-#undef ASM_CPU_DEFAULT_SPEC\n-#define ASM_CPU_DEFAULT_SPEC \\\n-(DEFAULT_ARCH32_P ? \"\\\n-%{m64:\" ASM_CPU64_DEFAULT_SPEC \"} \\\n-%{!m64:\" ASM_CPU32_DEFAULT_SPEC \"} \\\n-\" : \"\\\n-%{m32:\" ASM_CPU32_DEFAULT_SPEC \"} \\\n-%{!m32:\" ASM_CPU64_DEFAULT_SPEC \"} \\\n-\")\n-\n-/* This should be the same as LINK_ARCH32_SPEC_BASE, except with\n-   ARCH64_SUBDIR appended to the paths and /usr/ccs/lib is no longer\n-   necessary.  */\n-#undef LINK_ARCH64_SPEC_BASE\n-#define LINK_ARCH64_SPEC_BASE \\\n-  \"%{G:-G} \\\n-   %{YP,*} \\\n-   %{R*} \\\n-   %{!YP,*:%{p|pg:-Y P,%R/usr/lib/libp/\" ARCH64_SUBDIR \":%R/lib/\" ARCH64_SUBDIR \":%R/usr/lib/\" ARCH64_SUBDIR \"}\t\\\n-\t   %{!p:%{!pg:-Y P,%R/lib/\" ARCH64_SUBDIR \":%R/usr/lib/\" ARCH64_SUBDIR \"}}}\"\n-\n-#undef LINK_ARCH64_SPEC\n-#ifndef USE_GLD\n-/* FIXME: Used to be SPARC-only.  Not SPARC-specfic but for the model name!  */\n-#define LINK_ARCH64_SPEC \\\n-  \"%{mcmodel=medlow:-M /usr/lib/ld/\" ARCH64_SUBDIR \"/map.below4G} \" \\\n-  LINK_ARCH64_SPEC_BASE\n-#else\n-#define LINK_ARCH64_SPEC LINK_ARCH64_SPEC_BASE\n-#endif\n-\n-#ifdef USE_GLD\n-#if DEFAULT_ARCH32_P\n-#define ARCH_DEFAULT_EMULATION ARCH32_EMULATION\n-#else\n-#define ARCH_DEFAULT_EMULATION ARCH64_EMULATION\n-#endif\n-#define TARGET_LD_EMULATION \"%{m32:-m \" ARCH32_EMULATION \"}\" \\\n-\t\t\t    \"%{m64:-m \" ARCH64_EMULATION \"}\" \\\n-\t\t\t    \"%{!m32:%{!m64:-m \" ARCH_DEFAULT_EMULATION \"}} \"\n-#else\n-#define TARGET_LD_EMULATION \"\"\n-#endif\n-\n-#undef LINK_ARCH_SPEC\n-#if DISABLE_MULTILIB\n-#if DEFAULT_ARCH32_P\n-#define LINK_ARCH_SPEC TARGET_LD_EMULATION \" \\\n-%{m32:%(link_arch32)} \\\n-%{m64:%edoes not support multilib} \\\n-%{!m32:%{!m64:%(link_arch_default)}} \\\n-\"\n-#else\n-#define LINK_ARCH_SPEC TARGET_LD_EMULATION \" \\\n-%{m32:%edoes not support multilib} \\\n-%{m64:%(link_arch64)} \\\n-%{!m32:%{!m64:%(link_arch_default)}} \\\n-\"\n-#endif\n-#else\n-#define LINK_ARCH_SPEC TARGET_LD_EMULATION \" \\\n-%{m32:%(link_arch32)} \\\n-%{m64:%(link_arch64)} \\\n-%{!m32:%{!m64:%(link_arch_default)}}\"\n-#endif\n-\n-#define LINK_ARCH_DEFAULT_SPEC \\\n-(DEFAULT_ARCH32_P ? LINK_ARCH32_SPEC : LINK_ARCH64_SPEC)\n-\n-#undef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS \\\n-  { \"startfile_arch\",\t STARTFILE_ARCH_SPEC },\t\t\\\n-  { \"link_arch32\",       LINK_ARCH32_SPEC },            \\\n-  { \"link_arch64\",       LINK_ARCH64_SPEC },            \\\n-  { \"link_arch_default\", LINK_ARCH_DEFAULT_SPEC },\t\\\n-  { \"link_arch\",\t LINK_ARCH_SPEC },\t\t\\\n-  SUBTARGET_CPU_EXTRA_SPECS"}, {"sha": "d88de37bd2e8721519b6e943ef7d154f486cee50", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 111, "deletions": 38, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "patch": "@@ -21,20 +21,25 @@ along with GCC; see the file COPYING3.  If not see\n /* We are compiling for Solaris 2 now.  */\n #define TARGET_SOLARIS 1\n \n-/* Solaris 2 (at least as of 2.5.1) uses a 32-bit wchar_t.  */\n+/* wchar_t is called differently in <wchar.h> for 32 and 64-bit\n+   compilations.  This is called for by SCD 2.4.1, p. 6-83, Figure 6-65\n+   (32-bit) and p. 6P-10, Figure 6.38 (64-bit).  */\n+\n #undef WCHAR_TYPE\n-#define WCHAR_TYPE \"long int\"\n+#define WCHAR_TYPE (TARGET_64BIT ? \"int\" : \"long int\")\n \n #undef WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE BITS_PER_WORD\n+#define WCHAR_TYPE_SIZE 32\n+\n+/* Same for wint_t.  See SCD 2.4.1, p. 6-83, Figure 6-66 (32-bit).  There's\n+   no corresponding 64-bit definition, but this is what Solaris 8\n+   <iso/wchar_iso.h> uses.  */\n \n-/* Solaris 2 uses a wint_t different from the default. This is required\n-   by the SCD 2.4.1, p. 6-83, Figure 6-66.  */\n-#undef\tWINT_TYPE\n-#define\tWINT_TYPE \"long int\"\n+#undef WINT_TYPE\n+#define WINT_TYPE (TARGET_64BIT ? \"int\" : \"long int\")\n \n-#undef\tWINT_TYPE_SIZE\n-#define\tWINT_TYPE_SIZE BITS_PER_WORD\n+#undef WINT_TYPE_SIZE\n+#define WINT_TYPE_SIZE 32\n \n #define SIG_ATOMIC_TYPE \"int\"\n \n@@ -103,6 +108,19 @@ along with GCC; see the file COPYING3.  If not see\n     solaris_override_options ();\t\t\t\\\n   } while (0)\n \n+#if DEFAULT_ARCH32_P\n+#define MULTILIB_DEFAULTS { \"m32\" }\n+#else\n+#define MULTILIB_DEFAULTS { \"m64\" }\n+#endif\n+\n+#if DEFAULT_ARCH32_P\n+#define DEF_ARCH32_SPEC(__str) \"%{!m64:\" __str \"}\"\n+#define DEF_ARCH64_SPEC(__str) \"%{m64:\" __str \"}\"\n+#else\n+#define DEF_ARCH32_SPEC(__str) \"%{m32:\" __str \"}\"\n+#define DEF_ARCH64_SPEC(__str) \"%{!m32:\" __str \"}\"\n+#endif\n \n /* It's safe to pass -s always, even if -g is not used.  Those options are\n    handled by both Sun as and GNU as.  */\n@@ -111,6 +129,16 @@ along with GCC; see the file COPYING3.  If not see\n \n #define ASM_PIC_SPEC \" %{fpic|fpie|fPIC|fPIE:-K PIC}\"\n \n+#undef ASM_CPU_DEFAULT_SPEC\n+#define ASM_CPU_DEFAULT_SPEC \\\n+(DEFAULT_ARCH32_P ? \"\\\n+%{m64:\" ASM_CPU64_DEFAULT_SPEC \"} \\\n+%{!m64:\" ASM_CPU32_DEFAULT_SPEC \"} \\\n+\" : \"\\\n+%{m32:\" ASM_CPU32_DEFAULT_SPEC \"} \\\n+%{!m32:\" ASM_CPU64_DEFAULT_SPEC \"} \\\n+\")\n+\n #undef LIB_SPEC\n #define LIB_SPEC \\\n   \"%{!symbolic:\\\n@@ -120,17 +148,11 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef CROSS_DIRECTORY_STRUCTURE\n #undef MD_EXEC_PREFIX\n #define MD_EXEC_PREFIX \"/usr/ccs/bin/\"\n-\n-#undef MD_STARTFILE_PREFIX\n-#define MD_STARTFILE_PREFIX \"/usr/ccs/lib/\"\n #endif\n \n-#undef STARTFILE_ARCH32_SPEC\n-#define STARTFILE_ARCH32_SPEC \"%{ansi:values-Xc.o%s} \\\n-\t\t\t    %{!ansi:values-Xa.o%s}\"\n-\n #undef STARTFILE_ARCH_SPEC\n-#define STARTFILE_ARCH_SPEC STARTFILE_ARCH32_SPEC\n+#define STARTFILE_ARCH_SPEC \"%{ansi:values-Xc.o%s} \\\n+\t\t\t    %{!ansi:values-Xa.o%s}\"\n \n /* We don't use the standard svr4 STARTFILE_SPEC because it's wrong for us.  */\n #undef STARTFILE_SPEC\n@@ -153,14 +175,78 @@ along with GCC; see the file COPYING3.  If not see\n   \"%{G:-G} \\\n    %{YP,*} \\\n    %{R*} \\\n-   %{!YP,*:%{p|pg:-Y P,%R/usr/ccs/lib/libp:%R/usr/lib/libp:%R/usr/ccs/lib:%R/lib:%R/usr/lib} \\\n-\t   %{!p:%{!pg:-Y P,%R/usr/ccs/lib:%R/lib:%R/usr/lib}}}\"\n+   %{!YP,*:%{p|pg:-Y P,%R/usr/lib/libp%R/lib:%R/usr/lib} \\\n+\t   %{!p:%{!pg:-Y P,%R/lib:%R/usr/lib}}}\"\n \n #undef LINK_ARCH32_SPEC\n #define LINK_ARCH32_SPEC LINK_ARCH32_SPEC_BASE\n \n+/* This should be the same as LINK_ARCH32_SPEC_BASE, except with\n+   ARCH64_SUBDIR appended to the paths.  */\n+#undef LINK_ARCH64_SPEC_BASE\n+#define LINK_ARCH64_SPEC_BASE \\\n+  \"%{G:-G} \\\n+   %{YP,*} \\\n+   %{R*} \\\n+   %{!YP,*:%{p|pg:-Y P,%R/usr/lib/libp/\" ARCH64_SUBDIR \":%R/lib/\" ARCH64_SUBDIR \":%R/usr/lib/\" ARCH64_SUBDIR \"}\t\\\n+\t   %{!p:%{!pg:-Y P,%R/lib/\" ARCH64_SUBDIR \":%R/usr/lib/\" ARCH64_SUBDIR \"}}}\"\n+\n+#undef LINK_ARCH64_SPEC\n+#ifndef USE_GLD\n+/* FIXME: Used to be SPARC-only.  Not SPARC-specfic but for the model name!  */\n+#define LINK_ARCH64_SPEC \\\n+  \"%{mcmodel=medlow:-M /usr/lib/ld/\" ARCH64_SUBDIR \"/map.below4G} \" \\\n+  LINK_ARCH64_SPEC_BASE\n+#else\n+#define LINK_ARCH64_SPEC LINK_ARCH64_SPEC_BASE\n+#endif\n+\n+#ifdef USE_GLD\n+#if DEFAULT_ARCH32_P\n+#define ARCH_DEFAULT_EMULATION ARCH32_EMULATION\n+#else\n+#define ARCH_DEFAULT_EMULATION ARCH64_EMULATION\n+#endif\n+#define TARGET_LD_EMULATION \"%{m32:-m \" ARCH32_EMULATION \"}\" \\\n+\t\t\t    \"%{m64:-m \" ARCH64_EMULATION \"}\" \\\n+\t\t\t    \"%{!m32:%{!m64:-m \" ARCH_DEFAULT_EMULATION \"}} \"\n+#else\n+#define TARGET_LD_EMULATION \"\"\n+#endif\n+\n #undef LINK_ARCH_SPEC\n-#define LINK_ARCH_SPEC LINK_ARCH32_SPEC\n+#if DISABLE_MULTILIB\n+#if DEFAULT_ARCH32_P\n+#define LINK_ARCH_SPEC TARGET_LD_EMULATION \" \\\n+%{m32:%(link_arch32)} \\\n+%{m64:%edoes not support multilib} \\\n+%{!m32:%{!m64:%(link_arch_default)}} \\\n+\"\n+#else\n+#define LINK_ARCH_SPEC TARGET_LD_EMULATION \" \\\n+%{m32:%edoes not support multilib} \\\n+%{m64:%(link_arch64)} \\\n+%{!m32:%{!m64:%(link_arch_default)}} \\\n+\"\n+#endif\n+#else\n+#define LINK_ARCH_SPEC TARGET_LD_EMULATION \" \\\n+%{m32:%(link_arch32)} \\\n+%{m64:%(link_arch64)} \\\n+%{!m32:%{!m64:%(link_arch_default)}}\"\n+#endif\n+\n+#define LINK_ARCH_DEFAULT_SPEC \\\n+(DEFAULT_ARCH32_P ? LINK_ARCH32_SPEC : LINK_ARCH64_SPEC)\n+\n+#undef SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS \\\n+  { \"startfile_arch\",\t STARTFILE_ARCH_SPEC },\t\t\\\n+  { \"link_arch32\",       LINK_ARCH32_SPEC },            \\\n+  { \"link_arch64\",       LINK_ARCH64_SPEC },            \\\n+  { \"link_arch_default\", LINK_ARCH_DEFAULT_SPEC },\t\\\n+  { \"link_arch\",\t LINK_ARCH_SPEC },\t\t\\\n+  SUBTARGET_CPU_EXTRA_SPECS\n \n /* C++11 programs need -lrt for nanosleep.  */\n #define TIME_LIBRARY \"rt\"\n@@ -235,7 +321,9 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_CXX_DECL_MANGLING_CONTEXT solaris_cxx_decl_mangling_context\n \n /* Solaris/x86 as and gas support unquoted section names.  */\n+#ifndef SECTION_NAME_FORMAT\n #define SECTION_NAME_FORMAT\t\"%s\"\n+#endif\n \n /* This is how to declare the size of a function.  For Solaris, we output\n    any .init or .fini entries here.  */\n@@ -249,23 +337,6 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n-/* Solaris as has a bug: a .common directive in .tbss or .tdata section\n-   behaves as .tls_common rather than normal non-TLS .common.  */\n-#undef  ASM_OUTPUT_ALIGNED_COMMON\n-#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      if (TARGET_SUN_TLS\t\t\t\t\t\t\\\n-\t  && in_section\t\t\t\t\t\t\t\\\n-\t  && ((in_section->common.flags & SECTION_TLS) == SECTION_TLS))\t\\\n-\tswitch_to_section (bss_section);\t\t\t\t\\\n-      fprintf ((FILE), \"%s\", COMMON_ASM_OP);\t\t\t\t\\\n-      assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-      fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\",%u\\n\",\t\t\\\n-\t       (SIZE), (ALIGN) / BITS_PER_UNIT);\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n #ifndef USE_GAS\n #undef TARGET_ASM_ASSEMBLE_VISIBILITY\n #define TARGET_ASM_ASSEMBLE_VISIBILITY solaris_assemble_visibility\n@@ -291,8 +362,10 @@ along with GCC; see the file COPYING3.  If not see\n \n #define TARGET_POSIX_IO\n \n+/* Solaris 10 has the float and long double forms of math functions.\n+   We redefine this hook so the version from elfos.h header won't be used.  */\n #undef TARGET_LIBC_HAS_FUNCTION\n-#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function\n+#define TARGET_LIBC_HAS_FUNCTION default_libc_has_function\n \n extern GTY(()) tree solaris_pending_aligns;\n extern GTY(()) tree solaris_pending_inits;"}, {"sha": "2fcdc85c81f509bd07004511d3a751ed5aabd7b5", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "patch": "@@ -109,8 +109,6 @@ along with GCC; see the file COPYING3.  If not see\n #define CPP_CPU64_DEFAULT_SPEC \"\"\n #undef ASM_CPU32_DEFAULT_SPEC\n #define ASM_CPU32_DEFAULT_SPEC \"-xarch=v8plus\"\n-#undef ASM_CPU_DEFAULT_SPEC\n-#define ASM_CPU_DEFAULT_SPEC ASM_CPU32_DEFAULT_SPEC\n #endif\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_ultrasparc\n@@ -120,8 +118,6 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_CPU32_DEFAULT_SPEC \"-xarch=v8plusa\"\n #undef ASM_CPU64_DEFAULT_SPEC\n #define ASM_CPU64_DEFAULT_SPEC \"-xarch=v9a\"\n-#undef ASM_CPU_DEFAULT_SPEC\n-#define ASM_CPU_DEFAULT_SPEC ASM_CPU32_DEFAULT_SPEC\n #endif\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_ultrasparc3\n@@ -131,8 +127,6 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_CPU32_DEFAULT_SPEC \"-xarch=v8plusb\"\n #undef ASM_CPU64_DEFAULT_SPEC\n #define ASM_CPU64_DEFAULT_SPEC \"-xarch=v9b\"\n-#undef ASM_CPU_DEFAULT_SPEC\n-#define ASM_CPU_DEFAULT_SPEC ASM_CPU32_DEFAULT_SPEC\n #endif\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_niagara\n@@ -142,8 +136,6 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_CPU32_DEFAULT_SPEC \"-xarch=v8plusb\"\n #undef ASM_CPU64_DEFAULT_SPEC\n #define ASM_CPU64_DEFAULT_SPEC \"-xarch=v9b\"\n-#undef ASM_CPU_DEFAULT_SPEC\n-#define ASM_CPU_DEFAULT_SPEC ASM_CPU32_DEFAULT_SPEC\n #endif\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_niagara2\n@@ -153,8 +145,6 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_CPU32_DEFAULT_SPEC \"-xarch=v8plusb\"\n #undef ASM_CPU64_DEFAULT_SPEC\n #define ASM_CPU64_DEFAULT_SPEC \"-xarch=v9b\"\n-#undef ASM_CPU_DEFAULT_SPEC\n-#define ASM_CPU_DEFAULT_SPEC ASM_CPU32_DEFAULT_SPEC\n #endif\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_niagara3\n@@ -164,8 +154,6 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_CPU32_DEFAULT_SPEC \"-xarch=v8plus\" AS_NIAGARA3_FLAG\n #undef ASM_CPU64_DEFAULT_SPEC\n #define ASM_CPU64_DEFAULT_SPEC \"-xarch=v9\" AS_NIAGARA3_FLAG\n-#undef ASM_CPU_DEFAULT_SPEC\n-#define ASM_CPU_DEFAULT_SPEC ASM_CPU32_DEFAULT_SPEC\n #endif\n \n #if TARGET_CPU_DEFAULT == TARGET_CPU_niagara4\n@@ -175,8 +163,6 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_CPU32_DEFAULT_SPEC AS_SPARC32_FLAG AS_NIAGARA4_FLAG\n #undef ASM_CPU64_DEFAULT_SPEC\n #define ASM_CPU64_DEFAULT_SPEC AS_SPARC64_FLAG AS_NIAGARA4_FLAG\n-#undef ASM_CPU_DEFAULT_SPEC\n-#define ASM_CPU_DEFAULT_SPEC ASM_CPU32_DEFAULT_SPEC\n #endif\n \n #undef CPP_CPU_SPEC\n@@ -361,6 +347,23 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+/* Solaris as has a bug: a .common directive in .tbss or .tdata section\n+   behaves as .tls_common rather than normal non-TLS .common.  */\n+#undef  ASM_OUTPUT_ALIGNED_COMMON\n+#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (TARGET_SUN_TLS\t\t\t\t\t\t\\\n+\t  && in_section\t\t\t\t\t\t\t\\\n+\t  && ((in_section->common.flags & SECTION_TLS) == SECTION_TLS))\t\\\n+\tswitch_to_section (bss_section);\t\t\t\t\\\n+      fprintf ((FILE), \"%s\", COMMON_ASM_OP);\t\t\t\t\\\n+      assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n+      fprintf ((FILE), \",\"HOST_WIDE_INT_PRINT_UNSIGNED\",%u\\n\",\t\t\\\n+\t       (SIZE), (ALIGN) / BITS_PER_UNIT);\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n #ifndef USE_GAS\n /* This is how to output an assembler line that says to advance\n    the location counter to a multiple of 2**LOG bytes using the\n@@ -376,7 +379,6 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n \n /* Sun as requires doublequoted section names on SPARC.  While GNU as\n    supports that, too, we prefer the standard variant.  */\n-#undef SECTION_NAME_FORMAT\n #define SECTION_NAME_FORMAT\t\"\\\"%s\\\"\"\n #endif /* !USE_GAS */\n "}, {"sha": "ec7e4eba6fd94ce91a8dc5f17bd4dd8408273777", "filename": "gcc/config/sparc/t-sol2", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fsparc%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d/gcc%2Fconfig%2Fsparc%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sol2?ref=2cf03b11f748c10d0a52ee82e23b0dd6cd3eae4d", "previous_filename": "gcc/config/sparc/t-sol2-64"}]}