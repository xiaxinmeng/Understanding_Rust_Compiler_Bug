{"sha": "e070095c0c140d54877a6ebec6b0b30d9b041023", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA3MDA5NWMwYzE0MGQ1NDg3N2E2ZWJlYzZiMGIzMGQ5YjA0MTAyMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-05-26T17:32:55Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-26T17:32:55Z"}, "message": "i386.md (*movqi_internal): Use if_then_else or cond RTXes to calculate attribute value.\n\n\t* config/i386/i386.md (*movqi_internal) <attr \"isa\">: Use\n\tif_then_else or cond RTXes to calculate attribute value.\n\t* config/i386/mmx.md (*vec_extractv2sf_1) <attr \"prefix_rep\">: Ditto.\n\t<attr \"length_immediate>: Ditto.\n\t(*vec_extractv2sf_1) <attr \"length_immediate\">: Ditto.\n\t* config/i386/sse.md (sse_loadlps) <attr \"length_immediate\">: Ditto.\n\t(*vec_concatv2sf_sse4_1) <attr \"isa\">: Ditto.\n\t<attr \"type\">: Ditto.\n\t<attr \"prefix_data16\">: Ditto.\n\t<attr \"prefix_extra\">: Ditto.\n\t<attr \"length_immediate\">: Ditto.\n\t<attr \"prefix\">: Ditto.\n\t(vec_set<mode>_0) <attr \"isa\">: Ditto.\n\t<attr \"prefix_extra\">: Ditto.\n\t<attr \"length_immediate\">: Ditto.\n\t<attr \"prefix\">: Ditto.\n\t(*vec_interleave_highv2df) <attr \"prefix_data16\">: Ditto.\n\t(*vec_interleave_lowv2df) <attr \"prefix_data16\">: Ditto.\n\t(sse2_storelpd) <attr \"prefix_data16\">: Ditto.\n\t(sse2_loadhpd) <attr \"prefix_data16\">: Ditto.\n\t(sse2_loadlpd) <attr \"prefix_data16\">: Ditto.\n\t<attr \"length_immediate\">: Ditto.\n\t<attr \"prefix\">: Ditto.\n\t(sse2_movsd) <attr \"length_immediate\">: Ditto.\n\t<attr \"prefix\">: Ditto.\n\t(vec_concatv2df)  <attr \"isa\">: Ditto.\n\t<attr \"prefix\">: Ditto.\n\t(*vec_extractv4si) <attr \"prefix_extra\">: Ditto.\n\t(*vec_extractv2di_1) <attr \"isa\">: Ditto.\n\t<attr \"type\">: Ditto.\n\t<attr \"length_immediate\">: Ditto.\n\t<attr \"prefix_rex\">: Ditto.\n\t<attr \"prefix_extra\">: Ditto.\n\t(*vec_concatv2si_sse4_1) <attr \"type\">: Ditto.\n\t<attr \"prefix_extra\">: Ditto.\n\t<attr \"length_immediate\">: Ditto.\n\t(vec_concatv2di) <attr \"isa\">: Ditto.\n\t<attr \"prefix_extra\">: Ditto.\n\t<attr \"length_immediate\">: Ditto.\n\t<attr \"prefix\">: Ditto.\n\nFrom-SVN: r236787", "tree": {"sha": "10bf246245148ab162c3364fca81a3e16e703e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10bf246245148ab162c3364fca81a3e16e703e15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e070095c0c140d54877a6ebec6b0b30d9b041023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e070095c0c140d54877a6ebec6b0b30d9b041023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e070095c0c140d54877a6ebec6b0b30d9b041023", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e070095c0c140d54877a6ebec6b0b30d9b041023/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d18b6df04b0d471b65b9eb8c69fcc14a32bd62b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d18b6df04b0d471b65b9eb8c69fcc14a32bd62b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d18b6df04b0d471b65b9eb8c69fcc14a32bd62b"}], "stats": {"total": 327, "additions": 287, "deletions": 40}, "files": [{"sha": "5a76af4c9e927a90ca2acd39c7367c9b5b007639", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e070095c0c140d54877a6ebec6b0b30d9b041023/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e070095c0c140d54877a6ebec6b0b30d9b041023/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e070095c0c140d54877a6ebec6b0b30d9b041023", "patch": "@@ -1,3 +1,46 @@\n+2016-05-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*movqi_internal) <attr \"isa\">: Use\n+\tif_then_else or cond RTXes to calculate attribute value.\n+\t* config/i386/mmx.md (*vec_extractv2sf_1) <attr \"prefix_rep\">: Ditto.\n+\t<attr \"length_immediate>: Ditto.\n+\t(*vec_extractv2sf_1) <attr \"length_immediate\">: Ditto.\n+\t* config/i386/sse.md (sse_loadlps) <attr \"length_immediate\">: Ditto.\n+\t(*vec_concatv2sf_sse4_1) <attr \"isa\">: Ditto.\n+\t<attr \"type\">: Ditto.\n+\t<attr \"prefix_data16\">: Ditto.\n+\t<attr \"prefix_extra\">: Ditto.\n+\t<attr \"length_immediate\">: Ditto.\n+\t<attr \"prefix\">: Ditto.\n+\t(vec_set<mode>_0) <attr \"isa\">: Ditto.\n+\t<attr \"prefix_extra\">: Ditto.\n+\t<attr \"length_immediate\">: Ditto.\n+\t<attr \"prefix\">: Ditto.\n+\t(*vec_interleave_highv2df) <attr \"prefix_data16\">: Ditto.\n+\t(*vec_interleave_lowv2df) <attr \"prefix_data16\">: Ditto.\n+\t(sse2_storelpd) <attr \"prefix_data16\">: Ditto.\n+\t(sse2_loadhpd) <attr \"prefix_data16\">: Ditto.\n+\t(sse2_loadlpd) <attr \"prefix_data16\">: Ditto.\n+\t<attr \"length_immediate\">: Ditto.\n+\t<attr \"prefix\">: Ditto.\n+\t(sse2_movsd) <attr \"length_immediate\">: Ditto.\n+\t<attr \"prefix\">: Ditto.\n+\t(vec_concatv2df)  <attr \"isa\">: Ditto.\n+\t<attr \"prefix\">: Ditto.\n+\t(*vec_extractv4si) <attr \"prefix_extra\">: Ditto.\n+\t(*vec_extractv2di_1) <attr \"isa\">: Ditto.\n+\t<attr \"type\">: Ditto.\n+\t<attr \"length_immediate\">: Ditto.\n+\t<attr \"prefix_rex\">: Ditto.\n+\t<attr \"prefix_extra\">: Ditto.\n+\t(*vec_concatv2si_sse4_1) <attr \"type\">: Ditto.\n+\t<attr \"prefix_extra\">: Ditto.\n+\t<attr \"length_immediate\">: Ditto.\n+\t(vec_concatv2di) <attr \"isa\">: Ditto.\n+\t<attr \"prefix_extra\">: Ditto.\n+\t<attr \"length_immediate\">: Ditto.\n+\t<attr \"prefix\">: Ditto.\n+\n 2016-05-26  Martin Liska  <mliska@suse.cz>\n \n \t* tree-ssa-loop-ivopts.c (comp_cost::infinite_cost_p): New"}, {"sha": "6a2978ef4ffe61daef019858762dd5d314d3376d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e070095c0c140d54877a6ebec6b0b30d9b041023/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e070095c0c140d54877a6ebec6b0b30d9b041023/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e070095c0c140d54877a6ebec6b0b30d9b041023", "patch": "@@ -2594,7 +2594,10 @@\n         return \"mov{b}\\t{%1, %0|%0, %1}\";\n     }\n }\n-  [(set_attr \"isa\" \"*,*,*,*,*,*,*,*,*,*,avx512dq,avx512dq\")\n+  [(set (attr \"isa\")\n+     (if_then_else (eq_attr \"alternative\" \"10,11\")\n+       (const_string \"avx512dq\")\n+       (const_string \"*\")))\n    (set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"7,8,9,10,11\")\n \t      (const_string \"mskmov\")"}, {"sha": "65e8b460508d744d116193bf0b402dab345c1830", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e070095c0c140d54877a6ebec6b0b30d9b041023/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e070095c0c140d54877a6ebec6b0b30d9b041023/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=e070095c0c140d54877a6ebec6b0b30d9b041023", "patch": "@@ -610,8 +610,14 @@\n    #\"\n   [(set_attr \"isa\" \"*,sse3,noavx,*,*,*,*\")\n    (set_attr \"type\" \"mmxcvt,sse,sseshuf1,mmxmov,ssemov,fmov,imov\")\n-   (set_attr \"length_immediate\" \"*,*,1,*,*,*,*\")\n-   (set_attr \"prefix_rep\" \"*,1,*,*,*,*,*\")\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"2\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix_rep\")\n+     (if_then_else (eq_attr \"alternative\" \"1\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"prefix\" \"orig,maybe_vex,orig,orig,orig,orig,orig\")\n    (set_attr \"mode\" \"DI,V4SF,V4SF,SF,SF,SF,SF\")])\n \n@@ -1297,7 +1303,10 @@\n    #\"\n   [(set_attr \"isa\" \"*,sse2,noavx,*,*,*\")\n    (set_attr \"type\" \"mmxcvt,sseshuf1,sseshuf1,mmxmov,ssemov,imov\")\n-   (set_attr \"length_immediate\" \"*,1,1,*,*,*\")\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"1,2\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"prefix\" \"orig,maybe_vex,orig,orig,orig,orig\")\n    (set_attr \"mode\" \"DI,TI,V4SF,SI,SI,SI\")])\n "}, {"sha": "b348f2df5447ad849425a19182bcfc5784328c54", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 228, "deletions": 36, "changes": 264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e070095c0c140d54877a6ebec6b0b30d9b041023/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e070095c0c140d54877a6ebec6b0b30d9b041023/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=e070095c0c140d54877a6ebec6b0b30d9b041023", "patch": "@@ -6510,7 +6510,10 @@\n    %vmovlps\\t{%2, %0|%q0, %2}\"\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"sseshuf,sseshuf,ssemov,ssemov,ssemov\")\n-   (set_attr \"length_immediate\" \"1,1,*,*,*\")\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"prefix\" \"orig,maybe_evex,orig,maybe_evex,maybe_vex\")\n    (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n \n@@ -6586,12 +6589,41 @@\n    %vmovss\\t{%1, %0|%0, %1}\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"isa\" \"noavx,noavx,avx,noavx,noavx,avx,*,*,*\")\n-   (set_attr \"type\" \"sselog,sselog,sselog,sselog,sselog,sselog,ssemov,mmxcvt,mmxmov\")\n-   (set_attr \"prefix_data16\" \"*,*,*,1,1,*,*,*,*\")\n-   (set_attr \"prefix_extra\" \"*,*,*,1,1,1,*,*,*\")\n-   (set_attr \"length_immediate\" \"*,*,*,1,1,1,*,*,*\")\n-   (set_attr \"prefix\" \"orig,orig,maybe_evex,orig,orig,maybe_evex,maybe_vex,orig,orig\")\n+  [(set (attr \"isa\")\n+     (cond [(eq_attr \"alternative\" \"0,1,3,4\")\n+\t      (const_string \"noavx\")\n+\t    (eq_attr \"alternative\" \"2,5\")\n+\t      (const_string \"avx\")\n+\t   ]\n+\t   (const_string \"*\")))\n+   (set (attr \"type\")\n+     (cond [(eq_attr \"alternative\" \"6\")\n+\t      (const_string \"ssemov\")\n+\t    (eq_attr \"alternative\" \"7\")\n+\t      (const_string \"mmxcvt\")\n+\t    (eq_attr \"alternative\" \"8\")\n+\t      (const_string \"mmxmov\")\n+\t   ]\n+\t   (const_string \"sselog\")))\n+   (set (attr \"prefix_data16\")\n+     (if_then_else (eq_attr \"alternative\" \"3,4\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix_extra\")\n+     (if_then_else (eq_attr \"alternative\" \"3,4,5\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"3,4,5\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix\")\n+     (cond [(eq_attr \"alternative\" \"2,5\")\n+\t      (const_string \"maybe_evex\")\n+\t    (eq_attr \"alternative\" \"6\")\n+\t      (const_string \"maybe_vex\")\n+\t   ]\n+\t   (const_string \"orig\")))\n    (set_attr \"mode\" \"V4SF,V4SF,V4SF,V4SF,V4SF,V4SF,SF,DI,DI\")])\n \n ;; ??? In theory we can match memory for the MMX alternative, but allowing\n@@ -6664,7 +6696,17 @@\n    #\n    #\n    #\"\n-  [(set_attr \"isa\" \"sse4_noavx,sse4_noavx,avx,sse2,sse2,noavx,noavx,avx,sse4_noavx,sse4_noavx,avx,*,*,*\")\n+  [(set (attr \"isa\")\n+     (cond [(eq_attr \"alternative\" \"0,1,8,9\")\n+\t      (const_string \"sse4_noavx\")\n+\t    (eq_attr \"alternative\" \"2,7,10\")\n+\t      (const_string \"avx\")\n+\t    (eq_attr \"alternative\" \"3,4\")\n+\t      (const_string \"sse2\")\n+\t    (eq_attr \"alternative\" \"5,6\")\n+\t      (const_string \"noavx\")\n+\t   ]\n+\t   (const_string \"*\")))\n    (set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"0,1,2,8,9,10\")\n \t      (const_string \"sselog\")\n@@ -6674,9 +6716,25 @@\n \t      (const_string \"fmov\")\n \t   ]\n \t   (const_string \"ssemov\")))\n-   (set_attr \"prefix_extra\" \"*,*,*,*,*,*,*,*,1,1,1,*,*,*\")\n-   (set_attr \"length_immediate\" \"*,*,*,*,*,*,*,*,1,1,1,*,*,*\")\n-   (set_attr \"prefix\" \"orig,orig,maybe_evex,maybe_vex,maybe_vex,orig,orig,vex,orig,orig,vex,*,*,*\")\n+   (set (attr \"prefix_extra\")\n+     (if_then_else (eq_attr \"alternative\" \"8,9,10\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"8,9,10\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix\")\n+     (cond [(eq_attr \"alternative\" \"0,1,5,6,8,9\")\n+\t      (const_string \"orig\")\n+\t    (eq_attr \"alternative\" \"2\")\n+\t      (const_string \"maybe_evex\")\n+\t    (eq_attr \"alternative\" \"3,4\")\n+\t      (const_string \"maybe_vex\")\n+\t    (eq_attr \"alternative\" \"7,10\")\n+\t      (const_string \"vex\")\n+\t   ]\n+\t   (const_string \"*\")))\n    (set_attr \"mode\" \"SF,SF,SF,<ssescalarmode>,SI,SF,SF,SF,TI,TI,TI,*,*,*\")])\n \n ;; A subset is vec_setv4sf.\n@@ -7667,7 +7725,10 @@\n    %vmovhpd\\t{%1, %0|%q0, %1}\"\n   [(set_attr \"isa\" \"noavx,avx,sse3,noavx,avx,*\")\n    (set_attr \"type\" \"sselog,sselog,sselog,ssemov,ssemov,ssemov\")\n-   (set_attr \"prefix_data16\" \"*,*,*,1,*,1\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else (eq_attr \"alternative\" \"3,5\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"prefix\" \"orig,maybe_evex,maybe_vex,orig,maybe_evex,maybe_vex\")\n    (set_attr \"mode\" \"V2DF,V2DF,DF,V1DF,V1DF,V1DF\")])\n \n@@ -7826,7 +7887,10 @@\n    %vmovlpd\\t{%2, %H0|%H0, %2}\"\n   [(set_attr \"isa\" \"noavx,avx,sse3,noavx,avx,*\")\n    (set_attr \"type\" \"sselog,sselog,sselog,ssemov,ssemov,ssemov\")\n-   (set_attr \"prefix_data16\" \"*,*,*,1,*,1\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else (eq_attr \"alternative\" \"3,5\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"prefix\" \"orig,maybe_evex,maybe_vex,orig,maybe_evex,maybe_vex\")\n    (set_attr \"mode\" \"V2DF,V2DF,DF,V1DF,V1DF,V1DF\")])\n \n@@ -8512,7 +8576,10 @@\n    #\n    #\"\n   [(set_attr \"type\" \"ssemov,ssemov,ssemov,fmov,imov\")\n-   (set_attr \"prefix_data16\" \"1,*,*,*,*\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else (eq_attr \"alternative\" \"0\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"V1DF,DF,DF,DF,DF\")])\n \n@@ -8582,7 +8649,10 @@\n    #\"\n   [(set_attr \"isa\" \"noavx,avx,noavx,avx,*,*,*\")\n    (set_attr \"type\" \"ssemov,ssemov,sselog,sselog,ssemov,fmov,imov\")\n-   (set_attr \"prefix_data16\" \"1,*,*,*,*,*,*\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else (eq_attr \"alternative\" \"0\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"prefix\" \"orig,maybe_evex,orig,maybe_evex,*,*,*\")\n    (set_attr \"mode\" \"V1DF,V1DF,V2DF,V2DF,DF,DF,DF\")])\n \n@@ -8650,9 +8720,23 @@\n \t      (const_string \"imov\")\n \t   ]\n \t   (const_string \"ssemov\")))\n-   (set_attr \"prefix_data16\" \"*,1,*,*,*,*,1,*,*,*,*\")\n-   (set_attr \"length_immediate\" \"*,*,*,*,*,1,*,*,*,*,*\")\n-   (set_attr \"prefix\" \"maybe_vex,orig,maybe_evex,orig,maybe_evex,orig,orig,maybe_evex,*,*,*\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else (eq_attr \"alternative\" \"1,6\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"5\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (const_string \"maybe_vex\")\n+\t    (eq_attr \"alternative\" \"1,3,5,6\")\n+\t      (const_string \"orig\")\n+\t    (eq_attr \"alternative\" \"2,4,7\")\n+\t      (const_string \"maybe_evex\")\n+\t   ]\n+\t   (const_string \"*\")))\n    (set_attr \"mode\" \"DF,V1DF,V1DF,V1DF,V1DF,V2DF,V1DF,V1DF,DF,DF,DF\")])\n \n (define_split\n@@ -8693,8 +8777,17 @@\n \t    (not (match_test \"TARGET_AVX\")))\n        (const_string \"1\")\n        (const_string \"*\")))\n-   (set_attr \"length_immediate\" \"*,*,*,*,*,1,*,*,*\")\n-   (set_attr \"prefix\" \"orig,maybe_evex,orig,maybe_evex,maybe_vex,orig,orig,maybe_evex,maybe_vex\")\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"5\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix\")\n+     (cond [(eq_attr \"alternative\" \"1,3,7\")\n+\t      (const_string \"maybe_evex\")\n+\t    (eq_attr \"alternative\" \"4,8\")\n+\t      (const_string \"maybe_vex\")\n+\t   ]\n+\t   (const_string \"orig\")))\n    (set_attr \"mode\" \"DF,DF,V1DF,V1DF,V1DF,V2DF,V1DF,V1DF,V1DF\")])\n \n (define_insn \"vec_dupv2df<mask_name>\"\n@@ -8730,7 +8823,19 @@\n    %vmovq\\t{%1, %0|%0, %1}\n    movlhps\\t{%2, %0|%0, %2}\n    movhps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"isa\" \"sse2_noavx,avx,avx512vl,sse3,avx512vl,sse2_noavx,avx,sse2,noavx,noavx\")\n+  [(set (attr \"isa\")\n+     (cond [(eq_attr \"alternative\" \"0,5\")\n+\t      (const_string \"sse2_noavx\")\n+\t    (eq_attr \"alternative\" \"1,6\")\n+\t      (const_string \"avx\")\n+\t    (eq_attr \"alternative\" \"2,4\")\n+\t      (const_string \"avx512vl\")\n+\t    (eq_attr \"alternative\" \"3\")\n+\t      (const_string \"sse3\")\n+\t    (eq_attr \"alternative\" \"7\")\n+\t      (const_string \"sse2\")\n+\t   ]\n+\t   (const_string \"noavx\")))\n    (set (attr \"type\")\n      (if_then_else\n        (eq_attr \"alternative\" \"0,1,2,3,4\")\n@@ -8740,7 +8845,15 @@\n \t(if_then_else (eq_attr \"alternative\" \"5\")\n \t\t      (const_string \"1\")\n \t\t      (const_string \"*\")))\n-   (set_attr \"prefix\" \"orig,vex,evex,maybe_vex,evex,orig,vex,maybe_vex,orig,orig\")\n+   (set (attr \"prefix\")\n+     (cond [(eq_attr \"alternative\" \"1,6\")\n+\t      (const_string \"vex\")\n+\t    (eq_attr \"alternative\" \"2,4\")\n+\t      (const_string \"evex\")\n+\t    (eq_attr \"alternative\" \"3,7\")\n+\t      (const_string \"maybe_vex\")\n+\t   ]\n+\t   (const_string \"orig\")))\n    (set_attr \"mode\" \"V2DF,V2DF,V2DF, DF, DF, V1DF,V1DF,DF,V4SF,V2SF\")])\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n@@ -13198,7 +13311,10 @@\n }\n   [(set_attr \"isa\" \"*,avx512dq,noavx,noavx,avx,avx512bw\")\n    (set_attr \"type\" \"sselog1,sselog1,sseishft1,sseishft1,sseishft1,sseishft1\")\n-   (set_attr \"prefix_extra\" \"1,1,*,*,*,*\")\n+   (set (attr \"prefix_extra\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex,evex,orig,orig,vex,evex\")\n    (set_attr \"mode\" \"TI\")])\n@@ -13256,11 +13372,44 @@\n    movhlps\\t{%1, %0|%0, %1}\n    #\n    #\"\n-  [(set_attr \"isa\" \"x64_sse4,x64_avx512dq,*,sse2_noavx,avx,avx512bw,noavx,*,x64\")\n-   (set_attr \"type\" \"sselog1,sselog1,ssemov,sseishft1,sseishft1,sseishft1,ssemov,ssemov,imov\")\n-   (set_attr \"length_immediate\" \"1,1,*,1,1,1,*,*,*\")\n-   (set_attr \"prefix_rex\" \"1,1,*,*,*,*,*,*,*\")\n-   (set_attr \"prefix_extra\" \"1,1,*,*,*,*,*,*,*\")\n+  [(set (attr \"isa\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (const_string \"x64_sse4\")\n+\t    (eq_attr \"alternative\" \"1\")\n+\t      (const_string \"x64_avx512dq\")\n+\t    (eq_attr \"alternative\" \"3\")\n+\t      (const_string \"sse2_noavx\")\n+\t    (eq_attr \"alternative\" \"4\")\n+\t      (const_string \"avx\")\n+\t    (eq_attr \"alternative\" \"5\")\n+\t      (const_string \"avx512bw\")\n+\t    (eq_attr \"alternative\" \"6\")\n+\t      (const_string \"noavx\")\n+\t    (eq_attr \"alternative\" \"8\")\n+\t      (const_string \"x64\")\n+\t   ]\n+\t   (const_string \"*\")))\n+   (set (attr \"type\")\n+     (cond [(eq_attr \"alternative\" \"2,6,7\")\n+\t      (const_string \"ssemov\")\n+\t    (eq_attr \"alternative\" \"3,4,5\")\n+\t      (const_string \"sseishft1\")\n+\t    (eq_attr \"alternative\" \"8\")\n+\t      (const_string \"imov\")\n+\t   ]\n+\t   (const_string \"sselog1\")))\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1,3,4,5\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix_rex\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix_extra\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"prefix\" \"maybe_vex,evex,maybe_vex,orig,vex,evex,orig,*,*\")\n    (set_attr \"mode\" \"TI,TI,V2SF,TI,TI,TI,V4SF,DI,DI\")])\n \n@@ -13357,9 +13506,23 @@\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"isa\" \"noavx,noavx,avx,noavx,noavx,avx,*,*,*\")\n-   (set_attr \"type\" \"sselog,sselog,sselog,sselog,sselog,sselog,ssemov,mmxcvt,mmxmov\")\n-   (set_attr \"prefix_extra\" \"1,1,1,*,*,*,*,*,*\")\n-   (set_attr \"length_immediate\" \"1,1,1,*,*,*,*,*,*\")\n+   (set (attr \"type\")\n+     (cond [(eq_attr \"alternative\" \"6\")\n+\t      (const_string \"ssemov\")\n+\t    (eq_attr \"alternative\" \"7\")\n+\t      (const_string \"mmxcvt\")\n+\t    (eq_attr \"alternative\" \"8\")\n+\t      (const_string \"mmxmov\")\n+\t   ]\n+\t   (const_string \"sselog\")))\n+   (set (attr \"prefix_extra\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1,2\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1,2\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n    (set_attr \"prefix\" \"orig,orig,vex,orig,orig,vex,maybe_vex,orig,orig\")\n    (set_attr \"mode\" \"TI,TI,TI,TI,TI,TI,TI,DI,DI\")])\n \n@@ -13423,16 +13586,45 @@\n    movlhps\\t{%2, %0|%0, %2}\n    movhps\\t{%2, %0|%0, %2}\n    vmovhps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"x64_sse4_noavx,x64_sse4_noavx,x64_avx,x64,sse2,sse2,sse2_noavx,avx,noavx,noavx,avx\")\n+  [(set (attr \"isa\")\n+     (cond [(eq_attr \"alternative\" \"0,1\")\n+\t      (const_string \"x64_sse4_noavx\")\n+\t    (eq_attr \"alternative\" \"2\")\n+\t      (const_string \"x64_avx\")\n+\t    (eq_attr \"alternative\" \"3\")\n+\t      (const_string \"x64\")\n+\t    (eq_attr \"alternative\" \"4,5\")\n+\t      (const_string \"sse2\")\n+\t    (eq_attr \"alternative\" \"6\")\n+\t      (const_string \"sse2_noavx\")\n+\t    (eq_attr \"alternative\" \"7,10\")\n+\t      (const_string \"avx\")\n+\t   ]\n+\t   (const_string \"noavx\")))\n    (set (attr \"type\")\n      (if_then_else\n        (eq_attr \"alternative\" \"0,1,2,6,7\")\n        (const_string \"sselog\")\n        (const_string \"ssemov\")))\n-   (set_attr \"prefix_rex\" \"1,1,1,1,*,*,*,*,*,*,*\")\n-   (set_attr \"prefix_extra\" \"1,1,1,*,*,*,*,*,*,*,*\")\n-   (set_attr \"length_immediate\" \"1,1,1,*,*,*,*,*,*,*,*\")\n-   (set_attr \"prefix\" \"orig,orig,vex,maybe_vex,maybe_vex,orig,orig,vex,orig,orig,vex\")\n+   (set (attr \"prefix_rex\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1,2,3\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix_extra\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1,2\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"length_immediate\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1,2\")\n+\t\t   (const_string \"1\")\n+\t\t   (const_string \"*\")))\n+   (set (attr \"prefix\")\n+     (cond [(eq_attr \"alternative\" \"2,7,10\")\n+\t      (const_string \"vex\")\n+\t    (eq_attr \"alternative\" \"3,4\")\n+\t      (const_string \"maybe_vex\")\n+\t   ]\n+\t   (const_string \"orig\")))\n    (set_attr \"mode\" \"TI,TI,TI,TI,TI,TI,TI,TI,V4SF,V2SF,V2SF\")])\n \n (define_expand \"vec_unpacks_lo_<mode>\""}]}