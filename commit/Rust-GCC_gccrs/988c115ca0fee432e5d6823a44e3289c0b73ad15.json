{"sha": "988c115ca0fee432e5d6823a44e3289c0b73ad15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg4YzExNWNhMGZlZTQzMmU1ZDY4MjNhNDRlMzI4OWMwYjczYWQxNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-08T12:57:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-08T12:57:26Z"}, "message": "re PR c++/71448 (pointer relational comparison fails inside constant expression)\n\n\tPR c++/71448\n\t* fold-const.c (fold_comparison): Handle CONSTANT_CLASS_P (base0)\n\tthe same as DECL_P (base0) for indirect_base0.  Use equality_code\n\tin one further place.\n\n\t* g++.dg/torture/pr71448.C: New test.\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r237212", "tree": {"sha": "890951bd2d7f413e5846a19196d7dc0c3db20bd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/890951bd2d7f413e5846a19196d7dc0c3db20bd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/988c115ca0fee432e5d6823a44e3289c0b73ad15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/988c115ca0fee432e5d6823a44e3289c0b73ad15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/988c115ca0fee432e5d6823a44e3289c0b73ad15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/988c115ca0fee432e5d6823a44e3289c0b73ad15/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "867a0126bcb8e2ea2b9ef900ac8b6b75c4fc6382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867a0126bcb8e2ea2b9ef900ac8b6b75c4fc6382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867a0126bcb8e2ea2b9ef900ac8b6b75c4fc6382"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "6ad6ddc5b907557279290cd0de78d394bbbc82e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/988c115ca0fee432e5d6823a44e3289c0b73ad15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/988c115ca0fee432e5d6823a44e3289c0b73ad15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=988c115ca0fee432e5d6823a44e3289c0b73ad15", "patch": "@@ -1,3 +1,11 @@\n+2016-06-08  Jakub Jelinek  <jakub@redhat.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR c++/71448\n+\t* fold-const.c (fold_comparison): Handle CONSTANT_CLASS_P (base0)\n+\tthe same as DECL_P (base0) for indirect_base0.  Use equality_code\n+\tin one further place.\n+\n 2016-06-08  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* expmed.c (store_bit_field_1): Do not restrict a multiword op0"}, {"sha": "0b7ea82c03422bf3b1d59e764d43748e8787bfcb", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/988c115ca0fee432e5d6823a44e3289c0b73ad15/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/988c115ca0fee432e5d6823a44e3289c0b73ad15/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=988c115ca0fee432e5d6823a44e3289c0b73ad15", "patch": "@@ -8527,9 +8527,9 @@ fold_comparison (location_t loc, enum tree_code code, tree type,\n \t  if ((offset0 == offset1\n \t       || (offset0 && offset1\n \t\t   && operand_equal_p (offset0, offset1, 0)))\n-\t      && (code == EQ_EXPR\n-\t\t  || code == NE_EXPR\n-\t\t  || (indirect_base0 && DECL_P (base0))\n+\t      && (equality_code\n+\t\t  || (indirect_base0\n+\t\t      && (DECL_P (base0) || CONSTANT_CLASS_P (base0)))\n \t\t  || POINTER_TYPE_OVERFLOW_UNDEFINED))\n \n \t    {\n@@ -8568,7 +8568,8 @@ fold_comparison (location_t loc, enum tree_code code, tree type,\n \t     6.5.6/8 and /9 with respect to the signed ptrdiff_t.  */\n \t  else if (bitpos0 == bitpos1\n \t\t   && (equality_code\n-\t\t       || (indirect_base0 && DECL_P (base0))\n+\t\t       || (indirect_base0\n+\t\t\t   && (DECL_P (base0) || CONSTANT_CLASS_P (base0)))\n \t\t       || POINTER_TYPE_OVERFLOW_UNDEFINED))\n \t    {\n \t      /* By converting to signed sizetype we cover middle-end pointer"}, {"sha": "d8b668cfaabda6e692999ad924be6fe4b0ab09c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/988c115ca0fee432e5d6823a44e3289c0b73ad15/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/988c115ca0fee432e5d6823a44e3289c0b73ad15/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=988c115ca0fee432e5d6823a44e3289c0b73ad15", "patch": "@@ -1,3 +1,8 @@\n+2016-06-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/71448\n+\t* g++.dg/torture/pr71448.C: New test.\n+\n 2016-06-08  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR debug/71432"}, {"sha": "ca00ca83b3646d0da48f9240c6fd5919d8a8a7b6", "filename": "gcc/testsuite/g++.dg/torture/pr71448.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/988c115ca0fee432e5d6823a44e3289c0b73ad15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr71448.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/988c115ca0fee432e5d6823a44e3289c0b73ad15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr71448.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr71448.C?ref=988c115ca0fee432e5d6823a44e3289c0b73ad15", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/71448\n+// { dg-do compile }\n+// { dg-additional-options \"-std=c++11\" }\n+\n+static constexpr const char foo[] = \"foo\";\n+static constexpr const char *bar = \"bar\";\n+\n+static_assert ((foo + 3 - foo) == 3, \"check\");\n+static_assert (foo + 2 != foo, \"check\");\n+static_assert (foo + 2 >= foo, \"check\");\n+static_assert (3 + foo >= foo, \"check\");\n+static_assert (foo <= foo + 2, \"check\");\n+static_assert (foo <= 3 + foo, \"check\");\n+static_assert (foo + 2 > foo, \"check\");\n+static_assert (3 + foo > foo, \"check\");\n+static_assert (foo < 2 + foo, \"check\");\n+static_assert (foo < foo + 3, \"check\");\n+static_assert ((bar + 3 - bar) == 3, \"check\");\n+static_assert (bar + 2 != bar, \"check\");\n+static_assert (2 + bar >= bar, \"check\");\n+static_assert (bar + 3 >= bar, \"check\");\n+static_assert (bar <= bar + 2, \"check\");\n+static_assert (bar <= 3 + bar, \"check\");\n+static_assert (bar + 2 > bar, \"check\");\n+static_assert (3 + bar > bar, \"check\");\n+static_assert (bar < 2 + bar, \"check\");\n+static_assert (bar < bar + 3, \"check\");"}]}