{"sha": "17366700d4ddcefeb271677029f59646a37a8ed3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTczNjY3MDBkNGRkY2VmZWIyNzE2NzcwMjlmNTk2NDZhMzdhOGVkMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-17T15:58:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-17T15:58:22Z"}, "message": "re PR tree-optimization/70144 (g++ ICE at -O1 and above on valid code on x86_64-linux-gnu in \"copy_reference_ops_from_ref\")\n\n\tPR c++/70144\n\t* cp-tree.h (magic_varargs_p): Return int instead of bool.\n\t* call.c (magic_varargs_p): Return int instead of bool, return 2 for\n\tCilk+ reductions, otherwise 1 for magic varargs and 0 for normal\n\tvarargs.\n\t(build_over_call): If magic_varargs_p == 2, call reject_gcc_builtin,\n\tif magic_varargs_p == 1, call decay_conversion\n\tinstead of mark_type_use.  Don't store error_mark_node arguments to\n\targarray, instead return error_mark_node.\n\n\t* c-c++-common/pr70144-1.c: New test.\n\t* c-c++-common/pr70144-2.c: New test.\n\nFrom-SVN: r234297", "tree": {"sha": "52d1bd6074582ad1e848033093f2d9815718e554", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52d1bd6074582ad1e848033093f2d9815718e554"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17366700d4ddcefeb271677029f59646a37a8ed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17366700d4ddcefeb271677029f59646a37a8ed3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17366700d4ddcefeb271677029f59646a37a8ed3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17366700d4ddcefeb271677029f59646a37a8ed3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3aad0e69c4f3f66a51c03c50c48c0d083db96f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3aad0e69c4f3f66a51c03c50c48c0d083db96f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3aad0e69c4f3f66a51c03c50c48c0d083db96f7"}], "stats": {"total": 69, "additions": 58, "deletions": 11}, "files": [{"sha": "15ca9a48111cb74af2db453f71a5b5191dfb24de", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=17366700d4ddcefeb271677029f59646a37a8ed3", "patch": "@@ -1,5 +1,15 @@\n 2016-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/70144\n+\t* cp-tree.h (magic_varargs_p): Return int instead of bool.\n+\t* call.c (magic_varargs_p): Return int instead of bool, return 2 for\n+\tCilk+ reductions, otherwise 1 for magic varargs and 0 for normal\n+\tvarargs.\n+\t(build_over_call): If magic_varargs_p == 2, call reject_gcc_builtin,\n+\tif magic_varargs_p == 1, call decay_conversion\n+\tinstead of mark_type_use.  Don't store error_mark_node arguments to\n+\targarray, instead return error_mark_node.\n+\n \tPR c++/70272\n \t* decl.c (begin_destructor_body): Don't insert clobber if\n \tis_empty_class (current_class_type)."}, {"sha": "1edbce88abaa6111c90e7ce4926484d4def34552", "filename": "gcc/cp/call.c", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=17366700d4ddcefeb271677029f59646a37a8ed3", "patch": "@@ -7040,15 +7040,17 @@ convert_for_arg_passing (tree type, tree val, tsubst_flags_t complain)\n   return val;\n }\n \n-/* Returns true iff FN is a function with magic varargs, i.e. ones for\n-   which no conversions at all should be done.  This is true for some\n-   builtins which don't act like normal functions.  */\n+/* Returns non-zero iff FN is a function with magic varargs, i.e. ones for\n+   which just decay_conversion or no conversions at all should be done.\n+   This is true for some builtins which don't act like normal functions.\n+   Return 2 if no conversions at all should be done, 1 if just\n+   decay_conversion.  */\n \n-bool\n+int\n magic_varargs_p (tree fn)\n {\n   if (flag_cilkplus && is_cilkplus_reduce_builtin (fn) != BUILT_IN_NONE)\n-    return true;\n+    return 2;\n \n   if (DECL_BUILT_IN (fn))\n     switch (DECL_FUNCTION_CODE (fn))\n@@ -7057,14 +7059,14 @@ magic_varargs_p (tree fn)\n       case BUILT_IN_CONSTANT_P:\n       case BUILT_IN_NEXT_ARG:\n       case BUILT_IN_VA_START:\n-\treturn true;\n+\treturn 1;\n \n       default:;\n \treturn lookup_attribute (\"type generic\",\n \t\t\t\t TYPE_ATTRIBUTES (TREE_TYPE (fn))) != 0;\n       }\n \n-  return false;\n+  return 0;\n }\n \n /* Returns the decl of the dispatcher function if FN is a function version.  */\n@@ -7515,9 +7517,17 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n   for (; arg_index < vec_safe_length (args); ++arg_index)\n     {\n       tree a = (*args)[arg_index];\n-      if (magic_varargs_p (fn))\n-\t/* Do no conversions for magic varargs.  */\n-\ta = mark_type_use (a);\n+      int magic = magic_varargs_p (fn);\n+      if (magic == 2)\n+\t{\n+\t  /* Do no conversions for certain magic varargs.  */\n+\t  a = mark_type_use (a);\n+\t  if (TREE_CODE (a) == FUNCTION_DECL && reject_gcc_builtin (a))\n+\t    return error_mark_node;\n+\t}\n+      else if (magic == 1)\n+\t/* For other magic varargs only do decay_conversion.  */\n+\ta = decay_conversion (a, complain);\n       else if (DECL_CONSTRUCTOR_P (fn)\n \t       && same_type_ignoring_top_level_qualifiers_p (DECL_CONTEXT (fn),\n \t\t\t\t\t\t\t     TREE_TYPE (a)))\n@@ -7530,6 +7540,8 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t}\n       else\n \ta = convert_arg_to_ellipsis (a, complain);\n+      if (a == error_mark_node)\n+\treturn error_mark_node;\n       argarray[j++] = a;\n     }\n "}, {"sha": "15b004d659145dd472e61cd176269676c7186635", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=17366700d4ddcefeb271677029f59646a37a8ed3", "patch": "@@ -5563,7 +5563,7 @@ class cache_map\n \n /* in call.c */\n extern bool check_dtor_name\t\t\t(tree, tree);\n-bool magic_varargs_p                            (tree);\n+int magic_varargs_p\t\t\t\t(tree);\n \n extern tree build_conditional_expr\t\t(location_t, tree, tree, tree, \n                                                  tsubst_flags_t);"}, {"sha": "7fe729594a05fe52a921268520ecb56ec0b95fa3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17366700d4ddcefeb271677029f59646a37a8ed3", "patch": "@@ -1,5 +1,9 @@\n 2016-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/70144\n+\t* c-c++-common/pr70144-1.c: New test.\n+\t* c-c++-common/pr70144-2.c: New test.\n+\n \tPR c++/70272\n \t* g++.dg/opt/flifetime-dse5.C (main): Remove extra semicolon.\n \t* g++.dg/opt/flifetime-dse6.C: New test."}, {"sha": "01c7b78b1792bd57f7d2ee651aa961c9f98bfce5", "filename": "gcc/testsuite/c-c++-common/pr70144-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr70144-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr70144-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr70144-1.c?ref=17366700d4ddcefeb271677029f59646a37a8ed3", "patch": "@@ -0,0 +1,9 @@\n+/* PR c++/70144 */\n+/* { dg-do compile } */\n+\n+void\n+foo ()\n+{\n+  __builtin_constant_p (__builtin_constant_p) ?: ({ unsigned t = 0; t; });\t/* { dg-error \"must be directly called\" } */\n+  __builtin_classify_type (__builtin_expect);\t/* { dg-error \"must be directly called\" } */\n+}"}, {"sha": "0973b792e95a8243eec2d53fceaea1ee3cd96c79", "filename": "gcc/testsuite/c-c++-common/pr70144-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr70144-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17366700d4ddcefeb271677029f59646a37a8ed3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr70144-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr70144-2.c?ref=17366700d4ddcefeb271677029f59646a37a8ed3", "patch": "@@ -0,0 +1,12 @@\n+/* PR c++/70144 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+main ()\n+{\n+  if (__builtin_constant_p (__builtin_memset) != 0\n+      || __builtin_classify_type (__builtin_memset) != 5)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}