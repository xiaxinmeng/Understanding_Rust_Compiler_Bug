{"sha": "6aee2fd0648140a7308123c1368e772cf58738ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFlZTJmZDA2NDgxNDBhNzMwODEyM2MxMzY4ZTc3MmNmNTg3MzhmZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-01-18T20:30:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-18T20:30:33Z"}, "message": "re PR sanitizer/81715 (asan-stack=1 redzone allocation is too inflexible)\n\n\tPR sanitizer/81715\n\tPR testsuite/83882\n\t* function.h (gimplify_parameters): Add gimple_seq * argument.\n\t* function.c: Include gimple.h and options.h.\n\t(gimplify_parameters): Add cleanup argument, add CLOBBER stmts\n\tfor the added local temporaries if needed.\n\t* gimplify.c (gimplify_body): Adjust gimplify_parameters caller,\n\tif there are any parameter cleanups, wrap whole body into a\n\ttry/finally with the cleanups.\n\nFrom-SVN: r256861", "tree": {"sha": "d3b25d4d5a26001425b9b68638df47855a0c1354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3b25d4d5a26001425b9b68638df47855a0c1354"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aee2fd0648140a7308123c1368e772cf58738ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aee2fd0648140a7308123c1368e772cf58738ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aee2fd0648140a7308123c1368e772cf58738ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aee2fd0648140a7308123c1368e772cf58738ff/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3a9902e523f81f07e765b2553dde7019aa098fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a9902e523f81f07e765b2553dde7019aa098fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a9902e523f81f07e765b2553dde7019aa098fb"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "4a52a308e101b37d58e74e7413f6c4fc290c67c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aee2fd0648140a7308123c1368e772cf58738ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aee2fd0648140a7308123c1368e772cf58738ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6aee2fd0648140a7308123c1368e772cf58738ff", "patch": "@@ -1,3 +1,15 @@\n+2018-01-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/81715\n+\tPR testsuite/83882\n+\t* function.h (gimplify_parameters): Add gimple_seq * argument.\n+\t* function.c: Include gimple.h and options.h.\n+\t(gimplify_parameters): Add cleanup argument, add CLOBBER stmts\n+\tfor the added local temporaries if needed.\n+\t* gimplify.c (gimplify_body): Adjust gimplify_parameters caller,\n+\tif there are any parameter cleanups, wrap whole body into a\n+\ttry/finally with the cleanups.\n+\n 2018-01-18  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR target/82964"}, {"sha": "1a09ff0d31e2c95dec179b5cb2a9883b05fcc3d7", "filename": "gcc/function.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aee2fd0648140a7308123c1368e772cf58738ff/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aee2fd0648140a7308123c1368e772cf58738ff/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=6aee2fd0648140a7308123c1368e772cf58738ff", "patch": "@@ -79,6 +79,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\"\n+#include \"gimple.h\"\n+#include \"options.h\"\n \n /* So we can assign to cfun in this file.  */\n #undef cfun\n@@ -3993,7 +3995,7 @@ gimplify_parm_type (tree *tp, int *walk_subtrees, void *data)\n    statements to add to the beginning of the function.  */\n \n gimple_seq\n-gimplify_parameters (void)\n+gimplify_parameters (gimple_seq *cleanup)\n {\n   struct assign_parm_data_all all;\n   tree parm;\n@@ -4058,6 +4060,16 @@ gimplify_parameters (void)\n \t\t  else if (TREE_CODE (type) == COMPLEX_TYPE\n \t\t\t   || TREE_CODE (type) == VECTOR_TYPE)\n \t\t    DECL_GIMPLE_REG_P (local) = 1;\n+\n+\t\t  if (!is_gimple_reg (local)\n+\t\t      && flag_stack_reuse != SR_NONE)\n+\t\t    {\n+\t\t      tree clobber = build_constructor (type, NULL);\n+\t\t      gimple *clobber_stmt;\n+\t\t      TREE_THIS_VOLATILE (clobber) = 1;\n+\t\t      clobber_stmt = gimple_build_assign (local, clobber);\n+\t\t      gimple_seq_add_stmt (cleanup, clobber_stmt);\n+\t\t    }\n \t\t}\n \t      else\n \t\t{"}, {"sha": "7e59050e8a625ed82895545c0137680c3e323f29", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aee2fd0648140a7308123c1368e772cf58738ff/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aee2fd0648140a7308123c1368e772cf58738ff/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=6aee2fd0648140a7308123c1368e772cf58738ff", "patch": "@@ -607,7 +607,7 @@ extern bool initial_value_entry (int i, rtx *, rtx *);\n extern void instantiate_decl_rtl (rtx x);\n extern int aggregate_value_p (const_tree, const_tree);\n extern bool use_register_for_decl (const_tree);\n-extern gimple_seq gimplify_parameters (void);\n+extern gimple_seq gimplify_parameters (gimple_seq *);\n extern void locate_and_pad_parm (machine_mode, tree, int, int, int,\n \t\t\t\t tree, struct args_size *,\n \t\t\t\t struct locate_and_pad_arg_data *);"}, {"sha": "7fedd973c88ea701aca9c602a749e4851f20e1b6", "filename": "gcc/gimplify.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aee2fd0648140a7308123c1368e772cf58738ff/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aee2fd0648140a7308123c1368e772cf58738ff/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=6aee2fd0648140a7308123c1368e772cf58738ff", "patch": "@@ -12589,7 +12589,7 @@ gbind *\n gimplify_body (tree fndecl, bool do_parms)\n {\n   location_t saved_location = input_location;\n-  gimple_seq parm_stmts, seq;\n+  gimple_seq parm_stmts, parm_cleanup = NULL, seq;\n   gimple *outer_stmt;\n   gbind *outer_bind;\n   struct cgraph_node *cgn;\n@@ -12628,7 +12628,7 @@ gimplify_body (tree fndecl, bool do_parms)\n \n   /* Resolve callee-copies.  This has to be done before processing\n      the body so that DECL_VALUE_EXPR gets processed correctly.  */\n-  parm_stmts = do_parms ? gimplify_parameters () : NULL;\n+  parm_stmts = do_parms ? gimplify_parameters (&parm_cleanup) : NULL;\n \n   /* Gimplify the function's body.  */\n   seq = NULL;\n@@ -12657,6 +12657,13 @@ gimplify_body (tree fndecl, bool do_parms)\n       tree parm;\n \n       gimplify_seq_add_seq (&parm_stmts, gimple_bind_body (outer_bind));\n+      if (parm_cleanup)\n+\t{\n+\t  gtry *g = gimple_build_try (parm_stmts, parm_cleanup,\n+\t\t\t\t      GIMPLE_TRY_FINALLY);\n+\t  parm_stmts = NULL;\n+\t  gimple_seq_add_stmt (&parm_stmts, g);\n+\t}\n       gimple_bind_set_body (outer_bind, parm_stmts);\n \n       for (parm = DECL_ARGUMENTS (current_function_decl);"}]}