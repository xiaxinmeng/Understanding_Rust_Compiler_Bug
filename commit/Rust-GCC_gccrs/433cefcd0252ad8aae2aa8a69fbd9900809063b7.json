{"sha": "433cefcd0252ad8aae2aa8a69fbd9900809063b7", "node_id": "C_kwDOANBUbNoAKDQzM2NlZmNkMDI1MmFkOGFhZTJhYThhNjlmYmQ5OTAwODA5MDYzYjc", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-06-28T16:51:30Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-12T12:24:14Z"}, "message": "[Ada] Extend No_Dependence restriction to code generation\n\nThis makes it possible to report violations of the No_Dependence restriction\nduring code generation, in other words outside of the Ada front-end proper.\nThese violations are supposed to be only for child units of System, so the\nimplementation is restricted to these cases.\n\ngcc/ada/\n\n\t* restrict.ads (type ND_Entry): Add System_Child component.\n\t(Check_Restriction_No_Dependence_On_System): Declare.\n\t* restrict.adb (Global_Restriction_No_Tasking): Move around.\n\t(Violation_Of_No_Dependence): New procedure.\n\t(Check_Restriction_No_Dependence): Call Violation_Of_No_Dependence\n\tto report a violation.\n\t(Check_Restriction_No_Dependence_On_System): New procedure.\n\t(Set_Restriction_No_Dependenc): Set System_Child component if the\n\tunit is a child of System.\n\t* snames.ads-tmpl (Name_Arith_64): New package name.\n\t(Name_Arith_128): Likewise.\n\t(Name_Memory): Likewise.\n\t(Name_Stack_Checking): Likewise.\n\t* fe.h (Check_Restriction_No_Dependence_On_System): Declare.", "tree": {"sha": "09d1652cfa70a2ac0f2263509b89871328232eda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09d1652cfa70a2ac0f2263509b89871328232eda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/433cefcd0252ad8aae2aa8a69fbd9900809063b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/433cefcd0252ad8aae2aa8a69fbd9900809063b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/433cefcd0252ad8aae2aa8a69fbd9900809063b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/433cefcd0252ad8aae2aa8a69fbd9900809063b7/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ff936fe86ddff4d4a95a4ca9eda85ad0287ffa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff936fe86ddff4d4a95a4ca9eda85ad0287ffa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ff936fe86ddff4d4a95a4ca9eda85ad0287ffa5"}], "stats": {"total": 108, "additions": 87, "deletions": 21}, "files": [{"sha": "b002bdc005604039ac944786f153b7814e5d7218", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433cefcd0252ad8aae2aa8a69fbd9900809063b7/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433cefcd0252ad8aae2aa8a69fbd9900809063b7/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=433cefcd0252ad8aae2aa8a69fbd9900809063b7", "patch": "@@ -252,6 +252,8 @@ extern Boolean SJLJ_Exceptions\t\t(void);\n   restrict__check_no_implicit_protected_alloc\n #define Check_No_Implicit_Task_Alloc\t\\\n   restrict__check_no_implicit_task_alloc\n+#define Check_Restriction_No_Dependence_On_System \\\n+  restrict__check_restriction_no_dependence_on_system\n #define No_Exception_Handlers_Set\t\\\n   restrict__no_exception_handlers_set\n #define No_Exception_Propagation_Active\t\\\n@@ -262,6 +264,7 @@ extern void Check_Implicit_Dynamic_Code_Allowed\t(Node_Id);\n extern void Check_No_Implicit_Heap_Alloc\t(Node_Id);\n extern void Check_No_Implicit_Protected_Alloc\t(Node_Id);\n extern void Check_No_Implicit_Task_Alloc\t(Node_Id);\n+extern void Check_Restriction_No_Dependence_On_System (Name_Id, Node_Id);\n extern Boolean No_Exception_Handlers_Set\t(void);\n extern Boolean No_Exception_Propagation_Active\t(void);\n "}, {"sha": "cf43ca91e7de648eb65d50084c372507e45b9213", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 70, "deletions": 21, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433cefcd0252ad8aae2aa8a69fbd9900809063b7/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433cefcd0252ad8aae2aa8a69fbd9900809063b7/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=433cefcd0252ad8aae2aa8a69fbd9900809063b7", "patch": "@@ -44,17 +44,17 @@ with Uname;          use Uname;\n \n package body Restrict is\n \n-   Global_Restriction_No_Tasking : Boolean := False;\n-   --  Set to True when No_Tasking is set in the run-time package System\n-   --  or in a configuration pragmas file (for example, gnat.adc).\n-\n    --------------------------------\n    -- Package Local Declarations --\n    --------------------------------\n \n    Config_Cunit_Boolean_Restrictions : Save_Cunit_Boolean_Restrictions;\n    --  Save compilation unit restrictions set by config pragma files\n \n+   Global_Restriction_No_Tasking : Boolean := False;\n+   --  Set to True when No_Tasking is set in the run-time package System\n+   --  or in a configuration pragmas file (for example, gnat.adc).\n+\n    Restricted_Profile_Result : Boolean := False;\n    --  This switch memoizes the result of Restricted_Profile function calls for\n    --  improved efficiency. Valid only if Restricted_Profile_Cached is True.\n@@ -122,6 +122,11 @@ package body Restrict is\n    --  message is to be suppressed if this is an internal file and this file is\n    --  not the main unit. Returns True if message is to be suppressed.\n \n+   procedure Violation_Of_No_Dependence (Unit : Int; N : Node_Id);\n+   --  Called if a violation of restriction No_Dependence for Unit at node N\n+   --  is found. This routine outputs the appropriate message, taking care of\n+   --  warning vs real violation.\n+\n    -------------------\n    -- Abort_Allowed --\n    -------------------\n@@ -550,8 +555,6 @@ package body Restrict is\n    -------------------------------------\n \n    procedure Check_Restriction_No_Dependence (U : Node_Id; Err : Node_Id) is\n-      DU : Node_Id;\n-\n    begin\n       --  Ignore call if node U is not in the main source unit. This avoids\n       --  cascaded errors, e.g. when Ada.Containers units with other units.\n@@ -567,26 +570,33 @@ package body Restrict is\n       --  Loop through entries in No_Dependence table to check each one in turn\n \n       for J in No_Dependences.First .. No_Dependences.Last loop\n-         DU := No_Dependences.Table (J).Unit;\n+         if Same_Unit (No_Dependences.Table (J).Unit, U) then\n+            Violation_Of_No_Dependence (J, Err);\n+            return;\n+         end if;\n+      end loop;\n+   end Check_Restriction_No_Dependence;\n \n-         if Same_Unit (U, DU) then\n-            Error_Msg_Sloc := Sloc (DU);\n-            Error_Msg_Node_1 := DU;\n+   -----------------------------------------------\n+   -- Check_Restriction_No_Dependence_On_System --\n+   -----------------------------------------------\n \n-            if No_Dependences.Table (J).Warn then\n-               Error_Msg\n-                 (\"?*?violation of restriction `No_Dependence '='> &`#\",\n-                  Sloc (Err));\n-            else\n-               Error_Msg\n-                 (\"|violation of restriction `No_Dependence '='> &`#\",\n-                  Sloc (Err));\n-            end if;\n+   procedure Check_Restriction_No_Dependence_On_System\n+     (U   : Name_Id;\n+      Err : Node_Id)\n+   is\n+      pragma Assert (U /= No_Name);\n+\n+   begin\n+      --  Loop through entries in No_Dependence table to check each one in turn\n \n+      for J in No_Dependences.First .. No_Dependences.Last loop\n+         if No_Dependences.Table (J).System_Child = U then\n+            Violation_Of_No_Dependence (J, Err);\n             return;\n          end if;\n       end loop;\n-   end Check_Restriction_No_Dependence;\n+   end Check_Restriction_No_Dependence_On_System;\n \n    --------------------------------------------------\n    -- Check_Restriction_No_Specification_Of_Aspect --\n@@ -1474,6 +1484,8 @@ package body Restrict is\n       Warn    : Boolean;\n       Profile : Profile_Name := No_Profile)\n    is\n+      ND : ND_Entry;\n+\n    begin\n       --  Loop to check for duplicate entry\n \n@@ -1495,7 +1507,26 @@ package body Restrict is\n \n       --  Entry is not currently in table\n \n-      No_Dependences.Append ((Unit, Warn, Profile));\n+      ND := (Unit, No_Name, Warn, Profile);\n+\n+      --  Check whether this is a child unit of System\n+\n+      if Nkind (Unit) = N_Selected_Component then\n+         declare\n+            Root : Node_Id := Unit;\n+\n+         begin\n+            while Nkind (Prefix (Root)) = N_Selected_Component loop\n+               Root := Prefix (Root);\n+            end loop;\n+\n+            if Chars (Prefix (Root)) = Name_System then\n+               ND.System_Child := Chars (Selector_Name (Root));\n+            end if;\n+         end;\n+      end if;\n+\n+      No_Dependences.Append (ND);\n    end Set_Restriction_No_Dependence;\n \n    --------------------------------------\n@@ -1647,6 +1678,24 @@ package body Restrict is\n       end if;\n    end Suppress_Restriction_Message;\n \n+   --------------------------------\n+   -- Violation_Of_No_Dependence --\n+   --------------------------------\n+\n+   procedure Violation_Of_No_Dependence (Unit : Int; N : Node_Id) is\n+   begin\n+      Error_Msg_Node_1 := No_Dependences.Table (Unit).Unit;\n+      Error_Msg_Sloc   := Sloc (Error_Msg_Node_1);\n+\n+      if No_Dependences.Table (Unit).Warn then\n+         Error_Msg\n+           (\"?*?violation of restriction `No_Dependence '='> &`#\", Sloc (N));\n+      else\n+         Error_Msg\n+           (\"|violation of restriction `No_Dependence '='> &`#\", Sloc (N));\n+      end if;\n+   end Violation_Of_No_Dependence;\n+\n    ---------------------\n    -- Tasking_Allowed --\n    ---------------------"}, {"sha": "7a5c0ff362267efa15867b2c303482214396df93", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433cefcd0252ad8aae2aa8a69fbd9900809063b7/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433cefcd0252ad8aae2aa8a69fbd9900809063b7/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=433cefcd0252ad8aae2aa8a69fbd9900809063b7", "patch": "@@ -168,6 +168,9 @@ package Restrict is\n       Unit : Node_Id;\n       --  The unit parameter from the No_Dependence pragma\n \n+      System_Child : Name_Id;\n+      --  The name if the unit is a child of System, or else No_Name\n+\n       Warn : Boolean;\n       --  True if from Restriction_Warnings, False if from Restrictions\n \n@@ -269,6 +272,13 @@ package Restrict is\n    --  an explicit WITH clause). U is a node for the unit involved, and Err is\n    --  the node to which an error will be attached if necessary.\n \n+   procedure Check_Restriction_No_Dependence_On_System\n+     (U   : Name_Id;\n+      Err : Node_Id);\n+   --  Likewise, but for the child units of System referenced by their name\n+\n+   --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n    procedure Check_Restriction_No_Specification_Of_Aspect (N : Node_Id);\n    --  N is the node id for an N_Aspect_Specification, an N_Pragma, or an\n    --  N_Attribute_Definition_Clause. An error message (warning) will be issued"}, {"sha": "44465e75707c5ae1dc76ebd65b8e4345c719fa50", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433cefcd0252ad8aae2aa8a69fbd9900809063b7/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433cefcd0252ad8aae2aa8a69fbd9900809063b7/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=433cefcd0252ad8aae2aa8a69fbd9900809063b7", "patch": "@@ -274,10 +274,14 @@ package Snames is\n \n    --  Names for packages that are treated specially by the compiler\n \n+   Name_Arith_64                       : constant Name_Id := N + $;\n+   Name_Arith_128                      : constant Name_Id := N + $;\n    Name_Exception_Traces               : constant Name_Id := N + $;\n    Name_Finalization                   : constant Name_Id := N + $;\n    Name_Interfaces                     : constant Name_Id := N + $;\n+   Name_Memory                         : constant Name_Id := N + $;\n    Name_Most_Recent_Exception          : constant Name_Id := N + $;\n+   Name_Stack_Checking                 : constant Name_Id := N + $;\n    Name_Standard                       : constant Name_Id := N + $;\n    Name_System                         : constant Name_Id := N + $;\n    Name_Text_IO                        : constant Name_Id := N + $;"}]}