{"sha": "f8d97cf4724fb1d966118b4d1870f553da4fc09c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhkOTdjZjQ3MjRmYjFkOTY2MTE4YjRkMTg3MGY1NTNkYTRmYzA5Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-20T09:58:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-20T09:58:18Z"}, "message": "Put include of stdio.h after GCC header files (for i860-stardent-sysv4).\n\nFrom-SVN: r1905", "tree": {"sha": "2d78eb61c0c67f5d8fcbe60828c1e7c28af9bfb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d78eb61c0c67f5d8fcbe60828c1e7c28af9bfb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8d97cf4724fb1d966118b4d1870f553da4fc09c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d97cf4724fb1d966118b4d1870f553da4fc09c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8d97cf4724fb1d966118b4d1870f553da4fc09c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d97cf4724fb1d966118b4d1870f553da4fc09c/comments", "author": null, "committer": null, "parents": [{"sha": "99effc21d4027b4391fbdddea247f25dd568e366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99effc21d4027b4391fbdddea247f25dd568e366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99effc21d4027b4391fbdddea247f25dd568e366"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "75ef97ac7966088381ef491af3d8f7ed03917451", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=f8d97cf4724fb1d966118b4d1870f553da4fc09c", "patch": "@@ -73,8 +73,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    also use the condition code; but in practice such insns would not\n    combine anyway.  */\n \n-#include <stdio.h>\n-\n #include \"config.h\"\n #include \"gvarargs.h\"\n #include \"rtl.h\"\n@@ -88,6 +86,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"real.h\"\n+#include <stdio.h>\n \n /* It is not safe to use ordinary gen_lowpart in combine.\n    Use gen_lowpart_for_combine instead.  See comments there.  */"}, {"sha": "7643d7dcaa6893279584f5129728f184a11d1544", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=f8d97cf4724fb1d966118b4d1870f553da4fc09c", "patch": "@@ -34,7 +34,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    is the kind of rtx's they make and what arguments they use.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n #include \"gvarargs.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n@@ -43,6 +42,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"regs.h\"\n #include \"insn-config.h\"\n #include \"real.h\"\n+#include <stdio.h>\n \n /* This is reset to LAST_VIRTUAL_REGISTER + 1 at the start of each function.\n    After rtl generation, it is 1 plus the largest register number used.  */"}, {"sha": "7c15200bd51eea615d5c32f41f4dc01aa4da94c6", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=f8d97cf4724fb1d966118b4d1870f553da4fc09c", "patch": "@@ -43,7 +43,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    directly as assembler code by the macros FUNCTION_PROLOGUE and\n    FUNCTION_EPILOGUE.  Those instructions never exist as rtl.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n #include \"gvarargs.h\"\n #include \"rtl.h\"\n@@ -59,6 +58,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"output.h\"\n #include \"hard-reg-set.h\"\n #include \"defaults.h\"\n+#include <stdio.h>\n \n /* Get N_SLINE and N_SOL from stab.h if we can expect the file to exist.  */\n #if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)"}, {"sha": "838d9e9059ae6b4920fdc3c7b1b0617c8432d9b5", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f8d97cf4724fb1d966118b4d1870f553da4fc09c", "patch": "@@ -30,7 +30,6 @@ CC recognizes how to compile each input file by suffixes in the file names.\n Once it knows which kind of compilation to perform, the procedure for\n compilation is specified by a string called a \"spec\".  */\n \f\n-#include <stdio.h>\n #include <sys/types.h>\n #include <ctype.h>\n #include <signal.h>\n@@ -40,6 +39,7 @@ compilation is specified by a string called a \"spec\".  */\n #include \"config.h\"\n #include \"obstack.h\"\n #include \"gvarargs.h\"\n+#include <stdio.h>\n \n #ifndef R_OK\n #define R_OK 4"}, {"sha": "cb22fb9e3efef09726d9722c6811e8f63c8d087a", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=f8d97cf4724fb1d966118b4d1870f553da4fc09c", "patch": "@@ -94,12 +94,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n       EQ_ATTR rtx is true if !volatil and false if volatil.  */\n \n \n-#include <stdio.h>\n #include \"gvarargs.h\"\n #include \"config.h\"\n #include \"rtl.h\"\n #include \"obstack.h\"\n #include \"insn-config.h\"\t/* For REGISTER_CONSTRAINTS */\n+#include <stdio.h>\n \n static struct obstack obstack, obstack1, obstack2;\n struct obstack *rtl_obstack = &obstack;"}, {"sha": "4e7ea779d5e4569a58c9d42b1193ab5c7042dbc9", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=f8d97cf4724fb1d966118b4d1870f553da4fc09c", "patch": "@@ -598,9 +598,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n */\n \f\n \n-#include <stdio.h>\n #include \"gvarargs.h\"\n #include \"config.h\"\n+#include <stdio.h>\n \n #ifndef __SABER__\n #define saber_stop()"}, {"sha": "55a476e8784ab8d709e3e8a9965589090c515f70", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d97cf4724fb1d966118b4d1870f553da4fc09c/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f8d97cf4724fb1d966118b4d1870f553da4fc09c", "patch": "@@ -33,12 +33,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    by all passes of the compiler.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n #include \"flags.h\"\n #include \"tree.h\"\n #include \"function.h\"\n #include \"obstack.h\"\n #include \"gvarargs.h\"\n+#include <stdio.h>\n \n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free"}]}