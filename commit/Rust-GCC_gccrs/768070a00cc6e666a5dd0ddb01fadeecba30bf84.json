{"sha": "768070a00cc6e666a5dd0ddb01fadeecba30bf84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY4MDcwYTAwY2M2ZTY2NmE1ZGQwZGRiMDFmYWRlZWNiYTMwYmY4NA==", "commit": {"author": {"name": "Tom Rix", "email": "trix@redhat.com", "date": "2002-02-07T21:57:55Z"}, "committer": {"name": "Tom Rix", "email": "trix@gcc.gnu.org", "date": "2002-02-07T21:57:55Z"}, "message": "Fix for string-opt-7 failure on rs6000 -maix64.\n\nFrom-SVN: r49593", "tree": {"sha": "76ea79c6e7757ef3e8d3bc387800d6394d4e3218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76ea79c6e7757ef3e8d3bc387800d6394d4e3218"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/768070a00cc6e666a5dd0ddb01fadeecba30bf84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768070a00cc6e666a5dd0ddb01fadeecba30bf84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/768070a00cc6e666a5dd0ddb01fadeecba30bf84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768070a00cc6e666a5dd0ddb01fadeecba30bf84/comments", "author": {"login": "trixirt", "id": 7824193, "node_id": "MDQ6VXNlcjc4MjQxOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7824193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trixirt", "html_url": "https://github.com/trixirt", "followers_url": "https://api.github.com/users/trixirt/followers", "following_url": "https://api.github.com/users/trixirt/following{/other_user}", "gists_url": "https://api.github.com/users/trixirt/gists{/gist_id}", "starred_url": "https://api.github.com/users/trixirt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trixirt/subscriptions", "organizations_url": "https://api.github.com/users/trixirt/orgs", "repos_url": "https://api.github.com/users/trixirt/repos", "events_url": "https://api.github.com/users/trixirt/events{/privacy}", "received_events_url": "https://api.github.com/users/trixirt/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff9ea967119503f481fa76815c9828eccc179776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff9ea967119503f481fa76815c9828eccc179776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff9ea967119503f481fa76815c9828eccc179776"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "43107d328e00ab21fa763bfa66006f6d9c1057d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=768070a00cc6e666a5dd0ddb01fadeecba30bf84", "patch": "@@ -1,3 +1,11 @@\n+2002-02-07  Tom Rix  <trix@redhat.com>\n+\n+\t* config/rs6000/rs6000.c (reg_or_aligned_short_operand): New. For \n+\timmediates in ldu and stdu DS opcode field.\n+\t* config/rs6000/rs6000.md (movdi_update, movdi_update1): Use.\n+\t* config/rs6000/rs6000-protos.h: Add reg_or_aligned_short_operand.\n+\t* config/rs6000/rs6000.h (PREDICATE_CODES): Same.\n+\n 2002-02-07  Jeff Sturm  <jsturm@one-point.com>\n \n \t* config/sparc/sparc.c (compute_frame_size): Don't correct frame"}, {"sha": "a588360c36b5451145af7760e0859d03b43d8c04", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=768070a00cc6e666a5dd0ddb01fadeecba30bf84", "patch": "@@ -40,6 +40,7 @@ extern int cc_reg_operand PARAMS ((rtx, enum machine_mode));\n extern int cc_reg_not_cr0_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_short_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_neg_short_operand PARAMS ((rtx, enum machine_mode));\n+extern int reg_or_aligned_short_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_u_short_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_cint_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_arith_cint_operand PARAMS ((rtx, enum machine_mode));"}, {"sha": "23a05f48ee043ea5d3ef04ab46687494f2e123d2", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=768070a00cc6e666a5dd0ddb01fadeecba30bf84", "patch": "@@ -850,6 +850,24 @@ reg_or_neg_short_operand (op, mode)\n   return gpc_reg_operand (op, mode);\n }\n \n+/* Returns 1 if OP is either a constant integer valid for a DS-field or\n+   a non-special register.  If a register, it must be in the proper\n+   mode unless MODE is VOIDmode.  */\n+\n+int\n+reg_or_aligned_short_operand (op, mode)\n+      rtx op;\n+      enum machine_mode mode;\n+{\n+  if (gpc_reg_operand (op, mode))\n+    return 1;\n+  else if (short_cint_operand (op, mode) && !(INTVAL (op) & 3))\n+    return 1;\n+\n+  return 0;\n+}\n+\n+\n /* Return 1 if the operand is either a register or an integer whose\n    high-order 16 bits are zero.  */\n "}, {"sha": "22f204235ee67f3cc5a9447e72a8a03938b07b69", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=768070a00cc6e666a5dd0ddb01fadeecba30bf84", "patch": "@@ -2715,6 +2715,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   {\"cc_reg_not_cr0_operand\", {SUBREG, REG}},\t\t\t\t   \\\n   {\"reg_or_short_operand\", {SUBREG, REG, CONST_INT}},\t\t\t   \\\n   {\"reg_or_neg_short_operand\", {SUBREG, REG, CONST_INT}},\t\t   \\\n+  {\"reg_or_aligned_short_operand\", {SUBREG, REG, CONST_INT}},\t\t   \\\n   {\"reg_or_u_short_operand\", {SUBREG, REG, CONST_INT}},\t\t\t   \\\n   {\"reg_or_cint_operand\", {SUBREG, REG, CONST_INT}},\t\t\t   \\\n   {\"reg_or_arith_cint_operand\", {SUBREG, REG, CONST_INT}},\t\t   \\"}, {"sha": "a1e03038714ec29286d3a0f411a1859647def2bc", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768070a00cc6e666a5dd0ddb01fadeecba30bf84/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=768070a00cc6e666a5dd0ddb01fadeecba30bf84", "patch": "@@ -9173,7 +9173,7 @@\n (define_insn \"*movdi_update1\"\n   [(set (match_operand:DI 3 \"gpc_reg_operand\" \"=r,r\")\n \t(mem:DI (plus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"0,0\")\n-\t\t\t (match_operand:DI 2 \"reg_or_short_operand\" \"r,I\"))))\n+\t\t\t (match_operand:DI 2 \"reg_or_aligned_short_operand\" \"r,I\"))))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=b,b\")\n \t(plus:DI (match_dup 1) (match_dup 2)))]\n   \"TARGET_POWERPC64 && TARGET_UPDATE\"\n@@ -9195,7 +9195,7 @@\n \n (define_insn \"movdi_update\"\n   [(set (mem:DI (plus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"0,0\")\n-\t\t\t (match_operand:DI 2 \"reg_or_short_operand\" \"r,I\")))\n+\t\t\t (match_operand:DI 2 \"reg_or_aligned_short_operand\" \"r,I\")))\n \t(match_operand:DI 3 \"gpc_reg_operand\" \"r,r\"))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=b,b\")\n \t(plus:DI (match_dup 1) (match_dup 2)))]\n@@ -15323,7 +15323,7 @@\n \t(eq:SI (reg:CC 74)\n \t       (const_int 0)))]\n   \"TARGET_ALTIVEC\"\n-  \"\")\n+  \"\")\t\n \n (define_expand \"cr6_test_for_zero_reverse\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")"}]}