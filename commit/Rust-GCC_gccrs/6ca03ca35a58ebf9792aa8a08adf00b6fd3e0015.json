{"sha": "6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015", "node_id": "C_kwDOANBUbNoAKDZjYTAzY2EzNWE1OGViZjk3OTJhYThhMDhhZGYwMGI2ZmQzZTAwMTU", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2021-09-24T10:37:37Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2021-10-07T10:26:44Z"}, "message": "amdgcn: Support LLVM 13 assembler syntax\n\nThe LLVM devs have changed the assembler architecture attribute names on both\nCLI and in the \".amdgcn_target\" directive, and changed the attribute syntax\ninside the directive, without keeping any backwards compatibility. :-(\n\nThis patch improves our configure tests to detect what dialect to use, what\nattributes are valid, and adjusts the specs to match.\n\ngcc/ChangeLog:\n\n\t* config.in: Regenerate.\n\t* config/gcn/gcn-hsa.h (X_FIJI): New macro.\n\t(X_900): New macro.\n\t(X_906): New macro.\n\t(X_908): New macro.\n\t(A_FIJI): Rename to ...\n\t(S_FIJI): ... this.\n\t(A_900): Rename to ...\n\t(S_900): ... this.\n\t(A_906): Rename to ...\n\t(S_906): ... this.\n\t(A_908): Rename to ...\n\t(S_908): ... this.\n\t(SRAMOPT): New macro.\n\t(ASM_SPEC): Adjust xnack option usage.\n\t* config/gcn/gcn.c (output_file_start): Adjust amdgcn_target usage.\n\t* configure: Regenerate.\n\t* configure.ac: Detect LLVM assembler dialect.", "tree": {"sha": "b22b3e23c2343a1b3e165b4faee5b38d9c3f5a0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b22b3e23c2343a1b3e165b4faee5b38d9c3f5a0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6496ae5c9651206c9de43f63018a549a2ef2244e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6496ae5c9651206c9de43f63018a549a2ef2244e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6496ae5c9651206c9de43f63018a549a2ef2244e"}], "stats": {"total": 525, "additions": 467, "deletions": 58}, "files": [{"sha": "b5bec3971dc2d0d157d9c5bf4bcb4182fc1aafe8", "filename": "gcc/config.in", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015", "patch": "@@ -1463,30 +1463,66 @@\n #endif\n \n \n-/* Define if your assembler allows -mattr=+sram-ecc for fiji. */\n+/* Define if your assembler expects amdgcn_target gfx908+xnack syntax. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GCN_ASM_V3_SYNTAX\n+#endif\n+\n+\n+/* Define if your assembler expects amdgcn_target gfx908:xnack+ syntax. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GCN_ASM_V4_SYNTAX\n+#endif\n+\n+\n+/* Define if your assembler allows -mattr=+sramecc for fiji. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_GCN_SRAM_ECC_FIJI\n #endif\n \n \n-/* Define if your assembler allows -mattr=+sram-ecc for gfx900. */\n+/* Define if your assembler allows -mattr=+sramecc for gfx900. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_GCN_SRAM_ECC_GFX900\n #endif\n \n \n-/* Define if your assembler allows -mattr=+sram-ecc for gfx906. */\n+/* Define if your assembler allows -mattr=+sramecc for gfx906. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_GCN_SRAM_ECC_GFX906\n #endif\n \n \n-/* Define if your assembler allows -mattr=+sram-ecc for gfx908. */\n+/* Define if your assembler allows -mattr=+sramecc for gfx908. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_GCN_SRAM_ECC_GFX908\n #endif\n \n \n+/* Define if your assembler allows -mattr=+xnack for fiji. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GCN_XNACK_FIJI\n+#endif\n+\n+\n+/* Define if your assembler allows -mattr=+xnack for gfx900. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GCN_XNACK_GFX900\n+#endif\n+\n+\n+/* Define if your assembler allows -mattr=+xnack for gfx906. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GCN_XNACK_GFX906\n+#endif\n+\n+\n+/* Define if your assembler allows -mattr=+xnack for gfx908. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GCN_XNACK_GFX908\n+#endif\n+\n+\n /* Define to 1 if you have the `getchar_unlocked' function. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_GETCHAR_UNLOCKED"}, {"sha": "60fd40a10b719ef9bdc9014192133b03c4b67446", "filename": "gcc/config/gcn/gcn-hsa.h", "status": "modified", "additions": 52, "deletions": 11, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfig%2Fgcn%2Fgcn-hsa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfig%2Fgcn%2Fgcn-hsa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-hsa.h?ref=6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015", "patch": "@@ -75,25 +75,64 @@ extern unsigned int gcn_local_sym_hash (const char *name);\n    supported for gcn.  */\n #define GOMP_SELF_SPECS \"\"\n \n+#ifdef HAVE_GCN_XNACK_FIJI\n+#define X_FIJI\n+#else\n+#define X_FIJI \"!march=*:;march=fiji:;\"\n+#endif\n+#ifdef HAVE_GCN_XNACK_GFX900\n+#define X_900\n+#else\n+#define X_900 \"march=gfx900:;\"\n+#endif\n+#ifdef HAVE_GCN_XNACK_GFX906\n+#define X_906\n+#else\n+#define X_906 \"march=gfx906:;\"\n+#endif\n+#ifdef HAVE_GCN_XNACK_GFX908\n+#define X_908\n+#else\n+#define X_908 \"march=gfx908:;\"\n+#endif\n+\n #ifdef HAVE_GCN_SRAM_ECC_FIJI\n-#define A_FIJI\n+#define S_FIJI\n #else\n-#define A_FIJI \"!march=*:;march=fiji:;\"\n+#define S_FIJI \"!march=*:;march=fiji:;\"\n #endif\n #ifdef HAVE_GCN_SRAM_ECC_GFX900\n-#define A_900\n+#define S_900\n #else\n-#define A_900 \"march=gfx900:;\"\n+#define S_900 \"march=gfx900:;\"\n #endif\n #ifdef HAVE_GCN_SRAM_ECC_GFX906\n-#define A_906\n+#define S_906\n #else\n-#define A_906 \"march=gfx906:;\"\n+#define S_906 \"march=gfx906:;\"\n #endif\n #ifdef HAVE_GCN_SRAM_ECC_GFX908\n-#define A_908\n+#define S_908\n+#else\n+#define S_908 \"march=gfx908:;\"\n+#endif\n+\n+#ifdef HAVE_GCN_ASM_V3_SYNTAX\n+#define SRAMOPT \"sram-ecc\"\n+#endif\n+#ifdef HAVE_GCN_ASM_V4_SYNTAX\n+#define SRAMOPT \"sramecc\"\n+#endif\n+#if !defined(SRAMOPT) && !defined(IN_LIBGCC2)\n+#error \"No assembler syntax configured\"\n+#endif\n+\n+#ifdef HAVE_GCN_ASM_V4_SYNTAX\n+/* FIJI cards don't seem to support drivers new enough to allow HSACOv4.  */\n+#define HSACO3_SELECT_OPT \\\n+    \"%{!march=*|march=fiji:--amdhsa-code-object-version=3} \"\n #else\n-#define A_908 \"march=gfx908:;\"\n+#define HSACO3_SELECT_OPT\n #endif\n \n /* These targets can't have SRAM-ECC, even if a broken assembler allows it.  */\n@@ -103,10 +142,12 @@ extern unsigned int gcn_local_sym_hash (const char *name);\n /* Use LLVM assembler and linker options.  */\n #define ASM_SPEC  \"-triple=amdgcn--amdhsa \"  \\\n \t\t  \"%:last_arg(%{march=*:-mcpu=%*}) \" \\\n-\t\t  \"-mattr=%{mxnack:+xnack;:-xnack} \" \\\n+\t\t  HSACO3_SELECT_OPT \\\n+\t\t  \"-mattr=%{\" X_FIJI X_900 X_906 X_908 \\\n+\t\t\t    \"mxnack:+xnack;:-xnack} \" \\\n \t\t  /* FIXME: support \"any\" when we move to HSACOv4.  */ \\\n-\t\t  \"-mattr=%{\" A_FIJI A_900 A_906 A_908 \\\n-\t\t\t    \"!msram-ecc=off:+sram-ecc;:-sram-ecc} \" \\\n+\t\t  \"-mattr=%{\" S_FIJI S_900 S_906 S_908 \\\n+\t\t\t    \"!msram-ecc=off:+\" SRAMOPT \";:-\" SRAMOPT \"} \" \\\n \t\t  \"-filetype=obj\"\n #define LINK_SPEC \"--pie --export-dynamic\"\n #define LIB_SPEC  \"-lc\""}, {"sha": "8517168ff0ad3970e724890388b5e5391a08d155", "filename": "gcc/config/gcn/gcn.c", "status": "modified", "additions": 37, "deletions": 7, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfig%2Fgcn%2Fgcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfig%2Fgcn%2Fgcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.c?ref=6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015", "patch": "@@ -5217,42 +5217,72 @@ static void\n output_file_start (void)\n {\n   const char *cpu;\n-  bool use_sram = flag_sram_ecc;\n+  bool use_xnack_attr = true;\n+  bool use_sram_attr = true;\n   switch (gcn_arch)\n     {\n     case PROCESSOR_FIJI:\n       cpu = \"gfx803\";\n+#ifndef HAVE_GCN_XNACK_FIJI\n+      use_xnack_attr = false;\n+#endif\n #ifndef HAVE_GCN_SRAM_ECC_FIJI\n-      use_sram = false;\n+      use_sram_attr = false;\n #endif\n       break;\n     case PROCESSOR_VEGA10:\n       cpu = \"gfx900\";\n+#ifndef HAVE_GCN_XNACK_GFX900\n+      use_xnack_attr = false;\n+#endif\n #ifndef HAVE_GCN_SRAM_ECC_GFX900\n-      use_sram = false;\n+      use_sram_attr = false;\n #endif\n       break;\n     case PROCESSOR_VEGA20:\n       cpu = \"gfx906\";\n+#ifndef HAVE_GCN_XNACK_GFX906\n+      use_xnack_attr = false;\n+#endif\n #ifndef HAVE_GCN_SRAM_ECC_GFX906\n-      use_sram = false;\n+      use_sram_attr = false;\n #endif\n       break;\n     case PROCESSOR_GFX908:\n       cpu = \"gfx908\";\n+#ifndef HAVE_GCN_XNACK_GFX908\n+      use_xnack_attr = false;\n+#endif\n #ifndef HAVE_GCN_SRAM_ECC_GFX908\n-      use_sram = false;\n+      use_sram_attr = false;\n #endif\n       break;\n     default: gcc_unreachable ();\n     }\n \n+#if HAVE_GCN_ASM_V3_SYNTAX\n   const char *xnack = (flag_xnack ? \"+xnack\" : \"\");\n+  const char *sram_ecc = (flag_sram_ecc ? \"+sram-ecc\" : \"\");\n+#endif\n+#if HAVE_GCN_ASM_V4_SYNTAX\n+  const char *xnack = (flag_xnack ? \":xnack+\" : \":xnack-\");\n   /* FIXME: support \"any\" when we move to HSACOv4.  */\n-  const char *sram_ecc = (use_sram ? \"+sram-ecc\" : \"\");\n+  const char *sram_ecc = (flag_sram_ecc ? \":sramecc+\" : \":sramecc-\");\n+#endif\n+  if (!use_xnack_attr)\n+    xnack = \"\";\n+  if (!use_sram_attr)\n+    sram_ecc = \"\";\n \n   fprintf(asm_out_file, \"\\t.amdgcn_target \\\"amdgcn-unknown-amdhsa--%s%s%s\\\"\\n\",\n-\t  cpu, xnack, sram_ecc);\n+\t  cpu,\n+#if HAVE_GCN_ASM_V3_SYNTAX\n+\t  xnack, sram_ecc\n+#endif\n+#ifdef HAVE_GCN_ASM_V4_SYNTAX\n+\t  sram_ecc, xnack\n+#endif\n+\t  );\n }\n \n /* Implement ASM_DECLARE_FUNCTION_NAME via gcn-hsa.h."}, {"sha": "5ea5a1b714307163f7f5a9adba0dd1791e2568f1", "filename": "gcc/configure", "status": "modified", "additions": 246, "deletions": 20, "changes": 266, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015", "patch": "@@ -28757,22 +28757,241 @@ esac\n \n case \"$target\" in\n   amdgcn-* | gcn-*)\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=+sram-ecc for fiji\" >&5\n-$as_echo_n \"checking assembler for assembler accepts -mattr=+sram-ecc for fiji... \" >&6; }\n+    # Test the LLVM assembler syntax dialect; they have made a number of\n+    # changes between LLVM 12 & 13 without any backward compatibility.\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler amdgcn_target v2/3 syntax\" >&5\n+$as_echo_n \"checking assembler for assembler amdgcn_target v2/3 syntax... \" >&6; }\n+if ${gcc_cv_as_gcn_asm_v3_syntax+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_gcn_asm_v3_syntax=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '.amdgcn_target \"amdgcn-unknown-amdhsa--gfx906+xnack\"' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx906 -mattr=+xnack -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_gcn_asm_v3_syntax=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_gcn_asm_v3_syntax\" >&5\n+$as_echo \"$gcc_cv_as_gcn_asm_v3_syntax\" >&6; }\n+if test $gcc_cv_as_gcn_asm_v3_syntax = yes; then\n+\n+$as_echo \"#define HAVE_GCN_ASM_V3_SYNTAX 1\" >>confdefs.h\n+\n+fi\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler amdgcn_target v4 syntax\" >&5\n+$as_echo_n \"checking assembler for assembler amdgcn_target v4 syntax... \" >&6; }\n+if ${gcc_cv_as_gcn_asm_v4_syntax+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_gcn_asm_v4_syntax=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '.amdgcn_target \"amdgcn-unknown-amdhsa--gfx908:xnack+\"' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx908 -mattr=+xnack -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_gcn_asm_v4_syntax=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_gcn_asm_v4_syntax\" >&5\n+$as_echo \"$gcc_cv_as_gcn_asm_v4_syntax\" >&6; }\n+if test $gcc_cv_as_gcn_asm_v4_syntax = yes; then\n+\n+$as_echo \"#define HAVE_GCN_ASM_V4_SYNTAX 1\" >>confdefs.h\n+\n+fi\n+\n+\n+    # Some attribute names changed in the move to v4 ...\n+    if test $gcc_cv_as_gcn_asm_v3_syntax = yes; then\n+\tsramopt=\"+sram-ecc\"\n+\tsramattr=\"+sram-ecc\"\n+\txnackattr=\"+xnack\"\n+    elif test $gcc_cv_as_gcn_asm_v4_syntax = yes; then\n+\tsramopt=\"+sramecc\"\n+\tsramattr=\":sramecc+\"\n+\txnackattr=\":xnack+\"\n+    else\n+\tas_fn_error $? \"Unrecognised assembler version\" \"$LINENO\" 5\n+    fi\n+\n+    # Test whether the LLVM assembler accepts -mattr=+xnack without any\n+    # diagnostic. LLVM 9 & 10 accept the option whether it makes sense or not,\n+    # LLVM 12+ throws a warning for GPUs without support.\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=+xnack for fiji\" >&5\n+$as_echo_n \"checking assembler for assembler accepts -mattr=+xnack for fiji... \" >&6; }\n+if ${gcc_cv_as_gcn_xnack_ecc_fiji+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_gcn_xnack_ecc_fiji=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=fiji -mattr=+xnack 2>conftest.err -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgrep \".\" conftest.err >&5 \\\n+       || gcc_cv_as_gcn_xnack_ecc_fiji=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_gcn_xnack_ecc_fiji\" >&5\n+$as_echo \"$gcc_cv_as_gcn_xnack_ecc_fiji\" >&6; }\n+if test $gcc_cv_as_gcn_xnack_ecc_fiji = yes; then\n+\n+$as_echo \"#define HAVE_GCN_XNACK_FIJI 1\" >>confdefs.h\n+\n+fi\n+\n+    rm -f conftest.err\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=+xnack for gfx900\" >&5\n+$as_echo_n \"checking assembler for assembler accepts -mattr=+xnack for gfx900... \" >&6; }\n+if ${gcc_cv_as_gcn_xnack_ecc_gfx900+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_gcn_xnack_ecc_gfx900=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx900 -mattr=+xnack 2>conftest.err -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgrep \".\" conftest.err >&5 \\\n+       || gcc_cv_as_gcn_xnack_ecc_gfx900=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_gcn_xnack_ecc_gfx900\" >&5\n+$as_echo \"$gcc_cv_as_gcn_xnack_ecc_gfx900\" >&6; }\n+if test $gcc_cv_as_gcn_xnack_ecc_gfx900 = yes; then\n+\n+$as_echo \"#define HAVE_GCN_XNACK_GFX900 1\" >>confdefs.h\n+\n+fi\n+\n+    rm -f conftest.err\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=+xnack for gfx906\" >&5\n+$as_echo_n \"checking assembler for assembler accepts -mattr=+xnack for gfx906... \" >&6; }\n+if ${gcc_cv_as_gcn_xnack_ecc_gfx906+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_gcn_xnack_ecc_gfx906=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx906 -mattr=+xnack 2>conftest.err -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgrep \".\" conftest.err >&5 \\\n+       || gcc_cv_as_gcn_xnack_ecc_gfx906=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_gcn_xnack_ecc_gfx906\" >&5\n+$as_echo \"$gcc_cv_as_gcn_xnack_ecc_gfx906\" >&6; }\n+if test $gcc_cv_as_gcn_xnack_ecc_gfx906 = yes; then\n+\n+$as_echo \"#define HAVE_GCN_XNACK_GFX906 1\" >>confdefs.h\n+\n+fi\n+\n+    rm -f conftest.err\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=+xnack for gfx908\" >&5\n+$as_echo_n \"checking assembler for assembler accepts -mattr=+xnack for gfx908... \" >&6; }\n+if ${gcc_cv_as_gcn_xnack_ecc_gfx908+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_gcn_xnack_ecc_gfx908=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx908 -mattr=+xnack 2>conftest.err -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgrep \".\" conftest.err >&5 \\\n+       || gcc_cv_as_gcn_xnack_ecc_gfx908=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_gcn_xnack_ecc_gfx908\" >&5\n+$as_echo \"$gcc_cv_as_gcn_xnack_ecc_gfx908\" >&6; }\n+if test $gcc_cv_as_gcn_xnack_ecc_gfx908 = yes; then\n+\n+$as_echo \"#define HAVE_GCN_XNACK_GFX908 1\" >>confdefs.h\n+\n+fi\n+\n+    rm -f conftest.err\n+\n+    # Test whether the LLVM assembler accepts -mattr=+sramecc without any\n+    # diagnostic. LLVM 9 & 10 accept the option whether it makes sense or not,\n+    # (some?) LLVM 12 rejects it for all GPUs, and LLVM13 throws a warning\n+    # for GPUs without support.\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=$sramopt for fiji\" >&5\n+$as_echo_n \"checking assembler for assembler accepts -mattr=$sramopt for fiji... \" >&6; }\n if ${gcc_cv_as_gcn_sram_ecc_fiji+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   gcc_cv_as_gcn_sram_ecc_fiji=no\n   if test x$gcc_cv_as != x; then\n-    $as_echo '.amdgcn_target \"amdgcn-unknown-amdhsa--gfx803+sram-ecc\"' > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=fiji -mattr=-xnack -mattr=+sram-ecc -o conftest.o conftest.s >&5'\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=fiji -mattr=$sramopt 2>conftest.err -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n     then\n-\tgcc_cv_as_gcn_sram_ecc_fiji=yes\n+\tgrep \".\" conftest.err >&5 \\\n+       || gcc_cv_as_gcn_sram_ecc_fiji=yes\n     else\n       echo \"configure: failed program was\" >&5\n       cat conftest.s >&5\n@@ -28788,22 +29007,24 @@ $as_echo \"#define HAVE_GCN_SRAM_ECC_FIJI 1\" >>confdefs.h\n \n fi\n \n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=+sram-ecc for gfx900\" >&5\n-$as_echo_n \"checking assembler for assembler accepts -mattr=+sram-ecc for gfx900... \" >&6; }\n+    rm -f conftest.err\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=$sramopt for gfx900\" >&5\n+$as_echo_n \"checking assembler for assembler accepts -mattr=$sramopt for gfx900... \" >&6; }\n if ${gcc_cv_as_gcn_sram_ecc_gfx900+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   gcc_cv_as_gcn_sram_ecc_gfx900=no\n   if test x$gcc_cv_as != x; then\n-    $as_echo '.amdgcn_target \"amdgcn-unknown-amdhsa--gfx900+sram-ecc\"' > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx900 -mattr=-xnack -mattr=+sram-ecc -o conftest.o conftest.s >&5'\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx900 -mattr=$sramopt 2>conftest.err -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n     then\n-\tgcc_cv_as_gcn_sram_ecc_gfx900=yes\n+\tgrep \".\" conftest.err >&5 \\\n+       || gcc_cv_as_gcn_sram_ecc_gfx900=yes\n     else\n       echo \"configure: failed program was\" >&5\n       cat conftest.s >&5\n@@ -28819,22 +29040,24 @@ $as_echo \"#define HAVE_GCN_SRAM_ECC_GFX900 1\" >>confdefs.h\n \n fi\n \n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=+sram-ecc for gfx906\" >&5\n-$as_echo_n \"checking assembler for assembler accepts -mattr=+sram-ecc for gfx906... \" >&6; }\n+    rm -f conftest.err\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=$sramopt for gfx906\" >&5\n+$as_echo_n \"checking assembler for assembler accepts -mattr=$sramopt for gfx906... \" >&6; }\n if ${gcc_cv_as_gcn_sram_ecc_gfx906+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   gcc_cv_as_gcn_sram_ecc_gfx906=no\n   if test x$gcc_cv_as != x; then\n-    $as_echo '.amdgcn_target \"amdgcn-unknown-amdhsa--gfx906+sram-ecc\"' > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx906 -mattr=-xnack -mattr=+sram-ecc -o conftest.o conftest.s >&5'\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx906 -mattr=$sramopt 2>conftest.err -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n     then\n-\tgcc_cv_as_gcn_sram_ecc_gfx906=yes\n+\tgrep \".\" conftest.err >&5 \\\n+       || gcc_cv_as_gcn_sram_ecc_gfx906=yes\n     else\n       echo \"configure: failed program was\" >&5\n       cat conftest.s >&5\n@@ -28850,22 +29073,24 @@ $as_echo \"#define HAVE_GCN_SRAM_ECC_GFX906 1\" >>confdefs.h\n \n fi\n \n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=+sram-ecc for gfx908\" >&5\n-$as_echo_n \"checking assembler for assembler accepts -mattr=+sram-ecc for gfx908... \" >&6; }\n+    rm -f conftest.err\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler accepts -mattr=$sramopt for gfx908\" >&5\n+$as_echo_n \"checking assembler for assembler accepts -mattr=$sramopt for gfx908... \" >&6; }\n if ${gcc_cv_as_gcn_sram_ecc_gfx908+:} false; then :\n   $as_echo_n \"(cached) \" >&6\n else\n   gcc_cv_as_gcn_sram_ecc_gfx908=no\n   if test x$gcc_cv_as != x; then\n-    $as_echo '.amdgcn_target \"amdgcn-unknown-amdhsa--gfx908+sram-ecc\"' > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx908 -mattr=-xnack -mattr=+sram-ecc -o conftest.o conftest.s >&5'\n+    $as_echo '' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -triple=amdgcn--amdhsa -mcpu=gfx908 -mattr=$sramopt 2>conftest.err -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n     then\n-\tgcc_cv_as_gcn_sram_ecc_gfx908=yes\n+\tgrep \".\" conftest.err >&5 \\\n+       || gcc_cv_as_gcn_sram_ecc_gfx908=yes\n     else\n       echo \"configure: failed program was\" >&5\n       cat conftest.s >&5\n@@ -28881,6 +29106,7 @@ $as_echo \"#define HAVE_GCN_SRAM_ECC_GFX908 1\" >>confdefs.h\n \n fi\n \n+    rm -f conftest.err\n     ;;\n   arm*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for assembler for arm accepts context-specific architecture extensions\" >&5"}, {"sha": "344b2f586e8e2c95d31995e359e9d9f4213e8fa3", "filename": "gcc/configure.ac", "status": "modified", "additions": 92, "deletions": 16, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=6ca03ca35a58ebf9792aa8a08adf00b6fd3e0015", "patch": "@@ -5332,30 +5332,106 @@ esac\n \n case \"$target\" in\n   amdgcn-* | gcn-*)\n-    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=+sram-ecc for fiji],\n+    # Test the LLVM assembler syntax dialect; they have made a number of\n+    # changes between LLVM 12 & 13 without any backward compatibility.\n+    gcc_GAS_CHECK_FEATURE([assembler amdgcn_target v2/3 syntax],\n+      gcc_cv_as_gcn_asm_v3_syntax,\n+      [-triple=amdgcn--amdhsa -mcpu=gfx906 -mattr=+xnack],\n+      [.amdgcn_target \"amdgcn-unknown-amdhsa--gfx906+xnack\"],,\n+      [AC_DEFINE(HAVE_GCN_ASM_V3_SYNTAX, 1,\n+       [Define if your assembler expects amdgcn_target gfx908+xnack syntax.])])\n+    gcc_GAS_CHECK_FEATURE([assembler amdgcn_target v4 syntax],\n+      gcc_cv_as_gcn_asm_v4_syntax,\n+      [-triple=amdgcn--amdhsa -mcpu=gfx908 -mattr=+xnack],\n+      [.amdgcn_target \"amdgcn-unknown-amdhsa--gfx908:xnack+\"],,\n+      [AC_DEFINE(HAVE_GCN_ASM_V4_SYNTAX, 1,\n+       [Define if your assembler expects amdgcn_target gfx908:xnack+ syntax.])])\n+\n+    # Some attribute names changed in the move to v4 ...\n+    if test $gcc_cv_as_gcn_asm_v3_syntax = yes; then\n+\tsramopt=\"+sram-ecc\"\n+\tsramattr=\"+sram-ecc\"\n+\txnackattr=\"+xnack\"\n+    elif test $gcc_cv_as_gcn_asm_v4_syntax = yes; then\n+\tsramopt=\"+sramecc\"\n+\tsramattr=\":sramecc+\"\n+\txnackattr=\":xnack+\"\n+    else\n+\tAC_MSG_ERROR([Unrecognised assembler version])\n+    fi\n+\n+    # Test whether the LLVM assembler accepts -mattr=+xnack without any\n+    # diagnostic. LLVM 9 & 10 accept the option whether it makes sense or not,\n+    # LLVM 12+ throws a warning for GPUs without support.\n+    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=+xnack for fiji],\n+      gcc_cv_as_gcn_xnack_ecc_fiji,\n+      [-triple=amdgcn--amdhsa -mcpu=fiji -mattr=+xnack 2>conftest.err], [],\n+      [grep \".\" conftest.err >&AS_MESSAGE_LOG_FD \\\n+       || gcc_cv_as_gcn_xnack_ecc_fiji=yes],\n+      [AC_DEFINE(HAVE_GCN_XNACK_FIJI, 1,\n+       [Define if your assembler allows -mattr=+xnack for fiji.])])\n+    rm -f conftest.err\n+    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=+xnack for gfx900],\n+      gcc_cv_as_gcn_xnack_ecc_gfx900,\n+      [-triple=amdgcn--amdhsa -mcpu=gfx900 -mattr=+xnack 2>conftest.err], [],\n+      [grep \".\" conftest.err >&AS_MESSAGE_LOG_FD \\\n+       || gcc_cv_as_gcn_xnack_ecc_gfx900=yes],\n+      [AC_DEFINE(HAVE_GCN_XNACK_GFX900, 1,\n+       [Define if your assembler allows -mattr=+xnack for gfx900.])])\n+    rm -f conftest.err\n+    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=+xnack for gfx906],\n+      gcc_cv_as_gcn_xnack_ecc_gfx906,\n+      [-triple=amdgcn--amdhsa -mcpu=gfx906 -mattr=+xnack 2>conftest.err], [],\n+      [grep \".\" conftest.err >&AS_MESSAGE_LOG_FD \\\n+       || gcc_cv_as_gcn_xnack_ecc_gfx906=yes],\n+      [AC_DEFINE(HAVE_GCN_XNACK_GFX906, 1,\n+       [Define if your assembler allows -mattr=+xnack for gfx906.])])\n+    rm -f conftest.err\n+    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=+xnack for gfx908],\n+      gcc_cv_as_gcn_xnack_ecc_gfx908,\n+      [-triple=amdgcn--amdhsa -mcpu=gfx908 -mattr=+xnack 2>conftest.err], [],\n+      [grep \".\" conftest.err >&AS_MESSAGE_LOG_FD \\\n+       || gcc_cv_as_gcn_xnack_ecc_gfx908=yes],\n+      [AC_DEFINE(HAVE_GCN_XNACK_GFX908, 1,\n+       [Define if your assembler allows -mattr=+xnack for gfx908.])])\n+    rm -f conftest.err\n+\n+    # Test whether the LLVM assembler accepts -mattr=+sramecc without any\n+    # diagnostic. LLVM 9 & 10 accept the option whether it makes sense or not,\n+    # (some?) LLVM 12 rejects it for all GPUs, and LLVM13 throws a warning\n+    # for GPUs without support.\n+    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=$sramopt for fiji],\n       gcc_cv_as_gcn_sram_ecc_fiji,\n-      [-triple=amdgcn--amdhsa -mcpu=fiji -mattr=-xnack -mattr=+sram-ecc],\n-      [.amdgcn_target \"amdgcn-unknown-amdhsa--gfx803+sram-ecc\"],,\n+      [-triple=amdgcn--amdhsa -mcpu=fiji -mattr=$sramopt 2>conftest.err], [],\n+      [grep \".\" conftest.err >&AS_MESSAGE_LOG_FD \\\n+       || gcc_cv_as_gcn_sram_ecc_fiji=yes],\n       [AC_DEFINE(HAVE_GCN_SRAM_ECC_FIJI, 1,\n-       [Define if your assembler allows -mattr=+sram-ecc for fiji.])])\n-    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=+sram-ecc for gfx900],\n+       [Define if your assembler allows -mattr=+sramecc for fiji.])])\n+    rm -f conftest.err\n+    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=$sramopt for gfx900],\n       gcc_cv_as_gcn_sram_ecc_gfx900,\n-      [-triple=amdgcn--amdhsa -mcpu=gfx900 -mattr=-xnack -mattr=+sram-ecc],\n-      [.amdgcn_target \"amdgcn-unknown-amdhsa--gfx900+sram-ecc\"],,\n+      [-triple=amdgcn--amdhsa -mcpu=gfx900 -mattr=$sramopt 2>conftest.err], [],\n+      [grep \".\" conftest.err >&AS_MESSAGE_LOG_FD \\\n+       || gcc_cv_as_gcn_sram_ecc_gfx900=yes],\n       [AC_DEFINE(HAVE_GCN_SRAM_ECC_GFX900, 1,\n-       [Define if your assembler allows -mattr=+sram-ecc for gfx900.])])\n-    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=+sram-ecc for gfx906],\n+       [Define if your assembler allows -mattr=+sramecc for gfx900.])])\n+    rm -f conftest.err\n+    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=$sramopt for gfx906],\n       gcc_cv_as_gcn_sram_ecc_gfx906,\n-      [-triple=amdgcn--amdhsa -mcpu=gfx906 -mattr=-xnack -mattr=+sram-ecc],\n-      [.amdgcn_target \"amdgcn-unknown-amdhsa--gfx906+sram-ecc\"],,\n+      [-triple=amdgcn--amdhsa -mcpu=gfx906 -mattr=$sramopt 2>conftest.err], [],\n+      [grep \".\" conftest.err >&AS_MESSAGE_LOG_FD \\\n+       || gcc_cv_as_gcn_sram_ecc_gfx906=yes],\n       [AC_DEFINE(HAVE_GCN_SRAM_ECC_GFX906, 1,\n-       [Define if your assembler allows -mattr=+sram-ecc for gfx906.])])\n-    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=+sram-ecc for gfx908],\n+       [Define if your assembler allows -mattr=+sramecc for gfx906.])])\n+    rm -f conftest.err\n+    gcc_GAS_CHECK_FEATURE([assembler accepts -mattr=$sramopt for gfx908],\n       gcc_cv_as_gcn_sram_ecc_gfx908,\n-      [-triple=amdgcn--amdhsa -mcpu=gfx908 -mattr=-xnack -mattr=+sram-ecc],\n-      [.amdgcn_target \"amdgcn-unknown-amdhsa--gfx908+sram-ecc\"],,\n+      [-triple=amdgcn--amdhsa -mcpu=gfx908 -mattr=$sramopt 2>conftest.err], [],\n+      [grep \".\" conftest.err >&AS_MESSAGE_LOG_FD \\\n+       || gcc_cv_as_gcn_sram_ecc_gfx908=yes],\n       [AC_DEFINE(HAVE_GCN_SRAM_ECC_GFX908, 1,\n-       [Define if your assembler allows -mattr=+sram-ecc for gfx908.])])\n+       [Define if your assembler allows -mattr=+sramecc for gfx908.])])\n+    rm -f conftest.err\n     ;;\n   arm*)\n     gcc_GAS_CHECK_FEATURE([assembler for arm accepts context-specific architecture extensions],"}]}