{"sha": "eae4d8fbb529d67428a2b0eba407b975ee13e7d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFlNGQ4ZmJiNTI5ZDY3NDI4YTJiMGViYTQwN2I5NzVlZTEzZTdkMQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2018-02-01T07:41:03Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2018-02-01T07:41:03Z"}, "message": "PR 83705 Repeat with large values\n\nThis patch fixes the regression by increasing the limit where we fall\nback to runtime to 2**28 elements, which is the same limit where\nprevious releases failed. The are still bugs in the runtime\nevaluation, so in many cases longer characters will still fail, so\nprint a warning message.\n\nRegtested on x86_64-pc-linux-gnu.\n\ngcc/fortran/ChangeLog:\n\n2018-02-01  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/83705\n\t* simplify.c (gfc_simplify_repeat): Increase limit for deferring\n\tto runtime, print a warning message.\n\ngcc/testsuite/ChangeLog:\n\n2018-02-01  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/83705\n\t* gfortran.dg/repeat_7.f90: Catch warning message.\n\nFrom-SVN: r257281", "tree": {"sha": "0cc2f53da00d6b4a6fd019523f0f6a4bcab9e36b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cc2f53da00d6b4a6fd019523f0f6a4bcab9e36b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eae4d8fbb529d67428a2b0eba407b975ee13e7d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae4d8fbb529d67428a2b0eba407b975ee13e7d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eae4d8fbb529d67428a2b0eba407b975ee13e7d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae4d8fbb529d67428a2b0eba407b975ee13e7d1/comments", "author": null, "committer": null, "parents": [{"sha": "22149e37f7537843947003b4c7df76b69dd287ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22149e37f7537843947003b4c7df76b69dd287ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22149e37f7537843947003b4c7df76b69dd287ac"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "6f6a21a413c44cc088b14fab1e855edaaf8ae868", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae4d8fbb529d67428a2b0eba407b975ee13e7d1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae4d8fbb529d67428a2b0eba407b975ee13e7d1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=eae4d8fbb529d67428a2b0eba407b975ee13e7d1", "patch": "@@ -1,3 +1,9 @@\n+2018-02-01  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/83705\n+\t* simplify.c (gfc_simplify_repeat): Increase limit for deferring\n+\tto runtime, print a warning message.\n+\n 2018-01-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/84116"}, {"sha": "324f85881c5803347ee7d696801b4037feab2c1a", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae4d8fbb529d67428a2b0eba407b975ee13e7d1/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae4d8fbb529d67428a2b0eba407b975ee13e7d1/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=eae4d8fbb529d67428a2b0eba407b975ee13e7d1", "patch": "@@ -6121,12 +6121,16 @@ gfc_simplify_repeat (gfc_expr *e, gfc_expr *n)\n   len = e->value.character.length;\n   gfc_charlen_t nlen = ncop * len;\n \n-  /* Here's a semi-arbitrary limit. If the string is longer than 32 MB\n-     (8 * 2**20 elements * 4 bytes (wide chars) per element) defer to\n+  /* Here's a semi-arbitrary limit. If the string is longer than 1 GB\n+     (2**28 elements * 4 bytes (wide chars) per element) defer to\n      runtime instead of consuming (unbounded) memory and CPU at\n      compile time.  */\n-  if (nlen > 8388608)\n-    return NULL;\n+  if (nlen > 268435456)\n+    {\n+      gfc_warning_now (0, \"Evaluation of string longer than 2**28 at %L\"\n+\t\t       \" deferred to runtime, expect bugs\", &e->where);\n+      return NULL;\n+    }\n \n   result = gfc_get_character_expr (e->ts.kind, &e->where, NULL, nlen);\n   for (size_t i = 0; i < (size_t) ncop; i++)"}, {"sha": "778ba75498da36855dd41938c92253f9ca0e7d1c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae4d8fbb529d67428a2b0eba407b975ee13e7d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae4d8fbb529d67428a2b0eba407b975ee13e7d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eae4d8fbb529d67428a2b0eba407b975ee13e7d1", "patch": "@@ -1,3 +1,8 @@\n+2018-02-01  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/83705\n+\t* gfortran.dg/repeat_7.f90: Catch warning message.\n+\n 2018-01-31  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* lib/target-supports.exp (check_effective_target_comdat_group):"}, {"sha": "80a25066c43cf2bcf26df3caccde4fc615f81017", "filename": "gcc/testsuite/gfortran.dg/repeat_7.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae4d8fbb529d67428a2b0eba407b975ee13e7d1/gcc%2Ftestsuite%2Fgfortran.dg%2Frepeat_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae4d8fbb529d67428a2b0eba407b975ee13e7d1/gcc%2Ftestsuite%2Fgfortran.dg%2Frepeat_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frepeat_7.f90?ref=eae4d8fbb529d67428a2b0eba407b975ee13e7d1", "patch": "@@ -4,5 +4,5 @@\n ! compile time.\n program p\n   character, parameter :: z = 'z'\n-  print *, repeat(z, huge(1_4))\n+  print *, repeat(z, huge(1_4)) ! { dg-warning \"Evaluation of string\" }\n end program p"}]}