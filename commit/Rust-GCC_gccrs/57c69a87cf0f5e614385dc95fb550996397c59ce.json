{"sha": "57c69a87cf0f5e614385dc95fb550996397c59ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdjNjlhODdjZjBmNWU2MTQzODVkYzk1ZmI1NTA5OTYzOTdjNTljZQ==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1998-11-02T08:31:30Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1998-11-02T08:31:30Z"}, "message": "Reworked (slightly) to process a list of directories\n\nFrom-SVN: r23500", "tree": {"sha": "e8b83c3cf1a701c3cd1ef34abaa02a42f9ba5ce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8b83c3cf1a701c3cd1ef34abaa02a42f9ba5ce6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57c69a87cf0f5e614385dc95fb550996397c59ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c69a87cf0f5e614385dc95fb550996397c59ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57c69a87cf0f5e614385dc95fb550996397c59ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c69a87cf0f5e614385dc95fb550996397c59ce/comments", "author": null, "committer": null, "parents": [{"sha": "c5f7c4459e69cd56f51d92ad842a9652c94466e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5f7c4459e69cd56f51d92ad842a9652c94466e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5f7c4459e69cd56f51d92ad842a9652c94466e0"}], "stats": {"total": 187, "additions": 155, "deletions": 32}, "files": [{"sha": "b70e3ec99e0459a029070fe39d8ecc91e9e24314", "filename": "gcc/fixinc/fixinc.dgux", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.dgux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.dgux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.dgux?ref=57c69a87cf0f5e614385dc95fb550996397c59ce", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/sh\n+# !/bin/sh\n #\n # modified for dgux by hassey@dg-rtp.dg.com based on\n #\n@@ -24,9 +24,6 @@\n #\n #\tSee README-fixinc for more information.\n \n-# Directory containing the original header files.\n-INPUT=${2-${INPUT-/usr/include}}\n-\n # Fail if no arg to specify a directory for the output.\n if [ x$1 = x ]\n then echo fixincludes: no output directory specified\n@@ -41,7 +38,7 @@ if [ ! -d $LIB ]; then\n   mkdir $LIB || exit 1\n fi\n \n-ORIG_DIR=`pwd`\n+ORIG_DIR=`${PWDCMD-pwd}`\n \n # Make LIB absolute if it is relative.\n # Don't do this if not necessary, since may screw up automounters.\n@@ -64,7 +61,18 @@ else\n fi\n \n echo 'Making directories:'\n+# Directory containing the original header files.\n+shift\n+if [ $# -eq 0 ] ; then\n+  set /usr/include\n+fi\n+\n+INLIST=\"$@\"\n+\n+for INPUT in ${INLIST} ; do\n+cd ${ORIG_DIR}\n cd ${INPUT}\n+\n if $LINKS; then\n   files=`ls -LR | sed -n s/:$//p`\n else\n@@ -179,7 +187,14 @@ if $LINKS; then\n   done\n fi\n \n-cd ${ORIG_DIR}\n+done\n \n-exit 0\n+if [ x${INSTALL_ASSERT_H} != x ] ;\n+then\n+  cd ${ORIG_DIR}\n+  rm -f include/assert.h;\n+  cp $(srcdir)/assert.h include/assert.h;\n+  chmod a+r include/assert.h;\n+fi\n \n+exit 0"}, {"sha": "58e1585d8095db6ec4eb9c1cf421325260e324e4", "filename": "gcc/fixinc/fixinc.irix", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.irix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.irix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.irix?ref=57c69a87cf0f5e614385dc95fb550996397c59ce", "patch": "@@ -24,9 +24,6 @@\n #\n #\tSee README-fixinc for more information.\n \n-# Directory containing the original header files.\n-INPUT=${2-${INPUT-/usr/include}}\n-\n # Fail if no arg to specify a directory for the output.\n if [ x$1 = x ]\n then echo fixincludes: no output directory specified\n@@ -41,19 +38,30 @@ if [ ! -d $LIB ]; then\n   mkdir $LIB || exit 1\n fi\n \n-ORIG_DIR=`pwd`\n+ORIG_DIR=`${PWDCMD-pwd}`\n \n # Make LIB absolute if it is relative.\n # Don't do this if not necessary, since may screw up automounters.\n case $LIB in\n /*)\n \t;;\n *)\n- \tLIB=$ORIG_DIR/$LIB\n+ \tcd $LIB; LIB=`${PWDCMD-pwd}`\n \t;;\n esac\n \n echo 'Building fixincludes in ' ${LIB}\n+# Directory containing the original header files.\n+shift\n+if [ $# -eq 0 ] ; then\n+  set /usr/include\n+fi\n+\n+INLIST=\"$@\"\n+\n+for INPUT in ${INLIST} ; do\n+cd ${ORIG_DIR}\n+cd ${INPUT}\n \n #\n # Note: For Irix, we deliberately don't try to create the directory trees,\n@@ -222,4 +230,14 @@ extern pid_t __vfork(void);'\\\n   rm -f /tmp/$base\n fi\n \n+done\n+\n+if [ x${INSTALL_ASSERT_H} != x ] ;\n+then\n+  cd ${ORIG_DIR}\n+  rm -f include/assert.h;\n+  cp $(srcdir)/assert.h include/assert.h;\n+  chmod a+r include/assert.h;\n+fi\n+\n exit 0"}, {"sha": "ac8478a7aa359e34f316d04695c94f61bd428385", "filename": "gcc/fixinc/fixinc.ptx", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.ptx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.ptx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.ptx?ref=57c69a87cf0f5e614385dc95fb550996397c59ce", "patch": "@@ -34,9 +34,6 @@\n #\n #\tSee README-fixinc for more information.\n \n-# Directory containing the original header files.\n-INPUT=${2-${INPUT-/usr/include}}\n-\n # Fail if no arg to specify a directory for the output.\n if [ x$1 = x ]\n then echo fixincludes: no output directory specified\n@@ -51,15 +48,15 @@ if [ ! -d $LIB ]; then\n   mkdir $LIB || exit 1\n fi\n \n-ORIG_DIR=`pwd`\n+ORIG_DIR=`${PWDCMD-pwd}`\n \n # Make LIB absolute if it is relative.\n # Don't do this if not necessary, since may screw up automounters.\n case $LIB in\n /*)\n \t;;\n *)\n- \tLIB=$ORIG_DIR/$LIB\n+ \tcd $LIB; LIB=`${PWDCMD-pwd}`\n \t;;\n esac\n \n@@ -69,6 +66,17 @@ echo 'Running fixinc.svr4'\n echo 'Finished fixinc.svr4'\n \n echo 'Building fixincludes in ' ${LIB}\n+# Directory containing the original header files.\n+shift\n+if [ $# -eq 0 ] ; then\n+  set /usr/include\n+fi\n+\n+INLIST=\"$@\"\n+\n+for INPUT in ${INLIST} ; do\n+cd ${ORIG_DIR}\n+cd ${INPUT}\n \n # Copied from fixincludes.\n # Don't use or define the name va_list in stdio.h.\n@@ -253,5 +261,14 @@ if [ \\! -z \"$file_to_fix\" ]; then\n   fi\n fi\n \n-exit 0\n+done\n \n+if [ x${INSTALL_ASSERT_H} != x ] ;\n+then\n+  cd ${ORIG_DIR}\n+  rm -f include/assert.h;\n+  cp $(srcdir)/assert.h include/assert.h;\n+  chmod a+r include/assert.h;\n+fi\n+\n+exit 0"}, {"sha": "67189029cc0ee68f587ac37c734c916d1efffd24", "filename": "gcc/fixinc/fixinc.sco", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.sco", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.sco", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.sco?ref=57c69a87cf0f5e614385dc95fb550996397c59ce", "patch": "@@ -39,9 +39,6 @@\n #\n #\tSee README-fixinc for more information.\n \n-# Directory containing the original header files.\n-INPUT=${2-${INPUT-/usr/include}}\n-\n # Fail if no arg to specify a directory for the output.\n if [ x$1 = x ]\n then echo fixincludes: no output directory specified\n@@ -56,7 +53,7 @@ if [ ! -d $LIB ]; then\n   mkdir $LIB || exit 1\n fi\n \n-ORIG_DIR=`pwd`\n+ORIG_DIR=`${PWDCMD-pwd}`\n \n # Make LIB absolute if it is relative.\n # Don't do this if not necessary, since may screw up automounters.\n@@ -79,7 +76,18 @@ else\n fi\n \n echo 'Making directories:'\n+# Directory containing the original header files.\n+shift\n+if [ $# -eq 0 ] ; then\n+  set /usr/include\n+fi\n+\n+INLIST=\"$@\"\n+\n+for INPUT in ${INLIST} ; do\n+cd ${ORIG_DIR}\n cd ${INPUT}\n+\n if $LINKS; then\n   files=`ls -LR | sed -n s/:$//p`\n else\n@@ -424,4 +432,14 @@ if $LINKS; then\n   done\n fi\n \n+done\n+\n+if [ x${INSTALL_ASSERT_H} != x ] ;\n+then\n+  cd ${ORIG_DIR}\n+  rm -f include/assert.h;\n+  cp $(srcdir)/assert.h include/assert.h;\n+  chmod a+r include/assert.h;\n+fi\n+\n exit 0"}, {"sha": "46dec852f0d5472fdac21b4cd36c263c708b30de", "filename": "gcc/fixinc/fixinc.svr4", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.svr4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.svr4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.svr4?ref=57c69a87cf0f5e614385dc95fb550996397c59ce", "patch": "@@ -31,9 +31,6 @@\n #\n #\tSee README-fixinc for more information.\n \n-# Directory containing the original header files.\n-INPUT=${2-${INPUT-/usr/include}}\n-\n # Fail if no arg to specify a directory for the output.\n if [ x$1 = x ]\n then echo fixincludes: no output directory specified\n@@ -48,15 +45,15 @@ if [ ! -d $LIB ]; then\n   mkdir $LIB || exit 1\n fi\n \n-ORIG_DIR=`pwd`\n+ORIG_DIR=`${PWDCMD-pwd}`\n \n # Make LIB absolute if it is relative.\n # Don't do this if not necessary, since may screw up automounters.\n case $LIB in\n /*)\n \t;;\n *)\n- \tLIB=$ORIG_DIR/$LIB\n+ \tcd $LIB; LIB=`${PWDCMD-pwd}`\n \t;;\n esac\n \n@@ -71,7 +68,19 @@ else\n fi\n \n echo 'Making directories:'\n+\n+# Directory containing the original header files.\n+shift\n+if [ $# -eq 0 ] ; then\n+  set /usr/include\n+fi\n+\n+INLIST=\"$@\"\n+\n+for INPUT in ${INLIST} ; do\n+cd ${ORIG_DIR}\n cd ${INPUT}\n+\n if $LINKS; then\n   files=`find . -follow -type d -print 2>/dev/null | sed '/^.$/d'`\n else\n@@ -1722,5 +1731,14 @@ __EOF__\n \n chmod a+r ${LIB}/sys/byteorder.h\n \n-exit 0\n+done\n \n+if [ x${INSTALL_ASSERT_H} != x ] ;\n+then\n+  cd ${ORIG_DIR}\n+  rm -f include/assert.h;\n+  cp $(srcdir)/assert.h include/assert.h;\n+  chmod a+r include/assert.h;\n+fi\n+\n+exit 0"}, {"sha": "7b8fe9ec9e79105553db482a00b086700fba86fa", "filename": "gcc/fixinc/fixinc.winnt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.winnt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.winnt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.winnt?ref=57c69a87cf0f5e614385dc95fb550996397c59ce", "patch": "@@ -229,4 +229,12 @@ for file in $files; do\n   rmdir $LIB/$file > NUL 2>&1\n done\n \n+if [ x${INSTALL_ASSERT_H} != x ] ;\n+then\n+  cd ${ORIG_DIR}\n+  rm -f include/assert.h;\n+  cp $(srcdir)/assert.h include/assert.h;\n+  chmod a+r include/assert.h;\n+fi\n+\n exit 0"}, {"sha": "4be9f132a1a408481fdd3167768b72bb0570a59c", "filename": "gcc/fixinc/fixinc.wrap", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.wrap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c69a87cf0f5e614385dc95fb550996397c59ce/gcc%2Ffixinc%2Ffixinc.wrap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixinc.wrap?ref=57c69a87cf0f5e614385dc95fb550996397c59ce", "patch": "@@ -8,10 +8,6 @@\n #\n # See README-fixinc for more information.\n \n-# Directory containing the original header files.\n-# (This was named INCLUDES, but that conflicts with a name in Makefile.in.)\n-INPUT=${2-${INPUT-/usr/include}}\n-\n # Directory in which to store the results.\n LIB=${1?\"fixincludes: output directory not specified\"}\n \n@@ -20,7 +16,30 @@ if [ ! -d $LIB ]; then\n   mkdir $LIB || exit 1\n fi\n \n+ORIG_DIR=`${PWDCMD-pwd}`\n+\n+# Make LIB absolute if it is relative.\n+# Don't do this if not necessary, since may screw up automounters.\n+case $LIB in\n+/*)\n+\t;;\n+*)\n+\tcd $LIB; LIB=`${PWDCMD-pwd}`\n+\t;;\n+esac\n+\n echo Building fixed headers in ${LIB}\n+# Directory containing the original header files.\n+shift\n+if [ $# -eq 0 ] ; then\n+  set /usr/include\n+fi\n+\n+INLIST=\"$@\"\n+\n+for INPUT in ${INLIST} ; do\n+cd ${ORIG_DIR}\n+cd ${INPUT}\n \n # Some math.h files define struct exception, which conflicts with\n # the class exception defined in the C++ file std/stdexcept.h.  We\n@@ -83,4 +102,14 @@ __EOF__\n   fi\n fi\n \n+done\n+\n+if [ x${INSTALL_ASSERT_H} != x ] ;\n+then\n+  cd ${ORIG_DIR}\n+  rm -f include/assert.h;\n+  cp $(srcdir)/assert.h include/assert.h;\n+  chmod a+r include/assert.h;\n+fi\n+\n exit 0"}]}