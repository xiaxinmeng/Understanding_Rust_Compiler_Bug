{"sha": "56fe3eff33f4376fb5104d8eaf109618cb07fc9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZmZTNlZmYzM2Y0Mzc2ZmI1MTA0ZDhlYWYxMDk2MThjYjA3ZmM5ZQ==", "commit": {"author": {"name": "Doug Kwan", "email": "dougkwan@google.com", "date": "2009-10-05T09:08:46Z"}, "committer": {"name": "Doug Kwan", "email": "dougkwan@gcc.gnu.org", "date": "2009-10-05T09:08:46Z"}, "message": "re PR rtl-optimization/41574 (Distribute floating point expressions causes bad code [4.4 only])\n\n2009-10-05  Doug Kwan  <dougkwan@google.com>\n\n\tPR rtl-optimization/41574\n\tIndex: combine.c (distribute_and_simplify_rtx): Quit if RTX mode is\n\tfloating point and we are not doing unsafe math optimizations.\n\nFrom-SVN: r152443", "tree": {"sha": "4c9459bd6788b618c7453a190aaeecfcf02a4bf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c9459bd6788b618c7453a190aaeecfcf02a4bf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56fe3eff33f4376fb5104d8eaf109618cb07fc9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56fe3eff33f4376fb5104d8eaf109618cb07fc9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56fe3eff33f4376fb5104d8eaf109618cb07fc9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56fe3eff33f4376fb5104d8eaf109618cb07fc9e/comments", "author": {"login": "dougkwan", "id": 1399231, "node_id": "MDQ6VXNlcjEzOTkyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1399231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dougkwan", "html_url": "https://github.com/dougkwan", "followers_url": "https://api.github.com/users/dougkwan/followers", "following_url": "https://api.github.com/users/dougkwan/following{/other_user}", "gists_url": "https://api.github.com/users/dougkwan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dougkwan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dougkwan/subscriptions", "organizations_url": "https://api.github.com/users/dougkwan/orgs", "repos_url": "https://api.github.com/users/dougkwan/repos", "events_url": "https://api.github.com/users/dougkwan/events{/privacy}", "received_events_url": "https://api.github.com/users/dougkwan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cb26fc5c3ed73a784f5030e30ba13f0ad641d8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb26fc5c3ed73a784f5030e30ba13f0ad641d8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cb26fc5c3ed73a784f5030e30ba13f0ad641d8f"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "c9e635d36e4c7c4495440f5a5a9451a7952f6e20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fe3eff33f4376fb5104d8eaf109618cb07fc9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fe3eff33f4376fb5104d8eaf109618cb07fc9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56fe3eff33f4376fb5104d8eaf109618cb07fc9e", "patch": "@@ -1,3 +1,9 @@\n+2009-10-05  Doug Kwan  <dougkwan@google.com>\n+\n+\tPR rtl-optimization/41574\n+\tIndex: combine.c (distribute_and_simplify_rtx): Quit if RTX mode is\n+\tfloating point and we are not doing unsafe math optimizations.\n+\n 2009-10-03  Simon Baldwin  <simonb@google.com>\n \t    Cary Coutant  <ccoutant@google.com>\n \t    Rafael Espindola  <espindola@google.com>"}, {"sha": "64cf99272dae3b5fd350b45959135bdc762130ed", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fe3eff33f4376fb5104d8eaf109618cb07fc9e/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fe3eff33f4376fb5104d8eaf109618cb07fc9e/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=56fe3eff33f4376fb5104d8eaf109618cb07fc9e", "patch": "@@ -8811,6 +8811,12 @@ distribute_and_simplify_rtx (rtx x, int n)\n   enum rtx_code outer_code, inner_code;\n   rtx decomposed, distributed, inner_op0, inner_op1, new_op0, new_op1, tmp;\n \n+  /* Distributivity is not true for floating point as it can change the\n+     value.  So we don't do it unless -funsafe-math-optimizations.  */\n+  if (FLOAT_MODE_P (GET_MODE (x))\n+      && ! flag_unsafe_math_optimizations)\n+    return NULL_RTX;\n+\n   decomposed = XEXP (x, n);\n   if (!ARITHMETIC_P (decomposed))\n     return NULL_RTX;"}]}