{"sha": "f5c273065a35be668be2c935b31be04d8a2c1198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVjMjczMDY1YTM1YmU2NjhiZTJjOTM1YjMxYmUwNGQ4YTJjMTE5OA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2005-04-19T09:24:15Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-19T09:24:15Z"}, "message": "ControlWordToken.java, [...]: New files.\n\n2005-04-19  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/text/rtf/ControlWordToken.java,\n\tjavax/swing/text/rtf/RTFEditorKit.java,\n\tjavax/swing/text/rtf/RTFParseException.java,\n\tjavax/swing/text/rtf/RTFParser.java,\n\tjavax/swing/text/rtf/RTFScanner.java,\n\tjavax/swing/text/rtf/TextToken.java,\n\tjavax/swing/text/rtf/Token.java: New files.\n\t* Makefile.am: Added new files.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r98393", "tree": {"sha": "9d26de755a19328b162906526f1ff15d2854f2fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d26de755a19328b162906526f1ff15d2854f2fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5c273065a35be668be2c935b31be04d8a2c1198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c273065a35be668be2c935b31be04d8a2c1198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5c273065a35be668be2c935b31be04d8a2c1198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c273065a35be668be2c935b31be04d8a2c1198/comments", "author": null, "committer": null, "parents": [{"sha": "2b22418b2b79b3181606e48aed3fcaf330ec70c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b22418b2b79b3181606e48aed3fcaf330ec70c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b22418b2b79b3181606e48aed3fcaf330ec70c5"}], "stats": {"total": 980, "additions": 976, "deletions": 4}, "files": [{"sha": "37cb8d93e1ddd9a462beadfa50f8eacdb1c5875c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -1,3 +1,15 @@\n+2005-04-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/text/rtf/ControlWordToken.java,\n+\tjavax/swing/text/rtf/RTFEditorKit.java,\n+\tjavax/swing/text/rtf/RTFParseException.java,\n+\tjavax/swing/text/rtf/RTFParser.java,\n+\tjavax/swing/text/rtf/RTFScanner.java,\n+\tjavax/swing/text/rtf/TextToken.java,\n+\tjavax/swing/text/rtf/Token.java: New files.\n+\t* Makefile.am: Added new files.\n+\t* Makefile.in: Regenerated.\n+\n 2005-04-19  Michael Koch  <konqueror@gmx.de>\n \n \t* java/awt/geom/QuadCurve2D.java:"}, {"sha": "9c3b6628804b5761cf85ab497e9d447ebdb0cd8f", "filename": "libjava/Makefile.am", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -1886,6 +1886,13 @@ javax/swing/text/View.java \\\n javax/swing/text/ViewFactory.java \\\n javax/swing/text/html/HTML.java \\\n javax/swing/text/html/parser/ParserDelegator.java \\\n+javax/swing/text/rtf/ControlWordToken.java \\\n+javax/swing/text/rtf/RTFEditorKit.java \\\n+javax/swing/text/rtf/RTFParseException.java \\\n+javax/swing/text/rtf/RTFParser.java \\\n+javax/swing/text/rtf/RTFScanner.java \\\n+javax/swing/text/rtf/TextToken.java \\\n+javax/swing/text/rtf/Token.java \\\n javax/swing/tree/TreeNode.java \\\n javax/swing/tree/AbstractLayoutCache.java \\\n javax/swing/tree/DefaultMutableTreeNode.java \\"}, {"sha": "4e1bf4f3d7bfbd041bcbecb819e43c461ffa9ea2", "filename": "libjava/Makefile.in", "status": "modified", "additions": 73, "deletions": 4, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -1765,7 +1765,13 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjavax/swing/text/ViewFactory.java \\\n \tjavax/swing/text/html/HTML.java \\\n \tjavax/swing/text/html/parser/ParserDelegator.java \\\n-\tjavax/swing/tree/TreeNode.java \\\n+\tjavax/swing/text/rtf/ControlWordToken.java \\\n+\tjavax/swing/text/rtf/RTFEditorKit.java \\\n+\tjavax/swing/text/rtf/RTFParseException.java \\\n+\tjavax/swing/text/rtf/RTFParser.java \\\n+\tjavax/swing/text/rtf/RTFScanner.java \\\n+\tjavax/swing/text/rtf/TextToken.java \\\n+\tjavax/swing/text/rtf/Token.java javax/swing/tree/TreeNode.java \\\n \tjavax/swing/tree/AbstractLayoutCache.java \\\n \tjavax/swing/tree/DefaultMutableTreeNode.java \\\n \tjavax/swing/tree/DefaultTreeCellEditor.java \\\n@@ -3030,7 +3036,13 @@ am__objects_10 = gnu/awt/LightweightRedirector.lo \\\n \tjavax/swing/text/Utilities.lo javax/swing/text/View.lo \\\n \tjavax/swing/text/ViewFactory.lo javax/swing/text/html/HTML.lo \\\n \tjavax/swing/text/html/parser/ParserDelegator.lo \\\n-\tjavax/swing/tree/TreeNode.lo \\\n+\tjavax/swing/text/rtf/ControlWordToken.lo \\\n+\tjavax/swing/text/rtf/RTFEditorKit.lo \\\n+\tjavax/swing/text/rtf/RTFParseException.lo \\\n+\tjavax/swing/text/rtf/RTFParser.lo \\\n+\tjavax/swing/text/rtf/RTFScanner.lo \\\n+\tjavax/swing/text/rtf/TextToken.lo \\\n+\tjavax/swing/text/rtf/Token.lo javax/swing/tree/TreeNode.lo \\\n \tjavax/swing/tree/AbstractLayoutCache.lo \\\n \tjavax/swing/tree/DefaultMutableTreeNode.lo \\\n \tjavax/swing/tree/DefaultTreeCellEditor.lo \\\n@@ -5557,6 +5569,13 @@ javax/swing/text/View.java \\\n javax/swing/text/ViewFactory.java \\\n javax/swing/text/html/HTML.java \\\n javax/swing/text/html/parser/ParserDelegator.java \\\n+javax/swing/text/rtf/ControlWordToken.java \\\n+javax/swing/text/rtf/RTFEditorKit.java \\\n+javax/swing/text/rtf/RTFParseException.java \\\n+javax/swing/text/rtf/RTFParser.java \\\n+javax/swing/text/rtf/RTFScanner.java \\\n+javax/swing/text/rtf/TextToken.java \\\n+javax/swing/text/rtf/Token.java \\\n javax/swing/tree/TreeNode.java \\\n javax/swing/tree/AbstractLayoutCache.java \\\n javax/swing/tree/DefaultMutableTreeNode.java \\\n@@ -12978,6 +12997,32 @@ javax/swing/text/html/parser/$(DEPDIR)/$(am__dirstamp):\n javax/swing/text/html/parser/ParserDelegator.lo:  \\\n \tjavax/swing/text/html/parser/$(am__dirstamp) \\\n \tjavax/swing/text/html/parser/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/rtf/$(am__dirstamp):\n+\t@$(mkdir_p) javax/swing/text/rtf\n+\t@: > javax/swing/text/rtf/$(am__dirstamp)\n+javax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp):\n+\t@$(mkdir_p) javax/swing/text/rtf/$(DEPDIR)\n+\t@: > javax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/rtf/ControlWordToken.lo:  \\\n+\tjavax/swing/text/rtf/$(am__dirstamp) \\\n+\tjavax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/rtf/RTFEditorKit.lo:  \\\n+\tjavax/swing/text/rtf/$(am__dirstamp) \\\n+\tjavax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/rtf/RTFParseException.lo:  \\\n+\tjavax/swing/text/rtf/$(am__dirstamp) \\\n+\tjavax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/rtf/RTFParser.lo:  \\\n+\tjavax/swing/text/rtf/$(am__dirstamp) \\\n+\tjavax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/rtf/RTFScanner.lo:  \\\n+\tjavax/swing/text/rtf/$(am__dirstamp) \\\n+\tjavax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/rtf/TextToken.lo:  \\\n+\tjavax/swing/text/rtf/$(am__dirstamp) \\\n+\tjavax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp)\n+javax/swing/text/rtf/Token.lo: javax/swing/text/rtf/$(am__dirstamp) \\\n+\tjavax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp)\n javax/swing/tree/$(am__dirstamp):\n \t@$(mkdir_p) javax/swing/tree\n \t@: > javax/swing/tree/$(am__dirstamp)\n@@ -19240,6 +19285,20 @@ mostlyclean-compile:\n \t-rm -f javax/swing/text/html/HTML.lo\n \t-rm -f javax/swing/text/html/parser/ParserDelegator.$(OBJEXT)\n \t-rm -f javax/swing/text/html/parser/ParserDelegator.lo\n+\t-rm -f javax/swing/text/rtf/ControlWordToken.$(OBJEXT)\n+\t-rm -f javax/swing/text/rtf/ControlWordToken.lo\n+\t-rm -f javax/swing/text/rtf/RTFEditorKit.$(OBJEXT)\n+\t-rm -f javax/swing/text/rtf/RTFEditorKit.lo\n+\t-rm -f javax/swing/text/rtf/RTFParseException.$(OBJEXT)\n+\t-rm -f javax/swing/text/rtf/RTFParseException.lo\n+\t-rm -f javax/swing/text/rtf/RTFParser.$(OBJEXT)\n+\t-rm -f javax/swing/text/rtf/RTFParser.lo\n+\t-rm -f javax/swing/text/rtf/RTFScanner.$(OBJEXT)\n+\t-rm -f javax/swing/text/rtf/RTFScanner.lo\n+\t-rm -f javax/swing/text/rtf/TextToken.$(OBJEXT)\n+\t-rm -f javax/swing/text/rtf/TextToken.lo\n+\t-rm -f javax/swing/text/rtf/Token.$(OBJEXT)\n+\t-rm -f javax/swing/text/rtf/Token.lo\n \t-rm -f javax/swing/tree/AbstractLayoutCache.$(OBJEXT)\n \t-rm -f javax/swing/tree/AbstractLayoutCache.lo\n \t-rm -f javax/swing/tree/DefaultMutableTreeNode.$(OBJEXT)\n@@ -21817,6 +21876,13 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/$(DEPDIR)/ViewFactory.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/html/$(DEPDIR)/HTML.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/html/parser/$(DEPDIR)/ParserDelegator.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/rtf/$(DEPDIR)/ControlWordToken.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/rtf/$(DEPDIR)/RTFEditorKit.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/rtf/$(DEPDIR)/RTFParseException.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/rtf/$(DEPDIR)/RTFParser.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/rtf/$(DEPDIR)/RTFScanner.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/rtf/$(DEPDIR)/TextToken.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/swing/text/rtf/$(DEPDIR)/Token.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/tree/$(DEPDIR)/AbstractLayoutCache.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/tree/$(DEPDIR)/DefaultMutableTreeNode.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/swing/tree/$(DEPDIR)/DefaultTreeCellEditor.Plo@am__quote@\n@@ -22543,6 +22609,7 @@ clean-libtool:\n \t-rm -rf javax/swing/text/.libs javax/swing/text/_libs\n \t-rm -rf javax/swing/text/html/.libs javax/swing/text/html/_libs\n \t-rm -rf javax/swing/text/html/parser/.libs javax/swing/text/html/parser/_libs\n+\t-rm -rf javax/swing/text/rtf/.libs javax/swing/text/rtf/_libs\n \t-rm -rf javax/swing/tree/.libs javax/swing/tree/_libs\n \t-rm -rf javax/swing/undo/.libs javax/swing/undo/_libs\n \t-rm -rf javax/transaction/.libs javax/transaction/_libs\n@@ -23175,6 +23242,8 @@ distclean-generic:\n \t-rm -f javax/swing/text/html/$(am__dirstamp)\n \t-rm -f javax/swing/text/html/parser/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f javax/swing/text/html/parser/$(am__dirstamp)\n+\t-rm -f javax/swing/text/rtf/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f javax/swing/text/rtf/$(am__dirstamp)\n \t-rm -f javax/swing/tree/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f javax/swing/tree/$(am__dirstamp)\n \t-rm -f javax/swing/undo/$(DEPDIR)/$(am__dirstamp)\n@@ -23203,7 +23272,7 @@ clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \\\n \n distclean: distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf ./$(DEPDIR) gnu/awt/$(DEPDIR) gnu/awt/j2d/$(DEPDIR) gnu/awt/xlib/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/awt/$(DEPDIR) gnu/java/awt/color/$(DEPDIR) gnu/java/awt/image/$(DEPDIR) gnu/java/awt/peer/$(DEPDIR) gnu/java/io/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/reflect/$(DEPDIR) gnu/java/locale/$(DEPDIR) gnu/java/math/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/net/protocol/file/$(DEPDIR) gnu/java/net/protocol/ftp/$(DEPDIR) gnu/java/net/protocol/gcjlib/$(DEPDIR) gnu/java/net/protocol/http/$(DEPDIR) gnu/java/net/protocol/http/event/$(DEPDIR) gnu/java/net/protocol/jar/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) gnu/java/nio/charset/$(DEPDIR) gnu/java/rmi/$(DEPDIR) gnu/java/rmi/dgc/$(DEPDIR) gnu/java/rmi/registry/$(DEPDIR) gnu/java/rmi/rmic/$(DEPDIR) gnu/java/rmi/server/$(DEPDIR) gnu/java/security/$(DEPDIR) gnu/java/security/action/$(DEPDIR) gnu/java/security/ber/$(DEPDIR) gnu/java/security/der/$(DEPDIR) gnu/java/security/pkcs/$(DEPDIR) gnu/java/security/provider/$(DEPDIR) gnu/java/security/util/$(DEPDIR) gnu/java/security/x509/$(DEPDIR) gnu/java/security/x509/ext/$(DEPDIR) gnu/java/text/$(DEPDIR) gnu/java/util/$(DEPDIR) gnu/java/util/prefs/$(DEPDIR) gnu/regexp/$(DEPDIR) java/applet/$(DEPDIR) java/awt/$(DEPDIR) java/awt/color/$(DEPDIR) java/awt/datatransfer/$(DEPDIR) java/awt/dnd/$(DEPDIR) java/awt/dnd/peer/$(DEPDIR) java/awt/event/$(DEPDIR) java/awt/font/$(DEPDIR) java/awt/geom/$(DEPDIR) java/awt/im/$(DEPDIR) java/awt/im/spi/$(DEPDIR) java/awt/image/$(DEPDIR) java/awt/image/renderable/$(DEPDIR) java/awt/peer/$(DEPDIR) java/awt/print/$(DEPDIR) java/beans/$(DEPDIR) java/beans/beancontext/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/math/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/nio/channels/spi/$(DEPDIR) java/nio/charset/$(DEPDIR) java/nio/charset/spi/$(DEPDIR) java/rmi/$(DEPDIR) java/rmi/activation/$(DEPDIR) java/rmi/dgc/$(DEPDIR) java/rmi/registry/$(DEPDIR) java/rmi/server/$(DEPDIR) java/security/$(DEPDIR) java/security/acl/$(DEPDIR) java/security/cert/$(DEPDIR) java/security/interfaces/$(DEPDIR) java/security/spec/$(DEPDIR) java/sql/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/jar/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/prefs/$(DEPDIR) java/util/regex/$(DEPDIR) java/util/zip/$(DEPDIR) javax/accessibility/$(DEPDIR) javax/crypto/$(DEPDIR) javax/crypto/interfaces/$(DEPDIR) javax/crypto/spec/$(DEPDIR) javax/naming/$(DEPDIR) javax/naming/directory/$(DEPDIR) javax/naming/event/$(DEPDIR) javax/naming/ldap/$(DEPDIR) javax/naming/spi/$(DEPDIR) javax/net/$(DEPDIR) javax/net/ssl/$(DEPDIR) javax/print/$(DEPDIR) javax/print/attribute/$(DEPDIR) javax/print/attribute/standard/$(DEPDIR) javax/print/event/$(DEPDIR) javax/security/auth/$(DEPDIR) javax/security/auth/callback/$(DEPDIR) javax/security/auth/login/$(DEPDIR) javax/security/auth/spi/$(DEPDIR) javax/security/auth/x500/$(DEPDIR) javax/security/cert/$(DEPDIR) javax/security/sasl/$(DEPDIR) javax/sql/$(DEPDIR) javax/swing/$(DEPDIR) javax/swing/border/$(DEPDIR) javax/swing/colorchooser/$(DEPDIR) javax/swing/event/$(DEPDIR) javax/swing/filechooser/$(DEPDIR) javax/swing/plaf/$(DEPDIR) javax/swing/plaf/basic/$(DEPDIR) javax/swing/plaf/metal/$(DEPDIR) javax/swing/table/$(DEPDIR) javax/swing/text/$(DEPDIR) javax/swing/text/html/$(DEPDIR) javax/swing/text/html/parser/$(DEPDIR) javax/swing/tree/$(DEPDIR) javax/swing/undo/$(DEPDIR) javax/transaction/$(DEPDIR) javax/transaction/xa/$(DEPDIR) jni/classpath/$(DEPDIR) jni/gtk-peer/$(DEPDIR) org/ietf/jgss/$(DEPDIR) sysdep/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) gnu/awt/$(DEPDIR) gnu/awt/j2d/$(DEPDIR) gnu/awt/xlib/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/awt/$(DEPDIR) gnu/java/awt/color/$(DEPDIR) gnu/java/awt/image/$(DEPDIR) gnu/java/awt/peer/$(DEPDIR) gnu/java/io/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/reflect/$(DEPDIR) gnu/java/locale/$(DEPDIR) gnu/java/math/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/net/protocol/file/$(DEPDIR) gnu/java/net/protocol/ftp/$(DEPDIR) gnu/java/net/protocol/gcjlib/$(DEPDIR) gnu/java/net/protocol/http/$(DEPDIR) gnu/java/net/protocol/http/event/$(DEPDIR) gnu/java/net/protocol/jar/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) gnu/java/nio/charset/$(DEPDIR) gnu/java/rmi/$(DEPDIR) gnu/java/rmi/dgc/$(DEPDIR) gnu/java/rmi/registry/$(DEPDIR) gnu/java/rmi/rmic/$(DEPDIR) gnu/java/rmi/server/$(DEPDIR) gnu/java/security/$(DEPDIR) gnu/java/security/action/$(DEPDIR) gnu/java/security/ber/$(DEPDIR) gnu/java/security/der/$(DEPDIR) gnu/java/security/pkcs/$(DEPDIR) gnu/java/security/provider/$(DEPDIR) gnu/java/security/util/$(DEPDIR) gnu/java/security/x509/$(DEPDIR) gnu/java/security/x509/ext/$(DEPDIR) gnu/java/text/$(DEPDIR) gnu/java/util/$(DEPDIR) gnu/java/util/prefs/$(DEPDIR) gnu/regexp/$(DEPDIR) java/applet/$(DEPDIR) java/awt/$(DEPDIR) java/awt/color/$(DEPDIR) java/awt/datatransfer/$(DEPDIR) java/awt/dnd/$(DEPDIR) java/awt/dnd/peer/$(DEPDIR) java/awt/event/$(DEPDIR) java/awt/font/$(DEPDIR) java/awt/geom/$(DEPDIR) java/awt/im/$(DEPDIR) java/awt/im/spi/$(DEPDIR) java/awt/image/$(DEPDIR) java/awt/image/renderable/$(DEPDIR) java/awt/peer/$(DEPDIR) java/awt/print/$(DEPDIR) java/beans/$(DEPDIR) java/beans/beancontext/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/math/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/nio/channels/spi/$(DEPDIR) java/nio/charset/$(DEPDIR) java/nio/charset/spi/$(DEPDIR) java/rmi/$(DEPDIR) java/rmi/activation/$(DEPDIR) java/rmi/dgc/$(DEPDIR) java/rmi/registry/$(DEPDIR) java/rmi/server/$(DEPDIR) java/security/$(DEPDIR) java/security/acl/$(DEPDIR) java/security/cert/$(DEPDIR) java/security/interfaces/$(DEPDIR) java/security/spec/$(DEPDIR) java/sql/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/jar/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/prefs/$(DEPDIR) java/util/regex/$(DEPDIR) java/util/zip/$(DEPDIR) javax/accessibility/$(DEPDIR) javax/crypto/$(DEPDIR) javax/crypto/interfaces/$(DEPDIR) javax/crypto/spec/$(DEPDIR) javax/naming/$(DEPDIR) javax/naming/directory/$(DEPDIR) javax/naming/event/$(DEPDIR) javax/naming/ldap/$(DEPDIR) javax/naming/spi/$(DEPDIR) javax/net/$(DEPDIR) javax/net/ssl/$(DEPDIR) javax/print/$(DEPDIR) javax/print/attribute/$(DEPDIR) javax/print/attribute/standard/$(DEPDIR) javax/print/event/$(DEPDIR) javax/security/auth/$(DEPDIR) javax/security/auth/callback/$(DEPDIR) javax/security/auth/login/$(DEPDIR) javax/security/auth/spi/$(DEPDIR) javax/security/auth/x500/$(DEPDIR) javax/security/cert/$(DEPDIR) javax/security/sasl/$(DEPDIR) javax/sql/$(DEPDIR) javax/swing/$(DEPDIR) javax/swing/border/$(DEPDIR) javax/swing/colorchooser/$(DEPDIR) javax/swing/event/$(DEPDIR) javax/swing/filechooser/$(DEPDIR) javax/swing/plaf/$(DEPDIR) javax/swing/plaf/basic/$(DEPDIR) javax/swing/plaf/metal/$(DEPDIR) javax/swing/table/$(DEPDIR) javax/swing/text/$(DEPDIR) javax/swing/text/html/$(DEPDIR) javax/swing/text/html/parser/$(DEPDIR) javax/swing/text/rtf/$(DEPDIR) javax/swing/tree/$(DEPDIR) javax/swing/undo/$(DEPDIR) javax/transaction/$(DEPDIR) javax/transaction/xa/$(DEPDIR) jni/classpath/$(DEPDIR) jni/gtk-peer/$(DEPDIR) org/ietf/jgss/$(DEPDIR) sysdep/$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-compile distclean-generic \\\n \tdistclean-libtool distclean-local distclean-tags\n@@ -23234,7 +23303,7 @@ installcheck-am:\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf ./$(DEPDIR) gnu/awt/$(DEPDIR) gnu/awt/j2d/$(DEPDIR) gnu/awt/xlib/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/awt/$(DEPDIR) gnu/java/awt/color/$(DEPDIR) gnu/java/awt/image/$(DEPDIR) gnu/java/awt/peer/$(DEPDIR) gnu/java/io/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/reflect/$(DEPDIR) gnu/java/locale/$(DEPDIR) gnu/java/math/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/net/protocol/file/$(DEPDIR) gnu/java/net/protocol/ftp/$(DEPDIR) gnu/java/net/protocol/gcjlib/$(DEPDIR) gnu/java/net/protocol/http/$(DEPDIR) gnu/java/net/protocol/http/event/$(DEPDIR) gnu/java/net/protocol/jar/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) gnu/java/nio/charset/$(DEPDIR) gnu/java/rmi/$(DEPDIR) gnu/java/rmi/dgc/$(DEPDIR) gnu/java/rmi/registry/$(DEPDIR) gnu/java/rmi/rmic/$(DEPDIR) gnu/java/rmi/server/$(DEPDIR) gnu/java/security/$(DEPDIR) gnu/java/security/action/$(DEPDIR) gnu/java/security/ber/$(DEPDIR) gnu/java/security/der/$(DEPDIR) gnu/java/security/pkcs/$(DEPDIR) gnu/java/security/provider/$(DEPDIR) gnu/java/security/util/$(DEPDIR) gnu/java/security/x509/$(DEPDIR) gnu/java/security/x509/ext/$(DEPDIR) gnu/java/text/$(DEPDIR) gnu/java/util/$(DEPDIR) gnu/java/util/prefs/$(DEPDIR) gnu/regexp/$(DEPDIR) java/applet/$(DEPDIR) java/awt/$(DEPDIR) java/awt/color/$(DEPDIR) java/awt/datatransfer/$(DEPDIR) java/awt/dnd/$(DEPDIR) java/awt/dnd/peer/$(DEPDIR) java/awt/event/$(DEPDIR) java/awt/font/$(DEPDIR) java/awt/geom/$(DEPDIR) java/awt/im/$(DEPDIR) java/awt/im/spi/$(DEPDIR) java/awt/image/$(DEPDIR) java/awt/image/renderable/$(DEPDIR) java/awt/peer/$(DEPDIR) java/awt/print/$(DEPDIR) java/beans/$(DEPDIR) java/beans/beancontext/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/math/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/nio/channels/spi/$(DEPDIR) java/nio/charset/$(DEPDIR) java/nio/charset/spi/$(DEPDIR) java/rmi/$(DEPDIR) java/rmi/activation/$(DEPDIR) java/rmi/dgc/$(DEPDIR) java/rmi/registry/$(DEPDIR) java/rmi/server/$(DEPDIR) java/security/$(DEPDIR) java/security/acl/$(DEPDIR) java/security/cert/$(DEPDIR) java/security/interfaces/$(DEPDIR) java/security/spec/$(DEPDIR) java/sql/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/jar/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/prefs/$(DEPDIR) java/util/regex/$(DEPDIR) java/util/zip/$(DEPDIR) javax/accessibility/$(DEPDIR) javax/crypto/$(DEPDIR) javax/crypto/interfaces/$(DEPDIR) javax/crypto/spec/$(DEPDIR) javax/naming/$(DEPDIR) javax/naming/directory/$(DEPDIR) javax/naming/event/$(DEPDIR) javax/naming/ldap/$(DEPDIR) javax/naming/spi/$(DEPDIR) javax/net/$(DEPDIR) javax/net/ssl/$(DEPDIR) javax/print/$(DEPDIR) javax/print/attribute/$(DEPDIR) javax/print/attribute/standard/$(DEPDIR) javax/print/event/$(DEPDIR) javax/security/auth/$(DEPDIR) javax/security/auth/callback/$(DEPDIR) javax/security/auth/login/$(DEPDIR) javax/security/auth/spi/$(DEPDIR) javax/security/auth/x500/$(DEPDIR) javax/security/cert/$(DEPDIR) javax/security/sasl/$(DEPDIR) javax/sql/$(DEPDIR) javax/swing/$(DEPDIR) javax/swing/border/$(DEPDIR) javax/swing/colorchooser/$(DEPDIR) javax/swing/event/$(DEPDIR) javax/swing/filechooser/$(DEPDIR) javax/swing/plaf/$(DEPDIR) javax/swing/plaf/basic/$(DEPDIR) javax/swing/plaf/metal/$(DEPDIR) javax/swing/table/$(DEPDIR) javax/swing/text/$(DEPDIR) javax/swing/text/html/$(DEPDIR) javax/swing/text/html/parser/$(DEPDIR) javax/swing/tree/$(DEPDIR) javax/swing/undo/$(DEPDIR) javax/transaction/$(DEPDIR) javax/transaction/xa/$(DEPDIR) jni/classpath/$(DEPDIR) jni/gtk-peer/$(DEPDIR) org/ietf/jgss/$(DEPDIR) sysdep/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) gnu/awt/$(DEPDIR) gnu/awt/j2d/$(DEPDIR) gnu/awt/xlib/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/awt/$(DEPDIR) gnu/java/awt/color/$(DEPDIR) gnu/java/awt/image/$(DEPDIR) gnu/java/awt/peer/$(DEPDIR) gnu/java/io/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/reflect/$(DEPDIR) gnu/java/locale/$(DEPDIR) gnu/java/math/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/net/protocol/file/$(DEPDIR) gnu/java/net/protocol/ftp/$(DEPDIR) gnu/java/net/protocol/gcjlib/$(DEPDIR) gnu/java/net/protocol/http/$(DEPDIR) gnu/java/net/protocol/http/event/$(DEPDIR) gnu/java/net/protocol/jar/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) gnu/java/nio/charset/$(DEPDIR) gnu/java/rmi/$(DEPDIR) gnu/java/rmi/dgc/$(DEPDIR) gnu/java/rmi/registry/$(DEPDIR) gnu/java/rmi/rmic/$(DEPDIR) gnu/java/rmi/server/$(DEPDIR) gnu/java/security/$(DEPDIR) gnu/java/security/action/$(DEPDIR) gnu/java/security/ber/$(DEPDIR) gnu/java/security/der/$(DEPDIR) gnu/java/security/pkcs/$(DEPDIR) gnu/java/security/provider/$(DEPDIR) gnu/java/security/util/$(DEPDIR) gnu/java/security/x509/$(DEPDIR) gnu/java/security/x509/ext/$(DEPDIR) gnu/java/text/$(DEPDIR) gnu/java/util/$(DEPDIR) gnu/java/util/prefs/$(DEPDIR) gnu/regexp/$(DEPDIR) java/applet/$(DEPDIR) java/awt/$(DEPDIR) java/awt/color/$(DEPDIR) java/awt/datatransfer/$(DEPDIR) java/awt/dnd/$(DEPDIR) java/awt/dnd/peer/$(DEPDIR) java/awt/event/$(DEPDIR) java/awt/font/$(DEPDIR) java/awt/geom/$(DEPDIR) java/awt/im/$(DEPDIR) java/awt/im/spi/$(DEPDIR) java/awt/image/$(DEPDIR) java/awt/image/renderable/$(DEPDIR) java/awt/peer/$(DEPDIR) java/awt/print/$(DEPDIR) java/beans/$(DEPDIR) java/beans/beancontext/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/math/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/nio/channels/spi/$(DEPDIR) java/nio/charset/$(DEPDIR) java/nio/charset/spi/$(DEPDIR) java/rmi/$(DEPDIR) java/rmi/activation/$(DEPDIR) java/rmi/dgc/$(DEPDIR) java/rmi/registry/$(DEPDIR) java/rmi/server/$(DEPDIR) java/security/$(DEPDIR) java/security/acl/$(DEPDIR) java/security/cert/$(DEPDIR) java/security/interfaces/$(DEPDIR) java/security/spec/$(DEPDIR) java/sql/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/jar/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/prefs/$(DEPDIR) java/util/regex/$(DEPDIR) java/util/zip/$(DEPDIR) javax/accessibility/$(DEPDIR) javax/crypto/$(DEPDIR) javax/crypto/interfaces/$(DEPDIR) javax/crypto/spec/$(DEPDIR) javax/naming/$(DEPDIR) javax/naming/directory/$(DEPDIR) javax/naming/event/$(DEPDIR) javax/naming/ldap/$(DEPDIR) javax/naming/spi/$(DEPDIR) javax/net/$(DEPDIR) javax/net/ssl/$(DEPDIR) javax/print/$(DEPDIR) javax/print/attribute/$(DEPDIR) javax/print/attribute/standard/$(DEPDIR) javax/print/event/$(DEPDIR) javax/security/auth/$(DEPDIR) javax/security/auth/callback/$(DEPDIR) javax/security/auth/login/$(DEPDIR) javax/security/auth/spi/$(DEPDIR) javax/security/auth/x500/$(DEPDIR) javax/security/cert/$(DEPDIR) javax/security/sasl/$(DEPDIR) javax/sql/$(DEPDIR) javax/swing/$(DEPDIR) javax/swing/border/$(DEPDIR) javax/swing/colorchooser/$(DEPDIR) javax/swing/event/$(DEPDIR) javax/swing/filechooser/$(DEPDIR) javax/swing/plaf/$(DEPDIR) javax/swing/plaf/basic/$(DEPDIR) javax/swing/plaf/metal/$(DEPDIR) javax/swing/table/$(DEPDIR) javax/swing/text/$(DEPDIR) javax/swing/text/html/$(DEPDIR) javax/swing/text/html/parser/$(DEPDIR) javax/swing/text/rtf/$(DEPDIR) javax/swing/tree/$(DEPDIR) javax/swing/undo/$(DEPDIR) javax/transaction/$(DEPDIR) javax/transaction/xa/$(DEPDIR) jni/classpath/$(DEPDIR) jni/gtk-peer/$(DEPDIR) org/ietf/jgss/$(DEPDIR) sysdep/$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n "}, {"sha": "043cae412e7de25ce6985977625163d764897d83", "filename": "libjava/javax/swing/text/rtf/ControlWordToken.java", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FControlWordToken.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FControlWordToken.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FControlWordToken.java?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -0,0 +1,86 @@\n+/* ControlWordToken.java --\n+   Copyright (C) 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.swing.text.rtf;\n+\n+/**\n+ * A special {@link Token} that represents a control word in RTF like\n+ * '\\deff0' where 'deff' is the name of the control word and '0' is an\n+ * optional parameter.\n+ *\n+ * @author Roman Kennke (roman@ontographics.com)\n+ */\n+class ControlWordToken extends Token\n+{\n+\n+  /**\n+   * The name of the control word.\n+   */\n+  public String name;\n+\n+  /**\n+   * The optional parameter of the control word. Absence of a parameter is\n+   * expressed through Integer.MIN_VALUE.\n+   */\n+  public int param;\n+\n+  /**\n+   * Constructs a new ControlWordToken with the specified name and without\n+   * a parameter.\n+   *\n+   * @param name the name of the control word\n+   */\n+  public ControlWordToken(String name)\n+  {\n+    this(name, Integer.MIN_VALUE);\n+  }\n+\n+\n+  /**\n+   * Constructs a new ControlWordToken with the specified name and parameter.\n+   *\n+   * @param name the name of the control word\n+   */\n+  public ControlWordToken(String name, int param)\n+  {\n+    super(Token.CONTROL_WORD);\n+    this.name = name;\n+    this.param = param;\n+  }\n+\n+}"}, {"sha": "8a6e88a84e40961b603e664adbad1d5f93d91f07", "filename": "libjava/javax/swing/text/rtf/RTFEditorKit.java", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFEditorKit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFEditorKit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFEditorKit.java?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -0,0 +1,114 @@\n+/* RTFEditorKit.java --\n+   Copyright (C) 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.swing.text.rtf;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.Reader;\n+\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Document;\n+import javax.swing.text.StyledEditorKit;\n+\n+/**\n+ * Provides support for RTF data for use in\n+ * {@link javax.swing.JEditorPane}s.\n+ *\n+ * @author Roman Kennke (roman@ontographics.com)\n+ */\n+public class RTFEditorKit\n+  extends StyledEditorKit\n+{\n+\n+  /**\n+   * Constructs a new RTFEditorKit.\n+   */\n+  public RTFEditorKit()\n+  {\n+    super();\n+  }\n+\n+  /**\n+   * Returns the MIME content type. In the case of RTFEditorKit this is\n+   * &apos;text/rtf&apos;\n+   *\n+   * @return the MIME content type for RTFEditorKit\n+   */\n+  public String getContentType()\n+  {\n+    return \"text/rtf\";\n+  }\n+\n+  /**\n+   * Reads RTF data from <code>stream</code> into <code>doc</code> at the\n+   * specified position <code>pos</code>.\n+   *\n+   * @param stream the {@link InputStream} from where we read RTF data\n+   * @param doc the {@link Document} into which we read the RTF data\n+   * @param pos the position where to start\n+   *\n+   * @throws IOException if an IO error occurs\n+   * @throws BadLocationException if the position is not valid\n+   */\n+  public void read(InputStream stream, Document doc, int pos)\n+    throws IOException, BadLocationException\n+  {\n+    RTFParser parser = new RTFParser(stream, doc, pos);\n+    parser.parse();\n+  }\n+\n+\n+  /**\n+   * Reads RTF data from <code>reader</code> into <code>doc</code> at the\n+   * specified position <code>pos</code>.\n+   *\n+   * @param reader the {@link Reader} from where we read RTF data\n+   * @param doc the {@link Document} into which we read the RTF data\n+   * @param pos the position where to start\n+   *\n+   * @throws IOException if an IO error occurs\n+   * @throws BadLocationException if the position is not valid\n+   */\n+  public void read(Reader reader, Document doc, int pos)\n+    throws IOException, BadLocationException\n+  {\n+    RTFParser parser = new RTFParser(reader, doc, pos);\n+    parser.parse();\n+  }\n+}"}, {"sha": "dba51d2e0c38515bb8f3ed5e86ab0510af9a80e6", "filename": "libjava/javax/swing/text/rtf/RTFParseException.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFParseException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFParseException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFParseException.java?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -0,0 +1,65 @@\n+/* RTFParseException.java --\n+   Copyright (C) 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.swing.text.rtf;\n+\n+/**\n+ * Indicates a parsing error during RTF processing.\n+ *\n+ * @author Roman Kennke (roman@ontographics.com)\n+ */\n+class RTFParseException\n+  extends RuntimeException\n+{\n+  /**\n+   * Constructs a new RTFParseException without message.\n+   */\n+  public RTFParseException()\n+  {\n+    super();\n+  }\n+\n+  /**\n+   * Constructs a new RTFParseException with the specified message.\n+   */\n+  public RTFParseException(String message)\n+  {\n+    super(message);\n+  }\n+\n+}"}, {"sha": "fe837fbff3a34f22ef1ff5aaf99cb33660b1c92f", "filename": "libjava/javax/swing/text/rtf/RTFParser.java", "status": "added", "additions": 195, "deletions": 0, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFParser.java?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -0,0 +1,195 @@\n+/* RTFParser.java --\n+   Copyright (C) 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.swing.text.rtf;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.Reader;\n+\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Document;\n+\n+/**\n+ * Parses an RTF file into a {@link Document}. The parser utilizes\n+ * {@link RTFScanner}.\n+ *\n+ * @author Roman Kennke (roman@ontographics.com)\n+ */\n+class RTFParser\n+{\n+\n+  /**\n+   * Our scanner.\n+   */\n+  private RTFScanner scanner;\n+\n+  /**\n+   * The document into which we parse.\n+   */\n+  private Document doc;\n+\n+  /**\n+   * The current position.\n+   */\n+  private int pos;\n+\n+  /**\n+   * Constructs a new RTFParser for the specified document and position,\n+   * without initializing the scanner. This is only used internally.\n+   *\n+   * @param doc the {@link Document} into which we should parse\n+   * @param pos the position to start\n+   */\n+  private RTFParser(Document doc, int pos)\n+  {\n+    this.doc = doc;\n+    this.pos = pos;\n+  }\n+\n+  /**\n+   * Constructs a new RTFParser for the specified <code>stream</code>.\n+   *\n+   * @param stream the stream from which we parse\n+   * @param doc the {@link Document} into which we should parse\n+   * @param pos the position to start\n+   */\n+  public RTFParser(InputStream stream, Document doc, int pos)\n+  {\n+    this(doc, pos);\n+    scanner = new RTFScanner(stream);\n+  }\n+\n+  /**\n+   * Constructs a new RTFParser for the specified <code>reader</code>.\n+   *\n+   * @param reader the reader from which we parse\n+   * @param doc the {@link Document} into which we should parse\n+   * @param pos the position to start\n+   */\n+  public RTFParser(Reader reader, Document doc, int pos)\n+  {\n+    this(doc, pos);\n+    scanner = new RTFScanner(reader);\n+  }\n+\n+  /**\n+   * Returns the {@link Document} in which we parsed the RTF data.\n+   *\n+   * @return the {@link Document} in which we parsed the RTF data\n+   */\n+  public Document getDocument()\n+  {\n+    return doc;\n+  }\n+\n+  /**\n+   * Starts the parsing process.\n+   */\n+  public void parse()\n+    throws IOException, BadLocationException\n+  {\n+    parseFile();\n+  }\n+\n+  /**\n+   * The parse rules for &lt;file&gt;.\n+   */\n+  private void parseFile()\n+    throws IOException, BadLocationException\n+  {\n+    Token t1 = scanner.readToken();\n+    if (t1.type != Token.LCURLY)\n+      throw new RTFParseException(\"expected left curly braces\");\n+\n+    parseHeader();\n+    parseDocument();\n+  \n+    Token t2 = scanner.readToken();\n+    if (t2.type != Token.RCURLY)\n+      throw new RTFParseException(\"expected right curly braces\");\n+\n+  }\n+\n+  /**\n+   * The parse rules for &lt;header&gt;.\n+   *\n+   * TODO: implement this properly\n+   */\n+  private void parseHeader()\n+  //throws IOException, BadLocationException\n+  {\n+    // TODO add parse rules here\n+  }\n+\n+\n+  /**\n+   * The parse rules for &lt;document&gt;.\n+   *\n+   * TODO: implement this properly\n+   */\n+  private void parseDocument()\n+    throws IOException, BadLocationException\n+  {\n+    //  !!! TODO !!!\n+    // This simply emits every TEXT Token as text to the document\n+    // which is plain stupid\n+\n+    boolean eof = false;\n+\n+    do {\n+      Token token = scanner.readToken();\n+      switch (token.type)\n+        {\n+        case Token.TEXT:\n+          TextToken textToken = (TextToken) token;\n+          doc.insertString(pos, textToken.text, null);\n+          pos += textToken.text.length();\n+          break;\n+        case Token.EOF:\n+          eof = true;\n+          break;\n+        default:\n+          // FIXME\n+          break;\n+        }\n+    } while (!eof);\n+\n+  }\n+\n+}"}, {"sha": "d964a43472ca6a68bfd1b5f1cb92de66ef1e5a44", "filename": "libjava/javax/swing/text/rtf/RTFScanner.java", "status": "added", "additions": 268, "deletions": 0, "changes": 268, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFScanner.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFScanner.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FRTFScanner.java?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -0,0 +1,268 @@\n+/* RTFScanner.java --\n+   Copyright (C) 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.swing.text.rtf;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+\n+/**\n+ * Provides a scanner that scans an {@link InputStream} for tokens of the\n+ * RTF syntax.\n+ *\n+ * This scanner is based upon the RTF specification 1.6\n+ * available at:\n+ * \n+ * <a\n+ * href=\"http://msdn.microsoft.com/library/en-us/dnrtfspec/html/rtfspec.asp\">\n+ * RTF specification at MSDN</a>\n+ *\n+ * @author Roman Kennke (roman@ontographics.com)\n+ */\n+class RTFScanner\n+{\n+\n+  /**\n+   * The reader from which we read the RTF data.\n+   */\n+  private Reader in;\n+\n+  /**\n+   * This is used to constuct strings from the read in chars.\n+   */\n+  private StringBuffer buffer;\n+\n+  /**\n+   * Constructs a new RTFScanner without initializing the {@link Reader}.\n+   */\n+  private RTFScanner()\n+  {\n+    buffer = new StringBuffer();\n+  }\n+\n+  /**\n+   * Constructs a new RTFScanner for the given {@link InputStream}.\n+   * The stream is wrapped into an {@link InputStreamReader} and if it's\n+   * not yet buffered then the Reader is wrapped in a {@link BufferedReader}\n+   *\n+   * @param stream the {@link InputStream} to read RTF data from\n+   */\n+  public RTFScanner(InputStream stream)\n+  {\n+    this();\n+    InputStreamReader reader = new InputStreamReader(stream);\n+    in = new BufferedReader(reader);\n+  }\n+\n+  /**\n+   * Constructs a new RTFScanner for the given {@link Reader}.\n+   *\n+   * If the reader is not an instance of {@link BufferedReader} then it\n+   * is wrapped into a BufferedReader.\n+   *\n+   * @param reader the {@link BufferedReader} to read RTF data from\n+   */\n+  public RTFScanner(Reader reader)\n+  {\n+    this();\n+    if (reader instanceof BufferedReader)\n+      {\n+        in = reader;\n+      }\n+    else\n+      {\n+        in = new BufferedReader(reader);\n+      }\n+  }\n+\n+  /**\n+   * Reads in the next {@link Token} from the stream.\n+   *\n+   * @return the read {@link Token}\n+   *\n+   * @throws IOException if the underlying stream has problems\n+   */\n+  public Token readToken()\n+    throws IOException\n+  {\n+    Token token = null;\n+\n+    int c = in.read();\n+    switch(c)\n+      {\n+      case -1:\n+        token = new Token(Token.EOF);\n+        break;\n+\n+      case '{':\n+        token = new Token(Token.LCURLY);\n+        break;\n+\n+      case '}':\n+        token = new Token(Token.RCURLY);\n+        break;\n+\n+      case '\\\\':\n+        buffer.delete(0, buffer.length());\n+        buffer.append((char) c);\n+        token = readControlWord();\n+        break;\n+\n+      default:\n+        buffer.delete(0, buffer.length());\n+        buffer.append((char) c);\n+        token = readText();\n+        break;\n+      }\n+\n+    return token;\n+  }\n+\n+  /**\n+   * Reads in a control word and optional parameter.\n+   *\n+   * @return the read in control word as {@link ControlWordToken}\n+   *\n+   * @throws IOException if the underlying stream has problems\n+   */\n+  private Token readControlWord()\n+    throws IOException\n+  {\n+    // this flag indicates if we are still reading the name or are already\n+    // in the parameter\n+    boolean readingName = true;\n+    String name = null;\n+    String param = null;\n+\n+    while (true)\n+      {\n+        in.mark(1);\n+        int c = in.read();\n+\n+        // check for 'a'..'z'\n+        if (readingName && (c >= 'a') && (c <= 'z'))\n+          {\n+            buffer.append((char) c);\n+          }\n+        else if ((c >= '0') && (c <= '9'))\n+          {\n+            // if the last char was in the name, then finish reading the name\n+            if (readingName)\n+              {\n+                name = buffer.toString();\n+                buffer.delete(0, buffer.length());\n+                readingName = false;\n+              }\n+            buffer.append((char) c);\n+          }\n+        else\n+          {\n+            // if we were in the name, then finish this\n+            if (readingName)\n+              {\n+                name = buffer.toString();\n+              }\n+            // otherwise finish the parameter\n+            else\n+              {\n+                param = buffer.toString();\n+              }\n+\n+            // clear up\n+            buffer.delete(0, buffer.length());\n+            // reset input buffer to last char\n+            in.reset();\n+            // break while loop\n+            break;\n+          }\n+      }\n+\n+    ControlWordToken token = null;\n+\n+    if (param == null)\n+      token = new ControlWordToken(name);\n+    else\n+      token =new ControlWordToken(name, Integer.parseInt(param));\n+\n+    return token;\n+\n+  }\n+\n+  /**\n+   * Reads in a block of text.\n+   *\n+   * @return the token for the text\n+   */\n+  private Token readText()\n+    throws IOException\n+  {\n+\n+    boolean readingText = true;\n+    while (readingText)\n+      {\n+        in.mark(1);\n+        int c = in.read();\n+        switch(c)\n+          {\n+          case '\\\\':\n+          case '{':\n+          case '}':\n+          case -1:\n+            readingText = false;\n+            in.reset();\n+            break;\n+\n+          default:\n+            buffer.append((char) c);\n+            break;\n+          }\n+\n+      }\n+\n+    String text = buffer.toString();\n+    Token token = new TextToken(text);\n+\n+    buffer.delete(0, buffer.length());\n+\n+    return token;\n+\n+  }\n+}"}, {"sha": "e326792cc1b95c14b06e18446bb3e2e12525b591", "filename": "libjava/javax/swing/text/rtf/TextToken.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FTextToken.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FTextToken.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FTextToken.java?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -0,0 +1,65 @@\n+/* TextToken.java --\n+   Copyright (C) 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.swing.text.rtf;\n+\n+/**\n+ * A special {@link Token} that represents a piece of text in RTF.\n+ *\n+ * @author Roman Kennke (roman@ontographics.com)\n+ */\n+class TextToken extends Token\n+{\n+\n+  /**\n+   * The text.\n+   */\n+  public String text;\n+\n+  /**\n+   * Constructs a new TextToken with the specified textual data.\n+   *\n+   * @param text the text for this token\n+   */\n+  public TextToken(String text)\n+  {\n+    super(Token.TEXT);\n+    this.text = text;\n+  }\n+\n+}"}, {"sha": "a7a955269dc793bf077648ce4adda9b0baebd20d", "filename": "libjava/javax/swing/text/rtf/Token.java", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FToken.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c273065a35be668be2c935b31be04d8a2c1198/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FToken.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2Frtf%2FToken.java?ref=f5c273065a35be668be2c935b31be04d8a2c1198", "patch": "@@ -0,0 +1,91 @@\n+/* Token.java --\n+   Copyright (C) 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.swing.text.rtf;\n+\n+/**\n+ * Represents a simple token that the RTFScanner can read. A simple\n+ * only has a type (like LCURLY or RCURLY). More complex tokens may\n+ * attach data to the token.\n+ *\n+ * @author Roman Kennke (roman@ontographics.com)\n+ */\n+class Token\n+{\n+\n+  /**\n+   * This special type inidicates the end of the input stream.\n+   */\n+  public static final int EOF = -1;\n+\n+  /**\n+   * A left curly brace '{'.\n+   */\n+  public static final int LCURLY = 1;\n+\n+  /**\n+   * A right curly brace '}'.\n+   */\n+  public static final int RCURLY = 2;\n+\n+  /**\n+   * A control word like '\\rtf1'. Tokens with this type are represented\n+   * through the subclass {@link ControlWordToken}.\n+   */\n+  public static final int CONTROL_WORD = 3;\n+\n+  /**\n+   * A token that contains text. This is represented through the subclass\n+   * {@link TextToken}.\n+   */\n+  public static final int TEXT = 4;\n+\n+\n+  /** The token type. */\n+  public int type;\n+\n+  /**\n+   * Constructs a new Token with the specified type.\n+   *\n+   * @param type the Token type\n+   */\n+  public Token(int type)\n+  {\n+    this.type = type;\n+  }\n+}"}]}