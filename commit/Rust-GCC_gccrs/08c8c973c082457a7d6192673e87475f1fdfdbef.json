{"sha": "08c8c973c082457a7d6192673e87475f1fdfdbef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhjOGM5NzNjMDgyNDU3YTdkNjE5MjY3M2U4NzQ3NWYxZmRmZGJlZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-14T18:59:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-14T20:20:12Z"}, "message": "PR c++/92590 - wrong handling of inherited default ctor.\n\nI thought my earlier fix for 91930 was an obvious bug fix, but apparently an\ninherited constructor does not count as user-declared.  So this patch\nreverts that change and the other follow-on patches, and fixes 91930\ndifferently, by not letting the inherited default constructor hide the\nimplicitly-declared default constructor.\n\n\t* class.c (add_method): A constrained inherited ctor doesn't hide an\n\timplicit derived ctor.\n\n\tRevert:\n\tPR c++/91930 - ICE with constrained inherited default ctor.\n\t* name-lookup.c (do_class_using_decl): Set TYPE_HAS_USER_CONSTRUCTOR\n\tfor inherited constructor.\n\tPR c++/92552 - ICE with inherited constrained default ctor.\n\t* pt.c (instantiate_class_template_1): Copy\n\tTYPE_HAS_USER_CONSTRUCTOR.\n\tPR c++/92594 - ICE with inherited trivial default ctor.\n\t* method.c (trivial_fn_p): Treat an inherited default constructor\n\tlike a normal default constructor.", "tree": {"sha": "b04556341be3025f2077cdc3fe0e0c9fa9122bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b04556341be3025f2077cdc3fe0e0c9fa9122bcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08c8c973c082457a7d6192673e87475f1fdfdbef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c8c973c082457a7d6192673e87475f1fdfdbef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c8c973c082457a7d6192673e87475f1fdfdbef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c8c973c082457a7d6192673e87475f1fdfdbef/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5a3c2dcf73aa245b0eb6f6cf56c4d03ab6056da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a3c2dcf73aa245b0eb6f6cf56c4d03ab6056da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a3c2dcf73aa245b0eb6f6cf56c4d03ab6056da"}], "stats": {"total": 64, "additions": 44, "deletions": 20}, "files": [{"sha": "c13753985173c8aefb5162fe89546acef500ea70", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -14,6 +14,20 @@\n \n 2020-01-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/92590 - wrong handling of inherited default ctor.\n+\t* class.c (add_method): A constrained inherited ctor doesn't hide an\n+\timplicit derived ctor.\n+\tRevert:\n+\tPR c++/92552 - ICE with inherited constrained default ctor.\n+\t* pt.c (instantiate_class_template_1): Copy\n+\tTYPE_HAS_USER_CONSTRUCTOR.\n+\tPR c++/91930 - ICE with constrained inherited default ctor.\n+\t* name-lookup.c (do_class_using_decl): Set TYPE_HAS_USER_CONSTRUCTOR\n+\tfor inherited constructor.\n+\tPR c++/92594 - ICE with inherited trivial default ctor.\n+\t* method.c (trivial_fn_p): Treat an inherited default constructor\n+\tlike a normal default constructor.\n+\n \tPR c++/92594 - ICE with inherited trivial default ctor.\n \t* method.c (trivial_fn_p): Treat an inherited default constructor\n \tlike a normal default constructor."}, {"sha": "719c3ece6e1bc990fa0b4fd3a9e665383c94a641", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -1079,9 +1079,10 @@ add_method (tree type, tree method, bool via_using)\n \t    {\n \t      special_function_kind sfk = special_memfn_p (method);\n \n-\t      if (sfk == sfk_none)\n+\t      if (sfk == sfk_none || DECL_INHERITED_CTOR (fn))\n \t\t/* Non-special member functions coexist if they are not\n-\t\t   equivalently constrained.  */\n+\t\t   equivalently constrained.  A member function is not hidden\n+\t\t   by an inherited constructor.  */\n \t\tcontinue;\n \n \t      /* P0848: For special member functions, deleted, unsatisfied, or"}, {"sha": "fef19e18196b991c0beab6a7c22ca07bdea003a5", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -458,12 +458,7 @@ trivial_fn_p (tree fn)\n   /* If fn is a clone, get the primary variant.  */\n   if (tree prim = DECL_CLONED_FUNCTION (fn))\n     fn = prim;\n-  special_function_kind sfk = special_function_p (fn);\n-  /* An inherited default constructor is equivalent to a non-inherited default\n-     constructor, so let it be trivial.  */\n-  if (sfk == sfk_inheriting_constructor && default_ctor_p (fn))\n-    sfk = sfk_constructor;\n-  return type_has_trivial_fn (DECL_CONTEXT (fn), sfk);\n+  return type_has_trivial_fn (DECL_CONTEXT (fn), special_function_p (fn));\n }\n \n /* PARM is a PARM_DECL for a function which we want to forward to another"}, {"sha": "cd7a5816e463c116a04c88a1731f0daaaed423e4", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -4634,7 +4634,6 @@ lookup_using_decl (tree scope, name_lookup &lookup)\n \t  maybe_warn_cpp0x (CPP0X_INHERITING_CTORS);\n \t  lookup.name = ctor_identifier;\n \t  CLASSTYPE_NON_AGGREGATE (current) = true;\n-\t  TYPE_HAS_USER_CONSTRUCTOR (current) = true;\n     \t}\n \n       /* Cannot introduce a constructor name.  */"}, {"sha": "7e675ce9039f5e564a7b3632fcd8b885656e91ee", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -11578,7 +11578,6 @@ instantiate_class_template_1 (tree type)\n   SET_TYPE_ALIGN (type, TYPE_ALIGN (pattern));\n   TYPE_USER_ALIGN (type) = TYPE_USER_ALIGN (pattern);\n   CLASSTYPE_NON_AGGREGATE (type) = CLASSTYPE_NON_AGGREGATE (pattern);\n-  TYPE_HAS_USER_CONSTRUCTOR (type) = TYPE_HAS_USER_CONSTRUCTOR (pattern);\n   if (ANON_AGGR_TYPE_P (pattern))\n     SET_ANON_AGGR_TYPE_P (type);\n   if (CLASSTYPE_VISIBILITY_SPECIFIED (pattern))"}, {"sha": "abfe96e824019ef898f718d5b7f4746196e8cbfa", "filename": "gcc/testsuite/g++.dg/concepts/inherit-ctor3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Finherit-ctor3.C?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -11,13 +11,13 @@ template<typename T>\n   };\n \n template<typename T>\n-  struct S2 : S1<T> {\n+  struct S2 : S1<T> { // { dg-error \"no matching function\" }\n     using S1<T>::S1; // { dg-error \"no matching function\" }\n   };\n \n struct X { } x;\n \n int main() {\n   S2<X> s1(0); // { dg-error \"use of deleted function\" }\n-  S2<X> s2; // { dg-error \"no matching function\" }\n+  S2<X> s2; // { dg-error \"use of deleted function\" }\n }"}, {"sha": "0ec4393884897f6a8e97ff8e4a1012b1d5c5cf27", "filename": "gcc/testsuite/g++.dg/cpp0x/inh-ctor35.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor35.C?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/92590\n+// { dg-do compile { target c++11 } }\n+\n+class Base {\n+  protected:\n+    Base();\n+};\n+\n+class Derived : public Base {\n+  public:\n+    using Base::Base;\n+};\n+\n+Derived d;"}, {"sha": "d0038c16a142f6dbb3d7bda2efc3e11def0f32f9", "filename": "gcc/testsuite/g++.dg/cpp0x/inh-ctor5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor5.C?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -6,13 +6,13 @@ struct B1 {\n struct B2 {\n   B2(double) { }\n };\n-struct D1 : B1 {\n+struct D1 : B1 {    // { dg-error \"no match\" }\n   using B1::B1;\t    // implicitly declares D1(int)\n   int x;\n };\n void test() {\n   D1 d(6);\t    // OK: d.x is not initialized\n-  D1 e;\t\t    // { dg-error \"no match\" } D1 has no default constructor\n+  D1 e;\t\t    // { dg-error \"deleted\" } D1 has no default constructor\n }\n struct D2 : B2 {\n   using B2::B2;\t    // { dg-error \"B1::B1\" }"}, {"sha": "02ec58a3e8e0e746a7a5371e705707cf631de6a2", "filename": "gcc/testsuite/g++.dg/cpp1z/inh-ctor22.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor22.C?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -12,7 +12,7 @@ struct B2 {\n \n int get();\n \n-struct D1 : B1 {\n+struct D1 : B1 {\t\t// { dg-message \"B1::B1\" }\n   using B1::B1;  // inherits B1(int, ...)\n   int x;\n   int y = get();\n@@ -22,7 +22,7 @@ void test() {\n   D1 d(2, 3, 4); // OK: B1 is initialized by calling B1(2, 3, 4),\n   // then d.x is default-initialized (no initialization is performed),\n   // then d.y is initialized by calling get()\n-  D1 e;          // { dg-error \"\" } D1 has no default constructor\n+  D1 e;          // { dg-error \"\" } D1 has a deleted default constructor\n }\n \n struct D2 : B2 {"}, {"sha": "aa244bc04c1222d1aee680910d178563addb2b1f", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-inherit-ctor2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor2.C?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -9,10 +9,10 @@ template<typename T>\n   };\n \n template<typename T>\n-  struct S2 : S1<T> {\n+  struct S2 : S1<T> { // { dg-error \"matching\" }\n     using S1<T>::S1;\n   };\n \n int main() {\n-  S2<int> s; // { dg-error \"no matching function\" }\n+  S2<int> s; // { dg-error \"deleted function\" }\n }"}, {"sha": "691628e787817eab00bc2c9191cd60a5a5d6e080", "filename": "gcc/testsuite/g++.dg/template/crash7.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash7.C?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -10,4 +10,6 @@ template <typename> struct A\n     template <typename> A(typename A::X) {} // { dg-error \"incomplete\" }\n };\n \n-A<void> a;\t\t\t// { dg-message \"no match\" }\n+// We currently don't give the \"no match\" error because we don't add the\n+// invalid constructor template to TYPE_METHODS.\n+A<void> a;\t\t\t// { dg-message \"required\" }"}, {"sha": "2e65718b67957f8f304c26cfc2bc95750944a933", "filename": "gcc/testsuite/g++.old-deja/g++.pt/error2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c8c973c082457a7d6192673e87475f1fdfdbef/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ferror2.C?ref=08c8c973c082457a7d6192673e87475f1fdfdbef", "patch": "@@ -9,7 +9,7 @@ public:\n \n void f ()\n {\n-  Test<void> c; // { dg-error \"no match\" }\n+  Test<void> c; // { dg-message \"required\" }\n }\n \n "}]}