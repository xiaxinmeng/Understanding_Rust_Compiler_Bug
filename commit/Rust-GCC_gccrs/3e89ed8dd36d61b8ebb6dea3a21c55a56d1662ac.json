{"sha": "3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U4OWVkOGRkMzZkNjFiOGViYjZkZWEzYTIxYzU1YTU2ZDE2NjJhYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-01-20T22:16:59Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-01-20T22:16:59Z"}, "message": "emit-rtl.c (verify_rtx_sharing, [...]): Clobbers containing hard regs are shared.\n\n\n\t* emit-rtl.c (verify_rtx_sharing, copy_insn_1,\n\temit_copy_of_insn_after, emit_copy_of_insn_after): Clobbers\n\tcontaining hard regs are shared.\n\t(gen_hard_reg_clobber): New function.\n\t(hard_reg_clobbers): New array.\n\t* genemit.c (gen_exp): Use gen_hard_reg_clobber.\n\t(copy_rtx): Do not copy clobbers containing hard regs.\n\t* rtl.h (gen_hard_reg_clobber): Declare.\n\nFrom-SVN: r76233", "tree": {"sha": "4e90a38b800d7602fd7eb1d4fd8ad649cb0465f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e90a38b800d7602fd7eb1d4fd8ad649cb0465f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/comments", "author": null, "committer": null, "parents": [{"sha": "9b57b627f005582f50c30ada127a688c2b9e0f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b57b627f005582f50c30ada127a688c2b9e0f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b57b627f005582f50c30ada127a688c2b9e0f7f"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "31d731b36be0c23d9642db2fbb00946c3acf9234", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac", "patch": "@@ -1,3 +1,14 @@\n+2004-01-20  Jan Hubicka  <jh@suse.cz>\n+\n+\t* emit-rtl.c (verify_rtx_sharing, copy_insn_1,\n+\temit_copy_of_insn_after, emit_copy_of_insn_after): Clobbers\n+\tcontaining hard regs are shared.\n+\t(gen_hard_reg_clobber): New function.\n+\t(hard_reg_clobbers): New array.\n+\t* genemit.c (gen_exp): Use gen_hard_reg_clobber.\n+\t(copy_rtx): Do not copy clobbers containing hard regs.\n+\t* rtl.h (gen_hard_reg_clobber): Declare.\n+\n 2004-01-20  Jan Hubicka  <jh@suse.cz>\n \n \t* varray.c:  Include hashtab.h"}, {"sha": "cdb0c2a3c31676050c433143f864459a1a228160", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac", "patch": "@@ -2231,8 +2231,12 @@ verify_rtx_sharing (rtx orig, rtx insn)\n     case PC:\n     case CC0:\n     case SCRATCH:\n-      /* SCRATCH must be shared because they represent distinct values.  */\n       return;\n+      /* SCRATCH must be shared because they represent distinct values.  */\n+    case CLOBBER:\n+      if (REG_P (XEXP (x, 0)) && REGNO (XEXP (x, 0)) < FIRST_PSEUDO_REGISTER)\n+\treturn;\n+      break;\n \n     case CONST:\n       /* CONST can be shared if it contains a SYMBOL_REF.  If it contains\n@@ -2527,6 +2531,10 @@ copy_rtx_if_shared_1 (rtx *orig1)\n     case SCRATCH:\n       /* SCRATCH must be shared because they represent distinct values.  */\n       return;\n+    case CLOBBER:\n+      if (REG_P (XEXP (x, 0)) && REGNO (XEXP (x, 0)) < FIRST_PSEUDO_REGISTER)\n+\treturn;\n+      break;\n \n     case CONST:\n       /* CONST can be shared if it contains a SYMBOL_REF.  If it contains\n@@ -5020,6 +5028,10 @@ copy_insn_1 (rtx orig)\n     case CC0:\n     case ADDRESSOF:\n       return orig;\n+    case CLOBBER:\n+      if (REG_P (XEXP (orig, 0)) && REGNO (XEXP (orig, 0)) < FIRST_PSEUDO_REGISTER)\n+\treturn orig;\n+      break;\n \n     case SCRATCH:\n       for (i = 0; i < copy_insn_n_scratches; i++)\n@@ -5536,4 +5548,15 @@ emit_copy_of_insn_after (rtx insn, rtx after)\n   return new;\n }\n \n+static GTY((deletable(\"\"))) rtx hard_reg_clobbers [NUM_MACHINE_MODES][FIRST_PSEUDO_REGISTER];\n+rtx\n+gen_hard_reg_clobber (enum machine_mode mode, unsigned int regno)\n+{\n+  if (hard_reg_clobbers[mode][regno])\n+    return hard_reg_clobbers[mode][regno];\n+  else\n+    return (hard_reg_clobbers[mode][regno] =\n+\t    gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (mode, regno)));\n+}\n+\n #include \"gt-emit-rtl.h\""}, {"sha": "0ab88b00dd40b4a6295d34b7408919ad70ba731c", "filename": "gcc/genemit.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac", "patch": "@@ -217,6 +217,14 @@ gen_exp (rtx x, enum rtx_code subroutine_type, char *used)\n     case PC:\n       printf (\"pc_rtx\");\n       return;\n+    case CLOBBER:\n+      if (REG_P (XEXP (x, 0)))\n+\t{\n+\t  printf (\"gen_hard_reg_clobber (%smode, %i)\", GET_MODE_NAME (GET_MODE (XEXP (x, 0))),\n+\t\t\t  \t\t\t     REGNO (XEXP (x, 0)));\n+\t  return;\n+\t}\n+      break;\n \n     case CC0:\n       printf (\"cc0_rtx\");"}, {"sha": "87ffcbbb3003c77da5898d395a4432d788f49973", "filename": "gcc/rtl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac", "patch": "@@ -224,6 +224,10 @@ copy_rtx (rtx orig)\n       /* SCRATCH must be shared because they represent distinct values.  */\n     case ADDRESSOF:\n       return orig;\n+    case CLOBBER:\n+      if (REG_P (XEXP (orig, 0)) && REGNO (XEXP (orig, 0)) < FIRST_PSEUDO_REGISTER)\n+\treturn orig;\n+      break;\n \n     case CONST:\n       /* CONST can be shared if it contains a SYMBOL_REF.  If it contains"}, {"sha": "c1949f18e126a35fa7126100f69b9597acd53e2a", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=3e89ed8dd36d61b8ebb6dea3a21c55a56d1662ac", "patch": "@@ -2308,6 +2308,7 @@ extern void end_alias_analysis (void);\n extern rtx addr_side_effect_eval (rtx, int, int);\n extern bool memory_modified_in_insn_p (rtx, rtx);\n extern rtx find_base_term (rtx);\n+extern rtx gen_hard_reg_clobber (enum machine_mode, unsigned int);\n \n /* In sibcall.c */\n typedef enum {"}]}