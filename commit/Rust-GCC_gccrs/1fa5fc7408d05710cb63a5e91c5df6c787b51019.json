{"sha": "1fa5fc7408d05710cb63a5e91c5df6c787b51019", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZhNWZjNzQwOGQwNTcxMGNiNjNhNWU5MWM1ZGY2Yzc4N2I1MTAxOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-21T22:58:14Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-22T19:54:03Z"}, "message": "runtime: remove scase.releasetime field\n\nThis is the gofrontend version of https://golang.org/cl/245122.\nOriginal CL description:\n\n    selectgo will report at most one block event, so there's no need to\n    keep a releasetime for every select case. It suffices to simply track\n    the releasetime of the case responsible for the wakeup.\n\n    Updates golang/go#40410.\n\nThis is being brought over to gofrontend as a step toward upgrading to\nGo1.16beta1.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/279732", "tree": {"sha": "f2eabda05e2cfcaca5cd88e30d2a8f11ef25567a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2eabda05e2cfcaca5cd88e30d2a8f11ef25567a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fa5fc7408d05710cb63a5e91c5df6c787b51019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa5fc7408d05710cb63a5e91c5df6c787b51019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fa5fc7408d05710cb63a5e91c5df6c787b51019", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa5fc7408d05710cb63a5e91c5df6c787b51019/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffd454b92ba6ff5499cf57f82a2b0f4cee59978c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffd454b92ba6ff5499cf57f82a2b0f4cee59978c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffd454b92ba6ff5499cf57f82a2b0f4cee59978c"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "bfc7856cce516fccdb21b42c3d07d65019a4a793", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa5fc7408d05710cb63a5e91c5df6c787b51019/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa5fc7408d05710cb63a5e91c5df6c787b51019/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=1fa5fc7408d05710cb63a5e91c5df6c787b51019", "patch": "@@ -1,4 +1,4 @@\n-f9e44c6e510df9f047dbe28eb5fa19642e350f8f\n+c8456995b0118a92820c6c1d8f996d4b1adf55c2\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "12e783010db3291421bec3a3db802bbacb28c406", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa5fc7408d05710cb63a5e91c5df6c787b51019/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa5fc7408d05710cb63a5e91c5df6c787b51019/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=1fa5fc7408d05710cb63a5e91c5df6c787b51019", "patch": "@@ -8908,11 +8908,10 @@ Channel_type::select_case_type()\n       Type* uint16_type = Type::lookup_integer_type(\"uint16\");\n       Type* int64_type = Type::lookup_integer_type(\"int64\");\n       scase_type =\n-\tType::make_builtin_struct_type(4,\n+\tType::make_builtin_struct_type(3,\n \t\t\t\t       \"c\", unsafe_pointer_type,\n \t\t\t\t       \"elem\", unsafe_pointer_type,\n-\t\t\t\t       \"kind\", uint16_type,\n-\t\t\t\t       \"releasetime\", int64_type);\n+\t\t\t\t       \"kind\", uint16_type);\n       scase_type->set_is_struct_incomparable();\n     }\n   return scase_type;"}, {"sha": "81e00ec5a4e5c676d5011caead489c7ddf82afe3", "filename": "libgo/go/runtime/select.go", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa5fc7408d05710cb63a5e91c5df6c787b51019/libgo%2Fgo%2Fruntime%2Fselect.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa5fc7408d05710cb63a5e91c5df6c787b51019/libgo%2Fgo%2Fruntime%2Fselect.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fselect.go?ref=1fa5fc7408d05710cb63a5e91c5df6c787b51019", "patch": "@@ -32,10 +32,9 @@ const (\n // Known to compiler.\n // Changes here must also be made in src/cmd/internal/gc/select.go's scasetype.\n type scase struct {\n-\tc           *hchan         // chan\n-\telem        unsafe.Pointer // data element\n-\tkind        uint16\n-\treleasetime int64\n+\tc    *hchan         // chan\n+\telem unsafe.Pointer // data element\n+\tkind uint16\n }\n \n func sellock(scases []scase, lockorder []uint16) {\n@@ -151,9 +150,6 @@ func selectgo(cas0 *scase, order0 *uint16, ncases int) (int, bool) {\n \tvar t0 int64\n \tif blockprofilerate > 0 {\n \t\tt0 = cputicks()\n-\t\tfor i := 0; i < ncases; i++ {\n-\t\t\tscases[i].releasetime = -1\n-\t\t}\n \t}\n \n \t// The compiler rewrites selects that statically have\n@@ -241,6 +237,7 @@ loop:\n \tvar dfl *scase\n \tvar casi int\n \tvar cas *scase\n+\tvar caseReleaseTime int64 = -1\n \tvar recvOK bool\n \tfor i := 0; i < ncases; i++ {\n \t\tcasi = int(pollorder[i])\n@@ -361,13 +358,13 @@ loop:\n \t\tif k.kind == caseNil {\n \t\t\tcontinue\n \t\t}\n-\t\tif sglist.releasetime > 0 {\n-\t\t\tk.releasetime = sglist.releasetime\n-\t\t}\n \t\tif sg == sglist {\n \t\t\t// sg has already been dequeued by the G that woke us up.\n \t\t\tcasi = int(casei)\n \t\t\tcas = k\n+\t\t\tif sglist.releasetime > 0 {\n+\t\t\t\tcaseReleaseTime = sglist.releasetime\n+\t\t\t}\n \t\t} else {\n \t\t\tc = k.c\n \t\t\tif k.kind == caseSend {\n@@ -465,8 +462,8 @@ send:\n \tgoto retc\n \n retc:\n-\tif cas.releasetime > 0 {\n-\t\tblockevent(cas.releasetime-t0, 1)\n+\tif caseReleaseTime > 0 {\n+\t\tblockevent(caseReleaseTime-t0, 1)\n \t}\n \n \t// Check preemption, since unlike gc we don't check on every call."}]}