{"sha": "7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EyYmY3YWYxMjBiMzVmMDgwYjQxNjBlNDVkOGNlYjc4Y2YyYjVhMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-01-01T12:39:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-01-01T12:39:22Z"}, "message": "* config/sparc/sparc.md: Test TARGET_ARCH64 instead of TARGET_PTR64.\n\nFrom-SVN: r38586", "tree": {"sha": "26aafed6b7d4d2bc7de57a36b4a1ef333f505f3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26aafed6b7d4d2bc7de57a36b4a1ef333f505f3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1/comments", "author": null, "committer": null, "parents": [{"sha": "1ad036cf726b5643b0c699d7369f44eecdeb6282", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ad036cf726b5643b0c699d7369f44eecdeb6282", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ad036cf726b5643b0c699d7369f44eecdeb6282"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "2a0eaa028188121888796cbf25904b8f9fe0208e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1", "patch": "@@ -1,3 +1,7 @@\n+Mon Jan  1 07:38:33 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* config/sparc/sparc.md: Test TARGET_ARCH64 instead of TARGET_PTR64.\n+\n 2001-01-01  Michael Hayes  <mhayes@redhat.com>\n \n \t* loop.c (check_insn_for_bivs): Use ivs->n_regs to check array bounds."}, {"sha": "70b018c26ef6942f45e25f1d2cc239f7cbee41ee", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=7a2bf7af120b35f080b4160e45d8ceb78cf2b5a1", "patch": "@@ -2577,9 +2577,9 @@\n (define_insn \"*movdi_insn_sp64_novis\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,r,r,m,?e,?e,?m\")\n         (match_operand:DI 1 \"input_operand\"   \"rI,K,J,m,rJ,e,m,e\"))]\n-  \"TARGET_ARCH64 && ! TARGET_VIS &&\n-   (register_operand (operands[0], DImode)\n-    || reg_or_0_operand (operands[1], DImode))\"\n+  \"TARGET_ARCH64 && ! TARGET_VIS\n+   && (register_operand (operands[0], DImode)\n+       || reg_or_0_operand (operands[1], DImode))\"\n   \"@\n    mov\\\\t%1, %0\n    sethi\\\\t%%hi(%a1), %0\n@@ -8471,14 +8471,14 @@\n (define_insn \"*tablejump_sp32\"\n   [(set (pc) (match_operand:SI 0 \"address_operand\" \"p\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n-  \"! TARGET_PTR64\"\n+  \"! TARGET_ARCH64\"\n   \"jmp\\\\t%a0%#\"\n   [(set_attr \"type\" \"uncond_branch\")])\n \n (define_insn \"*tablejump_sp64\"\n   [(set (pc) (match_operand:DI 0 \"address_operand\" \"p\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n-  \"TARGET_PTR64\"\n+  \"TARGET_ARCH64\"\n   \"jmp\\\\t%a0%#\"\n   [(set_attr \"type\" \"uncond_branch\")])\n \n@@ -8584,7 +8584,7 @@\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:SI 15))]\n   ;;- Do not use operand 1 for most machines.\n-  \"! TARGET_PTR64\"\n+  \"! TARGET_ARCH64\"\n   \"call\\\\t%a0, %1%#\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -8593,7 +8593,7 @@\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:SI 15))]\n   ;;- Do not use operand 1 for most machines.\n-  \"! TARGET_PTR64\"\n+  \"! TARGET_ARCH64\"\n   \"call\\\\t%a0, %1%#\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -8602,7 +8602,7 @@\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:DI 15))]\n   ;;- Do not use operand 1 for most machines.\n-  \"TARGET_PTR64\"\n+  \"TARGET_ARCH64\"\n   \"call\\\\t%a0, %1%#\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -8611,7 +8611,7 @@\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:DI 15))]\n   ;;- Do not use operand 1 for most machines.\n-  \"TARGET_PTR64\"\n+  \"TARGET_ARCH64\"\n   \"call\\\\t%a0, %1%#\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -8706,7 +8706,7 @@\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (reg:SI 15))]\n   ;;- Do not use operand 2 for most machines.\n-  \"! TARGET_PTR64\"\n+  \"! TARGET_ARCH64\"\n   \"call\\\\t%a1, %2%#\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -8716,7 +8716,7 @@\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (reg:SI 15))]\n   ;;- Do not use operand 2 for most machines.\n-  \"! TARGET_PTR64\"\n+  \"! TARGET_ARCH64\"\n   \"call\\\\t%a1, %2%#\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -8726,7 +8726,7 @@\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (reg:DI 15))]\n   ;;- Do not use operand 2 for most machines.\n-  \"TARGET_PTR64\"\n+  \"TARGET_ARCH64\"\n   \"call\\\\t%a1, %2%#\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -8736,7 +8736,7 @@\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (reg:DI 15))]\n   ;;- Do not use operand 2 for most machines.\n-  \"TARGET_PTR64\"\n+  \"TARGET_ARCH64\"\n   \"call\\\\t%a1, %2%#\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -8780,15 +8780,15 @@\n   [(call (mem:SI (match_operand:SI 0 \"symbolic_operand\" \"s\"))\n \t (match_operand 1 \"\" \"\"))\n    (return)]\n-  \"! TARGET_PTR64\"\n+  \"! TARGET_ARCH64\"\n   \"* return output_sibcall(insn, operands[0]);\"\n   [(set_attr \"type\" \"sibcall\")])\n \n (define_insn \"*sibcall_symbolic_sp64\"\n   [(call (mem:SI (match_operand:DI 0 \"symbolic_operand\" \"s\"))\n \t (match_operand 1 \"\" \"\"))\n    (return)]\n-  \"TARGET_PTR64\"\n+  \"TARGET_ARCH64\"\n   \"* return output_sibcall(insn, operands[0]);\"\n   [(set_attr \"type\" \"sibcall\")])\n \n@@ -8804,7 +8804,7 @@\n \t(call (mem:SI (match_operand:SI 1 \"symbolic_operand\" \"s\"))\n \t      (match_operand 2 \"\" \"\")))\n    (return)]\n-  \"! TARGET_PTR64\"\n+  \"! TARGET_ARCH64\"\n   \"* return output_sibcall(insn, operands[1]);\"\n   [(set_attr \"type\" \"sibcall\")])\n \n@@ -8813,7 +8813,7 @@\n \t(call (mem:SI (match_operand:DI 1 \"symbolic_operand\" \"s\"))\n \t      (match_operand 2 \"\" \"\")))\n    (return)]\n-  \"TARGET_PTR64\"\n+  \"TARGET_ARCH64\"\n   \"* return output_sibcall(insn, operands[1]);\"\n   [(set_attr \"type\" \"sibcall\")])\n \n@@ -8913,13 +8913,13 @@\n \n (define_insn \"*branch_sp32\"\n   [(set (pc) (match_operand:SI 0 \"address_operand\" \"p\"))]\n-  \"! TARGET_PTR64\"\n+  \"! TARGET_ARCH64\"\n  \"jmp\\\\t%a0%#\"\n  [(set_attr \"type\" \"uncond_branch\")])\n  \n (define_insn \"*branch_sp64\"\n   [(set (pc) (match_operand:DI 0 \"address_operand\" \"p\"))]\n-  \"TARGET_PTR64\"\n+  \"TARGET_ARCH64\"\n   \"jmp\\\\t%a0%#\"\n   [(set_attr \"type\" \"uncond_branch\")])\n "}]}