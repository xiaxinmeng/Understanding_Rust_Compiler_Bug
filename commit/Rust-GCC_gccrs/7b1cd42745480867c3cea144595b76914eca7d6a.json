{"sha": "7b1cd42745480867c3cea144595b76914eca7d6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IxY2Q0Mjc0NTQ4MDg2N2MzY2VhMTQ0NTk1Yjc2OTE0ZWNhN2Q2YQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-02-05T20:15:57Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-02-05T20:15:57Z"}, "message": "altivec.md (altivec_vsum2sws): Adjust code generation for -maltivec=be.\n\ngcc:\n\n2014-02-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/altivec.md (altivec_vsum2sws): Adjust code\n\tgeneration for -maltivec=be.\n\t(altivec_vsumsws): Simplify redundant test.\n\ngcc/testsuite:\n\n2014-02-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.dg/vmx/sum2s.c: New.\n\t* gcc.dg/vmx/sum2s-be-order.c: New.\n\nFrom-SVN: r207521", "tree": {"sha": "655b38739a179f727b46d490db2eb571e2aed5f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/655b38739a179f727b46d490db2eb571e2aed5f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b1cd42745480867c3cea144595b76914eca7d6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1cd42745480867c3cea144595b76914eca7d6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b1cd42745480867c3cea144595b76914eca7d6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1cd42745480867c3cea144595b76914eca7d6a/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52a93551afbc508acad7dd315b4ed0fae0845cd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a93551afbc508acad7dd315b4ed0fae0845cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52a93551afbc508acad7dd315b4ed0fae0845cd2"}], "stats": {"total": 67, "additions": 62, "deletions": 5}, "files": [{"sha": "8bfc47abedabba20c253090216a8f40b11248a8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b1cd42745480867c3cea144595b76914eca7d6a", "patch": "@@ -1,3 +1,9 @@\n+2014-02-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/altivec.md (altivec_vsum2sws): Adjust code\n+\tgeneration for -maltivec=be.\n+\t(altivec_vsumsws): Simplify redundant test.\n+\n 2014-02-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* altivec.md (UNSPEC_VPACK_UNS_UNS_MOD_DIRECT): New unspec."}, {"sha": "c6d5eaec655e708c41e6022b3de5fe284eb155e2", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=7b1cd42745480867c3cea144595b76914eca7d6a", "patch": "@@ -1605,15 +1605,29 @@\n   \"vsum4s<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n+;; FIXME: For the following two patterns, the scratch should only be\n+;; allocated for !VECTOR_ELT_ORDER_BIG, and the instructions should\n+;; be emitted separately.\n (define_insn \"altivec_vsum2sws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")]\n \t\t     UNSPEC_VSUM2SWS))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))\n+   (clobber (match_scratch:V4SI 3 \"=v\"))]\n   \"TARGET_ALTIVEC\"\n-  \"vsum2sws %0,%1,%2\"\n-  [(set_attr \"type\" \"veccomplex\")])\n+{\n+  if (VECTOR_ELT_ORDER_BIG)\n+    return \"vsum2sws %0,%1,%2\";\n+  else\n+    return \"vsldoi %3,%2,%2,12\\n\\tvsum2sws %3,%1,%3\\n\\tvsldoi %0,%3,%3,4\";\n+}\n+  [(set_attr \"type\" \"veccomplex\")\n+   (set (attr \"length\")\n+     (if_then_else\n+       (match_test \"VECTOR_ELT_ORDER_BIG\")\n+       (const_string \"4\")\n+       (const_string \"12\")))])\n \n (define_insn \"altivec_vsumsws\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n@@ -1624,15 +1638,15 @@\n    (clobber (match_scratch:V4SI 3 \"=v\"))]\n   \"TARGET_ALTIVEC\"\n {\n-  if (BYTES_BIG_ENDIAN || VECTOR_ELT_ORDER_BIG)\n+  if (VECTOR_ELT_ORDER_BIG)\n     return \"vsumsws %0,%1,%2\";\n   else\n     return \"vspltw %3,%2,0\\n\\tvsumsws %3,%1,%3\\n\\tvspltw %0,%3,3\";\n }\n   [(set_attr \"type\" \"veccomplex\")\n    (set (attr \"length\")\n      (if_then_else\n-       (match_test \"(BYTES_BIG_ENDIAN || VECTOR_ELT_ORDER_BIG)\")\n+       (match_test \"(VECTOR_ELT_ORDER_BIG)\")\n        (const_string \"4\")\n        (const_string \"12\")))])\n "}, {"sha": "c81a00dfbaab3a25a7ad8132465ee2773d4c5064", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7b1cd42745480867c3cea144595b76914eca7d6a", "patch": "@@ -1,3 +1,8 @@\n+2014-02-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.dg/vmx/sum2s.c: New.\n+\t* gcc.dg/vmx/sum2s-be-order.c: New.\n+\n 2014-02-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gcc.dg/vmx/pack.c: New."}, {"sha": "0981cc1d52b7bab3cb7dad84953563f89d4d1e04", "filename": "gcc/testsuite/gcc.dg/vmx/sum2s-be-order.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fsum2s-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fsum2s-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fsum2s-be-order.c?ref=7b1cd42745480867c3cea144595b76914eca7d6a", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-options \"-maltivec=be -mabi=altivec -std=gnu99 -mno-vsx\" } */\n+\n+#include \"harness.h\"\n+\n+static void test()\n+{\n+  vector signed int vsia = {-10,1,2,3};\n+  vector signed int vsib = {100,101,102,-103};\n+  vector signed int vsir;\n+#if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n+  vector signed int vsier = {91,0,107,0};\n+#else\n+  vector signed int vsier = {0,92,0,-98};\n+#endif\n+\n+  vsir = vec_sum2s (vsia, vsib);\n+\n+  check (vec_all_eq (vsir, vsier), \"vsir\");\n+}"}, {"sha": "ded05be849cb863a7957cdc24771a1352e038d3b", "filename": "gcc/testsuite/gcc.dg/vmx/sum2s.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fsum2s.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cd42745480867c3cea144595b76914eca7d6a/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fsum2s.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fsum2s.c?ref=7b1cd42745480867c3cea144595b76914eca7d6a", "patch": "@@ -0,0 +1,13 @@\n+#include \"harness.h\"\n+\n+static void test()\n+{\n+  vector signed int vsia = {-10,1,2,3};\n+  vector signed int vsib = {100,101,102,-103};\n+  vector signed int vsir;\n+  vector signed int vsier = {0,92,0,-98};\n+\n+  vsir = vec_sum2s (vsia, vsib);\n+\n+  check (vec_all_eq (vsir, vsier), \"vsir\");\n+}"}]}