{"sha": "f9809ef57005409ee658294d6e8dad9ee8897e88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk4MDllZjU3MDA1NDA5ZWU2NTgyOTRkNmU4ZGFkOWVlODg5N2U4OA==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-08-28T18:09:44Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-08-28T18:09:44Z"}, "message": "Fortran - reject function entries with mismatched characteristics\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/87737\n\t* resolve.c (resolve_entries): For functions of type CHARACTER\n\ttighten the checks for matching characteristics.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/87737\n\t* gfortran.dg/entry_24.f90: New test.", "tree": {"sha": "dda4d9ba8f356fd98ef16a9878e328af79ee660d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dda4d9ba8f356fd98ef16a9878e328af79ee660d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9809ef57005409ee658294d6e8dad9ee8897e88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9809ef57005409ee658294d6e8dad9ee8897e88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9809ef57005409ee658294d6e8dad9ee8897e88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9809ef57005409ee658294d6e8dad9ee8897e88/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "754fca77e82a59d85c735a5aff49ee2b1ec4c6df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754fca77e82a59d85c735a5aff49ee2b1ec4c6df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754fca77e82a59d85c735a5aff49ee2b1ec4c6df"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "f641d0d4dae01e1f00d58911b1e58a719bda7a38", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9809ef57005409ee658294d6e8dad9ee8897e88/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9809ef57005409ee658294d6e8dad9ee8897e88/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f9809ef57005409ee658294d6e8dad9ee8897e88", "patch": "@@ -804,6 +804,15 @@ resolve_entries (gfc_namespace *ns)\n \t     the same string length, i.e. both len=*, or both len=4.\n \t     Having both len=<variable> is also possible, but difficult to\n \t     check at compile time.  */\n+\t  else if (ts->type == BT_CHARACTER\n+\t\t   && (el->sym->result->attr.allocatable\n+\t\t       != ns->entries->sym->result->attr.allocatable))\n+\t    {\n+\t      gfc_error (\"Function %s at %L has entry %s with mismatched \"\n+\t\t\t \"characteristics\", ns->entries->sym->name,\n+\t\t\t &ns->entries->sym->declared_at, el->sym->name);\n+\t      return;\n+\t    }\n \t  else if (ts->type == BT_CHARACTER && ts->u.cl && fts->u.cl\n \t\t   && (((ts->u.cl->length && !fts->u.cl->length)\n \t\t\t||(!ts->u.cl->length && fts->u.cl->length))"}, {"sha": "9773597f4e1b95e6a30c3e18b2256f609fb9afc7", "filename": "gcc/testsuite/gfortran.dg/entry_24.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9809ef57005409ee658294d6e8dad9ee8897e88/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9809ef57005409ee658294d6e8dad9ee8897e88/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fentry_24.f90?ref=f9809ef57005409ee658294d6e8dad9ee8897e88", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do compile }\n+! PR fortran/87737 - improve check on function entry characteristics\n+\n+function f() ! { dg-error \"mismatched characteristics\" }\n+  character(:), allocatable :: f\n+  character(1)              :: g\n+  f = 'f'\n+  return\n+entry g()\n+  g = 'g'\n+end\n+\n+function f2() ! { dg-error \"mismatched characteristics\" }\n+  character(1)              :: f2\n+  character(1), allocatable :: g2\n+  f2 = 'f'\n+  return\n+entry g2()\n+  g2 = 'g'\n+end"}]}