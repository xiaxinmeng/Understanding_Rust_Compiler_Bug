{"sha": "a765878ad73b612e03621b7a870a86cd2cd81e99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc2NTg3OGFkNzNiNjEyZTAzNjIxYjdhODcwYTg2Y2QyY2Q4MWU5OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-11-04T18:21:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-11-04T18:21:34Z"}, "message": "devirt-44.C (dg-options): Remove -fdump-tree-optimized.\n\n\t* g++.dg/ipa/devirt-44.C (dg-options): Remove -fdump-tree-optimized.\n\t* g++.dg/ipa/devirt-45.C (dg-options): Ditto.\n\t* g++.dg/tree-prof/morefunc.C (dg-final-use): Cleanup profile ipa dump.\n\t* g++.dg/tree-prof/reorder.C (dg-final-use): Ditto.\n\t* g++.dg/tree-prof/pr35545.C (dg-fina-use): Cleanup profile_estimate\n\tipa dump.\n\t* gcc.dg/fold-reassoc-3.c (dg-final): Fix scan string.\n\tCleanup original tree dump.\n\t* gcc.dg/tree-prof/20050826-2.c (dg-final-use): Cleanup dom1 tree dump.\n\t* gcc.dg/tree-prof/cmpsf-1.c (dg-final-use): Ditto.\n\t* gcc.dg/tree-ssa/pr61144.c (dg-final): Cleanup optimized tree dump.\n\nFrom-SVN: r217097", "tree": {"sha": "0fdb04641c1da80a693383765beb0309c2829e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fdb04641c1da80a693383765beb0309c2829e8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a765878ad73b612e03621b7a870a86cd2cd81e99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a765878ad73b612e03621b7a870a86cd2cd81e99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a765878ad73b612e03621b7a870a86cd2cd81e99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a765878ad73b612e03621b7a870a86cd2cd81e99/comments", "author": null, "committer": null, "parents": [{"sha": "8b06e1880ef8583a2aca30f0f5d414061b7da603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b06e1880ef8583a2aca30f0f5d414061b7da603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b06e1880ef8583a2aca30f0f5d414061b7da603"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "2a6599b02db670eaa08f2546c83b6829e5359e92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -1,3 +1,17 @@\n+2014-11-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* g++.dg/ipa/devirt-44.C (dg-options): Remove -fdump-tree-optimized.\n+\t* g++.dg/ipa/devirt-45.C (dg-options): Ditto.\n+\t* g++.dg/tree-prof/morefunc.C (dg-final-use): Cleanup profile ipa dump.\n+\t* g++.dg/tree-prof/reorder.C (dg-final-use): Ditto.\n+\t* g++.dg/tree-prof/pr35545.C (dg-fina-use): Cleanup profile_estimate\n+\tipa dump.\n+\t* gcc.dg/fold-reassoc-3.c (dg-final): Fix scan string.\n+\tCleanup original tree dump.\n+\t* gcc.dg/tree-prof/20050826-2.c (dg-final-use): Cleanup dom1 tree dump.\n+\t* gcc.dg/tree-prof/cmpsf-1.c (dg-final-use): Ditto.\n+\t* gcc.dg/tree-ssa/pr61144.c (dg-final): Cleanup optimized tree dump.\n+\n 2014-11-04  Martin Jambor  <mjambor@suse.cz>\n \n \t* g++/dg/ipa/devirt-40.C: Changed dump to not matching OBJ_TYPE_REF in\n@@ -10,7 +24,6 @@\n \n 2014-11-04  Andrew Stubbs  <ams@codesourcery.com>\n \n-\tgcc/testsuite/\n \t* gcc.target/powerpc/pr60102.c: Move dg-skip-if after dg-options.\n \t* gcc.target/powerpc/swaps-p8-12.c: Skip test if there would be\n \tconflicting -mcpu options.\n@@ -2256,10 +2269,10 @@\n \n \t* gcc.dg/tree-prof/peel-1.c: Update.\n \t* gcc.dg/tree-prof/unroll-1.c: Update.\n-\t* gcc.dg/gcc.dg/unroll_1.c: Update.\n-\t* gcc.dg/gcc.dg/unroll_2.c: Update.\n-\t* gcc.dg/gcc.dg/unroll_3.c: Update.\n-\t* gcc.dg/gcc.dg/unroll_4.c: Update.\n+\t* gcc.dg/unroll_1.c: Update.\n+\t* gcc.dg/unroll_2.c: Update.\n+\t* gcc.dg/unroll_3.c: Update.\n+\t* gcc.dg/unroll_4.c: Update.\n \n 2014-10-14  DJ Delorie  <dj@redhat.com>\n "}, {"sha": "cfc6e554459417e557dd4eebcc900ab074426686", "filename": "gcc/testsuite/g++.dg/ipa/devirt-44.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-44.C?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -fno-ipa-cp -fdump-ipa-inline-details -fno-early-inlining -fdump-tree-optimized\" } */\n+/* { dg-options \"-O3 -fno-ipa-cp -fdump-ipa-inline-details -fno-early-inlining\" } */\n struct A {\n   virtual int foo () {return 1;}\n   int wrapfoo () {foo();}"}, {"sha": "4616c951d900959fa991e9ac8f12723ba5740785", "filename": "gcc/testsuite/g++.dg/ipa/devirt-45.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-45.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-45.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-45.C?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -fno-ipa-cp -fdump-ipa-inline-details -fno-early-inlining -fdump-tree-optimized\" } */\n+/* { dg-options \"-O3 -fno-ipa-cp -fdump-ipa-inline-details -fno-early-inlining\" } */\n struct A {\n   virtual int foo () {return 1;}\n   int wrapfoo () {foo();}"}, {"sha": "722b4b00f1ff50d888933e0eed1d87d01fbb5c3b", "filename": "gcc/testsuite/g++.dg/tree-prof/morefunc.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fmorefunc.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fmorefunc.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fmorefunc.C?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -52,4 +52,4 @@ int main()\n }\n \n /* { dg-final-use { scan-ipa-dump-times \"Indirect call -> direct call\" 2 \"profile\" } } */\n-\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "4e84413c5686975223d9cb9eb75823134b522e40", "filename": "gcc/testsuite/g++.dg/tree-prof/pr35545.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpr35545.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpr35545.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpr35545.C?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -47,6 +47,6 @@ int main()\n \n }\n /* { dg-final-use { scan-ipa-dump \"Indirect call -> direct call\" \"profile_estimate\" } } */\n-/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */\n+/* { dg-final-use { cleanup-ipa-dump \"profile_estimate\" } } */\n /* { dg-final-use { scan-tree-dump-not \"OBJ_TYPE_REF\" \"optimized\" } } */\n /* { dg-final-use { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "41d6a159446324d9b2abe285f9fc47c929d1fa6f", "filename": "gcc/testsuite/g++.dg/tree-prof/reorder.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Freorder.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Freorder.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Freorder.C?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -45,4 +45,4 @@ int main()\n }\n \n /* { dg-final-use { scan-ipa-dump-times \"Indirect call -> direct call\" 2 \"profile\" } } */\n-\n+/* { dg-final-use { cleanup-ipa-dump \"profile\" } } */"}, {"sha": "be64527862840d5258d3f2592c47a69c26b12d25", "filename": "gcc/testsuite/gcc.dg/fold-reassoc-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-reassoc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-reassoc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-reassoc-3.c?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -13,5 +13,5 @@ foo (void)\n }\n \n /* { dg-final { scan-tree-dump-not \" - \" \"original\" } } */\n-/* { dg-final { scan-tree-dump-not \" \\\\\\+ \" \"original\" } } */\n-/* { dg-final { cleanup-tree-dump \"orginal\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\+ \" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "881a0fd81fe3e15f159603858801a646bb3ded23", "filename": "gcc/testsuite/gcc.dg/tree-prof/20050826-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2F20050826-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2F20050826-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2F20050826-2.c?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -73,3 +73,4 @@ main (void)\n }\n \n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"dom1\"} } */\n+/* { dg-final-use { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "a932c968b957dac3ce090989f6e8f8ee4331877e", "filename": "gcc/testsuite/gcc.dg/tree-prof/cmpsf-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcmpsf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcmpsf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcmpsf-1.c?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -182,3 +182,4 @@ main (void)\n }\n \n /* { dg-final-use { scan-tree-dump-not \"Invalid sum\" \"dom1\"} } */\n+/* { dg-final-use { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "d1427d0b80901bdc90491b3060086cc1db1cc85e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr61144.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61144.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a765878ad73b612e03621b7a870a86cd2cd81e99/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61144.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61144.c?ref=a765878ad73b612e03621b7a870a86cd2cd81e99", "patch": "@@ -5,3 +5,4 @@ static int dummy = 0;\n extern int foo __attribute__((__weak__, __alias__(\"dummy\")));\n int bar() { if (foo) return 1; return 0; }\n /* { dg-final { scan-tree-dump-not \"return 0\" \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}