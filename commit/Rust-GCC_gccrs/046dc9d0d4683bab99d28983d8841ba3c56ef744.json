{"sha": "046dc9d0d4683bab99d28983d8841ba3c56ef744", "node_id": "C_kwDOANBUbNoAKDA0NmRjOWQwZDQ2ODNiYWI5OWQyODk4M2Q4ODQxYmEzYzU2ZWY3NDQ", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-01-18T23:25:36Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-01-21T17:08:30Z"}, "message": "Darwin, fixincludes: Handle Apple Blocks in objc/runtime.h.\n\nThe macOS 13 SDK has unguarded Apple Blocks use in objc/runtime.h which\ncauses most of the objective-c tests to fail.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\nfixincludes/ChangeLog:\n\n\t* fixincl.x: Regenerate.\n\t* inclhack.def (darwin_objc_runtime_1): New hack.\n\t* tests/base/objc/runtime.h: New file.", "tree": {"sha": "e11d2e67ffea6acd4af80518659d1a2077c33c22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e11d2e67ffea6acd4af80518659d1a2077c33c22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/046dc9d0d4683bab99d28983d8841ba3c56ef744", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046dc9d0d4683bab99d28983d8841ba3c56ef744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/046dc9d0d4683bab99d28983d8841ba3c56ef744", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046dc9d0d4683bab99d28983d8841ba3c56ef744/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "442d2bdc1d2a98aba0b18aeaa3e87fa946ac8031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442d2bdc1d2a98aba0b18aeaa3e87fa946ac8031", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442d2bdc1d2a98aba0b18aeaa3e87fa946ac8031"}], "stats": {"total": 122, "additions": 117, "deletions": 5}, "files": [{"sha": "acb906eea296b3cd847d05f625e409598ff9b998", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 58, "deletions": 5, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046dc9d0d4683bab99d28983d8841ba3c56ef744/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046dc9d0d4683bab99d28983d8841ba3c56ef744/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=046dc9d0d4683bab99d28983d8841ba3c56ef744", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  January 18, 2023 at 07:54:50 PM by AutoGen 5.18.7\n+ * It has been AutoGen-ed  January 18, 2023 at 09:06:47 PM by AutoGen 5.18.7\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Jan 18 19:54:50 GMT 2023\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Jan 18 21:06:47 GMT 2023\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 273 fixup descriptions.\n+ * This file contains 274 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -3084,6 +3084,53 @@ static const char* apzDarwin_Os_Trace_2Patch[] = {\n #endif\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Objc_Runtime_1 fix\n+ */\n+tSCC zDarwin_Objc_Runtime_1Name[] =\n+     \"darwin_objc_runtime_1\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Objc_Runtime_1List[] =\n+  \"objc/runtime.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Objc_Runtime_1Machs[] = {\n+        \"*-*-darwin2*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Objc_Runtime_1Select0[] =\n+       \"OBJC_EXPORT void.*\\n\\\n+objc_enumerateClasses.*\\n\\\n+.*\\n\\\n+.*\\n\\\n+.*\\n\\\n+.*void \\\\(\\\\^ _Nonnull block.*\\n\\\n+.*\\n\\\n+.*\\n\\\n+.*OBJC_REFINED_FOR_SWIFT.*\";\n+\n+#define    DARWIN_OBJC_RUNTIME_1_TEST_CT  1\n+static tTestDesc aDarwin_Objc_Runtime_1Tests[] = {\n+  { TT_EGREP,    zDarwin_Objc_Runtime_1Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Objc_Runtime_1\n+ */\n+static const char* apzDarwin_Objc_Runtime_1Patch[] = {\n+    \"format\",\n+    \"#if __BLOCKS__\\n\\\n+%0\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Darwin_Os_Trace_3 fix\n@@ -11115,9 +11162,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          311\n+#define REGEX_COUNT          312\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            273\n+#define FIX_COUNT            274\n \n /*\n  *  Enumerate the fixes\n@@ -11196,6 +11243,7 @@ typedef enum {\n     DARWIN_LONGJMP_NORETURN_FIXIDX,\n     DARWIN_OS_TRACE_1_FIXIDX,\n     DARWIN_OS_TRACE_2_FIXIDX,\n+    DARWIN_OBJC_RUNTIME_1_FIXIDX,\n     DARWIN_OS_TRACE_3_FIXIDX,\n     DARWIN_OS_BASE_1_FIXIDX,\n     DARWIN_DISPATCH_OBJECT_1_FIXIDX,\n@@ -11764,6 +11812,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      DARWIN_OS_TRACE_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aDarwin_Os_Trace_2Tests,   apzDarwin_Os_Trace_2Patch, 0 },\n \n+  {  zDarwin_Objc_Runtime_1Name,    zDarwin_Objc_Runtime_1List,\n+     apzDarwin_Objc_Runtime_1Machs,\n+     DARWIN_OBJC_RUNTIME_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Objc_Runtime_1Tests,   apzDarwin_Objc_Runtime_1Patch, 0 },\n+\n   {  zDarwin_Os_Trace_3Name,    zDarwin_Os_Trace_3List,\n      apzDarwin_Os_Trace_3Machs,\n      DARWIN_OS_TRACE_3_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "b02dd8e057537a652569833de47c5993bf4699e7", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046dc9d0d4683bab99d28983d8841ba3c56ef744/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046dc9d0d4683bab99d28983d8841ba3c56ef744/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=046dc9d0d4683bab99d28983d8841ba3c56ef744", "patch": "@@ -1491,6 +1491,41 @@ fix = {\n   test_text = \"typedef void (^os_trace_payload_t)(xpc_object_t xdict);\";\n };\n \n+/*\n+ *  macOSX 13.0 SDK objc/runtime.h uses Apple Blocks extension without a guard.\n+ */\n+\n+fix = {\n+  hackname  = darwin_objc_runtime_1;\n+  mach      = \"*-*-darwin2*\";\n+  files     = objc/runtime.h;\n+  select    =   <<- _EOSelect_\n+\tOBJC_EXPORT void.*\n+\tobjc_enumerateClasses.*\n+\t.*\n+\t.*\n+\t.*\n+\t.*void \\(\\^ _Nonnull block.*\n+\t.*\n+\t.*\n+\t.*OBJC_REFINED_FOR_SWIFT.*\n+\t_EOSelect_;\n+  c_fix     = format;\n+  c_fix_arg = \"#if __BLOCKS__\\n%0\\n#endif\";\n+  test_text = <<- _OBJC_RUNTIME_1\n+OBJC_EXPORT void\n+objc_enumerateClasses(const void * _Nullable image,\n+                      const char * _Nullable namePrefix,\n+                      Protocol * _Nullable conformingTo,\n+                      Class _Nullable subclassing,\n+                      void (^ _Nonnull block)(Class _Nonnull aClass, BOOL * _Nonnull stop)\n+                      OBJC_NOESCAPE)\n+OBJC_AVAILABLE(13.0, 16.0, 16.0, 9.0, 7.0)\n+OBJC_REFINED_FOR_SWIFT;\n+_OBJC_RUNTIME_1;\n+};\n+\n+\n /*\n  *  In Mac OS X 10.1[012] <os/trace.h>, need to guard users of\n  *  os_trace_payload_t typedef, too."}, {"sha": "8b4855bb8ab0f527f3244953da375511c75e630a", "filename": "fixincludes/tests/base/objc/runtime.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046dc9d0d4683bab99d28983d8841ba3c56ef744/fixincludes%2Ftests%2Fbase%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046dc9d0d4683bab99d28983d8841ba3c56ef744/fixincludes%2Ftests%2Fbase%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fobjc%2Fruntime.h?ref=046dc9d0d4683bab99d28983d8841ba3c56ef744", "patch": "@@ -0,0 +1,24 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/objc/runtime.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( DARWIN_OBJC_RUNTIME_1_CHECK )\n+#if __BLOCKS__\n+OBJC_EXPORT void\n+objc_enumerateClasses(const void * _Nullable image,\n+                      const char * _Nullable namePrefix,\n+                      Protocol * _Nullable conformingTo,\n+                      Class _Nullable subclassing,\n+                      void (^ _Nonnull block)(Class _Nonnull aClass, BOOL * _Nonnull stop)\n+                      OBJC_NOESCAPE)\n+OBJC_AVAILABLE(13.0, 16.0, 16.0, 9.0, 7.0)\n+OBJC_REFINED_FOR_SWIFT;\n+#endif\n+#endif  /* DARWIN_OBJC_RUNTIME_1_CHECK */"}]}