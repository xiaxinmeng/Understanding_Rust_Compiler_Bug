{"sha": "5581fc9110377e8a08394f985a17c3e0cb31227a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU4MWZjOTExMDM3N2U4YTA4Mzk0Zjk4NWExN2MzZTBjYjMxMjI3YQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-09-26T06:08:48Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-09-26T06:08:48Z"}, "message": "expr.c (emit_move_insn_1): If there is no move pattern for the original mode...\n\n\t* expr.c (emit_move_insn_1): If there is no move pattern for the\n\toriginal mode, try using a pattern for the corresponding integer mode.\n\nFrom-SVN: r71816", "tree": {"sha": "bcba3cef0778f2f0b0d3e849894990e81a56635a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcba3cef0778f2f0b0d3e849894990e81a56635a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5581fc9110377e8a08394f985a17c3e0cb31227a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5581fc9110377e8a08394f985a17c3e0cb31227a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5581fc9110377e8a08394f985a17c3e0cb31227a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5581fc9110377e8a08394f985a17c3e0cb31227a/comments", "author": null, "committer": null, "parents": [{"sha": "9eb5455884dc17327a98a395ca148c254c2a908d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eb5455884dc17327a98a395ca148c254c2a908d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eb5455884dc17327a98a395ca148c254c2a908d"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "534e99b493a94079d000d01cbca380c5897746be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5581fc9110377e8a08394f985a17c3e0cb31227a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5581fc9110377e8a08394f985a17c3e0cb31227a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5581fc9110377e8a08394f985a17c3e0cb31227a", "patch": "@@ -1,3 +1,8 @@\n+2003-09-26  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* expr.c (emit_move_insn_1): If there is no move pattern for the\n+\toriginal mode, try using a pattern for the corresponding integer mode.\n+\n 2003-09-26  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* combine.c (if_then_else_cond): Tighten mode check."}, {"sha": "6ad93c506ab9f6d4abacd34ba52c29cc41f9d658", "filename": "gcc/expr.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5581fc9110377e8a08394f985a17c3e0cb31227a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5581fc9110377e8a08394f985a17c3e0cb31227a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=5581fc9110377e8a08394f985a17c3e0cb31227a", "patch": "@@ -3491,6 +3491,17 @@ emit_move_insn_1 (rtx x, rtx y)\n       return emit_insn (GEN_FCN (insn_code) (x, y));\n     }\n \n+  /* Try using a move pattern for the corresponding integer mode.  This is\n+     only safe when simplify_subreg can convert MODE constants into integer\n+     constants.  At present, it can only do this reliably if the value\n+     fits within a HOST_WIDE_INT.  */\n+  else if (GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT\n+\t   && (submode = int_mode_for_mode (mode)) != BLKmode\n+\t   && mov_optab->handlers[submode].insn_code != CODE_FOR_nothing)\n+    return emit_insn (GEN_FCN (mov_optab->handlers[submode].insn_code)\n+\t\t      (simplify_gen_subreg (submode, x, mode, 0),\n+\t\t       simplify_gen_subreg (submode, y, mode, 0)));\n+\n   /* This will handle any multi-word or full-word mode that lacks a move_insn\n      pattern.  However, you will get better code if you define such patterns,\n      even if they must turn into multiple assembler instructions.  */"}]}