{"sha": "c30752be91a7c2dd914b0e882bed7eaa379774fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMwNzUyYmU5MWE3YzJkZDkxNGIwZTg4MmJlZDdlYWEzNzk3NzRmZA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2016-11-21T15:59:13Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2016-11-21T15:59:13Z"}, "message": "[arm] Remove unimplemented option -macps-float\n\n\t* arm.opt (mapcs-float): Delete option\n\t* arm.c (arm_option_override): Remove hunk relating to\n\tTARGET_APCS_FLOAT.\n\t* doc/invoke.texi (arm options): Remove documentation for -mapcs-float.\n\nFrom-SVN: r242669", "tree": {"sha": "b34b46644ef4189b2e24485e8b51e8471f4b100f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b34b46644ef4189b2e24485e8b51e8471f4b100f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c30752be91a7c2dd914b0e882bed7eaa379774fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30752be91a7c2dd914b0e882bed7eaa379774fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c30752be91a7c2dd914b0e882bed7eaa379774fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30752be91a7c2dd914b0e882bed7eaa379774fd/comments", "author": null, "committer": null, "parents": [{"sha": "9713daa015b807a9ffd349f3698cee7acbbaed23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9713daa015b807a9ffd349f3698cee7acbbaed23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9713daa015b807a9ffd349f3698cee7acbbaed23"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "5957b9564efe5e92e7d749ff228d35c24baa4972", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c30752be91a7c2dd914b0e882bed7eaa379774fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c30752be91a7c2dd914b0e882bed7eaa379774fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c30752be91a7c2dd914b0e882bed7eaa379774fd", "patch": "@@ -1,3 +1,10 @@\n+2016-11-21  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.opt (mapcs-float): Delete option.\n+\t* arm.c (arm_option_override): Remove hunk relating to\n+\tTARGET_APCS_FLOAT.\n+\t* doc/invoke.texi (arm options): Remove documentation for -mapcs-float.\n+\n 2016-11-21  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-tailcall.c (process_assignment): Simplify the check for"}, {"sha": "dc88853987e4eeb1bbe1d2f7da020629a2f5a755", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c30752be91a7c2dd914b0e882bed7eaa379774fd/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c30752be91a7c2dd914b0e882bed7eaa379774fd/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=c30752be91a7c2dd914b0e882bed7eaa379774fd", "patch": "@@ -3187,9 +3187,6 @@ arm_option_override (void)\n   if (TARGET_APCS_REENT)\n     warning (0, \"APCS reentrant code not supported.  Ignored\");\n \n-  if (TARGET_APCS_FLOAT)\n-    warning (0, \"passing floating point arguments in fp regs not yet supported\");\n-\n   /* Initialize boolean versions of the flags, for use in the arm.md file.  */\n   arm_arch3m = ARM_FSET_HAS_CPU1 (insn_flags, FL_ARCH3M);\n   arm_arch4 = ARM_FSET_HAS_CPU1 (insn_flags, FL_ARCH4);"}, {"sha": "8856976c6de8e09c7016642134e43230f389b284", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c30752be91a7c2dd914b0e882bed7eaa379774fd/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c30752be91a7c2dd914b0e882bed7eaa379774fd/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=c30752be91a7c2dd914b0e882bed7eaa379774fd", "patch": "@@ -61,10 +61,6 @@ Generate a call to abort if a noreturn function returns.\n mapcs\n Target RejectNegative Mask(APCS_FRAME) Undocumented\n \n-mapcs-float\n-Target Report Mask(APCS_FLOAT)\n-Pass FP arguments in FP registers.\n-\n mapcs-frame\n Target Report Mask(APCS_FRAME)\n Generate APCS conformant stack frames."}, {"sha": "67ed240b8aaf52d43e075860cfb77bef858f9cc1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c30752be91a7c2dd914b0e882bed7eaa379774fd/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c30752be91a7c2dd914b0e882bed7eaa379774fd/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c30752be91a7c2dd914b0e882bed7eaa379774fd", "patch": "@@ -621,7 +621,6 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-mapcs-frame  -mno-apcs-frame @gol\n -mabi=@var{name} @gol\n -mapcs-stack-check  -mno-apcs-stack-check @gol\n--mapcs-float  -mno-apcs-float @gol\n -mapcs-reentrant  -mno-apcs-reentrant @gol\n -msched-prolog  -mno-sched-prolog @gol\n -mlittle-endian  -mbig-endian @gol\n@@ -14891,16 +14890,6 @@ called, depending upon the amount of stack space required.  The runtime\n system is required to provide these functions.  The default is\n @option{-mno-apcs-stack-check}, since this produces smaller code.\n \n-@c not currently implemented\n-@item -mapcs-float\n-@opindex mapcs-float\n-Pass floating-point arguments using the floating-point registers.  This is\n-one of the variants of the APCS@.  This option is recommended if the\n-target hardware has a floating-point unit or if a lot of floating-point\n-arithmetic is going to be performed by the code.  The default is\n-@option{-mno-apcs-float}, since the size of integer-only code is \n-slightly increased if @option{-mapcs-float} is used.\n-\n @c not currently implemented\n @item -mapcs-reentrant\n @opindex mapcs-reentrant"}]}