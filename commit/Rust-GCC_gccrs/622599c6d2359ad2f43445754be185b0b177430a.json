{"sha": "622599c6d2359ad2f43445754be185b0b177430a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIyNTk5YzZkMjM1OWFkMmY0MzQ0NTc1NGJlMTg1YjBiMTc3NDMwYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-01-30T15:31:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-30T15:31:01Z"}, "message": "a-assert.adb: Minor reformatting.\n\n2015-01-30  Robert Dewar  <dewar@adacore.com>\n\n\t* a-assert.adb: Minor reformatting.\n\t* sem_ch13.adb: Minor comment clarification.\n\t* types.ads: Minor comment update.\n\t* sem_eval.adb (Real_Or_String_Static_Predicate_Matches): Avoid blow up\n\twhen we have a predicate that is nothing but an inherited dynamic\n\tpredicate.\n\nFrom-SVN: r220290", "tree": {"sha": "e0c41518ab48b912730cce663dd22e701f2c51b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0c41518ab48b912730cce663dd22e701f2c51b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/622599c6d2359ad2f43445754be185b0b177430a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622599c6d2359ad2f43445754be185b0b177430a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/622599c6d2359ad2f43445754be185b0b177430a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622599c6d2359ad2f43445754be185b0b177430a/comments", "author": null, "committer": null, "parents": [{"sha": "0d1476cb57fbc0f647fd681ae1255ace57f5cb06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d1476cb57fbc0f647fd681ae1255ace57f5cb06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d1476cb57fbc0f647fd681ae1255ace57f5cb06"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "2668fcc4066e9b852813f2c1beacaac3be299e2f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=622599c6d2359ad2f43445754be185b0b177430a", "patch": "@@ -1,3 +1,12 @@\n+2015-01-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-assert.adb: Minor reformatting.\n+\t* sem_ch13.adb: Minor comment clarification.\n+\t* types.ads: Minor comment update.\n+\t* sem_eval.adb (Real_Or_String_Static_Predicate_Matches): Avoid blow up\n+\twhen we have a predicate that is nothing but an inherited dynamic\n+\tpredicate.\n+\n 2015-01-30  Jerome Guitton  <guitton@adacore.com>\n \n \t* gcc-interface/Makefile.in (x86-vxworks): Update GCC_SPEC_FILES to"}, {"sha": "bfdcd157245a4a32984e2ff501ba074f64920573", "filename": "gcc/ada/a-assert.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2Fa-assert.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2Fa-assert.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-assert.adb?ref=622599c6d2359ad2f43445754be185b0b177430a", "patch": "@@ -32,7 +32,6 @@\n package body Ada.Assertions with\n   SPARK_Mode\n is\n-\n    ------------\n    -- Assert --\n    ------------"}, {"sha": "10b0062f3b3b5819d072271908ef056fc95db09a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=622599c6d2359ad2f43445754be185b0b177430a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -11281,9 +11281,12 @@ package body Sem_Ch13 is\n       --    expression and then xxPredicate (typ (Inns))\n \n       --  Where the call is to a Predicate function for an inherited predicate.\n-      --  We simply ignore such a call (which could be to either a dynamic or\n-      --  a static predicate, but remember that we can have a Static_Predicate\n-      --  for a non-static subtype).\n+      --  We simply ignore such a call, which could be to either a dynamic or\n+      --  a static predicate. Note that if the parent predicate is dynamic then\n+      --  eventually this type will be marked as dynamic, but you are allowed\n+      --  to specify a static predicate for a subtype which is inheriting a\n+      --  dynamic predicate, so the static predicate validation here ignores\n+      --  the inherited predicate even if it is dynamic.\n \n       elsif Nkind (Expr) = N_Function_Call\n         and then Is_Predicate_Function (Entity (Name (Expr)))"}, {"sha": "d01d458b2c728f2df0763fcb51607554508132a5", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=622599c6d2359ad2f43445754be185b0b177430a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5432,18 +5432,29 @@ package body Sem_Eval is\n \n          Copy := Copy_Separate_Tree (Left_Opnd (Expr));\n \n-      --  Case where call to predicate function appears on its own\n+      --  Case where call to predicate function appears on its own (this means\n+      --  that the predicate at this level is just inherited from the parent).\n \n       elsif Nkind (Expr) =  N_Function_Call then\n+         declare\n+            Typ : constant Entity_Id :=\n+                    Etype (First_Formal (Entity (Name (Expr))));\n \n-         --  Here the result is just the result of calling the inner predicate\n+         begin\n+            --  If the inherited predicate is dynamic, just ignore it. We can't\n+            --  go trying to evaluate a dynamic predicate as a static one!\n \n-         return\n-           Real_Or_String_Static_Predicate_Matches\n-             (Val => Val,\n-              Typ => Etype (First_Formal (Entity (Name (Expr)))));\n+            if Has_Dynamic_Predicate_Aspect (Typ) then\n+               return True;\n+\n+            --  Otherwise inherited predicate is static, check for match\n+\n+            else\n+               return Real_Or_String_Static_Predicate_Matches (Val, Typ);\n+            end if;\n+         end;\n \n-      --  If no inherited predicate, copy whole expression\n+      --  If not just an inherited predicate, copy whole expression\n \n       else\n          Copy := Copy_Separate_Tree (Expr);"}, {"sha": "ed3eac1d43ca116077a0b8b2c206fa9d5f6a66eb", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622599c6d2359ad2f43445754be185b0b177430a/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=622599c6d2359ad2f43445754be185b0b177430a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -107,7 +107,7 @@ package Types is\n \n    subtype Upper_Half_Character is\n      Character range Character'Val (16#80#) .. Character'Val (16#FF#);\n-   --  Characters with the upper bit set\n+   --  8-bit Characters with the upper bit set\n \n    type Character_Ptr is access all Character;\n    type String_Ptr    is access all String;"}]}