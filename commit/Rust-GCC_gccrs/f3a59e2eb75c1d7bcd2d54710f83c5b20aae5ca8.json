{"sha": "f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNhNTllMmViNzVjMWQ3YmNkMmQ1NDcxMGY4M2M1YjIwYWFlNWNhOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-04-18T09:25:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-04-18T09:25:46Z"}, "message": "re PR middle-end/37870 (ICE in extract_bit_field_1)\n\n2016-04-18  Richard Biener  <rguenther@suse.de>\n\n        PR middle-end/37870\n\t* expmed.c (extract_bit_field_1): Remove broken case\n\tusing a wider MODE_INT mode.\n\nFrom-SVN: r235103", "tree": {"sha": "b10e467635c9a750eec5110274d2c482163ac03e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b10e467635c9a750eec5110274d2c482163ac03e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84538074d9b5ae903c2d3561653b071995bdc934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84538074d9b5ae903c2d3561653b071995bdc934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84538074d9b5ae903c2d3561653b071995bdc934"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "d6b08614628e56ff7ce5c8972947fc1cb2b8c54a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8", "patch": "@@ -1,3 +1,9 @@\n+2016-04-18  Richard Biener  <rguenther@suse.de>\n+\n+        PR middle-end/37870\n+\t* expmed.c (extract_bit_field_1): Remove broken case\n+\tusing a wider MODE_INT mode.\n+\n 2016-04-18  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* has-brig.c (lendian16): Don't try to use __builtin_bswap16"}, {"sha": "ec968da63336d94efb534cf274222ff51ddaaf09", "filename": "gcc/expmed.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=f3a59e2eb75c1d7bcd2d54710f83c5b20aae5ca8", "patch": "@@ -1647,17 +1647,6 @@ extract_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n \t    if (GET_CODE (op0) == SUBREG)\n \t      op0 = force_reg (imode, op0);\n \t  }\n-\telse if (REG_P (op0))\n-\t  {\n-\t    rtx reg, subreg;\n-\t    imode = smallest_mode_for_size (GET_MODE_BITSIZE (GET_MODE (op0)),\n-\t\t\t\t\t    MODE_INT);\n-\t    reg = gen_reg_rtx (imode);\n-\t    subreg = gen_lowpart_SUBREG (GET_MODE (op0), reg);\n-\t    emit_move_insn (subreg, op0);\n-\t    op0 = reg;\n-\t    bitnum += SUBREG_BYTE (subreg) * BITS_PER_UNIT;\n-\t  }\n \telse\n \t  {\n \t    HOST_WIDE_INT size = GET_MODE_SIZE (GET_MODE (op0));"}]}