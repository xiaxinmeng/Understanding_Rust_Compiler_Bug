{"sha": "aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE5YmFhY2ZjOTRlNjE0N2M4NGQ1ZTBmYmJkMzJkZDk0OGU3YzhjZg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2016-09-20T20:15:30Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2016-09-20T20:15:30Z"}, "message": "Report DejaGnu ERROR messages in dg-extract-results.\n\n2016-09-20  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* dg-extract-results.py: Report DejaGnu error in the final\n\tsummary.\n\t* dg-extract-results.sh: Likewise.\n\nFrom-SVN: r240289", "tree": {"sha": "54a8fdc97498cbda100740b8dc6ef26a5105acb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54a8fdc97498cbda100740b8dc6ef26a5105acb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf/comments", "author": null, "committer": null, "parents": [{"sha": "b0a5704b4cd613c9ce722e2a7de530ac6998cd8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a5704b4cd613c9ce722e2a7de530ac6998cd8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0a5704b4cd613c9ce722e2a7de530ac6998cd8c"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "dde0d7bd36e3375d227e4c354e73fc35521675f4", "filename": "contrib/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf", "patch": "@@ -1,3 +1,9 @@\n+2016-09-20  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* dg-extract-results.py: Report DejaGnu error in the final\n+\tsummary.\n+\t* dg-extract-results.sh: Likewise.\n+\n 2016-09-20  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* compare_tests: Take ERROR messages into account when"}, {"sha": "4b02a5bea92c19c13114337a8fc6535dcc9ee7d1", "filename": "contrib/dg-extract-results.py", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf/contrib%2Fdg-extract-results.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf/contrib%2Fdg-extract-results.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.py?ref=aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf", "patch": "@@ -134,6 +134,7 @@ def __init__ (self):\n         self.end_line = None\n         # Known summary types.\n         self.count_names = [\n+            '# of DejaGnu errors\\t\\t',\n             '# of expected passes\\t\\t',\n             '# of unexpected failures\\t',\n             '# of unexpected successes\\t',\n@@ -245,6 +246,10 @@ def parse_run (self, filename, file, tool, variation, num_variations):\n             segment = Segment (filename, file.tell())\n             variation.header = segment\n \n+        # Parse the rest of the summary (the '# of ' lines).\n+        if len (variation.counts) == 0:\n+            variation.counts = self.zero_counts()\n+\n         # Parse up until the first line of the summary.\n         if num_variations == 1:\n             end = '\\t\\t=== ' + tool.name + ' Summary ===\\n'\n@@ -291,6 +296,11 @@ def parse_run (self, filename, file, tool, variation, num_variations):\n                 harness.results.append ((key, line))\n                 if not first_key and sort_logs:\n                     first_key = key\n+                if line.startswith ('ERROR: (DejaGnu)'):\n+                    for i in range (len (self.count_names)):\n+                        if 'DejaGnu errors' in self.count_names[i]:\n+                            variation.counts[i] += 1\n+                            break\n \n             # 'Using ...' lines are only interesting in a header.  Splitting\n             # the test up into parallel runs leads to more 'Using ...' lines\n@@ -309,9 +319,6 @@ def parse_run (self, filename, file, tool, variation, num_variations):\n             segment.lines -= final_using\n             harness.add_segment (first_key, segment)\n \n-        # Parse the rest of the summary (the '# of ' lines).\n-        if len (variation.counts) == 0:\n-            variation.counts = self.zero_counts()\n         while True:\n             before = file.tell()\n             line = file.readline()"}, {"sha": "519d49c00c37c4903f34270a98499f8e0568b390", "filename": "contrib/dg-extract-results.sh", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf/contrib%2Fdg-extract-results.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf/contrib%2Fdg-extract-results.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.sh?ref=aa9baacfc94e6147c84d5e0fbbd32dd948e7c8cf", "patch": "@@ -369,10 +369,11 @@ EOF\n BEGIN {\n   variant=\"$VAR\"\n   tool=\"$TOOL\"\n-  passcnt=0; failcnt=0; untstcnt=0; xpasscnt=0; xfailcnt=0; kpasscnt=0; kfailcnt=0; unsupcnt=0; unrescnt=0;\n+  passcnt=0; failcnt=0; untstcnt=0; xpasscnt=0; xfailcnt=0; kpasscnt=0; kfailcnt=0; unsupcnt=0; unrescnt=0; dgerrorcnt=0;\n   curvar=\"\"; insummary=0\n }\n /^Running target /\t\t{ curvar = \\$3; next }\n+/^ERROR: \\(DejaGnu\\)/\t\t{ if (variant == curvar) dgerrorcnt += 1 }\n /^# of /\t\t\t{ if (variant == curvar) insummary = 1 }\n /^# of expected passes/\t\t{ if (insummary == 1) passcnt += \\$5; next; }\n /^# of unexpected successes/\t{ if (insummary == 1) xpasscnt += \\$5; next; }\n@@ -390,6 +391,7 @@ BEGIN {\n { next }\n END {\n   printf (\"\\t\\t=== %s Summary for %s ===\\n\\n\", tool, variant)\n+  if (dgerrorcnt != 0) printf (\"# of DejaGnu errors\\t\\t%d\\n\", dgerrorcnt)\n   if (passcnt != 0) printf (\"# of expected passes\\t\\t%d\\n\", passcnt)\n   if (failcnt != 0) printf (\"# of unexpected failures\\t%d\\n\", failcnt)\n   if (xpasscnt != 0) printf (\"# of unexpected successes\\t%d\\n\", xpasscnt)\n@@ -419,8 +421,9 @@ TOTAL_AWK=${TMP}/total.awk\n cat << EOF > $TOTAL_AWK\n BEGIN {\n   tool=\"$TOOL\"\n-  passcnt=0; failcnt=0; untstcnt=0; xpasscnt=0; xfailcnt=0; kfailcnt=0; unsupcnt=0; unrescnt=0\n+  passcnt=0; failcnt=0; untstcnt=0; xpasscnt=0; xfailcnt=0; kfailcnt=0; unsupcnt=0; unrescnt=0; dgerrorcnt=0\n }\n+/^# of DejaGnu errors/\t\t{ dgerrorcnt += \\$5 }\n /^# of expected passes/\t\t{ passcnt += \\$5 }\n /^# of unexpected failures/\t{ failcnt += \\$5 }\n /^# of unexpected successes/\t{ xpasscnt += \\$5 }\n@@ -431,7 +434,8 @@ BEGIN {\n /^# of unresolved testcases/\t{ unrescnt += \\$5 }\n /^# of unsupported tests/\t{ unsupcnt += \\$5 }\n END {\n-  printf (\"\\n\\t\\t=== %s Summary ===\\n\\n\", tool)\n+  printf (\"\\n\\t\\t=== %s MySummary ===\\n\\n\", tool)\n+  if (dgerrorcnt != 0) printf (\"# of DejaGnu errors\\t\\t%d\\n\", dgerrorcnt)\n   if (passcnt != 0) printf (\"# of expected passes\\t\\t%d\\n\", passcnt)\n   if (failcnt != 0) printf (\"# of unexpected failures\\t%d\\n\", failcnt)\n   if (xpasscnt != 0) printf (\"# of unexpected successes\\t%d\\n\", xpasscnt)"}]}