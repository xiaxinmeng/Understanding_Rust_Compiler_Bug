{"sha": "717e91dbc44c6bf55a498f45f6045191ceb10a11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE3ZTkxZGJjNDRjNmJmNTVhNDk4ZjQ1ZjYwNDUxOTFjZWIxMGExMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-19T20:30:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-19T20:30:15Z"}, "message": "libstdc++: Define operator<=> for std::stack and std::queue\n\nSome more C++20 changes from P1614R2, \"The Mothership has Landed\".\n\n\t* include/bits/stl_queue.h (queue): Define operator<=> for C++20.\n\t* include/bits/stl_stack.h (stack): Likewise.\n\t* testsuite/23_containers/queue/cmp_c++20.cc: New test.\n\t* testsuite/23_containers/stack/cmp_c++20.cc: New test.", "tree": {"sha": "20be317df6715021af7050bc0386273ada12c113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20be317df6715021af7050bc0386273ada12c113"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/717e91dbc44c6bf55a498f45f6045191ceb10a11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717e91dbc44c6bf55a498f45f6045191ceb10a11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717e91dbc44c6bf55a498f45f6045191ceb10a11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717e91dbc44c6bf55a498f45f6045191ceb10a11/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9"}], "stats": {"total": 151, "additions": 151, "deletions": 0}, "files": [{"sha": "fde5ac1bf376e5515914b5c5bed4b69db17c01ed", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=717e91dbc44c6bf55a498f45f6045191ceb10a11", "patch": "@@ -1,5 +1,10 @@\n 2020-04-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/stl_queue.h (queue): Define operator<=> for C++20.\n+\t* include/bits/stl_stack.h (stack): Likewise.\n+\t* testsuite/23_containers/queue/cmp_c++20.cc: New test.\n+\t* testsuite/23_containers/stack/cmp_c++20.cc: New test.\n+\n \t* include/bits/unordered_map.h (unordered_map, unordered_multimap):\n \tRemove redundant operator!= for C++20.\n \t* include/bits/unordered_set.h (unordered_set, unordered_multiset):"}, {"sha": "8635d4267900eb59614d4cd73d4c98f2df3bf834", "filename": "libstdc++-v3/include/bits/stl_queue.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h?ref=717e91dbc44c6bf55a498f45f6045191ceb10a11", "patch": "@@ -114,6 +114,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tfriend bool\n \toperator<(const queue<_Tp1, _Seq1>&, const queue<_Tp1, _Seq1>&);\n \n+#if __cpp_lib_three_way_comparison\n+      template<typename _Tp1, three_way_comparable _Seq1>\n+\tfriend compare_three_way_result_t<_Seq1>\n+\toperator<=>(const queue<_Tp1, _Seq1>&, const queue<_Tp1, _Seq1>&);\n+#endif\n+\n #if __cplusplus >= 201103L\n       template<typename _Alloc>\n \tusing _Uses = typename\n@@ -380,6 +386,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n     { return !(__x < __y); }\n \n+#if __cpp_lib_three_way_comparison\n+  template<typename _Tp, three_way_comparable _Seq>\n+    inline compare_three_way_result_t<_Seq>\n+    operator<=>(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)\n+    { return __x.c <=> __y.c; }\n+#endif\n+\n #if __cplusplus >= 201103L\n   template<typename _Tp, typename _Seq>\n     inline"}, {"sha": "1ce98a94ab98aff060ef3f25b6b0395346ee42f5", "filename": "libstdc++-v3/include/bits/stl_stack.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h?ref=717e91dbc44c6bf55a498f45f6045191ceb10a11", "patch": "@@ -116,6 +116,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tfriend bool\n \toperator<(const stack<_Tp1, _Seq1>&, const stack<_Tp1, _Seq1>&);\n \n+#if __cpp_lib_three_way_comparison\n+      template<typename _Tp1, three_way_comparable _Seq1>\n+\tfriend compare_three_way_result_t<_Seq1>\n+\toperator<=>(const stack<_Tp1, _Seq1>&, const stack<_Tp1, _Seq1>&);\n+#endif\n+\n #if __cplusplus >= 201103L\n       template<typename _Alloc>\n \tusing _Uses = typename\n@@ -355,6 +361,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n     { return !(__x < __y); }\n \n+#if __cpp_lib_three_way_comparison\n+  template<typename _Tp, three_way_comparable _Seq>\n+    inline compare_three_way_result_t<_Seq>\n+    operator<=>(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)\n+    { return __x.c <=> __y.c; }\n+#endif\n+\n #if __cplusplus >= 201103L\n   template<typename _Tp, typename _Seq>\n     inline"}, {"sha": "5d0d4c9749e3a713b6c17c8ccc8bba2adf36137c", "filename": "libstdc++-v3/testsuite/23_containers/queue/cmp_c++20.cc", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fcmp_c%2B%2B20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fcmp_c%2B%2B20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fqueue%2Fcmp_c%2B%2B20.cc?ref=717e91dbc44c6bf55a498f45f6045191ceb10a11", "patch": "@@ -0,0 +1,60 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+#include <queue>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::queue<int> c1{ {1, 2, 3} }, c2{ {1, 2, 3, 4} }, c3{ {1, 2, 4} };\n+  VERIFY( c1 == c1 );\n+  VERIFY( std::is_eq(c1 <=> c1) );\n+  VERIFY( c1 < c2 );\n+  VERIFY( std::is_lt(c1 <=> c2) );\n+  VERIFY( c1 < c3 );\n+  VERIFY( std::is_lt(c1 <=> c3) );\n+  VERIFY( c2 < c3 );\n+  VERIFY( std::is_lt(c2 <=> c3) );\n+\n+  static_assert( std::totally_ordered<std::queue<int>> );\n+\n+  static_assert( std::three_way_comparable<std::queue<int>,\n+\t\t\t\t\t   std::strong_ordering> );\n+  static_assert( ! std::three_way_comparable<std::queue<float>,\n+\t\t\t\t\t     std::strong_ordering> );\n+  static_assert( ! std::three_way_comparable<std::queue<float>,\n+\t\t\t\t\t     std::weak_ordering> );\n+  static_assert( std::three_way_comparable<std::queue<float>,\n+\t\t\t\t\t   std::partial_ordering> );\n+\n+  struct E\n+  {\n+    bool operator==(E) { return true; }\n+  };\n+  static_assert( ! std::three_way_comparable<E> );\n+  static_assert( ! std::three_way_comparable<std::queue<E>> );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "054e487751f278f22b73afad4a60e794ecf26745", "filename": "libstdc++-v3/testsuite/23_containers/stack/cmp_c++20.cc", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fcmp_c%2B%2B20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717e91dbc44c6bf55a498f45f6045191ceb10a11/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fcmp_c%2B%2B20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fstack%2Fcmp_c%2B%2B20.cc?ref=717e91dbc44c6bf55a498f45f6045191ceb10a11", "patch": "@@ -0,0 +1,60 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+#include <stack>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::stack<int> c1{ {1, 2, 3} }, c2{ {1, 2, 3, 4} }, c3{ {1, 2, 4} };\n+  VERIFY( c1 == c1 );\n+  VERIFY( std::is_eq(c1 <=> c1) );\n+  VERIFY( c1 < c2 );\n+  VERIFY( std::is_lt(c1 <=> c2) );\n+  VERIFY( c1 < c3 );\n+  VERIFY( std::is_lt(c1 <=> c3) );\n+  VERIFY( c2 < c3 );\n+  VERIFY( std::is_lt(c2 <=> c3) );\n+\n+  static_assert( std::totally_ordered<std::stack<int>> );\n+\n+  static_assert( std::three_way_comparable<std::stack<int>,\n+\t\t\t\t\t   std::strong_ordering> );\n+  static_assert( ! std::three_way_comparable<std::stack<float>,\n+\t\t\t\t\t     std::strong_ordering> );\n+  static_assert( ! std::three_way_comparable<std::stack<float>,\n+\t\t\t\t\t     std::weak_ordering> );\n+  static_assert( std::three_way_comparable<std::stack<float>,\n+\t\t\t\t\t   std::partial_ordering> );\n+\n+  struct E\n+  {\n+    bool operator==(E) { return true; }\n+  };\n+  static_assert( ! std::three_way_comparable<E> );\n+  static_assert( ! std::three_way_comparable<std::stack<E>> );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}