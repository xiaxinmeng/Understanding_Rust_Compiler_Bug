{"sha": "2f2ee4bba2ea908f7676672935a81f8df590feb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYyZWU0YmJhMmVhOTA4Zjc2NzY2NzI5MzVhODFmOGRmNTkwZmViMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-03-28T06:53:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-03-28T06:53:49Z"}, "message": "flow.c (cleanup_cfg): Take no argument.\n\n        * flow.c (cleanup_cfg): Take no argument.\n        * output.h, sibcall.c, toplev.c: Update all calls.\n\nFrom-SVN: r40910", "tree": {"sha": "82fb9d73f2a184f90e2c610d158312fb1faaa878", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82fb9d73f2a184f90e2c610d158312fb1faaa878"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f2ee4bba2ea908f7676672935a81f8df590feb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2ee4bba2ea908f7676672935a81f8df590feb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f2ee4bba2ea908f7676672935a81f8df590feb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f2ee4bba2ea908f7676672935a81f8df590feb3/comments", "author": null, "committer": null, "parents": [{"sha": "ad73b558320545ee96736ae3f3373c48d3622504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad73b558320545ee96736ae3f3373c48d3622504", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad73b558320545ee96736ae3f3373c48d3622504"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "8f3c6c2a5456ab59560715b44afb3efdfebd18be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f2ee4bba2ea908f7676672935a81f8df590feb3", "patch": "@@ -34,6 +34,9 @@\n \t* reg-stack.c (convert_regs_1): Kill the entire target stack\n \tacross non-call exception edges.\n \n+\t* flow.c (cleanup_cfg): Take no argument.\n+\t* output.h, sibcall.c, toplev.c: Update all calls.\n+\n 2001-03-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in: Don't check for bcopy."}, {"sha": "75dc09c4b74c32d0e019f9ebcc7fd3ab123aea7e", "filename": "gcc/flow.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=2f2ee4bba2ea908f7676672935a81f8df590feb3", "patch": "@@ -1044,12 +1044,11 @@ find_basic_blocks_1 (f)\n /* Tidy the CFG by deleting unreachable code and whatnot.  */\n \n void\n-cleanup_cfg (f)\n-     rtx f;\n+cleanup_cfg ()\n {\n   delete_unreachable_blocks ();\n   move_stray_eh_region_notes ();\n-  record_active_eh_regions (f);\n+  record_active_eh_regions (get_insns ());\n   try_merge_blocks ();\n   mark_critical_edges ();\n "}, {"sha": "7a5f10e82c9c8e83dc17cd6b272738479fb3116f", "filename": "gcc/output.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=2f2ee4bba2ea908f7676672935a81f8df590feb3", "patch": "@@ -133,7 +133,7 @@ extern int regno_uninitialized\t\tPARAMS ((int));\n extern int regno_clobbered_at_setjmp\tPARAMS ((int));\n extern void dump_flow_info\t\tPARAMS ((FILE *));\n extern void find_basic_blocks\t\tPARAMS ((rtx, int, FILE *));\n-extern void cleanup_cfg\t\t\tPARAMS ((rtx));\n+extern void cleanup_cfg\t\t\tPARAMS ((void));\n extern void free_basic_block_vars     PARAMS ((int));\n extern void set_block_num             PARAMS ((rtx, int));\n extern void check_function_return_warnings PARAMS ((void));"}, {"sha": "13f9c1f0069a8f512b617f8e6c67bc62362bb8d9", "filename": "gcc/sibcall.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2Fsibcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2Fsibcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsibcall.c?ref=2f2ee4bba2ea908f7676672935a81f8df590feb3", "patch": "@@ -514,7 +514,7 @@ optimize_sibling_and_tail_recursive_calls ()\n   /* We need cfg information to determine which blocks are succeeded\n      only by the epilogue.  */\n   find_basic_blocks (insns, max_reg_num (), 0);\n-  cleanup_cfg (insns);\n+  cleanup_cfg ();\n \n   /* If there are no basic blocks, then there is nothing to do.  */\n   if (n_basic_blocks == 0)"}, {"sha": "6016ca6230b6c7d92470dccbc90f46819c74e47a", "filename": "gcc/toplev.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f2ee4bba2ea908f7676672935a81f8df590feb3/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=2f2ee4bba2ea908f7676672935a81f8df590feb3", "patch": "@@ -2955,7 +2955,7 @@ rest_of_compilation (decl)\n   if (optimize > 0)\n     {\n       find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n-      cleanup_cfg (insns);\n+      cleanup_cfg ();\n \n       /* ??? Run if-conversion before delete_null_pointer_checks,\n          since the later does not preserve the CFG.  This should\n@@ -3025,7 +3025,7 @@ rest_of_compilation (decl)\n \t  timevar_push (TV_JUMP);\n \t  find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n \n-\t  cleanup_cfg (insns);\n+\t  cleanup_cfg ();\n \n \t  delete_null_pointer_checks (insns);\n \t  timevar_pop (TV_JUMP);\n@@ -3056,7 +3056,7 @@ rest_of_compilation (decl)\n       open_dump_file (DFI_ssa, decl);\n \n       find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n-      cleanup_cfg (insns);\n+      cleanup_cfg ();\n       convert_to_ssa ();\n \n       close_dump_file (DFI_ssa, print_rtl_with_bb, insns);\n@@ -3111,7 +3111,7 @@ rest_of_compilation (decl)\n       open_dump_file (DFI_gcse, decl);\n \n       find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n-      cleanup_cfg (insns);\n+      cleanup_cfg ();\n       tem = gcse_main (insns, rtl_dump_file);\n \n       save_csb = flag_cse_skip_blocks;\n@@ -3209,7 +3209,7 @@ rest_of_compilation (decl)\n \t  timevar_push (TV_IFCVT);\n \n \t  find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n-\t  cleanup_cfg (insns);\n+\t  cleanup_cfg ();\n \t  if_convert (0);\n \n \t  timevar_pop(TV_IFCVT);\n@@ -3255,7 +3255,7 @@ rest_of_compilation (decl)\n   open_dump_file (DFI_cfg, decl);\n \n   find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n-  cleanup_cfg (insns);\n+  cleanup_cfg ();\n   check_function_return_warnings ();\n \n   close_dump_file (DFI_cfg, print_rtl_with_bb, insns);\n@@ -3330,7 +3330,7 @@ rest_of_compilation (decl)\n \n \t  timevar_push (TV_FLOW);\n \t  find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n-\t  cleanup_cfg (insns);\n+\t  cleanup_cfg ();\n \n \t  /* Blimey.  We've got to have the CFG up to date for the call to\n \t     if_convert below.  However, the random deletion of blocks\n@@ -3544,7 +3544,7 @@ rest_of_compilation (decl)\n \n   if (optimize)\n     {\n-      cleanup_cfg (insns);\n+      cleanup_cfg ();\n       life_analysis (insns, rtl_dump_file, PROP_FINAL);\n \n       /* This is kind of a heuristic.  We need to run combine_stack_adjustments"}]}