{"sha": "818424b256bd6d50be4d52f71ec5c7fd6c065b63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE4NDI0YjI1NmJkNmQ1MGJlNGQ1MmY3MWVjNWM3ZmQ2YzA2NWI2Mw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2015-01-23T22:26:41Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-01-23T22:26:41Z"}, "message": "re PR go/64595 (go programs abort when debug info is stripped)\n\n\tPR go/64595\n\t* go-lang.c (go_langhook_init_options_struct): Set default\n\tdebug_info_level.\n\t(go_langhook_post_options): If debug_info_level is still the\n\tdefault, make sure write_symbols is set.\n\t* gccgo.texi (Invoking gccgo): Document that -g1 is the default.\n\nFrom-SVN: r220064", "tree": {"sha": "36f3ff32f6cdf2a9f3d5cf0594a3f3666b82d543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36f3ff32f6cdf2a9f3d5cf0594a3f3666b82d543"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/818424b256bd6d50be4d52f71ec5c7fd6c065b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818424b256bd6d50be4d52f71ec5c7fd6c065b63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/818424b256bd6d50be4d52f71ec5c7fd6c065b63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818424b256bd6d50be4d52f71ec5c7fd6c065b63/comments", "author": null, "committer": null, "parents": [{"sha": "af955a5298ee443339b378fb2beb337150924f33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af955a5298ee443339b378fb2beb337150924f33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af955a5298ee443339b378fb2beb337150924f33"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "d525f5dd7cf3291b3086e59303a05e64e6736238", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/818424b256bd6d50be4d52f71ec5c7fd6c065b63/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/818424b256bd6d50be4d52f71ec5c7fd6c065b63/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=818424b256bd6d50be4d52f71ec5c7fd6c065b63", "patch": "@@ -1,3 +1,12 @@\n+2015-01-23  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR go/64595\n+\t* go-lang.c (go_langhook_init_options_struct): Set default\n+\tdebug_info_level.\n+\t(go_langhook_post_options): If debug_info_level is still the\n+\tdefault, make sure write_symbols is set.\n+\t* gccgo.texi (Invoking gccgo): Document that -g1 is the default.\n+\n 2015-01-16  Richard Henderson  <rth@redhat.com>\n \n \t* go-gcc.cc (Gcc_backend::call_expression): Add chain_expr argument."}, {"sha": "45fc9d718e720926ead0c73afaf76d1629db8667", "filename": "gcc/go/gccgo.texi", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/818424b256bd6d50be4d52f71ec5c7fd6c065b63/gcc%2Fgo%2Fgccgo.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/818424b256bd6d50be4d52f71ec5c7fd6c065b63/gcc%2Fgo%2Fgccgo.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgccgo.texi?ref=818424b256bd6d50be4d52f71ec5c7fd6c065b63", "patch": "@@ -223,6 +223,18 @@ may be used.  Or the checks may be removed via\n @option{-fno-go-check-divide-overflow}.  This option is currently on\n by default, but in the future may be off by default on systems that do\n not require it.\n+\n+@item -g\n+@cindex @option{-g for gccgo}\n+This is the standard @command{gcc} option (@pxref{Debugging Options, ,\n+Debugging Options, gcc, Using the GNU Compiler Collection (GCC)}).  It\n+is mentioned here because by default @command{gccgo} turns on\n+debugging information generation with the equivalent of the standard\n+option @option{-g1}.  This is because Go programs require debugging\n+information to be available in order to get backtrace information.  An\n+explicit @option{-g0} may be used to disable the generation of\n+debugging information, in which case certain standard library\n+functions, such as @code{runtime.Callers}, will not operate correctly.\n @end table\n \n @c man end"}, {"sha": "fe5b583b51b55ed5d89ab30b9fa7ad1bf10fb352", "filename": "gcc/go/go-lang.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/818424b256bd6d50be4d52f71ec5c7fd6c065b63/gcc%2Fgo%2Fgo-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/818424b256bd6d50be4d52f71ec5c7fd6c065b63/gcc%2Fgo%2Fgo-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-lang.c?ref=818424b256bd6d50be4d52f71ec5c7fd6c065b63", "patch": "@@ -171,6 +171,12 @@ go_langhook_init_options_struct (struct gcc_options *opts)\n   /* Exceptions are used to handle recovering from panics.  */\n   opts->x_flag_exceptions = 1;\n   opts->x_flag_non_call_exceptions = 1;\n+\n+  /* Go programs expect runtime.Callers to work, and that uses\n+     libbacktrace that uses debug info.  Set the debug info level to 1\n+     by default.  In post_options we will set the debug type if the\n+     debug info level was not set back to 0 on the command line.  */\n+  opts->x_debug_info_level = DINFO_LEVEL_TERSE;\n }\n \n /* Infrastructure for a vector of char * pointers.  */\n@@ -289,6 +295,12 @@ go_langhook_post_options (const char **pfilename ATTRIBUTE_UNUSED)\n   if (!global_options_set.x_flag_optimize_sibling_calls)\n     global_options.x_flag_optimize_sibling_calls = 0;\n \n+  /* If the debug info level is still 1, as set in init_options, make\n+     sure that some debugging type is selected.  */\n+  if (global_options.x_debug_info_level == DINFO_LEVEL_TERSE\n+      && global_options.x_write_symbols == NO_DEBUG)\n+    global_options.x_write_symbols = PREFERRED_DEBUGGING_TYPE;\n+\n   /* Returning false means that the backend should be used.  */\n   return false;\n }"}]}