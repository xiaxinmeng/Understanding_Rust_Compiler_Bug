{"sha": "44d952440e2c353b61f0d9d377c0c4832167c475", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRkOTUyNDQwZTJjMzUzYjYxZjBkOWQzNzdjMGM0ODMyMTY3YzQ3NQ==", "commit": {"author": {"name": "Markus Trippelsdorf", "email": "markus@trippelsdorf.de", "date": "2015-03-04T17:28:56Z"}, "committer": {"name": "Markus Trippelsdorf", "email": "trippels@gcc.gnu.org", "date": "2015-03-04T17:28:56Z"}, "message": "re PR target/65261 (bootstrap-ubsan ppc64le: gcc/libcpp/lex.c:552:30: runtime error: load of misaligned address 0x01002172dfc6 for type 'const uchar', which requires 16 byte alignment)\n\nFix PR65261\n\nRunning bootstrap-ubsan on ppc64le shows many instances of:\n\n  libcpp/lex.c:552:30: runtime error: load of misaligned address\n  0x01001f31d37a for type 'const uchar', which requires 16 byte alignment\n\nBut the unaligned vector loads are intended in this case, because they\nare preferable to forced-alignment on POWER8. So just silence the ubsan\nerrors.\n\n2015-03-02  Markus Trippelsdorf  <markus@trippelsdorf.de>\n\ninclude/\n\tPR target/65261\n\t* ansidecl.h (ATTRIBUTE_NO_SANITIZE_UNDEFINED): New macro.\n\nlibcpp/\n\tPR target/65261\n\t* lex.c (search_line_fast): Silence ubsan errors.\n\nFrom-SVN: r221190", "tree": {"sha": "7ce90b82daec105b46dc60b65c6c3e744d05dd89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ce90b82daec105b46dc60b65c6c3e744d05dd89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44d952440e2c353b61f0d9d377c0c4832167c475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d952440e2c353b61f0d9d377c0c4832167c475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d952440e2c353b61f0d9d377c0c4832167c475", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d952440e2c353b61f0d9d377c0c4832167c475/comments", "author": null, "committer": null, "parents": [{"sha": "b6584a72ac8d305731e1771a05c117dc11a3d553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6584a72ac8d305731e1771a05c117dc11a3d553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6584a72ac8d305731e1771a05c117dc11a3d553"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "bd072ae59b4d02b45e24e98e15943dfff2eed016", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d952440e2c353b61f0d9d377c0c4832167c475/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d952440e2c353b61f0d9d377c0c4832167c475/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=44d952440e2c353b61f0d9d377c0c4832167c475", "patch": "@@ -1,3 +1,8 @@\n+2015-03-02  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR target/65261\n+\t* ansidecl.h (ATTRIBUTE_NO_SANITIZE_UNDEFINED): New macro.\n+\n 2015-02-19  Pedro Alves  <palves@redhat.com>\n \n \t* floatformat.h [__cplusplus]: Wrap in extern \"C\"."}, {"sha": "04d75c33f747220ddf9e4cfabb29f762bea3b749", "filename": "include/ansidecl.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d952440e2c353b61f0d9d377c0c4832167c475/include%2Fansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d952440e2c353b61f0d9d377c0c4832167c475/include%2Fansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fansidecl.h?ref=44d952440e2c353b61f0d9d377c0c4832167c475", "patch": "@@ -276,6 +276,15 @@ So instead we use the macro below and test it against specific values.  */\n # endif /* GNUC >= 4.3 */\n #endif /* ATTRIBUTE_HOT */\n \n+/* Attribute 'no_sanitize_undefined' was valid as of gcc 4.9.  */\n+#ifndef ATTRIBUTE_NO_SANITIZE_UNDEFINED\n+# if (GCC_VERSION >= 4009)\n+#  define ATTRIBUTE_NO_SANITIZE_UNDEFINED __attribute__ ((no_sanitize_undefined))\n+# else\n+#  define ATTRIBUTE_NO_SANITIZE_UNDEFINED\n+# endif /* GNUC >= 4.9 */\n+#endif /* ATTRIBUTE_NO_SANITIZE_UNDEFINED */\n+\n /* We use __extension__ in some places to suppress -pedantic warnings\n    about GCC extensions.  This feature didn't work properly before\n    gcc 2.8.  */"}, {"sha": "2d84835b7b726f1c19bf2c4b11e87bbc4554bc00", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d952440e2c353b61f0d9d377c0c4832167c475/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d952440e2c353b61f0d9d377c0c4832167c475/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=44d952440e2c353b61f0d9d377c0c4832167c475", "patch": "@@ -1,3 +1,8 @@\n+2015-03-02  Markus Trippelsdorf  <markus@trippelsdorf.de>\n+\n+\tPR target/65261\n+\t* lex.c (search_line_fast): Silence ubsan errors.\n+\n 2015-02-03    <dodji@redhat.com>\n \n \tPR preprocessor/64803"}, {"sha": "0dc473711833ce545b04ebc443ae991ec591477a", "filename": "libcpp/lex.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d952440e2c353b61f0d9d377c0c4832167c475/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d952440e2c353b61f0d9d377c0c4832167c475/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=44d952440e2c353b61f0d9d377c0c4832167c475", "patch": "@@ -519,6 +519,7 @@ init_vectorized_lexer (void)\n    and VSX unaligned loads (when VSX is available).  This is otherwise\n    the same as the pre-GCC 5 version.  */\n \n+ATTRIBUTE_NO_SANITIZE_UNDEFINED\n static const uchar *\n search_line_fast (const uchar *s, const uchar *end ATTRIBUTE_UNUSED)\n {"}]}