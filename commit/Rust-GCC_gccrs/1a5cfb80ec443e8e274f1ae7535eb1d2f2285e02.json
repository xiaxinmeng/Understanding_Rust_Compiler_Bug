{"sha": "1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE1Y2ZiODBlYzQ0M2U4ZTI3NGYxYWU3NTM1ZWIxZDJmMjI4NWUwMg==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-04-19T22:42:00Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-04-19T22:42:00Z"}, "message": "clarify -malign-double situation\n\nFrom-SVN: r26555", "tree": {"sha": "7ede6d1fa2d788c937ba2fc1d42d156a31cfc90a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ede6d1fa2d788c937ba2fc1d42d156a31cfc90a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02/comments", "author": null, "committer": null, "parents": [{"sha": "bded05359b10cb1d7ff4f2c980ff83b5d4660ee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bded05359b10cb1d7ff4f2c980ff83b5d4660ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bded05359b10cb1d7ff4f2c980ff83b5d4660ee9"}], "stats": {"total": 48, "additions": 11, "deletions": 37}, "files": [{"sha": "fb17af47e78c94d86b703d16680a2b0c90a8f791", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02", "patch": "@@ -1,3 +1,7 @@\n+Tue Apr 20 01:38:57 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\t* bugs.texi, news.texi: Clarify -malign-double situation.\n+\n Tue Apr 20 01:15:25 1999  Craig Burley  <craig@jcb-sc.com>\n \n \t* stb.c (ffestb_R5282_): Convert DATA repeat count"}, {"sha": "c9a486cccbc8ad0ed9c665a560baf318b6454d7f", "filename": "gcc/f/bugs.texi", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02/gcc%2Ff%2Fbugs.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02/gcc%2Ff%2Fbugs.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbugs.texi?ref=1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02", "patch": "@@ -9,7 +9,7 @@\n @c in the standalone derivations of this file (e.g. BUGS).\n @set copyrights-bugs 1995-1999\n \n-@set last-update-bugs 1999-04-17\n+@set last-update-bugs 1999-04-20\n \n @include root.texi\n \n@@ -265,42 +265,6 @@ of specifications of alignment requirements and preferences for targets,\n and front ends like @code{g77} should take advantage of this\n when it becomes available.\n \n-@cindex alignment\n-@cindex double-precision performance\n-@cindex -malign-double\n-@item\n-The x86 target's @samp{-malign-double} option\n-no longer reliably aligns double-precision variables and arrays\n-when they are placed in the stack frame.\n-\n-This can significantly reduce the performance of some applications,\n-even on a run-to-run basis\n-(that is, performance measurements can vary fairly widely\n-depending on whether frequently used variables are properly aligned,\n-and that can change from one program run to the next,\n-even from one procedure call to the next).\n-\n-Versions 0.5.22 and earlier of @code{g77}\n-included a patch to @code{gcc} that enabled this,\n-but that patch has been deemed an improper (probably buggy) one\n-for version 2.8 of @code{gcc} and for @code{egcs}.\n-\n-Note that version 1.1 of @code{egcs}\n-aligns double-precision variables and arrays\n-when they are in static storage\n-even if @samp{-malign-double} is not specified.\n-\n-There is ongoing investigation into\n-how to make @samp{-malign-double} work properly,\n-also into how to make it unnecessary to get\n-all double-precision variables and arrays aligned\n-when such alignment would not violate\n-the relevant specifications for processor\n-and inter-procedural interfaces.\n-\n-For a suite of programs to test double-precision alignment,\n-see @uref{ftp://alpha.gnu.org/gnu/g77/align/}.\n-\n @cindex complex performance\n @cindex aliasing\n @item"}, {"sha": "37acb1ca1ba33ea089fd47df462197f917819fb3", "filename": "gcc/f/news.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02/gcc%2Ff%2Fnews.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02/gcc%2Ff%2Fnews.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fnews.texi?ref=1a5cfb80ec443e8e274f1ae7535eb1d2f2285e02", "patch": "@@ -224,6 +224,12 @@ The @samp{-malign-double} option\n now reliably aligns @emph{all} double-precision variables and arrays\n on Intel x86 targets.\n \n+@item\n+Even without the @samp{-malign-double} option,\n+@code{g77} reliably aligns local double-precision variables\n+that are not in @code{EQUIVALENCE} areas\n+and not @code{SAVE}'d.\n+\n @item\n A substantial portion of the @code{g77} front end's code-generation component\n was rewritten."}]}