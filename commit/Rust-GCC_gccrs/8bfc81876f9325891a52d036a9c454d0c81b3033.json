{"sha": "8bfc81876f9325891a52d036a9c454d0c81b3033", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJmYzgxODc2ZjkzMjU4OTFhNTJkMDM2YTljNDU0ZDBjODFiMzAzMw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-05-08T11:36:32Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-05-17T11:46:32Z"}, "message": "Move operand_less_p to vr-values.c.", "tree": {"sha": "74a757aa0d3cd6309354971ef8455858b1f2019b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74a757aa0d3cd6309354971ef8455858b1f2019b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bfc81876f9325891a52d036a9c454d0c81b3033", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bfc81876f9325891a52d036a9c454d0c81b3033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bfc81876f9325891a52d036a9c454d0c81b3033", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bfc81876f9325891a52d036a9c454d0c81b3033/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b461bdb48956a89dd589abb96e540c0afcc3fee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b461bdb48956a89dd589abb96e540c0afcc3fee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b461bdb48956a89dd589abb96e540c0afcc3fee"}], "stats": {"total": 59, "additions": 32, "deletions": 27}, "files": [{"sha": "5c90953edb1ff2dfac05a5090b8b9c2516895f6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfc81876f9325891a52d036a9c454d0c81b3033/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfc81876f9325891a52d036a9c454d0c81b3033/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bfc81876f9325891a52d036a9c454d0c81b3033", "patch": "@@ -1,3 +1,9 @@\n+2020-05-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (operand_less_p): Move to...\n+\t* vr-values.c (operand_less_p): ...here.\n+\t* tree-vrp.h (operand_less_p): Remove.\n+\n 2020-05-17  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-vrp.c (class vrp_insert): Remove prototype for"}, {"sha": "f8191facaf9c642023c9b78ced347c01572e1c0b", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfc81876f9325891a52d036a9c454d0c81b3033/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfc81876f9325891a52d036a9c454d0c81b3033/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=8bfc81876f9325891a52d036a9c454d0c81b3033", "patch": "@@ -685,32 +685,6 @@ build_symbolic_expr (tree type, tree sym, bool neg, tree inv)\n   return build2 (pointer_p ? POINTER_PLUS_EXPR : PLUS_EXPR, type, t, inv);\n }\n \n-/* Return\n-   1 if VAL < VAL2\n-   0 if !(VAL < VAL2)\n-   -2 if those are incomparable.  */\n-int\n-operand_less_p (tree val, tree val2)\n-{\n-  /* LT is folded faster than GE and others.  Inline the common case.  */\n-  if (TREE_CODE (val) == INTEGER_CST && TREE_CODE (val2) == INTEGER_CST)\n-    return tree_int_cst_lt (val, val2);\n-  else if (TREE_CODE (val) == SSA_NAME && TREE_CODE (val2) == SSA_NAME)\n-    return val == val2 ? 0 : -2;\n-  else\n-    {\n-      int cmp = compare_values (val, val2);\n-      if (cmp == -1)\n-\treturn 1;\n-      else if (cmp == 0 || cmp == 1)\n-\treturn 0;\n-      else\n-\treturn -2;\n-    }\n-\n-  return 0;\n-}\n-\n /* Compare two values VAL1 and VAL2.  Return\n \n    \t-2 if VAL1 and VAL2 cannot be compared at compile-time,"}, {"sha": "b74fe0059fcb3a863cf4ac355b42fee746219fc1", "filename": "gcc/tree-vrp.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfc81876f9325891a52d036a9c454d0c81b3033/gcc%2Ftree-vrp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfc81876f9325891a52d036a9c454d0c81b3033/gcc%2Ftree-vrp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.h?ref=8bfc81876f9325891a52d036a9c454d0c81b3033", "patch": "@@ -116,7 +116,6 @@ extern bool range_int_cst_p (const value_range *);\n \n extern int compare_values (tree, tree);\n extern int compare_values_warnv (tree, tree, bool *);\n-extern int operand_less_p (tree, tree);\n \n void range_fold_unary_expr (value_range *, enum tree_code, tree type,\n \t\t\t    const value_range *, tree op0_type);"}, {"sha": "f7cba16aa6340fbac5fb7586c66f404180b5f81a", "filename": "gcc/vr-values.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfc81876f9325891a52d036a9c454d0c81b3033/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfc81876f9325891a52d036a9c454d0c81b3033/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=8bfc81876f9325891a52d036a9c454d0c81b3033", "patch": "@@ -1104,6 +1104,32 @@ vr_values::check_for_binary_op_overflow (enum tree_code subcode, tree type,\n   return true;\n }\n \n+/* Return\n+   1 if VAL < VAL2\n+   0 if !(VAL < VAL2)\n+   -2 if those are incomparable.  */\n+static int\n+operand_less_p (tree val, tree val2)\n+{\n+  /* LT is folded faster than GE and others.  Inline the common case.  */\n+  if (TREE_CODE (val) == INTEGER_CST && TREE_CODE (val2) == INTEGER_CST)\n+    return tree_int_cst_lt (val, val2);\n+  else if (TREE_CODE (val) == SSA_NAME && TREE_CODE (val2) == SSA_NAME)\n+    return val == val2 ? 0 : -2;\n+  else\n+    {\n+      int cmp = compare_values (val, val2);\n+      if (cmp == -1)\n+\treturn 1;\n+      else if (cmp == 0 || cmp == 1)\n+\treturn 0;\n+      else\n+\treturn -2;\n+    }\n+\n+  return 0;\n+}\n+\n /* Try to derive a nonnegative or nonzero range out of STMT relying\n    primarily on generic routines in fold in conjunction with range data.\n    Store the result in *VR */"}]}