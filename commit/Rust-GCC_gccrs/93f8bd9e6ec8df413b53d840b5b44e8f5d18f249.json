{"sha": "93f8bd9e6ec8df413b53d840b5b44e8f5d18f249", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNmOGJkOWU2ZWM4ZGY0MTNiNTNkODQwYjViNDRlOGY1ZDE4ZjI0OQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-09-06T18:37:21Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-09-06T18:37:21Z"}, "message": "Makefile.in (rtl.o, bitmap.o): Correct dependencies, remove unnecessary commands.\n\n\t* Makefile.in (rtl.o, bitmap.o): Correct dependencies, remove\n\tunnecessary commands.\n\nFrom-SVN: r87122", "tree": {"sha": "2e2fa3caf1ae6445be0793788af2981bc492957d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e2fa3caf1ae6445be0793788af2981bc492957d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93f8bd9e6ec8df413b53d840b5b44e8f5d18f249", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f8bd9e6ec8df413b53d840b5b44e8f5d18f249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93f8bd9e6ec8df413b53d840b5b44e8f5d18f249", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f8bd9e6ec8df413b53d840b5b44e8f5d18f249/comments", "author": null, "committer": null, "parents": [{"sha": "ff4eb0b5ff4c7607e1ff7e0be67f4a0c09caa326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff4eb0b5ff4c7607e1ff7e0be67f4a0c09caa326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff4eb0b5ff4c7607e1ff7e0be67f4a0c09caa326"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "fec3053e13e3add56842364b775ad0882f6e8806", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f8bd9e6ec8df413b53d840b5b44e8f5d18f249/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f8bd9e6ec8df413b53d840b5b44e8f5d18f249/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93f8bd9e6ec8df413b53d840b5b44e8f5d18f249", "patch": "@@ -1,3 +1,8 @@\n+2004-09-06  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* Makefile.in (rtl.o, bitmap.o): Correct dependencies, remove\n+\tunnecessary commands.\n+\n 2004-09-06  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* Makefile.in (rtl.o): Remove -DGENERATOR_FILE.\n@@ -422,20 +427,20 @@\n \n 2004-09-03  Richard Henderson  <rth@redhat.com>\n \n-        PR middle-end/9997\n-        * cfgexpand.c (LOCAL_ALIGNMENT): Provide default.\n-        (STACK_ALIGNMENT_NEEDED, FRAME_GROWS_DOWNWARD): Likewise.\n-        (struct stack_var, EOC, stack_vars, stack_vars_alloc, stack_vars_num,\n-        stack_vars_sorted, stack_vars_conflict, stack_vars_conflict_alloc,\n-        frame_phase, get_decl_align_unit, add_stack_var, triangular_index,\n-        resize_stack_vars_conflict, add_stack_var_conflict,\n-        stack_var_conflict_p, add_alias_set_conflicts, stack_var_size_cmp,\n-        union_stack_vars, partition_stack_vars, dump_stack_var_partition,\n-        expand_one_stack_var_at, expand_stack_vars, expand_one_stack_var,\n+\tPR middle-end/9997\n+\t* cfgexpand.c (LOCAL_ALIGNMENT): Provide default.\n+\t(STACK_ALIGNMENT_NEEDED, FRAME_GROWS_DOWNWARD): Likewise.\n+\t(struct stack_var, EOC, stack_vars, stack_vars_alloc, stack_vars_num,\n+\tstack_vars_sorted, stack_vars_conflict, stack_vars_conflict_alloc,\n+\tframe_phase, get_decl_align_unit, add_stack_var, triangular_index,\n+\tresize_stack_vars_conflict, add_stack_var_conflict,\n+\tstack_var_conflict_p, add_alias_set_conflicts, stack_var_size_cmp,\n+\tunion_stack_vars, partition_stack_vars, dump_stack_var_partition,\n+\texpand_one_stack_var_at, expand_stack_vars, expand_one_stack_var,\n \texpand_one_static_var, expand_one_hard_reg_var,\n \texpand_one_register_var, expand_one_error_var, defer_stack_allocation,\n \texpand_one_var, expand_used_vars_for_block, clear_tree_used): New.\n-        (expand_used_vars): Rewrite.\n+\t(expand_used_vars): Rewrite.\n \t* Makefile.in (cfgexpand.o): Update dependencies.\n \n 2004-09-04  Jan Hubicka  <jh@suse.cz>"}, {"sha": "cb222d99b73e168ab4defa9f0ec4940f977ca333", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f8bd9e6ec8df413b53d840b5b44e8f5d18f249/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f8bd9e6ec8df413b53d840b5b44e8f5d18f249/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=93f8bd9e6ec8df413b53d840b5b44e8f5d18f249", "patch": "@@ -1829,9 +1829,8 @@ host-default.o : host-default.c $(CONFIG_H) $(SYSTEM_H) $(HOOKS_H) coretypes.h \\\n rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(INSN_ATTR_H) \\\n    insn-config.h input.h toplev.h intl.h $(DIAGNOSTIC_H) $(CONFIG_H)\n \n-rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) $(RTL_H) real.h \\\n+rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) real.h \\\n   $(GGC_H) errors.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H) real.h $(FLAGS_H)\n@@ -2057,9 +2056,8 @@ regclass.o : regclass.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n    output.h function.h $(INSN_ATTR_H) toplev.h  except.h $(TM_P_H)\n-bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(GTM_H) $(RTL_H) $(FLAGS_H) \\\n+bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n    $(BASIC_BLOCK_H) $(REGS_H) $(GGC_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n global.o : global.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n    reload.h function.h $(RECOG_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h\\\n    insn-config.h output.h toplev.h $(TM_P_H)"}]}