{"sha": "1c57e8763bb9fea0aea2bbe98883b56c3248c9c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM1N2U4NzYzYmI5ZmVhMGFlYTJiYmU5ODg4M2I1NmMzMjQ4YzljNQ==", "commit": {"author": {"name": "Wil Mahan", "email": "wmahan@gmail.com", "date": "2005-11-08T19:10:39Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-11-08T19:10:39Z"}, "message": "re PR java/23617 (Out of memory when classpath contains jar file with zip-style comment)\n\n2005-11-08  Wil Mahan  <wmahan@gmail.com>\n\n\tPR java/23617\n\t* zextract.c (read_zip_archive): Fix out of memory error when\n\treading jar files with zip-style comments.\n\nFrom-SVN: r106648", "tree": {"sha": "02f067118f66733f528d5903be6307b87e0fb3e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02f067118f66733f528d5903be6307b87e0fb3e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c57e8763bb9fea0aea2bbe98883b56c3248c9c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c57e8763bb9fea0aea2bbe98883b56c3248c9c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c57e8763bb9fea0aea2bbe98883b56c3248c9c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c57e8763bb9fea0aea2bbe98883b56c3248c9c5/comments", "author": null, "committer": null, "parents": [{"sha": "a8bfea9ca9505c79fab6ad75c6d90bccbb485b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8bfea9ca9505c79fab6ad75c6d90bccbb485b22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8bfea9ca9505c79fab6ad75c6d90bccbb485b22"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "093fc8fb089f59acdeeaac5d8e2c4c6b88d7341b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c57e8763bb9fea0aea2bbe98883b56c3248c9c5/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c57e8763bb9fea0aea2bbe98883b56c3248c9c5/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1c57e8763bb9fea0aea2bbe98883b56c3248c9c5", "patch": "@@ -1,3 +1,9 @@\n+2005-11-08  Wil Mahan  <wmahan@gmail.com>\n+\n+\tPR java/23617\n+\t* zextract.c (read_zip_archive): Fix out of memory error when\n+\treading jar files with zip-style comments.\n+\n 2005-11-07   Terry Laurenzo   <tlaurenzo@gmail.com>\n \n \t* gjavah.c (HANDLE_CODE_ATTRIBUTE): Only define for ELF Object"}, {"sha": "461cfbd493c3e85048c610453abbb45f9cee4eee", "filename": "gcc/java/zextract.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c57e8763bb9fea0aea2bbe98883b56c3248c9c5/gcc%2Fjava%2Fzextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c57e8763bb9fea0aea2bbe98883b56c3248c9c5/gcc%2Fjava%2Fzextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fzextract.c?ref=1c57e8763bb9fea0aea2bbe98883b56c3248c9c5", "patch": "@@ -1,7 +1,7 @@\n /* Handle a .class file embedded in a .zip archive.\n    This extracts a member from a .zip file, but does not handle\n    uncompression (since that is not needed for classes.zip).\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -287,6 +287,25 @@ read_zip_archive (ZipFile *zipf)\n     return -1;\n   if (read (zipf->fd, buffer, ECREC_SIZE+4) != ECREC_SIZE+4)\n     return -2;\n+  if (buffer[0] != 'P'\n+      || strncmp ((const char *) &buffer[1], END_CENTRAL_SIG, 3))\n+    {\n+      /* We could not find the end-central-header signature, probably\n+\t because a zipfile comment is present. Scan backwards until we\n+\t find the signature. */\n+      if (lseek (zipf->fd, (long)(-ECREC_SIZE), SEEK_END) <= 0)\n+\treturn -2;\n+      while (buffer[0] != 'P'\n+\t     || strncmp ((const char *) &buffer[1], END_CENTRAL_SIG, 3))\n+\t{\n+\t  if (lseek (zipf->fd, -5, SEEK_CUR) < 0)\n+\t    return -2;\n+\t  if (read (zipf->fd, buffer, 4) != 4)\n+\t    return -2;\n+\t}\n+      if (read (zipf->fd, buffer + 4, ECREC_SIZE) != ECREC_SIZE)\n+\treturn -2;\n+    }\n   zipf->count = makeword((const uch *) &buffer[TOTAL_ENTRIES_CENTRAL_DIR]);\n   zipf->dir_size = makelong((const uch *) &buffer[SIZE_CENTRAL_DIRECTORY]);\n #define ALLOC xmalloc"}]}