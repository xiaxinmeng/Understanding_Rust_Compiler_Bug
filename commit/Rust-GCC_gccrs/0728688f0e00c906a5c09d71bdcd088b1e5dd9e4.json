{"sha": "0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcyODY4OGYwZTAwYzkwNmE1YzA5ZDcxYmRjZDA4OGIxZTVkZDllNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-03-31T07:43:52Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-03-31T07:43:52Z"}, "message": "Makefile.in (c-gperf.h): Generate using gperf language 'C'...\n\n        * Makefile.in (c-gperf.h): Generate using gperf language 'C', not\n        'KR-C', so gperf uses the `const' keyword on strings.\n        * c-parse.gperf (resword): Const-ify a char*.\n\nFrom-SVN: r26079", "tree": {"sha": "fd023e5c641ac84a1b4ede05b2b44a12707e3a49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd023e5c641ac84a1b4ede05b2b44a12707e3a49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4/comments", "author": null, "committer": null, "parents": [{"sha": "baa5df30bbd1f2bca85e28f30aa5de27dcd1d7fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baa5df30bbd1f2bca85e28f30aa5de27dcd1d7fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baa5df30bbd1f2bca85e28f30aa5de27dcd1d7fa"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "0baed386ac04d0cafb4bee47251504b6f5f3464d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "patch": "@@ -1,3 +1,10 @@\n+Wed Mar 31 10:33:37 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+        * Makefile.in (c-gperf.h): Generate using gperf language 'C', not\n+        'KR-C', so gperf uses the `const' keyword on strings.\n+\t \n+        * c-parse.gperf (resword): Const-ify a char*.\n+\n Wed Mar 31 01:49:31 1999  Ian Lance Taylor  <ian@zembu.com>\n \n \t* t-rtems (LIMITS_H_TEST, LIBGCC2_INCLUDES): Define."}, {"sha": "5073767ab07ec149690224b74b56b797cf10e643", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "patch": "@@ -1325,7 +1325,7 @@ $(srcdir)/c-parse.y: c-parse.in\n \t$(srcdir)/move-if-change tmp-c-parse.y $(srcdir)/c-parse.y\n \n $(srcdir)/c-gperf.h: c-parse.gperf\n-\tgperf -L KR-C -F ', 0, 0' -p -j1 -i 1 -g -o -t -G -N is_reserved_word \\\n+\tgperf -L C -F ', 0, 0' -p -j1 -i 1 -g -o -t -G -N is_reserved_word \\\n \t   -k1,3,$$ $(srcdir)/c-parse.gperf >tmp-gperf.h\n \t $(srcdir)/move-if-change tmp-gperf.h $(srcdir)/c-gperf.h\n "}, {"sha": "0b79d11e7c9e5b74abf633b424087c680e8d4d1c", "filename": "gcc/c-gperf.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4/gcc%2Fc-gperf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4/gcc%2Fc-gperf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-gperf.h?ref=0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "patch": "@@ -1,7 +1,7 @@\n-/* KR-C code produced by gperf version 2.7.1 (19981006 egcs) */\n-/* Command-line: gperf -L KR-C -F , 0, 0 -p -j1 -i 1 -g -o -t -G -N is_reserved_word -k1,3,$ ../../gcc/c-parse.gperf  */\n+/* C code produced by gperf version 2.7.1 (19981006 egcs) */\n+/* Command-line: gperf -L C -F , 0, 0 -p -j1 -i 1 -g -o -t -G -N is_reserved_word -k1,3,$ ./c-parse.gperf  */\n /* Command-line: gperf -L KR-C -F ', 0, 0' -p -j1 -i 1 -g -o -t -N is_reserved_word -k1,3,$ c-parse.gperf  */ \n-struct resword { char *name; short token; enum rid rid; };\n+struct resword { const char *name; short token; enum rid rid; };\n \n #define TOTAL_KEYWORDS 83\n #define MIN_WORD_LENGTH 2\n@@ -15,7 +15,7 @@ __inline\n #endif\n static unsigned int\n hash (str, len)\n-     register char *str;\n+     register const char *str;\n      register unsigned int len;\n {\n   static unsigned char asso_values[] =\n@@ -177,7 +177,7 @@ __inline\n #endif\n struct resword *\n is_reserved_word (str, len)\n-     register char *str;\n+     register const char *str;\n      register unsigned int len;\n {\n   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)\n@@ -186,7 +186,7 @@ is_reserved_word (str, len)\n \n       if (key <= MAX_HASH_VALUE && key >= 0)\n         {\n-          register char *s = wordlist[key].name;\n+          register const char *s = wordlist[key].name;\n \n           if (*str == *s && !strcmp (str + 1, s + 1))\n             return &wordlist[key];"}, {"sha": "888eee9ebe1fce5b9cca42c3bd5be102b7eb2b13", "filename": "gcc/c-parse.gperf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4/gcc%2Fc-parse.gperf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0728688f0e00c906a5c09d71bdcd088b1e5dd9e4/gcc%2Fc-parse.gperf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.gperf?ref=0728688f0e00c906a5c09d71bdcd088b1e5dd9e4", "patch": "@@ -1,7 +1,7 @@\n %{\n /* Command-line: gperf -L KR-C -F ', 0, 0' -p -j1 -i 1 -g -o -t -N is_reserved_word -k1,3,$ c-parse.gperf  */ \n %}\n-struct resword { char *name; short token; enum rid rid; };\n+struct resword { const char *name; short token; enum rid rid; };\n %%\n @class, CLASS, NORID\n @compatibility_alias, ALIAS, NORID"}]}