{"sha": "5cbc4e2a24771aea2363d231bd670dce59cd4bd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNiYzRlMmEyNDc3MWFlYTIzNjNkMjMxYmQ2NzBkY2U1OWNkNGJkMw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2014-10-23T19:02:48Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2014-10-23T19:02:48Z"}, "message": "msp430.c (msp430_print_operand): 'x' modifier is independend of -mlarge.\n\n* config/msp430/msp430.c (msp430_print_operand): 'x' modifier is\nindependend of -mlarge.\n* config/msp430/constraints.md (Ys): Update comment.\n\nFrom-SVN: r216598", "tree": {"sha": "f3160a9df26f8f968353620aad77917eb0ae1a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3160a9df26f8f968353620aad77917eb0ae1a96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cbc4e2a24771aea2363d231bd670dce59cd4bd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cbc4e2a24771aea2363d231bd670dce59cd4bd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cbc4e2a24771aea2363d231bd670dce59cd4bd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cbc4e2a24771aea2363d231bd670dce59cd4bd3/comments", "author": null, "committer": null, "parents": [{"sha": "13e72e8d16cf03b6e809961c79f101f41960c35d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e72e8d16cf03b6e809961c79f101f41960c35d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13e72e8d16cf03b6e809961c79f101f41960c35d"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "33249e5ecb33456b2dec9ffe62e04d12cc904e32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cbc4e2a24771aea2363d231bd670dce59cd4bd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cbc4e2a24771aea2363d231bd670dce59cd4bd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cbc4e2a24771aea2363d231bd670dce59cd4bd3", "patch": "@@ -1,3 +1,9 @@\n+2014-10-23  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/msp430/msp430.c (msp430_print_operand): 'x' modifier is\n+\tindependend of -mlarge.\n+\t* config/msp430/constraints.md (Ys): Update comment.\n+\n 2014-10-23  Evgeny Stupachenko  <evstupac@gmail.com>\n \n \tPR target/63534"}, {"sha": "5ff4ab6164b8788f29f96928ad2be5bd13179e7c", "filename": "gcc/config/msp430/constraints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cbc4e2a24771aea2363d231bd670dce59cd4bd3/gcc%2Fconfig%2Fmsp430%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cbc4e2a24771aea2363d231bd670dce59cd4bd3/gcc%2Fconfig%2Fmsp430%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fconstraints.md?ref=5cbc4e2a24771aea2363d231bd670dce59cd4bd3", "patch": "@@ -58,7 +58,7 @@\n        (match_code \"label_ref\" \"0\")))\n \n \n-;; These are memory references that are safe to use with the X suffix,\n+;; These are memory references that are safe to use without the X suffix,\n ;; because we know/assume they need not index across the 64k boundary.\n (define_constraint \"Ys\"\n   \"Memory reference, stack only.\""}, {"sha": "43ac5df77a2c8d82d0b78894b83f7b63be882a1b", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cbc4e2a24771aea2363d231bd670dce59cd4bd3/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cbc4e2a24771aea2363d231bd670dce59cd4bd3/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=5cbc4e2a24771aea2363d231bd670dce59cd4bd3", "patch": "@@ -2607,7 +2607,7 @@ msp430_print_operand (FILE * file, rtx op, int letter)\n \n     case 'x':\n       /* Similarly, but only for PSImodes.  BIC, for example, needs this.  */\n-      if (TARGET_LARGE && GET_MODE (op) == PSImode)\n+      if (GET_MODE (op) == PSImode)\n \tfprintf (file, \"X\");\n       return;\n "}]}