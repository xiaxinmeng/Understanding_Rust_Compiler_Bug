{"sha": "91606ce253d4a47b11d3299dbb9fdad533c7cbc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE2MDZjZTI1M2Q0YTQ3YjExZDMyOTlkYmI5ZmRhZDUzM2M3Y2JjMw==", "commit": {"author": {"name": "Chandra Chavva", "email": "cchavva@gcc.gnu.org", "date": "2000-11-14T17:06:06Z"}, "committer": {"name": "Chandra Chavva", "email": "cchavva@gcc.gnu.org", "date": "2000-11-14T17:06:06Z"}, "message": "New option --target-help.\n\nFrom-SVN: r37456", "tree": {"sha": "82fcb7ad57d0d0955376822c31e00ce79fcaf5b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82fcb7ad57d0d0955376822c31e00ce79fcaf5b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91606ce253d4a47b11d3299dbb9fdad533c7cbc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91606ce253d4a47b11d3299dbb9fdad533c7cbc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91606ce253d4a47b11d3299dbb9fdad533c7cbc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91606ce253d4a47b11d3299dbb9fdad533c7cbc3/comments", "author": null, "committer": null, "parents": [{"sha": "ef90743a44133219a86d9676198d5d010d113719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef90743a44133219a86d9676198d5d010d113719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef90743a44133219a86d9676198d5d010d113719"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "673cd5edd603c503f2759363532a3c061db23709", "filename": "gcc/cppinit.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91606ce253d4a47b11d3299dbb9fdad533c7cbc3/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91606ce253d4a47b11d3299dbb9fdad533c7cbc3/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=91606ce253d4a47b11d3299dbb9fdad533c7cbc3", "patch": "@@ -1025,6 +1025,7 @@ new_pending_directive (pend, text, handler)\n   DEF_OPT(\"$\",                        0,      OPT_dollar)                     \\\n   DEF_OPT(\"+\",                        0,      OPT_plus)                       \\\n   DEF_OPT(\"-help\",                    0,      OPT__help)                      \\\n+  DEF_OPT(\"-target-help\",             0,      OPT_target__help)               \\\n   DEF_OPT(\"-version\",                 0,      OPT__version)                   \\\n   DEF_OPT(\"A\",                        no_ass, OPT_A)                          \\\n   DEF_OPT(\"C\",                        0,      OPT_C)                          \\\n@@ -1271,6 +1272,10 @@ cpp_handle_option (pfile, argc, argv)\n \t  print_help ();\n \t  exit (0);  /* XXX */\n \t  break;\n+\tcase OPT_target__help:\n+          /* Print if any target specific options. */\n+          exit (0);\n+          break;\n \tcase OPT__version:\n \t  fprintf (stderr, _(\"GNU CPP version %s (cpplib)\\n\"), version_string);\n \t  exit (0);  /* XXX */"}, {"sha": "fa9b7cda95327b20d63802daad5ea40e730026fd", "filename": "gcc/gcc.c", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91606ce253d4a47b11d3299dbb9fdad533c7cbc3/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91606ce253d4a47b11d3299dbb9fdad533c7cbc3/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=91606ce253d4a47b11d3299dbb9fdad533c7cbc3", "patch": "@@ -136,6 +136,10 @@ static int print_help_list;\n \n static int verbose_flag;\n \n+/* Flag indicating to print target specific command line options. */\n+\n+static int target_help_flag;\n+\n /* Flag indicating whether we should report subprocess execution times\n    (if this is supported by the system - see pexecute.c).  */\n \n@@ -597,6 +601,7 @@ static const char *cc1_options =\n  %{g*} %{O*} %{W*} %{w} %{pedantic*} %{std*} %{ansi}\\\n  %{traditional} %{v:-version} %{pg:-p} %{p} %{f*}\\\n  %{aux-info*} %{Qn:-fno-ident} %{--help:--help}\\\n+ %{--target-help:--target-help}\\\n  %{!fsyntax-only:%{S:%W{o*}%{!o*:-o %b.s}}}\\\n  %{fsyntax-only:-o %j}\";\n \n@@ -2760,6 +2765,7 @@ display_help ()\n \n   fputs (_(\"  -pass-exit-codes         Exit with highest error code from a phase\\n\"), stdout);\n   fputs (_(\"  --help                   Display this information\\n\"), stdout);\n+  fputs (_(\"  --target-help            Display target specific command line options\\n\"), stdout);\n   if (! verbose_flag)\n     fputs (_(\"  (Use '-v --help' to display command line options of sub-processes)\\n\"), stdout);\n   fputs (_(\"  -dumpspecs               Display all of the built in spec strings\\n\"), stdout);\n@@ -3085,6 +3091,19 @@ process_command (argc, argv)\n \t  add_assembler_option (\"--help\", 6);\n \t  add_linker_option (\"--help\", 6);\n \t}\n+      else if (strcmp (argv[i], \"-ftarget-help\") == 0)\n+        {\n+          /* translate_options() has turned --target-help into -ftarget-help. */\n+          target_help_flag = 1;\n+\n+          /* We will be passing a dummy file on to the sub-processes.  */\n+          n_infiles++;\n+          n_switches++;\n+\n+          add_preprocessor_option (\"--target-help\", 13);\n+          add_assembler_option (\"--target-help\", 13);\n+          add_linker_option (\"--target-help\", 13);\n+        }\n       else if (! strcmp (argv[i], \"-pass-exit-codes\"))\n \t{\n \t  pass_exit_codes = 1;\n@@ -3525,6 +3544,22 @@ process_command (argc, argv)\n \t;\n       else if (! strcmp (argv[i], \"-print-multi-directory\"))\n \t;\n+      else if (strcmp (argv[i], \"-ftarget-help\") == 0)\n+        {\n+           /* Create a dummy input file, so that we can pass --target-help on to\n+              the various sub-processes.  */\n+           infiles[n_infiles].language = \"c\";\n+           infiles[n_infiles++].name   = \"target-dummy\";\n+\n+           /* Preserve the --target-help switch so that it can be caught by\n+              the cc1 spec string.  */\n+           switches[n_switches].part1     = \"--target-help\";\n+           switches[n_switches].args      = 0;\n+           switches[n_switches].live_cond = SWITCH_OK;\n+           switches[n_switches].validated     = 0;\n+\n+           n_switches++;\n+        }\n       else if (strcmp (argv[i], \"-fhelp\") == 0)\n \t{\n \t  if (verbose_flag)\n@@ -5487,6 +5522,16 @@ main (argc, argv)\n       return (0);\n     }\n \n+  if (target_help_flag)\n+   {\n+      /* Print if any target specific options.*/\n+\n+      /* We do not exit here. Instead we have created a fake input file\n+         called 'target-dummy' which needs to be compiled, and we pass this\n+         on to the various sub-processes, along with the --target-help\n+         switch. */\n+    }\n+\n   if (print_help_list)\n     {\n       display_help ();"}]}