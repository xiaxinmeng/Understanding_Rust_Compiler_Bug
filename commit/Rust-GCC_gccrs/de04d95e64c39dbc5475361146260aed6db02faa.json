{"sha": "de04d95e64c39dbc5475361146260aed6db02faa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwNGQ5NWU2NGMzOWRiYzU0NzUzNjExNDYyNjBhZWQ2ZGIwMmZhYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-11T22:42:20Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-11T22:42:20Z"}, "message": "compiler: Minor fixes for recover thunks.\n\nAvoid name collisions when a method calls recover.\n\nDon't crash if a method with an unnamed receiver calls\nrecover.\n\nFrom-SVN: r205906", "tree": {"sha": "8657bbd33f373c249d3e717af836696ab777881a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8657bbd33f373c249d3e717af836696ab777881a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de04d95e64c39dbc5475361146260aed6db02faa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de04d95e64c39dbc5475361146260aed6db02faa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de04d95e64c39dbc5475361146260aed6db02faa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de04d95e64c39dbc5475361146260aed6db02faa/comments", "author": null, "committer": null, "parents": [{"sha": "6d4fbcc9fdfec45ef35732f6a476d854bdc8bc20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d4fbcc9fdfec45ef35732f6a476d854bdc8bc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d4fbcc9fdfec45ef35732f6a476d854bdc8bc20"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "e16b0d3a59e6a025bbc690090ca055d30643ce2f", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de04d95e64c39dbc5475361146260aed6db02faa/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de04d95e64c39dbc5475361146260aed6db02faa/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=de04d95e64c39dbc5475361146260aed6db02faa", "patch": "@@ -2822,7 +2822,10 @@ Build_recover_thunks::function(Named_object* orig_no)\n   if (orig_fntype->is_varargs())\n     new_fntype->set_is_varargs();\n \n-  std::string name = orig_no->name() + \"$recover\";\n+  std::string name = orig_no->name();\n+  if (orig_fntype->is_method())\n+    name += \"$\" + orig_fntype->receiver()->type()->mangled_name(gogo);\n+  name += \"$recover\";\n   Named_object *new_no = gogo->start_function(name, new_fntype, false,\n \t\t\t\t\t      location);\n   Function *new_func = new_no->func_value();\n@@ -2916,7 +2919,25 @@ Build_recover_thunks::function(Named_object* orig_no)\n \t\t && !orig_rec_no->var_value()->is_receiver());\n       orig_rec_no->var_value()->set_is_receiver();\n \n-      const std::string& new_receiver_name(orig_fntype->receiver()->name());\n+      std::string new_receiver_name(orig_fntype->receiver()->name());\n+      if (new_receiver_name.empty())\n+\t{\n+\t  // Find the receiver.  It was named \"r.NNN\" in\n+\t  // Gogo::start_function.\n+\t  for (Bindings::const_definitions_iterator p =\n+\t\t new_bindings->begin_definitions();\n+\t       p != new_bindings->end_definitions();\n+\t       ++p)\n+\t    {\n+\t      const std::string& pname((*p)->name());\n+\t      if (pname[0] == 'r' && pname[1] == '.')\n+\t\t{\n+\t\t  new_receiver_name = pname;\n+\t\t  break;\n+\t\t}\n+\t    }\n+\t  go_assert(!new_receiver_name.empty());\n+\t}\n       Named_object* new_rec_no = new_bindings->lookup_local(new_receiver_name);\n       if (new_rec_no == NULL)\n \tgo_assert(saw_errors());"}]}