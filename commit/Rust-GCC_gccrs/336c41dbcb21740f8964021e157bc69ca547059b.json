{"sha": "336c41dbcb21740f8964021e157bc69ca547059b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM2YzQxZGJjYjIxNzQwZjg5NjQwMjFlMTU3YmM2OWNhNTQ3MDU5Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-11T07:33:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-11T09:26:10Z"}, "message": "middle-end/101009 - fix distance vector recording\n\nThis fixes recording of distance vectors in case the DDR has just\nconstant equal indexes.  In that case we expect distance vectors\nwith zero distances to be recorded which is what was done when\nany distance was computed for affine indexes.\n\n2021-06-11  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/101009\n\t* tree-data-ref.c (build_classic_dist_vector_1): Make sure\n\tto set *init_b to true when we encounter a constant equal\n\tindex pair.\n\t(compute_affine_dependence): Also dump the actual DR_REF.\n\n\t* gcc.dg/torture/pr101009.c: New testcase.", "tree": {"sha": "747808fec3a1f79bc69d18860fadef627d0a83f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/747808fec3a1f79bc69d18860fadef627d0a83f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/336c41dbcb21740f8964021e157bc69ca547059b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/336c41dbcb21740f8964021e157bc69ca547059b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/336c41dbcb21740f8964021e157bc69ca547059b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/336c41dbcb21740f8964021e157bc69ca547059b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43c35d0d90214171bd037741d525a0fde73b7755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c35d0d90214171bd037741d525a0fde73b7755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c35d0d90214171bd037741d525a0fde73b7755"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "2bbed1dfc2c6076c1c1f935250fe55935e8ede68", "filename": "gcc/testsuite/gcc.dg/torture/pr101009.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/336c41dbcb21740f8964021e157bc69ca547059b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101009.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/336c41dbcb21740f8964021e157bc69ca547059b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101009.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr101009.c?ref=336c41dbcb21740f8964021e157bc69ca547059b", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-fno-tree-sra -fno-tree-pre -ftree-loop-distribution\" } */\n+\n+struct a {\n+  unsigned b;\n+  unsigned c;\n+} e, *f = &e;\n+int d = 1;\n+int main() {\n+  for (; d; d--) {\n+    struct a g[] = {{2, 1}, {2, 1}};\n+    *f = g[1];\n+  }\n+  if (e.c != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "b37c234aea8188793793ab5c8b32cd5c3ee3d281", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/336c41dbcb21740f8964021e157bc69ca547059b/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/336c41dbcb21740f8964021e157bc69ca547059b/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=336c41dbcb21740f8964021e157bc69ca547059b", "patch": "@@ -5121,6 +5121,8 @@ build_classic_dist_vector_1 (struct data_dependence_relation *ddr,\n \t  non_affine_dependence_relation (ddr);\n \t  return false;\n \t}\n+      else\n+\t*init_b = true;\n     }\n \n   return true;\n@@ -5616,9 +5618,13 @@ compute_affine_dependence (struct data_dependence_relation *ddr,\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file, \"(compute_affine_dependence\\n\");\n-      fprintf (dump_file, \"  stmt_a: \");\n+      fprintf (dump_file, \"  ref_a: \");\n+      print_generic_expr (dump_file, DR_REF (dra));\n+      fprintf (dump_file, \", stmt_a: \");\n       print_gimple_stmt (dump_file, DR_STMT (dra), 0, TDF_SLIM);\n-      fprintf (dump_file, \"  stmt_b: \");\n+      fprintf (dump_file, \"  ref_b: \");\n+      print_generic_expr (dump_file, DR_REF (drb));\n+      fprintf (dump_file, \", stmt_b: \");\n       print_gimple_stmt (dump_file, DR_STMT (drb), 0, TDF_SLIM);\n     }\n "}]}