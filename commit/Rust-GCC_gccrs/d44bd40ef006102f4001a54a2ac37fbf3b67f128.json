{"sha": "d44bd40ef006102f4001a54a2ac37fbf3b67f128", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ0YmQ0MGVmMDA2MTAyZjQwMDFhNTRhMmFjMzdmYmYzYjY3ZjEyOA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-10-07T21:56:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-10-07T21:56:18Z"}, "message": "Re: [PATCH] Improve DOM's optimization of control statements\n\n\t* tree-ssa-dom.c (optimize_stmt): Don't set LOOPS_NEED_FIXUP here.\n\t* tree-ssa-threadupdate.c (remove_ctrl_stmt_and_useless_edges): Do it\n\there instead.  Tighten test to avoid setting LOOPS_NEED_FIXUP\n\tunnecessarily.\n\n@@ -1848,12 +1848,6 @@ optimize_stmt (basic_block bb, gimple_stmt_iterator si,\n\nFrom-SVN: r228585", "tree": {"sha": "a02016d5a52b8fb18cc01274f221a76ba860a673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a02016d5a52b8fb18cc01274f221a76ba860a673"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d44bd40ef006102f4001a54a2ac37fbf3b67f128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44bd40ef006102f4001a54a2ac37fbf3b67f128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d44bd40ef006102f4001a54a2ac37fbf3b67f128", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44bd40ef006102f4001a54a2ac37fbf3b67f128/comments", "author": null, "committer": null, "parents": [{"sha": "b0b5710cf676de537bc97b912218dd20d2cc36cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0b5710cf676de537bc97b912218dd20d2cc36cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0b5710cf676de537bc97b912218dd20d2cc36cd"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "86be03e54770bd54eea2a160b7f7406ba1231aaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d44bd40ef006102f4001a54a2ac37fbf3b67f128/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d44bd40ef006102f4001a54a2ac37fbf3b67f128/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d44bd40ef006102f4001a54a2ac37fbf3b67f128", "patch": "@@ -1,3 +1,11 @@\n+2015-10-07  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa-dom.c (optimize_stmt): Don't set LOOPS_NEED_FIXUP here.\n+\t* tree-ssa-threadupdate.c (remove_ctrl_stmt_and_useless_edges): Do it\n+\there instead.  Tighten test to avoid setting LOOPS_NEED_FIXUP \n+\tunnecessarily.\n+\n+@@ -1848,12 +1848,6 @@ optimize_stmt (basic_block bb, gimple_stmt_iterator si,\n 2015-10-07  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "38cceff2c84a90ffd98bfa076e74c9aa10109f3f", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d44bd40ef006102f4001a54a2ac37fbf3b67f128/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d44bd40ef006102f4001a54a2ac37fbf3b67f128/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=d44bd40ef006102f4001a54a2ac37fbf3b67f128", "patch": "@@ -1848,12 +1848,6 @@ optimize_stmt (basic_block bb, gimple_stmt_iterator si,\n \t      FOR_EACH_EDGE (e, ei, bb->succs)\n \t\tremove_jump_threads_including (e);\n \n-\t      /* If BB is in a loop, then removing an outgoing edge from BB\n-\t\t may cause BB to move outside the loop, changes in the\n-\t\t loop exit edges, etc.  So note that loops need fixing.  */\n-\t      if (bb_loop_depth (bb) > 0)\n-\t\tloops_state_set (LOOPS_NEED_FIXUP);\n-\n \t      /* Now clean up the control statement at the end of\n \t\t BB and remove unexecutable edges.  */\n \t      remove_ctrl_stmt_and_useless_edges (bb, taken_edge->dest);"}, {"sha": "e426c1db9e9ee8e170cd0ee45081c564ba91d40b", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d44bd40ef006102f4001a54a2ac37fbf3b67f128/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d44bd40ef006102f4001a54a2ac37fbf3b67f128/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=d44bd40ef006102f4001a54a2ac37fbf3b67f128", "patch": "@@ -300,6 +300,17 @@ remove_ctrl_stmt_and_useless_edges (basic_block bb, basic_block dest_bb)\n       else\n \tei_next (&ei);\n     }\n+\n+  /* If the remaining edge is a loop exit, there must have\n+     a removed edge that was not a loop exit.\n+\n+     In that case BB and possibly other blocks were previously\n+     in the loop, but are now outside the loop.  Thus, we need\n+     to update the loop structures.  */\n+  if (single_succ_p (bb)\n+      && loop_outer (bb->loop_father)\n+      && loop_exit_edge_p (bb->loop_father, single_succ_edge (bb)))\n+    loops_state_set (LOOPS_NEED_FIXUP);\n }\n \n /* Create a duplicate of BB.  Record the duplicate block in an array"}]}