{"sha": "8b9cfd766d1de5e8b0409e4a475730c9a79da5ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI5Y2ZkNzY2ZDFkZTVlOGIwNDA5ZTRhNDc1NzMwYzlhNzlkYTVlYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-05-27T00:14:02Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-05-27T00:14:02Z"}, "message": "re PR go/90635 (typo in libgo/configure.ac)\n\n\tPR go/90635\n    libgo: correct typo in USE_LIBFFI AM_CONDITIONAL\n    \n    Only affects the case of passing --without-libffi to configure.\n    \n    Fixes https://gcc.gnu.org/PR90635\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/178998\n\nFrom-SVN: r271640", "tree": {"sha": "0bb1a5d4fd97da26567e4edcb58143ee57d6fce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bb1a5d4fd97da26567e4edcb58143ee57d6fce2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea/comments", "author": null, "committer": null, "parents": [{"sha": "8b33101442a91db2a9c083e6844177ccbb2d3d0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b33101442a91db2a9c083e6844177ccbb2d3d0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b33101442a91db2a9c083e6844177ccbb2d3d0b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ba9550787afd01e01e18b0fdef8c2bcd7bb7149f", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=8b9cfd766d1de5e8b0409e4a475730c9a79da5ea", "patch": "@@ -1,4 +1,4 @@\n-578c4fb6132801db8e9d11d741d2394e07c5a398\n+3995d545f1e112c682753f342eaef0877551a649\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "1e33a5769e0d9ba3f5fe324b0ec2a0420620231a", "filename": "libgo/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=8b9cfd766d1de5e8b0409e4a475730c9a79da5ea", "patch": "@@ -13712,7 +13712,7 @@ $as_echo \"#define USE_LIBFFI 1\" >>confdefs.h\n fi\n \n \n- if test \"$with_liffi\" != \"no\"; then\n+ if test \"$with_libffi\" != \"no\"; then\n   USE_LIBFFI_TRUE=\n   USE_LIBFFI_FALSE='#'\n else"}, {"sha": "0bd328c618b255aa09d4389eb5c37180ea631efa", "filename": "libgo/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b9cfd766d1de5e8b0409e4a475730c9a79da5ea/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=8b9cfd766d1de5e8b0409e4a475730c9a79da5ea", "patch": "@@ -128,7 +128,7 @@ if test \"$with_libffi\" != no; then\n fi\n AC_SUBST(LIBFFI)\n AC_SUBST(LIBFFIINCS)\n-AM_CONDITIONAL(USE_LIBFFI, test \"$with_liffi\" != \"no\")\n+AM_CONDITIONAL(USE_LIBFFI, test \"$with_libffi\" != \"no\")\n \n # See if the user wants to configure without libatomic. This is useful if we are\n # on an architecture for which libgo does not need an atomic support library and"}]}