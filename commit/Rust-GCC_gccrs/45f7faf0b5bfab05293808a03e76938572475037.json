{"sha": "45f7faf0b5bfab05293808a03e76938572475037", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVmN2ZhZjBiNWJmYWIwNTI5MzgwOGEwM2U3NjkzODU3MjQ3NTAzNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-02-23T11:43:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-02-23T11:43:51Z"}, "message": "re PR tree-optimization/79683 (SLP vectorizer drops gs: prefix)\n\n2017-02-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/79683\n\t* tree-vect-stmts.c (vect_analyze_stmt): Do not overwrite\n\tvector types for data-refs.\n\n\t* gcc.target/i386/pr79683.c: New testcase.\n\nFrom-SVN: r245679", "tree": {"sha": "9070504f6eede14d0f13713f220798a9b6812515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9070504f6eede14d0f13713f220798a9b6812515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45f7faf0b5bfab05293808a03e76938572475037", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f7faf0b5bfab05293808a03e76938572475037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45f7faf0b5bfab05293808a03e76938572475037", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45f7faf0b5bfab05293808a03e76938572475037/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06393a975477c92e28b034a1a9c557841ea553e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06393a975477c92e28b034a1a9c557841ea553e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06393a975477c92e28b034a1a9c557841ea553e9"}], "stats": {"total": 88, "additions": 60, "deletions": 28}, "files": [{"sha": "820f673ec320b2fa0302fb79e0599b71c0d3c20e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f7faf0b5bfab05293808a03e76938572475037/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f7faf0b5bfab05293808a03e76938572475037/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45f7faf0b5bfab05293808a03e76938572475037", "patch": "@@ -1,3 +1,9 @@\n+2017-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79683\n+\t* tree-vect-stmts.c (vect_analyze_stmt): Do not overwrite\n+\tvector types for data-refs.\n+\n 2017-02-23  Martin Liska  <mliska@suse.cz>\n \n \t* params.def (PARAM_MIN_NONDEBUG_INSN_UID): Change default to 0."}, {"sha": "95cc1d5a318e48f843df114ed38a110c93265529", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f7faf0b5bfab05293808a03e76938572475037/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f7faf0b5bfab05293808a03e76938572475037/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45f7faf0b5bfab05293808a03e76938572475037", "patch": "@@ -1,3 +1,8 @@\n+2017-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79683\n+\t* gcc.target/i386/pr79683.c: New testcase.\n+\n 2017-02-22  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/79578"}, {"sha": "cbd43fd2af0d489635fddc448b51b277a4e646b3", "filename": "gcc/testsuite/gcc.target/i386/pr79683.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f7faf0b5bfab05293808a03e76938572475037/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79683.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f7faf0b5bfab05293808a03e76938572475037/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79683.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79683.c?ref=45f7faf0b5bfab05293808a03e76938572475037", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -msse2\" } */\n+\n+struct s {\n+    __INT64_TYPE__ a;\n+    __INT64_TYPE__ b;\n+};\n+void test(struct s __seg_gs *x) {\n+    x->a += 1;\n+    x->b -= 1;\n+}\n+\n+/* We get the function vectorized, verify the load and store are\n+   address-space qualified.  */\n+/* { dg-final { scan-assembler-times \"padd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"%gs\" 2 } } */"}, {"sha": "59768824c0fa87e8eaa17e882f87c95e9dca4223", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 33, "deletions": 28, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45f7faf0b5bfab05293808a03e76938572475037/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45f7faf0b5bfab05293808a03e76938572475037/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=45f7faf0b5bfab05293808a03e76938572475037", "patch": "@@ -8486,37 +8486,42 @@ vect_analyze_stmt (gimple *stmt, bool *need_to_vectorize, slp_tree node)\n     {\n       gcc_assert (PURE_SLP_STMT (stmt_info));\n \n-      scalar_type = TREE_TYPE (gimple_get_lhs (stmt));\n-      if (dump_enabled_p ())\n-        {\n-          dump_printf_loc (MSG_NOTE, vect_location,\n-                           \"get vectype for scalar type:  \");\n-          dump_generic_expr (MSG_NOTE, TDF_SLIM, scalar_type);\n-          dump_printf (MSG_NOTE, \"\\n\");\n-        }\n+      /* Memory accesses already got their vector type assigned\n+         in vect_analyze_data_refs.  */\n+      if (! STMT_VINFO_DATA_REF (stmt_info))\n+\t{\n+\t  scalar_type = TREE_TYPE (gimple_get_lhs (stmt));\n+\t  if (dump_enabled_p ())\n+\t    {\n+\t      dump_printf_loc (MSG_NOTE, vect_location,\n+\t\t\t       \"get vectype for scalar type:  \");\n+\t      dump_generic_expr (MSG_NOTE, TDF_SLIM, scalar_type);\n+\t      dump_printf (MSG_NOTE, \"\\n\");\n+\t    }\n \n-      vectype = get_vectype_for_scalar_type (scalar_type);\n-      if (!vectype)\n-        {\n-          if (dump_enabled_p ())\n-            {\n-               dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-                                \"not SLPed: unsupported data-type \");\n-               dump_generic_expr (MSG_MISSED_OPTIMIZATION, TDF_SLIM,\n-                                  scalar_type);\n-              dump_printf (MSG_MISSED_OPTIMIZATION, \"\\n\");\n-            }\n-          return false;\n-        }\n+\t  vectype = get_vectype_for_scalar_type (scalar_type);\n+\t  if (!vectype)\n+\t    {\n+\t      if (dump_enabled_p ())\n+\t\t{\n+\t\t  dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t\t   \"not SLPed: unsupported data-type \");\n+\t\t  dump_generic_expr (MSG_MISSED_OPTIMIZATION, TDF_SLIM,\n+\t\t\t\t     scalar_type);\n+\t\t  dump_printf (MSG_MISSED_OPTIMIZATION, \"\\n\");\n+\t\t}\n+\t      return false;\n+\t    }\n \n-      if (dump_enabled_p ())\n-        {\n-          dump_printf_loc (MSG_NOTE, vect_location, \"vectype:  \");\n-          dump_generic_expr (MSG_NOTE, TDF_SLIM, vectype);\n-          dump_printf (MSG_NOTE, \"\\n\");\n-        }\n+\t  if (dump_enabled_p ())\n+\t    {\n+\t      dump_printf_loc (MSG_NOTE, vect_location, \"vectype:  \");\n+\t      dump_generic_expr (MSG_NOTE, TDF_SLIM, vectype);\n+\t      dump_printf (MSG_NOTE, \"\\n\");\n+\t    }\n \n-      STMT_VINFO_VECTYPE (stmt_info) = vectype;\n+\t  STMT_VINFO_VECTYPE (stmt_info) = vectype;\n+\t}\n    }\n \n   if (STMT_VINFO_RELEVANT_P (stmt_info))"}]}