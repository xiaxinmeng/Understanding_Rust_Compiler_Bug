{"sha": "95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjYmY4NTE1YTY3Y2M0MWRhYTEyZjg1OGQ1ZGIxMjc3ZjFmMmZhMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-07-19T11:48:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-07-19T11:48:46Z"}, "message": "tree-ssa-ccp.c (valid_lattice_transition): Clarify comment about transition from invariant to known bits.\n\n2012-07-19  Richard Guenther  <rguenther@suse.de>\n\tEric Botcazou  <ebotcazou@adacore.com>\n\n\t* tree-ssa-ccp.c (valid_lattice_transition): Clarify comment\n\tabout transition from invariant to known bits.\n\t(likely_value): Addresses with UNDEFINED components are\n\tUNDEFINED.\n\n\t* gnat.dg/loop_optimization11.adb: New testcase.\n\t* gnat.dg/loop_optimization11_pkg.ads: Likewise.\n\nCo-Authored-By: Eric Botcazou <ebotcazou@adacore.com>\n\nFrom-SVN: r189650", "tree": {"sha": "cecadf196c7add77fde32a7370d3bee46bd56089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cecadf196c7add77fde32a7370d3bee46bd56089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd1cae3590e875901f0abbd61be8c3109c03d5bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1cae3590e875901f0abbd61be8c3109c03d5bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1cae3590e875901f0abbd61be8c3109c03d5bc"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "4e8816a79e9c0abbed742ea88a28e57bd2c04990", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "patch": "@@ -1,3 +1,11 @@\n+2012-07-19  Richard Guenther  <rguenther@suse.de>\n+\tEric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-ssa-ccp.c (valid_lattice_transition): Clarify comment\n+\tabout transition from invariant to known bits.\n+\t(likely_value): Addresses with UNDEFINED components are\n+\tUNDEFINED.\n+\n 2012-07-19  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/53970"}, {"sha": "dee868fe17ed3809d25bec194d3bfd9f83a3cf55", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "patch": "@@ -1,3 +1,9 @@\n+2012-07-19  Richard Guenther  <rguenther@suse.de>\n+\tEric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/loop_optimization11.adb: New testcase.\n+\t* gnat.dg/loop_optimization11_pkg.ads: Likewise.\n+\n 2012-07-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "e4e27d48814668819b9d22fee93388a114e0c506", "filename": "gcc/testsuite/gnat.dg/loop_optimization11.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11.adb?ref=95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "patch": "@@ -0,0 +1,19 @@\n+-- { dg-do compile }\r\n+-- { dg-options \"-O\" }\r\n+\r\n+with Loop_Optimization11_Pkg; use Loop_Optimization11_Pkg;\r\n+\r\n+procedure Loop_Optimization11 is\r\n+   Arr : array (Prot, Mem) of Integer := (others => (others => 0));\r\n+begin\r\n+   Put_Line (Img (0) & \" \");\r\n+   for I in Arr'Range (1) loop\r\n+      for J in Arr'Range (2) loop\r\n+         declare\r\n+            Elem : Integer renames Arr (I, J);\r\n+         begin\r\n+            Put_Line (Img (Elem));\r\n+         end;\r\n+      end loop;\r\n+   end loop;\r\n+end;\r"}, {"sha": "f4248e55241ce285438d49ec8be0128c92d50ff6", "filename": "gcc/testsuite/gnat.dg/loop_optimization11_pkg.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization11_pkg.ads?ref=95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "patch": "@@ -0,0 +1,11 @@\n+package Loop_Optimization11_Pkg is\r\n+\r\n+   function Img (X : Integer) return String;\r\n+\r\n+   procedure Put_Line (Data : String);\r\n+\r\n+   type Prot is (Execute, Execute_Read, Execute_Read_Write);\r\n+\r\n+   type Mem is (Mem_Image, Mem_Mapped, Mem_Private, Unknown);\r\n+\r\n+end Loop_Optimization11_Pkg;\r"}, {"sha": "3f88f39f0963b1fcc3ed9bb9b5afeb486ad6a50c", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cbf8515a67cc41daa12f858d5db1277f1f2fa0/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=95cbf8515a67cc41daa12f858d5db1277f1f2fa0", "patch": "@@ -405,7 +405,8 @@ valid_lattice_transition (prop_value_t old_val, prop_value_t new_val)\n \n   /* Now both lattice values are CONSTANT.  */\n \n-  /* Allow transitioning from &x to &x & ~3.  */\n+  /* Allow transitioning from PHI <&x, not executable> == &x\n+     to PHI <&x, &y> == common alignment.  */\n   if (TREE_CODE (old_val.value) != INTEGER_CST\n       && TREE_CODE (new_val.value) == INTEGER_CST)\n     return true;\n@@ -648,6 +649,11 @@ likely_value (gimple stmt)\n \t     the undefined operand may be promoted.  */\n \t  return UNDEFINED;\n \n+\tcase ADDR_EXPR:\n+\t  /* If any part of an address is UNDEFINED, like the index\n+\t     of an ARRAY_EXPR, then treat the result as UNDEFINED.  */\n+\t  return UNDEFINED;\n+\n \tdefault:\n \t  ;\n \t}"}]}