{"sha": "6c80b1b56dec2691436f3e2676e3d1b105b01b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM4MGIxYjU2ZGVjMjY5MTQzNmYzZTI2NzZlM2QxYjEwNWIwMWI4OQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2019-11-21T20:29:40Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2019-11-21T20:29:40Z"}, "message": "Make more bad uses of fallthrough attribute into pedwarns.\n\nVarious bad uses of the [[fallthrough]] attribute are constraint\nviolations in C2x, so need pedwarns rather than warnings.\n\nThis patch duly turns the relevant warnings into pedwarns.  The\nrelevant code is not specific to C, and does not know which form the\nattribute was given in ([[fallthrough]] or [[gnu::fallthrough]] or\n__attribute__((fallthrough))), but as I understand it these usages are\nalso erroneous for C++ and it seems reasonable to give a pedwarn here\neven when a form other than [[fallthrough]] is being used.\n\nThe precise meaning of the standard wording about \"The next statement\nthat would be executed\" seems a but unclear in some corner cases; the\ntests added keep to cases where it is clear whether or not the next\nstatement executed is of the required form.\n\nBootstrapped with no regressions for x86_64-pc-linux-gnu.\n\ngcc:\n\t* gimplify.c (expand_FALLTHROUGH_r, expand_FALLTHROUGH): Use\n\tpedwarn instead of warning_at for fallthrough not preceding a case\n\tor default label.\n\ngcc/c-family:\n\t* c-attribs.c (handle_fallthrough_attribute): Use pedwarn instead\n\tof warning.\n\ngcc/testsuite:\n\t* gcc.dg/c2x-attr-fallthrough-6.c: New test.  Split out from\n\tc2x-attr-fallthrough-3.c.\n\t* gcc.dg/c2x-attr-fallthrough-1.c: Add more tests.\n\t* gcc.dg/c2x-attr-fallthrough-2.c: Update expected diagnostics.\n\t* gcc.dg/c2x-attr-fallthrough-3.c: Split inside-switch part of\n\ttest out to c2x-attr-fallthrough-6.c.\n\nFrom-SVN: r278599", "tree": {"sha": "9a51651149c41db896f090d511d9b1081849f9d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a51651149c41db896f090d511d9b1081849f9d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c80b1b56dec2691436f3e2676e3d1b105b01b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c80b1b56dec2691436f3e2676e3d1b105b01b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c80b1b56dec2691436f3e2676e3d1b105b01b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c80b1b56dec2691436f3e2676e3d1b105b01b89/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b30e83f809b2aa65222eb969f8b4523e5e1961f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30e83f809b2aa65222eb969f8b4523e5e1961f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b30e83f809b2aa65222eb969f8b4523e5e1961f2"}], "stats": {"total": 77, "additions": 62, "deletions": 15}, "files": [{"sha": "2ccdedb5611ee71e9169968d48e5b8eec145d882", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c80b1b56dec2691436f3e2676e3d1b105b01b89", "patch": "@@ -1,3 +1,9 @@\n+2019-11-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gimplify.c (expand_FALLTHROUGH_r, expand_FALLTHROUGH): Use\n+\tpedwarn instead of warning_at for fallthrough not preceding a case\n+\tor default label.\n+\n 2019-11-22  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR tree-optimization/92608"}, {"sha": "b1dc0bb121297162780c20279b7c397acc6d123b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6c80b1b56dec2691436f3e2676e3d1b105b01b89", "patch": "@@ -1,3 +1,8 @@\n+2019-11-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-attribs.c (handle_fallthrough_attribute): Use pedwarn instead\n+\tof warning.\n+\n 2019-11-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-common.c (attribute_fallthrough_p): In C, use pedwarn not"}, {"sha": "b727f6605fb21d9fc2062dae228300009c9b1450", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=6c80b1b56dec2691436f3e2676e3d1b105b01b89", "patch": "@@ -4117,7 +4117,7 @@ tree\n handle_fallthrough_attribute (tree *, tree name, tree, int,\n \t\t\t      bool *no_add_attrs)\n {\n-  warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+  pedwarn (input_location, OPT_Wattributes, \"%qE attribute ignored\", name);\n   *no_add_attrs = true;\n   return NULL_TREE;\n }"}, {"sha": "da6566903e07b57ddba12384542b6a2c720caa74", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=6c80b1b56dec2691436f3e2676e3d1b105b01b89", "patch": "@@ -2405,8 +2405,8 @@ expand_FALLTHROUGH_r (gimple_stmt_iterator *gsi_p, bool *handled_ops_p,\n \t      gsi_next (&gsi2);\n \t    }\n \t  if (!found)\n-\t    warning_at (loc, 0, \"attribute %<fallthrough%> not preceding \"\n-\t\t\t\"a case label or default label\");\n+\t    pedwarn (loc, 0, \"attribute %<fallthrough%> not preceding \"\n+\t\t     \"a case label or default label\");\n \t}\n       break;\n     default:\n@@ -2428,8 +2428,8 @@ expand_FALLTHROUGH (gimple_seq *seq_p)\n   if (wi.callback_result == integer_zero_node)\n     /* We've found [[fallthrough]]; at the end of a switch, which the C++\n        standard says is ill-formed; see [dcl.attr.fallthrough].  */\n-    warning_at (loc, 0, \"attribute %<fallthrough%> not preceding \"\n-\t\t\"a case label or default label\");\n+    pedwarn (loc, 0, \"attribute %<fallthrough%> not preceding \"\n+\t     \"a case label or default label\");\n }\n \n \f"}, {"sha": "a3d3e73568ec63ec3c72765f1247027c2669017e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c80b1b56dec2691436f3e2676e3d1b105b01b89", "patch": "@@ -1,3 +1,12 @@\n+2019-11-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c2x-attr-fallthrough-6.c: New test.  Split out from\n+\tc2x-attr-fallthrough-3.c.\n+\t* gcc.dg/c2x-attr-fallthrough-1.c: Add more tests.\n+\t* gcc.dg/c2x-attr-fallthrough-2.c: Update expected diagnostics.\n+\t* gcc.dg/c2x-attr-fallthrough-3.c: Split inside-switch part of\n+\ttest out to c2x-attr-fallthrough-6.c.\n+\n 2019-11-22  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR tree-optimization/92608"}, {"sha": "60fe11da82818dae28cc2a1ec29ad5d1c90c75af", "filename": "gcc/testsuite/gcc.dg/c2x-attr-fallthrough-1.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-1.c?ref=6c80b1b56dec2691436f3e2676e3d1b105b01b89", "patch": "@@ -3,7 +3,7 @@\n /* { dg-options \"-std=c2x -pedantic-errors -Wextra\" } */\n \n int\n-f (int a)\n+f (int a, int c)\n {\n   int b = 2;\n   switch (a)\n@@ -22,6 +22,21 @@ f (int a)\n     case 5:\n       b += 1;\n       break;\n+    case 6:\n+      if (c == 2)\n+\t{\n+\t  [[fallthrough]];\n+\t}\n+      else\n+\t{\n+\t  [[fallthrough]];\n+\t}\n+    case 7:\n+      b += 3;\n+      [[fallthrough]];\n+    default:\n+      b += 8;\n+      break;\n     }\n   return b;\n }"}, {"sha": "9d6995938cd6d5fefe72390f1a6f0b196843a1fd", "filename": "gcc/testsuite/gcc.dg/c2x-attr-fallthrough-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-2.c?ref=6c80b1b56dec2691436f3e2676e3d1b105b01b89", "patch": "@@ -15,7 +15,8 @@ int z = sizeof (int [[fallthrough]]); /* { dg-error \"ignored\" } */\n int\n f (int a)\n {\n-  [[fallthrough]] int b = 2; /* { dg-warning \"not followed by|ignored\" } */\n+  [[fallthrough]] int b = 2; /* { dg-warning \"not followed by\" } */\n+  /* { dg-error \"ignored\" \"ignored\" { target *-*-* } .-1 } */\n   switch (a)\n     {\n     case 1:"}, {"sha": "714d0af947bd227f6cecd594989bfa48b51d4743", "filename": "gcc/testsuite/gcc.dg/c2x-attr-fallthrough-3.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-3.c?ref=6c80b1b56dec2691436f3e2676e3d1b105b01b89", "patch": "@@ -1,18 +1,11 @@\n /* Test C2x attribute syntax.  Invalid use of fallthrough attribute\n-   outside switch or in bad context inside switch.  */\n+   outside switch.  */\n /* { dg-do compile } */\n /* { dg-options \"-std=c2x -pedantic-errors -Wextra\" } */\n \n int\n f (int a)\n {\n   [[fallthrough]]; /* { dg-error \"invalid use of attribute 'fallthrough'\" } */\n-  switch (a)\n-    {\n-    case 1:\n-      a++;\n-      [[fallthrough]]; /* { dg-warning \"attribute 'fallthrough' not preceding a case label or default label\" } */\n-      a++;\n-    }\n   return a;\n }"}, {"sha": "aa7ff4cdd2a364a1fe264edb8ee63ce2a4ca77a3", "filename": "gcc/testsuite/gcc.dg/c2x-attr-fallthrough-6.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c80b1b56dec2691436f3e2676e3d1b105b01b89/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-6.c?ref=6c80b1b56dec2691436f3e2676e3d1b105b01b89", "patch": "@@ -0,0 +1,18 @@\n+/* Test C2x attribute syntax.  Invalid use of fallthrough attribute in\n+   bad context inside switch.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x -pedantic-errors -Wextra\" } */\n+\n+int\n+f (int a)\n+{\n+  switch (a)\n+    {\n+    case 1:\n+      a++;\n+      [[fallthrough]]; /* { dg-error \"attribute 'fallthrough' not preceding a case label or default label\" } */\n+      a++;\n+      [[fallthrough]]; /* { dg-error \"attribute 'fallthrough' not preceding a case label or default label\" } */\n+    }\n+  return a;\n+}"}]}