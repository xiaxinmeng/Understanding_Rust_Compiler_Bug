{"sha": "d8def3cff645c9783670fdd3fec476e5314d9236", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhkZWYzY2ZmNjQ1Yzk3ODM2NzBmZGQzZmVjNDc2ZTUzMTRkOTIzNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-11-21T13:28:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-11-21T13:28:58Z"}, "message": "re PR testsuite/61137 (FAIL: gcc.target/ia64/small-addr-1.c (test for excess errors))\n\n\tPR target/61137\n\t* config/ia64/ia64.c (ia64_attribute_takes_identifier_p): New function.\n\t(TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P): Redefine to it.\n\nFrom-SVN: r217919", "tree": {"sha": "ab903d30cb40fbbded1bbd351e6c2cd113a69f9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab903d30cb40fbbded1bbd351e6c2cd113a69f9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8def3cff645c9783670fdd3fec476e5314d9236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8def3cff645c9783670fdd3fec476e5314d9236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8def3cff645c9783670fdd3fec476e5314d9236", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8def3cff645c9783670fdd3fec476e5314d9236/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b8f3f068ae154ad7918e61e0090afc8cebf1339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8f3f068ae154ad7918e61e0090afc8cebf1339", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b8f3f068ae154ad7918e61e0090afc8cebf1339"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "3470ae2272de562b05e27adba9f56823ff2231fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8def3cff645c9783670fdd3fec476e5314d9236/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8def3cff645c9783670fdd3fec476e5314d9236/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8def3cff645c9783670fdd3fec476e5314d9236", "patch": "@@ -1,3 +1,9 @@\n+2014-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/61137\n+\t* config/ia64/ia64.c (ia64_attribute_takes_identifier_p): New function.\n+\t(TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P): Redefine to it.\n+\n 2014-11-21  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-simd.md"}, {"sha": "860b658ac5a556a990032e920aa15d8654104c85", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8def3cff645c9783670fdd3fec476e5314d9236/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8def3cff645c9783670fdd3fec476e5314d9236/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=d8def3cff645c9783670fdd3fec476e5314d9236", "patch": "@@ -324,6 +324,7 @@ static bool ia64_vms_valid_pointer_mode (machine_mode mode)\n static tree ia64_vms_common_object_attribute (tree *, tree, tree, int, bool *)\n      ATTRIBUTE_UNUSED;\n \n+static bool ia64_attribute_takes_identifier_p (const_tree);\n static tree ia64_handle_model_attribute (tree *, tree, tree, int, bool *);\n static tree ia64_handle_version_id_attribute (tree *, tree, tree, int, bool *);\n static void ia64_encode_section_info (tree, rtx, int);\n@@ -669,8 +670,26 @@ static const struct attribute_spec ia64_attribute_table[] =\n #undef TARGET_VECTORIZE_VEC_PERM_CONST_OK\n #define TARGET_VECTORIZE_VEC_PERM_CONST_OK ia64_vectorize_vec_perm_const_ok\n \n+#undef TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P\n+#define TARGET_ATTRIBUTE_TAKES_IDENTIFIER_P ia64_attribute_takes_identifier_p\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n+/* Returns TRUE iff the target attribute indicated by ATTR_ID takes a plain\n+   identifier as an argument, so the front end shouldn't look it up.  */\n+\n+static bool\n+ia64_attribute_takes_identifier_p (const_tree attr_id)\n+{\n+  if (is_attribute_p (\"model\", attr_id))\n+    return true;\n+#if TARGET_ABI_OPEN_VMS\n+  if (is_attribute_p (\"common_object\", attr_id))\n+    return true;\n+#endif\n+  return false;\n+}\n+\n typedef enum\n   {\n     ADDR_AREA_NORMAL,\t/* normal address area */"}]}