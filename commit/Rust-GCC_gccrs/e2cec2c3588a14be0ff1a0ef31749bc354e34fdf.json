{"sha": "e2cec2c3588a14be0ff1a0ef31749bc354e34fdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJjZWMyYzM1ODhhMTRiZTBmZjFhMGVmMzE3NDliYzM1NGUzNGZkZg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-08-17T14:27:29Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-08-17T14:27:29Z"}, "message": "re PR fortran/41075 ([F2008] Implement unlimited format item)\n\n2009-08-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/41075\n\t* io/io.h (enum format_token): Add FMT_STAR.\n\t* io/format.c (format_lex): Add case for FMT_STAR.\n\t(parse_format_list): Parse FMT_STAR and check for left paren\n\tafter. (next_format0): Modify helper function to check for\n\tunimited format and return the repeated format node.  Update\n\tcomments to clarify.\n\nFrom-SVN: r150844", "tree": {"sha": "e4baebb01b801215d43ed14855d9d8b7c3a6a102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4baebb01b801215d43ed14855d9d8b7c3a6a102"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf/comments", "author": null, "committer": null, "parents": [{"sha": "b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b823d9ebdfd013fe2cbd7e1d83880f71a8d6b5dd"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "abeac8a9525e64c3e193531adcb29135ab2d4d4a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e2cec2c3588a14be0ff1a0ef31749bc354e34fdf", "patch": "@@ -1,3 +1,13 @@\n+2009-08-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/41075\n+\t* io/io.h (enum format_token): Add FMT_STAR.\n+\t* io/format.c (format_lex): Add case for FMT_STAR.\n+\t(parse_format_list): Parse FMT_STAR and check for left paren\n+\tafter. (next_format0): Modify helper function to check for\n+\tunimited format and return the repeated format node.  Update\n+\tcomments to clarify.\n+\t\n 2009-08-15  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* intrinsics/string_intrinsics_inc.c (string_len_trim): Use"}, {"sha": "e888a2eba3f4c950060d270e10d9c0280f854181", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=e2cec2c3588a14be0ff1a0ef31749bc354e34fdf", "patch": "@@ -313,6 +313,10 @@ format_lex (format_data *fmt)\n \n   switch (c)\n     {\n+    case '*':\n+       token = FMT_STAR;\n+       break;\n+\n     case '(':\n       token = FMT_LPAREN;\n       break;\n@@ -595,6 +599,21 @@ parse_format_list (st_parameter_dt *dtp, bool *save_ok)\n  format_item_1:\n   switch (t)\n     {\n+    case FMT_STAR:\n+      t = format_lex (fmt);\n+      if (t != FMT_LPAREN)\n+\t{\n+\t  fmt->error = \"Left parenthesis required after '*'\";\n+\t  goto finished;\n+\t}\n+      get_fnode (fmt, &head, &tail, FMT_LPAREN);\n+      tail->repeat = -2;  /* Signifies unlimited format.  */\n+      tail->u.child = parse_format_list (dtp, &saveit);\n+      if (fmt->error != NULL)\n+\tgoto finished;\n+\n+      goto between_desc;\n+\n     case FMT_POSINT:\n       repeat = fmt->value;\n \n@@ -1252,8 +1271,23 @@ next_format0 (fnode * f)\n       return NULL;\n     }\n \n-  /* Deal with a parenthesis node */\n+  /* Deal with a parenthesis node with unlimited format.  */\n+\n+  if (f->repeat == -2)  /* -2 signifies unlimited.  */\n+  for (;;)\n+    {\n+      if (f->current == NULL)\n+\tf->current = f->u.child;\n+\n+      for (; f->current != NULL; f->current = f->current->next)\n+\t{\n+\t  r = next_format0 (f->current);\n+\t  if (r != NULL)\n+\t    return r;\n+\t}\n+    }\n \n+  /* Deal with a parenthesis node with specific repeat count.  */\n   for (; f->count < f->repeat; f->count++)\n     {\n       if (f->current == NULL)"}, {"sha": "9ca6d387480dece0baae80ac6d2ca5f6167f3dc1", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2cec2c3588a14be0ff1a0ef31749bc354e34fdf/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=e2cec2c3588a14be0ff1a0ef31749bc354e34fdf", "patch": "@@ -654,7 +654,7 @@ typedef enum\n   FMT_LPAREN, FMT_RPAREN, FMT_X, FMT_S, FMT_SS, FMT_SP, FMT_STRING,\n   FMT_BADSTRING, FMT_P, FMT_I, FMT_B, FMT_BN, FMT_BZ, FMT_O, FMT_Z, FMT_F,\n   FMT_E, FMT_EN, FMT_ES, FMT_G, FMT_L, FMT_A, FMT_D, FMT_H, FMT_END, FMT_DC,\n-  FMT_DP\n+  FMT_DP, FMT_STAR\n }\n format_token;\n "}]}