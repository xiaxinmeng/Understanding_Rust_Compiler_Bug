{"sha": "6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE3OGZkMDZjNTQ0OTVlMGY4ZGM1YzU5NDFjOTMxM2ZhNTA0NmY1NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-09-18T17:13:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-09-18T17:13:04Z"}, "message": "re PR tree-optimization/45709 (internal compiler error: in add_phi_arg, at tree-phinodes.c:395)\n\n2010-09-18  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/45709\n\t* tree-inline.c (copy_phis_for_bb): Delay commit of edge\n\tinsertions until after all PHI nodes of the block are processed.\n\n\t* g++.dg/torture/pr45709-2.C: New testcase.\n\nFrom-SVN: r164397", "tree": {"sha": "a815bbcdec274f2c413af28792d44797d60bc848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a815bbcdec274f2c413af28792d44797d60bc848"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a78fd06c54495e0f8dc5c5941c9313fa5046f54/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f52a39cde6dc6d486ada38b4734b799a2eaa6259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f52a39cde6dc6d486ada38b4734b799a2eaa6259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f52a39cde6dc6d486ada38b4734b799a2eaa6259"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "26e5ec94a0a81b86d8418fc4b7174c8cbccde439", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a78fd06c54495e0f8dc5c5941c9313fa5046f54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a78fd06c54495e0f8dc5c5941c9313fa5046f54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "patch": "@@ -1,3 +1,9 @@\n+2010-09-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45709\n+\t* tree-inline.c (copy_phis_for_bb): Delay commit of edge\n+\tinsertions until after all PHI nodes of the block are processed.\n+\n 2010-09-18  Tijl Coosemans <tijl@coosemans.org>\n \n \t* config/i386/freebsd.h (SUBTARGET32_DEFAULT_CPU): Add."}, {"sha": "4fb1fa09761d3c5fc1e34065119a45a80dd2ff75", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a78fd06c54495e0f8dc5c5941c9313fa5046f54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a78fd06c54495e0f8dc5c5941c9313fa5046f54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "patch": "@@ -1,3 +1,13 @@\n+2010-09-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45709\n+\t* g++.dg/torture/pr45709-2.C: New testcase.\n+\n+2010-09-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45709\n+\t* g++.dg/torture/pr45709.C: New testcase.\n+\n 2010-09-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/45719"}, {"sha": "1f6a2344f04ff70677bfbe093fc28261b2c0c1f9", "filename": "gcc/testsuite/g++.dg/torture/pr45709-2.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a78fd06c54495e0f8dc5c5941c9313fa5046f54/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr45709-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a78fd06c54495e0f8dc5c5941c9313fa5046f54/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr45709-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr45709-2.C?ref=6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "patch": "@@ -0,0 +1,20 @@\n+// { dg-do compile }\n+\n+struct Region {\n+    int storage[4];\n+    int count;\n+};\n+static inline Region subtract(int lhs)\n+{\n+  Region reg;\n+  int* storage = reg.storage;\n+  int* storage2 = reg.storage;\n+  if (lhs > 0)\n+    storage++, storage2--;\n+  reg.count = storage - reg.storage + storage2 - reg.storage;\n+  return reg;\n+}\n+void bar(int a)\n+{\n+  const Region copyBack(subtract(a));\n+}"}, {"sha": "ec7aacfba7197495b4b76f1ef8dc51b8cc52ad32", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a78fd06c54495e0f8dc5c5941c9313fa5046f54/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a78fd06c54495e0f8dc5c5941c9313fa5046f54/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=6a78fd06c54495e0f8dc5c5941c9313fa5046f54", "patch": "@@ -1977,12 +1977,13 @@ copy_phis_for_bb (basic_block bb, copy_body_data *id)\n   edge_iterator ei;\n   gimple phi;\n   gimple_stmt_iterator si;\n+  edge new_edge;\n+  bool inserted = false;\n \n   for (si = gsi_start (phi_nodes (bb)); !gsi_end_p (si); gsi_next (&si))\n     {\n       tree res, new_res;\n       gimple new_phi;\n-      edge new_edge;\n \n       phi = gsi_stmt (si);\n       res = PHI_RESULT (phi);\n@@ -2021,17 +2022,20 @@ copy_phis_for_bb (basic_block bb, copy_body_data *id)\n \t\t  && !is_gimple_val (new_arg))\n \t\t{\n \t\t  gimple_seq stmts = NULL;\n-\t\t  basic_block tem;\n \t\t  new_arg = force_gimple_operand (new_arg, &stmts, true, NULL);\n-\t\t  tem = gsi_insert_seq_on_edge_immediate (new_edge, stmts);\n-\t\t  if (tem)\n-\t\t    new_edge = single_succ_edge (tem);\n+\t\t  gsi_insert_seq_on_edge (new_edge, stmts);\n+\t\t  inserted = true;\n \t\t}\n \t      add_phi_arg (new_phi, new_arg, new_edge,\n \t\t\t   gimple_phi_arg_location_from_edge (phi, old_edge));\n \t    }\n \t}\n     }\n+\n+  /* Commit the delayed edge insertions.  */\n+  if (inserted)\n+    FOR_EACH_EDGE (new_edge, ei, new_bb->preds)\n+      gsi_commit_one_edge_insert (new_edge, NULL);\n }\n \n "}]}