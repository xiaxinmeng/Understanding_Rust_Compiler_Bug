{"sha": "cc2442cd78651d159418ac8e739bfc93f925ab2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MyNDQyY2Q3ODY1MWQxNTk0MThhYzhlNzM5YmZjOTNmOTI1YWIyYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-05-31T14:28:41Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-05-31T14:28:41Z"}, "message": "re PR fortran/53521 (Memory leak with zero-sized array constructor)\n\n2012-05-31  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/53521\n        * trans.c (gfc_deallocate_scalar_with_status): Properly\n        handle the case size == 0.\n\nFrom-SVN: r188062", "tree": {"sha": "e846e9933f57a2aeba1815dfb53f4e52db63c2cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e846e9933f57a2aeba1815dfb53f4e52db63c2cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc2442cd78651d159418ac8e739bfc93f925ab2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2442cd78651d159418ac8e739bfc93f925ab2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc2442cd78651d159418ac8e739bfc93f925ab2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2442cd78651d159418ac8e739bfc93f925ab2b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88af7c1a3b6b85c6528c7411938925acc7579899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88af7c1a3b6b85c6528c7411938925acc7579899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88af7c1a3b6b85c6528c7411938925acc7579899"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "39a37211db102887cdc8f7bbde616155f0ebbd0f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2442cd78651d159418ac8e739bfc93f925ab2b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2442cd78651d159418ac8e739bfc93f925ab2b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cc2442cd78651d159418ac8e739bfc93f925ab2b", "patch": "@@ -1,3 +1,9 @@\n+2012-05-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/53521\n+\t* trans.c (gfc_deallocate_scalar_with_status): Properly\n+\thandle the case size == 0.\n+\n 2012-05-30  Tobias Burnus  <burnus@net-b.de>\n \n \tPR c/53502"}, {"sha": "3313be92df843d434288128ca1ec970b76b1b5b1", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2442cd78651d159418ac8e739bfc93f925ab2b/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2442cd78651d159418ac8e739bfc93f925ab2b/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=cc2442cd78651d159418ac8e739bfc93f925ab2b", "patch": "@@ -1130,15 +1130,12 @@ internal_realloc (void *mem, size_t size)\n   if (!res && size != 0)\n     _gfortran_os_error (\"Allocation would exceed memory limit\");\n \n-  if (size == 0)\n-    return NULL;\n-\n   return res;\n }  */\n tree\n gfc_call_realloc (stmtblock_t * block, tree mem, tree size)\n {\n-  tree msg, res, nonzero, zero, null_result, tmp;\n+  tree msg, res, nonzero, null_result, tmp;\n   tree type = TREE_TYPE (mem);\n \n   size = gfc_evaluate_now (size, block);\n@@ -1169,15 +1166,6 @@ gfc_call_realloc (stmtblock_t * block, tree mem, tree size)\n \t\t\t build_empty_stmt (input_location));\n   gfc_add_expr_to_block (block, tmp);\n \n-  /* if (size == 0) then the result is NULL.  */\n-  tmp = fold_build2_loc (input_location, MODIFY_EXPR, type, res,\n-\t\t\t build_int_cst (type, 0));\n-  zero = fold_build1_loc (input_location, TRUTH_NOT_EXPR, boolean_type_node,\n-\t\t\t  nonzero);\n-  tmp = fold_build3_loc (input_location, COND_EXPR, void_type_node, zero, tmp,\n-\t\t\t build_empty_stmt (input_location));\n-  gfc_add_expr_to_block (block, tmp);\n-\n   return res;\n }\n "}]}