{"sha": "50a504654d2c54b270615541ab66af7c4f3d664f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBhNTA0NjU0ZDJjNTRiMjcwNjE1NTQxYWI2NmFmN2M0ZjNkNjY0Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-10-27T16:57:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-10-27T16:57:33Z"}, "message": "libgo: Update to Go 1.3.3 release.\n\nFrom-SVN: r216746", "tree": {"sha": "cffb8bafa3b597c0dcc89a2c0d23dd3e16e6db3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cffb8bafa3b597c0dcc89a2c0d23dd3e16e6db3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50a504654d2c54b270615541ab66af7c4f3d664f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a504654d2c54b270615541ab66af7c4f3d664f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a504654d2c54b270615541ab66af7c4f3d664f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a504654d2c54b270615541ab66af7c4f3d664f/comments", "author": null, "committer": null, "parents": [{"sha": "fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e"}], "stats": {"total": 396, "additions": 336, "deletions": 60}, "files": [{"sha": "99d33679a14754719ef37c97905eb2acab8ee26d", "filename": "libgo/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMERGE?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -1,4 +1,4 @@\n-9895f9e36435\n+f44017549ff9\n \n The first line of this file holds the Mercurial revision number of the\n last merge done from the master library sources."}, {"sha": "5131d128e4e21e348e975d4180b0207878a164dc", "filename": "libgo/go/compress/gzip/gzip.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcompress%2Fgzip%2Fgzip.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcompress%2Fgzip%2Fgzip.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fgzip%2Fgzip.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -245,7 +245,8 @@ func (z *Writer) Flush() error {\n \treturn z.err\n }\n \n-// Close closes the Writer. It does not close the underlying io.Writer.\n+// Close closes the Writer, flushing any unwritten data to the underlying\n+// io.Writer, but does not close the underlying io.Writer.\n func (z *Writer) Close() error {\n \tif z.err != nil {\n \t\treturn z.err"}, {"sha": "3b4313a8beaf56268629dc09664c4a3d3bcc3208", "filename": "libgo/go/compress/zlib/writer.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcompress%2Fzlib%2Fwriter.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcompress%2Fzlib%2Fwriter.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fzlib%2Fwriter.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -174,7 +174,8 @@ func (z *Writer) Flush() error {\n \treturn z.err\n }\n \n-// Calling Close does not close the wrapped io.Writer originally passed to NewWriter.\n+// Close closes the Writer, flushing any unwritten data to the underlying\n+// io.Writer, but does not close the underlying io.Writer.\n func (z *Writer) Close() error {\n \tif !z.wroteHeader {\n \t\tz.err = z.writeHeader()"}, {"sha": "59e8bb5b7ba1a6cb06d2e8c1367f0f3ca7811b51", "filename": "libgo/go/crypto/rsa/pkcs1v15.go", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -53,11 +53,14 @@ func DecryptPKCS1v15(rand io.Reader, priv *PrivateKey, ciphertext []byte) (out [\n \tif err := checkPub(&priv.PublicKey); err != nil {\n \t\treturn nil, err\n \t}\n-\tvalid, out, err := decryptPKCS1v15(rand, priv, ciphertext)\n-\tif err == nil && valid == 0 {\n-\t\terr = ErrDecryption\n+\tvalid, out, index, err := decryptPKCS1v15(rand, priv, ciphertext)\n+\tif err != nil {\n+\t\treturn\n \t}\n-\n+\tif valid == 0 {\n+\t\treturn nil, ErrDecryption\n+\t}\n+\tout = out[index:]\n \treturn\n }\n \n@@ -80,21 +83,32 @@ func DecryptPKCS1v15SessionKey(rand io.Reader, priv *PrivateKey, ciphertext []by\n \t}\n \tk := (priv.N.BitLen() + 7) / 8\n \tif k-(len(key)+3+8) < 0 {\n-\t\terr = ErrDecryption\n-\t\treturn\n+\t\treturn ErrDecryption\n \t}\n \n-\tvalid, msg, err := decryptPKCS1v15(rand, priv, ciphertext)\n+\tvalid, em, index, err := decryptPKCS1v15(rand, priv, ciphertext)\n \tif err != nil {\n \t\treturn\n \t}\n \n-\tvalid &= subtle.ConstantTimeEq(int32(len(msg)), int32(len(key)))\n-\tsubtle.ConstantTimeCopy(valid, key, msg)\n+\tif len(em) != k {\n+\t\t// This should be impossible because decryptPKCS1v15 always\n+\t\t// returns the full slice.\n+\t\treturn ErrDecryption\n+\t}\n+\n+\tvalid &= subtle.ConstantTimeEq(int32(len(em)-index), int32(len(key)))\n+\tsubtle.ConstantTimeCopy(valid, key, em[len(em)-len(key):])\n \treturn\n }\n \n-func decryptPKCS1v15(rand io.Reader, priv *PrivateKey, ciphertext []byte) (valid int, msg []byte, err error) {\n+// decryptPKCS1v15 decrypts ciphertext using priv and blinds the operation if\n+// rand is not nil. It returns one or zero in valid that indicates whether the\n+// plaintext was correctly structured. In either case, the plaintext is\n+// returned in em so that it may be read independently of whether it was valid\n+// in order to maintain constant memory access patterns. If the plaintext was\n+// valid then index contains the index of the original message in em.\n+func decryptPKCS1v15(rand io.Reader, priv *PrivateKey, ciphertext []byte) (valid int, em []byte, index int, err error) {\n \tk := (priv.N.BitLen() + 7) / 8\n \tif k < 11 {\n \t\terr = ErrDecryption\n@@ -107,16 +121,15 @@ func decryptPKCS1v15(rand io.Reader, priv *PrivateKey, ciphertext []byte) (valid\n \t\treturn\n \t}\n \n-\tem := leftPad(m.Bytes(), k)\n+\tem = leftPad(m.Bytes(), k)\n \tfirstByteIsZero := subtle.ConstantTimeByteEq(em[0], 0)\n \tsecondByteIsTwo := subtle.ConstantTimeByteEq(em[1], 2)\n \n \t// The remainder of the plaintext must be a string of non-zero random\n \t// octets, followed by a 0, followed by the message.\n \t//   lookingForIndex: 1 iff we are still looking for the zero.\n \t//   index: the offset of the first zero byte.\n-\tvar lookingForIndex, index int\n-\tlookingForIndex = 1\n+\tlookingForIndex := 1\n \n \tfor i := 2; i < len(em); i++ {\n \t\tequals0 := subtle.ConstantTimeByteEq(em[i], 0)\n@@ -129,8 +142,8 @@ func decryptPKCS1v15(rand io.Reader, priv *PrivateKey, ciphertext []byte) (valid\n \tvalidPS := subtle.ConstantTimeLessOrEq(2+8, index)\n \n \tvalid = firstByteIsZero & secondByteIsTwo & (^lookingForIndex & 1) & validPS\n-\tmsg = em[index+1:]\n-\treturn\n+\tindex = subtle.ConstantTimeSelect(valid, index+1, 0)\n+\treturn valid, em, index, nil\n }\n \n // nonZeroRandomBytes fills the given slice with non-zero random octets."}, {"sha": "2dc5dbc2c85c5a97c5817f95b19e2157b9d1aa68", "filename": "libgo/go/crypto/rsa/pkcs1v15_test.go", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15_test.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -227,6 +227,26 @@ func TestUnpaddedSignature(t *testing.T) {\n \t}\n }\n \n+func TestShortSessionKey(t *testing.T) {\n+\t// This tests that attempting to decrypt a session key where the\n+\t// ciphertext is too small doesn't run outside the array bounds.\n+\tciphertext, err := EncryptPKCS1v15(rand.Reader, &rsaPrivateKey.PublicKey, []byte{1})\n+\tif err != nil {\n+\t\tt.Fatalf(\"Failed to encrypt short message: %s\", err)\n+\t}\n+\n+\tvar key [32]byte\n+\tif err := DecryptPKCS1v15SessionKey(nil, rsaPrivateKey, ciphertext, key[:]); err != nil {\n+\t\tt.Fatalf(\"Failed to decrypt short message: %s\", err)\n+\t}\n+\n+\tfor _, v := range key {\n+\t\tif v != 0 {\n+\t\t\tt.Fatal(\"key was modified when ciphertext was invalid\")\n+\t\t}\n+\t}\n+}\n+\n // In order to generate new test vectors you'll need the PEM form of this key:\n // -----BEGIN RSA PRIVATE KEY-----\n // MIIBOgIBAAJBALKZD0nEffqM1ACuak0bijtqE2QrI/KLADv7l3kK3ppMyCuLKoF0"}, {"sha": "9c4b14a65f65424de72f7115e98f4835948d2bdb", "filename": "libgo/go/crypto/subtle/constant_time.go", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Fsubtle%2Fconstant_time.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Fsubtle%2Fconstant_time.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsubtle%2Fconstant_time.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -49,9 +49,14 @@ func ConstantTimeEq(x, y int32) int {\n \treturn int(z & 1)\n }\n \n-// ConstantTimeCopy copies the contents of y into x iff v == 1. If v == 0, x is left unchanged.\n-// Its behavior is undefined if v takes any other value.\n+// ConstantTimeCopy copies the contents of y into x (a slice of equal length)\n+// if v == 1. If v == 0, x is left unchanged. Its behavior is undefined if v\n+// takes any other value.\n func ConstantTimeCopy(v int, x, y []byte) {\n+\tif len(x) != len(y) {\n+\t\tpanic(\"subtle: slices have different lengths\")\n+\t}\n+\n \txmask := byte(v - 1)\n \tymask := byte(^(v - 1))\n \tfor i := 0; i < len(x); i++ {"}, {"sha": "dff6fd9adc4595e2ec67ad91acebb3592e714de6", "filename": "libgo/go/crypto/tls/handshake_server.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -214,6 +214,10 @@ Curves:\n func (hs *serverHandshakeState) checkForResumption() bool {\n \tc := hs.c\n \n+\tif c.config.SessionTicketsDisabled {\n+\t\treturn false\n+\t}\n+\n \tvar ok bool\n \tif hs.sessionState, ok = c.decryptTicket(hs.clientHello.sessionTicket); !ok {\n \t\treturn false"}, {"sha": "3444d5ca829e93ea75d79879666336de2816e471", "filename": "libgo/go/crypto/tls/handshake_server_test.go", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -557,6 +557,32 @@ func TestResumption(t *testing.T) {\n \trunServerTestTLS12(t, test)\n }\n \n+func TestResumptionDisabled(t *testing.T) {\n+\tsessionFilePath := tempFile(\"\")\n+\tdefer os.Remove(sessionFilePath)\n+\n+\tconfig := *testConfig\n+\n+\ttest := &serverTest{\n+\t\tname:    \"IssueTicketPreDisable\",\n+\t\tcommand: []string{\"openssl\", \"s_client\", \"-cipher\", \"RC4-SHA\", \"-sess_out\", sessionFilePath},\n+\t\tconfig:  &config,\n+\t}\n+\trunServerTestTLS12(t, test)\n+\n+\tconfig.SessionTicketsDisabled = true\n+\n+\ttest = &serverTest{\n+\t\tname:    \"ResumeDisabled\",\n+\t\tcommand: []string{\"openssl\", \"s_client\", \"-cipher\", \"RC4-SHA\", \"-sess_in\", sessionFilePath},\n+\t\tconfig:  &config,\n+\t}\n+\trunServerTestTLS12(t, test)\n+\n+\t// One needs to manually confirm that the handshake in the golden data\n+\t// file for ResumeDisabled does not include a resumption handshake.\n+}\n+\n // cert.pem and key.pem were generated with generate_cert.go\n // Thus, they have no ExtKeyUsage fields and trigger an error\n // when verification is turned on."}, {"sha": "30f0026815538511a3b44e50d269981048df71af", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-IssueTicketPreDisable", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-IssueTicketPreDisable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-IssueTicketPreDisable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-IssueTicketPreDisable?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -0,0 +1,87 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 60 01 00 00  5c 03 03 54 23 54 02 17  |....`...\\..T#T..|\n+00000010  f3 53 13 3d 48 88 c3 19  b9 d1 3d 33 7f f5 99 56  |.S.=H.....=3...V|\n+00000020  04 71 1b d9 d5 64 8a 0d  4a 54 00 00 00 04 00 05  |.q...d..JT......|\n+00000030  00 ff 01 00 00 2f 00 23  00 00 00 0d 00 22 00 20  |...../.#.....\". |\n+00000040  06 01 06 02 06 03 05 01  05 02 05 03 04 01 04 02  |................|\n+00000050  04 03 03 01 03 02 03 03  02 01 02 02 02 03 01 01  |................|\n+00000060  00 0f 00 01 01                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 35 02 00 00  31 03 03 00 00 00 00 00  |....5...1.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  09 00 23 00 00 ff 01 00  01 00 16 03 03 02 be 0b  |..#.............|\n+00000040  00 02 ba 00 02 b7 00 02  b4 30 82 02 b0 30 82 02  |.........0...0..|\n+00000050  19 a0 03 02 01 02 02 09  00 85 b0 bb a4 8a 7f b8  |................|\n+00000060  ca 30 0d 06 09 2a 86 48  86 f7 0d 01 01 05 05 00  |.0...*.H........|\n+00000070  30 45 31 0b 30 09 06 03  55 04 06 13 02 41 55 31  |0E1.0...U....AU1|\n+00000080  13 30 11 06 03 55 04 08  13 0a 53 6f 6d 65 2d 53  |.0...U....Some-S|\n+00000090  74 61 74 65 31 21 30 1f  06 03 55 04 0a 13 18 49  |tate1!0...U....I|\n+000000a0  6e 74 65 72 6e 65 74 20  57 69 64 67 69 74 73 20  |nternet Widgits |\n+000000b0  50 74 79 20 4c 74 64 30  1e 17 0d 31 30 30 34 32  |Pty Ltd0...10042|\n+000000c0  34 30 39 30 39 33 38 5a  17 0d 31 31 30 34 32 34  |4090938Z..110424|\n+000000d0  30 39 30 39 33 38 5a 30  45 31 0b 30 09 06 03 55  |090938Z0E1.0...U|\n+000000e0  04 06 13 02 41 55 31 13  30 11 06 03 55 04 08 13  |....AU1.0...U...|\n+000000f0  0a 53 6f 6d 65 2d 53 74  61 74 65 31 21 30 1f 06  |.Some-State1!0..|\n+00000100  03 55 04 0a 13 18 49 6e  74 65 72 6e 65 74 20 57  |.U....Internet W|\n+00000110  69 64 67 69 74 73 20 50  74 79 20 4c 74 64 30 81  |idgits Pty Ltd0.|\n+00000120  9f 30 0d 06 09 2a 86 48  86 f7 0d 01 01 01 05 00  |.0...*.H........|\n+00000130  03 81 8d 00 30 81 89 02  81 81 00 bb 79 d6 f5 17  |....0.......y...|\n+00000140  b5 e5 bf 46 10 d0 dc 69  be e6 2b 07 43 5a d0 03  |...F...i..+.CZ..|\n+00000150  2d 8a 7a 43 85 b7 14 52  e7 a5 65 4c 2c 78 b8 23  |-.zC...R..eL,x.#|\n+00000160  8c b5 b4 82 e5 de 1f 95  3b 7e 62 a5 2c a5 33 d6  |........;~b.,.3.|\n+00000170  fe 12 5c 7a 56 fc f5 06  bf fa 58 7b 26 3f b5 cd  |..\\zV.....X{&?..|\n+00000180  04 d3 d0 c9 21 96 4a c7  f4 54 9f 5a bf ef 42 71  |....!.J..T.Z..Bq|\n+00000190  00 fe 18 99 07 7f 7e 88  7d 7d f1 04 39 c4 a2 2e  |......~.}}..9...|\n+000001a0  db 51 c9 7c e3 c0 4c 3b  32 66 01 cf af b1 1d b8  |.Q.|..L;2f......|\n+000001b0  71 9a 1d db db 89 6b ae  da 2d 79 02 03 01 00 01  |q.....k..-y.....|\n+000001c0  a3 81 a7 30 81 a4 30 1d  06 03 55 1d 0e 04 16 04  |...0..0...U.....|\n+000001d0  14 b1 ad e2 85 5a cf cb  28 db 69 ce 23 69 de d3  |.....Z..(.i.#i..|\n+000001e0  26 8e 18 88 39 30 75 06  03 55 1d 23 04 6e 30 6c  |&...90u..U.#.n0l|\n+000001f0  80 14 b1 ad e2 85 5a cf  cb 28 db 69 ce 23 69 de  |......Z..(.i.#i.|\n+00000200  d3 26 8e 18 88 39 a1 49  a4 47 30 45 31 0b 30 09  |.&...9.I.G0E1.0.|\n+00000210  06 03 55 04 06 13 02 41  55 31 13 30 11 06 03 55  |..U....AU1.0...U|\n+00000220  04 08 13 0a 53 6f 6d 65  2d 53 74 61 74 65 31 21  |....Some-State1!|\n+00000230  30 1f 06 03 55 04 0a 13  18 49 6e 74 65 72 6e 65  |0...U....Interne|\n+00000240  74 20 57 69 64 67 69 74  73 20 50 74 79 20 4c 74  |t Widgits Pty Lt|\n+00000250  64 82 09 00 85 b0 bb a4  8a 7f b8 ca 30 0c 06 03  |d...........0...|\n+00000260  55 1d 13 04 05 30 03 01  01 ff 30 0d 06 09 2a 86  |U....0....0...*.|\n+00000270  48 86 f7 0d 01 01 05 05  00 03 81 81 00 08 6c 45  |H.............lE|\n+00000280  24 c7 6b b1 59 ab 0c 52  cc f2 b0 14 d7 87 9d 7a  |$.k.Y..R.......z|\n+00000290  64 75 b5 5a 95 66 e4 c5  2b 8e ae 12 66 1f eb 4f  |du.Z.f..+...f..O|\n+000002a0  38 b3 6e 60 d3 92 fd f7  41 08 b5 25 13 b1 18 7a  |8.n`....A..%...z|\n+000002b0  24 fb 30 1d ba ed 98 b9  17 ec e7 d7 31 59 db 95  |$.0.........1Y..|\n+000002c0  d3 1d 78 ea 50 56 5c d5  82 5a 2d 5a 5f 33 c4 b6  |..x.PV\\..Z-Z_3..|\n+000002d0  d8 c9 75 90 96 8c 0f 52  98 b5 cd 98 1f 89 20 5f  |..u....R...... _|\n+000002e0  f2 a0 1c a3 1b 96 94 dd  a9 fd 57 e9 70 e8 26 6d  |..........W.p.&m|\n+000002f0  71 99 9b 26 6e 38 50 29  6c 90 a7 bd d9 16 03 03  |q..&n8P)l.......|\n+00000300  00 04 0e 00 00 00                                 |......|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 86 10 00 00  82 00 80 27 e9 a4 f7 e7  |...........'....|\n+00000010  df 25 de 84 8c 1f d6 e6  c3 11 28 55 9a c1 91 37  |.%........(U...7|\n+00000020  84 f5 ba f8 80 0d ca 50  cb 1e 72 f7 97 6f c2 b2  |.......P..r..o..|\n+00000030  04 4d 13 7c e0 6e a0 1f  91 e1 38 1b a2 c0 55 16  |.M.|.n....8...U.|\n+00000040  7f 29 fc ed 1c 1a cf 72  14 c3 00 c1 dd 36 36 af  |.).....r.....66.|\n+00000050  a6 e4 a8 be ba ec 13 d0  1e d0 1d fd e1 5b 27 fd  |.............['.|\n+00000060  9a da 2e 12 c8 b0 b9 c2  b9 76 ec 7f 3c 98 b6 63  |.........v..<..c|\n+00000070  bc da f0 07 7a 3d e7 61  f4 2f 12 80 3b f9 3b cc  |....z=.a./..;.;.|\n+00000080  05 c8 2f 7e 28 b2 73 bf  97 61 29 14 03 03 00 01  |../~(.s..a).....|\n+00000090  01 16 03 03 00 24 17 59  a9 45 53 46 33 96 50 dd  |.....$.Y.ESF3.P.|\n+000000a0  3e 23 aa 91 38 f8 56 4a  2f 1a f2 b1 44 9b ce 17  |>#..8.VJ/...D...|\n+000000b0  6b 8a 89 76 bc 67 b8 8b  ba 90                    |k..v.g....|\n+>>> Flow 4 (server to client)\n+00000000  16 03 03 00 72 04 00 00  6e 00 00 00 00 00 68 00  |....r...n.....h.|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 65  |...............e|\n+00000020  ea 4b d1 ef ba 2d db 0c  ba 9a d4 20 76 57 c8 ec  |.K...-..... vW..|\n+00000030  dc 2d 77 fb fb 3b 93 5f  53 e0 14 4f 90 fb d6 55  |.-w..;._S..O...U|\n+00000040  57 8c 8d 0d 25 ea 5d 0d  f2 91 e5 12 22 12 ec 7b  |W...%.].....\"..{|\n+00000050  5f b6 6e fd 07 59 23 24  fc b1 97 ca ea 56 a5 c2  |_.n..Y#$.....V..|\n+00000060  a0 e4 9e 99 64 f2 64 d0  75 7a 46 63 e3 dc 21 ed  |....d.d.uzFc..!.|\n+00000070  78 56 e9 e1 ab 66 80 14  03 03 00 01 01 16 03 03  |xV...f..........|\n+00000080  00 24 fc 14 68 07 17 1f  df b7 84 cb fd c1 e0 e4  |.$..h...........|\n+00000090  f2 1a ea 34 b5 00 7f 70  be c8 1c 0a d6 55 e3 57  |...4...p.....U.W|\n+000000a0  50 4e 6d 7d 8a 5d 17 03  03 00 21 24 27 50 40 c1  |PNm}.]....!$'P@.|\n+000000b0  c5 bd c7 9f 95 d9 ba 2e  7b 0e db ea a7 31 81 05  |........{....1..|\n+000000c0  75 43 b1 63 cf b8 55 92  ef 76 98 a9 15 03 03 00  |uC.c..U..v......|\n+000000d0  16 d7 ea 3c 79 e7 a6 2f  61 39 ec 4e 95 86 48 5e  |...<y../a9.N..H^|\n+000000e0  75 a0 9e 41 42 89 67                              |u..AB.g|"}, {"sha": "db833f65559af36771ab35aad82b58c476a0e74c", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ResumeDisabled", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ResumeDisabled", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ResumeDisabled", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ResumeDisabled?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -0,0 +1,87 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 e8 01 00 00  e4 03 03 54 23 54 02 a5  |...........T#T..|\n+00000010  10 11 0f 6d e5 2d 2f e8  bb 52 b1 38 3f 65 01 43  |...m.-/..R.8?e.C|\n+00000020  36 cc 48 f6 09 22 a1 85  20 28 3c 20 35 8b fe 7a  |6.H..\".. (< 5..z|\n+00000030  41 3b 59 3a 5d b9 b3 21  f0 62 e9 0d 7b af f5 5d  |A;Y:]..!.b..{..]|\n+00000040  fa 65 1a 40 c8 ca cd 74  8c ef d2 fb 00 04 00 05  |.e.@...t........|\n+00000050  00 ff 01 00 00 97 00 23  00 68 00 00 00 00 00 00  |.......#.h......|\n+00000060  00 00 00 00 00 00 00 00  00 00 65 ea 4b d1 ef ba  |..........e.K...|\n+00000070  2d db 0c ba 9a d4 20 76  57 c8 ec dc 2d 77 fb fb  |-..... vW...-w..|\n+00000080  3b 93 5f 53 e0 14 4f 90  fb d6 55 57 8c 8d 0d 25  |;._S..O...UW...%|\n+00000090  ea 5d 0d f2 91 e5 12 22  12 ec 7b 5f b6 6e fd 07  |.].....\"..{_.n..|\n+000000a0  59 23 24 fc b1 97 ca ea  56 a5 c2 a0 e4 9e 99 64  |Y#$.....V......d|\n+000000b0  f2 64 d0 75 7a 46 63 e3  dc 21 ed 78 56 e9 e1 ab  |.d.uzFc..!.xV...|\n+000000c0  66 80 00 0d 00 22 00 20  06 01 06 02 06 03 05 01  |f....\". ........|\n+000000d0  05 02 05 03 04 01 04 02  04 03 03 01 03 02 03 03  |................|\n+000000e0  02 01 02 02 02 03 01 01  00 0f 00 01 01           |.............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  05 ff 01 00 01 00 16 03  03 02 be 0b 00 02 ba 00  |................|\n+00000040  02 b7 00 02 b4 30 82 02  b0 30 82 02 19 a0 03 02  |.....0...0......|\n+00000050  01 02 02 09 00 85 b0 bb  a4 8a 7f b8 ca 30 0d 06  |.............0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 05 05 00 30 45 31 0b  |.*.H........0E1.|\n+00000070  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000080  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000090  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+000000a0  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000b0  4c 74 64 30 1e 17 0d 31  30 30 34 32 34 30 39 30  |Ltd0...100424090|\n+000000c0  39 33 38 5a 17 0d 31 31  30 34 32 34 30 39 30 39  |938Z..1104240909|\n+000000d0  33 38 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |38Z0E1.0...U....|\n+000000e0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000f0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+00000100  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000110  74 73 20 50 74 79 20 4c  74 64 30 81 9f 30 0d 06  |ts Pty Ltd0..0..|\n+00000120  09 2a 86 48 86 f7 0d 01  01 01 05 00 03 81 8d 00  |.*.H............|\n+00000130  30 81 89 02 81 81 00 bb  79 d6 f5 17 b5 e5 bf 46  |0.......y......F|\n+00000140  10 d0 dc 69 be e6 2b 07  43 5a d0 03 2d 8a 7a 43  |...i..+.CZ..-.zC|\n+00000150  85 b7 14 52 e7 a5 65 4c  2c 78 b8 23 8c b5 b4 82  |...R..eL,x.#....|\n+00000160  e5 de 1f 95 3b 7e 62 a5  2c a5 33 d6 fe 12 5c 7a  |....;~b.,.3...\\z|\n+00000170  56 fc f5 06 bf fa 58 7b  26 3f b5 cd 04 d3 d0 c9  |V.....X{&?......|\n+00000180  21 96 4a c7 f4 54 9f 5a  bf ef 42 71 00 fe 18 99  |!.J..T.Z..Bq....|\n+00000190  07 7f 7e 88 7d 7d f1 04  39 c4 a2 2e db 51 c9 7c  |..~.}}..9....Q.||\n+000001a0  e3 c0 4c 3b 32 66 01 cf  af b1 1d b8 71 9a 1d db  |..L;2f......q...|\n+000001b0  db 89 6b ae da 2d 79 02  03 01 00 01 a3 81 a7 30  |..k..-y........0|\n+000001c0  81 a4 30 1d 06 03 55 1d  0e 04 16 04 14 b1 ad e2  |..0...U.........|\n+000001d0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+000001e0  39 30 75 06 03 55 1d 23  04 6e 30 6c 80 14 b1 ad  |90u..U.#.n0l....|\n+000001f0  e2 85 5a cf cb 28 db 69  ce 23 69 de d3 26 8e 18  |..Z..(.i.#i..&..|\n+00000200  88 39 a1 49 a4 47 30 45  31 0b 30 09 06 03 55 04  |.9.I.G0E1.0...U.|\n+00000210  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000220  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000230  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000240  64 67 69 74 73 20 50 74  79 20 4c 74 64 82 09 00  |dgits Pty Ltd...|\n+00000250  85 b0 bb a4 8a 7f b8 ca  30 0c 06 03 55 1d 13 04  |........0...U...|\n+00000260  05 30 03 01 01 ff 30 0d  06 09 2a 86 48 86 f7 0d  |.0....0...*.H...|\n+00000270  01 01 05 05 00 03 81 81  00 08 6c 45 24 c7 6b b1  |..........lE$.k.|\n+00000280  59 ab 0c 52 cc f2 b0 14  d7 87 9d 7a 64 75 b5 5a  |Y..R.......zdu.Z|\n+00000290  95 66 e4 c5 2b 8e ae 12  66 1f eb 4f 38 b3 6e 60  |.f..+...f..O8.n`|\n+000002a0  d3 92 fd f7 41 08 b5 25  13 b1 18 7a 24 fb 30 1d  |....A..%...z$.0.|\n+000002b0  ba ed 98 b9 17 ec e7 d7  31 59 db 95 d3 1d 78 ea  |........1Y....x.|\n+000002c0  50 56 5c d5 82 5a 2d 5a  5f 33 c4 b6 d8 c9 75 90  |PV\\..Z-Z_3....u.|\n+000002d0  96 8c 0f 52 98 b5 cd 98  1f 89 20 5f f2 a0 1c a3  |...R...... _....|\n+000002e0  1b 96 94 dd a9 fd 57 e9  70 e8 26 6d 71 99 9b 26  |......W.p.&mq..&|\n+000002f0  6e 38 50 29 6c 90 a7 bd  d9 16 03 03 00 04 0e 00  |n8P)l...........|\n+00000300  00 00                                             |..|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 86 10 00 00  82 00 80 ae 02 dd 1f 1a  |................|\n+00000010  86 83 f5 2f 82 46 4b 29  58 aa a1 b3 56 8b 4e 40  |.../.FK)X...V.N@|\n+00000020  ef 23 65 67 ad 48 e5 e1  fd ae dd bf 68 fd bd a6  |.#eg.H......h...|\n+00000030  13 a0 7e 05 ab f7 20 e1  6a 4e d1 37 93 08 1d c9  |..~... .jN.7....|\n+00000040  37 e0 b5 34 28 bf 20 45  45 da 0f 7e 51 a7 c6 ae  |7..4(. EE..~Q...|\n+00000050  61 6c 07 1b 73 ef da 6e  25 c4 ed be e3 3f da ae  |al..s..n%....?..|\n+00000060  cd 3c 17 9c 2e ee fb 47  9d b3 a1 b2 c3 5d e0 83  |.<.....G.....]..|\n+00000070  74 20 37 2d 72 d6 d0 4d  58 0e 26 1c 50 22 95 08  |t 7-r..MX.&.P\"..|\n+00000080  7d e0 5f 86 99 9e 2c 2e  a7 a0 7f 14 03 03 00 01  |}._...,.........|\n+00000090  01 16 03 03 00 24 a2 ab  41 25 a5 cf 04 18 1d 98  |.....$..A%......|\n+000000a0  88 6c 59 21 86 33 54 f4  35 b4 21 6e a5 29 d5 6e  |.lY!.3T.5.!n.).n|\n+000000b0  3d 08 72 b0 af 46 b5 8f  6b 86                    |=.r..F..k.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 24 59 20 4d c2 17  |..........$Y M..|\n+00000010  8b 3c 9b 33 d9 f9 ef fb  80 18 1f 67 a7 58 12 89  |.<.3.......g.X..|\n+00000020  4e 73 0f 2d 7b e6 c4 a6  79 73 01 da 22 e8 54 17  |Ns.-{...ys..\".T.|\n+00000030  03 03 00 21 36 ca 64 0f  4a 12 a5 50 3d 97 bb 39  |...!6.d.J..P=..9|\n+00000040  02 fc ed d1 82 6a 9a 2e  21 79 f6 e1 b3 cc 32 db  |.....j..!y....2.|\n+00000050  0f 5d b3 fb a5 15 03 03  00 16 51 f4 be 57 7a df  |.]........Q..Wz.|\n+00000060  f1 f2 bd b5 51 5e 45 80  be 0b 9a 0c d1 19 3c 79  |....Q^E.......<y|"}, {"sha": "0923027c701b162db37f236b6eaf5f77c0a7ef58", "filename": "libgo/go/crypto/tls/ticket.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Fticket.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fcrypto%2Ftls%2Fticket.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fticket.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -153,7 +153,8 @@ func (c *Conn) encryptTicket(state *sessionState) ([]byte, error) {\n }\n \n func (c *Conn) decryptTicket(encrypted []byte) (*sessionState, bool) {\n-\tif len(encrypted) < aes.BlockSize+sha256.Size {\n+\tif c.config.SessionTicketsDisabled ||\n+\t\tlen(encrypted) < aes.BlockSize+sha256.Size {\n \t\treturn nil, false\n \t}\n "}, {"sha": "db45716f124a155aa0519cd70ff6ad25c6e763f3", "filename": "libgo/go/net/dnsconfig_unix.go", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Fdnsconfig_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Fdnsconfig_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fdnsconfig_unix.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -75,19 +75,19 @@ func dnsReadConfig(filename string) (*dnsConfig, error) {\n \t\t\tfor i := 1; i < len(f); i++ {\n \t\t\t\ts := f[i]\n \t\t\t\tswitch {\n-\t\t\t\tcase len(s) >= 6 && s[0:6] == \"ndots:\":\n+\t\t\t\tcase hasPrefix(s, \"ndots:\"):\n \t\t\t\t\tn, _, _ := dtoi(s, 6)\n \t\t\t\t\tif n < 1 {\n \t\t\t\t\t\tn = 1\n \t\t\t\t\t}\n \t\t\t\t\tconf.ndots = n\n-\t\t\t\tcase len(s) >= 8 && s[0:8] == \"timeout:\":\n+\t\t\t\tcase hasPrefix(s, \"timeout:\"):\n \t\t\t\t\tn, _, _ := dtoi(s, 8)\n \t\t\t\t\tif n < 1 {\n \t\t\t\t\t\tn = 1\n \t\t\t\t\t}\n \t\t\t\t\tconf.timeout = n\n-\t\t\t\tcase len(s) >= 8 && s[0:9] == \"attempts:\":\n+\t\t\t\tcase hasPrefix(s, \"attempts:\"):\n \t\t\t\t\tn, _, _ := dtoi(s, 9)\n \t\t\t\t\tif n < 1 {\n \t\t\t\t\t\tn = 1\n@@ -103,3 +103,7 @@ func dnsReadConfig(filename string) (*dnsConfig, error) {\n \n \treturn conf, nil\n }\n+\n+func hasPrefix(s, prefix string) bool {\n+\treturn len(s) >= len(prefix) && s[:len(prefix)] == prefix\n+}"}, {"sha": "7c73ddca7777670b6ae9619d4dcc41a2fdfc713d", "filename": "libgo/go/net/fd_unix.go", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Ffd_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Ffd_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffd_unix.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -68,16 +68,19 @@ func (fd *netFD) name() string {\n \treturn fd.net + \":\" + ls + \"->\" + rs\n }\n \n-func (fd *netFD) connect(la, ra syscall.Sockaddr) error {\n+func (fd *netFD) connect(la, ra syscall.Sockaddr, deadline time.Time) error {\n \t// Do not need to call fd.writeLock here,\n \t// because fd is not yet accessible to user,\n \t// so no concurrent operations are possible.\n-\tif err := fd.pd.PrepareWrite(); err != nil {\n-\t\treturn err\n-\t}\n \tswitch err := syscall.Connect(fd.sysfd, ra); err {\n \tcase syscall.EINPROGRESS, syscall.EALREADY, syscall.EINTR:\n \tcase nil, syscall.EISCONN:\n+\t\tif !deadline.IsZero() && deadline.Before(time.Now()) {\n+\t\t\treturn errTimeout\n+\t\t}\n+\t\tif err := fd.init(); err != nil {\n+\t\t\treturn err\n+\t\t}\n \t\treturn nil\n \tcase syscall.EINVAL:\n \t\t// On Solaris we can see EINVAL if the socket has\n@@ -92,6 +95,13 @@ func (fd *netFD) connect(la, ra syscall.Sockaddr) error {\n \tdefault:\n \t\treturn err\n \t}\n+\tif err := fd.init(); err != nil {\n+\t\treturn err\n+\t}\n+\tif !deadline.IsZero() {\n+\t\tfd.setWriteDeadline(deadline)\n+\t\tdefer fd.setWriteDeadline(noDeadline)\n+\t}\n \tfor {\n \t\t// Performing multiple connect system calls on a\n \t\t// non-blocking socket under Unix variants does not"}, {"sha": "d1129dccc47d8a857d038cf5758b794f5dacd80b", "filename": "libgo/go/net/fd_windows.go", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Ffd_windows.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Ffd_windows.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffd_windows.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -313,10 +313,17 @@ func (fd *netFD) setAddr(laddr, raddr Addr) {\n \truntime.SetFinalizer(fd, (*netFD).Close)\n }\n \n-func (fd *netFD) connect(la, ra syscall.Sockaddr) error {\n+func (fd *netFD) connect(la, ra syscall.Sockaddr, deadline time.Time) error {\n \t// Do not need to call fd.writeLock here,\n \t// because fd is not yet accessible to user,\n \t// so no concurrent operations are possible.\n+\tif err := fd.init(); err != nil {\n+\t\treturn err\n+\t}\n+\tif !deadline.IsZero() {\n+\t\tfd.setWriteDeadline(deadline)\n+\t\tdefer fd.setWriteDeadline(noDeadline)\n+\t}\n \tif !canUseConnectEx(fd.net) {\n \t\treturn syscall.Connect(fd.sysfd, ra)\n \t}"}, {"sha": "4fc4c7020823f58b5ec4fbf3d2d8a663eeb599a4", "filename": "libgo/go/net/http/httptest/server_test.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Fhttp%2Fhttptest%2Fserver_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Fhttp%2Fhttptest%2Fserver_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttptest%2Fserver_test.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -30,6 +30,7 @@ func TestServer(t *testing.T) {\n }\n \n func TestIssue7264(t *testing.T) {\n+\tt.Skip(\"broken test - removed at tip\")\n \tfor i := 0; i < 1000; i++ {\n \t\tfunc() {\n \t\t\tinHandler := make(chan bool, 1)"}, {"sha": "c80c7d6a2f1242f9a105d63b2cae59cad68adeec", "filename": "libgo/go/net/sock_posix.go", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Fsock_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Fsock_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fsock_posix.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -107,24 +107,18 @@ func (fd *netFD) dial(laddr, raddr sockaddr, deadline time.Time, toAddr func(sys\n \t\t\t}\n \t\t}\n \t}\n-\tif err := fd.init(); err != nil {\n-\t\treturn err\n-\t}\n \tvar rsa syscall.Sockaddr\n \tif raddr != nil {\n \t\tif rsa, err = raddr.sockaddr(fd.family); err != nil {\n \t\t\treturn err\n-\t\t} else if rsa != nil {\n-\t\t\tif !deadline.IsZero() {\n-\t\t\t\tfd.setWriteDeadline(deadline)\n-\t\t\t}\n-\t\t\tif err := fd.connect(lsa, rsa); err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n-\t\t\tfd.isConnected = true\n-\t\t\tif !deadline.IsZero() {\n-\t\t\t\tfd.setWriteDeadline(noDeadline)\n-\t\t\t}\n+\t\t}\n+\t\tif err := fd.connect(lsa, rsa, deadline); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tfd.isConnected = true\n+\t} else {\n+\t\tif err := fd.init(); err != nil {\n+\t\t\treturn err\n \t\t}\n \t}\n \tlsa, _ = syscall.Getsockname(fd.sysfd)"}, {"sha": "3841bbf90446bd99d29526fa63ec60e46f61f198", "filename": "libgo/go/net/testdata/resolv.conf", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Ftestdata%2Fresolv.conf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Fnet%2Ftestdata%2Fresolv.conf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ftestdata%2Fresolv.conf?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -3,3 +3,4 @@\n domain Home\n nameserver 192.168.1.1\n options ndots:5 timeout:10 attempts:3 rotate\n+options attempts 3"}, {"sha": "01717cad3e0f1c81cccca68ee844b7557e59cb25", "filename": "libgo/go/time/format_test.go", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Ftime%2Fformat_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fgo%2Ftime%2Fformat_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fformat_test.go?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -183,39 +183,45 @@ func TestParse(t *testing.T) {\n \t}\n }\n \n-func TestParseInSydney(t *testing.T) {\n-\tloc, err := LoadLocation(\"Australia/Sydney\")\n+func TestParseInLocation(t *testing.T) {\n+\t// Check that Parse (and ParseInLocation) understand that\n+\t// Feb 01 AST (Arabia Standard Time) and Feb 01 AST (Atlantic Standard Time)\n+\t// are in different time zones even though both are called AST\n+\n+\tbaghdad, err := LoadLocation(\"Asia/Baghdad\")\n \tif err != nil {\n \t\tt.Fatal(err)\n \t}\n \n-\t// Check that Parse (and ParseInLocation) understand\n-\t// that Feb EST and Aug EST are different time zones in Sydney\n-\t// even though both are called EST.\n-\tt1, err := ParseInLocation(\"Jan 02 2006 MST\", \"Feb 01 2013 EST\", loc)\n+\tt1, err := ParseInLocation(\"Jan 02 2006 MST\", \"Feb 01 2013 AST\", baghdad)\n \tif err != nil {\n \t\tt.Fatal(err)\n \t}\n-\tt2 := Date(2013, February, 1, 00, 00, 00, 0, loc)\n+\tt2 := Date(2013, February, 1, 00, 00, 00, 0, baghdad)\n \tif t1 != t2 {\n-\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 EST, Sydney) = %v, want %v\", t1, t2)\n+\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 AST, Baghdad) = %v, want %v\", t1, t2)\n \t}\n \t_, offset := t1.Zone()\n-\tif offset != 11*60*60 {\n-\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 EST, Sydney).Zone = _, %d, want _, %d\", offset, 11*60*60)\n+\tif offset != 3*60*60 {\n+\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 AST, Baghdad).Zone = _, %d, want _, %d\", offset, 3*60*60)\n+\t}\n+\n+\tblancSablon, err := LoadLocation(\"America/Blanc-Sablon\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n \t}\n \n-\tt1, err = ParseInLocation(\"Jan 02 2006 MST\", \"Aug 01 2013 EST\", loc)\n+\tt1, err = ParseInLocation(\"Jan 02 2006 MST\", \"Feb 01 2013 AST\", blancSablon)\n \tif err != nil {\n \t\tt.Fatal(err)\n \t}\n-\tt2 = Date(2013, August, 1, 00, 00, 00, 0, loc)\n+\tt2 = Date(2013, February, 1, 00, 00, 00, 0, blancSablon)\n \tif t1 != t2 {\n-\t\tt.Fatalf(\"ParseInLocation(Aug 01 2013 EST, Sydney) = %v, want %v\", t1, t2)\n+\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 AST, Blanc-Sablon) = %v, want %v\", t1, t2)\n \t}\n \t_, offset = t1.Zone()\n-\tif offset != 10*60*60 {\n-\t\tt.Fatalf(\"ParseInLocation(Aug 01 2013 EST, Sydney).Zone = _, %d, want _, %d\", offset, 10*60*60)\n+\tif offset != -4*60*60 {\n+\t\tt.Fatalf(\"ParseInLocation(Feb 01 2013 AST, Blanc-Sablon).Zone = _, %d, want _, %d\", offset, -4*60*60)\n \t}\n }\n "}, {"sha": "bae462120923a085b023c2ac2f96ce8ddf410fdf", "filename": "libgo/runtime/runtime.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fruntime%2Fruntime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a504654d2c54b270615541ab66af7c4f3d664f/libgo%2Fruntime%2Fruntime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.c?ref=50a504654d2c54b270615541ab66af7c4f3d664f", "patch": "@@ -112,8 +112,6 @@ runtime_goenvs_unix(void)\n \tsyscall_Envs.__values = (void*)s;\n \tsyscall_Envs.__count = n;\n \tsyscall_Envs.__capacity = n;\n-\n-\ttraceback_cache = ~(uint32)0;\n }\n \n int32\n@@ -309,6 +307,16 @@ runtime_parsedebugvars(void)\n {\n \tconst byte *p;\n \tintgo i, n;\n+\tbool tmp;\n+\t\n+\t// gotraceback caches the GOTRACEBACK setting in traceback_cache.\n+\t// gotraceback can be called before the environment is available.\n+\t// traceback_cache must be reset after the environment is made\n+\t// available, in order for the environment variable to take effect.\n+\t// The code is fixed differently in Go 1.4.\n+\t// This is a limited fix for Go 1.3.3.\n+\ttraceback_cache = ~(uint32)0;\n+\truntime_gotraceback(&tmp);\n \n \tp = runtime_getenv(\"GODEBUG\");\n \tif(p == nil)"}]}