{"sha": "081070150cf25a38e0b683af43244ed27723d1dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgxMDcwMTUwY2YyNWEzOGUwYjY4M2FmNDMyNDRlZDI3NzIzZDFkYw==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-11-02T16:59:04Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-11-02T16:59:04Z"}, "message": "jvmti.cc (_Jv_JVMTI_GetLineNumberTable): New function.\n\n        * jvmti.cc (_Jv_JVMTI_GetLineNumberTable): New function.\n        (_Jv_JVMTI_Interface): Define GetLineNumberTable.\n\nFrom-SVN: r118419", "tree": {"sha": "b0f51cade32bdfcdca41b43f5837b9ab6c12aa5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0f51cade32bdfcdca41b43f5837b9ab6c12aa5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/081070150cf25a38e0b683af43244ed27723d1dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081070150cf25a38e0b683af43244ed27723d1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/081070150cf25a38e0b683af43244ed27723d1dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081070150cf25a38e0b683af43244ed27723d1dc/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b68bcfff54bb250ca99d24d03705ae35460732b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b68bcfff54bb250ca99d24d03705ae35460732b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b68bcfff54bb250ca99d24d03705ae35460732b5"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "e8348a0a9095e1197c40d94960374a4e704bb6e0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/081070150cf25a38e0b683af43244ed27723d1dc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/081070150cf25a38e0b683af43244ed27723d1dc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=081070150cf25a38e0b683af43244ed27723d1dc", "patch": "@@ -1,3 +1,8 @@\n+2006-11-02  Keith Seitz  <keiths@redhat.com>\n+\n+\t* jvmti.cc (_Jv_JVMTI_GetLineNumberTable): New function.\n+\t(_Jv_JVMTI_Interface): Define GetLineNumberTable.\n+\n 2006-11-01  Keith Seitz  <keiths@redhat.com>\n \n \t* gnu/gcj/jvmti/Location.java: New file."}, {"sha": "8584c333d6d1c20afeed9a7e6f1c77fb766f7c53", "filename": "libjava/jvmti.cc", "status": "modified", "additions": 49, "deletions": 1, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/081070150cf25a38e0b683af43244ed27723d1dc/libjava%2Fjvmti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/081070150cf25a38e0b683af43244ed27723d1dc/libjava%2Fjvmti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjvmti.cc?ref=081070150cf25a38e0b683af43244ed27723d1dc", "patch": "@@ -506,6 +506,54 @@ _Jv_JVMTI_GetMethodModifiers (MAYBE_UNUSED jvmtiEnv *env, jmethodID method,\n   return JVMTI_ERROR_NONE;\n }\n \n+static jvmtiError JNICALL\n+_Jv_JVMTI_GetLineNumberTable (jvmtiEnv *env, jmethodID method,\n+\t\t\t      jint *entry_count_ptr,\n+\t\t\t      jvmtiLineNumberEntry **table_ptr)\n+{\n+  NULL_CHECK (entry_count_ptr);\n+  NULL_CHECK (table_ptr);\n+\n+  jclass klass;\n+  jvmtiError jerr = env->GetMethodDeclaringClass (method, &klass);\n+  if (jerr != JVMTI_ERROR_NONE)\n+    return jerr;\n+\n+  _Jv_MethodBase *base = _Jv_FindInterpreterMethod (klass, method);\n+  if (base == NULL)\n+    return JVMTI_ERROR_INVALID_METHODID;\n+\n+  if (java::lang::reflect::Modifier::isNative (method->accflags)\n+      || !_Jv_IsInterpretedClass (klass))\n+    return JVMTI_ERROR_NATIVE_METHOD;\n+\n+  _Jv_InterpMethod *imeth = reinterpret_cast<_Jv_InterpMethod *> (base);\n+  jlong start, end;\n+  jintArray lines = NULL;\n+  jlongArray indices = NULL;\n+  imeth->get_line_table (start, end, lines, indices);\n+  if (lines == NULL)\n+    return JVMTI_ERROR_ABSENT_INFORMATION;\n+\n+  jvmtiLineNumberEntry *table;\n+  jsize len = lines->length * sizeof (jvmtiLineNumberEntry);\n+  table = (jvmtiLineNumberEntry *) _Jv_MallocUnchecked (len);\n+  if (table == NULL)\n+    return JVMTI_ERROR_OUT_OF_MEMORY;\n+  \n+  jint *line = elements (lines);\n+  jlong *index = elements (indices);\n+  for (int i = 0; i < lines->length; ++i)\n+    {\n+      table[i].start_location = index[i];\n+      table[i].line_number = line[i];\n+    }\n+\n+  *table_ptr = table;\n+  *entry_count_ptr = lines->length;\n+  return JVMTI_ERROR_NONE;\n+}\n+\n static jvmtiError JNICALL\n _Jv_JVMTI_IsMethodNative (MAYBE_UNUSED jvmtiEnv *env, jmethodID method,\n \t\t\t  jboolean *result)\n@@ -1380,7 +1428,7 @@ struct _Jv_jvmtiEnv _Jv_JVMTI_Interface =\n   RESERVED,\t\t\t// reserved67\n   UNIMPLEMENTED,\t\t// GetMaxLocals\n   UNIMPLEMENTED,\t\t// GetArgumentsSize\n-  UNIMPLEMENTED,\t\t// GetLineNumberTable\n+  _Jv_JVMTI_GetLineNumberTable,\t// GetLineNumberTable\n   UNIMPLEMENTED,\t\t// GetMethodLocation\n   UNIMPLEMENTED,\t\t// GetLocalVariableTable\n   RESERVED,\t\t\t// reserved73"}]}