{"sha": "5097cdf9b8a0f00142c566b7723709db8690e51a", "node_id": "C_kwDOANBUbNoAKDUwOTdjZGY5YjhhMGYwMDE0MmM1NjZiNzcyMzcwOWRiODY5MGU1MWE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-06-29T15:06:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-06-29T15:06:02Z"}, "message": "libgfortran: Switch some more __float128 uses to _Float128\n\nMy patch apparently left some __float128 uses in libgfortran\nthat could use _Float128 instead, the following patch changes that.\n\n2022-06-29  Jakub Jelinek  <jakub@redhat.com>\n\n\t* mk-kinds-h.sh: Change __float128 to _Float128 in a comment.\n\t* acinclude.m4 (LIBGFOR_CHECK_MATH_IEEE128): Use _Float128 instead of\n\t__float128.\n\t* libgfortran.h (isnan): Change __float128 to _Float128 in a comment.\n\t(__acoshieee128, __acosieee128, __asinhieee128, __asinieee128,\n\t__atan2ieee128, __atanhieee128, __atanieee128, __copysignieee128,\n\t__coshieee128, __cosieee128, __erfcieee128, __erfieee128,\n\t__expieee128, __fabsieee128, __fmaieee128, __fmodieee128, __jnieee128,\n\t__log10ieee128, __logieee128, __powieee128, __sinhieee128,\n\t__sinieee128, __sqrtieee128, __tanhieee128, __tanieee128,\n\t__ynieee128, __strtoieee128): Use _Float128 instead of __float128.\n\t* configure: Regenerated.", "tree": {"sha": "7bd4ae0f736d4ebf26a86e65bf73df4c4c3e5e68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bd4ae0f736d4ebf26a86e65bf73df4c4c3e5e68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5097cdf9b8a0f00142c566b7723709db8690e51a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5097cdf9b8a0f00142c566b7723709db8690e51a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5097cdf9b8a0f00142c566b7723709db8690e51a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5097cdf9b8a0f00142c566b7723709db8690e51a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c022c0de2a6c9110350cd50275be97d061a19530", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c022c0de2a6c9110350cd50275be97d061a19530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c022c0de2a6c9110350cd50275be97d061a19530"}], "stats": {"total": 150, "additions": 75, "deletions": 75}, "files": [{"sha": "b4cc0bdde1251d4d2eea9271468477a72d5d94c2", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5097cdf9b8a0f00142c566b7723709db8690e51a/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5097cdf9b8a0f00142c566b7723709db8690e51a/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=5097cdf9b8a0f00142c566b7723709db8690e51a", "patch": "@@ -537,8 +537,8 @@ AC_DEFUN([LIBGFOR_CHECK_MATH_IEEE128],\n   AC_REQUIRE([GCC_CHECK_MATH_HEADERS])\n   AC_CACHE_CHECK([for $1], [gcc_cv_math_func_$1],\n \t\t [AC_LINK_IFELSE([AC_LANG_SOURCE([\n-__float128 $1 (__float128);\n-__float128 (*ptr)(__float128) = $1;\n+_Float128 $1 (_Float128);\n+_Float128 (*ptr)(_Float128) = $1;\n \n int\n main ()"}, {"sha": "581f1dc52d291bd1d933dd635a2b6439adb882f1", "filename": "libgfortran/configure", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5097cdf9b8a0f00142c566b7723709db8690e51a/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5097cdf9b8a0f00142c566b7723709db8690e51a/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=5097cdf9b8a0f00142c566b7723709db8690e51a", "patch": "@@ -25862,8 +25862,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __acoshieee128 (__float128);\n-__float128 (*ptr)(__float128) = __acoshieee128;\n+_Float128 __acoshieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __acoshieee128;\n \n int\n main ()\n@@ -25904,8 +25904,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __acosieee128 (__float128);\n-__float128 (*ptr)(__float128) = __acosieee128;\n+_Float128 __acosieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __acosieee128;\n \n int\n main ()\n@@ -25946,8 +25946,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __asinhieee128 (__float128);\n-__float128 (*ptr)(__float128) = __asinhieee128;\n+_Float128 __asinhieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __asinhieee128;\n \n int\n main ()\n@@ -25988,8 +25988,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __asinieee128 (__float128);\n-__float128 (*ptr)(__float128) = __asinieee128;\n+_Float128 __asinieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __asinieee128;\n \n int\n main ()\n@@ -26030,8 +26030,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __atan2ieee128 (__float128);\n-__float128 (*ptr)(__float128) = __atan2ieee128;\n+_Float128 __atan2ieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __atan2ieee128;\n \n int\n main ()\n@@ -26072,8 +26072,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __atanhieee128 (__float128);\n-__float128 (*ptr)(__float128) = __atanhieee128;\n+_Float128 __atanhieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __atanhieee128;\n \n int\n main ()\n@@ -26114,8 +26114,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __atanieee128 (__float128);\n-__float128 (*ptr)(__float128) = __atanieee128;\n+_Float128 __atanieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __atanieee128;\n \n int\n main ()\n@@ -26156,8 +26156,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __coshieee128 (__float128);\n-__float128 (*ptr)(__float128) = __coshieee128;\n+_Float128 __coshieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __coshieee128;\n \n int\n main ()\n@@ -26198,8 +26198,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __cosieee128 (__float128);\n-__float128 (*ptr)(__float128) = __cosieee128;\n+_Float128 __cosieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __cosieee128;\n \n int\n main ()\n@@ -26240,8 +26240,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __erfieee128 (__float128);\n-__float128 (*ptr)(__float128) = __erfieee128;\n+_Float128 __erfieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __erfieee128;\n \n int\n main ()\n@@ -26282,8 +26282,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __expieee128 (__float128);\n-__float128 (*ptr)(__float128) = __expieee128;\n+_Float128 __expieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __expieee128;\n \n int\n main ()\n@@ -26324,8 +26324,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __fabsieee128 (__float128);\n-__float128 (*ptr)(__float128) = __fabsieee128;\n+_Float128 __fabsieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __fabsieee128;\n \n int\n main ()\n@@ -26366,8 +26366,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __jnieee128 (__float128);\n-__float128 (*ptr)(__float128) = __jnieee128;\n+_Float128 __jnieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __jnieee128;\n \n int\n main ()\n@@ -26408,8 +26408,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __log10ieee128 (__float128);\n-__float128 (*ptr)(__float128) = __log10ieee128;\n+_Float128 __log10ieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __log10ieee128;\n \n int\n main ()\n@@ -26450,8 +26450,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __logieee128 (__float128);\n-__float128 (*ptr)(__float128) = __logieee128;\n+_Float128 __logieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __logieee128;\n \n int\n main ()\n@@ -26492,8 +26492,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __powieee128 (__float128);\n-__float128 (*ptr)(__float128) = __powieee128;\n+_Float128 __powieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __powieee128;\n \n int\n main ()\n@@ -26534,8 +26534,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __sinhieee128 (__float128);\n-__float128 (*ptr)(__float128) = __sinhieee128;\n+_Float128 __sinhieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __sinhieee128;\n \n int\n main ()\n@@ -26576,8 +26576,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __sinieee128 (__float128);\n-__float128 (*ptr)(__float128) = __sinieee128;\n+_Float128 __sinieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __sinieee128;\n \n int\n main ()\n@@ -26618,8 +26618,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __sqrtieee128 (__float128);\n-__float128 (*ptr)(__float128) = __sqrtieee128;\n+_Float128 __sqrtieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __sqrtieee128;\n \n int\n main ()\n@@ -26660,8 +26660,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __tanhieee128 (__float128);\n-__float128 (*ptr)(__float128) = __tanhieee128;\n+_Float128 __tanhieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __tanhieee128;\n \n int\n main ()\n@@ -26702,8 +26702,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __tanieee128 (__float128);\n-__float128 (*ptr)(__float128) = __tanieee128;\n+_Float128 __tanieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __tanieee128;\n \n int\n main ()\n@@ -26744,8 +26744,8 @@ fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-__float128 __ynieee128 (__float128);\n-__float128 (*ptr)(__float128) = __ynieee128;\n+_Float128 __ynieee128 (_Float128);\n+_Float128 (*ptr)(_Float128) = __ynieee128;\n \n int\n main ()"}, {"sha": "0db3a35031f03a7f407a7277944d4cfa5ba5d619", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5097cdf9b8a0f00142c566b7723709db8690e51a/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5097cdf9b8a0f00142c566b7723709db8690e51a/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=5097cdf9b8a0f00142c566b7723709db8690e51a", "patch": "@@ -247,7 +247,7 @@ extern int __mingw_snprintf (char *, size_t, const char *, ...)\n \n    Another advantage for GCC's builtins for these type-generic macros\n    is that it handles floating-point types that the system headers\n-   may not support (like __float128).  */\n+   may not support (like _Float128).  */\n \n #undef isnan\n #define isnan(x) __builtin_isnan(x)\n@@ -1960,59 +1960,59 @@ internal_proto(cshift1_16_c17);\n \n /* Prototypes for the POWER __ieee128 functions.  */\n #ifdef POWER_IEEE128\n-extern __float128 __acoshieee128 (__float128)\n+extern _Float128 __acoshieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __acosieee128 (__float128)\n+extern _Float128 __acosieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __asinhieee128 (__float128)\n+extern _Float128 __asinhieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __asinieee128 (__float128)\n+extern _Float128 __asinieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __atan2ieee128 (__float128)\n+extern _Float128 __atan2ieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __atanhieee128 (__float128)\n+extern _Float128 __atanhieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __atanieee128 (__float128)\n+extern _Float128 __atanieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __copysignieee128 (__float128, __float128)\n+extern _Float128 __copysignieee128 (_Float128, _Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __coshieee128 (__float128)\n+extern _Float128 __coshieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __cosieee128 (__float128)\n+extern _Float128 __cosieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __erfcieee128 (__float128)\n+extern _Float128 __erfcieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __erfieee128 (__float128)\n+extern _Float128 __erfieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __expieee128 (__float128)\n+extern _Float128 __expieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __fabsieee128 (__float128)\n+extern _Float128 __fabsieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __fmaieee128 (__float128, __float128, __float128)\n+extern _Float128 __fmaieee128 (_Float128, _Float128, _Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __fmodieee128 (__float128, __float128)\n+extern _Float128 __fmodieee128 (_Float128, _Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __jnieee128 (int, __float128)\n+extern _Float128 __jnieee128 (int, _Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __log10ieee128 (__float128)\n+extern _Float128 __log10ieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __logieee128 (__float128)\n+extern _Float128 __logieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __powieee128 (__float128)\n+extern _Float128 __powieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __sinhieee128 (__float128)\n+extern _Float128 __sinhieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __sinieee128 (__float128)\n+extern _Float128 __sinieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __sqrtieee128 (__float128)\n+extern _Float128 __sqrtieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __tanhieee128 (__float128)\n+extern _Float128 __tanhieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __tanieee128 (__float128)\n+extern _Float128 __tanieee128 (_Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __ynieee128 (int , __float128)\n+extern _Float128 __ynieee128 (int , _Float128)\n   __attribute__ ((__nothrow__, __leaf__));\n-extern __float128 __strtoieee128 (const char *, char **)\n+extern _Float128 __strtoieee128 (const char *, char **)\n   __attribute__ ((__nothrow__, __leaf__));\n extern int __snprintfieee128 (char *, size_t, const char *, ...)\n   __attribute__ ((__nothrow__));"}, {"sha": "0e0ec195875a8aa952fbfef265960d32d81ecad1", "filename": "libgfortran/mk-kinds-h.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5097cdf9b8a0f00142c566b7723709db8690e51a/libgfortran%2Fmk-kinds-h.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5097cdf9b8a0f00142c566b7723709db8690e51a/libgfortran%2Fmk-kinds-h.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fmk-kinds-h.sh?ref=5097cdf9b8a0f00142c566b7723709db8690e51a", "patch": "@@ -67,7 +67,7 @@ for k in $possible_real_kinds; do\n       8) ctype=\"double\" ; cplxtype=\"complex double\" ; suffix=\"\" ;;\n       # If we have a REAL(KIND=10), it is always long double\n       10) ctype=\"long double\" ; cplxtype=\"complex long double\" ; suffix=\"l\" ;;\n-      # If we have a REAL(KIND=16), it is either long double or __float128\n+      # If we have a REAL(KIND=16), it is either long double or _Float128\n       16) if [ $long_double_kind -ne 16 ]; then\n \t    ctype=\"_Float128\"\n \t    cplxtype=\"_Complex _Float128\""}]}