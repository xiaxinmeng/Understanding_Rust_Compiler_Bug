{"sha": "86b8825bfe502dfc6b4a8925801134e66741fd48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZiODgyNWJmZTUwMmRmYzZiNGE4OTI1ODAxMTM0ZTY2NzQxZmQ0OA==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-09-10T13:20:47Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-09-10T13:20:47Z"}, "message": "[AArch64 Testsuite] Add a test of the vst[234](q?) intrinics\n\n        * gcc.target/aarch64/vstN_1.c: New test.\n\nFrom-SVN: r215129", "tree": {"sha": "b951d37d1b352e131cf9ee27fb467ec700693dec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b951d37d1b352e131cf9ee27fb467ec700693dec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86b8825bfe502dfc6b4a8925801134e66741fd48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b8825bfe502dfc6b4a8925801134e66741fd48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b8825bfe502dfc6b4a8925801134e66741fd48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b8825bfe502dfc6b4a8925801134e66741fd48/comments", "author": null, "committer": null, "parents": [{"sha": "e9e08827bf931aba511a928a0feccbc328f2a927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9e08827bf931aba511a928a0feccbc328f2a927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9e08827bf931aba511a928a0feccbc328f2a927"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "0061c2c9692f06de48e233c49b9db33142d496fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b8825bfe502dfc6b4a8925801134e66741fd48/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b8825bfe502dfc6b4a8925801134e66741fd48/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86b8825bfe502dfc6b4a8925801134e66741fd48", "patch": "@@ -1,3 +1,7 @@\n+2014-09-10  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.target/aarch64/vstN_1.c: New test.\n+\n 2014-09-10  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.target/aarch64/vldN_lane_1.c: New test."}, {"sha": "9c166b7c3bcc11834e93b86aa8ed5c0c81c288a8", "filename": "gcc/testsuite/gcc.target/aarch64/vstN_1.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b8825bfe502dfc6b4a8925801134e66741fd48/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2FvstN_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b8825bfe502dfc6b4a8925801134e66741fd48/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2FvstN_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2FvstN_1.c?ref=86b8825bfe502dfc6b4a8925801134e66741fd48", "patch": "@@ -0,0 +1,76 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+\n+#include <arm_neon.h>\n+\n+extern void abort (void);\n+\n+#define TESTMETH(BASE, ELTS, STRUCT, SUFFIX)\t\t\\\n+int __attribute__ ((noinline))\t\t\t\t\\\n+test_vst##STRUCT##SUFFIX ()\t\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  BASE##_t src[ELTS * STRUCT];\t\t\t\t\\\n+  BASE##_t dest[ELTS * STRUCT];\t\t\t\t\\\n+  BASE##x##ELTS##x##STRUCT##_t vectors;\t\t\t\\\n+  int i,j;\t\t\t\t\t\t\\\n+  for (i = 0; i < STRUCT * ELTS; i++)\t\t\t\\\n+    src [i] = (BASE##_t) 2*i + 1;\t\t\t\\\n+  for (i = 0; i < STRUCT; i++)\t\t\t\t\\\n+    vectors.val[i] = vld1##SUFFIX (&src[i*ELTS]);\t\\\n+  asm volatile (\"\" : : : \"memory\");\t\t\t\\\n+  vst##STRUCT##SUFFIX (dest, vectors);\t\t\t\\\n+  asm volatile (\"\" : : : \"memory\");\t\t\t\\\n+  for (i = 0; i < STRUCT; i++)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      for (j = 0; j < ELTS; j++)\t\t\t\\\n+        if (src[i*ELTS + j] != dest[i + STRUCT*j])\t\\\n+          return 1;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  return 0;\t\t\t\t\t\t\\\n+}\n+\n+#define VARIANTS(VARIANT, STRUCT)\t\\\n+VARIANT (uint8, 8, STRUCT, _u8)\t\t\\\n+VARIANT (uint16, 4, STRUCT, _u16)\t\\\n+VARIANT (uint32, 2, STRUCT, _u32)\t\\\n+VARIANT (uint64, 1, STRUCT, _u64)\t\\\n+VARIANT (int8, 8, STRUCT, _s8)\t\t\\\n+VARIANT (int16, 4, STRUCT, _s16)\t\\\n+VARIANT (int32, 2, STRUCT, _s32)\t\\\n+VARIANT (int64, 1, STRUCT, _s64)\t\\\n+VARIANT (poly8, 8, STRUCT, _p8)\t\t\\\n+VARIANT (poly16, 4, STRUCT, _p16)\t\\\n+VARIANT (float32, 2, STRUCT, _f32)\t\\\n+VARIANT (float64, 1, STRUCT, _f64)\t\\\n+VARIANT (uint8, 16, STRUCT, q_u8)\t\\\n+VARIANT (uint16, 8, STRUCT, q_u16)\t\\\n+VARIANT (uint32, 4, STRUCT, q_u32)\t\\\n+VARIANT (uint64, 2, STRUCT, q_u64)\t\\\n+VARIANT (int8, 16, STRUCT, q_s8)\t\\\n+VARIANT (int16, 8, STRUCT, q_s16)\t\\\n+VARIANT (int32, 4, STRUCT, q_s32)\t\\\n+VARIANT (int64, 2, STRUCT, q_s64)\t\\\n+VARIANT (poly8, 16, STRUCT, q_p8)\t\\\n+VARIANT (poly16, 8, STRUCT, q_p16)\t\\\n+VARIANT (float32, 4, STRUCT, q_f32)\t\\\n+VARIANT (float64, 2, STRUCT, q_f64)\n+\n+/* Tests of vst2 and vst2q.  */\n+VARIANTS (TESTMETH, 2)\n+/* Tests of vst3 and vst3q.  */\n+VARIANTS (TESTMETH, 3)\n+/* Tests of vst4 and vst4q.  */\n+VARIANTS (TESTMETH, 4)\n+\n+#define CHECK(BASE, ELTS, STRUCT, SUFFIX)\t\\\n+  if (test_vst##STRUCT##SUFFIX () != 0)\t\t\\\n+    abort ();\n+\n+int\n+main (int argc, char **argv)\n+{\n+  VARIANTS (CHECK, 2)\n+  VARIANTS (CHECK, 3)\n+  VARIANTS (CHECK, 4)\n+  return 0;\n+}"}]}