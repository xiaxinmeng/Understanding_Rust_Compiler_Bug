{"sha": "89bcce1b025dc9dcc9930d734398206402c2016a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliY2NlMWIwMjVkYzlkY2M5OTMwZDczNDM5ODIwNjQwMmMyMDE2YQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2000-02-14T10:37:13Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-02-14T10:37:13Z"}, "message": "gcc.texi (Passes): Fix typo.\n\n\t* gcc.texi (Passes): Fix typo.\n\t* md.texi (Standard Names): Ditto.\n\t* tm.texi (Storage Layout): Ditto.\n\nFrom-SVN: r31967", "tree": {"sha": "28f41d1e8a06720e93a98fe161e9e3806e16d206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28f41d1e8a06720e93a98fe161e9e3806e16d206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89bcce1b025dc9dcc9930d734398206402c2016a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89bcce1b025dc9dcc9930d734398206402c2016a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89bcce1b025dc9dcc9930d734398206402c2016a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89bcce1b025dc9dcc9930d734398206402c2016a/comments", "author": null, "committer": null, "parents": [{"sha": "34540fe35ebce1d18cf6a43983c669db5df61b36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34540fe35ebce1d18cf6a43983c669db5df61b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34540fe35ebce1d18cf6a43983c669db5df61b36"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "989e1c0895fc10891662a9a97657bb716ca18fcc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89bcce1b025dc9dcc9930d734398206402c2016a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89bcce1b025dc9dcc9930d734398206402c2016a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89bcce1b025dc9dcc9930d734398206402c2016a", "patch": "@@ -1,3 +1,9 @@\n+Mon Feb 14 11:24:44 2000  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* gcc.texi (Passes): Fix typo.\n+\t* md.texi (Standard Names): Ditto.\n+\t* tm.texi (Storage Layout): Ditto.\n+\n 2000-02-13  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cpplib.c (do_define): Only free the old definition if it"}, {"sha": "5122e0c1d5ddead653bc8208591f6613cb5d87b1", "filename": "gcc/gcc.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89bcce1b025dc9dcc9930d734398206402c2016a/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89bcce1b025dc9dcc9930d734398206402c2016a/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=89bcce1b025dc9dcc9930d734398206402c2016a", "patch": "@@ -3434,7 +3434,7 @@ to the input file name.\n @item\n Register movement (@file{regmove.c}). This pass looks for cases where\n matching constraints would force an instruction to need a reload, and\n-this reload would be a register to register move.  It them attempts\n+this reload would be a register to register move.  It then attempts\n to change the registers used by the instruction to avoid the move\n instruction.\n "}, {"sha": "bd706a36e62f2f9552d2a0b6ca0a34b380e33457", "filename": "gcc/md.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89bcce1b025dc9dcc9930d734398206402c2016a/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89bcce1b025dc9dcc9930d734398206402c2016a/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=89bcce1b025dc9dcc9930d734398206402c2016a", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 1988, 89, 92, 93, 94, 96, 1998 Free Software Foundation, Inc.\n+@c Copyright (C) 1988, 89, 92, 93, 94, 96, 1998, 2000 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -2545,7 +2545,7 @@ nonlocal goto after the code already generated by GNU CC.  You will not\n normally need to define this pattern.  A typical reason why you might\n need this pattern is if some value, such as a pointer to a global table,\n must be restored when the frame pointer is restored.  Note that a nonlocal\n-goto only ocurrs within a unit-of-translation, so a global table pointer\n+goto only occurs within a unit-of-translation, so a global table pointer\n that is shared by all functions of a given module need not be restored.\n There are no arguments.\n "}, {"sha": "14365ce0c2427e9917f694a83de8e77eff4e024e", "filename": "gcc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89bcce1b025dc9dcc9930d734398206402c2016a/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89bcce1b025dc9dcc9930d734398206402c2016a/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=89bcce1b025dc9dcc9930d734398206402c2016a", "patch": "@@ -1097,7 +1097,7 @@ implementation by default.  The ``thunk'' implementation is more efficient\n (especially if you have provided an implementation of\n @code{ASM_OUTPUT_MI_THUNK}, see @ref{Function Entry}), but is not binary\n compatible with code compiled using the traditional implementation.  \n-If you are writing a new ports, define @code{DEFAULT_VTABLE_THUNKS} to 1.\n+If you are writing a new port, define @code{DEFAULT_VTABLE_THUNKS} to 1.\n \n If you do not define this macro, the default for @samp{-fvtable-thunk} is 0.\n @end table"}]}