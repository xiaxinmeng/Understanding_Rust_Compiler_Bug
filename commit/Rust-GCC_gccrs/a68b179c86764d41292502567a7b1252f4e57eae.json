{"sha": "a68b179c86764d41292502567a7b1252f4e57eae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY4YjE3OWM4Njc2NGQ0MTI5MjUwMjU2N2E3YjEyNTJmNGU1N2VhZQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2005-04-29T18:39:22Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2005-04-29T18:39:22Z"}, "message": "re PR rtl-optimization/21144 (Apparent infinite loop in reload)\n\n        PR rtl-optimization/21144\n        * postreload.c (reload_cse_move2add): Check for VOIDmode.\n\nFrom-SVN: r99008", "tree": {"sha": "2a59c00753664184fec11cb5161c9e72f3e52ca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a59c00753664184fec11cb5161c9e72f3e52ca4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a68b179c86764d41292502567a7b1252f4e57eae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68b179c86764d41292502567a7b1252f4e57eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a68b179c86764d41292502567a7b1252f4e57eae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68b179c86764d41292502567a7b1252f4e57eae/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3dc41fe8e21d79b5338eca6fa50e894b6a4db14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3dc41fe8e21d79b5338eca6fa50e894b6a4db14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3dc41fe8e21d79b5338eca6fa50e894b6a4db14"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "b95a20a1be16b21116e8bd4258dfa5540d4739d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68b179c86764d41292502567a7b1252f4e57eae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68b179c86764d41292502567a7b1252f4e57eae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a68b179c86764d41292502567a7b1252f4e57eae", "patch": "@@ -1,3 +1,8 @@\n+2005-04-29  Michael Matz  <matz@suse.de>\n+\n+\tPR rtl-optimization/21144\n+\t* postreload.c (reload_cse_move2add): Check for VOIDmode.\n+\n 2005-04-29  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.h (OPTIMIZATION_OPTIONS): Define to disable"}, {"sha": "3d9b24bd113a15d3314c97c1ce0f9ec9153ad01a", "filename": "gcc/postreload.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68b179c86764d41292502567a7b1252f4e57eae/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68b179c86764d41292502567a7b1252f4e57eae/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=a68b179c86764d41292502567a7b1252f4e57eae", "patch": "@@ -1269,7 +1269,8 @@ reload_cse_move2add (rtx first)\n \t\t    {\n \t\t      enum machine_mode narrow_mode;\n \t\t      for (narrow_mode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n-\t\t\t   narrow_mode != GET_MODE (reg);\n+\t\t\t   narrow_mode != VOIDmode\n+\t\t\t   && narrow_mode != GET_MODE (reg);\n \t\t\t   narrow_mode = GET_MODE_WIDER_MODE (narrow_mode))\n \t\t\t{\n \t\t\t  if (have_insn_for (STRICT_LOW_PART, narrow_mode)"}]}