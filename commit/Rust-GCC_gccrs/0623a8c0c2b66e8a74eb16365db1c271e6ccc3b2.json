{"sha": "0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyM2E4YzBjMmI2NmU4YTc0ZWIxNjM2NWRiMWMyNzFlNmNjYzNiMg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-04-24T21:28:36Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-04-24T21:28:36Z"}, "message": "* java/lang/natClass.cc (_Jv_getInterfaceMethod): Skip <clinit>.\n\nFrom-SVN: r113229", "tree": {"sha": "b428bcb705f8cde0041de4120ed15be9c6571606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b428bcb705f8cde0041de4120ed15be9c6571606"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2/comments", "author": null, "committer": null, "parents": [{"sha": "9fff64328d6e03611eb18cae23704cebf32d2c40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fff64328d6e03611eb18cae23704cebf32d2c40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fff64328d6e03611eb18cae23704cebf32d2c40"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "b832f796fed084510335d3c3e75c7fd2cf788dcc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2", "patch": "@@ -1,3 +1,7 @@\n+2006-04-24  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/natClass.cc (_Jv_getInterfaceMethod): Skip <clinit>.\n+\n 2006-04-21  Andrew Haley  <aph@redhat.com>\n \n \t* include/execution.h (struct _Jv_CompiledEngine): Define for"}, {"sha": "d88835019f430fca4fcd044f7d01b40e7cb92a28", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=0623a8c0c2b66e8a74eb16365db1c271e6ccc3b2", "patch": "@@ -1182,9 +1182,14 @@ _Jv_getInterfaceMethod (jclass search_class, jclass &found_class, int &index,\n       if (!klass->isInterface ())\n \treturn false;\n       \n-      int i = klass->method_count;\n-      while (--i >= 0)\n+      int max = klass->method_count;\n+      int offset = 0;\n+      for (int i = 0; i < max; ++i)\n \t{\n+\t  // Skip <clinit> here, as it will not be in the IDT.\n+\t  if (klass->methods[i].name->first() == '<')\n+\t    continue;\n+\n \t  if (_Jv_equalUtf8Consts (klass->methods[i].name, utf_name)\n \t      && _Jv_equalUtf8Consts (klass->methods[i].signature, utf_sig))\n \t    {\n@@ -1197,9 +1202,11 @@ _Jv_getInterfaceMethod (jclass search_class, jclass &found_class, int &index,\n \n \t      found_class = klass;\n \t      // Interface method indexes count from 1.\n-\t      index = i+1;\n+\t      index = offset + 1;\n \t      return true;\n \t    }\n+\n+\t  ++offset;\n \t}\n     }\n \n@@ -1211,8 +1218,8 @@ _Jv_getInterfaceMethod (jclass search_class, jclass &found_class, int &index,\n \t{\n \t  using namespace java::lang::reflect;\n \t  bool found = _Jv_getInterfaceMethod (search_class->interfaces[i], \n-\t\t\t\t\t   found_class, index,\n-\t\t\t\t\t   utf_name, utf_sig);\n+\t\t\t\t\t       found_class, index,\n+\t\t\t\t\t       utf_name, utf_sig);\n \t  if (found)\n \t    return true;\n \t}"}]}