{"sha": "ccb83cbced4e6f83ae973d214075de743da4bed3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiODNjYmNlZDRlNmY4M2FlOTczZDIxNDA3NWRlNzQzZGE0YmVkMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-06-11T16:27:26Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-06-11T16:27:26Z"}, "message": "osf5.h (TARGET_LD_BUGGY_LDGP): New.\n\n        * config/alpha/osf5.h (TARGET_LD_BUGGY_LDGP): New.\n        * config/alpha/alpha.h (TARGET_LD_BUGGY_LDGP): Default.\n        (struct machine_function): Add gp_save_rtx.\n        * config/alpha/alpha.c (alpha_mark_machine_status): Mark it.\n        (alpha_gp_save_rtx): New.\n        * config/alpha/alpha-protos.h: Declare it.\n        * config/alpha/alpha.md (exception_receiver): Make an expander.\n        Use alpha_gp_save_rtx if TARGET_LD_BUGGY_LDGP.\n\nFrom-SVN: r43196", "tree": {"sha": "90a3ac1b11fbae1eab80955a548f873066e130db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90a3ac1b11fbae1eab80955a548f873066e130db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccb83cbced4e6f83ae973d214075de743da4bed3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb83cbced4e6f83ae973d214075de743da4bed3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccb83cbced4e6f83ae973d214075de743da4bed3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb83cbced4e6f83ae973d214075de743da4bed3/comments", "author": null, "committer": null, "parents": [{"sha": "f90e86cd003cdc54584fdeb5cef84af0e12634cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f90e86cd003cdc54584fdeb5cef84af0e12634cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f90e86cd003cdc54584fdeb5cef84af0e12634cb"}], "stats": {"total": 77, "additions": 74, "deletions": 3}, "files": [{"sha": "6d8b7abcfd1db23bb78a74842e4b46e586d8257c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccb83cbced4e6f83ae973d214075de743da4bed3", "patch": "@@ -1,3 +1,14 @@\n+2001-06-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/osf5.h (TARGET_LD_BUGGY_LDGP): New.\n+\t* config/alpha/alpha.h (TARGET_LD_BUGGY_LDGP): Default.\n+\t(struct machine_function): Add gp_save_rtx.\n+\t* config/alpha/alpha.c (alpha_mark_machine_status): Mark it.\n+\t(alpha_gp_save_rtx): New.\n+\t* config/alpha/alpha-protos.h: Declare it.\n+\t* config/alpha/alpha.md (exception_receiver): Make an expander.\n+\tUse alpha_gp_save_rtx if TARGET_LD_BUGGY_LDGP.\n+\n 2001-06-11  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/osf.h (LINK_SPEC): Hide _GLOBAL_* symbols.\n@@ -42,7 +53,7 @@ Mon Jun 11 15:47:45 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-06-11  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * loop.c (scan_loop): Do not combine asm statements.\n+\t* loop.c (scan_loop): Do not combine asm statements.\n \n 2001-06-11  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n "}, {"sha": "06ecfa3848bdf7267f2184a05a6583ca2d3419fa", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=ccb83cbced4e6f83ae973d214075de743da4bed3", "patch": "@@ -100,6 +100,7 @@ extern int alpha_expand_block_move PARAMS ((rtx []));\n extern int alpha_expand_block_clear PARAMS ((rtx []));\n extern int alpha_adjust_cost PARAMS ((rtx, rtx, rtx, int));\n extern rtx alpha_return_addr PARAMS ((int, rtx));\n+extern rtx alpha_gp_save_rtx PARAMS ((void));\n extern void print_operand PARAMS ((FILE *, rtx, int));\n extern void print_operand_address PARAMS ((FILE *, rtx));\n extern void alpha_initialize_trampoline PARAMS ((rtx, rtx, rtx, int, int, int));"}, {"sha": "3e3de7017bbb1477806a81b4627154636194d993", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=ccb83cbced4e6f83ae973d214075de743da4bed3", "patch": "@@ -3678,6 +3678,7 @@ alpha_mark_machine_status (p)\n   if (machine)\n     {\n       ggc_mark_rtx (machine->ra_rtx);\n+      ggc_mark_rtx (machine->gp_save_rtx);\n     }\n }\n \n@@ -3719,6 +3720,29 @@ alpha_return_addr (count, frame)\n   return reg;\n }\n \n+/* Return or create a pseudo containing the gp value for the current\n+   function.  Needed only if TARGET_LD_BUGGY_LDGP.  */\n+\n+rtx\n+alpha_gp_save_rtx ()\n+{\n+  rtx init, reg;\n+\n+  reg = cfun->machine->gp_save_rtx;\n+  if (reg == NULL)\n+    {\n+      reg = gen_reg_rtx (DImode);\n+      cfun->machine->gp_save_rtx = reg;\n+      init = gen_rtx_SET (VOIDmode, reg, gen_rtx_REG (DImode, 29));\n+\n+      push_topmost_sequence ();\n+      emit_insn_after (init, get_insns ());\n+      pop_topmost_sequence ();\n+    }\n+\n+  return reg;\n+}\n+\n static int\n alpha_ra_ever_killed ()\n {"}, {"sha": "739a177cb0b697f01b342bbdcda36b7ee3222f07", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=ccb83cbced4e6f83ae973d214075de743da4bed3", "patch": "@@ -192,6 +192,9 @@ extern enum alpha_fp_trap_mode alpha_fptm;\n #ifndef TARGET_PROFILING_NEEDS_GP\n #define TARGET_PROFILING_NEEDS_GP 0\n #endif\n+#ifndef TARGET_LD_BUGGY_LDGP\n+#define TARGET_LD_BUGGY_LDGP 0\n+#endif\n \n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n@@ -1188,6 +1191,9 @@ struct machine_function\n {\n   /* If non-null, this rtx holds the return address for the function.  */\n   struct rtx_def *ra_rtx;\n+\n+  /* If non-null, this rtx holds a saved copy of the GP for the function.  */\n+  struct rtx_def *gp_save_rtx;\n };\n \n /* Make (or fake) .linkage entry for function call."}, {"sha": "cafee4453e7c94312f28c9c1aae51a63dc89db87", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=ccb83cbced4e6f83ae973d214075de743da4bed3", "patch": "@@ -5959,13 +5959,36 @@\n   [(set_attr \"length\" \"12\")\n    (set_attr \"type\" \"multi\")])\n \n-(define_insn \"exception_receiver\"\n-  [(unspec_volatile [(const_int 0)] 7)]\n+(define_expand \"exception_receiver\"\n+  [(unspec_volatile [(match_dup 0)] 7)]\n   \"! TARGET_OPEN_VMS && ! TARGET_WINDOWS_NT\"\n+  \"\n+{\n+  if (TARGET_LD_BUGGY_LDGP)\n+    operands[0] = alpha_gp_save_rtx ();\n+  else\n+    operands[0] = const0_rtx;\n+}\")\n+\n+(define_insn \"*exception_receiver_1\"\n+  [(unspec_volatile [(const_int 0)] 7)]\n+  \"! TARGET_LD_BUGGY_LDGP\"\n   \"ldgp $29,0($26)\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"type\" \"multi\")])\n \n+;; ??? We don't represent the usage of $29 properly in address loads\n+;; and function calls.  This leads to the following move being deleted\n+;; as dead code unless it is represented as a volatile unspec.\n+\n+(define_insn \"*exception_receiver_2\"\n+  [(unspec_volatile [(match_operand:DI 0 \"nonimmediate_operand\" \"r,m\")] 7)]\n+  \"TARGET_LD_BUGGY_LDGP\"\n+  \"@\n+   mov %0,$29\n+   ldq $29,%0\"\n+  [(set_attr \"type\" \"ilog,ild\")])\n+\n (define_expand \"nonlocal_goto_receiver\"\n   [(unspec_volatile [(const_int 0)] 1)\n    (set (reg:DI 27) (mem:DI (reg:DI 29)))"}, {"sha": "9599d764bd14267ed7e7970834f7de2c5eaf96c3", "filename": "gcc/config/alpha/osf5.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Fosf5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb83cbced4e6f83ae973d214075de743da4bed3/gcc%2Fconfig%2Falpha%2Fosf5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf5.h?ref=ccb83cbced4e6f83ae973d214075de743da4bed3", "patch": "@@ -46,3 +46,9 @@\n \n #undef ASM_OLDAS_SPEC\n #define ASM_OLDAS_SPEC \"-oldas -c\"\n+\n+/* The linker appears to perform invalid code optimizations that result\n+   in the ldgp emitted for the exception_receiver pattern being incorrctly\n+   linked.  */\n+#undef TARGET_LD_BUGGY_LDGP\n+#define TARGET_LD_BUGGY_LDGP 1"}]}