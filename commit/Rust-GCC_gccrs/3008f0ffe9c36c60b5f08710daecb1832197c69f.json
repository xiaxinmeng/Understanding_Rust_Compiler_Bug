{"sha": "3008f0ffe9c36c60b5f08710daecb1832197c69f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAwOGYwZmZlOWMzNmM2MGI1ZjA4NzEwZGFlY2IxODMyMTk3YzY5Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-31T18:35:58Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-31T18:35:58Z"}, "message": "compiler: lower expression types in lowering pass\n    \n    Ensure that array types with complicated length expressions are\n    handled correctly by lowering expression types in the lowering pass.\n    \n    This required some adjustment of constant expression types to not\n    report too many errors for circular constant expressions.  We now\n    record error types in the Named_constant type.  If we find the\n    circularity due to lowering the Named_constant, we use that location\n    for the error message; this retains the error location we used to use.\n    \n    Fixes golang/go#23545\n    \n    Reviewed-on: https://go-review.googlesource.com/91035\n\nFrom-SVN: r257250", "tree": {"sha": "e072e4b47427a16a75f2c2ade64df7464c0bacff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e072e4b47427a16a75f2c2ade64df7464c0bacff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3008f0ffe9c36c60b5f08710daecb1832197c69f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3008f0ffe9c36c60b5f08710daecb1832197c69f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3008f0ffe9c36c60b5f08710daecb1832197c69f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3008f0ffe9c36c60b5f08710daecb1832197c69f/comments", "author": null, "committer": null, "parents": [{"sha": "9734500e9b7e9303e1d8bd4785cca4a82d9656af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9734500e9b7e9303e1d8bd4785cca4a82d9656af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9734500e9b7e9303e1d8bd4785cca4a82d9656af"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "c115b2e4f96cbb70d836731cee20c7ba98d4dd53", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3008f0ffe9c36c60b5f08710daecb1832197c69f/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3008f0ffe9c36c60b5f08710daecb1832197c69f/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=3008f0ffe9c36c60b5f08710daecb1832197c69f", "patch": "@@ -1,4 +1,4 @@\n-17325c96ccbee4ad6bed1cd3d9517f7dfbdf3ea7\n+65eaa9003db4effc9c5ffe9c955e9534ba5d7d15\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "c90ef8de79578ae683fead9cd643ca76e7060cab", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3008f0ffe9c36c60b5f08710daecb1832197c69f/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3008f0ffe9c36c60b5f08710daecb1832197c69f/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=3008f0ffe9c36c60b5f08710daecb1832197c69f", "patch": "@@ -2847,8 +2847,16 @@ Const_expression::do_type()\n \n   if (this->seen_ || nc->lowering())\n     {\n-      this->report_error(_(\"constant refers to itself\"));\n+      if (nc->type() == NULL || !nc->type()->is_error_type())\n+\t{\n+\t  Location loc = this->location();\n+\t  if (!this->seen_)\n+\t    loc = nc->location();\n+\t  go_error_at(loc, \"constant refers to itself\");\n+\t}\n+      this->set_is_error();\n       this->type_ = Type::make_error_type();\n+      nc->set_type(this->type_);\n       return this->type_;\n     }\n \n@@ -2868,6 +2876,9 @@ Const_expression::do_type()\n \n   this->seen_ = false;\n \n+  if (ret->is_error_type())\n+    nc->set_type(ret);\n+\n   return ret;\n }\n "}, {"sha": "3f784dd80dc82a697cbbdf262c27d78950a5b2ea", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3008f0ffe9c36c60b5f08710daecb1832197c69f/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3008f0ffe9c36c60b5f08710daecb1832197c69f/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=3008f0ffe9c36c60b5f08710daecb1832197c69f", "patch": "@@ -2751,6 +2751,14 @@ Lower_parse_tree::expression(Expression** pexpr)\n \treturn TRAVERSE_EXIT;\n       *pexpr = enew;\n     }\n+\n+  // Lower the type of this expression before the parent looks at it,\n+  // in case the type contains an array that has expressions in its\n+  // length.  Skip an Unknown_expression, as at this point that means\n+  // a composite literal key that does not have a type.\n+  if ((*pexpr)->unknown_expression() == NULL)\n+    Type::traverse((*pexpr)->type(), this);\n+\n   return TRAVERSE_SKIP_COMPONENTS;\n }\n \n@@ -6855,6 +6863,16 @@ Result_variable::get_backend_variable(Gogo* gogo, Named_object* function,\n \n // Class Named_constant.\n \n+// Set the type of a named constant.  This is only used to set the\n+// type to an error type.\n+\n+void\n+Named_constant::set_type(Type* t)\n+{\n+  go_assert(this->type_ == NULL || t->is_error_type());\n+  this->type_ = t;\n+}\n+\n // Traverse the initializer expression.\n \n int"}, {"sha": "dfff5c170c974cabe0defa5caf47f6292a472875", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3008f0ffe9c36c60b5f08710daecb1832197c69f/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3008f0ffe9c36c60b5f08710daecb1832197c69f/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=3008f0ffe9c36c60b5f08710daecb1832197c69f", "patch": "@@ -2147,6 +2147,9 @@ class Named_constant\n   type() const\n   { return this->type_; }\n \n+  void\n+  set_type(Type* t);\n+\n   Expression*\n   expr() const\n   { return this->expr_; }"}]}