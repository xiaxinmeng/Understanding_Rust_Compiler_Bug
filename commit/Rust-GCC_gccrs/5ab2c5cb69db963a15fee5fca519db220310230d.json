{"sha": "5ab2c5cb69db963a15fee5fca519db220310230d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFiMmM1Y2I2OWRiOTYzYTE1ZmVlNWZjYTUxOWRiMjIwMzEwMjMwZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-10-22T16:12:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-10-22T16:12:57Z"}, "message": "re PR target/46098 (ICE: in extract_insn, at recog.c:2100 with -msse3 -ffloat-store and __builtin_ia32_loadupd())\n\n\tPR target/46098\n\t* config/i386/sse.md (*avx_movu<ssemodesuffix><avxmodesuffix>):\n\tRename from avx_movu<ssemodesuffix><avxmodesuffix>.\n\t(avx_movu<ssemodesuffix><avxmodesuffix>): New expander.\n\t(*<sse>_movu<ssemodesuffix>): Rename from <sse>_movu<ssemodesuffix>.\n\t(<sse>_movu<ssemodesuffix>): New expander.\n\t(*avx_movdqu<avxmodesuffix>): Rename from avx_movdqu<avxmodesuffix>.\n\t(avx_movdqu<avxmodesuffix>): New expander.\n\t(*sse2_movdqu): Rename from sse2_movdqu.\n\t(sse2_movdqu): New expander.\n\ntestsuite/ChangeLog:\n\n\tPR target/46098\n\t* gcc.target/i386/pr46098.c: New test.\n\nFrom-SVN: r165845", "tree": {"sha": "21bd8d1669024e370f4ab90cdaf81b0b4203f8d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21bd8d1669024e370f4ab90cdaf81b0b4203f8d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ab2c5cb69db963a15fee5fca519db220310230d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab2c5cb69db963a15fee5fca519db220310230d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ab2c5cb69db963a15fee5fca519db220310230d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab2c5cb69db963a15fee5fca519db220310230d/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e8859d2addc905a7df2bc0e2193a4ea84500bcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8859d2addc905a7df2bc0e2193a4ea84500bcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e8859d2addc905a7df2bc0e2193a4ea84500bcd"}], "stats": {"total": 94, "additions": 82, "deletions": 12}, "files": [{"sha": "f249e412636ba49ff9b2efbc2c74d27fb37a932f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab2c5cb69db963a15fee5fca519db220310230d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab2c5cb69db963a15fee5fca519db220310230d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ab2c5cb69db963a15fee5fca519db220310230d", "patch": "@@ -1,3 +1,16 @@\n+2010-10-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46098\n+\t* config/i386/sse.md (*avx_movu<ssemodesuffix><avxmodesuffix>):\n+\tRename from avx_movu<ssemodesuffix><avxmodesuffix>.\n+\t(avx_movu<ssemodesuffix><avxmodesuffix>): New expander.\n+\t(*<sse>_movu<ssemodesuffix>): Rename from <sse>_movu<ssemodesuffix>.\n+\t(<sse>_movu<ssemodesuffix>): New expander.\n+\t(*avx_movdqu<avxmodesuffix>): Rename from avx_movdqu<avxmodesuffix>.\n+\t(avx_movdqu<avxmodesuffix>): New expander.\n+\t(*sse2_movdqu): Rename from sse2_movdqu.\n+\t(sse2_movdqu): New expander.\n+\n 2010-10-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45720\n@@ -175,7 +188,7 @@\n 2010-10-21  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tBased on the CFString implementation in FSF apple/trunk branch.\n-\t\n+\n \t* target.def (objc_construct_string): New Hook.\n \t* doc/tm.texi (objc_construct_string): Document.\n \t* doc/tm.texi.in (TARGET_OBJC_CONSTRUCT_STRING): New.\n@@ -192,7 +205,7 @@\n \t(darwin_cfstring_p): Likewise.\n \t(darwin_enter_string_into_cfstring_table): Likewise.\n \t* config/rs6000/darwin.h (SUBTARGET_INIT_BUILTINS) Update for CFString.\n-\t* config/darwin.c (darwin_running_cxx): New var. \n+\t* config/darwin.c (darwin_running_cxx): New var.\n \t(machopic_select_section): Return cfstring_constant_object_section.\n \t(darwin_override_options): Set darwin_running_cxx.\n \t(add_builtin_field_decl): New."}, {"sha": "362659adca1ba867f87c7b3e5077eaf7a13782c0", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 47, "deletions": 4, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab2c5cb69db963a15fee5fca519db220310230d/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab2c5cb69db963a15fee5fca519db220310230d/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=5ab2c5cb69db963a15fee5fca519db220310230d", "patch": "@@ -382,7 +382,18 @@\n   DONE;\n })\n \n-(define_insn \"avx_movu<ssemodesuffix><avxmodesuffix>\"\n+(define_expand \"avx_movu<ssemodesuffix><avxmodesuffix>\"\n+  [(set (match_operand:AVXMODEF2P 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:AVXMODEF2P\n+\t  [(match_operand:AVXMODEF2P 1 \"nonimmediate_operand\" \"\")]\n+\t  UNSPEC_MOVU))]\n+  \"AVX_VEC_FLOAT_MODE_P (<MODE>mode)\"\n+{\n+  if (MEM_P (operands[0]) && MEM_P (operands[1]))\n+    operands[1] = force_reg (<MODE>mode, operands[1]);\n+})\n+\n+(define_insn \"*avx_movu<ssemodesuffix><avxmodesuffix>\"\n   [(set (match_operand:AVXMODEF2P 0 \"nonimmediate_operand\" \"=x,m\")\n \t(unspec:AVXMODEF2P\n \t  [(match_operand:AVXMODEF2P 1 \"nonimmediate_operand\" \"xm,x\")]\n@@ -408,7 +419,18 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"<sse>_movu<ssemodesuffix>\"\n+(define_expand \"<sse>_movu<ssemodesuffix>\"\n+  [(set (match_operand:SSEMODEF2P 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:SSEMODEF2P\n+\t  [(match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"\")]\n+\t  UNSPEC_MOVU))]\n+  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n+{\n+  if (MEM_P (operands[0]) && MEM_P (operands[1]))\n+    operands[1] = force_reg (<MODE>mode, operands[1]);\n+})\n+\n+(define_insn \"*<sse>_movu<ssemodesuffix>\"\n   [(set (match_operand:SSEMODEF2P 0 \"nonimmediate_operand\" \"=x,m\")\n \t(unspec:SSEMODEF2P\n \t  [(match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"xm,x\")]\n@@ -420,7 +442,18 @@\n    (set_attr \"movu\" \"1\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"avx_movdqu<avxmodesuffix>\"\n+(define_expand \"avx_movdqu<avxmodesuffix>\"\n+  [(set (match_operand:AVXMODEQI 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:AVXMODEQI\n+\t  [(match_operand:AVXMODEQI 1 \"nonimmediate_operand\" \"\")]\n+\t  UNSPEC_MOVU))]\n+  \"TARGET_AVX\"\n+{\n+  if (MEM_P (operands[0]) && MEM_P (operands[1]))\n+    operands[1] = force_reg (<MODE>mode, operands[1]);\n+})\n+\n+(define_insn \"*avx_movdqu<avxmodesuffix>\"\n   [(set (match_operand:AVXMODEQI 0 \"nonimmediate_operand\" \"=x,m\")\n \t(unspec:AVXMODEQI\n \t  [(match_operand:AVXMODEQI 1 \"nonimmediate_operand\" \"xm,x\")]\n@@ -432,7 +465,17 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<avxvecmode>\")])\n \n-(define_insn \"sse2_movdqu\"\n+(define_expand \"sse2_movdqu\"\n+  [(set (match_operand:V16QI 0 \"nonimmediate_operand\" \"\")\n+\t(unspec:V16QI [(match_operand:V16QI 1 \"nonimmediate_operand\" \"\")]\n+\t\t      UNSPEC_MOVU))]\n+  \"TARGET_SSE2\"\n+{\n+  if (MEM_P (operands[0]) && MEM_P (operands[1]))\n+    operands[1] = force_reg (V16QImode, operands[1]);\n+})\n+\n+(define_insn \"*sse2_movdqu\"\n   [(set (match_operand:V16QI 0 \"nonimmediate_operand\" \"=x,m\")\n \t(unspec:V16QI [(match_operand:V16QI 1 \"nonimmediate_operand\" \"xm,x\")]\n \t\t      UNSPEC_MOVU))]"}, {"sha": "96e42b8b5c3abb2f64545465fe13dd519623082e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab2c5cb69db963a15fee5fca519db220310230d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab2c5cb69db963a15fee5fca519db220310230d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ab2c5cb69db963a15fee5fca519db220310230d", "patch": "@@ -1,3 +1,8 @@\n+2010-10-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46098\n+\t* gcc.target/i386/pr46098.c: New test.\n+\n 2010-10-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45720\n@@ -11,7 +16,7 @@\n 2010-10-21  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tBased on the CFString implementation in FSF apple/trunk branch.\n-\t\n+\n \t* lib/objc-dg.exp (objc-dg-runtest): Merge flags and additional flags\n \tso that the latter can be used in dg-skip and dg-xfail clauses.\n \t* lib/obj-c++-dg.exp (obj-c++-dg-runtest): Likewise.\n@@ -39,17 +44,17 @@\n \t* obj-c++.dg/torture/strings/const-cfstring-1.mm: New.\n \t* obj-c++.dg/torture/strings/const-cfstring-3.mm: New.\n \t* obj-c++.dg/torture/strings/const-cfstring-4.mm: New.\n-\t\n-\t* objc/execute/string1.m: Don't use CFStrings on Darwin. Update test\n-\tto use dg-additional-files for Object1, move to objc.dg/torture/strings/.\n+\n+\t* objc/execute/string1.m: Don't use CFStrings on Darwin. Update test to\n+\tuse dg-additional-files for Object1, move to objc.dg/torture/strings/.\n \t* objc/execute/string2.m: Likewise.\n \t* objc/execute/string3.m: Likewise.\n \t* objc/execute/string3.m: Likewise.\n \t* objc.dg/foreach-2.m: Don't use CFStrings on Darwin.\n \t* objc.dg/foreach-4.m: Likewise.\n \t* objc.dg/foreach-5.m: Likewise.\n-\t* objc.dg/const-str-3.m: Don't use CFStrings on Darwin. Update test\n-\tto use dg-additional-files for Object1, move to objc.dg/torture/strings/.\n+\t* objc.dg/const-str-3.m: Don't use CFStrings on Darwin. Update test to\n+\tuse dg-additional-files for Object1, move to objc.dg/torture/strings/.\n \t* objc.dg/const-str-4.m: Likewise.\n \t* objc.dg/const-str-7.m: Likewise.\n \t* objc.dg/const-str-8.m: Likewise."}, {"sha": "4cc07c25524d2c0eaa72a08de61934c9d35c07ce", "filename": "gcc/testsuite/gcc.target/i386/pr46098.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab2c5cb69db963a15fee5fca519db220310230d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46098.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab2c5cb69db963a15fee5fca519db220310230d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46098.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46098.c?ref=5ab2c5cb69db963a15fee5fca519db220310230d", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-msse2 -ffloat-store\" } */\n+\n+typedef double v2df __attribute__((vector_size (16)));\n+\n+v2df foo (double *d)\n+{\n+  return __builtin_ia32_loadupd (d);\n+}"}]}