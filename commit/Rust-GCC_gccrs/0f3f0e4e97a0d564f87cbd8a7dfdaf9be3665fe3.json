{"sha": "0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYzZjBlNGU5N2EwZDU2NGY4N2NiZDhhN2RmZGFmOWJlMzY2NWZlMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-31T23:52:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-31T23:52:01Z"}, "message": "re PR rtl-optimization/83608 (ICE in convert_move, at expr.c:229 in GIMPLE store merging pass)\n\n\tPR middle-end/83608\n\t* expr.c (store_expr_with_bounds): Use simplify_gen_subreg instead of\n\tconvert_modes if target mode has the right side, but different mode\n\tclass.\n\n\t* g++.dg/opt/pr83608.C: New test.\n\nFrom-SVN: r256053", "tree": {"sha": "dbf0da98cfbbbcc90510cf65785816fef4763aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbf0da98cfbbbcc90510cf65785816fef4763aaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1329fc84c8f7ee892070cb4aa514c4dbab70625", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1329fc84c8f7ee892070cb4aa514c4dbab70625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1329fc84c8f7ee892070cb4aa514c4dbab70625"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "a0c9bf86bb5c9b8f66d363c896dcf370268c1846", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "patch": "@@ -1,5 +1,10 @@\n 2018-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/83608\n+\t* expr.c (store_expr_with_bounds): Use simplify_gen_subreg instead of\n+\tconvert_modes if target mode has the right side, but different mode\n+\tclass.\n+\n \tPR middle-end/83609\n \t* expr.c (expand_assignment): Fix up a typo in simplify_gen_subreg\n \tlast argument when extracting from CONCAT.  If either from_real or"}, {"sha": "bae853c00ccfc679cb5feac462739323b3c243f4", "filename": "gcc/expr.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "patch": "@@ -5638,8 +5638,21 @@ store_expr_with_bounds (tree exp, rtx target, int call_param_p,\n   if (CONSTANT_P (temp) && GET_MODE (temp) == VOIDmode\n       && TREE_CODE (exp) != ERROR_MARK\n       && GET_MODE (target) != TYPE_MODE (TREE_TYPE (exp)))\n-    temp = convert_modes (GET_MODE (target), TYPE_MODE (TREE_TYPE (exp)),\n-\t\t\t  temp, TYPE_UNSIGNED (TREE_TYPE (exp)));\n+    {\n+      if (GET_MODE_CLASS (GET_MODE (target))\n+\t  != GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (exp)))\n+\t  && GET_MODE_BITSIZE (GET_MODE (target))\n+\t     == GET_MODE_BITSIZE (TYPE_MODE (TREE_TYPE (exp))))\n+\t{\n+\t  rtx t = simplify_gen_subreg (GET_MODE (target), temp,\n+\t\t\t\t       TYPE_MODE (TREE_TYPE (exp)), 0);\n+\t  if (t)\n+\t    temp = t;\n+\t}\n+      if (GET_MODE (temp) == VOIDmode)\n+\ttemp = convert_modes (GET_MODE (target), TYPE_MODE (TREE_TYPE (exp)),\n+\t\t\t      temp, TYPE_UNSIGNED (TREE_TYPE (exp)));\n+    }\n \n   /* If value was not generated in the target, store it there.\n      Convert the value to TARGET's type first if necessary and emit the"}, {"sha": "8b5c062e1f0687b14eb148648cebe99ea8f867a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "patch": "@@ -1,5 +1,8 @@\n 2018-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/83608\n+\t* g++.dg/opt/pr83608.C: New test.\n+\n \tPR middle-end/83609\n \t* gcc.dg/pr83609.c: New test.\n \t* g++.dg/opt/pr83609.C: New test."}, {"sha": "555e5877e75022951394aec42cd491b4f3aeb18a", "filename": "gcc/testsuite/g++.dg/opt/pr83608.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr83608.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr83608.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr83608.C?ref=0f3f0e4e97a0d564f87cbd8a7dfdaf9be3665fe3", "patch": "@@ -0,0 +1,28 @@\n+// PR middle-end/83608\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+template <typename> class B;\n+template <> struct B<float>\n+{\n+  float foo () { return __real__ b; }\n+  _Complex double b;\n+};\n+\n+void bar (int);\n+\n+template <class T>\n+void\n+baz ()\n+{\n+  B<T> h;\n+  T *a = (T *) &h;\n+  a[0] = a[1] = 6;\n+  h.foo () ? void () : bar (7);\n+}\n+\n+int\n+main ()\n+{\n+  baz<float> ();\n+}"}]}