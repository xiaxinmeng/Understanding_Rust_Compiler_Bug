{"sha": "95842021896e8c231cb23d0073c8a08dfe898744", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU4NDIwMjE4OTZlOGMyMzFjYjIzZDAwNzNjOGEwOGRmZTg5ODc0NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-10-12T21:04:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-12T21:04:26Z"}, "message": "visium.c (visium_gimplify_va_arg): Emit a big-endian correction if the type is smaller than a word.\n\n\t* config/visium/visium.c (visium_gimplify_va_arg): Emit a big-endian\n\tcorrection if the type is smaller than a word.\n\t(visium_select_cc_mode): Add ... fall through ... comment.\n\nFrom-SVN: r241076", "tree": {"sha": "9e6f73e8e391c61cc09a2fc20e71b86e9f96287f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e6f73e8e391c61cc09a2fc20e71b86e9f96287f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95842021896e8c231cb23d0073c8a08dfe898744", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95842021896e8c231cb23d0073c8a08dfe898744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95842021896e8c231cb23d0073c8a08dfe898744", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95842021896e8c231cb23d0073c8a08dfe898744/comments", "author": null, "committer": null, "parents": [{"sha": "1ad16c52842e0513b96a0e02d2a431dc0f338c5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ad16c52842e0513b96a0e02d2a431dc0f338c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ad16c52842e0513b96a0e02d2a431dc0f338c5d"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "12a324cc1f341eaa58fb7e7522f191f5577b83aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95842021896e8c231cb23d0073c8a08dfe898744/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95842021896e8c231cb23d0073c8a08dfe898744/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95842021896e8c231cb23d0073c8a08dfe898744", "patch": "@@ -1,3 +1,9 @@\n+2016-10-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/visium/visium.c (visium_gimplify_va_arg): Emit a big-endian\n+\tcorrection if the type is smaller than a word.\n+\t(visium_select_cc_mode): Add ... fall through ... comment.\n+\n 2016-10-12  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (machine_function): Add new fields"}, {"sha": "a0035c6bd1e0d8060e349383ac3cd0fb9bf610c3", "filename": "gcc/config/visium/visium.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95842021896e8c231cb23d0073c8a08dfe898744/gcc%2Fconfig%2Fvisium%2Fvisium.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95842021896e8c231cb23d0073c8a08dfe898744/gcc%2Fconfig%2Fvisium%2Fvisium.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvisium%2Fvisium.c?ref=95842021896e8c231cb23d0073c8a08dfe898744", "patch": "@@ -1626,8 +1626,8 @@ visium_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n      7:   {\n      8:     bytes = 0;\n      9:     addr_rtx = ovfl;\n-     10:     ovfl += rsize;\n-     11:   }\n+     10:    ovfl += rsize;\n+     11:  }\n \n    */\n \n@@ -1691,6 +1691,16 @@ visium_gimplify_va_arg (tree valist, tree type, gimple_seq *pre_p,\n   gimplify_and_add (t, pre_p);\n   t = build1 (LABEL_EXPR, void_type_node, lab_over);\n   gimplify_and_add (t, pre_p);\n+\n+  /* Emit a big-endian correction if size < UNITS_PER_WORD.  */\n+  if (size < UNITS_PER_WORD)\n+    {\n+      t = build2 (POINTER_PLUS_EXPR, TREE_TYPE (addr), addr,\n+\t\t  size_int (UNITS_PER_WORD - size));\n+      t = build2 (MODIFY_EXPR, void_type_node, addr, t);\n+      gimplify_and_add (t, pre_p);\n+    }\n+\n   addr = fold_convert (ptrtype, addr);\n \n   return build_va_arg_indirect_ref (addr);\n@@ -2848,6 +2858,9 @@ visium_select_cc_mode (enum rtx_code code, rtx op0, rtx op1)\n     case CONST_INT:\n       /* This is a degenerate case, typically an uninitialized variable.  */\n       gcc_assert (op0 == constm1_rtx);\n+\n+      /* ... fall through ... */\n+\n     case REG:\n     case AND:\n     case IOR:"}]}