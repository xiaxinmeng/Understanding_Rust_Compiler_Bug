{"sha": "7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y3ZjgyMTRkODlhZTJiZGY4MWZlMDAxNjRkZDA0MjU5NjNjODRlNw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-10-25T12:56:39Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-10-25T12:56:39Z"}, "message": "Warning fixes:\n\n        * Makefile.in (recog.o): Depend on toplev.h.\n        (insn-emit.o): Depend on recog.h.\n        (insn-peep.o): Depend on recog.h and insn-config.h.\n        * combine.c (simplify_set): Remove unused variable `scratches'.\n        * final.c (final_scan_insn): Wrap declaration of variables `vlen'\n        and `idx' in macro conditional controlling their use.\n        * genemit.c (main): Make the generated output file include\n        recog.h.  Don't have it declare `insn_operand_constraint', since\n        we get it from recog.h.\n        * genpeep.c (main): Make the generated output file include\n        insn-config.h and recog.h.\n        * recog.c: Include toplev.h.\n        (extract_insn): Remove unused variable `p'.\n        * regclass.c (fix_register): Add missing braces around initializer\n        for `what_option'.\n        (allocate_reg_info): Move variable `i' into the scope where it is\n        used.  Change its type to `size_t'.\n\nFrom-SVN: r23307", "tree": {"sha": "405d41ea5dc676768af2042609fcb9a3b301d85d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/405d41ea5dc676768af2042609fcb9a3b301d85d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/comments", "author": null, "committer": null, "parents": [{"sha": "506b3b3ac9c3346cec94d15713ef8e8ae8221212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506b3b3ac9c3346cec94d15713ef8e8ae8221212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506b3b3ac9c3346cec94d15713ef8e8ae8221212"}], "stats": {"total": 57, "additions": 44, "deletions": 13}, "files": [{"sha": "b4e81f7172669b18a5e889952e12f1f6ee2c1989", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "patch": "@@ -1,3 +1,29 @@\n+Sun Oct 25 15:49:57 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (recog.o): Depend on toplev.h.\n+\t(insn-emit.o): Depend on recog.h.\n+\t(insn-peep.o): Depend on recog.h and insn-config.h.\n+\n+\t* combine.c (simplify_set): Remove unused variable `scratches'.\n+\n+\t* final.c (final_scan_insn): Wrap declaration of variables `vlen'\n+ \tand `idx' in macro conditional controlling their use.\n+\n+\t* genemit.c (main): Make the generated output file include\n+ \trecog.h.  Don't have it declare `insn_operand_constraint', since\n+ \twe get it from recog.h.\n+\n+\t* genpeep.c (main): Make the generated output file include\n+\tinsn-config.h and recog.h.\n+\n+\t* recog.c: Include toplev.h.\n+\t(extract_insn): Remove unused variable `p'.\n+\n+\t* regclass.c (fix_register): Add missing braces around initializer\n+\tfor `what_option'.\n+\t(allocate_reg_info): Move variable `i' into the scope where it is\n+\tused.  Change its type to `size_t'.\n+\n Sun Oct 25 13:10:15 1998  Bernd Schmidt <crux@pool.informatik.rwth-aachen.de>\n \n \t* reload.c (push_reload): When merging reloads, make sure"}, {"sha": "959374a56450347fe55a6948932cf2e7ca114357", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "patch": "@@ -1526,7 +1526,7 @@ final.o : final.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h $(REGS_H) \\\n    toplev.h reload.h dwarfout.h dwarf2out.h sdbout.h dbxout.h\n recog.o : recog.c $(CONFIG_H) system.h $(RTL_H)  \\\n    $(REGS_H) $(RECOG_H) hard-reg-set.h flags.h insn-config.h insn-attr.h \\\n-   insn-flags.h insn-codes.h real.h\n+   insn-flags.h insn-codes.h real.h toplev.h\n reg-stack.o : reg-stack.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) \\\n    $(REGS_H) hard-reg-set.h flags.h insn-config.h insn-flags.h toplev.h\n dyn-string.o: dyn-string.c dyn-string.h $(CONFIG_H) system.h gansidecl.h\n@@ -1605,7 +1605,7 @@ s-codes : $(md_file) gencodes $(srcdir)/move-if-change\n \ttouch s-codes\n \n insn-emit.o : insn-emit.c $(CONFIG_H) $(RTL_H) $(EXPR_H) real.h output.h \\\n-  insn-config.h insn-flags.h insn-codes.h system.h reload.h\n+  insn-config.h insn-flags.h insn-codes.h system.h reload.h recog.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-emit.c\n \n insn-emit.c: s-emit ; @true\n@@ -1644,7 +1644,8 @@ s-extract : $(md_file) genextract $(srcdir)/move-if-change\n \t$(srcdir)/move-if-change tmp-extract.c insn-extract.c\n \ttouch s-extract\n \n-insn-peep.o : insn-peep.c $(CONFIG_H) $(RTL_H) $(REGS_H) output.h real.h system.h\n+insn-peep.o : insn-peep.c $(CONFIG_H) $(RTL_H) $(REGS_H) output.h real.h \\\n+\tsystem.h insn-config.h recog.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-peep.c\n \n insn-peep.c: s-peep ; @true"}, {"sha": "88cc6c55e675dd09c11ac1d299d209141956b0dd", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "patch": "@@ -4632,7 +4632,6 @@ simplify_set (x)\n \t      && exact_log2 (mask = nonzero_bits (op0, GET_MODE (op0))) >= 0)\n \t    {\n \t      rtx pat = PATTERN (other_insn), note = 0;\n-\t      int scratches;\n \n \t      if ((recog_for_combine (&pat, other_insn, &note) < 0\n \t\t   && ! check_asm_operands (pat)))"}, {"sha": "5b7874e75876596a829c13cc029e013ec206dd47", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "patch": "@@ -2425,7 +2425,9 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \n \tif (GET_CODE (body) == ADDR_VEC || GET_CODE (body) == ADDR_DIFF_VEC)\n \t  {\n+#if !(defined(ASM_OUTPUT_ADDR_VEC) || defined(ASM_OUTPUT_ADDR_DIFF_VEC))\n \t    register int vlen, idx;\n+#endif\n \n \t    if (prescan > 0)\n \t      break;"}, {"sha": "d9281301b92af25719efafe60af9f77bcb229112", "filename": "gcc/genemit.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "patch": "@@ -771,11 +771,11 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"real.h\\\"\\n\");\n   printf (\"#include \\\"flags.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n-  printf (\"#include \\\"insn-config.h\\\"\\n\\n\");\n-  printf (\"#include \\\"insn-flags.h\\\"\\n\\n\");\n-  printf (\"#include \\\"insn-codes.h\\\"\\n\\n\");\n-  printf (\"#include \\\"reload.h\\\"\\n\");\n-  printf (\"extern char *insn_operand_constraint[][MAX_RECOG_OPERANDS];\\n\\n\");\n+  printf (\"#include \\\"insn-config.h\\\"\\n\");\n+  printf (\"#include \\\"insn-flags.h\\\"\\n\");\n+  printf (\"#include \\\"insn-codes.h\\\"\\n\");\n+  printf (\"#include \\\"recog.h\\\"\\n\");\n+  printf (\"#include \\\"reload.h\\\"\\n\\n\");\n   printf (\"extern rtx recog_operand[];\\n\");\n   printf (\"#define operands emit_operand\\n\\n\");\n   printf (\"#define FAIL return (end_sequence (), _val)\\n\");"}, {"sha": "1430b63665af5f1189c869d8a50b24bfb31829ac", "filename": "gcc/genpeep.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "patch": "@@ -467,10 +467,12 @@ from the machine description file `md'.  */\\n\\n\");\n \n   printf (\"#include \\\"config.h\\\"\\n\");\n   printf (\"#include \\\"system.h\\\"\\n\");\n+  printf (\"#include \\\"insn-config.h\\\"\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n   printf (\"#include \\\"real.h\\\"\\n\");\n+  printf (\"#include \\\"recog.h\\\"\\n\");\n   printf (\"#include \\\"except.h\\\"\\n\\n\");\n \n   printf (\"extern rtx peep_operand[];\\n\\n\");"}, {"sha": "17ec357f084e9ee0df99ac874c3f04617a8ae274", "filename": "gcc/recog.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "patch": "@@ -31,6 +31,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n #include \"real.h\"\n+#include \"toplev.h\"\n \n #ifndef STACK_PUSH_CODE\n #ifdef STACK_GROWS_DOWNWARD\n@@ -1758,7 +1759,6 @@ extract_insn (insn)\n       recog_n_operands = noperands = asm_noperands (body);\n       if (noperands >= 0)\n \t{\n-\t  char *p;\n \t  /* This insn is an `asm' with operands.  */\n \n \t  /* expand_asm_operands makes sure there aren't too many operands.  */"}, {"sha": "5c23453e0dfd7890a0c49bf22f4da279a008c6f1", "filename": "gcc/regclass.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7f8214d89ae2bdf81fe00164dd0425963c84e7/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=7f7f8214d89ae2bdf81fe00164dd0425963c84e7", "patch": "@@ -584,8 +584,8 @@ fix_register (name, fixed, call_used)\n \t  && (fixed == 0 || call_used == 0))\n \t{\n \t  static char* what_option[2][2] = {\n-\t    \"call-saved\", \"call-used\", \n-\t    \"no-such-option\", \"fixed\" };\n+\t    { \"call-saved\", \"call-used\" },\n+\t    { \"no-such-option\", \"fixed\" }};\n \t  \n \t  error (\"can't use '%s' as a %s register\", name, \n \t\t what_option[fixed][call_used]);\n@@ -1842,7 +1842,6 @@ allocate_reg_info (num_regs, new_p, renumber_p)\n {\n   static size_t regno_allocated = 0;\n   static short *renumber = (short *)0;\n-  int i;\n   size_t size_info;\n   size_t size_renumber;\n   size_t min = (new_p) ? 0 : reg_n_max;\n@@ -1937,6 +1936,8 @@ allocate_reg_info (num_regs, new_p, renumber_p)\n \t    {\n \t      size_t max = max_index;\n \t      size_t local_min = min - min_index;\n+\t      size_t i;\n+\n \t      if (min < min_index)\n \t\tlocal_min = 0;\n \t      if (!reg_data->used_p)\t/* page just allocated with calloc */"}]}