{"sha": "5dd6b2daae47fc9b6d8802391cde4c4819c82564", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRkNmIyZGFhZTQ3ZmM5YjZkODgwMjM5MWNkZTRjNDgxOWM4MjU2NA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2019-08-09T03:48:53Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2019-08-09T03:48:53Z"}, "message": "use rand instead of random\n\nrand is in ISO C, whereas random is only in POSIX, so it makes sense\nto use the more portable function everywhere instead of falling back\nfrom one to the other on systems that miss the less portable one.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* gcc.target/i386/sse2-mul-1.c: Use rand.  Drop fallback.\n\t* gcc.target/i386/sse4_1-blendps-2.c: Likewise.\n\t* gcc.target/i386/sse4_1-blendps.c: Likewise.\n\t* gcc.target/i386/xop-vshift-1.c: Likewise.\n\t* gcc.target/powerpc/direct-move.h: Likewise.\n\nFrom-SVN: r274225", "tree": {"sha": "d07c6f7bbe4e1ac892b30d94e8607c78b399b20c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d07c6f7bbe4e1ac892b30d94e8607c78b399b20c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dd6b2daae47fc9b6d8802391cde4c4819c82564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd6b2daae47fc9b6d8802391cde4c4819c82564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd6b2daae47fc9b6d8802391cde4c4819c82564", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd6b2daae47fc9b6d8802391cde4c4819c82564/comments", "author": null, "committer": null, "parents": [{"sha": "4e9d3fdb5c545dad8b0fd8f548f0852d419ac108", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9d3fdb5c545dad8b0fd8f548f0852d419ac108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e9d3fdb5c545dad8b0fd8f548f0852d419ac108"}], "stats": {"total": 46, "additions": 17, "deletions": 29}, "files": [{"sha": "639e426d10fb76dd33286dd5f583defe712ad3a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5dd6b2daae47fc9b6d8802391cde4c4819c82564", "patch": "@@ -1,3 +1,11 @@\n+2019-08-09  Alexandre Oliva <oliva@adacore.com>\n+\n+\t* gcc.target/i386/sse2-mul-1.c: Use rand.  Drop fallback.\n+\t* gcc.target/i386/sse4_1-blendps-2.c: Likewise.\n+\t* gcc.target/i386/sse4_1-blendps.c: Likewise.\n+\t* gcc.target/i386/xop-vshift-1.c: Likewise.\n+\t* gcc.target/powerpc/direct-move.h: Likewise.\n+\n 2019-08-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp0x/enum20.C: Test location(s) too."}, {"sha": "af63d245d79168bacf429cd8445664037eda19b2", "filename": "gcc/testsuite/gcc.target/i386/sse2-mul-1.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mul-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mul-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-mul-1.c?ref=5dd6b2daae47fc9b6d8802391cde4c4819c82564", "patch": "@@ -14,11 +14,6 @@\n \n #include <stdlib.h>\n \n-/* mingw runtime don't provide random().  */\n-#ifdef __MINGW32__\n-#define random rand\n-#endif\n-\n #define N 512\n static short a1[N], a2[N], a3[N];\n static unsigned short b1[N], b2[N], b3[N];\n@@ -160,12 +155,12 @@ TEST (void)\n       asm volatile (\"\" : : \"r\" (&s2) : \"memory\");\n       asm volatile (\"\" : : \"r\" (&s3) : \"memory\");\n       asm volatile (\"\" : : \"r\" (&s4) : \"memory\");\n-      b2[i] = (int) random ();\n-      b3[i] = (int) random ();\n+      b2[i] = (int) rand ();\n+      b3[i] = (int) rand ();\n       a2[i] = b2[i];\n       a3[i] = b3[i];\n-      d2[i] = (((int) random ()) << 16) | b2[i];\n-      d3[i] = (((int) random ()) << 16) | b3[i];\n+      d2[i] = (((int) rand ()) << 16) | b2[i];\n+      d3[i] = (((int) rand ()) << 16) | b3[i];\n       c2[i] = d2[i];\n       c3[i] = d3[i];\n       s1 += a2[i] * a3[i];"}, {"sha": "512394ea37a0005245ae808d6cd6e363d0342563", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-blendps-2.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps-2.c?ref=5dd6b2daae47fc9b6d8802391cde4c4819c82564", "patch": "@@ -8,11 +8,6 @@\n #include <string.h>\n #include <stdlib.h>\n \n-/* mingw runtime don't provide random().  */\n-#ifdef __MINGW32__\n-#define random rand\n-#endif\n-\n #define NUM 20\n \n #undef MASK\n@@ -64,7 +59,7 @@ sse4_1_test (void)\n   init_blendps (src1.f, src2.f);\n \n   for (i = 0; i < 4; i++)\n-    src3.f[i] = (int) random ();\n+    src3.f[i] = (int) rand ();\n \n   /* Check blendps imm8, m128, xmm */\n   for (i = 0; i < NUM; i++)"}, {"sha": "556094bf9530e59ff183cc68420f5f6a30240de8", "filename": "gcc/testsuite/gcc.target/i386/sse4_1-blendps.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse4_1-blendps.c?ref=5dd6b2daae47fc9b6d8802391cde4c4819c82564", "patch": "@@ -16,11 +16,6 @@\n #include <string.h>\n #include <stdlib.h>\n \n-/* mingw runtime don't provide random().  */\n-#ifdef __MINGW32__\n-#define random rand\n-#endif\n-\n #define NUM 20\n \n #ifndef MASK\n@@ -73,7 +68,7 @@ TEST (void)\n   init_blendps (src1.f, src2.f);\n \n   for (i = 0; i < 4; i++)\n-    src3.f[i] = (int) random ();\n+    src3.f[i] = (int) rand ();\n \n   /* Check blendps imm8, m128, xmm */\n   for (i = 0; i < NUM; i++)"}, {"sha": "f3713e8ffc656b217ac9a73934addfd321d19679", "filename": "gcc/testsuite/gcc.target/i386/xop-vshift-1.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vshift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vshift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxop-vshift-1.c?ref=5dd6b2daae47fc9b6d8802391cde4c4819c82564", "patch": "@@ -19,11 +19,6 @@\n #define TYPE2 long long\n #endif\n \n-/* mingw runtime don't provide random().  */\n-#ifdef __MINGW32__\n-#define random rand\n-#endif\n-\n signed TYPE1 a[N], b[N], g[N];\n unsigned TYPE1 c[N], h[N];\n signed TYPE2 d[N], e[N], j[N];\n@@ -108,10 +103,10 @@ TEST ()\n   for (i = 0; i < N; i++)\n     {\n       asm (\"\");\n-      c[i] = (random () << 1) | (random () & 1);\n+      c[i] = (rand () << 1) | (rand () & 1);\n       b[i] = (i * 85) & (sizeof (TYPE1) * __CHAR_BIT__ - 1);\n       a[i] = c[i];\n-      d[i] = (random () << 1) | (random () & 1);\n+      d[i] = (rand () << 1) | (rand () & 1);\n       d[i] |= (unsigned long long) c[i] << 32;\n       e[i] = (i * 85) & (sizeof (TYPE2) * __CHAR_BIT__ - 1);\n       f[i] = d[i];"}, {"sha": "80874adcea1ae7cd09d5c2d3cc31e091d0b21c47", "filename": "gcc/testsuite/gcc.target/powerpc/direct-move.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdirect-move.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd6b2daae47fc9b6d8802391cde4c4819c82564/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdirect-move.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdirect-move.h?ref=5dd6b2daae47fc9b6d8802391cde4c4819c82564", "patch": "@@ -179,7 +179,7 @@ main (void)\n   for (j = 0; j < 10; j++)\n     {\n       for (i = 0; i < sizeof (TYPE); i++)\n-\tu.bytes[i] = (unsigned char) (random () >> 4);\n+\tu.bytes[i] = (unsigned char) (rand () >> 4);\n \n       test_value (u.value);\n     }"}]}