{"sha": "e70324625fde7ca3a89e57cc56eaaaea3c005dc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcwMzI0NjI1ZmRlN2NhM2E4OWU1N2NjNTZlYWFhZWEzYzAwNWRjMg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2005-01-13T20:26:38Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-01-13T20:26:38Z"}, "message": "re PR libgcj/17784 (Thread.interrupt doesn't do security checks)\n\n2005-01-13  Michael Koch  <konqueror@gmx.de>\n\n\tPR libgcj/17784\n\t* java/lang/Thread.java\n\t(Thread): Call checkAccess().\n\t(stop): Fixed argument name to match javadoc.\n\t* java/lang/natThread.cc\n\t(interrupt): Call checkAccess().\n\t(stop): Likewise.\n\nFrom-SVN: r93611", "tree": {"sha": "769a55086c50415cd41df07dada0589ffcf265ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/769a55086c50415cd41df07dada0589ffcf265ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e70324625fde7ca3a89e57cc56eaaaea3c005dc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e70324625fde7ca3a89e57cc56eaaaea3c005dc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e70324625fde7ca3a89e57cc56eaaaea3c005dc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e70324625fde7ca3a89e57cc56eaaaea3c005dc2/comments", "author": null, "committer": null, "parents": [{"sha": "43a5ef693f402125ac1ea51cac2ad3cfe5378ed1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a5ef693f402125ac1ea51cac2ad3cfe5378ed1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a5ef693f402125ac1ea51cac2ad3cfe5378ed1"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "151ee6525542b19a4d2609ca90e4ed0c07a7326f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e70324625fde7ca3a89e57cc56eaaaea3c005dc2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e70324625fde7ca3a89e57cc56eaaaea3c005dc2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e70324625fde7ca3a89e57cc56eaaaea3c005dc2", "patch": "@@ -1,3 +1,13 @@\n+2005-01-13  Michael Koch  <konqueror@gmx.de>\n+\n+\tPR libgcj/17784\n+\t* java/lang/Thread.java\n+\t(Thread): Call checkAccess().\n+\t(stop): Fixed argument name to match javadoc.\n+\t* java/lang/natThread.cc\n+\t(interrupt): Call checkAccess().\n+\t(stop): Likewise.\n+\n 2005-01-11  Michael Koch  <konqueror@gmx.de>\n \n \tPR libgcj/13972"}, {"sha": "ef4a3f472f0f92a84a5c12d05277c92e8ccdd1e1", "filename": "libjava/java/lang/Thread.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e70324625fde7ca3a89e57cc56eaaaea3c005dc2/libjava%2Fjava%2Flang%2FThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e70324625fde7ca3a89e57cc56eaaaea3c005dc2/libjava%2Fjava%2Flang%2FThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FThread.java?ref=e70324625fde7ca3a89e57cc56eaaaea3c005dc2", "patch": "@@ -1,5 +1,5 @@\n /* Thread -- an independent thread of executable code\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n    Free Software Foundation\n \n This file is part of GNU Classpath.\n@@ -36,6 +36,7 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.lang;\n \n import gnu.gcj.RawData;\n@@ -321,6 +322,9 @@ public Thread(ThreadGroup group, Runnable target, String name, long size)\n \n   private Thread (Thread current, ThreadGroup g, Runnable r, String n)\n   {\n+    // Make sure the current thread may create a new thread.\n+    checkAccess();\n+    \n     // The Class Libraries book says ``threadName cannot be null''.  I\n     // take this to mean NullPointerException.\n     if (n == null)\n@@ -862,7 +866,7 @@ public final void stop()\n    * @see SecurityManager#checkPermission(Permission)\n    * @deprecated unsafe operation, try not to use\n    */\n-  public final native void stop(Throwable e);\n+  public final native void stop(Throwable t);\n \n   /**\n    * Suspend this Thread.  It will not come back, ever, unless it is resumed."}, {"sha": "af33b0db353e2920395324f7f8b985f9f8371387", "filename": "libjava/java/lang/natThread.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e70324625fde7ca3a89e57cc56eaaaea3c005dc2/libjava%2Fjava%2Flang%2FnatThread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e70324625fde7ca3a89e57cc56eaaaea3c005dc2/libjava%2Fjava%2Flang%2FnatThread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatThread.cc?ref=e70324625fde7ca3a89e57cc56eaaaea3c005dc2", "patch": "@@ -112,6 +112,7 @@ java::lang::Thread::holdsLock (jobject obj)\n void\n java::lang::Thread::interrupt (void)\n {\n+  checkAccess ();\n   natThread *nt = (natThread *) data;\n   _Jv_ThreadInterrupt (nt->thread);\n }\n@@ -321,6 +322,7 @@ java::lang::Thread::start (void)\n void\n java::lang::Thread::stop (java::lang::Throwable *)\n {\n+  checkAccess ();\n   throw new UnsupportedOperationException\n     (JvNewStringLatin1 (\"Thread.stop unimplemented\"));\n }"}]}