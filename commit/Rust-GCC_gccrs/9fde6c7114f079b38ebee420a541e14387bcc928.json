{"sha": "9fde6c7114f079b38ebee420a541e14387bcc928", "node_id": "C_kwDOANBUbNoAKDlmZGU2YzcxMTRmMDc5YjM4ZWJlZTQyMGE1NDFlMTQzODdiY2M5Mjg", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-06-02T15:32:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-05T08:28:18Z"}, "message": "[Ada] Remove unnecessary dead code after calls to nonreturning procedures\n\nA new warning about unreachable code that follows calls to procedures\nwith No_Return would flag some dead defensive code. Comments next to\nthis code suggest that it was added to please some ancient version of\nthe compiler, but recent releases of GNAT do not require such a code.\n\ngcc/ada/\n\n\t* gnatls.adb (Corresponding_Sdep_Entry): Remove dead return\n\tstatement in defensive path; there is another return statement\n\tfor a normal execution of this routine, so rule Ada RM 6.5(5),\n\twhich requires function to have at least one return statement is\n\tstill satisfied.\n\t(Gnatls): Remove dead, call to nonreturning Exit_Program after\n\tOutput_License_Information which itself does not return.\n\t* libgnat/a-exstat.adb (Bad_EO): Remove raise statement that was\n\tmeant to please some ancient version of GNAT.\n\t* libgnat/g-awk.adb (Raise_With_Info): Likewise.\n\t* sem_attr.adb (Check_Reference): Remove dead return statement;\n\trule Ada RM 6.5(5), which requires function to have at least one\n\treturn statement is still satisfied.\n\t(Analyze_Attribute): Remove dead exit statement.\n\t(Check_Reference): Same as above.\n\t* sem_ch12.adb (Instantiate_Formal_Package): Remove dead raise\n\tstatement; it was inconsistent with other calls to\n\tAbandon_Instantiation, which are not followed by a raise\n\tstatement.\n\t* sem_prag.adb (Process_Convention): Remove dead defensive\n\tassignment.\n\t(Interrupt_State): Remove dead defensive exit statement.\n\t(Do_SPARK_Mode): Likewise.\n\t* sfn_scan.adb (Scan_String): Remove dead defensive assignment.", "tree": {"sha": "75e83513ce19cd081a5feaa6c747bb16c94fcc94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75e83513ce19cd081a5feaa6c747bb16c94fcc94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fde6c7114f079b38ebee420a541e14387bcc928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fde6c7114f079b38ebee420a541e14387bcc928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fde6c7114f079b38ebee420a541e14387bcc928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fde6c7114f079b38ebee420a541e14387bcc928/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "684194f4a45e00e56687289386eea7105a762cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684194f4a45e00e56687289386eea7105a762cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/684194f4a45e00e56687289386eea7105a762cf7"}], "stats": {"total": 18, "additions": 0, "deletions": 18}, "files": [{"sha": "72445268f00521026d25f510bb66ad5a023c38a0", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=9fde6c7114f079b38ebee420a541e14387bcc928", "patch": "@@ -319,7 +319,6 @@ procedure Gnatls is\n       Write_Eol;\n       Error_Msg (\"wrong ALI format, can't find dependency line for $ in {\");\n       Exit_Program (E_Fatal);\n-      return No_Sdep_Id;\n    end Corresponding_Sdep_Entry;\n \n    -------------------------\n@@ -2051,7 +2050,6 @@ begin\n    if License then\n       if Arg_Count = 2 then\n          Output_License_Information;\n-         Exit_Program (E_Success);\n \n       else\n          Set_Standard_Error;"}, {"sha": "acc251649cd97f5115e0fbdf854e3e23154a460d", "filename": "gcc/ada/libgnat/a-exstat.adb", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Flibgnat%2Fa-exstat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Flibgnat%2Fa-exstat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-exstat.adb?ref=9fde6c7114f079b38ebee420a541e14387bcc928", "patch": "@@ -109,13 +109,6 @@ package body Stream_Attributes is\n          Raise_Exception\n            (Program_Error'Identity,\n             \"bad exception occurrence in stream input\");\n-\n-         --  The following junk raise of Program_Error is required because\n-         --  this is a No_Return procedure, and unfortunately Raise_Exception\n-         --  can return (this particular call can't, but the back end is not\n-         --  clever enough to know that).\n-\n-         raise Program_Error;\n       end Bad_EO;\n \n       procedure Next_String is"}, {"sha": "9b2e127b3bb632b477ca6d5f394ced2343ff1418", "filename": "gcc/ada/libgnat/g-awk.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Flibgnat%2Fg-awk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Flibgnat%2Fg-awk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-awk.adb?ref=9fde6c7114f079b38ebee420a541e14387bcc928", "patch": "@@ -1211,7 +1211,6 @@ package body GNAT.AWK is\n       Exceptions.Raise_Exception\n         (E,\n          '[' & Filename & ':' & Line & \"] \" & Message);\n-      raise Constraint_Error; -- to please GNAT as this is a No_Return proc\n    end Raise_With_Info;\n \n    ---------------"}, {"sha": "6a35358261e5199461027dbf7306477a2fee9064", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=9fde6c7114f079b38ebee420a541e14387bcc928", "patch": "@@ -4747,7 +4747,6 @@ package body Sem_Attr is\n                   Error_Attr\n                     (\"prefix of attribute % cannot reference local entities\",\n                      Nod);\n-                  return Abandon;\n                else\n                   return OK;\n                end if;\n@@ -4989,7 +4988,6 @@ package body Sem_Attr is\n             else\n                Error_Attr\n                  (\"attribute % cannot appear in body or accept statement\", N);\n-               exit;\n             end if;\n          end loop;\n \n@@ -5383,7 +5381,6 @@ package body Sem_Attr is\n                   Error_Attr\n                     (\"prefix of attribute % cannot reference local entities\",\n                      Nod);\n-                  return Abandon;\n \n                --  Otherwise keep inspecting the prefix\n "}, {"sha": "dcc0dac43421980821a6788d3d840b305a5c9b4f", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=9fde6c7114f079b38ebee420a541e14387bcc928", "patch": "@@ -10572,7 +10572,6 @@ package body Sem_Ch12 is\n          Error_Msg_N\n            (\"expect package instance to instantiate formal\", Actual);\n          Abandon_Instantiation (Actual);\n-         raise Program_Error;\n \n       else\n          Actual_Pack := Entity (Actual);"}, {"sha": "3660c75fc6918946abbe0c084a565b75847b1d79", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=9fde6c7114f079b38ebee420a541e14387bcc928", "patch": "@@ -8336,7 +8336,6 @@ package body Sem_Prag is\n                Error_Pragma_Arg\n                  (\"argument of pragma% must be subprogram or access type\",\n                   Arg2);\n-               Subp := Empty;\n             end if;\n \n             --  ISO C requires a named parameter before the ellipsis, so a\n@@ -18641,7 +18640,6 @@ package body Sem_Prag is\n                     Interrupt_States.Table (IST_Num).Pragma_Loc;\n                   Error_Pragma_Arg\n                     (\"state conflicts with that given #\", Arg2);\n-                  exit;\n                end if;\n \n                IST_Num := IST_Num + 1;\n@@ -23762,7 +23760,6 @@ package body Sem_Prag is\n \n                   else\n                      Pragma_Misplaced;\n-                     exit;\n                   end if;\n \n                   Prev (Stmt);"}, {"sha": "b428ed7f0cf5a4777341e7349486402fc9eb8cb3", "filename": "gcc/ada/sfn_scan.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fsfn_scan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fde6c7114f079b38ebee420a541e14387bcc928/gcc%2Fada%2Fsfn_scan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsfn_scan.adb?ref=9fde6c7114f079b38ebee420a541e14387bcc928", "patch": "@@ -622,7 +622,6 @@ package body SFN_Scan is\n          Q := '%';\n       else\n          Error (\"bad string\");\n-         Q := '\"';\n       end if;\n \n       --  Scan out the string, B points to first char"}]}