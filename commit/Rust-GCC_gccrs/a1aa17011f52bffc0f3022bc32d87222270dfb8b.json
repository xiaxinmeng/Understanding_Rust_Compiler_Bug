{"sha": "a1aa17011f52bffc0f3022bc32d87222270dfb8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFhYTE3MDExZjUyYmZmYzBmMzAyMmJjMzJkODcyMjIyNzBkZmI4Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-10-20T09:19:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-10-20T09:19:17Z"}, "message": "tree-sra.c (build_ref_for_offset_1): Skip fields without size or with size that can't be represented as a host integer.\n\n\t* tree-sra.c (build_ref_for_offset_1) <RECORD_TYPE>: Skip fields\n\twithout size or with size that can't be represented as a host integer.\n\nFrom-SVN: r153008", "tree": {"sha": "b9e333e8cefe1df8d54ec2d92ed5e2045172910b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9e333e8cefe1df8d54ec2d92ed5e2045172910b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1aa17011f52bffc0f3022bc32d87222270dfb8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1aa17011f52bffc0f3022bc32d87222270dfb8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1aa17011f52bffc0f3022bc32d87222270dfb8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1aa17011f52bffc0f3022bc32d87222270dfb8b/comments", "author": null, "committer": null, "parents": [{"sha": "717f4048cd7e5d2ff7beb9276c0e09b4cb4d2faa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717f4048cd7e5d2ff7beb9276c0e09b4cb4d2faa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717f4048cd7e5d2ff7beb9276c0e09b4cb4d2faa"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "739cdb574bedd1f1e7226e4e2202101cc2541b8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1aa17011f52bffc0f3022bc32d87222270dfb8b", "patch": "@@ -1,3 +1,8 @@\n+2009-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-sra.c (build_ref_for_offset_1) <RECORD_TYPE>: Skip fields\n+\twithout size or with size that can't be represented as a host integer.\n+\n 2009-10-20  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tree-ssa-dce.c (eliminate_unnecessary_stmts): Don't regard"}, {"sha": "1868e09da721034a51ea0dbd824be7bf35b65fa5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a1aa17011f52bffc0f3022bc32d87222270dfb8b", "patch": "@@ -1,3 +1,8 @@\n+2009-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/discr21.ad[sb]: New test.\n+\t* gnat.dg/discr21_pkg.ads: New helper.\n+\n 2009-10-20  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/41706"}, {"sha": "5c105cdb25c17fa2abb3fbf60d6d7e7fde2bfc90", "filename": "gcc/testsuite/gnat.dg/discr21.adb", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr21.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr21.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr21.adb?ref=a1aa17011f52bffc0f3022bc32d87222270dfb8b", "patch": "@@ -0,0 +1,34 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws -O3\" }\n+\n+with Discr21_Pkg; use Discr21_Pkg;\n+\n+package body Discr21 is\n+\n+  type Index is new Natural range 0 .. 100;\n+\n+  type Arr is array (Index range <> ) of Position;\n+\n+  type Rec(Size : Index := 1) is record\n+    A : Arr(1 .. Size);\n+  end record;\n+\n+  Data : Rec;\n+\n+  function To_V(pos : Position) return VPosition is\n+  begin\n+    return To_Position(pos.x, pos.y, pos.z);\n+  end;\n+\n+  procedure Read(Data : Rec) is\n+    pos : VPosition := To_V (Data.A(1));\n+  begin\n+    null;\n+  end;\n+\n+  procedure Test is\n+  begin\n+    Read (Data);\n+  end;\n+\n+end Discr21;"}, {"sha": "8de8ed08b768cb488219ba3ab02614cb483dc7f5", "filename": "gcc/testsuite/gnat.dg/discr21.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr21.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr21.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr21.ads?ref=a1aa17011f52bffc0f3022bc32d87222270dfb8b", "patch": "@@ -0,0 +1,5 @@\n+package Discr21 is\n+\n+  procedure Test;\n+\n+end Discr21;"}, {"sha": "d156df625170fd157287089893eda555ec6b5839", "filename": "gcc/testsuite/gnat.dg/discr21_pkg.ads", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr21_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr21_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr21_pkg.ads?ref=a1aa17011f52bffc0f3022bc32d87222270dfb8b", "patch": "@@ -0,0 +1,19 @@\n+package Discr21_Pkg is\n+\n+  type Position is record\n+    x,y,z : Float;\n+  end record;\n+\n+  type Dim is (Two, Three);\n+\n+  type VPosition (D: Dim := Three) is record\n+    x, y : Float;\n+    case D is\n+      when Two => null;\n+      when Three => z : Float;\n+    end case;\n+  end record;\n+\n+  function To_Position (x, y, z : Float) return VPosition;\n+\n+end Discr21_Pkg;"}, {"sha": "862466886805199c5487ae9d9042bf57a11cddb2", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1aa17011f52bffc0f3022bc32d87222270dfb8b/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=a1aa17011f52bffc0f3022bc32d87222270dfb8b", "patch": "@@ -1243,7 +1243,10 @@ build_ref_for_offset_1 (tree *res, tree type, HOST_WIDE_INT offset,\n \n \t      pos = int_bit_position (fld);\n \t      gcc_assert (TREE_CODE (type) == RECORD_TYPE || pos == 0);\n-\t      size = tree_low_cst (DECL_SIZE (fld), 1);\n+\t      tr_size = DECL_SIZE (fld);\n+\t      if (!tr_size || !host_integerp (tr_size, 1))\n+\t\tcontinue;\n+\t      size = tree_low_cst (tr_size, 1);\n \t      if (pos > offset || (pos + size) <= offset)\n \t\tcontinue;\n "}]}