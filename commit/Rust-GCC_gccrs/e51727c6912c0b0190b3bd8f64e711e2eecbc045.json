{"sha": "e51727c6912c0b0190b3bd8f64e711e2eecbc045", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUxNzI3YzY5MTJjMGIwMTkwYjNiZDhmNjRlNzExZTJlZWNiYzA0NQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2020-12-29T11:30:04Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2020-12-29T11:41:03Z"}, "message": "arc: Fix cached to uncached moves.\n\nWe need an temporary register when moving data from a cached memory to\nan uncached memory. Fix this issue and add a test for it.\n\ngcc/\n2020-12-29  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.c (prepare_move_operands): Use a temporary\n\tregisters when we have cached mem-to-uncached mem moves.\n\ngcc/testsuite/\n2020-12-29  Vladimir Isaev  <isaev@synopsys.com>\n\n\t* gcc.target/arc/uncached-9.c: New test.\n\nSigned-off-by: Claudiu Zissulescu <claziss@synopsys.com>", "tree": {"sha": "766acd260ba477bf7a90f923e2af9a5c2c1097d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/766acd260ba477bf7a90f923e2af9a5c2c1097d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e51727c6912c0b0190b3bd8f64e711e2eecbc045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51727c6912c0b0190b3bd8f64e711e2eecbc045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e51727c6912c0b0190b3bd8f64e711e2eecbc045", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51727c6912c0b0190b3bd8f64e711e2eecbc045/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "052870c3d1c962a0875c4debc066ccc3d68e7029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/052870c3d1c962a0875c4debc066ccc3d68e7029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/052870c3d1c962a0875c4debc066ccc3d68e7029"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "d0a52ee8b8db51b8904226899d6f0a1aafde8efa", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51727c6912c0b0190b3bd8f64e711e2eecbc045/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51727c6912c0b0190b3bd8f64e711e2eecbc045/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=e51727c6912c0b0190b3bd8f64e711e2eecbc045", "patch": "@@ -9234,13 +9234,21 @@ prepare_move_operands (rtx *operands, machine_mode mode)\n \t}\n       if (arc_is_uncached_mem_p (operands[1]))\n \t{\n+\t  rtx tmp = operands[0];\n+\n \t  if (MEM_P (operands[0]))\n-\t    operands[0] = force_reg (mode, operands[0]);\n+\t    tmp = gen_reg_rtx (mode);\n+\n \t  emit_insn (gen_rtx_SET\n-\t\t     (operands[0],\n+\t\t     (tmp,\n \t\t      gen_rtx_UNSPEC_VOLATILE\n \t\t      (mode, gen_rtvec (1, operands[1]),\n \t\t       VUNSPEC_ARC_LDDI)));\n+\t  if (MEM_P (operands[0]))\n+\t    {\n+\t      operands[1] = tmp;\n+\t      return false;\n+\t    }\n \t  return true;\n \t}\n     }"}, {"sha": "4caba293bc51a7e28d00270d7411b7334f6cabfd", "filename": "gcc/testsuite/gcc.target/arc/uncached-9.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e51727c6912c0b0190b3bd8f64e711e2eecbc045/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Funcached-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e51727c6912c0b0190b3bd8f64e711e2eecbc045/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Funcached-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Funcached-9.c?ref=e51727c6912c0b0190b3bd8f64e711e2eecbc045", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <stdlib.h>\n+\n+struct uncached_st\n+{\n+  int value;\n+} __attribute__((uncached));\n+\n+struct cached_st\n+{\n+  int value;\n+};\n+\n+struct uncached_st g_uncached_st =\n+  {\n+    .value = 17\n+  };\n+\n+struct cached_st g_cached_st =\n+  {\n+    .value = 4\n+  };\n+\n+void __attribute__((noinline)) test_struct_copy (void)\n+{\n+  g_cached_st.value = g_uncached_st.value;\n+}\n+\n+int main (void)\n+{\n+  test_struct_copy();\n+\n+  if (g_cached_st.value != g_uncached_st.value)\n+    abort ();\n+\n+  return 0;\n+}"}]}