{"sha": "325aa13996bafce0c4927876c315d1fa706d9881", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI1YWExMzk5NmJhZmNlMGM0OTI3ODc2YzMxNWQxZmE3MDZkOTg4MQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-05-21T06:51:47Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-05-21T18:23:34Z"}, "message": "[OpenACC privatization] Reject 'static', 'external' in blocks [PR90115]\n\n\tgcc/\n\tPR middle-end/90115\n\t* omp-low.c (oacc_privatization_candidate_p): Reject 'static',\n\t'external' in blocks.\n\tgcc/testsuite/\n\tPR middle-end/90115\n\t* c-c++-common/goacc/privatization-1-compute-loop.c: Update.\n\t* c-c++-common/goacc/privatization-1-compute.c: Likewise.\n\t* c-c++-common/goacc/privatization-1-routine_gang-loop.c:\n\tLikewise.\n\t* c-c++-common/goacc/privatization-1-routine_gang.c: Likewise.\n\tlibgomp/\n\tPR middle-end/90115\n\t* testsuite/libgomp.oacc-c-c++-common/static-variable-1.c: Update.\n\t* testsuite/libgomp.oacc-fortran/privatized-ref-2.f90: Likewise.", "tree": {"sha": "cbbbb65dda09b3881b6af1b2f8b24becb683df03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbbbb65dda09b3881b6af1b2f8b24becb683df03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/325aa13996bafce0c4927876c315d1fa706d9881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/325aa13996bafce0c4927876c315d1fa706d9881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/325aa13996bafce0c4927876c315d1fa706d9881", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/325aa13996bafce0c4927876c315d1fa706d9881/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11b8286a83289f5b54e813f14ff56d730c3f3185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11b8286a83289f5b54e813f14ff56d730c3f3185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11b8286a83289f5b54e813f14ff56d730c3f3185"}], "stats": {"total": 81, "additions": 45, "deletions": 36}, "files": [{"sha": "e00051bd3f7f698ca01a42839f48791e172106f0", "filename": "gcc/omp-low.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=325aa13996bafce0c4927876c315d1fa706d9881", "patch": "@@ -10192,6 +10192,9 @@ oacc_privatization_candidate_p (const location_t loc, const tree c,\n {\n   dump_flags_t l_dump_flags = get_openacc_privatization_dump_flags ();\n \n+  /* There is some differentiation depending on block vs. clause.  */\n+  bool block = !c;\n+\n   bool res = true;\n \n   if (res && !VAR_P (decl))\n@@ -10207,6 +10210,32 @@ oacc_privatization_candidate_p (const location_t loc, const tree c,\n \t}\n     }\n \n+  if (res && block && TREE_STATIC (decl))\n+    {\n+      res = false;\n+\n+      if (dump_enabled_p ())\n+\t{\n+\t  oacc_privatization_begin_diagnose_var (l_dump_flags, loc, c, decl);\n+\t  dump_printf (l_dump_flags,\n+\t\t       \"isn%'t candidate for adjusting OpenACC privatization level: %s\\n\",\n+\t\t       \"static\");\n+\t}\n+    }\n+\n+  if (res && block && DECL_EXTERNAL (decl))\n+    {\n+      res = false;\n+\n+      if (dump_enabled_p ())\n+\t{\n+\t  oacc_privatization_begin_diagnose_var (l_dump_flags, loc, c, decl);\n+\t  dump_printf (l_dump_flags,\n+\t\t       \"isn%'t candidate for adjusting OpenACC privatization level: %s\\n\",\n+\t\t       \"external\");\n+\t}\n+    }\n+\n   if (res && !TREE_ADDRESSABLE (decl))\n     {\n       res = false;"}, {"sha": "43b39c2042f9a4daef02c61843a0708c8cccd4c4", "filename": "gcc/testsuite/c-c++-common/goacc/privatization-1-compute-loop.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-compute-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-compute-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-compute-loop.c?ref=325aa13996bafce0c4927876c315d1fa706d9881", "patch": "@@ -85,10 +85,8 @@ f (int i, int j, int a)\n   /* { dg-note {variable 'ss' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop } */\n   /* { dg-note {variable 'func' declared in block potentially has improper OpenACC privatization level: 'function_decl'} \"TODO\" { target *-*-* } l_loop$c_loop } */\n   /* { dg-note {variable 'func2' declared in block potentially has improper OpenACC privatization level: 'function_decl'} \"TODO\" { target *-*-* } l_loop$c_loop } */\n-  /* { dg-note {variable 'ext' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_loop$c_loop }\n-     { dg-note {variable 'ext' ought to be adjusted for OpenACC privatization level: 'vector'} \"\" { target *-*-* } l_loop$c_loop } */\n-  /* { dg-note {variable 'sta' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_loop$c_loop }\n-     { dg-note {variable 'sta' ought to be adjusted for OpenACC privatization level: 'vector'} \"\" { target *-*-* } l_loop$c_loop } */\n+  /* { dg-note {variable 'ext' declared in block isn't candidate for adjusting OpenACC privatization level: external} \"\" { target *-*-* } l_loop$c_loop } */\n+  /* { dg-note {variable 'sta' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"\" { target *-*-* } l_loop$c_loop } */\n   /* { dg-note {variable 'xx' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop } */\n   /* { dg-note {variable 'yy' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_loop$c_loop }\n      { dg-note {variable 'yy' ought to be adjusted for OpenACC privatization level: 'vector'} \"\" { target *-*-* } l_loop$c_loop } */"}, {"sha": "b7c7bff64d920a1303393e9799767d762102a322", "filename": "gcc/testsuite/c-c++-common/goacc/privatization-1-compute.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-compute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-compute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-compute.c?ref=325aa13996bafce0c4927876c315d1fa706d9881", "patch": "@@ -80,10 +80,8 @@ f (int i, int j, int a)\n   /* { dg-note {variable 'ss' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {variable 'func' declared in block potentially has improper OpenACC privatization level: 'function_decl'} \"TODO\" { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {variable 'func2' declared in block potentially has improper OpenACC privatization level: 'function_decl'} \"TODO\" { target *-*-* } l_compute$c_compute } */\n-  /* { dg-note {variable 'ext' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute }\n-     { dg-note {variable 'ext' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } l_compute$c_compute } */\n-  /* { dg-note {variable 'sta' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute }\n-     { dg-note {variable 'sta' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } l_compute$c_compute } */\n+  /* { dg-note {variable 'ext' declared in block isn't candidate for adjusting OpenACC privatization level: external} \"\" { target *-*-* } l_compute$c_compute } */\n+  /* { dg-note {variable 'sta' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"\" { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {variable 'xx' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {variable 'yy' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute }\n      { dg-note {variable 'yy' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } l_compute$c_compute } */"}, {"sha": "816e430643721ef04f2dfc295ea3d6dae6cb84ca", "filename": "gcc/testsuite/c-c++-common/goacc/privatization-1-routine_gang-loop.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-routine_gang-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-routine_gang-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-routine_gang-loop.c?ref=325aa13996bafce0c4927876c315d1fa706d9881", "patch": "@@ -85,10 +85,8 @@ f (int i, int j, int a)\n   /* { dg-note {variable 'ss' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop } */\n   /* { dg-note {variable 'func' declared in block potentially has improper OpenACC privatization level: 'function_decl'} \"TODO\" { target *-*-* } l_loop$c_loop } */\n   /* { dg-note {variable 'func2' declared in block potentially has improper OpenACC privatization level: 'function_decl'} \"TODO\" { target *-*-* } l_loop$c_loop } */\n-  /* { dg-note {variable 'ext' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_loop$c_loop }\n-     { dg-note {variable 'ext' ought to be adjusted for OpenACC privatization level: 'vector'} \"\" { target *-*-* } l_loop$c_loop } */\n-  /* { dg-note {variable 'sta' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_loop$c_loop }\n-     { dg-note {variable 'sta' ought to be adjusted for OpenACC privatization level: 'vector'} \"\" { target *-*-* } l_loop$c_loop } */\n+  /* { dg-note {variable 'ext' declared in block isn't candidate for adjusting OpenACC privatization level: external} \"\" { target *-*-* } l_loop$c_loop } */\n+  /* { dg-note {variable 'sta' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"\" { target *-*-* } l_loop$c_loop } */\n   /* { dg-note {variable 'xx' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop } */\n   /* { dg-note {variable 'yy' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_loop$c_loop }\n      { dg-note {variable 'yy' ought to be adjusted for OpenACC privatization level: 'vector'} \"\" { target *-*-* } l_loop$c_loop } */"}, {"sha": "f9f316e4ff9c76735dcee4bc90598e3acedf4e69", "filename": "gcc/testsuite/c-c++-common/goacc/privatization-1-routine_gang.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-routine_gang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/325aa13996bafce0c4927876c315d1fa706d9881/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-routine_gang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fprivatization-1-routine_gang.c?ref=325aa13996bafce0c4927876c315d1fa706d9881", "patch": "@@ -84,10 +84,8 @@ f (int i, int j, int a)\n   /* { dg-note {variable 'ss' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"TODO\" { xfail *-*-* } l_routine$c_routine } */\n   /* { dg-note {variable 'func' declared in block potentially has improper OpenACC privatization level: 'function_decl'} \"TODO\" { xfail *-*-* } l_routine$c_routine } */\n   /* { dg-note {variable 'func2' declared in block potentially has improper OpenACC privatization level: 'function_decl'} \"TODO\" { xfail *-*-* } l_routine$c_routine } */\n-  /* { dg-note {variable 'ext' declared in block is candidate for adjusting OpenACC privatization level} \"TODO\" { xfail *-*-* } l_routine$c_routine }\n-     { dg-note {variable 'ext' ought to be adjusted for OpenACC privatization level: 'gang'} \"TODO\" { xfail *-*-* } l_routine$c_routine } */\n-  /* { dg-note {variable 'sta' declared in block is candidate for adjusting OpenACC privatization level} \"TODO\" { xfail *-*-* } l_routine$c_routine }\n-     { dg-note {variable 'sta' ought to be adjusted for OpenACC privatization level: 'gang'} \"TODO\" { xfail *-*-* } l_routine$c_routine } */\n+  /* { dg-note {variable 'ext' declared in block isn't candidate for adjusting OpenACC privatization level: external} \"TODO\" { xfail *-*-* } l_routine$c_routine } */\n+  /* { dg-note {variable 'sta' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"TODO\" { xfail *-*-* } l_routine$c_routine } */\n   /* { dg-note {variable 'xx' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"TODO\" { xfail *-*-* } l_routine$c_routine } */\n   /* { dg-note {variable 'yy' declared in block is candidate for adjusting OpenACC privatization level} \"TODO\" { xfail *-*-* } l_routine$c_routine }\n      { dg-note {variable 'yy' ought to be adjusted for OpenACC privatization level: 'gang'} \"TODO\" { xfail *-*-* } l_routine$c_routine } */"}, {"sha": "ceb2c88d3e5cbf82b7550f2fab00ebe28cb06756", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-variable-1.c", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/325aa13996bafce0c4927876c315d1fa706d9881/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-variable-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/325aa13996bafce0c4927876c315d1fa706d9881/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-variable-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-variable-1.c?ref=325aa13996bafce0c4927876c315d1fa706d9881", "patch": "@@ -46,9 +46,7 @@ static void t0_c(void)\n #pragma acc parallel \\\n   reduction(max:num_gangs_actual) \\\n   reduction(max:result)\n-      /* { dg-note {variable 'var' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } .-3 }\n-\t { dg-note {variable 'var' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } .-4 }\n-\t { dg-note {variable 'var' adjusted for OpenACC privatization level: 'gang'} \"\" { target { ! openacc_host_selected } } .-5 } */\n+      /* { dg-note {variable 'var' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"\" { target *-*-* } .-3 } */\n       {\n \tnum_gangs_actual = 1 + __builtin_goacc_parlevel_id(GOMP_DIM_GANG);\n \n@@ -143,9 +141,7 @@ static void t1_c(void)\n   num_gangs(num_gangs_request) \\\n   reduction(max:num_gangs_actual) \\\n   reduction(max:result)\n-      /* { dg-note {variable 'var' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } .-4 }\n-\t { dg-note {variable 'var' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } .-5 }\n-\t { dg-note {variable 'var' adjusted for OpenACC privatization level: 'gang'} \"\" { target { ! openacc_host_selected } } .-6 } */\n+      /* { dg-note {variable 'var' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"\" { target *-*-* } .-4 } */\n       {\n \tnum_gangs_actual = 1 + __builtin_goacc_parlevel_id(GOMP_DIM_GANG);\n \n@@ -317,10 +313,8 @@ static void t2(void)\n   present(results_1) \\\n   num_gangs(num_gangs_request_1) \\\n   async(1)\n-\t/* { dg-note {variable 'var' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } .-4 }\n-\t   { dg-note {variable 'var' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } .-5 }\n-\t   { dg-note {variable 'var' adjusted for OpenACC privatization level: 'gang'} \"\" { target { ! openacc_host_selected } } .-6 } */\n-\t/* { dg-note {variable 'tmp' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-7 } */\n+\t/* { dg-note {variable 'var' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"\" { target *-*-* } .-4 } */\n+\t/* { dg-note {variable 'tmp' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-5 } */\n \t{\n \t  static int var = var_init_1;\n \n@@ -344,10 +338,8 @@ static void t2(void)\n   present(results_3) \\\n   num_gangs(num_gangs_request_3) \\\n   async(3)\n-\t/* { dg-note {variable 'var' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } .-4 }\n-\t   { dg-note {variable 'var' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } .-5 }\n-\t   { dg-note {variable 'var' adjusted for OpenACC privatization level: 'gang'} \"\" { target { ! openacc_host_selected } } .-6 } */\n-\t/* { dg-note {variable 'tmp' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-7 } */\n+\t/* { dg-note {variable 'var' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"\" { target *-*-* } .-4 } */\n+\t/* { dg-note {variable 'tmp' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } .-5 } */\n \t{\n \t  static int var = var_init_3;\n \n@@ -468,9 +460,7 @@ static void pr84992_1(void)\n   int n[1];\n   n[0] = 3;\n #pragma acc parallel copy(n)\n-  /* { dg-note {variable 'test' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } .-1 }\n-     { dg-note {variable 'test' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } .-2 }\n-     { dg-note {variable 'test' adjusted for OpenACC privatization level: 'gang'} \"\" { target { ! openacc_host_selected } } .-3 } */\n+  /* { dg-note {variable 'test' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"\" { target *-*-* } .-1 } */\n   {\n     static const int test[] = {1,2,3,4};\n     n[0] = test[n[0]];"}, {"sha": "60803e48cbe0e34fb3766700b4adedbbd0b6857f", "filename": "libgomp/testsuite/libgomp.oacc-fortran/privatized-ref-2.f90", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/325aa13996bafce0c4927876c315d1fa706d9881/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprivatized-ref-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/325aa13996bafce0c4927876c315d1fa706d9881/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprivatized-ref-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fprivatized-ref-2.f90?ref=325aa13996bafce0c4927876c315d1fa706d9881", "patch": "@@ -74,9 +74,7 @@ subroutine bar (array)\n     ! { dg-note {variable 'parm\\.[0-9]+' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute }\n     ! { dg-note {variable 'parm\\.[0-9]+' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } l_compute$c_compute }\n     ! { dg-note {variable 'parm\\.[0-9]+' adjusted for OpenACC privatization level: 'gang'} \"\" { target { ! { openacc_host_selected || openacc_nvidia_accel_selected } } } l_compute$c_compute }\n-    ! { dg-note {variable 'A\\.[0-9]+' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute }\n-    ! { dg-note {variable 'A\\.[0-9]+' ought to be adjusted for OpenACC privatization level: 'gang'} \"\" { target *-*-* } l_compute$c_compute }\n-    ! { dg-note {variable 'A\\.[0-9]+' adjusted for OpenACC privatization level: 'gang'} \"\" { target { ! { openacc_host_selected || openacc_nvidia_accel_selected } } } l_compute$c_compute }\n+    ! { dg-note {variable 'A\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: static} \"\" { target *-*-* } l_compute$c_compute }\n     array = [(-2*i, i = 1, size(array))]\n     !$acc loop gang private(array) ! { dg-line l_loop[incr c_loop] }\n     ! { dg-note {variable 'i' in 'private' clause isn't candidate for adjusting OpenACC privatization level: not addressable} \"\" { target *-*-* } l_loop$c_loop }"}]}