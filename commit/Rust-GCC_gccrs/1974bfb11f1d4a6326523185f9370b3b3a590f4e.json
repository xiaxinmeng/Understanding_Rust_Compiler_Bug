{"sha": "1974bfb11f1d4a6326523185f9370b3b3a590f4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk3NGJmYjExZjFkNGE2MzI2NTIzMTg1ZjkzNzBiM2IzYTU5MGY0ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-24T20:39:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-24T20:39:21Z"}, "message": "(pushcase_range): Check for null range first.\n\nFrom-SVN: r13977", "tree": {"sha": "7567f10695d25621d0d946524abe61c051962c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7567f10695d25621d0d946524abe61c051962c73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1974bfb11f1d4a6326523185f9370b3b3a590f4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1974bfb11f1d4a6326523185f9370b3b3a590f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1974bfb11f1d4a6326523185f9370b3b3a590f4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1974bfb11f1d4a6326523185f9370b3b3a590f4e/comments", "author": null, "committer": null, "parents": [{"sha": "469b759e8cd3b6e0f8dd25e5099f89533b663310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469b759e8cd3b6e0f8dd25e5099f89533b663310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/469b759e8cd3b6e0f8dd25e5099f89533b663310"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "01747b049554400657e120cbd27195ab04c1ba61", "filename": "gcc/stmt.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1974bfb11f1d4a6326523185f9370b3b3a590f4e/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1974bfb11f1d4a6326523185f9370b3b3a590f4e/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=1974bfb11f1d4a6326523185f9370b3b3a590f4e", "patch": "@@ -1,5 +1,5 @@\n /* Expands front end tree to back end RTL for GNU C-Compiler\n-   Copyright (C) 1987, 88, 89, 92-5, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 89, 92-6, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -4410,6 +4410,10 @@ pushcase (value, converter, label, duplicate)\n   if (! (case_stack && case_stack->data.case_stmt.start))\n     return 1;\n \n+  /* Fail if the range is empty.  */\n+  if (tree_int_cst_lt (value2, value1))\n+    return 4;\n+\n   if (stack_block_stack\n       && stack_block_stack->depth > case_stack->depth)\n     return 5;\n@@ -4524,11 +4528,11 @@ pushcase_range (value1, value2, converter, label, duplicate)\n \n   /* Convert VALUEs to type in which the comparisons are nominally done.  */\n   if (value1 == 0)  /* Negative infinity.  */\n-    value1 = TYPE_MIN_VALUE(index_type);\n+    value1 = TYPE_MIN_VALUE (index_type);\n   value1 = (*converter) (nominal_type, value1);\n \n   if (value2 == 0)  /* Positive infinity.  */\n-    value2 = TYPE_MAX_VALUE(index_type);\n+    value2 = TYPE_MAX_VALUE (index_type);\n   value2 = (*converter) (nominal_type, value2);\n \n   /* Fail if these values are out of range.  */\n@@ -4538,10 +4542,6 @@ pushcase_range (value1, value2, converter, label, duplicate)\n   if (! int_fits_type_p (value2, index_type))\n     return 3;\n \n-  /* Fail if the range is empty.  */\n-  if (tree_int_cst_lt (value2, value1))\n-    return 4;\n-\n   return add_case_node (value1, value2, label, duplicate);\n }\n "}]}