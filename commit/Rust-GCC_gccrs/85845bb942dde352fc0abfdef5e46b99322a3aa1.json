{"sha": "85845bb942dde352fc0abfdef5e46b99322a3aa1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU4NDViYjk0MmRkZTM1MmZjMGFiZmRlZjVlNDZiOTkzMjJhM2FhMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-02-21T10:51:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-02-21T10:51:19Z"}, "message": "i386.md (mov<mode>cc): Macroize expander from movsfcc...\n\n\t* config/i386/i386.md (mov<mode>cc): Macroize expander from movsfcc,\n\tmovdfcc and movxfcc using X87MODEF mode iterator and SSE_FLOAT_MODE_P\n\tas insn constraint.\n\t* config/i386/sse.md (<sse>_movup<ssemodesuffixf2c>): Macroize insn\n\tfrom sse_movups adn sse2_movupd using SSEMODEF2P mode iterator and\n\tSSE_VEC_FLOAT_MODE_P as insn constraint.\n\t(<sse>_movmskp<ssemodesuffixf2c>): Ditto from similar patterns.\n\t(sse4a_movnt<mode>): Macroize insn from sse4a_movntsf and\n\tsse4a_movntdf using MODEF mode iterator.\n\t(sse4a_vmmovnt<mode>): Macroize insn form sse4a_vmmovntv2df and\n\tsse4a_vmmovntv4sf using SSEMODEF2P mode iterator.\n\t(sse4_1_blendp<ssemodesuffixf2c>): Ditto from similar patterns.\n\t(sse4_1_blendvp<ssemodesuffixf2c>): Ditto.\n\t(sse4_1_dpp<ssemodesuffixf2c>): Ditto.\n\t(sse4_1_roundp<ssemodesuffixf2c>): Ditto.\n\t(sse4_1_rounds<ssemodesuffixf2c>): Ditto.\n\nFrom-SVN: r132518", "tree": {"sha": "246eb640ddcf294771ec3d4112e84596e53a4cd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/246eb640ddcf294771ec3d4112e84596e53a4cd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85845bb942dde352fc0abfdef5e46b99322a3aa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85845bb942dde352fc0abfdef5e46b99322a3aa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85845bb942dde352fc0abfdef5e46b99322a3aa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85845bb942dde352fc0abfdef5e46b99322a3aa1/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dedd42d511b6e49303a8da3f62486567122c5fc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dedd42d511b6e49303a8da3f62486567122c5fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dedd42d511b6e49303a8da3f62486567122c5fc4"}], "stats": {"total": 314, "additions": 117, "deletions": 197}, "files": [{"sha": "b7ab324ae9f6d1414a28ce32dcdb5620db4324cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85845bb942dde352fc0abfdef5e46b99322a3aa1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85845bb942dde352fc0abfdef5e46b99322a3aa1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85845bb942dde352fc0abfdef5e46b99322a3aa1", "patch": "@@ -1,3 +1,22 @@\n+2008-02-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (mov<mode>cc): Macroize expander from movsfcc,\n+\tmovdfcc and movxfcc using X87MODEF mode iterator and SSE_FLOAT_MODE_P\n+\tas insn constraint.\n+\t* config/i386/sse.md (<sse>_movup<ssemodesuffixf2c>): Macroize insn\n+\tfrom sse_movups adn sse2_movupd using SSEMODEF2P mode iterator and\n+\tSSE_VEC_FLOAT_MODE_P as insn constraint.\n+\t(<sse>_movmskp<ssemodesuffixf2c>): Ditto from similar patterns.\n+\t(sse4a_movnt<mode>): Macroize insn from sse4a_movntsf and\n+\tsse4a_movntdf using MODEF mode iterator.\n+\t(sse4a_vmmovnt<mode>): Macroize insn form sse4a_vmmovntv2df and\n+\tsse4a_vmmovntv4sf using SSEMODEF2P mode iterator.\n+\t(sse4_1_blendp<ssemodesuffixf2c>): Ditto from similar patterns.\n+\t(sse4_1_blendvp<ssemodesuffixf2c>): Ditto.\n+\t(sse4_1_dpp<ssemodesuffixf2c>): Ditto.\n+\t(sse4_1_roundp<ssemodesuffixf2c>): Ditto.\n+\t(sse4_1_rounds<ssemodesuffixf2c>): Ditto.\n+\n 2008-02-21  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.def (PAREN_EXPR): New tree code."}, {"sha": "92a37280f5f0c15ef1d35bc97553dc93288bb39b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 17, "deletions": 31, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85845bb942dde352fc0abfdef5e46b99322a3aa1/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85845bb942dde352fc0abfdef5e46b99322a3aa1/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=85845bb942dde352fc0abfdef5e46b99322a3aa1", "patch": "@@ -19373,7 +19373,7 @@\n \t\t\t (match_operand:DI 2 \"general_operand\" \"\")\n \t\t\t (match_operand:DI 3 \"general_operand\" \"\")))]\n   \"TARGET_64BIT\"\n-  \"if (!ix86_expand_int_movcc (operands)) FAIL; DONE;\")\n+  \"if (ix86_expand_int_movcc (operands)) DONE; else FAIL;\")\n \n (define_insn \"x86_movdicc_0_m1_rex64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -19427,7 +19427,7 @@\n \t\t\t (match_operand:SI 2 \"general_operand\" \"\")\n \t\t\t (match_operand:SI 3 \"general_operand\" \"\")))]\n   \"\"\n-  \"if (!ix86_expand_int_movcc (operands)) FAIL; DONE;\")\n+  \"if (ix86_expand_int_movcc (operands)) DONE; else FAIL;\")\n \n ;; Data flow gets confused by our desire for `sbbl reg,reg', and clearing\n ;; the register first winds up with `sbbl $0,reg', which is also weird.\n@@ -19485,7 +19485,7 @@\n \t\t\t (match_operand:HI 2 \"general_operand\" \"\")\n \t\t\t (match_operand:HI 3 \"general_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n-  \"if (!ix86_expand_int_movcc (operands)) FAIL; DONE;\")\n+  \"if (ix86_expand_int_movcc (operands)) DONE; else FAIL;\")\n \n (define_insn \"*movhicc_noc\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n@@ -19507,7 +19507,7 @@\n \t\t\t (match_operand:QI 2 \"general_operand\" \"\")\n \t\t\t (match_operand:QI 3 \"general_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n-  \"if (!ix86_expand_int_movcc (operands)) FAIL; DONE;\")\n+  \"if (ix86_expand_int_movcc (operands)) DONE; else FAIL;\")\n \n (define_insn_and_split \"*movqicc_noc\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r,r\")\n@@ -19529,13 +19529,15 @@\n   [(set_attr \"type\" \"icmov\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_expand \"movsfcc\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(if_then_else:SF (match_operand 1 \"comparison_operator\" \"\")\n-\t\t\t (match_operand:SF 2 \"register_operand\" \"\")\n-\t\t\t (match_operand:SF 3 \"register_operand\" \"\")))]\n-  \"(TARGET_80387 && TARGET_CMOVE) || TARGET_SSE_MATH\"\n-  \"if (! ix86_expand_fp_movcc (operands)) FAIL; DONE;\")\n+(define_expand \"mov<mode>cc\"\n+  [(set (match_operand:X87MODEF 0 \"register_operand\" \"\")\n+\t(if_then_else:X87MODEF\n+\t  (match_operand 1 \"comparison_operator\" \"\")\n+\t  (match_operand:X87MODEF 2 \"register_operand\" \"\")\n+\t  (match_operand:X87MODEF 3 \"register_operand\" \"\")))]\n+  \"(TARGET_80387 && TARGET_CMOVE)\n+   || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n+  \"if (ix86_expand_fp_movcc (operands)) DONE; else FAIL;\")\n \n (define_insn \"*movsfcc_1_387\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f,r,r\")\n@@ -19553,14 +19555,6 @@\n   [(set_attr \"type\" \"fcmov,fcmov,icmov,icmov\")\n    (set_attr \"mode\" \"SF,SF,SI,SI\")])\n \n-(define_expand \"movdfcc\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(if_then_else:DF (match_operand 1 \"comparison_operator\" \"\")\n-\t\t\t (match_operand:DF 2 \"register_operand\" \"\")\n-\t\t\t (match_operand:DF 3 \"register_operand\" \"\")))]\n-  \"(TARGET_80387 && TARGET_CMOVE) || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n-  \"if (! ix86_expand_fp_movcc (operands)) FAIL; DONE;\")\n-\n (define_insn \"*movdfcc_1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f,&r,&r\")\n \t(if_then_else:DF (match_operator 1 \"fcmov_comparison_operator\"\n@@ -19613,14 +19607,6 @@\n    split_di (operands+3, 1, operands+7, operands+8);\n    split_di (operands, 1, operands+2, operands+3);\")\n \n-(define_expand \"movxfcc\"\n-  [(set (match_operand:XF 0 \"register_operand\" \"\")\n-\t(if_then_else:XF (match_operand 1 \"comparison_operator\" \"\")\n-\t\t\t (match_operand:XF 2 \"register_operand\" \"\")\n-\t\t\t (match_operand:XF 3 \"register_operand\" \"\")))]\n-  \"TARGET_80387 && TARGET_CMOVE\"\n-  \"if (! ix86_expand_fp_movcc (operands)) FAIL; DONE;\")\n-\n (define_insn \"*movxfcc_1\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:XF (match_operator 1 \"fcmov_comparison_operator\"\n@@ -19734,31 +19720,31 @@\n    (match_operand:QI 2 \"register_operand\" \"\")\n    (match_operand:QI 3 \"const_int_operand\" \"\")]\n   \"\"\n-  \"if (!ix86_expand_int_addcc (operands)) FAIL; DONE;\")\n+  \"if (ix86_expand_int_addcc (operands)) DONE; else FAIL;\")\n \n (define_expand \"addhicc\"\n   [(match_operand:HI 0 \"register_operand\" \"\")\n    (match_operand 1 \"comparison_operator\" \"\")\n    (match_operand:HI 2 \"register_operand\" \"\")\n    (match_operand:HI 3 \"const_int_operand\" \"\")]\n   \"\"\n-  \"if (!ix86_expand_int_addcc (operands)) FAIL; DONE;\")\n+  \"if (ix86_expand_int_addcc (operands)) DONE; else FAIL;\")\n \n (define_expand \"addsicc\"\n   [(match_operand:SI 0 \"register_operand\" \"\")\n    (match_operand 1 \"comparison_operator\" \"\")\n    (match_operand:SI 2 \"register_operand\" \"\")\n    (match_operand:SI 3 \"const_int_operand\" \"\")]\n   \"\"\n-  \"if (!ix86_expand_int_addcc (operands)) FAIL; DONE;\")\n+  \"if (ix86_expand_int_addcc (operands)) DONE; else FAIL;\")\n \n (define_expand \"adddicc\"\n   [(match_operand:DI 0 \"register_operand\" \"\")\n    (match_operand 1 \"comparison_operator\" \"\")\n    (match_operand:DI 2 \"register_operand\" \"\")\n    (match_operand:DI 3 \"const_int_operand\" \"\")]\n   \"TARGET_64BIT\"\n-  \"if (!ix86_expand_int_addcc (operands)) FAIL; DONE;\")\n+  \"if (ix86_expand_int_addcc (operands)) DONE; else FAIL;\")\n \n \f\n ;; Misc patterns (?)"}, {"sha": "97250dbd2edf74f445c7036badddc8737401be33", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 81, "deletions": 166, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85845bb942dde352fc0abfdef5e46b99322a3aa1/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85845bb942dde352fc0abfdef5e46b99322a3aa1/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=85845bb942dde352fc0abfdef5e46b99322a3aa1", "patch": "@@ -243,23 +243,16 @@\n   DONE;\n })\n \n-(define_insn \"sse_movups\"\n-  [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,m\")\n-\t(unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm,x\")]\n-\t\t     UNSPEC_MOVU))]\n-  \"TARGET_SSE && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n-  \"movups\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V2DF\")])\n-\n-(define_insn \"sse2_movupd\"\n-  [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"=x,m\")\n-\t(unspec:V2DF [(match_operand:V2DF 1 \"nonimmediate_operand\" \"xm,x\")]\n-\t\t     UNSPEC_MOVU))]\n-  \"TARGET_SSE2 && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n-  \"movupd\\t{%1, %0|%0, %1}\"\n+(define_insn \"<sse>_movup<ssemodesuffixf2c>\"\n+  [(set (match_operand:SSEMODEF2P 0 \"nonimmediate_operand\" \"=x,m\")\n+\t(unspec:SSEMODEF2P\n+\t  [(match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"xm,x\")]\n+\t  UNSPEC_MOVU))]\n+  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\n+   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n+  \"movup<ssemodesuffixf2c>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V2DF\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"sse2_movdqu\"\n   [(set (match_operand:V16QI 0 \"nonimmediate_operand\" \"=x,m\")\n@@ -5424,23 +5417,15 @@\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"sse_movmskps\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:V4SF 1 \"register_operand\" \"x\")]\n-\t\t   UNSPEC_MOVMSK))]\n-  \"TARGET_SSE\"\n-  \"movmskps\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_insn \"sse2_movmskpd\"\n+(define_insn \"<sse>_movmskp<ssemodesuffixf2c>\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:V2DF 1 \"register_operand\" \"x\")]\n-\t\t   UNSPEC_MOVMSK))]\n-  \"TARGET_SSE2\"\n-  \"movmskpd\\t{%1, %0|%0, %1}\"\n+\t(unspec:SI\n+\t  [(match_operand:SSEMODEF2P 1 \"register_operand\" \"x\")]\n+\t  UNSPEC_MOVMSK))]\n+  \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n+  \"movmskp<ssemodesuffixf2c>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"mode\" \"V2DF\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"sse2_pmovmskb\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -5594,7 +5579,12 @@\n   \"monitor\"\n   [(set_attr \"length\" \"3\")])\n \n-;; SSSE3\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+;;\n+;; SSSE3 instructions\n+;;\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+\n (define_insn \"ssse3_phaddwv8hi3\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n \t(vec_concat:V8HI\n@@ -6213,45 +6203,27 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"sse4a_vmmovntv2df\"\n-  [(set (match_operand:DF 0 \"memory_operand\" \"=m\")\n-        (unspec:DF [(vec_select:DF\n-                      (match_operand:V2DF 1 \"register_operand\" \"x\")\n-                      (parallel [(const_int 0)]))]\n-                   UNSPEC_MOVNT))]\n-  \"TARGET_SSE4A\"\n-  \"movntsd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_insn \"sse4a_movntdf\"\n-  [(set (match_operand:DF 0 \"memory_operand\" \"=m\")\n-        (unspec:DF [(match_operand:DF 1 \"register_operand\" \"x\")]\n-                   UNSPEC_MOVNT))]\n-  \"TARGET_SSE4A\"\n-  \"movntsd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_insn \"sse4a_vmmovntv4sf\"\n-  [(set (match_operand:SF 0 \"memory_operand\" \"=m\")\n-\t(unspec:SF [(vec_select:SF\n-\t              (match_operand:V4SF 1 \"register_operand\" \"x\")\n-\t\t      (parallel [(const_int 0)]))]\n-\t\t   UNSPEC_MOVNT))]\n+(define_insn \"sse4a_movnt<mode>\"\n+  [(set (match_operand:MODEF 0 \"memory_operand\" \"=m\")\n+\t(unspec:MODEF\n+\t  [(match_operand:MODEF 1 \"register_operand\" \"x\")]\n+          UNSPEC_MOVNT))]\n   \"TARGET_SSE4A\"\n-  \"movntss\\t{%1, %0|%0, %1}\"\n+  \"movnts<ssemodefsuffix>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"SF\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"sse4a_movntsf\"\n-  [(set (match_operand:SF 0 \"memory_operand\" \"=m\")\n-\t(unspec:SF [(match_operand:SF 1 \"register_operand\" \"x\")]\n-\t\t   UNSPEC_MOVNT))]\n+(define_insn \"sse4a_vmmovnt<mode>\"\n+  [(set (match_operand:<ssescalarmode> 0 \"memory_operand\" \"=m\")\n+\t(unspec:<ssescalarmode>\n+\t  [(vec_select:<ssescalarmode>\n+\t     (match_operand:SSEMODEF2P 1 \"register_operand\" \"x\")\n+\t     (parallel [(const_int 0)]))]\n+\t  UNSPEC_MOVNT))]\n   \"TARGET_SSE4A\"\n-  \"movntss\\t{%1, %0|%0, %1}\"\n+  \"movnts<ssemodesuffixf2c>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"SF\")])\n+   (set_attr \"mode\" \"<ssescalarmode>\")])\n \n (define_insn \"sse4a_extrqi\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n@@ -6306,77 +6278,43 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"sse4_1_blendpd\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n-\t(vec_merge:V2DF\n-\t  (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")\n-\t  (match_operand:V2DF 1 \"register_operand\" \"0\")\n+(define_insn \"sse4_1_blendp<ssemodesuffixf2c>\"\n+  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n+\t(vec_merge:SSEMODEF2P\n+\t  (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")\n+\t  (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n \t  (match_operand:SI 3 \"const_0_to_3_operand\" \"n\")))]\n   \"TARGET_SSE4_1\"\n-  \"blendpd\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V2DF\")])\n-\n-(define_insn \"sse4_1_blendps\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(vec_merge:V4SF\n-\t  (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")\n-\t  (match_operand:V4SF 1 \"register_operand\" \"0\")\n-\t  (match_operand:SI 3 \"const_0_to_15_operand\" \"n\")))]\n-  \"TARGET_SSE4_1\"\n-  \"blendps\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_insn \"sse4_1_blendvpd\"\n-  [(set (match_operand:V2DF 0 \"reg_not_xmm0_operand\" \"=x\")\n-\t(unspec:V2DF [(match_operand:V2DF 1 \"reg_not_xmm0_operand\"  \"0\")\n-\t\t      (match_operand:V2DF 2 \"nonimm_not_xmm0_operand\" \"xm\")\n-\t\t      (match_operand:V2DF 3 \"register_operand\" \"Yz\")]\n-\t\t     UNSPEC_BLENDV))]\n-  \"TARGET_SSE4_1\"\n-  \"blendvpd\\t{%3, %2, %0|%0, %2, %3}\"\n+  \"blendp<ssemodesuffixf2c>\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V2DF\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"sse4_1_blendvps\"\n-  [(set (match_operand:V4SF 0 \"reg_not_xmm0_operand\" \"=x\")\n-\t(unspec:V4SF [(match_operand:V4SF 1 \"reg_not_xmm0_operand\" \"0\")\n-\t\t      (match_operand:V4SF 2 \"nonimm_not_xmm0_operand\" \"xm\")\n-\t\t      (match_operand:V4SF 3 \"register_operand\" \"Yz\")]\n-\t\t     UNSPEC_BLENDV))]\n+(define_insn \"sse4_1_blendvp<ssemodesuffixf2c>\"\n+  [(set (match_operand:SSEMODEF2P 0 \"reg_not_xmm0_operand\" \"=x\")\n+\t(unspec:SSEMODEF2P\n+\t  [(match_operand:SSEMODEF2P 1 \"reg_not_xmm0_operand\" \"0\")\n+\t   (match_operand:SSEMODEF2P 2 \"nonimm_not_xmm0_operand\" \"xm\")\n+\t   (match_operand:SSEMODEF2P 3 \"register_operand\" \"Yz\")]\n+\t  UNSPEC_BLENDV))]\n   \"TARGET_SSE4_1\"\n-  \"blendvps\\t{%3, %2, %0|%0, %2, %3}\"\n+  \"blendvp<ssemodesuffixf2c>\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_insn \"sse4_1_dppd\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DF [(match_operand:V2DF 1 \"nonimmediate_operand\" \"%0\")\n-\t\t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")\n-\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n-\t\t      UNSPEC_DP))]\n-  \"TARGET_SSE4_1\"\n-  \"dppd\\t{%3, %2, %0|%0, %2, %3}\"\n-  [(set_attr \"type\" \"ssemul\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V2DF\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"sse4_1_dpps\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"%0\")\n-\t\t      (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")\n-\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n-\t\t     UNSPEC_DP))]\n+(define_insn \"sse4_1_dpp<ssemodesuffixf2c>\"\n+  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n+\t(unspec:SSEMODEF2P\n+\t  [(match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"%0\")\n+\t   (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")\n+\t   (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n+\t  UNSPEC_DP))]\n   \"TARGET_SSE4_1\"\n-  \"dpps\\t{%3, %2, %0|%0, %2, %3}\"\n+  \"dpp<ssemodesuffixf2c>\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"ssemul\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"sse4_1_movntdqa\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n@@ -6824,55 +6762,32 @@\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"sse4_1_roundpd\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DF [(match_operand:V2DF 1 \"nonimmediate_operand\" \"xm\")\n-\t\t      (match_operand:SI 2 \"const_0_to_15_operand\" \"n\")]\n-\t\t     UNSPEC_ROUND))]\n-  \"TARGET_ROUND\"\n-  \"roundpd\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V2DF\")])\n-\n-(define_insn \"sse4_1_roundps\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")\n-\t\t      (match_operand:SI 2 \"const_0_to_15_operand\" \"n\")]\n-\t\t     UNSPEC_ROUND))]\n-  \"TARGET_ROUND\"\n-  \"roundps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_insn \"sse4_1_roundsd\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n-\t(vec_merge:V2DF\n-\t  (unspec:V2DF [(match_operand:V2DF 2 \"register_operand\" \"x\")\n-\t\t\t(match_operand:SI 3 \"const_0_to_15_operand\" \"n\")]\n-\t\t       UNSPEC_ROUND)\n-\t  (match_operand:V2DF 1 \"register_operand\" \"0\")\n-\t  (const_int 1)))]\n+(define_insn \"sse4_1_roundp<ssemodesuffixf2c>\"\n+  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n+\t(unspec:SSEMODEF2P\n+\t  [(match_operand:SSEMODEF2P 1 \"nonimmediate_operand\" \"xm\")\n+\t   (match_operand:SI 2 \"const_0_to_15_operand\" \"n\")]\n+\t  UNSPEC_ROUND))]\n   \"TARGET_ROUND\"\n-  \"roundsd\\t{%3, %2, %0|%0, %2, %3}\"\n+  \"roundp<ssemodesuffixf2c>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V2DF\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"sse4_1_roundss\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(vec_merge:V4SF\n-\t  (unspec:V4SF [(match_operand:V4SF 2 \"register_operand\" \"x\")\n-\t\t\t(match_operand:SI 3 \"const_0_to_15_operand\" \"n\")]\n-\t\t       UNSPEC_ROUND)\n-\t  (match_operand:V4SF 1 \"register_operand\" \"0\")\n+(define_insn \"sse4_1_rounds<ssemodesuffixf2c>\"\n+  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n+\t(vec_merge:SSEMODEF2P\n+\t  (unspec:SSEMODEF2P\n+\t    [(match_operand:SSEMODEF2P 2 \"register_operand\" \"x\")\n+\t     (match_operand:SI 3 \"const_0_to_15_operand\" \"n\")]\n+\t    UNSPEC_ROUND)\n+\t  (match_operand:SSEMODEF2P 1 \"register_operand\" \"0\")\n \t  (const_int 1)))]\n   \"TARGET_ROUND\"\n-  \"roundss\\t{%3, %2, %0|%0, %2, %3}\"\n+  \"rounds<ssemodesuffixf2c>\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"mode\" \"V4SF\")])\n+   (set_attr \"mode\" \"<MODE>\")])\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;"}]}