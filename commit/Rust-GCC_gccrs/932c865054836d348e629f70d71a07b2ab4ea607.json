{"sha": "932c865054836d348e629f70d71a07b2ab4ea607", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMyYzg2NTA1NDgzNmQzNDhlNjI5ZjcwZDcxYTA3YjJhYjRlYTYwNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-04-15T10:17:54Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-04-15T10:17:54Z"}, "message": "trans.c (call_to_gnu): Do not unnecessarily force side-effects of actual parameters before the call.\n\n\t* gcc-interface/trans.c (call_to_gnu): Do not unnecessarily force\n\tside-effects of actual parameters before the call.\n\nFrom-SVN: r158369", "tree": {"sha": "aa826ca1631bf85a3d9e79762dc859d1c01d5c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa826ca1631bf85a3d9e79762dc859d1c01d5c29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/932c865054836d348e629f70d71a07b2ab4ea607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/932c865054836d348e629f70d71a07b2ab4ea607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/932c865054836d348e629f70d71a07b2ab4ea607", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/932c865054836d348e629f70d71a07b2ab4ea607/comments", "author": null, "committer": null, "parents": [{"sha": "8ff6c6640bcff32c26f5a09e33ad61df15c96c55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff6c6640bcff32c26f5a09e33ad61df15c96c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff6c6640bcff32c26f5a09e33ad61df15c96c55"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "379631922ec72739ca35954fde2dda3baade35ae", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/932c865054836d348e629f70d71a07b2ab4ea607/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/932c865054836d348e629f70d71a07b2ab4ea607/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=932c865054836d348e629f70d71a07b2ab4ea607", "patch": "@@ -1,3 +1,8 @@\n+2010-04-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (call_to_gnu): Do not unnecessarily force\n+\tside-effects of actual parameters before the call.\n+\n 2010-04-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (validate_size): Reorder, remove obsolete test"}, {"sha": "adaa7ee53c9082f1b340da172849b73498e494fc", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/932c865054836d348e629f70d71a07b2ab4ea607/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/932c865054836d348e629f70d71a07b2ab4ea607/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=932c865054836d348e629f70d71a07b2ab4ea607", "patch": "@@ -2778,7 +2778,12 @@ call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target)\n \t    gnu_name_list = tree_cons (NULL_TREE, gnu_name, gnu_name_list);\n \n \t  if (!(gnu_formal && TREE_CODE (gnu_formal) == PARM_DECL))\n-\t    continue;\n+\t    {\n+\t      /* Make sure side-effects are evaluated before the call.  */\n+\t      if (TREE_SIDE_EFFECTS (gnu_name))\n+\t\tappend_to_statement_list (gnu_name, &gnu_before_list);\n+\t      continue;\n+\t    }\n \n \t  /* If this is 'Null_Parameter, pass a zero even though we are\n \t     dereferencing it.  */\n@@ -2849,22 +2854,11 @@ call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target)\n \n       if (length > 1)\n \t{\n-\t  tree gnu_name;\n-\n \t  /* The call sequence must contain one and only one call, even though\n \t     the function is const or pure.  So force a SAVE_EXPR.  */\n \t  gnu_call = build1 (SAVE_EXPR, TREE_TYPE (gnu_call), gnu_call);\n \t  TREE_SIDE_EFFECTS (gnu_call) = 1;\n \t  gnu_name_list = nreverse (gnu_name_list);\n-\n-\t  /* If any of the names had side-effects, ensure they are all\n-\t     evaluated before the call.  */\n-\t  for (gnu_name = gnu_name_list;\n-\t       gnu_name;\n-\t       gnu_name = TREE_CHAIN (gnu_name))\n-\t    if (TREE_SIDE_EFFECTS (TREE_VALUE (gnu_name)))\n-\t      append_to_statement_list (TREE_VALUE (gnu_name),\n-\t\t\t\t\t&gnu_before_list);\n \t}\n \n       if (Nkind (Name (gnat_node)) == N_Explicit_Dereference)"}]}