{"sha": "d8a1f0fb6410959cdba82bfc82e0d37bf102fe98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhMWYwZmI2NDEwOTU5Y2RiYTgyYmZjODJlMGQzN2JmMTAyZmU5OA==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2007-04-08T10:38:38Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2007-04-08T10:38:38Z"}, "message": "re PR target/29932 (avr-gcc wrongly optimizes bit sets/resets for IO register 0x20)\n\n\tPR target/29932\n\t* config/avr/predicates.md (io_address_operand): Delete predicate.\n\t(low_io_address_operand): Don't use 'mode' argument.\n\t(higth_io_address_operand): Rename ...\n\t(high_io_address_operand): ... to this. Don't use 'mode' argument.\n\t* config/avr/avr.md (*sbix_branch_tmp, *sbix_branch_tmp_bit7): Adjust\n\tfor above change.\n\nFrom-SVN: r123657", "tree": {"sha": "aa38b487c8fc15a410916a04e0923acbcc88d381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa38b487c8fc15a410916a04e0923acbcc88d381"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98/comments", "author": null, "committer": null, "parents": [{"sha": "92447572b4c59ce6349d01a73032622ba37ff7ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92447572b4c59ce6349d01a73032622ba37ff7ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92447572b4c59ce6349d01a73032622ba37ff7ac"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "d221bbf1c9b4fdecff9b37747ae2ad817f745803", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8a1f0fb6410959cdba82bfc82e0d37bf102fe98", "patch": "@@ -1,3 +1,13 @@\n+2007-04-08  Anatoly Sokolov <aesok@post.ru>\n+\n+\tPR target/29932\n+\t* config/avr/predicates.md (io_address_operand): Delete predicate.\n+\t(low_io_address_operand): Don't use 'mode' argument.\n+\t(higth_io_address_operand): Rename ...\n+\t(high_io_address_operand): ... to this. Don't use 'mode' argument.\n+\t* config/avr/avr.md (*sbix_branch_tmp, *sbix_branch_tmp_bit7): Adjust\n+\tfor above change.\n+\n 2007-04-07  Daniel Berlin  <dberlin@dberlin.org>\n \n \tRevert change removing staticp."}, {"sha": "a71e76c9f56e72042fce523d83773c8496a18719", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=d8a1f0fb6410959cdba82bfc82e0d37bf102fe98", "patch": "@@ -2392,7 +2392,7 @@\n \t(if_then_else\n \t (match_operator 0 \"eqne_operator\"\n \t\t\t [(zero_extract\n-\t\t\t   (mem:QI (match_operand 1 \"higth_io_address_operand\" \"n\"))\n+\t\t\t   (mem:QI (match_operand 1 \"high_io_address_operand\" \"n\"))\n \t\t\t   (const_int 1)\n \t\t\t   (match_operand 2 \"const_int_operand\" \"n\"))\n \t\t\t  (const_int 0)])\n@@ -2413,7 +2413,7 @@\n   [(set (pc)\n \t(if_then_else\n \t (match_operator 0 \"gelt_operator\"\n-\t\t\t [(mem:QI (match_operand 1 \"higth_io_address_operand\" \"n\"))\n+\t\t\t [(mem:QI (match_operand 1 \"high_io_address_operand\" \"n\"))\n \t\t\t  (const_int 0)])\n \t (label_ref (match_operand 2 \"\" \"\"))\n \t (pc)))]"}, {"sha": "914ad9bd47bed2eec900b3936a7a7b23d91a9eb3", "filename": "gcc/config/avr/predicates.md", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98/gcc%2Fconfig%2Favr%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a1f0fb6410959cdba82bfc82e0d37bf102fe98/gcc%2Fconfig%2Favr%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fpredicates.md?ref=d8a1f0fb6410959cdba82bfc82e0d37bf102fe98", "patch": "@@ -43,23 +43,15 @@\n   (and (match_code \"reg\")\n        (match_test \"REGNO (op) == REG_SP\")))\n \n-;; Return true if OP is a valid address for an I/O register.\n-(define_predicate \"io_address_operand\"\n-  (and (match_code \"const_int\")\n-       (match_test \"INTVAL (op) >= 0x20 \n-                    && INTVAL (op) <= 0x60 - GET_MODE_SIZE (mode)\")))\n-\n ;; Return true if OP is a valid address for lower half of I/O space.\n (define_predicate \"low_io_address_operand\"\n   (and (match_code \"const_int\")\n-       (match_test \"INTVAL (op) >= 0x20 \n-                    && INTVAL (op) <= 0x40 - GET_MODE_SIZE (mode)\")))\n-       \n-;; Return true if OP is a valid address for higth half of I/O space.\n-(define_predicate \"higth_io_address_operand\"\n+       (match_test \"IN_RANGE((INTVAL (op)), 0x20, 0x3F)\")))\n+\n+;; Return true if OP is a valid address for high half of I/O space.\n+(define_predicate \"high_io_address_operand\"\n   (and (match_code \"const_int\")\n-       (match_test \"INTVAL (op) >= 0x40 \n-                    && INTVAL (op) <= 0x60 - GET_MODE_SIZE (mode)\")))\n+       (match_test \"IN_RANGE((INTVAL (op)), 0x40, 0x5F)\")))\n \n ;; Return 1 if OP is the zero constant for MODE.\n (define_predicate \"const0_operand\""}]}