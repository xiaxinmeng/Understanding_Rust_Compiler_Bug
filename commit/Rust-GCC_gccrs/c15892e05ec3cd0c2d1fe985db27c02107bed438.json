{"sha": "c15892e05ec3cd0c2d1fe985db27c02107bed438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE1ODkyZTA1ZWMzY2QwYzJkMWZlOTg1ZGIyN2MwMjEwN2JlZDQzOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-03-10T23:51:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-03-10T23:51:31Z"}, "message": "locale_facets.tcc (time_put::do_put): Consider sizeof(char_type) in allocating the buffer.\n\n2002-03-10  Paolo Carlini  <pcarlini@unitus.it>\n\n        * include/bits/locale_facets.tcc (time_put::do_put):\n\tConsider sizeof(char_type) in allocating the buffer.\n\n\t* include/bits/locale_facets.tcc (collate::do_tranform):\n\tRemove redundant variable.\n\nFrom-SVN: r50553", "tree": {"sha": "ad9fb6c331ee8bfc3c20b50083661d2878b577bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad9fb6c331ee8bfc3c20b50083661d2878b577bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c15892e05ec3cd0c2d1fe985db27c02107bed438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15892e05ec3cd0c2d1fe985db27c02107bed438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c15892e05ec3cd0c2d1fe985db27c02107bed438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c15892e05ec3cd0c2d1fe985db27c02107bed438/comments", "author": null, "committer": null, "parents": [{"sha": "561c9153eb5c0824bc318f06dbdd4563d064e235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/561c9153eb5c0824bc318f06dbdd4563d064e235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/561c9153eb5c0824bc318f06dbdd4563d064e235"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "7cdebce569f3a8cab5307e69a760f9c888bf1e47", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15892e05ec3cd0c2d1fe985db27c02107bed438/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15892e05ec3cd0c2d1fe985db27c02107bed438/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c15892e05ec3cd0c2d1fe985db27c02107bed438", "patch": "@@ -1,12 +1,20 @@\n+2002-03-10  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/locale_facets.tcc (time_put::do_put):\n+\tConsider sizeof(char_type) in allocating the buffer.\n+\n+\t* include/bits/locale_facets.tcc (collate::do_tranform):\n+\tRemove redundant variable.\n+\n 2002-03-10  Ulrich Drepper  <drepper@redhat.com>\n             Paolo Carlini  <pcarlini@unitus.it>\n \n-        * config/locale/generic/collate_members.cc\n-        (collate<char,wchar_t>::_M_compare_helper): normalize\n-        values returned by strcoll and wcscoll.\n-        * config/locale/gnu/collate_members.cc\n-        (collate<char,wchar_t>::_M_compare_helper): ditto\n-        for __strcoll_l and __wcscoll_l.\n+\t* config/locale/generic/collate_members.cc\n+\t(collate<char,wchar_t>::_M_compare_helper): normalize\n+\tvalues returned by strcoll and wcscoll.\n+\t* config/locale/gnu/collate_members.cc\n+\t(collate<char,wchar_t>::_M_compare_helper): ditto\n+\tfor __strcoll_l and __wcscoll_l.\n \n 2002-03-10  Anthony Green  <green@redhat.com>\n "}, {"sha": "37ad6b348cb0b6e38b6e2bec9c298c81673851a1", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c15892e05ec3cd0c2d1fe985db27c02107bed438/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c15892e05ec3cd0c2d1fe985db27c02107bed438/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=c15892e05ec3cd0c2d1fe985db27c02107bed438", "patch": "@@ -1795,7 +1795,8 @@ namespace std\n       // NB: This size is arbitrary. Should this be a data member,\n       // initialized at construction?\n       const size_t __maxlen = 64;\n-      char_type* __res = static_cast<char_type*>(__builtin_alloca(__maxlen));\n+      char_type* __res =\n+\tstatic_cast<char_type*>(__builtin_alloca(sizeof(char_type) * __maxlen));\n \n       // NB: In IEE 1003.1-200x, and perhaps other locale models, it\n       // is possible that the format character will be longer than one\n@@ -1856,14 +1857,15 @@ namespace std\n     {\n       size_t __len = (__hi - __lo) * 2;\n       // First try a buffer perhaps big enough.\n-      _CharT* __c = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __len));\n+      _CharT* __c =\n+\tstatic_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __len));\n       size_t __res = _M_transform_helper(__c, __lo, __len);\n       // If the buffer was not large enough, try again with the correct size.\n       if (__res >= __len)\n \t{\n \t  _CharT* __c2 =\n \t    static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * (__res + 1)));\n-\t  size_t __res2 = _M_transform_helper(__c2, __lo, __res + 1);\n+\t  _M_transform_helper(__c2, __lo, __res + 1);\n \t  return string_type(__c2);\n \t}\n       return string_type(__c);"}]}