{"sha": "dae5882f9ce598ed5c3adb89e21989f41b547bbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFlNTg4MmY5Y2U1OThlZDVjM2FkYjg5ZTIxOTg5ZjQxYjU0N2JiZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2009-11-19T08:57:02Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-11-19T08:57:02Z"}, "message": "gfortran.texi (Interoperable Subroutines and Functions): Fix example.\n\n2009-11-19  Tobias Burnus  <burnus@net-b.de>\n\n       * gfortran.texi (Interoperable Subroutines and Functions): Fix\n       example.\n\nFrom-SVN: r154326", "tree": {"sha": "e00f38bf10f27b7f04e1aed398e6b9e9378fa3f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e00f38bf10f27b7f04e1aed398e6b9e9378fa3f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dae5882f9ce598ed5c3adb89e21989f41b547bbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dae5882f9ce598ed5c3adb89e21989f41b547bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dae5882f9ce598ed5c3adb89e21989f41b547bbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dae5882f9ce598ed5c3adb89e21989f41b547bbd/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87af78d462a57ed24e57a87e978cd0820748b236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87af78d462a57ed24e57a87e978cd0820748b236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87af78d462a57ed24e57a87e978cd0820748b236"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "fc0a033568414cf63b2d69745f8c276903c1ebbf", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dae5882f9ce598ed5c3adb89e21989f41b547bbd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dae5882f9ce598ed5c3adb89e21989f41b547bbd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=dae5882f9ce598ed5c3adb89e21989f41b547bbd", "patch": "@@ -1,3 +1,8 @@\n+2009-11-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.texi (Interoperable Subroutines and Functions): Fix\n+\texample.\n+\n 2009-11-18  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/42072"}, {"sha": "1430c8a658e556b129f413553e9c8eac4cc1aa33", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dae5882f9ce598ed5c3adb89e21989f41b547bbd/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dae5882f9ce598ed5c3adb89e21989f41b547bbd/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=dae5882f9ce598ed5c3adb89e21989f41b547bbd", "patch": "@@ -2009,9 +2009,10 @@ Thus the following C prototype\n matches the Fortran declaration\n \n @smallexample\n-  integer(c_int) func(i,j)\n-    integer, VALUE :: i\n-    integer :: j\n+  integer(c_int) function func(i,j)\n+    use iso_c_binding, only: c_int\n+    integer(c_int), VALUE :: i\n+    integer(c_int) :: j\n @end smallexample\n \n Note that pointer arguments also frequently need the @code{VALUE} attribute."}]}