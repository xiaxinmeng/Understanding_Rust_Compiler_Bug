{"sha": "9b39cba9abd47df5541e789f1ec22c80a7985e23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIzOWNiYTlhYmQ0N2RmNTU0MWU3ODlmMWVjMjJjODBhNzk4NWUyMw==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "basile@starynkevitch.net", "date": "2009-09-29T18:26:33Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-09-29T18:26:33Z"}, "message": "gengtype.c (plugin_output): New.\n\n2009-09-29  Basile Starynkevitch  <basile@starynkevitch.net>\n            Rafael Avila de Espindola  <espindola@google.com>\n\n\t* gengtype.c (plugin_output): New.\n\t(get_output_file_with_visibility): Return plugin_output for plugins.\n\t(main): Parse and use the -P option.\n\t* gty.texi: Update the command line format.\n\n\nCo-Authored-By: Rafael Avila de Espindola <espindola@google.com>\n\nFrom-SVN: r152286", "tree": {"sha": "02fcfbb7538bcafd8570080f04f2e1e299e0e426", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02fcfbb7538bcafd8570080f04f2e1e299e0e426"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b39cba9abd47df5541e789f1ec22c80a7985e23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b39cba9abd47df5541e789f1ec22c80a7985e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b39cba9abd47df5541e789f1ec22c80a7985e23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b39cba9abd47df5541e789f1ec22c80a7985e23/comments", "author": {"login": "bstarynk", "id": 90412, "node_id": "MDQ6VXNlcjkwNDEy", "avatar_url": "https://avatars.githubusercontent.com/u/90412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstarynk", "html_url": "https://github.com/bstarynk", "followers_url": "https://api.github.com/users/bstarynk/followers", "following_url": "https://api.github.com/users/bstarynk/following{/other_user}", "gists_url": "https://api.github.com/users/bstarynk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstarynk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstarynk/subscriptions", "organizations_url": "https://api.github.com/users/bstarynk/orgs", "repos_url": "https://api.github.com/users/bstarynk/repos", "events_url": "https://api.github.com/users/bstarynk/events{/privacy}", "received_events_url": "https://api.github.com/users/bstarynk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a0ce41d05a77854b2a813fb16a8d84aa2e81f74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0ce41d05a77854b2a813fb16a8d84aa2e81f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a0ce41d05a77854b2a813fb16a8d84aa2e81f74"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "ac2045b7091e95a8acf9cd1142401f62fa4444a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b39cba9abd47df5541e789f1ec22c80a7985e23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b39cba9abd47df5541e789f1ec22c80a7985e23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b39cba9abd47df5541e789f1ec22c80a7985e23", "patch": "@@ -1,3 +1,11 @@\n+2009-09-29  Basile Starynkevitch  <basile@starynkevitch.net>\n+            Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* gengtype.c (plugin_output): New.\n+\t(get_output_file_with_visibility): Return plugin_output for plugins.\n+\t(main): Parse and use the -P option.\n+\t* gty.texi: Update the command line format.\n+\n 2009-09-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/41438"}, {"sha": "56da9b55fc97cdf34a7c748d3f0e451bb8044228", "filename": "gcc/doc/gty.texi", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b39cba9abd47df5541e789f1ec22c80a7985e23/gcc%2Fdoc%2Fgty.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b39cba9abd47df5541e789f1ec22c80a7985e23/gcc%2Fdoc%2Fgty.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgty.texi?ref=9b39cba9abd47df5541e789f1ec22c80a7985e23", "patch": "@@ -451,11 +451,10 @@ somewhere.  It will be called @file{gtype-@var{lang}.h}, where\n @var{lang} is the name of the subdirectory the language is contained in.\n \n Plugins can add additional root tables.  Run the @code{gengtype}\n-utility in plugin mode as @code{gengtype -p @var{source-dir}\n+utility in plugin mode as @code{gengtype -P pluginout.h @var{source-dir}\n @var{file-list} @var{plugin*.c}} with your plugin files\n-@var{plugin*.c} using @code{GTY} to generate the corresponding\n-@var{gt-plugin*.h} files.  The GCC build tree is needed to be present in\n-that mode.\n+@var{plugin*.c} using @code{GTY} to generate the @var{pluginout.h} file.\n+The GCC build tree is needed to be present in that mode.\n \n \n @node Invoking the garbage collector"}, {"sha": "bb067368db4675b7c5e9e080ff4f91f6536fb162", "filename": "gcc/gengtype.c", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b39cba9abd47df5541e789f1ec22c80a7985e23/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b39cba9abd47df5541e789f1ec22c80a7985e23/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=9b39cba9abd47df5541e789f1ec22c80a7985e23", "patch": "@@ -145,6 +145,8 @@ static outf_p output_files;\n    directory.  */\n static char** plugin_files;\n static size_t nb_plugin_files;\n+/* the generated plugin output name & file */\n+static outf_p plugin_output;\n \n /* The output header file that is included into pretty much every\n    source file.  */\n@@ -1714,15 +1716,14 @@ get_output_file_with_visibility (const char *input_file)\n \n   /* In plugin mode, return NULL unless the input_file is one of the\n      plugin_files.  */\n-  if (plugin_files && nb_plugin_files > 0) \n-    { \n-      int ix= -1;\n+  if (plugin_files)\n+    {\n       size_t i;\n-      for (i = 0; i < nb_plugin_files && ix < 0; i++)\n-      if (strcmp (input_file, plugin_files[i]) == 0) \n-\tix = i;\n-      if (ix < 0) \n-\treturn NULL;\n+      for (i = 0; i < nb_plugin_files; i++)\n+\tif (strcmp (input_file, plugin_files[i]) == 0)\n+\t  return plugin_output;\n+\n+      return NULL;\n     }\n \n   /* Determine the output file name.  */\n@@ -3667,20 +3668,24 @@ main (int argc, char **argv)\n   size_t i;\n   static struct fileloc pos = { this_file, 0 };\n   char* inputlist = 0;\n+  outf_p output_header;\n+  char* plugin_output_filename = NULL;\n   /* fatal uses this */\n   progname = \"gengtype\";\n \n-  if (argc >= 5 && !strcmp (argv[1], \"-p\")) \n+  if (argc >= 6 && !strcmp (argv[1], \"-P\"))\n     {\n-      srcdir = argv[2];\n-      inputlist = argv[3];\n-      nb_plugin_files = argc-4;\n+      plugin_output_filename = argv[2];\n+      plugin_output = create_file (\"GCC\", plugin_output_filename);\n+      srcdir = argv[3];\n+      inputlist = argv[4];\n+      nb_plugin_files = argc - 5;\n       plugin_files = XCNEWVEC (char *, nb_plugin_files);\n       for (i = 0; i < nb_plugin_files; i++)\n       {\n         /* Place an all zero lang_bitmap before the plugin file\n \t   name.  */\n-        char *name = argv[i + 4];\n+        char *name = argv[i + 5];\n         int len = strlen(name) + 1 + sizeof (lang_bitmap);\n         plugin_files[i] = XCNEWVEC (char, len) + sizeof (lang_bitmap);\n         strcpy (plugin_files[i], name);\n@@ -3692,7 +3697,8 @@ main (int argc, char **argv)\n       inputlist = argv[2];\n     } \n   else\n-    fatal (\"usage: gengtype [-p] srcdir input-list [file1 file2 ... fileN]\");\n+    fatal (\"usage: gengtype [-P pluginout.h] srcdir input-list \"\n+           \"[file1 file2 ... fileN]\");\n \n   srcdir_len = strlen (srcdir);\n \n@@ -3728,7 +3734,8 @@ main (int argc, char **argv)\n \n   open_base_files ();\n   write_enum_defn (structures, param_structs);\n-  write_types (header_file, structures, param_structs, &ggc_wtd);\n+  output_header = plugin_output ? plugin_output : header_file;\n+  write_types (output_header, structures, param_structs, &ggc_wtd);\n   if (plugin_files == NULL)\n     {\n       write_types (header_file, structures, param_structs, &pch_wtd);"}]}