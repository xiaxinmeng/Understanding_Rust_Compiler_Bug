{"sha": "d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNlYjkwMmY3ZjQ1Y2MyMGI1ODAyYjJlZjNjODViODhmZGVjNTJjMA==", "commit": {"author": {"name": "Siddhesh Poyarekar", "email": "siddhesh@sourceware.org", "date": "2018-02-20T11:11:31Z"}, "committer": {"name": "Siddhesh Poyarekar", "email": "siddhesh@gcc.gnu.org", "date": "2018-02-20T11:11:31Z"}, "message": "c++: Fix spurious fallthrough warning on break\n\nThe C++ frontend generates a break that results in the fallthrough\nwarning misfiring in nested switch blocks where cases in the inner\nswitch block return, rendering the break pointless.  The fallthrough\ndetection in finish_break_stmt does not work either because the\ncondition is encoded as an IF_STMT and not a COND_EXPR.\n\nFix this by adding a condition for IF_STMT in the\nlanghooks.block_may_fallthru for C++.  Fix tested on x86_64.\n\ngcc/cp\n        * cp-objcp-common.c (cxx_block_may_fallthru): Add case for\n\t        IF_STMT.\n\ngcc/testsuite\n        * g++.dg/nested-switch.C: New test case.\n\nFrom-SVN: r257843", "tree": {"sha": "d2a38f0b7b33dc609127d7b35d5e8333ffcf2b21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2a38f0b7b33dc609127d7b35d5e8333ffcf2b21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0/comments", "author": {"login": "siddhesh", "id": 158582, "node_id": "MDQ6VXNlcjE1ODU4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/158582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddhesh", "html_url": "https://github.com/siddhesh", "followers_url": "https://api.github.com/users/siddhesh/followers", "following_url": "https://api.github.com/users/siddhesh/following{/other_user}", "gists_url": "https://api.github.com/users/siddhesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddhesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddhesh/subscriptions", "organizations_url": "https://api.github.com/users/siddhesh/orgs", "repos_url": "https://api.github.com/users/siddhesh/repos", "events_url": "https://api.github.com/users/siddhesh/events{/privacy}", "received_events_url": "https://api.github.com/users/siddhesh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5bbccd92506c4d260eca29d12fa30c75aaaee65b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bbccd92506c4d260eca29d12fa30c75aaaee65b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bbccd92506c4d260eca29d12fa30c75aaaee65b"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "dd408e0bf68709b0e314e75fc41a88786cbaeab7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0", "patch": "@@ -1,3 +1,8 @@\n+2018-02-20  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n+\n+\t* cp-objcp-common.c (cxx_block_may_fallthru): Add case for\n+\tIF_STMT.\n+\n 2018-02-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84446"}, {"sha": "5289a89e4869f6473e587c480a1f0aa6e97483fa", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0", "patch": "@@ -349,6 +349,11 @@ cxx_block_may_fallthru (const_tree stmt)\n     case THROW_EXPR:\n       return false;\n \n+    case IF_STMT:\n+      if (block_may_fallthru (THEN_CLAUSE (stmt)))\n+\treturn true;\n+      return block_may_fallthru (ELSE_CLAUSE (stmt));\n+\n     case SWITCH_STMT:\n       return (!SWITCH_STMT_ALL_CASES_P (stmt)\n \t      || !SWITCH_STMT_NO_BREAK_P (stmt)"}, {"sha": "cfae982f6942607b30d2fe5f7009ebed74428ddd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0", "patch": "@@ -1,3 +1,7 @@\n+2018-02-20  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n+\n+\t* g++.dg/warn/Wimplicit-fallthrough-3.C: New test case.\n+\n 2018-02-20  Martin Liska  <mliska@suse.cz>\n \n \tPR c/84310"}, {"sha": "2f06817d9ee8a2296187402dad589a958bf64158", "filename": "gcc/testsuite/g++.dg/warn/Wimplicit-fallthrough-3.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWimplicit-fallthrough-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWimplicit-fallthrough-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWimplicit-fallthrough-3.C?ref=d3eb902f7f45cc20b5802b2ef3c85b88fdec52c0", "patch": "@@ -0,0 +1,31 @@\n+// Verify that there are no spurious warnings in nested switch statements due\n+// to the unnecessary break in the inner switch block.\n+// { dg-do compile }\n+// { dg-options \"-Wimplicit-fallthrough\" } */\n+\n+int\n+foo (int c1, int c2, int c3)\n+{\n+  switch (c2)\n+    {\n+    case 0:   \n+      switch (c3)\t// { dg-bogus \"may fall through\" }\n+\t{\n+\tcase 0:\n+\t  if (c1)\n+\t    return 1;\n+\t  else\n+\t    return 2;\n+\t  break;\n+\n+\tdefault:\n+\t  return 3;\n+\t}\n+\n+    case 1: \n+      return 4;\n+    default:\n+      return 5;\n+      break;\n+    }\n+}"}]}