{"sha": "49c9a88b3e3b0f8890c26a6fe0d553a86b127f5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDljOWE4OGIzZTNiMGY4ODkwYzI2YTZmZTBkNTUzYTg2YjEyN2Y1Zg==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-09-06T09:31:05Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-09-09T14:43:53Z"}, "message": "type-bounds wip", "tree": {"sha": "8c76bb76e52964078c9a63add27469780585d4c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c76bb76e52964078c9a63add27469780585d4c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49c9a88b3e3b0f8890c26a6fe0d553a86b127f5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c9a88b3e3b0f8890c26a6fe0d553a86b127f5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49c9a88b3e3b0f8890c26a6fe0d553a86b127f5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c9a88b3e3b0f8890c26a6fe0d553a86b127f5f/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f60bd6fe2db6831762e243577515824e2fca5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55f60bd6fe2db6831762e243577515824e2fca5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55f60bd6fe2db6831762e243577515824e2fca5c"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "49aa2faf2c681b6a4384593d837492751da25954", "filename": "gcc/rust/typecheck/rust-hir-trait-resolve.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49c9a88b3e3b0f8890c26a6fe0d553a86b127f5f/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49c9a88b3e3b0f8890c26a6fe0d553a86b127f5f/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.h?ref=49c9a88b3e3b0f8890c26a6fe0d553a86b127f5f", "patch": "@@ -113,6 +113,10 @@ class TraitResolver : public TypeCheckBase\n \treturn tref;\n       }\n \n+    // Check if there is a super-trait, and apply this bound to the Self\n+    // TypeParam\n+    // FIXME\n+\n     TyTy::BaseType *self = nullptr;\n     std::vector<TyTy::SubstitutionParamMapping> substitutions;\n     for (auto &generic_param : trait_reference->get_generic_params ())"}]}