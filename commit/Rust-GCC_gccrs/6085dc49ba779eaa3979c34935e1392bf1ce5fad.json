{"sha": "6085dc49ba779eaa3979c34935e1392bf1ce5fad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA4NWRjNDliYTc3OWVhYTM5NzljMzQ5MzVlMTM5MmJmMWNlNWZhZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-01-15T18:04:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-01-15T18:04:31Z"}, "message": "re PR libstdc++/25626 (Valarray vs non-POD)\n\n2006-01-15  Paolo Carlini  <pcarlini@suse.de>\n\t    Gabriel Dos Reis  <gdr@integrable-solutions.net>\n\n\tPR libstdc++/25626\n\t* include/std/std_valarray.h (valarray(const slice_array<>&),\n\tvalarray(const gslice_array<>&), valarray(const mask_array<>&),\n\tvalarray(const indirect_array<>&), valarray(const _Expr<>&)):\n\tForward to __valarray_copy_construct, not __valarray_copy.\n\t* include/bits/valarray_array.h\n\t(__valarray_copy_construct(_Array<>, _Array<>, _Array<>, size_t),\n\t__valarray_copy_construct(_Array<>, size_t, size_t, _Array<>)):\n\tNew.\n\nCo-Authored-By: Gabriel Dos Reis <gdr@integrable-solutions.net>\n\nFrom-SVN: r109726", "tree": {"sha": "6223d1c6cedf99f9f5ee1f7ebabda89d9e9b89b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6223d1c6cedf99f9f5ee1f7ebabda89d9e9b89b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6085dc49ba779eaa3979c34935e1392bf1ce5fad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6085dc49ba779eaa3979c34935e1392bf1ce5fad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6085dc49ba779eaa3979c34935e1392bf1ce5fad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6085dc49ba779eaa3979c34935e1392bf1ce5fad/comments", "author": null, "committer": null, "parents": [{"sha": "fd22159fe7d37e7b709c36eb264b54c7ca81e182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd22159fe7d37e7b709c36eb264b54c7ca81e182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd22159fe7d37e7b709c36eb264b54c7ca81e182"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "285e04524aca392c66b76ec4f3132527712890fa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6085dc49ba779eaa3979c34935e1392bf1ce5fad/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6085dc49ba779eaa3979c34935e1392bf1ce5fad/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6085dc49ba779eaa3979c34935e1392bf1ce5fad", "patch": "@@ -1,3 +1,16 @@\n+2006-01-15  Paolo Carlini  <pcarlini@suse.de>\n+\t    Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\tPR libstdc++/25626\n+\t* include/std/std_valarray.h (valarray(const slice_array<>&),\n+\tvalarray(const gslice_array<>&), valarray(const mask_array<>&),\n+\tvalarray(const indirect_array<>&), valarray(const _Expr<>&)):\n+\tForward to __valarray_copy_construct, not __valarray_copy.\n+\t* include/bits/valarray_array.h\n+\t(__valarray_copy_construct(_Array<>, _Array<>, _Array<>, size_t),\n+\t__valarray_copy_construct(_Array<>, size_t, size_t, _Array<>)):\n+\tNew.\n+\n 2006-01-15  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/tr1/8_c_compatibility/complex/overloads_int.cc:"}, {"sha": "06924fe3ed52d242863c7471e21780ec0659ebe3", "filename": "libstdc++-v3/include/bits/valarray_array.h", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6085dc49ba779eaa3979c34935e1392bf1ce5fad/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6085dc49ba779eaa3979c34935e1392bf1ce5fad/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_array.h?ref=6085dc49ba779eaa3979c34935e1392bf1ce5fad", "patch": "@@ -1,6 +1,6 @@\n // The template and inlines for the -*- C++ -*- internal _Array helper class.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2003, 2004, 2005, 2006\n //  Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -428,6 +428,22 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       _Tp* const __restrict__ _M_data;\n     };\n \n+\n+  // Copy-construct plain array __b[<__n>] from indexed array __a[__i[<__n>]]\n+  template<typename _Tp>\n+    inline void\n+    __valarray_copy_construct(_Array<_Tp> __a, _Array<size_t> __i,\n+\t\t\t      _Array<_Tp> __b, size_t __n)\n+    { std::__valarray_copy_construct(__a._M_data, __i._M_data,\n+\t\t\t\t     __b._M_data, __n); }\n+\n+  // Copy-construct plain array __b[<__n>] from strided array __a[<__n : __s>]\n+  template<typename _Tp>\n+    inline void\n+    __valarray_copy_construct(_Array<_Tp> __a, size_t __n, size_t __s,\n+\t\t\t      _Array<_Tp> __b)\n+    { std::__valarray_copy_construct(__a._M_data, __n, __s, __b._M_data); }\n+\n   template<typename _Tp>\n     inline void\n     __valarray_fill (_Array<_Tp> __a, size_t __n, const _Tp& __t)"}, {"sha": "ada7aea4062600beb8e37a4d7cf26baa737c772f", "filename": "libstdc++-v3/include/std/std_valarray.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6085dc49ba779eaa3979c34935e1392bf1ce5fad/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_valarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6085dc49ba779eaa3979c34935e1392bf1ce5fad/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_valarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_valarray.h?ref=6085dc49ba779eaa3979c34935e1392bf1ce5fad", "patch": "@@ -1,6 +1,6 @@\n // The template and inlines for the -*- C++ -*- valarray class.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -583,7 +583,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     valarray<_Tp>::valarray(const slice_array<_Tp>& __sa)\n     : _M_size(__sa._M_sz), _M_data(__valarray_get_storage<_Tp>(__sa._M_sz))\n     {\n-      std::__valarray_copy\n+      std::__valarray_copy_construct\n \t(__sa._M_array, __sa._M_sz, __sa._M_stride, _Array<_Tp>(_M_data));\n     }\n \n@@ -593,7 +593,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     : _M_size(__ga._M_index.size()),\n       _M_data(__valarray_get_storage<_Tp>(_M_size))\n     {\n-      std::__valarray_copy\n+      std::__valarray_copy_construct\n \t(__ga._M_array, _Array<size_t>(__ga._M_index),\n \t _Array<_Tp>(_M_data), _M_size);\n     }\n@@ -603,7 +603,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     valarray<_Tp>::valarray(const mask_array<_Tp>& __ma)\n     : _M_size(__ma._M_sz), _M_data(__valarray_get_storage<_Tp>(__ma._M_sz))\n     {\n-      std::__valarray_copy\n+      std::__valarray_copy_construct\n \t(__ma._M_array, __ma._M_mask, _Array<_Tp>(_M_data), _M_size);\n     }\n \n@@ -612,15 +612,15 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     valarray<_Tp>::valarray(const indirect_array<_Tp>& __ia)\n     : _M_size(__ia._M_sz), _M_data(__valarray_get_storage<_Tp>(__ia._M_sz))\n     {\n-      std::__valarray_copy\n+      std::__valarray_copy_construct\n \t(__ia._M_array, __ia._M_index, _Array<_Tp>(_M_data), _M_size);\n     }\n \n   template<typename _Tp> template<class _Dom>\n     inline\n     valarray<_Tp>::valarray(const _Expr<_Dom, _Tp>& __e)\n     : _M_size(__e.size()), _M_data(__valarray_get_storage<_Tp>(_M_size))\n-    { std::__valarray_copy(__e, _M_size, _Array<_Tp>(_M_data)); }\n+    { std::__valarray_copy_construct(__e, _M_size, _Array<_Tp>(_M_data)); }\n \n   template<typename _Tp>\n     inline"}]}