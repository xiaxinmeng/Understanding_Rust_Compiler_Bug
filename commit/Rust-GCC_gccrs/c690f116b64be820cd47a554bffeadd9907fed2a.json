{"sha": "c690f116b64be820cd47a554bffeadd9907fed2a", "node_id": "C_kwDOANBUbNoAKGM2OTBmMTE2YjY0YmU4MjBjZDQ3YTU1NGJmZmVhZGQ5OTA3ZmVkMmE", "commit": {"author": {"name": "Liaiss Merzougue", "email": "merzougue@adacore.com", "date": "2021-04-02T09:29:03Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-12-06T13:58:47Z"}, "message": "ada: Add Codepeer Exemption + simplify TO_C code.\n\nThis patch simplify the TO_C code to have a single branch for\nraising exception. Furthermore, adding pragma annotate for codepeer\nto ignore uninitialized value since this is caused because we have\ninput check before the initialization.\n\ngcc/ada/\n\n\t* libgnat/i-c.adb (To_C): Simplify code for having a single\n\texception raise. Add pragma annotate about uninitialized value\n\twhich happen only on exception raising.", "tree": {"sha": "aaae5513794d031e8c3b754b8bcbb8565c971ce7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaae5513794d031e8c3b754b8bcbb8565c971ce7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c690f116b64be820cd47a554bffeadd9907fed2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c690f116b64be820cd47a554bffeadd9907fed2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c690f116b64be820cd47a554bffeadd9907fed2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c690f116b64be820cd47a554bffeadd9907fed2a/comments", "author": {"login": "liaiss", "id": 62889025, "node_id": "MDQ6VXNlcjYyODg5MDI1", "avatar_url": "https://avatars.githubusercontent.com/u/62889025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liaiss", "html_url": "https://github.com/liaiss", "followers_url": "https://api.github.com/users/liaiss/followers", "following_url": "https://api.github.com/users/liaiss/following{/other_user}", "gists_url": "https://api.github.com/users/liaiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/liaiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liaiss/subscriptions", "organizations_url": "https://api.github.com/users/liaiss/orgs", "repos_url": "https://api.github.com/users/liaiss/repos", "events_url": "https://api.github.com/users/liaiss/events{/privacy}", "received_events_url": "https://api.github.com/users/liaiss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed34c3bc3428bce663d42e9eeda10bc0c5d56d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed34c3bc3428bce663d42e9eeda10bc0c5d56d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed34c3bc3428bce663d42e9eeda10bc0c5d56d5c"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "28660219b6e6abd7aa5f9de9d9d7b99f5e1ddff3", "filename": "gcc/ada/libgnat/i-c.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c690f116b64be820cd47a554bffeadd9907fed2a/gcc%2Fada%2Flibgnat%2Fi-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c690f116b64be820cd47a554bffeadd9907fed2a/gcc%2Fada%2Flibgnat%2Fi-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-c.adb?ref=c690f116b64be820cd47a554bffeadd9907fed2a", "patch": "@@ -186,7 +186,7 @@ is\n      (Item     : char_array;\n       Trim_Nul : Boolean := True) return String\n    is\n-      Count : Natural;\n+      Count : Natural := 0;\n       From  : size_t;\n \n    begin\n@@ -1177,7 +1177,7 @@ is\n       To : size_t;\n \n    begin\n-      if Target'Length < Item'Length then\n+      if Target'Length < Item'Length + (if Append_Nul then 1 else 0) then\n          raise Constraint_Error;\n \n       else\n@@ -1210,17 +1210,14 @@ is\n                      Target'First + (Item'Length - 1))'Initialized);\n \n          if Append_Nul then\n-            if To > Target'Last then\n-               raise Constraint_Error;\n-            else\n-               Target (To) := char32_nul;\n-               Count := Item'Length + 1;\n-            end if;\n-\n+            Target (To) := char32_nul;\n+            Count := Item'Length + 1;\n          else\n             Count := Item'Length;\n          end if;\n       end if;\n    end To_C;\n+   pragma Annotate (CodePeer, False_Positive, \"validity check\",\n+     \"Count is only uninitialized on abnormal return.\");\n \n end Interfaces.C;"}]}