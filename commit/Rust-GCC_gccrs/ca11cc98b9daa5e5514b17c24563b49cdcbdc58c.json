{"sha": "ca11cc98b9daa5e5514b17c24563b49cdcbdc58c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ExMWNjOThiOWRhYTVlNTUxNGIxN2MyNDU2M2I0OWNkY2JkYzU4Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-24T23:42:22Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-24T23:42:22Z"}, "message": "Recognize m68k, mips, PPC.  Don't require arch syscall files to exist.\n\nFrom-SVN: r169185", "tree": {"sha": "d68735895798976d2d62e7deab3a8b9b61b97a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d68735895798976d2d62e7deab3a8b9b61b97a32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/comments", "author": null, "committer": null, "parents": [{"sha": "e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52"}], "stats": {"total": 271, "additions": 200, "deletions": 71}, "files": [{"sha": "0ed2d6330bbcbe04ac462ec6e2db0f52e80e0570", "filename": "libgo/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=ca11cc98b9daa5e5514b17c24563b49cdcbdc58c", "patch": "@@ -957,7 +957,7 @@ go_debug_pe_files = \\\n go_debug_proc_files = \\\n \tgo/debug/proc/proc.go \\\n \tgo/debug/proc/proc_$(GOOS).go \\\n-\tgo/debug/proc/regs_$(GOOS)_$(GOARCH).go\n+\t$(GO_DEBUG_PROC_REGS_OS_ARCH_FILE)\n \n go_encoding_ascii85_files = \\\n \tgo/encoding/ascii85/ascii85.go\n@@ -1189,7 +1189,7 @@ go_syscall_files = \\\n \tsyscalls/syscall_unix.go \\\n \tsyscalls/stringbyte.go \\\n \tsyscalls/syscall_$(GOOS).go \\\n-\tsyscalls/syscall_$(GOOS)_$(GOARCH).go \\\n+\t$(GO_SYSCALLS_SYSCALL_OS_ARCH_FILE) \\\n \tsyscalls/sysfile_posix.go \\\n \tsysinfo.go \\\n \tsyscall_arch.go"}, {"sha": "36a6850f46b3e0da5e9e5a455c68d73f3340bc80", "filename": "libgo/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=ca11cc98b9daa5e5514b17c24563b49cdcbdc58c", "patch": "@@ -354,6 +354,8 @@ GOARCH = @GOARCH@\n GOC = @GOC@\n GOCFLAGS = $(CFLAGS)\n GOOS = @GOOS@\n+GO_DEBUG_PROC_REGS_OS_ARCH_FILE = @GO_DEBUG_PROC_REGS_OS_ARCH_FILE@\n+GO_SYSCALLS_SYSCALL_OS_ARCH_FILE = @GO_SYSCALLS_SYSCALL_OS_ARCH_FILE@\n GREP = @GREP@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n@@ -1352,7 +1354,7 @@ go_debug_pe_files = \\\n go_debug_proc_files = \\\n \tgo/debug/proc/proc.go \\\n \tgo/debug/proc/proc_$(GOOS).go \\\n-\tgo/debug/proc/regs_$(GOOS)_$(GOARCH).go\n+\t$(GO_DEBUG_PROC_REGS_OS_ARCH_FILE)\n \n go_encoding_ascii85_files = \\\n \tgo/encoding/ascii85/ascii85.go\n@@ -1558,7 +1560,7 @@ go_syscall_files = \\\n \tsyscalls/syscall_unix.go \\\n \tsyscalls/stringbyte.go \\\n \tsyscalls/syscall_$(GOOS).go \\\n-\tsyscalls/syscall_$(GOOS)_$(GOARCH).go \\\n+\t$(GO_SYSCALLS_SYSCALL_OS_ARCH_FILE) \\\n \tsyscalls/sysfile_posix.go \\\n \tsysinfo.go \\\n \tsyscall_arch.go"}, {"sha": "dc5ad3fca9797a87fa641d6bcf96aa54c4549384", "filename": "libgo/configure", "status": "modified", "additions": 138, "deletions": 9, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=ca11cc98b9daa5e5514b17c24563b49cdcbdc58c", "patch": "@@ -612,13 +612,25 @@ MATH_LIBS\n USING_SPLIT_STACK_FALSE\n USING_SPLIT_STACK_TRUE\n SPLIT_STACK\n+GO_DEBUG_PROC_REGS_OS_ARCH_FILE\n+GO_SYSCALLS_SYSCALL_OS_ARCH_FILE\n GOARCH\n LIBGO_IS_X86_64_FALSE\n LIBGO_IS_X86_64_TRUE\n LIBGO_IS_SPARC64_FALSE\n LIBGO_IS_SPARC64_TRUE\n LIBGO_IS_SPARC_FALSE\n LIBGO_IS_SPARC_TRUE\n+LIBGO_IS_PPC64_FALSE\n+LIBGO_IS_PPC64_TRUE\n+LIBGO_IS_PPC_FALSE\n+LIBGO_IS_PPC_TRUE\n+LIBGO_IS_MIPS64_FALSE\n+LIBGO_IS_MIPS64_TRUE\n+LIBGO_IS_MIPS_FALSE\n+LIBGO_IS_MIPS_TRUE\n+LIBGO_IS_M68K_FALSE\n+LIBGO_IS_M68K_TRUE\n LIBGO_IS_ARM_FALSE\n LIBGO_IS_ARM_TRUE\n LIBGO_IS_386_FALSE\n@@ -10878,7 +10890,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10881 \"configure\"\n+#line 10893 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10984,7 +10996,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10987 \"configure\"\n+#line 10999 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13252,11 +13264,20 @@ fi\n \n is_386=no\n is_arm=no\n+is_m68k=no\n+is_mips=no\n+is_mips64=no\n+is_ppc=no\n+is_ppc64=no\n is_sparc=no\n is_sparc64=no\n is_x86_64=no\n GOARCH=unknown\n case ${host} in\n+  arm*-*-* | strongarm*-*-* | ep9312*-*-* | xscale-*-*)\n+    is_arm=yes\n+    GOARCH=arm\n+    ;;\n   i[34567]86-*-* | x86_64-*-*)\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -13272,16 +13293,54 @@ else\n fi\n rm -f conftest.err conftest.$ac_ext\n     if test \"$is_386\" = \"yes\"; then\n-      is_386=yes\n       GOARCH=386\n     else\n-      is_x86_64=yes\n       GOARCH=amd64\n     fi\n     ;;\n-  arm*-*-* | strongarm*-*-* | ep9312*-*-* | xscale-*-*)\n-    is_arm=yes\n-    GOARCH=arm\n+  m68k*-*-*)\n+    is_m68k=yes\n+    GOARCH=m68k\n+    ;;\n+  mips*-*-*)\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#ifdef __mips64\n+#error 64-bit\n+#endif\n+_ACEOF\n+if ac_fn_c_try_cpp \"$LINENO\"; then :\n+  is_mips=yes\n+else\n+  is_mips64=yes\n+fi\n+rm -f conftest.err conftest.$ac_ext\n+    if test \"$is_mips\" = \"yes\"; then\n+      GOARCH=mips\n+    else\n+      GOARCH=mips64\n+    fi\n+    ;;\n+  rs6000*-*-* | powerpc*-*-*)\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#ifdef _ARCH_PPC64\n+#error 64-bit\n+#endif\n+_ACEOF\n+if ac_fn_c_try_cpp \"$LINENO\"; then :\n+  is_ppc=yes\n+else\n+  is_ppc64=yes\n+fi\n+rm -f conftest.err conftest.$ac_ext\n+    if test \"$is_ppc\" = \"yes\"; then\n+      GOARCH=ppc\n+    else\n+      GOARCH=ppc64\n+    fi\n     ;;\n   sparc*-*-*)\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n@@ -13298,10 +13357,8 @@ else\n fi\n rm -f conftest.err conftest.$ac_ext\n     if test \"$is_sparc\" = \"yes\"; then\n-      is_sparc=yes\n       GOARCH=sparc\n     else\n-      is_sparc64=yes\n       GOARCH=sparc64\n     fi\n     ;;\n@@ -13322,6 +13379,46 @@ else\n   LIBGO_IS_ARM_FALSE=\n fi\n \n+ if test $is_m68k = yes; then\n+  LIBGO_IS_M68K_TRUE=\n+  LIBGO_IS_M68K_FALSE='#'\n+else\n+  LIBGO_IS_M68K_TRUE='#'\n+  LIBGO_IS_M68K_FALSE=\n+fi\n+\n+ if test $is_mips = yes; then\n+  LIBGO_IS_MIPS_TRUE=\n+  LIBGO_IS_MIPS_FALSE='#'\n+else\n+  LIBGO_IS_MIPS_TRUE='#'\n+  LIBGO_IS_MIPS_FALSE=\n+fi\n+\n+ if test $is_mips64 = yes; then\n+  LIBGO_IS_MIPS64_TRUE=\n+  LIBGO_IS_MIPS64_FALSE='#'\n+else\n+  LIBGO_IS_MIPS64_TRUE='#'\n+  LIBGO_IS_MIPS64_FALSE=\n+fi\n+\n+ if test $is_ppc = yes; then\n+  LIBGO_IS_PPC_TRUE=\n+  LIBGO_IS_PPC_FALSE='#'\n+else\n+  LIBGO_IS_PPC_TRUE='#'\n+  LIBGO_IS_PPC_FALSE=\n+fi\n+\n+ if test $is_ppc64 = yes; then\n+  LIBGO_IS_PPC64_TRUE=\n+  LIBGO_IS_PPC64_FALSE='#'\n+else\n+  LIBGO_IS_PPC64_TRUE='#'\n+  LIBGO_IS_PPC64_FALSE=\n+fi\n+\n  if test $is_sparc = yes; then\n   LIBGO_IS_SPARC_TRUE=\n   LIBGO_IS_SPARC_FALSE='#'\n@@ -13348,6 +13445,18 @@ fi\n \n \n \n+GO_SYSCALLS_SYSCALL_OS_ARCH_FILE=\n+if test -f ${srcdir}/syscalls/syscall_${GOOS}_${GOARCH}.go; then\n+  GO_SYSCALLS_SYSCALL_OS_ARCH_FILE=syscalls/syscall_${GOOS}_${GOARCH}.go\n+fi\n+\n+\n+GO_DEBUG_PROC_REGS_OS_ARCH_FILE=\n+if test -f ${srcdir}/go/debug/proc/regs_${GOOS}_${GOARCH}.go; then\n+  GO_DEBUG_PROC_REGS_OS_ARCH_FILE=go/debug/proc/regs_${GOOS}_${GOARCH}.go\n+fi\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether -fsplit-stack is supported\" >&5\n $as_echo_n \"checking whether -fsplit-stack is supported... \" >&6; }\n if test \"${libgo_cv_c_split_stack_supported+set}\" = set; then :\n@@ -14263,6 +14372,26 @@ if test -z \"${LIBGO_IS_ARM_TRUE}\" && test -z \"${LIBGO_IS_ARM_FALSE}\"; then\n   as_fn_error \"conditional \\\"LIBGO_IS_ARM\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${LIBGO_IS_M68K_TRUE}\" && test -z \"${LIBGO_IS_M68K_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_M68K\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBGO_IS_MIPS_TRUE}\" && test -z \"${LIBGO_IS_MIPS_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_MIPS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBGO_IS_MIPS64_TRUE}\" && test -z \"${LIBGO_IS_MIPS64_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_MIPS64\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBGO_IS_PPC_TRUE}\" && test -z \"${LIBGO_IS_PPC_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_PPC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBGO_IS_PPC64_TRUE}\" && test -z \"${LIBGO_IS_PPC64_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_PPC64\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${LIBGO_IS_SPARC_TRUE}\" && test -z \"${LIBGO_IS_SPARC_FALSE}\"; then\n   as_fn_error \"conditional \\\"LIBGO_IS_SPARC\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "e1c0dd0e61e4a72f4e48d5561b3d63bae25d8d9e", "filename": "libgo/configure.ac", "status": "modified", "additions": 54, "deletions": 7, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=ca11cc98b9daa5e5514b17c24563b49cdcbdc58c", "patch": "@@ -135,11 +135,20 @@ AC_SUBST(GOOS)\n dnl N.B. Keep in sync with gcc/testsuite/go.test/go-test.exp (go-set-goarch).\n is_386=no\n is_arm=no\n+is_m68k=no\n+is_mips=no\n+is_mips64=no\n+is_ppc=no\n+is_ppc64=no\n is_sparc=no\n is_sparc64=no\n is_x86_64=no\n GOARCH=unknown\n case ${host} in\n+  arm*-*-* | strongarm*-*-* | ep9312*-*-* | xscale-*-*)\n+    is_arm=yes\n+    GOARCH=arm\n+    ;;\n changequote(,)dnl\n   i[34567]86-*-* | x86_64-*-*)\n changequote([,])dnl\n@@ -149,16 +158,38 @@ changequote([,])dnl\n #endif],\n [is_386=yes], [is_x86_64=yes])\n     if test \"$is_386\" = \"yes\"; then\n-      is_386=yes\n       GOARCH=386\n     else\n-      is_x86_64=yes\n       GOARCH=amd64\n     fi\n     ;;\n-  arm*-*-* | strongarm*-*-* | ep9312*-*-* | xscale-*-*)\n-    is_arm=yes\n-    GOARCH=arm\n+  m68k*-*-*)\n+    is_m68k=yes\n+    GOARCH=m68k\n+    ;;\n+  mips*-*-*)\n+    AC_PREPROC_IFELSE([\n+#ifdef __mips64\n+#error 64-bit\n+#endif],\n+[is_mips=yes], [is_mips64=yes])\n+    if test \"$is_mips\" = \"yes\"; then\n+      GOARCH=mips\n+    else\n+      GOARCH=mips64\n+    fi\n+    ;;\n+  rs6000*-*-* | powerpc*-*-*)\n+    AC_PREPROC_IFELSE([\n+#ifdef _ARCH_PPC64\n+#error 64-bit\n+#endif],\n+[is_ppc=yes], [is_ppc64=yes])\n+    if test \"$is_ppc\" = \"yes\"; then\n+      GOARCH=ppc\n+    else\n+      GOARCH=ppc64\n+    fi\n     ;;\n   sparc*-*-*)\n     AC_PREPROC_IFELSE([\n@@ -167,21 +198,37 @@ changequote([,])dnl\n #endif],\n [is_sparc=yes], [is_sparc64=yes])\n     if test \"$is_sparc\" = \"yes\"; then\n-      is_sparc=yes\n       GOARCH=sparc\n     else\n-      is_sparc64=yes\n       GOARCH=sparc64\n     fi\n     ;;\n esac\n AM_CONDITIONAL(LIBGO_IS_386, test $is_386 = yes)\n AM_CONDITIONAL(LIBGO_IS_ARM, test $is_arm = yes)\n+AM_CONDITIONAL(LIBGO_IS_M68K, test $is_m68k = yes)\n+AM_CONDITIONAL(LIBGO_IS_MIPS, test $is_mips = yes)\n+AM_CONDITIONAL(LIBGO_IS_MIPS64, test $is_mips64 = yes)\n+AM_CONDITIONAL(LIBGO_IS_PPC, test $is_ppc = yes)\n+AM_CONDITIONAL(LIBGO_IS_PPC64, test $is_ppc64 = yes)\n AM_CONDITIONAL(LIBGO_IS_SPARC, test $is_sparc = yes)\n AM_CONDITIONAL(LIBGO_IS_SPARC64, test $is_sparc64 = yes)\n AM_CONDITIONAL(LIBGO_IS_X86_64, test $is_x86_64 = yes)\n AC_SUBST(GOARCH)\n \n+dnl Some files are only present when needed for specific architectures.\n+GO_SYSCALLS_SYSCALL_OS_ARCH_FILE=\n+if test -f ${srcdir}/syscalls/syscall_${GOOS}_${GOARCH}.go; then\n+  GO_SYSCALLS_SYSCALL_OS_ARCH_FILE=syscalls/syscall_${GOOS}_${GOARCH}.go\n+fi\n+AC_SUBST(GO_SYSCALLS_SYSCALL_OS_ARCH_FILE)\n+\n+GO_DEBUG_PROC_REGS_OS_ARCH_FILE=\n+if test -f ${srcdir}/go/debug/proc/regs_${GOOS}_${GOARCH}.go; then\n+  GO_DEBUG_PROC_REGS_OS_ARCH_FILE=go/debug/proc/regs_${GOOS}_${GOARCH}.go\n+fi\n+AC_SUBST(GO_DEBUG_PROC_REGS_OS_ARCH_FILE)\n+\n dnl Use -fsplit-stack when compiling C code if available.\n AC_CACHE_CHECK([whether -fsplit-stack is supported],\n [libgo_cv_c_split_stack_supported],"}, {"sha": "3fc3e51cd79a89c9fdb4bb5b649357f3a32ad74c", "filename": "libgo/go/debug/proc/regs_rtems_386.go", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_rtems_386.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_rtems_386.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_rtems_386.go?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,5 +0,0 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proc"}, {"sha": "3fc3e51cd79a89c9fdb4bb5b649357f3a32ad74c", "filename": "libgo/go/debug/proc/regs_rtems_amd64.go", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_rtems_amd64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_rtems_amd64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_rtems_amd64.go?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,5 +0,0 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proc"}, {"sha": "3fc3e51cd79a89c9fdb4bb5b649357f3a32ad74c", "filename": "libgo/go/debug/proc/regs_solaris_386.go", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_386.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_386.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_386.go?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,5 +0,0 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proc"}, {"sha": "3fc3e51cd79a89c9fdb4bb5b649357f3a32ad74c", "filename": "libgo/go/debug/proc/regs_solaris_amd64.go", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_amd64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_amd64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_amd64.go?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,5 +0,0 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proc"}, {"sha": "3fc3e51cd79a89c9fdb4bb5b649357f3a32ad74c", "filename": "libgo/go/debug/proc/regs_solaris_sparc.go", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_sparc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_sparc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_sparc.go?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,5 +0,0 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proc"}, {"sha": "3fc3e51cd79a89c9fdb4bb5b649357f3a32ad74c", "filename": "libgo/go/debug/proc/regs_solaris_sparc64.go", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_sparc64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_sparc64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fproc%2Fregs_solaris_sparc64.go?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,5 +0,0 @@\n-// Copyright 2011 The Go Authors.  All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package proc"}, {"sha": "a09c5ac9cfa17abab68a149b4afbdf8079f14e27", "filename": "libgo/syscalls/syscall_rtems_386.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fsyscalls%2Fsyscall_rtems_386.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fsyscalls%2Fsyscall_rtems_386.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsyscalls%2Fsyscall_rtems_386.go?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,7 +0,0 @@\n-// syscall_rtems_386.go -- RTEMS 386 specific syscall interface.\n-\n-// Copyright 2011 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package syscall"}, {"sha": "941ea236653ac9c3aa3a362d242acd5353a50b3d", "filename": "libgo/syscalls/syscall_rtems_amd64.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fsyscalls%2Fsyscall_rtems_amd64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fsyscalls%2Fsyscall_rtems_amd64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsyscalls%2Fsyscall_rtems_amd64.go?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,7 +0,0 @@\n-// syscall_rtems_amd64.go -- RTEMS AMD64 specific syscall interface.\n-\n-// Copyright 2011 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package syscall"}, {"sha": "6f79aeb4087b4247ee071cc8c84675f3300ebd4e", "filename": "libgo/syscalls/syscall_rtems_sparc.go", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fsyscalls%2Fsyscall_rtems_sparc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52/libgo%2Fsyscalls%2Fsyscall_rtems_sparc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsyscalls%2Fsyscall_rtems_sparc.go?ref=e8ba94fc1fe2d7d96bfc2fa5293c1bb0b86a5b52", "patch": "@@ -1,7 +0,0 @@\n-// syscall_rtems_sparc.go -- RTEMS SPARC specific syscall interface.\n-\n-// Copyright 2011 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package syscall"}, {"sha": "795a3dda3c97bc7286a1736b86845e8cbbcdef3d", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca11cc98b9daa5e5514b17c24563b49cdcbdc58c/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=ca11cc98b9daa5e5514b17c24563b49cdcbdc58c", "patch": "@@ -85,6 +85,8 @@ GOARCH = @GOARCH@\n GOC = @GOC@\n GOCFLAGS = @GOCFLAGS@\n GOOS = @GOOS@\n+GO_DEBUG_PROC_REGS_OS_ARCH_FILE = @GO_DEBUG_PROC_REGS_OS_ARCH_FILE@\n+GO_SYSCALLS_SYSCALL_OS_ARCH_FILE = @GO_SYSCALLS_SYSCALL_OS_ARCH_FILE@\n GREP = @GREP@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@"}]}