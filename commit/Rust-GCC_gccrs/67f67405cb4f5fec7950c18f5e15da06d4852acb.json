{"sha": "67f67405cb4f5fec7950c18f5e15da06d4852acb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmNjc0MDVjYjRmNWZlYzc5NTBjMThmNWUxNWRhMDZkNDg1MmFjYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-10-23T13:48:08Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-10-23T13:48:08Z"}, "message": "re PR fortran/46122 (PROTECTED check too strict)\n\n2010-10-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/46122\n        * expr.c (gfc_check_vardef_context): Fix PROTECTED check.\n\n2010-10-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/46122\n        * gfortran.dg/protected_8.f90: New.\n\nFrom-SVN: r165883", "tree": {"sha": "bdffa72fd30d81b09a902bb409ba967a2f583aac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdffa72fd30d81b09a902bb409ba967a2f583aac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67f67405cb4f5fec7950c18f5e15da06d4852acb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f67405cb4f5fec7950c18f5e15da06d4852acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f67405cb4f5fec7950c18f5e15da06d4852acb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f67405cb4f5fec7950c18f5e15da06d4852acb/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15ac39424201c42cc637cb034102ddd689ad75d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ac39424201c42cc637cb034102ddd689ad75d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ac39424201c42cc637cb034102ddd689ad75d8"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "341e15038cc163e1e23a3616dd7c774afe0f4f9c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f67405cb4f5fec7950c18f5e15da06d4852acb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f67405cb4f5fec7950c18f5e15da06d4852acb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=67f67405cb4f5fec7950c18f5e15da06d4852acb", "patch": "@@ -1,3 +1,8 @@\n+2010-10-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/46122\n+\t* expr.c (gfc_check_vardef_context): Fix PROTECTED check.\n+\n 2010-10-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46060"}, {"sha": "e567c98ac9e4bd3fef9754f699e4fd36460d08da", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f67405cb4f5fec7950c18f5e15da06d4852acb/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f67405cb4f5fec7950c18f5e15da06d4852acb/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=67f67405cb4f5fec7950c18f5e15da06d4852acb", "patch": "@@ -4400,7 +4400,7 @@ gfc_check_vardef_context (gfc_expr* e, bool pointer, const char* context)\n     }\n \n   /* PROTECTED and use-associated.  */\n-  if (sym->attr.is_protected && sym->attr.use_assoc)\n+  if (sym->attr.is_protected && sym->attr.use_assoc  && check_intentin)\n     {\n       if (pointer && is_pointer)\n \t{"}, {"sha": "d742fbfacf1325e059efffd467c2f0cb8acc915f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f67405cb4f5fec7950c18f5e15da06d4852acb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f67405cb4f5fec7950c18f5e15da06d4852acb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67f67405cb4f5fec7950c18f5e15da06d4852acb", "patch": "@@ -1,3 +1,8 @@\n+2010-10-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/46122\n+\t* gfortran.dg/protected_8.f90: New.\n+\n 2010-10-23  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/march-generic.c: Skip for -march in multilib options."}, {"sha": "aaa34a68f9bf1d9fbf522ab9e33ac916c4b7f988", "filename": "gcc/testsuite/gfortran.dg/protected_8.f90", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f67405cb4f5fec7950c18f5e15da06d4852acb/gcc%2Ftestsuite%2Fgfortran.dg%2Fprotected_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f67405cb4f5fec7950c18f5e15da06d4852acb/gcc%2Ftestsuite%2Fgfortran.dg%2Fprotected_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprotected_8.f90?ref=67f67405cb4f5fec7950c18f5e15da06d4852acb", "patch": "@@ -0,0 +1,50 @@\n+! { dg-do compile }\n+!\n+! PR fortran/46122\n+!\n+! PROTECT check\n+!\n+! Contributed by Jared Ahern\n+!\n+\n+MODULE amod\n+   IMPLICIT NONE\n+   TYPE foo\n+      INTEGER :: i = 4\n+      INTEGER, POINTER :: j => NULL()\n+   END TYPE foo\n+   TYPE(foo), SAVE, PROTECTED :: a\n+   TYPE(foo), SAVE, PROTECTED, POINTER :: b\n+   INTEGER, SAVE, PROTECTED :: i = 5\n+   INTEGER, SAVE, PROTECTED, POINTER :: j => NULL()\n+contains\n+  subroutine alloc()\n+    allocate(b,j)\n+  end subroutine alloc\n+END MODULE amod\n+\n+PROGRAM test\n+   USE amod\n+   IMPLICIT NONE\n+   INTEGER, TARGET :: k\n+   TYPE(foo), TARGET :: c\n+   k = 2   ! local\n+   c%i = 9 ! local\n+\n+   call alloc()\n+\n+   i = k    ! { dg-error \"is PROTECTED\" }\n+   j => k   ! { dg-error \"is PROTECTED\" }\n+   j = 3    ! OK 1\n+   a = c    ! { dg-error \"is PROTECTED\" }\n+   a%i = k  ! { dg-error \"is PROTECTED\" }\n+   a%j => k ! { dg-error \"is PROTECTED\" }\n+   a%j = 5  ! OK 2\n+   b => c   ! { dg-error \"is PROTECTED\" }\n+   b%i = k  ! OK 3\n+   b%j => k ! OK 4\n+   b%j = 5  ! OK 5\n+\n+END PROGRAM test\n+\n+! { dg-final { cleanup-modules \"amod\" } }"}]}