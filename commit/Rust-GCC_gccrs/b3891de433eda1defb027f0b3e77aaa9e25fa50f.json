{"sha": "b3891de433eda1defb027f0b3e77aaa9e25fa50f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM4OTFkZTQzM2VkYTFkZWZiMDI3ZjBiM2U3N2FhYTllMjVmYTUwZg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@google.com", "date": "2012-11-28T19:23:31Z"}, "committer": {"name": "Doug Evans", "email": "devans@gcc.gnu.org", "date": "2012-11-28T19:23:31Z"}, "message": "validate_failures.py: Record ordinal with TestResult.\n\n\t* testsuite-management/validate_failures.py: Record ordinal with\n\tTestResult.\n\nFrom-SVN: r193903", "tree": {"sha": "2cd9b9890df47fb721d1dd87ea72cb9f2b9bb95f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cd9b9890df47fb721d1dd87ea72cb9f2b9bb95f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3891de433eda1defb027f0b3e77aaa9e25fa50f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3891de433eda1defb027f0b3e77aaa9e25fa50f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3891de433eda1defb027f0b3e77aaa9e25fa50f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3891de433eda1defb027f0b3e77aaa9e25fa50f/comments", "author": null, "committer": null, "parents": [{"sha": "cc133204680d5758e7574e03629e320e1598b353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc133204680d5758e7574e03629e320e1598b353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc133204680d5758e7574e03629e320e1598b353"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "8bf6add3f8fce34498f557ea31ecd6957da75574", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3891de433eda1defb027f0b3e77aaa9e25fa50f/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3891de433eda1defb027f0b3e77aaa9e25fa50f/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=b3891de433eda1defb027f0b3e77aaa9e25fa50f", "patch": "@@ -1,3 +1,8 @@\n+2012-11-28  Doug Evans  <dje@google.com>\n+\n+\t* testsuite-management/validate_failures.py: Record ordinal with\n+\tTestResult.\n+\n 2012-11-19  Mike Stump  <mikestump@comcast.net>\n \n \t* compare_tests: Add export LC_ALL=C to make sort happier."}, {"sha": "d78a54f860b58465d8dce8ff038f85887b2b1de5", "filename": "contrib/testsuite-management/validate_failures.py", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3891de433eda1defb027f0b3e77aaa9e25fa50f/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3891de433eda1defb027f0b3e77aaa9e25fa50f/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftestsuite-management%2Fvalidate_failures.py?ref=b3891de433eda1defb027f0b3e77aaa9e25fa50f", "patch": "@@ -91,9 +91,12 @@ class TestResult(object):\n     state: One of UNRESOLVED, XPASS or FAIL.\n     name: File name for the test.\n     description: String describing the test (flags used, dejagnu message, etc)\n+    ordinal: Monotonically increasing integer.\n+             It is used to keep results for one .exp file sorted\n+             by the order the tests were run.\n   \"\"\"\n \n-  def __init__(self, summary_line):\n+  def __init__(self, summary_line, ordinal=-1):\n     try:\n       self.attrs = ''\n       if '|' in summary_line:\n@@ -109,6 +112,7 @@ def __init__(self, summary_line):\n       self.attrs = self.attrs.strip()\n       self.state = self.state.strip()\n       self.description = self.description.strip()\n+      self.ordinal = ordinal\n     except ValueError:\n       Error('Cannot parse summary line \"%s\"' % summary_line)\n \n@@ -117,7 +121,8 @@ def __init__(self, summary_line):\n             self.state, summary_line, self))\n \n   def __lt__(self, other):\n-    return self.name < other.name\n+    return (self.name < other.name or\n+            (self.name == other.name and self.ordinal < other.ordinal))\n \n   def __hash__(self):\n     return hash(self.state) ^ hash(self.name) ^ hash(self.description)\n@@ -196,10 +201,14 @@ def IsInterestingResult(line):\n def ParseSummary(sum_fname):\n   \"\"\"Create a set of TestResult instances from the given summary file.\"\"\"\n   result_set = set()\n+  # ordinal is used when sorting the results so that tests within each\n+  # .exp file are kept sorted.\n+  ordinal=0\n   sum_file = open(sum_fname)\n   for line in sum_file:\n     if IsInterestingResult(line):\n-      result = TestResult(line)\n+      result = TestResult(line, ordinal)\n+      ordinal += 1\n       if result.HasExpired():\n         # Tests that have expired are not added to the set of expected\n         # results. If they are still present in the set of actual results,"}]}