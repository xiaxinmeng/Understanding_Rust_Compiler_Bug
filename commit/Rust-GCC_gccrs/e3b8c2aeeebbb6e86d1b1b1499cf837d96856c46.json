{"sha": "e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNiOGMyYWVlZWJiYjZlODZkMWIxYjE0OTljZjgzN2Q5Njg1NmM0Ng==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-06-15T14:00:24Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-06-15T14:00:24Z"}, "message": "[objective-c/c++, testsuite, 2/3] Workaround for PR90709.\n\nUse the CF-CFString.h, F-NS*.h proxy headers where needed in the objective-c\ntestsuite.  Make minor adjustments to tests as required, providing that those\ndo not alter the test intent.\n\n2019-06-15  Iain Sandoe  <iain@sandoe.co.uk>\n\n\tPR objc/90709\n\t* objc.dg/encode-7-next-64bit.m: Use proxy headers.\n\t* objc.dg/image-info.m: Likewise.\n\t* objc.dg/method-6.m: Likewise.\n\t* objc.dg/no-extra-load.m: Likewise.\n\t* objc.dg/objc-foreach-4.m: Likewise.\n\t* objc.dg/objc-foreach-5.m: Likewise.\n\t* objc.dg/proto-lossage-7.m: Likewise.\n\t* objc.dg/strings/const-cfstring-2.m: Likewise.\n\t* objc.dg/strings/const-cfstring-5.m: Likewise.\n\t* objc.dg/strings/const-str-12b.m: Likewise.\n\t* objc.dg/symtab-1.m: Likewise.\n\t* objc.dg/torture/strings/const-cfstring-1.m: Likewise.\n\t* objc.dg/torture/strings/const-str-10.m: Likewise.\n\t* objc.dg/torture/strings/const-str-11.m: Likewise.\n\t* objc.dg/torture/strings/const-str-9.m: Likewise.\n\t* objc.dg/zero-link-1.m: Likewise.\n\t* objc.dg/zero-link-2.m: Likewise.\n\t* objc.dg/zero-link-3.m: Likewise.\n\t* objc.dg/isa-field-1.m: Suppress unwanted warning, add comment why.\n\t* objc.dg/headers.m: XFAIL for Darwin14-19.\n\t* objc.dg/objc-gc-4.m: Skip for Darwin > 16, the API use is an error\n\tthere.\n\nFrom-SVN: r272326", "tree": {"sha": "c4fcacf404be1418363c4b970c40d7b82de2b105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4fcacf404be1418363c4b970c40d7b82de2b105"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0efbd66ed1040e48ccefcf022ce713e5320232e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0efbd66ed1040e48ccefcf022ce713e5320232e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0efbd66ed1040e48ccefcf022ce713e5320232e0"}], "stats": {"total": 103, "additions": 68, "deletions": 35}, "files": [{"sha": "9b2dcf0d7e5039f00b064ef24c642210d81e58a0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -1,3 +1,29 @@\n+2019-06-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR objc/90709\n+\t* objc.dg/encode-7-next-64bit.m: Use proxy headers.\n+\t* objc.dg/image-info.m: Likewise.\n+\t* objc.dg/method-6.m: Likewise.\n+\t* objc.dg/no-extra-load.m: Likewise.\n+\t* objc.dg/objc-foreach-4.m: Likewise.\n+\t* objc.dg/objc-foreach-5.m: Likewise.\n+\t* objc.dg/proto-lossage-7.m: Likewise.\n+\t* objc.dg/strings/const-cfstring-2.m: Likewise.\n+\t* objc.dg/strings/const-cfstring-5.m: Likewise.\n+\t* objc.dg/strings/const-str-12b.m: Likewise.\n+\t* objc.dg/symtab-1.m: Likewise.\n+\t* objc.dg/torture/strings/const-cfstring-1.m: Likewise.\n+\t* objc.dg/torture/strings/const-str-10.m: Likewise.\n+\t* objc.dg/torture/strings/const-str-11.m: Likewise.\n+\t* objc.dg/torture/strings/const-str-9.m: Likewise.\n+\t* objc.dg/zero-link-1.m: Likewise.\n+\t* objc.dg/zero-link-2.m: Likewise.\n+\t* objc.dg/zero-link-3.m: Likewise.\n+\t* objc.dg/isa-field-1.m: Suppress unwanted warning, add comment why.\n+\t* objc.dg/headers.m: XFAIL for Darwin14-19.\n+\t* objc.dg/objc-gc-4.m: Skip for Darwin > 16, the API use is an error\n+\tthere.\n+\n 2019-06-15  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR objc/90709"}, {"sha": "5686cb4c537fda6996e623db8c1937946fb39374", "filename": "gcc/testsuite/objc.dg/encode-7-next-64bit.m", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-7-next-64bit.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-7-next-64bit.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fencode-7-next-64bit.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -9,10 +9,11 @@\n #include <stdbool.h>\n #include <string.h>\n #include <stdlib.h>\n-#include <Foundation/NSObject.h>\n+#include <stdio.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n+#include \"../objc-obj-c++-shared/CF-CFString.h\"\n #include \"../objc-obj-c++-shared/runtime.h\"\n \n-extern int printf(char *,...);\n void CHECK_IF(const char *s1, const char *s2)\n {\n  if (strcmp(s1,s2) != 0) {"}, {"sha": "e628199f0cca86cd64997b1c5e56dfeb932f78da", "filename": "gcc/testsuite/objc.dg/headers.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fheaders.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fheaders.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fheaders.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -2,6 +2,7 @@\n // test in libstdc++-v3).  Author: Loren J. Rittle <ljrittle@acm.org>.\n // { dg-options \"-Wall -Wpointer-arith -Wcast-qual -Wstrict-prototypes -Wshadow\" }\n // { dg-do compile }\n+/* { dg-xfail-if \"PR90709\" { *-*-darwin1[4-9]* } { \"-fnext-runtime\" } { \"\" } } */\n \n #ifdef __NEXT_RUNTIME__\n #include <Foundation/NSString.h>"}, {"sha": "b2effe5dc861f94141dffa586cdb21e12e13e07c", "filename": "gcc/testsuite/objc.dg/image-info.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fimage-info.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fimage-info.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fimage-info.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -7,7 +7,7 @@\n /* { dg-skip-if \"NeXT-only\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-freplace-objc-classes\" } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n \n extern void abort(void);\n #define CHECK_IF(expr) if(!(expr)) abort();"}, {"sha": "a786ec3deb50588d1bed1e4b6d3e8323215837e5", "filename": "gcc/testsuite/objc.dg/isa-field-1.m", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fisa-field-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fisa-field-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fisa-field-1.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -1,5 +1,7 @@\n /* Ensure there are no bizarre difficulties with accessing the 'isa' field of objects.  */\n /* { dg-do compile } */\n+/* The use of isa is deprecated, but we still want to test that it works. */\n+/* { dg-additional-options \"-Wno-deprecated-declarations\" } */\n \n #include \"../objc-obj-c++-shared/TestsuiteObject.h\"\n #include \"../objc-obj-c++-shared/runtime.h\""}, {"sha": "7d3b11c5c75ae9aa3073cf2b264fd6c4c0783589", "filename": "gcc/testsuite/objc.dg/method-6.m", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-6.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-6.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fmethod-6.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -5,12 +5,12 @@\n /* { dg-options \"-Wstrict-selector-match\" } */\n \n #ifdef __NEXT_RUNTIME__\n-#include <Foundation/NSObject.h>\n-#define OBJECT NSObject\n+# include \"../objc-obj-c++-shared/F-NSObject.h\"\n+# define OBJECT NSObject\n #else\n-#include <objc/Object.h>\n-#include <objc/Protocol.h>\n-#define OBJECT Object\n+# include <objc/Object.h>\n+# include <objc/Protocol.h>\n+# define OBJECT Object\n #endif\n \n @interface Base"}, {"sha": "35bd1daf661aa35130f17c6b6e48978fb5d3aa1b", "filename": "gcc/testsuite/objc.dg/no-extra-load.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fno-extra-load.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fno-extra-load.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fno-extra-load.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target *-*-darwin* } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n main() { [NSObject new]; }\n \n /* { dg-final { scan-assembler-not \"L_objc_msgSend\\\\\\$non_lazy_ptr\" } } */"}, {"sha": "c8dc074b267c605e8dd96e8b6554218b0ac9b852", "filename": "gcc/testsuite/objc.dg/objc-foreach-4.m", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-4.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -5,9 +5,9 @@\n /* { dg-skip-if \"No NeXT fast enum. pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-additional-options \"-framework Foundation\" { target { *-*-darwin* } } } */\n \n-#include <Foundation/NSString.h>\n-#include <Foundation/NSAutoreleasePool.h>\n-#include <Foundation/NSArray.h>\n+#include \"../objc-obj-c++-shared/F-NSString.h\"\n+#include \"../objc-obj-c++-shared/F-NSAutoreleasePool.h\"\n+#include \"../objc-obj-c++-shared/F-NSArray.h\"\n \n // gcc -o foo foo.m -framework Foundation\n "}, {"sha": "e02bd7aa06dd8078e5a2ae73e6939b2741f2e582", "filename": "gcc/testsuite/objc.dg/objc-foreach-5.m", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-5.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-5.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-foreach-5.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -4,8 +4,9 @@\n /* { dg-skip-if \"No NeXT fast enum. pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-additional-options \"-framework Foundation\" { target { *-*-darwin* } } } */\n \n-#include <Foundation/NSArray.h>\n-#include <Foundation/NSAutoreleasePool.h>\n+#include \"../objc-obj-c++-shared/F-NSArray.h\"\n+#include \"../objc-obj-c++-shared/F-NSAutoreleasePool.h\"\n+#include \"../objc-obj-c++-shared/F-NSValue.h\"\n \n NSArray * createTestVictim(unsigned capacity) {\n     NSMutableArray * arr = [[NSMutableArray alloc] initWithCapacity:capacity];"}, {"sha": "96c32788dfe01bd1369f588e6504fec3c80ff03d", "filename": "gcc/testsuite/objc.dg/objc-gc-4.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-gc-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-gc-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fobjc-gc-4.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -3,6 +3,7 @@\n /* Contributed by Ziemowit Laski <zlaski@apple.com>  */\n \n /* { dg-do compile } */\n+/* { dg-skip-if \"GC API is an error from Darwin16.\" { *-*-darwin1[6-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-options \"-fobjc-gc\" } */\n /* { dg-prune-output \"cc1obj: warning: '-fobjc-gc' is ignored for '-fgnu-runtime'\" } */\n "}, {"sha": "118a130fd9e9e7addb9ad7b740800917687644dc", "filename": "gcc/testsuite/objc.dg/proto-lossage-7.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-7.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-7.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-7.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -3,7 +3,7 @@\n /* { dg-do compile } */\n \n #ifdef __NEXT_RUNTIME__\n-#include <Foundation/NSObject.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n #define OBJECT NSObject\n #else\n #include <objc/Object.h>"}, {"sha": "effe7f57bdcc069d61de4995e4c264537e29b7e9", "filename": "gcc/testsuite/objc.dg/strings/const-cfstring-2.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fconst-cfstring-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fconst-cfstring-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fconst-cfstring-2.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -8,8 +8,8 @@\n /* { dg-skip-if \"NeXT only\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-mconstant-cfstrings -Wnonportable-cfstrings\" } */\n \n-#import <Foundation/NSString.h>\n-#import <CoreFoundation/CFString.h>\n+#include \"../../objc-obj-c++-shared/F-NSString.h\"\n+#include \"../../objc-obj-c++-shared/CF-CFString.h\"\n \n #ifndef __CONSTANT_CFSTRINGS__\n #error The -fconstant-cfstrings option is not functioning properly"}, {"sha": "762afb6b1ba5c256685a9ea9cbae3a3aa2a314f8", "filename": "gcc/testsuite/objc.dg/strings/const-cfstring-5.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fconst-cfstring-5.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fconst-cfstring-5.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fconst-cfstring-5.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -6,7 +6,7 @@\n /* { dg-skip-if \"NeXT only\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-mconstant-cfstrings\" } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../../objc-obj-c++-shared/F-NSObject.h\"\n \n @interface Foo: NSObject {\n   char *cString;"}, {"sha": "e04f0f66660570320b97d470c107daabbe7677c3", "filename": "gcc/testsuite/objc.dg/strings/const-str-12b.m", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fconst-str-12b.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fconst-str-12b.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstrings%2Fconst-str-12b.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -6,11 +6,11 @@\n /* { dg-options \"-mno-constant-cfstrings -fconstant-string-class=Foo\" { target *-*-darwin* } } */\n \n #ifdef __NEXT_RUNTIME__\n-#include <Foundation/NSObject.h>\n-#define OBJECT NSObject\n+# include \"../../objc-obj-c++-shared/F-NSObject.h\"\n+# define OBJECT NSObject\n #else\n-#include <objc/Object.h>\n-#define OBJECT Object\n+# include <objc/Object.h>\n+# define OBJECT Object\n #endif\n #include \"../../objc-obj-c++-shared/objc-test-suite-types.h\"\n "}, {"sha": "e6e0b613923d8bc804ffc5dd4b59df5e27b384d8", "filename": "gcc/testsuite/objc.dg/symtab-1.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fsymtab-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fsymtab-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fsymtab-1.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -4,7 +4,7 @@\n /* { dg-do compile { target { *-*-darwin* } } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n \n @interface Base: NSObject \n - (void)setValues;"}, {"sha": "a9c0ab666f1f38d7ccd319209cce81fa74d6a459", "filename": "gcc/testsuite/objc.dg/torture/strings/const-cfstring-1.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-cfstring-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-cfstring-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-cfstring-1.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -13,8 +13,8 @@\n    Well, we don't implement writable ones at this juncture.  */\n /* { dg-options \"-mconstant-cfstrings -framework Cocoa -Wl,-w\" { target *-*-darwin[123]* } } */\n \n-#import <Foundation/NSString.h>\n-#import <CoreFoundation/CFString.h>\n+#include \"../../../objc-obj-c++-shared/F-NSString.h\"\n+#include \"../../../objc-obj-c++-shared/CF-CFString.h\"\n #include <stdlib.h>\n \n void printOut(NSString *str) {"}, {"sha": "6565dc20007dcf9b294affc32b1ba9088ab1aa95", "filename": "gcc/testsuite/objc.dg/torture/strings/const-str-10.m", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-str-10.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-str-10.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-str-10.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -6,7 +6,8 @@\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-mno-constant-cfstrings\" { target *-*-darwin* } } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../../../objc-obj-c++-shared/F-NSObject.h\"\n+#include <stdlib.h>\n #include \"../../../objc-obj-c++-shared/runtime.h\" /* For NEXT_OBJC_USE_NEW_INTERFACE.  */\n \n @interface NSString: NSObject"}, {"sha": "2bdb1531e1d769d76c4f74f4193faaa452c4a4eb", "filename": "gcc/testsuite/objc.dg/torture/strings/const-str-11.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-str-11.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-str-11.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-str-11.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -7,7 +7,7 @@\n /* { dg-options \"-fconstant-string-class=XStr\" } */\n /* { dg-options \"-mno-constant-cfstrings -fconstant-string-class=XStr\" { target *-*-darwin* } } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../../../objc-obj-c++-shared/F-NSObject.h\"\n #include \"../../../objc-obj-c++-shared/runtime.h\" /* For NEXT_OBJC_USE_NEW_INTERFACE.  */\n \n @interface XString: NSObject {"}, {"sha": "966ea5e498d1567962e14b4deb97815717c58644", "filename": "gcc/testsuite/objc.dg/torture/strings/const-str-9.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-str-9.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-str-9.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftorture%2Fstrings%2Fconst-str-9.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -5,7 +5,7 @@\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-mno-constant-cfstrings\" { target *-*-darwin* } } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../../../objc-obj-c++-shared/F-NSObject.h\"\n #include \"../../../objc-obj-c++-shared/runtime.h\" /* For NEXT_OBJC_USE_NEW_INTERFACE.  */\n \n @interface NSConstantString: NSObject {"}, {"sha": "e1148deb4a75c3b81b775e7b923b7994227031d8", "filename": "gcc/testsuite/objc.dg/zero-link-1.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fzero-link-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fzero-link-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fzero-link-1.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -5,7 +5,7 @@\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-fzero-link\" } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n \n extern void abort(void);\n #define CHECK_IF(expr) if(!(expr)) abort();"}, {"sha": "19100919b3c73ee1210d6311bbb84955e00ec9f9", "filename": "gcc/testsuite/objc.dg/zero-link-2.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fzero-link-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fzero-link-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fzero-link-2.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -5,7 +5,7 @@\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-fno-zero-link\" } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n \n extern void abort(void);\n #define CHECK_IF(expr) if(!(expr)) abort();"}, {"sha": "0c77c095d4d3cb109f41a779f9457ef6c2fe9f93", "filename": "gcc/testsuite/objc.dg/zero-link-3.m", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fzero-link-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46/gcc%2Ftestsuite%2Fobjc.dg%2Fzero-link-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fzero-link-3.m?ref=e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "patch": "@@ -7,12 +7,12 @@\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n \n #ifdef __NEXT_RUNTIME__\n-#include <Foundation/NSObject.h>\n-#define OBJECT NSObject\n+# include \"../objc-obj-c++-shared/F-NSObject.h\"\n+# define OBJECT NSObject\n #else\n-#include <objc/Object.h>\n-#include <objc/Protocol.h>\n-#define OBJECT Object\n+# include <objc/Object.h>\n+# include <objc/Protocol.h>\n+# define OBJECT Object\n #endif\n \n extern void abort(void);"}]}