{"sha": "bd015d378330fc78f85d28ed8c094837e23baca8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQwMTVkMzc4MzMwZmM3OGY4NWQyOGVkOGMwOTQ4MzdlMjNiYWNhOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-02-24T13:15:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-02-24T13:15:55Z"}, "message": "tree.h (BLOCK_DEAD): New macro.\n\n\t* tree.h (BLOCK_DEAD): New macro.\n\t(struct tree_block): New flag, dead_flag.\n\t* print-tree.c (print_node, case 'b'): Print missing fields.\n\t* emit-rtl.c (remove_unnecessary_notes): Set BLOCK_DEAD.\n\t* function.c (identify_blocks): Enable test for misplaced notes.\n\t(all_blocks): Skip BLOCK_DEAD blocks.\n\t* integrate.c (integrate_decl_tree): Likewise.\n\nFrom-SVN: r40039", "tree": {"sha": "dba8fc1b41b606bab2b832ed5473057759474521", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dba8fc1b41b606bab2b832ed5473057759474521"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd015d378330fc78f85d28ed8c094837e23baca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd015d378330fc78f85d28ed8c094837e23baca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd015d378330fc78f85d28ed8c094837e23baca8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd015d378330fc78f85d28ed8c094837e23baca8/comments", "author": null, "committer": null, "parents": [{"sha": "f900ecd8a7df281db0041ea1b9702a677147fe25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f900ecd8a7df281db0041ea1b9702a677147fe25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f900ecd8a7df281db0041ea1b9702a677147fe25"}], "stats": {"total": 67, "additions": 45, "deletions": 22}, "files": [{"sha": "00ce4bd434847b63978d9e57c24d9e20efa596c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd015d378330fc78f85d28ed8c094837e23baca8", "patch": "@@ -1,5 +1,13 @@\n Sat Feb 24 06:45:21 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* tree.h (BLOCK_DEAD): New macro.\n+\t(struct tree_block): New flag, dead_flag.\n+\t* print-tree.c (print_node, case 'b'): Print missing fields.\n+\t* emit-rtl.c (remove_unnecessary_notes): Set BLOCK_DEAD.\n+\t* function.c (identify_blocks): Enable test for misplaced notes.\n+\t(all_blocks): Skip BLOCK_DEAD blocks.\n+\t* integrate.c (integrate_decl_tree): Likewise.\n+\n \t* errors.c (internal_error, trim_filename): New functions.\n \t(fancy_abort): Call internal_error.\n \t* errors.h (internal_error, trim_filename): New declarations."}, {"sha": "a7a9115325d89836f8b07a92ad62c0c2c10ed820", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=bd015d378330fc78f85d28ed8c094837e23baca8", "patch": "@@ -2881,6 +2881,7 @@ remove_unnecessary_notes ()\n \n \t\t  if (debug_ignore_block (NOTE_BLOCK (insn)))\n \t\t    {\n+\t\t      BLOCK_DEAD (NOTE_BLOCK (insn)) = 1;\n \t\t      remove_insn (prev);\n \t\t      remove_insn (insn);\n \t\t    }"}, {"sha": "58f3f6d374d3f750ccccae3de692fd0d9ea15d53", "filename": "gcc/function.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=bd015d378330fc78f85d28ed8c094837e23baca8", "patch": "@@ -5740,8 +5740,7 @@ identify_blocks ()\n \t\t\t\t\t block_stack);\n \n   /* If we didn't use all of the subblocks, we've misplaced block notes.  */\n-  /* ??? This appears to happen all the time.  Latent bugs elsewhere?  */\n-  if (0 && last_block_vector != block_vector + n_blocks)\n+  if (last_block_vector != block_vector + n_blocks)\n     abort ();\n \n   free (block_vector);\n@@ -5947,27 +5946,28 @@ blocks_nreverse (t)\n    blocks.  */\n \n static int\n-all_blocks (block, vector)\n-     tree block;\n+all_blocks (blocks, vector)\n+     tree blocks;\n      tree *vector;\n {\n   int n_blocks = 0;\n+  tree block;\n \n-  while (block)\n-    {\n-      TREE_ASM_WRITTEN (block) = 0;\n+  for (block = blocks; block != 0; block = TREE_CHAIN (block))\n+    if (!BLOCK_DEAD (block))\n+      {\n+\tTREE_ASM_WRITTEN (block) = 0;\n \n-      /* Record this block.  */\n-      if (vector)\n-\tvector[n_blocks] = block;\n+\t/* Record this block.  */\n+\tif (vector)\n+\t  vector[n_blocks] = block;\n \n-      ++n_blocks;\n+\t++n_blocks;\n \n-      /* Record the subblocks, and their subblocks...  */\n-      n_blocks += all_blocks (BLOCK_SUBBLOCKS (block),\n-\t\t\t      vector ? vector + n_blocks : 0);\n-      block = BLOCK_CHAIN (block);\n-    }\n+\t/* Record the subblocks, and their subblocks...  */\n+\tn_blocks += all_blocks (BLOCK_SUBBLOCKS (block),\n+\t\t\t\tvector ? vector + n_blocks : 0);\n+      }\n \n   return n_blocks;\n }"}, {"sha": "23f3590b4f37b695cd7c16572a82eaa37b36feda", "filename": "gcc/integrate.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=bd015d378330fc78f85d28ed8c094837e23baca8", "patch": "@@ -1684,11 +1684,12 @@ integrate_decl_tree (let, map)\n \n   next = &BLOCK_SUBBLOCKS (new_block);\n   for (t = BLOCK_SUBBLOCKS (let); t; t = BLOCK_CHAIN (t))\n-    {\n-      *next = integrate_decl_tree (t, map);\n-      BLOCK_SUPERCONTEXT (*next) = new_block;\n-      next = &BLOCK_CHAIN (*next);\n-    }\n+    if (!BLOCK_DEAD (t))\n+      {\n+\t*next = integrate_decl_tree (t, map);\n+\tBLOCK_SUPERCONTEXT (*next) = new_block;\n+\tnext = &BLOCK_CHAIN (*next);\n+      }\n \n   TREE_USED (new_block) = TREE_USED (let);\n   BLOCK_ABSTRACT_ORIGIN (new_block) = let;"}, {"sha": "7e49ee0f949bd986cb27ab43681f18101cf3198b", "filename": "gcc/print-tree.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=bd015d378330fc78f85d28ed8c094837e23baca8", "patch": "@@ -584,6 +584,14 @@ print_node (file, prefix, node, indent)\n       break;\n \n     case 'b':\n+      if (BLOCK_ABSTRACT (node))\n+\tfprintf (file, \" abstract\");\n+      if (BLOCK_HANDLER_BLOCK (node))\n+\tfprintf (file, \" handler-block\");\n+      if (BLOCK_DEAD (node))\n+\tfprintf (file, \" dead\");\n+      fprintf (file, \" block-number %d\", BLOCK_NUMBER (node));\n+\n       print_node (file, \"vars\", BLOCK_VARS (node), indent + 4);\n       print_node (file, \"supercontext\", BLOCK_SUPERCONTEXT (node), indent + 4);\n       print_node (file, \"subblocks\", BLOCK_SUBBLOCKS (node), indent + 4);"}, {"sha": "45252ddc5619553d986a176e8ec28c0293f06cd4", "filename": "gcc/tree.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd015d378330fc78f85d28ed8c094837e23baca8/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=bd015d378330fc78f85d28ed8c094837e23baca8", "patch": "@@ -829,6 +829,10 @@ struct tree_exp\n    listed in the BLOCK_VARS slot.  */\n #define BLOCK_HANDLER_BLOCK(NODE) (BLOCK_CHECK (NODE)->block.handler_block_flag)\n \n+/* Nonzero means the block was deleted as dead and should not be copied\n+   when a function is inlined.  */\n+#define BLOCK_DEAD(NODE) (BLOCK_CHECK (NODE)->block.dead_flag)\n+\n /* An index number for this block.  These values are not guaranteed to\n    be unique across functions -- whether or not they are depends on\n    the debugging output format in use.  */\n@@ -840,7 +844,8 @@ struct tree_block\n \n   unsigned handler_block_flag : 1;\n   unsigned abstract_flag : 1;\n-  unsigned block_num : 30;\n+  unsigned dead_flag : 1;\n+  unsigned block_num : 29;\n \n   union tree_node *vars;\n   union tree_node *subblocks;"}]}