{"sha": "2a58c80212892d88e199e6ab154404b80fdbd298", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE1OGM4MDIxMjg5MmQ4OGUxOTllNmFiMTU0NDA0YjgwZmRiZDI5OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-01-12T15:34:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-01-12T15:34:37Z"}, "message": "re PR tree-optimization/64357 (ICE at -Os on x86_64-linux-gnu in check_loop_closed_ssa_use, at tree-ssa-loop-manip.c:579)\n\n2015-01-12  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/64357\n\t* tree-cfg.c (gimple_can_merge_blocks_p): Protect simple\n\tlatches properly.\n\n\t* gcc.dg/torture/pr64357.c: New testcase.\n\nFrom-SVN: r219473", "tree": {"sha": "543e2a2d4fb5601fbfcf000ce3d6c5aa8b2c81ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/543e2a2d4fb5601fbfcf000ce3d6c5aa8b2c81ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a58c80212892d88e199e6ab154404b80fdbd298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a58c80212892d88e199e6ab154404b80fdbd298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a58c80212892d88e199e6ab154404b80fdbd298", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a58c80212892d88e199e6ab154404b80fdbd298/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82ac9e41644a4673f5f592f4596b2e89ea181794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ac9e41644a4673f5f592f4596b2e89ea181794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ac9e41644a4673f5f592f4596b2e89ea181794"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "dfba0bc433cecbdbae3fc62c8bdd142175c788cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a58c80212892d88e199e6ab154404b80fdbd298/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a58c80212892d88e199e6ab154404b80fdbd298/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a58c80212892d88e199e6ab154404b80fdbd298", "patch": "@@ -1,3 +1,9 @@\n+2015-01-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/64357\n+\t* tree-cfg.c (gimple_can_merge_blocks_p): Protect simple\n+\tlatches properly.\n+\n 2015-01-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.c (arm_cortex_a12_tune): Update entries to match"}, {"sha": "3cda6b359a616f1ee17ad926d3b0408cdbca7475", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a58c80212892d88e199e6ab154404b80fdbd298/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a58c80212892d88e199e6ab154404b80fdbd298/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a58c80212892d88e199e6ab154404b80fdbd298", "patch": "@@ -1,3 +1,8 @@\n+2015-01-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/64357\n+\t* gcc.dg/torture/pr64357.c: New testcase.\n+\n 2015-01-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/nop-mcount.c: Properly place {} in target"}, {"sha": "ff966efeeaea293d53cabc19911bad393c6167e6", "filename": "gcc/testsuite/gcc.dg/torture/pr64357.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a58c80212892d88e199e6ab154404b80fdbd298/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64357.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a58c80212892d88e199e6ab154404b80fdbd298/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64357.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64357.c?ref=2a58c80212892d88e199e6ab154404b80fdbd298", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d, e, f;\n+\n+long long\n+fn1 (int p)\n+{\n+  return p ? p : 1;\n+}\n+\n+static int\n+fn2 ()\n+{\n+lbl:\n+  for (; f;)\n+    return 0;\n+  for (;;)\n+    {\n+      for (b = 0; b; ++b)\n+\tif (d)\n+\t  goto lbl;\n+      c = e;\n+    }\n+}\n+\n+void\n+fn3 ()\n+{\n+  for (; a; a = fn1 (a))\n+    {\n+      fn2 ();\n+      e = 0;\n+    }\n+}"}, {"sha": "38e5e7db432912e5d5184d1c7e90d43b2f4e8ec3", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a58c80212892d88e199e6ab154404b80fdbd298/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a58c80212892d88e199e6ab154404b80fdbd298/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2a58c80212892d88e199e6ab154404b80fdbd298", "patch": "@@ -1723,11 +1723,13 @@ gimple_can_merge_blocks_p (basic_block a, basic_block b)\n     }\n \n   /* Protect simple loop latches.  We only want to avoid merging\n-     the latch with the loop header in this case.  */\n+     the latch with the loop header or with a block in another\n+     loop in this case.  */\n   if (current_loops\n       && b->loop_father->latch == b\n       && loops_state_satisfies_p (LOOPS_HAVE_SIMPLE_LATCHES)\n-      && b->loop_father->header == a)\n+      && (b->loop_father->header == a\n+\t  || b->loop_father != a->loop_father))\n     return false;\n \n   /* It must be possible to eliminate all phi nodes in B.  If ssa form"}]}