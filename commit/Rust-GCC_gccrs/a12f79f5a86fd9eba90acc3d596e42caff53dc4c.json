{"sha": "a12f79f5a86fd9eba90acc3d596e42caff53dc4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEyZjc5ZjVhODZmZDllYmE5MGFjYzNkNTk2ZTQyY2FmZjUzZGM0Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-05-02T11:08:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-05-02T11:08:22Z"}, "message": "re PR tree-optimization/36100 (always_inline attribute is broken at -O0)\n\n\n\tPR bootstrap/36100\n\t* ipa-inline.c (inline_generate_summary): Make static.\n\t(inline_transform): Do not call inlining at -O0; make static.\n\t* passes.c (execute_todo): Add sanity check.\n\t(execute_one_ipa_transform_pass): Execute proper flags.\n\nFrom-SVN: r134885", "tree": {"sha": "e9d4290b8905df7717b722efa1c56535d86eea80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9d4290b8905df7717b722efa1c56535d86eea80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a12f79f5a86fd9eba90acc3d596e42caff53dc4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a12f79f5a86fd9eba90acc3d596e42caff53dc4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a12f79f5a86fd9eba90acc3d596e42caff53dc4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a12f79f5a86fd9eba90acc3d596e42caff53dc4c/comments", "author": null, "committer": null, "parents": [{"sha": "fa5b668e7e369b5c4394ffd7220aafe7b06ce7ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5b668e7e369b5c4394ffd7220aafe7b06ce7ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa5b668e7e369b5c4394ffd7220aafe7b06ce7ca"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "28a39b347cd97aa80dd8048f21e42a57d7267e7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a12f79f5a86fd9eba90acc3d596e42caff53dc4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a12f79f5a86fd9eba90acc3d596e42caff53dc4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a12f79f5a86fd9eba90acc3d596e42caff53dc4c", "patch": "@@ -1,3 +1,11 @@\n+2008-05-01  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR bootstrap/36100\n+\t* ipa-inline.c (inline_generate_summary): Make static.\n+\t(inline_transform): Do not call inlining at -O0; make static.\n+\t* passes.c (execute_todo): Add sanity check.\n+\t(execute_one_ipa_transform_pass): Execute proper flags.\n+\n 2008-05-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree.h (TYPE_NONALIASED_COMPONENT): Expand comment."}, {"sha": "81246d8d1a9d4aad14dc1ba57ad56a0206e4e6bd", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a12f79f5a86fd9eba90acc3d596e42caff53dc4c/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a12f79f5a86fd9eba90acc3d596e42caff53dc4c/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=a12f79f5a86fd9eba90acc3d596e42caff53dc4c", "patch": "@@ -1560,25 +1560,20 @@ struct gimple_opt_pass pass_inline_parameters =\n };\n \n /* Note function body size.  */\n-void\n+static void\n inline_generate_summary (struct cgraph_node *node ATTRIBUTE_UNUSED)\n {\n   compute_inline_parameters ();\n   return;\n }\n \n /* Apply inline plan to function.  */\n-int\n+static unsigned int\n inline_transform (struct cgraph_node *node)\n {\n   unsigned int todo = 0;\n   struct cgraph_edge *e;\n \n-  /* Even when not optimizing, ensure that always_inline functions get inlined.\n-   */\n-  if (!optimize)\n-   cgraph_decide_inlining_incrementally (node, INLINE_SPEED, 0);\n-\n   /* We might need the body of this function so that we can expand\n      it inline somewhere else.  */\n   if (cgraph_preserve_function_body_p (current_function_decl))"}, {"sha": "0ca26fe35a0a277fcedc9ab3a0f7919bc2be4784", "filename": "gcc/passes.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a12f79f5a86fd9eba90acc3d596e42caff53dc4c/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a12f79f5a86fd9eba90acc3d596e42caff53dc4c/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=a12f79f5a86fd9eba90acc3d596e42caff53dc4c", "patch": "@@ -999,11 +999,15 @@ execute_todo (unsigned int flags)\n      to analyze side effects.  The full removal is done just at the end\n      of IPA pass queue.  */\n   if (flags & TODO_remove_functions)\n-    cgraph_remove_unreachable_nodes (true, dump_file);\n+    {\n+      gcc_assert (!cfun);\n+      cgraph_remove_unreachable_nodes (true, dump_file);\n+    }\n \n   if ((flags & TODO_dump_cgraph)\n       && dump_file && !current_function_decl)\n     {\n+      gcc_assert (!cfun);\n       dump_cgraph (dump_file);\n       /* Flush the file.  If verification fails, we won't be able to\n \t close the file before aborting.  */\n@@ -1162,7 +1166,7 @@ execute_one_ipa_transform_pass (struct cgraph_node *node,\n   pass_init_dump_file (pass);\n \n   /* Run pre-pass verification.  */\n-  execute_todo (pass->todo_flags_start);\n+  execute_todo (ipa_pass->function_transform_todo_flags_start);\n \n   /* If a timevar is present, start it.  */\n   if (pass->tv_id)"}]}