{"sha": "edfe1ac771642d4061ee0767271f4a89861e7b92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRmZTFhYzc3MTY0MmQ0MDYxZWUwNzY3MjcxZjRhODk4NjFlN2I5Mg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-11-19T08:34:21Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-11-19T08:34:21Z"}, "message": "2003-11-19  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/Socket.java\n\t(implCreated): New variable that indicates created impl.\n\t(getImpl): New method.\n\t(toString): Return more SUN compliant string representation.\n\t(various): Use getImpl() instead of impl.\n\nFrom-SVN: r73732", "tree": {"sha": "d03f7fe83c6eb9fbedf8604b3f17d68fabfe7046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d03f7fe83c6eb9fbedf8604b3f17d68fabfe7046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edfe1ac771642d4061ee0767271f4a89861e7b92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edfe1ac771642d4061ee0767271f4a89861e7b92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edfe1ac771642d4061ee0767271f4a89861e7b92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edfe1ac771642d4061ee0767271f4a89861e7b92/comments", "author": null, "committer": null, "parents": [{"sha": "90db942b2752c1fea3a3b6f4a623710e1b88abd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90db942b2752c1fea3a3b6f4a623710e1b88abd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90db942b2752c1fea3a3b6f4a623710e1b88abd7"}], "stats": {"total": 191, "additions": 143, "deletions": 48}, "files": [{"sha": "d58d761ff8fbb6aab07f1e2b7e04de24d391a03f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe1ac771642d4061ee0767271f4a89861e7b92/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe1ac771642d4061ee0767271f4a89861e7b92/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=edfe1ac771642d4061ee0767271f4a89861e7b92", "patch": "@@ -1,3 +1,11 @@\n+2003-11-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/Socket.java\n+\t(implCreated): New variable that indicates created impl.\n+\t(getImpl): New method.\n+\t(toString): Return more SUN compliant string representation.\n+\t(various): Use getImpl() instead of impl.\n+\n 2003-11-19  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* lib/libjava.exp: Add DYLD_LIBRARY_PATH for darwin. Look for"}, {"sha": "14ee5b388eccb35cbfa9da54544b7105661203e1", "filename": "libjava/java/net/Socket.java", "status": "modified", "additions": 135, "deletions": 48, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfe1ac771642d4061ee0767271f4a89861e7b92/libjava%2Fjava%2Fnet%2FSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfe1ac771642d4061ee0767271f4a89861e7b92/libjava%2Fjava%2Fnet%2FSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocket.java?ref=edfe1ac771642d4061ee0767271f4a89861e7b92", "patch": "@@ -84,6 +84,8 @@\n    */\n   SocketImpl impl;\n \n+  private boolean implCreated = false;\n+\n   private boolean inputShutdown = false;\n   private boolean outputShutdown = false;\n \n@@ -296,6 +298,25 @@ private Socket(InetAddress raddr, int rport, InetAddress laddr, int lport,\n     // that default.  JDK 1.2 doc infers not to do a bind.\n   }\n \n+  private SocketImpl getImpl()\n+    throws SocketException\n+  {\n+    try\n+      {\n+\tif (!implCreated)\n+\t  {\n+\t    impl.create(true);\n+\t    implCreated = true;\n+\t  }\n+      }\n+    catch (IOException e)\n+      {\n+\tthrow new SocketException(e.getMessage());\n+      }\n+\n+    return impl;\n+  }\n+\n   /**\n    * Binds the socket to the givent local address/port\n    *\n@@ -323,13 +344,10 @@ public void bind (SocketAddress bindpoint) throws IOException\n \n     InetSocketAddress tmp = (InetSocketAddress) bindpoint;\n     \n-    // create socket\n-    impl.create (true);\n-    \n     // bind to address/port\n     try\n       {\n-        impl.bind (tmp.getAddress(), tmp.getPort());\n+        getImpl().bind (tmp.getAddress(), tmp.getPort());\n       }\n     catch (IOException exception)\n       {\n@@ -399,7 +417,7 @@ public void connect (SocketAddress endpoint, int timeout)\n \n     try\n       {\n-        impl.connect (endpoint, timeout);\n+        getImpl().connect (endpoint, timeout);\n       }\n     catch (IOException exception)\n       {\n@@ -426,7 +444,19 @@ public void connect (SocketAddress endpoint, int timeout)\n    */\n   public InetAddress getInetAddress ()\n   {\n-    return impl.getInetAddress();\n+    if (!isConnected())\n+      return null;\n+\n+    try\n+      {\n+\treturn getImpl().getInetAddress();\n+      }\n+    catch (SocketException e)\n+      {\n+\t// This cannot happen as we are connected.\n+      }\n+\n+    return null;\n   }\n \n   /**\n@@ -440,9 +470,10 @@ public InetAddress getInetAddress ()\n   public InetAddress getLocalAddress ()\n   {\n     InetAddress addr = null;\n+    \n     try\n       {\n-        addr = (InetAddress)impl.getOption(SocketOptions.SO_BINDADDR);\n+        addr = (InetAddress) getImpl().getOption(SocketOptions.SO_BINDADDR);\n       }\n     catch(SocketException e)\n       {\n@@ -472,8 +503,18 @@ public InetAddress getLocalAddress ()\n    */\n   public int getPort ()\n   {\n-    if (impl != null)\n-      return impl.getPort();\n+    if (!isConnected())\n+      return 0;\n+\n+    try\n+      {\n+\tif (getImpl() != null)\n+\t  return getImpl().getPort();\n+      }\n+    catch (SocketException e)\n+      {\n+\t// This cannot happen as we are connected.\n+      }\n \n     return -1;\n   }\n@@ -486,8 +527,18 @@ public int getPort ()\n    */\n   public int getLocalPort ()\n   {\n-    if (impl != null)\n-      return impl.getLocalPort();\n+    if (!isBound())\n+      return -1;\n+    \n+    try\n+      {\n+\tif (getImpl() != null)\n+\t  return getImpl().getLocalPort();\n+      }\n+    catch (SocketException e)\n+      {\n+\t// This cannot happen as we are bound.\n+      }\n \n     return -1;\n   }\n@@ -500,12 +551,20 @@ public int getLocalPort ()\n    */\n   public SocketAddress getLocalSocketAddress()\n   {\n-    InetAddress addr = getLocalAddress ();\n-\n-    if (addr == null)\n+    if (!isBound())\n       return null;\n     \n-    return new InetSocketAddress (addr, impl.getLocalPort());\n+    InetAddress addr = getLocalAddress ();\n+\n+    try\n+      {\n+\treturn new InetSocketAddress (addr, getImpl().getLocalPort());\n+      }\n+    catch (SocketException e)\n+      {\n+\t// This cannot happen as we are bound.\n+\treturn null;\n+      }\n   }\n \n   /**\n@@ -519,7 +578,15 @@ public SocketAddress getRemoteSocketAddress()\n     if (!isConnected ())\n       return null;\n \n-    return new InetSocketAddress (impl.getInetAddress (), impl.getPort ());\n+    try\n+      {\n+\treturn new InetSocketAddress (getImpl().getInetAddress (), getImpl().getPort ());\n+      }\n+    catch (SocketException e)\n+      {\n+\t// This cannot happen as we are connected.\n+\treturn null;\n+      }\n   }\n \n   /**\n@@ -531,8 +598,8 @@ public SocketAddress getRemoteSocketAddress()\n    */\n   public InputStream getInputStream () throws IOException\n   {\n-    if (impl != null)\n-      return(impl.getInputStream());\n+    if (getImpl() != null)\n+      return getImpl().getInputStream();\n \n     throw new IOException(\"Not connected\");\n   }\n@@ -546,8 +613,8 @@ public InputStream getInputStream () throws IOException\n    */\n   public OutputStream getOutputStream () throws IOException\n   {\n-    if (impl != null)\n-      return impl.getOutputStream();\n+    if (getImpl() != null)\n+      return getImpl().getOutputStream();\n \n     throw new IOException(\"Not connected\");\n   }\n@@ -563,7 +630,7 @@ public OutputStream getOutputStream () throws IOException\n    */\n   public void setTcpNoDelay (boolean on)  throws SocketException\n   {\n-    impl.setOption(SocketOptions.TCP_NODELAY, new Boolean(on));\n+    getImpl().setOption(SocketOptions.TCP_NODELAY, new Boolean(on));\n   }\n \n   /**\n@@ -580,7 +647,7 @@ public void setTcpNoDelay (boolean on)  throws SocketException\n    */\n   public boolean getTcpNoDelay() throws SocketException\n   {\n-    Object on = impl.getOption(SocketOptions.TCP_NODELAY);\n+    Object on = getImpl().getOption(SocketOptions.TCP_NODELAY);\n   \n     if (on instanceof Boolean)\n       return(((Boolean)on).booleanValue());\n@@ -615,11 +682,11 @@ public void setSoLinger(boolean on, int linger) throws SocketException\n         if (linger > 65535)\n           linger = 65535;\n \n-        impl.setOption(SocketOptions.SO_LINGER, new Integer(linger));\n+        getImpl().setOption(SocketOptions.SO_LINGER, new Integer(linger));\n       }\n     else\n       {\n-        impl.setOption(SocketOptions.SO_LINGER, new Boolean(false));\n+        getImpl().setOption(SocketOptions.SO_LINGER, new Boolean(false));\n       }\n   }\n \n@@ -641,7 +708,8 @@ public void setSoLinger(boolean on, int linger) throws SocketException\n    */\n   public int getSoLinger() throws SocketException\n   {\n-    Object linger = impl.getOption(SocketOptions.SO_LINGER);\n+    Object linger = getImpl().getOption(SocketOptions.SO_LINGER);\n+\n     if (linger instanceof Integer)\n       return(((Integer)linger).intValue());\n     else\n@@ -660,7 +728,7 @@ public int getSoLinger() throws SocketException\n    */\n   public void sendUrgentData (int data) throws IOException\n   {\n-    impl.sendUrgentData (data);\n+    getImpl().sendUrgentData (data);\n   }\n \n   /**\n@@ -674,7 +742,7 @@ public void sendUrgentData (int data) throws IOException\n    */\n   public void setOOBInline (boolean on) throws SocketException\n   {\n-    impl.setOption(SocketOptions.SO_OOBINLINE, new Boolean(on));\n+    getImpl().setOption(SocketOptions.SO_OOBINLINE, new Boolean(on));\n   }\n \n   /**\n@@ -686,7 +754,7 @@ public void setOOBInline (boolean on) throws SocketException\n    */\n   public boolean getOOBInline () throws SocketException\n   {\n-    Object buf = impl.getOption(SocketOptions.SO_OOBINLINE);\n+    Object buf = getImpl().getOption(SocketOptions.SO_OOBINLINE);\n \n     if (buf instanceof Boolean)\n       return(((Boolean)buf).booleanValue());\n@@ -716,7 +784,7 @@ public synchronized void setSoTimeout (int timeout) throws SocketException\n     if (timeout < 0)\n       throw new IllegalArgumentException(\"SO_TIMEOUT value must be >= 0\");\n       \n-    impl.setOption(SocketOptions.SO_TIMEOUT, new Integer(timeout));\n+    getImpl().setOption(SocketOptions.SO_TIMEOUT, new Integer(timeout));\n   }\n \n   /**\n@@ -738,7 +806,7 @@ public synchronized void setSoTimeout (int timeout) throws SocketException\n    */\n   public synchronized int getSoTimeout () throws SocketException\n   {\n-    Object timeout = impl.getOption(SocketOptions.SO_TIMEOUT);\n+    Object timeout = getImpl().getOption(SocketOptions.SO_TIMEOUT);\n     if (timeout instanceof Integer)\n       return(((Integer)timeout).intValue());\n     else\n@@ -762,7 +830,7 @@ public void setSendBufferSize (int size) throws SocketException\n     if (size <= 0)\n       throw new IllegalArgumentException(\"SO_SNDBUF value must be > 0\");\n     \n-    impl.setOption(SocketOptions.SO_SNDBUF, new Integer(size));\n+    getImpl().setOption(SocketOptions.SO_SNDBUF, new Integer(size));\n   }\n \n   /**\n@@ -778,7 +846,7 @@ public void setSendBufferSize (int size) throws SocketException\n    */\n   public int getSendBufferSize () throws SocketException\n   {\n-    Object buf = impl.getOption(SocketOptions.SO_SNDBUF);\n+    Object buf = getImpl().getOption(SocketOptions.SO_SNDBUF);\n \n     if (buf instanceof Integer)\n       return(((Integer)buf).intValue());\n@@ -803,7 +871,7 @@ public void setReceiveBufferSize (int size) throws SocketException\n     if (size <= 0)\n       throw new IllegalArgumentException(\"SO_RCVBUF value must be > 0\");\n       \n-    impl.setOption(SocketOptions.SO_RCVBUF, new Integer(size));\n+    getImpl().setOption(SocketOptions.SO_RCVBUF, new Integer(size));\n   }\n \n   /**\n@@ -819,7 +887,7 @@ public void setReceiveBufferSize (int size) throws SocketException\n    */\n   public int getReceiveBufferSize () throws SocketException\n   {\n-    Object buf = impl.getOption(SocketOptions.SO_RCVBUF);\n+    Object buf = getImpl().getOption(SocketOptions.SO_RCVBUF);\n \n     if (buf instanceof Integer)\n       return(((Integer)buf).intValue());\n@@ -839,7 +907,7 @@ public int getReceiveBufferSize () throws SocketException\n    */\n   public void setKeepAlive (boolean on) throws SocketException\n   {\n-    impl.setOption(SocketOptions.SO_KEEPALIVE, new Boolean(on));\n+    getImpl().setOption(SocketOptions.SO_KEEPALIVE, new Boolean(on));\n   }\n \n   /**\n@@ -854,7 +922,7 @@ public void setKeepAlive (boolean on) throws SocketException\n    */\n   public boolean getKeepAlive () throws SocketException\n   {\n-    Object buf = impl.getOption(SocketOptions.SO_KEEPALIVE);\n+    Object buf = getImpl().getOption(SocketOptions.SO_KEEPALIVE);\n \n     if (buf instanceof Boolean)\n       return(((Boolean)buf).booleanValue());\n@@ -869,8 +937,8 @@ public boolean getKeepAlive () throws SocketException\n    */\n   public synchronized void close ()  throws IOException\n   {\n-    if (impl != null)\n-      impl.close();\n+    if (getImpl() != null)\n+      getImpl().close();\n \n     if (getChannel() != null)\n       getChannel().close();\n@@ -885,7 +953,19 @@ public synchronized void close ()  throws IOException\n    */\n   public String toString ()\n   {\n-    return(\"Socket \" + impl);\n+    try\n+      {\n+\tif (isConnected())\n+\t  return (\"Socket[addr=\" + getImpl().getInetAddress()\n+\t\t  + \",port=\" + getImpl().getPort()\n+\t\t  + \",localport=\" + getImpl().getLocalPort());\n+      }\n+    catch (SocketException e)\n+      {\n+\t// This cannot happen as we are connected.\n+      }\n+\n+    return \"Socket[unconnected]\";\n   }\n \n   // Class Methods\n@@ -930,8 +1010,8 @@ public static synchronized void setSocketImplFactory (SocketImplFactory fac)\n    */\n   public void shutdownInput() throws IOException\n   {\n-    if (impl != null)\n-      impl.shutdownInput();\n+    if (getImpl() != null)\n+      getImpl().shutdownInput();\n \n     inputShutdown = true;\n   }\n@@ -945,8 +1025,8 @@ public void shutdownInput() throws IOException\n    */\n   public void shutdownOutput() throws IOException\n   {\n-    if (impl != null)\n-      impl.shutdownOutput();\n+    if (getImpl() != null)\n+      getImpl().shutdownOutput();\n     \n     outputShutdown = true;\n   }\n@@ -972,7 +1052,7 @@ public SocketChannel getChannel()\n    */\n   public boolean getReuseAddress () throws SocketException\n   {\n-    Object reuseaddr = impl.getOption (SocketOptions.SO_REUSEADDR);\n+    Object reuseaddr = getImpl().getOption (SocketOptions.SO_REUSEADDR);\n \n     if (!(reuseaddr instanceof Boolean))\n       throw new SocketException (\"Internal Error\");\n@@ -989,7 +1069,7 @@ public boolean getReuseAddress () throws SocketException\n    */\n   public void setReuseAddress (boolean on) throws SocketException\n   {\n-    impl.setOption (SocketOptions.SO_REUSEADDR, new Boolean (on));\n+    getImpl().setOption (SocketOptions.SO_REUSEADDR, new Boolean (on));\n   }\n \n   /**\n@@ -1003,7 +1083,7 @@ public void setReuseAddress (boolean on) throws SocketException\n    */\n   public int getTrafficClass () throws SocketException\n   {\n-    Object obj = impl.getOption(SocketOptions.IP_TOS);\n+    Object obj = getImpl().getOption(SocketOptions.IP_TOS);\n \n     if (obj instanceof Integer)\n       return ((Integer) obj).intValue ();\n@@ -1028,7 +1108,7 @@ public void setTrafficClass (int tc) throws SocketException\n     if (tc < 0 || tc > 255)\n       throw new IllegalArgumentException();\n \n-    impl.setOption (SocketOptions.IP_TOS, new Integer (tc));\n+    getImpl().setOption (SocketOptions.IP_TOS, new Integer (tc));\n   }\n \n   /**\n@@ -1038,7 +1118,14 @@ public void setTrafficClass (int tc) throws SocketException\n    */\n   public boolean isConnected ()\n   {\n-    return impl.getInetAddress () != null;\n+    try\n+      {\n+\treturn getImpl().getInetAddress () != null;\n+      }\n+    catch (SocketException e)\n+      {\n+\treturn false;\n+      }\n   }\n \n   /**"}]}