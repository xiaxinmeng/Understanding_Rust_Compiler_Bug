{"sha": "9f4a318c36db4565f126e4428ea856460437b27d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY0YTMxOGMzNmRiNDU2NWYxMjZlNDQyOGVhODU2NDYwNDM3YjI3ZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-04-02T23:40:01Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-04-02T23:40:01Z"}, "message": "libstdc++.exp (dg-test): Annotate result messages with $which_library as well as $tool_flags and...\n\n\t* testsuite/lib/libstdc++.exp (dg-test): Annotate result\n\tmessages with $which_library as well as $tool_flags and\n\t${dg-extra-tool-flags}.  Factor out annotation text into\n\ta single variable.\n\nFrom-SVN: r41029", "tree": {"sha": "1a754e3759305fe154e95bd2a8f64718e35809aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a754e3759305fe154e95bd2a8f64718e35809aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f4a318c36db4565f126e4428ea856460437b27d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4a318c36db4565f126e4428ea856460437b27d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f4a318c36db4565f126e4428ea856460437b27d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f4a318c36db4565f126e4428ea856460437b27d/comments", "author": null, "committer": null, "parents": [{"sha": "b6dabe8938fd45e84fe3c82f62fbfc946958302f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6dabe8938fd45e84fe3c82f62fbfc946958302f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6dabe8938fd45e84fe3c82f62fbfc946958302f"}], "stats": {"total": 343, "additions": 177, "deletions": 166}, "files": [{"sha": "30c9eb648cd724f073e8c419f6bea8baf8a8f471", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 160, "deletions": 153, "changes": 313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4a318c36db4565f126e4428ea856460437b27d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4a318c36db4565f126e4428ea856460437b27d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9f4a318c36db4565f126e4428ea856460437b27d", "patch": "@@ -1,9 +1,16 @@\n-2001-04-02  Stephen M. Webb  <stephen@bregmasoft.com> \n-\t\n+2001-04-02  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* testsuite/lib/libstdc++.exp (dg-test): Annotate result\n+\tmessages with $which_library as well as $tool_flags and\n+\t${dg-extra-tool-flags}.  Factor out annotation text into\n+\ta single variable.\n+\n+2001-04-02  Stephen M. Webb  <stephen@bregmasoft.com>\n+\n \t* include/c_std/bits/std_cstring.h: Fix for const-correctness.\n \t* include/c_std/bits/std_cwchar.h: Same.\n \t* testsuite/21_strings/c_strings.cc: Add.\n-\t\n+\n 2001-04-01  Benjamin Kosnik  <bkoz@codesourcery.com>\n \n \t* docs/html/configopts.html: Add --enable-sjlj-exceptions docs.\n@@ -53,7 +60,7 @@\n \t* src/Makefile.in: Regenerate.\n \t* testsuite/ext/headers.cc (main): Fix.\n \t* mkcheck.in: Fix.\n-\t\n+\n 2001-03-30  Phil Edwards  <pme@sources.redhat.com>\n \n \t* tests_flags.in (LIBS):  Pass correct path for installed testing.\n@@ -80,7 +87,7 @@\n \t(check): Change rule from this...\n \t(check-script):...to this.\n \t* Makefile.in: Regenerate.\n-\t\n+\n 2001-03-28  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* libsupc++/Makefile.am (CXXLINK): Add --tag disable-shared after\n@@ -94,19 +101,19 @@\n \t* acinclude.m4 (GLIBCPP_ENABLE_SJLJ_EXCEPTIONS): New.\n \t* configure.in: Use it.\n \t* Makefile.in, aclocal.m4, config.h.in, configure: Regenerate.\n-        * libsupc++/Makefile.am (sources): Update files list.\n-        * libsupc++/Makefile.in: Regenerate.\n-        * libsupc++/eh_alloc.cc, libsupc++/eh_aux_runtime.cc: New files.\n-        * libsupc++/eh_catch.cc, libsupc++/eh_exception.cc: New files.\n+\t* libsupc++/Makefile.am (sources): Update files list.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t* libsupc++/eh_alloc.cc, libsupc++/eh_aux_runtime.cc: New files.\n+\t* libsupc++/eh_catch.cc, libsupc++/eh_exception.cc: New files.\n \t* libsupc++/eh_globals.cc, libsupc++/eh_personality.cc: New files.\n-        * libsupc++/eh_terminate.cc, libsupc++/eh_throw.cc: New files.\n-        * libsupc++/exception_support.cc: Remove.\n-        * libsupc++/exception_support.h: Remove.\n-        * libsupc++/pure.cc: Use std::terminate.\n-        * libsupc++/tinfo2.cc (__throw_type_match_rtti_2): Remove.\n-        (__is_pointer): Remove.\n-        * libsupc++/unwind-cxx.h: New file.\n-        * libsupc++/vec.cc (uncatch_exception): Update for new abi.\n+\t* libsupc++/eh_terminate.cc, libsupc++/eh_throw.cc: New files.\n+\t* libsupc++/exception_support.cc: Remove.\n+\t* libsupc++/exception_support.h: Remove.\n+\t* libsupc++/pure.cc: Use std::terminate.\n+\t* libsupc++/tinfo2.cc (__throw_type_match_rtti_2): Remove.\n+\t(__is_pointer): Remove.\n+\t* libsupc++/unwind-cxx.h: New file.\n+\t* libsupc++/vec.cc (uncatch_exception): Update for new abi.\n \n 2001-03-27  Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -121,8 +128,8 @@\n \n 2001-03-26  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-        * libstdc++-v3/tests_flags.in: Change the order of libstdc++\n-          and libc \n+\t* libstdc++-v3/tests_flags.in: Change the order of libstdc++\n+\t  and libc\n \n 2001-03-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -142,8 +149,8 @@\n \t* config/basic_file_stdio.h: Same.\n \t* src/ios.cc (ios_base::Init::Init()): Unbuffer stdout by default.\n \t* testsuite/27_io/filebuf_members.cc: Tweaks.\n-\t* testsuite/27_io/ios_base_members_static.cc: Tweaks.\t\n-\t\n+\t* testsuite/27_io/ios_base_members_static.cc: Tweaks.\n+\n 2001-03-24  Phil Edwards  <pme@sources.redhat.com>\n \n \t* Makefile.am:  New targets, doxygen and doxygen-maint.\n@@ -237,23 +244,23 @@\n \t* include/bits/locale_facets.tcc (has_facet): Simplify.\n \t(use_facet): Same.\n \t* testsuite/27_io/filebuf.cc (test06): Add tests.\n-\t\n+\n 2001-03-13  Steve Ellcey  <sje@cup.hp.com>\n \n \t* libstdc++-v3/config/os/hpux/bits/ctype_base.h: Make ctype masks\n \tmatch HP-UX ctype.h header file.\n \n 2001-03-13  Andris Pavenis <pavenis@latnet.lv>\n \n-        * config/djgpp/bits/ctype_noninline.h: Fix typo and remove\n+\t* config/djgpp/bits/ctype_noninline.h: Fix typo and remove\n \tduplicate definitions of __dj_ctype_*\n \n 2001-03-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* libsupc++/new: Remove pragma interface.\n \t* libsupc++/typeinfo: Same.\n \t* libsupc++/exception: Same.\n-\t* libsupc++/new_handler.cc: Remove pragma implementation. \n+\t* libsupc++/new_handler.cc: Remove pragma implementation.\n \t(bad_alloc::~bad_alloc()): Add.\n \t* libsupc++/exception_support.cc: Same.\n \t(exception::~exception): Add.\n@@ -275,11 +282,11 @@\n \tFixups for -fno-for-scope\n \t* include/bits/locale_facets.tcc (__match_parallel): Fixup.\n \t* src/valarray-inst.cc (__gslice_to_index): Same.\n-\t\n+\n 2001-03-12  Rodney Brown  <RodneyBrown@mynd.com>\n \n-        * src/gen-num-limits.cc (traps) [SPECIALIZE_TRAPPING]: Add fflush\n-        prior to trapping signal (UnixWare 7 workaround).\n+\t* src/gen-num-limits.cc (traps) [SPECIALIZE_TRAPPING]: Add fflush\n+\tprior to trapping signal (UnixWare 7 workaround).\n \n 2001-03-12  Craig Rodrigues  <rodrigc@mediaone.net>\n \n@@ -296,8 +303,8 @@\n \n 2001-03-11  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-        * include/ext/stl_hashtable.h: Change type of __n to size_t  \n-        * include/backward/bvector.h: Include <ext/stl_bvector.h> \n+\t* include/ext/stl_hashtable.h: Change type of __n to size_t\n+\t* include/backward/bvector.h: Include <ext/stl_bvector.h>\n \n 2001-03-09  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n \n@@ -309,12 +316,12 @@\n \n \t* testsuite/27_io/streambuf.cc (test06): New test, disabled at the\n \tmoment.\n-\t\n+\n 2001-03-08  Andreas Schwab  <schwab@suse.de>\n \n \t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO): Fix syntax in test\n \tcommand.\n-        * aclocal.m4, configure: Regenerated.\n+\t* aclocal.m4, configure: Regenerated.\n \n 2001-03-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -331,7 +338,7 @@\n \tvalues to off_type.\n \t(test05): Same.\n \tChangeup output files.\n-\t* testsuite/27_io/istream_unformatted.cc: Change output files.\t\n+\t* testsuite/27_io/istream_unformatted.cc: Change output files.\n \t* testsuite/27_io/istream_seeks-1.txt: Add.\n \t* testsuite/27_io/istream_seeks-2.tst: Add.\n \t* testsuite/27_io/istream_seeks-1.tst: Add.\n@@ -342,15 +349,15 @@\n 2001-03-07  Alexandre Oliva  <aoliva@redhat.com>\n \n \tAdd Irix 5.2, 6.3 support.\n-        * config/os/irix/bits: Renamed to...\n-        * config/os/irix/irix6.5/bits: this.\n-        * config/os/irix/irix5.2/bits: New, copied from irix6.5/bits.\n-        * config/os/irix/irix5.2/bits/ctype_base.h: Use _U, _L, _N,\n-        _X, _S, _P, _C and _B instead of IRIX-6.5 _IS* macros.\n-        * config/os/irix/irix5.2/bits/ctype_noninline.h\n-        (ctype<char>::ctype): Initialize _M_table with __ctype.\n-        * configure.target: Adjust.\n-    \n+\t* config/os/irix/bits: Renamed to...\n+\t* config/os/irix/irix6.5/bits: this.\n+\t* config/os/irix/irix5.2/bits: New, copied from irix6.5/bits.\n+\t* config/os/irix/irix5.2/bits/ctype_base.h: Use _U, _L, _N,\n+\t_X, _S, _P, _C and _B instead of IRIX-6.5 _IS* macros.\n+\t* config/os/irix/irix5.2/bits/ctype_noninline.h\n+\t(ctype<char>::ctype): Initialize _M_table with __ctype.\n+\t* configure.target: Adjust.\n+\n 2001-03-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/2181\n@@ -363,39 +370,39 @@\n \t(*__pf)(ios_base&))): Same.\n \t* testsuite/27_io/istream_extractor_other.cc: Add tests.\n \t* testsuite/27_io/istream_manip.cc (test01): Fix.\n-\t\n-2001-03-06  Nathan Myers  <ncm@cantrip.org> \n+\n+2001-03-06  Nathan Myers  <ncm@cantrip.org>\n \t    Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c_std/bits/std_cerrno.h: Don't define errno in std::.\n \t* testsuite/17_intro/header_cerrno.cc (test01): New file.\n \t* testsuite/17_intro/header_cassert.cc (test01): New file.\n \t* testsuite/17_intro/header_cstddef.cc (test01): New file.\n-\t* testsuite/17_intro/header_csetjmp.cc (test01): New file.\t\n-\t* testsuite/17_intro/header_cstdarg.cc (test01): New file.\t\n+\t* testsuite/17_intro/header_csetjmp.cc (test01): New file.\n+\t* testsuite/17_intro/header_cstdarg.cc (test01): New file.\n \n 2001-03-05  scott snyder  <snyder@fnal.gov>\n \n \tlibstdc++/2190\n-        * include/c_std/bits/std_cmath.h: Move abs(long), div(long,long)\n-        from here...\n-        * include/c_std/bits/std_cstdlib.h: ... to here.\n+\t* include/c_std/bits/std_cmath.h: Move abs(long), div(long,long)\n+\tfrom here...\n+\t* include/c_std/bits/std_cstdlib.h: ... to here.\n \t* testsuite/17_intro/header_cstdlib.cc: Add test.\n-\t\n+\n 2001-03-05  Stephen M. Webb  <stephen.webb@cybersafe.com>\n \n \t* libsupc++/vec.cc (__cxxa_vec_new2): Qualify size_t.\n \n 2001-03-05  Laurynas Biveinis  <lauras@softhome.net>\n \n-        * config/os/djgpp/ctype_base.h (ctype_base): fix __to_type\n+\t* config/os/djgpp/ctype_base.h (ctype_base): fix __to_type\n \tdefinition. Replace enum with static const variables.\n-\t\t\n+\n \t* config/os/djgpp/ctype_inline.h (ctype<char>::is): remove\n \tthrow specification, fix typos, use <static_cast>.\n \t(ctype<char>::scan_is): remove throw specification.\n \t(ctype<char>::scan_not): likewise.\n-\t\t\t\t\t\t\n+\n \t* config/os/djgpp/ctype_noninline.h (ctype<char>::ctype): fix typo.\n \t(ctype<char>::do_toupper(char)): use <static_cast>.\n \t(ctype<char>::do_toupper(char *, const char *)): likewise.\n@@ -514,7 +521,7 @@\n \n 2001-03-02  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-        * include/bits/istream.tcc: change type of __extracted to __size_type \n+\t* include/bits/istream.tcc: change type of __extracted to __size_type\n \n 2001-03-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -528,8 +535,8 @@\n \n 2001-03-02  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-        * src/locale.cc: initialise __ret with zero\n-        * src/strstream.cc:cast gptr to int_type\n+\t* src/locale.cc: initialise __ret with zero\n+\t* src/strstream.cc:cast gptr to int_type\n \n 2001-03-01  Phil Edwards  <pme@sources.redhat.com>\n \n@@ -587,7 +594,7 @@\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \t* testsuite/27_io/filebuf.cc (test05): Add regression.\n-\t\n+\n 2001-02-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tCorrect license.\n@@ -778,26 +785,26 @@\n 2001-02-16  Greg Bumgardner <bumgard@roguewave.com>\n \n \tlibstdc++/1734\n-        * include/bits/std_ostream.h: Replaced usage of\n-        _Traits::_S_eos() with _CharT() as per section 17.2.2.1.3.  \n-        * include/bits/char_traits.h: Removed non-standard\n-        methods that cannot be used elsewhere.  \n-\t\n+\t* include/bits/std_ostream.h: Replaced usage of\n+\t_Traits::_S_eos() with _CharT() as per section 17.2.2.1.3.\n+\t* include/bits/char_traits.h: Removed non-standard\n+\tmethods that cannot be used elsewhere.\n+\n \tlibstdc++/1885\n-        * include/bits/basic_ios.h: Uncommented #include of\n-        bits/basic_ios.tcc \n-\t\n+\t* include/bits/basic_ios.h: Uncommented #include of\n+\tbits/basic_ios.tcc\n+\n \tlibstdc++/1897\n-        * include/bits/codecvt.h: See next...\n-        * include/bits/fstream.tcc: See next...\n-        * include/bits/ostream.tcc: Add __extension__ \n-        to variable-length arrays.  \n-\t\n+\t* include/bits/codecvt.h: See next...\n+\t* include/bits/fstream.tcc: See next...\n+\t* include/bits/ostream.tcc: Add __extension__\n+\tto variable-length arrays.\n+\n \tlibstdc++/1967\n-        * include/bits/localefwd.h: Changed int counter type to size_t.\n+\t* include/bits/localefwd.h: Changed int counter type to size_t.\n \n \tlibstdc++/1968\n-        * include/bits/std_fstream.h: Added typedef for __ctype_type.\n+\t* include/bits/std_fstream.h: Added typedef for __ctype_type.\n \n 2001-02-16  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -809,7 +816,7 @@\n 2001-02-16  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* libmath/mathconf.h (FINITE_P, INFINITE_P): Remove macro\n-\tdefinitions. \n+\tdefinitions.\n \n 2001-02-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -821,27 +828,27 @@\n \tiostate throughout.  Insert `typename' keyword where necessary.\n \t* include/bits/ostream.tcc: Insert `typename' keyword where\n \tnecessary.\n-\t\n+\n 2001-02-15  Jeffrey Oldham  <oldham@codesourcery.com>\n \n-        * include/bits/c++config (_GLIBCPP_FULLY_COMPLIANT_HEADERS):\n-        Define so library is compliant.\n+\t* include/bits/c++config (_GLIBCPP_FULLY_COMPLIANT_HEADERS):\n+\tDefine so library is compliant.\n \n 2001-02-15  Anthony Green  <green@redhat.com>\n \n-        * acinclude.m4 (glibcpp_toolexeclibdir): Fix test for cross\n-        compilation.\n-        * aclocal.m4: Regenerate.\n-        * configure: Regenerate.\n+\t* acinclude.m4 (glibcpp_toolexeclibdir): Fix test for cross\n+\tcompilation.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n \n 2001-02-15  Rodney Brown  <RodneyBrown@mynd.com>\n \n-        * acinclude.m4 (GLIBCPP_CHECK_MATH_DECL_1):\n-        Include ieeefp.h for fpclass on UnixWare{2,7}.\n+\t* acinclude.m4 (GLIBCPP_CHECK_MATH_DECL_1):\n+\tInclude ieeefp.h for fpclass on UnixWare{2,7}.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-        * mkcheck.in (size_command): Do without GNU-grep when using\n-        size from binutils.\n+\t* mkcheck.in (size_command): Do without GNU-grep when using\n+\tsize from binutils.\n \n 2001-02-15  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -951,15 +958,15 @@\n 2001-02-15  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* testsuite/lib/libstdc++.exp: Lift, temporarily, out of\n-        dejagnu/dg.exp.  Adapt to log options used to run testcases.\n+\tdejagnu/dg.exp.  Adapt to log options used to run testcases.\n \n 2001-02-13  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n \n \t* testsuite/lib/libstdc++.exp(dg-test): Lift temporarily from\n \tdejagnu/dg.exp.\n \n 2001-02-13  Dirk Mueller <dmuell@gmx.net>\n-            Phil Edwards  <pme@sources.redhat.com>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n \n \t* include/backward/function.h:  Do not use rel_ops for older\n \t  headers either.\n@@ -992,7 +999,7 @@\n \n 2001-02-11  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n-\t* src/valarray-inst.cc (gslice::_Indexer::_Indexer): Don't flip \n+\t* src/valarray-inst.cc (gslice::_Indexer::_Indexer): Don't flip\n \tlengths and strides.\n \t(__gslice_to_index): Document.\n \n@@ -1013,7 +1020,7 @@\n \n 2001-02-08  Loren J. Rittle  <ljrittle@acm.org>\n \n-        * src/locale-inst.cc (fill_n): Instantiate with size_t arguments.\n+\t* src/locale-inst.cc (fill_n): Instantiate with size_t arguments.\n \n 2001-02-08  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -1035,7 +1042,7 @@\n \t* src/Makefile.in: Regenerate.\n \t* include/bits/std_stdexcept.h: Rewrite.\n \t* src/stdexcept.cc: Same.\n-\t\n+\n 2001-02-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO): Deal with library\n@@ -1073,7 +1080,7 @@\n \t__group_digits.\n \t* src/locale-inst.cc: Fixup names. Add use_facet instantiations\n \tfor collate, numpunct.\n-\t\n+\n 2001-02-06  Phil Edwards  <pme@sources.redhat.com>\n \n \t* docs/html/configopts.html:  Fix HTML markup.\n@@ -1093,7 +1100,7 @@\n \t(_S_copy_streambufs): Likewise.\n \n 2001-02-06  Hyman Rosen  <Hyman.Rosen@kbcfp.com>\n-            Phil Edwards  <pme@sources.redhat.com>\n+\t    Phil Edwards  <pme@sources.redhat.com>\n \n \t* include/bits/std_istream.h (op>> signed,unsigned char):  Must\n \t  use reinterpret_cast, not static_cast.\n@@ -1103,7 +1110,7 @@\n \t* acinclude.m4 (gxx_include_dir): Quote, fix regression.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2001-02-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.h (class moneypunct): Fix typos.\n@@ -1120,7 +1127,7 @@\n \t(GLIBCPP_CHECK_MATH_SUPPORT): Remove explicit checks for _* versions.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2001-02-05  Mark Mitchell  <mark@codesourcery.com>\n \n \t* include/bits/locale_facets.tcc: Remove `static' keyword on\n@@ -1139,22 +1146,22 @@\n \tinstalled.\n \t* aclocal.m4: Regenerate.\n \t* configure.in: Use it.\n-\t* configure: Regenerate.\t\n+\t* configure: Regenerate.\n \t* src/Makefile.am (targetincludep): Use simplified rules.\n \t(targetincludep): Rename gxx_target_include_dir.\n \t(myincludep): Rename gxx_include_dir.\n \t* src/Makefile.in: Regenerate.\n \t* libsupc++/Makefile.am: Use simplified rules.\n \t* libsupc++/Makefile.in: Regenerate.\n-\t\n+\n 2001-02-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c_std/bits/std_cerrno.h: Correct date format for copyright.\n \t* include/c_std/bits/std_cctype.h: Same.\n \t* include/c_std/bits/std_cassert.h: Same.\n \t* include/c_std/bits/std_cstdarg.h: Same.\n \t* include/c_std/bits/std_cstddef.h: Same.\n-\t\n+\n \t* include/c_std/bits/std_cstdio.h: Undefine all names brought into\n \tnamespace std.\n \t* include/c_std/bits/std_ctime.h: Same.\n@@ -1165,7 +1172,7 @@\n \t* include/c_std/bits/std_cstring.h: Same.\n \t* include/c_std/bits/std_cstdlib.h: Same.\n \t* include/c_std/bits/std_cwchar.h: Same.\n-\t\n+\n 2001-02-05  Phil Edwards  <pme@sources.redhat.com>\n \n \t* testsuite/27_io/ios_base_members_static.cc:  Swap order of tests.\n@@ -1188,13 +1195,13 @@\n \t* libsupc++/tinfo2.cc (std::typeinfo::before): Likewise.\n \n 2001-02-03  Alexandre Oliva  <aoliva@redhat.com>\n-            Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\t    Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n-        * Makefile.am (mkinstalldirs): Set.\n-        * src/Makefile.am (mkinstalldirs): Set.\n-        * libmath/Makefile.am (mkinstalldirs): Set.\n-        * libsup++/Makefile.am (mkinstalldirs): Set.\n-        * libio/Makefile.am (mkinstalldirs): Set.\t\n+\t* Makefile.am (mkinstalldirs): Set.\n+\t* src/Makefile.am (mkinstalldirs): Set.\n+\t* libmath/Makefile.am (mkinstalldirs): Set.\n+\t* libsup++/Makefile.am (mkinstalldirs): Set.\n+\t* libio/Makefile.am (mkinstalldirs): Set.\n \t* */Makefile.in: Regenerate.\n \n 2001-02-03  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -1209,7 +1216,7 @@\n \t(_S_ios_openmode_end): Similarly.\n \t(_S_ios_iostate_end): Similarly.\n \t(_S_ios_Seekdir_end): Similarly.\n-\t\n+\n 2001-02-02  Phil Edwards  <pme@sources.redhat.com>\n \n \t* mkcheck.in:  Also limit virtual memory size, for mmap-based mallocs.\n@@ -1239,22 +1246,22 @@\n \t* src/Makefile.am (sources): Add c++locale.cc.\n \t(build_headers): Add c++locale.h.\n \t* src/Makefile.in: Regenerate.\n-\t* config/c_locale_gnu.h: New file. \t\n+\t* config/c_locale_gnu.h: New file.\n \t* config/c_locale_gnu.cc: New file. Non-inline member functions\n \tfor named locales, gnu-specific.\n-\t* config/c_locale_generic.h: New file. \t\t\n+\t* config/c_locale_generic.h: New file.\n \t* config/c_locale_generic.cc: New file. Non-inline member\n \tfunctions for named locales, generic version.\n \t* docs/html/configopts.html: Add documentation on new options.\n \n \t* include/bits/locale_facets.h (class _Messages): Remove.\n \t(class _Moneypunct): Remove.\n \t* src/locale-inst.cc: Remove.\n-\t\n+\n \t* include/bits/locale_facets.h (class _Collate): Remove.\n \t* src/locale-inst.cc (std): Remove.\n \t* src/locale.cc: And here.\n-\t\n+\n \t* include/bits/localefwd.h (locale::_M_coalesce): New\n \tfunction. Correctly put together multi-name locales.\n \t(_Impl(const _Impl&, category, size_t)): Remove.\n@@ -1266,16 +1273,16 @@\n \n \t* src/localename.cc (locale::_Impl::_M_construct_collate): Remove.\n \t(locale::_Impl::_M_construct_ctype): Remove.\n-\t(locale::_Impl::_M_construct_monetary): Remove.\t\n-\t(locale::_Impl::_M_construct_numeric): Remove.\t\n-\t(locale::_Impl::_M_construct_time): Remove.\t\t\n-\t(locale::_Impl::_M_construct_messages): Remove.\t\t\n+\t(locale::_Impl::_M_construct_monetary): Remove.\n+\t(locale::_Impl::_M_construct_numeric): Remove.\n+\t(locale::_Impl::_M_construct_time): Remove.\n+\t(locale::_Impl::_M_construct_messages): Remove.\n \n \t* include/bits/locale_facets.h (_Bad_use_facet): Remove.\n \t(_Use_facet_failure_handle): Remove.\n \t* src/locale.cc: Remove definitions.\n \t* src/locale-inst.cc: And here.\n-\t\n+\n \t* testsuite/22_locale/ctor_copy_dtor.cc (test01): Fixup. Add tests.\n \n \t* src/localename.cc (locale::facet::_S_create_c_locale): Properly\n@@ -1285,14 +1292,14 @@\n \t* include/bits/localefwd.h (locale::facet): Declare.\n \t* testsuite/22_locale/members.cc: Don't test \"fr_FR\" locale for\n \tcorrectness, as glibc apparently has incorrect info in it. Test\n-\twith it when it works again.....\t\n+\twith it when it works again.....\n \n \t* include/bits/localefwd.h (locale::_Impl::__vec_string):\n \tRemove. Number of categories is fixed at six, so just simplify and\n \tmake this an array of strings.\n \t(locale::_Impl::_M_has_name): Remove.\n-\t(locale::_Impl::_M_name): Remove.\t\n-\t(locale::_Impl::_M_category_names): Turns into...\t\n+\t(locale::_Impl::_M_name): Remove.\n+\t(locale::_Impl::_M_category_names): Turns into...\n \t(locale::_Impl::_M_names): ...this.\n \t(locale::_Impl::_M_has_same_name()): New function.\n \t* src/localename.cc (locale::_Impl::~_Impl()): Remove here.\n@@ -1315,8 +1322,8 @@\n \n \t* src/locale.cc: Remove numpunct_byname ctors.\n \t* testsuite/22_locale/numpunct_byname.cc: New file.\n-\t* testsuite/22_locale/numpunct.cc: New file.\t\n-\t\n+\t* testsuite/22_locale/numpunct.cc: New file.\n+\n \t* include/bits/localefwd.h (class locale): Change data members to\n \tprotected, from private.\n \t(_Impl::_M_get_c_locale): Add member function.\n@@ -1326,7 +1333,7 @@\n \t(numpunct::numpunct( __c_locale*, size_t)): Add additonal ctor for\n \tnamed locales.\n \t* testsuite/22_locale/members.cc: New file, test name and combine.\n-\t\n+\n \t* include/bits/locale_facets.h (class numpunct): Remove class\n \t_Punct and _Numpunct. Rewrite class numpunct to be correct for\n \tnamed locales.\n@@ -1335,7 +1342,7 @@\n \t(_Imp::_Impl(size_t, size_t, bool, string)) Initialize _M_c_locale.\n \t* src/locale-inst.cc: Remove _Numpunct, _Punct instantiations.\n \t* testsuite/22_locale/numpunct_char_members.cc: New file.\n-\t\n+\n 2001-01-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* testsuite/README: Add more comment.\n@@ -1347,14 +1354,14 @@\n \n 2001-01-25  Loren J. Rittle  <ljrittle@acm.org>\n \n-        * testsuite/21_strings/inserters_extractors.cc: Remove\n-        explicit reference to 'testsuite/'.\n+\t* testsuite/21_strings/inserters_extractors.cc: Remove\n+\texplicit reference to 'testsuite/'.\n \n 2001-01-25  Richard Henderson  <rth@redhat.com>\n \n \t* config/cpu/alpha/bits/atomicity.h: Remove tricky .subsetion\n \tbits. Fixes Tru64 build issues.\n-\t\n+\n 2001-01-25  Michael Sokolov  <msokolov@ivan.Harhan.ORG>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_GNU_MAKE): Bourne shell portability bug\n@@ -1394,7 +1401,7 @@\n \t* tests_flags.in: Remove reference to $(top_srcdir).  Use\n \t${SRC_DIR} instead.\n \t* Makefile.am (check, check-install): Change mkcheck invocation\n-\tlogic. \n+\tlogic.\n \t* Makefile.in: Regenerate.\n \n 2001-01-24  Mark Mitchell  <mark@codesourcery.com>\n@@ -1421,7 +1428,7 @@\n \t* acinclude.m4 (GLIBCPP_CHECK_CTYPE_SUPPORT): Remove.\n \t(GLIBCPP_ENABLE_ATOMICITY): Remove.\n \t* aclocal.m4: Regenerate.\n-\t\n+\n 2001-01-23  Chris Demetriou  <cgd@broadcom.com>\n \n \t* configure.in: Place definition of MULTISUBDIR in\n@@ -1443,15 +1450,15 @@\n \n 2001-01-23  Mark Mitchell  <mark@codesourcery.com>\n \n-        * ainclude.m4 (GLIBCPP_CHEC_MATH_DECLS_AND_LINKAGE_1): New macro.\n-        (GLIBCPP_CHECK_MATH_SUPPORT): Use it.\n-        (GLIBCPP_CHECK_TYPE_SUPPORT): Don't autoconf ctype information if\n-        its already provided in config.target.\n-        * aclocal.m4: Regenerated.\n-        * configure: Likewise.\n-        * configure.target: Set ctype_include_dir for lots of systems.\n-        * libsupc++/Makefile.am: Explicitly include --tag disable-shared.\n-        * libsupc++/Makefile.in: Regenerated.\n+\t* ainclude.m4 (GLIBCPP_CHEC_MATH_DECLS_AND_LINKAGE_1): New macro.\n+\t(GLIBCPP_CHECK_MATH_SUPPORT): Use it.\n+\t(GLIBCPP_CHECK_TYPE_SUPPORT): Don't autoconf ctype information if\n+\tits already provided in config.target.\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Likewise.\n+\t* configure.target: Set ctype_include_dir for lots of systems.\n+\t* libsupc++/Makefile.am: Explicitly include --tag disable-shared.\n+\t* libsupc++/Makefile.in: Regenerated.\n \n 2001-01-23  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n@@ -1482,18 +1489,18 @@\n 2001-01-19  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* testsuite/17_intro: Prepare testcases for new style DejaGnu\n-\tframework. \n+\tframework.\n \n 2001-01-18  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* testsuite/libstdc++.tests, testsuite/lib: New directories.\n \n 2001-01-17  Loren J. Rittle  <ljrittle@acm.org>\n \n-        * mkcheck.in: Construct file names that match $objdir structure.\n-        * testsuite/27_io/filebuf_members-1.txt: New file.\n-        * testsuite/27_io/ifstream_members-1.txt: New file.\n-        * testsuite/27_io/ostream_inserter_char-1.txt: New file.\n+\t* mkcheck.in: Construct file names that match $objdir structure.\n+\t* testsuite/27_io/filebuf_members-1.txt: New file.\n+\t* testsuite/27_io/ifstream_members-1.txt: New file.\n+\t* testsuite/27_io/ostream_inserter_char-1.txt: New file.\n \n \t* testsuite/27_io/ios_base_members_static.cc (test02): Add test.\n \t* testsuite/27_io/ios_base_members_static-1.tst: Add expected output.\n@@ -1507,16 +1514,16 @@\n \tlibstdc++/1605\n \t* include/bits/ios_base.h (ios_base::failure): Tighten up throw specs.\n \t* src/ios.cc (ios_base::failure): Make definitions match.\n-        * libsupc++/typeinfo (class bad_typeid): Add throw specs.\n-        (class bad_cast): Same.\n-        * libsupc++/exception (class exception): Add throw specs.\n-        * libsupc++/exception_support.cc (set_terminate): Add throw specs.\n-        (set_unexpected): Same.\n-        (uncaught_exception): Same.\n-        (what): Same.\n+\t* libsupc++/typeinfo (class bad_typeid): Add throw specs.\n+\t(class bad_cast): Same.\n+\t* libsupc++/exception (class exception): Add throw specs.\n+\t* libsupc++/exception_support.cc (set_terminate): Add throw specs.\n+\t(set_unexpected): Same.\n+\t(uncaught_exception): Same.\n+\t(what): Same.\n \n \t* docs/html/17_intro/C++STYLE (classname): Fix.\n-\t\n+\n 2001-01-16  Mark Mitchell  <mark@codesourcery.com>\n \n \t* src/gen-num-limits.cc (INSTANTIATIONS): New macro.\n@@ -1546,7 +1553,7 @@\n \n \tlibstdc++/1019\n \treported by Paolo Carlini <pcarlini@unitus.it>\n-\t* include/bits/istream.tcc (operator>>(istream&, string&)): Fix. \n+\t* include/bits/istream.tcc (operator>>(istream&, string&)): Fix.\n \t* testsuite/21_strings/inserters_extractors.cc (test08): Add test.\n \n \tlibstdc++/1057\n@@ -1555,7 +1562,7 @@\n \t(xsgetn): Same. Simplify.\n \t* testsuite/27_io/streambuf.cc (test04): Add testcases.\n \n-\treported by Larry Evans <jcampbell3@prodigy.net> \n+\treported by Larry Evans <jcampbell3@prodigy.net>\n \t* include/bits/streambuf.tcc (streambuf::xsputn): Just check for\n \tequality with eof on returned value from overflow.\n \n@@ -1599,10 +1606,10 @@\n \n 2001-01-10  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-         * include/bits/std_complex.h: Fix a typo.\n+\t * include/bits/std_complex.h: Fix a typo.\n \n 2001-01-09  Benjamin Kosnik  <bkoz@redhat.com>\n-\t                     <kainz@ilm.com>\n+\t\t\t     <kainz@ilm.com>\n \n \tFixes for libstdc++/1576\n \t* src/stdstreams.cc: Initialize with NULL filebuf. Delete\n@@ -1620,7 +1627,7 @@\n \n 2001-01-09  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-         * include/bits/std_complex.h: Fix a typo.\n+\t * include/bits/std_complex.h: Fix a typo.\n \n 2001-01-09  Loren J. Rittle  <ljrittle@acm.org>\n \n@@ -1671,8 +1678,8 @@\n \n 2001-01-04  Loren J. Rittle  <ljrittle@acm.org>\n \n-        * config/c_io_stdio.cc (__basic_file<_CharT>::sys_open()): On\n-        systems that support it, call dup() before fdopen().\n+\t* config/c_io_stdio.cc (__basic_file<_CharT>::sys_open()): On\n+\tsystems that support it, call dup() before fdopen().\n \n 2001-01-03  Benjamin Kosnik  <bkoz@redhat.com>\n "}, {"sha": "5d9633b9b4215283661720cec8fc357719b86d8a", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f4a318c36db4565f126e4428ea856460437b27d/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f4a318c36db4565f126e4428ea856460437b27d/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=9f4a318c36db4565f126e4428ea856460437b27d", "patch": "@@ -326,6 +326,7 @@ proc dg-test { args } {\n     global tool\n     global srcdir\t\t;# eg: /calvin/dje/devo/gcc/./testsuite/\n     global host_triplet target_triplet\n+    global which_library\n \n     set keep 0\n     set i 0\n@@ -411,6 +412,9 @@ proc dg-test { args } {\n     rename unknown \"\"\n     rename dg-save-unknown unknown\n \n+    # Record the final set of flags, to tag log entries with.\n+    set label \"$which_library $tool_flags ${dg-extra-tool-flags}\"\n+\n     # If we're not supposed to try this test on this target, we're done.\n     if { [lindex ${dg-do-what} 1] == \"N\" } {\n \tunsupported \"$name\"\n@@ -458,28 +462,28 @@ proc dg-test { args } {\n \tscan $line ${dg-linenum-format} line\n \tswitch [lindex $i 1] {\n \t    \"ERROR\" {\n-\t\t$ok \"$name $comment (test for errors, line $line), $tool_flags ${dg-extra-tool-flags}\"\n+\t\t$ok \"$name $comment (test for errors, line $line), $label\"\n \t    }\n \t    \"XERROR\" {\n-\t\tx$ok \"$name $comment (test for errors, line $line), $tool_flags ${dg-extra-tool-flags}\"\n+\t\tx$ok \"$name $comment (test for errors, line $line), $label\"\n \t    }\n \t    \"WARNING\" {\n-\t\t$ok \"$name $comment (test for warnings, line $line), $tool_flags ${dg-extra-tool-flags}\"\n+\t\t$ok \"$name $comment (test for warnings, line $line), $label\"\n \t    }\n \t    \"XWARNING\" {\n-\t\tx$ok \"$name $comment (test for warnings, line $line), $tool_flags ${dg-extra-tool-flags}\"\n+\t\tx$ok \"$name $comment (test for warnings, line $line), $label\"\n \t    }\n \t    \"BOGUS\" {\n-\t\t$uhoh \"$name $comment (test for bogus messages, line $line), $tool_flags ${dg-extra-tool-flags}\"\n+\t\t$uhoh \"$name $comment (test for bogus messages, line $line), $label\"\n \t    }\n \t    \"XBOGUS\" {\n-\t\tx$uhoh \"$name $comment (test for bogus messages, line $line), $tool_flags ${dg-extra-tool-flags}\"\n+\t\tx$uhoh \"$name $comment (test for bogus messages, line $line), $label\"\n \t    }\n \t    \"BUILD\" {\n-\t\t$uhoh \"$name $comment (test for build failure, line $line), $tool_flags ${dg-extra-tool-flags}\"\n+\t\t$uhoh \"$name $comment (test for build failure, line $line), $label\"\n \t    }\n \t    \"XBUILD\" {\n-\t\tx$uhoh \"$name $comment (test for build failure, line $line), $tool_flags ${dg-extra-tool-flags}\"\n+\t\tx$uhoh \"$name $comment (test for build failure, line $line), $label\"\n \t    }\n \t    \"EXEC\" { }\n \t    \"XEXEC\" { }\n@@ -526,10 +530,10 @@ proc dg-test { args } {\n \t    setup_xfail \"*-*-*\"\n \t}\n \tif ![string match \"\" $comp_output] {\n-\t    fail \"$name (test for excess errors), $tool_flags ${dg-extra-tool-flags}\"\n+\t    fail \"$name (test for excess errors), $label\"\n \t    send_log \"Excess errors:\\n$comp_output\\n\"\n \t} else {\n-\t    pass \"$name (test for excess errors), $tool_flags ${dg-extra-tool-flags}\"\n+\t    pass \"$name (test for excess errors), $label\"\n \t}\n     }\n \n@@ -549,7 +553,7 @@ proc dg-test { args } {\n \t\tsetup_xfail \"*-*-*\"\n \t    }\n \t    if { \"$status\" == \"pass\" } {\n-\t\tpass \"$name (execution test), $tool_flags ${dg-extra-tool-flags}\"\n+\t\tpass \"$name (execution test), $label\"\n \t\tverbose \"Exec succeeded.\" 3\n \t\tif { [llength ${dg-output-text}] > 1 } {\n \t\t    #send_user \"${dg-output-text}\\n\"\n@@ -573,9 +577,9 @@ proc dg-test { args } {\n \t\t} else {\n \t\t    verbose \"Exec failed, errorCode not defined!\" 3\n \t\t}\n-\t\tfail \"$name (execution test), $tool_flags ${dg-extra-tool-flags}\"\n+\t\tfail \"$name (execution test), $label\"\n \t    } else {\n-\t\t$status \"$name (execution test), $tool_flags ${dg-extra-tool-flags}\"\n+\t\t$status \"$name (execution test), $label\"\n \t    }\n \t}\n     }"}]}