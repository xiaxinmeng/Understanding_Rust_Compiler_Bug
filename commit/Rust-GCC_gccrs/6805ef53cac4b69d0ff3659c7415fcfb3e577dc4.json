{"sha": "6805ef53cac4b69d0ff3659c7415fcfb3e577dc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgwNWVmNTNjYWM0YjY5ZDBmZjM2NTljNzQxNWZjZmIzZTU3N2RjNA==", "commit": {"author": {"name": "Klaus Kaempf", "email": "kkaempf@progis.de", "date": "1998-06-09T12:12:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-06-09T12:12:13Z"}, "message": "vms.h (EXTRA_SECTIONS): Add in_ctors and in_dtors.\n\n        * alpha/vms.h (EXTRA_SECTIONS): Add in_ctors and in_dtors.\n        (EXTRA_SECTION_FUNCTIONS): Add ctors_section and dtors_section.\n        (ASM_OUTPUT_CONSTRUCTOR, ASM_OUTPUT_DESTRUCTOR): Define.\n\nFrom-SVN: r20376", "tree": {"sha": "4b5a1955bdc6a23556307d84e585934ea926a351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b5a1955bdc6a23556307d84e585934ea926a351"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6805ef53cac4b69d0ff3659c7415fcfb3e577dc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6805ef53cac4b69d0ff3659c7415fcfb3e577dc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6805ef53cac4b69d0ff3659c7415fcfb3e577dc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6805ef53cac4b69d0ff3659c7415fcfb3e577dc4/comments", "author": null, "committer": null, "parents": [{"sha": "d23a1bb1274291149ed419b2a89ed80e73b4d0ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23a1bb1274291149ed419b2a89ed80e73b4d0ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d23a1bb1274291149ed419b2a89ed80e73b4d0ca"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "22ae6658b2885e215c13810d5e5d1b8c2fca329e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6805ef53cac4b69d0ff3659c7415fcfb3e577dc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6805ef53cac4b69d0ff3659c7415fcfb3e577dc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6805ef53cac4b69d0ff3659c7415fcfb3e577dc4", "patch": "@@ -1,3 +1,9 @@\n+Tue Jun  9 12:12:34 1998  Klaus Kaempf (kkaempf@progis.de)\n+\n+\t* alpha/vms.h (EXTRA_SECTIONS): Add in_ctors and in_dtors.\n+\t(EXTRA_SECTION_FUNCTIONS): Add ctors_section and dtors_section.       \n+\t(ASM_OUTPUT_CONSTRUCTOR, ASM_OUTPUT_DESTRUCTOR): Define.                \n+\n Tue Jun  9 12:10:27 1998  John Carr  <jfc@mit.edu>\n \n         * haifa-sched.c (update_flow_info): Use UNITS_PER_WORD, not MOVE_MAX,"}, {"sha": "2909af6e7b221c46dfa80b1f46cf0a24bf6d5678", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6805ef53cac4b69d0ff3659c7415fcfb3e577dc4/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6805ef53cac4b69d0ff3659c7415fcfb3e577dc4/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=6805ef53cac4b69d0ff3659c7415fcfb3e577dc4", "patch": "@@ -289,9 +289,11 @@ extern struct rtx_def *alpha_arg_info_reg_val ();\n #define LINK_SECTION_ASM_OP \".link\"\n #define READONLY_SECTION_ASM_OP \".rdata\"\n #define LITERALS_SECTION_ASM_OP \".literals\"\n+#define CTORS_SECTION_ASM_OP \".ctors\"\n+#define DTORS_SECTION_ASM_OP \".dtors\"\n \n #undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS\tin_link, in_rdata, in_literals\n+#define EXTRA_SECTIONS\tin_link, in_rdata, in_literals, in_ctors, in_dtors\n \n #undef EXTRA_SECTION_FUNCTIONS\n #define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\\\n@@ -321,6 +323,24 @@ literals_section ()\t\t\t\t\t\t\\\n       fprintf (asm_out_file, \"%s\\n\", LITERALS_SECTION_ASM_OP); \t\\\n       in_section = in_literals;\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+ctors_section ()\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_ctors)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", CTORS_SECTION_ASM_OP);\t\\\n+      in_section = in_ctors;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+dtors_section ()\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_dtors)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", DTORS_SECTION_ASM_OP);\t\\\n+      in_section = in_dtors;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n }\n \n #undef ASM_OUTPUT_ADDR_DIFF_ELT\n@@ -399,6 +419,26 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef TRANSFER_FROM_TRAMPOLINE\n \n+/* A C statement (sans semicolon) to output an element in the table of\n+   global constructors.  */\n+#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    ctors_section ();\t\t\t\t\t\\\n+    fprintf (FILE, \"\\t.quad \"); \t\t\t\\\n+    assemble_name (FILE, NAME); \t\t\t\\\n+    fprintf (FILE, \"\\n\");\t\t\t\t\\\n+  } while (0)\n+\n+/* A C statement (sans semicolon) to output an element in the table of\n+   global destructors.\t*/\n+#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    dtors_section ();\t\t\t\t\t\\\n+    fprintf (FILE, \"\\t.quad \"); \t\t\t\\\n+    assemble_name (FILE, NAME); \t\t\t\\\n+    fprintf (FILE, \"\\n\");\t\t\t\t\\\n+  } while (0)\n+\n #define VALID_MACHINE_DECL_ATTRIBUTE(DECL, ATTRIBUTES, NAME, ARGS) \\\n   (vms_valid_decl_attribute_p (DECL, ATTRIBUTES, NAME, ARGS))\n extern int vms_valid_decl_attribute_p ();"}]}