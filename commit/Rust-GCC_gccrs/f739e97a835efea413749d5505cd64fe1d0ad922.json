{"sha": "f739e97a835efea413749d5505cd64fe1d0ad922", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjczOWU5N2E4MzVlZmVhNDEzNzQ5ZDU1MDVjZDY0ZmUxZDBhZDkyMg==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2012-10-10T10:25:03Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2012-10-10T10:25:03Z"}, "message": "PR middle-end/54860 - Make sure attributes hash table is created\n\nOn targets cris-elf, alpha and sparc (for instance) it can happen that\nthe attribute_tables variable is empty for fortran.  Thus\nregister_scoped_attributes (called by init_attributes) won't call\nregister_scoped_attributes, so the hash table member of\nscoped_attributes is not created.\n\nLater when we try to e.g, lookup an attribute by calling\nlookup_scoped_attribute_spec, that NULL member hash table comes to\nbyte us as htab_find_with_hash crashes.\n\nThis patch fixes this by ensuring in register_scoped_attributes that\nthe hash table is created.\n\nTested on cris-elf, x86_64-unknown-linux-gnu against trunk and some\ncommenters on the bug bootstrapped it on alpha and sparc.\n\ngcc/\n\n\t* attribs.c (register_scoped_attributes): Ensure the attribute\n\thash table is created.\n\nFrom-SVN: r192301", "tree": {"sha": "2d29ef6bfdcbd1ad25cfc850c1e0cf2fe33e563e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d29ef6bfdcbd1ad25cfc850c1e0cf2fe33e563e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f739e97a835efea413749d5505cd64fe1d0ad922", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f739e97a835efea413749d5505cd64fe1d0ad922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f739e97a835efea413749d5505cd64fe1d0ad922", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f739e97a835efea413749d5505cd64fe1d0ad922/comments", "author": null, "committer": null, "parents": [{"sha": "d072812eb51d021d887430459b60a5b627eae7f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d072812eb51d021d887430459b60a5b627eae7f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d072812eb51d021d887430459b60a5b627eae7f3"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "ab78559836e44bb182adee2facddf673d02d5587", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f739e97a835efea413749d5505cd64fe1d0ad922/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f739e97a835efea413749d5505cd64fe1d0ad922/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f739e97a835efea413749d5505cd64fe1d0ad922", "patch": "@@ -1,3 +1,9 @@\n+2012-10-10  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR middle-end/54860 - Make sure attributes hash table is created\n+\t* attribs.c (register_scoped_attributes): Ensure the attribute\n+\thash table is created.\n+\n 2012-10-10  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n \n \tPR target/51109"}, {"sha": "d167c1f6e13fe550e8d9a932e44792bbfde19e2a", "filename": "gcc/attribs.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f739e97a835efea413749d5505cd64fe1d0ad922/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f739e97a835efea413749d5505cd64fe1d0ad922/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=f739e97a835efea413749d5505cd64fe1d0ad922", "patch": "@@ -146,7 +146,8 @@ register_scoped_attributes (const struct attribute_spec * attributes,\n       memset (&sa, 0, sizeof (sa));\n       sa.ns = ns;\n       sa.attributes = VEC_alloc (attribute_spec, heap, 64);\n-      result = VEC_safe_push (scoped_attributes, heap, attributes_table, sa);      \n+      result = VEC_safe_push (scoped_attributes, heap, attributes_table, sa);\n+      result->attribute_hash = htab_create (200, hash_attr, eq_attr, NULL);\n     }\n \n   /* Really add the attributes to their namespace now.  */\n@@ -284,8 +285,7 @@ register_scoped_attribute (const struct attribute_spec *attr,\n \n   gcc_assert (attr != NULL && name_space != NULL);\n \n-  if (name_space->attribute_hash == NULL)\n-   name_space->attribute_hash = htab_create (200, hash_attr, eq_attr, NULL);\n+  gcc_assert (name_space->attribute_hash != NULL);\n \n   str.str = attr->name;\n   str.length = strlen (str.str);"}]}