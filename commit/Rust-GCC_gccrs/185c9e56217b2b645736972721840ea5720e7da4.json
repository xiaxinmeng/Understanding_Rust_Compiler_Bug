{"sha": "185c9e56217b2b645736972721840ea5720e7da4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg1YzllNTYyMTdiMmI2NDU3MzY5NzI3MjE4NDBlYTU3MjBlN2RhNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-01-19T15:20:16Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-01-19T15:20:16Z"}, "message": "IPA ICF: add no_icf attribute.\n\n\t* c-common.c (handle_noicf_attribute): New function.\n\t* doc/extend.texi (no_icf): Add new attribute description.\n\t* ipa-icf.c (sem_item_optimizer::merge_classes): Handle cases\n\twhere the pass attempts to merge a function with no_icf attribute.\n\t* gcc.dg/ipa/ipa-icf-33.c: New test.\n\nFrom-SVN: r219848", "tree": {"sha": "606d4253fc1a5473eb60955880ac752e49f992bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/606d4253fc1a5473eb60955880ac752e49f992bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/185c9e56217b2b645736972721840ea5720e7da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/185c9e56217b2b645736972721840ea5720e7da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/185c9e56217b2b645736972721840ea5720e7da4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/185c9e56217b2b645736972721840ea5720e7da4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b24671f781462b8ba66481e57053d87fce26a5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24671f781462b8ba66481e57053d87fce26a5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b24671f781462b8ba66481e57053d87fce26a5d8"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "48341c53e1c4efaa3f1d5e62ebb2e18a3d34ac53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185c9e56217b2b645736972721840ea5720e7da4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185c9e56217b2b645736972721840ea5720e7da4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=185c9e56217b2b645736972721840ea5720e7da4", "patch": "@@ -1,3 +1,9 @@\n+2015-01-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/extend.texi (no_icf): Add new attribute description.\n+\t* ipa-icf.c (sem_item_optimizer::merge_classes): Handle cases\n+\twhere the pass attempts to merge a function with no_icf attribute.\n+\n 2015-01-19  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/64532"}, {"sha": "df56b3109921f602f600aa9bbf22b024831c1851", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=185c9e56217b2b645736972721840ea5720e7da4", "patch": "@@ -1,3 +1,7 @@\n+2015-01-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-common.c (handle_noicf_attribute): New function.\n+\n 2015-01-15  Thomas Schwinge  <thomas@codesourcery.com>\n \t    Bernd Schmidt  <bernds@codesourcery.com>\n \t    James Norris  <jnorris@codesourcery.com>"}, {"sha": "3c18d1cc915689ac18dda4512f47d641cdf882ca", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=185c9e56217b2b645736972721840ea5720e7da4", "patch": "@@ -330,6 +330,7 @@ static tree handle_no_sanitize_undefined_attribute (tree *, tree, tree, int,\n static tree handle_stack_protect_attribute (tree *, tree, tree, int, bool *);\n static tree handle_noinline_attribute (tree *, tree, tree, int, bool *);\n static tree handle_noclone_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_noicf_attribute (tree *, tree, tree, int, bool *);\n static tree handle_leaf_attribute (tree *, tree, tree, int, bool *);\n static tree handle_always_inline_attribute (tree *, tree, tree, int,\n \t\t\t\t\t    bool *);\n@@ -664,6 +665,8 @@ const struct attribute_spec c_common_attribute_table[] =\n \t\t\t      handle_noinline_attribute, false },\n   { \"noclone\",                0, 0, true,  false, false,\n \t\t\t      handle_noclone_attribute, false },\n+  { \"no_icf\",                 0, 0, true,  false, false,\n+\t\t\t      handle_noicf_attribute, false },\n   { \"leaf\",                   0, 0, true,  false, false,\n \t\t\t      handle_leaf_attribute, false },\n   { \"always_inline\",          0, 0, true,  false, false,\n@@ -6853,6 +6856,24 @@ handle_noclone_attribute (tree *node, tree name,\n   return NULL_TREE;\n }\n \n+/* Handle a \"no_icf\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_noicf_attribute (tree *node, tree name,\n+\t\t\ttree ARG_UNUSED (args),\n+\t\t\tint ARG_UNUSED (flags), bool *no_add_attrs)\n+{\n+  if (TREE_CODE (*node) != FUNCTION_DECL)\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+\n /* Handle a \"always_inline\" attribute; arguments as in\n    struct attribute_spec.handler.  */\n "}, {"sha": "ba921e914bdbf729450e6006dd929e134c78c2a1", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=185c9e56217b2b645736972721840ea5720e7da4", "patch": "@@ -2195,6 +2195,7 @@ attribute specification inside double parentheses.  The following\n attributes are currently defined for functions on all targets:\n @code{aligned}, @code{alloc_size}, @code{alloc_align}, @code{assume_aligned},\n @code{noreturn}, @code{returns_twice}, @code{noinline}, @code{noclone},\n+@code{no_icf},\n @code{always_inline}, @code{flatten}, @code{pure}, @code{const},\n @code{nothrow}, @code{sentinel}, @code{format}, @code{format_arg},\n @code{no_instrument_function}, @code{no_split_stack},\n@@ -3475,6 +3476,11 @@ cloning---a mechanism that produces specialized copies of functions\n and which is (currently) performed by interprocedural constant\n propagation.\n \n+@item no_icf\n+@cindex @code{no_icf} function attribute\n+This function attribute prevents a functions from being merged with another\n+semantically equivalent function.\n+\n @item nonnull (@var{arg-index}, @dots{})\n @cindex @code{nonnull} function attribute\n The @code{nonnull} attribute specifies that some function parameters should"}, {"sha": "a91fd98b807784d7449943f09c5419879e3a2a73", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=185c9e56217b2b645736972721840ea5720e7da4", "patch": "@@ -2373,6 +2373,16 @@ sem_item_optimizer::merge_classes (unsigned int prev_class_count)\n \t\t\t source->asm_name (), alias->asm_name ());\n \t      }\n \n+\t    if (lookup_attribute (\"no_icf\", DECL_ATTRIBUTES (alias->decl)))\n+\t      {\n+\t        if (dump_file)\n+\t\t  fprintf (dump_file,\n+\t\t\t   \"Merge operation is skipped due to no_icf \"\n+\t\t\t   \"attribute.\\n\\n\");\n+\n+\t\tcontinue;\n+\t      }\n+\n \t    if (dump_file && (dump_flags & TDF_DETAILS))\n \t      {\n \t\tsource->dump_to_file (dump_file);"}, {"sha": "fa357a3bc34a66e032173284fa0ecebde170ba83", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=185c9e56217b2b645736972721840ea5720e7da4", "patch": "@@ -1,3 +1,7 @@\n+2015-01-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/ipa/ipa-icf-33.c: New test.\n+\n 2015-01-19  Felix Yang  <felix.yang@huawei.com>\n \t    Haijian Zhang  <z.zhanghaijian@huawei.com>\n "}, {"sha": "d7e814dda3a838a7cf1530e816aeaa14a539887a", "filename": "gcc/testsuite/gcc.dg/ipa/ipa-icf-33.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/185c9e56217b2b645736972721840ea5720e7da4/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipa-icf-33.c?ref=185c9e56217b2b645736972721840ea5720e7da4", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -fipa-icf -fdump-ipa-icf\"  } */\n+\n+#include <stdio.h>\n+\n+static int\n+__attribute__ ((no_icf))\n+foo()\n+{\n+  return 2;\n+}\n+\n+static int\n+__attribute__ ((no_icf))\n+bar()\n+{\n+  return 2;\n+}\n+\n+int main()\n+{\n+  return foo() - bar();\n+}\n+\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 1\" \"icf\"  } } */\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 1\" \"icf\"  } } */\n+/* { dg-final { cleanup-ipa-dump \"icf\" } } */"}]}