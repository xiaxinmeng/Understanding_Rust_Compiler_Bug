{"sha": "04572513c7bf1b351b95c2f6ecf78fec8cbe306a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ1NzI1MTNjN2JmMWIzNTFiOTVjMmY2ZWNmNzhmZWM4Y2JlMzA2YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "1999-12-06T19:31:13Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1999-12-06T19:31:13Z"}, "message": "calls.c (save_fixed_argument_area): If save_mode is BLKmode, always use move_by_pieces to avoid infinite recursion.\n\n\t* calls.c (save_fixed_argument_area): If save_mode is BLKmode,\n\talways use move_by_pieces to avoid infinite recursion.\n\t(restore_fixed_argument_area): Likewise.\n\nFrom-SVN: r30805", "tree": {"sha": "c87294c7e154e34926afbab2e9a7919f97fa9cd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c87294c7e154e34926afbab2e9a7919f97fa9cd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04572513c7bf1b351b95c2f6ecf78fec8cbe306a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04572513c7bf1b351b95c2f6ecf78fec8cbe306a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04572513c7bf1b351b95c2f6ecf78fec8cbe306a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04572513c7bf1b351b95c2f6ecf78fec8cbe306a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50352c9c62fd4b48e237d809ecf1a1e25de3fe30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50352c9c62fd4b48e237d809ecf1a1e25de3fe30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50352c9c62fd4b48e237d809ecf1a1e25de3fe30"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "f2c318137c41a0aefa2d512dbe7760429fd7524a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04572513c7bf1b351b95c2f6ecf78fec8cbe306a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04572513c7bf1b351b95c2f6ecf78fec8cbe306a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04572513c7bf1b351b95c2f6ecf78fec8cbe306a", "patch": "@@ -13,6 +13,10 @@\n \t* config/sparc/sparc.c (input_operand): Allow HImode and QImode\n \tvalid sethi operations when TARGET_ARCH64.\n \n+\t* calls.c (save_fixed_argument_area): If save_mode is BLKmode,\n+\talways use move_by_pieces to avoid infinite recursion.\n+\t(restore_fixed_argument_area): Likewise.\n+\n Mon Dec  6 12:24:52 1999  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* fold-const.c (optimize_bit_field_compare): Only use one mode"}, {"sha": "33b425d87844004cdbc38bb0506e62d8dedfcd87", "filename": "gcc/calls.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04572513c7bf1b351b95c2f6ecf78fec8cbe306a/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04572513c7bf1b351b95c2f6ecf78fec8cbe306a/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=04572513c7bf1b351b95c2f6ecf78fec8cbe306a", "patch": "@@ -743,9 +743,11 @@ save_fixed_argument_area (reg_parm_stack_space, argblock,\n       if (save_mode == BLKmode)\n \t{\n \t  save_area = assign_stack_temp (BLKmode, num_to_save, 0);\n-\t  emit_block_move (validize_mem (save_area), stack_area,\n-\t\t\t   GEN_INT (num_to_save),\n-\t\t\t   PARM_BOUNDARY / BITS_PER_UNIT);\n+\t  /* Cannot use emit_block_move here because it can be done by a library\n+\t     call which in turn gets into this place again and deadly infinite\n+\t     recursion happens.  */\n+\t  move_by_pieces (validize_mem (save_area), stack_area, num_to_save,\n+\t\t\t  PARM_BOUNDARY / BITS_PER_UNIT);\n \t}\n       else\n \t{\n@@ -781,9 +783,12 @@ restore_fixed_argument_area (save_area, argblock, high_to_save, low_to_save)\n   if (save_mode != BLKmode)\n     emit_move_insn (stack_area, save_area);\n   else\n-    emit_block_move (stack_area, validize_mem (save_area),\n-\t\t     GEN_INT (high_to_save - low_to_save + 1),\n-\t\t     PARM_BOUNDARY / BITS_PER_UNIT);\n+    /* Cannot use emit_block_move here because it can be done by a library\n+       call which in turn gets into this place again and deadly infinite\n+       recursion happens.  */\n+    move_by_pieces (stack_area, validize_mem (save_area),\n+\t\t    high_to_save - low_to_save + 1,\n+\t\t    PARM_BOUNDARY / BITS_PER_UNIT);\n }\n #endif\n \t  "}]}