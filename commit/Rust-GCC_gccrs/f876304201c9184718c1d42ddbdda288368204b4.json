{"sha": "f876304201c9184718c1d42ddbdda288368204b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg3NjMwNDIwMWM5MTg0NzE4YzFkNDJkZGJkZGEyODgzNjgyMDRiNA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2017-06-02T16:02:24Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2017-06-02T16:02:24Z"}, "message": "vx_crtbegin_auto.c: New file.\n\n2017-06-02  Olivier Hainque  <hainque@adacore.com>\n\n\t* vx_crtbegin_auto.c: New file.\n\t* vx_crtbegin.c: New file.\n\t* vx_crtbegin.inc: New file.\n\t* vx_crtend.c: New file.\n\nFrom-SVN: r248837", "tree": {"sha": "4d21f509030a90fa8fdb3d2f880313635e757b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d21f509030a90fa8fdb3d2f880313635e757b95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f876304201c9184718c1d42ddbdda288368204b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f876304201c9184718c1d42ddbdda288368204b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f876304201c9184718c1d42ddbdda288368204b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f876304201c9184718c1d42ddbdda288368204b4/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffa8a92137cd41829d477be4ef1c1c28849ffee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa8a92137cd41829d477be4ef1c1c28849ffee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa8a92137cd41829d477be4ef1c1c28849ffee1"}], "stats": {"total": 219, "additions": 219, "deletions": 0}, "files": [{"sha": "1b1a8f178dd6ef729b73fcc9989c95669c5241ec", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f876304201c9184718c1d42ddbdda288368204b4", "patch": "@@ -1,3 +1,10 @@\n+2017-06-02  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* vx_crtbegin_auto.c: New file.\n+\t* vx_crtbegin.c: New file.\n+\t* vx_crtbegin.inc: New file.\n+\t* vx_crtend.c: New file.\n+\n 2017-05-25  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* gcc-interface/utils2.c (compare_elmt_bitpos): Remove redundant"}, {"sha": "82c2993faf9d5e5221ce8da75bbf129c08149b77", "filename": "gcc/ada/vx_crtbegin.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2Fvx_crtbegin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2Fvx_crtbegin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvx_crtbegin.c?ref=f876304201c9184718c1d42ddbdda288368204b4", "patch": "@@ -0,0 +1,39 @@\n+/****************************************************************************\n+ *                                                                          *\n+ *                         GNAT COMPILER COMPONENTS                         *\n+ *                                                                          *\n+ *                          V X _ C R T B E G I N                           *\n+ *                                                                          *\n+ *                          C Implementation File                           *\n+ *                                                                          *\n+ *              Copyright (C) 2016, Free Software Foundation, Inc.          *\n+ *                                                                          *\n+ * GNAT is free software;  you can  redistribute it  and/or modify it under *\n+ * terms of the  GNU General Public License as published  by the Free Soft- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n+ *                                                                          *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n+ *                                                                          *\n+ * GNAT was originally developed  by the GNAT team at  New York University. *\n+ * Extensive contributions were provided by Ada Core Technologies Inc.      *\n+ *                                                                          *\n+ ****************************************************************************/\n+\n+/* crtbegin kind of file for ehframe registration/deregistration\n+   purposes on VxWorks.  This variant exposes the ctor/dtor functions\n+   as visible entities so they're picked by the WRS muncher.  */\n+\n+#define CDTOR_VISIBILITY\n+#include \"vx_crtbegin.inc\"\n+\n+"}, {"sha": "111310b697f50e79b4347f371833706c726bf2cd", "filename": "gcc/ada/vx_crtbegin.inc", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2Fvx_crtbegin.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2Fvx_crtbegin.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvx_crtbegin.inc?ref=f876304201c9184718c1d42ddbdda288368204b4", "patch": "@@ -0,0 +1,76 @@\n+/****************************************************************************\n+ *                                                                          *\n+ *                         GNAT COMPILER COMPONENTS                         *\n+ *                                                                          *\n+ *                          V X _ C R T B E G I N                           *\n+ *                                                                          *\n+ *                          C Implementation File                           *\n+ *                                                                          *\n+ *              Copyright (C) 2016, Free Software Foundation, Inc.          *\n+ *                                                                          *\n+ * GNAT is free software;  you can  redistribute it  and/or modify it under *\n+ * terms of the  GNU General Public License as published  by the Free Soft- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n+ *                                                                          *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n+ *                                                                          *\n+ * GNAT was originally developed  by the GNAT team at  New York University. *\n+ * Extensive contributions were provided by Ada Core Technologies Inc.      *\n+ *                                                                          *\n+ ****************************************************************************/\n+\n+/* Common body for the various flavors of vx_crtbegin C sources we need\n+   to perform eh frame registration/deregistration in various\n+   circumstances.  #includers should define CDTOR_VISIBILITY. */\n+\n+#include \"tconfig.h\"\n+#include \"tsystem.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"unwind-dw2-fde.h\"\n+\n+/* Pick names that the VxWorks muncher will get if involved.\n+   Note: ppc64-vx7 diab uses \"_STI_15...\" for C++ in kernel mode,\n+   not \"_GLOBAL__{I,D}...\". ???  */\n+\n+#ifdef __RTP__\n+/* 101 is the highest user level priority allowed by VxWorks.  */\n+#define CTOR_NAME _STI__101____crtbe_register_frame\n+#define DTOR_NAME _STI__101____crtbe_deregister_frame\n+#define CTOR_ATTRIBUTE __attribute__((constructor(101)))\n+#define DTOR_ATTRIBUTE __attribute__((destructor(101)))\n+#else\n+#define CTOR_NAME _GLOBAL__I___crtbe_register_frame\n+#define DTOR_NAME _GLOBAL__D___crtbe_deregister_frame\n+#define CTOR_ATTRIBUTE __attribute__((unused))\n+#define DTOR_ATTRIBUTE __attribute__((unused))\n+#endif\n+\n+CDTOR_VISIBILITY void CTOR_NAME (void) CTOR_ATTRIBUTE;\n+CDTOR_VISIBILITY void DTOR_NAME (void) DTOR_ATTRIBUTE;\n+\n+static const char __EH_FRAME_BEGIN__[]\n+__attribute__((section(EH_FRAME_SECTION_NAME), aligned(4)))\n+  = { };\n+\n+CDTOR_VISIBILITY void CTOR_NAME (void)\n+{\n+  static struct object object;\n+  __register_frame_info (__EH_FRAME_BEGIN__, &object);\n+}\n+\n+CDTOR_VISIBILITY void DTOR_NAME (void)\n+{\n+  __deregister_frame_info (__EH_FRAME_BEGIN__);\n+}\n+"}, {"sha": "b1eb3f5983f9443d7f8953b100c885ae4df4ff5d", "filename": "gcc/ada/vx_crtbegin_auto.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2Fvx_crtbegin_auto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2Fvx_crtbegin_auto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvx_crtbegin_auto.c?ref=f876304201c9184718c1d42ddbdda288368204b4", "patch": "@@ -0,0 +1,44 @@\n+/****************************************************************************\n+ *                                                                          *\n+ *                         GNAT COMPILER COMPONENTS                         *\n+ *                                                                          *\n+ *                          V X _ C R T B E G I N                           *\n+ *                                                                          *\n+ *                          C Implementation File                           *\n+ *                                                                          *\n+ *              Copyright (C) 2016, Free Software Foundation, Inc.          *\n+ *                                                                          *\n+ * GNAT is free software;  you can  redistribute it  and/or modify it under *\n+ * terms of the  GNU General Public License as published  by the Free Soft- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n+ *                                                                          *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n+ *                                                                          *\n+ * GNAT was originally developed  by the GNAT team at  New York University. *\n+ * Extensive contributions were provided by Ada Core Technologies Inc.      *\n+ *                                                                          *\n+ ****************************************************************************/\n+\n+/* crtbegin kind of file for ehframe registration/deregistration\n+   purposes on VxWorks.  This variant provides _ctors and _dtors\n+   arrays that the kernel module loader knows to process when it has\n+   been configured for this purpose (c++ constructor strategy set to\n+   automatic).  The ctor/dtor functions need not be visible in this\n+   case.  */\n+\n+#define CDTOR_VISIBILITY static\n+#include \"vx_crtbegin.inc\"\n+\n+typedef void (*func_ptr) (void);\n+func_ptr _dtors [] = {DTOR_NAME, 0};\n+func_ptr _ctors [] = {CTOR_NAME, 0};"}, {"sha": "0c04d5dd92ad43b0a8e42eb184704b1cf8de1325", "filename": "gcc/ada/vx_crtend.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2Fvx_crtend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f876304201c9184718c1d42ddbdda288368204b4/gcc%2Fada%2Fvx_crtend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvx_crtend.c?ref=f876304201c9184718c1d42ddbdda288368204b4", "patch": "@@ -0,0 +1,53 @@\n+/****************************************************************************\n+ *                                                                          *\n+ *                         GNAT COMPILER COMPONENTS                         *\n+ *                                                                          *\n+ *                            V X _ C R T E N D                             *\n+ *                                                                          *\n+ *                          C Implementation File                           *\n+ *                                                                          *\n+ *              Copyright (C) 2016, Free Software Foundation, Inc.          *\n+ *                                                                          *\n+ * GNAT is free software;  you can  redistribute it  and/or modify it under *\n+ * terms of the  GNU General Public License as published  by the Free Soft- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n+ *                                                                          *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n+ *                                                                          *\n+ * GNAT was originally developed  by the GNAT team at  New York University. *\n+ * Extensive contributions were provided by Ada Core Technologies Inc.      *\n+ *                                                                          *\n+ ****************************************************************************/\n+\n+/* crtend kind of file for ehframe registration/deregistration\n+   purposes on VxWorks.  */\n+\n+#include \"tconfig.h\"\n+#include \"tsystem.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+\n+# if __INT_MAX__ == 2147483647\n+typedef int int32;\n+# elif __LONG_MAX__ == 2147483647\n+typedef long int32;\n+# elif __SHRT_MAX__ == 2147483647\n+typedef short int32;\n+# else\n+#  error \"Missing a 4 byte integer\"\n+# endif\n+\n+static const int32 __FRAME_END__[]\n+     __attribute__ ((used, section(EH_FRAME_SECTION_NAME),\n+\t\t     aligned(sizeof(int32))))\n+     = { 0 };"}]}