{"sha": "41d1f11f5f693a2a06c65c9467a28dfeb02aed85", "node_id": "C_kwDOANBUbNoAKDQxZDFmMTFmNWY2OTNhMmEwNmM2NWM5NDY3YTI4ZGZlYjAyYWVkODU", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-26T18:10:27Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-26T18:10:27Z"}, "message": "PR middle-end/104885: Fix ICE with large stack frame on powerpc64.\n\nMy recent testcase for PR c++/84964.C stress tests the middle-end by\nattempting to pass a UINT_MAX sized structure on the stack.  Although\nmy fix to PR84964 avoids the ICE after sorry on x86_64 and similar\ntargets, a related issue still exists on powerpc64 (and similar\nACCUMULATE_OUTGOING_ARGS/ARGS_GROW_DOWNWARD targets) which don't\nissue a \"sorry, unimplemented\" message, but instead ICE elsewhere.\n\nAfter attempting several alternate fixes, the simplest solution is\nto just defensively check in mark_stack_region_used that the upper\nbound of the region lies within the allocated stack_usage_map\narray, which is of size highest_outgoing_arg_in_use.  When this isn't\nthe case, the code now follows the same path as for variable sized\nregions, and uses stack_usage_watermark rather than a map.\n\n2022-03-26  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\tPR middle-end/104885\n\t* calls.cc (mark_stack_region_used): Check that the region\n\tis within the allocated size of stack_usage_map.", "tree": {"sha": "7c80f1a2348d793c1f3d046d37cfdd5d89ad9b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c80f1a2348d793c1f3d046d37cfdd5d89ad9b6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41d1f11f5f693a2a06c65c9467a28dfeb02aed85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41d1f11f5f693a2a06c65c9467a28dfeb02aed85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41d1f11f5f693a2a06c65c9467a28dfeb02aed85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41d1f11f5f693a2a06c65c9467a28dfeb02aed85/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6459e6537632bc06e04e6011ca7fb6488f0e8e7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6459e6537632bc06e04e6011ca7fb6488f0e8e7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6459e6537632bc06e04e6011ca7fb6488f0e8e7d"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "4d0bc45be280f3936928f93e4b0dc761b421efdf", "filename": "gcc/calls.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d1f11f5f693a2a06c65c9467a28dfeb02aed85/gcc%2Fcalls.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d1f11f5f693a2a06c65c9467a28dfeb02aed85/gcc%2Fcalls.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.cc?ref=41d1f11f5f693a2a06c65c9467a28dfeb02aed85", "patch": "@@ -201,7 +201,8 @@ mark_stack_region_used (poly_uint64 lower_bound, poly_uint64 upper_bound)\n {\n   unsigned HOST_WIDE_INT const_lower, const_upper;\n   const_lower = constant_lower_bound (lower_bound);\n-  if (upper_bound.is_constant (&const_upper))\n+  if (upper_bound.is_constant (&const_upper)\n+      && const_upper <= highest_outgoing_arg_in_use)\n     for (unsigned HOST_WIDE_INT i = const_lower; i < const_upper; ++i)\n       stack_usage_map[i] = 1;\n   else"}]}