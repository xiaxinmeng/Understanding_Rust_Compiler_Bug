{"sha": "b65945e7fb8d0f6cf911d371926d25e7ea82db62", "node_id": "C_kwDOANBUbNoAKGI2NTk0NWU3ZmI4ZDBmNmNmOTExZDM3MTkyNmQyNWU3ZWE4MmRiNjI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-11T13:57:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-11T13:57:09Z"}, "message": "i386: Fix up RTL checking ICE [PR107185]\n\nOn Tue, Oct 11, 2022 at 04:03:16PM +0800, liuhongt via Gcc-patches wrote:\n> gcc/ChangeLog:\n>\n>       * config/i386/i386.md (*notxor<mode>_1): New post_reload\n>       define_insn_and_split.\n>       (*notxorqi_1): Ditto.\n\n> --- a/gcc/config/i386/i386.md\n> +++ b/gcc/config/i386/i386.md\n> @@ -10826,6 +10826,39 @@ (define_insn \"*<code><mode>_1\"\n>     (set_attr \"type\" \"alu, alu, msklog\")\n>     (set_attr \"mode\" \"<MODE>\")])\n>\n> +(define_insn_and_split \"*notxor<mode>_1\"\n> +  [(set (match_operand:SWI248 0 \"nonimmediate_operand\" \"=rm,r,?k\")\n> +     (not:SWI248\n> +       (xor:SWI248\n> +         (match_operand:SWI248 1 \"nonimmediate_operand\" \"%0,0,k\")\n> +         (match_operand:SWI248 2 \"<general_operand>\" \"r<i>,<m>,k\"))))\n> +   (clobber (reg:CC FLAGS_REG))]\n> +  \"ix86_binary_operator_ok (XOR, <MODE>mode, operands)\"\n> +  \"#\"\n> +  \"&& reload_completed\"\n> +  [(parallel\n> +    [(set (match_dup 0)\n> +       (xor:SWI248 (match_dup 1) (match_dup 2)))\n> +     (clobber (reg:CC FLAGS_REG))])\n> +   (set (match_dup 0)\n> +     (not:SWI248 (match_dup 1)))]\n> +{\n> +  if (MASK_REGNO_P (REGNO (operands[0])))\n\nThis causes --enable-checking=yes,rtl,extra regression on\ngcc.dg/store_merging_13.c test on x86_64-linux:\n.../gcc/testsuite/gcc.dg/store_merging_13.c: In function 'f13':\n.../gcc/testsuite/gcc.dg/store_merging_13.c:189:1: internal compiler error: RTL check: expected code 'reg', have 'mem' in rhs_regno, at rtl.h:1932\n0x7b0c8f rtl_check_failed_code1(rtx_def const*, rtx_code, char const*, int, char const*)\n        ../../gcc/rtl.cc:916\n0x8e74be rhs_regno\n        ../../gcc/rtl.h:1932\n0x9785fd rhs_regno\n        ./genrtl.h:120\n0x9785fd gen_split_260(rtx_insn*, rtx_def**)\n        ../../gcc/config/i386/i386.md:10846\n0x23596dc split_insns(rtx_def*, rtx_insn*)\n        ../../gcc/config/i386/i386.md:16392\n0xfccd5a try_split(rtx_def*, rtx_insn*, int)\n        ../../gcc/emit-rtl.cc:3799\n0x132e9d8 split_insn\n        ../../gcc/recog.cc:3384\n0x13359d5 split_all_insns()\n        ../../gcc/recog.cc:3488\n0x1335ae8 execute\n        ../../gcc/recog.cc:4412\nPlease submit a full bug report, with preprocessed source (by using -freport-bug).\nPlease include the complete backtrace with any bug report.\nSee <https://gcc.gnu.org/bugs/> for instructions.\n\nFixed thusly.\n\n2022-10-11  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/107185\n\t* config/i386/i386.md (*notxor<mode>_1): Use MASK_REG_P (x) instead of\n\tMASK_REGNO_P (REGNO (x)).", "tree": {"sha": "538f202040e56faf2c23776ff11b563aaab526fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/538f202040e56faf2c23776ff11b563aaab526fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b65945e7fb8d0f6cf911d371926d25e7ea82db62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65945e7fb8d0f6cf911d371926d25e7ea82db62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b65945e7fb8d0f6cf911d371926d25e7ea82db62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65945e7fb8d0f6cf911d371926d25e7ea82db62/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "706d8583706475fb103d1123e507f604dccb8fd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706d8583706475fb103d1123e507f604dccb8fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706d8583706475fb103d1123e507f604dccb8fd3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8e8475204917ec204f5c0b44a39f8cb61b43a444", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65945e7fb8d0f6cf911d371926d25e7ea82db62/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65945e7fb8d0f6cf911d371926d25e7ea82db62/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b65945e7fb8d0f6cf911d371926d25e7ea82db62", "patch": "@@ -10843,7 +10843,7 @@\n    (set (match_dup 0)\n \t(not:SWI248 (match_dup 0)))]\n {\n-  if (MASK_REGNO_P (REGNO (operands[0])))\n+  if (MASK_REG_P (operands[0]))\n     {\n       emit_insn (gen_kxnor<mode> (operands[0], operands[1], operands[2]));\n       DONE;"}]}