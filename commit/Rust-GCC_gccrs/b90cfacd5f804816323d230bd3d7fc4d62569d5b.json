{"sha": "b90cfacd5f804816323d230bd3d7fc4d62569d5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkwY2ZhY2Q1ZjgwNDgxNjMyM2QyMzBiZDNkN2ZjNGQ2MjU2OWQ1Yg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2007-08-31T10:23:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-31T10:23:25Z"}, "message": "restrict.adb, [...]: Remove redundant type conversion.\n\n2007-08-31  Hristian Kirtchev  <kirtchev@adacore.com>\n\n        * restrict.adb, namet.adb, par-util.adb: Remove redundant type\n\tconversion.\n\n\t* sem_res.adb (Resolve_Qualified_Expression): Add machinery to detect\n\tsimple redundant qualifications. The check is performed whenever the\n\texpression is a non-overloaded identifier.\n\t(Resolve_Type_Conversion): Enchance the redundant type conversion check\n\tto include loop parameters.\n\t(Valid_Conversion): Avoid generation of spurious error message.\n\nFrom-SVN: r127976", "tree": {"sha": "53d9fad7764e46233036b104c5363cc023e5b437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53d9fad7764e46233036b104c5363cc023e5b437"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b90cfacd5f804816323d230bd3d7fc4d62569d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90cfacd5f804816323d230bd3d7fc4d62569d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b90cfacd5f804816323d230bd3d7fc4d62569d5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90cfacd5f804816323d230bd3d7fc4d62569d5b/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05af427c1fbfd2d6a902a4aa98140ee9a1f8221e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "6d5d1580f30be1eeff410af4a8c342ff8d41547a", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90cfacd5f804816323d230bd3d7fc4d62569d5b/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90cfacd5f804816323d230bd3d7fc4d62569d5b/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=b90cfacd5f804816323d230bd3d7fc4d62569d5b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -149,7 +149,7 @@ package body Namet is\n \n             else\n                Write_Str (\"Hash_Table (\");\n-               Write_Int (Int (J));\n+               Write_Int (J);\n                Write_Str (\") has \");\n \n                declare"}, {"sha": "f5a44e68edd59525ba6526574ba3a47276f4eec0", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90cfacd5f804816323d230bd3d7fc4d62569d5b/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90cfacd5f804816323d230bd3d7fc4d62569d5b/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=b90cfacd5f804816323d230bd3d7fc4d62569d5b", "patch": "@@ -61,7 +61,7 @@ package body Util is\n       end if;\n \n       for J in S'Range loop\n-         S (J) := Fold_Lower (Tname (Integer (J) + 4));\n+         S (J) := Fold_Lower (Tname (J + 4));\n       end loop;\n \n       Get_Name_String (Token_Name);"}, {"sha": "8b333b61926c08ff0e1c7923351ca34bc76a12a8", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90cfacd5f804816323d230bd3d7fc4d62569d5b/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90cfacd5f804816323d230bd3d7fc4d62569d5b/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=b90cfacd5f804816323d230bd3d7fc4d62569d5b", "patch": "@@ -99,7 +99,7 @@ package body Restrict is\n         and then not Suppress_Restriction_Message (N)\n       then\n          Namet.Unlock;\n-         Check_Restriction (Restriction_Id'(No_Elaboration_Code), N);\n+         Check_Restriction (No_Elaboration_Code, N);\n          Namet.Lock;\n       end if;\n    end Check_Elaboration_Code_Allowed;\n@@ -110,7 +110,7 @@ package body Restrict is\n \n    procedure Check_No_Implicit_Heap_Alloc (N : Node_Id) is\n    begin\n-      Check_Restriction (Restriction_Id'(No_Implicit_Heap_Allocations), N);\n+      Check_Restriction (No_Implicit_Heap_Allocations, N);\n    end Check_No_Implicit_Heap_Alloc;\n \n    ---------------------------"}, {"sha": "4aa1e45857d63b6d14014aea7364406f3851447c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90cfacd5f804816323d230bd3d7fc4d62569d5b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90cfacd5f804816323d230bd3d7fc4d62569d5b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b90cfacd5f804816323d230bd3d7fc4d62569d5b", "patch": "@@ -7582,10 +7582,15 @@ package body Sem_Res is\n          end if;\n \n          if Is_Entity_Name (Orig_N)\n-           and then Etype (Entity (Orig_N)) = Orig_T\n+           and then\n+             (Etype (Entity (Orig_N)) = Orig_T\n+                or else\n+                  (Ekind (Entity (Orig_N)) = E_Loop_Parameter\n+                     and then Covers (Orig_T, Etype (Entity (Orig_N)))))\n          then\n+            Error_Msg_Node_2 := Orig_T;\n             Error_Msg_NE\n-              (\"?useless conversion, & has this type!\", N, Entity (Orig_N));\n+              (\"?redundant conversion, & is of type &!\", N, Entity (Orig_N));\n          end if;\n       end if;\n \n@@ -8803,9 +8808,14 @@ package body Sem_Res is\n                     (\"\\?Program_Error will be raised at run time\", Operand);\n \n                else\n-                  Error_Msg_N\n-                    (\"cannot convert local pointer to non-local access type\",\n-                     Operand);\n+                  --  Avoid generation of spurious error message\n+\n+                  if not Error_Posted (N) then\n+                     Error_Msg_N\n+                      (\"cannot convert local pointer to non-local access type\",\n+                       Operand);\n+                  end if;\n+\n                   return False;\n                end if;\n "}]}