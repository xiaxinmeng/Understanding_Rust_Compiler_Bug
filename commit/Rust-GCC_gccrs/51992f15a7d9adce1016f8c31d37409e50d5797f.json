{"sha": "51992f15a7d9adce1016f8c31d37409e50d5797f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE5OTJmMTVhN2Q5YWRjZTEwMTZmOGMzMWQzNzQwOWU1MGQ1Nzk3Zg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-10-15T00:28:47Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-10-15T00:28:47Z"}, "message": "re PR fortran/89943 (Submodule functions are not allowed to have C binding)\n\n2019-10-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/89943\n\tdecl.c (gfc_match_function_decl): Ignore duplicate BIND(C) for function\n\tdeclaration in submodule.  Implement at check for F2018 C1550.\n\t(gfc_match_entry): Use temporary for locus, which allows removal of\n\tone gfc_error_now().\n\t(gfc_match_subroutine): Ignore duplicate BIND(C) for subroutine\n\tdeclaration in submodule.  Implement at check for F2018 C1550.\n\n2019-10-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/89943\n\t* gfortran.dg/pr89943_1.f90: New test.\n\t* gfortran.dg/pr89943_2.f90: Ditto.\n\t* gfortran.dg/pr89943_3.f90: Ditto.\n\t* gfortran.dg/pr89943_4.f90: Ditto.\n\nFrom-SVN: r276983", "tree": {"sha": "cd85f6f26495f371540a1d2777fa9860283a8131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd85f6f26495f371540a1d2777fa9860283a8131"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51992f15a7d9adce1016f8c31d37409e50d5797f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51992f15a7d9adce1016f8c31d37409e50d5797f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51992f15a7d9adce1016f8c31d37409e50d5797f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51992f15a7d9adce1016f8c31d37409e50d5797f/comments", "author": null, "committer": null, "parents": [{"sha": "23605fec7a620884de1d134cdbb86b866d9514d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23605fec7a620884de1d134cdbb86b866d9514d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23605fec7a620884de1d134cdbb86b866d9514d1"}], "stats": {"total": 225, "additions": 203, "deletions": 22}, "files": [{"sha": "5e3c78e11adb8a9afeb56076d9926d14e4422999", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=51992f15a7d9adce1016f8c31d37409e50d5797f", "patch": "@@ -1,3 +1,13 @@\n+2019-10-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/89943\n+\tdecl.c (gfc_match_function_decl): Ignore duplicate BIND(C) for function\n+\tdeclaration in submodule.  Implement at check for F2018 C1550.\n+\t(gfc_match_entry): Use temporary for locus, which allows removal of\n+\tone gfc_error_now().\n+\t(gfc_match_subroutine): Ignore duplicate BIND(C) for subroutine\n+\tdeclaration in submodule.  Implement at check for F2018 C1550.\n+\n 2019-10-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/92004"}, {"sha": "59e0eac1f324edbddcfe5fb8526d10bcea835656", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 64, "deletions": 22, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=51992f15a7d9adce1016f8c31d37409e50d5797f", "patch": "@@ -7263,13 +7263,16 @@ gfc_match_function_decl (void)\n   if (sym->attr.is_bind_c == 1)\n     {\n       sym->attr.is_bind_c = 0;\n-      if (sym->old_symbol != NULL)\n-        gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n-                       \"variables or common blocks\",\n-                       &(sym->old_symbol->declared_at));\n-      else\n-        gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n-                       \"variables or common blocks\", &gfc_current_locus);\n+\n+      if (gfc_state_stack->previous\n+\t  && gfc_state_stack->previous->state != COMP_SUBMODULE)\n+\t{\n+\t  locus loc;\n+\t  loc = sym->old_symbol != NULL\n+\t    ? sym->old_symbol->declared_at : gfc_current_locus;\n+\t  gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n+\t\t\t \"variables or common blocks\", &loc);\n+\t}\n     }\n \n   if (found_match != MATCH_YES)\n@@ -7283,6 +7286,24 @@ gfc_match_function_decl (void)\n \tfound_match = suffix_match;\n     }\n \n+  /* F2018 C1550 (R1526) If MODULE appears in the prefix of a module\n+     subprogram and a binding label is specified, it shall be the\n+     same as the binding label specified in the corresponding module\n+     procedure interface body.  */\n+    if (sym->attr.is_bind_c && sym->attr.module_procedure && sym->old_symbol\n+  \t&& strcmp (sym->name, sym->old_symbol->name) == 0\n+\t&& strcmp (sym->binding_label, sym->old_symbol->binding_label) != 0)\n+      {\n+\t  const char *null = \"NULL\", *s1, *s2;\n+\t  s1 = sym->binding_label;\n+\t  if (!s1) s1 = null;\n+\t  s2 = sym->old_symbol->binding_label;\n+\t  if (!s2) s2 = null;\n+          gfc_error (\"Mismatch in BIND(C) names (%qs/%qs) at %C\", s1, s2);\n+\t  sym->refs++;\t/* Needed to avoid an ICE in gfc_release_symbol */\n+\t  return MATCH_ERROR;\n+      }\n+\n   if(found_match != MATCH_YES)\n     m = MATCH_ERROR;\n   else\n@@ -7521,15 +7542,15 @@ gfc_match_entry (void)\n      not allowed for procedures.  */\n   if (entry->attr.is_bind_c == 1)\n     {\n+      locus loc;\n+\n       entry->attr.is_bind_c = 0;\n-      if (entry->old_symbol != NULL)\n-        gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n-                       \"variables or common blocks\",\n-                       &(entry->old_symbol->declared_at));\n-      else\n-        gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n-                       \"variables or common blocks\", &gfc_current_locus);\n-    }\n+\n+      loc = entry->old_symbol != NULL\n+\t? entry->old_symbol->declared_at : gfc_current_locus; \n+      gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n+\t\t     \"variables or common blocks\", &loc);\n+     }\n \n   /* Check what next non-whitespace character is so we can tell if there\n      is the required parens if we have a BIND(C).  */\n@@ -7729,13 +7750,16 @@ gfc_match_subroutine (void)\n   if (sym->attr.is_bind_c == 1)\n     {\n       sym->attr.is_bind_c = 0;\n-      if (sym->old_symbol != NULL)\n-        gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n-                       \"variables or common blocks\",\n-                       &(sym->old_symbol->declared_at));\n-      else\n-        gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n-                       \"variables or common blocks\", &gfc_current_locus);\n+\n+      if (gfc_state_stack->previous\n+\t  && gfc_state_stack->previous->state != COMP_SUBMODULE)\n+\t{\n+\t  locus loc;\n+\t  loc = sym->old_symbol != NULL\n+\t    ? sym->old_symbol->declared_at : gfc_current_locus;\n+\t  gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n+\t\t\t \"variables or common blocks\", &loc);\n+\t}\n     }\n \n   /* C binding names are not allowed for internal procedures.  */\n@@ -7777,6 +7801,24 @@ gfc_match_subroutine (void)\n           return MATCH_ERROR;\n         }\n \n+      /* F2018 C1550 (R1526) If MODULE appears in the prefix of a module\n+\t subprogram and a binding label is specified, it shall be the\n+\t same as the binding label specified in the corresponding module\n+\t procedure interface body.  */\n+      if (sym->attr.module_procedure && sym->old_symbol\n+  \t  && strcmp (sym->name, sym->old_symbol->name) == 0\n+\t  && strcmp (sym->binding_label, sym->old_symbol->binding_label) != 0)\n+\t{\n+\t  const char *null = \"NULL\", *s1, *s2;\n+\t  s1 = sym->binding_label;\n+\t  if (!s1) s1 = null;\n+\t  s2 = sym->old_symbol->binding_label;\n+\t  if (!s2) s2 = null;\n+          gfc_error (\"Mismatch in BIND(C) names (%qs/%qs) at %C\", s1, s2);\n+\t  sym->refs++;\t/* Needed to avoid an ICE in gfc_release_symbol */\n+\t  return MATCH_ERROR;\n+\t}\n+\n       /* Scan the dummy arguments for an alternate return.  */\n       for (arg = sym->formal; arg; arg = arg->next)\n \tif (!arg->sym)"}, {"sha": "0285490cd6cdf5a542e6bfb1bec96009506e2216", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51992f15a7d9adce1016f8c31d37409e50d5797f", "patch": "@@ -1,3 +1,11 @@\n+2019-10-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/89943\n+\t* gfortran.dg/pr89943_1.f90: New test.\n+\t* gfortran.dg/pr89943_2.f90: Ditto.\n+\t* gfortran.dg/pr89943_3.f90: Ditto.\n+\t* gfortran.dg/pr89943_4.f90: Ditto.\n+\n 2019-10-14  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/92004"}, {"sha": "3aa9c36d62860faeb78a6bc927f8944a0b82774e", "filename": "gcc/testsuite/gfortran.dg/pr89943_1.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_1.f90?ref=51992f15a7d9adce1016f8c31d37409e50d5797f", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do compile }\n+! PR fortran/89943\n+! Code contributed by Alberto Luaces  <aluaces at udc dot se>\n+module Foo_mod\n+\n+   implicit none\n+\n+   interface\n+      module subroutine runFoo4C(ndim) bind(C, name=\"runFoo\")\n+         use, intrinsic :: iso_c_binding\n+         implicit none\n+         integer(c_int32_t) , intent(in) :: ndim\n+      end subroutine runFoo4C\n+   end interface\n+\n+   contains\n+\n+end module Foo_mod\n+\n+submodule(Foo_mod) Foo_smod\n+\n+   contains\n+\n+      module subroutine runFoo4C(ndim) bind(C, name=\"runFoo\")\n+         use, intrinsic :: iso_c_binding\n+         implicit none\n+         integer(c_int32_t) , intent(in) :: ndim\n+      end subroutine runFoo4C\n+\n+end submodule Foo_smod\n+"}, {"sha": "ac69ec3af56114b1ccc853c1b78d1dae2c0ec7af", "filename": "gcc/testsuite/gfortran.dg/pr89943_2.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_2.f90?ref=51992f15a7d9adce1016f8c31d37409e50d5797f", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do compile }\n+! PR fortran/89943\n+! Code contributed by Alberto Luaces  <aluaces at udc dot se>\n+module Foo_mod\n+\n+   implicit none\n+\n+   interface\n+      module function runFoo4C(ndim) bind(C, name=\"runFoo\")\n+         use, intrinsic :: iso_c_binding\n+         implicit none\n+         integer runFoo4c\n+         integer(c_int32_t) , intent(in) :: ndim\n+      end function runFoo4C\n+   end interface\n+\n+   contains\n+\n+end module Foo_mod\n+\n+submodule(Foo_mod) Foo_smod\n+\n+   contains\n+\n+      module function runFoo4C(ndim) bind(C, name=\"runFoo\")\n+         use, intrinsic :: iso_c_binding\n+         implicit none\n+         integer runFoo4c\n+         integer(c_int32_t) , intent(in) :: ndim\n+      end function runFoo4C\n+\n+end submodule Foo_smod\n+"}, {"sha": "38b723e24585c4947d09d95186d6db4956d238dd", "filename": "gcc/testsuite/gfortran.dg/pr89943_3.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_3.f90?ref=51992f15a7d9adce1016f8c31d37409e50d5797f", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+module Foo_mod\n+\n+   implicit none\n+\n+   interface\n+      module subroutine runFoo4C(ndim) bind(C, name=\"runFoo\")\n+         use, intrinsic :: iso_c_binding\n+         implicit none\n+         integer(c_int32_t) , intent(in) :: ndim\n+      end subroutine runFoo4C\n+   end interface\n+\n+   contains\n+\n+end module Foo_mod\n+\n+submodule(Foo_mod) Foo_smod\n+\n+   contains\n+\n+      module subroutine runFoo4C(ndim) bind(C, name=\"runFu\")   ! { dg-error \"Mismatch in BIND\" }\n+         use, intrinsic :: iso_c_binding                 ! { dg-error \"Unexpected USE statement\" }\n+         implicit none                                   ! { dg-error \"Unexpected IMPLICIT NONE statement\" }\n+         integer(c_int32_t) , intent(in) :: ndim         ! { dg-error \"Unexpected data declaration\" }\n+      end subroutine runFoo4C                            ! { dg-error \" Expecting END SUBMODULE\" }\n+\n+end submodule Foo_smod"}, {"sha": "8eba2eda17181da4d051f51abf418ab840afec7c", "filename": "gcc/testsuite/gfortran.dg/pr89943_4.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51992f15a7d9adce1016f8c31d37409e50d5797f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89943_4.f90?ref=51992f15a7d9adce1016f8c31d37409e50d5797f", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do compile }\n+module Foo_mod\n+\n+   implicit none\n+\n+   interface\n+      module function runFoo4C(ndim) bind(C, name=\"runFoo\")\n+         use, intrinsic :: iso_c_binding\n+         implicit none\n+         integer runFoo4c\n+         integer(c_int32_t) , intent(in) :: ndim\n+      end function runFoo4C\n+   end interface\n+\n+   contains\n+\n+end module Foo_mod\n+\n+submodule(Foo_mod) Foo_smod\n+\n+   contains\n+\n+      module function runFoo4C(ndim) bind(C, name=\"runFu\")  ! { dg-error \"Mismatch in BIND\" }\n+         use, intrinsic :: iso_c_binding     ! { dg-error \"Unexpected USE statement in\" }\n+         implicit none                       ! { dg-error \"Unexpected IMPLICIT NONE statement\" }\n+         integer(c_int32_t) , intent(in) :: ndim   ! { dg-error \"Unexpected data declaration\" }\n+      end function runFoo4C                  ! { dg-error \"Expecting END SUBMODULE\" }\n+\n+end submodule Foo_smod"}]}