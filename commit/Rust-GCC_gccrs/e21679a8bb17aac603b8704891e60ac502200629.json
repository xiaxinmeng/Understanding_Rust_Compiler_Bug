{"sha": "e21679a8bb17aac603b8704891e60ac502200629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxNjc5YThiYjE3YWFjNjAzYjg3MDQ4OTFlNjBhYzUwMjIwMDYyOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-11-21T16:41:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-11-21T16:41:03Z"}, "message": "re PR target/87839 (ICE in final_scan_insn_1, at final.c:3070)\n\n\tPR target/87839\n\t* config/aarch64/atomics.md (@aarch64_compare_and_swap<mode>): Use\n\trIJ constraint for aarch64_plus_operand rather than rn.\n\n\t* gcc.target/aarch64/pr87839.c: New test.\n\nFrom-SVN: r266346", "tree": {"sha": "393203eab07f2a07eaf8c5fca7466cf36b4b094b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/393203eab07f2a07eaf8c5fca7466cf36b4b094b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e21679a8bb17aac603b8704891e60ac502200629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e21679a8bb17aac603b8704891e60ac502200629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e21679a8bb17aac603b8704891e60ac502200629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e21679a8bb17aac603b8704891e60ac502200629/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0358d788d238ba7407648962f40026bd8c190308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0358d788d238ba7407648962f40026bd8c190308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0358d788d238ba7407648962f40026bd8c190308"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "185bf1ccfe378aa665b25dfc20a76a5001e5bd53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21679a8bb17aac603b8704891e60ac502200629/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21679a8bb17aac603b8704891e60ac502200629/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e21679a8bb17aac603b8704891e60ac502200629", "patch": "@@ -1,3 +1,9 @@\n+2018-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/87839\n+\t* config/aarch64/atomics.md (@aarch64_compare_and_swap<mode>): Use\n+\trIJ constraint for aarch64_plus_operand rather than rn.\n+\n 2018-11-21  Renlin Li  <renlin.li@arm.com>\n \n \tPR middle-end/84877"}, {"sha": "a429703d3935efda52f491e994f2dc8a277889f2", "filename": "gcc/config/aarch64/atomics.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21679a8bb17aac603b8704891e60ac502200629/gcc%2Fconfig%2Faarch64%2Fatomics.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21679a8bb17aac603b8704891e60ac502200629/gcc%2Fconfig%2Faarch64%2Fatomics.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fatomics.md?ref=e21679a8bb17aac603b8704891e60ac502200629", "patch": "@@ -71,7 +71,7 @@\n     (match_operand:GPI 1 \"aarch64_sync_memory_operand\" \"+Q\"))   ;; memory\n    (set (match_dup 1)\n     (unspec_volatile:GPI\n-      [(match_operand:GPI 2 \"aarch64_plus_operand\" \"rn\")\t;; expect\n+      [(match_operand:GPI 2 \"aarch64_plus_operand\" \"rIJ\")\t;; expect\n        (match_operand:GPI 3 \"aarch64_reg_or_zero\" \"rZ\")\t\t;; desired\n        (match_operand:SI 4 \"const_int_operand\")\t\t\t;; is_weak\n        (match_operand:SI 5 \"const_int_operand\")\t\t\t;; mod_s"}, {"sha": "f12fb97745ec34ca1d76d9c76b63ca7600140801", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21679a8bb17aac603b8704891e60ac502200629/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21679a8bb17aac603b8704891e60ac502200629/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e21679a8bb17aac603b8704891e60ac502200629", "patch": "@@ -1,3 +1,8 @@\n+2018-11-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/87839\n+\t* gcc.target/aarch64/pr87839.c: New test.\n+\n 2018-11-21  Renlin Li  <renlin.li@arm.com>\n \n \tPR middle-end/84877"}, {"sha": "1da0830be4f79dd10381ec4aee99288117069d04", "filename": "gcc/testsuite/gcc.target/aarch64/pr87839.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21679a8bb17aac603b8704891e60ac502200629/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr87839.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21679a8bb17aac603b8704891e60ac502200629/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr87839.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr87839.c?ref=e21679a8bb17aac603b8704891e60ac502200629", "patch": "@@ -0,0 +1,29 @@\n+/* PR target/87839 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -w\" } */\n+\n+long long b[64];\n+void foo (void);\n+int bar (void (*) (void));\n+void qux (long long *, long long) __attribute__((noreturn));\n+void quux (long long *, long long);\n+\n+void\n+baz (void)\n+{\n+  __sync_val_compare_and_swap (b, 4294967298LL, 78187493520LL);\n+  __sync_bool_compare_and_swap (b + 1, 8589934595LL, 21474836489LL);\n+  __sync_fetch_and_xor (b, 60129542145LL);\n+  quux (b, 42949672967LL);\n+  __sync_xor_and_fetch (b + 22, 60129542145LL);\n+  quux (b + 23, 42949672967LL);\n+  if (bar (baz))\n+    __builtin_abort ();\n+  foo ();\n+  __sync_val_compare_and_swap (b, 4294967298LL, 0);\n+  __sync_bool_compare_and_swap (b + 1, 8589934595LL, 78187493520LL);\n+  if (__sync_or_and_fetch (b, 21474836489LL) != 21474836489LL)\n+    qux (b + 22, 60129542145LL);\n+  __atomic_fetch_nand (b + 23, 42949672967LL, __ATOMIC_RELAXED);\n+  bar (baz);\n+}"}]}