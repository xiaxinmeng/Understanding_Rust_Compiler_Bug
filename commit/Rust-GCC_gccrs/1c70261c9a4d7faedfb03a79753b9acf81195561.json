{"sha": "1c70261c9a4d7faedfb03a79753b9acf81195561", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM3MDI2MWM5YTRkN2ZhZWRmYjAzYTc5NzUzYjlhY2Y4MTE5NTU2MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-01-16T21:33:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-16T21:33:07Z"}, "message": "re PR driver/49726 (-g0 file.S -g does not produce debug info)\n\n\tPR driver/49726\n\t* gcc.c (debug_level_greater_than_spec_func): New function.\n\t(static_spec_functions): Add debug-level-gt spec function.\n\t(ASM_DEBUG_SPEC, cpp_options): Use %:debug-level-gt(0) instead of\n\t!g0.\n\t* config/darwin.h (DSYMUTIL_SPEC, ASM_DEBUG_SPEC): Likewise.\n\t* config/darwin9.h (DSYMUTIL_SPEC, ASM_DEBUG_SPEC): Likewise.\n\t* common.opt (g, gcoff, gdwarf, gdwarf-, ggdb, gno-pubnames,\n\tgpubnames, ggnu-pubnames, gno-record-gcc-switches,\n\tgrecord-gcc-switches, gno-strict-dwarf, gstrict-dwarf, gstabs,\n\tgstabs+, gtoggle, gvms, gxcoff, gxcoff+): Add Driver flag.\nc-family/\n\t* c.opt (gen-decls): Add Driver flag.\nada/\n\t* gcc-interface/lang.opt (gant, gnatO, gnat): Add Driver flag.\n\nFrom-SVN: r244505", "tree": {"sha": "42e4ab59078ab992f7c8dd3456b96869aaa874b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42e4ab59078ab992f7c8dd3456b96869aaa874b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c70261c9a4d7faedfb03a79753b9acf81195561", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c70261c9a4d7faedfb03a79753b9acf81195561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c70261c9a4d7faedfb03a79753b9acf81195561", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c70261c9a4d7faedfb03a79753b9acf81195561/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a60c3351032bbaad8c45dbad341437ba47540568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a60c3351032bbaad8c45dbad341437ba47540568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a60c3351032bbaad8c45dbad341437ba47540568"}], "stats": {"total": 116, "additions": 83, "deletions": 33}, "files": [{"sha": "a69094cb506c6aa821d50c505846a7dc5fa28f4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c70261c9a4d7faedfb03a79753b9acf81195561", "patch": "@@ -1,3 +1,17 @@\n+2017-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR driver/49726\n+\t* gcc.c (debug_level_greater_than_spec_func): New function.\n+\t(static_spec_functions): Add debug-level-gt spec function.\n+\t(ASM_DEBUG_SPEC, cpp_options): Use %:debug-level-gt(0) instead of\n+\t!g0.\n+\t* config/darwin.h (DSYMUTIL_SPEC, ASM_DEBUG_SPEC): Likewise.\n+\t* config/darwin9.h (DSYMUTIL_SPEC, ASM_DEBUG_SPEC): Likewise.\n+\t* common.opt (g, gcoff, gdwarf, gdwarf-, ggdb, gno-pubnames,\n+\tgpubnames, ggnu-pubnames, gno-record-gcc-switches,\n+\tgrecord-gcc-switches, gno-strict-dwarf, gstrict-dwarf, gstabs,\n+\tgstabs+, gtoggle, gvms, gxcoff, gxcoff+): Add Driver flag.\n+\n 2017-01-16  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.h (HARD_REGNO_CALLER_SAVE_MODE): Apply HImode and"}, {"sha": "5b2244353358d21c3f998fe1c76c9487a6ad3961", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1c70261c9a4d7faedfb03a79753b9acf81195561", "patch": "@@ -1,3 +1,8 @@\n+2017-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR driver/49726\n+\t* gcc-interface/lang.opt (gant, gnatO, gnat): Add Driver flag.\n+\n 2017-01-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc-interface/Makefile.in (SPARC/Solaris): Fix typo."}, {"sha": "241eafc90ad9ef71d44aeda25636fbd1698e21ce", "filename": "gcc/ada/gcc-interface/lang.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fada%2Fgcc-interface%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fada%2Fgcc-interface%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Flang.opt?ref=1c70261c9a4d7faedfb03a79753b9acf81195561", "patch": "@@ -81,15 +81,15 @@ Ada AdaWhy AdaSCIL\n Make \\\"char\\\" signed by default.\n \n gant\n-Ada AdaWhy AdaSCIL Joined Undocumented\n+Ada AdaWhy AdaSCIL Driver Joined Undocumented\n Catch typos.\n \n gnatO\n-Ada AdaWhy AdaSCIL Separate\n+Ada AdaWhy AdaSCIL Driver Separate\n Set name of output ALI file (internal switch).\n \n gnat\n-Ada AdaWhy AdaSCIL Joined\n+Ada AdaWhy AdaSCIL Driver Joined\n -gnat<options>\tSpecify options to GNAT.\n \n fbuiltin-printf"}, {"sha": "6138f5276e17fd7c7fd5030994f5d737354a2066", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=1c70261c9a4d7faedfb03a79753b9acf81195561", "patch": "@@ -1,3 +1,8 @@\n+2017-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR driver/49726\n+\t* c.opt (gen-decls): Add Driver flag.\n+\n 2017-01-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tRevert:"}, {"sha": "3bb42f6d913ec5d8e1c13501c79d97900c6d51d9", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=1c70261c9a4d7faedfb03a79753b9acf81195561", "patch": "@@ -1762,7 +1762,7 @@ ObjC ObjC++ Var(flag_zero_link)\n Generate lazy class lookup (via objc_getClass()) for use in Zero-Link mode.\n \n gen-decls\n-ObjC ObjC++ Var(flag_gen_declaration)\n+ObjC ObjC++ Driver Var(flag_gen_declaration)\n Dump declarations to a .decl file.\n \n femit-struct-debug-baseonly"}, {"sha": "693b743f5d54508338cfa417483108ca5263e718", "filename": "gcc/common.opt", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=1c70261c9a4d7faedfb03a79753b9acf81195561", "patch": "@@ -2795,43 +2795,43 @@ Common Report Var(flag_zero_initialized_in_bss) Init(1)\n Put zero initialized data in the bss section.\n \n g\n-Common JoinedOrMissing\n+Common Driver JoinedOrMissing\n Generate debug information in default format.\n \n gcoff\n-Common JoinedOrMissing Negative(gdwarf)\n+Common Driver JoinedOrMissing Negative(gdwarf)\n Generate debug information in COFF format.\n \n gdwarf\n-Common JoinedOrMissing Negative(gdwarf-)\n+Common Driver JoinedOrMissing Negative(gdwarf-)\n Generate debug information in default version of DWARF format.\n \n gdwarf-\n-Common Joined UInteger Var(dwarf_version) Init(4) Negative(gstabs)\n+Common Driver Joined UInteger Var(dwarf_version) Init(4) Negative(gstabs)\n Generate debug information in DWARF v2 (or later) format.\n \n ggdb\n-Common JoinedOrMissing\n+Common Driver JoinedOrMissing\n Generate debug information in default extended format.\n \n gno-pubnames\n-Common Negative(gpubnames) Var(debug_generate_pub_sections, 0) Init(-1)\n+Common Driver Negative(gpubnames) Var(debug_generate_pub_sections, 0) Init(-1)\n Don't generate DWARF pubnames and pubtypes sections.\n \n gpubnames\n-Common Negative(ggnu-pubnames) Var(debug_generate_pub_sections, 1)\n+Common Driver Negative(ggnu-pubnames) Var(debug_generate_pub_sections, 1)\n Generate DWARF pubnames and pubtypes sections.\n \n ggnu-pubnames\n-Common Negative(gno-pubnames) Var(debug_generate_pub_sections, 2)\n+Common Driver Negative(gno-pubnames) Var(debug_generate_pub_sections, 2)\n Generate DWARF pubnames and pubtypes sections with GNU extensions.\n \n gno-record-gcc-switches\n-Common RejectNegative Var(dwarf_record_gcc_switches,0) Init(1)\n+Common Driver RejectNegative Var(dwarf_record_gcc_switches,0) Init(1)\n Don't record gcc command line switches in DWARF DW_AT_producer.\n \n grecord-gcc-switches\n-Common RejectNegative Var(dwarf_record_gcc_switches,1)\n+Common Driver RejectNegative Var(dwarf_record_gcc_switches,1)\n Record gcc command line switches in DWARF DW_AT_producer.\n \n gno-split-dwarf\n@@ -2843,35 +2843,35 @@ Common Driver RejectNegative Var(dwarf_split_debug_info,1)\n Generate debug information in separate .dwo files.\n \n gstabs\n-Common JoinedOrMissing Negative(gstabs+)\n+Common Driver JoinedOrMissing Negative(gstabs+)\n Generate debug information in STABS format.\n \n gstabs+\n-Common JoinedOrMissing Negative(gvms)\n+Common Driver JoinedOrMissing Negative(gvms)\n Generate debug information in extended STABS format.\n \n gno-strict-dwarf\n-Common RejectNegative Var(dwarf_strict,0) Init(0)\n+Common Driver RejectNegative Var(dwarf_strict,0) Init(0)\n Emit DWARF additions beyond selected version.\n \n gstrict-dwarf\n-Common Report RejectNegative Var(dwarf_strict,1)\n+Common Driver Report RejectNegative Var(dwarf_strict,1)\n Don't emit DWARF additions beyond selected version.\n \n gtoggle\n-Common Report Var(flag_gtoggle)\n+Common Driver Report Var(flag_gtoggle)\n Toggle debug information generation.\n \n gvms\n-Common JoinedOrMissing Negative(gxcoff)\n+Common Driver JoinedOrMissing Negative(gxcoff)\n Generate debug information in VMS format.\n \n gxcoff\n-Common JoinedOrMissing Negative(gxcoff+)\n+Common Driver JoinedOrMissing Negative(gxcoff+)\n Generate debug information in XCOFF format.\n \n gxcoff+\n-Common JoinedOrMissing Negative(gcoff)\n+Common Driver JoinedOrMissing Negative(gcoff)\n Generate debug information in extended XCOFF format.\n \n Enum"}, {"sha": "a8397cd2331875edf41dd45fd46cdf04bf73723d", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=1c70261c9a4d7faedfb03a79753b9acf81195561", "patch": "@@ -202,9 +202,9 @@ extern GTY(()) int darwin_ms_struct;\n #define DSYMUTIL_SPEC \\\n    \"%{!fdump=*:%{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:\\\n     %{v} \\\n-    %{gdwarf-2:%{!gstabs*:%{!g0: -idsym}}}\\\n+    %{gdwarf-2:%{!gstabs*:%{%:debug-level-gt(0): -idsym}}}\\\n     %{.c|.cc|.C|.cpp|.cp|.c++|.cxx|.CPP|.m|.mm: \\\n-    %{gdwarf-2:%{!gstabs*:%{!g0: -dsym}}}}}}}}}}}\"\n+    %{gdwarf-2:%{!gstabs*:%{%:debug-level-gt(0): -dsym}}}}}}}}}}}\"\n \n #define LINK_COMMAND_SPEC LINK_COMMAND_SPEC_A DSYMUTIL_SPEC\n \n@@ -424,7 +424,7 @@ extern GTY(()) int darwin_ms_struct;\n /* Default ASM_DEBUG_SPEC.  Darwin's as cannot currently produce dwarf\n    debugging data.  */\n \n-#define ASM_DEBUG_SPEC  \"%{g*:%{!g0:%{!gdwarf*:--gstabs}}}\"\n+#define ASM_DEBUG_SPEC  \"%{g*:%{%:debug-level-gt(0):%{!gdwarf*:--gstabs}}}\"\n \n /* We still allow output of STABS if the assembler supports it.  */\n #ifdef HAVE_AS_STABS_DIRECTIVE"}, {"sha": "7e9165823b7ba24998e6b5c66c2894c84dbd70c1", "filename": "gcc/config/darwin9.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fconfig%2Fdarwin9.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fconfig%2Fdarwin9.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin9.h?ref=1c70261c9a4d7faedfb03a79753b9acf81195561", "patch": "@@ -28,9 +28,9 @@ along with GCC; see the file COPYING3.  If not see\n #define DSYMUTIL_SPEC \\\n    \"%{!fdump=*:%{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:\\\n     %{v} \\\n-    %{g*:%{!gstabs*:%{!g0: -idsym}}}\\\n+    %{g*:%{!gstabs*:%{%:debug-level-gt(0): -idsym}}}\\\n     %{.c|.cc|.C|.cpp|.cp|.c++|.cxx|.CPP|.m|.mm|.s|.f|.f90|.f95|.f03|.f77|.for|.F|.F90|.F95|.F03: \\\n-    %{g*:%{!gstabs*:%{!g0: -dsym}}}}}}}}}}}\"\n+    %{g*:%{!gstabs*:%{%:debug-level-gt(0): -dsym}}}}}}}}}}}\"\n \n /* Tell collect2 to run dsymutil for us as necessary.  */\n #define COLLECT_RUN_DSYMUTIL 1\n@@ -45,7 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n    yet generate dwarf.)  */\n \n #undef  ASM_DEBUG_SPEC\n-#define ASM_DEBUG_SPEC  \"%{g*:%{!g0:%{gstabs:--gstabs}}}\"\n+#define ASM_DEBUG_SPEC  \"%{g*:%{%:debug-level-gt(0):%{gstabs:--gstabs}}}\"\n \n #undef  ASM_OUTPUT_ALIGNED_COMMON\n #define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\"}, {"sha": "0ed7da94f17aac8e31757f1a6c496580c32d61e8", "filename": "gcc/gcc.c", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c70261c9a4d7faedfb03a79753b9acf81195561/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=1c70261c9a4d7faedfb03a79753b9acf81195561", "patch": "@@ -402,6 +402,7 @@ static const char *compare_debug_auxbase_opt_spec_function (int, const char **);\n static const char *pass_through_libs_spec_func (int, const char **);\n static const char *replace_extension_spec_func (int, const char **);\n static const char *greater_than_spec_func (int, const char **);\n+static const char *debug_level_greater_than_spec_func (int, const char **);\n static char *convert_white_space (char *);\n \f\n /* The Specs Language\n@@ -833,14 +834,16 @@ proper position among the other output files.  */\n      && defined(HAVE_AS_GDWARF2_DEBUG_FLAG) && defined(HAVE_AS_GSTABS_DEBUG_FLAG)\n #  define ASM_DEBUG_SPEC\t\t\t\t\t\t\\\n       (PREFERRED_DEBUGGING_TYPE == DBX_DEBUG\t\t\t\t\\\n-       ? \"%{!g0:%{gdwarf*:--gdwarf2}%{!gdwarf*:%{g*:--gstabs}}}\" ASM_MAP\t\\\n-       : \"%{!g0:%{gstabs*:--gstabs}%{!gstabs*:%{g*:--gdwarf2}}}\" ASM_MAP)\n+       ? \"%{%:debug-level-gt(0):\"\t\t\t\t\t\\\n+\t \"%{gdwarf*:--gdwarf2}%{!gdwarf*:%{g*:--gstabs}}}\" ASM_MAP\t\\\n+       : \"%{%:debug-level-gt(0):\"\t\t\t\t\t\\\n+\t \"%{gstabs*:--gstabs}%{!gstabs*:%{g*:--gdwarf2}}}\" ASM_MAP)\n # else\n #  if defined(DBX_DEBUGGING_INFO) && defined(HAVE_AS_GSTABS_DEBUG_FLAG)\n-#   define ASM_DEBUG_SPEC \"%{g*:%{!g0:--gstabs}}\" ASM_MAP\n+#   define ASM_DEBUG_SPEC \"%{g*:%{%:debug-level-gt(0):--gstabs}}\" ASM_MAP\n #  endif\n #  if defined(DWARF2_DEBUGGING_INFO) && defined(HAVE_AS_GDWARF2_DEBUG_FLAG)\n-#   define ASM_DEBUG_SPEC \"%{g*:%{!g0:--gdwarf2}}\" ASM_MAP\n+#   define ASM_DEBUG_SPEC \"%{g*:%{%:debug-level-gt(0):--gdwarf2}}\" ASM_MAP\n #  endif\n # endif\n #endif\n@@ -1119,7 +1122,8 @@ static const char *cpp_unique_options =\n    in turn cause preprocessor symbols to be defined specially.  */\n static const char *cpp_options =\n \"%(cpp_unique_options) %1 %{m*} %{std*&ansi&trigraphs} %{W*&pedantic*} %{w}\\\n- %{f*} %{g*:%{!g0:%{g*} %{!fno-working-directory:-fworking-directory}}} %{O*}\\\n+ %{f*} %{g*:%{%:debug-level-gt(0):%{g*}\\\n+ %{!fno-working-directory:-fworking-directory}}} %{O*}\\\n  %{undef} %{save-temps*:-fpch-preprocess}\";\n \n /* This contains cpp options which are not passed when the preprocessor\n@@ -1639,6 +1643,7 @@ static const struct spec_function static_spec_functions[] =\n   { \"pass-through-libs\",\tpass_through_libs_spec_func },\n   { \"replace-extension\",\treplace_extension_spec_func },\n   { \"gt\",\t\t\tgreater_than_spec_func },\n+  { \"debug-level-gt\",\t\tdebug_level_greater_than_spec_func },\n #ifdef EXTRA_SPEC_FUNCTIONS\n   EXTRA_SPEC_FUNCTIONS\n #endif\n@@ -9863,6 +9868,27 @@ greater_than_spec_func (int argc, const char **argv)\n   return NULL;\n }\n \n+/* Returns \"\" if debug_info_level is greater than ARGV[ARGC-1].\n+   Otherwise, return NULL.  */\n+\n+static const char *\n+debug_level_greater_than_spec_func (int argc, const char **argv)\n+{\n+  char *converted;\n+\n+  if (argc != 1)\n+    fatal_error (input_location,\n+\t\t \"wrong number of arguments to %%:debug-level-gt\");\n+\n+  long arg = strtol (argv[0], &converted, 10);\n+  gcc_assert (converted != argv[0]);\n+\n+  if (debug_info_level > arg)\n+    return \"\";\n+\n+  return NULL;\n+}\n+\n /* Insert backslash before spaces in ORIG (usually a file path), to \n    avoid being broken by spec parser.\n "}]}