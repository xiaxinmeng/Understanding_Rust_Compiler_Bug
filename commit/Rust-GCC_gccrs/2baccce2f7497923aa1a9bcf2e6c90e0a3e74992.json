{"sha": "2baccce2f7497923aa1a9bcf2e6c90e0a3e74992", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJhY2NjZTJmNzQ5NzkyM2FhMWE5YmNmMmU2YzkwZTBhM2U3NDk5Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-21T06:46:22Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-21T06:46:22Z"}, "message": "(put_var_into_stack): Check REG != 0 before dereference.\n\nFrom-SVN: r2198", "tree": {"sha": "6de19a0d0b3dc4a9d41920da7a65d62b315d4781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6de19a0d0b3dc4a9d41920da7a65d62b315d4781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2baccce2f7497923aa1a9bcf2e6c90e0a3e74992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2baccce2f7497923aa1a9bcf2e6c90e0a3e74992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2baccce2f7497923aa1a9bcf2e6c90e0a3e74992", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2baccce2f7497923aa1a9bcf2e6c90e0a3e74992/comments", "author": null, "committer": null, "parents": [{"sha": "13c9910fdd0e05248c4a8803dbf4e256bb386c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c9910fdd0e05248c4a8803dbf4e256bb386c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13c9910fdd0e05248c4a8803dbf4e256bb386c1c"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "a7e143805d8896de5f58d22b9245f627969855ba", "filename": "gcc/function.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2baccce2f7497923aa1a9bcf2e6c90e0a3e74992/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2baccce2f7497923aa1a9bcf2e6c90e0a3e74992/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=2baccce2f7497923aa1a9bcf2e6c90e0a3e74992", "patch": "@@ -818,11 +818,18 @@ put_var_into_stack (decl)\n \n   /* Get the current rtl used for this object and it's original mode.  */\n   reg = TREE_CODE (decl) == SAVE_EXPR ? SAVE_EXPR_RTL (decl) : DECL_RTL (decl);\n-  promoted_mode = GET_MODE (reg);\n+\n+  /* No need to do anything if decl has no rtx yet\n+     since in that case caller is setting TREE_ADDRESSABLE\n+     and a stack slot will be assigned when the rtl is made.  */\n+  if (reg == 0)\n+    return;\n \n   /* Get the declared mode for this object.  */\n   decl_mode = (TREE_CODE (decl) == SAVE_EXPR ? TYPE_MODE (TREE_TYPE (decl))\n \t       : DECL_MODE (decl));\n+  /* Get the mode it's actually stored in.  */\n+  promoted_mode = GET_MODE (reg);\n \n   /* If this variable comes from an outer function,\n      find that function's saved context.  */\n@@ -831,12 +838,6 @@ put_var_into_stack (decl)\n       if (function->decl == context)\n \tbreak;\n \n-  /* No need to do anything if decl has no rtx yet\n-     since in that case caller is setting TREE_ADDRESSABLE\n-     and a stack slot will be assigned when the rtl is made.  */\n-  if (reg == 0)\n-    return;\n-\n   /* If this is a variable-size object with a pseudo to address it,\n      put that pseudo into the stack, if the var is nonlocal.  */\n   if (DECL_NONLOCAL (decl)"}]}