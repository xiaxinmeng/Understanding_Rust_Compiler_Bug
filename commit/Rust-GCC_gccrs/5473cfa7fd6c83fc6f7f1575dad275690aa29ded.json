{"sha": "5473cfa7fd6c83fc6f7f1575dad275690aa29ded", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ3M2NmYTdmZDZjODNmYzZmN2YxNTc1ZGFkMjc1NjkwYWEyOWRlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-01-24T11:01:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-01-24T11:01:29Z"}, "message": "simplify-rtx.c (simplify_relational_operation): Don't simplify address == constant into address + -constant == 0.\n\n\t* simplify-rtx.c (simplify_relational_operation): Don't\n\tsimplify address == constant into address + -constant == 0.\n\n\t* gcc.dg/20040123-1.c: New test.\n\nFrom-SVN: r76490", "tree": {"sha": "80619cfb79cfe4992a98b70a94b5b710e8868a5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80619cfb79cfe4992a98b70a94b5b710e8868a5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5473cfa7fd6c83fc6f7f1575dad275690aa29ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5473cfa7fd6c83fc6f7f1575dad275690aa29ded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5473cfa7fd6c83fc6f7f1575dad275690aa29ded", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5473cfa7fd6c83fc6f7f1575dad275690aa29ded/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a51530561272552af3a5d99264da1e57028d4d27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a51530561272552af3a5d99264da1e57028d4d27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a51530561272552af3a5d99264da1e57028d4d27"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "77bfc8784c81189f7c071756212325070cb5e065", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5473cfa7fd6c83fc6f7f1575dad275690aa29ded/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5473cfa7fd6c83fc6f7f1575dad275690aa29ded/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5473cfa7fd6c83fc6f7f1575dad275690aa29ded", "patch": "@@ -1,3 +1,8 @@\n+2004-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* simplify-rtx.c (simplify_relational_operation): Don't\n+\tsimplify address == constant into address + -constant == 0.\n+\n 2004-01-24  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* gcc.c (process_command): Don't internationalize the"}, {"sha": "7f6b549b0fbd2da710ba7d7249af5d46874707d6", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5473cfa7fd6c83fc6f7f1575dad275690aa29ded/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5473cfa7fd6c83fc6f7f1575dad275690aa29ded/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=5473cfa7fd6c83fc6f7f1575dad275690aa29ded", "patch": "@@ -2530,6 +2530,8 @@ simplify_relational_operation (enum rtx_code code, enum machine_mode mode,\n       && ! ((GET_CODE (op0) == REG || GET_CODE (trueop0) == CONST_INT)\n \t    && (GET_CODE (op1) == REG || GET_CODE (trueop1) == CONST_INT))\n       && 0 != (tem = simplify_binary_operation (MINUS, mode, op0, op1))\n+      /* We cannot do this for == or != if tem is a nonzero address.  */\n+      && ((code != EQ && code != NE) || ! nonzero_address_p (tem))\n       && code != GTU && code != GEU && code != LTU && code != LEU)\n     return simplify_relational_operation (signed_condition (code),\n \t\t\t\t\t  mode, tem, const0_rtx);"}, {"sha": "ed7cb61ae4c2df7376bb5a085705cd07e89693c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5473cfa7fd6c83fc6f7f1575dad275690aa29ded/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5473cfa7fd6c83fc6f7f1575dad275690aa29ded/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5473cfa7fd6c83fc6f7f1575dad275690aa29ded", "patch": "@@ -1,3 +1,7 @@\n+2004-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/20040123-1.c: New test.\n+\n 2004-01-23  Zack Weinberg  <zack@codesourcery.com>\n \n \t* gcc.dg/builtins-30.c: Move dg-warning marks to the proper lines."}, {"sha": "2a73382dd94b3c982b6fe849907caae95211635c", "filename": "gcc/testsuite/gcc.dg/20040123-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5473cfa7fd6c83fc6f7f1575dad275690aa29ded/gcc%2Ftestsuite%2Fgcc.dg%2F20040123-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5473cfa7fd6c83fc6f7f1575dad275690aa29ded/gcc%2Ftestsuite%2Fgcc.dg%2F20040123-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040123-1.c?ref=5473cfa7fd6c83fc6f7f1575dad275690aa29ded", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler \"abort\" } } */\n+\n+extern void abort (void);\n+extern char a[];\n+\n+void foo (void)\n+{\n+  if ((void *) a == (void *) 0x4000UL)\n+    abort ();\n+}"}]}