{"sha": "96975b1159808defb222a57b369db02a0eab5fee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY5NzViMTE1OTgwOGRlZmIyMjJhNTdiMzY5ZGIwMmEwZWFiNWZlZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-06T18:09:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-06T18:09:53Z"}, "message": "PR c++/85214 - ICE with alias, generic lambda, constexpr if.\n\nHere, since the condition for the constexpr if depends on the type of 'j',\nit's still dependent when we are partially instantiating the inner lambda,\nso we need to defer instantiating the constexpr if.  When we instantiated\nthe inner lambda, we tried to substitute into the typename, which failed\nbecause we didn't have a declaration of 'i' available.\n\nFixed by teaching extract_locals_r to capture local typedefs such as 'ar';\nif we have the typedef handy, we don't need to substitute into its\ndefinition.\n\n\t* pt.c (extract_locals_r): Remember local typedefs.\n\nFrom-SVN: r259185", "tree": {"sha": "09a519ef6a26c4fc39366f1fd44d9701a19e00ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09a519ef6a26c4fc39366f1fd44d9701a19e00ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96975b1159808defb222a57b369db02a0eab5fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96975b1159808defb222a57b369db02a0eab5fee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96975b1159808defb222a57b369db02a0eab5fee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96975b1159808defb222a57b369db02a0eab5fee/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1c7971b81abab836f2fc4f0b8d0f7964f8a6e13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c7971b81abab836f2fc4f0b8d0f7964f8a6e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1c7971b81abab836f2fc4f0b8d0f7964f8a6e13"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "ba323bf7c20e9e4179489d817840cc5b9b994418", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96975b1159808defb222a57b369db02a0eab5fee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96975b1159808defb222a57b369db02a0eab5fee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=96975b1159808defb222a57b369db02a0eab5fee", "patch": "@@ -1,3 +1,8 @@\n+2018-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/85214 - ICE with alias, generic lambda, constexpr if.\n+\t* pt.c (extract_locals_r): Remember local typedefs.\n+\n 2018-04-06  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/84269"}, {"sha": "db3d7e38d85329b58fc125d957e288e0eeeca426", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96975b1159808defb222a57b369db02a0eab5fee/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96975b1159808defb222a57b369db02a0eab5fee/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=96975b1159808defb222a57b369db02a0eab5fee", "patch": "@@ -11610,6 +11610,11 @@ extract_locals_r (tree *tp, int */*walk_subtrees*/, void *data_)\n   el_data &data = *reinterpret_cast<el_data*>(data_);\n   tree *extra = &data.extra;\n   tsubst_flags_t complain = data.complain;\n+\n+  if (TYPE_P (*tp) && typedef_variant_p (*tp))\n+    /* Remember local typedefs (85214).  */\n+    tp = &TYPE_NAME (*tp);\n+\n   if (TREE_CODE (*tp) == DECL_EXPR)\n     data.internal.add (DECL_EXPR_DECL (*tp));\n   else if (tree spec = retrieve_local_specialization (*tp))"}, {"sha": "24343adb74825fc82cb7b568b09c9ccb14efa638", "filename": "gcc/testsuite/g++.dg/cpp1z/constexpr-if20.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96975b1159808defb222a57b369db02a0eab5fee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96975b1159808defb222a57b369db02a0eab5fee/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fconstexpr-if20.C?ref=96975b1159808defb222a57b369db02a0eab5fee", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/85214\n+// { dg-additional-options -std=c++17 }\n+\n+struct g {\n+  constexpr operator int() { return true; }\n+};\n+template <typename T, typename U> constexpr bool m = true;\n+template <long L> struct C { typedef double q; };\n+void ao() {\n+  [](auto i) {\n+      using ar = typename C<i>::q;\n+      [](auto j) {\n+\tusing as = typename C<j>::q;\n+\tif constexpr (m<ar, as>) {}\n+      }(g());\n+  }(g());\n+}"}]}