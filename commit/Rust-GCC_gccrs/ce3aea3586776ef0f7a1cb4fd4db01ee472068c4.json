{"sha": "ce3aea3586776ef0f7a1cb4fd4db01ee472068c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UzYWVhMzU4Njc3NmVmMGY3YTFjYjRmZDRkYjAxZWU0NzIwNjhjNA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-07-01T11:50:12Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-07-01T11:50:12Z"}, "message": "expr.c (expand_expr_real_1): Reinstate fallthrough to TRUTH_ANDIF_EXPR if do_store_flag returns NULL.\n\n2009-07-01  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* expr.c (expand_expr_real_1): Reinstate fallthrough to\n\tTRUTH_ANDIF_EXPR if do_store_flag returns NULL.\n\nFrom-SVN: r149136", "tree": {"sha": "594dec40197069e4143cbff49ccb32a6e5762715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/594dec40197069e4143cbff49ccb32a6e5762715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c29fe0c8bd7791edd60280ebb79880e97cb025c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c29fe0c8bd7791edd60280ebb79880e97cb025c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c29fe0c8bd7791edd60280ebb79880e97cb025c1"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "5e0e00d94c37e272ca1f1fca94396144302a91c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce3aea3586776ef0f7a1cb4fd4db01ee472068c4", "patch": "@@ -1,3 +1,8 @@\n+2009-07-01  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* expr.c (expand_expr_real_1): Reinstate fallthrough to\n+\tTRUTH_ANDIF_EXPR if do_store_flag returns NULL.\n+\n 2009-07-01  Maciej W. Rozycki  <macro@linux-mips.org>\n \n \t* config/vax/vax.h (TARGET_BSD_DIVMOD): New macro.  Set to 1."}, {"sha": "b3cd2b14f734dc70ecb48541a072da9648dd0a16", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3aea3586776ef0f7a1cb4fd4db01ee472068c4/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ce3aea3586776ef0f7a1cb4fd4db01ee472068c4", "patch": "@@ -9109,8 +9109,11 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n       temp = do_store_flag (exp,\n \t\t\t    modifier != EXPAND_STACK_PARM ? target : NULL_RTX,\n \t\t\t    tmode != VOIDmode ? tmode : mode);\n-      gcc_assert (temp);\n-      return temp;\n+      if (temp)\n+\treturn temp;\n+\n+      /* Use a compare and a jump for BLKmode comparisons, or for function\n+\t type comparisons is HAVE_canonicalize_funcptr_for_compare.  */\n \n       /* Although TRUTH_{AND,OR}IF_EXPR aren't present in GIMPLE, they\n \t are occassionally created by folding during expansion.  */"}]}