{"sha": "c44c2a3b0559979e3694ee2ab6860ec95fa3068a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ0YzJhM2IwNTU5OTc5ZTM2OTRlZTJhYjY4NjBlYzk1ZmEzMDY4YQ==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-07-22T06:37:24Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-08-21T16:53:20Z"}, "message": "Using gen_int_mode instead of GEN_INT to avoid ICE caused by type promotion.\n\n2020-07-22  Hongtao Liu  <hongtao.liu@intel.com>\n\ngcc/\n\tPR target/96262\n\t* config/i386/i386-expand.c\n\t(ix86_expand_vec_shift_qihi_constant): Refine.\n\ngcc/testsuite/\n\t* gcc.target/i386/pr96262-1.c: New test.", "tree": {"sha": "7ab66f51a2d240ecce88954c7619ef0303648643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ab66f51a2d240ecce88954c7619ef0303648643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c44c2a3b0559979e3694ee2ab6860ec95fa3068a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c44c2a3b0559979e3694ee2ab6860ec95fa3068a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c44c2a3b0559979e3694ee2ab6860ec95fa3068a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c44c2a3b0559979e3694ee2ab6860ec95fa3068a/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b46584d7836bee011facdf946fd7241c748d66f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b46584d7836bee011facdf946fd7241c748d66f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b46584d7836bee011facdf946fd7241c748d66f0"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "a284f7e5bb488db044bb9bc13980597dd15d51c8", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44c2a3b0559979e3694ee2ab6860ec95fa3068a/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44c2a3b0559979e3694ee2ab6860ec95fa3068a/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=c44c2a3b0559979e3694ee2ab6860ec95fa3068a", "patch": "@@ -19604,7 +19604,7 @@ bool\n ix86_expand_vec_shift_qihi_constant (enum rtx_code code, rtx dest, rtx op1, rtx op2)\n {\n   machine_mode qimode, himode;\n-  unsigned int and_constant, xor_constant;\n+  HOST_WIDE_INT and_constant, xor_constant;\n   HOST_WIDE_INT shift_amount;\n   rtx vec_const_and, vec_const_xor;\n   rtx tmp, op1_subreg;\n@@ -19679,7 +19679,7 @@ ix86_expand_vec_shift_qihi_constant (enum rtx_code code, rtx dest, rtx op1, rtx\n   emit_move_insn (dest, simplify_gen_subreg (qimode, tmp, himode, 0));\n   emit_move_insn (vec_const_and,\n \t\t  ix86_build_const_vector (qimode, true,\n-\t\t\t\t\t   GEN_INT (and_constant)));\n+\t\t\t\t\t   gen_int_mode (and_constant, QImode)));\n   emit_insn (gen_and (dest, dest, vec_const_and));\n \n   /* For ASHIFTRT, perform extra operation like\n@@ -19690,7 +19690,7 @@ ix86_expand_vec_shift_qihi_constant (enum rtx_code code, rtx dest, rtx op1, rtx\n       vec_const_xor = gen_reg_rtx (qimode);\n       emit_move_insn (vec_const_xor,\n \t\t      ix86_build_const_vector (qimode, true,\n-\t\t\t\t\t       GEN_INT (xor_constant)));\n+\t\t\t\t\t       gen_int_mode (xor_constant, QImode)));\n       emit_insn (gen_xor (dest, dest, vec_const_xor));\n       emit_insn (gen_sub (dest, dest, vec_const_xor));\n     }"}, {"sha": "1825388072ebd6e883ce69440edafbae13178a2c", "filename": "gcc/testsuite/gcc.target/i386/pr96262-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44c2a3b0559979e3694ee2ab6860ec95fa3068a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96262-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44c2a3b0559979e3694ee2ab6860ec95fa3068a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96262-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96262-1.c?ref=c44c2a3b0559979e3694ee2ab6860ec95fa3068a", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/96262 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512bw -O\" } */\n+\n+typedef char __attribute__ ((__vector_size__ (64))) V;\n+\n+V\n+foo (V v)\n+{\n+  return ~(v << 1);\n+}"}]}