{"sha": "6484413978b4b3ede2bfe2b67c3a64c65bc0f28b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ4NDQxMzk3OGI0YjNlZGUyYmZlMmI2N2MzYTY0YzY1YmMwZjI4Yg==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-02-22T17:22:08Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-02-22T17:22:08Z"}, "message": "re PR c++/26291 (Invalid ellipsis in operator not diagnosed)\n\n\tPR c++/26291\n\t* decl.c (grok_op_properties): Check for ellipsis in arguments of\n        operators.\n\n\t* g++.dg/other/ellipsis1.C: New test.\n\t* g++.dg/parse/operator4.C: Adjust error marker.\n\nFrom-SVN: r111367", "tree": {"sha": "97d14c6fc2b1b36249dd0c7282e7310a42090995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97d14c6fc2b1b36249dd0c7282e7310a42090995"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/comments", "author": null, "committer": null, "parents": [{"sha": "f8190ffc6cf4cb616b423b930395ffd284688e28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8190ffc6cf4cb616b423b930395ffd284688e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8190ffc6cf4cb616b423b930395ffd284688e28"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "c888a09acc24fbe5a0147aa6c0222bd42597d072", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6484413978b4b3ede2bfe2b67c3a64c65bc0f28b", "patch": "@@ -1,6 +1,13 @@\n-2006-02-20 Rafael \ufffdvila de Esp\ufffdndola <rafael.espindola@gmail.com>\n-\t* Make-lang.in (C++): Remove\n-\t(.PHONY): Remove C++\n+2006-02-22  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/26291\n+\t* decl.c (grok_op_properties): Check for ellipsis in arguments of\n+        operators.\n+\n+2006-02-20  Rafael \ufffdvila de Esp\ufffdndola  <rafael.espindola@gmail.com>\n+\n+\t* Make-lang.in (C++): Remove.\n+\t(.PHONY): Remove C++.\n \n 2006-02-18  Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "c803a84bac1a0bd5b68f2bc797f9fdc558293072", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6484413978b4b3ede2bfe2b67c3a64c65bc0f28b", "patch": "@@ -8828,13 +8828,15 @@ grok_op_properties (tree decl, bool complain)\n   tree name = DECL_NAME (decl);\n   enum tree_code operator_code;\n   int arity;\n+  bool ellipsis_p;\n   tree class_type;\n \n-  /* Count the number of arguments.  */\n+  /* Count the number of arguments and check for ellipsis.  */\n   for (argtype = argtypes, arity = 0;\n        argtype && argtype != void_list_node;\n        argtype = TREE_CHAIN (argtype))\n     ++arity;\n+  ellipsis_p = !argtype;\n \n   class_type = DECL_CONTEXT (decl);\n   if (class_type && !CLASS_TYPE_P (class_type))\n@@ -9000,11 +9002,14 @@ grok_op_properties (tree decl, bool complain)\n \t\t     \"conversion operator\",\n \t\t     ref ? \"a reference to \" : \"\", what);\n \t}\n+\n       if (operator_code == COND_EXPR)\n \t{\n \t  /* 13.4.0.3 */\n \t  error (\"ISO C++ prohibits overloading operator ?:\");\n \t}\n+      else if (ellipsis_p)\n+\terror (\"%qD must not have variable number of arguments\", decl);\n       else if (ambi_op_p (operator_code))\n \t{\n \t  if (arity == 1)"}, {"sha": "951bc113265c423097916b6a22e11137b5c6fb79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6484413978b4b3ede2bfe2b67c3a64c65bc0f28b", "patch": "@@ -1,3 +1,9 @@\n+2006-02-22  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/26291\n+\t* g++.dg/other/ellipsis1.C: New test.\n+\t* g++.dg/parse/operator4.C: Adjust error marker.\n+\n 2006-02-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/25603"}, {"sha": "d2501ca85e2c9733d0c1532d35d85b85833ee83e", "filename": "gcc/testsuite/g++.dg/other/ellipsis1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fellipsis1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fellipsis1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fellipsis1.C?ref=6484413978b4b3ede2bfe2b67c3a64c65bc0f28b", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/26291\n+// { dg-do compile }\n+\n+struct A\n+{\n+    A& operator= (A,...);  // { dg-error \"variable number of arguments\" }\n+    A operator+ (...);     // { dg-error \"variable number of arguments\" }\n+    operator int(...);     // { dg-error \"variable number of arguments\" }\n+    int operator() (...);\n+};\n+\n+A operator- (A,...);       // { dg-error \"variable number of arguments\" }"}, {"sha": "054ddc8354f2ec210d79263589aee7b60d466599", "filename": "gcc/testsuite/g++.dg/parse/operator4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6484413978b4b3ede2bfe2b67c3a64c65bc0f28b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator4.C?ref=6484413978b4b3ede2bfe2b67c3a64c65bc0f28b", "patch": "@@ -1 +1 @@\n-int operator *(int, ...); // { dg-error \"class\" }\n+int operator *(int, ...); // { dg-error \"class|variable number of arguments\" }"}]}