{"sha": "a7fb206de824470c81339bda02c29eb1f3f8ddf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdmYjIwNmRlODI0NDcwYzgxMzM5YmRhMDJjMjllYjFmM2Y4ZGRmNA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2001-10-25T23:03:11Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-25T23:03:11Z"}, "message": "exp_imgv.adb (Expand_Image_Attribute): Defend against bad use in HIE mode, avoids compilation abandoned message\n\n\t* exp_imgv.adb (Expand_Image_Attribute): Defend against bad use\n        in HIE mode, avoids compilation abandoned message\n\n\t* exp_imgv.adb: Correct typo in previous change\n\n\t* exp_imgv.adb: Correct typo in previous change (not my day!)\n\nFrom-SVN: r46501", "tree": {"sha": "603ab227ef0aea395a7410a93194f3a5faab1727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/603ab227ef0aea395a7410a93194f3a5faab1727"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7fb206de824470c81339bda02c29eb1f3f8ddf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fb206de824470c81339bda02c29eb1f3f8ddf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7fb206de824470c81339bda02c29eb1f3f8ddf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fb206de824470c81339bda02c29eb1f3f8ddf4/comments", "author": null, "committer": null, "parents": [{"sha": "1403221a88a74b53b39916ea722f9fca8497cf8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1403221a88a74b53b39916ea722f9fca8497cf8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1403221a88a74b53b39916ea722f9fca8497cf8e"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "c1211eafde458a0d668f7b3ba440f2044ccd023e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fb206de824470c81339bda02c29eb1f3f8ddf4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fb206de824470c81339bda02c29eb1f3f8ddf4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a7fb206de824470c81339bda02c29eb1f3f8ddf4", "patch": "@@ -1,3 +1,12 @@\n+2001-10-25  Robert Dewar <dewar@gnat.com>\n+\n+\t* exp_imgv.adb (Expand_Image_Attribute): Defend against bad use \n+        in HIE mode, avoids compilation abandoned message\n+\t\n+\t* exp_imgv.adb: Correct typo in previous change\n+\t\n+\t* exp_imgv.adb: Correct typo in previous change (not my day!)\n+\n 2001-10-25  Robert Dewar <dewar@gnat.com>\n \n \t* s-tpinop.ads: Add 2001 to copyright notice. Fix header format."}, {"sha": "9c21fcd892309c1c94e5c190c3b6691e832eec9a", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7fb206de824470c81339bda02c29eb1f3f8ddf4/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7fb206de824470c81339bda02c29eb1f3f8ddf4/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=a7fb206de824470c81339bda02c29eb1f3f8ddf4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.4 $\n+--                            $Revision$\n --                                                                          --\n --            Copyright (C) 2001 Free Software Foundation, Inc.             --\n --                                                                          --\n@@ -227,17 +227,18 @@ package body Exp_Imgv is\n    --  is 32/16/8 depending on the element type of Lit_Indexes.\n \n    procedure Expand_Image_Attribute (N : Node_Id) is\n-      Loc     : constant Source_Ptr := Sloc (N);\n-      Exprs   : constant List_Id    := Expressions (N);\n-      Pref    : constant Node_Id    := Prefix (N);\n-      Ptyp    : constant Entity_Id  := Entity (Pref);\n-      Rtyp    : constant Entity_Id  := Root_Type (Ptyp);\n-      Expr    : constant Node_Id    := Relocate_Node (First (Exprs));\n-      Imid    : RE_Id;\n-      Tent    : Entity_Id;\n-      Arglist : List_Id;\n-      Func    : RE_Id;\n-      Ttyp    : Entity_Id;\n+      Loc      : constant Source_Ptr := Sloc (N);\n+      Exprs    : constant List_Id    := Expressions (N);\n+      Pref     : constant Node_Id    := Prefix (N);\n+      Ptyp     : constant Entity_Id  := Entity (Pref);\n+      Rtyp     : constant Entity_Id  := Root_Type (Ptyp);\n+      Expr     : constant Node_Id    := Relocate_Node (First (Exprs));\n+      Imid     : RE_Id;\n+      Tent     : Entity_Id;\n+      Arglist  : List_Id;\n+      Func     : RE_Id;\n+      Ttyp     : Entity_Id;\n+      Func_Ent : Entity_Id;\n \n    begin\n       if Rtyp = Standard_Boolean then\n@@ -347,7 +348,20 @@ package body Exp_Imgv is\n       end if;\n \n       --  If we fall through, we have one of the cases that is handled by\n-      --  calling one of the System.Img_xx routines.\n+      --  calling one of the System.Img_xx routines and Imid is set to the\n+      --  RE_Id for the function to be called.\n+\n+      Func_Ent := RTE (Imid);\n+\n+      --  If the function entity is empty, that means we have a case in\n+      --  no run time mode where the operation is not allowed, and an\n+      --  appropriate diagnostic has already been issued.\n+\n+      if No (Func_Ent) then\n+         return;\n+      end if;\n+\n+      --  Otherwise prepare arguments for run-time call\n \n       Arglist := New_List (Convert_To (Tent, Relocate_Node (Expr)));\n \n@@ -388,7 +402,7 @@ package body Exp_Imgv is\n \n       Rewrite (N,\n         Make_Function_Call (Loc,\n-          Name => New_Reference_To (RTE (Imid), Loc),\n+          Name => New_Reference_To (Func_Ent, Loc),\n           Parameter_Associations => Arglist));\n \n       Analyze_And_Resolve (N, Standard_String);"}]}