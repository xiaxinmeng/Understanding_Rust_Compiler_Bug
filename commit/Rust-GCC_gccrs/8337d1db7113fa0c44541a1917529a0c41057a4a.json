{"sha": "8337d1db7113fa0c44541a1917529a0c41057a4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMzN2QxZGI3MTEzZmEwYzQ0NTQxYTE5MTc1MjlhMGM0MTA1N2E0YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-04-30T06:14:39Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-04-30T06:14:39Z"}, "message": "re PR c/60139 (Imprecise column number for -pedantic on non-computable initializer element)\n\n\tPR c/60139\n\t* c-typeck.c (output_init_element): Pass OPT_Wpedantic to pedwarn\n\tand pedwarn_init.  Use loc insted of input_location.\n\n\t* gcc.dg/pr60139.c: New test.\n\nFrom-SVN: r209926", "tree": {"sha": "edc7cc5205725c68c2ab5c60851dedd9e4147750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edc7cc5205725c68c2ab5c60851dedd9e4147750"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8337d1db7113fa0c44541a1917529a0c41057a4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8337d1db7113fa0c44541a1917529a0c41057a4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8337d1db7113fa0c44541a1917529a0c41057a4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8337d1db7113fa0c44541a1917529a0c41057a4a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4bdc42f752a6fbff34c0bc75a907957afcbc431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bdc42f752a6fbff34c0bc75a907957afcbc431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bdc42f752a6fbff34c0bc75a907957afcbc431"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "d54b62e11ea86c469af90bd672217a4cf2f9b748", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8337d1db7113fa0c44541a1917529a0c41057a4a/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8337d1db7113fa0c44541a1917529a0c41057a4a/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=8337d1db7113fa0c44541a1917529a0c41057a4a", "patch": "@@ -1,3 +1,9 @@\n+2014-04-30  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/60139\n+\t* c-typeck.c (output_init_element): Pass OPT_Wpedantic to pedwarn\n+\tand pedwarn_init.  Use loc insted of input_location.\n+\n 2014-04-30  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/60351"}, {"sha": "6e56b69ab5f9051951a52b24ea16a75f9186e9dc", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8337d1db7113fa0c44541a1917529a0c41057a4a/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8337d1db7113fa0c44541a1917529a0c41057a4a/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=8337d1db7113fa0c44541a1917529a0c41057a4a", "patch": "@@ -8255,12 +8255,12 @@ output_init_element (location_t loc, tree value, tree origtype,\n \t  value = error_mark_node;\n \t}\n       else if (require_constant_elements)\n-\tpedwarn (input_location, 0,\n+\tpedwarn (loc, OPT_Wpedantic,\n \t\t \"initializer element is not computable at load time\");\n     }\n   else if (!maybe_const\n \t   && (require_constant_value || require_constant_elements))\n-    pedwarn_init (input_location, 0,\n+    pedwarn_init (loc, OPT_Wpedantic,\n \t\t  \"initializer element is not a constant expression\");\n \n   /* Issue -Wc++-compat warnings about initializing a bitfield with"}, {"sha": "de105037daf126c6506bea7be40bebda5dda107e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8337d1db7113fa0c44541a1917529a0c41057a4a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8337d1db7113fa0c44541a1917529a0c41057a4a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8337d1db7113fa0c44541a1917529a0c41057a4a", "patch": "@@ -1,3 +1,8 @@\n+2014-04-30  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/60139\n+\t* gcc.dg/pr60139.c: New test.\n+\n 2014-04-30  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/60351"}, {"sha": "a63d8b5b9bdfafe5b2244032c373ab91dfc8116a", "filename": "gcc/testsuite/gcc.dg/pr60139.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8337d1db7113fa0c44541a1917529a0c41057a4a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60139.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8337d1db7113fa0c44541a1917529a0c41057a4a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60139.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60139.c?ref=8337d1db7113fa0c44541a1917529a0c41057a4a", "patch": "@@ -0,0 +1,14 @@\n+/* PR c/60139 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wpedantic\" } */\n+/* { dg-prune-output \".*near initialization for.*\" } */\n+\n+double sin (double);\n+void\n+fn (int *p)\n+{\n+  int **a[] = { &p, /* { dg-warning \"17:initializer element is not computable at load time\" } */\n+               (void *) 0, &p }; /* { dg-warning \"28:initializer element is not computable at load time\" } */\n+  double d[] = { sin (1.0), /* { dg-warning \"18:initializer element is not a constant expression\" } */\n+                 8.8, sin (1.0), 2.6 }; /* { dg-warning \"23:initializer element is not a constant expression\" } */\n+}"}]}