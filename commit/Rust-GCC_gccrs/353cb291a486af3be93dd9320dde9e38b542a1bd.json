{"sha": "353cb291a486af3be93dd9320dde9e38b542a1bd", "node_id": "C_kwDOANBUbNoAKDM1M2NiMjkxYTQ4NmFmM2JlOTNkZDkzMjBkZGU5ZTM4YjU0MmExYmQ", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-06-14T18:14:30Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-10-15T18:44:41Z"}, "message": "Darwin: Revise handling of some driver opts.\n\nDarwin has a user convenience feature where some linker options are exposed\nat the driver level (so one can type '-all_load' instead of '-Wl,-all_load'\nor '-Xlinker -all_load').  We retain this feature, but now these options are\nall marked as 'Driver' and we process them as early as possible so that they\nget allocated to the right toolchain command.  There are a couple of special\ncases where these driver opts are used multiple times, or to control\noperations on more than one command (e.g. dynamiclib).  These are handled\nspecially and we then add %<xxxx specs for the commands that _do not_ need\nthem.  NOTE: the ordering of 'shared' and 'dynamiclib' is significant, hence\nthey are placed out of alphabetical order at the start.  Likewise, we keep\na couple of cases where a negative option originally appeared after the\npositive alternate, potentially overriding it.\n\nWhen we report an error with %e, it seems necessary to strip the option\nbefore doing so, otherwise it survives to the cc1 command line (%e does not\nappear to abort the program before this).\n\nRight now there is no mechanism to split up the 'variable portion' (%*) of\nthe matched spec string, so where we have some driver specs that take 2 or\n3 arguments, these cannot be processed here, but are deferred until the\nLINK_SPEC, where they are copied verbatim.\n\nWe have a 'safe' version of the macOS version string, that has been sanity-\nchecked and truncated to minor version.  If the 'tiny' (3rd) portion of the\nvalue is not significant, it is better to use the safe one in version-compare().\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/ChangeLog:\n\n\t* config/darwin-driver.c (darwin_driver_init): Revise comments, handle\n\tfilelist and framework options in specs instead of code.\n\t* config/darwin.h (SUBTARGET_DRIVER_SELF_SPECS): Update to handle link\n\tspecs that are really driver ones.\n\t(DARWIN_CC1_SPEC): Likewise.\n\t(CPP_SPEC): Likewise.\n\t(SYSROOT_SPEC): Append space.\n\t(LINK_SYSROOT_SPEC): Remove most driver link specs.\n\t(STANDARD_STARTFILE_PREFIX_2): Update link-related specs.\n\t(STARTFILE_SPEC): Likewise.\n\t(ASM_MMACOSX_VERSION_MIN_SPEC): Fix line wrap.\n\t(ASM_SPEC): Update driver-related specs.\n\t(ASM_FINAL_SPEC): Likewise.\n\t* config/darwin.opt: Remove now unused option aliases.\n\t* config/i386/darwin.h (EXTRA_ASM_OPTS): Ensure space after opt.\n\t(ASM_SPEC): Update driver-related specs.", "tree": {"sha": "3f924fc500ae24169f85c2c94ac6c99c7c2401a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f924fc500ae24169f85c2c94ac6c99c7c2401a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/353cb291a486af3be93dd9320dde9e38b542a1bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353cb291a486af3be93dd9320dde9e38b542a1bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/353cb291a486af3be93dd9320dde9e38b542a1bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353cb291a486af3be93dd9320dde9e38b542a1bd/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "730f52e05a1fb5c8cd92e352e9b191a6332be5c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/730f52e05a1fb5c8cd92e352e9b191a6332be5c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/730f52e05a1fb5c8cd92e352e9b191a6332be5c2"}], "stats": {"total": 492, "additions": 228, "deletions": 264}, "files": [{"sha": "a036e091c48b02d072e22965953817f72d2fcfca", "filename": "gcc/config/darwin-driver.c", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/353cb291a486af3be93dd9320dde9e38b542a1bd/gcc%2Fconfig%2Fdarwin-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/353cb291a486af3be93dd9320dde9e38b542a1bd/gcc%2Fconfig%2Fdarwin-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.c?ref=353cb291a486af3be93dd9320dde9e38b542a1bd", "patch": "@@ -259,14 +259,11 @@ maybe_get_sysroot_from_sdkroot ()\n   return xstrndup (maybe_sysroot, strlen (maybe_sysroot));\n }\n \n-/* Translate -filelist and -framework options in *DECODED_OPTIONS\n-   (size *DECODED_OPTIONS_COUNT) to use -Xlinker so that they are\n-   considered to be linker inputs in the case that no other inputs are\n-   specified.  Handling these options in DRIVER_SELF_SPECS does not\n-   suffice because specs are too late to add linker inputs, and\n-   handling them in LINK_SPEC does not suffice because the linker will\n-   not be called if there are no other inputs.  When native, also\n-   default the -mmacosx-version-min flag.  */\n+/* Handle the deduction of m32/m64 from -arch flags and the interactions\n+   between them (i.e. try to warn a user who thinks that they have a driver\n+   that can produce multi-slice \"FAT\" outputs with more than one arch).\n+   Default the -mmacosx-version-min flag, which requires a system call on\n+   native hosts.  */\n \n void\n darwin_driver_init (unsigned int *decoded_options_count,\n@@ -326,23 +323,6 @@ darwin_driver_init (unsigned int *decoded_options_count,\n \t  seenM64 = true;\n \t  break;\n \n-\tcase OPT_filelist:\n-\tcase OPT_framework:\n-\t  ++*decoded_options_count;\n-\t  *decoded_options = XRESIZEVEC (struct cl_decoded_option,\n-\t\t\t\t\t *decoded_options,\n-\t\t\t\t\t *decoded_options_count);\n-\t  memmove (*decoded_options + i + 2,\n-\t\t   *decoded_options + i + 1,\n-\t\t   ((*decoded_options_count - i - 2)\n-\t\t    * sizeof (struct cl_decoded_option)));\n-\t  generate_option (OPT_Xlinker, (*decoded_options)[i].arg, 1,\n-\t\t\t   CL_DRIVER, &(*decoded_options)[i + 1]);\n-\t  generate_option (OPT_Xlinker,\n-\t\t\t   (*decoded_options)[i].canonical_option[0], 1,\n-\t\t\t   CL_DRIVER, &(*decoded_options)[i]);\n-\t  break;\n-\n \tcase OPT_mmacosx_version_min_:\n \t  seen_version_min = true;\n \t  vers_string ="}, {"sha": "4aedf467c17ac5b0cfa5e886432bfc0dd941cf00", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 187, "deletions": 111, "changes": 298, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/353cb291a486af3be93dd9320dde9e38b542a1bd/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/353cb291a486af3be93dd9320dde9e38b542a1bd/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=353cb291a486af3be93dd9320dde9e38b542a1bd", "patch": "@@ -118,25 +118,164 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* True if pragma ms_struct is in effect.  */\n extern GTY(()) int darwin_ms_struct;\n \n-/* The majority of Darwin's special driver opts are direct access to ld flags\n-   (to save the user typing -Wl,xxxxx or Xlinker xxxxx) but we can't process\n-   them here, since doing so will make it appear that there are linker infiles\n-   and the linker will invoked even when it is not necessary.\n+/* Darwin has a user convenience feature where some linker options are exposed\n+   at the driver level (so one can type \"-all_load\" instead of \"-Wl,-all_load\"\n+   or \"-Xlinker -all_load\").  We retain this, but now these options are all\n+   marked as 'Driver' and we process them as early as possible so that they\n+   get allocated to the right toolchain command.  There are a couple of special\n+   cases where these driver opts are used multiple times, or to control\n+   operations on more than one command (e.g. dynamiclib).  These are handled\n+   specially and we then add %<xxxx specs for the commands that _don't_ need\n+   them.  NOTE: the order of 'shared' and 'dynamiclib' is significant, hence\n+   they are placed out of alphabetical order at the start.  Likewise, we keep\n+   a couple of cases where a negative option originally appeared after the\n+   positive alternate, potentially overriding it.\n+   When we report an error with %e, it seems necessary to strip the option\n+   before doing so, otherwise it survives to the cc1 command line (%e doesn't\n+   appear to abort the program before this).\n+   Right now there's no mechanism to split up the \"variable portion\" (%*) of\n+   the matched spec string, so where we have some driver specs that take 2\n+   or 3 arguments, these cannot be processed here, but are deferred until the\n+   LINK_SPEC, where they are copied verbatim.\n+   We have a \"safe\" version of the MacOS version string, that's been sanity-\n+   checked and truncated to minor version.  If the 'tiny' (3rd) portion of the\n+   value is not significant, it's better to use this in version-compare().  */\n \n-   However, a few can be handled and we can elide options that are silently-\n-   ignored defaults, plus warn on obsolete ones that no longer function.  */\n #undef SUBTARGET_DRIVER_SELF_SPECS\n #define SUBTARGET_DRIVER_SELF_SPECS\t\t\t\t\t\\\n-\"%{fapple-kext|mkernel:-static}\",\t\t\t\t\t\\\n-\"%{gfull:-g -fno-eliminate-unused-debug-symbols} %<gfull\",\t\t\\\n-\"%{gsplit-dwarf:%ngsplit-dwarf is not supported on this platform} \\\n-   %<gsplit-dwarf\",\t\t\t\t\t\t\t\\\n-\"%{gused:-g -feliminate-unused-debug-symbols} %<gused\",\t\t\t\\\n-\"%{rpath*: -Xlinker -rpath -Xlinker %*}\",\t\t\t\t\t\\\n-\"%{shared:-Zdynamiclib} %<shared\",\t\t\t\t\t\\\n-\"%{static:%{Zdynamic:%e conflicting code gen style switches are used}}\",\\\n-\"%{y*:%nthe y option is obsolete and ignored} %<y*\",\t\t\t\\\n-\"%<Mach \"\n+  \"%{shared:%{!dynamiclib:-dynamiclib}} %<shared\",\t\t\t\\\n+  \"%{static:%{dynamic|dynamiclib:%econflicting code generation switches}}\",\\\n+  \"%{dynamiclib:-Xlinker -dylib \\\n+     %{allowable_client*:-Xlinker -allowable_client -Xlinker %*} \\\n+       %<allowable_client* \\\n+     %{bundle_loader*: %<bundle_loader* \\\n+       %e-bundle_loader not allowed with -dynamiclib} \\\n+     %{client_name*: %<client_name* \\\n+       %e-client_name not allowed with -dynamiclib} \\\n+     %{compatibility_version*:\\\n+       -Xlinker -dylib_compatibility_version -Xlinker %*} \\\n+       %<compatibility_version* \\\n+     %{current_version*:-Xlinker -dylib_current_version -Xlinker %*} \\\n+       %<current_version* \\\n+     %{install_name*:-Xlinker -dylib_install_name -Xlinker %* } \\\n+       %<install_name* \\\n+     %{keep_private_externs: %<keep_private_externs \\\n+       %e-keep_private_externs not allowed with -dynamiclib} \\\n+     %{private_bundle: %<private_bundle \\\n+       %e-private_bundle not allowed with -dynamiclib} \\\n+    }\",\t\t\t\t\t\t\t\t\t\\\n+  \"%{!dynamiclib: \\\n+     %{bundle_loader*:-Xlinker -bundle_loader -Xlinker %*} \\\n+       %<bundle_loader* \\\n+     %{client_name*:-Xlinker -client_name -Xlinker %*} \\\n+       %<client_name* \\\n+     %{compatibility_version*: %<compatibility_version* \\\n+       %e-compatibility_version only allowed with -dynamiclib} \\\n+     %{current_version*: %<current_version* \\\n+       %e-current_version only allowed with -dynamiclib} \\\n+     %{install_name*: %<install_name* \\\n+       %e-install_name only allowed with -dynamiclib} \\\n+     %{keep_private_externs:-Xlinker -keep_private_externs} \\\n+       %<keep_private_externs \\\n+     %{private_bundle:-Xlinker -private_bundle} \\\n+       %<private_bundle \\\n+    }\",\t\t\t\t\t\t\t\t\t\\\n+  \"%{all_load:-Xlinker -all_load} %<all_load\",\t\t\t\t\\\n+  \"%{arch_errors_fatal:-Xlinker -arch_errors_fatal} \\\n+    %<arch_errors_fatal\",\t\t\t\t\t\t\\\n+  \"%{bind_at_load:-Xlinker -bind_at_load} %<bind_at_load\",\t\t\\\n+  \"%{bundle:%{!dynamiclib:-Xlinker -bundle; \\\n+              :%e-bundle not allowed with -dynamiclib}}\",\t\\\n+  \"%{dead_strip:-Xlinker -dead_strip} %<dead_strip\",\t\t\t\\\n+  \"%{dylib_file*:-Xlinker -dylib_file -Xlinker %*} %<dylib_file*\",\t\\\n+  \"%{dylinker:-Xlinker -dylinker} %<dylinker\",\t\t\t\t\\\n+  \"%{dylinker_install_name*:-Xlinker -dylinker_install_name -Xlinker %*}\\\n+    %<dylinker_install_name*\",\t\t\t\t\t\t\\\n+  \"%{exported_symbols_list*:-Xlinker -exported_symbols_list -Xlinker %*}\\\n+    %<exported_symbols_list\",\t\t\t\t\t\t\\\n+  \"%{findirect-virtual-calls: -fapple-kext} %<findirect-virtual-calls\", \\\n+  \"%{fterminated-vtables: -fapple-kext} %<fterminated-vtables\",\t\t\\\n+  \"%{fapple-kext|mkernel:-static}\",\t\t\t\t\t\\\n+  \"%{filelist*:-Xlinker -filelist -Xlinker %*} %<filelist*\",\t\t\\\n+  \"%{flat_namespace:-Xlinker -flat_namespace} %<flat_namespace\",\t\\\n+  \"%{force_cpusubtype_ALL:-Xassembler -force_cpusubtype_ALL} \",\t\t\\\n+  \"%{force_flat_namespace: \\\n+     %{!dynamiclib:-Xlinker -force_flat_namespace; \\\n+       :%e-force_flat_namespace not allowed with -dynamiclib}} \\\n+    %<force_flat_namespace\",\t\t\t\t\t\t\\\n+  \"%{framework*:-Xlinker -framework -Xlinker %*} %<framework*\",\t\t\\\n+  \"%{gfull:-g -fno-eliminate-unused-debug-symbols} %<gfull\",\t\t\\\n+  \"%{gused:-g -feliminate-unused-debug-symbols} %<gused\",\t\t\\\n+  \"%{gsplit-dwarf:%ngsplit-dwarf is not supported on this platform} \\\n+    %<gsplit-dwarf\",\t\t\t\t\t\t\t\\\n+  \"%{headerpad_max_install_names:-Xlinker -headerpad_max_install_names}\\\n+    %<headerpad_max_install_names\",\t\t\t\t\t\\\n+  \"%{image_base*:-Xlinker -image_base -Xlinker %*} %<image_base*\",\t\\\n+  \"%{init*:-Xlinker -init -Xlinker %*} %<init*\",\t\t\t\\\n+  \"%{multi_module:-Xlinker -multi_module} %<multi_module\",\t\t\\\n+  \"%{multiply_defined*:-Xlinker -multiply_defined -Xlinker %*; \\\n+     :%{shared-libgcc: \\\n+       %:version-compare(< 10.5 asm_macosx_version_min= -Xlinker) \\\n+       %:version-compare(< 10.5 asm_macosx_version_min= -multiply_defined) \\\n+       %:version-compare(< 10.5 asm_macosx_version_min= -Xlinker) \\\n+       %:version-compare(< 10.5 asm_macosx_version_min= suppress)}} \\\n+     %<multiply_defined*\",\t\t\t\t\t\t\\\n+  \"%{multiplydefinedunused*:\\\n+     -Xlinker -multiply_defined_unused -Xlinker %*} \\\n+     %<multiplydefinedunused* \",\t\t\t\t\t\\\n+  \"%{no_dead_strip_inits_and_terms:\\\n+     -Xlinker -no_dead_strip_inits_and_terms} \\\n+     %<no_dead_strip_inits_and_terms\",\t\t\t\t\t\\\n+  \"%{nofixprebinding:-Xlinker -nofixprebinding} %<nofixprebinding\",\t\\\n+  \"%{nomultidefs:-Xlinker -nomultidefs} %<nomultidefs\",\t\t\t\\\n+  \"%{pagezero_size*:-Xlinker -pagezero_size -Xlinker %*} \\\n+    %<pagezero_size\",\t\t\t\t\t\t\t\\\n+  \"%{prebind:-Xlinker -prebind} %<prebind\",\t\t\t\t\\\n+  \"%{noprebind:-Xlinker -noprebind} %<noprebind\",\t\t\t\\\n+  \"%{prebind_all_twolevel_modules:\\\n+     -Xlinker -prebind_all_twolevel_modules} \\\n+     %<prebind_all_twolevel_modules\",\t\t\t\t\t\\\n+  \"%{preload:-Xlinker -preload} %<preload\",\t\t\t\t\\\n+  \"%{read_only_relocs*:-Xlinker -read_only_relocs -Xlinker %*} \\\n+     %<read_only_relocs*\",\t\t\t\t\t\t\\\n+  \"%{rpath*: -Xlinker -rpath -Xlinker %*}\",\t\t\t\t\\\n+  \"%{seg_addr_table_filename*: \\\n+     -Xlinker -seg_addr_table_filename -Xlinker %*} \\\n+     %<seg_addr_table_filename*\",\t\t\t\t\t\\\n+  \"%{seg_addr_table*:-Xlinker -seg_addr_table -Xlinker %*} \\\n+     %<seg_addr_table*\",\t\t\t\t\t\t\\\n+  \"%{seg1addr*:-Xlinker -image_base -Xlinker %*} %<seg1addr*\",\t\t\\\n+  \"%{seglinkedit:-Xlinker -seglinkedit} %<seglinkedit\",\t\t\t\\\n+  \"%{noseglinkedit:-Xlinker -noseglinkedit} %<noseglinkedit\",\t\t\\\n+  \"%{segs_read_only_addr*:-Xlinker -segs_read_only_addr -Xlinker %*} \\\n+    %<segs_read_only_addr*\",\t\t\t\t\t\t\\\n+  \"%{segs_read_write_addr*:-Xlinker -segs_read_write_addr -Xlinker %*} \\\n+    %<segs_read_write_addr*\",\t\t\t\t\t\t\\\n+  \"%{single_module:-Xlinker -single_module} %<single_module\",\t\t\\\n+  \"%{sub_library*:-Xlinker -sub_library -Xlinker %*} %<sub_library*\",\t\\\n+  \"%{sub_umbrella*:-Xlinker -sub_umbrella -Xlinker %*} %<sub_umbrella*\",\\\n+  \"%{twolevel_namespace:-Xlinker -twolevel_namespace} \\\n+     %<twolevel_namespace\",\t\t\t\t\t\t\\\n+  \"%{twolevel_namespace_hints:-Xlinker -twolevel_namespace_hints} \\\n+     %<twolevel_namespace_hints\",\t\t\t\t\t\\\n+  \"%{umbrella*:-Xlinker -umbrella -Xlinker %*} %<umbrella*\",\t\t\\\n+  \"%{undefined*:-Xlinker -undefined -Xlinker %*} %<undefined*\",\t\t\\\n+  \"%{unexported_symbols_list*:\\\n+     -Xlinker -unexported_symbols_list -Xlinker %*} \\\n+     %<unexported_symbols_list*\",\t\t\t\t\t\\\n+  \"%{!weak_reference_mismatches*:\\\n+     %:version-compare(< 10.5 asm_macosx_version_min= -Xlinker) \\\n+ %:version-compare(< 10.5 asm_macosx_version_min= -weak_reference_mismatches) \\\n+     %:version-compare(< 10.5 asm_macosx_version_min= -Xlinker) \\\n+     %:version-compare(< 10.5 asm_macosx_version_min= non-weak)}\",\t\\\n+  \"%{weak_reference_mismatches*:\\\n+    -Xlinker -weak_reference_mismatches -Xlinker %*} \\\n+    %<weak_reference_mismatches*\",\t\t\t\t\t\\\n+  \"%{whyload:-Xlinker -whyload} %<whyload\",\t\t\t\t\\\n+  \"%{whatsloaded:-Xlinker -whatsloaded} %<whatsloaded\",\t\t\t\\\n+  \"%{w:-Xlinker -w}\",\t\t\t\t\t\t\t\\\n+  \"%<y*\",\t\t\t\t\t\t\t\t\\\n+  \"%<Mach \"\n \n #if LD64_HAS_EXPORT_DYNAMIC\n #define DARWIN_RDYNAMIC \"%{rdynamic:-export_dynamic}\"\n@@ -157,9 +296,7 @@ extern GTY(()) int darwin_ms_struct;\n    %:version-compare(>= 10.7 mmacosx-version-min= -no_pie) }\"\n \n #define DARWIN_CC1_SPEC\t\t\t\t\t\t\t\\\n-  \"%{findirect-virtual-calls: -fapple-kext} %<findirect-virtual-calls \" \\\n-  \"%{fterminated-vtables: -fapple-kext} %<fterminated-vtables \"\t\t\\\n-  \"%<filelist* %<framework*\"\n+  \"%<dynamic %<dynamiclib %<force_cpusubtype_ALL \"\n \n #define SUBSUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n@@ -184,7 +321,7 @@ extern GTY(()) int darwin_ms_struct;\n \n #undef\tCPP_SPEC\n #define CPP_SPEC \"%{static:%{!dynamic:-D__STATIC__}}%{!static:-D__DYNAMIC__}\" \\\n-\t\" %{pthread:-D_REENTRANT}\"\n+\t\" %{pthread:-D_REENTRANT} \"\n \n /* This is a fix for PR41260 by passing -no_compact_unwind on darwin10 and\n    later until the assembler, linker and libunwind are able to deal with the\n@@ -274,101 +411,38 @@ extern GTY(()) int darwin_ms_struct;\n #define HAVE_LD_SYSROOT 1\n /* It seems the only (working) way to get a space after %R is to append a\n    dangling '/'.  */\n-#define SYSROOT_SPEC \"%{!isysroot*:-syslibroot %R/ }\"\n+#define SYSROOT_SPEC \"%{!isysroot*:-syslibroot %R/ } \"\n \n /* Do the same as clang, for now, and insert the sysroot for ld when an\n    isysroot is specified.  */\n-#define LINK_SYSROOT_SPEC \"%{isysroot*:-syslibroot %*}\"\n+#define LINK_SYSROOT_SPEC \"%{isysroot*:-syslibroot %*} \"\n \n /* Suppress the addition of extra prefix paths when a sysroot is in use.  */\n #define STANDARD_STARTFILE_PREFIX_1 \"\"\n #define STANDARD_STARTFILE_PREFIX_2 \"\"\n \n-/* Please keep the random linker options in alphabetical order (modulo\n-   'Z' and 'no' prefixes). Note that options taking arguments may appear\n-   multiple times on a command line with different arguments each time,\n-   so put a * after their names so all of them get passed.  */\n+\n+/* Please keep the random linker options in alphabetical order.\n+   Note that options taking arguments may appear multiple times on a command\n+   line with different arguments each time, so put a * after their names so\n+   all of them get passed.  */\n #define LINK_SPEC  \\\n-  \"%{static}%{!static:-dynamic} \\\n+  \"%{static}%{!static:%{!dynamic:-dynamic}} \\\n    %:remove-outfile(-ldl) \\\n    %:remove-outfile(-lm) \\\n    %:remove-outfile(-lpthread) \\\n    %{fgnu-runtime: %{static|static-libgcc: \\\n                      %:replace-outfile(-lobjc libobjc-gnu.a%s); \\\n-                    :%:replace-outfile(-lobjc -lobjc-gnu ) } }\\\n+                    :%:replace-outfile(-lobjc -lobjc-gnu )}}\\\n    %{static|static-libgcc|static-libgfortran:%:replace-outfile(-lgfortran libgfortran.a%s)}\\\n    %{static|static-libgcc|static-libstdc++|static-libgfortran:%:replace-outfile(-lgomp libgomp.a%s)}\\\n    %{static|static-libgcc|static-libstdc++:%:replace-outfile(-lstdc++ libstdc++.a%s)}\\\n-   %{!Zdynamiclib: \\\n-     %{Zforce_cpusubtype_ALL:-arch %(darwin_arch) -force_cpusubtype_ALL} \\\n-     %{!Zforce_cpusubtype_ALL:-arch %(darwin_subarch)} \\\n-     %{Zbundle:-bundle} \\\n-     %{Zbundle_loader*:-bundle_loader %*} \\\n-     %{client_name*} \\\n-     %{compatibility_version*:%e-compatibility_version only allowed with -dynamiclib\\\n-} \\\n-     %{current_version*:%e-current_version only allowed with -dynamiclib} \\\n-     %{Zforce_flat_namespace:-force_flat_namespace} \\\n-     %{Zinstall_name*:%e-install_name only allowed with -dynamiclib} \\\n-     %{keep_private_externs} \\\n-     %{private_bundle} \\\n-    } \\\n-   %{Zdynamiclib: -dylib \\\n-     %{Zbundle:%e-bundle not allowed with -dynamiclib} \\\n-     %{Zbundle_loader*:%e-bundle_loader not allowed with -dynamiclib} \\\n-     %{client_name*:%e-client_name not allowed with -dynamiclib} \\\n-     %{compatibility_version*:-dylib_compatibility_version %*} \\\n-     %{current_version*:-dylib_current_version %*} \\\n-     %{Zforce_cpusubtype_ALL:-arch %(darwin_arch)} \\\n-     %{!Zforce_cpusubtype_ALL: -arch %(darwin_subarch)} \\\n-     %{Zforce_flat_namespace:%e-force_flat_namespace not allowed with -dynamiclib} \\\n-     %{Zinstall_name*:-dylib_install_name %*} \\\n-     %{keep_private_externs:%e-keep_private_externs not allowed with -dynamiclib} \\\n-     %{private_bundle:%e-private_bundle not allowed with -dynamiclib} \\\n-    } \\\n-   %{Zall_load:-all_load} \\\n-   %{Zallowable_client*:-allowable_client %*} \\\n-   %{Zbind_at_load:-bind_at_load} \\\n-   %{Zarch_errors_fatal:-arch_errors_fatal} \\\n-   %{Zdead_strip:-dead_strip} \\\n-   %{Zno_dead_strip_inits_and_terms:-no_dead_strip_inits_and_terms} \\\n-   %{Zdylib_file*:-dylib_file %*} \\\n-   %{Zdynamic:-dynamic}\\\n-   %{Zexported_symbols_list*:-exported_symbols_list %*} \\\n-   %{Zflat_namespace:-flat_namespace} \\\n-   %{headerpad_max_install_names} \\\n-   %{Zimage_base*:-image_base %*} \\\n-   %{Zinit*:-init %*} \\\n-   %{mmacosx-version-min=*:-macosx_version_min %*} \\\n-   %{nomultidefs} \\\n-   %{Zmulti_module:-multi_module} %{Zsingle_module:-single_module} \\\n-   %{Zmultiply_defined*:-multiply_defined %*} \\\n-   %{!Zmultiply_defined*:%{shared-libgcc: \\\n-     %:version-compare(< 10.5 mmacosx-version-min= -multiply_defined) \\\n-     %:version-compare(< 10.5 mmacosx-version-min= suppress)}} \\\n-   %{Zmultiplydefinedunused*:-multiply_defined_unused %*} \\\n-   %{prebind} %{noprebind} %{nofixprebinding} %{prebind_all_twolevel_modules} \\\n-   %{read_only_relocs} \\\n-   %{sectcreate*} %{sectorder*} %{seg1addr*} %{segprot*} \\\n-   %{Zsegaddr*:-segaddr %*} \\\n-   %{Zsegs_read_only_addr*:-segs_read_only_addr %*} \\\n-   %{Zsegs_read_write_addr*:-segs_read_write_addr %*} \\\n-   %{Zseg_addr_table*: -seg_addr_table %*} \\\n-   %{Zfn_seg_addr_table_filename*:-seg_addr_table_filename %*} \\\n-   %{sub_library*} %{sub_umbrella*} \\\n-   \" LINK_SYSROOT_SPEC \" \\\n-   %{twolevel_namespace} %{twolevel_namespace_hints} \\\n-   %{Zumbrella*: -umbrella %*} \\\n-   %{undefined*} \\\n-   %{Zunexported_symbols_list*:-unexported_symbols_list %*} \\\n-   %{Zweak_reference_mismatches*:-weak_reference_mismatches %*} \\\n-   %{!Zweak_reference_mismatches*:-weak_reference_mismatches non-weak} \\\n-   %{w} \\\n-   %{pagezero_size*} %{segs_read_*} %{seglinkedit} %{noseglinkedit}  \\\n-   %{sectalign*} %{sectobjectsymbols*} %{segcreate*} %{whyload} \\\n-   %{whatsloaded} %{dylinker_install_name*} \\\n-   %{dylinker} \"\n-\n+   %{force_cpusubtype_ALL:-arch %(darwin_arch)} \\\n+   %{!force_cpusubtype_ALL:-arch %(darwin_subarch)} \"\\\n+   LINK_SYSROOT_SPEC \\\n+  \"%{mmacosx-version-min=*:-macosx_version_min %*} \\\n+   %{sectalign*} %{sectcreate*} %{sectobjectsymbols*}  %{sectorder*} \\\n+   %{segaddr*} %{segcreate*} %{segprot*} \"\n \n /* Machine dependent libraries.  */\n \n@@ -410,9 +484,9 @@ extern GTY(()) int darwin_ms_struct;\n \n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC\t\t\t\t\t\t\t    \\\n-\"%{Zdynamiclib: %(darwin_dylib1) %{fgnu-tm: -lcrttms.o}}\t\t    \\\n- %{!Zdynamiclib:%{Zbundle:%(darwin_bundle1)}\t\t\t\t    \\\n-     %{!Zbundle:%{pg:%{static:-lgcrt0.o}\t\t\t\t    \\\n+\"%{dynamiclib: %(darwin_dylib1) %{fgnu-tm: -lcrttms.o}}\t\t\t   \\\n+ %{!dynamiclib:%{bundle:%(darwin_bundle1)}\t\t\t\t    \\\n+     %{!bundle:%{pg:%{static:-lgcrt0.o}\t\t\t\t\t    \\\n                      %{!static:%{object:-lgcrt0.o}\t\t\t    \\\n                                %{!object:%{preload:-lgcrt0.o}\t\t    \\\n                                  %{!preload:-lgcrt1.o                       \\\n@@ -423,7 +497,7 @@ extern GTY(()) int darwin_ms_struct;\n                                 %{!object:%{preload:-lcrt0.o}\t\t    \\\n                                   %{!preload: %(darwin_crt1)\t\t    \\\n \t\t\t\t\t      %(darwin_crt2)}}}}}}\t    \\\n- %(darwin_crt3)\"\n+ %(darwin_crt3) %<dynamiclib \"\n \n /* We want a destructor last in the list.  */\n #define TM_DESTRUCTOR \"%{fgnu-tm: -lcrttme.o}\"\n@@ -463,24 +537,25 @@ extern GTY(()) int darwin_ms_struct;\n #ifdef HAVE_AS_MMACOSX_VERSION_MIN_OPTION\n /* Emit macosx version (but only major).  */\n #define ASM_MMACOSX_VERSION_MIN_SPEC \\\n-  \" %{asm_macosx_version_min=*: -mmacosx-version-min=%*} %<asm_macosx_version_min=*\"\n+\"%{asm_macosx_version_min=*: -mmacosx-version-min=%* } \\\n+   %<asm_macosx_version_min=* \"\n #else\n-#define ASM_MMACOSX_VERSION_MIN_SPEC \" %<asm_macosx_version_min=*\"\n+#define ASM_MMACOSX_VERSION_MIN_SPEC \" %<asm_macosx_version_min=* \"\n #endif\n \n-/* When we detect that we're cctools or llvm as, we need to insert the right\n-   additional options.  */\n #if HAVE_GNU_AS\n+/* The options are added in gcc.c for this case.  */\n #define ASM_OPTIONS \"\"\n #else\n+/* When we detect that we're cctools or llvm as, we need to insert the right\n+   additional options.  Actually, currently these are the same as GAS.  */\n #define ASM_OPTIONS \"%{v} %{w:-W} %{I*}\"\n #endif\n \n /* Default Darwin ASM_SPEC, very simple. */\n-#define ASM_SPEC \"-arch %(darwin_arch) \\\n-  \" ASM_OPTIONS \" \\\n-  %{Zforce_cpusubtype_ALL:-force_cpusubtype_ALL} \\\n-  %{static}\" ASM_MMACOSX_VERSION_MIN_SPEC\n+#define ASM_SPEC \\\n+\"%{static} -arch %(darwin_arch) \" \\\n+ASM_OPTIONS ASM_MMACOSX_VERSION_MIN_SPEC\n \n #ifdef HAVE_AS_STABS_DIRECTIVE\n /* We only pass a debug option to the assembler if that supports stabs, since\n@@ -494,7 +569,8 @@ extern GTY(()) int darwin_ms_struct;\n #define ASM_DEBUG_OPTION_SPEC\t\"\"\n \n #define ASM_FINAL_SPEC \\\n-  \"%{gsplit-dwarf:%ngsplit-dwarf is not supported on this platform} %<gsplit-dwarf\"\n+  \"%{gsplit-dwarf:%ngsplit-dwarf is not supported on this platform} \\\n+     %<gsplit-dwarf\"\n \n /* We now require C++11 to bootstrap and newer tools than those based on\n    stabs, so require DWARF-2, even if stabs is supported by the assembler.  */"}, {"sha": "d1d1f816912b292c5e7461ae4042ef47fbd6b033", "filename": "gcc/config/darwin.opt", "status": "modified", "additions": 31, "deletions": 124, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/353cb291a486af3be93dd9320dde9e38b542a1bd/gcc%2Fconfig%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/353cb291a486af3be93dd9320dde9e38b542a1bd/gcc%2Fconfig%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.opt?ref=353cb291a486af3be93dd9320dde9e38b542a1bd", "patch": "@@ -90,35 +90,35 @@ Target RejectNegative Joined Separate Var(darwin_target_linker) Init(LD64_VERSIO\n ; Driver options.\n \n all_load\n-Driver RejectNegative Alias(Zall_load)\n+Driver RejectNegative\n Load all members of archive libraries, rather than only those that satisfy undefined symbols.\n \n allowable_client\n-Driver RejectNegative Separate Alias(Zallowable_client)\n+Driver RejectNegative Separate\n -allowable_client <name>\tThe output dylib is private to the client <name>.\n \n arch\n Driver RejectNegative Separate\n -arch <name>\tGenerate output for architecture <name>.\n \n arch_errors_fatal\n-Driver RejectNegative Alias(Zarch_errors_fatal)\n+Driver RejectNegative\n Mismatches between file architecture and one specified by \\\"-arch\\\" are errors instead of warnings.\n \n asm_macosx_version_min=\n Driver RejectNegative Joined\n The earliest macOS version on which this program will run (formatted for the assembler).\n \n bind_at_load\n-Driver RejectNegative Alias(Zbind_at_load)\n+Driver RejectNegative\n Generate an output executable that binds symbols on load, rather than lazily.\n \n bundle\n-Driver RejectNegative Alias(Zbundle)\n+Driver RejectNegative\n Generate a Mach-O bundle (file type MH_BUNDLE).\n \n bundle_loader\n-Driver RejectNegative Separate Alias(Zbundle_loader)\n+Driver RejectNegative Separate\n -bundle_loader <executable>\tTreat <executable> (that will be loading this bundle) as if it was one of the dynamic libraries the bundle is linked against for symbol resolution.\n \n client_name\n@@ -134,11 +134,12 @@ Driver RejectNegative Separate\n -current_version <number>\tSet the current version for the library to <number>.\n \n dead_strip\n-Driver RejectNegative Alias(Zdead_strip)\n+Driver RejectNegative\n Remove code and data that is unreachable from any exported symbol (including the entry point).\n \n dylib_file\n-Driver Separate Alias(Zdylib_file)\n+Driver RejectNegative Separate\n+-dylib_file install_name:file_name\tThis allows linking of a dylib with \\\"install_name\\\" but to be found in a different install position \\\"file_name\\\"\n \n dylinker\n Driver RejectNegative\n@@ -149,15 +150,15 @@ Driver RejectNegative Separate\n -dylinker_install_name <path>\tOnly used for building dyld.\n \n dynamic\n-Driver RejectNegative Alias(Zdynamic)\n+Driver RejectNegative\n The default (and opposite of -static), implied by user mode executables, shared libraries and bundles.\n \n dynamiclib\n-Driver RejectNegative Alias(Zdynamiclib)\n+Driver RejectNegative\n Produce a Mach-O shared library (file type MH_DYLIB), synonym for \\\"-shared\\\".\n \n exported_symbols_list\n-Driver RejectNegative Separate Alias(Zexported_symbols_list)\n+Driver RejectNegative Separate\n -exported_symbols_list <filename>\tExport global symbols in <filename> in linked output file; any symbols not mentioned will be treated as \\\"hidden\\\".\n \n filelist\n@@ -169,15 +170,15 @@ Driver RejectNegative\n Used for generating code for some older kernel revisions.\n \n flat_namespace\n-Driver RejectNegative Alias(Zflat_namespace)\n+Driver RejectNegative\n Ignore the normal two-level namespace; resolve symbols in command line order and do not record which library provided the resolved symbol.\n \n force_cpusubtype_ALL\n-Driver RejectNegative Alias(Zforce_cpusubtype_ALL)\n+Driver RejectNegative\n For the assembler (and linker) permit any architecture sub-variant to be used without error.\n \n force_flat_namespace\n-Driver RejectNegative Alias(Zforce_flat_namespace)\n+Driver RejectNegative\n Set the output object such that, on loading, dyld will ignore any two-level namespace information and resolve symbols in the discovery order for loaded libs.\n \n framework\n@@ -201,35 +202,35 @@ Driver RejectNegative\n Automatically adds space for longer path names in load commands (up to MAXPATHLEN).\n \n image_base\n-Driver RejectNegative Separate Alias(Zimage_base)\n+Driver RejectNegative Separate\n -image_base <address>\tSpecify <address> as the base address for a dylib or bundle.\n \n init\n-Driver RejectNegative Separate Alias(Zinit)\n+Driver RejectNegative Separate\n -init <symbol_name>\tThe symbol <symbol_name> will be used as the first initialiser for a dylib.\n \n install_name\n-Driver RejectNegative Separate Alias(Zinstall_name)\n+Driver RejectNegative Separate\n -install_name <name>\tSet the install name for a dylib.\n \n keep_private_externs\n Driver RejectNegative\n Usually \\\"private extern\\\" (hidden) symbols are made local when linking, this command suppresses that such that they remain exported.\n \n multi_module\n-Driver RejectNegative Alias(Zmulti_module)\n+Driver RejectNegative\n (Obsolete after 10.4) Multi modules are ignored at runtime since macOS 10.4.\n \n multiply_defined\n-Driver RejectNegative Separate Alias(Zmultiply_defined)\n+Driver RejectNegative Separate\n (Obsolete after 10.4) -multiply_defined <treatment>\tProvided a mechanism for warning about symbols defined in multiple dylibs.\n \n multiply_defined_unused\n-Driver RejectNegative Separate Alias(Zmultiplydefinedunused)\n+Driver RejectNegative Separate\n (Obsolete after 10.4) -multiply_defined_unused <treatment>\tProvided a mechanism for warning about symbols defined in the current executable also being defined in linked dylibs.\n \n no_dead_strip_inits_and_terms\n-Driver RejectNegative Alias(Zno_dead_strip_inits_and_terms)\n+Driver RejectNegative\n (Obsolete) Current linkers never dead-strip these items, so the option is not needed.\n \n nofixprebinding\n@@ -299,20 +300,20 @@ Driver RejectNegative Separate Args(3)\n (Obsolete) -sectorder <segname> <sectname> <orderfile>\tReplaced by a more general option \\\"-order_file\\\".\n \n seg_addr_table\n-Driver RejectNegative Separate Alias(Zseg_addr_table)\n+Driver RejectNegative Separate\n -seg_addr_table <file>\tSpecify the base addresses for dynamic libraries; <file> contains a line for each library.\n \n ; This is only usable by the ld_classic linker.\n seg_addr_table_filename\n-Driver RejectNegative Separate Alias(Zfn_seg_addr_table_filename)\n+Driver RejectNegative Separate\n (Obsolete, ld_classic only) -seg_addr_table_filename <path>.\n \n seg1addr\n Driver RejectNegative Separate\n Synonym for \\\"image_base\\\".\n \n segaddr\n-Driver RejectNegative Separate Args(2) Alias(Zsegaddr)\n+Driver RejectNegative Separate Args(2)\n -segaddr <name> <address>\tSet the base address of segment <name> to <address> which must be aligned to a page boundary (currently 4kb).\n \n ; This is only usable by the ld_classic linker.\n@@ -329,15 +330,15 @@ Driver RejectNegative Separate Args(3)\n -segprot <segname> <max_prot> <init_prot>\tThe virtual memory protections for segment <segname> have maximum and initial values <max_prot> and <init_prot> respectively.  The specified values may contain \\\"r\\\", \\\"w\\\", \\\"x\\\" or \\\"-\\\" the latter meaning \\\"no access\\\".\n \n segs_read_only_addr\n-Driver RejectNegative Separate Alias(Zsegs_read_only_addr)\n+Driver RejectNegative Separate\n -segs_read_only_addr <address>\tSpecify that <address> is the base address of the read-only segments of a dylib.\n \n segs_read_write_addr\n-Driver RejectNegative Separate Alias(Zsegs_read_write_addr)\n+Driver RejectNegative Separate\n -segs_read_write_addr <address>\tSpecify that <address> is the base address address of the read-write segments of a dylib.\n \n single_module\n-Driver RejectNegative Alias(Zsingle_module)\n+Driver RejectNegative\n (Obsolete)\tThis is the default.\n \n sub_library\n@@ -357,19 +358,19 @@ Driver RejectNegative\n Add extra information to the executable that can speed up dynamic loading (provided that dependent libraries are unchanged).\n \n umbrella\n-Driver RejectNegative Separate Alias(Zumbrella)\n+Driver RejectNegative\n -umbrella <framework>\tThe specified framework will be re-exported.\n \n undefined\n Driver RejectNegative Separate\n -undefined <treatment>\tSpecify the handling for undefined symbols (default is error).\n \n unexported_symbols_list\n-Driver RejectNegative Separate Alias(Zunexported_symbols_list)\n+Driver RejectNegative Separate\n -unexported_symbols_list <filename>\tDo not export the global symbols listed in <filename>.\n \n weak_reference_mismatches\n-Driver RejectNegative Separate Alias(Zweak_reference_mismatches)\n+Driver RejectNegative Separate\n -weak_reference_mismatches <treatment>\tSpecifies what to do if a symbol import conflicts between file (weak in one and not in another) the default is to treat the symbol as non-weak.\n \n whatsloaded\n@@ -391,97 +392,3 @@ Driver RejectNegative Joined\n Mach\n Driver RejectNegative\n (Obsolete and unhandled by ld64, ignored)\tld should produce an executable (only handled by ld_classic).\n-\n-;; These are not \"real\" options, but placeholders used to hide the real options\n-;; from generic options processing... FIXME: they can be eliminated now.\n-\n-Zall_load\n-Driver\n-\n-Zallowable_client\n-Driver Separate\n-\n-Zarch_errors_fatal\n-Driver\n-\n-Zbind_at_load\n-Driver\n-\n-Zbundle\n-Driver\n-\n-Zbundle_loader\n-Driver Separate\n-\n-Zdead_strip\n-Driver\n-\n-Zdylib_file\n-Driver Separate\n-\n-Zdynamic\n-Driver\n-\n-Zdynamiclib\n-Driver\n-\n-Zexported_symbols_list\n-Driver Separate\n-\n-Zfn_seg_addr_table_filename\n-Driver Separate\n-\n-Zflat_namespace\n-Driver\n-\n-Zforce_cpusubtype_ALL\n-Driver\n-\n-Zforce_flat_namespace\n-Driver\n-\n-Zimage_base\n-Driver Separate\n-\n-Zinit\n-Driver Separate\n-\n-Zinstall_name\n-Driver Separate\n-\n-Zmulti_module\n-Driver\n-\n-Zmultiply_defined\n-Driver Separate\n-\n-Zmultiplydefinedunused\n-Driver Separate\n-\n-Zno_dead_strip_inits_and_terms\n-Driver\n-\n-Zseg_addr_table\n-Driver Separate\n-\n-Zsegaddr\n-Driver Separate Args(2)\n-\n-Zsegs_read_only_addr\n-Driver Separate\n-\n-Zsegs_read_write_addr\n-Driver Separate\n-\n-Zsingle_module\n-Driver\n-\n-Zumbrella\n-Driver Separate\n-\n-Zunexported_symbols_list\n-Driver Separate\n-\n-Zweak_reference_mismatches\n-Driver Separate\n-"}, {"sha": "741f29aa96229d86213c09343bbd5dd7a6467580", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/353cb291a486af3be93dd9320dde9e38b542a1bd/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/353cb291a486af3be93dd9320dde9e38b542a1bd/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=353cb291a486af3be93dd9320dde9e38b542a1bd", "patch": "@@ -128,15 +128,16 @@ along with GCC; see the file COPYING3.  If not see\n /* This is a workaround for a tool bug: see PR100340.  */\n \n #ifdef HAVE_AS_MLLVM_X86_PAD_FOR_ALIGN\n-#define EXTRA_ASM_OPTS \" -mllvm -x86-pad-for-align=false\"\n+#define EXTRA_ASM_OPTS \" -mllvm -x86-pad-for-align=false \"\n #else\n #define EXTRA_ASM_OPTS \"\"\n #endif\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"-arch %(darwin_arch) \\\n-  \" ASM_OPTIONS \" -force_cpusubtype_ALL \\\n-  %{static}\" ASM_MMACOSX_VERSION_MIN_SPEC EXTRA_ASM_OPTS\n+#define ASM_SPEC \\\n+\"%{static} -arch %(darwin_arch) \" \\\n+ ASM_OPTIONS ASM_MMACOSX_VERSION_MIN_SPEC EXTRA_ASM_OPTS \\\n+\"%{!force_cpusubtype_ALL:-force_cpusubtype_ALL} \"\n \n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC \\"}]}