{"sha": "8179c2f253c4bd249f7c474628b29b1d73e9cd9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE3OWMyZjI1M2M0YmQyNDlmN2M0NzQ2MjhiMjliMWQ3M2U5Y2Q5Zg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2008-09-23T21:27:17Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2008-09-23T21:27:17Z"}, "message": "target-supports.exp (check_effective_target_pow10): New.\n\n\t* lib/target-supports.exp (check_effective_target_pow10): New.\n\t* g++.dg/cdce3.C: Set GNU_EXTENSION if pow10.\n\nFrom-SVN: r140618", "tree": {"sha": "ce1628eeb4dabef0b184c01d3c37aa9c252b5303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce1628eeb4dabef0b184c01d3c37aa9c252b5303"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8179c2f253c4bd249f7c474628b29b1d73e9cd9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8179c2f253c4bd249f7c474628b29b1d73e9cd9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8179c2f253c4bd249f7c474628b29b1d73e9cd9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8179c2f253c4bd249f7c474628b29b1d73e9cd9f/comments", "author": null, "committer": null, "parents": [{"sha": "b41310e29d14fccd0e8eecf34bf636d7c02ef4c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b41310e29d14fccd0e8eecf34bf636d7c02ef4c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b41310e29d14fccd0e8eecf34bf636d7c02ef4c9"}], "stats": {"total": 91, "additions": 55, "deletions": 36}, "files": [{"sha": "411cf0c56a17d0a4a95490520fa027662ff8a321", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8179c2f253c4bd249f7c474628b29b1d73e9cd9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8179c2f253c4bd249f7c474628b29b1d73e9cd9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8179c2f253c4bd249f7c474628b29b1d73e9cd9f", "patch": "@@ -1,3 +1,8 @@\n+2008-09-23  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_pow10): New.\n+\t* g++.dg/cdce3.C: Set GNU_EXTENSION if pow10.\n+\n 2008-09-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/37533"}, {"sha": "b73ebf812209c6752a163ded08c0d5b874fd5749", "filename": "gcc/testsuite/g++.dg/cdce3.C", "status": "modified", "additions": 37, "deletions": 36, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8179c2f253c4bd249f7c474628b29b1d73e9cd9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcdce3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8179c2f253c4bd249f7c474628b29b1d73e9cd9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcdce3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcdce3.C?ref=8179c2f253c4bd249f7c474628b29b1d73e9cd9f", "patch": "@@ -1,24 +1,25 @@\n /* { dg-do run } */\n /* { dg-require-effective-target c99_runtime } */\n-/* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details -DNO_GNU_EXTENSION -lm\" { target \"*-*-darwin*\" } } */\n-/* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details  -lm\" { target { {! \"*-*-darwin*\" } && large_long_double } } }*/\n-/* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details -DNO_LONG_DOUBLE -lm\" { target {! large_long_double } } } */\n-/* { dg-final { scan-tree-dump  \"cdce3.C:90: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target {! \"*-*-darwin*\" } } } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:91: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target {! \"*-*-darwin*\" } } } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:93: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:94: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:95: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:96: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:97: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:98: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:99: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:100: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:101: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:102: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:103: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:104: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:105: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n-/* { dg-final { scan-tree-dump  \"cdce3.C:106: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } }*/\n+/* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details  -DGNU_EXTENSION -DLARGE_LONG_DOUBLE -lm\" { target { pow10 && large_long_double } } } */\n+/* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details -DLARGE_LONG_DOUBLE -lm\" { target { {! pow10 } && large_long_double } } } */\n+/* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details -DGNU_EXTENSION -lm\" { target {pow10 && {! large_long_double } } } } */\n+/* { dg-options \"-O2 -fmath-errno -fdump-tree-cdce-details -lm\" { target { {! pow10 } && {! large_long_double } } } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:91: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target { pow10 } } } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:92: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" { target { pow10 } } } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:94: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:95: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:96: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:97: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:98: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:99: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:100: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:101: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:102: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:103: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:104: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:105: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:106: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n+/* { dg-final { scan-tree-dump  \"cdce3.C:107: note: function call is shrink-wrapped into error conditions\\.\" \"cdce\" } } */\n /* { dg-final { cleanup-tree-dump \"cdce\" } } */\n #include <stdlib.h>\n #include <math.h>\n@@ -29,8 +30,9 @@\n typedef void (*FP) (int xp);\n #define NI __attribute__((noinline))\n \n-#if defined(NO_LONG_DOUBLE)\n-double result;\n+#if defined(LARGE_LONG_DOUBLE)\n+typedef long double ldouble; \n+ldouble result;\n \n #define DEF_MATH_FUNC(prefix, name) NI void prefix##name##f (int x) \\\n { \\\n@@ -41,10 +43,14 @@ NI void prefix##name (int x) \\\n { \\\n   double yy = name ((double)x); \\\n   STORE_RESULT; \\\n+} \\\n+NI void prefix##name##l (int x) \\\n+{ \\\n+  ldouble yy = name##l ((ldouble)x); \\\n+  STORE_RESULT; \\\n }\n #else\n-typedef long double ldouble; \n-ldouble result;\n+double result;\n \n #define DEF_MATH_FUNC(prefix, name) NI void prefix##name##f (int x) \\\n { \\\n@@ -55,17 +61,12 @@ NI void prefix##name (int x) \\\n { \\\n   double yy = name ((double)x); \\\n   STORE_RESULT; \\\n-} \\\n-NI void prefix##name##l (int x) \\\n-{ \\\n-  ldouble yy = name##l ((ldouble)x); \\\n-  STORE_RESULT; \\\n }\n #endif\n \n #undef STORE_RESULT\n #define STORE_RESULT result = yy\n-#if !defined(NO_GNU_EXTENSION)\n+#if defined(GNU_EXTENSION)\n DEF_MATH_FUNC (m,pow10)\n DEF_MATH_FUNC (m,exp10)\n #endif\n@@ -86,7 +87,7 @@ DEF_MATH_FUNC (m,sqrt)\n \n #undef STORE_RESULT\n #define STORE_RESULT\n-#if !defined(NO_GNU_EXTENSION)\n+#if defined(GNU_EXTENSION)\n DEF_MATH_FUNC (o,pow10)\n DEF_MATH_FUNC (o,exp10)\n #endif\n@@ -105,13 +106,13 @@ DEF_MATH_FUNC (o,log10)\n DEF_MATH_FUNC (o,log1p)\n DEF_MATH_FUNC (o,sqrt)\n \n-#if defined(NO_LONG_DOUBLE)\n-#define INIT_MATH_FUNC(prefix, name, lb, ub) { prefix##name##f, #name \"f\", 0, 0, lb, ub }, \\\n-{ prefix##name, #name, 0, 0, lb, ub },\n-#else\n+#if defined(LARGE_LONG_DOUBLE)\n #define INIT_MATH_FUNC(prefix, name, lb, ub) { prefix##name##f, #name \"f\", 0, 0, lb, ub }, \\\n { prefix##name, #name, 0, 0, lb, ub }, \\\n { prefix##name##l, #name \"l\" , 0, 0, lb, ub }, \n+#else\n+#define INIT_MATH_FUNC(prefix, name, lb, ub) { prefix##name##f, #name \"f\", 0, 0, lb, ub }, \\\n+{ prefix##name, #name, 0, 0, lb, ub },\n #endif\n \n struct MathFuncInfo\n@@ -123,7 +124,7 @@ struct MathFuncInfo\n   bool has_lb;\n   bool has_ub;\n } math_func_arr[] = { \n-#if !defined(NO_GNU_EXTENSION)\n+#if defined(GNU_EXTENSION)\n   INIT_MATH_FUNC (m,pow10, false, true)\n   INIT_MATH_FUNC (m,exp10, false, true)\n #endif\n@@ -145,7 +146,7 @@ struct MathFuncInfo\n \n MathFuncInfo opt_math_func_arr[] = \n {\n-#if !defined(NO_GNU_EXTENSION)\n+#if defined(GNU_EXTENSION)\n   INIT_MATH_FUNC (o,pow10, false, true)\n   INIT_MATH_FUNC (o,exp10, false, true)\n #endif"}, {"sha": "a5e03bf092965dda9a5155fe6ef3b6a0a41341e6", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8179c2f253c4bd249f7c474628b29b1d73e9cd9f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8179c2f253c4bd249f7c474628b29b1d73e9cd9f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=8179c2f253c4bd249f7c474628b29b1d73e9cd9f", "patch": "@@ -2612,3 +2612,16 @@ proc check_effective_target_wchar_t_char32_t_compatible { } {\n         char t[(((__CHAR32_TYPE__) -1) < 0 == ((__WCHAR_TYPE__) -1) < 0) ? 1 : -1];\n     }]\n }\n+\n+# Return 1 if pow10 function exists.\n+\n+proc check_effective_target_pow10 { } {\n+    return [check_runtime pow10 {\n+\t#include <math.h>\n+\tint main () {\n+\tdouble x;\n+\tx = pow10 (1);\n+\treturn 0;\n+\t}\n+    } \"-lm\" ]\n+}"}]}