{"sha": "ddc612a2ba3864c86a0e9c0b30811727096c1772", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRjNjEyYTJiYTM4NjRjODZhMGU5YzBiMzA4MTE3MjcwOTZjMTc3Mg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-06-07T17:52:49Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-07T17:52:49Z"}, "message": "symbol.c (ffesymbol_new_): Remove tests for macro FFECOM_symbolHOOK.\n\n\t* symbol.c (ffesymbol_new_): Remove tests for macro\n\tFFECOM_symbolHOOK.\n\t* symbol.h: Likewise.\n\n\t* storag.c (ffestorag_new): Remove tests for macro\n\tFFECOM_storageHOOK.\n\t* storag.h: Likewise.\n\n\t* lab.c (ffelab_new): Remove tests for macro FFECOM_labelHOOK.\n\t* lab.h: Likewise.\n\n\t* global.c: Remove tests for macro FFECOM_globalHOOK.\n\t* global.h (struct _ffeglobal_): Likewise.\n\n\t* bld.h: Remove tests for macros FFECOM_constantHOOK,\n\tFFECOM_nonterHOOK, FFECOM_globalHOOK, FFECOM_labelHOOK,\n\tFFECOM_storageHOOK, FFECOM_symbolHOOK.\n\tRemove code dependend on FFECOM_itemHOOK.\n\t* bld.c: Likewise.\n\n\t* com.h (FFECOM_constantHOOK): Remove define.\n\t(FFECOM_nonterHOOK): Remove.\n\t(FFECOM_globalHOOK): Remove.\n\t(FFECOM_labelHOOK): Remove.\n\t(FFECOM_storageHOOK): Remove.\n\t(FFECOM_symbolHOOK): Remove.\n\n\t* com.c (ffecom_get_external_identifier_): Remove usage of\n\tFFETARGET_isENFORCED_MAIN_NAME.\n\n\t* bld.c: Remove code dependend on FFEBLD_BLANK_, FFECOM_itemHOOK.\n\t(ffebld_new_accter): Likewise.\n\t(ffebld_new_arrter): Likewise.\n\t(ffebld_new_conter_with_orig): Likewise.\n\t(ffebld_new_item): Likewise.\n\t(ffebld_new_labter): Likewise.\n\t(ffebld_new_labtok): Likewise.\n\t(ffebld_new_none): Likewise.\n\t(ffebld_new_one): Likewise.\n\t(ffebld_new_symter): Likewise.\n\t(ffebld_new_two): Likewise.\n\nFrom-SVN: r67594", "tree": {"sha": "6a89442fb0fe401111161305d9751399ffd21427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a89442fb0fe401111161305d9751399ffd21427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddc612a2ba3864c86a0e9c0b30811727096c1772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc612a2ba3864c86a0e9c0b30811727096c1772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddc612a2ba3864c86a0e9c0b30811727096c1772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc612a2ba3864c86a0e9c0b30811727096c1772/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44de936effb3be77a5a7b25873ed2f8a9229ab9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44de936effb3be77a5a7b25873ed2f8a9229ab9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44de936effb3be77a5a7b25873ed2f8a9229ab9c"}], "stats": {"total": 180, "additions": 57, "deletions": 123}, "files": [{"sha": "920cf967c25798bb16861373e7be7712f5dc18b8", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,3 +1,47 @@\n+2003-06-07  Andreas Jaeger  <aj@suse.de>\n+\n+\t* symbol.c (ffesymbol_new_): Remove tests for macro\n+\tFFECOM_symbolHOOK.\n+\t* symbol.h: Likewise.\n+\n+\t* storag.c (ffestorag_new): Remove tests for macro\n+\tFFECOM_storageHOOK.\n+\t* storag.h: Likewise.\n+\n+\t* lab.c (ffelab_new): Remove tests for macro FFECOM_labelHOOK.\n+\t* lab.h: Likewise.\n+\n+\t* global.c: Remove tests for macro FFECOM_globalHOOK.\n+\t* global.h (struct _ffeglobal_): Likewise.\n+\n+\t* bld.h: Remove tests for macros FFECOM_constantHOOK,\n+\tFFECOM_nonterHOOK, FFECOM_globalHOOK, FFECOM_labelHOOK,\n+\tFFECOM_storageHOOK, FFECOM_symbolHOOK.\n+\tRemove code dependend on FFECOM_itemHOOK.\n+\t* bld.c: Likewise.\n+\n+\t* com.h (FFECOM_constantHOOK): Remove define.\n+\t(FFECOM_nonterHOOK): Remove.\n+\t(FFECOM_globalHOOK): Remove.\n+\t(FFECOM_labelHOOK): Remove.\n+\t(FFECOM_storageHOOK): Remove.\n+\t(FFECOM_symbolHOOK): Remove.\n+\n+\t* com.c (ffecom_get_external_identifier_): Remove usage of\n+\tFFETARGET_isENFORCED_MAIN_NAME.\n+\n+\t* bld.c: Remove code dependend on FFEBLD_BLANK_, FFECOM_itemHOOK.\n+\t(ffebld_new_accter): Likewise.\n+\t(ffebld_new_arrter): Likewise.\n+\t(ffebld_new_conter_with_orig): Likewise.\n+\t(ffebld_new_item): Likewise.\n+\t(ffebld_new_labter): Likewise.\n+\t(ffebld_new_labtok): Likewise.\n+\t(ffebld_new_none): Likewise.\n+\t(ffebld_new_one): Likewise.\n+\t(ffebld_new_symter): Likewise.\n+\t(ffebld_new_two): Likewise.\n+\n Sat Jun  7 12:10:41 2003  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* com.c (ffe_init_options): Update."}, {"sha": "790c730d1c461aa70df4da85aa6a6e514ac763fb", "filename": "gcc/f/bld.c", "status": "modified", "additions": 1, "deletions": 78, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fbld.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fbld.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbld.c?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,5 @@\n /* bld.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -70,16 +70,6 @@ struct _ffebld_pool_stack_ ffebld_pool_stack_;\n \n /* Static objects accessed by functions in this module.\t */\n \n-#if FFEBLD_BLANK_\n-static struct _ffebld_ ffebld_blank_\n-=\n-{\n-  0,\n-  {FFEINFO_basictypeNONE, FFEINFO_kindtypeNONE, 0, FFEINFO_kindNONE,\n-   FFEINFO_whereNONE, FFETARGET_charactersizeNONE},\n-  {NULL, NULL}\n-};\n-#endif\n #if FFETARGET_okCHARACTER1\n static ffebldConstant ffebld_constant_character1_;\n #endif\n@@ -715,9 +705,7 @@ ffebld_constant_new_character1_val (ffetargetCharacter1 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constCHARACTER1;\n   nc->u.character1 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -773,9 +761,7 @@ ffebld_constant_new_complex1_val (ffetargetComplex1 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constCOMPLEX1;\n   nc->u.complex1 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -831,9 +817,7 @@ ffebld_constant_new_complex2_val (ffetargetComplex2 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constCOMPLEX2;\n   nc->u.complex2 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -881,9 +865,7 @@ ffebld_constant_new_hollerith_val (ffetargetHollerith val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constHOLLERITH;\n   nc->u.hollerith = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -938,9 +920,7 @@ ffebld_constant_new_integer1_val (ffetargetInteger1 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constINTEGER1;\n   nc->u.integer1 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -976,9 +956,7 @@ ffebld_constant_new_integer2_val (ffetargetInteger2 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constINTEGER2;\n   nc->u.integer2 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -1014,9 +992,7 @@ ffebld_constant_new_integer3_val (ffetargetInteger3 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constINTEGER3;\n   nc->u.integer3 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -1052,9 +1028,7 @@ ffebld_constant_new_integer4_val (ffetargetInteger4 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constINTEGER4;\n   nc->u.integer4 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -1165,9 +1139,7 @@ ffebld_constant_new_logical1_val (ffetargetLogical1 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constLOGICAL1;\n   nc->u.logical1 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -1203,9 +1175,7 @@ ffebld_constant_new_logical2_val (ffetargetLogical2 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constLOGICAL2;\n   nc->u.logical2 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -1241,9 +1211,7 @@ ffebld_constant_new_logical3_val (ffetargetLogical3 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constLOGICAL3;\n   nc->u.logical3 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -1279,9 +1247,7 @@ ffebld_constant_new_logical4_val (ffetargetLogical4 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constLOGICAL4;\n   nc->u.logical4 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -1335,9 +1301,7 @@ ffebld_constant_new_real1_val (ffetargetReal1 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constREAL1;\n   nc->u.real1 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -1391,9 +1355,7 @@ ffebld_constant_new_real2_val (ffetargetReal2 val)\n   nc->next = c->next;\n   nc->consttype = FFEBLD_constREAL2;\n   nc->u.real2 = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -1557,9 +1519,7 @@ ffebld_constant_new_typeless_val (ffebldConst type, ffetargetTypeless val)\n   nc->next = c->next;\n   nc->consttype = type;\n   nc->u.typeless = val;\n-#ifdef FFECOM_constantHOOK\n   nc->hook = FFECOM_constantNULL;\n-#endif\n   c->next = nc;\n \n   return nc;\n@@ -4231,9 +4191,6 @@ ffebld_new_accter (ffebldConstantArray a, ffebit b)\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = FFEBLD_opACCTER;\n   x->u.accter.array = a;\n   x->u.accter.bits = b;\n@@ -4254,9 +4211,6 @@ ffebld_new_arrter (ffebldConstantArray a, ffetargetOffset size)\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = FFEBLD_opARRTER;\n   x->u.arrter.array = a;\n   x->u.arrter.size = size;\n@@ -4276,9 +4230,6 @@ ffebld_new_conter_with_orig (ffebldConstant c, ffebld o)\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = FFEBLD_opCONTER;\n   x->u.conter.expr = c;\n   x->u.conter.orig = o;\n@@ -4297,15 +4248,9 @@ ffebld_new_item (ffebld head, ffebld trail)\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = FFEBLD_opITEM;\n   x->u.item.head = head;\n   x->u.item.trail = trail;\n-#ifdef FFECOM_itemHOOK\n-  x->u.item.hook = FFECOM_itemNULL;\n-#endif\n   return x;\n }\n \n@@ -4321,9 +4266,6 @@ ffebld_new_labter (ffelab l)\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = FFEBLD_opLABTER;\n   x->u.labter = l;\n   return x;\n@@ -4346,9 +4288,6 @@ ffebld_new_labtok (ffelexToken t)\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = FFEBLD_opLABTOK;\n   x->u.labtok = t;\n   return x;\n@@ -4365,9 +4304,6 @@ ffebld_new_none (ffebldOp o)\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = o;\n   return x;\n }\n@@ -4383,14 +4319,9 @@ ffebld_new_one (ffebldOp o, ffebld left)\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = o;\n   x->u.nonter.left = left;\n-#ifdef FFECOM_nonterHOOK\n   x->u.nonter.hook = FFECOM_nonterNULL;\n-#endif\n   return x;\n }\n \n@@ -4410,9 +4341,6 @@ ffebld_new_symter (ffesymbol s, ffeintrinGen gen, ffeintrinSpec spec,\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = FFEBLD_opSYMTER;\n   x->u.symter.symbol = s;\n   x->u.symter.generic = gen;\n@@ -4433,15 +4361,10 @@ ffebld_new_two (ffebldOp o, ffebld left, ffebld right)\n   ffebld x;\n \n   x = ffebld_new ();\n-#if FFEBLD_BLANK_\n-  *x = ffebld_blank_;\n-#endif\n   x->op = o;\n   x->u.nonter.left = left;\n   x->u.nonter.right = right;\n-#ifdef FFECOM_nonterHOOK\n   x->u.nonter.hook = FFECOM_nonterNULL;\n-#endif\n   return x;\n }\n "}, {"sha": "880d56356e649042bf325d8fdf7acc88f3f5a941", "filename": "gcc/f/bld.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fbld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fbld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbld.h?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,5 @@\n /* bld.h -- Public #include File (module.h template V1.0)\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -400,18 +400,13 @@ struct _ffebld_\n \t  {\n \t    ffebld left;\n \t    ffebld right;\n-#ifdef FFECOM_nonterHOOK\n \t    ffecomNonter hook;\t/* Whatever the compiler/backend wants! */\n-#endif\n \t  }\n \tnonter;\n \tstruct\n \t  {\n \t    ffebld head;\n \t    ffebld trail;\n-#ifdef FFECOM_itemHOOK\n-\t    ffecomItem hook;\t/* Whatever the compiler/backend wants! */\n-#endif\n \t  }\n \titem;\n \tstruct\n@@ -459,9 +454,7 @@ struct _ffebld_constant_\n \t\t\t\t\t   real. */\n     ffebldConstant negated;\t/* We point to each other through here. */\n     ffebldConst consttype;\n-#ifdef FFECOM_constantHOOK\n     ffecomConstant hook;\t/* Whatever the compiler/backend wants! */\n-#endif\n     bool numeric;\t\t/* A numeric kind of constant. */\n     ffebldConstantUnion u;\n   };"}, {"sha": "01821cba78f5c2e16b114dcfb4a4adddeb8cbb4d", "filename": "gcc/f/com.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -6047,11 +6047,7 @@ ffecom_get_external_identifier_ (ffesymbol s)\n \n   if (!ffe_is_underscoring ()\n       || (strcmp (name, FFETARGET_nameBLANK_COMMON) == 0)\n-#if FFETARGET_isENFORCED_MAIN_NAME\n-      || (strcmp (name, FFETARGET_nameENFORCED_NAME) == 0)\n-#else\n       || (strcmp (name, FFETARGET_nameUNNAMED_MAIN) == 0)\n-#endif\n       || (strcmp (name, FFETARGET_nameUNNAMED_BLOCK_DATA) == 0))\n     return get_identifier (name);\n "}, {"sha": "5ed909646675ca954be74134617b322e8d3c5f7f", "filename": "gcc/f/com.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fcom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fcom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.h?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,6 @@\n /* com.h -- Public #include File (module.h template V1.0)\n-   Copyright (C) 1995, 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 2000, 2003\n+   Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -128,17 +129,11 @@ typedef enum\n #endif\n \n typedef tree ffecomConstant;\n-#define FFECOM_constantHOOK\n typedef tree ffecomNonter;\n-#define FFECOM_nonterHOOK\n typedef tree ffecomLabel;\n-#define FFECOM_globalHOOK\n typedef tree ffecomGlobal;\n-#define FFECOM_labelHOOK\n typedef tree ffecomStorage;\n-#define FFECOM_storageHOOK\n typedef struct _ffecom_symbol_ ffecomSymbol;\n-#define FFECOM_symbolHOOK\n \n struct _ffecom_symbol_\n   {"}, {"sha": "73c6ec50cb35c13a699548ba5089574b42acb954", "filename": "gcc/f/global.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fglobal.c?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,5 @@\n /* global.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1997, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -110,9 +110,7 @@ ffeglobal_new_ (ffename n)\n   g = (ffeglobal) malloc_new_ks (malloc_pool_image (), \"FFEGLOBAL\",\n \t\t\t\t sizeof (*g));\n   g->n = n;\n-#ifdef FFECOM_globalHOOK\n   g->hook = FFECOM_globalNULL;\n-#endif\n   g->tick = 0;\n \n   ffename_set_global (n, g);\n@@ -1430,9 +1428,7 @@ ffeglobal_ref_progunit_ (ffesymbol s, ffelexToken t, ffeglobalType type)\n       /* We've learned more, so point to where we learned it.  */\n       g->t = ffelex_token_use (t);\n       g->type = type;\n-#ifdef FFECOM_globalHOOK\n       g->hook = FFECOM_globalNULL;\t/* Discard previous _DECL. */\n-#endif\n       g->u.proc.n_args = -1;\n     }\n "}, {"sha": "dc499df9eb7d47abcd6ae834b8fcc99535c1100d", "filename": "gcc/f/global.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fglobal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fglobal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fglobal.h?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,5 @@\n /* global.h -- Public #include File (module.h template V1.0)\n-   Copyright (C) 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1997, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -89,9 +89,7 @@ struct _ffeglobal_\n {\n   ffelexToken t;\n   ffename n;\n-#ifdef FFECOM_globalHOOK\n   ffecomGlobal hook;\n-#endif\n   ffeCounter tick;\t\t/* Recent transition in this progunit. */\n   ffeglobalType type;\n   bool intrinsic;\t\t/* Known as intrinsic? */"}, {"sha": "dcfb8830680ba665d8e77bb2d0157c02e70f6313", "filename": "gcc/f/lab.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Flab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Flab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flab.c?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,5 @@\n /* lab.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -143,9 +143,7 @@ ffelab_new (ffelabValue v)\n   ++ffelab_num_news_;\n   l = (ffelab) malloc_new_ks (ffe_pool_any_unit (), \"FFELAB label\", sizeof (*l));\n   l->next = ffelab_list_;\n-#ifdef FFECOM_labelHOOK\n   l->hook = FFECOM_labelNULL;\n-#endif\n   l->value = v;\n   l->firstref_line = ffewhere_line_unknown ();\n   l->firstref_col = ffewhere_column_unknown ();"}, {"sha": "f3f89868a546b9f612236ae621832f7bdbaf6773", "filename": "gcc/f/lab.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Flab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Flab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flab.h?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,5 @@\n /* lab.h -- Public #include File (module.h template V1.0)\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -70,9 +70,7 @@ typedef unsigned long ffelabValue;\n struct _ffelab_\n   {\n     ffelab next;\n-#ifdef FFECOM_labelHOOK\n     ffecomLabel hook;\n-#endif\n     ffelabValue value;\t\t/* 1 through 99999, or 100000+ for temp\n \t\t\t\t   labels. */\n     unsigned long blocknum;\t/* Managed entirely by user of module. */"}, {"sha": "60570fc4df389b4006fc023dd97e7e2f054db503", "filename": "gcc/f/storag.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fstorag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fstorag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstorag.c?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,5 @@\n /* storag.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -420,9 +420,7 @@ ffestorag_new (ffestoragList sl)\n \t\t\t\t sizeof (*s));\n   s->next = (ffestorag) &sl->first;\n   s->previous = sl->last;\n-#ifdef FFECOM_storageHOOK\n   s->hook = FFECOM_storageNULL;\n-#endif\n   s->previous->next = s;\n   sl->last = s;\n   s->equivs_.first = s->equivs_.last = (ffestorag) &s->equivs_.first;"}, {"sha": "b58dc9a9602e9a421e25494227cad2973651fc3e", "filename": "gcc/f/storag.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fstorag.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fstorag.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstorag.h?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,5 @@\n /* storag.h -- Public #include File (module.h template V1.0)\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -83,9 +83,7 @@ struct _ffestorag_\n \t\t\t\t   LOCAL. */\n     ffetargetAlign alignment;\t/* Initial alignment for entity. */\n     ffetargetAlign modulo;\t/* Modulo within alignment. */\n-#ifdef FFECOM_storageHOOK\n     ffecomStorage hook;\t\t/* Whatever the backend needs here. */\n-#endif\n     ffestoragType type;\n     ffeinfoBasictype basic_type;/* NONE= >1 non-CHARACTER; ANY=\n \t\t\t\t   CHAR+non-CHAR. */"}, {"sha": "af452203ba3c19199e475a57fc819ae53ce10a3b", "filename": "gcc/f/symbol.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsymbol.c?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,6 @@\n /* Implementation of Fortran symbol manager\n-   Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 2003\n+   Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -230,9 +231,7 @@ ffesymbol_new_ (ffename n)\n   s->common = NULL;\n   s->equiv = NULL;\n   s->storage = NULL;\n-#ifdef FFECOM_symbolHOOK\n   s->hook = FFECOM_symbolNULL;\n-#endif\n   s->sfa_dummy_parent = NULL;\n   s->func_result = NULL;\n   s->value = 0;"}, {"sha": "7ddafbd446dd650ef36486cdccc049d35b2b263c", "filename": "gcc/f/symbol.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fsymbol.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc612a2ba3864c86a0e9c0b30811727096c1772/gcc%2Ff%2Fsymbol.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsymbol.h?ref=ddc612a2ba3864c86a0e9c0b30811727096c1772", "patch": "@@ -1,5 +1,5 @@\n /* Interface definitions for Fortran symbol manager\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -121,9 +121,7 @@ struct _ffesymbol_\n     ffeequiv equiv;\t\t/* Who have I been equivalenced with? */\n     ffestorag storage;\t\t/* Where am I in relation to my outside\n \t\t\t\t   world? */\n-#ifdef FFECOM_symbolHOOK\n     ffecomSymbol hook;\t\t/* Whatever the compiler/backend wants! */\n-#endif\n     ffesymbol sfa_dummy_parent;\t/* \"X\" outside sfunc \"CIRC(X) = 3.14 * X\". */\n     ffesymbol func_result;\t/* FUN sym's corresponding RES sym, & vice\n \t\t\t\t   versa. */"}]}