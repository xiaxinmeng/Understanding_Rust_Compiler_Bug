{"sha": "3b4c46d71190ead2f7fdde4d04103f4e838ced68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I0YzQ2ZDcxMTkwZWFkMmY3ZmRkZTRkMDQxMDNmNGU4MzhjZWQ2OA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-06-22T15:29:43Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-06-22T15:29:43Z"}, "message": "Check TARGET_PARTIAL_REG_STALL in imul to lea peepholes.\n\n2011-06-22  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/49497\n\t* config/i386/i386.md (*lea_general_2): Always allow SImode.\n\t(*lea_general_2_zext): Likewise.\n\t(imul to lea peepholes): Use const359_operand and check\n\tTARGET_PARTIAL_REG_STALL.\n\n\t* config/i386/predicates.md (const359_operand): New.\n\nFrom-SVN: r175295", "tree": {"sha": "2628566a9ecc6a9553aeb308765b83d66da9f49a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2628566a9ecc6a9553aeb308765b83d66da9f49a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b4c46d71190ead2f7fdde4d04103f4e838ced68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4c46d71190ead2f7fdde4d04103f4e838ced68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4c46d71190ead2f7fdde4d04103f4e838ced68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4c46d71190ead2f7fdde4d04103f4e838ced68/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4399cf590fbac5aa65ff0e44e8e5dade5741773f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4399cf590fbac5aa65ff0e44e8e5dade5741773f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4399cf590fbac5aa65ff0e44e8e5dade5741773f"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "b643f7cc1590493cfc963628791e1bc91536d174", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b4c46d71190ead2f7fdde4d04103f4e838ced68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b4c46d71190ead2f7fdde4d04103f4e838ced68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b4c46d71190ead2f7fdde4d04103f4e838ced68", "patch": "@@ -1,3 +1,13 @@\n+2011-06-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/49497\n+\t* config/i386/i386.md (*lea_general_2): Always allow SImode.\n+\t(*lea_general_2_zext): Likewise.\n+\t(imul to lea peepholes): Use const359_operand and check\n+\tTARGET_PARTIAL_REG_STALL.\n+\n+\t* config/i386/predicates.md (const359_operand): New.\n+\n 2011-06-22  Michael Matz  <matz@suse.de>\n \n \t* cgraphunit.c (assemble_thunk): Use correct return type."}, {"sha": "2b1da4c79d2ead0b212439ba1d0bff75d8ed5f5e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b4c46d71190ead2f7fdde4d04103f4e838ced68/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b4c46d71190ead2f7fdde4d04103f4e838ced68/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=3b4c46d71190ead2f7fdde4d04103f4e838ced68", "patch": "@@ -6287,7 +6287,9 @@\n \t      (match_operand 3 \"nonmemory_operand\" \"ri\")))]\n   \"(GET_MODE (operands[0]) == QImode || GET_MODE (operands[0]) == HImode\n     || (TARGET_64BIT && GET_MODE (operands[0]) == SImode))\n-   && (!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun))\n+   && (!TARGET_PARTIAL_REG_STALL\n+       || GET_MODE (operands[0]) == SImode\n+       || optimize_function_for_size_p (cfun))\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\n    && (GET_MODE (operands[0]) == GET_MODE (operands[3])\n        || GET_MODE (operands[3]) == VOIDmode)\"\n@@ -6338,7 +6340,9 @@\n \t      (match_operand 4 \"immediate_operand\" \"i\")))]\n   \"(GET_MODE (operands[0]) == QImode || GET_MODE (operands[0]) == HImode\n     || (TARGET_64BIT && GET_MODE (operands[0]) == SImode))\n-   && (!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun))\n+   && (!TARGET_PARTIAL_REG_STALL\n+       || GET_MODE (operands[0]) == SImode\n+       || optimize_function_for_size_p (cfun))\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\n    && GET_MODE (operands[0]) == GET_MODE (operands[3])\"\n   \"#\"\n@@ -17199,11 +17203,11 @@\n   [(parallel\n     [(set (match_operand:SWI48 0 \"register_operand\" \"\")\n \t  (mult:SWI48 (match_operand:SWI48 1 \"register_operand\" \"\")\n-\t\t      (match_operand:SWI48 2 \"const_int_operand\" \"\")))\n+\t\t      (match_operand:SWI48 2 \"const359_operand\" \"\")))\n      (clobber (reg:CC FLAGS_REG))])]\n-  \"INTVAL (operands[2]) == 3\n-   || INTVAL (operands[2]) == 5\n-   || INTVAL (operands[2]) == 9\"\n+  \"!TARGET_PARTIAL_REG_STALL\n+   || <MODE>mode == SImode\n+   || optimize_function_for_size_p (cfun)\"\n   [(set (match_dup 0)\n \t(plus:SWI48 (mult:SWI48 (match_dup 1) (match_dup 2))\n \t\t    (match_dup 1)))]\n@@ -17213,12 +17217,10 @@\n   [(parallel\n     [(set (match_operand:SWI48 0 \"register_operand\" \"\")\n \t  (mult:SWI48 (match_operand:SWI48 1 \"nonimmediate_operand\" \"\")\n-\t\t      (match_operand:SWI48 2 \"const_int_operand\" \"\")))\n+\t\t      (match_operand:SWI48 2 \"const359_operand\" \"\")))\n      (clobber (reg:CC FLAGS_REG))])]\n   \"optimize_insn_for_speed_p ()\n-   && (INTVAL (operands[2]) == 3\n-       || INTVAL (operands[2]) == 5\n-       || INTVAL (operands[2]) == 9)\"\n+   && (!TARGET_PARTIAL_REG_STALL || <MODE>mode == SImode)\"\n   [(set (match_dup 0) (match_dup 1))\n    (set (match_dup 0)\n \t(plus:SWI48 (mult:SWI48 (match_dup 0) (match_dup 2))"}, {"sha": "2c75147474ebc5df615fb66a683724f0a0569826", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b4c46d71190ead2f7fdde4d04103f4e838ced68/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b4c46d71190ead2f7fdde4d04103f4e838ced68/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=3b4c46d71190ead2f7fdde4d04103f4e838ced68", "patch": "@@ -606,6 +606,14 @@\n   return i == 2 || i == 4 || i == 8;\n })\n \n+;; Match 3, 5, or 9.  Used for leal multiplicands.\n+(define_predicate \"const359_operand\"\n+  (match_code \"const_int\")\n+{\n+  HOST_WIDE_INT i = INTVAL (op);\n+  return i == 3 || i == 5 || i == 9;\n+})\n+\n ;; Match 0 or 1.\n (define_predicate \"const_0_to_1_operand\"\n   (and (match_code \"const_int\")"}]}