{"sha": "30957092db46d8798e632feefb5df634488dbb33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA5NTcwOTJkYjQ2ZDg3OThlNjMyZmVlZmI1ZGY2MzQ0ODhkYmIzMw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-09-22T11:03:49Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-09-22T11:03:49Z"}, "message": "AArch64: Implement missing vcls intrinsics on unsigned types\n\nThis patch implements some missing intrinsics that perform a CLS on unsigned SIMD types.\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\ngcc/\n\tPR target/71233\n\t* config/aarch64/arm_neon.h (vcls_u8, vcls_u16, vcls_u32,\n\tvclsq_u8, vclsq_u16, vclsq_u32): Define.\n\ngcc/testsuite/\n\tPR target/71233\n\t* gcc.target/aarch64/simd/vcls_unsigned_1.c: New test.", "tree": {"sha": "853f4cae558a02ccf5d3b30a849a69940f22dd64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/853f4cae558a02ccf5d3b30a849a69940f22dd64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30957092db46d8798e632feefb5df634488dbb33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30957092db46d8798e632feefb5df634488dbb33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30957092db46d8798e632feefb5df634488dbb33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30957092db46d8798e632feefb5df634488dbb33/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4703be185b422f637deebd3bb9222a41c8023d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4703be185b422f637deebd3bb9222a41c8023d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4703be185b422f637deebd3bb9222a41c8023d6"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "341019bc648babcddb0311c36652814609aab22f", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30957092db46d8798e632feefb5df634488dbb33/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30957092db46d8798e632feefb5df634488dbb33/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=30957092db46d8798e632feefb5df634488dbb33", "patch": "@@ -14075,6 +14075,48 @@ vclsq_s32 (int32x4_t __a)\n   return __builtin_aarch64_clrsbv4si (__a);\n }\n \n+__extension__ extern __inline int8x8_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vcls_u8 (uint8x8_t __a)\n+{\n+  return __builtin_aarch64_clrsbv8qi ((int8x8_t) __a);\n+}\n+\n+__extension__ extern __inline int16x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vcls_u16 (uint16x4_t __a)\n+{\n+  return __builtin_aarch64_clrsbv4hi ((int16x4_t) __a);\n+}\n+\n+__extension__ extern __inline int32x2_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vcls_u32 (uint32x2_t __a)\n+{\n+  return __builtin_aarch64_clrsbv2si ((int32x2_t) __a);\n+}\n+\n+__extension__ extern __inline int8x16_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vclsq_u8 (uint8x16_t __a)\n+{\n+  return __builtin_aarch64_clrsbv16qi ((int8x16_t) __a);\n+}\n+\n+__extension__ extern __inline int16x8_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vclsq_u16 (uint16x8_t __a)\n+{\n+  return __builtin_aarch64_clrsbv8hi ((int16x8_t) __a);\n+}\n+\n+__extension__ extern __inline int32x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vclsq_u32 (uint32x4_t __a)\n+{\n+  return __builtin_aarch64_clrsbv4si ((int32x4_t) __a);\n+}\n+\n /* vclz.  */\n \n __extension__ extern __inline int8x8_t"}, {"sha": "f7078d1a67c9dc5397af5c8a89cf629afdb11241", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vcls_unsigned_1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30957092db46d8798e632feefb5df634488dbb33/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcls_unsigned_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30957092db46d8798e632feefb5df634488dbb33/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcls_unsigned_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvcls_unsigned_1.c?ref=30957092db46d8798e632feefb5df634488dbb33", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+#include <arm_neon.h>\n+\n+int16x8_t\n+test_16x8 (uint16x8_t a)\n+{\n+  return vclsq_u16 (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"cls\\\\tv\\[0-9\\]+\\.8h, v\\[0-9\\]+\\.8h\" 1 } } */\n+\n+\n+int8x16_t\n+test_8x16 (uint8x16_t a)\n+{\n+  return vclsq_u8 (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"cls\\\\tv\\[0-9\\]+\\.16b, v\\[0-9\\]+\\.16b\" 1 } } */\n+\n+int32x4_t\n+test_32x4 (uint32x4_t a)\n+{\n+  return vclsq_u32 (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"cls\\\\tv\\[0-9\\]+\\.4s, v\\[0-9\\]+\\.4s\" 1 } } */\n+\n+int16x4_t\n+test_16x4 (uint16x4_t a)\n+{\n+  return vcls_u16 (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"cls\\\\tv\\[0-9\\]+\\.4h, v\\[0-9\\]+\\.4h\" 1 } } */\n+\n+int8x8_t\n+test_8x8 (uint8x8_t a)\n+{\n+  return vcls_u8 (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"cls\\\\tv\\[0-9\\]+\\.8b, v\\[0-9\\]+\\.8b\" 1 } } */\n+\n+int32x2_t\n+test32x2 (uint32x2_t a)\n+{\n+  return vcls_u32 (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"cls\\\\tv\\[0-9\\]+\\.2s, v\\[0-9\\]+\\.2s\" 1 } } */\n+"}]}