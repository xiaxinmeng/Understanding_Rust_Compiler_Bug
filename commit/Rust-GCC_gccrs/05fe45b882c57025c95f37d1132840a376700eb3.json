{"sha": "05fe45b882c57025c95f37d1132840a376700eb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVmZTQ1Yjg4MmM1NzAyNWM5NWYzN2QxMTMyODQwYTM3NjcwMGViMw==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-06-05T11:08:00Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-06-05T11:08:00Z"}, "message": "fshort-wchar.c: add extra dg-options for arm*-*-*eabi* targets.\n\ngcc/testsuite\n\n\t* gcc.dg/fshort-wchar.c: add extra dg-options for\n\tarm*-*-*eabi* targets.\n\t* gcc.dg/tree-ssa/pr42585.c: change dg-final to catch\n\tarm*-*-* targets.\n\t* gcc.dg/tree-ssa/pr43491.c: likewise.\n\nFrom-SVN: r199692", "tree": {"sha": "a7e491e066fa72e0bd7bbd163a7380d981c2e44a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7e491e066fa72e0bd7bbd163a7380d981c2e44a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05fe45b882c57025c95f37d1132840a376700eb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fe45b882c57025c95f37d1132840a376700eb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05fe45b882c57025c95f37d1132840a376700eb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fe45b882c57025c95f37d1132840a376700eb3/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34c136b6b4884c3875c48c4ed3852823adf8e918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c136b6b4884c3875c48c4ed3852823adf8e918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c136b6b4884c3875c48c4ed3852823adf8e918"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "2985cb619666682f8700bce8f68918f4c72a1400", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05fe45b882c57025c95f37d1132840a376700eb3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05fe45b882c57025c95f37d1132840a376700eb3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=05fe45b882c57025c95f37d1132840a376700eb3", "patch": "@@ -1,3 +1,11 @@\n+2013-06-05  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* gcc.dg/fshort-wchar.c: Add extra dg-options for\n+\tarm*-*-*eabi* targets.\n+\t* gcc.dg/tree-ssa/pr42585.c: Change dg-final to catch\n+\tarm*-*-* targets.\n+\t* gcc.dg/tree-ssa/pr43491.c: Likewise.\n+\n 2013-06-05  Manfred Schwarb  <manfred99@gmx.ch>\n \t    Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "bb6988167740987a5eae5c373424ae57544e4497", "filename": "gcc/testsuite/gcc.dg/fshort-wchar.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05fe45b882c57025c95f37d1132840a376700eb3/gcc%2Ftestsuite%2Fgcc.dg%2Ffshort-wchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05fe45b882c57025c95f37d1132840a376700eb3/gcc%2Ftestsuite%2Fgcc.dg%2Ffshort-wchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffshort-wchar.c?ref=05fe45b882c57025c95f37d1132840a376700eb3", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-fshort-wchar\" } */\n-/* { dg-options \"-fshort-wchar -Wl,--no-wchar-size-warning\" { target arm*-*-*eabi } } */\n+/* { dg-options \"-fshort-wchar -Wl,--no-wchar-size-warning\" { target arm*-*-*eabi* } } */\n \n /* Source: Neil Booth, 10 Dec 2002.\n "}, {"sha": "520c357a3ad3b789fcee87740587d2caee821fba", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr42585.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05fe45b882c57025c95f37d1132840a376700eb3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr42585.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05fe45b882c57025c95f37d1132840a376700eb3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr42585.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr42585.c?ref=05fe45b882c57025c95f37d1132840a376700eb3", "patch": "@@ -35,6 +35,6 @@ Cyc_string_ungetc (int ignore, struct _fat_ptr *sptr)\n /* Whether the structs are totally scalarized or not depends on the\n    MOVE_RATIO macro defintion in the back end.  The scalarization will\n    not take place when using small values for MOVE_RATIO.  */\n-/* { dg-final { scan-tree-dump-times \"struct _fat_ptr _ans\" 0 \"optimized\" { target { ! \"arm-*-* powerpc*-*-* s390*-*-* sh*-*-*\" } } } } */\n-/* { dg-final { scan-tree-dump-times \"struct _fat_ptr _T2\" 0 \"optimized\" { target { ! \"arm-*-* powerpc*-*-* s390*-*-* sh*-*-*\" } } } } */\n+/* { dg-final { scan-tree-dump-times \"struct _fat_ptr _ans\" 0 \"optimized\" { target { ! \"arm*-*-* powerpc*-*-* s390*-*-* sh*-*-*\" } } } } */\n+/* { dg-final { scan-tree-dump-times \"struct _fat_ptr _T2\" 0 \"optimized\" { target { ! \"arm*-*-* powerpc*-*-* s390*-*-* sh*-*-*\" } } } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "44dc5f2d3cf14eff65f24b76d84c1e3f96d485b8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr43491.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05fe45b882c57025c95f37d1132840a376700eb3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr43491.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05fe45b882c57025c95f37d1132840a376700eb3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr43491.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr43491.c?ref=05fe45b882c57025c95f37d1132840a376700eb3", "patch": "@@ -37,6 +37,6 @@ long foo(long data, long v)\n }\n /* We should not eliminate global register variable when it is the RHS of\n    a single assignment.  */\n-/* { dg-final { scan-tree-dump-times \"Eliminated: 2\" 1 \"pre\" { target { arm-*-* i?86-*-* mips*-*-* x86_64-*-* } } } } */\n-/* { dg-final { scan-tree-dump-times \"Eliminated: 3\" 1 \"pre\" { target { ! { arm-*-* i?86-*-* mips*-*-* x86_64-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 2\" 1 \"pre\" { target { arm*-*-* i?86-*-* mips*-*-* x86_64-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"Eliminated: 3\" 1 \"pre\" { target { ! { arm*-*-* i?86-*-* mips*-*-* x86_64-*-* } } } } } */\n /* { dg-final { cleanup-tree-dump \"pre\" } } */"}]}