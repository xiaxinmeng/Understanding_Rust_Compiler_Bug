{"sha": "09835ed242920b265fe83b14436121fb325de9a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk4MzVlZDI0MjkyMGIyNjVmZTgzYjE0NDM2MTIxZmIzMjVkZTlhNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-04-04T00:22:29Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-04-04T00:22:29Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r676", "tree": {"sha": "a7bddd8b09006ffc99a1f687300a286ec249ed0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7bddd8b09006ffc99a1f687300a286ec249ed0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09835ed242920b265fe83b14436121fb325de9a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09835ed242920b265fe83b14436121fb325de9a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09835ed242920b265fe83b14436121fb325de9a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09835ed242920b265fe83b14436121fb325de9a4/comments", "author": null, "committer": null, "parents": [{"sha": "89d825c9a663b84fb5b4dfae80650d2c340bc69f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d825c9a663b84fb5b4dfae80650d2c340bc69f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d825c9a663b84fb5b4dfae80650d2c340bc69f"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "6e167115191b70d0a04654d83d54d0da6ec09643", "filename": "gcc/caller-save.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09835ed242920b265fe83b14436121fb325de9a4/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09835ed242920b265fe83b14436121fb325de9a4/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=09835ed242920b265fe83b14436121fb325de9a4", "patch": "@@ -522,6 +522,16 @@ insert_save_restore (insn, save_p, regno, insn_mode)\n   enum insn_code code;\n   int i;\n \n+  /* A common failure mode if register status is not correct in the RTL\n+     is for this routine to be called with a REGNO we didn't expect to\n+     save.  That will cause us to write an insn with a (nil) SET_DEST\n+     or SET_SRC.  Instead of doing so and causing a crash later, check\n+     for this common case and abort here instead.  This will remove one\n+     step in debugging such problems.  */\n+\n+  if (regno_save_mem[regno] == 0)\n+    abort ();\n+\n   /* If INSN is a CALL_INSN, we must insert our insns before any\n      USE insns in front of the CALL_INSN.  */\n "}, {"sha": "4212534ecb9d60aeacf373a600c9091a9d788c49", "filename": "gcc/config/m88k/m88k.md", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09835ed242920b265fe83b14436121fb325de9a4/gcc%2Fconfig%2Fm88k%2Fm88k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09835ed242920b265fe83b14436121fb325de9a4/gcc%2Fconfig%2Fm88k%2Fm88k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.md?ref=09835ed242920b265fe83b14436121fb325de9a4", "patch": "@@ -1244,7 +1244,6 @@\n ;; operand 3 is the offset for the source and destination pointers\n ;; operand 4 is the first value to be loaded\n ;; operand 5 is the register to hold the value (r4 or r5)\n-;; Upon completion, r2 and r3 are unchanged\n \n (define_expand \"call_block_move\"\n   [(set (reg:SI 3) (minus:SI (match_operand:SI 2 \"register_operand\" \"r\")\n@@ -1255,13 +1254,10 @@\n \t\t\t     (match_dup 3)))\n    (use (reg:SI 2))\n    (use (reg:SI 3))\n-   (use (reg:SI 4))\n-   (use (reg:SI 5))\n+   (use (match_dup 5))\n    (parallel [(call (mem:SI (match_operand 0 \"\" \"\"))\n \t\t    (const_int 0))\n-\t      (use (reg:SI 1))])\n-   (clobber (reg:SI 4))\n-   (clobber (reg:SI 5))]\n+\t      (use (reg:SI 1))])]\n   \"\"\n   \"\")\n \n@@ -1279,15 +1275,11 @@\n    (set (reg:SI 6) (match_operand:SI 6 \"immediate_operand\" \"i\"))\n    (use (reg:SI 2))\n    (use (reg:SI 3))\n-   (use (reg:SI 4))\n-   (use (reg:SI 5))\n+   (use (match_dup 5))\n    (use (reg:SI 6))\n    (parallel [(call (mem:SI (match_operand 0 \"\" \"\"))\n \t\t    (const_int 0))\n-\t      (use (reg:SI 1))])\n-   (clobber (reg:SI 4))\n-   (clobber (reg:SI 5))\n-   (clobber (reg:SI 6))]\n+\t      (use (reg:SI 1))])]\n   \"\"\n   \"\")\n \f"}]}