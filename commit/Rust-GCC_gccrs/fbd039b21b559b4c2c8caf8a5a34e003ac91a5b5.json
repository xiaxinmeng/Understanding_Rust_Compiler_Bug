{"sha": "fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJkMDM5YjIxYjU1OWI0YzJjOGNhZjhhNWEzNGUwMDNhYzkxYTViNQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-02-20T13:43:58Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-02-20T13:43:58Z"}, "message": "sparc.c (sparc_output_scratch_registers): Mark parameter with ATTRIBUTE_UNUSED.\n\n\t* sparc.c (sparc_output_scratch_registers): Mark parameter with\n\tATTRIBUTE_UNUSED.\n\t(sparc_va_arg, sparc_flat_output_function_prologue,\n\tsparc_flat_output_function_epilogue): Cast value to unsigned in\n\tcomparison.\n\t(sparc_emit_float_lib_cmp): Remove unused variable `cmp'.\n\n\t* sparc.md: Add default case in switch.\n\nFrom-SVN: r32078", "tree": {"sha": "2d2eb76c2157772a227653a6faf66a4f8960b7c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d2eb76c2157772a227653a6faf66a4f8960b7c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5/comments", "author": null, "committer": null, "parents": [{"sha": "ce26960a54d501fe7589ec198f84c63b64afe1e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce26960a54d501fe7589ec198f84c63b64afe1e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce26960a54d501fe7589ec198f84c63b64afe1e2"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "85ce325691903b222b4f049e9dc7eaa6c9e9adb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5", "patch": "@@ -1,3 +1,14 @@\n+2000-02-20  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* sparc.c (sparc_output_scratch_registers): Mark parameter with\n+\tATTRIBUTE_UNUSED.\n+\t(sparc_va_arg, sparc_flat_output_function_prologue,\n+\tsparc_flat_output_function_epilogue): Cast value to unsigned in\n+\tcomparison.\n+\t(sparc_emit_float_lib_cmp): Remove unused variable `cmp'.\n+\t\n+\t* sparc.md: Add default case in switch.\n+\n 2000-02-19  Richard Henderson  <rth@cygnus.com>\n \n \t* c-typeck.c (add_pending_init): Don't abort for multiple"}, {"sha": "ade8efe65e8ff97b4f67a673b6e54b540ed14e24", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5", "patch": "@@ -3271,7 +3271,7 @@ build_big_number (file, num, reg)\n /* Output any necessary .register pseudo-ops.  */\n void\n sparc_output_scratch_registers (file)\n-     FILE *file;\n+     FILE *file ATTRIBUTE_UNUSED;\n {\n #ifdef HAVE_AS_REGISTER_PSEUDO_OP\n   int i;\n@@ -4542,7 +4542,7 @@ sparc_va_arg (valist, type)\n \n   if (TARGET_ARCH64)\n     {\n-      if (TYPE_ALIGN (type) >= 2 * BITS_PER_WORD)\n+      if (TYPE_ALIGN (type) >= 2 * (unsigned) BITS_PER_WORD)\n \talign = 2 * UNITS_PER_WORD;\n \n       if (AGGREGATE_TYPE_P (type))\n@@ -4821,7 +4821,6 @@ sparc_emit_float_lib_cmp (x, y, comparison)\n      enum rtx_code comparison;\n {\n   char *qpfunc;\n-  rtx cmp = const0_rtx;\n   rtx slot0, slot1, result, tem, tem2;\n   enum machine_mode mode;\n \n@@ -6346,7 +6345,7 @@ sparc_flat_output_function_prologue (file, size)\n \t the gdb folk first.  */\n \n       /* Is the entire register save area offsettable from %sp?  */\n-      if (reg_offset < 4096 - 64 * UNITS_PER_WORD)\n+      if (reg_offset < 4096 - 64 * (unsigned) UNITS_PER_WORD)\n \t{\n \t  if (size <= 4096)\n \t    {\n@@ -6531,7 +6530,7 @@ sparc_flat_output_function_epilogue (file, size)\n \t}\n \n       /* Is the entire register save area offsettable from %sp?  */\n-      if (reg_offset < 4096 - 64 * UNITS_PER_WORD)\n+      if (reg_offset < 4096 - 64 * (unsigned) UNITS_PER_WORD)\n \t{\n \t  size1 = 0;\n \t}"}, {"sha": "1410196b0b05255d0cc2201153d4f93878a82845", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=fbd039b21b559b4c2c8caf8a5a34e003ac91a5b5", "patch": "@@ -3012,6 +3012,8 @@\n     case 7:\n     case 8:\n       return \\\"st\\\\t%1, %0\\\";\n+    default:\n+      abort();\n     }\n }\"\n   [(set_attr \"type\" \"fpmove,move,move,move,*,load,fpload,fpstore,store\")\n@@ -3057,6 +3059,8 @@\n     case 7:\n     case 8:\n       return \\\"st\\\\t%r1, %0\\\";\n+    default:\n+      abort();\n     }\n }\"\n   [(set_attr \"type\" \"fpmove,move,move,move,*,load,fpload,fpstore,store\")\n@@ -3104,6 +3108,8 @@\n     case 8:\n     case 9:\n       return \\\"st\\\\t%r1, %0\\\";\n+    default:\n+      abort();\n     }\n }\"\n   [(set_attr \"type\" \"fpmove,fpmove,move,move,move,*,load,fpload,fpstore,store\")"}]}