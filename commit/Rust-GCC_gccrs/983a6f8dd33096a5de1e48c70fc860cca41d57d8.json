{"sha": "983a6f8dd33096a5de1e48c70fc860cca41d57d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgzYTZmOGRkMzMwOTZhNWRlMWU0OGM3MGZjODYwY2NhNDFkNTdkOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-11-13T00:37:43Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-11-13T00:37:43Z"}, "message": "floatformat.c (floatformat_ibm_long_double_is_valid): Fix compiler warnings.\n\n\t* floatformat.c (floatformat_ibm_long_double_is_valid): Fix\n\tcompiler warnings.\n\t(floatformat_ibm_long_double): Use\n\tfloatformat_ibm_long_double_is_valid.\n\nFrom-SVN: r130131", "tree": {"sha": "eefdbc8944ff1018ab439964979d90b9b88f54e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eefdbc8944ff1018ab439964979d90b9b88f54e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/983a6f8dd33096a5de1e48c70fc860cca41d57d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/983a6f8dd33096a5de1e48c70fc860cca41d57d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/983a6f8dd33096a5de1e48c70fc860cca41d57d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/983a6f8dd33096a5de1e48c70fc860cca41d57d8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfb6c26c07f23b2eacf656cb08fc74d08075d2e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb6c26c07f23b2eacf656cb08fc74d08075d2e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfb6c26c07f23b2eacf656cb08fc74d08075d2e1"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "1260eeba20c66d075132f40828e5f323d24b3dd5", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983a6f8dd33096a5de1e48c70fc860cca41d57d8/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983a6f8dd33096a5de1e48c70fc860cca41d57d8/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=983a6f8dd33096a5de1e48c70fc860cca41d57d8", "patch": "@@ -1,3 +1,10 @@\n+2007-11-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* floatformat.c (floatformat_ibm_long_double_is_valid): Fix\n+\tcompiler warnings.\n+\t(floatformat_ibm_long_double): Use\n+\tfloatformat_ibm_long_double_is_valid.\n+\n 2007-11-07  Joseph Myers  <joseph@codesourcery.com>\n \t    Daniel Jacobowitz  <dan@codesourcery.com>\n "}, {"sha": "cbf13ea3406076ec7efd052d408ac135ec2eda09", "filename": "libiberty/floatformat.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983a6f8dd33096a5de1e48c70fc860cca41d57d8/libiberty%2Ffloatformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983a6f8dd33096a5de1e48c70fc860cca41d57d8/libiberty%2Ffloatformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffloatformat.c?ref=983a6f8dd33096a5de1e48c70fc860cca41d57d8", "patch": "@@ -283,7 +283,7 @@ floatformat_ibm_long_double_is_valid (const struct floatformat *fmt,\n   bot_exp = get_field (ufrom + 8, hfmt->byteorder, hfmt->totalsize,\n \t\t       hfmt->exp_start, hfmt->exp_len);\n \n-  if (top_exp == hfmt->exp_nan)\n+  if ((unsigned long) top_exp == hfmt->exp_nan)\n     top_nan = mant_bits_set (hfmt, ufrom);\n \n   /* A NaN is valid with any low part.  */\n@@ -292,11 +292,8 @@ floatformat_ibm_long_double_is_valid (const struct floatformat *fmt,\n \n   /* An infinity, zero or denormal requires low part 0 (positive or\n      negative).  */\n-  if (top_exp == hfmt->exp_nan || top_exp == 0)\n+  if ((unsigned long) top_exp == hfmt->exp_nan || top_exp == 0)\n     {\n-      unsigned int mant_bits, mant_off;\n-      int mant_bits_left;\n-\n       if (bot_exp != 0)\n \treturn 0;\n \n@@ -318,7 +315,7 @@ floatformat_ibm_long_double_is_valid (const struct floatformat *fmt,\n       /* The bottom part is 0 or denormal.  Determine which, and if\n \t denormal the first two set bits.  */\n       int first_bit = -1, second_bit = -1, cur_bit;\n-      for (cur_bit = 0; cur_bit < hfmt->man_len; cur_bit++)\n+      for (cur_bit = 0; (unsigned int) cur_bit < hfmt->man_len; cur_bit++)\n \tif (get_field (ufrom + 8, hfmt->byteorder, hfmt->totalsize,\n \t\t       hfmt->man_start + cur_bit, 1))\n \t  {\n@@ -363,7 +360,7 @@ const struct floatformat floatformat_ibm_long_double =\n   floatformat_big, 128, 0, 1, 11, 1023, 2047, 12, 52,\n   floatformat_intbit_no,\n   \"floatformat_ibm_long_double\",\n-  floatformat_always_valid,\n+  floatformat_ibm_long_double_is_valid,\n   &floatformat_ieee_double_big\n };\n \f"}]}