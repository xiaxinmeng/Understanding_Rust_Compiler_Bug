{"sha": "dd52e06aa0e9341c1123de64c7ff2b46b60b7ba3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ1MmUwNmFhMGU5MzQxYzExMjNkZTY0YzdmZjJiNDZiNjBiN2JhMw==", "commit": {"author": {"name": "Jerome Lambourg", "email": "lambourg@adacore.com", "date": "2005-09-05T07:54:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:54:22Z"}, "message": "g-expect.adb (Non_Blocking_Spawn): Initialize the filters field to\n\n2005-09-01  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* g-expect.adb (Non_Blocking_Spawn): Initialize the filters field to\n\t(Free): New deallocation procedure for filter elements\n\t(Close): Deallocate any existing filter for the concerned connection\n\nFrom-SVN: r103866", "tree": {"sha": "9fec5a0581c26df7b80a9616753c38a30f22cc6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fec5a0581c26df7b80a9616753c38a30f22cc6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd52e06aa0e9341c1123de64c7ff2b46b60b7ba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd52e06aa0e9341c1123de64c7ff2b46b60b7ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd52e06aa0e9341c1123de64c7ff2b46b60b7ba3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd52e06aa0e9341c1123de64c7ff2b46b60b7ba3/comments", "author": {"login": "lambourg", "id": 480233, "node_id": "MDQ6VXNlcjQ4MDIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/480233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambourg", "html_url": "https://github.com/lambourg", "followers_url": "https://api.github.com/users/lambourg/followers", "following_url": "https://api.github.com/users/lambourg/following{/other_user}", "gists_url": "https://api.github.com/users/lambourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambourg/subscriptions", "organizations_url": "https://api.github.com/users/lambourg/orgs", "repos_url": "https://api.github.com/users/lambourg/repos", "events_url": "https://api.github.com/users/lambourg/events{/privacy}", "received_events_url": "https://api.github.com/users/lambourg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "829c2849c102e33c9f0d932445229406d4478b8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829c2849c102e33c9f0d932445229406d4478b8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/829c2849c102e33c9f0d932445229406d4478b8f"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "e94d5b657a1dd60201e433d041dc12c3f05991e5", "filename": "gcc/ada/g-expect.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd52e06aa0e9341c1123de64c7ff2b46b60b7ba3/gcc%2Fada%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd52e06aa0e9341c1123de64c7ff2b46b60b7ba3/gcc%2Fada%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-expect.adb?ref=dd52e06aa0e9341c1123de64c7ff2b46b60b7ba3", "patch": "@@ -69,6 +69,9 @@ package body GNAT.Expect is\n    procedure Free is new Unchecked_Deallocation\n      (Pattern_Matcher, Pattern_Matcher_Access);\n \n+   procedure Free is new Unchecked_Deallocation\n+     (Filter_List_Elem, Filter_List);\n+\n    procedure Call_Filters\n      (Pid       : Process_Descriptor'Class;\n       Str       : String;\n@@ -204,6 +207,9 @@ package body GNAT.Expect is\n      (Descriptor : in out Process_Descriptor;\n       Status     : out Integer)\n    is\n+      Current_Filter : Filter_List;\n+      Next_Filter    : Filter_List;\n+\n    begin\n       Close (Descriptor.Input_Fd);\n \n@@ -214,11 +220,21 @@ package body GNAT.Expect is\n       Close (Descriptor.Output_Fd);\n \n       --  ??? Should have timeouts for different signals\n+\n       Kill (Descriptor.Pid, 9);\n \n       GNAT.OS_Lib.Free (Descriptor.Buffer);\n       Descriptor.Buffer_Size := 0;\n \n+      Current_Filter := Descriptor.Filters;\n+\n+      while Current_Filter /= null loop\n+         Next_Filter := Current_Filter.Next;\n+         Free (Current_Filter);\n+         Current_Filter := Next_Filter;\n+      end loop;\n+\n+      Descriptor.Filters := null;\n       Status := Waitpid (Descriptor.Pid);\n    end Close;\n \n@@ -1001,6 +1017,10 @@ package body GNAT.Expect is\n       if Buffer_Size /= 0 then\n          Descriptor.Buffer := new String (1 .. Positive (Buffer_Size));\n       end if;\n+\n+      --  Initialize the filters\n+\n+      Descriptor.Filters := null;\n    end Non_Blocking_Spawn;\n \n    -------------------------"}]}