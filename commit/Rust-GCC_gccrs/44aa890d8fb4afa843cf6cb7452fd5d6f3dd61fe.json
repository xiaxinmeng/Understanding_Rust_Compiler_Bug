{"sha": "44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe", "node_id": "C_kwDOANBUbNoAKDQ0YWE4OTBkOGZiNGFmYTg0M2NmNmNiNzQ1MmZkNWQ2ZjNkZDYxZmU", "commit": {"author": {"name": "Manfred Schwarb", "email": "manfred99@gmx.ch", "date": "2021-12-14T15:30:27Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-12-14T15:31:29Z"}, "message": "testsuite: Silence conversion warnings for MIN1 and MAX1\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/91497\n\t* gfortran.dg/pr91497.f90: Adjust test to use\n\tdg-require-effective-target directive.\n\t* gfortran.dg/pr91497_2.f90: New test to cover all targets.\n\tCover MAX1 and MIN1 intrinsics.", "tree": {"sha": "3d2dfe386da61832838ff340ac87b22e09785369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d2dfe386da61832838ff340ac87b22e09785369"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe/comments", "author": {"login": "manfredsc", "id": 11859839, "node_id": "MDQ6VXNlcjExODU5ODM5", "avatar_url": "https://avatars.githubusercontent.com/u/11859839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manfredsc", "html_url": "https://github.com/manfredsc", "followers_url": "https://api.github.com/users/manfredsc/followers", "following_url": "https://api.github.com/users/manfredsc/following{/other_user}", "gists_url": "https://api.github.com/users/manfredsc/gists{/gist_id}", "starred_url": "https://api.github.com/users/manfredsc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manfredsc/subscriptions", "organizations_url": "https://api.github.com/users/manfredsc/orgs", "repos_url": "https://api.github.com/users/manfredsc/repos", "events_url": "https://api.github.com/users/manfredsc/events{/privacy}", "received_events_url": "https://api.github.com/users/manfredsc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1215db08126fbd2d69d971d65611508cf83b4ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1215db08126fbd2d69d971d65611508cf83b4ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1215db08126fbd2d69d971d65611508cf83b4ae"}], "stats": {"total": 147, "additions": 136, "deletions": 11}, "files": [{"sha": "f4005e503e4dd7a37a83a86f1b681cc69f520868", "filename": "gcc/testsuite/gfortran.dg/pr91497.f90", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91497.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91497.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91497.f90?ref=44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe", "patch": "@@ -1,4 +1,6 @@\n-! { dg-do compile { target { i?86-*-* x86_64-*-* } } }\n+! { dg-do compile }\n+! { dg-require-effective-target fortran_real_10 }\n+! { dg-require-effective-target fortran_real_16 }\n ! { dg-options \"-Wall\" }\n ! Code contributed by Manfred Schwarb <manfred99 at gmx dot ch>\n ! PR fortran/91497\n@@ -8,13 +10,13 @@\n !\n program foo\n \n-      real*4 a,aa\n-      real*8 b,bb\n-      real*10 c,cc\n-      real*16 d\n-      integer*2 e,ee\n-      integer*4 f,ff\n-      integer*8 g,gg\n+      real(4) a,aa\n+      real(8) b,bb\n+      real(10) c,cc\n+      real(16) d\n+      integer(2) e,ee\n+      integer(4) f,ff\n+      integer(8) g,gg\n       PARAMETER(a=3.1415927_4)\n       PARAMETER(b=3.1415927_8)\n       PARAMETER(c=3.1415927_10)\n@@ -36,11 +38,10 @@ program foo\n       aa=CEILING(b)\n       aa=CEILING(c)\n       aa=CEILING(d)\n-      !---unknown but documented type conversions:\n+      !---DEC specific type conversions (-fdec):\n       !!aa=FLOATI(e)\n       !!aa=FLOATJ(f)\n       !!aa=FLOATK(g)\n-      !---documentation is wrong for sngl:\n       aa=SNGL(c)\n       aa=SNGL(d)\n       bb=REAL(c, kind=8)\n@@ -98,7 +99,7 @@ program foo\n       ff=IFIX(a)\n       ff=IDINT(b)\n       ff=IDNINT(b)\n-      !---LONG not allowed anymore in gfortran 10 (?):\n+      !---LONG support got removed:\n       !!ff=LONG(a)\n       !!ff=LONG(b)\n       !!ff=LONG(c)"}, {"sha": "28aa4bd1872f166d31b06971be8eb19bdfce68d9", "filename": "gcc/testsuite/gfortran.dg/pr91497_2.f90", "status": "added", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91497_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91497_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr91497_2.f90?ref=44aa890d8fb4afa843cf6cb7452fd5d6f3dd61fe", "patch": "@@ -0,0 +1,124 @@\n+! { dg-do compile }\n+! { dg-options \"-Wall\" }\n+! Code contributed by Manfred Schwarb <manfred99 at gmx dot ch>\n+! PR fortran/91497\n+!\n+! Prior to applying the patch for this PR, the following code\n+! would generate numerous conversion warnings.\n+! Additional test case to cover all targets.\n+!\n+program foo\n+\n+      real(4) a, aa\n+      real(8) b, bb\n+      integer(2) e, ee\n+      integer(4) f, ff\n+      integer(8) g, gg\n+      complex(4) ww\n+      complex(8) xx\n+      PARAMETER(a=3.1415927_4)\n+      PARAMETER(b=3.1415927_8)\n+      PARAMETER(e=123_2)\n+      PARAMETER(f=123_4)\n+      PARAMETER(g=123_8)\n+\n+      aa=REAL(b)    ! was: Change of value in conversion from 'REAL(8)' to 'REAL(4)'\n+      aa=REAL(e)\n+      aa=REAL(f)\n+      aa=REAL(g)\n+      aa=REAL(b, kind=4)   ! was: Change of value in conversion from 'REAL(8)' to 'REAL(4)'\n+      bb=REAL(a, kind=8)\n+\n+      aa=FLOAT(f)\n+      bb=DFLOAT(g)\n+      aa=SNGL(b)    ! was: Change of value in conversion from 'REAL(8)' to 'REAL(4)'\n+      aa=AINT(a)\n+      bb=AINT(b)\n+      aa=AINT(b, kind=4)\n+      bb=DINT(b)\n+      aa=ANINT(a)\n+      bb=ANINT(b)\n+      aa=ANINT(b, kind=4)\n+      bb=DNINT(b)\n+      aa=AMAX0(f, f)\n+      aa=AMIN0(f, f)\n+      aa=AMAX0(g, g)\n+      aa=AMIN0(g, g)\n+\n+      ee=INT(a)\n+      ee=INT(a, kind=2)    ! was: Change of value in conversion from 'REAL(4)' to 'INTEGER(2)'\n+      ee=INT(b, kind=2)    ! was: Change of value in conversion from 'REAL(8)' to 'INTEGER(2)'\n+      ee=INT(f, kind=2)\n+      ee=INT(g, kind=2)\n+      ff=INT(b)\n+      ff=INT(a, kind=4)    ! was: Change of value in conversion from 'REAL(4)' to 'INTEGER(4)'\n+      ff=INT(b, kind=4)    ! was: Change of value in conversion from 'REAL(8)' to 'INTEGER(4)'\n+      ff=INT(f, kind=4)\n+      ff=INT(g, kind=4)\n+      gg=INT(a)\n+      gg=INT(a, kind=8)    ! was: Change of value in conversion from 'REAL(4)' to 'INTEGER(8)'\n+      gg=INT(b, kind=8)    ! was: Change of value in conversion from 'REAL(8)' to 'INTEGER(8)'\n+      gg=INT(f, kind=8)\n+      gg=INT(g, kind=8)\n+\n+      ee=IFIX(a)\n+      ff=IFIX(a)\n+      gg=IFIX(a)\n+      ee=IDINT(b)\n+      ff=IDINT(b)\n+      gg=IDINT(b)\n+      ee=INT2(a)    ! was: Change of value in conversion from 'REAL(4)' to 'INTEGER(2)'\n+      ee=INT2(b)    ! was: Change of value in conversion from 'REAL(8)' to 'INTEGER(2)'\n+      ee=INT2(f)\n+      ee=INT2(g)\n+      gg=INT8(a)    ! was: Change of value in conversion from 'REAL(4)' to 'INTEGER(8)'\n+      gg=INT8(b)    ! was: Change of value in conversion from 'REAL(8)' to 'INTEGER(8)'\n+      gg=INT8(f)\n+      gg=INT8(g)\n+\n+      ff=FLOOR(b)\n+      ee=FLOOR(b, kind=2)\n+      ff=FLOOR(b, kind=4)\n+      gg=FLOOR(b, kind=8)\n+      ff=CEILING(b)\n+      ee=CEILING(b, kind=2)\n+      ff=CEILING(b, kind=4)\n+      gg=CEILING(b, kind=8)\n+      ff=MAX1(a, a)    ! was: Change of value in conversion from 'REAL(4)' to 'INTEGER(4)'\n+      ff=MIN1(a, a)    ! was: Change of value in conversion from 'REAL(4)' to 'INTEGER(4)'\n+      gg=MAX1(b, b)    ! was: Change of value in conversion from 'REAL(8)' to 'INTEGER(4)'\n+      gg=MIN1(b, b)    ! was: Change of value in conversion from 'REAL(8)' to 'INTEGER(4)'\n+\n+      ee=NINT(a, kind=2)\n+      ee=NINT(b, kind=2)\n+      ff=NINT(a)\n+      ff=NINT(b)\n+      ff=NINT(a, kind=4)\n+      ff=NINT(b, kind=4)\n+      gg=NINT(a, kind=8)\n+      gg=NINT(b, kind=8)\n+      ee=IDNINT(b)\n+      ff=IDNINT(b)\n+      gg=IDNINT(b)\n+\n+      ww=COMPLEX(a, a)\n+      ww=COMPLEX(e, e)\n+      ww=COMPLEX(g, g)\n+      ww=COMPLEX(a, g)\n+      xx=COMPLEX(b, g)\n+      ww=CMPLX(a, a)\n+      ww=CMPLX(b, b, kind=4)\n+      xx=CMPLX(a, a, kind=8)\n+\n+      aa=REAL(ww)\n+      bb=REAL(xx)\n+      aa=REALPART(ww)\n+      bb=REALPART(xx)\n+      aa=AIMAG(ww)\n+      bb=AIMAG(xx)\n+      aa=IMAG(ww)\n+      bb=IMAG(xx)\n+      bb=DIMAG(xx)\n+      aa=IMAGPART(ww)\n+      bb=IMAGPART(xx)\n+end"}]}