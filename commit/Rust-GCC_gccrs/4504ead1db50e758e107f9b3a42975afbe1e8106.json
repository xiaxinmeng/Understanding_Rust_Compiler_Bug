{"sha": "4504ead1db50e758e107f9b3a42975afbe1e8106", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUwNGVhZDFkYjUwZTc1OGUxMDdmOWIzYTQyOTc1YWZiZTFlODEwNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-04-05T13:04:38Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-04-05T13:04:38Z"}, "message": "class.c (add_method_1): Cast the argument of `bzero' to PTR.\n\n        * class.c (add_method_1): Cast the argument of `bzero' to PTR.\n        * decl.c (copy_lang_decl): Likewise for `bcopy'.\n        * jcf-depend.c: Include \"config.h\", not <config.h>.\n        * jcf-parse.c (jcf_figure_file_type): Cast the arguments of\n        `bcopy' to PTR.\n        * jcf-path.c: Include \"config.h\", not <config.h>.\n        * lex.c: Don't include various system header files.\n        (java_init_lex): Cast the argument of `bzero' to PTR\n        * parse-scan.y (java_push_parser_context): Likewise.\n        * parse.y (java_push_parser_context): Likewise.\n        * xref.c: Don't include <stdio.h>.\n\nFrom-SVN: r26203", "tree": {"sha": "02f0a041c4f9169cbd8607135939b4e843e232ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02f0a041c4f9169cbd8607135939b4e843e232ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4504ead1db50e758e107f9b3a42975afbe1e8106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4504ead1db50e758e107f9b3a42975afbe1e8106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4504ead1db50e758e107f9b3a42975afbe1e8106", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4504ead1db50e758e107f9b3a42975afbe1e8106/comments", "author": null, "committer": null, "parents": [{"sha": "908c4e83161c7166e0d86864b88d29115b003c5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/908c4e83161c7166e0d86864b88d29115b003c5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/908c4e83161c7166e0d86864b88d29115b003c5a"}], "stats": {"total": 58, "additions": 34, "deletions": 24}, "files": [{"sha": "22eb0a6054b284617385834780b67fcfb2f6ef48", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -1,3 +1,26 @@\n+Mon Apr  5 15:43:51 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+        * class.c (add_method_1): Cast the argument of `bzero' to PTR.\n+\n+        * decl.c (copy_lang_decl): Likewise for `bcopy'.\n+\n+        * jcf-depend.c: Include \"config.h\", not <config.h>.\n+\n+        * jcf-parse.c (jcf_figure_file_type): Cast the arguments of\n+\t`bcopy' to PTR.\n+\n+        * jcf-path.c: Include \"config.h\", not <config.h>.\n+\n+        * lex.c: Don't include various system header files.\n+\t(java_init_lex): Cast the argument of `bzero' to PTR\n+\n+        * parse-scan.y (java_push_parser_context): Likewise.\n+\n+        * parse.y (java_push_parser_context): Likewise.\n+\t(patch_bc_statement): Match format specifier to variable argument.\n+\n+        * xref.c: Don't include <stdio.h>.\n+\n Mon Apr  5 11:24:19 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (struct parser_ctxt *ctxp): Now global."}, {"sha": "f785d0f0076e47acea8414f951d8988dcf36fa4c", "filename": "gcc/java/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -417,7 +417,7 @@ add_method_1 (handle_class, access_flags, name, function_type)\n \n   DECL_LANG_SPECIFIC (fndecl)\n     = (struct lang_decl *) permalloc (sizeof (struct lang_decl));\n-  bzero (DECL_LANG_SPECIFIC (fndecl), sizeof (struct lang_decl));\n+  bzero ((PTR) DECL_LANG_SPECIFIC (fndecl), sizeof (struct lang_decl));\n \n   TREE_CHAIN (fndecl) = TYPE_METHODS (handle_class);\n   TYPE_METHODS (handle_class) = fndecl;"}, {"sha": "110945460d1784ed6bdfeef21cf5457eced43291", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -1373,7 +1373,7 @@ copy_lang_decl (node)\n     = TREE_CODE (node) == VAR_DECL ? sizeof (struct lang_decl_var)\n     : sizeof (struct lang_decl);\n   struct lang_decl *x = (struct lang_decl *) oballoc (lang_decl_size);\n-  bcopy (DECL_LANG_SPECIFIC (node), x, lang_decl_size);\n+  bcopy ((PTR) DECL_LANG_SPECIFIC (node), (PTR) x, lang_decl_size);\n   DECL_LANG_SPECIFIC (node) = x;\n }\n "}, {"sha": "86b9d7722fe811503a7beef3eb5d4a1d553bca03", "filename": "gcc/java/jcf-depend.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fjcf-depend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fjcf-depend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-depend.c?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -23,7 +23,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n /* Written by Tom Tromey <tromey@cygnus.com>, October 1998.  */\n \n-#include <config.h>\n+#include \"config.h\"\n #include \"system.h\"\n \n #include <assert.h>"}, {"sha": "1b9db4ec2f6f999a9ec08f67d6ee4cf9692e687c", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -1002,7 +1002,7 @@ DEFUN(jcf_figure_file_type, (jcf),\n       && !open_in_zip (jcf, input_filename, NULL, 0))\n     {\n       localToFile = ALLOC (sizeof (struct ZipFileCache));\n-      bcopy (SeenZipFiles, localToFile, sizeof (struct ZipFileCache));\n+      bcopy ((PTR) SeenZipFiles, (PTR) localToFile, sizeof (struct ZipFileCache));\n       process_zip_dir ();\t/* Register all the class defined there */\n       return JCF_ZIP;\n     }"}, {"sha": "67dd02e2fffa1859e217d25abe6b100d0c4fe65f", "filename": "gcc/java/jcf-path.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fjcf-path.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fjcf-path.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-path.c?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -23,7 +23,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n /* Written by Tom Tromey <tromey@cygnus.com>, October 1998.  */\n \n-#include <config.h>\n+#include \"config.h\"\n #include \"system.h\"\n \n #include \"jcf.h\""}, {"sha": "aca3d88a8ae47cd6899e46febfd50a64a784c074", "filename": "gcc/java/lex.c", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -34,20 +34,8 @@ The lexical analysis conforms to the Java grammar described in \"The\n Java(TM) Language Specification. J. Gosling, B. Joy, G. Steele.\n Addison Wesley 1996\" (http://java.sun.com/docs/books/jls/html/3.doc.html)  */\n \n-#include <stdio.h>\n-#include <string.h>\n-#include <strings.h>\n-\n-#ifdef JAVA_LEX_DEBUG\n-#include <ctype.h>\n-#endif\n-\n #include \"keyword.h\"\n \n-#ifndef SEEK_SET\n-#include <unistd.h>\n-#endif\n-\n #ifndef JC1_LITE\n extern struct obstack *expression_obstack;\n #endif\n@@ -110,8 +98,8 @@ java_init_lex ()\n   ctxp->static_initialized = ctxp->non_static_initialized = \n     ctxp->incomplete_class = NULL_TREE;\n   \n-  bzero (ctxp->modifier_ctx, 11*sizeof (ctxp->modifier_ctx[0]));\n-  bzero (current_jcf, sizeof (JCF));\n+  bzero ((PTR) ctxp->modifier_ctx, 11*sizeof (ctxp->modifier_ctx[0]));\n+  bzero ((PTR) current_jcf, sizeof (JCF));\n   ctxp->current_parsed_class = NULL;\n   ctxp->package = NULL_TREE;\n #endif"}, {"sha": "5c036af5b05e2d5ecfa36ac6d8eb1357da340ede", "filename": "gcc/java/parse-scan.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fparse-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fparse-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.c?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -2357,7 +2357,7 @@ java_push_parser_context ()\n   struct parser_ctxt *new = \n     (struct parser_ctxt *)xmalloc(sizeof (struct parser_ctxt));\n \n-  bzero (new, sizeof (struct parser_ctxt));\n+  bzero ((PTR) new, sizeof (struct parser_ctxt));\n   new->next = ctxp;\n   ctxp = new;\n }  "}, {"sha": "dcebc3a091c93abed3b3ae0b6b265e47a7d07fbe", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -1112,7 +1112,7 @@ java_push_parser_context ()\n   struct parser_ctxt *new = \n     (struct parser_ctxt *)xmalloc(sizeof (struct parser_ctxt));\n \n-  bzero (new, sizeof (struct parser_ctxt));\n+  bzero ((PTR) new, sizeof (struct parser_ctxt));\n   new->next = ctxp;\n   ctxp = new;\n }  "}, {"sha": "c402f12a7c51ba1db536984ab9373d19ca695590", "filename": "gcc/java/parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -4892,7 +4892,7 @@ java_push_parser_context ()\n   struct parser_ctxt *new = \n     (struct parser_ctxt *)xmalloc(sizeof (struct parser_ctxt));\n \n-  bzero (new, sizeof (struct parser_ctxt));\n+  bzero ((PTR) new, sizeof (struct parser_ctxt));\n   new->next = ctxp;\n   ctxp = new;\n   if (ctxp->next)"}, {"sha": "72eccbffaf39f8de92f622fa469dbb105609f249", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -2291,7 +2291,7 @@ java_push_parser_context ()\n   struct parser_ctxt *new = \n     (struct parser_ctxt *)xmalloc(sizeof (struct parser_ctxt));\n \n-  bzero (new, sizeof (struct parser_ctxt));\n+  bzero ((PTR) new, sizeof (struct parser_ctxt));\n   new->next = ctxp;\n   ctxp = new;\n   if (ctxp->next)"}, {"sha": "6f570d7f42b8ff6a4d4f154100001aed61ca1c95", "filename": "gcc/java/xref.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4504ead1db50e758e107f9b3a42975afbe1e8106/gcc%2Fjava%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fxref.c?ref=4504ead1db50e758e107f9b3a42975afbe1e8106", "patch": "@@ -24,7 +24,6 @@ Java and all Java-based marks are trademarks or registered trademarks\n of Sun Microsystems, Inc. in the United States and other countries.\n The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n #include \"system.h\"\n #include \"tree.h\""}]}