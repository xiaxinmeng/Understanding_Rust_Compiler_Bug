{"sha": "f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE5MmNhNWVlYTZhMWIxMmUwY2RmMWU0MzQyZmFhNTI3NDRjNWEyNQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-09T20:19:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-10-09T20:19:13Z"}, "message": "[multiple changes]\n\n2017-10-09  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_elab.adb (Is_Suitable_Access): This scenario is now only relevant\n\tin the static model.\n\t(Is_Suitable_Variable_Assignment): This scenario is now only relevant\n\tin the static model.\n\t(Is_Suitable_Variable_Reference): This scenario is now only relevant in\n\tthe static model.\n\n2017-10-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Declarations): In ASIS mode, resolve aspect\n\texpressions when the enclosing scope is a subprogram body and the next\n\tdeclaration is a body that freezes entities previously declared in the\n\tscope.\n\n2017-10-09  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch8.adb (Analyze_Use_Package): Remove checking of mixture between\n\tghost packages and living packages in use clauses.\n\t(Use_One_Type, Note_Redundant_Use): Correct warning messages\n\n2017-10-09  Justin Squirek  <squirek@adacore.com>\n\n\t* osint.ads: Document new parameter FD for Read_Source_File.\n\nFrom-SVN: r253564", "tree": {"sha": "bd49fc1a5ccf18c31a07ede07efcf6c54cae3dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd49fc1a5ccf18c31a07ede07efcf6c54cae3dea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/comments", "author": null, "committer": null, "parents": [{"sha": "98b779ae494df7c615787a95774e41a99654ad39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98b779ae494df7c615787a95774e41a99654ad39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98b779ae494df7c615787a95774e41a99654ad39"}], "stats": {"total": 133, "additions": 91, "deletions": 42}, "files": [{"sha": "20d60c38bf28ef906c4e17fed18d43a5f90ce599", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "patch": "@@ -1,3 +1,29 @@\n+2017-10-09  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_elab.adb (Is_Suitable_Access): This scenario is now only relevant\n+\tin the static model.\n+\t(Is_Suitable_Variable_Assignment): This scenario is now only relevant\n+\tin the static model.\n+\t(Is_Suitable_Variable_Reference): This scenario is now only relevant in\n+\tthe static model.\n+\n+2017-10-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Declarations): In ASIS mode, resolve aspect\n+\texpressions when the enclosing scope is a subprogram body and the next\n+\tdeclaration is a body that freezes entities previously declared in the\n+\tscope.\n+\n+2017-10-09  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Use_Package): Remove checking of mixture between\n+\tghost packages and living packages in use clauses.\n+\t(Use_One_Type, Note_Redundant_Use): Correct warning messages\n+\n+2017-10-09  Justin Squirek  <squirek@adacore.com>\n+\n+\t* osint.ads: Document new parameter FD for Read_Source_File.\n+\n 2017-10-09  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_util.adb (Make_Predicate_Call): If the type of the expression to"}, {"sha": "b8edeec2b589b1b8283e4d70f2f1fe994e2e4114", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "patch": "@@ -405,7 +405,8 @@ package Osint is\n       T   : File_Type := Source);\n    --  Allocates a Source_Buffer of appropriate length and then reads the\n    --  entire contents of the source file N into the buffer. The address of\n-   --  the allocated buffer is returned in Src.\n+   --  the allocated buffer is returned in Src. FD is used for extended error\n+   --  information in the case the read fails.\n    --\n    --  Each line of text is terminated by one of the sequences:\n    --\n@@ -427,7 +428,11 @@ package Osint is\n    --  failure to find the file is a fatal error, an error message is output,\n    --  and program execution is terminated. Otherwise (for the case of a\n    --  subsidiary source loaded directly or indirectly using with), a file\n-   --  not found condition causes null to be set as the result value.\n+   --  not found condition causes null to be set as the result value and a\n+   --  value of No_Source_File (0) to be set as the FD value. In the related\n+   --  case of a file with no read permissions the result is the same except FD\n+   --  is set to No_Access_To_Source_File (-1). Upon success FD is set to a\n+   --  positive Source_File_Index.\n    --\n    --  Note that the name passed to this function is the simple file name,\n    --  without any directory information. The implementation is responsible"}, {"sha": "2e4134cc3f50be2299f24790c45df6fb37bb9de7", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "patch": "@@ -2231,7 +2231,8 @@ package body Sem_Ch3 is\n \n       procedure Resolve_Aspects;\n       --  Utility to resolve the expressions of aspects at the end of a list of\n-      --  declarations.\n+      --  declarations, or before a declaration that freezes previous entities,\n+      --  such as in a subprogram body.\n \n       function Uses_Unseen_Priv (Pkg : Entity_Id) return Boolean;\n       --  Check if a nested package has entities within it that rely on library\n@@ -2789,6 +2790,12 @@ package body Sem_Ch3 is\n                if Nkind (Next_Decl) = N_Subprogram_Body then\n                   Handle_Late_Controlled_Primitive (Next_Decl);\n                end if;\n+\n+            else\n+               --  In ASIS mode, if the next declaration is a body, complete\n+               --  the analysis of declarations so far.\n+\n+               Resolve_Aspects;\n             end if;\n \n             Adjust_Decl;"}, {"sha": "26714c87c879a9ee1a8719d01b63e0be5d953da8", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "patch": "@@ -3836,25 +3836,6 @@ package body Sem_Ch8 is\n             end if;\n          end if;\n       end if;\n-\n-      --  Detect a mixture of Ghost packages and living packages within the\n-      --  same use_package_clause. Ideally one would split a use_package_clause\n-      --  with multiple names into multiple use_package_clauses with a single\n-      --  name, however clients of the front end would have to adapt to this\n-      --  change.\n-\n-      if Present (Ghost_Id) and then Present (Living_Id) then\n-         Error_Msg_N\n-           (\"use clause cannot mention ghost and non-ghost ghost units\", N);\n-\n-         Error_Msg_Sloc := Sloc (Ghost_Id);\n-         Error_Msg_NE (\"\\& # declared as ghost\", N, Ghost_Id);\n-\n-         Error_Msg_Sloc := Sloc (Living_Id);\n-         Error_Msg_NE (\"\\& # declared as non-ghost\", N, Living_Id);\n-      end if;\n-\n-      Mark_Ghost_Clause (N);\n    end Analyze_Use_Package;\n \n    ----------------------\n@@ -9354,7 +9335,7 @@ package body Sem_Ch8 is\n \n             Error_Msg_Sloc := Sloc (Prev_Use);\n             Error_Msg_NE -- CODEFIX\n-              (\"& is already use-visible through previous use clause #??\",\n+              (\"& is already use-visible through previous use_clause #??\",\n                Redundant, Pack_Name);\n          end if;\n       end Note_Redundant_Use;\n@@ -10001,7 +9982,7 @@ package body Sem_Ch8 is\n                   else\n                      Error_Msg_NE -- CODEFIX\n                        (\"& is already use-visible through previous \"\n-                        & \"use type clause??\", Id, T);\n+                        & \"use_type_clause??\", Id, T);\n                   end if;\n                end Use_Clause_Known;\n \n@@ -10011,7 +9992,7 @@ package body Sem_Ch8 is\n             else\n                Error_Msg_NE -- CODEFIX\n                  (\"& is already use-visible through previous \"\n-                  & \"use type clause??\", Id, T);\n+                  & \"use_type_clause??\", Id, T);\n             end if;\n \n          --  The package where T is declared is already used"}, {"sha": "909a50090fc96e1274714a37ed0542189818551a", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 47, "deletions": 17, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f192ca5eea6a1b12e0cdf1e4342faa52744c5a25/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=f192ca5eea6a1b12e0cdf1e4342faa52744c5a25", "patch": "@@ -4995,10 +4995,26 @@ package body Sem_Elab is\n       Subp_Id : Entity_Id;\n \n    begin\n-      if Nkind (N) /= N_Attribute_Reference then\n+      --  This scenario is relevant only when the static model is in effect\n+      --  because it is graph-dependent and does not involve any run-time\n+      --  checks. Allowing it in the dynamic model would create confusing\n+      --  noise.\n+\n+      if not Static_Elaboration_Checks then\n+         return False;\n+\n+      --  Nothing to do when switch -gnatd.U (ignore 'Access) is in effect\n+\n+      elsif Debug_Flag_Dot_UU then\n          return False;\n \n-      --  Internally-generated attributes are assumed to be ABE safe\n+      --  Nothing to do when the scenario is not an attribute reference\n+\n+      elsif Nkind (N) /= N_Attribute_Reference then\n+         return False;\n+\n+      --  Nothing to do for internally-generated attributes because they are\n+      --  assumed to be ABE safe.\n \n       elsif not Comes_From_Source (N) then\n          return False;\n@@ -5031,16 +5047,10 @@ package body Sem_Elab is\n \n       return\n \n-        --  This particular scenario is relevant only in the static model when\n-        --  switch -gnatd.U (ignore 'Access) is not in effect.\n-\n-        Static_Elaboration_Checks\n-          and then not Debug_Flag_Dot_UU\n+        --  The prefix must denote a source entry, operator, or subprogram\n+        --  which is not imported.\n \n-          --  The prefix must denote an entry, operator, or subprogram which is\n-          --  not imported.\n-\n-          and then Comes_From_Source (Subp_Id)\n+        Comes_From_Source (Subp_Id)\n           and then Is_Subprogram_Or_Entry (Subp_Id)\n           and then not Is_Bodiless_Subprogram (Subp_Id)\n \n@@ -5109,10 +5119,21 @@ package body Sem_Elab is\n       Var_Unit_Id : Entity_Id;\n \n    begin\n-      if Nkind (N) /= N_Assignment_Statement then\n+      --  This scenario is relevant only when the static model is in effect\n+      --  because it is graph-dependent and does not involve any run-time\n+      --  checks. Allowing it in the dynamic model would create confusing\n+      --  noise.\n+\n+      if not Static_Elaboration_Checks then\n          return False;\n \n-      --  Internally-generated assigments are assumed to be ABE safe\n+      --  Nothing to do when the scenario is not an assignment\n+\n+      elsif Nkind (N) /= N_Assignment_Statement then\n+         return False;\n+\n+      --  Nothing to do for internally-generated assignments because they are\n+      --  assumed to be ABE safe.\n \n       elsif not Comes_From_Source (N) then\n          return False;\n@@ -5161,10 +5182,10 @@ package body Sem_Elab is\n       --  To qualify, the assignment must meet the following prerequisites:\n \n       return\n-        Comes_From_Source (Var_Id)\n \n-          --  The variable must be susceptible to warnings\n+        --  The variable must be a source entity and susceptible to warnings\n \n+        Comes_From_Source (Var_Id)\n           and then not Has_Warnings_Off (Var_Id)\n \n           --  The variable must be declared in the spec of compilation unit U\n@@ -5232,14 +5253,23 @@ package body Sem_Elab is\n    --  Start of processing for Is_Suitable_Variable_Reference\n \n    begin\n+      --  This scenario is relevant only when the static model is in effect\n+      --  because it is graph-dependent and does not involve any run-time\n+      --  checks. Allowing it in the dynamic model would create confusing\n+      --  noise.\n+\n+      if not Static_Elaboration_Checks then\n+         return False;\n+\n       --  Attributes and operator sumbols are not considered to be suitable\n       --  references to variables even though they are part of predicate\n       --  Is_Entity_Name.\n \n-      if not Nkind_In (N, N_Expanded_Name, N_Identifier) then\n+      elsif not Nkind_In (N, N_Expanded_Name, N_Identifier) then\n          return False;\n \n-      --  Internally generated references are assumed to be ABE safe\n+      --  Nothing to do for internally-generated references because they are\n+      --  assumed to be ABE safe.\n \n       elsif not Comes_From_Source (N) then\n          return False;"}]}