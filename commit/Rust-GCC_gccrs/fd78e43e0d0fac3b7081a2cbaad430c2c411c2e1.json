{"sha": "fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ3OGU0M2UwZDBmYWMzYjcwODFhMmNiYWFkNDMwYzJjNDExYzJlMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-07-04T17:05:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-07-04T17:05:26Z"}, "message": "ipa-utils.c (ipa_merge_profiles): Fix merging when dst is uninitialized while src is not.\n\n\n\t* ipa-utils.c (ipa_merge_profiles): Fix merging when dst is\n\tuninitialized while src is not.\n\nFrom-SVN: r249973", "tree": {"sha": "6b34853c6e28812d63c41fbaaeeda5cef4c47c77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b34853c6e28812d63c41fbaaeeda5cef4c47c77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1/comments", "author": null, "committer": null, "parents": [{"sha": "a4187dab5248cb42781fa6b2f57b95214c4f8b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4187dab5248cb42781fa6b2f57b95214c4f8b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4187dab5248cb42781fa6b2f57b95214c4f8b03"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "1168a3ac619c01bdfa87f54fe0b571eddf63a0b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1", "patch": "@@ -1,3 +1,8 @@\n+2017-07-04  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-utils.c (ipa_merge_profiles): Fix merging when dst is\n+\tuninitialized while src is not.\n+\n 2017-07-04  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* common/config/arm/arm-common.c: Adjust include path for"}, {"sha": "708710d61353a3c921dc61a5190c308e4bab1a00", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=fd78e43e0d0fac3b7081a2cbaad430c2c411c2e1", "patch": "@@ -404,14 +404,17 @@ ipa_merge_profiles (struct cgraph_node *dst,\n \n   /* FIXME when we merge in unknown profile, we ought to set counts as\n      unsafe.  */\n-  if (!dst->count.initialized_p ())\n+  if (!src->count.initialized_p ())\n     return;\n   if (symtab->dump_file)\n     {\n       fprintf (symtab->dump_file, \"Merging profiles of %s to %s\\n\",\n \t       src->dump_name (), dst->dump_name ());\n     }\n-  dst->count += src->count;\n+  if (dst->count.initialized_p ())\n+    dst->count += src->count;\n+  else\n+    dst->count = src->count;\n \n   /* This is ugly.  We need to get both function bodies into memory.\n      If declaration is merged, we need to duplicate it to be able\n@@ -521,12 +524,20 @@ ipa_merge_profiles (struct cgraph_node *dst,\n \t  unsigned int i;\n \n \t  dstbb = BASIC_BLOCK_FOR_FN (dstcfun, srcbb->index);\n-\t  dstbb->count += srcbb->count;\n+\t  if (dstbb->count.initialized_p ())\n+\t    dstbb->count += srcbb->count;\n+\t  else\n+\t    dstbb->count = srcbb->count;\n \t  for (i = 0; i < EDGE_COUNT (srcbb->succs); i++)\n \t    {\n \t      edge srce = EDGE_SUCC (srcbb, i);\n \t      edge dste = EDGE_SUCC (dstbb, i);\n-\t      dste->count += srce->count;\n+\t      if (dstbb->count.initialized_p ())\n+\t        dste->count += srce->count;\n+\t      else\n+\t\tdste->count = srce->count;\n+\t      if (dstbb->count > 0 && dste->count.initialized_p ())\n+\t\tdste->probability = dste->count.probability_in (dstbb->count);\n \t    }\n \t}\n       push_cfun (dstcfun);"}]}