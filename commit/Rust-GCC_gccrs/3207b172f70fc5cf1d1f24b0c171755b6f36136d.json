{"sha": "3207b172f70fc5cf1d1f24b0c171755b6f36136d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIwN2IxNzJmNzBmYzVjZjFkMWYyNGIwYzE3MTc1NWI2ZjM2MTM2ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-25T22:51:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-25T22:51:12Z"}, "message": "(expand_expr, case CONSTRUCTOR): If have a target, don't build\nconstructor into memory.\n\nFrom-SVN: r6323", "tree": {"sha": "d7690cdd9632b72ae611069ac066661833f7b557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7690cdd9632b72ae611069ac066661833f7b557"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3207b172f70fc5cf1d1f24b0c171755b6f36136d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3207b172f70fc5cf1d1f24b0c171755b6f36136d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3207b172f70fc5cf1d1f24b0c171755b6f36136d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3207b172f70fc5cf1d1f24b0c171755b6f36136d/comments", "author": null, "committer": null, "parents": [{"sha": "307b821c36a068b8482454c6167c71cedc53083b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/307b821c36a068b8482454c6167c71cedc53083b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/307b821c36a068b8482454c6167c71cedc53083b"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "d17755d07cd51d0d979e58c10ab6c605e835cefc", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3207b172f70fc5cf1d1f24b0c171755b6f36136d/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3207b172f70fc5cf1d1f24b0c171755b6f36136d/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3207b172f70fc5cf1d1f24b0c171755b6f36136d", "patch": "@@ -4089,13 +4089,17 @@ expand_expr (exp, target, tmode, modifier)\n \t    expand_expr (TREE_VALUE (elt), const0_rtx, VOIDmode, 0);\n \t  return const0_rtx;\n \t}\n+\n       /* All elts simple constants => refer to a constant in memory.  But\n \t if this is a non-BLKmode mode, let it store a field at a time\n \t since that should make a CONST_INT or CONST_DOUBLE when we\n-\t fold.  If we are making an initializer and all operands are\n-\t constant, put it in memory as well.  */\n+\t fold.  Likewise, if we have a target we can use, it is best to\n+\t store directly into the target.  If we are making an initializer and\n+\t all operands are constant, put it in memory as well.  */\n       else if ((TREE_STATIC (exp)\n-\t\t&& (mode == BLKmode || TREE_ADDRESSABLE (exp)))\n+\t\t&& ((mode == BLKmode\n+\t\t     && ! (target != 0 && safe_from_p (target, exp)))\n+\t\t    || TREE_ADDRESSABLE (exp)))\n \t       || (modifier == EXPAND_INITIALIZER && TREE_CONSTANT (exp)))\n \t{\n \t  rtx constructor = output_constant_def (exp);"}]}