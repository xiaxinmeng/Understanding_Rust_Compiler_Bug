{"sha": "01e3391a9085119eea88593f6b6a766294ee3631", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFlMzM5MWE5MDg1MTE5ZWVhODg1OTNmNmI2YTc2NjI5NGVlMzYzMQ==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2015-12-02T11:07:42Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2015-12-02T11:07:42Z"}, "message": "AVX-512. Split out mask version for vec_extract_hi_<mode>.\n\ngcc/\n\t* config/i386/sse.md (define_insn \"vec_extract_hi_<mode>_maskm\"):\n\tRemove \"prefix_extra\".\n\t(define_insn \"vec_extract_hi_<mode>_mask\"): New.\n\t(define_insn \"vec_extract_hi_<mode>\"): Remove masking.\ngcc/testsuite/\n\t* gcc.target/i386/avx512vl-vextractf32x4-1.c: Fix scan pattern.\n\nFrom-SVN: r231167", "tree": {"sha": "66cda2ad422fbe8d0b2a39e386852498bbbcc4a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66cda2ad422fbe8d0b2a39e386852498bbbcc4a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01e3391a9085119eea88593f6b6a766294ee3631", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e3391a9085119eea88593f6b6a766294ee3631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01e3391a9085119eea88593f6b6a766294ee3631", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01e3391a9085119eea88593f6b6a766294ee3631/comments", "author": null, "committer": null, "parents": [{"sha": "cbd3a543f674ad143aa7d5639e6d2719d0df19b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd3a543f674ad143aa7d5639e6d2719d0df19b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbd3a543f674ad143aa7d5639e6d2719d0df19b7"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "680d813472d1e7af7b77c7a3a97b3ec24b6d1456", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01e3391a9085119eea88593f6b6a766294ee3631/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01e3391a9085119eea88593f6b6a766294ee3631/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=01e3391a9085119eea88593f6b6a766294ee3631", "patch": "@@ -7534,32 +7534,40 @@\n    && rtx_equal_p (operands[2], operands[0])\"\n   \"vextract<shuffletype>32x4\\t{$0x1, %1, %0%{%3%}|%0%{%3%}, %1, 0x1}\"\n   [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"vec_extract_hi_<mode><mask_name>\"\n-  [(set (match_operand:<ssehalfvecmode> 0 \"<store_mask_predicate>\" \"=<store_mask_constraint>\")\n+(define_insn \"vec_extract_hi_<mode>_mask\"\n+  [(set (match_operand:<ssehalfvecmode> 0 \"register_operand\" \"=v\")\n+\t(vec_merge:<ssehalfvecmode>\n+\t  (vec_select:<ssehalfvecmode>\n+\t    (match_operand:VI4F_256 1 \"register_operand\" \"v\")\n+\t    (parallel [(const_int 4) (const_int 5)\n+\t\t       (const_int 6) (const_int 7)]))\n+\t  (match_operand:<ssehalfvecmode> 2 \"vector_move_operand\" \"0C\")\n+\t  (match_operand:<avx512fmaskmode> 3 \"register_operand\" \"Yk\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vextract<shuffletype>32x4\\t{$0x1, %1, %0%{%3%}%N2|%0%{%3%}%N2, %1, 0x1}\"\n+  [(set_attr \"type\" \"sselog1\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"vec_extract_hi_<mode>\"\n+  [(set (match_operand:<ssehalfvecmode> 0 \"nonimmediate_operand\" \"=xm, vm\")\n \t(vec_select:<ssehalfvecmode>\n-\t  (match_operand:VI4F_256 1 \"register_operand\" \"v\")\n+\t  (match_operand:VI4F_256 1 \"register_operand\" \"x, v\")\n \t  (parallel [(const_int 4) (const_int 5)\n \t\t     (const_int 6) (const_int 7)])))]\n-  \"TARGET_AVX && <mask_avx512vl_condition>\"\n-{\n-  if (TARGET_AVX512VL)\n-    return \"vextract<shuffletype>32x4\\t{$0x1, %1, %0<mask_operand2>|%0<mask_operand2>, %1, 0x1}\";\n-  else\n-    return \"vextract<i128>\\t{$0x1, %1, %0|%0, %1, 0x1}\";\n-}\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n+  \"TARGET_AVX\"\n+  \"@\n+    vextract<i128>\\t{$0x1, %1, %0|%0, %1, 0x1}\n+    vextract<shuffletype>32x4\\t{$0x1, %1, %0|%0, %1, 0x1}\"\n+  [(set_attr \"isa\" \"*, avx512vl\")\n+   (set_attr \"prefix\" \"vex, evex\")\n+   (set_attr \"type\" \"sselog1\")\n    (set_attr \"length_immediate\" \"1\")\n-   (set (attr \"prefix\")\n-     (if_then_else\n-       (match_test \"TARGET_AVX512VL\")\n-     (const_string \"evex\")\n-     (const_string \"vex\")))\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn_and_split \"vec_extract_lo_v32hi\""}, {"sha": "26313f44062f35a5100cdfc9d07971e70c5f0a12", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vextractf32x4-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01e3391a9085119eea88593f6b6a766294ee3631/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vextractf32x4-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01e3391a9085119eea88593f6b6a766294ee3631/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vextractf32x4-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vextractf32x4-1.c?ref=01e3391a9085119eea88593f6b6a766294ee3631", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"vextractf32x4\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vextractf(?:128|32x4)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n /* { dg-final { scan-assembler-times \"vextractf32x4\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"vextractf32x4\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n "}]}