{"sha": "d7d2303533b184f5ac4faee20c09f78e19ef3c1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdkMjMwMzUzM2IxODRmNWFjNGZhZWUyMGMwOWY3OGUxOWVmM2MxYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-04-25T23:52:13Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-04-25T23:52:13Z"}, "message": "Fix typo in comment.\n\nFrom-SVN: r81169", "tree": {"sha": "78602d5697f3cbe7a3f2e1501e546b12aa2ee341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78602d5697f3cbe7a3f2e1501e546b12aa2ee341"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7d2303533b184f5ac4faee20c09f78e19ef3c1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7d2303533b184f5ac4faee20c09f78e19ef3c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7d2303533b184f5ac4faee20c09f78e19ef3c1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7d2303533b184f5ac4faee20c09f78e19ef3c1a/comments", "author": null, "committer": null, "parents": [{"sha": "d743b2b6b10e83fa4b0fd794e764a5dec01c9094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d743b2b6b10e83fa4b0fd794e764a5dec01c9094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d743b2b6b10e83fa4b0fd794e764a5dec01c9094"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0c40ded8f97ebc8816b0ef5d78482cc1182df522", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7d2303533b184f5ac4faee20c09f78e19ef3c1a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7d2303533b184f5ac4faee20c09f78e19ef3c1a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d7d2303533b184f5ac4faee20c09f78e19ef3c1a", "patch": "@@ -5510,7 +5510,7 @@ get_inner_reference (tree exp, HOST_WIDE_INT *pbitsize,\n \t\t\t\t index, low_bound));\n \n \t  /* If the index has a self-referential type, instantiate it with\n-\t     the object; likewise fkor the component size.  */\n+\t     the object; likewise for the component size.  */\n \t  index = SUBSTITUTE_PLACEHOLDER_IN_EXPR (index, exp);\n \t  unit_size = SUBSTITUTE_PLACEHOLDER_IN_EXPR (unit_size, array);\n \t  offset = size_binop (PLUS_EXPR, offset,"}]}