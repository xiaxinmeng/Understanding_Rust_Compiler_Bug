{"sha": "3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZjNTAzN2JkMWY4YjU5YWIwODMxNWZmMGZhMzMxOGI2MzI0ZTNiYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-04-08T13:05:50Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-04-08T13:05:50Z"}, "message": "* search.c (template_self_reference_p): Tweak.\n\nFrom-SVN: r26296", "tree": {"sha": "7c51983ce1d5527dc6f48550f7c1b1170b35d1ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c51983ce1d5527dc6f48550f7c1b1170b35d1ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/comments", "author": null, "committer": null, "parents": [{"sha": "c86e69b2f952249f97b562c25050613fe0be40c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86e69b2f952249f97b562c25050613fe0be40c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c86e69b2f952249f97b562c25050613fe0be40c1"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "21cf5a909f9ec74d9145bc441aab499db732d946", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba", "patch": "@@ -1,3 +1,12 @@\n+1999-04-08  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* search.c (template_self_reference_p): Tweak.\n+\n+1999-04-07  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* init.c (build_offset_ref): Don't build yet another weird data\n+\tstructure to describe overloaded functions.\n+\n 1999-04-06  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (BASELINK_P): New macro."}, {"sha": "c51815f1dcf17290872bb649aca07d3fbbb8acbe", "filename": "gcc/cp/init.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba", "patch": "@@ -1572,7 +1572,7 @@ build_offset_ref (type, name)\n \n   /* A lot of this logic is now handled in lookup_field and\n      lookup_fnfield.  */\n-  if (member && TREE_CODE (member) == TREE_LIST)\n+  if (member && BASELINK_P (member))\n     {\n       /* Go from the TREE_BASELINK to the member function info.  */\n       tree fnfields = member;\n@@ -1627,9 +1627,8 @@ build_offset_ref (type, name)\n \t  && ! allocation_temporary_p ())\n \tfnfields = copy_list (fnfields);\n \n-      t = build_tree_list (error_mark_node, fnfields);\n-      TREE_TYPE (t) = build_offset_type (type, unknown_type_node);\n-      return t;\n+      TREE_TYPE (fnfields) = build_offset_type (type, unknown_type_node);\n+      return fnfields;\n     }\n \n   t = member;"}, {"sha": "4b90e7ebc76be2f044aa5f81ebf1806b9577b2b6", "filename": "gcc/cp/search.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba", "patch": "@@ -1190,6 +1190,7 @@ template_self_reference_p (type, decl)\n      tree decl;\n {\n   return  (CLASSTYPE_USE_TEMPLATE (type)\n+\t   && PRIMARY_TEMPLATE_P (CLASSTYPE_TI_TEMPLATE (type))\n \t   && TREE_CODE (decl) == TYPE_DECL\n \t   && DECL_ARTIFICIAL (decl)\n \t   && DECL_NAME (decl) == constructor_name (type));"}, {"sha": "6b547ae912efa562015e9642b9b4d532da5206cc", "filename": "gcc/testsuite/g++.old-deja/g++.other/sizeof1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsizeof1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsizeof1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsizeof1.C?ref=3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba", "patch": "@@ -0,0 +1,12 @@\n+// Build don't link:\n+// Origin: Jason Merrill <jason@cygnus.com>\n+\n+struct X {\n+  int f ();\n+  int f (int);\n+};\n+\n+void f(int i)\n+{\n+  i = sizeof(X::f); // ERROR - cannot take sizeof a member function\n+}"}, {"sha": "d178a406fb24853e3d0b42e739aeb6676455b87c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash34.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash34.C?ref=3fc5037bd1f8b59ab08315ff0fa3318b6324e3ba", "patch": "@@ -0,0 +1,20 @@\n+// Build don't link:\n+// Origin: Theodore Papadopoulo <Theodore.Papadopoulo@sophia.inria.fr>\n+\n+template <class T>\n+class A {\n+public:\n+        class B { };\n+        class C: public B {\n+        public:\n+                C(A&):B() { }\n+        };\n+        C f() { return C(*this); }\n+};\n+\n+int\n+main()\n+{\n+        A<int> a;\n+        a.f();\n+}"}]}