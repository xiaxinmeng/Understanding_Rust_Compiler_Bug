{"sha": "84f0ace0642a089725b994a15c3fe799f61b6403", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRmMGFjZTA2NDJhMDg5NzI1Yjk5NGExNWMzZmU3OTlmNjFiNjQwMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-04-24T18:49:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-04-24T18:49:51Z"}, "message": "dwarf2.h (enum dwarf_attribute): Add DW_AT_GNU_vector.\n\n        * dwarf2.h (enum dwarf_attribute): Add DW_AT_GNU_vector.\n        * dwarf2out.c (dwarf_attr_name): Support it.\n        (gen_array_type_die): Emit it.\n        (lookup_type_die): No special handling for VECTOR_TYPE.\n        (gen_type_die): Hand VECTOR_TYPE off to gen_array_type_die.\n\nFrom-SVN: r52724", "tree": {"sha": "7d4e2f6a38aea2957284229abf82a028d629658e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d4e2f6a38aea2957284229abf82a028d629658e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84f0ace0642a089725b994a15c3fe799f61b6403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f0ace0642a089725b994a15c3fe799f61b6403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84f0ace0642a089725b994a15c3fe799f61b6403", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f0ace0642a089725b994a15c3fe799f61b6403/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "120eaf28cd945e6c0a8cc02bc275c4e6dd614116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120eaf28cd945e6c0a8cc02bc275c4e6dd614116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120eaf28cd945e6c0a8cc02bc275c4e6dd614116"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "5cb9f192b2401341bcaaf5c175d8200750994ed4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f0ace0642a089725b994a15c3fe799f61b6403/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f0ace0642a089725b994a15c3fe799f61b6403/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84f0ace0642a089725b994a15c3fe799f61b6403", "patch": "@@ -1,3 +1,11 @@\n+2002-04-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2.h (enum dwarf_attribute): Add DW_AT_GNU_vector.\n+\t* dwarf2out.c (dwarf_attr_name): Support it.\n+\t(gen_array_type_die): Emit it.\n+\t(lookup_type_die): No special handling for VECTOR_TYPE.\n+\t(gen_type_die): Hand VECTOR_TYPE off to gen_array_type_die.\n+\n 2002-04-24  Richard Henderson  <rth@redhat.com>\n \n \t* config/mips/mips.md (movdi_usd): Renumber."}, {"sha": "a84eb2cabd1c0a7188dbb350340e67d005eea7aa", "filename": "gcc/dwarf2.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f0ace0642a089725b994a15c3fe799f61b6403/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f0ace0642a089725b994a15c3fe799f61b6403/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=84f0ace0642a089725b994a15c3fe799f61b6403", "patch": "@@ -239,6 +239,7 @@ enum dwarf_attribute\n     DW_AT_src_coords = 0x2104,\n     DW_AT_body_begin = 0x2105,\n     DW_AT_body_end   = 0x2106,\n+    DW_AT_GNU_vector = 0x2107,\n     /* VMS Extensions.  */\n     DW_AT_VMS_rtnbeg_pd_address = 0x2201\n   };"}, {"sha": "71c54e9eb4442075e35fb18db0f852c5000d8e43", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84f0ace0642a089725b994a15c3fe799f61b6403/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84f0ace0642a089725b994a15c3fe799f61b6403/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=84f0ace0642a089725b994a15c3fe799f61b6403", "patch": "@@ -4171,6 +4171,9 @@ dwarf_attr_name (attr)\n       return \"DW_AT_body_begin\";\n     case DW_AT_body_end:\n       return \"DW_AT_body_end\";\n+    case DW_AT_GNU_vector:\n+      return \"DW_AT_GNU_vector\";\n+\n     case DW_AT_VMS_rtnbeg_pd_address:\n       return \"DW_AT_VMS_rtnbeg_pd_address\";\n \n@@ -5111,9 +5114,6 @@ static inline dw_die_ref\n lookup_type_die (type)\n      tree type;\n {\n-  if (TREE_CODE (type) == VECTOR_TYPE)\n-    type = TYPE_DEBUG_REPRESENTATION_TYPE (type);\n-\n   return (dw_die_ref) TYPE_SYMTAB_POINTER (type);\n }\n \n@@ -9767,6 +9767,16 @@ gen_array_type_die (type, context_die)\n #endif\n \n   array_die = new_die (DW_TAG_array_type, scope_die, type);\n+  add_name_attribute (array_die, type_tag (type));\n+  equate_type_number_to_die (type, array_die);\n+\n+  if (TREE_CODE (type) == VECTOR_TYPE)\n+    {\n+      /* The frontend feeds us a representation for the vector as a struct\n+\t containing an array.  Pull out the array type.  */\n+      type = TREE_TYPE (TYPE_FIELDS (TYPE_DEBUG_REPRESENTATION_TYPE (type)));\n+      add_AT_flag (array_die, DW_AT_GNU_vector, 1);\n+    }\n \n #if 0\n   /* We default the array ordering.  SDB will probably do\n@@ -9788,9 +9798,6 @@ gen_array_type_die (type, context_die)\n #endif\n     add_subscript_info (array_die, type);\n \n-  add_name_attribute (array_die, type_tag (type));\n-  equate_type_number_to_die (type, array_die);\n-\n   /* Add representation of the type of the elements of this array type.  */\n   element_type = TREE_TYPE (type);\n \n@@ -11133,7 +11140,7 @@ gen_type_die (type, context_die)\n       break;\n \n     case VECTOR_TYPE:\n-      gen_type_die (TYPE_DEBUG_REPRESENTATION_TYPE (type), context_die);\n+      gen_array_type_die (type, context_die);\n       break;\n \n     case ENUMERAL_TYPE:"}]}