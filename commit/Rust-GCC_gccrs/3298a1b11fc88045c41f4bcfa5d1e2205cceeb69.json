{"sha": "3298a1b11fc88045c41f4bcfa5d1e2205cceeb69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI5OGExYjExZmM4ODA0NWM0MWY0YmNmYTVkMWUyMjA1Y2NlZWI2OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-16T13:51:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-16T13:51:43Z"}, "message": "(memref_referenced_p, case REG): Fix last change.\n\nFrom-SVN: r11020", "tree": {"sha": "d92f41f1190dc26ce3d3e79bc91b68dd9d8e6106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d92f41f1190dc26ce3d3e79bc91b68dd9d8e6106"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3298a1b11fc88045c41f4bcfa5d1e2205cceeb69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3298a1b11fc88045c41f4bcfa5d1e2205cceeb69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3298a1b11fc88045c41f4bcfa5d1e2205cceeb69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3298a1b11fc88045c41f4bcfa5d1e2205cceeb69/comments", "author": null, "committer": null, "parents": [{"sha": "36102b210e815f60c40aa39f00bac65b80158b33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36102b210e815f60c40aa39f00bac65b80158b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36102b210e815f60c40aa39f00bac65b80158b33"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c36aca8948b4b3bd70153618b3e2130932ccb181", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3298a1b11fc88045c41f4bcfa5d1e2205cceeb69/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3298a1b11fc88045c41f4bcfa5d1e2205cceeb69/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=3298a1b11fc88045c41f4bcfa5d1e2205cceeb69", "patch": "@@ -625,8 +625,8 @@ memref_referenced_p (memref, x)\n       return 0;\n \n     case REG:\n-      return (reg_equiv_replacement[REGNO (x)] == 0\n-\t      || memref_referenced_p (memref,\n+      return (reg_equiv_replacement[REGNO (x)]\n+\t      && memref_referenced_p (memref,\n \t\t\t\t      reg_equiv_replacement[REGNO (x)]));\n \n     case MEM:"}]}