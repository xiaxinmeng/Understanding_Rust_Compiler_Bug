{"sha": "8f479d7a35a79603defb5932b46114e73556c9a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY0NzlkN2EzNWE3OTYwM2RlZmI1OTMyYjQ2MTE0ZTczNTU2YzlhOQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2018-04-27T19:14:05Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2018-04-27T19:14:05Z"}, "message": "re PR libgcc/84292 (__sync_add_and_fetch returns the old value instead of the new value)\n\n2018-04-27  Andreas Tobler  <andreast@gcc.gnu.org>\n\t    Maryse Levavasseur <maryse.levavasseur@stormshield.eu>\n\n\tPR libgcc/84292\n\t* config/arm/freebsd-atomic.c (SYNC_OP_AND_FETCH_N): Fix the\n\top_and_fetch to return the right result.\n\nCo-Authored-By: Maryse Levavasseur <maryse.levavasseur@stormshield.eu>\n\nFrom-SVN: r259722", "tree": {"sha": "827825a0344d9719e98120f1c1acdfadf12ee6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/827825a0344d9719e98120f1c1acdfadf12ee6aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f479d7a35a79603defb5932b46114e73556c9a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f479d7a35a79603defb5932b46114e73556c9a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f479d7a35a79603defb5932b46114e73556c9a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f479d7a35a79603defb5932b46114e73556c9a9/comments", "author": null, "committer": null, "parents": [{"sha": "66bd30863fe5673f902fa64a1af0a47f4911fdd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66bd30863fe5673f902fa64a1af0a47f4911fdd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66bd30863fe5673f902fa64a1af0a47f4911fdd2"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "7fcf2fb9d61e406044f12dc3dcfdb38d6e5b8706", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f479d7a35a79603defb5932b46114e73556c9a9/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f479d7a35a79603defb5932b46114e73556c9a9/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=8f479d7a35a79603defb5932b46114e73556c9a9", "patch": "@@ -1,3 +1,10 @@\n+2018-04-27  Andreas Tobler  <andreast@gcc.gnu.org>\n+\t    Maryse Levavasseur <maryse.levavasseur@stormshield.eu>\n+\n+\tPR libgcc/84292\n+\t* config/arm/freebsd-atomic.c (SYNC_OP_AND_FETCH_N): Fix the\n+\top_and_fetch to return the right result.\n+\n 2018-04-27  Alan Modra  <amodra@gmail.com>\n \n \tPR libgcc/85532\n@@ -526,7 +533,6 @@\n \t* config/i386/t-msabi: Modified to add avx and sse versions of stubs.\n \n 2017-09-01  Olivier Hainque  <hainque@adacore.com>\n-\n \t* config.host (*-*-vxworks7): Widen scope to vxworks7*.\n \n 2017-08-31  Olivier Hainque  <hainque@adacore.com>"}, {"sha": "77618da7cf639534f024b27d5d935e0d4745d5d0", "filename": "libgcc/config/arm/freebsd-atomic.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f479d7a35a79603defb5932b46114e73556c9a9/libgcc%2Fconfig%2Farm%2Ffreebsd-atomic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f479d7a35a79603defb5932b46114e73556c9a9/libgcc%2Fconfig%2Farm%2Ffreebsd-atomic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Ffreebsd-atomic.c?ref=8f479d7a35a79603defb5932b46114e73556c9a9", "patch": "@@ -171,32 +171,32 @@ __sync_fetch_and_##NAME##_##N (TYPE *mem, TYPE val)\t       \t\t\\\n \n #define\tSYNC_OP_AND_FETCH_N(N, TYPE, LDR, STR, NAME, OP)\t\t\\\n TYPE HIDDEN   \t\t\t\t\t\t\t\t\\\n-__sync_##NAME##_and_fetch_##N (TYPE *mem, TYPE val)\t       \t\t\\\n+__sync_##NAME##_and_fetch_##N (TYPE *mem, TYPE val)\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-        unsigned int old, temp, ras_start;                              \\\n+        unsigned int old, temp, ras_start, res;                         \\\n                                                                         \\\n         ras_start = ARM_RAS_START;\t\t\t\t\t\\\n         __asm volatile (\t\t\t\t\t\t\\\n                 /* Set up Restartable Atomic Sequence.  */\t\t\\\n                 \"1:\"\t\t\t\t\t\t\t\\\n                 \"\\tadr   %2, 1b\\n\"\t\t\t\t\t\\\n-                \"\\tstr   %2, [%5]\\n\"\t\t\t\t\t\\\n+                \"\\tstr   %2, [%6]\\n\"\t\t\t\t\t\\\n                 \"\\tadr   %2, 2f\\n\"\t\t\t\t\t\\\n-                \"\\tstr   %2, [%5, #4]\\n\"\t\t\t\t\\\n+                \"\\tstr   %2, [%6, #4]\\n\"\t\t\t\t\\\n                                                                         \\\n-                \"\\t\"LDR\" %0, %4\\n\"\t/* Load old value.  */\t\t\\\n-                \"\\t\"OP\"  %2, %0, %3\\n\"\t/* Calculate new value.  */\t\\\n-                \"\\t\"STR\" %2, %1\\n\"\t/* Store new value.  */\t\t\\\n+                \"\\t\"LDR\" %0, %5\\n\"\t/* Load old value.  */\t\t\\\n+                \"\\t\"OP\"  %3, %0, %4\\n\"\t/* Calculate new value.  */\t\\\n+                \"\\t\"STR\" %3, %1\\n\"\t/* Store new value.  */\t\t\\\n                                                                         \\\n                 /* Tear down Restartable Atomic Sequence.  */\t\t\\\n                 \"2:\"\t\t\t\t\t\t\t\\\n                 \"\\tmov   %2, #0x00000000\\n\"\t\t\t\t\\\n-                \"\\tstr   %2, [%5]\\n\"\t\t\t\t\t\\\n+                \"\\tstr   %2, [%6]\\n\"\t\t\t\t\t\\\n                 \"\\tmov   %2, #0xffffffff\\n\"\t\t\t\t\\\n-                \"\\tstr   %2, [%5, #4]\\n\"\t\t\t\t\\\n-                : \"=&r\" (old), \"=m\" (*mem), \"=&r\" (temp)\t\t\\\n+                \"\\tstr   %2, [%6, #4]\\n\"\t\t\t\t\\\n+                : \"=&r\" (old), \"=m\" (*mem), \"=&r\" (temp), \"=&r\" (res)\t\\\n                 : \"r\" (val), \"m\" (*mem), \"r\" (ras_start));\t\t\\\n-        return (old);\t\t\t\t\t\t\t\\\n+        return (res);\t\t\t\t\t\t\t\\\n }\n \n #define\tEMIT_ALL_OPS_N(N, TYPE, LDR, STR, STREQ)\t\t\t\\"}]}