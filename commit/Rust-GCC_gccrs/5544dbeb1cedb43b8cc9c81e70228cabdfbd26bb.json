{"sha": "5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU0NGRiZWIxY2VkYjQzYjhjYzljODFlNzAyMjhjYWJkZmJkMjZiYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-08T23:22:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-08T23:22:45Z"}, "message": "cvt.c (maybe_warn_nodiscard): Add workaround for GCC 3.4-4.4 - cast msg to (const char *) in conditional...\n\n\t* cvt.c (maybe_warn_nodiscard): Add workaround for GCC 3.4-4.4 - cast\n\tmsg to (const char *) in conditional expressions.  Formatting fixes.\n\nFrom-SVN: r279101", "tree": {"sha": "53b891203c5efddb45445387fb7d8add06ab4fb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53b891203c5efddb45445387fb7d8add06ab4fb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0d169d17a275c66e6e59d843097aa1a9a87d918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d169d17a275c66e6e59d843097aa1a9a87d918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d169d17a275c66e6e59d843097aa1a9a87d918"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "a3fe71e222d9f2e50df19d7c9532a1939ceed850", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb", "patch": "@@ -1,3 +1,8 @@\n+2019-12-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cvt.c (maybe_warn_nodiscard): Add workaround for GCC 3.4-4.4 - cast\n+\tmsg to (const char *) in conditional expressions.  Formatting fixes.\n+\n 2019-12-07  Jason Merrill  <jason@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "e922e4d9b893e48a2a4fff93c3ed740c2fa2d1ee", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=5544dbeb1cedb43b8cc9c81e70228cabdfbd26bb", "patch": "@@ -1044,12 +1044,13 @@ maybe_warn_nodiscard (tree expr, impl_conv_void implicit)\n       tree args = TREE_VALUE (attr);\n       if (args)\n \tmsg.escape (TREE_STRING_POINTER (TREE_VALUE (args)));\n-      const char* format = (msg ?\n-\tG_(\"ignoring return value of %qD, \"\n-\t   \"declared with attribute %<nodiscard%>: %<%s%>\") :\n-\tG_(\"ignoring return value of %qD, \"\n-\t   \"declared with attribute %<nodiscard%>%s\"));\n-      const char* raw_msg = msg ? msg : \"\";\n+      const char *format\n+\t= (msg\n+\t   ? G_(\"ignoring return value of %qD, \"\n+\t\t\"declared with attribute %<nodiscard%>: %<%s%>\")\n+\t   : G_(\"ignoring return value of %qD, \"\n+\t\t\"declared with attribute %<nodiscard%>%s\"));\n+      const char *raw_msg = msg ? (const char *) msg : \"\";\n       auto_diagnostic_group d;\n       if (warning_at (loc, OPT_Wunused_result, format, fn, raw_msg))\n \tinform (DECL_SOURCE_LOCATION (fn), \"declared here\");\n@@ -1061,12 +1062,13 @@ maybe_warn_nodiscard (tree expr, impl_conv_void implicit)\n       tree args = TREE_VALUE (attr);\n       if (args)\n \tmsg.escape (TREE_STRING_POINTER (TREE_VALUE (args)));\n-      const char* format = msg ?\n-\tG_(\"ignoring returned value of type %qT, \"\n-\t   \"declared with attribute %<nodiscard%>: %<%s%>\") :\n-\tG_(\"ignoring returned value of type %qT, \"\n-\t   \"declared with attribute %<nodiscard%>%s\");\n-      const char* raw_msg = msg ? msg : \"\";\n+      const char *format\n+\t= (msg\n+\t   ? G_(\"ignoring returned value of type %qT, \"\n+\t\t\"declared with attribute %<nodiscard%>: %<%s%>\")\n+\t   : G_(\"ignoring returned value of type %qT, \"\n+\t\t\"declared with attribute %<nodiscard%>%s\"));\n+      const char *raw_msg = msg ? (const char *) msg : \"\";\n       auto_diagnostic_group d;\n       if (warning_at (loc, OPT_Wunused_result, format, rettype, raw_msg))\n \t{"}]}