{"sha": "7f7fb4ef6afe59f0df474b27741fae51e358fd7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y3ZmI0ZWY2YWZlNTlmMGRmNDc0YjI3NzQxZmFlNTFlMzU4ZmQ3Yw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-02-03T01:26:12Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-02-03T01:26:12Z"}, "message": "howto.html: Move verbose terminate documentation...\n\n\n2004-02-02  Benjamin Kosnik  <bkoz@redhat.com>\n\n        * docs/html/19_diagnostics/howto.html: Move verbose terminate\n        documentation...\n        * docs/html/18_support/howto.html: Here.\n        * docs/html/documentation.html: Add reference here.\n\nFrom-SVN: r77150", "tree": {"sha": "4f2e5d9085ead854d37b60439633afe6e37d93ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f2e5d9085ead854d37b60439633afe6e37d93ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f7fb4ef6afe59f0df474b27741fae51e358fd7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7fb4ef6afe59f0df474b27741fae51e358fd7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f7fb4ef6afe59f0df474b27741fae51e358fd7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7fb4ef6afe59f0df474b27741fae51e358fd7c/comments", "author": null, "committer": null, "parents": [{"sha": "040333a7ca1c7188f625da630f99a829e12b8cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040333a7ca1c7188f625da630f99a829e12b8cca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040333a7ca1c7188f625da630f99a829e12b8cca"}], "stats": {"total": 166, "additions": 86, "deletions": 80}, "files": [{"sha": "751858f962bd9776ece9b5d515af9cfe25074eae", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7fb4ef6afe59f0df474b27741fae51e358fd7c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7fb4ef6afe59f0df474b27741fae51e358fd7c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7f7fb4ef6afe59f0df474b27741fae51e358fd7c", "patch": "@@ -1,3 +1,10 @@\n+2004-02-02  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+        * docs/html/19_diagnostics/howto.html: Move verbose terminate\n+        documentation...\n+        * docs/html/18_support/howto.html: Here. \n+        * docs/html/documentation.html: Add reference here.\n+ \n 2004-02-02  Paolo Carlini  <pcarlini@suse.de>\n \n \t* config/locale/gnu/c++locale_internal.h: Remove prototypes"}, {"sha": "35fd9305022eb22d78320ae8a29642877a608f59", "filename": "libstdc++-v3/docs/html/18_support/howto.html", "status": "modified", "additions": 76, "deletions": 7, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7fb4ef6afe59f0df474b27741fae51e358fd7c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7fb4ef6afe59f0df474b27741fae51e358fd7c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F18_support%2Fhowto.html?ref=7f7fb4ef6afe59f0df474b27741fae51e358fd7c", "patch": "@@ -42,8 +42,9 @@ <h1>Contents</h1>\n    <li><a href=\"#1\">Types</a></li>\n    <li><a href=\"#2\">Implementation properties</a></li>\n    <li><a href=\"#3\">Start and Termination</a></li>\n-   <li><a href=\"#4\">Dynamic memory management</a></li>\n-   <li><a href=\"#5\">RTTI, the ABI, and demangling</a></li>\n+   <li><a href=\"#4\">Verbose <code>terminate</code></a></li>\n+   <li><a href=\"#5\">Dynamic memory management</a></li>\n+   <li><a href=\"#6\">RTTI, the ABI, and demangling</a></li>\n </ul>\n \n <hr />\n@@ -216,10 +217,78 @@ <h2><a name=\"3\">Start and Termination</a></h2>\n    </p>\n \n <hr />\n-<h2><a name=\"4\">Dynamic memory management</a></h2>\n-   <p>There are six flavors each of <code>new</code> and <code>delete</code>, so\n-      make certain that you're using the right ones!  Here are quickie\n-      descriptions of <code>new</code>:\n+<h2><a name=\"4\">Verbose <code>terminate</code></a></h2>\n+   <p>If you are having difficulty with uncaught exceptions and want a\n+      little bit of help debugging the causes of the core dumps, you can\n+      make use of a GNU extension in GCC 3.1 and later:\n+   </p>\n+   <pre>\n+   #include &lt;exception&gt;\n+\n+   int main()\n+   {\n+       std::set_terminate(__gnu_cxx::__verbose_terminate_handler);\n+       ...\n+       throw <em>anything</em>;\n+   }</pre>\n+   <p>The <code> __verbose_terminate_handler </code> function obtains the name\n+      of the current exception, attempts to demangle it, and prints it to\n+      stderr.  If the exception is derived from <code> std::exception </code>\n+      then the output from <code>what()</code> will be included.\n+   </p>\n+   <p>Any replacement termination function is required to kill the program\n+      without returning; this one calls abort.\n+   </p>\n+   <p>For example:\n+   </p>\n+   <pre>\n+   #include &lt;exception&gt;\n+   #include &lt;stdexcept&gt;\n+\n+   struct argument_error : public std::runtime_error\n+   {  \n+     argument_error(const std::string& s): std::runtime_error(s) { }\n+   };\n+\n+   int main(int argc)\n+   {\n+     std::set_terminate(__gnu_cxx::__verbose_terminate_handler);\n+     if (argc &gt; 5)\n+       throw argument_error(&quot;argc is greater than 5!&quot;);\n+     else\n+       throw argc;\n+   }\n+   </pre>\n+   <p>In GCC 3.1 and later, this gives\n+   </p>\n+   <pre>\n+   % ./a.out\n+   terminate called after throwing a `int'\n+   Aborted\n+   % ./a.out f f f f f f f f f f f\n+   terminate called after throwing an instance of `argument_error'\n+   what(): argc is greater than 5!\n+   Aborted\n+   %</pre>\n+   <p>The 'Aborted' line comes from the call to abort(), of course.\n+   </p>\n+   <p><strong>UPDATE:</strong> Starting with GCC 3.4, this is the default\n+      termination handler; nothing need be done to use it.  To go back to\n+      the previous &quot;silent death&quot; method, simply include\n+      <code>&lt;exception&gt;</code> and <code>&lt;cstdlib&gt;</code>,\n+      and call\n+   </p>\n+   <pre>\n+       std::set_terminate(std::abort);</pre>\n+   <p>Return <a href=\"#top\">to top of page</a> or\n+      <a href=\"../faq/index.html\">to the FAQ</a>.\n+   </p>\n+\n+<hr />\n+<h2><a name=\"5\">Dynamic memory management</a></h2>\n+   <p>There are six flavors each of <code>new</code> and\n+      <code>delete</code>, so make certain that you're using the right\n+      ones!  Here are quickie descriptions of <code>new</code>:\n         </p>\n    <ul>\n       <li>single object form, throwing a <code>bad_alloc</code> on errors;\n@@ -277,7 +346,7 @@ <h2><a name=\"4\">Dynamic memory management</a></h2>\n    </p>\n \n <hr />\n-<h2><a name=\"5\">RTTI, the ABI, and demangling</a></h2>\n+<h2><a name=\"6\">RTTI, the ABI, and demangling</a></h2>\n    <p>If you have read the <a href=\"../documentation.html#4\">source\n       documentation</a> for <code> namespace abi </code> then you are aware\n       of the cross-vendor C++ ABI which we use.  One of the exposed"}, {"sha": "4cd2dc783718969c8f03b491d805a09d276f7429", "filename": "libstdc++-v3/docs/html/19_diagnostics/howto.html", "status": "modified", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7fb4ef6afe59f0df474b27741fae51e358fd7c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7fb4ef6afe59f0df474b27741fae51e358fd7c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F19_diagnostics%2Fhowto.html?ref=7f7fb4ef6afe59f0df474b27741fae51e358fd7c", "patch": "@@ -38,7 +38,6 @@ <h1>Contents</h1>\n    <li><a href=\"#1\">Adding data to exceptions</a></li>\n    <li><a href=\"#2\">Exception class hierarchy diagram</a></li>\n    <li><a href=\"#3\">Concept checkers -- <strong>new and improved!</strong></a></li>\n-   <li><a href=\"#4\">Verbose <code>terminate</code></a></li>\n </ul>\n \n <hr />\n@@ -121,75 +120,6 @@ <h2><a name=\"3\">Concept checkers -- <strong>new and improved!</strong></a></h2>\n       <a href=\"../faq/index.html\">to the FAQ</a>.\n    </p>\n \n-<hr />\n-<h2><a name=\"4\">Verbose <code>terminate</code></a></h2>\n-   <p>If you are having difficulty with uncaught exceptions and want a\n-      little bit of help debugging the causes of the core dumps, you can\n-      make use of a GNU extension in GCC 3.1 and later:\n-   </p>\n-   <pre>\n-   #include &lt;exception&gt;\n-\n-   int main()\n-   {\n-       std::set_terminate (__gnu_cxx::__verbose_terminate_handler);\n-       ...\n-       throw <em>anything</em>;\n-   }</pre>\n-   <p>The <code> __verbose_terminate_handler </code> function obtains the name\n-      of the current exception, attempts to demangle it, and prints it to\n-      stderr.  If the exception is derived from <code> std::exception </code>\n-      then the output from <code>what()</code> will be included.\n-   </p>\n-   <p>Any replacement termination function is required to kill the program\n-      without returning; this one calls abort.\n-   </p>\n-   <p>For example:\n-   </p>\n-   <pre>\n-   #include &lt;exception&gt;\n-   #include &lt;stdexcept&gt;\n-\n-   struct BLARGH : std::runtime_error\n-   {\n-       BLARGH (const string&amp; whatarg)\n-           : std::runtime_error(whatarg) { }\n-   };\n-\n-   int main (int argc)\n-   {\n-       std::set_terminate (__gnu_cxx::__verbose_terminate_handler);\n-       if (argc &gt; 5)\n-           throw BLARGH(&quot;argc is greater than 5!&quot;);\n-       else\n-           throw argc;\n-   }</pre>\n-   <p>In GCC 3.1 and later, this gives\n-   </p>\n-   <pre>\n-   % ./a.out\n-   terminate called after throwing a `int'\n-   Aborted\n-   % ./a.out f f f f f f f f f f f\n-   terminate called after throwing a `BLARGH'\n-   what(): argc is greater than 5!\n-   Aborted\n-   %</pre>\n-   <p>The 'Aborted' line comes from the call to abort(), of course.\n-   </p>\n-   <p><strong>UPDATE:</strong> Starting with GCC 3.4, this is the default\n-      termination handler; nothing need be done to use it.  To go back to\n-      the previous &quot;silent death&quot; method, simply include\n-      <code>&lt;exception&gt;</code> and <code>&lt;cstdlib&gt;</code>,\n-      and call\n-   </p>\n-   <pre>\n-       std::set_terminate (std::abort);</pre>\n-   <p>Return <a href=\"#top\">to top of page</a> or\n-      <a href=\"../faq/index.html\">to the FAQ</a>.\n-   </p>\n-\n-\n <!-- ####################################################### -->\n \n <hr />"}, {"sha": "ceb60764e1069719529ced6bf0f1480cbd38ecad", "filename": "libstdc++-v3/docs/html/documentation.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f7fb4ef6afe59f0df474b27741fae51e358fd7c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f7fb4ef6afe59f0df474b27741fae51e358fd7c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html?ref=7f7fb4ef6afe59f0df474b27741fae51e358fd7c", "patch": "@@ -125,8 +125,9 @@ <h2><a name=\"3\">Chapter-Specific Documentation</a></h2>\n      <li><a href=\"18_support/howto.html#1\">Types</a></li>\n      <li><a href=\"18_support/howto.html#2\">Implementation properties</a></li>\n      <li><a href=\"18_support/howto.html#3\">Start and Termination</a></li>\n-     <li><a href=\"18_support/howto.html#4\">Dynamic memory management</a></li>\n-     <li><a href=\"18_support/howto.html#5\">RTTI, the ABI, and demangling</a></li>\n+     <li><a href=\"18_support/howto.html#4\">Verbose <code>terminate</code></a></li>\n+     <li><a href=\"18_support/howto.html#6\">Dynamic memory management</a></li>\n+     <li><a href=\"18_support/howto.html#7\">RTTI, the ABI, and demangling</a></li>\n    </ul>\n    </li>\n \n@@ -135,7 +136,6 @@ <h2><a name=\"3\">Chapter-Specific Documentation</a></h2>\n      <li><a href=\"19_diagnostics/howto.html#1\">Adding data to exceptions</a></li>\n      <li><a href=\"19_diagnostics/howto.html#2\">Exception class hierarchy diagram</a></li>\n      <li><a href=\"19_diagnostics/howto.html#3\">Concept checkers -- <strong>new and improved!</strong></a></li>\n-     <li><a href=\"19_diagnostics/howto.html#4\">Verbose <code>terminate</code></a></li>\n    </ul>\n    </li>\n "}]}