{"sha": "d4d21a01033746a16474156ce30342683afefe3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRkMjFhMDEwMzM3NDZhMTY0NzQxNTZjZTMwMzQyNjgzYWZlZmUzYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-03-22T15:13:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-03-22T15:13:46Z"}, "message": "re PR libstdc++/26777 (sync_with_stdio(false) triggers bug with sgetc and pubseekoff)\n\n2006-03-22  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/26777\n\t* include/bits/fstream.tcc (basic_filebuf<>::_M_seek): Check\n\tthe return value of _M_file.seekoff.\n\t* testsuite/27_io/basic_filebuf/seekoff/char/26777.cc: New.\n\nFrom-SVN: r112286", "tree": {"sha": "23c99d78978096a0b5127b46241f21d4d182b031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23c99d78978096a0b5127b46241f21d4d182b031"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4d21a01033746a16474156ce30342683afefe3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d21a01033746a16474156ce30342683afefe3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4d21a01033746a16474156ce30342683afefe3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4d21a01033746a16474156ce30342683afefe3b/comments", "author": null, "committer": null, "parents": [{"sha": "f328a23a4650e984e5b3fd92ca0c8daf2f81be00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f328a23a4650e984e5b3fd92ca0c8daf2f81be00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f328a23a4650e984e5b3fd92ca0c8daf2f81be00"}], "stats": {"total": 110, "additions": 103, "deletions": 7}, "files": [{"sha": "8a090575a58112505d299dc15f4fb95b442592a2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d21a01033746a16474156ce30342683afefe3b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d21a01033746a16474156ce30342683afefe3b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d4d21a01033746a16474156ce30342683afefe3b", "patch": "@@ -1,3 +1,10 @@\n+2006-03-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/26777\n+\t* include/bits/fstream.tcc (basic_filebuf<>::_M_seek): Check\n+\tthe return value of _M_file.seekoff.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/26777.cc: New.\n+\n 2006-03-21  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/25482"}, {"sha": "5520f9b6146210b6edba995c12fb59922b2bafef", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d21a01033746a16474156ce30342683afefe3b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d21a01033746a16474156ce30342683afefe3b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=d4d21a01033746a16474156ce30342683afefe3b", "patch": "@@ -1,6 +1,6 @@\n // File based streams -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -740,12 +740,15 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t{\n \t  // Returns pos_type(off_type(-1)) in case of failure.\n \t  __ret = pos_type(_M_file.seekoff(__off, __way));\n-\t  _M_reading = false;\n-\t  _M_writing = false;\n-\t  _M_ext_next = _M_ext_end = _M_ext_buf;\n-\t  _M_set_buffer(-1);\n-\t  _M_state_cur = __state;\n-\t  __ret.state(_M_state_cur);\n+\t  if (__ret != pos_type(off_type(-1)))\n+\t    {\n+\t      _M_reading = false;\n+\t      _M_writing = false;\n+\t      _M_ext_next = _M_ext_end = _M_ext_buf;\n+\t      _M_set_buffer(-1);\n+\t      _M_state_cur = __state;\n+\t      __ret.state(_M_state_cur);\n+\t    }\n \t}\n       return __ret;\n     }"}, {"sha": "7312ce2639f595e2b66364b58f024f584bfdc2b6", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/26777.cc", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4d21a01033746a16474156ce30342683afefe3b/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F26777.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4d21a01033746a16474156ce30342683afefe3b/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F26777.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fseekoff%2Fchar%2F26777.cc?ref=d4d21a01033746a16474156ce30342683afefe3b", "patch": "@@ -0,0 +1,86 @@\n+// { dg-require-fork \"\" }\n+// { dg-require-mkfifo \"\" }\n+\n+// 2006-03-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <testsuite_hooks.h>\n+#include <fstream>\n+#include <sstream>\n+#include <unistd.h>\n+#include <signal.h>\n+#include <fcntl.h>\n+#include <sys/types.h>\n+#include <sys/stat.h>\n+\n+// libstdc++/26777\n+void test01()\n+{\n+  using namespace std;\n+  using namespace __gnu_test;\n+\n+  bool test __attribute__((unused)) = true;\n+\n+  const char* name = \"tmp_fifo6\";\n+\n+  signal(SIGPIPE, SIG_IGN);\n+\n+  unlink(name);  \n+  mkfifo(name, S_IRWXU);\n+  semaphore s1, s2;\n+\n+  int child = fork();\n+  VERIFY( child != -1 );\n+\n+  if (child == 0)\n+    {\n+      filebuf fbout;\n+      fbout.open(name, ios_base::in | ios_base::out);\n+      VERIFY( fbout.is_open() );\n+      fbout.sputn(\"Whatever\", 8);\n+      fbout.pubsync();\n+      s1.signal();\n+      s2.wait();\n+      fbout.close();\n+      s1.signal();\n+      exit(0);\n+    }\n+\n+  filebuf fbin;\n+  fbin.open(name, ios::in);\n+  s1.wait();\n+\n+  fbin.sgetc();\n+  fbin.pubseekoff(0, ios::cur, ios::in);\n+  s2.signal();\n+  s1.wait();\n+\n+  ostringstream oss;\n+  oss << &fbin;\n+  fbin.close();\n+\n+  VERIFY( oss.str() == \"Whatever\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}