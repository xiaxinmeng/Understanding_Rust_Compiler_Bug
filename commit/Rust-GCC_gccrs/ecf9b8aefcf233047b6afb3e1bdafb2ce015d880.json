{"sha": "ecf9b8aefcf233047b6afb3e1bdafb2ce015d880", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNmOWI4YWVmY2YyMzMwNDdiNmFmYjNlMWJkYWZiMmNlMDE1ZDg4MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-24T17:06:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-24T17:06:41Z"}, "message": "re PR lto/43218 ([LTO] Conflicting function types cause ICE)\n\n2010-11-24  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/43218\n\t* lto-symtab.c (lto_cgraph_replace_node): Mark edges with\n\tconflicting function signatures as non-inlineable.\n\n\t* gcc.dg/lto/20100423-1_0.c: Enable for all LTO modes.\n\nFrom-SVN: r167122", "tree": {"sha": "3cd1fcbc2eae962d1529f94d63558293153dcd3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cd1fcbc2eae962d1529f94d63558293153dcd3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d40d51cf5d58f791e23b201b5100c8db4063ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d40d51cf5d58f791e23b201b5100c8db4063ad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d40d51cf5d58f791e23b201b5100c8db4063ad3"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "7dfe5f49b3240cb7db0cec3a62fb0925a07f9424", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecf9b8aefcf233047b6afb3e1bdafb2ce015d880", "patch": "@@ -1,3 +1,9 @@\n+2010-11-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/43218\n+\t* lto-symtab.c (lto_cgraph_replace_node): Mark edges with\n+\tconflicting function signatures as non-inlineable.\n+\n 2010-11-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/46614"}, {"sha": "4484d93f0a249cf2f350e1105b2b845f9c1ce43e", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=ecf9b8aefcf233047b6afb3e1bdafb2ce015d880", "patch": "@@ -210,6 +210,7 @@ lto_cgraph_replace_node (struct cgraph_node *node,\n {\n   struct cgraph_edge *e, *next;\n   bool no_aliases_please = false;\n+  bool compatible_p;\n \n   if (cgraph_dump_file)\n     {\n@@ -240,10 +241,19 @@ lto_cgraph_replace_node (struct cgraph_node *node,\n     }\n \n   /* Redirect all incoming edges.  */\n+  compatible_p\n+    = gimple_types_compatible_p (TREE_TYPE (TREE_TYPE (prevailing_node->decl)),\n+\t\t\t\t TREE_TYPE (TREE_TYPE (node->decl)), GTC_DIAG);\n   for (e = node->callers; e; e = next)\n     {\n       next = e->next_caller;\n       cgraph_redirect_edge_callee (e, prevailing_node);\n+      /* If there is a mismatch between the supposed callee return type and\n+\t the real one do not attempt to inline this function.\n+\t ???  We really need a way to match function signatures for ABI\n+\t compatibility and perform related promotions at inlining time.  */\n+      if (!compatible_p)\n+\te->call_stmt_cannot_inline_p = 1;\n     }\n   /* Redirect incomming references.  */\n   ipa_clone_refering (prevailing_node, NULL, &node->ref_list);"}, {"sha": "475df8f7bf5bcadf0ded0743d2af31557499a32c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ecf9b8aefcf233047b6afb3e1bdafb2ce015d880", "patch": "@@ -1,3 +1,8 @@\n+2010-11-24  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/43218\n+\t* gcc.dg/lto/20100423-1_0.c: Enable for all LTO modes.\n+\n 2010-11-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/46614"}, {"sha": "1963c1fee1758396070c06c9f53cd37ee9c117e7", "filename": "gcc/testsuite/gcc.dg/lto/20100423-1_0.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100423-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf9b8aefcf233047b6afb3e1bdafb2ce015d880/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100423-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20100423-1_0.c?ref=ecf9b8aefcf233047b6afb3e1bdafb2ce015d880", "patch": "@@ -1,5 +1,4 @@\n /* { dg-lto-do run } */\n-/* { dg-lto-options {{-O2 -flto -flto-partition=none}} } */\n \n struct bar {int x;};\n extern struct bar foo(void);"}]}