{"sha": "94eefd2ef77020f87a7787c294b6b01c3e67450a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRlZWZkMmVmNzcwMjBmODdhNzc4N2MyOTRiNmIwMWMzZTY3NDUwYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-08-04T18:50:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T18:50:33Z"}, "message": "exp_ch4.adb (Expand_N_In): Suppress range warnings in instances\n\n2008-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_In): Suppress range warnings in instances\n\nFrom-SVN: r138649", "tree": {"sha": "c105977260b390c93121633263e9152456397edf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c105977260b390c93121633263e9152456397edf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94eefd2ef77020f87a7787c294b6b01c3e67450a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94eefd2ef77020f87a7787c294b6b01c3e67450a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94eefd2ef77020f87a7787c294b6b01c3e67450a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94eefd2ef77020f87a7787c294b6b01c3e67450a/comments", "author": null, "committer": null, "parents": [{"sha": "9b26c96e339b9e546ffe5ac2a114af397bf4cd17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b26c96e339b9e546ffe5ac2a114af397bf4cd17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b26c96e339b9e546ffe5ac2a114af397bf4cd17"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "d0b60f313f7c88a99397fc25376125f499816ea4", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94eefd2ef77020f87a7787c294b6b01c3e67450a/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94eefd2ef77020f87a7787c294b6b01c3e67450a/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=94eefd2ef77020f87a7787c294b6b01c3e67450a", "patch": "@@ -3873,6 +3873,12 @@ package body Exp_Ch4 is\n               and then Compile_Time_Known_Value (Hi)\n               and then Expr_Value (Type_High_Bound (Ltyp)) = Expr_Value (Hi)\n               and then Expr_Value (Type_Low_Bound  (Ltyp)) = Expr_Value (Lo)\n+\n+               --  Kill warnings in instances, since they may be cases where we\n+               --  have a test in the generic that makes sense with some types\n+               --  and not with other types.\n+\n+              and then not In_Instance\n             then\n                Substitute_Valid_Check;\n                return;\n@@ -3886,7 +3892,7 @@ package body Exp_Ch4 is\n             --  legality checks, because we are constant-folding beyond RM 4.9.\n \n             if Lcheck = LT or else Ucheck = GT then\n-               if Warn1 then\n+               if Warn1 and then not In_Instance then\n                   Error_Msg_N (\"?range test optimized away\", N);\n                   Error_Msg_N (\"\\?value is known to be out of range\", N);\n                end if;\n@@ -3902,7 +3908,7 @@ package body Exp_Ch4 is\n             --  since we know we are in range.\n \n             elsif Lcheck in Compare_GE and then Ucheck in Compare_LE then\n-               if Warn1 then\n+               if Warn1 and then not In_Instance then\n                   Error_Msg_N (\"?range test optimized away\", N);\n                   Error_Msg_N (\"\\?value is known to be in range\", N);\n                end if;\n@@ -3919,7 +3925,7 @@ package body Exp_Ch4 is\n             --  a comparison against the upper bound.\n \n             elsif Lcheck in Compare_GE then\n-               if Warn2 then\n+               if Warn2 and then not In_Instance then\n                   Error_Msg_N (\"?lower bound test optimized away\", Lo);\n                   Error_Msg_N (\"\\?value is known to be in range\", Lo);\n                end if;\n@@ -3937,7 +3943,7 @@ package body Exp_Ch4 is\n             --  a comparison against the lower bound.\n \n             elsif Ucheck in Compare_LE then\n-               if Warn2 then\n+               if Warn2 and then not In_Instance then\n                   Error_Msg_N (\"?upper bound test optimized away\", Hi);\n                   Error_Msg_N (\"\\?value is known to be in range\", Hi);\n                end if;"}]}