{"sha": "05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "node_id": "C_kwDOANBUbNoAKDA1NDY3ZDA4ZTc3N2I3MmY1N2M1MGY3ZWYwNDMwZjhjZjBlZGQ4ZTE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-15T00:17:49Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-15T00:17:49Z"}, "message": "Daily bump.", "tree": {"sha": "c3b59a66177053b9370ed3cdc67c3c6ae47fbc62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3b59a66177053b9370ed3cdc67c3c6ae47fbc62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/comments", "author": null, "committer": null, "parents": [{"sha": "d68adf853759fa68945122a1b72035cab78d5077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68adf853759fa68945122a1b72035cab78d5077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68adf853759fa68945122a1b72035cab78d5077"}], "stats": {"total": 193, "additions": 192, "deletions": 1}, "files": [{"sha": "a7a9106c9c42ff58a8687c17c7806ace1bda6424", "filename": "gcc/ChangeLog", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "patch": "@@ -1,3 +1,71 @@\n+2023-02-15  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* reload1.cc (gen_reload): Correct rtx parameter for fatal_insn\n+\t\"failure trying to reload\" call.\n+\n+2023-02-15  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gdbinit.in (phrs): New command.\n+\t* sel-sched-dump.cc (debug_hard_reg_set): Remove debug-function.\n+\t* ira-color.cc (debug_hard_reg_set): New, calling print_hard_reg_set.\n+\n+2023-02-14  David Faust  <david.faust@oracle.com>\n+\n+\tPR target/108790\n+\t* config/bpf/constraints.md (q): New memory constraint.\n+\t* config/bpf/bpf.md (zero_extendhidi2): Use it here.\n+\t(zero_extendqidi2): Likewise.\n+\t(zero_extendsidi2): Likewise.\n+\t(*mov<MM:mode>): Likewise.\n+\n+2023-02-14  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR tree-optimization/108355\n+\tPR tree-optimization/96921\n+\t* match.pd: Add pattern for \"1 - bool_val\".\n+\n+2023-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.cc (vn_phi_compute_hash): Key skipping\n+\tbasic block index hashing on the availability of ->cclhs.\n+\t(vn_phi_eq): Avoid re-doing sanity checks for CSE but\n+\trely on ->cclhs availability.\n+\t(vn_phi_lookup): Set ->cclhs only when we are eventually\n+\tgoing to CSE the PHI.\n+\t(vn_phi_insert): Likewise.\n+\n+2023-02-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimplify.cc (gimplify_save_expr): Add missing guard.\n+\n+2023-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108782\n+\t* tree-vect-loop.cc (vect_phi_first_order_recurrence_p):\n+\tMake sure we're not vectorizing an inner loop.\n+\n+2023-02-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/108777\n+\t* params.opt (-param=asan-kernel-mem-intrinsic-prefix=): New param.\n+\t* asan.h (asan_memfn_rtl): Declare.\n+\t* asan.cc (asan_memfn_rtls): New variable.\n+\t(asan_memfn_rtl): New function.\n+\t* builtins.cc (expand_builtin): If\n+\tparam_asan_kernel_mem_intrinsic_prefix and function is\n+\tkernel-{,hw}address sanitized, emit calls to\n+\t__{,hw}asan_{memcpy,memmove,memset} rather than\n+\t{memcpy,memmove,memset}.  Use sanitize_flags_p (SANITIZE_ADDRESS)\n+\tinstead of flag_sanitize & SANITIZE_ADDRESS to check if\n+\tasan_intercepted_p functions shouldn't be expanded inline.\n+\n+2023-02-14  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/96373\n+\t* tree-vect-stmts.cc (vectorizable_operation): Predicate trapping\n+\toperations on the loop mask.  Reject partial vectors if this isn't\n+\tpossible.\n+\n 2023-02-13  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR rtl-optimization/108681"}, {"sha": "7926761744998f8cd40b59a871f893a7c3c61306", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "patch": "@@ -1 +1 @@\n-20230214\n+20230215"}, {"sha": "fdbbf4cc4ee7d553db189942668fcd0f2068df96", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "patch": "@@ -1,3 +1,13 @@\n+2023-02-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.cc (gnat_gimplify_expr): Add missing guard.\n+\n+2023-02-14  Dongsheng Song  <dongsheng.song@gmail.com>\n+\n+\t* adaint.c [Linux]: Include <features.h>.\n+\t(__gnat_get_executable_load_address) [Linux]: Enable only for\n+\tglibc and uClibc.\n+\n 2023-01-16  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n \n \t* gcc-interface/Make-lang.in: Update copyright years."}, {"sha": "baaa3943d71c5bca0f4b8fe55588215bb1016d1c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "patch": "@@ -1,3 +1,8 @@\n+2023-02-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106675\n+\t* call.cc (joust_maybe_elide_copy): Return false for ck_ambig.\n+\n 2023-02-10  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/107079"}, {"sha": "31763804500d3417ef515b2ba7d6459d83542615", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "patch": "@@ -1,3 +1,85 @@\n+2023-02-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106675\n+\t* g++.dg/cpp0x/overload-conv-5.C: New test.\n+\n+2023-02-14  David Faust  <david.faust@oracle.com>\n+\n+\tPR target/108790\n+\t* gcc.target/bpf/ldxdw.c: New test.\n+\n+2023-02-14  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR tree-optimization/108355\n+\tPR tree-optimization/96921\n+\t* gcc.dg/tree-ssa/bool-minus-1.c: New test.\n+\t* gcc.dg/tree-ssa/bool-minus-2.c: New test.\n+\t* gcc.dg/tree-ssa/pr108354-1.c: New test.\n+\n+2023-02-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/shift2.adb: New test.\n+\n+2023-02-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108782\n+\t* gcc.dg/torture/pr108782.c: New testcase.\n+\n+2023-02-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/108777\n+\t* gcc.dg/asan/pr108777-1.c: New test.\n+\t* gcc.dg/asan/pr108777-2.c: New test.\n+\t* gcc.dg/asan/pr108777-3.c: New test.\n+\t* gcc.dg/asan/pr108777-4.c: New test.\n+\t* gcc.dg/asan/pr108777-5.c: New test.\n+\t* gcc.dg/asan/pr108777-6.c: New test.\n+\t* gcc.dg/completion-3.c: Adjust expected multiline output.\n+\n+2023-02-14  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR target/108723\n+\t* gcc.target/riscv/shorten-memrefs-1.c: Adjust patterns to skip\n+\tover cfi directives.\n+\t* gcc.target/riscv/shorten-memrefs-2.c: Likewise.\n+\t* gcc.target/riscv/shorten-memrefs-3.c: Likewise.\n+\t* gcc.target/riscv/shorten-memrefs-4.c: Likewise.\n+\t* gcc.target/riscv/shorten-memrefs-5.c: Likewise.\n+\t* gcc.target/riscv/shorten-memrefs-6.c: Likewise.\n+\t* gcc.target/riscv/shorten-memrefs-8.c: Likewise.\n+\n+2023-02-14  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gfortran.dg/weak-1.f90: Adjust 'scan-assembler' for nvptx.\n+\n+2023-02-14  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/96373\n+\tPR tree-optimization/108571\n+\t* gcc.target/aarch64/sve/fabd_1.c: Add -fno-trapping-math.\n+\t* gcc.target/aarch64/sve/fsubr_1.c: Likewise.\n+\t* gcc.target/aarch64/sve/fmul_1.c: Expect predicate ops.\n+\t* gcc.target/aarch64/sve/fp_arith_1.c: Likewise.\n+\n+2023-02-14  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/96373\n+\t* gcc.target/powerpc/p9-vec-length-epil-1.c: Add -fno-trapping-math.\n+\t* gcc.target/powerpc/p9-vec-length-epil-2.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-epil-3.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-epil-4.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-epil-5.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-epil-6.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-epil-8.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-full-1.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-full-2.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-full-3.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-full-4.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-full-5.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-full-6.c: Likewise.\n+\t* gcc.target/powerpc/p9-vec-length-full-8.c: Likewise.\n+\t* gcc.target/powerpc/pr96373.c: New test.\n+\n 2023-02-13  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR rtl-optimization/108681"}, {"sha": "f85938395c64aa9d189360a2360d7530af16c4a2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05467d08e777b72f57c50f7ef0430f8cf0edd8e1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=05467d08e777b72f57c50f7ef0430f8cf0edd8e1", "patch": "@@ -1,3 +1,29 @@\n+2023-02-14  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/xml/manual/status_cxx2017.xml: Update an open-std.org link\n+\tto www.open-std.org and https.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n+2023-02-14  Thomas W Rodgers  <rodgert@twrodgers.com>\n+\n+\tPR libstdc++/103934\n+\t* include/std/atomic (atomic_flag_wait): Add.\n+\t(atomic_flag_wait_explicit): Add.\n+\t(atomic_flag_notify): Add.\n+\t(atomic_flag_notify_explicit): Add.\n+\t* testsuite/29_atomics/atomic_flag/wait_notify/1.cc:\n+\tAdd test case to cover missing atomic_flag free functions.\n+\n+2023-02-14  Thomas W Rodgers  <rodgert@twrodgers.com>\n+\n+\tPR libstdc++/103934\n+\t* include/std/atomic (atomic_flag_test): Add.\n+\t(atomic_flag_test_explicit): Add.\n+\t* testsuite/29_atomics/atomic_flag/test/explicit.cc: Add\n+\ttest case to cover missing atomic_flag free functions.\n+\t* testsuite/29_atomics/atomic_flag/test/implicit.cc:\n+\tLikewise.\n+\n 2023-02-13  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/policy_data_structures_biblio.xml: Adjust"}]}