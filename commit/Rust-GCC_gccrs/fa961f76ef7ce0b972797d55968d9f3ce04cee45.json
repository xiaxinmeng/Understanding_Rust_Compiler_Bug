{"sha": "fa961f76ef7ce0b972797d55968d9f3ce04cee45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5NjFmNzZlZjdjZTBiOTcyNzk3ZDU1OTY4ZDlmM2NlMDRjZWU0NQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-08-06T07:56:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-06T07:56:04Z"}, "message": "sem_ch3.adb (Process_Discriminants): diagnose redundant or improper null exclusion in a discriminant declaration\n\n2008-08-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Process_Discriminants): diagnose redundant or improper\n\tnull exclusion in a discriminant declaration\n\n\t* sem_ch8.adb (Analyze_Object_Renaming): diagnose null exclusion\n\tindicators when type is not an access type.\n\n\t* sem_ch12.adb (Formal_Object_Declaration): diagnose null exclusion\n\tindicators when type is not an access type.\n\nFrom-SVN: r138765", "tree": {"sha": "5790cdfb649d8d249baa5d5f8a5f5e430365abc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5790cdfb649d8d249baa5d5f8a5f5e430365abc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa961f76ef7ce0b972797d55968d9f3ce04cee45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa961f76ef7ce0b972797d55968d9f3ce04cee45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa961f76ef7ce0b972797d55968d9f3ce04cee45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa961f76ef7ce0b972797d55968d9f3ce04cee45/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3702ff90aa3f2b3e318e7e83a5df5e9614cf074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3702ff90aa3f2b3e318e7e83a5df5e9614cf074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3702ff90aa3f2b3e318e7e83a5df5e9614cf074"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "30628b6864af4866d1b07e2f66e493628eed4bb1", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa961f76ef7ce0b972797d55968d9f3ce04cee45/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa961f76ef7ce0b972797d55968d9f3ce04cee45/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=fa961f76ef7ce0b972797d55968d9f3ce04cee45", "patch": "@@ -1812,12 +1812,16 @@ package body Sem_Ch12 is\n \n          --  Verify that there is no redundant null exclusion.\n \n-         if Null_Exclusion_Present (N)\n-           and then Can_Never_Be_Null (T)\n-         then\n-            Error_Msg_NE\n-              (\"`NOT NULL` not allowed (& already excludes null)\",\n-                 N, T);\n+         if Null_Exclusion_Present (N) then\n+            if not Is_Access_Type (T) then\n+               Error_Msg_N\n+                 (\"null exclusion can only apply to an access type\", N);\n+\n+            elsif Can_Never_Be_Null (T) then\n+               Error_Msg_NE\n+                 (\"`NOT NULL` not allowed (& already excludes null)\",\n+                    N, T);\n+            end if;\n          end if;\n \n       --  Ada 2005 (AI-423): Formal object with an access definition"}, {"sha": "8f027957536abcaff592e06442ef5fb6861ff4a0", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa961f76ef7ce0b972797d55968d9f3ce04cee45/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa961f76ef7ce0b972797d55968d9f3ce04cee45/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=fa961f76ef7ce0b972797d55968d9f3ce04cee45", "patch": "@@ -4624,11 +4624,21 @@ package body Sem_Ch3 is\n                               Has_Private_Component (Derived_Type));\n       Conditional_Delay      (Derived_Type, Subt);\n \n-      --  Ada 2005 (AI-231). Set the null-exclusion attribute\n+      --  Ada 2005 (AI-231). Set the null-exclusion attribute, and verify\n+      --  that it is not redundant.\n \n-      if Null_Exclusion_Present (Type_Definition (N))\n-        or else Can_Never_Be_Null (Parent_Type)\n-      then\n+      if Null_Exclusion_Present (Type_Definition (N)) then\n+         Set_Can_Never_Be_Null (Derived_Type);\n+\n+         if Can_Never_Be_Null (Parent_Type)\n+           and then False\n+         then\n+            Error_Msg_NE\n+              (\"`NOT NULL` not allowed (& already excludes null)\",\n+                N, Parent_Type);\n+         end if;\n+\n+      elsif Can_Never_Be_Null (Parent_Type) then\n          Set_Can_Never_Be_Null (Derived_Type);\n       end if;\n \n@@ -12897,6 +12907,12 @@ package body Sem_Ch3 is\n          end;\n       end if;\n \n+      if Null_Exclusion_Present (Def)\n+        and then not Is_Access_Type (Parent_Type)\n+      then\n+         Error_Msg_N (\"null exclusion can only apply to an access type\", N);\n+      end if;\n+\n       Build_Derived_Type (N, Parent_Type, T, Is_Completion);\n \n       --  AI-419: The parent type of an explicitly limited derived type must\n@@ -15352,6 +15368,15 @@ package body Sem_Ch3 is\n                  Create_Null_Excluding_Itype\n                    (T           => Discr_Type,\n                     Related_Nod => Discr));\n+\n+            --  Check for improper null exclusion if the type is otherwise\n+            --  legal for a discriminant.\n+\n+            elsif Null_Exclusion_Present (Discr)\n+              and then Is_Discrete_Type (Discr_Type)\n+            then\n+               Error_Msg_N\n+                 (\"null exclusion can only apply to an access type\", Discr);\n             end if;\n \n             --  Ada 2005 (AI-402): access discriminants of nonlimited types"}, {"sha": "f6acc6c6ca1849cf5953fb6bc1ae67dfea9ade8d", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa961f76ef7ce0b972797d55968d9f3ce04cee45/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa961f76ef7ce0b972797d55968d9f3ce04cee45/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=fa961f76ef7ce0b972797d55968d9f3ce04cee45", "patch": "@@ -889,7 +889,15 @@ package body Sem_Ch8 is\n                   Error_Msg_NE\n                     (\"`NOT NULL` not allowed (type of& already excludes null)\",\n                       N, Nam_Ent);\n+\n                end if;\n+\n+            elsif Has_Null_Exclusion (N)\n+              and then No (Access_Definition (N))\n+              and then Can_Never_Be_Null (T)\n+            then\n+               Error_Msg_NE\n+                 (\"`NOT NULL` not allowed (& already excludes null)\", N, T);\n             end if;\n          end;\n       end if;"}]}