{"sha": "61e374ab766ee2ed03093656f04ca7e8228a3450", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFlMzc0YWI3NjZlZTJlZDAzMDkzNjU2ZjA0Y2E3ZTgyMjhhMzQ1MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-05-29T17:03:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-05-29T17:03:38Z"}, "message": "re PR tree-optimization/49217 (Wrong optimization of code)\n\n2011-05-29  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/49217\n\t* ipa-pure-const.c (propagate_pure_const): Fix typos.\n\n\t* gcc.dg/torture/pr49217.c: New testcase.\n\nFrom-SVN: r174400", "tree": {"sha": "7d46c9a01e0d7c7159201f4fa9fe8cb7c179370f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d46c9a01e0d7c7159201f4fa9fe8cb7c179370f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61e374ab766ee2ed03093656f04ca7e8228a3450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e374ab766ee2ed03093656f04ca7e8228a3450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61e374ab766ee2ed03093656f04ca7e8228a3450", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e374ab766ee2ed03093656f04ca7e8228a3450/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a5ba933e71c8861234a05a5beb657f09087d77f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5ba933e71c8861234a05a5beb657f09087d77f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5ba933e71c8861234a05a5beb657f09087d77f"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "d573409707da9e6d24a8b5526335070886ffeadf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e374ab766ee2ed03093656f04ca7e8228a3450/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e374ab766ee2ed03093656f04ca7e8228a3450/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61e374ab766ee2ed03093656f04ca7e8228a3450", "patch": "@@ -1,3 +1,8 @@\n+2011-05-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49217\n+\t* ipa-pure-const.c (propagate_pure_const): Fix typos.\n+\n 2011-05-28  Jan Hubicka  <jh@suse.cz>\n \n \t* lto-streamer-out.c (hash_string_slot_node): Hash string based on its"}, {"sha": "74cf52a896eb0775845d4b0d80c917d721751bb6", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e374ab766ee2ed03093656f04ca7e8228a3450/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e374ab766ee2ed03093656f04ca7e8228a3450/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=61e374ab766ee2ed03093656f04ca7e8228a3450", "patch": "@@ -1225,7 +1225,7 @@ propagate_pure_const (void)\n \t    break;\n \n \t  /* Now process the indirect call.  */\n-          for (ie = node->indirect_calls; ie; ie = ie->next_callee)\n+          for (ie = w->indirect_calls; ie; ie = ie->next_callee)\n \t    {\n \t      enum pure_const_state_e edge_state = IPA_CONST;\n \t      bool edge_looping = false;\n@@ -1248,7 +1248,7 @@ propagate_pure_const (void)\n \t    break;\n \n \t  /* And finally all loads and stores.  */\n-\t  for (i = 0; ipa_ref_list_reference_iterate (&node->ref_list, i, ref); i++)\n+\t  for (i = 0; ipa_ref_list_reference_iterate (&w->ref_list, i, ref); i++)\n \t    {\n \t      enum pure_const_state_e ref_state = IPA_CONST;\n \t      bool ref_looping = false;"}, {"sha": "ffd768192c77c290baf8cc89f1a3cbbeaba0b810", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e374ab766ee2ed03093656f04ca7e8228a3450/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e374ab766ee2ed03093656f04ca7e8228a3450/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61e374ab766ee2ed03093656f04ca7e8228a3450", "patch": "@@ -1,3 +1,8 @@\n+2011-05-29  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49217\n+\t* gcc.dg/torture/pr49217.c: New testcase.\n+\n 2011-05-29  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR testsuite/49222"}, {"sha": "e8a89de8f5db033d35403ff88bc3f852d2337334", "filename": "gcc/testsuite/gcc.dg/torture/pr49217.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e374ab766ee2ed03093656f04ca7e8228a3450/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr49217.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e374ab766ee2ed03093656f04ca7e8228a3450/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr49217.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr49217.c?ref=61e374ab766ee2ed03093656f04ca7e8228a3450", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fno-early-inlining\" } */\n+\n+extern void abort (void);\n+int i;\n+static void foo(void);\n+void __attribute__((noinline))\n+bar (void)\n+{\n+  if (!i)\n+    foo ();\n+}\n+static void\n+foo(void)\n+{\n+  i = 1;\n+  bar ();\n+}\n+int main()\n+{\n+  i = 0;\n+  bar();\n+  if (i != 1)\n+    abort ();\n+  return 0;\n+}"}]}