{"sha": "bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQwNzBlMWFhOWE0ZjdiNjU3NWU2YjU4YTc4ZGUyZGM3MDhlNWQzOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-05-22T23:03:25Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-05-22T23:03:25Z"}, "message": "expr.c (expand_expr): For {BITFIELD,COMPONENT,ARRAY}_REF...\n\n* expr.c (expand_expr): For {BITFIELD,COMPONENT,ARRAY}_REF, if the\noffset's mode is not ptr_mode, convert it.\n\nFrom-SVN: r19965", "tree": {"sha": "28159966dd01ab20238a4e9e0996bf825107145c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28159966dd01ab20238a4e9e0996bf825107145c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38/comments", "author": null, "committer": null, "parents": [{"sha": "329745f7c1aa1eb0f5ad89a327b86c2d3293ebbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329745f7c1aa1eb0f5ad89a327b86c2d3293ebbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329745f7c1aa1eb0f5ad89a327b86c2d3293ebbe"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "1d5d766a6588081c78b067c7efa75021e1d55dd1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38", "patch": "@@ -1,3 +1,8 @@\n+1998-05-23  Richard Henderson  <rth@cygnus.com>\n+\n+\t* expr.c (expand_expr): For {BITFIELD,COMPONENT,ARRAY}_REF, if the\n+\toffset's mode is not ptr_mode, convert it.\n+\n 1998-05-22  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* fold-const.c (ssize_binop): New fn."}, {"sha": "b8b1ab80c50911a56683f4c49a0916826b3c094f", "filename": "gcc/expr.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=bd070e1aa9a4f7b6575e6b58a78de2dc708e5d38", "patch": "@@ -2907,6 +2907,16 @@ expand_assignment (to, from, want_value, suggest_reg)\n \n \t  if (GET_CODE (to_rtx) != MEM)\n \t    abort ();\n+\n+\t  if (GET_MODE (offset_rtx) != ptr_mode)\n+\t    {\n+#ifdef POINTERS_EXTEND_UNSIGNED\n+\t      offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 1);\n+#else\n+\t      offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);\n+#endif\n+\t    }\n+\n \t  to_rtx = change_address (to_rtx, VOIDmode,\n \t\t\t\t   gen_rtx_PLUS (ptr_mode, XEXP (to_rtx, 0),\n \t\t\t\t\t\t force_reg (ptr_mode, offset_rtx)));\n@@ -3307,7 +3317,7 @@ store_expr (exp, target, want_value)\n     {\n       target = protect_from_queue (target, 1);\n       if (GET_MODE (temp) != GET_MODE (target)\n-\t  && GET_MODE (temp) != VOIDmode)\n+\t  && GET_MODE (target) != VOIDmode)\n \t{\n \t  int unsignedp = TREE_UNSIGNED (TREE_TYPE (exp));\n \t  if (dont_return_target)\n@@ -3673,6 +3683,15 @@ store_constructor (exp, target, cleared)\n \t      if (GET_CODE (to_rtx) != MEM)\n \t\tabort ();\n \n+              if (GET_MODE (offset_rtx) != ptr_mode)\n+                {\n+#ifdef POINTERS_EXTEND_UNSIGNED\n+                  offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 1);\n+#else\n+                  offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);\n+#endif\n+                }\n+\n \t      to_rtx\n \t\t= change_address (to_rtx, VOIDmode,\n \t\t\t\t  gen_rtx_PLUS (ptr_mode, XEXP (to_rtx, 0),\n@@ -5752,11 +5771,13 @@ expand_expr (exp, target, tmode, modifier)\n \t      abort ();\n \n \t    if (GET_MODE (offset_rtx) != ptr_mode)\n+\t      {\n #ifdef POINTERS_EXTEND_UNSIGNED\n-\t      offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 1);\n+\t\toffset_rtx = convert_to_mode (ptr_mode, offset_rtx, 1);\n #else\n-\t      offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);\n+\t\toffset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);\n #endif\n+\t      }\n \n \t    op0 = change_address (op0, VOIDmode,\n \t\t\t\t  gen_rtx_PLUS (ptr_mode, XEXP (op0, 0),"}]}