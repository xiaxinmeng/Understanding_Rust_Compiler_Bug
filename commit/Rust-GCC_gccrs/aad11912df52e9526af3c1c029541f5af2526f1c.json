{"sha": "aad11912df52e9526af3c1c029541f5af2526f1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFkMTE5MTJkZjUyZTk1MjZhZjNjMWMwMjk1NDFmNWFmMjUyNmYxYw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2015-10-12T10:20:56Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2015-10-12T10:20:56Z"}, "message": "msp430.c (msp430_mcu_names): Rename to msp430_mcu_data, add fields for ISA and hardware multiply support.\n\n\t* config/msp430/msp430.c (msp430_mcu_names): Rename to\n\tmsp430_mcu_data, add fields for ISA and hardware multiply\n\tsupport.  Import latest data from the devices.csv file.\n\t(msp430_override_option): Use the data from the new array.\n\t(msp430_use_f5_series_hwmult): Likewise.\n\t(use_32bit_hwmult): Likewise.\n\t(msp430_no_hwmult): Likewise.\n\t* config/msp430/t-msp430 (MULTILIB_MATCHES): Add matches for new\n\tMCU names.\n\t* doc/invoke.texi (MSP430 Options): Note that if the MCU name is\n\tnot recognised then no hardware multiply support is assumed and\n\tthat only the MSP430 ISA is allowed.\n\nFrom-SVN: r228707", "tree": {"sha": "4e224520370b81d6d08d8dbd42866536212d601c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e224520370b81d6d08d8dbd42866536212d601c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aad11912df52e9526af3c1c029541f5af2526f1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad11912df52e9526af3c1c029541f5af2526f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aad11912df52e9526af3c1c029541f5af2526f1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aad11912df52e9526af3c1c029541f5af2526f1c/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7624ca36a275ec0c86f6740b079dcc08215883bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7624ca36a275ec0c86f6740b079dcc08215883bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7624ca36a275ec0c86f6740b079dcc08215883bf"}], "stats": {"total": 806, "additions": 653, "deletions": 153}, "files": [{"sha": "7a70e589932b460758ac6f60ab9b259b4bd02d2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad11912df52e9526af3c1c029541f5af2526f1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad11912df52e9526af3c1c029541f5af2526f1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aad11912df52e9526af3c1c029541f5af2526f1c", "patch": "@@ -1,3 +1,18 @@\n+2015-10-12  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/msp430/msp430.c (msp430_mcu_names): Rename to\n+\tmsp430_mcu_data, add fields for ISA and hardware multiply\n+\tsupport.  Import latest data from the devices.csv file.\n+\t(msp430_override_option): Use the data from the new array.\n+\t(msp430_use_f5_series_hwmult): Likewise.\n+\t(use_32bit_hwmult): Likewise.\n+\t(msp430_no_hwmult): Likewise.\n+\t* config/msp430/t-msp430 (MULTILIB_MATCHES): Add matches for new\n+\tMCU names.\n+\t* doc/invoke.texi (MSP430 Options): Note that if the MCU name is\n+\tnot recognised then no hardware multiply support is assumed and\n+\tthat only the MSP430 ISA is allowed.\n+\n 2015-10-12  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop.c (vect_analyze_loop_operations): Move cost"}, {"sha": "37ad0df1d1a017924014c5c4dfc61357fb73a752", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 635, "deletions": 151, "changes": 786, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad11912df52e9526af3c1c029541f5af2526f1c/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad11912df52e9526af3c1c029541f5af2526f1c/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=aad11912df52e9526af3c1c029541f5af2526f1c", "patch": "@@ -113,64 +113,613 @@ msp430_init_machine_status (void)\n #undef  TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE\t\tmsp430_option_override\n \n-static const char * msp430_mcu_names [] =\n-{\n-\"msp430afe221\",\t\"msp430afe222\",\t\"msp430afe223\",\t\"msp430afe231\",\t\n-\"msp430afe232\",\t\"msp430afe233\",\t\"msp430afe251\",\t\"msp430afe252\",\t\n-\"msp430afe253\",\t\"msp430c091\",\t\"msp430c092\",\t\"msp430c111\",\t\n-\"msp430c1111\",\t\"msp430c112\",\t\"msp430c1121\",\t\"msp430c1331\",\t\n-\"msp430c1351\",\t\"msp430c311s\",\t\"msp430c312\",\t\"msp430c313\",\t\n-\"msp430c314\",\t\"msp430c315\",\t\"msp430c323\",\t\"msp430c325\",\t\n-\"msp430c336\",\t\"msp430c337\",\t\"msp430c412\",\t\"msp430c413\",\t\n-\"msp430e112\",\t\"msp430e313\",\t\"msp430e315\",\t\"msp430e325\",\t\n-\"msp430e337\",\t\"msp430f110\",\t\"msp430f1101\",\t\"msp430f1101a\",\t\n-\"msp430f1111\",\t\"msp430f1111a\",\t\"msp430f112\",\t\"msp430f1121\",\t\n-\"msp430f1121a\",\t\"msp430f1122\",\t\"msp430f1132\",\t\"msp430f122\",\t\n-\"msp430f1222\",\t\"msp430f123\",\t\"msp430f1232\",\t\"msp430f133\",\t\n-\"msp430f135\",\t\"msp430f147\",\t\"msp430f1471\",\t\"msp430f148\",\t\n-\"msp430f1481\",\t\"msp430f149\",\t\"msp430f1491\",\t\"msp430f155\",\t\n-\"msp430f156\",\t\"msp430f157\",\t\"msp430f1610\",\t\"msp430f1611\",\t\n-\"msp430f1612\",\t\"msp430f167\",\t\"msp430f168\",\t\"msp430f169\",\t\n-\"msp430f2001\",\t\"msp430f2002\",\t\"msp430f2003\",\t\"msp430f2011\",\t\n-\"msp430f2012\",\t\"msp430f2013\",\t\"msp430f2101\",\t\"msp430f2111\",\t\n-\"msp430f2112\",\t\"msp430f2121\",\t\"msp430f2122\",\t\"msp430f2131\",\t\n-\"msp430f2132\",\t\"msp430f2232\",\t\"msp430f2234\",\t\"msp430f2252\",\t\n-\"msp430f2254\",\t\"msp430f2272\",\t\"msp430f2274\",\t\"msp430f233\",\t\n-\"msp430f2330\",\t\"msp430f235\",\t\"msp430f2350\",\t\"msp430f2370\",\t\n-\"msp430f2410\",\t\"msp430f247\",\t\"msp430f2471\",\t\"msp430f248\",\t\n-\"msp430f2481\",\t\"msp430f249\",\t\"msp430f2491\",\t\"msp430f412\",\t\n-\"msp430f413\",\t\"msp430f4132\",\t\"msp430f415\",\t\"msp430f4152\",\t\n-\"msp430f417\",\t\"msp430f423\",\t\"msp430f423a\",\t\"msp430f425\",\t\n-\"msp430f4250\",\t\"msp430f425a\",\t\"msp430f4260\",\t\"msp430f427\",\t\n-\"msp430f4270\",\t\"msp430f427a\",\t\"msp430f435\",\t\"msp430f4351\",\t\n-\"msp430f436\",\t\"msp430f4361\",\t\"msp430f437\",\t\"msp430f4371\",\t\n-\"msp430f438\",\t\"msp430f439\",\t\"msp430f447\",\t\"msp430f448\",\t\n-\"msp430f4481\",\t\"msp430f449\",\t\"msp430f4491\",\t\"msp430f477\",\t\n-\"msp430f478\",\t\"msp430f4783\",\t\"msp430f4784\",\t\"msp430f479\",\t\n-\"msp430f4793\",\t\"msp430f4794\",\t\"msp430fe423\",\t\"msp430fe4232\",\t\n-\"msp430fe423a\",\t\"msp430fe4242\",\t\"msp430fe425\",\t\"msp430fe4252\",\t\n-\"msp430fe425a\",\t\"msp430fe427\",\t\"msp430fe4272\",\t\"msp430fe427a\",\t\n-\"msp430fg4250\",\t\"msp430fg4260\",\t\"msp430fg4270\",\t\"msp430fg437\",\t\n-\"msp430fg438\",\t\"msp430fg439\",\t\"msp430fg477\",\t\"msp430fg478\",\t\n-\"msp430fg479\",\t\"msp430fw423\",\t\"msp430fw425\",\t\"msp430fw427\",\t\n-\"msp430fw428\",\t\"msp430fw429\",\t\"msp430g2001\",\t\"msp430g2101\",\t\n-\"msp430g2102\",\t\"msp430g2111\",\t\"msp430g2112\",\t\"msp430g2113\",\t\n-\"msp430g2121\",\t\"msp430g2131\",\t\"msp430g2132\",\t\"msp430g2152\",\t\n-\"msp430g2153\",\t\"msp430g2201\",\t\"msp430g2202\",\t\"msp430g2203\",\t\n-\"msp430g2210\",\t\"msp430g2211\",\t\"msp430g2212\",\t\"msp430g2213\",\t\n-\"msp430g2221\",\t\"msp430g2230\",\t\"msp430g2231\",\t\"msp430g2232\",\t\n-\"msp430g2233\",\t\"msp430g2252\",\t\"msp430g2253\",\t\"msp430g2302\",\t\n-\"msp430g2303\",\t\"msp430g2312\",\t\"msp430g2313\",\t\"msp430g2332\",\t\n-\"msp430g2333\",\t\"msp430g2352\",\t\"msp430g2353\",\t\"msp430g2402\",\t\n-\"msp430g2403\",\t\"msp430g2412\",\t\"msp430g2413\",\t\"msp430g2432\",\t\n-\"msp430g2433\",\t\"msp430g2444\",\t\"msp430g2452\",\t\"msp430g2453\",\t\n-\"msp430g2513\",\t\"msp430g2533\",\t\"msp430g2544\",\t\"msp430g2553\",\t\n-\"msp430g2744\",\t\"msp430g2755\",\t\"msp430g2855\",\t\"msp430g2955\",\t\n-\"msp430i2020\",\t\"msp430i2021\",\t\"msp430i2030\",\t\"msp430i2031\",\t\n-\"msp430i2040\",\t\"msp430i2041\",\t\"msp430l092\",   \"msp430p112\",\t\n-\"msp430p313\",\t\"msp430p315\",\t\"msp430p315s\",\t\"msp430p325\",\t\n-\"msp430p337\",\t\"msp430tch5e\"\n-};\n+/* This is a copy of the same data structure found in gas/config/tc-msp430.c\n+   Also another (sort-of) copy can be found in gcc/config/msp430/t-msp430.\n+   Keep these three structures in sync.\n+   The data in this structure has been extracted from the devices.csv file\n+   released by TI, updated as of 8 October 2015.  */\n+\n+struct msp430_mcu_data\n+{\n+  const char * name;\n+  unsigned int revision; /* 0=> MSP430, 1=>MSP430X, 2=> MSP430Xv2.  */\n+  unsigned int hwmpy;    /* 0=>none, 1=>16-bit, 2=>16-bit w/sign extend, 4=>32-bit, 8=> 32-bit (5xx).  */\n+}\n+msp430_mcu_data [] =\n+{\n+  { \"cc430f5123\",2,8 },\n+  { \"cc430f5125\",2,8 },\n+  { \"cc430f5133\",2,8 },\n+  { \"cc430f5135\",2,8 },\n+  { \"cc430f5137\",2,8 },\n+  { \"cc430f5143\",2,8 },\n+  { \"cc430f5145\",2,8 },\n+  { \"cc430f5147\",2,8 },\n+  { \"cc430f6125\",2,8 },\n+  { \"cc430f6126\",2,8 },\n+  { \"cc430f6127\",2,8 },\n+  { \"cc430f6135\",2,8 },\n+  { \"cc430f6137\",2,8 },\n+  { \"cc430f6143\",2,8 },\n+  { \"cc430f6145\",2,8 },\n+  { \"cc430f6147\",2,8 },\n+  { \"msp430afe221\",0,2 },\n+  { \"msp430afe222\",0,2 },\n+  { \"msp430afe223\",0,2 },\n+  { \"msp430afe231\",0,2 },\n+  { \"msp430afe232\",0,2 },\n+  { \"msp430afe233\",0,2 },\n+  { \"msp430afe251\",0,2 },\n+  { \"msp430afe252\",0,2 },\n+  { \"msp430afe253\",0,2 },\n+  { \"msp430bt5190\",2,8 },\n+  { \"msp430c091\",0,0 },\n+  { \"msp430c092\",0,0 },\n+  { \"msp430c111\",0,0 },\n+  { \"msp430c1111\",0,0 },\n+  { \"msp430c112\",0,0 },\n+  { \"msp430c1121\",0,0 },\n+  { \"msp430c1331\",0,0 },\n+  { \"msp430c1351\",0,0 },\n+  { \"msp430c311s\",0,0 },\n+  { \"msp430c312\",0,0 },\n+  { \"msp430c313\",0,0 },\n+  { \"msp430c314\",0,0 },\n+  { \"msp430c315\",0,0 },\n+  { \"msp430c323\",0,0 },\n+  { \"msp430c325\",0,0 },\n+  { \"msp430c336\",0,1 },\n+  { \"msp430c337\",0,1 },\n+  { \"msp430c412\",0,0 },\n+  { \"msp430c413\",0,0 },\n+  { \"msp430cg4616\",1,1 },\n+  { \"msp430cg4617\",1,1 },\n+  { \"msp430cg4618\",1,1 },\n+  { \"msp430cg4619\",1,1 },\n+  { \"msp430e112\",0,0 },\n+  { \"msp430e313\",0,0 },\n+  { \"msp430e315\",0,0 },\n+  { \"msp430e325\",0,0 },\n+  { \"msp430e337\",0,1 },\n+  { \"msp430f110\",0,0 },\n+  { \"msp430f1101\",0,0 },\n+  { \"msp430f1101a\",0,0 },\n+  { \"msp430f1111\",0,0 },\n+  { \"msp430f1111a\",0,0 },\n+  { \"msp430f112\",0,0 },\n+  { \"msp430f1121\",0,0 },\n+  { \"msp430f1121a\",0,0 },\n+  { \"msp430f1122\",0,0 },\n+  { \"msp430f1132\",0,0 },\n+  { \"msp430f122\",0,0 },\n+  { \"msp430f1222\",0,0 },\n+  { \"msp430f123\",0,0 },\n+  { \"msp430f1232\",0,0 },\n+  { \"msp430f133\",0,0 },\n+  { \"msp430f135\",0,0 },\n+  { \"msp430f147\",0,1 },\n+  { \"msp430f1471\",0,1 },\n+  { \"msp430f148\",0,1 },\n+  { \"msp430f1481\",0,1 },\n+  { \"msp430f149\",0,1 },\n+  { \"msp430f1491\",0,1 },\n+  { \"msp430f155\",0,0 },\n+  { \"msp430f156\",0,0 },\n+  { \"msp430f157\",0,0 },\n+  { \"msp430f1610\",0,1 },\n+  { \"msp430f1611\",0,1 },\n+  { \"msp430f1612\",0,1 },\n+  { \"msp430f167\",0,1 },\n+  { \"msp430f168\",0,1 },\n+  { \"msp430f169\",0,1 },\n+  { \"msp430f2001\",0,0 },\n+  { \"msp430f2002\",0,0 },\n+  { \"msp430f2003\",0,0 },\n+  { \"msp430f2011\",0,0 },\n+  { \"msp430f2012\",0,0 },\n+  { \"msp430f2013\",0,0 },\n+  { \"msp430f2101\",0,0 },\n+  { \"msp430f2111\",0,0 },\n+  { \"msp430f2112\",0,0 },\n+  { \"msp430f2121\",0,0 },\n+  { \"msp430f2122\",0,0 },\n+  { \"msp430f2131\",0,0 },\n+  { \"msp430f2132\",0,0 },\n+  { \"msp430f2232\",0,0 },\n+  { \"msp430f2234\",0,0 },\n+  { \"msp430f2252\",0,0 },\n+  { \"msp430f2254\",0,0 },\n+  { \"msp430f2272\",0,0 },\n+  { \"msp430f2274\",0,0 },\n+  { \"msp430f233\",0,2 },\n+  { \"msp430f2330\",0,2 },\n+  { \"msp430f235\",0,2 },\n+  { \"msp430f2350\",0,2 },\n+  { \"msp430f2370\",0,2 },\n+  { \"msp430f2410\",0,2 },\n+  { \"msp430f2416\",1,2 },\n+  { \"msp430f2417\",1,2 },\n+  { \"msp430f2418\",1,2 },\n+  { \"msp430f2419\",1,2 },\n+  { \"msp430f247\",0,2 },\n+  { \"msp430f2471\",0,2 },\n+  { \"msp430f248\",0,2 },\n+  { \"msp430f2481\",0,2 },\n+  { \"msp430f249\",0,2 },\n+  { \"msp430f2491\",0,2 },\n+  { \"msp430f2616\",1,2 },\n+  { \"msp430f2617\",1,2 },\n+  { \"msp430f2618\",1,2 },\n+  { \"msp430f2619\",1,2 },\n+  { \"msp430f412\",0,0 },\n+  { \"msp430f413\",0,0 },\n+  { \"msp430f4132\",0,0 },\n+  { \"msp430f415\",0,0 },\n+  { \"msp430f4152\",0,0 },\n+  { \"msp430f417\",0,0 },\n+  { \"msp430f423\",0,1 },\n+  { \"msp430f423a\",0,1 },\n+  { \"msp430f425\",0,1 },\n+  { \"msp430f4250\",0,0 },\n+  { \"msp430f425a\",0,1 },\n+  { \"msp430f4260\",0,0 },\n+  { \"msp430f427\",0,1 },\n+  { \"msp430f4270\",0,0 },\n+  { \"msp430f427a\",0,1 },\n+  { \"msp430f435\",0,0 },\n+  { \"msp430f4351\",0,0 },\n+  { \"msp430f436\",0,0 },\n+  { \"msp430f4361\",0,0 },\n+  { \"msp430f437\",0,0 },\n+  { \"msp430f4371\",0,0 },\n+  { \"msp430f438\",0,0 },\n+  { \"msp430f439\",0,0 },\n+  { \"msp430f447\",0,1 },\n+  { \"msp430f448\",0,1 },\n+  { \"msp430f4481\",0,1 },\n+  { \"msp430f449\",0,1 },\n+  { \"msp430f4491\",0,1 },\n+  { \"msp430f4616\",1,1 },\n+  { \"msp430f46161\",1,1 },\n+  { \"msp430f4617\",1,1 },\n+  { \"msp430f46171\",1,1 },\n+  { \"msp430f4618\",1,1 },\n+  { \"msp430f46181\",1,1 },\n+  { \"msp430f4619\",1,1 },\n+  { \"msp430f46191\",1,1 },\n+  { \"msp430f47126\",1,4 },\n+  { \"msp430f47127\",1,4 },\n+  { \"msp430f47163\",1,4 },\n+  { \"msp430f47166\",1,4 },\n+  { \"msp430f47167\",1,4 },\n+  { \"msp430f47173\",1,4 },\n+  { \"msp430f47176\",1,4 },\n+  { \"msp430f47177\",1,4 },\n+  { \"msp430f47183\",1,4 },\n+  { \"msp430f47186\",1,4 },\n+  { \"msp430f47187\",1,4 },\n+  { \"msp430f47193\",1,4 },\n+  { \"msp430f47196\",1,4 },\n+  { \"msp430f47197\",1,4 },\n+  { \"msp430f477\",0,0 },\n+  { \"msp430f478\",0,0 },\n+  { \"msp430f4783\",0,4 },\n+  { \"msp430f4784\",0,4 },\n+  { \"msp430f479\",0,0 },\n+  { \"msp430f4793\",0,4 },\n+  { \"msp430f4794\",0,4 },\n+  { \"msp430f5131\",2,8 },\n+  { \"msp430f5132\",2,8 },\n+  { \"msp430f5151\",2,8 },\n+  { \"msp430f5152\",2,8 },\n+  { \"msp430f5171\",2,8 },\n+  { \"msp430f5172\",2,8 },\n+  { \"msp430f5212\",2,8 },\n+  { \"msp430f5213\",2,8 },\n+  { \"msp430f5214\",2,8 },\n+  { \"msp430f5217\",2,8 },\n+  { \"msp430f5218\",2,8 },\n+  { \"msp430f5219\",2,8 },\n+  { \"msp430f5222\",2,8 },\n+  { \"msp430f5223\",2,8 },\n+  { \"msp430f5224\",2,8 },\n+  { \"msp430f5227\",2,8 },\n+  { \"msp430f5228\",2,8 },\n+  { \"msp430f5229\",2,8 },\n+  { \"msp430f5232\",2,8 },\n+  { \"msp430f5234\",2,8 },\n+  { \"msp430f5237\",2,8 },\n+  { \"msp430f5239\",2,8 },\n+  { \"msp430f5242\",2,8 },\n+  { \"msp430f5244\",2,8 },\n+  { \"msp430f5247\",2,8 },\n+  { \"msp430f5249\",2,8 },\n+  { \"msp430f5252\",2,8 },\n+  { \"msp430f5253\",2,8 },\n+  { \"msp430f5254\",2,8 },\n+  { \"msp430f5255\",2,8 },\n+  { \"msp430f5256\",2,8 },\n+  { \"msp430f5257\",2,8 },\n+  { \"msp430f5258\",2,8 },\n+  { \"msp430f5259\",2,8 },\n+  { \"msp430f5304\",2,8 },\n+  { \"msp430f5308\",2,8 },\n+  { \"msp430f5309\",2,8 },\n+  { \"msp430f5310\",2,8 },\n+  { \"msp430f5324\",2,8 },\n+  { \"msp430f5325\",2,8 },\n+  { \"msp430f5326\",2,8 },\n+  { \"msp430f5327\",2,8 },\n+  { \"msp430f5328\",2,8 },\n+  { \"msp430f5329\",2,8 },\n+  { \"msp430f5333\",2,8 },\n+  { \"msp430f5335\",2,8 },\n+  { \"msp430f5336\",2,8 },\n+  { \"msp430f5338\",2,8 },\n+  { \"msp430f5340\",2,8 },\n+  { \"msp430f5341\",2,8 },\n+  { \"msp430f5342\",2,8 },\n+  { \"msp430f5358\",2,8 },\n+  { \"msp430f5359\",2,8 },\n+  { \"msp430f5418\",2,8 },\n+  { \"msp430f5418a\",2,8 },\n+  { \"msp430f5419\",2,8 },\n+  { \"msp430f5419a\",2,8 },\n+  { \"msp430f5435\",2,8 },\n+  { \"msp430f5435a\",2,8 },\n+  { \"msp430f5436\",2,8 },\n+  { \"msp430f5436a\",2,8 },\n+  { \"msp430f5437\",2,8 },\n+  { \"msp430f5437a\",2,8 },\n+  { \"msp430f5438\",2,8 },\n+  { \"msp430f5438a\",2,8 },\n+  { \"msp430f5500\",2,8 },\n+  { \"msp430f5501\",2,8 },\n+  { \"msp430f5502\",2,8 },\n+  { \"msp430f5503\",2,8 },\n+  { \"msp430f5504\",2,8 },\n+  { \"msp430f5505\",2,8 },\n+  { \"msp430f5506\",2,8 },\n+  { \"msp430f5507\",2,8 },\n+  { \"msp430f5508\",2,8 },\n+  { \"msp430f5509\",2,8 },\n+  { \"msp430f5510\",2,8 },\n+  { \"msp430f5513\",2,8 },\n+  { \"msp430f5514\",2,8 },\n+  { \"msp430f5515\",2,8 },\n+  { \"msp430f5517\",2,8 },\n+  { \"msp430f5519\",2,8 },\n+  { \"msp430f5521\",2,8 },\n+  { \"msp430f5522\",2,8 },\n+  { \"msp430f5524\",2,8 },\n+  { \"msp430f5525\",2,8 },\n+  { \"msp430f5526\",2,8 },\n+  { \"msp430f5527\",2,8 },\n+  { \"msp430f5528\",2,8 },\n+  { \"msp430f5529\",2,8 },\n+  { \"msp430f5630\",2,8 },\n+  { \"msp430f5631\",2,8 },\n+  { \"msp430f5632\",2,8 },\n+  { \"msp430f5633\",2,8 },\n+  { \"msp430f5634\",2,8 },\n+  { \"msp430f5635\",2,8 },\n+  { \"msp430f5636\",2,8 },\n+  { \"msp430f5637\",2,8 },\n+  { \"msp430f5638\",2,8 },\n+  { \"msp430f5658\",2,8 },\n+  { \"msp430f5659\",2,8 },\n+  { \"msp430f5xx_6xxgeneric\",2,8 },\n+  { \"msp430f6433\",2,8 },\n+  { \"msp430f6435\",2,8 },\n+  { \"msp430f6436\",2,8 },\n+  { \"msp430f6438\",2,8 },\n+  { \"msp430f6458\",2,8 },\n+  { \"msp430f6459\",2,8 },\n+  { \"msp430f6630\",2,8 },\n+  { \"msp430f6631\",2,8 },\n+  { \"msp430f6632\",2,8 },\n+  { \"msp430f6633\",2,8 },\n+  { \"msp430f6634\",2,8 },\n+  { \"msp430f6635\",2,8 },\n+  { \"msp430f6636\",2,8 },\n+  { \"msp430f6637\",2,8 },\n+  { \"msp430f6638\",2,8 },\n+  { \"msp430f6658\",2,8 },\n+  { \"msp430f6659\",2,8 },\n+  { \"msp430f6720\",2,8 },\n+  { \"msp430f6720a\",2,8 },\n+  { \"msp430f6721\",2,8 },\n+  { \"msp430f6721a\",2,8 },\n+  { \"msp430f6723\",2,8 },\n+  { \"msp430f6723a\",2,8 },\n+  { \"msp430f6724\",2,8 },\n+  { \"msp430f6724a\",2,8 },\n+  { \"msp430f6725\",2,8 },\n+  { \"msp430f6725a\",2,8 },\n+  { \"msp430f6726\",2,8 },\n+  { \"msp430f6726a\",2,8 },\n+  { \"msp430f6730\",2,8 },\n+  { \"msp430f6730a\",2,8 },\n+  { \"msp430f6731\",2,8 },\n+  { \"msp430f6731a\",2,8 },\n+  { \"msp430f6733\",2,8 },\n+  { \"msp430f6733a\",2,8 },\n+  { \"msp430f6734\",2,8 },\n+  { \"msp430f6734a\",2,8 },\n+  { \"msp430f6735\",2,8 },\n+  { \"msp430f6735a\",2,8 },\n+  { \"msp430f6736\",2,8 },\n+  { \"msp430f6736a\",2,8 },\n+  { \"msp430f6745\",2,8 },\n+  { \"msp430f67451\",2,8 },\n+  { \"msp430f67451a\",2,8 },\n+  { \"msp430f6745a\",2,8 },\n+  { \"msp430f6746\",2,8 },\n+  { \"msp430f67461\",2,8 },\n+  { \"msp430f67461a\",2,8 },\n+  { \"msp430f6746a\",2,8 },\n+  { \"msp430f6747\",2,8 },\n+  { \"msp430f67471\",2,8 },\n+  { \"msp430f67471a\",2,8 },\n+  { \"msp430f6747a\",2,8 },\n+  { \"msp430f6748\",2,8 },\n+  { \"msp430f67481\",2,8 },\n+  { \"msp430f67481a\",2,8 },\n+  { \"msp430f6748a\",2,8 },\n+  { \"msp430f6749\",2,8 },\n+  { \"msp430f67491\",2,8 },\n+  { \"msp430f67491a\",2,8 },\n+  { \"msp430f6749a\",2,8 },\n+  { \"msp430f67621\",2,8 },\n+  { \"msp430f67621a\",2,8 },\n+  { \"msp430f67641\",2,8 },\n+  { \"msp430f67641a\",2,8 },\n+  { \"msp430f6765\",2,8 },\n+  { \"msp430f67651\",2,8 },\n+  { \"msp430f67651a\",2,8 },\n+  { \"msp430f6765a\",2,8 },\n+  { \"msp430f6766\",2,8 },\n+  { \"msp430f67661\",2,8 },\n+  { \"msp430f67661a\",2,8 },\n+  { \"msp430f6766a\",2,8 },\n+  { \"msp430f6767\",2,8 },\n+  { \"msp430f67671\",2,8 },\n+  { \"msp430f67671a\",2,8 },\n+  { \"msp430f6767a\",2,8 },\n+  { \"msp430f6768\",2,8 },\n+  { \"msp430f67681\",2,8 },\n+  { \"msp430f67681a\",2,8 },\n+  { \"msp430f6768a\",2,8 },\n+  { \"msp430f6769\",2,8 },\n+  { \"msp430f67691\",2,8 },\n+  { \"msp430f67691a\",2,8 },\n+  { \"msp430f6769a\",2,8 },\n+  { \"msp430f6775\",2,8 },\n+  { \"msp430f67751\",2,8 },\n+  { \"msp430f67751a\",2,8 },\n+  { \"msp430f6775a\",2,8 },\n+  { \"msp430f6776\",2,8 },\n+  { \"msp430f67761\",2,8 },\n+  { \"msp430f67761a\",2,8 },\n+  { \"msp430f6776a\",2,8 },\n+  { \"msp430f6777\",2,8 },\n+  { \"msp430f67771\",2,8 },\n+  { \"msp430f67771a\",2,8 },\n+  { \"msp430f6777a\",2,8 },\n+  { \"msp430f6778\",2,8 },\n+  { \"msp430f67781\",2,8 },\n+  { \"msp430f67781a\",2,8 },\n+  { \"msp430f6778a\",2,8 },\n+  { \"msp430f6779\",2,8 },\n+  { \"msp430f67791\",2,8 },\n+  { \"msp430f67791a\",2,8 },\n+  { \"msp430f6779a\",2,8 },\n+  { \"msp430fe423\",0,0 },\n+  { \"msp430fe4232\",0,0 },\n+  { \"msp430fe423a\",0,0 },\n+  { \"msp430fe4242\",0,0 },\n+  { \"msp430fe425\",0,0 },\n+  { \"msp430fe4252\",0,0 },\n+  { \"msp430fe425a\",0,0 },\n+  { \"msp430fe427\",0,0 },\n+  { \"msp430fe4272\",0,0 },\n+  { \"msp430fe427a\",0,0 },\n+  { \"msp430fg4250\",0,0 },\n+  { \"msp430fg4260\",0,0 },\n+  { \"msp430fg4270\",0,0 },\n+  { \"msp430fg437\",0,0 },\n+  { \"msp430fg438\",0,0 },\n+  { \"msp430fg439\",0,0 },\n+  { \"msp430fg4616\",1,1 },\n+  { \"msp430fg4617\",1,1 },\n+  { \"msp430fg4618\",1,1 },\n+  { \"msp430fg4619\",1,1 },\n+  { \"msp430fg477\",0,0 },\n+  { \"msp430fg478\",0,0 },\n+  { \"msp430fg479\",0,0 },\n+  { \"msp430fg6425\",2,8 },\n+  { \"msp430fg6426\",2,8 },\n+  { \"msp430fg6625\",2,8 },\n+  { \"msp430fg6626\",2,8 },\n+  { \"msp430fr2032\",2,0 },\n+  { \"msp430fr2033\",2,0 },\n+  { \"msp430fr2433\",2,8 },\n+  { \"msp430fr2xx_4xxgeneric\",2,8 },\n+  { \"msp430fr4131\",2,0 },\n+  { \"msp430fr4132\",2,0 },\n+  { \"msp430fr4133\",2,0 },\n+  { \"msp430fr5720\",2,8 },\n+  { \"msp430fr5721\",2,8 },\n+  { \"msp430fr5722\",2,8 },\n+  { \"msp430fr5723\",2,8 },\n+  { \"msp430fr5724\",2,8 },\n+  { \"msp430fr5725\",2,8 },\n+  { \"msp430fr5726\",2,8 },\n+  { \"msp430fr5727\",2,8 },\n+  { \"msp430fr5728\",2,8 },\n+  { \"msp430fr5729\",2,8 },\n+  { \"msp430fr5730\",2,8 },\n+  { \"msp430fr5731\",2,8 },\n+  { \"msp430fr5732\",2,8 },\n+  { \"msp430fr5733\",2,8 },\n+  { \"msp430fr5734\",2,8 },\n+  { \"msp430fr5735\",2,8 },\n+  { \"msp430fr5736\",2,8 },\n+  { \"msp430fr5737\",2,8 },\n+  { \"msp430fr5738\",2,8 },\n+  { \"msp430fr5739\",2,8 },\n+  { \"msp430fr57xxgeneric\",2,8 },\n+  { \"msp430fr5847\",2,8 },\n+  { \"msp430fr58471\",2,8 },\n+  { \"msp430fr5848\",2,8 },\n+  { \"msp430fr5849\",2,8 },\n+  { \"msp430fr5857\",2,8 },\n+  { \"msp430fr5858\",2,8 },\n+  { \"msp430fr5859\",2,8 },\n+  { \"msp430fr5867\",2,8 },\n+  { \"msp430fr58671\",2,8 },\n+  { \"msp430fr5868\",2,8 },\n+  { \"msp430fr5869\",2,8 },\n+  { \"msp430fr5870\",2,8 },\n+  { \"msp430fr5872\",2,8 },\n+  { \"msp430fr58721\",2,8 },\n+  { \"msp430fr5887\",2,8 },\n+  { \"msp430fr5888\",2,8 },\n+  { \"msp430fr5889\",2,8 },\n+  { \"msp430fr58891\",2,8 },\n+  { \"msp430fr5922\",2,8 },\n+  { \"msp430fr59221\",2,8 },\n+  { \"msp430fr5947\",2,8 },\n+  { \"msp430fr59471\",2,8 },\n+  { \"msp430fr5948\",2,8 },\n+  { \"msp430fr5949\",2,8 },\n+  { \"msp430fr5957\",2,8 },\n+  { \"msp430fr5958\",2,8 },\n+  { \"msp430fr5959\",2,8 },\n+  { \"msp430fr5967\",2,8 },\n+  { \"msp430fr5968\",2,8 },\n+  { \"msp430fr5969\",2,8 },\n+  { \"msp430fr59691\",2,8 },\n+  { \"msp430fr5970\",2,8 },\n+  { \"msp430fr5972\",2,8 },\n+  { \"msp430fr59721\",2,8 },\n+  { \"msp430fr5986\",2,8 },\n+  { \"msp430fr5987\",2,8 },\n+  { \"msp430fr5988\",2,8 },\n+  { \"msp430fr5989\",2,8 },\n+  { \"msp430fr59891\",2,8 },\n+  { \"msp430fr5xx_6xxgeneric\",2,8 },\n+  { \"msp430fr6820\",2,8 },\n+  { \"msp430fr6822\",2,8 },\n+  { \"msp430fr68221\",2,8 },\n+  { \"msp430fr6870\",2,8 },\n+  { \"msp430fr6872\",2,8 },\n+  { \"msp430fr68721\",2,8 },\n+  { \"msp430fr6877\",2,8 },\n+  { \"msp430fr6879\",2,8 },\n+  { \"msp430fr68791\",2,8 },\n+  { \"msp430fr6887\",2,8 },\n+  { \"msp430fr6888\",2,8 },\n+  { \"msp430fr6889\",2,8 },\n+  { \"msp430fr68891\",2,8 },\n+  { \"msp430fr6920\",2,8 },\n+  { \"msp430fr6922\",2,8 },\n+  { \"msp430fr69221\",2,8 },\n+  { \"msp430fr6927\",2,8 },\n+  { \"msp430fr69271\",2,8 },\n+  { \"msp430fr6928\",2,8 },\n+  { \"msp430fr6970\",2,8 },\n+  { \"msp430fr6972\",2,8 },\n+  { \"msp430fr69721\",2,8 },\n+  { \"msp430fr6977\",2,8 },\n+  { \"msp430fr6979\",2,8 },\n+  { \"msp430fr69791\",2,8 },\n+  { \"msp430fr6987\",2,8 },\n+  { \"msp430fr6988\",2,8 },\n+  { \"msp430fr6989\",2,8 },\n+  { \"msp430fr69891\",2,8 },\n+  { \"msp430fw423\",0,0 },\n+  { \"msp430fw425\",0,0 },\n+  { \"msp430fw427\",0,0 },\n+  { \"msp430fw428\",0,0 },\n+  { \"msp430fw429\",0,0 },\n+  { \"msp430g2001\",0,0 },\n+  { \"msp430g2101\",0,0 },\n+  { \"msp430g2102\",0,0 },\n+  { \"msp430g2111\",0,0 },\n+  { \"msp430g2112\",0,0 },\n+  { \"msp430g2113\",0,0 },\n+  { \"msp430g2121\",0,0 },\n+  { \"msp430g2131\",0,0 },\n+  { \"msp430g2132\",0,0 },\n+  { \"msp430g2152\",0,0 },\n+  { \"msp430g2153\",0,0 },\n+  { \"msp430g2201\",0,0 },\n+  { \"msp430g2202\",0,0 },\n+  { \"msp430g2203\",0,0 },\n+  { \"msp430g2210\",0,0 },\n+  { \"msp430g2211\",0,0 },\n+  { \"msp430g2212\",0,0 },\n+  { \"msp430g2213\",0,0 },\n+  { \"msp430g2221\",0,0 },\n+  { \"msp430g2230\",0,0 },\n+  { \"msp430g2231\",0,0 },\n+  { \"msp430g2232\",0,0 },\n+  { \"msp430g2233\",0,0 },\n+  { \"msp430g2252\",0,0 },\n+  { \"msp430g2253\",0,0 },\n+  { \"msp430g2302\",0,0 },\n+  { \"msp430g2303\",0,0 },\n+  { \"msp430g2312\",0,0 },\n+  { \"msp430g2313\",0,0 },\n+  { \"msp430g2332\",0,0 },\n+  { \"msp430g2333\",0,0 },\n+  { \"msp430g2352\",0,0 },\n+  { \"msp430g2353\",0,0 },\n+  { \"msp430g2402\",0,0 },\n+  { \"msp430g2403\",0,0 },\n+  { \"msp430g2412\",0,0 },\n+  { \"msp430g2413\",0,0 },\n+  { \"msp430g2432\",0,0 },\n+  { \"msp430g2433\",0,0 },\n+  { \"msp430g2444\",0,0 },\n+  { \"msp430g2452\",0,0 },\n+  { \"msp430g2453\",0,0 },\n+  { \"msp430g2513\",0,0 },\n+  { \"msp430g2533\",0,0 },\n+  { \"msp430g2544\",0,0 },\n+  { \"msp430g2553\",0,0 },\n+  { \"msp430g2744\",0,0 },\n+  { \"msp430g2755\",0,0 },\n+  { \"msp430g2855\",0,0 },\n+  { \"msp430g2955\",0,0 },\n+  { \"msp430i2020\",0,2 },\n+  { \"msp430i2021\",0,2 },\n+  { \"msp430i2030\",0,2 },\n+  { \"msp430i2031\",0,2 },\n+  { \"msp430i2040\",0,2 },\n+  { \"msp430i2041\",0,2 },\n+  { \"msp430i2xxgeneric\",0,2 },\n+  { \"msp430l092\",0,0 },\n+  { \"msp430p112\",0,0 },\n+  { \"msp430p313\",0,0 },\n+  { \"msp430p315\",0,0 },\n+  { \"msp430p315s\",0,0 },\n+  { \"msp430p325\",0,0 },\n+  { \"msp430p337\",0,1 },\n+  { \"msp430sl5438a\",2,8 },\n+  { \"msp430tch5e\",0,0 },\n+  { \"msp430xgeneric\",2,8 },\n+  { \"rf430f5144\",2,8 },\n+  { \"rf430f5155\",2,8 },\n+  { \"rf430f5175\",2,8 },\n+  { \"rf430frl152h\",0,0 },\n+  { \"rf430frl152h_rom\",0,0 },\n+  { \"rf430frl153h\",0,0 },\n+  { \"rf430frl153h_rom\",0,0 },\n+  { \"rf430frl154h\",0,0 },\n+  { \"rf430frl154h_rom\",0,0 }\n+};  \n \n /* Generate a C preprocessor symbol based upon the MCU selected by the user.\n    If a specific MCU has not been selected then return a generic symbol instead.  */\n@@ -215,14 +764,19 @@ msp430_option_override (void)\n \t supports 430.  */\n       msp430x = true;\n \n-      for (i = ARRAY_SIZE (msp430_mcu_names); i--;)\n-\tif (strcasecmp (msp430_mcu_names[i], target_mcu) == 0)\n+      /* FIXME: This array is alpha sorted, so we could use a binary search.  */\n+      for (i = ARRAY_SIZE (msp430_mcu_data); i--;)\n+\tif (strcasecmp (msp430_mcu_data[i].name, target_mcu) == 0)\n \t  {\n-\t    msp430x = false;\n+\t    msp430x = msp430_mcu_data[i].revision >= 1;\n \t    break;\n \t  }\n-      /* It is not an error if we do not match the MCU name.  There are\n-\t hundreds of them.  */\n+      if (i < 0)\n+\t{\n+\t  warning (0, \"Unrecognised MCU name '%s', assuming that it is just a MSP430 with no hardware multiply\",\n+\t\t   target_mcu);\n+\t  msp430x = false;\n+\t}\n     }\n \n   if (TARGET_LARGE && !msp430x)\n@@ -1686,7 +2240,7 @@ msp430_section_type_flags (tree decl, const char * name, int reloc)\n     name += strlen (either_prefix);\n   else if (strcmp (name, \".noinit\") == 0)\n     return SECTION_WRITE | SECTION_BSS | SECTION_NOTYPE;\n-  else if (strcmp (name, \".persisten\") == 0)\n+  else if (strcmp (name, \".persistent\") == 0)\n     return SECTION_WRITE | SECTION_NOTYPE;\n   \n   return default_section_type_flags (decl, name, reloc);\n@@ -2605,21 +3159,12 @@ msp430_use_f5_series_hwmult (void)\n   if (strncasecmp (target_mcu, \"msp430f6\", 8) == 0)\n     return cached_result = true;\n \n-  static const char * known_f5_mult_mcus [] =\n-    {\n-      \"cc430f5123\",\t\"cc430f5125\",\t\"cc430f5133\",\n-      \"cc430f5135\",\t\"cc430f5137\",\t\"cc430f5143\",\n-      \"cc430f5145\",\t\"cc430f5147\",\t\"cc430f6125\",\n-      \"cc430f6126\",\t\"cc430f6127\",\t\"cc430f6135\",\n-      \"cc430f6137\",\t\"cc430f6143\",\t\"cc430f6145\",\n-      \"cc430f6147\",\t\"msp430bt5190\",\t\"msp430sl5438a\",\n-      \"msp430xgeneric\"\n-    };\n   int i;\n \n-  for (i = ARRAY_SIZE (known_f5_mult_mcus); i--;)\n-    if (strcasecmp (target_mcu, known_f5_mult_mcus[i]) == 0)\n-      return cached_result = true;\n+  /* FIXME: This array is alpha sorted - we could use a binary search.  */\n+  for (i = ARRAY_SIZE (msp430_mcu_data); i--;)\n+    if (strcasecmp (target_mcu, msp430_mcu_data[i].name) == 0)\n+      return cached_result = msp430_mcu_data[i].hwmpy == 8;\n \n   return cached_result = false;\n }\n@@ -2630,15 +3175,6 @@ msp430_use_f5_series_hwmult (void)\n static bool\n use_32bit_hwmult (void)\n {\n-  static const char * known_32bit_mult_mcus [] =\n-    {\n-      \"msp430f4783\",      \"msp430f4793\",      \"msp430f4784\",\n-      \"msp430f4794\",      \"msp430f47126\",     \"msp430f47127\",\n-      \"msp430f47163\",     \"msp430f47173\",     \"msp430f47183\",\n-      \"msp430f47193\",     \"msp430f47166\",     \"msp430f47176\",\n-      \"msp430f47186\",     \"msp430f47196\",     \"msp430f47167\",\n-      \"msp430f47177\",     \"msp430f47187\",     \"msp430f47197\"\n-    };\n   static const char * cached_match = NULL;\n   static bool         cached_result;\n   int i;\n@@ -2653,9 +3189,11 @@ use_32bit_hwmult (void)\n     return cached_result;\n \n   cached_match = target_mcu;\n-  for (i = ARRAY_SIZE (known_32bit_mult_mcus); i--;)\n-    if (strcasecmp (target_mcu, known_32bit_mult_mcus[i]) == 0)\n-      return cached_result = true;\n+\n+  /* FIXME: This array is alpha sorted - we could use a binary search.  */\n+  for (i = ARRAY_SIZE (msp430_mcu_data); i--;)\n+    if (strcasecmp (target_mcu, msp430_mcu_data[i].name) == 0)\n+      return cached_result = msp430_mcu_data[i].hwmpy == 4;\n \n   return cached_result = false;\n }\n@@ -2666,64 +3204,6 @@ use_32bit_hwmult (void)\n static bool\n msp430_no_hwmult (void)\n {\n-  static const char * known_nomult_mcus [] =\n-    {\n-      \"msp430c091\",\t\"msp430c092\",\t\"msp430c111\",\n-      \"msp430c1111\", \t\"msp430c112\", \t\"msp430c1121\",\n-      \"msp430c1331\", \t\"msp430c1351\", \t\"msp430c311s\",\n-      \"msp430c312\", \t\"msp430c313\", \t\"msp430c314\",\n-      \"msp430c315\", \t\"msp430c323\", \t\"msp430c325\",\n-      \"msp430c412\", \t\"msp430c413\", \t\"msp430e112\",\n-      \"msp430e313\", \t\"msp430e315\", \t\"msp430e325\",\n-      \"msp430f110\", \t\"msp430f1101\", \t\"msp430f1101a\",\n-      \"msp430f1111\", \t\"msp430f1111a\",\t\"msp430f112\",\n-      \"msp430f1121\", \t\"msp430f1121a\", \"msp430f1122\",\n-      \"msp430f1132\", \t\"msp430f122\", \t\"msp430f1222\",\n-      \"msp430f123\", \t\"msp430f1232\", \t\"msp430f133\",\n-      \"msp430f135\", \t\"msp430f155\", \t\"msp430f156\",\n-      \"msp430f157\", \t\"msp430f2001\", \t\"msp430f2002\",\n-      \"msp430f2003\", \t\"msp430f2011\", \t\"msp430f2012\",\n-      \"msp430f2013\", \t\"msp430f2101\", \t\"msp430f2111\",\n-      \"msp430f2112\", \t\"msp430f2121\", \t\"msp430f2122\",\n-      \"msp430f2131\", \t\"msp430f2132\", \t\"msp430f2232\",\n-      \"msp430f2234\", \t\"msp430f2252\", \t\"msp430f2254\",\n-      \"msp430f2272\", \t\"msp430f2274\", \t\"msp430f412\",\n-      \"msp430f413\", \t\"msp430f4132\", \t\"msp430f415\",\n-      \"msp430f4152\", \t\"msp430f417\", \t\"msp430f4250\",\n-      \"msp430f4260\", \t\"msp430f4270\", \t\"msp430f435\",\n-      \"msp430f4351\", \t\"msp430f436\", \t\"msp430f4361\",\n-      \"msp430f437\", \t\"msp430f4371\", \t\"msp430f438\",\n-      \"msp430f439\", \t\"msp430f477\", \t\"msp430f478\",\n-      \"msp430f479\", \t\"msp430fe423\", \t\"msp430fe4232\",\n-      \"msp430fe423a\",   \"msp430fe4242\",\t\"msp430fe425\",\n-      \"msp430fe4252\",   \"msp430fe425a\", \"msp430fe427\",\n-      \"msp430fe4272\",   \"msp430fe427a\", \"msp430fg4250\",\n-      \"msp430fg4260\",   \"msp430fg4270\", \"msp430fg437\",\n-      \"msp430fg438\", \t\"msp430fg439\", \t\"msp430fg477\",\n-      \"msp430fg478\", \t\"msp430fg479\",  \"msp430fr2032\",\n-      \"msp430fr2033\",\t\"msp430fr4131\",\t\"msp430fr4132\",\n-      \"msp430fr4133\",\t\"msp430fw423\",  \"msp430fw425\",\n-      \"msp430fw427\", \t\"msp430fw428\",  \"msp430fw429\",\n-      \"msp430g2001\", \t\"msp430g2101\",  \"msp430g2102\",\n-      \"msp430g2111\", \t\"msp430g2112\",  \"msp430g2113\",\n-      \"msp430g2121\", \t\"msp430g2131\",  \"msp430g2132\",\n-      \"msp430g2152\", \t\"msp430g2153\",  \"msp430g2201\",\n-      \"msp430g2202\", \t\"msp430g2203\",  \"msp430g2210\",\n-      \"msp430g2211\", \t\"msp430g2212\",  \"msp430g2213\",\n-      \"msp430g2221\", \t\"msp430g2230\",  \"msp430g2231\",\n-      \"msp430g2232\", \t\"msp430g2233\",  \"msp430g2252\",\n-      \"msp430g2253\", \t\"msp430g2302\",  \"msp430g2303\",\n-      \"msp430g2312\", \t\"msp430g2313\",  \"msp430g2332\",\n-      \"msp430g2333\", \t\"msp430g2352\",  \"msp430g2353\",\n-      \"msp430g2402\", \t\"msp430g2403\",  \"msp430g2412\",\n-      \"msp430g2413\", \t\"msp430g2432\",  \"msp430g2433\",\n-      \"msp430g2444\", \t\"msp430g2452\",  \"msp430g2453\",\n-      \"msp430g2513\", \t\"msp430g2533\",  \"msp430g2544\",\n-      \"msp430g2553\", \t\"msp430g2744\",  \"msp430g2755\",\n-      \"msp430g2855\", \t\"msp430g2955\",  \"msp430l092\",\n-      \"msp430p112\", \t\"msp430p313\",   \"msp430p315\",\n-      \"msp430p315s\", \t\"msp430p325\",   \"msp430tch5e\"\n-    };\n   static const char * cached_match = NULL;\n   static bool         cached_result;\n   int i;\n@@ -2738,11 +3218,15 @@ msp430_no_hwmult (void)\n     return cached_result;\n \n   cached_match = target_mcu;\n-  for (i = ARRAY_SIZE (known_nomult_mcus); i--;)\n-    if (strcasecmp (target_mcu, known_nomult_mcus[i]) == 0)\n-      return cached_result = true;\n \n-  return cached_result = false;\n+  /* FIXME: This array is alpha sorted - we could use a binary search.  */\n+  for (i = ARRAY_SIZE (msp430_mcu_data); i--;)\n+    if (strcasecmp (target_mcu, msp430_mcu_data[i].name) == 0)\n+      return cached_result = msp430_mcu_data[i].hwmpy == 0;\n+\n+  /* If we do not recognise the MCU name, we assume that it does not support\n+     any kind of hardware multiply - this is the safest assumption to make.  */\n+  return cached_result = true;\n }\n \n /* This function does the same as the default, but it will replace GCC"}, {"sha": "9e028fc14624946ef6745669142ac3036b1937f8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aad11912df52e9526af3c1c029541f5af2526f1c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aad11912df52e9526af3c1c029541f5af2526f1c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=aad11912df52e9526af3c1c029541f5af2526f1c", "patch": "@@ -18392,8 +18392,9 @@ for the original 16-bit-only multiply supported by early MCUs.\n A value of @samp{auto} can also be given.  This tells GCC to deduce\n the hardware multiply support based upon the MCU name provided by the\n @option{-mmcu} option.  If no @option{-mmcu} option is specified then\n-@samp{32bit} hardware multiply support is assumed.  @samp{auto} is the\n-default setting.\n+@samp{32bit} hardware multiply support is assumed.  If the MCU name is\n+not recognised then no hardware multiply support is assumed.\n+@code{auto} is the default setting.\n \n Hardware multiplies are normally performed by calling a library\n routine.  This saves space in the generated code.  When compiling at"}]}