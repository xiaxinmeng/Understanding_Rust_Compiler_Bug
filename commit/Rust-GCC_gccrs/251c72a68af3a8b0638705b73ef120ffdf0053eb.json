{"sha": "251c72a68af3a8b0638705b73ef120ffdf0053eb", "node_id": "C_kwDOANBUbNoAKDI1MWM3MmE2OGFmM2E4YjA2Mzg3MDViNzNlZjEyMGZmZGYwMDUzZWI", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-11-10T21:33:03Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-11-23T01:32:18Z"}, "message": "configure: Implement --enable-host-pie\n\nThis patch implements the --enable-host-pie configure option which\nmakes the compiler executables PIE.  This can be used to enhance\nprotection against ROP attacks, and can be viewed as part of a wider\ntrend to harden binaries.\n\nIt is similar to the option --enable-host-shared, except that --e-h-s\nwon't add -shared to the linker flags whereas --e-h-p will add -pie.\nIt is different from --enable-default-pie because that option just\nadds an implicit -fPIE/-pie when the compiler is invoked, but the\ncompiler itself isn't PIE.\n\nSince r12-5768-gfe7c3ecf, PCH works well with PIE, so there are no PCH\nregressions.\n\nWhen building the compiler, the build process may use various in-tree\nlibraries; these need to be built with -fPIE so that it's possible to\nuse them when building a PIE.  For instance, when --with-included-gettext\nis in effect, intl object files must be compiled with -fPIE.  Similarly,\nwhen building in-tree gmp, isl, mpfr and mpc, they must be compiled with\n-fPIE.\n\nI plan to add an option to link with -Wl,-z,now.\n\nChangeLog:\n\n\t* Makefile.def: Pass $(PICFLAG) to AM_CFLAGS for gmp, mpfr, mpc, and\n\tisl.\n\t* Makefile.in: Regenerate.\n\t* Makefile.tpl: Set PICFLAG.\n\t* configure.ac (--enable-host-pie): New check.  Set PICFLAG after this\n\tcheck.\n\t* configure: Regenerate.\n\nc++tools/ChangeLog:\n\n\t* Makefile.in: Rename PIEFLAG to PICFLAG.  Set LD_PICFLAG.  Use it.\n\tUse pic/libiberty.a if PICFLAG is set.\n\t* configure.ac (--enable-default-pie): Set PICFLAG instead of PIEFLAG.\n\t(--enable-host-pie): New check.\n\t* configure: Regenerate.\n\nfixincludes/ChangeLog:\n\n\t* Makefile.in: Set and use PICFLAG and LD_PICFLAG.  Use the \"pic\"\n\tbuild of libiberty if PICFLAG is set.\n\t* configure.ac:\n\t* configure: Regenerate.\n\ngcc/ChangeLog:\n\n\t* Makefile.in: Set LD_PICFLAG.  Use it.  Set enable_host_pie.\n\tRemove NO_PIE_CFLAGS and NO_PIE_FLAG.  Pass LD_PICFLAG to\n\tALL_LINKERFLAGS.  Use the \"pic\" build of libiberty if --enable-host-pie.\n\t* configure.ac (--enable-host-shared): Don't set PICFLAG here.\n\t(--enable-host-pie): New check.  Set PICFLAG and LD_PICFLAG after this\n\tcheck.\n\t* configure: Regenerate.\n\t* doc/install.texi: Document --enable-host-pie.\n\ngcc/d/ChangeLog:\n\n\t* Make-lang.in: Remove NO_PIE_CFLAGS.\n\nintl/ChangeLog:\n\n\t* Makefile.in: Use @PICFLAG@ in COMPILE as well.\n\t* configure.ac (--enable-host-shared): Don't set PICFLAG here.\n\t(--enable-host-pie): New check.  Set PICFLAG after this check.\n\t* configure: Regenerate.\n\nlibcody/ChangeLog:\n\n\t* Makefile.in: Pass LD_PICFLAG to LDFLAGS.\n\t* configure.ac (--enable-host-shared): Don't set PICFLAG here.\n\t(--enable-host-pie): New check.  Set PICFLAG and LD_PICFLAG after this\n\tcheck.\n\t* configure: Regenerate.\n\nlibcpp/ChangeLog:\n\n\t* configure.ac (--enable-host-shared): Don't set PICFLAG here.\n\t(--enable-host-pie): New check.  Set PICFLAG after this check.\n\t* configure: Regenerate.\n\nlibdecnumber/ChangeLog:\n\n\t* configure.ac (--enable-host-shared): Don't set PICFLAG here.\n\t(--enable-host-pie): New check.  Set PICFLAG after this check.\n\t* configure: Regenerate.\n\nlibiberty/ChangeLog:\n\n\t* configure.ac: Also set shared when enable_host_pie.\n\t* configure: Regenerate.\n\nzlib/ChangeLog:\n\n\t* configure.ac (--enable-host-shared): Don't set PICFLAG here.\n\t(--enable-host-pie): New check.  Set PICFLAG after this check.\n\t* configure: Regenerate.", "tree": {"sha": "a187b2e4bcfa9277983d2fa35fb5af088c4a3a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a187b2e4bcfa9277983d2fa35fb5af088c4a3a87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/251c72a68af3a8b0638705b73ef120ffdf0053eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251c72a68af3a8b0638705b73ef120ffdf0053eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251c72a68af3a8b0638705b73ef120ffdf0053eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251c72a68af3a8b0638705b73ef120ffdf0053eb/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0e4cdb48b75434f27e6874c5b7c386eb167f340", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0e4cdb48b75434f27e6874c5b7c386eb167f340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0e4cdb48b75434f27e6874c5b7c386eb167f340"}], "stats": {"total": 765, "additions": 549, "deletions": 216}, "files": [{"sha": "ba2903d4b30fcf91b060ac468898505982ac592d", "filename": "Makefile.def", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -51,7 +51,7 @@ host_modules= { module= gcc; bootstrap=true;\n host_modules= { module= gmp; lib_path=.libs; bootstrap=true;\n \t\t// Work around in-tree gmp configure bug with missing flex.\n \t\textra_configure_flags='--disable-shared LEX=\"touch lex.yy.c\"';\n-\t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM\"';\n+\t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"';\n \t\tno_install= true;\n \t\t// none-*-* disables asm optimizations, bootstrap-testing\n \t\t// the compiler more thoroughly.\n@@ -61,14 +61,15 @@ host_modules= { module= gmp; lib_path=.libs; bootstrap=true;\n \t        target=\"none-${host_vendor}-${host_os}\"; };\n host_modules= { module= mpfr; lib_path=src/.libs; bootstrap=true;\n \t\textra_configure_flags='--disable-shared @extra_mpfr_configure_flags@';\n-\t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM\"';\n+\t\textra_make_flags='AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"';\n \t\tno_install= true; };\n host_modules= { module= mpc; lib_path=src/.libs; bootstrap=true;\n \t\textra_configure_flags='--disable-shared @extra_mpc_gmp_configure_flags@ @extra_mpc_mpfr_configure_flags@ --disable-maintainer-mode';\n+\t\textra_make_flags='AM_CFLAGS=\"$(PICFLAG)\"';\n \t\tno_install= true; };\n host_modules= { module= isl; lib_path=.libs; bootstrap=true;\n \t\textra_configure_flags='--disable-shared @extra_isl_gmp_configure_flags@';\n-\t\textra_make_flags='V=1';\n+\t\textra_make_flags='V=1 AM_CFLAGS=\"$(PICFLAG)\"';\n \t\tno_install= true; };\n host_modules= { module= gold; bootstrap=true; };\n host_modules= { module= gprof; };"}, {"sha": "9bc00b2dda0201f75db540a34a358470dae5530f", "filename": "Makefile.in", "status": "modified", "additions": 137, "deletions": 136, "changes": 273, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -428,6 +428,7 @@ READELF = @READELF@\n STRIP = @STRIP@\n WINDRES = @WINDRES@\n WINDMC = @WINDMC@\n+PICFLAG = @PICFLAG@\n \n GDC = @GDC@\n GNATBIND = @GNATBIND@\n@@ -13424,7 +13425,7 @@ all-gmp: configure-gmp\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/gmp && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\t$(TARGET-gmp))\n @endif gmp\n \n@@ -13455,7 +13456,7 @@ all-stage1-gmp: configure-stage1-gmp\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\t$(EXTRA_HOST_FLAGS)  \\\n-\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n \t\t$(TARGET-stage1-gmp)\n \n@@ -13470,7 +13471,7 @@ clean-stage1-gmp:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif gmp-bootstrap\n \n \n@@ -13499,7 +13500,7 @@ all-stage2-gmp: configure-stage2-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n \t\t$(TARGET-stage2-gmp)\n \n@@ -13513,7 +13514,7 @@ clean-stage2-gmp:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif gmp-bootstrap\n \n \n@@ -13542,7 +13543,7 @@ all-stage3-gmp: configure-stage3-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n \t\t$(TARGET-stage3-gmp)\n \n@@ -13556,7 +13557,7 @@ clean-stage3-gmp:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif gmp-bootstrap\n \n \n@@ -13585,7 +13586,7 @@ all-stage4-gmp: configure-stage4-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n \t\t$(TARGET-stage4-gmp)\n \n@@ -13599,7 +13600,7 @@ clean-stage4-gmp:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif gmp-bootstrap\n \n \n@@ -13628,7 +13629,7 @@ all-stageprofile-gmp: configure-stageprofile-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageprofile-gmp)\n \n@@ -13642,7 +13643,7 @@ clean-stageprofile-gmp:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif gmp-bootstrap\n \n \n@@ -13671,7 +13672,7 @@ all-stagetrain-gmp: configure-stagetrain-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n \t\t$(TARGET-stagetrain-gmp)\n \n@@ -13685,7 +13686,7 @@ clean-stagetrain-gmp:\n \t  $(MAKE) stagetrain-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif gmp-bootstrap\n \n \n@@ -13714,7 +13715,7 @@ all-stagefeedback-gmp: configure-stagefeedback-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n \t\t$(TARGET-stagefeedback-gmp)\n \n@@ -13728,7 +13729,7 @@ clean-stagefeedback-gmp:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif gmp-bootstrap\n \n \n@@ -13757,7 +13758,7 @@ all-stageautoprofile-gmp: configure-stageautoprofile-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageautoprofile-gmp)\n \n@@ -13771,7 +13772,7 @@ clean-stageautoprofile-gmp:\n \t  $(MAKE) stageautoprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif gmp-bootstrap\n \n \n@@ -13800,7 +13801,7 @@ all-stageautofeedback-gmp: configure-stageautofeedback-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n \t\t$(TARGET-stageautofeedback-gmp)\n \n@@ -13814,7 +13815,7 @@ clean-stageautofeedback-gmp:\n \t  $(MAKE) stageautofeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif gmp-bootstrap\n \n \n@@ -13832,7 +13833,7 @@ check-gmp:\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n \t(cd $(HOST_SUBDIR)/gmp && \\\n-\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif gmp\n \n@@ -13867,7 +13868,7 @@ info-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing info in gmp\"; \\\n@@ -13892,7 +13893,7 @@ dvi-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing dvi in gmp\"; \\\n@@ -13917,7 +13918,7 @@ pdf-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing pdf in gmp\"; \\\n@@ -13942,7 +13943,7 @@ html-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing html in gmp\"; \\\n@@ -13967,7 +13968,7 @@ TAGS-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing TAGS in gmp\"; \\\n@@ -13993,7 +13994,7 @@ install-info-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-info in gmp\"; \\\n@@ -14019,7 +14020,7 @@ install-dvi-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-dvi in gmp\"; \\\n@@ -14045,7 +14046,7 @@ install-pdf-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-pdf in gmp\"; \\\n@@ -14071,7 +14072,7 @@ install-html-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-html in gmp\"; \\\n@@ -14096,7 +14097,7 @@ installcheck-gmp: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing installcheck in gmp\"; \\\n@@ -14120,7 +14121,7 @@ mostlyclean-gmp:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing mostlyclean in gmp\"; \\\n@@ -14144,7 +14145,7 @@ clean-gmp:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing clean in gmp\"; \\\n@@ -14168,7 +14169,7 @@ distclean-gmp:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing distclean in gmp\"; \\\n@@ -14192,7 +14193,7 @@ maintainer-clean-gmp:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing maintainer-clean in gmp\"; \\\n@@ -14561,7 +14562,7 @@ all-mpfr: configure-mpfr\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/mpfr && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\t$(TARGET-mpfr))\n @endif mpfr\n \n@@ -14592,7 +14593,7 @@ all-stage1-mpfr: configure-stage1-mpfr\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\t$(EXTRA_HOST_FLAGS)  \\\n-\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n \t\t$(TARGET-stage1-mpfr)\n \n@@ -14607,7 +14608,7 @@ clean-stage1-mpfr:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14636,7 +14637,7 @@ all-stage2-mpfr: configure-stage2-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n \t\t$(TARGET-stage2-mpfr)\n \n@@ -14650,7 +14651,7 @@ clean-stage2-mpfr:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14679,7 +14680,7 @@ all-stage3-mpfr: configure-stage3-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n \t\t$(TARGET-stage3-mpfr)\n \n@@ -14693,7 +14694,7 @@ clean-stage3-mpfr:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14722,7 +14723,7 @@ all-stage4-mpfr: configure-stage4-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n \t\t$(TARGET-stage4-mpfr)\n \n@@ -14736,7 +14737,7 @@ clean-stage4-mpfr:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14765,7 +14766,7 @@ all-stageprofile-mpfr: configure-stageprofile-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageprofile-mpfr)\n \n@@ -14779,7 +14780,7 @@ clean-stageprofile-mpfr:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14808,7 +14809,7 @@ all-stagetrain-mpfr: configure-stagetrain-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n \t\t$(TARGET-stagetrain-mpfr)\n \n@@ -14822,7 +14823,7 @@ clean-stagetrain-mpfr:\n \t  $(MAKE) stagetrain-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14851,7 +14852,7 @@ all-stagefeedback-mpfr: configure-stagefeedback-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n \t\t$(TARGET-stagefeedback-mpfr)\n \n@@ -14865,7 +14866,7 @@ clean-stagefeedback-mpfr:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14894,7 +14895,7 @@ all-stageautoprofile-mpfr: configure-stageautoprofile-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageautoprofile-mpfr)\n \n@@ -14908,7 +14909,7 @@ clean-stageautoprofile-mpfr:\n \t  $(MAKE) stageautoprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14937,7 +14938,7 @@ all-stageautofeedback-mpfr: configure-stageautofeedback-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n \t\t$(TARGET-stageautofeedback-mpfr)\n \n@@ -14951,7 +14952,7 @@ clean-stageautofeedback-mpfr:\n \t  $(MAKE) stageautofeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" clean\n @endif mpfr-bootstrap\n \n \n@@ -14969,7 +14970,7 @@ check-mpfr:\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n \t(cd $(HOST_SUBDIR)/mpfr && \\\n-\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif mpfr\n \n@@ -15004,7 +15005,7 @@ info-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing info in mpfr\"; \\\n@@ -15029,7 +15030,7 @@ dvi-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing dvi in mpfr\"; \\\n@@ -15054,7 +15055,7 @@ pdf-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing pdf in mpfr\"; \\\n@@ -15079,7 +15080,7 @@ html-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing html in mpfr\"; \\\n@@ -15104,7 +15105,7 @@ TAGS-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing TAGS in mpfr\"; \\\n@@ -15130,7 +15131,7 @@ install-info-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-info in mpfr\"; \\\n@@ -15156,7 +15157,7 @@ install-dvi-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-dvi in mpfr\"; \\\n@@ -15182,7 +15183,7 @@ install-pdf-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-pdf in mpfr\"; \\\n@@ -15208,7 +15209,7 @@ install-html-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-html in mpfr\"; \\\n@@ -15233,7 +15234,7 @@ installcheck-mpfr: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing installcheck in mpfr\"; \\\n@@ -15257,7 +15258,7 @@ mostlyclean-mpfr:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing mostlyclean in mpfr\"; \\\n@@ -15281,7 +15282,7 @@ clean-mpfr:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing clean in mpfr\"; \\\n@@ -15305,7 +15306,7 @@ distclean-mpfr:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing distclean in mpfr\"; \\\n@@ -15329,7 +15330,7 @@ maintainer-clean-mpfr:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM\"; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"-DNO_ASM $(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing maintainer-clean in mpfr\"; \\\n@@ -15698,7 +15699,7 @@ all-mpc: configure-mpc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/mpc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\t$(TARGET-mpc))\n @endif mpc\n \n@@ -15729,7 +15730,7 @@ all-stage1-mpc: configure-stage1-mpc\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\t$(EXTRA_HOST_FLAGS)  \\\n-\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n \t\t$(TARGET-stage1-mpc)\n \n@@ -15744,7 +15745,7 @@ clean-stage1-mpc:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t$(STAGE1_FLAGS_TO_PASS)  clean\n+\t$(STAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif mpc-bootstrap\n \n \n@@ -15773,7 +15774,7 @@ all-stage2-mpc: configure-stage2-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n \t\t$(TARGET-stage2-mpc)\n \n@@ -15787,7 +15788,7 @@ clean-stage2-mpc:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif mpc-bootstrap\n \n \n@@ -15816,7 +15817,7 @@ all-stage3-mpc: configure-stage3-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n \t\t$(TARGET-stage3-mpc)\n \n@@ -15830,7 +15831,7 @@ clean-stage3-mpc:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif mpc-bootstrap\n \n \n@@ -15859,7 +15860,7 @@ all-stage4-mpc: configure-stage4-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n \t\t$(TARGET-stage4-mpc)\n \n@@ -15873,7 +15874,7 @@ clean-stage4-mpc:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif mpc-bootstrap\n \n \n@@ -15902,7 +15903,7 @@ all-stageprofile-mpc: configure-stageprofile-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageprofile-mpc)\n \n@@ -15916,7 +15917,7 @@ clean-stageprofile-mpc:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif mpc-bootstrap\n \n \n@@ -15945,7 +15946,7 @@ all-stagetrain-mpc: configure-stagetrain-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n \t\t$(TARGET-stagetrain-mpc)\n \n@@ -15959,7 +15960,7 @@ clean-stagetrain-mpc:\n \t  $(MAKE) stagetrain-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif mpc-bootstrap\n \n \n@@ -15988,7 +15989,7 @@ all-stagefeedback-mpc: configure-stagefeedback-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n \t\t$(TARGET-stagefeedback-mpc)\n \n@@ -16002,7 +16003,7 @@ clean-stagefeedback-mpc:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif mpc-bootstrap\n \n \n@@ -16031,7 +16032,7 @@ all-stageautoprofile-mpc: configure-stageautoprofile-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageautoprofile-mpc)\n \n@@ -16045,7 +16046,7 @@ clean-stageautoprofile-mpc:\n \t  $(MAKE) stageautoprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif mpc-bootstrap\n \n \n@@ -16074,7 +16075,7 @@ all-stageautofeedback-mpc: configure-stageautofeedback-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n \t\t$(TARGET-stageautofeedback-mpc)\n \n@@ -16088,7 +16089,7 @@ clean-stageautofeedback-mpc:\n \t  $(MAKE) stageautofeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif mpc-bootstrap\n \n \n@@ -16106,7 +16107,7 @@ check-mpc:\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n \t(cd $(HOST_SUBDIR)/mpc && \\\n-\t  $(MAKE) $(FLAGS_TO_PASS)  $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\t  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS=\"$(PICFLAG)\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif mpc\n \n@@ -16141,7 +16142,7 @@ info-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing info in mpc\"; \\\n@@ -16166,7 +16167,7 @@ dvi-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing dvi in mpc\"; \\\n@@ -16191,7 +16192,7 @@ pdf-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing pdf in mpc\"; \\\n@@ -16216,7 +16217,7 @@ html-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing html in mpc\"; \\\n@@ -16241,7 +16242,7 @@ TAGS-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing TAGS in mpc\"; \\\n@@ -16267,7 +16268,7 @@ install-info-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-info in mpc\"; \\\n@@ -16293,7 +16294,7 @@ install-dvi-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-dvi in mpc\"; \\\n@@ -16319,7 +16320,7 @@ install-pdf-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-pdf in mpc\"; \\\n@@ -16345,7 +16346,7 @@ install-html-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-html in mpc\"; \\\n@@ -16370,7 +16371,7 @@ installcheck-mpc: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing installcheck in mpc\"; \\\n@@ -16394,7 +16395,7 @@ mostlyclean-mpc:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing mostlyclean in mpc\"; \\\n@@ -16418,7 +16419,7 @@ clean-mpc:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing clean in mpc\"; \\\n@@ -16442,7 +16443,7 @@ distclean-mpc:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing distclean in mpc\"; \\\n@@ -16466,7 +16467,7 @@ maintainer-clean-mpc:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing maintainer-clean in mpc\"; \\\n@@ -16835,7 +16836,7 @@ all-isl: configure-isl\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/isl && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) V=1 \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\t$(TARGET-isl))\n @endif isl\n \n@@ -16866,7 +16867,7 @@ all-stage1-isl: configure-stage1-isl\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\t$(EXTRA_HOST_FLAGS)  \\\n-\t\t$(STAGE1_FLAGS_TO_PASS) V=1 \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n \t\t$(TARGET-stage1-isl)\n \n@@ -16881,7 +16882,7 @@ clean-stage1-isl:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t$(STAGE1_FLAGS_TO_PASS) V=1 clean\n+\t$(STAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif isl-bootstrap\n \n \n@@ -16910,7 +16911,7 @@ all-stage2-isl: configure-stage2-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n \t\t$(TARGET-stage2-isl)\n \n@@ -16924,7 +16925,7 @@ clean-stage2-isl:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif isl-bootstrap\n \n \n@@ -16953,7 +16954,7 @@ all-stage3-isl: configure-stage3-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n \t\t$(TARGET-stage3-isl)\n \n@@ -16967,7 +16968,7 @@ clean-stage3-isl:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif isl-bootstrap\n \n \n@@ -16996,7 +16997,7 @@ all-stage4-isl: configure-stage4-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n \t\t$(TARGET-stage4-isl)\n \n@@ -17010,7 +17011,7 @@ clean-stage4-isl:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif isl-bootstrap\n \n \n@@ -17039,7 +17040,7 @@ all-stageprofile-isl: configure-stageprofile-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageprofile-isl)\n \n@@ -17053,7 +17054,7 @@ clean-stageprofile-isl:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif isl-bootstrap\n \n \n@@ -17082,7 +17083,7 @@ all-stagetrain-isl: configure-stagetrain-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n \t\t$(TARGET-stagetrain-isl)\n \n@@ -17096,7 +17097,7 @@ clean-stagetrain-isl:\n \t  $(MAKE) stagetrain-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif isl-bootstrap\n \n \n@@ -17125,7 +17126,7 @@ all-stagefeedback-isl: configure-stagefeedback-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n \t\t$(TARGET-stagefeedback-isl)\n \n@@ -17139,7 +17140,7 @@ clean-stagefeedback-isl:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif isl-bootstrap\n \n \n@@ -17168,7 +17169,7 @@ all-stageautoprofile-isl: configure-stageautoprofile-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n \t\t$(TARGET-stageautoprofile-isl)\n \n@@ -17182,7 +17183,7 @@ clean-stageautoprofile-isl:\n \t  $(MAKE) stageautoprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif isl-bootstrap\n \n \n@@ -17211,7 +17212,7 @@ all-stageautofeedback-isl: configure-stageautofeedback-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" \\\n \t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n \t\t$(TARGET-stageautofeedback-isl)\n \n@@ -17225,7 +17226,7 @@ clean-stageautofeedback-isl:\n \t  $(MAKE) stageautofeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" clean\n @endif isl-bootstrap\n \n \n@@ -17243,7 +17244,7 @@ check-isl:\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n \t(cd $(HOST_SUBDIR)/isl && \\\n-\t  $(MAKE) $(FLAGS_TO_PASS) V=1 $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\t  $(MAKE) $(FLAGS_TO_PASS) V=1 AM_CFLAGS=\"$(PICFLAG)\" $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif isl\n \n@@ -17278,7 +17279,7 @@ info-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing info in isl\"; \\\n@@ -17303,7 +17304,7 @@ dvi-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing dvi in isl\"; \\\n@@ -17328,7 +17329,7 @@ pdf-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing pdf in isl\"; \\\n@@ -17353,7 +17354,7 @@ html-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing html in isl\"; \\\n@@ -17378,7 +17379,7 @@ TAGS-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing TAGS in isl\"; \\\n@@ -17404,7 +17405,7 @@ install-info-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-info in isl\"; \\\n@@ -17430,7 +17431,7 @@ install-dvi-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-dvi in isl\"; \\\n@@ -17456,7 +17457,7 @@ install-pdf-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-pdf in isl\"; \\\n@@ -17482,7 +17483,7 @@ install-html-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing install-html in isl\"; \\\n@@ -17507,7 +17508,7 @@ installcheck-isl: \\\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing installcheck in isl\"; \\\n@@ -17531,7 +17532,7 @@ mostlyclean-isl:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing mostlyclean in isl\"; \\\n@@ -17555,7 +17556,7 @@ clean-isl:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing clean in isl\"; \\\n@@ -17579,7 +17580,7 @@ distclean-isl:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing distclean in isl\"; \\\n@@ -17603,7 +17604,7 @@ maintainer-clean-isl:\n \tr=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) \\\n-\tfor flag in $(EXTRA_HOST_FLAGS) V=1; do \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) V=1 AM_CFLAGS=\"$(PICFLAG)\"; do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n \tdone; \\\n \techo \"Doing maintainer-clean in isl\"; \\"}, {"sha": "b73dd6f4b193b7f4136873055da96dd1512bc345", "filename": "Makefile.tpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -431,6 +431,7 @@ READELF = @READELF@\n STRIP = @STRIP@\n WINDRES = @WINDRES@\n WINDMC = @WINDMC@\n+PICFLAG = @PICFLAG@\n \n GDC = @GDC@\n GNATBIND = @GNATBIND@"}, {"sha": "4d5a5b0522b7a94c3f298dd56802777d53429592", "filename": "c++tools/Makefile.in", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/c%2B%2Btools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/c%2B%2Btools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FMakefile.in?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -28,8 +28,9 @@ AUTOCONF := @AUTOCONF@\n AUTOHEADER := @AUTOHEADER@\n CXX := @CXX@\n CXXFLAGS := @CXXFLAGS@\n-PIEFLAG := @PIEFLAG@\n-CXXOPTS := $(CXXFLAGS) $(PIEFLAG) -fno-exceptions -fno-rtti\n+PICFLAG := @PICFLAG@\n+LD_PICFLAG := @LD_PICFLAG@\n+CXXOPTS := $(CXXFLAGS) $(PICFLAG) -fno-exceptions -fno-rtti\n LDFLAGS := @LDFLAGS@\n exeext := @EXEEXT@\n LIBIBERTY := ../libiberty/libiberty.a\n@@ -88,11 +89,15 @@ ifeq (@CXX_AUX_TOOLS@,yes)\n \n all::g++-mapper-server$(exeext)\n \n+ifneq ($(PICFLAG),)\n+override LIBIBERTY := ../libiberty/pic/libiberty.a\n+endif\n+\n MAPPER.O := server.o resolver.o\n CODYLIB = ../libcody/libcody.a\n CXXINC += -I$(srcdir)/../libcody -I$(srcdir)/../include -I$(srcdir)/../gcc -I. -I../gcc\n g++-mapper-server$(exeext): $(MAPPER.O) $(CODYLIB)\n-\t+$(CXX) $(LDFLAGS) $(PIEFLAG) -o $@ $^ $(LIBIBERTY) $(NETLIBS)\n+\t+$(CXX) $(LDFLAGS) $(PICFLAG) $(LD_PICFLAG) -o $@ $^ $(LIBIBERTY) $(NETLIBS)\n \n # copy to gcc dir so tests there can run\n all::../gcc/g++-mapper-server$(exeext)"}, {"sha": "88087009383998664596de2673905dc543a57c5c", "filename": "c++tools/configure", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/c%2B%2Btools%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/c%2B%2Btools%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -627,7 +627,8 @@ get_gcc_base_ver\n EGREP\n GREP\n CXXCPP\n-PIEFLAG\n+LD_PICFLAG\n+PICFLAG\n MAINTAINER\n CXX_AUX_TOOLS\n AUTOHEADER\n@@ -700,6 +701,7 @@ enable_c___tools\n enable_maintainer_mode\n enable_checking\n enable_default_pie\n+enable_host_pie\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1333,6 +1335,7 @@ Optional Features:\n                           only specific categories of checks. Categories are:\n                           yes,no,all,none,release.\n   --enable-default-pie    enable Position Independent Executable as default\n+  --enable-host-pie       build host code as PIE\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -2990,12 +2993,20 @@ fi\n # Check whether --enable-default-pie was given.\n # Check whether --enable-default-pie was given.\n if test \"${enable_default_pie+set}\" = set; then :\n-  enableval=$enable_default_pie; PIEFLAG=-fPIE\n+  enableval=$enable_default_pie; PICFLAG=-fPIE\n else\n-  PIEFLAG=\n+  PICFLAG=\n fi\n \n \n+# Enable --enable-host-pie\n+# Check whether --enable-host-pie was given.\n+if test \"${enable_host_pie+set}\" = set; then :\n+  enableval=$enable_host_pie; PICFLAG=-fPIE; LD_PICFLAG=-pie\n+fi\n+\n+\n+\n \n # Check if O_CLOEXEC is defined by fcntl\n "}, {"sha": "1e42689f2ebde47da462f3379d3e215c60ba43ba", "filename": "c++tools/configure.ac", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/c%2B%2Btools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/c%2B%2Btools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -102,8 +102,15 @@ fi\n AC_ARG_ENABLE(default-pie,\n [AS_HELP_STRING([--enable-default-pie],\n \t\t  [enable Position Independent Executable as default])],\n-[PIEFLAG=-fPIE], [PIEFLAG=])\n-AC_SUBST([PIEFLAG])\n+[PICFLAG=-fPIE], [PICFLAG=])\n+\n+# Enable --enable-host-pie\n+AC_ARG_ENABLE(host-pie,\n+[AS_HELP_STRING([--enable-host-pie],\n+\t\t[build host code as PIE])],\n+[PICFLAG=-fPIE; LD_PICFLAG=-pie], [])\n+AC_SUBST(PICFLAG)\n+AC_SUBST(LD_PICFLAG)\n \n # Check if O_CLOEXEC is defined by fcntl\n AC_CACHE_CHECK(for O_CLOEXEC, ac_cv_o_cloexec, ["}, {"sha": "c72d1abe0276f29263e819768026d042f3f10b14", "filename": "configure", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -685,6 +685,8 @@ get_gcc_base_ver\n extra_host_zlib_configure_flags\n extra_host_libiberty_configure_flags\n stage1_languages\n+PICFLAG\n+enable_host_pie\n host_shared\n extra_linker_plugin_flags\n extra_linker_plugin_configure_flags\n@@ -828,6 +830,7 @@ enable_lto\n enable_linker_plugin_configure_flags\n enable_linker_plugin_flags\n enable_host_shared\n+enable_host_pie\n enable_stage1_languages\n enable_objc_gc\n with_target_bdw_gc\n@@ -1554,6 +1557,7 @@ Optional Features:\n                           additional flags for configuring and building linker\n                           plugins [none]\n   --enable-host-shared    build host code as shared libraries\n+  --enable-host-pie       build host code as PIE\n   --enable-stage1-languages[=all]\n                           choose additional languages to build during stage1.\n                           Mostly useful for compiler development\n@@ -8596,6 +8600,24 @@ fi\n \n \n \n+# Enable --enable-host-pie.\n+# Check whether --enable-host-pie was given.\n+if test \"${enable_host_pie+set}\" = set; then :\n+  enableval=$enable_host_pie;\n+fi\n+\n+\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n+else\n+  PICFLAG=\n+fi\n+\n+\n+\n # By default, C and C++ are the only stage 1 languages.\n stage1_languages=,c,\n "}, {"sha": "7fa12222c25aedc1f4afec56f260e378048cbee1", "filename": "configure.ac", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -1870,6 +1870,22 @@ AC_ARG_ENABLE(host-shared,\n  esac])\n AC_SUBST(host_shared)\n \n+# Enable --enable-host-pie.\n+AC_ARG_ENABLE(host-pie,\n+[AS_HELP_STRING([--enable-host-pie],\n+       [build host code as PIE])])\n+AC_SUBST(enable_host_pie)\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n+else\n+  PICFLAG=\n+fi\n+\n+AC_SUBST(PICFLAG)\n+\n # By default, C and C++ are the only stage 1 languages.\n stage1_languages=,c,\n "}, {"sha": "990c08e569996c2d7681a6d04ac160614b8fefa8", "filename": "fixincludes/Makefile.in", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/fixincludes%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/fixincludes%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FMakefile.in?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -30,6 +30,8 @@ CC = @CC@\n CFLAGS = @CFLAGS@\n WARN_CFLAGS = @WARN_CFLAGS@ @WARN_PEDANTIC@ @WERROR@\n LDFLAGS = @LDFLAGS@\n+PICFLAG = @PICFLAG@\n+LD_PICFLAG = @LD_PICFLAG@\n INCLUDES = -I. -I$(srcdir) -I../include -I$(srcdir)/../include\n FIXINC_CFLAGS = -DHAVE_CONFIG_H $(INCLUDES)\n \n@@ -73,7 +75,7 @@ default : all\n # Now figure out from those variables how to compile and link.\n \n .c.o:\n-\t$(CC) -c $(CFLAGS) $(WARN_CFLAGS) $(CPPFLAGS) $(FIXINC_CFLAGS) $<\n+\t$(CC) -c $(CFLAGS) $(PICFLAG) $(WARN_CFLAGS) $(CPPFLAGS) $(FIXINC_CFLAGS) $<\n \n # The only suffixes we want for implicit rules are .c and .o.\n .SUFFIXES:\n@@ -87,7 +89,11 @@ default : all\n ##\n ## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n \n+ifeq ($(PICFLAG),)\n LIBIBERTY=../libiberty/libiberty.a\n+else\n+LIBIBERTY=../libiberty/pic/libiberty.a\n+endif\n \n ALLOBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n       fixlib.o fixopts.o\n@@ -107,15 +113,15 @@ oneprocess : full-stamp\n twoprocess : test-stamp $(AF)\n \n full-stamp : $(ALLOBJ) $(LIBIBERTY)\n-\t$(CC) $(CFLAGS) $(LDFLAGS) -o $(FI) $(ALLOBJ) $(LIBIBERTY)\n+\t$(CC) $(CFLAGS) $(PICFLAG) $(LDFLAGS) $(LD_PICFLAG) -o $(FI) $(ALLOBJ) $(LIBIBERTY)\n \t$(STAMP) $@\n \n test-stamp : $(TESTOBJ) $(LIBIBERTY)\n-\t$(CC) $(CFLAGS) $(LDFLAGS) -o $(FI) $(TESTOBJ) $(LIBIBERTY)\n+\t$(CC) $(CFLAGS) $(PICFLAG) $(LDFLAGS) $(LD_PICFLAG) -o $(FI) $(TESTOBJ) $(LIBIBERTY)\n \t$(STAMP) $@\n \n $(AF): $(FIXOBJ) $(LIBIBERTY)\n-\t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(FIXOBJ) $(LIBIBERTY)\n+\t$(CC) $(CFLAGS) $(PICFLAG) $(LDFLAGS) $(LD_PICFLAG) -o $@ $(FIXOBJ) $(LIBIBERTY)\n \n $(ALLOBJ)   : $(HDR)\n fixincl.o   : fixincl.c  $(srcdir)/fixincl.x"}, {"sha": "67a7597a30bc07641b4ea78bbf61492b05561225", "filename": "fixincludes/configure", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/fixincludes%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/fixincludes%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -623,6 +623,8 @@ ac_subst_vars='LTLIBOBJS\n LIBOBJS\n get_gcc_base_ver\n MAINT\n+LD_PICFLAG\n+PICFLAG\n TARGET\n target_noncanonical\n WERROR\n@@ -695,6 +697,7 @@ enable_option_checking\n enable_werror_always\n with_local_prefix\n enable_twoprocess\n+enable_host_pie\n enable_maintainer_mode\n with_gcc_major_version_only\n '\n@@ -1323,6 +1326,7 @@ Optional Features:\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-werror-always  enable -Werror despite compiler version\n   --enable-twoprocess       Use a separate process to apply the fixes\n+  --enable-host-pie       build host code as PIE\n   --enable-maintainer-mode enable make rules and dependencies not useful\n                           (and sometimes confusing) to the casual installer\n \n@@ -4835,6 +4839,15 @@ $as_echo \"#define SEPARATE_FIX_PROC 1\" >>confdefs.h\n \n fi\n \n+# Enable --enable-host-pie.\n+# Check whether --enable-host-pie was given.\n+if test \"${enable_host_pie+set}\" = set; then :\n+  enableval=$enable_host_pie; PICFLAG=-fPIE; LD_PICFLAG=-pie\n+fi\n+\n+\n+\n+\n case $host in\n \tvax-dec-bsd* )\n "}, {"sha": "ec8534f769f978aec3c4b8356e7aa42d66aa8500", "filename": "fixincludes/configure.ac", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/fixincludes%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/fixincludes%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -68,6 +68,14 @@ if test $TARGET = twoprocess; then\n \t\t  [Define if testing and fixing are done by separate process])\n fi\n \n+# Enable --enable-host-pie.\n+AC_ARG_ENABLE(host-pie,\n+[AS_HELP_STRING([--enable-host-pie],\n+       [build host code as PIE])],\n+[PICFLAG=-fPIE; LD_PICFLAG=-pie], [])\n+AC_SUBST(PICFLAG)\n+AC_SUBST(LD_PICFLAG)\n+\n case $host in\n \tvax-dec-bsd* )\n \t\tAC_DEFINE(exit, xexit, [Define to xexit if the host system does not support atexit])"}, {"sha": "5a78c7476d2813027ac3eedb098280ac304d3219", "filename": "gcc/Makefile.in", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -158,6 +158,9 @@ LDFLAGS = @LDFLAGS@\n # Should we build position-independent host code?\n PICFLAG = @PICFLAG@\n \n+# The linker flag for the above.\n+LD_PICFLAG = @LD_PICFLAG@\n+\n # Flags to determine code coverage. When coverage is disabled, this will\n # contain the optimization flags, as you normally want code coverage\n # without optimization.\n@@ -266,18 +269,17 @@ LINKER = $(CC)\n LINKER_FLAGS = $(CFLAGS)\n endif\n \n+enable_host_pie = @enable_host_pie@\n+\n # Enable Intel CET on Intel CET enabled host if needed.\n CET_HOST_FLAGS = @CET_HOST_FLAGS@\n COMPILER += $(CET_HOST_FLAGS)\n \n-NO_PIE_CFLAGS = @NO_PIE_CFLAGS@\n-NO_PIE_FLAG = @NO_PIE_FLAG@\n-\n-# We don't want to compile the compilers with -fPIE, it make PCH fail.\n-COMPILER += $(NO_PIE_CFLAGS)\n+# Maybe compile the compilers with -fPIE or -fPIC.\n+COMPILER += $(PICFLAG)\n \n-# Link with -no-pie since we compile the compiler with -fno-PIE.\n-LINKER += $(NO_PIE_FLAG)\n+# Link with -pie, or -no-pie, depending on the above.\n+LINKER += $(LD_PICFLAG)\n \n # Like LINKER, but use a mutex for serializing front end links.\n ifeq (@DO_LINK_MUTEX@,true)\n@@ -1060,18 +1062,21 @@ ALL_CPPFLAGS = $(INCLUDES) $(CPPFLAGS)\n ALL_COMPILERFLAGS = $(ALL_CXXFLAGS)\n \n # This is the variable to use when using $(LINKER).\n-ALL_LINKERFLAGS = $(ALL_CXXFLAGS)\n+ALL_LINKERFLAGS = $(ALL_CXXFLAGS) $(LD_PICFLAG)\n \n # Build and host support libraries.\n \n-# Use the \"pic\" build of libiberty if --enable-host-shared, unless we are\n-# building for mingw.\n+# Use the \"pic\" build of libiberty if --enable-host-shared or --enable-host-pie,\n+# unless we are building for mingw.\n LIBIBERTY_PICDIR=$(if $(findstring mingw,$(target)),,pic)\n-ifeq ($(enable_host_shared),yes)\n+ifneq ($(enable_host_shared)$(enable_host_pie),)\n LIBIBERTY = ../libiberty/$(LIBIBERTY_PICDIR)/libiberty.a\n-BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/$(LIBIBERTY_PICDIR)/libiberty.a\n else\n LIBIBERTY = ../libiberty/libiberty.a\n+endif\n+ifeq ($(enable_host_shared),yes)\n+BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/$(LIBIBERTY_PICDIR)/libiberty.a\n+else\n BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/libiberty.a\n endif\n "}, {"sha": "f631830386d8b58bae91698dfa206cc9fe87cc68", "filename": "gcc/configure", "status": "modified", "additions": 33, "deletions": 14, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -632,10 +632,10 @@ ac_includes_default=\"\\\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n CET_HOST_FLAGS\n-NO_PIE_FLAG\n-NO_PIE_CFLAGS\n-enable_default_pie\n+LD_PICFLAG\n PICFLAG\n+enable_default_pie\n+enable_host_pie\n enable_host_shared\n enable_plugin\n pluginlibs\n@@ -1025,6 +1025,7 @@ enable_link_serialization\n enable_version_specific_runtime_libs\n enable_plugin\n enable_host_shared\n+enable_host_pie\n enable_libquadmath_support\n with_linker_hash_style\n with_diagnostics_color\n@@ -1787,6 +1788,7 @@ Optional Features:\n                           in a compiler-specific directory\n   --enable-plugin         enable plugin support\n   --enable-host-shared    build host code as shared libraries\n+  --enable-host-pie       build host code as PIE\n   --disable-libquadmath-support\n                           disable libquadmath support for Fortran\n   --enable-default-pie    enable Position Independent Executable as default\n@@ -19710,7 +19712,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19713 \"configure\"\n+#line 19727 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19816,7 +19818,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19819 \"configure\"\n+#line 19833 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -31945,13 +31947,17 @@ fi\n # Enable --enable-host-shared\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared; PICFLAG=-fPIC\n-else\n-  PICFLAG=\n+  enableval=$enable_host_shared;\n fi\n \n \n \n+# Enable --enable-host-pie\n+# Check whether --enable-host-pie was given.\n+if test \"${enable_host_pie+set}\" = set; then :\n+  enableval=$enable_host_pie;\n+fi\n+\n \n \n # Check whether --enable-libquadmath-support was given.\n@@ -32105,10 +32111,6 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_c_no_fpie\" >&5\n $as_echo \"$gcc_cv_c_no_fpie\" >&6; }\n-if test \"$gcc_cv_c_no_fpie\" = \"yes\"; then\n-  NO_PIE_CFLAGS=\"-fno-PIE\"\n-fi\n-\n \n # Check if -no-pie works.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -no-pie option\" >&5\n@@ -32133,11 +32135,28 @@ rm -f core conftest.err conftest.$ac_objext \\\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_no_pie\" >&5\n $as_echo \"$gcc_cv_no_pie\" >&6; }\n-if test \"$gcc_cv_no_pie\" = \"yes\"; then\n-  NO_PIE_FLAG=\"-no-pie\"\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n+elif test x$gcc_cv_c_no_fpie = xyes; then\n+  PICFLAG=-fno-PIE\n+else\n+  PICFLAG=\n+fi\n+\n+if test x$enable_host_pie = xyes; then\n+  LD_PICFLAG=-pie\n+elif test x$gcc_cv_no_pie = xyes; then\n+  LD_PICFLAG=-no-pie\n+else\n+  LD_PICFLAG=\n fi\n \n \n+\n+\n # Enable Intel CET on Intel CET enabled host if jit is enabled.\n  # Check whether --enable-cet was given.\n if test \"${enable_cet+set}\" = set; then :"}, {"sha": "f5b23b92df1fcb7f6de55e090a4a51296e0cbb80", "filename": "gcc/configure.ac", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -7364,11 +7364,14 @@ fi\n # Enable --enable-host-shared\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])],\n-[PICFLAG=-fPIC], [PICFLAG=])\n+\t\t[build host code as shared libraries])])\n AC_SUBST(enable_host_shared)\n-AC_SUBST(PICFLAG)\n \n+# Enable --enable-host-pie\n+AC_ARG_ENABLE(host-pie,\n+[AS_HELP_STRING([--enable-host-pie],\n+\t\t[build host code as PIE])])\n+AC_SUBST(enable_host_pie)\n \n AC_ARG_ENABLE(libquadmath-support,\n [AS_HELP_STRING([--disable-libquadmath-support],\n@@ -7490,10 +7493,6 @@ AC_CACHE_CHECK([for -fno-PIE option],\n      [gcc_cv_c_no_fpie=yes],\n      [gcc_cv_c_no_fpie=no])\n    CXXFLAGS=\"$saved_CXXFLAGS\"])\n-if test \"$gcc_cv_c_no_fpie\" = \"yes\"; then\n-  NO_PIE_CFLAGS=\"-fno-PIE\"\n-fi\n-AC_SUBST([NO_PIE_CFLAGS])\n \n # Check if -no-pie works.\n AC_CACHE_CHECK([for -no-pie option],\n@@ -7504,10 +7503,27 @@ AC_CACHE_CHECK([for -no-pie option],\n      [gcc_cv_no_pie=yes],\n      [gcc_cv_no_pie=no])\n    LDFLAGS=\"$saved_LDFLAGS\"])\n-if test \"$gcc_cv_no_pie\" = \"yes\"; then\n-  NO_PIE_FLAG=\"-no-pie\"\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n+elif test x$gcc_cv_c_no_fpie = xyes; then\n+  PICFLAG=-fno-PIE\n+else\n+  PICFLAG=\n fi\n-AC_SUBST([NO_PIE_FLAG])\n+\n+if test x$enable_host_pie = xyes; then\n+  LD_PICFLAG=-pie\n+elif test x$gcc_cv_no_pie = xyes; then\n+  LD_PICFLAG=-no-pie\n+else\n+  LD_PICFLAG=\n+fi\n+\n+AC_SUBST([PICFLAG])\n+AC_SUBST([LD_PICFLAG])\n \n # Enable Intel CET on Intel CET enabled host if jit is enabled.\n GCC_CET_HOST_FLAGS(CET_HOST_FLAGS)"}, {"sha": "dff06496e52636e521a8411d3eebc45714339b80", "filename": "gcc/d/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2Fd%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2Fd%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FMake-lang.in?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -64,7 +64,7 @@ ALL_DFLAGS = $(DFLAGS-$@) $(GDCFLAGS) -fversion=IN_GCC $(CHECKING_DFLAGS) \\\n \t$(PICFLAG) $(ALIASING_FLAGS) $(NOEXCEPTION_DFLAGS) $(COVERAGE_FLAGS) \\\n \t$(WARN_DFLAGS)\n \n-DCOMPILE.base = $(GDC) $(NO_PIE_CFLAGS) -c $(ALL_DFLAGS) -o $@\n+DCOMPILE.base = $(GDC) -c $(ALL_DFLAGS) -o $@\n DCOMPILE = $(DCOMPILE.base) -MT $@ -MMD -MP -MF $(@D)/$(DEPDIR)/$(*F).TPo\n DPOSTCOMPILE = @mv $(@D)/$(DEPDIR)/$(*F).TPo $(@D)/$(DEPDIR)/$(*F).Po\n DLINKER = $(GDC) $(NO_PIE_FLAG) -lstdc++"}, {"sha": "b91fbe0216c875ed4cb94be62511d4013aed913d", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -1026,14 +1026,26 @@ code.\n \n @item --enable-host-shared\n Specify that the @emph{host} code should be built into position-independent\n-machine code (with -fPIC), allowing it to be used within shared libraries,\n-but yielding a slightly slower compiler.\n+machine code (with @option{-fPIC}), allowing it to be used within shared\n+libraries, but yielding a slightly slower compiler.\n \n This option is required when building the libgccjit.so library.\n \n Contrast with @option{--enable-shared}, which affects @emph{target}\n libraries.\n \n+@item --enable-host-pie\n+Specify that the @emph{host} executables should be built into\n+position-independent executables (with @option{-fPIE} and @option{-pie}),\n+yielding a slightly slower compiler (but faster than\n+@option{--enable-host-shared}).  Position-independent executables are loaded\n+at random addresses each time they are executed, therefore provide additional\n+protection against Return Oriented Programming (ROP) attacks.\n+\n+@option{--enable-host-pie}) may be used with @option{--enable-host-shared}),\n+in which case @option{-fPIC} is used when compiling, and @option{-pie} when\n+linking.\n+\n @item @anchor{with-gnu-as}--with-gnu-as\n Specify that the compiler should assume that the\n assembler it finds is the GNU assembler.  However, this does not modify"}, {"sha": "5beebdc152c5256782a52a5d72f39d80ccf9148a", "filename": "intl/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/intl%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/intl%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2FMakefile.in?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -54,7 +54,7 @@ CTAGS = @CTAGS@\n ETAGS = @ETAGS@\n MKID = @MKID@\n \n-COMPILE = $(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(DEFS-$@) $(INCLUDES)\n+COMPILE = $(CC) -c $(CPPFLAGS) $(CFLAGS) @PICFLAG@ $(DEFS) $(DEFS-$@) $(INCLUDES)\n \n HEADERS = \\\n   gmo.h \\"}, {"sha": "79bb5831a47ce7d167d20b2523e84130396f00fd", "filename": "intl/configure", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/intl%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/intl%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -623,6 +623,8 @@ ac_header_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n PICFLAG\n+enable_host_pie\n+enable_host_shared\n BISON3_NO\n BISON3_YES\n INCINTL\n@@ -731,6 +733,7 @@ with_libintl_prefix\n with_libintl_type\n enable_maintainer_mode\n enable_host_shared\n+enable_host_pie\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1356,6 +1359,7 @@ Optional Features:\n   --disable-rpath         do not hardcode runtime library paths\n   --enable-maintainer-mode enable rules only needed by maintainers\n   --enable-host-shared    build host code as shared libraries\n+  --enable-host-pie       build host code as PIE\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -6852,15 +6856,31 @@ fi\n \n \n \n+# Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared; PICFLAG=-fPIC\n+  enableval=$enable_host_shared;\n+fi\n+\n+\n+\n+# Enable --enable-host-pie.\n+# Check whether --enable-host-pie was given.\n+if test \"${enable_host_pie+set}\" = set; then :\n+  enableval=$enable_host_pie;\n+fi\n+\n+\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n else\n   PICFLAG=\n fi\n \n \n-\n ac_config_files=\"$ac_config_files Makefile config.intl\"\n \n cat >confcache <<\\_ACEOF"}, {"sha": "81aa831f59fdc1c512c76f8f22311e09c079a00d", "filename": "intl/configure.ac", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/intl%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/intl%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/intl%2Fconfigure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -83,10 +83,25 @@ fi\n AC_SUBST(BISON3_YES)\n AC_SUBST(BISON3_NO)\n \n+# Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])],\n-[PICFLAG=-fPIC], [PICFLAG=])\n+       [build host code as shared libraries])])\n+AC_SUBST(enable_host_shared)\n+\n+# Enable --enable-host-pie.\n+AC_ARG_ENABLE(host-pie,\n+[AS_HELP_STRING([--enable-host-pie],\n+       [build host code as PIE])])\n+AC_SUBST(enable_host_pie)\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n+else\n+  PICFLAG=\n+fi\n AC_SUBST(PICFLAG)\n \n AC_CONFIG_FILES(Makefile config.intl)"}, {"sha": "cb01b0092d8e8f4ccdd16db67f87e53759c91e8d", "filename": "libcody/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcody%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcody%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FMakefile.in?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -31,7 +31,7 @@ endif\n CXXOPTS += $(filter-out -DHAVE_CONFIG_H,@DEFS@) -include config.h\n \n # Linker options\n-LDFLAGS := @LDFLAGS@\n+LDFLAGS := @LDFLAGS@ @LD_PICFLAG@\n LIBS := @LIBS@\n \n # Per-source & per-directory compile flags (warning: recursive)"}, {"sha": "0e536c0ccb0626051d79954056932db644ef875e", "filename": "libcody/configure", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcody%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcody%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fconfigure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -591,7 +591,10 @@ configure_args\n AR\n RANLIB\n EXCEPTIONS\n+LD_PICFLAG\n PICFLAG\n+enable_host_pie\n+enable_host_shared\n OBJEXT\n EXEEXT\n ac_ct_CXX\n@@ -653,6 +656,7 @@ enable_maintainer_mode\n with_compiler\n enable_checking\n enable_host_shared\n+enable_host_pie\n enable_exceptions\n '\n       ac_precious_vars='build_alias\n@@ -1286,6 +1290,7 @@ Optional Features:\n                           yes,no,all,none,release. Flags are: misc,valgrind or\n                           other strings\n   --enable-host-shared    build host code as shared libraries\n+  --enable-host-pie       build host code as PIE\n   --enable-exceptions     enable exceptions & rtti\n \n Optional Packages:\n@@ -2635,11 +2640,34 @@ fi\n # Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared; PICFLAG=-fPIC\n+  enableval=$enable_host_shared;\n+fi\n+\n+\n+\n+# Enable --enable-host-pie.\n+# Check whether --enable-host-pie was given.\n+if test \"${enable_host_pie+set}\" = set; then :\n+  enableval=$enable_host_pie;\n+fi\n+\n+\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n else\n   PICFLAG=\n fi\n \n+if test x$enable_host_pie = xyes; then\n+  LD_PICFLAG=-pie\n+else\n+  LD_PICFLAG=\n+fi\n+\n+\n \n \n # Check whether --enable-exceptions was given."}, {"sha": "14e8dd4a2260700146d41ea0589bbd85a037f77a", "filename": "libcody/configure.ac", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcody%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcody%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2Fconfigure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -63,9 +63,31 @@ fi\n # Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])],\n-[PICFLAG=-fPIC], [PICFLAG=])\n+\t\t[build host code as shared libraries])])\n+AC_SUBST(enable_host_shared)\n+\n+# Enable --enable-host-pie.\n+AC_ARG_ENABLE(host-pie,\n+[AS_HELP_STRING([--enable-host-pie],\n+\t\t[build host code as PIE])])\n+AC_SUBST(enable_host_pie)\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n+else\n+  PICFLAG=\n+fi\n+\n+if test x$enable_host_pie = xyes; then\n+  LD_PICFLAG=-pie\n+else\n+  LD_PICFLAG=\n+fi\n+\n AC_SUBST(PICFLAG)\n+AC_SUBST(LD_PICFLAG)\n \n NMS_ENABLE_EXCEPTIONS\n "}, {"sha": "1389ddab54408ee4b8be091a594eba61f71c91ba", "filename": "libcpp/configure", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -625,6 +625,8 @@ ac_includes_default=\"\\\n ac_subst_vars='LTLIBOBJS\n CET_HOST_FLAGS\n PICFLAG\n+enable_host_pie\n+enable_host_shared\n MAINT\n USED_CATALOGS\n PACKAGE\n@@ -738,6 +740,7 @@ enable_maintainer_mode\n enable_checking\n enable_canonical_system_headers\n enable_host_shared\n+enable_host_pie\n enable_cet\n enable_valgrind_annotations\n '\n@@ -1379,6 +1382,7 @@ Optional Features:\n   --enable-canonical-system-headers\n                           enable or disable system headers canonicalization\n   --enable-host-shared    build host code as shared libraries\n+  --enable-host-pie       build host code as PIE\n   --enable-cet            enable Intel CET in host libraries [default=auto]\n   --enable-valgrind-annotations\n                           enable valgrind runtime interaction\n@@ -7605,7 +7609,23 @@ esac\n # Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared; PICFLAG=-fPIC\n+  enableval=$enable_host_shared;\n+fi\n+\n+\n+\n+# Enable --enable-host-pie.\n+# Check whether --enable-host-pie was given.\n+if test \"${enable_host_pie+set}\" = set; then :\n+  enableval=$enable_host_pie;\n+fi\n+\n+\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n else\n   PICFLAG=\n fi"}, {"sha": "b29b4d6acf1fff95517ac2e242a96577f1070dcc", "filename": "libcpp/configure.ac", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -211,8 +211,23 @@ esac\n # Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])],\n-[PICFLAG=-fPIC], [PICFLAG=])\n+\t\t[build host code as shared libraries])])\n+AC_SUBST(enable_host_shared)\n+\n+# Enable --enable-host-pie.\n+AC_ARG_ENABLE(host-pie,\n+[AS_HELP_STRING([--enable-host-pie],\n+\t\t[build host code as PIE])])\n+AC_SUBST(enable_host_pie)\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n+else\n+  PICFLAG=\n+fi\n+\n AC_SUBST(PICFLAG)\n \n # Enable Intel CET on Intel CET enabled host if jit is enabled."}, {"sha": "84bc4ffc7673db6c3ff60908f58a1cc00435cb71", "filename": "libdecnumber/configure", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -626,6 +626,8 @@ ac_subst_vars='LTLIBOBJS\n LIBOBJS\n CET_HOST_FLAGS\n PICFLAG\n+enable_host_pie\n+enable_host_shared\n ADDITIONAL_OBJS\n enable_decimal_float\n target_os\n@@ -706,6 +708,7 @@ enable_werror_always\n enable_maintainer_mode\n enable_decimal_float\n enable_host_shared\n+enable_host_pie\n enable_cet\n '\n       ac_precious_vars='build_alias\n@@ -1338,6 +1341,7 @@ Optional Features:\n \t\t\tor 'dpd' choses which decimal floating point format\n \t\t\tto use\n   --enable-host-shared    build host code as shared libraries\n+  --enable-host-pie       build host code as PIE\n   --enable-cet            enable Intel CET in host libraries [default=auto]\n \n Some influential environment variables:\n@@ -5186,7 +5190,23 @@ $as_echo \"#define AC_APPLE_UNIVERSAL_BUILD 1\" >>confdefs.h\n # Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared; PICFLAG=-fPIC\n+  enableval=$enable_host_shared;\n+fi\n+\n+\n+\n+# Enable --enable-host-pie.\n+# Check whether --enable-host-pie was given.\n+if test \"${enable_host_pie+set}\" = set; then :\n+  enableval=$enable_host_pie;\n+fi\n+\n+\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n else\n   PICFLAG=\n fi"}, {"sha": "14f67f926d1273a5c77585cfb1f4c54dd946bfbf", "filename": "libdecnumber/configure.ac", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/libdecnumber%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/libdecnumber%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -100,8 +100,23 @@ AC_C_BIGENDIAN\n # Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])],\n-[PICFLAG=-fPIC], [PICFLAG=])\n+\t\t[build host code as shared libraries])])\n+AC_SUBST(enable_host_shared)\n+\n+# Enable --enable-host-pie.\n+AC_ARG_ENABLE(host-pie,\n+[AS_HELP_STRING([--enable-host-pie],\n+\t\t[build host code as PIE])])\n+AC_SUBST(enable_host_pie)\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n+else\n+  PICFLAG=\n+fi\n+\n AC_SUBST(PICFLAG)\n \n # Enable Intel CET on Intel CET enabled host if jit is enabled."}, {"sha": "b8a19c421108afc822c62545c50b754742a1b7a8", "filename": "libiberty/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -5258,8 +5258,8 @@ case \"${enable_shared}\" in\n   *) shared=yes ;;\n esac\n \n-# ...unless --enable-host-shared was passed from top-level config:\n-if [ \"${enable_host_shared}\" = \"yes\" ]; then\n+# ...unless --enable-host-{shared,pie} was passed from top-level config:\n+if [ \"${enable_host_shared}\" = \"yes\" ] || [ \"${enable_host_pie}\" = \"yes\" ]; then\n   shared=yes\n fi\n "}, {"sha": "6747a7b5cffd389155eccddd4a8053be58f111f2", "filename": "libiberty/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -233,8 +233,8 @@ case \"${enable_shared}\" in\n   *) shared=yes ;;\n esac\n \n-# ...unless --enable-host-shared was passed from top-level config:\n-if [[ \"${enable_host_shared}\" = \"yes\" ]]; then\n+# ...unless --enable-host-{shared,pie} was passed from top-level config:\n+if [[ \"${enable_host_shared}\" = \"yes\" ]] || [[ \"${enable_host_pie}\" = \"yes\" ]]; then\n   shared=yes\n fi\n "}, {"sha": "77be6c284e3eba4815320984ecd02df70d159fe4", "filename": "zlib/configure", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/zlib%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/zlib%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -635,6 +635,8 @@ am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n PICFLAG\n+enable_host_pie\n+enable_host_shared\n TARGET_LIBRARY_FALSE\n TARGET_LIBRARY_TRUE\n toolexeclibdir\n@@ -778,6 +780,7 @@ with_gnu_ld\n enable_libtool_lock\n with_toolexeclibdir\n enable_host_shared\n+enable_host_pie\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1420,6 +1423,7 @@ Optional Features:\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --enable-host-shared    build host code as shared libraries\n+  --enable-host-pie       build host code as PIE\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -10759,7 +10763,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10762 \"configure\"\n+#line 10778 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10865,7 +10869,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10868 \"configure\"\n+#line 10884 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11548,15 +11552,31 @@ else\n   multilib_arg=\n fi\n \n+# Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n-  enableval=$enable_host_shared; PICFLAG=-fPIC\n+  enableval=$enable_host_shared;\n+fi\n+\n+\n+\n+# Enable --enable-host-pie.\n+# Check whether --enable-host-pie was given.\n+if test \"${enable_host_pie+set}\" = set; then :\n+  enableval=$enable_host_pie;\n+fi\n+\n+\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n else\n   PICFLAG=\n fi\n \n \n-\n ac_config_files=\"$ac_config_files Makefile\"\n \n cat >confcache <<\\_ACEOF"}, {"sha": "adf7aad4e510ba7195c1b64a65723fa2f8e6b34e", "filename": "zlib/configure.ac", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251c72a68af3a8b0638705b73ef120ffdf0053eb/zlib%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251c72a68af3a8b0638705b73ef120ffdf0053eb/zlib%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure.ac?ref=251c72a68af3a8b0638705b73ef120ffdf0053eb", "patch": "@@ -122,11 +122,26 @@ else\n   multilib_arg=\n fi\n \n+# Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n-\t\t[build host code as shared libraries])],\n-[PICFLAG=-fPIC], [PICFLAG=])\n-AC_SUBST(PICFLAG)\n+\t\t[build host code as shared libraries])])\n+AC_SUBST(enable_host_shared)\n+\n+# Enable --enable-host-pie.\n+AC_ARG_ENABLE(host-pie,\n+[AS_HELP_STRING([--enable-host-pie],\n+\t\t[build host code as PIE])])\n+AC_SUBST(enable_host_pie)\n+\n+if test x$enable_host_shared = xyes; then\n+  PICFLAG=-fPIC\n+elif test x$enable_host_pie = xyes; then\n+  PICFLAG=-fPIE\n+else\n+  PICFLAG=\n+fi\n \n+AC_SUBST(PICFLAG)\n AC_CONFIG_FILES([Makefile])\n AC_OUTPUT"}]}