{"sha": "3a44f39543e5c76226975a7897e3e8669b934327", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E0NGYzOTU0M2U1Yzc2MjI2OTc1YTc4OTdlM2U4NjY5YjkzNDMyNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-11-01T22:50:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-01T22:50:32Z"}, "message": "re PR c++/32260 (too many warning: dereferencing type-punned pointer will break strict-aliasing rules)\n\n\tPR c++/32260\n\t* rtti.c (enum_tinfo_kind): Fix TK_TYPE_INFO_TYPE comment.\n\t(typeid_ok_p): Use the same alias set for abi::__type_info_pseudo\n\tas for std::type_info.\n\n\t* g++.dg/rtti/typeid7.C: New test.\n\nFrom-SVN: r129835", "tree": {"sha": "7d1eb8d75da2fff336b190393af33c47c0b7dfbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d1eb8d75da2fff336b190393af33c47c0b7dfbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a44f39543e5c76226975a7897e3e8669b934327", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a44f39543e5c76226975a7897e3e8669b934327", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a44f39543e5c76226975a7897e3e8669b934327", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a44f39543e5c76226975a7897e3e8669b934327/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "945bfaca2e8a22850091765d667dc24e356ba420", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945bfaca2e8a22850091765d667dc24e356ba420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/945bfaca2e8a22850091765d667dc24e356ba420"}], "stats": {"total": 89, "additions": 88, "deletions": 1}, "files": [{"sha": "c7946ac94694d54cdd086113242bb5825d05c099", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a44f39543e5c76226975a7897e3e8669b934327/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a44f39543e5c76226975a7897e3e8669b934327/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3a44f39543e5c76226975a7897e3e8669b934327", "patch": "@@ -1,3 +1,10 @@\n+2007-11-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/32260\n+\t* rtti.c (enum_tinfo_kind): Fix TK_TYPE_INFO_TYPE comment.\n+\t(typeid_ok_p): Use the same alias set for abi::__type_info_pseudo\n+\tas for std::type_info.\n+\n 2007-10-31  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/33494"}, {"sha": "92cddbfb37f28f650658fcde7c2fa5bbd3053708", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a44f39543e5c76226975a7897e3e8669b934327/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a44f39543e5c76226975a7897e3e8669b934327/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=3a44f39543e5c76226975a7897e3e8669b934327", "patch": "@@ -79,7 +79,7 @@ DEF_VEC_ALLOC_O(tinfo_s,gc);\n \n typedef enum tinfo_kind\n {\n-  TK_TYPE_INFO_TYPE,    /* std::type_info */\n+  TK_TYPE_INFO_TYPE,    /* abi::__type_info_pseudo */\n   TK_BASE_TYPE,\t\t/* abi::__base_class_type_info */\n   TK_BUILTIN_TYPE,\t/* abi::__fundamental_type_info */\n   TK_ARRAY_TYPE,\t/* abi::__array_type_info */\n@@ -264,6 +264,8 @@ get_tinfo_decl_dynamic (tree exp)\n static bool\n typeid_ok_p (void)\n {\n+  tree pseudo_type_info, type_info_type;\n+\n   if (! flag_rtti)\n     {\n       error (\"cannot use typeid with -fno-rtti\");\n@@ -276,6 +278,18 @@ typeid_ok_p (void)\n       return false;\n     }\n \n+  pseudo_type_info\n+    = VEC_index (tinfo_s, tinfo_descs, TK_TYPE_INFO_TYPE)->type;\n+  type_info_type = TYPE_MAIN_VARIANT (const_type_info_type_node);\n+\n+  /* Make sure abi::__type_info_pseudo has the same alias set\n+     as std::type_info.  */\n+  if (! TYPE_ALIAS_SET_KNOWN_P (pseudo_type_info))\n+    TYPE_ALIAS_SET (pseudo_type_info) = get_alias_set (type_info_type);\n+  else\n+    gcc_assert (TYPE_ALIAS_SET (pseudo_type_info)\n+\t\t== get_alias_set (type_info_type));\n+\n   return true;\n }\n "}, {"sha": "74c72305fa3cd34b62331d337a3b584f69cb351d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a44f39543e5c76226975a7897e3e8669b934327/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a44f39543e5c76226975a7897e3e8669b934327/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a44f39543e5c76226975a7897e3e8669b934327", "patch": "@@ -1,3 +1,8 @@\n+2007-11-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/32260\n+\t* g++.dg/rtti/typeid7.C: New test.\n+\n 2007-11-01  Tom Tromey  <tromey@redhat.com>\n \n \tPR preprocessor/30805:"}, {"sha": "7391405fcd92f916cadc704ae003cfbdf7ad1b5a", "filename": "gcc/testsuite/g++.dg/rtti/typeid7.C", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a44f39543e5c76226975a7897e3e8669b934327/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a44f39543e5c76226975a7897e3e8669b934327/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid7.C?ref=3a44f39543e5c76226975a7897e3e8669b934327", "patch": "@@ -0,0 +1,61 @@\n+// PR c++/32260\n+// { dg-do compile }\n+// { dg-options \"-O2 -W -Wall\" }\n+\n+#include <typeinfo>\n+\n+const std::type_info &\n+f1 (int i)\n+{\n+  return typeid (i + 1);\n+}\n+\n+const std::type_info &\n+f2 ()\n+{\n+  return typeid (int);\n+}\n+\n+struct A\n+{\n+  A ();\n+  virtual ~A ();\n+  void foo ();\n+};\n+\n+const std::type_info &\n+f3 ()\n+{\n+  return typeid (A);\n+}\n+\n+const std::type_info &\n+f4 (A *p)\n+{\n+  return typeid (*p);\n+}\n+\n+const std::type_info &\n+f5 ()\n+{\n+  return typeid (int *);\n+}\n+\n+const std::type_info &\n+f6 ()\n+{\n+  return typeid (int [26][12]);\n+}\n+\n+const std::type_info &\n+f7 ()\n+{\n+  return typeid (int [26][12]);\n+}\n+\n+void (A::*pmr) ();\n+const std::type_info &\n+f8 ()\n+{\n+  return typeid (pmr);\n+}"}]}