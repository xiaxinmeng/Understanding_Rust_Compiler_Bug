{"sha": "5a99fda7cc9576f48f3eafbc00ed349bbb2d178d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE5OWZkYTdjYzk1NzZmNDhmM2VhZmJjMDBlZDM0OWJiYjJkMTc4ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-18T10:12:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-18T10:12:27Z"}, "message": "[multiple changes]\n\n2015-11-18  Arnaud Charlet  <charlet@adacore.com>\n\n\t* interfac.ads (Unsigned_24): New type.\n\t* sem_ch13.adb (Validate_Unchecked_Conversion): Disable error on\n\tunconstrained arrays in Relaxed_RM_Semantics mode.\n\n2015-11-18  Vincent Celier  <celier@adacore.com>\n\n\t* bcheck.adb (Check_Consistent_Dynamic_Elaboration_Checking): No\n\twarning is withed unit is the interface of a Stand-Alone Library.\n\nFrom-SVN: r230527", "tree": {"sha": "6d41381f164cbe24eaa8b98d2936c684de19b473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d41381f164cbe24eaa8b98d2936c684de19b473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d/comments", "author": null, "committer": null, "parents": [{"sha": "1d74252db852527360f1357ed06d573d47122e24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d74252db852527360f1357ed06d573d47122e24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d74252db852527360f1357ed06d573d47122e24"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "d462f2f0e23531c55754723d3d2f26255c9013a7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5a99fda7cc9576f48f3eafbc00ed349bbb2d178d", "patch": "@@ -1,3 +1,14 @@\n+2015-11-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* interfac.ads (Unsigned_24): New type.\n+\t* sem_ch13.adb (Validate_Unchecked_Conversion): Disable error on\n+\tunconstrained arrays in Relaxed_RM_Semantics mode.\n+\n+2015-11-18  Vincent Celier  <celier@adacore.com>\n+\n+\t* bcheck.adb (Check_Consistent_Dynamic_Elaboration_Checking): No\n+\twarning is withed unit is the interface of a Stand-Alone Library.\n+\n 2015-11-18  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-os_lib.ads, s-os_lib.adb(Normalize_Pathname): Support the case of"}, {"sha": "72a2cbd58a86ce9ebbb3dd5b3a503b890f78f20c", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=5a99fda7cc9576f48f3eafbc00ed349bbb2d178d", "patch": "@@ -447,12 +447,13 @@ package body Bcheck is\n    ---------------------------------------------------\n \n    --  The rule here is that if a unit has dynamic elaboration checks,\n-   --  then any unit it withs must meeting one of the following criteria:\n+   --  then any unit it withs must meet one of the following criteria:\n \n    --    1. There is a pragma Elaborate_All for the with'ed unit\n    --    2. The with'ed unit was compiled with dynamic elaboration checks\n    --    3. The with'ed unit has pragma Preelaborate or Pure\n    --    4. It is an internal GNAT unit (including children of GNAT)\n+   --    5. It is an interface of a Stand-Aline Library\n \n    procedure Check_Consistent_Dynamic_Elaboration_Checking is\n    begin\n@@ -496,6 +497,11 @@ package body Bcheck is\n                               elsif Is_Internal_File_Name (WU.Sfile) then\n                                  null;\n \n+                              --  Case 5. With'ed unit is a SAL interface\n+\n+                              elsif WU.SAL_Interface then\n+                                 null;\n+\n                               --  Issue warning, not one of the safe cases\n \n                               else"}, {"sha": "2c501a2dd280d333499270bf71679a92a8453f9b", "filename": "gcc/ada/interfac.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d/gcc%2Fada%2Finterfac.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d/gcc%2Fada%2Finterfac.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finterfac.ads?ref=5a99fda7cc9576f48f3eafbc00ed349bbb2d178d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -65,6 +65,11 @@ package Interfaces is\n    type Unsigned_16 is mod 2 ** 16;\n    for Unsigned_16'Size use 16;\n \n+   type Unsigned_24 is mod 2 ** 24;\n+   for Unsigned_24'Size use 24;\n+   --  Declare this type for compatibility with legacy Ada compilers.\n+   --  This is particularly useful in the context of CodePeer analysis.\n+\n    type Unsigned_32 is mod 2 ** 32;\n    for Unsigned_32'Size use 32;\n "}, {"sha": "d56bd2cde6ea40bd0e023adb510d9a64a6ac5326", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a99fda7cc9576f48f3eafbc00ed349bbb2d178d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5a99fda7cc9576f48f3eafbc00ed349bbb2d178d", "patch": "@@ -13570,9 +13570,13 @@ package body Sem_Ch13 is\n          Target := Underlying_Type (Target);\n       end if;\n \n-      --  Source may be unconstrained array, but not target\n+      --  Source may be unconstrained array, but not target, except in relaxed\n+      --  semantics mode.\n \n-      if Is_Array_Type (Target) and then not Is_Constrained (Target) then\n+      if Is_Array_Type (Target)\n+        and then not Is_Constrained (Target)\n+        and then not Relaxed_RM_Semantics\n+      then\n          Error_Msg_N\n            (\"unchecked conversion to unconstrained array not allowed\", N);\n          return;"}]}