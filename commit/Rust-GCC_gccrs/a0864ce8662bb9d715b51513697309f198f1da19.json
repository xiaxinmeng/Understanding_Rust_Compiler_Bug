{"sha": "a0864ce8662bb9d715b51513697309f198f1da19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA4NjRjZTg2NjJiYjlkNzE1YjUxNTEzNjk3MzA5ZjE5OGYxZGExOQ==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2021-06-05T15:48:04Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2021-06-05T15:48:04Z"}, "message": "Use libiberty snprintf and vsnprintf on hppa*-*-hpux*.\n\nlibiberty/ChangeLog:\n\n\tPR target/100734\n\t* configure.ac: Use libiberty snprintf and vsnprintf on\n\thppa*-*-hpux*.\n\t* configure: Regenerate.", "tree": {"sha": "b39e7f9b408f24d692e1cbb38d3aa095673f0c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b39e7f9b408f24d692e1cbb38d3aa095673f0c34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0864ce8662bb9d715b51513697309f198f1da19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0864ce8662bb9d715b51513697309f198f1da19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0864ce8662bb9d715b51513697309f198f1da19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0864ce8662bb9d715b51513697309f198f1da19/comments", "author": null, "committer": null, "parents": [{"sha": "416904a2b6070088d91ae8063380587f6e67bf70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/416904a2b6070088d91ae8063380587f6e67bf70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/416904a2b6070088d91ae8063380587f6e67bf70"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "f7449d6a3684ca867d2cb4ff2cfc39b265f31058", "filename": "libiberty/configure", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0864ce8662bb9d715b51513697309f198f1da19/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0864ce8662bb9d715b51513697309f198f1da19/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=a0864ce8662bb9d715b51513697309f198f1da19", "patch": "@@ -681,6 +681,7 @@ infodir\n docdir\n oldincludedir\n includedir\n+runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -760,6 +761,7 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n+runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE}'\n@@ -1012,6 +1014,15 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n+  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n+  | --runstate | --runstat | --runsta | --runst | --runs \\\n+  | --run | --ru | --r)\n+    ac_prev=runstatedir ;;\n+  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n+  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n+  | --run=* | --ru=* | --r=*)\n+    runstatedir=$ac_optarg ;;\n+\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1149,7 +1160,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir\n+\t\tlibdir localedir mandir runstatedir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1302,6 +1313,7 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -4283,7 +4295,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4329,7 +4341,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4353,7 +4365,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4398,7 +4410,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4422,7 +4434,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -6588,6 +6600,22 @@ if test -z \"${setobjs}\"; then\n     ac_cv_func_getpagesize=yes\n     ;;\n \n+  hppa*-*-hpux*)\n+    # Replace system snprintf and vsnprintf with libiberty implementations.\n+    case \" $LIBOBJS \" in\n+  *\" snprintf.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS snprintf.$ac_objext\"\n+ ;;\n+esac\n+\n+    case \" $LIBOBJS \" in\n+  *\" vsnprintf.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS vsnprintf.$ac_objext\"\n+ ;;\n+esac\n+\n+    ;;\n+\n   *-*-mingw32*)\n     # Under mingw32, sys_nerr and sys_errlist exist, but they are\n     # macros, so the test below won't find them.\n@@ -7547,6 +7575,8 @@ main ()\n     if (*(data + i) != *(data3 + i))\n       return 14;\n   close (fd);\n+  free (data);\n+  free (data3);\n   return 0;\n }\n _ACEOF"}, {"sha": "a85ff25501adc5bfa576045cd652e81f09a182a4", "filename": "libiberty/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0864ce8662bb9d715b51513697309f198f1da19/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0864ce8662bb9d715b51513697309f198f1da19/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=a0864ce8662bb9d715b51513697309f198f1da19", "patch": "@@ -611,6 +611,12 @@ if test -z \"${setobjs}\"; then\n     ac_cv_func_getpagesize=yes\n     ;;\n \n+  hppa*-*-hpux*)\n+    # Replace system snprintf and vsnprintf with libiberty implementations.\n+    AC_LIBOBJ([snprintf])\n+    AC_LIBOBJ([vsnprintf])\n+    ;;\n+\n   *-*-mingw32*)\n     # Under mingw32, sys_nerr and sys_errlist exist, but they are\n     # macros, so the test below won't find them."}]}