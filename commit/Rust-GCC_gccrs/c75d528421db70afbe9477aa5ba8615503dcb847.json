{"sha": "c75d528421db70afbe9477aa5ba8615503dcb847", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc1ZDUyODQyMWRiNzBhZmJlOTQ3N2FhNWJhODYxNTUwM2RjYjg0Nw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-10-27T23:43:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-27T23:43:46Z"}, "message": "* PROJECTS: Remove entry for local spilling.\n\nFrom-SVN: r23380", "tree": {"sha": "ff04efca17d8d1cb40946d0bea327fb5d4512998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff04efca17d8d1cb40946d0bea327fb5d4512998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c75d528421db70afbe9477aa5ba8615503dcb847", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75d528421db70afbe9477aa5ba8615503dcb847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c75d528421db70afbe9477aa5ba8615503dcb847", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75d528421db70afbe9477aa5ba8615503dcb847/comments", "author": null, "committer": null, "parents": [{"sha": "2eb6dac7c1e77b3a1c3777f297b2b041b5552185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eb6dac7c1e77b3a1c3777f297b2b041b5552185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2eb6dac7c1e77b3a1c3777f297b2b041b5552185"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "a07b16a307ea87fe29337b9d40f3137ec0f0ad34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c75d528421db70afbe9477aa5ba8615503dcb847/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c75d528421db70afbe9477aa5ba8615503dcb847/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c75d528421db70afbe9477aa5ba8615503dcb847", "patch": "@@ -4,6 +4,8 @@\n \n Wed Oct 28 00:10:35 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* PROJECTS: Remove entry for local spilling.\n+\n \t* final.c (cleanup_subreg_operands): New function.\n \t(final_scan_insn): Use it.\n \t(alter_subreg): Clear the \"used\" field when we turn a SUBREG into"}, {"sha": "6ff7a0557b02bcc2e3a323f3cf9bb6396ed6a9c3", "filename": "gcc/PROJECTS", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c75d528421db70afbe9477aa5ba8615503dcb847/gcc%2FPROJECTS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c75d528421db70afbe9477aa5ba8615503dcb847/gcc%2FPROJECTS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FPROJECTS?ref=c75d528421db70afbe9477aa5ba8615503dcb847", "patch": "@@ -250,18 +250,6 @@ redundant.  Constraints might permit a decrement and branch\n instruction that checks zeroness to be used when the user has\n specified to exit if negative.\n \n-* Smarter reload pass.\n-\n-The reload pass as currently written can reload values only into registers\n-that are reserved for reloading.  This means that in order to use a\n-register for reloading it must spill everything out of that register.\n-\n-It would be straightforward, though complicated, for reload1.c to keep\n-track, during its scan, of which hard registers were available at each\n-point in the function, and use for reloading even registers that were\n-free only at the point they were needed.  This would avoid much spilling\n-and make better code.\n-\n * Change the type of a variable.\n \n Sometimes a variable is declared as `int', it is assigned only once"}]}