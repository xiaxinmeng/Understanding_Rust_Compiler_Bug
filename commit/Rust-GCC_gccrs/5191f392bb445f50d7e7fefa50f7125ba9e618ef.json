{"sha": "5191f392bb445f50d7e7fefa50f7125ba9e618ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE5MWYzOTJiYjQ0NWY1MGQ3ZTdmZWZhNTBmNzEyNWJhOWU2MThlZg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-05-27T06:17:57Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-05-27T06:17:57Z"}, "message": "2003-05-27  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/URLConnection.java\n\t(getHeaderFieldInt): Merged with classpath.\n\nFrom-SVN: r67184", "tree": {"sha": "c7d79de315377f3aa214df60707ee9412abcd68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7d79de315377f3aa214df60707ee9412abcd68c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5191f392bb445f50d7e7fefa50f7125ba9e618ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5191f392bb445f50d7e7fefa50f7125ba9e618ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5191f392bb445f50d7e7fefa50f7125ba9e618ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5191f392bb445f50d7e7fefa50f7125ba9e618ef/comments", "author": null, "committer": null, "parents": [{"sha": "c414a2c3c919888e7a77e86b214a61de8c299824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c414a2c3c919888e7a77e86b214a61de8c299824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c414a2c3c919888e7a77e86b214a61de8c299824"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "1ae1bffbc61f1ec979434038c20bfeac18f0e10b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5191f392bb445f50d7e7fefa50f7125ba9e618ef/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5191f392bb445f50d7e7fefa50f7125ba9e618ef/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5191f392bb445f50d7e7fefa50f7125ba9e618ef", "patch": "@@ -1,3 +1,8 @@\n+2003-05-27  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/URLConnection.java\n+\t(getHeaderFieldInt): Merged with classpath.\n+\n 2003-05-27  Michael Koch  <konqueror@gmx.de>\n \n \t* java/io/PrintStream.java"}, {"sha": "7684e5278167565a3f698969ff90d7c6834ae4b9", "filename": "libjava/java/net/URLConnection.java", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5191f392bb445f50d7e7fefa50f7125ba9e618ef/libjava%2Fjava%2Fnet%2FURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5191f392bb445f50d7e7fefa50f7125ba9e618ef/libjava%2Fjava%2Fnet%2FURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLConnection.java?ref=5191f392bb445f50d7e7fefa50f7125ba9e618ef", "patch": "@@ -322,25 +322,29 @@ public Map getHeaderFields()\n    * is not present or cannot be parsed as an integer, the default value\n    * will be returned.\n    *\n-   * @param name The name of the header field\n-   * @param val The default value\n+   * @param name The header field key to lookup\n+   * @param defaultValue The defaule value if the header field is not found\n+   * or can't be parsed.\n    *\n    * @return The value of the header field or the default value if the field\n    * is missing or malformed\n    */\n-  public int getHeaderFieldInt(String name, int val)\n+  public int getHeaderFieldInt(String name, int defaultValue)\n   {\n     String str = getHeaderField(name);\n+    int result = defaultValue;\n+    \n     try\n       {\n \tif (str != null)\n-\t  val = Integer.parseInt(str);\n+\t  result = Integer.parseInt (str);\n       }\n-    catch (NumberFormatException e)\n-      {\n-\t; // Do nothing; val is the default.\n+    catch (NumberFormatException e) \n+      { \n+\t; // Do nothing; defaultValue is the default.\n       }\n-    return val;\n+    \n+    return result;\n   }\n \n   /**"}]}