{"sha": "1175b9b4c50acab6a26f3fa5ce7299cae62b5008", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE3NWI5YjRjNTBhY2FiNmEyNmYzZmE1Y2U3Mjk5Y2FlNjJiNTAwOA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-08-20T16:28:48Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-08-20T16:28:48Z"}, "message": "re GNATS gcj/305 (Interface methods implementations not always checked)\n\n\t* parse.y (check_abstract_method_definitions): Now return `int'.\n\tCheck implemented interfaces.  Fixes PR gcj/305.\n\nFrom-SVN: r35820", "tree": {"sha": "b5f84c7d7c18140c7a7604d06583ba8c48bab26b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5f84c7d7c18140c7a7604d06583ba8c48bab26b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1175b9b4c50acab6a26f3fa5ce7299cae62b5008", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1175b9b4c50acab6a26f3fa5ce7299cae62b5008", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1175b9b4c50acab6a26f3fa5ce7299cae62b5008", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1175b9b4c50acab6a26f3fa5ce7299cae62b5008/comments", "author": null, "committer": null, "parents": [{"sha": "2e0f0affd69c15612e111d39135dd4fb7520b5df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0f0affd69c15612e111d39135dd4fb7520b5df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0f0affd69c15612e111d39135dd4fb7520b5df"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "902a6d5e12a1e2e9db58906a7f180a31f9c77cc8", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1175b9b4c50acab6a26f3fa5ce7299cae62b5008/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1175b9b4c50acab6a26f3fa5ce7299cae62b5008/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1175b9b4c50acab6a26f3fa5ce7299cae62b5008", "patch": "@@ -1,5 +1,8 @@\n 2000-08-09  Tom Tromey  <tromey@cygnus.com>\n \n+\t* parse.y (check_abstract_method_definitions): Now return `int'.\n+\tCheck implemented interfaces.  Fixes PR gcj/305.\n+\n \t* parse.y (patch_switch_statement): Disallow `long' in switch\n \texpressions.  Fixes PR gcj/310.\n "}, {"sha": "ae60ebee04fdb9990139180326c6c8ca11362724", "filename": "gcc/java/parse.y", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1175b9b4c50acab6a26f3fa5ce7299cae62b5008/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1175b9b4c50acab6a26f3fa5ce7299cae62b5008/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=1175b9b4c50acab6a26f3fa5ce7299cae62b5008", "patch": "@@ -276,7 +276,7 @@ static int java_decl_equiv PARAMS ((tree, tree));\n static int binop_compound_p PARAMS ((enum tree_code));\n static tree search_loop PARAMS ((tree));\n static int labeled_block_contains_loop_p PARAMS ((tree, tree));\n-static void check_abstract_method_definitions PARAMS ((int, tree, tree));\n+static int check_abstract_method_definitions PARAMS ((int, tree, tree));\n static void java_check_abstract_method_definitions PARAMS ((tree));\n static void java_debug_context_do PARAMS ((int));\n static void java_parser_context_push_initialized_field PARAMS ((void));\n@@ -5825,13 +5825,15 @@ check_method_redefinition (class, method)\n   return 0;\n }\n \n-static void\n+/* Return 1 if check went ok, 0 otherwise.  */\n+static int\n check_abstract_method_definitions (do_interface, class_decl, type)\n      int do_interface;\n      tree class_decl, type;\n {\n   tree class = TREE_TYPE (class_decl);\n   tree method, end_type;\n+  int ok = 1;\n \n   end_type = (do_interface ? object_type_node : type);\n   for (method = TYPE_METHODS (type); method; method = TREE_CHAIN (method))\n@@ -5904,13 +5906,27 @@ check_abstract_method_definitions (do_interface, class_decl, type)\n \t     IDENTIFIER_POINTER (ccn),\n \t     (CLASS_INTERFACE (class_decl) ? \"interface\" : \"class\"),\n \t     IDENTIFIER_POINTER (DECL_NAME (class_decl)));\n-\t  \n+\t  ok = 0;\n \t  free (t);\n-\t  \n+\n \t  if (saved_wfl)\n \t    DECL_NAME (method) = saved_wfl;\n \t}\n     }\n+\n+  if (ok && do_interface)\n+    {\n+      /* Check for implemented interfaces. */\n+      int i;\n+      tree vector = TYPE_BINFO_BASETYPES (type);\n+      for (i = 1; ok && vector && i < TREE_VEC_LENGTH (vector); i++)\n+\t{\n+\t  tree super = BINFO_TYPE (TREE_VEC_ELT (vector, i));\n+\t  ok = check_abstract_method_definitions (1, class_decl, super);\n+\t}\n+    }\n+\n+  return ok;\n }\n \n /* Check that CLASS_DECL somehow implements all inherited abstract"}]}