{"sha": "01a40464d42099d20da174639bc083f0780b29fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFhNDA0NjRkNDIwOTlkMjBkYTE3NDYzOWJjMDgzZjA3ODBiMjlmZQ==", "commit": {"author": {"name": "Dirk Mueller", "email": "dmueller@suse.de", "date": "2007-01-30T16:20:06Z"}, "committer": {"name": "Dirk Mueller", "email": "mueller@gcc.gnu.org", "date": "2007-01-30T16:20:06Z"}, "message": "re PR c++/30601 (-Wreturn-type warns about more than what the documentation says)\n\n2007-01-30  Dirk Mueller  <dmueller@suse.de>\n\n       PR c++/30601\n       * doc/invoke.texi (-Wreturn-type): Update description to\n       match new behavior.\n\nFrom-SVN: r121342", "tree": {"sha": "4b1fcf0539bfc5a4f338f5bc53e289b007f6ca06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b1fcf0539bfc5a4f338f5bc53e289b007f6ca06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01a40464d42099d20da174639bc083f0780b29fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a40464d42099d20da174639bc083f0780b29fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01a40464d42099d20da174639bc083f0780b29fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a40464d42099d20da174639bc083f0780b29fe/comments", "author": null, "committer": null, "parents": [{"sha": "67e644395802294de723b8cafcf01cf153e47684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67e644395802294de723b8cafcf01cf153e47684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67e644395802294de723b8cafcf01cf153e47684"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "1f712d064fe9e1f54adb184955777f391e086454", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a40464d42099d20da174639bc083f0780b29fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a40464d42099d20da174639bc083f0780b29fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01a40464d42099d20da174639bc083f0780b29fe", "patch": "@@ -1,3 +1,9 @@\n+2007-01-30  Dirk Mueller  <dmueller@suse.de>\n+\n+\tPR c++/30601\n+\t* doc/invoke.texi (-Wreturn-type): Update description to\n+\tmatch new behavior. \n+\n 2007-01-30  Richard Sandiford  <richard@codesourcery.com>\n \n \t* cfgrtl.c (try_redirect_by_replacing_jump): Check only_sets_cc0_p."}, {"sha": "bd4bca6c9b4446809302ab6d7b994f4e1354c3c9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01a40464d42099d20da174639bc083f0780b29fe/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01a40464d42099d20da174639bc083f0780b29fe/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=01a40464d42099d20da174639bc083f0780b29fe", "patch": "@@ -2657,11 +2657,13 @@ Warn whenever a function is defined with a return-type that defaults to\n @code{int}.  Also warn about any @code{return} statement with no\n return-value in a function whose return-type is not @code{void}.\n \n-For C, also warn if the return type of a function has a type qualifier\n-such as @code{const}.  Such a type qualifier has no effect, since the\n-value returned by a function is not an lvalue.  ISO C prohibits\n-qualified @code{void} return types on function definitions, so such\n-return types always receive a warning even without this option.\n+Also warn if the return type of a function has a type qualifier\n+such as @code{const}.  For ISO C such a type qualifier has no effect,\n+since the value returned by a function is not an lvalue.\n+For C++, the warning is only emitted for scalar types or @code{void}.\n+ISO C prohibits qualified @code{void} return types on function\n+definitions, so such return types always receive a warning\n+even without this option.\n \n For C++, a function without return type always produces a diagnostic\n message, even when @option{-Wno-return-type} is specified.  The only"}]}