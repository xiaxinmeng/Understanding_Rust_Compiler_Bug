{"sha": "1e19ecd79b45af6df87a6869d1936b857c9f71fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUxOWVjZDc5YjQ1YWY2ZGY4N2E2ODY5ZDE5MzZiODU3YzlmNzFmYw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-09-21T15:59:26Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-09-21T22:50:08Z"}, "message": "analyzer: fix ICE on bogus decl of memset [PR97130]\n\nVerify that arguments are pointers before calling handling code\nthat calls deref_rvalue on them.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/97130\n\t* region-model-impl-calls.cc (call_details::get_arg_type): New.\n\t* region-model.cc (region_model::on_call_pre): Check that the\n\tinitial arg is a pointer before calling impl_call_memset and\n\timpl_call_strlen.\n\t* region-model.h (call_details::get_arg_type): New decl.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/97130\n\t* gcc.dg/analyzer/pr97130.c: New test.", "tree": {"sha": "1964506c67511ce7de835f3315e163032f1bae3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1964506c67511ce7de835f3315e163032f1bae3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e19ecd79b45af6df87a6869d1936b857c9f71fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e19ecd79b45af6df87a6869d1936b857c9f71fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e19ecd79b45af6df87a6869d1936b857c9f71fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e19ecd79b45af6df87a6869d1936b857c9f71fc/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15e7b93ba4256884c90198c678ed7eded4e73464", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15e7b93ba4256884c90198c678ed7eded4e73464", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15e7b93ba4256884c90198c678ed7eded4e73464"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "423f74a415261958c391a294b47b97cc8655b399", "filename": "gcc/analyzer/region-model-impl-calls.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e19ecd79b45af6df87a6869d1936b857c9f71fc/gcc%2Fanalyzer%2Fregion-model-impl-calls.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e19ecd79b45af6df87a6869d1936b857c9f71fc/gcc%2Fanalyzer%2Fregion-model-impl-calls.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model-impl-calls.cc?ref=1e19ecd79b45af6df87a6869d1936b857c9f71fc", "patch": "@@ -103,6 +103,14 @@ call_details::get_arg_tree (unsigned idx) const\n   return gimple_call_arg (m_call, idx);\n }\n \n+/* Get the type of argument IDX.  */\n+\n+tree\n+call_details::get_arg_type (unsigned idx) const\n+{\n+  return TREE_TYPE (gimple_call_arg (m_call, idx));\n+}\n+\n /* Get argument IDX at the callsite as an svalue.  */\n \n const svalue *"}, {"sha": "6f04904a74e2fd774bd141eecdae671a0c8c7fed", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e19ecd79b45af6df87a6869d1936b857c9f71fc/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e19ecd79b45af6df87a6869d1936b857c9f71fc/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=1e19ecd79b45af6df87a6869d1936b857c9f71fc", "patch": "@@ -737,12 +737,14 @@ region_model::on_call_pre (const gcall *call, region_model_context *ctxt)\n \t  /* No side-effects (tracking stream state is out-of-scope\n \t     for the analyzer).  */\n \t}\n-      else if (is_named_call_p (callee_fndecl, \"memset\", call, 3))\n+      else if (is_named_call_p (callee_fndecl, \"memset\", call, 3)\n+\t       && POINTER_TYPE_P (cd.get_arg_type (0)))\n \t{\n \t  impl_call_memset (cd);\n \t  return false;\n \t}\n-      else if (is_named_call_p (callee_fndecl, \"strlen\", call, 1))\n+      else if (is_named_call_p (callee_fndecl, \"strlen\", call, 1)\n+\t       && POINTER_TYPE_P (cd.get_arg_type (0)))\n \t{\n \t  if (impl_call_strlen (cd))\n \t    return false;"}, {"sha": "4859df369cf90f3a305a8201086694397e5c9f56", "filename": "gcc/analyzer/region-model.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e19ecd79b45af6df87a6869d1936b857c9f71fc/gcc%2Fanalyzer%2Fregion-model.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e19ecd79b45af6df87a6869d1936b857c9f71fc/gcc%2Fanalyzer%2Fregion-model.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.h?ref=1e19ecd79b45af6df87a6869d1936b857c9f71fc", "patch": "@@ -2482,6 +2482,7 @@ class call_details\n   bool maybe_set_lhs (const svalue *result) const;\n \n   tree get_arg_tree (unsigned idx) const;\n+  tree get_arg_type (unsigned idx) const;\n   const svalue *get_arg_svalue (unsigned idx) const;\n \n   void dump_to_pp (pretty_printer *pp, bool simple) const;"}, {"sha": "f437b763c94c3cd6811286cf0ece10cc4f5f40a8", "filename": "gcc/testsuite/gcc.dg/analyzer/pr97130.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e19ecd79b45af6df87a6869d1936b857c9f71fc/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr97130.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e19ecd79b45af6df87a6869d1936b857c9f71fc/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr97130.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr97130.c?ref=1e19ecd79b45af6df87a6869d1936b857c9f71fc", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-additional-options \"-Wno-builtin-declaration-mismatch\" } */\n+\n+void *\n+memset (int, int, __SIZE_TYPE__);\n+\n+void\n+mp (int xl)\n+{\n+  memset (xl, 0, sizeof xl);\n+}"}]}