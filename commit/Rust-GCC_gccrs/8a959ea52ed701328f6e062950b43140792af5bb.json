{"sha": "8a959ea52ed701328f6e062950b43140792af5bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE5NTllYTUyZWQ3MDEzMjhmNmUwNjI5NTBiNDMxNDA3OTJhZjViYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-10-24T00:26:12Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-10-24T00:26:12Z"}, "message": "ia64.c (ia64_expand_prologue): Mark extra output registers as fixed.\n\n        * config/ia64/ia64.c (ia64_expand_prologue): Mark extra\n        output registers as fixed.\n        (ia64_function_epilogue): Undo output fixation.\n\nFrom-SVN: r37029", "tree": {"sha": "cd3bf8ff6e05f219a26d930a4b27e707ed66470f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd3bf8ff6e05f219a26d930a4b27e707ed66470f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a959ea52ed701328f6e062950b43140792af5bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a959ea52ed701328f6e062950b43140792af5bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a959ea52ed701328f6e062950b43140792af5bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a959ea52ed701328f6e062950b43140792af5bb/comments", "author": null, "committer": null, "parents": [{"sha": "964686defdd10bfddabeb0e077ec3906433a49c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/964686defdd10bfddabeb0e077ec3906433a49c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/964686defdd10bfddabeb0e077ec3906433a49c0"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "1f6efffaa891d34eb519cd5666b06e3f109c9301", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a959ea52ed701328f6e062950b43140792af5bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a959ea52ed701328f6e062950b43140792af5bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a959ea52ed701328f6e062950b43140792af5bb", "patch": "@@ -1,3 +1,9 @@\n+2000-10-23  Richard Henderson  <rth@cygnus.com>\n+\n+\t* config/ia64/ia64.c (ia64_expand_prologue): Mark extra \n+\toutput registers as fixed.\n+\t(ia64_function_epilogue): Undo output fixation.\n+\n 2000-10-23  Richard Henderson  <rth@cygnus.com>\n \n \t* config/alpha/alpha.md: Add names for all unnamed insns; use"}, {"sha": "dcf3ce17ff7bad375938cc796eb209704ffb171d", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a959ea52ed701328f6e062950b43140792af5bb/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a959ea52ed701328f6e062950b43140792af5bb/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=8a959ea52ed701328f6e062950b43140792af5bb", "patch": "@@ -1852,6 +1852,12 @@ ia64_expand_prologue ()\n \treg_names[OUT_REG (i)] = ia64_reg_numbers[inputs + locals + i];\n     }\n \n+  /* ??? Temporarily mark the remaining output registers fixed, so\n+     that the register renaming pass does not try to used them after\n+     we've fixed the size of the register frame.  */\n+  for (i = current_frame_info.n_output_regs; i < 8; ++i)\n+    fixed_regs[OUT_REG (i)] = 1;\n+\n   /* Set the frame pointer register name.  The regnum is logically loc79,\n      but of course we'll not have allocated that many locals.  Rather than\n      worrying about renumbering the existing rtxs, we adjust the name.  */\n@@ -2475,6 +2481,8 @@ ia64_function_epilogue (file, size)\n      FILE *file ATTRIBUTE_UNUSED;\n      int size ATTRIBUTE_UNUSED;\n {\n+  int i;\n+\n   /* Reset from the function's potential modifications.  */\n   XINT (return_address_pointer_rtx, 0) = RETURN_ADDRESS_POINTER_REGNUM;\n \n@@ -2487,15 +2495,17 @@ ia64_function_epilogue (file, size)\n     }\n   if (! TARGET_REG_NAMES)\n     {\n-      int i;\n-\n       for (i = 0; i < current_frame_info.n_input_regs; i++)\n \treg_names[IN_REG (i)] = ia64_input_reg_names[i];\n       for (i = 0; i < current_frame_info.n_local_regs; i++)\n \treg_names[LOC_REG (i)] = ia64_local_reg_names[i];\n       for (i = 0; i < current_frame_info.n_output_regs; i++)\n \treg_names[OUT_REG (i)] = ia64_output_reg_names[i];\n     }\n+\n+  for (i = 0; i < 8; ++i)\n+    fixed_regs[OUT_REG (i)] = 0;\n+\n   current_frame_info.initialized = 0;\n }\n "}]}