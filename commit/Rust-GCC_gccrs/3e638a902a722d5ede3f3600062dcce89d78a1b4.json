{"sha": "3e638a902a722d5ede3f3600062dcce89d78a1b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U2MzhhOTAyYTcyMmQ1ZWRlM2YzNjAwMDYyZGNjZTg5ZDc4YTFiNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-05-09T12:56:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-05-09T12:56:47Z"}, "message": "cfganal.c (can_fallthru): Fix fast path.\n\n\n\t* cfganal.c (can_fallthru): Fix fast path.\n\t* cfgrtl.c (verify_flow_info): Avoid crash on conditionals\n\twith edges to the next block.\n\nFrom-SVN: r53327", "tree": {"sha": "aaf80738a13ab5c13f6de2bf5270a7b5b30592c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaf80738a13ab5c13f6de2bf5270a7b5b30592c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e638a902a722d5ede3f3600062dcce89d78a1b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e638a902a722d5ede3f3600062dcce89d78a1b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e638a902a722d5ede3f3600062dcce89d78a1b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e638a902a722d5ede3f3600062dcce89d78a1b4/comments", "author": null, "committer": null, "parents": [{"sha": "b7c9bf289f096dd5338f37a4656f13d7b982fd33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7c9bf289f096dd5338f37a4656f13d7b982fd33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7c9bf289f096dd5338f37a4656f13d7b982fd33"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "881dfe7116511d3ac59a705bc674ba12d916f244", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e638a902a722d5ede3f3600062dcce89d78a1b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e638a902a722d5ede3f3600062dcce89d78a1b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e638a902a722d5ede3f3600062dcce89d78a1b4", "patch": "@@ -1,3 +1,9 @@\n+Thu May  9 14:55:39 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfganal.c (can_fallthru): Fix fast path.\n+\t* cfgrtl.c (verify_flow_info): Avoid crash on conditionals\n+\twith edges to the next block.\n+\n Thu May  9 14:52:45 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \t\t\t       Pavel Nejedly  <bim@atrey.karlin.mff.cuni.cz>\n "}, {"sha": "f70c6c7b2fc3229be141e8d31c35217afaf1dd90", "filename": "gcc/cfganal.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e638a902a722d5ede3f3600062dcce89d78a1b4/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e638a902a722d5ede3f3600062dcce89d78a1b4/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=3e638a902a722d5ede3f3600062dcce89d78a1b4", "patch": "@@ -87,7 +87,10 @@ can_fallthru (src, target)\n   rtx insn = src->end;\n   rtx insn2 = target->head;\n \n-  if (src->index + 1 == target->index && !active_insn_p (insn2))\n+  if (src->index + 1 != target->index)\n+    return 0;\n+\n+  if (!active_insn_p (insn2))\n     insn2 = next_active_insn (insn2);\n \n   /* ??? Later we may add code to move jump tables offline.  */"}, {"sha": "cd3369c542e5879810c27a59609cde761c263d8e", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e638a902a722d5ede3f3600062dcce89d78a1b4/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e638a902a722d5ede3f3600062dcce89d78a1b4/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=3e638a902a722d5ede3f3600062dcce89d78a1b4", "patch": "@@ -1782,6 +1782,7 @@ verify_flow_info ()\n \n       if (INSN_P (bb->end)\n \t  && (note = find_reg_note (bb->end, REG_BR_PROB, NULL_RTX))\n+\t  && bb->succ && bb->succ->succ_next\n \t  && any_condjump_p (bb->end))\n \t{\n \t  if (INTVAL (XEXP (note, 0)) != BRANCH_EDGE (bb)->probability)"}]}