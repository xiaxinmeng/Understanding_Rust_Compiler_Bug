{"sha": "8a18e16fa65b3e63064eeaaa0481e73942a6972a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExOGUxNmZhNjViM2U2MzA2NGVlYWFhMDQ4MWU3Mzk0MmE2OTcyYQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-04-16T20:37:41Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-04-16T20:37:41Z"}, "message": "Don't put relocatable items into .rdata.\n\nAllow iris to have it's version of the trampoline code.\n\nFrom-SVN: r4161", "tree": {"sha": "58ecd19f307b2eba325779939288b0be4526abe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58ecd19f307b2eba325779939288b0be4526abe6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a18e16fa65b3e63064eeaaa0481e73942a6972a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a18e16fa65b3e63064eeaaa0481e73942a6972a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a18e16fa65b3e63064eeaaa0481e73942a6972a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a18e16fa65b3e63064eeaaa0481e73942a6972a/comments", "author": null, "committer": null, "parents": [{"sha": "3ca25f3f23a4d829685d195f196173d293207e58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca25f3f23a4d829685d195f196173d293207e58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ca25f3f23a4d829685d195f196173d293207e58"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "a688e200e6acaefafef35a2372917b299fbfceb7", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a18e16fa65b3e63064eeaaa0481e73942a6972a/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a18e16fa65b3e63064eeaaa0481e73942a6972a/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=8a18e16fa65b3e63064eeaaa0481e73942a6972a", "patch": "@@ -645,7 +645,7 @@ while (0)\n \f\n /* Print subsidiary information on the compiler version in use.  */\n \n-#define MIPS_VERSION \"[AL 1.1, MM 38]\"\n+#define MIPS_VERSION \"[AL 1.1, MM 39]\"\n \n #ifndef MACHINE_TYPE\n #define MACHINE_TYPE \"BSD Mips\"\n@@ -1968,6 +1968,7 @@ typedef struct mips_args {\n    RTX for the static chain value that should be passed to the\n    function when it is called.  */\n \n+#ifndef INITIALIZE_TRAMPOLINE\n #define INITIALIZE_TRAMPOLINE(ADDR, FUNC, CHAIN)\t\t\t    \\\n {\t\t\t\t\t\t\t\t\t    \\\n   rtx addr = ADDR;\t\t\t\t\t\t\t    \\\n@@ -1978,10 +1979,12 @@ typedef struct mips_args {\n   emit_library_call (gen_rtx (SYMBOL_REF, Pmode, \"__enable_execute_stack\"), \\\n \t\t     0, VOIDmode, 1, addr, Pmode);\t\t\t    \\\n }\n+#endif /* INITIALIZE_TRAMPOLINE */\n \n \n /* Attempt to turn on access permissions for the stack.  */\n \n+#ifndef TRANSFER_FROM_TRAMPOLINE\n #define TRANSFER_FROM_TRAMPOLINE\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n@@ -2002,6 +2005,7 @@ __enable_execute_stack (addr)\t\t\t\t\t\t\\\n     perror (\"cacheflush of trampoline code\");\t\t\t\t\\\n  */\t\t\t\t\t\t\t\t\t\\\n }\n+#endif\t/* TRANSFER_FROM_TRAMPOLINE */\n \n \f\n /* Addressing modes, and classification of registers for them.  */\n@@ -3431,22 +3435,29 @@ rdata_section ()\t\t\t\t\t\t\t\\\n     rdata_section ();\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\t\\\n \n-#define SELECT_SECTION(DECL,RELOC)\t\t\t\t\t\\\n+#define SELECT_SECTION(DECL, RELOC)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   if (int_size_in_bytes (TREE_TYPE (DECL)) <= mips_section_threshold\t\\\n       && mips_section_threshold > 0)\t\t\t\t\t\\\n     sdata_section ();\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  else if (RELOC)\t\t\t\t\t\t\t\\\n+    data_section ();\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n   else if (TREE_CODE (DECL) == STRING_CST)\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       if (flag_writable_strings)\t\t\t\t\t\\\n \tdata_section ();\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \trdata_section ();\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n   else if (TREE_CODE (DECL) != VAR_DECL)\t\t\t\t\\\n     rdata_section ();\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n   else if (!TREE_READONLY (DECL))\t\t\t\t\t\\\n     data_section ();\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     rdata_section ();\t\t\t\t\t\t\t\\\n }"}]}