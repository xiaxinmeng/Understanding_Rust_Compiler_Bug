{"sha": "867399e91a6755a13caddd40349ca19b25d4ae10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY3Mzk5ZTkxYTY3NTVhMTNjYWRkZDQwMzQ5Y2ExOWIyNWQ0YWUxMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-12-03T15:13:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-12-03T15:13:04Z"}, "message": "tree-ssa-sccvn.c (eliminate_dom_walker::eliminate_stmt): Only allow expected function-pointer cast re-instantiation.\n\n2018-12-03  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (eliminate_dom_walker::eliminate_stmt): Only\n\tallow expected function-pointer cast re-instantiation.\n\nFrom-SVN: r266742", "tree": {"sha": "ae60601e518c4a1429a0132b4a9c022e58c8075a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae60601e518c4a1429a0132b4a9c022e58c8075a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/867399e91a6755a13caddd40349ca19b25d4ae10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867399e91a6755a13caddd40349ca19b25d4ae10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867399e91a6755a13caddd40349ca19b25d4ae10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867399e91a6755a13caddd40349ca19b25d4ae10/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c66130b1f8460773912ca3a915f657db466fd39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c66130b1f8460773912ca3a915f657db466fd39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c66130b1f8460773912ca3a915f657db466fd39"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "bde3cd4f042a5f0bcff29bc387c281dfd170d0c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867399e91a6755a13caddd40349ca19b25d4ae10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867399e91a6755a13caddd40349ca19b25d4ae10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=867399e91a6755a13caddd40349ca19b25d4ae10", "patch": "@@ -1,3 +1,8 @@\n+2018-12-03  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (eliminate_dom_walker::eliminate_stmt): Only\n+\tallow expected function-pointer cast re-instantiation.\n+\n 2018-12-03  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* common/config/s390/s390-common.c (s390_option_init_struct):"}, {"sha": "700aa1fadc5954fa95526e07970c1eae603dd2a8", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867399e91a6755a13caddd40349ca19b25d4ae10/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867399e91a6755a13caddd40349ca19b25d4ae10/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=867399e91a6755a13caddd40349ca19b25d4ae10", "patch": "@@ -4984,10 +4984,6 @@ eliminate_dom_walker::eliminate_stmt (basic_block b, gimple_stmt_iterator *gsi)\n \t    return;\n \n \t  /* Else replace its RHS.  */\n-\t  bool can_make_abnormal_goto\n-\t      = is_gimple_call (stmt)\n-\t      && stmt_can_make_abnormal_goto (stmt);\n-\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {\n \t      fprintf (dump_file, \"Replaced \");\n@@ -4997,12 +4993,23 @@ eliminate_dom_walker::eliminate_stmt (basic_block b, gimple_stmt_iterator *gsi)\n \t      fprintf (dump_file, \" in \");\n \t      print_gimple_stmt (dump_file, stmt, 0);\n \t    }\n-\n \t  eliminations++;\n+\n+\t  bool can_make_abnormal_goto = (is_gimple_call (stmt)\n+\t\t\t\t\t && stmt_can_make_abnormal_goto (stmt));\n \t  gimple *orig_stmt = stmt;\n \t  if (!useless_type_conversion_p (TREE_TYPE (lhs),\n \t\t\t\t\t  TREE_TYPE (sprime)))\n-\t    sprime = fold_convert (TREE_TYPE (lhs), sprime);\n+\t    {\n+\t      /* We preserve conversions to but not from function or method\n+\t\t types.  This asymmetry makes it necessary to re-instantiate\n+\t\t conversions here.  */\n+\t      if (POINTER_TYPE_P (TREE_TYPE (lhs))\n+\t\t  && FUNC_OR_METHOD_TYPE_P (TREE_TYPE (TREE_TYPE (lhs))))\n+\t\tsprime = fold_convert (TREE_TYPE (lhs), sprime);\n+\t      else\n+\t\tgcc_unreachable ();\n+\t    }\n \t  tree vdef = gimple_vdef (stmt);\n \t  tree vuse = gimple_vuse (stmt);\n \t  propagate_tree_value_into_stmt (gsi, sprime);"}]}