{"sha": "70b78a2622feb275490802a1a69956d01096dcf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBiNzhhMjYyMmZlYjI3NTQ5MDgwMmExYTY5OTU2ZDAxMDk2ZGNmMQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1994-02-16T03:52:30Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1994-02-16T03:52:30Z"}, "message": "Removed un-used STRING_TYPE.\n\nFrom-SVN: r6569", "tree": {"sha": "b37ab610393f6f81dcbe5c60f9ed75ba7b57a205", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b37ab610393f6f81dcbe5c60f9ed75ba7b57a205"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70b78a2622feb275490802a1a69956d01096dcf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b78a2622feb275490802a1a69956d01096dcf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b78a2622feb275490802a1a69956d01096dcf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b78a2622feb275490802a1a69956d01096dcf1/comments", "author": null, "committer": null, "parents": [{"sha": "0de689b7ada13c7d480491647363e4995ed5ba93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de689b7ada13c7d480491647363e4995ed5ba93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0de689b7ada13c7d480491647363e4995ed5ba93"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "7eb9a2e09513e95469a2206a73f205f4ffafe09f", "filename": "gcc/tree.def", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b78a2622feb275490802a1a69956d01096dcf1/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b78a2622feb275490802a1a69956d01096dcf1/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=70b78a2622feb275490802a1a69956d01096dcf1", "patch": "@@ -193,18 +193,16 @@ DEFTREECODE (FILE_TYPE, \"file_type\", \"t\", 0)\n    TYPE_SEP\t\t  Expression for units from one elt to the next.\n    TYPE_SEP_UNIT\t  Number of bits in a unit for previous.\n  The field TYPE_POINTER_TO (TREE_TYPE (array_type)) is always nonzero\n- and holds the type to coerce a value of that array type to in C.  */\n+ and holds the type to coerce a value of that array type to in C.\n+ TYPE_STRING_FLAG indicates a string (in contrast to an array of chars)\n+ in languages (such as Chill) that make a distinction. */\n /* Array types in C or Pascal */\n DEFTREECODE (ARRAY_TYPE, \"array_type\", \"t\", 0)\n \n /* Types of sets for Pascal.  Special fields are the same as\n    in an array type.  The target type is always a boolean type.  */\n DEFTREECODE (SET_TYPE, \"set_type\", \"t\", 0)\n \n-/* Not known whether Pascal really needs this\n-   or what it should contain.  */\n-DEFTREECODE (STRING_TYPE, \"string_type\", \"t\", 0)\n-\n /* Struct in C, or record in Pascal.  */\n /* Special fields:\n    TYPE_FIELDS  chain of FIELD_DECLs for the fields of the struct."}]}