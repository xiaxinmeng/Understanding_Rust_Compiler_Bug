{"sha": "e4a99831f4fee023e50f4116318e678757bdf4ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRhOTk4MzFmNGZlZTAyM2U1MGY0MTE2MzE4ZTY3ODc1N2JkZjRlZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-06-05T15:50:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-16T09:17:57Z"}, "message": "[Ada] Overflow in string streaming\n\ngcc/ada/\n\n\t* libgnat/s-ststop.ads: Fix typo.\n\t* libgnat/s-ststop.adb (Read, Write): Fix block number\n\tcomputation to avoid overflows in case of large strings.", "tree": {"sha": "5fb8028f19f8fc895fa30630c20b86fa79fed7b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fb8028f19f8fc895fa30630c20b86fa79fed7b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4a99831f4fee023e50f4116318e678757bdf4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a99831f4fee023e50f4116318e678757bdf4ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4a99831f4fee023e50f4116318e678757bdf4ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a99831f4fee023e50f4116318e678757bdf4ed/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f6898f9d8c981eb70410bb9fd19d08ce1f684b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f6898f9d8c981eb70410bb9fd19d08ce1f684b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f6898f9d8c981eb70410bb9fd19d08ce1f684b8"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "cc2a352d1628d895ef9b98f10fa2285bebb03f19", "filename": "gcc/ada/libgnat/s-ststop.adb", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a99831f4fee023e50f4116318e678757bdf4ed/gcc%2Fada%2Flibgnat%2Fs-ststop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a99831f4fee023e50f4116318e678757bdf4ed/gcc%2Fada%2Flibgnat%2Fs-ststop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-ststop.adb?ref=e4a99831f4fee023e50f4116318e678757bdf4ed", "patch": "@@ -216,21 +216,25 @@ package body System.Strings.Stream_Ops is\n             declare\n                --  Determine the size in BITS of the block necessary to contain\n                --  the whole string.\n+               --  Since we are dealing with strings indexed by natural, there\n+               --  is no risk of overflow when using a Long_Long_Integer.\n \n-               Block_Size : constant Natural :=\n-                              Integer (Item'Last - Item'First + 1) * ET_Size;\n+               Block_Size : constant Long_Long_Integer :=\n+                 Item'Length * Long_Long_Integer (ET_Size);\n \n                --  Item can be larger than what the default block can store,\n-               --  determine the number of whole reads necessary to read the\n+               --  determine the number of whole writes necessary to output the\n                --  string.\n \n-               Blocks : constant Natural := Block_Size / Default_Block_Size;\n+               Blocks : constant Natural :=\n+                 Natural (Block_Size / Long_Long_Integer (Default_Block_Size));\n \n                --  The size of Item may not be a multiple of the default block\n-               --  size, determine the size of the remaining chunk in BITS.\n+               --  size, determine the size of the remaining chunk.\n \n                Rem_Size : constant Natural :=\n-                            Block_Size mod Default_Block_Size;\n+                 Natural\n+                   (Block_Size mod Long_Long_Integer (Default_Block_Size));\n \n                --  String indexes\n \n@@ -337,20 +341,25 @@ package body System.Strings.Stream_Ops is\n             declare\n                --  Determine the size in BITS of the block necessary to contain\n                --  the whole string.\n+               --  Since we are dealing with strings indexed by natural, there\n+               --  is no risk of overflow when using a Long_Long_Integer.\n \n-               Block_Size : constant Natural := Item'Length * ET_Size;\n+               Block_Size : constant Long_Long_Integer :=\n+                 Item'Length * Long_Long_Integer (ET_Size);\n \n                --  Item can be larger than what the default block can store,\n                --  determine the number of whole writes necessary to output the\n                --  string.\n \n-               Blocks : constant Natural := Block_Size / Default_Block_Size;\n+               Blocks : constant Natural :=\n+                 Natural (Block_Size / Long_Long_Integer (Default_Block_Size));\n \n                --  The size of Item may not be a multiple of the default block\n                --  size, determine the size of the remaining chunk.\n \n                Rem_Size : constant Natural :=\n-                            Block_Size mod Default_Block_Size;\n+                 Natural\n+                   (Block_Size mod Long_Long_Integer (Default_Block_Size));\n \n                --  String indexes\n "}, {"sha": "5f35fed6c3e6b6f43a2fb8122c03fccf16738c98", "filename": "gcc/ada/libgnat/s-ststop.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a99831f4fee023e50f4116318e678757bdf4ed/gcc%2Fada%2Flibgnat%2Fs-ststop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a99831f4fee023e50f4116318e678757bdf4ed/gcc%2Fada%2Flibgnat%2Fs-ststop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-ststop.ads?ref=e4a99831f4fee023e50f4116318e678757bdf4ed", "patch": "@@ -53,7 +53,7 @@\n --       or\n --     String_Output_Blk_IO (Some_Stream, Some_String);\n \n---  String_Output form is used if pragma Restrictions (No_String_Optimziations)\n+--  String_Output form is used if pragma Restrictions (No_String_Optimizations)\n --  is active, which requires element by element operations. The BLK_IO form\n --  is used if this restriction is not set, allowing block optimization.\n "}]}