{"sha": "92a30040c8d3ea4899979ec41a7e8e6a625c438d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJhMzAwNDBjOGQzZWE0ODk5OTc5ZWM0MWE3ZThlNmE2MjVjNDM4ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-11-20T21:50:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-11-24T19:57:56Z"}, "message": "c++: ICE with int{} in template. [PR97899]\n\nsplit_nonconstant_init_1 was confused by a CONSTRUCTOR with non-aggregate\ntype, which (with COMPOUND_LITERAL_P set) we use in a template to represent\na braced functional cast.  It seems to me that there's no good reason to do\nsplit_nonconstant_init at all in a template.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/97899\n\t* typeck2.c (store_init_value): Don't split_nonconstant_init in a\n\ttemplate.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/97899\n\t* g++.dg/cpp0x/initlist-template3.C: New test.", "tree": {"sha": "c4f91105a4b1b013955ef68e18f7a57c72dce78e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4f91105a4b1b013955ef68e18f7a57c72dce78e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92a30040c8d3ea4899979ec41a7e8e6a625c438d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a30040c8d3ea4899979ec41a7e8e6a625c438d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a30040c8d3ea4899979ec41a7e8e6a625c438d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a30040c8d3ea4899979ec41a7e8e6a625c438d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce2d9549f2b2bcb70a1a6f8f4e776e1ed427546b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2d9549f2b2bcb70a1a6f8f4e776e1ed427546b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce2d9549f2b2bcb70a1a6f8f4e776e1ed427546b"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "721987e850273a2752bfba3206068efa69bd126c", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a30040c8d3ea4899979ec41a7e8e6a625c438d/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a30040c8d3ea4899979ec41a7e8e6a625c438d/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=92a30040c8d3ea4899979ec41a7e8e6a625c438d", "patch": "@@ -806,6 +806,7 @@ store_init_value (tree decl, tree init, vec<tree, va_gc>** cleanups, int flags)\n      the bits that are constant, and then return an expression that\n      will perform the dynamic initialization.  */\n   if (value != error_mark_node\n+      && !processing_template_decl\n       && (TREE_SIDE_EFFECTS (value)\n \t  || vla_type_p (type)\n \t  || ! reduced_constant_expression_p (value)))"}, {"sha": "b65a8473a09a2047aba82439a47ce49a5cf54c28", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist-template3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a30040c8d3ea4899979ec41a7e8e6a625c438d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-template3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a30040c8d3ea4899979ec41a7e8e6a625c438d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-template3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-template3.C?ref=92a30040c8d3ea4899979ec41a7e8e6a625c438d", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/97899\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T = int>\n+int fn()\n+{\n+  return 1;\n+}\n+\n+template <typename T>\n+void bar() {\n+  const int i = int{fn()};\n+}"}]}