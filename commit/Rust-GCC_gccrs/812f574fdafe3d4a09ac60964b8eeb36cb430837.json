{"sha": "812f574fdafe3d4a09ac60964b8eeb36cb430837", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEyZjU3NGZkYWZlM2Q0YTA5YWM2MDk2NGI4ZWViMzZjYjQzMDgzNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-08T13:29:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-08T13:29:19Z"}, "message": "[multiple changes]\n\n2009-04-08  Tristan Gingold  <gingold@adacore.com>\n\n\t* sem_prag.adb: Restrict pragma Thread_Local_Storage to library level\n\tvariables.\n\tSet Has_Gigi_Rep_Item flag to TLS variables (to ease gigi work).\n\n2009-04-08  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb:\n\t(Add_Source): Add the mapping of the unit name to source file name in\n\tthe Unit_Sources_HT hash table, if the unit name is not null.\n\n\t* prj.adb (Reset): Reset hash table Tree.Unit_Sources_HT\n\n\t* prj.ads (Unit_Sources_Htable): New hash table instantiation\n\t(Project_Tree_Data): New component Unit_Sources_HT\n\nFrom-SVN: r145728", "tree": {"sha": "f98b2556e2aecc2d4afb32dd2119d0c3050ec74c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f98b2556e2aecc2d4afb32dd2119d0c3050ec74c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/812f574fdafe3d4a09ac60964b8eeb36cb430837", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/812f574fdafe3d4a09ac60964b8eeb36cb430837", "html_url": "https://github.com/Rust-GCC/gccrs/commit/812f574fdafe3d4a09ac60964b8eeb36cb430837", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/812f574fdafe3d4a09ac60964b8eeb36cb430837/comments", "author": null, "committer": null, "parents": [{"sha": "020e3d027a081053ec8dee92d1ea45b966a312d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/020e3d027a081053ec8dee92d1ea45b966a312d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/020e3d027a081053ec8dee92d1ea45b966a312d8"}], "stats": {"total": 95, "additions": 64, "deletions": 31}, "files": [{"sha": "940337e2e5e67f53b920899fea03917fe9d11291", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=812f574fdafe3d4a09ac60964b8eeb36cb430837", "patch": "@@ -1,3 +1,20 @@\n+2009-04-08  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* sem_prag.adb: Restrict pragma Thread_Local_Storage to library level\n+\tvariables.\n+\tSet Has_Gigi_Rep_Item flag to TLS variables (to ease gigi work).\n+\n+2009-04-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb:\n+\t(Add_Source): Add the mapping of the unit name to source file name in\n+\tthe Unit_Sources_HT hash table, if the unit name is not null.\n+\n+\t* prj.adb (Reset): Reset hash table Tree.Unit_Sources_HT\n+\n+\t* prj.ads (Unit_Sources_Htable): New hash table instantiation\n+\t(Project_Tree_Data): New component Unit_Sources_HT\n+\n 2009-04-08  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch8.adb: Minor reformatting."}, {"sha": "3c2d5d8a20e5c5151508cb6b170b851cf038334d", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=812f574fdafe3d4a09ac60964b8eeb36cb430837", "patch": "@@ -656,6 +656,13 @@ package body Prj.Nmsc is\n          Source_Paths_Htable.Set (In_Tree.Source_Paths_HT, Path, Id);\n       end if;\n \n+      --  Add the source id to the Unit_Sources_HT hash table, if the unit name\n+      --  is not null.\n+\n+      if Unit /= No_Name then\n+         Unit_Sources_Htable.Set (In_Tree.Unit_Sources_HT, Unit, Id);\n+      end if;\n+\n       --  Add the source to the global list\n \n       Src_Data.Next_In_Sources := In_Tree.First_Source;\n@@ -806,8 +813,9 @@ package body Prj.Nmsc is\n                   Source := Data.First_Source;\n                   Source_Loop : while Source /= No_Source loop\n                      declare\n-                        Src_Data      : Source_Data renames\n-                          In_Tree.Sources.Table (Source);\n+                        Src_Data : Source_Data renames\n+                                     In_Tree.Sources.Table (Source);\n+\n                      begin\n                         exit Source_Loop when Src_Data.Language = Language;\n \n@@ -2513,7 +2521,7 @@ package body Prj.Nmsc is\n             while Source /= No_Source loop\n                declare\n                   Src_Data : Source_Data renames\n-                    In_Tree.Sources.Table (Source);\n+                               In_Tree.Sources.Table (Source);\n                begin\n                   Src_Data.In_Interfaces := False;\n                   Source := Src_Data.Next_In_Project;\n@@ -2542,7 +2550,8 @@ package body Prj.Nmsc is\n                while Source /= No_Source loop\n                   declare\n                      Src_Data : Source_Data renames\n-                       In_Tree.Sources.Table (Source);\n+                                  In_Tree.Sources.Table (Source);\n+\n                   begin\n                      if Src_Data.File = Name then\n                         if not Src_Data.Locally_Removed then\n@@ -2604,7 +2613,8 @@ package body Prj.Nmsc is\n             while Source /= No_Source loop\n                declare\n                   Src_Data : Source_Data renames\n-                    In_Tree.Sources.Table (Source);\n+                               In_Tree.Sources.Table (Source);\n+\n                begin\n                   if not Src_Data.Declared_In_Interfaces then\n                      Src_Data.In_Interfaces := False;\n@@ -2634,8 +2644,10 @@ package body Prj.Nmsc is\n       --  Check that a list of unit names contains only valid names\n \n       procedure Get_Exceptions (Kind : Source_Kind);\n+      --  Comment required ???\n \n       procedure Get_Unit_Exceptions (Kind : Source_Kind);\n+      --  Comment required ???\n \n       ----------------------\n       -- Check_Unit_Names --\n@@ -3553,12 +3565,10 @@ package body Prj.Nmsc is\n                Src_Id := Proj_Data.First_Source;\n                while Src_Id /= No_Source loop\n                   declare\n-                     Src       : Source_Data renames\n-                       In_Tree.Sources.Table (Src_Id);\n+                     Src : Source_Data renames In_Tree.Sources.Table (Src_Id);\n                   begin\n                      exit when Src.Lang_Kind /= File_Based\n                        or else Src.Kind /= Spec;\n-\n                      Src_Id := Src.Next_In_Project;\n                   end;\n                end loop;\n@@ -7394,16 +7404,16 @@ package body Prj.Nmsc is\n          --  For other language, the source is simply removed.\n \n          declare\n-            Source   : Source_Id;\n+            Source : Source_Id;\n \n          begin\n             Source := Data.First_Source;\n             while Source /= No_Source loop\n                declare\n                   Src_Data : Source_Data renames\n-                    In_Tree.Sources.Table (Source);\n-               begin\n+                               In_Tree.Sources.Table (Source);\n \n+               begin\n                   if Src_Data.Naming_Exception\n                     and then Src_Data.Path = No_Path_Information\n                   then\n@@ -8145,15 +8155,15 @@ package body Prj.Nmsc is\n             while Source /= No_Source loop\n                declare\n                   Src_Data : Source_Data renames\n-                    In_Tree.Sources.Table (Source);\n+                               In_Tree.Sources.Table (Source);\n \n                begin\n                   if Unit /= No_Name\n                     and then Src_Data.Unit = Unit\n                     and then\n                       ((Src_Data.Kind = Spec and then Kind = Impl)\n-                       or else\n-                         (Src_Data.Kind = Impl and then Kind = Spec))\n+                         or else\n+                       (Src_Data.Kind = Impl and then Kind = Spec))\n                   then\n                      Other_Part := Source;\n \n@@ -8481,12 +8491,10 @@ package body Prj.Nmsc is\n          Source := Data.First_Source;\n          while Source /= No_Source loop\n             declare\n-               Src_Data : Source_Data renames\n-                 In_Tree.Sources.Table (Source);\n+               Src_Data : Source_Data renames In_Tree.Sources.Table (Source);\n \n             begin\n-               --  A file that is excluded cannot also be an exception file\n-               --  name\n+               --  An excluded file cannot also be an exception file name\n \n                if Excluded_Sources_Htable.Get (Src_Data.File) /=\n                  No_File_Found\n@@ -8514,13 +8522,12 @@ package body Prj.Nmsc is\n \n                Source_Names.Set (K => Src_Data.File, E => Name_Loc);\n \n-               --  If this is an Ada exception, record it in table\n-               --  Unit_Exceptions\n+               --  If this is an Ada exception, record in table Unit_Exceptions\n \n                if Src_Data.Unit /= No_Name then\n                   declare\n                      Unit_Except : Unit_Exception :=\n-                       Unit_Exceptions.Get (Src_Data.Unit);\n+                                     Unit_Exceptions.Get (Src_Data.Unit);\n \n                   begin\n                      Unit_Except.Name := Src_Data.Unit;\n@@ -8548,11 +8555,10 @@ package body Prj.Nmsc is\n          while FF /= No_File_Found loop\n             OK     := False;\n             Source := In_Tree.First_Source;\n-\n             while Source /= No_Source loop\n                declare\n                   Src_Data : Source_Data renames\n-                    In_Tree.Sources.Table (Source);\n+                               In_Tree.Sources.Table (Source);\n \n                begin\n                   if Src_Data.File = FF.File then\n@@ -8625,12 +8631,12 @@ package body Prj.Nmsc is\n             while Src_Id /= No_Source loop\n                declare\n                   Src_Data : Source_Data renames\n-                    In_Tree.Sources.Table (Src_Id);\n+                               In_Tree.Sources.Table (Src_Id);\n \n                begin\n                   if Src_Data.Compiled and then Src_Data.Object_Exists\n                     and then Project_Extends\n-                      (Project, Src_Data.Project, In_Tree)\n+                               (Project, Src_Data.Project, In_Tree)\n                   then\n                      if Src_Data.Unit = No_Name then\n                         if Src_Data.Kind = Impl then\n@@ -8656,10 +8662,9 @@ package body Prj.Nmsc is\n \n                                  declare\n                                     Src_Ind : constant Source_File_Index :=\n-                                      Sinput.P.Load_Project_File\n-                                        (Get_Name_String\n-                                             (Src_Data.Path.Name));\n-\n+                                                Sinput.P.Load_Project_File\n+                                                 (Get_Name_String\n+                                                   (Src_Data.Path.Name));\n                                  begin\n                                     if Sinput.P.Source_File_Is_Subunit\n                                       (Src_Ind)"}, {"sha": "ca804d9b0a86a066c6326ffe1c2b2e4fdb719a25", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=812f574fdafe3d4a09ac60964b8eeb36cb430837", "patch": "@@ -857,6 +857,7 @@ package body Prj is\n       Units_Htable.Reset            (Tree.Units_HT);\n       Files_Htable.Reset            (Tree.Files_HT);\n       Source_Paths_Htable.Reset     (Tree.Source_Paths_HT);\n+      Unit_Sources_Htable.Reset     (Tree.Unit_Sources_HT);\n \n       --  Private part table\n "}, {"sha": "c8ce1773d9965dd59a58191372c12544f6c81377", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=812f574fdafe3d4a09ac60964b8eeb36cb430837", "patch": "@@ -696,7 +696,7 @@ package Prj is\n       Object_Exists       : Boolean               := True;\n       --  True if an object file exists\n \n-      Object_Linked          : Boolean               := True;\n+      Object_Linked          : Boolean            := True;\n       --  False if the object file is not use to link executables or included\n       --  in libraries.\n \n@@ -804,6 +804,14 @@ package Prj is\n       Equal      => \"=\");\n    --  Mapping of source paths to source ids\n \n+   package Unit_Sources_Htable is new Simple_HTable\n+     (Header_Num => Header_Num,\n+      Element    => Source_Id,\n+      No_Element => No_Source,\n+      Key        => Name_Id,\n+      Hash       => Hash,\n+      Equal      => \"=\");\n+\n    type Verbosity is (Default, Medium, High);\n    --  Verbosity when parsing GNAT Project Files\n    --    Default is default (very quiet, if no errors).\n@@ -1464,6 +1472,7 @@ package Prj is\n          Units_HT          : Units_Htable.Instance;\n          Files_HT          : Files_Htable.Instance;\n          Source_Paths_HT   : Source_Paths_Htable.Instance;\n+         Unit_Sources_HT   : Unit_Sources_Htable.Instance;\n \n          --  Private part\n "}, {"sha": "fef7407fa2802caab453ba7e062749a5ef8d334e", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/812f574fdafe3d4a09ac60964b8eeb36cb430837/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=812f574fdafe3d4a09ac60964b8eeb36cb430837", "patch": "@@ -11253,7 +11253,7 @@ package body Sem_Prag is\n             GNAT_Pragma;\n             Check_Arg_Count (1);\n             Check_Optional_Identifier (Arg1, Name_Entity);\n-            Check_Arg_Is_Local_Name (Arg1);\n+            Check_Arg_Is_Library_Level_Local_Name (Arg1);\n \n             Id := Expression (Arg1);\n             Analyze (Id);\n@@ -11273,6 +11273,7 @@ package body Sem_Prag is\n             end if;\n \n             Set_Has_Pragma_Thread_Local_Storage (E);\n+            Set_Has_Gigi_Rep_Item (E);\n          end Thread_Local_Storage;\n \n          ----------------"}]}