{"sha": "005f6fc59e5fceb658e11f153402711ee7f12c1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA1ZjZmYzU5ZTVmY2ViNjU4ZTExZjE1MzQwMjcxMWVlN2YxMmMxYQ==", "commit": {"author": {"name": "Andre Simoes Dias Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2020-03-20T09:10:17Z"}, "committer": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2020-03-20T09:12:44Z"}, "message": "gcc, Arm: Fix testisms for MVE testsuite\n\nThis patch fixes some testism where -mfpu=auto was missing or where we could\nend up with -mfloat-abi=hard and soft on the same command-line.\n\ngcc/testsuite/ChangeLog:\n2020-03-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* gcc.target/arm/mve/intrinsics/mve_fp_fpu1.c: Fix testisms.\n\t* gcc.target/arm/mve/intrinsics/mve_fp_fpu2.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_fpu1.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_fpu2.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_fpu3.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_libcall1.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_libcall2.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_float.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_float1.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_float2.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_int.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_int1.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_int2.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_uint.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_uint1.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/mve_vector_uint2.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vshrntq_m_n_u32.c: Likewise.", "tree": {"sha": "0ac4713bd01b734e4e0f91e806def4d57119ccc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ac4713bd01b734e4e0f91e806def4d57119ccc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/005f6fc59e5fceb658e11f153402711ee7f12c1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005f6fc59e5fceb658e11f153402711ee7f12c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/005f6fc59e5fceb658e11f153402711ee7f12c1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005f6fc59e5fceb658e11f153402711ee7f12c1a/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0efe7d8796e00a5737017fe472680b653bd83d90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0efe7d8796e00a5737017fe472680b653bd83d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0efe7d8796e00a5737017fe472680b653bd83d90"}], "stats": {"total": 76, "additions": 56, "deletions": 20}, "files": [{"sha": "8f8b08868be55da8279cfda79891f3a4123cbd22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,3 +1,23 @@\n+2020-03-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* gcc.target/arm/mve/intrinsics/mve_fp_fpu1.c: Fix testisms.\n+\t* gcc.target/arm/mve/intrinsics/mve_fp_fpu2.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_fpu1.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_fpu2.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_fpu3.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_libcall1.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_libcall2.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_float.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_float1.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_float2.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_int.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_int1.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_int2.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_uint.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_uint1.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_vector_uint2.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/vshrntq_m_n_u32.c: Likewise.\n+\n 2020-03-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* gcc.target/arm/mve/intrinsics/mve_move_gpr_to_gpr.c: New test."}, {"sha": "d552fbdffee2ac57092e20ce6a02ab3a4b4bd367", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_fp_fpu1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu1.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve.fp -mfloat-abi=hard -mthumb\" } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve.fp -mfloat-abi=hard -mthumb -mfpu=auto\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "e40b82ec161ac4155c3e38fad1438c296db76486", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_fp_fpu2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu2.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve.fp -mfloat-abi=softfp -mthumb\" } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve.fp -mfloat-abi=softfp -mthumb -mfpu=auto\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "e04cb61043859b2c5484f97d1450ef97076d6a2d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_fpu1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu1.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb\" } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb -mfpu=auto\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "f52c3627551750cbaaf54f0ac94020db7a92c6ca", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_fpu2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu2.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=softfp -mthumb\" } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=softfp -mthumb -mfpu=auto\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "1f249ca885faeea58951a702d090d49af525eeed", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_fpu3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu3.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=soft -mthumb\" } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=hard\" } { \"\" } } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=soft -mthumb -mfpu=auto\" } */\n \n int\n foo1 (int value)"}, {"sha": "03347d494b9a78c514316e560ee103fcd5ded8b8", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_libcall1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_libcall1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_libcall1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_libcall1.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n /* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb -mfpu=auto\" } */\n \n float"}, {"sha": "f6291b7ccf7fd7320ceae5c86bc91c42a12fba78", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_libcall2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_libcall2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_libcall2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_libcall2.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n /* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb -mfpu=auto\" } */\n \n double"}, {"sha": "eac2c845972a828a9b8046c4c644afda8f4b5013", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_float.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve.fp -mfloat-abi=hard -mthumb\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "d5319014d318f72b3b31961edd00a91ee96abb5c", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_float1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float1.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve.fp -mfloat-abi=hard -mthumb\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "bf39fc6837628c1ac0baef594cc824522ae052e2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_float2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_float2.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n-/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve.fp -mfloat-abi=hard -mthumb\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "3a63b590fcba3984f84f8c9cbb8f62f8eb3d0459", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_int.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "e15b10bcbdc185a7fffafd3bba11ae720f9139fe", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_int1.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int1.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb\" } */\n \n #include \"arm_mve.h\"\n \n@@ -10,7 +11,7 @@ int32x4_t value3;\n int64x2_t value4;\n \n int8x16_t\n-foo8 ()\n+foo8 (void)\n {\n   int8x16_t b = value1;\n   return b;\n@@ -21,7 +22,7 @@ foo8 ()\n /* { dg-final { scan-assembler \"vldrb.8*\" }  } */\n \n int16x8_t\n-foo16 ()\n+foo16 (void)\n {\n   int16x8_t b = value2;\n   return b;\n@@ -32,7 +33,7 @@ foo16 ()\n /* { dg-final { scan-assembler \"vldrb.8*\" }  } */\n \n int32x4_t\n-foo32 ()\n+foo32 (void)\n {\n   int32x4_t b = value3;\n   return b;\n@@ -43,7 +44,7 @@ foo32 ()\n /* { dg-final { scan-assembler \"vldrb.8\" }  } */\n \n int64x2_t\n-foo64 ()\n+foo64 (void)\n {\n   int64x2_t b = value4;\n   return b;"}, {"sha": "a7f66ce9bea88de7b967b693f51970784231f477", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_int2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_int2.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "6e2e768146767b623de080f4025ed264678abf17", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_uint.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "d6dba65167a6a69565b87a2172e9a14097ec4f40", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_uint1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint1.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "70091970de8cc9f048a8f9526825789b9de38500", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_vector_uint2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_vector_uint2.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n+/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "2fe8c5f06977caa0b3ac6fad144a5cdc55ff5b62", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vshrntq_m_n_u32.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvshrntq_m_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/005f6fc59e5fceb658e11f153402711ee7f12c1a/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvshrntq_m_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvshrntq_m_n_u32.c?ref=005f6fc59e5fceb658e11f153402711ee7f12c1a", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile  } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -O2\"  }  */\n-/* { dg-skip-if \"Skip if not auto\" {*-*-*} {\"-mfpu=*\"} {\"-mfpu=auto\"} } */\n+/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-O2\" } */\n \n #include \"arm_mve.h\"\n "}]}