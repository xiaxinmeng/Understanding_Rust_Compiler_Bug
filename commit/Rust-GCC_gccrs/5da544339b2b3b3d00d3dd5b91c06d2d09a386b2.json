{"sha": "5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRhNTQ0MzM5YjJiM2IzZDAwZDNkZDViOTFjMDZkMmQwOWEzODZiMg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2019-07-09T07:54:19Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-09T07:54:19Z"}, "message": "[Ada] Missing runtime range checks with -gnatVa\n\nUnder validity checking mode the compiler may silently skip generating\ncode to perform runtime range checks.\n\n2019-07-09  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* exp_util.adb (Remove_Side_Effects): Preserve the\n\tDo_Range_Check flag.\n\ngcc/testsuite/\n\n\t* gnat.dg/range_check3.adb, gnat.dg/range_check3_pkg.adb,\n\tgnat.dg/range_check3_pkg.ads: New testcase.\n\nFrom-SVN: r273278", "tree": {"sha": "36f448a457bcf9b1d7ea86364fc4e3743f7c5b83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36f448a457bcf9b1d7ea86364fc4e3743f7c5b83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff606db0166573fee17f6d81895f7d882fd15169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff606db0166573fee17f6d81895f7d882fd15169", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff606db0166573fee17f6d81895f7d882fd15169"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "e5aba8b08fe47e2653f66319495c65dbe441e8b0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "patch": "@@ -1,3 +1,8 @@\n+2019-07-09  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_util.adb (Remove_Side_Effects): Preserve the\n+\tDo_Range_Check flag.\n+\n 2019-07-09  Yannick Moy  <moy@adacore.com>\n \n \t* sinfo.ads: Refine comment for Do_Range_Check."}, {"sha": "77809bc16dd10a666b36e5fb164c5f7733475860", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "patch": "@@ -11693,6 +11693,10 @@ package body Exp_Util is\n \n       Set_Assignment_OK (Res, Assignment_OK (Exp));\n \n+      --  Preserve the Do_Range_Check flag in all copies.\n+\n+      Set_Do_Range_Check (Res, Do_Range_Check (Exp));\n+\n       --  Finally rewrite the original expression and we are done\n \n       Rewrite (Exp, Res);"}, {"sha": "e1f16789a78746efc17a9df940e870b6e0e0dfcd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "patch": "@@ -1,3 +1,8 @@\n+2019-07-09  Javier Miranda  <miranda@adacore.com>\n+\n+\t* gnat.dg/range_check3.adb, gnat.dg/range_check3_pkg.adb,\n+\tgnat.dg/range_check3_pkg.ads: New testcase.\n+\n 2019-07-09  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/generic_inst5.adb, gnat.dg/generic_inst6.adb,"}, {"sha": "d134a79cc56b3247d618fcffa685da7719fe140f", "filename": "gcc/testsuite/gnat.dg/range_check3.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check3.adb?ref=5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "patch": "@@ -0,0 +1,13 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnatVa\" }\n+\n+with Range_Check3_Pkg; use Range_Check3_Pkg;\n+procedure Range_Check3 is\n+   Ptr : Array_Access;\n+begin\n+   Ptr := Allocate;\n+   raise Program_Error;\n+exception\n+   when Constraint_Error => null;\n+end Range_Check3;\n+"}, {"sha": "50c1b1d7bcdda9097c6f38c903e5f9aec6be6bcf", "filename": "gcc/testsuite/gnat.dg/range_check3_pkg.adb", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check3_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check3_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check3_pkg.adb?ref=5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "patch": "@@ -0,0 +1,18 @@\n+package body Range_Check3_Pkg is\n+   function One return Positive is\n+   begin\n+      return 1;\n+   end One;\n+\n+   function Zero return Natural is\n+   begin\n+      return 0;\n+   end Zero;\n+\n+   function Allocate return Array_Access is\n+   begin\n+      return\n+        new Array_Type\n+             (Positive (One) .. Positive (Zero)); -- Failed range check\n+   end Allocate;\n+end Range_Check3_Pkg;"}, {"sha": "d5864c6e18840ed3f952badf97b866fc55f960e7", "filename": "gcc/testsuite/gnat.dg/range_check3_pkg.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check3_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da544339b2b3b3d00d3dd5b91c06d2d09a386b2/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check3_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frange_check3_pkg.ads?ref=5da544339b2b3b3d00d3dd5b91c06d2d09a386b2", "patch": "@@ -0,0 +1,9 @@\n+package Range_Check3_Pkg is\n+   type Array_Type is array (Positive range <>) of Integer;\n+   type Array_Access is access Array_Type;\n+\n+   function One  return Positive;\n+   function Zero return Natural;\n+\n+   function Allocate return Array_Access;\n+end Range_Check3_Pkg;"}]}