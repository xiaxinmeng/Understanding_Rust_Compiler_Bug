{"sha": "019026537472eae913ccac60774d6e6801c121f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE5MDI2NTM3NDcyZWFlOTEzY2NhYzYwNzc0ZDZlNjgwMWMxMjFmOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-05-20T12:34:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-05-20T12:34:06Z"}, "message": "tree-ssa-reassoc.c (fini_reassoc): Use the statistics infrastructure.\n\n2008-05-20  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-reassoc.c (fini_reassoc): Use the statistics\n\tinfrastructure.\n\t* tree-ssa-sccvn.c (process_scc): Likewise.\n\t* tree-ssa-sink.c (execute_sink_code): Likewise.\n\t* tree-ssa-threadupdate.c (thread_through_all_blocks): Likewise.\n\t* tree-vrp.c (process_assert_insertions): Likewise.\n\t* tree-ssa-dce.c (eliminate_unnecessary_stmts): Likewise.\n\t(perform_tree_ssa_dce): Likewise.\n\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Likewise.\n\t(dump_dominator_optimization_stats): Likewise.\n\t* tree-vectorizer.c (vectorize_loops): Likewise.\n\n\t* gcc.dg/tree-ssa/ssa-sink-1.c: Adjust.\n\t* gcc.dg/tree-ssa/ssa-sink-2.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-sink-3.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-sink-4.c: Likewise.\n\nFrom-SVN: r135611", "tree": {"sha": "c9415d7b8136e0a8e6c5dcba11dcce11ac90a654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9415d7b8136e0a8e6c5dcba11dcce11ac90a654"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/019026537472eae913ccac60774d6e6801c121f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019026537472eae913ccac60774d6e6801c121f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/019026537472eae913ccac60774d6e6801c121f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019026537472eae913ccac60774d6e6801c121f8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e13a4010afe69b0bb99bfcb87215e6af24f53c2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13a4010afe69b0bb99bfcb87215e6af24f53c2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e13a4010afe69b0bb99bfcb87215e6af24f53c2f"}], "stats": {"total": 116, "additions": 61, "deletions": 55}, "files": [{"sha": "9d9bc21a7ad1a5f441b0e948466b7b7b2145a75d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -1,3 +1,17 @@\n+2008-05-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-reassoc.c (fini_reassoc): Use the statistics\n+\tinfrastructure.\n+\t* tree-ssa-sccvn.c (process_scc): Likewise.\n+\t* tree-ssa-sink.c (execute_sink_code): Likewise.\n+\t* tree-ssa-threadupdate.c (thread_through_all_blocks): Likewise.\n+\t* tree-vrp.c (process_assert_insertions): Likewise.\n+\t* tree-ssa-dce.c (eliminate_unnecessary_stmts): Likewise.\n+\t(perform_tree_ssa_dce): Likewise.\n+\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Likewise.\n+\t(dump_dominator_optimization_stats): Likewise.\n+\t* tree-vectorizer.c (vectorize_loops): Likewise.\n+\n 2008-05-20  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vn.c (vn_lookup_with_vuses): Do not use the alias oracle."}, {"sha": "ffbddf63f427a1e42b4d40e2fb1cace3d7ef0b0f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -1,3 +1,10 @@\n+2008-05-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-sink-1.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-sink-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-sink-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-sink-4.c: Likewise.\n+\n 2008-05-20  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.c-torture/compile/20061214-1.c: New test."}, {"sha": "c3326d27e25d4bb73b6394afbfba61118a143307", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-1.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -7,5 +7,5 @@ foo (int a, int b, int c)\n   return c ? x : a;\n }\n /* We should sink the x = a * b calculation into the branch that returns x. */\n-/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\" } } */\n+/* { dg-final { scan-tree-dump-times \"Sunk statements: 1\" 1 \"sink\" } } */\n /* { dg-final { cleanup-tree-dump \"sink\" } } */"}, {"sha": "1d54d019e7fbb2c512e61e701c63082a1a0cc010", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-2.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -9,5 +9,5 @@ bar (int a, int b, int c)\n   return y;\n }\n /* We should sink the x = a * b calculation into the else branch  */\n-/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\" } } */\n+/* { dg-final { scan-tree-dump-times \"Sunk statements: 1\" 1 \"sink\" } } */\n /* { dg-final { cleanup-tree-dump \"sink\" } } */"}, {"sha": "fceb509e8bc2999e4f746b76754e2ec715bcbdb4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-3.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -12,5 +12,5 @@ main (int argc)\n     }\n }\n /* We should sink the a = argc + 1 calculation into the if branch  */\n-/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\" } } */\n+/* { dg-final { scan-tree-dump-times \"Sunk statements: 1\" 1 \"sink\" } } */\n /* { dg-final { cleanup-tree-dump \"sink\" } } */"}, {"sha": "6e1cc50dc1107b63d0696295ac55afa25e53e5e6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sink-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sink-4.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -17,5 +17,5 @@ main (int argc)\n   foo2 (a);\n }\n /* We should sink the first a = b + c calculation into the else branch  */\n-/* { dg-final { scan-tree-dump-times \"Sunk statements:1\" 1 \"sink\" } } */\n+/* { dg-final { scan-tree-dump-times \"Sunk statements: 1\" 1 \"sink\" } } */\n /* { dg-final { cleanup-tree-dump \"sink\" } } */"}, {"sha": "760e20d14bc36a9181bc150134c7cce9a5ab192d", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -735,22 +735,19 @@ eliminate_unnecessary_stmts (void)\n static void\n print_stats (void)\n {\n-  if (dump_file && (dump_flags & (TDF_STATS|TDF_DETAILS)))\n-    {\n-      float percg;\n+  float percg;\n \n-      percg = ((float) stats.removed / (float) stats.total) * 100;\n-      fprintf (dump_file, \"Removed %d of %d statements (%d%%)\\n\",\n-\t       stats.removed, stats.total, (int) percg);\n+  percg = ((float) stats.removed / (float) stats.total) * 100;\n+  fprintf (dump_file, \"Removed %d of %d statements (%d%%)\\n\",\n+\t   stats.removed, stats.total, (int) percg);\n \n-      if (stats.total_phis == 0)\n-\tpercg = 0;\n-      else\n-\tpercg = ((float) stats.removed_phis / (float) stats.total_phis) * 100;\n+  if (stats.total_phis == 0)\n+    percg = 0;\n+  else\n+    percg = ((float) stats.removed_phis / (float) stats.total_phis) * 100;\n \n-      fprintf (dump_file, \"Removed %d of %d PHI nodes (%d%%)\\n\",\n-\t       stats.removed_phis, stats.total_phis, (int) percg);\n-    }\n+  fprintf (dump_file, \"Removed %d of %d PHI nodes (%d%%)\\n\",\n+\t   stats.removed_phis, stats.total_phis, (int) percg);\n }\n \f\n /* Initialization for this pass.  Set up the used data structures.  */\n@@ -854,8 +851,11 @@ perform_tree_ssa_dce (bool aggressive)\n   if (cfg_altered)\n     free_dominance_info (CDI_DOMINATORS);\n \n+  statistics_counter_event (cfun, \"Statements deleted\", stats.removed);\n+  statistics_counter_event (cfun, \"PHI nodes deleted\", stats.removed_phis);\n+\n   /* Debugging dumps.  */\n-  if (dump_file)\n+  if (dump_file && (dump_flags & (TDF_STATS|TDF_DETAILS)))\n     print_stats ();\n \n   tree_dce_done (aggressive);"}, {"sha": "255f24b98e719560d77786677d22a6c5c8ff7b9f", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -357,6 +357,13 @@ tree_ssa_dominator_optimize (void)\n \tSSA_NAME_VALUE (name) = NULL;\n     }\n \n+  statistics_counter_event (cfun, \"Redundant expressions eliminated\",\n+\t\t\t    opt_stats.num_re);\n+  statistics_counter_event (cfun, \"Constants propagated\",\n+\t\t\t    opt_stats.num_const_prop);\n+  statistics_counter_event (cfun, \"Copies propagated\",\n+\t\t\t    opt_stats.num_copy_prop);\n+\n   /* Debugging dumps.  */\n   if (dump_file && (dump_flags & TDF_STATS))\n     dump_dominator_optimization_stats (dump_file);\n@@ -868,25 +875,11 @@ record_equivalences_from_incoming_edge (basic_block bb)\n void\n dump_dominator_optimization_stats (FILE *file)\n {\n-  long n_exprs;\n-\n   fprintf (file, \"Total number of statements:                   %6ld\\n\\n\",\n \t   opt_stats.num_stmts);\n   fprintf (file, \"Exprs considered for dominator optimizations: %6ld\\n\",\n            opt_stats.num_exprs_considered);\n \n-  n_exprs = opt_stats.num_exprs_considered;\n-  if (n_exprs == 0)\n-    n_exprs = 1;\n-\n-  fprintf (file, \"    Redundant expressions eliminated:         %6ld (%.0f%%)\\n\",\n-\t   opt_stats.num_re, PERCENT (opt_stats.num_re,\n-\t\t\t\t      n_exprs));\n-  fprintf (file, \"    Constants propagated:                     %6ld\\n\",\n-\t   opt_stats.num_const_prop);\n-  fprintf (file, \"    Copies propagated:                        %6ld\\n\",\n-\t   opt_stats.num_copy_prop);\n-\n   fprintf (file, \"\\nHash table statistics:\\n\");\n \n   fprintf (file, \"    avail_exprs: \");"}, {"sha": "5fcaa7bbb168ddd3f36b626ec3f4fd0bd1686227", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -1487,18 +1487,14 @@ init_reassoc (void)\n static void\n fini_reassoc (void)\n {\n-  if (dump_file && (dump_flags & TDF_STATS))\n-    {\n-      fprintf (dump_file, \"Reassociation stats:\\n\");\n-      fprintf (dump_file, \"Linearized: %d\\n\", \n-\t       reassociate_stats.linearized);\n-      fprintf (dump_file, \"Constants eliminated: %d\\n\",\n-\t       reassociate_stats.constants_eliminated);\n-      fprintf (dump_file, \"Ops eliminated: %d\\n\",\n-\t       reassociate_stats.ops_eliminated);\n-      fprintf (dump_file, \"Statements rewritten: %d\\n\",\n-\t       reassociate_stats.rewritten);\n-    }\n+  statistics_counter_event (cfun, \"Linearized\",\n+\t\t\t    reassociate_stats.linearized);\n+  statistics_counter_event (cfun, \"Constants eliminated\",\n+\t\t\t    reassociate_stats.constants_eliminated);\n+  statistics_counter_event (cfun, \"Ops eliminated\",\n+\t\t\t    reassociate_stats.ops_eliminated);\n+  statistics_counter_event (cfun, \"Statements rewritten\",\n+\t\t\t    reassociate_stats.rewritten);\n \n   pointer_map_destroy (operand_rank);\n   free_alloc_pool (operand_entry_pool);"}, {"sha": "2bc9cb2e3ef27c48ec967bdcf9c6b6f20bf082be", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -1947,9 +1947,7 @@ process_scc (VEC (tree, heap) *scc)\n \t    changed |= visit_use (var);\n \t}\n \n-      if (dump_file && (dump_flags & TDF_STATS))\n-\tfprintf (dump_file, \"Processing SCC required %d iterations\\n\",\n-\t\t iterations);\n+      statistics_histogram_event (cfun, \"SCC iterations\", iterations);\n \n       /* Finally, visit the SCC once using the valid table.  */\n       current_info = valid_info;"}, {"sha": "8945a6126634d146b519ea0ef0df5c629e1f03cc", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -546,8 +546,7 @@ execute_sink_code (void)\n   calculate_dominance_info (CDI_DOMINATORS);\n   calculate_dominance_info (CDI_POST_DOMINATORS);\n   sink_code_in_bb (EXIT_BLOCK_PTR); \n-  if (dump_file && (dump_flags & TDF_STATS))\n-    fprintf (dump_file, \"Sunk statements:%d\\n\", sink_stats.sunk);\n+  statistics_counter_event (cfun, \"Sunk statements\", sink_stats.sunk);\n   free_dominance_info (CDI_POST_DOMINATORS);\n   remove_fake_exit_edges ();\n   loop_optimizer_finalize ();"}, {"sha": "359702161c1759e9a14408b65d2be4d12ae3ae61", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -1069,9 +1069,8 @@ thread_through_all_blocks (bool may_peel_loop_headers)\n       retval |= thread_through_loop_header (loop, may_peel_loop_headers);\n     }\n \n-  if (dump_file && (dump_flags & TDF_STATS))\n-    fprintf (dump_file, \"\\nJumps threaded: %lu\\n\",\n-\t     thread_stats.num_threaded_edges);\n+  statistics_counter_event (cfun, \"Jumps threaded\",\n+\t\t\t    thread_stats.num_threaded_edges);\n \n   free_original_copy_tables ();\n "}, {"sha": "d374a0640d2398a0db0ff2b72ebc8623a5a2f4a3", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -2691,6 +2691,7 @@ vectorize_loops (void)\n     }\n   vect_loop_location = UNKNOWN_LOC;\n \n+  statistics_counter_event (cfun, \"Vectorized loops\", num_vectorized_loops);\n   if (vect_print_dump_info (REPORT_UNVECTORIZED_LOOPS)\n       || (vect_print_dump_info (REPORT_VECTORIZED_LOOPS)\n \t  && num_vectorized_loops > 0))"}, {"sha": "15e7ee57dd69ac85dbb099bdefde4de45752a3b2", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/019026537472eae913ccac60774d6e6801c121f8/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=019026537472eae913ccac60774d6e6801c121f8", "patch": "@@ -4540,9 +4540,8 @@ process_assert_insertions (void)\n   if (update_edges_p)\n     bsi_commit_edge_inserts ();\n \n-  if (dump_file && (dump_flags & TDF_STATS))\n-    fprintf (dump_file, \"\\nNumber of ASSERT_EXPR expressions inserted: %d\\n\\n\",\n-\t     num_asserts);\n+  statistics_counter_event (cfun, \"Number of ASSERT_EXPR expressions inserted\",\n+\t\t\t    num_asserts);\n }\n \n "}]}