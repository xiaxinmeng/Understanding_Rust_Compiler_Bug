{"sha": "43c0068e60ad1518cc6196eeac51eb811fe62f8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjMDA2OGU2MGFkMTUxOGNjNjE5NmVlYWM1MWViODExZmU2MmY4Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-05-19T07:39:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-05-19T07:39:52Z"}, "message": "re PR tree-optimization/70729 (Loop marked with omp simd pragma is not vectorized)\n\n2016-05-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/70729\n\t* passes.def: Move LIM pass before PRE.  Remove no longer\n\trequired copyprop and move first DCE out of the loop pipeline.\n\n\t* gcc.dg/autopar/outer-6.c: Adjust to avoid redundant store.\n\t* gcc.dg/graphite/scop-18.c: Likewise.\n\t* gcc.dg/pr41783.c: Disable LIM.\n\t* gcc.dg/tree-ssa/loadpre10.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre23.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre24.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre25.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre4.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre8.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-16.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-18.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-20.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-3.c: Likewise.\n\t* gfortran.dg/pr42108.f90: Likewise.\n\nFrom-SVN: r236440", "tree": {"sha": "8602873ad2f288519c3410ea197e9b287bd5e925", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8602873ad2f288519c3410ea197e9b287bd5e925"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43c0068e60ad1518cc6196eeac51eb811fe62f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c0068e60ad1518cc6196eeac51eb811fe62f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c0068e60ad1518cc6196eeac51eb811fe62f8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c0068e60ad1518cc6196eeac51eb811fe62f8f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70f25790a1effc8f1cba3cb8a368b129c66a87b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f25790a1effc8f1cba3cb8a368b129c66a87b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f25790a1effc8f1cba3cb8a368b129c66a87b0"}], "stats": {"total": 59, "additions": 41, "deletions": 18}, "files": [{"sha": "63fe8002db0e4c3b36753ec0f421938e6b424b91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,3 +1,9 @@\n+2016-05-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70729\n+\t* passes.def: Move LIM pass before PRE.  Remove no longer\n+\trequired copyprop and move first DCE out of the loop pipeline.\n+\n 2016-05-18  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR driver/69265"}, {"sha": "993ed28628b3be8b708433403f516ad360727e39", "filename": "gcc/passes.def", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -243,12 +243,14 @@ along with GCC; see the file COPYING3.  If not see\n       NEXT_PASS (pass_cse_sincos);\n       NEXT_PASS (pass_optimize_bswap);\n       NEXT_PASS (pass_laddress);\n+      NEXT_PASS (pass_lim);\n       NEXT_PASS (pass_split_crit_edges);\n       NEXT_PASS (pass_pre);\n       NEXT_PASS (pass_sink_code);\n       NEXT_PASS (pass_sancov);\n       NEXT_PASS (pass_asan);\n       NEXT_PASS (pass_tsan);\n+      NEXT_PASS (pass_dce);\n       /* Pass group that runs when 1) enabled, 2) there are loops\n \t in the function.  Make sure to run pass_fix_loops before\n \t to discover/remove loops before running the gate function\n@@ -257,9 +259,6 @@ along with GCC; see the file COPYING3.  If not see\n       NEXT_PASS (pass_tree_loop);\n       PUSH_INSERT_PASSES_WITHIN (pass_tree_loop)\n \t  NEXT_PASS (pass_tree_loop_init);\n-\t  NEXT_PASS (pass_lim);\n-\t  NEXT_PASS (pass_copy_prop);\n-\t  NEXT_PASS (pass_dce);\n \t  NEXT_PASS (pass_tree_unswitch);\n \t  NEXT_PASS (pass_scev_cprop);\n \t  NEXT_PASS (pass_record_bounds);"}, {"sha": "d14ebefc563e477f5b8ef0171afa19e2099a8829", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,3 +1,21 @@\n+2016-05-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70729\n+\t* gcc.dg/autopar/outer-6.c: Adjust to avoid redundant store.\n+\t* gcc.dg/graphite/scop-18.c: Likewise.\n+\t* gcc.dg/pr41783.c: Disable LIM.\n+\t* gcc.dg/tree-ssa/loadpre10.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre23.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre24.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre25.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre4.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre8.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-16.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-18.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-20.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-3.c: Likewise.\n+\t* gfortran.dg/pr42108.f90: Likewise.\n+\n 2016-05-18  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR driver/69265"}, {"sha": "7aae803acd92a67b9404039a6db3aae82c361278", "filename": "gcc/testsuite/gcc.dg/autopar/outer-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fouter-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fouter-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fouter-6.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -24,7 +24,7 @@ void parloop (int N)\n   for (i = 0; i < N; i++)\n   {\n     for (j = 0; j < N; j++)\n-      y[i]=x[i][j];\n+      y[i]+=x[i][j];\n     sum += y[i];\n   }\n   g_sum = sum;"}, {"sha": "fe2a5bf9709d20fca738a6ff2d31df4cb419edc7", "filename": "gcc/testsuite/gcc.dg/graphite/scop-18.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-18.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -13,13 +13,13 @@ void test (void)\n   for (i = 0; i < 24; i++)\n     for (j = 0; j < 24; j++)\n       for (k = 0; k < 24; k++)\n-        A[i][j] = B[i][k] * C[k][j];\n+        A[i][j] += B[i][k] * C[k][j];\n \n   /* These loops should still be strip mined.  */\n   for (i = 0; i < 1000; i++)\n     for (j = 0; j < 1000; j++)\n       for (k = 0; k < 1000; k++)\n-        A[i][j] = B[i][k] * C[k][j];\n+        A[i][j] += B[i][k] * C[k][j];\n }\n \n /* { dg-final { scan-tree-dump-times \"number of SCoPs: 1\" 1 \"graphite\"} } */"}, {"sha": "465b0af872c49a430f1a5f92b3a9b9fa3efefd10", "filename": "gcc/testsuite/gcc.dg/pr41783.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41783.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41783.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41783.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -fdump-tree-pre\" } */\n+/* { dg-options \"-O3 -fdump-tree-pre -fno-tree-loop-im\" } */\n int db[100];\n int a_global_var, fact;\n int main()"}, {"sha": "c6ee35c8d94e779fa9ec5dcf3abb086c8910f3d2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre10.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -fno-tree-loop-im\" } */\n struct tree_common \n { \n   int code; "}, {"sha": "42b08f0dfa8c35ae8b94609dc82797c58c24540d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre23.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -fno-tree-loop-im\" } */\n \n struct {\n   int a;"}, {"sha": "56e4279049c31c94b8ecd565bb1ed6d887d95654", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre24.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre24.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -fno-tree-loop-im\" } */\n \n int a;\n "}, {"sha": "d1a9e4e105da3c53efea60df94c2b00533953973", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre25.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre25.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -fno-tree-loop-im\" } */\n struct X { int i; };\n int foo(struct X *a, int argc)\n {"}, {"sha": "6eaf690189204a4016d030844030b0205f53b2ad", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre4.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -fno-tree-loop-im\" } */\n int main(int *a, int argc)\n {\n   int i;"}, {"sha": "2abb0d216219083f25e87153e96a9d7ca86b7724", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre8.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-pre-stats -std=gnu89\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -std=gnu89 -fno-tree-loop-im\" } */\n typedef union tree_node *tree;\n struct tree_common\n {"}, {"sha": "69cc517f9de9f4eb79ca507bb88af6757688cf89", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-16.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-pre-stats -std=c99\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -std=c99 -fno-tree-loop-im\" } */\n int foo(int k, int *x)\n {\n   int j=0;"}, {"sha": "ea2a7aee56bf4601f8693cf64946dd9ddfb3a621", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-18.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-18.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-pre-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-details -fno-tree-loop-im\" } */\n \n struct Bar { int a; int b; };\n struct Foo { int x; struct Bar y; };"}, {"sha": "39ed2efb7c5d212fdafa7755ba1f3b85d3dc6048", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-20.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-20.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -fno-tree-loop-im\" } */\n \n double pcheck;\n "}, {"sha": "7e319ed2fbdb3a7d000597e7fbebdff6f77a0cc5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-pre-stats -fno-tree-loop-im\" } */\n unsigned foo1 (unsigned a, unsigned b, unsigned j, unsigned k)\n {\n   unsigned i;"}, {"sha": "eb93604e6b035973b0a1c74059f3ad0a7b470be3", "filename": "gcc/testsuite/gfortran.dg/pr42108.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42108.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c0068e60ad1518cc6196eeac51eb811fe62f8f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42108.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42108.f90?ref=43c0068e60ad1518cc6196eeac51eb811fe62f8f", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! { dg-options \"-O2 -fdump-tree-fre1 -fdump-tree-pre-details\" }\n+! { dg-options \"-O2 -fdump-tree-fre1 -fdump-tree-pre-details -fno-tree-loop-im\" }\n \n subroutine  eval(foo1,foo2,foo3,foo4,x,n,nnd)\n   implicit real*8 (a-h,o-z)"}]}