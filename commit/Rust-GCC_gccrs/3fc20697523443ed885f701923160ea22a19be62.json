{"sha": "3fc20697523443ed885f701923160ea22a19be62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZjMjA2OTc1MjM0NDNlZDg4NWY3MDE5MjMxNjBlYTIyYTE5YmU2Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-12T09:52:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-12T09:52:50Z"}, "message": "re PR c++/43611 (ICE: SIGSEGV with -fipa-cp-clone -fkeep-inline-functions)\n\n2010-04-12  Richard Guenther  <rguenther@suse.de>\n\n\tPR c++/43611\n\t* semantics.c (expand_or_defer_fn_1): Do not keep extern\n\ttemplate inline functions.\n\n\t* g++.dg/torture/pr43611.C: New testcase.\n\nFrom-SVN: r158218", "tree": {"sha": "646b7ae4537e4b4af2ec922c630935f6a28d3659", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/646b7ae4537e4b4af2ec922c630935f6a28d3659"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fc20697523443ed885f701923160ea22a19be62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc20697523443ed885f701923160ea22a19be62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fc20697523443ed885f701923160ea22a19be62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc20697523443ed885f701923160ea22a19be62/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c34f3839b8ff8d24530f33e9f015ec31ffadfbd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34f3839b8ff8d24530f33e9f015ec31ffadfbd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c34f3839b8ff8d24530f33e9f015ec31ffadfbd9"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "e56c77c35a5374d58b3464b8cf60a3ffb91a3f83", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc20697523443ed885f701923160ea22a19be62/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc20697523443ed885f701923160ea22a19be62/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3fc20697523443ed885f701923160ea22a19be62", "patch": "@@ -1,3 +1,9 @@\n+2010-04-12  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/43611\n+\t* semantics.c (expand_or_defer_fn_1): Do not keep extern\n+\ttemplate inline functions.\n+\n 2010-04-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c++/28584"}, {"sha": "66d152de8b8bdbde255227d8ab406a362ba2c310", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc20697523443ed885f701923160ea22a19be62/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc20697523443ed885f701923160ea22a19be62/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=3fc20697523443ed885f701923160ea22a19be62", "patch": "@@ -3446,7 +3446,9 @@ expand_or_defer_fn_1 (tree fn)\n \t this function as needed so that finish_file will make sure to\n \t output it later.  Similarly, all dllexport'd functions must\n \t be emitted; there may be callers in other DLLs.  */\n-      if ((flag_keep_inline_functions && DECL_DECLARED_INLINE_P (fn))\n+      if ((flag_keep_inline_functions\n+\t   && DECL_DECLARED_INLINE_P (fn)\n+\t   && !DECL_REALLY_EXTERN (fn))\n \t  || lookup_attribute (\"dllexport\", DECL_ATTRIBUTES (fn)))\n \tmark_needed (fn);\n     }"}, {"sha": "547ea328e2e5cc9cbbd24f943b124dd122d5af6b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc20697523443ed885f701923160ea22a19be62/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc20697523443ed885f701923160ea22a19be62/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3fc20697523443ed885f701923160ea22a19be62", "patch": "@@ -1,3 +1,8 @@\n+2010-04-12  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/43611\n+\t* g++.dg/torture/pr43611.C: New testcase.\n+\n 2010-04-12  Shujing Zhao  <pearly.zhao@oracle.com>\n \n \tPR c/36774"}, {"sha": "6899a6ea400b6014c70c07ed71ec3c37cac49a9f", "filename": "gcc/testsuite/g++.dg/torture/pr43611.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc20697523443ed885f701923160ea22a19be62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43611.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc20697523443ed885f701923160ea22a19be62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43611.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43611.C?ref=3fc20697523443ed885f701923160ea22a19be62", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do compile }\n+// { dg-options \"-fkeep-inline-functions\" }\n+\n+template < typename >\n+struct A {\n+  void init (int);\n+  A ()\n+  {\n+    this->init (0);\n+  }\n+};\n+\n+template < typename >\n+struct B : A < int > {\n+  A < int > a;\n+  B () {}\n+};\n+\n+extern template struct A < int >;\n+extern template struct B < int >;\n+\n+B < int > b;"}]}