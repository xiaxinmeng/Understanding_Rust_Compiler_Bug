{"sha": "2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIxMDdmNmI5MWQxYjQ0ZWM2MGJkNWNlOGI1MTIxOGE4NGFhYzk4YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-05-13T17:41:12Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-05-13T17:41:12Z"}, "message": "re PR c/61162 (possibly bad error location with -Wc++-compat)\n\n\tPR c/61162\n\t* c-typeck.c (convert_for_assignment): Pass location to\n\tWARN_FOR_ASSIGNMENT instead of input_location.\n\n\t* gcc.dg/pr61162.c: New test.\n\nFrom-SVN: r210393", "tree": {"sha": "71a054b65773de4a41bafae1593739847a1bbd73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71a054b65773de4a41bafae1593739847a1bbd73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6052140cec44f7605a43a968af90797c36e47992", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6052140cec44f7605a43a968af90797c36e47992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6052140cec44f7605a43a968af90797c36e47992"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "7b7d6650ae01ac18886448453bcf827291d19dff", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "patch": "@@ -1,3 +1,9 @@\n+2014-05-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/61162\n+\t* c-typeck.c (convert_for_assignment): Pass location to\n+\tWARN_FOR_ASSIGNMENT instead of input_location.\n+\n 2014-05-10  Marek Polacek  <polacek@redhat.com>\n \n \t* c-parser.c (c_parser_declaration_or_fndef): Pass init_loc to"}, {"sha": "6f4bd4afb6cf2bf4edb49d6b476351173f363937", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "patch": "@@ -5754,7 +5754,7 @@ convert_for_assignment (location_t location, location_t expr_loc, tree type,\n \t  && TREE_CODE (type) == ENUMERAL_TYPE\n \t  && TYPE_MAIN_VARIANT (checktype) != TYPE_MAIN_VARIANT (type))\n \t{\n-\t  WARN_FOR_ASSIGNMENT (input_location, OPT_Wc___compat,\n+\t  WARN_FOR_ASSIGNMENT (location, OPT_Wc___compat,\n \t\t\t       G_(\"enum conversion when passing argument \"\n \t\t\t\t  \"%d of %qE is invalid in C++\"),\n \t\t\t       G_(\"enum conversion in assignment is \""}, {"sha": "54d483feea0c8832baf0307d38a1362b5dc6be5d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "patch": "@@ -1,3 +1,8 @@\n+2014-05-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/61162\n+\t* gcc.dg/pr61162.c: New test.\n+\n 2014-05-13  Marek Polacek  <polacek@redhat.com>\n \n \t* c-c++-common/pr50459.c: Move cdtor tests to a separate testcase."}, {"sha": "00e64b9d758e0c14550fc9b33659a29f6f2bdd7c", "filename": "gcc/testsuite/gcc.dg/pr61162.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61162.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61162.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61162.c?ref=2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "patch": "@@ -0,0 +1,12 @@\n+/* PR c/61162 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wc++-compat\" } */\n+\n+enum e { A };\n+enum e\n+fn1 (void)\n+{\n+  enum e e, q = 0; /* { dg-warning \"17:enum conversion in initialization is invalid\" } */\n+  e = 0; /* { dg-warning \"5:enum conversion in assignment is invalid\" } */\n+  1; return 0; /* { dg-warning \"6:enum conversion in return is invalid\" } */\n+}"}]}