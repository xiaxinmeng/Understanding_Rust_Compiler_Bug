{"sha": "225d221a9d82172d403aa068217dc67ca0a3f249", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI1ZDIyMWE5ZDgyMTcyZDQwM2FhMDY4MjE3ZGM2N2NhMGEzZjI0OQ==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2004-06-01T12:56:49Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2004-06-01T12:56:49Z"}, "message": "re PR target/14018 (m68k backend: -malign-loops/-malign-jumps broken)\n\n\tPR target/14018\n\t* config/m68k/m68k.c (m68k_align_loops_string, m68k_align_jumps_string,\n\tm68k_align_funcs_string, m68k_align_loops, m68k_align_jumps,\n\tm68k_align_funcs): Remove.\n\t(override_options): Remove code to handle -malign-* options.\n\t* config/m68k/m68k.h (TARGET_OPTIONS): Remove -malign-* options.\n\t(FUNCTION_BOUNDARY, LOOP_ALIGN, LOOP_ALIGN_AFTER_BARRIER): Remove.\n\t(m68k_align_loops_string, m68k_align_jumps_string,\n\tm68k_align_funcs_string, m68k_align_loops, m68k_align_jumps,\n\tm68k_align_funcs): Remove definitions.\n\nFrom-SVN: r82546", "tree": {"sha": "223f0fe429e7836b5071c97c2c29a711b9bde3b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/223f0fe429e7836b5071c97c2c29a711b9bde3b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/225d221a9d82172d403aa068217dc67ca0a3f249", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225d221a9d82172d403aa068217dc67ca0a3f249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225d221a9d82172d403aa068217dc67ca0a3f249", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225d221a9d82172d403aa068217dc67ca0a3f249/comments", "author": null, "committer": null, "parents": [{"sha": "c05e85e236f6848de79ca82ca5cf6ccbc897c84c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05e85e236f6848de79ca82ca5cf6ccbc897c84c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05e85e236f6848de79ca82ca5cf6ccbc897c84c"}], "stats": {"total": 93, "additions": 18, "deletions": 75}, "files": [{"sha": "aa5a1a9df1434a5c8f55bd69cf2cfb04529f61dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225d221a9d82172d403aa068217dc67ca0a3f249/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225d221a9d82172d403aa068217dc67ca0a3f249/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=225d221a9d82172d403aa068217dc67ca0a3f249", "patch": "@@ -1,11 +1,24 @@\n+2004-06-01  Bernardo Innocenti  <bernie@develer.com>\n+\n+\tPR target/14018\n+\t* config/m68k/m68k.c (m68k_align_loops_string, m68k_align_jumps_string,\n+\tm68k_align_funcs_string, m68k_align_loops, m68k_align_jumps,\n+\tm68k_align_funcs): Remove.\n+\t(override_options): Remove code to handle -malign-* options.\n+\t* config/m68k/m68k.h (TARGET_OPTIONS): Remove -malign-* options.\n+\t(FUNCTION_BOUNDARY, LOOP_ALIGN, LOOP_ALIGN_AFTER_BARRIER): Remove.\n+\t(m68k_align_loops_string, m68k_align_jumps_string,\n+\tm68k_align_funcs_string, m68k_align_loops, m68k_align_jumps,\n+\tm68k_align_funcs): Remove definitions.\n+\n 2004-06-01  Paul Eggert  <eggert@cs.ucla.edu>\n \n \tPR target/15626\n \t* doc/install.texi (sparc-sun-solaris2*): Document messages issued\n \tby the Sun linker in conjunction with the Sun assembler.\n \t(sparc-sun-solaris2.7): Update revision info for Sun patch 106950.\n \n-2004-05-19  Jeff Law <law@redhat.com>\n+2004-06-01  Jeff Law  <law@redhat.com>\n \n         * stmt.c (expand_decl): Be more selective about calling\n         mark_reg_pointer."}, {"sha": "1aebe96c548982966cc3ac45a1af76b7d3755a38", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225d221a9d82172d403aa068217dc67ca0a3f249/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225d221a9d82172d403aa068217dc67ca0a3f249/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=225d221a9d82172d403aa068217dc67ca0a3f249", "patch": "@@ -123,23 +123,9 @@ static int const_int_cost (rtx);\n static bool m68k_rtx_costs (rtx, int, int, int *);\n \f\n \n-/* Alignment to use for loops and jumps */\n-/* Specify power of two alignment used for loops.  */\n-const char *m68k_align_loops_string;\n-/* Specify power of two alignment used for non-loop jumps.  */\n-const char *m68k_align_jumps_string;\n-/* Specify power of two alignment used for functions.  */\n-const char *m68k_align_funcs_string;\n /* Specify the identification number of the library being built */\n const char *m68k_library_id_string;\n \n-/* Specify power of two alignment used for loops.  */\n-int m68k_align_loops;\n-/* Specify power of two alignment used for non-loop jumps.  */\n-int m68k_align_jumps;\n-/* Specify power of two alignment used for functions.  */\n-int m68k_align_funcs;\n-\n /* Nonzero if the last compare/test insn had FP operands.  The\n    sCC expanders peek at this to determine what to do for the\n    68060, which has no fsCC instructions.  */\n@@ -221,22 +207,6 @@ struct gcc_target targetm = TARGET_INITIALIZER;\n void\n override_options (void)\n {\n-  int def_align;\n-  int i;\n-\n-  def_align = 1;\n-\n-  /* Validate -malign-loops= value, or provide default */\n-  m68k_align_loops = def_align;\n-  if (m68k_align_loops_string)\n-    {\n-      i = atoi (m68k_align_loops_string);\n-      if (i < 1 || i > MAX_CODE_ALIGN)\n-\terror (\"-malign-loops=%d is not between 1 and %d\", i, MAX_CODE_ALIGN);\n-      else\n-\tm68k_align_loops = i;\n-    }\n-\n   /* Library identification */\n   if (m68k_library_id_string)\n     {\n@@ -269,29 +239,6 @@ override_options (void)\n   if (TARGET_SEP_DATA || TARGET_ID_SHARED_LIBRARY)\n     flag_pic = 2;\n \n-  /* Validate -malign-jumps= value, or provide default */\n-  m68k_align_jumps = def_align;\n-  if (m68k_align_jumps_string)\n-    {\n-      i = atoi (m68k_align_jumps_string);\n-      if (i < 1 || i > MAX_CODE_ALIGN)\n-\terror (\"-malign-jumps=%d is not between 1 and %d\", i, MAX_CODE_ALIGN);\n-      else\n-\tm68k_align_jumps = i;\n-    }\n-\n-  /* Validate -malign-functions= value, or provide default */\n-  m68k_align_funcs = def_align;\n-  if (m68k_align_funcs_string)\n-    {\n-      i = atoi (m68k_align_funcs_string);\n-      if (i < 1 || i > MAX_CODE_ALIGN)\n-\terror (\"-malign-functions=%d is not between 1 and %d\",\n-\t       i, MAX_CODE_ALIGN);\n-      else\n-\tm68k_align_funcs = i;\n-    }\n-\n   /* -fPIC uses 32-bit pc-relative displacements, which don't exist\n      until the 68020.  */\n   if (!TARGET_68020 && !TARGET_COLDFIRE && (flag_pic == 2))"}, {"sha": "5b700938298c915f1dea2610bb649f98f5b76683", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225d221a9d82172d403aa068217dc67ca0a3f249/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225d221a9d82172d403aa068217dc67ca0a3f249/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=225d221a9d82172d403aa068217dc67ca0a3f249", "patch": "@@ -183,7 +183,7 @@ extern int target_flags;\n #define MASK_SHORT\t(1<<12)\n #define TARGET_SHORT\t(target_flags & MASK_SHORT)\n \n-/* Align ints to a word boundary.  This breaks compatibility with the \n+/* Align ints to a word boundary.  This breaks compatibility with the\n    published ABI's for structures containing ints, but produces faster\n    code on cpus with 32-bit busses (020, 030, 040, 060, CPU32+, ColdFire).\n    It's required for ColdFire cpus without a misalignment module.  */\n@@ -355,12 +355,7 @@ extern int target_flags;\n    option if the fixed part matches.  The actual option name is made\n    by appending `-m' to the specified name.  */\n #define TARGET_OPTIONS\t\t\t\t\t\t\t\\\n-{ { \"align-loops=\",\t&m68k_align_loops_string,\t\t\t\\\n-    N_(\"Loop code aligned to this power of 2\"), 0},\t\t\t\\\n-  { \"align-jumps=\",\t&m68k_align_jumps_string,\t\t\t\\\n-    N_(\"Jump targets are aligned to this power of 2\"), 0},\t\t\\\n-  { \"align-functions=\",\t&m68k_align_funcs_string,\t\t\t\\\n-    N_(\"Function starts are aligned to this power of 2\"), 0},\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n   { \"shared-library-id=\",\t&m68k_library_id_string,\t\t\\\n     N_(\"ID of shared library to build\"), 0},\t\t\t\t\\\n   SUBTARGET_OPTIONS\t\t\t\t\t\t\t\\\n@@ -420,7 +415,7 @@ extern int target_flags;\n #define STACK_BOUNDARY 16\n \n /* Allocation boundary (in *bits*) for the code of a function.  */\n-#define FUNCTION_BOUNDARY (1 << (m68k_align_funcs + 3))\n+#define FUNCTION_BOUNDARY 16\n \n /* Alignment of field after `int : 0' in a structure.  */\n #define EMPTY_FIELD_BOUNDARY 16\n@@ -442,19 +437,13 @@ extern int target_flags;\n /* Maximum number of library ids we permit */\n #define MAX_LIBRARY_ID 255\n \n-/* Align loop starts for optimal branching.  */\n-#define LOOP_ALIGN(LABEL) (m68k_align_loops)\n-\n-/* This is how to align an instruction for optimal branching.  */\n-#define LABEL_ALIGN_AFTER_BARRIER(LABEL) (m68k_align_jumps)\n-\n /* Define number of bits in most basic integer type.\n    (If undefined, default is BITS_PER_WORD).  */\n \n #define INT_TYPE_SIZE (TARGET_SHORT ? 16 : 32)\n \n /* Define these to avoid dependence on meaning of `int'.  */\n- \n+\n #define WCHAR_TYPE \"long int\"\n #define WCHAR_TYPE_SIZE 32\n \f\n@@ -1699,13 +1688,7 @@ do { if (cc_prev_status.flags & CC_IN_68881)\t\t\t\\\n #define PRINT_OPERAND_ADDRESS(FILE, ADDR) print_operand_address (FILE, ADDR)\n \n /* Variables in m68k.c */\n-extern const char *m68k_align_loops_string;\n-extern const char *m68k_align_jumps_string;\n-extern const char *m68k_align_funcs_string;\n extern const char *m68k_library_id_string;\n-extern int m68k_align_loops;\n-extern int m68k_align_jumps;\n-extern int m68k_align_funcs;\n extern int m68k_last_compare_had_fp_operands;\n \n \f"}]}