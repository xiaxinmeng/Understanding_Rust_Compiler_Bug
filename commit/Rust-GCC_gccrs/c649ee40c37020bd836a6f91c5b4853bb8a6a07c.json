{"sha": "c649ee40c37020bd836a6f91c5b4853bb8a6a07c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY0OWVlNDBjMzcwMjBiZDgzNmE2ZjkxYzViNDg1M2JiOGE2YTA3Yw==", "commit": {"author": {"name": "Rasmus Villemoes", "email": "rasmus.villemoes@prevas.dk", "date": "2018-06-12T14:58:24Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-06-12T14:58:24Z"}, "message": "inclhack.def: Fix fixup for assert.h on vxworks.\n\n\t* inclhack.def: Fix fixup for assert.h on vxworks.\n\t* fixincl.x: Regenerate.\n\nFrom-SVN: r261499", "tree": {"sha": "d2de50033f728c1e9ae5963481be1fcf3949145b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2de50033f728c1e9ae5963481be1fcf3949145b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c649ee40c37020bd836a6f91c5b4853bb8a6a07c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c649ee40c37020bd836a6f91c5b4853bb8a6a07c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c649ee40c37020bd836a6f91c5b4853bb8a6a07c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c649ee40c37020bd836a6f91c5b4853bb8a6a07c/comments", "author": null, "committer": null, "parents": [{"sha": "9f51da538376188b7ad282ab38d704eed871bd4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f51da538376188b7ad282ab38d704eed871bd4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f51da538376188b7ad282ab38d704eed871bd4e"}], "stats": {"total": 85, "additions": 72, "deletions": 13}, "files": [{"sha": "2bb9f89d10be108d7907410a34eff5ff8cdbde6f", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c649ee40c37020bd836a6f91c5b4853bb8a6a07c/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c649ee40c37020bd836a6f91c5b4853bb8a6a07c/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=c649ee40c37020bd836a6f91c5b4853bb8a6a07c", "patch": "@@ -1,3 +1,8 @@\n+2018-06-12    Rasmus Villemoes <rasmus.villemoes@prevas.dk>\n+\n+\t* inclhack.def: Fix fixup for assert.h on vxworks.\n+\t* fixincl.x: Regenerate.\n+\n 2018-05-25  Rasmus Villemoes  <rasmus.villemoes@prevas.dk>\n \n \t* inclhack.def (vxworks_iolib_include_unistd): New fix."}, {"sha": "2f7e6fc2443dc0f838cba72acc4cfff6f97a8cb3", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 57, "deletions": 9, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c649ee40c37020bd836a6f91c5b4853bb8a6a07c/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c649ee40c37020bd836a6f91c5b4853bb8a6a07c/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=c649ee40c37020bd836a6f91c5b4853bb8a6a07c", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  February 22, 2018 at 03:46:51 PM by AutoGen 5.18\n+ * It has been AutoGen-ed  June 12, 2018 at 08:56:43 AM by AutoGen 5.18.12\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Thu Feb 22 15:46:51 UTC 2018\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Jun 12 08:56:43 MDT 2018\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 249 fixup descriptions.\n+ * This file contains 250 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -524,11 +524,14 @@ tSCC* apzAab_Vxworks_AssertMachs[] = {\n  *  Fix Command Arguments for Aab_Vxworks_Assert\n  */\n static const char* apzAab_Vxworks_AssertPatch[] = {\n-\"#ifndef _ASSERT_H\\n\\\n-#define _ASSERT_H\\n\\n\\\n-#ifdef assert\\n\\\n+\"#ifdef _ASSERT_H\\n\\\n+#undef _ASSERT_H\\n\\\n #undef assert\\n\\\n #endif\\n\\n\\\n+#define _ASSERT_H\\n\\n\\\n+#ifdef __cplusplus\\n\\\n+extern \\\"C\\\" {\\n\\\n+#endif\\n\\n\\\n #if defined(__STDC__) || defined(__cplusplus)\\n\\\n extern void __assert (const char*);\\n\\\n #else\\n\\\n@@ -541,9 +544,11 @@ extern void __assert ();\\n\\\n #define ASSERT_STRINGIFY_HELPER(str) #str\\n\\n\\\n #define assert(test) ((void) \\\\\\n\\\n         ((test) ? ((void)0) : \\\\\\n\\\n-        __assert(\\\"Assertion failed: \\\" ASSERT_STRINGIFY(test) \\\", file \\\" \\\\\\n\\\n+        __assert(\\\"Assertion failed: \\\" #test \\\", file \\\" \\\\\\n\\\n         __FILE__ \\\", line \\\" ASSERT_STRINGIFY(__LINE__) \\\"\\\\n\\\")))\\n\\n\\\n #endif\\n\\n\\\n+#ifdef __cplusplus\\n\\\n+}\\n\\\n #endif\",\n     (char*)NULL };\n \n@@ -9929,6 +9934,43 @@ static const char* apzVxworks_Write_ConstPatch[] = {\n     \"extern[\\t ]+int[\\t ]+write[\\t ]*\\\\([\\t ]*int[\\t ]*,[\\t ]*char[\\t ]*\\\\*[\\t ]*,[\\t ]*size_t[\\t ]*\\\\)[\\t ]*;\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Vxworks_Iolib_Include_Unistd fix\n+ */\n+tSCC zVxworks_Iolib_Include_UnistdName[] =\n+     \"vxworks_iolib_include_unistd\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zVxworks_Iolib_Include_UnistdList[] =\n+  \"ioLib.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzVxworks_Iolib_Include_UnistdMachs[] = {\n+        \"*-*-vxworks*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zVxworks_Iolib_Include_UnistdSelect0[] =\n+       \"#include \\\"unistd.h\\\"\";\n+\n+#define    VXWORKS_IOLIB_INCLUDE_UNISTD_TEST_CT  1\n+static tTestDesc aVxworks_Iolib_Include_UnistdTests[] = {\n+  { TT_EGREP,    zVxworks_Iolib_Include_UnistdSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Vxworks_Iolib_Include_Unistd\n+ */\n+static const char* apzVxworks_Iolib_Include_UnistdPatch[] = {\n+    \"format\",\n+    \"#include <unistd.h>\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of X11_Class fix\n@@ -10099,9 +10141,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          287\n+#define REGEX_COUNT          288\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            249\n+#define FIX_COUNT            250\n \n /*\n  *  Enumerate the fixes\n@@ -10352,6 +10394,7 @@ typedef enum {\n     VXWORKS_REGS_FIXIDX,\n     VXWORKS_TIME_FIXIDX,\n     VXWORKS_WRITE_CONST_FIXIDX,\n+    VXWORKS_IOLIB_INCLUDE_UNISTD_FIXIDX,\n     X11_CLASS_FIXIDX,\n     X11_CLASS_USAGE_FIXIDX,\n     X11_NEW_FIXIDX,\n@@ -11584,6 +11627,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      VXWORKS_WRITE_CONST_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVxworks_Write_ConstTests,   apzVxworks_Write_ConstPatch, 0 },\n \n+  {  zVxworks_Iolib_Include_UnistdName,    zVxworks_Iolib_Include_UnistdList,\n+     apzVxworks_Iolib_Include_UnistdMachs,\n+     VXWORKS_IOLIB_INCLUDE_UNISTD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVxworks_Iolib_Include_UnistdTests,   apzVxworks_Iolib_Include_UnistdPatch, 0 },\n+\n   {  zX11_ClassName,    zX11_ClassList,\n      apzX11_ClassMachs,\n      X11_CLASS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "c1f5a13eda4b3275020333954d8f83cfbcd3071e", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c649ee40c37020bd836a6f91c5b4853bb8a6a07c/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c649ee40c37020bd836a6f91c5b4853bb8a6a07c/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=c649ee40c37020bd836a6f91c5b4853bb8a6a07c", "patch": "@@ -377,11 +377,15 @@ fix = {\n     mach        = \"*-*-vxworks*\";\n         \n     replace     = <<- _EndOfHeader_\n-\t#ifndef _ASSERT_H\n+\t#ifdef _ASSERT_H\n+\t#undef _ASSERT_H\n+\t#undef assert\n+\t#endif\n+\n \t#define _ASSERT_H\n \n-\t#ifdef assert\n-\t#undef assert\n+\t#ifdef __cplusplus\n+\textern \"C\" {\n \t#endif\n \n \t#if defined(__STDC__) || defined(__cplusplus)\n@@ -399,11 +403,13 @@ fix = {\n \n \t#define assert(test) ((void) \\\n \t        ((test) ? ((void)0) : \\\n-\t        __assert(\"Assertion failed: \" ASSERT_STRINGIFY(test) \", file \" \\\n+\t        __assert(\"Assertion failed: \" #test \", file \" \\\n \t        __FILE__ \", line \" ASSERT_STRINGIFY(__LINE__) \"\\n\")))\n \n \t#endif\n \n+\t#ifdef __cplusplus\n+\t}\n \t#endif\n \t_EndOfHeader_;\n };"}]}