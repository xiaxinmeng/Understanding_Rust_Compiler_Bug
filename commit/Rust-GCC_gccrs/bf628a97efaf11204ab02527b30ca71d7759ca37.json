{"sha": "bf628a97efaf11204ab02527b30ca71d7759ca37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY2MjhhOTdlZmFmMTEyMDRhYjAyNTI3YjMwY2E3MWQ3NzU5Y2EzNw==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-02-10T13:23:29Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-07-03T10:00:28Z"}, "message": "amdgcn: Add fold_left_plus vector reductions\n\nThese aren't real in-order instructions, because the ISA can't do that\nquickly, but a means to allow regular out-of-order reductions when that's\ngood enough, but the middle-end doesn't know so.\n\n\tgcc/\n\t* config/gcn/gcn-valu.md (fold_left_plus_<mode>): New.", "tree": {"sha": "5aab130b83bd083d48fa8b26aea9f6073e978556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5aab130b83bd083d48fa8b26aea9f6073e978556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf628a97efaf11204ab02527b30ca71d7759ca37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf628a97efaf11204ab02527b30ca71d7759ca37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf628a97efaf11204ab02527b30ca71d7759ca37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf628a97efaf11204ab02527b30ca71d7759ca37/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e5508c2d006f2d4f8670e6c3fed770ac1c85e64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e5508c2d006f2d4f8670e6c3fed770ac1c85e64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e5508c2d006f2d4f8670e6c3fed770ac1c85e64"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "26559ff765e24bdeefa58e485d30a2fec1fc561e", "filename": "gcc/config/gcn/gcn-valu.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf628a97efaf11204ab02527b30ca71d7759ca37/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf628a97efaf11204ab02527b30ca71d7759ca37/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md?ref=bf628a97efaf11204ab02527b30ca71d7759ca37", "patch": "@@ -3076,6 +3076,26 @@\n     DONE;\n   })\n \n+;; Warning: This \"-ffast-math\" implementation converts in-order reductions\n+;;          into associative reductions. It's also used where OpenMP or\n+;;          OpenACC paralellization has already broken the in-order semantics.\n+(define_expand \"fold_left_plus_<mode>\"\n+ [(match_operand:<SCALAR_MODE> 0 \"register_operand\")\n+  (match_operand:<SCALAR_MODE> 1 \"gcn_alu_operand\")\n+  (match_operand:V_FP 2 \"gcn_alu_operand\")]\n+  \"can_create_pseudo_p ()\n+   && (flag_openacc || flag_openmp\n+       || flag_associative_math)\"\n+  {\n+    rtx dest = operands[0];\n+    rtx scalar = operands[1];\n+    rtx vector = operands[2];\n+    rtx tmp = gen_reg_rtx (<SCALAR_MODE>mode);\n+\n+    emit_insn (gen_reduc_plus_scal_<mode> (tmp, vector));\n+    emit_insn (gen_add<scalar_mode>3 (dest, scalar, tmp));\n+     DONE;\n+   })\n \n (define_insn \"*<reduc_op>_dpp_shr_<mode>\"\n   [(set (match_operand:V_1REG 0 \"register_operand\"   \"=v\")"}]}