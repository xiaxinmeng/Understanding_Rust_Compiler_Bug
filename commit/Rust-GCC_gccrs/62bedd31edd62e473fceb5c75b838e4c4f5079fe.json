{"sha": "62bedd31edd62e473fceb5c75b838e4c4f5079fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJiZWRkMzFlZGQ2MmU0NzNmY2ViNWM3NWI4MzhlNGM0ZjUwNzlmZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-09-05T23:25:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-09-05T23:25:07Z"}, "message": "decl.c (duplicate_decls): Set TREE_NOTHROW on __builtin_XX decl if a prototype for XX is provided with...\n\n\t* decl.c (duplicate_decls): Set TREE_NOTHROW on __builtin_XX\n\tdecl if a prototype for XX is provided with throw().\n\n\t* g++.dg/eh/builtin1.C: New test.\n\t* g++.dg/eh/builtin2.C: New test.\n\t* g++.dg/eh/builtin3.C: New test.\n\nFrom-SVN: r128159", "tree": {"sha": "1d6176051116d224efb9036dd9ba002ea90773a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d6176051116d224efb9036dd9ba002ea90773a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62bedd31edd62e473fceb5c75b838e4c4f5079fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62bedd31edd62e473fceb5c75b838e4c4f5079fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62bedd31edd62e473fceb5c75b838e4c4f5079fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62bedd31edd62e473fceb5c75b838e4c4f5079fe/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1e3f20e51b93889c8fb8dbb4205170d33dfa9ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1e3f20e51b93889c8fb8dbb4205170d33dfa9ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1e3f20e51b93889c8fb8dbb4205170d33dfa9ec"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "07663ed10d3531e2bb6da75c969069c9084f6071", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62bedd31edd62e473fceb5c75b838e4c4f5079fe", "patch": "@@ -1,3 +1,8 @@\n+2007-09-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* decl.c (duplicate_decls): Set TREE_NOTHROW on __builtin_XX\n+\tdecl if a prototype for XX is provided with throw().\n+\n 2007-09-05  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/30302"}, {"sha": "311925a196d7525057f516577b9f621718f451a2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=62bedd31edd62e473fceb5c75b838e4c4f5079fe", "patch": "@@ -1280,6 +1280,17 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n \t  TREE_TYPE (newdecl) = TREE_TYPE (olddecl) = type;\n \t}\n \n+      /* If a function is explicitly declared \"throw ()\", propagate that to\n+\t the corresponding builtin.  */\n+      if (DECL_BUILT_IN_CLASS (olddecl) == BUILT_IN_NORMAL\n+\t  && DECL_ANTICIPATED (olddecl)\n+\t  && TREE_NOTHROW (newdecl)\n+\t  && !TREE_NOTHROW (olddecl)\n+\t  && built_in_decls [DECL_FUNCTION_CODE (olddecl)] != NULL_TREE\n+\t  && built_in_decls [DECL_FUNCTION_CODE (olddecl)] != olddecl\n+\t  && types_match)\n+\tTREE_NOTHROW (built_in_decls [DECL_FUNCTION_CODE (olddecl)]) = 1;\n+\n       /* Whether or not the builtin can throw exceptions has no\n \t bearing on this declarator.  */\n       TREE_NOTHROW (olddecl) = 0;"}, {"sha": "41ca76ddc6485f730393cd488bd5c5ea2ca769e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62bedd31edd62e473fceb5c75b838e4c4f5079fe", "patch": "@@ -1,3 +1,9 @@\n+2007-09-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/eh/builtin1.C: New test.\n+\t* g++.dg/eh/builtin2.C: New test.\n+\t* g++.dg/eh/builtin3.C: New test.\n+\n 2007-09-05  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.target/powerpc/dfp-dd.c: New test."}, {"sha": "1f56d1a833dd3e17cb8d3731617de395c570ecd8", "filename": "gcc/testsuite/g++.dg/eh/builtin1.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin1.C?ref=62bedd31edd62e473fceb5c75b838e4c4f5079fe", "patch": "@@ -0,0 +1,26 @@\n+// Verify that if explicit prototype for builtin is present without throw(),\n+// both the normal builtin and __builtin_* variant are expected to be\n+// able to throw exceptions.\n+// { dg-do compile }\n+// { dg-options \"-fdump-tree-eh\" }\n+\n+extern \"C\" int printf (const char *, ...);\n+\n+struct A { A (); ~A (); int i; };\n+\n+int\n+foo ()\n+{\n+  A a;\n+  printf (\"foo %d\\n\", a.i);\n+}\n+\n+int\n+bar ()\n+{\n+  A a;\n+  __builtin_printf (\"foo %d\\n\", a.i);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"resx 1\" 2 \"eh\" } } */\n+/* { dg-final { cleanup-tree-dump \"eh\" } } */"}, {"sha": "b106516da683866ff3692779346c69cf46de8f52", "filename": "gcc/testsuite/g++.dg/eh/builtin2.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin2.C?ref=62bedd31edd62e473fceb5c75b838e4c4f5079fe", "patch": "@@ -0,0 +1,25 @@\n+// Verify that if explicit prototype for builtin is present with throw(),\n+// neither the normal builtin nor __builtin_* variant can throw exceptions.\n+// { dg-do compile }\n+// { dg-options \"-fdump-tree-eh\" }\n+\n+extern \"C\" int printf (const char *, ...) throw();\n+\n+struct A { A (); ~A (); int i; };\n+\n+int\n+foo ()\n+{\n+  A a;\n+  printf (\"foo %d\\n\", a.i);\n+}\n+\n+int\n+bar ()\n+{\n+  A a;\n+  __builtin_printf (\"foo %d\\n\", a.i);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"resx 1\" 0 \"eh\" } } */\n+/* { dg-final { cleanup-tree-dump \"eh\" } } */"}, {"sha": "be1629ea5f85b8dd2331f4b5bd50655303d0a2a8", "filename": "gcc/testsuite/g++.dg/eh/builtin3.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62bedd31edd62e473fceb5c75b838e4c4f5079fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fbuiltin3.C?ref=62bedd31edd62e473fceb5c75b838e4c4f5079fe", "patch": "@@ -0,0 +1,16 @@\n+// Without explicit prototype, we need to assume the builtin can\n+// throw for builtins that at least on one platform can throw.\n+// { dg-do compile }\n+// { dg-options \"-fdump-tree-eh\" }\n+\n+struct A { A (); ~A (); int i; };\n+\n+int\n+bar ()\n+{\n+  A a;\n+  __builtin_printf (\"foo %d\\n\", a.i);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"resx 1\" 1 \"eh\" } } */\n+/* { dg-final { cleanup-tree-dump \"eh\" } } */"}]}