{"sha": "cf76bbf8a8c35e3e8a5549460a5b9df8eeacf1e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y3NmJiZjhhOGMzNWUzZThhNTU0OTQ2MGE1YjlkZjhlZWFjZjFlOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-04T08:58:28Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-04T09:09:07Z"}, "message": "mklog.py: add --update-copyright option\n\ncontrib/ChangeLog:\n\n\t* mklog.py: Add --update-copyright option which adds:\n\t\"Update copyright years.\" to ChangeLog files belonging\n\tto a modified file.", "tree": {"sha": "c2f18cc65286a7510fb1a08a2e9fd159a7e3571f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2f18cc65286a7510fb1a08a2e9fd159a7e3571f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf76bbf8a8c35e3e8a5549460a5b9df8eeacf1e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf76bbf8a8c35e3e8a5549460a5b9df8eeacf1e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf76bbf8a8c35e3e8a5549460a5b9df8eeacf1e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf76bbf8a8c35e3e8a5549460a5b9df8eeacf1e8/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8869bd0efcd491fc57666a62d06f0e3898fa0d64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8869bd0efcd491fc57666a62d06f0e3898fa0d64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8869bd0efcd491fc57666a62d06f0e3898fa0d64"}], "stats": {"total": 67, "additions": 48, "deletions": 19}, "files": [{"sha": "e696f5d038863c81ef9ac6acf90e7f7a82b82690", "filename": "contrib/mklog.py", "status": "modified", "additions": 48, "deletions": 19, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf76bbf8a8c35e3e8a5549460a5b9df8eeacf1e8/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf76bbf8a8c35e3e8a5549460a5b9df8eeacf1e8/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=cf76bbf8a8c35e3e8a5549460a5b9df8eeacf1e8", "patch": "@@ -27,8 +27,10 @@\n # Author: Martin Liska <mliska@suse.cz>\n \n import argparse\n+import datetime\n import os\n import re\n+import subprocess\n import sys\n from itertools import takewhile\n \n@@ -227,6 +229,28 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n     return out\n \n \n+def update_copyright(data):\n+    current_timestamp = datetime.datetime.now().strftime('%Y-%m-%d')\n+    username = subprocess.check_output('git config user.name', shell=True,\n+                                       encoding='utf8').strip()\n+    email = subprocess.check_output('git config user.email', shell=True,\n+                                    encoding='utf8').strip()\n+\n+    changelogs = set()\n+    diff = PatchSet(data)\n+\n+    for file in diff:\n+        changelog = os.path.join(find_changelog(file.path), 'ChangeLog')\n+        if changelog not in changelogs:\n+            changelogs.add(changelog)\n+            with open(changelog) as f:\n+                content = f.read()\n+            with open(changelog, 'w+') as f:\n+                f.write(f'{current_timestamp}  {username}  <{email}>\\n\\n')\n+                f.write('\\tUpdate copyright years.\\n\\n')\n+                f.write(content)\n+\n+\n if __name__ == '__main__':\n     parser = argparse.ArgumentParser(description=help_message)\n     parser.add_argument('input', nargs='?',\n@@ -238,28 +262,33 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n     parser.add_argument('-c', '--changelog',\n                         help='Append the ChangeLog to a git commit message '\n                              'file')\n+    parser.add_argument('--update-copyright', action='store_true',\n+                        help='Update copyright in ChangeLog files')\n     args = parser.parse_args()\n     if args.input == '-':\n         args.input = None\n \n     data = open(args.input) if args.input else sys.stdin\n-    output = generate_changelog(data, args.no_functions,\n-                                args.fill_up_bug_titles)\n-    if args.changelog:\n-        lines = open(args.changelog).read().split('\\n')\n-        start = list(takewhile(lambda l: not l.startswith('#'), lines))\n-        end = lines[len(start):]\n-        with open(args.changelog, 'w') as f:\n-            if start:\n-                # appent empty line\n-                if start[-1] != '':\n-                    start.append('')\n-            else:\n-                # append 2 empty lines\n-                start = 2 * ['']\n-            f.write('\\n'.join(start))\n-            f.write('\\n')\n-            f.write(output)\n-            f.write('\\n'.join(end))\n+    if args.update_copyright:\n+        update_copyright(data)\n     else:\n-        print(output, end='')\n+        output = generate_changelog(data, args.no_functions,\n+                                    args.fill_up_bug_titles)\n+        if args.changelog:\n+            lines = open(args.changelog).read().split('\\n')\n+            start = list(takewhile(lambda l: not l.startswith('#'), lines))\n+            end = lines[len(start):]\n+            with open(args.changelog, 'w') as f:\n+                if start:\n+                    # appent empty line\n+                    if start[-1] != '':\n+                        start.append('')\n+                else:\n+                    # append 2 empty lines\n+                    start = 2 * ['']\n+                f.write('\\n'.join(start))\n+                f.write('\\n')\n+                f.write(output)\n+                f.write('\\n'.join(end))\n+        else:\n+            print(output, end='')"}]}