{"sha": "b8d254e64d0d10553df34b4d9bf67fd003730111", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhkMjU0ZTY0ZDBkMTA1NTNkZjM0YjRkOWJmNjdmZDAwMzczMDExMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-05-15T16:58:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-05-15T16:58:37Z"}, "message": "calls.c (expand_call): Move expand_start_target_temps call after start_sequence().\n\n\t* calls.c (expand_call): Move expand_start_target_temps call after\n\tstart_sequence().\n\nFrom-SVN: r33911", "tree": {"sha": "5f8eafb46d0b460b44944ede2b21bb3af43b2b72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f8eafb46d0b460b44944ede2b21bb3af43b2b72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8d254e64d0d10553df34b4d9bf67fd003730111", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d254e64d0d10553df34b4d9bf67fd003730111", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8d254e64d0d10553df34b4d9bf67fd003730111", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d254e64d0d10553df34b4d9bf67fd003730111/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3cfea7796dc2ee6d33e937d3aac069704b159265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cfea7796dc2ee6d33e937d3aac069704b159265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cfea7796dc2ee6d33e937d3aac069704b159265"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "ae88e9ca12c4e7e6fbe3bb5cef07007630594b66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8d254e64d0d10553df34b4d9bf67fd003730111/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8d254e64d0d10553df34b4d9bf67fd003730111/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8d254e64d0d10553df34b4d9bf67fd003730111", "patch": "@@ -1,3 +1,8 @@\n+2000-05-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* calls.c (expand_call): Move expand_start_target_temps call after\n+\tstart_sequence().\n+\n 2000-05-15  Neil Booth  <NeilB@earthling.net>\n \n \t* cpphash.c (trad_stringify, warn_trad_stringify,"}, {"sha": "ee4b6786f6872a081d82736e242a19cbdfbbd711", "filename": "gcc/calls.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8d254e64d0d10553df34b4d9bf67fd003730111/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8d254e64d0d10553df34b4d9bf67fd003730111/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=b8d254e64d0d10553df34b4d9bf67fd003730111", "patch": "@@ -2341,12 +2341,6 @@ expand_call (exp, target, ignore)\n              only one of the alternates.  */\n \t  emit_queue ();\n \n-\t  /* We know at this point that there are not currently any\n-\t     pending cleanups.  If, however, in the process of evaluating\n-\t     the arguments we were to create some, we'll need to be\n-\t     able to get rid of them.  */\n-\t  expand_start_target_temps ();\n-\n \t  /* State variables we need to save and restore between\n \t     iterations.  */\n \t  save_pending_stack_adjust = pending_stack_adjust;\n@@ -2368,6 +2362,15 @@ expand_call (exp, target, ignore)\n \t sibcall_failure instead of continuing the loop.  */\n       start_sequence ();\n \n+      if (pass == 0)\n+\t{\n+\t  /* We know at this point that there are not currently any\n+\t     pending cleanups.  If, however, in the process of evaluating\n+\t     the arguments we were to create some, we'll need to be\n+\t     able to get rid of them.  */\n+\t  expand_start_target_temps ();\n+\t}\n+\n       /* When calling a const function, we must pop the stack args right away,\n \t so that the pop is deleted or moved with the call.  */\n       if (flags & (ECF_CONST | ECF_PURE))"}]}