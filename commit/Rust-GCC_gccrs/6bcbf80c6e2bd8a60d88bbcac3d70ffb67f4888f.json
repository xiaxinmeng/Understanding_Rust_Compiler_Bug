{"sha": "6bcbf80c6e2bd8a60d88bbcac3d70ffb67f4888f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJjYmY4MGM2ZTJiZDhhNjBkODhiYmNhYzNkNzBmZmI2N2Y0ODg4Zg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2021-07-25T02:05:33Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2021-08-17T11:00:40Z"}, "message": "retain debug stmt order when moving to successors\n\nWe iterate over debug stmts from the last one in new_bb, and we insert\nthem before the first post-label stmt in each dest block, without\nmoving the insertion iterator, so they end up reversed.  Moving the\ninsertion iterator fixes this.\n\n\nfor  gcc/ChangeLog\n\n\t* tree-inline.c (maybe_move_debug_stmts_to_successors): Don't\n\treverse debug stmts.", "tree": {"sha": "1dc74919abb9a239ce1bddda67dd6a933e8efe88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dc74919abb9a239ce1bddda67dd6a933e8efe88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bcbf80c6e2bd8a60d88bbcac3d70ffb67f4888f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcbf80c6e2bd8a60d88bbcac3d70ffb67f4888f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bcbf80c6e2bd8a60d88bbcac3d70ffb67f4888f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcbf80c6e2bd8a60d88bbcac3d70ffb67f4888f/comments", "author": null, "committer": null, "parents": [{"sha": "3ed8da759b52708f6874af2afc6ab56b1fb00cec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ed8da759b52708f6874af2afc6ab56b1fb00cec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ed8da759b52708f6874af2afc6ab56b1fb00cec"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5955ff18fdbc5bac9236c2a0bcede769eea6e1aa", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bcbf80c6e2bd8a60d88bbcac3d70ffb67f4888f/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bcbf80c6e2bd8a60d88bbcac3d70ffb67f4888f/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=6bcbf80c6e2bd8a60d88bbcac3d70ffb67f4888f", "patch": "@@ -2880,7 +2880,7 @@ maybe_move_debug_stmts_to_successors (copy_body_data *id, basic_block new_bb)\n \t\t  gimple_set_location (stmt, UNKNOWN_LOCATION);\n \t\t}\n \t      gsi_remove (&si, false);\n-\t      gsi_insert_before (&dsi, stmt, GSI_SAME_STMT);\n+\t      gsi_insert_before (&dsi, stmt, GSI_NEW_STMT);\n \t      continue;\n \t    }\n \n@@ -2906,7 +2906,7 @@ maybe_move_debug_stmts_to_successors (copy_body_data *id, basic_block new_bb)\n \t    new_stmt = as_a <gdebug *> (gimple_copy (stmt));\n \t  else\n \t    gcc_unreachable ();\n-\t  gsi_insert_before (&dsi, new_stmt, GSI_SAME_STMT);\n+\t  gsi_insert_before (&dsi, new_stmt, GSI_NEW_STMT);\n \t  id->debug_stmts.safe_push (new_stmt);\n \t  gsi_prev (&ssi);\n \t}"}]}