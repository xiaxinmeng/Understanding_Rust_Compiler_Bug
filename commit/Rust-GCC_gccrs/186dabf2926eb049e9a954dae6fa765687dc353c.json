{"sha": "186dabf2926eb049e9a954dae6fa765687dc353c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg2ZGFiZjI5MjZlYjA0OWU5YTk1NGRhZTZmYTc2NTY4N2RjMzUzYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-05-15T12:51:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-05-15T12:51:58Z"}, "message": "gimple-parser.c (c_parser_gimple_postfix_expression): Handle __BIT_FIELD_REF.\n\n2019-05-15  Richard Biener  <rguenther@suse.de>\n\n\tc/\n\t* gimple-parser.c (c_parser_gimple_postfix_expression): Handle\n\t__BIT_FIELD_REF.\n\n\t* tree-pretty-print.c (dump_generic_node): Dump BIT_FIELD_REF\n\tas __BIT_FIELD_REF with type with -gimple.\n\n\t* gcc.dg/gimplefe-40.c: Amend.\n\nFrom-SVN: r271208", "tree": {"sha": "ea83973516ee3b335eff72cd7babf0abc345356c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea83973516ee3b335eff72cd7babf0abc345356c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/186dabf2926eb049e9a954dae6fa765687dc353c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/186dabf2926eb049e9a954dae6fa765687dc353c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/186dabf2926eb049e9a954dae6fa765687dc353c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/186dabf2926eb049e9a954dae6fa765687dc353c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb4b60c68edf7196770fdc65b3862662bc2d647b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4b60c68edf7196770fdc65b3862662bc2d647b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb4b60c68edf7196770fdc65b3862662bc2d647b"}], "stats": {"total": 103, "additions": 93, "deletions": 10}, "files": [{"sha": "8ef2c8240be2c5992903490e9cb50e59d43564c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=186dabf2926eb049e9a954dae6fa765687dc353c", "patch": "@@ -1,3 +1,8 @@\n+2019-05-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-pretty-print.c (dump_generic_node): Dump BIT_FIELD_REF\n+\tas __BIT_FIELD_REF with type with -gimple.\n+\n 2019-05-15  Vladislav Ivanishin  <vlad@ispras.ru>\n \n \t* tree-ssa-uninit.c (is_value_included_in): Remove is_unsigned and merge"}, {"sha": "8b9465fd7c65c6d5802c2695fec588f6f6221f41", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=186dabf2926eb049e9a954dae6fa765687dc353c", "patch": "@@ -1,3 +1,8 @@\n+2019-05-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple-parser.c (c_parser_gimple_postfix_expression): Handle\n+\t__BIT_FIELD_REF.\n+\n 2019-05-14  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-parser.c (c_parser_gimple_statement): Remove"}, {"sha": "07ec1e407b24d1411ba74c3a6ac406026728c8b2", "filename": "gcc/c/gimple-parser.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Fc%2Fgimple-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Fc%2Fgimple-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fgimple-parser.c?ref=186dabf2926eb049e9a954dae6fa765687dc353c", "patch": "@@ -1415,6 +1415,43 @@ c_parser_gimple_postfix_expression (gimple_parser &parser)\n \t\t}\n \t      break;\n \t    }\n+\t  else if (strcmp (IDENTIFIER_POINTER (id), \"__BIT_FIELD_REF\") == 0)\n+\t    {\n+\t      /* __BIT_FIELD_REF '<' type-name [ ',' number ] '>'\n+\t                        '(' postfix-expression, integer, integer ')'  */\n+\t      location_t loc = c_parser_peek_token (parser)->location;\n+\t      c_parser_consume_token (parser);\n+\t      tree type = c_parser_gimple_typespec (parser);\n+\t      if (c_parser_require (parser, CPP_OPEN_PAREN, \"expected %<(%>\"))\n+\t\t{\n+\t\t  c_expr op0 = c_parser_gimple_postfix_expression (parser);\n+\t\t  c_parser_skip_until_found (parser, CPP_COMMA,\n+\t\t\t\t\t     \"expected %<,%>\");\n+\t\t  c_expr op1 = c_parser_gimple_postfix_expression (parser);\n+\t\t  if (TREE_CODE (op1.value) != INTEGER_CST\n+\t\t      || !int_fits_type_p (op1.value, bitsizetype))\n+\t\t    c_parser_error (parser, \"expected constant size\");\n+\t\t  c_parser_skip_until_found (parser, CPP_COMMA,\n+\t\t\t\t\t     \"expected %<,%>\");\n+\t\t  c_expr op2 = c_parser_gimple_postfix_expression (parser);\n+\t\t  if (TREE_CODE (op2.value) != INTEGER_CST\n+\t\t      || !int_fits_type_p (op2.value, bitsizetype))\n+\t\t    c_parser_error (parser, \"expected constant offset\");\n+\t\t  c_parser_skip_until_found (parser, CPP_CLOSE_PAREN,\n+\t\t\t\t\t     \"expected %<)%>\");\n+\t\t  if (type\n+\t\t      && op0.value != error_mark_node\n+\t\t      && TREE_CODE (op1.value) == INTEGER_CST\n+\t\t      && TREE_CODE (op2.value) == INTEGER_CST)\n+\t\t    expr.value = build3_loc (loc, BIT_FIELD_REF, type,\n+\t\t\t\t\t     op0.value,\n+\t\t\t\t\t     fold_convert (bitsizetype,\n+\t\t\t\t\t\t\t   op1.value),\n+\t\t\t\t\t     fold_convert (bitsizetype,\n+\t\t\t\t\t\t\t   op2.value));\n+\t\t}\n+\t      break;\n+\t    }\n \t  else if (strcmp (IDENTIFIER_POINTER (id), \"_Literal\") == 0)\n \t    {\n \t      /* _Literal '(' type-name ')' ( [ '-' ] constant | constructor ) */"}, {"sha": "b7d63ed8210cf0eb45ac8d761fe07ad7c395114c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=186dabf2926eb049e9a954dae6fa765687dc353c", "patch": "@@ -1,3 +1,7 @@\n+2019-05-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/gimplefe-40.c: Amend.\n+\n 2019-05-15  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* lib/target-supports.exp "}, {"sha": "58a8ac5553e79dd5c83e805cbb7b4a3a61b38fd6", "filename": "gcc/testsuite/gcc.dg/gimplefe-40.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-40.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-40.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-40.c?ref=186dabf2926eb049e9a954dae6fa765687dc353c", "patch": "@@ -1,15 +1,21 @@\n /* { dg-do compile { target int128 } } */\n-/* { dg-options \"-fgimple -Wno-psabi -w\" } */\n+/* { dg-options \"-fgimple\" } */\n \n typedef float v4sf __attribute__((vector_size(16)));\n-v4sf __GIMPLE (ssa)\n+float __GIMPLE (ssa)\n load (const void * p)\n {\n   __int128 unsigned _3;\n   v4sf _4;\n+  float _5;\n \n   __BB(2):\n   _3 = __MEM <__int128 unsigned, 8> ((char *)p_2(D));\n   _4 = __VIEW_CONVERT <v4sf>(_3);\n-  return _4;\n+#if __SIZEOF_FLOAT__ == 4\n+  _5 = __BIT_FIELD_REF <float> (_4, 32, 64);\n+#else\n+  _5 = 1.0f;\n+#endif\n+  return _5;\n }"}, {"sha": "6645a6466171e38f453501cfe2004267d32000f8", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 33, "deletions": 7, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/186dabf2926eb049e9a954dae6fa765687dc353c/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=186dabf2926eb049e9a954dae6fa765687dc353c", "patch": "@@ -2111,13 +2111,39 @@ dump_generic_node (pretty_printer *pp, tree node, int spc, dump_flags_t flags,\n       break;\n \n     case BIT_FIELD_REF:\n-      pp_string (pp, \"BIT_FIELD_REF <\");\n-      dump_generic_node (pp, TREE_OPERAND (node, 0), spc, flags, false);\n-      pp_string (pp, \", \");\n-      dump_generic_node (pp, TREE_OPERAND (node, 1), spc, flags, false);\n-      pp_string (pp, \", \");\n-      dump_generic_node (pp, TREE_OPERAND (node, 2), spc, flags, false);\n-      pp_greater (pp);\n+      if (flags & TDF_GIMPLE)\n+\t{\n+\t  pp_string (pp, \"__BIT_FIELD_REF <\");\n+\t  dump_generic_node (pp, TREE_TYPE (node),\n+\t\t\t     spc, flags | TDF_SLIM, false);\n+\t  if (TYPE_ALIGN (TREE_TYPE (node))\n+\t      != TYPE_ALIGN (TYPE_MAIN_VARIANT (TREE_TYPE (node))))\n+\t    {\n+\t      pp_string (pp, \", \");\n+\t      pp_decimal_int (pp, TYPE_ALIGN (TREE_TYPE (node)));\n+\t    }\n+\t  pp_greater (pp);\n+\t  pp_string (pp, \" (\");\n+\t  dump_generic_node (pp, TREE_OPERAND (node, 0), spc,\n+\t\t\t     flags | TDF_SLIM, false);\n+\t  pp_string (pp, \", \");\n+\t  dump_generic_node (pp, TREE_OPERAND (node, 1), spc,\n+\t\t\t     flags | TDF_SLIM, false);\n+\t  pp_string (pp, \", \");\n+\t  dump_generic_node (pp, TREE_OPERAND (node, 2), spc,\n+\t\t\t     flags | TDF_SLIM, false);\n+\t  pp_right_paren (pp);\n+\t}\n+      else\n+\t{\n+\t  pp_string (pp, \"BIT_FIELD_REF <\");\n+\t  dump_generic_node (pp, TREE_OPERAND (node, 0), spc, flags, false);\n+\t  pp_string (pp, \", \");\n+\t  dump_generic_node (pp, TREE_OPERAND (node, 1), spc, flags, false);\n+\t  pp_string (pp, \", \");\n+\t  dump_generic_node (pp, TREE_OPERAND (node, 2), spc, flags, false);\n+\t  pp_greater (pp);\n+\t}\n       break;\n \n     case BIT_INSERT_EXPR:"}]}