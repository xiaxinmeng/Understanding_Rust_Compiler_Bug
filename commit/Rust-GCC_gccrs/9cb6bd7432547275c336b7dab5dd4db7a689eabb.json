{"sha": "9cb6bd7432547275c336b7dab5dd4db7a689eabb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNiNmJkNzQzMjU0NzI3NWMzMzZiN2RhYjVkZDRkYjdhNjg5ZWFiYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-11T17:59:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-11T17:59:22Z"}, "message": "re PR c++/69211 (g++ ICE on x86_64-linux-gnu (verify_gimple failed))\n\n\tPR c++/69211\n\t* cp-gimplify.c (cp_fold): If COMPOUND_EXPR or MODIFY_EXPR\n\tfolded operands have side-effects, but folding changed any of them,\n\tbuild a new tree with the folded operands instead of returning the\n\tunfolded tree.\n\n\t* g++.dg/opt/pr69211.C: New test.\n\nFrom-SVN: r232237", "tree": {"sha": "de11f3a495066ac7c43890adbd54100c2cd8cb77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de11f3a495066ac7c43890adbd54100c2cd8cb77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cb6bd7432547275c336b7dab5dd4db7a689eabb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb6bd7432547275c336b7dab5dd4db7a689eabb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cb6bd7432547275c336b7dab5dd4db7a689eabb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb6bd7432547275c336b7dab5dd4db7a689eabb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a32af0ec5853edb0260d9e439ac646af5daed52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a32af0ec5853edb0260d9e439ac646af5daed52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a32af0ec5853edb0260d9e439ac646af5daed52"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "1f1212176e47c683ddb19f7de3f18c37e11029d4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb6bd7432547275c336b7dab5dd4db7a689eabb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb6bd7432547275c336b7dab5dd4db7a689eabb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9cb6bd7432547275c336b7dab5dd4db7a689eabb", "patch": "@@ -1,3 +1,11 @@\n+2016-01-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/69211\n+\t* cp-gimplify.c (cp_fold): If COMPOUND_EXPR or MODIFY_EXPR\n+\tfolded operands have side-effects, but folding changed any of them,\n+\tbuild a new tree with the folded operands instead of returning the\n+\tunfolded tree.\n+\n 2016-01-09  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/69113"}, {"sha": "14788026133e041c67db8f648bf8a92a2510cbc7", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb6bd7432547275c336b7dab5dd4db7a689eabb/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb6bd7432547275c336b7dab5dd4db7a689eabb/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=9cb6bd7432547275c336b7dab5dd4db7a689eabb", "patch": "@@ -2086,7 +2086,11 @@ cp_fold (tree x)\n       if ((code == COMPOUND_EXPR || code == MODIFY_EXPR)\n \t  && ((op1 && TREE_SIDE_EFFECTS (op1))\n \t       || (op0 && TREE_SIDE_EFFECTS (op0))))\n-\tbreak;\n+\t{\n+\t  if (op0 != TREE_OPERAND (x, 0) || op1 != TREE_OPERAND (x, 1))\n+\t    x = build2_loc (loc, code, TREE_TYPE (x), op0, op1);\n+\t  break;\n+\t}\n       if (TREE_CODE (x) == COMPOUND_EXPR && !op0)\n \top0 = build_empty_stmt (loc);\n "}, {"sha": "9e9423b520e768a4d525749bfd9095bf3c817d7c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb6bd7432547275c336b7dab5dd4db7a689eabb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb6bd7432547275c336b7dab5dd4db7a689eabb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9cb6bd7432547275c336b7dab5dd4db7a689eabb", "patch": "@@ -1,5 +1,8 @@\n 2016-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/69211\n+\t* g++.dg/opt/pr69211.C: New test.\n+\n \tPR tree-optimization/69214\n \t* gcc.c-torture/compile/pr69214.c: New test.\n "}, {"sha": "c3c5b1d1e72774afa202f5a88f3138391bd82e3b", "filename": "gcc/testsuite/g++.dg/opt/pr69211.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb6bd7432547275c336b7dab5dd4db7a689eabb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr69211.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb6bd7432547275c336b7dab5dd4db7a689eabb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr69211.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr69211.C?ref=9cb6bd7432547275c336b7dab5dd4db7a689eabb", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/69211\n+// { dg-do compile }\n+\n+int a, b;\n+\n+int\n+foo ()\n+{\n+  return (a & 5UL | (b = 4, 4L)) > 4;\n+}"}]}