{"sha": "46b48ef565a731734522304b95b893ea07ac7ca0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZiNDhlZjU2NWE3MzE3MzQ1MjIzMDRiOTViODkzZWEwN2FjN2NhMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-02-21T20:50:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-02-21T20:50:57Z"}, "message": "PR c++/41727 - ICE with partial spec of partial instantiation\n\n\t* pt.c (process_partial_specialization): For now, don't check more\n\tspecialized if there is more than one level of args.\n\nFrom-SVN: r245642", "tree": {"sha": "5b91e032a5817dacea86bdff0e2b9c1835617a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b91e032a5817dacea86bdff0e2b9c1835617a1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46b48ef565a731734522304b95b893ea07ac7ca0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b48ef565a731734522304b95b893ea07ac7ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46b48ef565a731734522304b95b893ea07ac7ca0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b48ef565a731734522304b95b893ea07ac7ca0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a232a1cb1792bef3776dd4bddb7ef484790f8648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a232a1cb1792bef3776dd4bddb7ef484790f8648", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a232a1cb1792bef3776dd4bddb7ef484790f8648"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "13d7d33b8c3cf0861a082114b107b30a31d73528", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b48ef565a731734522304b95b893ea07ac7ca0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b48ef565a731734522304b95b893ea07ac7ca0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=46b48ef565a731734522304b95b893ea07ac7ca0", "patch": "@@ -1,3 +1,9 @@\n+2017-02-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/41727 - ICE with partial spec of partial instantiation\n+\t* pt.c (process_partial_specialization): For now, don't check more\n+\tspecialized if there is more than one level of args.\n+\n 2017-02-21  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/79535"}, {"sha": "38a01e168a7876ce9b7c0ccc51786aa4f44fe8bf", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b48ef565a731734522304b95b893ea07ac7ca0/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b48ef565a731734522304b95b893ea07ac7ca0/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=46b48ef565a731734522304b95b893ea07ac7ca0", "patch": "@@ -4619,6 +4619,9 @@ process_partial_specialization (tree decl)\n \n   /* If we aren't in a dependent class, we can actually try deduction.  */\n   else if (tpd.level == 1\n+\t   /* FIXME we should be able to handle a partial specialization of a\n+\t      partial instantiation, but currently we can't (c++/41727).  */\n+\t   && TMPL_ARGS_DEPTH (specargs) == 1\n \t   && !get_partial_spec_bindings (maintmpl, maintmpl, specargs))\n     {\n       if (permerror (input_location, \"partial specialization %qD is not \""}, {"sha": "7a8db5a96612199be21a4be91ace1088d21e3c3a", "filename": "gcc/testsuite/g++.dg/template/partial-specialization5.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46b48ef565a731734522304b95b893ea07ac7ca0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpartial-specialization5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46b48ef565a731734522304b95b893ea07ac7ca0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpartial-specialization5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpartial-specialization5.C?ref=46b48ef565a731734522304b95b893ea07ac7ca0", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/41727\n+\n+struct tag0;\n+\n+template < class Tag > struct outer\n+{\n+  template < typename Arg0, typename Arg1 > struct inner;\n+};\n+\n+template < int Value > struct value_wrap { };\n+\n+template </* class Tag */>\n+template < typename Arg0, int Arg1 >\n+struct outer <tag0 >::inner < Arg0, value_wrap < Arg1 > >\n+{\n+  typedef Arg0 type;\n+};\n+\n+typedef outer < tag0 >\n+::inner < tag0, value_wrap < 999 > >\n+::type\t\t\t\t// { dg-bogus \"incomplete\" \"\" { xfail *-*-* } }\n+  outer_inner_type;"}]}