{"sha": "74755c6afcf45be8723e30f08b6e38ec105a636a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ3NTVjNmFmY2Y0NWJlODcyM2UzMGYwOGI2ZTM4ZWMxMDVhNjM2YQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-14T14:01:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-14T14:01:29Z"}, "message": "Define __cpp_lib_tuple_element_t in <tuple> not <utility>\n\n\t* include/std/tuple (__cpp_lib_tuple_element_t): Move feature test\n\tmacro from <utility> and change type to long.\n\t* include/std/utility (__cpp_lib_tuple_element_t): Remove.\n\t* testsuite/20_util/tuple/tuple_element_t.cc: Check for feature test\n\tmacro.\n\nFrom-SVN: r261596", "tree": {"sha": "95c6dd5820822f26417358663c9ee419c55a7ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95c6dd5820822f26417358663c9ee419c55a7ba1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74755c6afcf45be8723e30f08b6e38ec105a636a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74755c6afcf45be8723e30f08b6e38ec105a636a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74755c6afcf45be8723e30f08b6e38ec105a636a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74755c6afcf45be8723e30f08b6e38ec105a636a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75b5bc017bbeb83768564a3bd8128e382d327102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b5bc017bbeb83768564a3bd8128e382d327102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b5bc017bbeb83768564a3bd8128e382d327102"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "5f612239bb8f89fde25614084ae2c608595af8f7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74755c6afcf45be8723e30f08b6e38ec105a636a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74755c6afcf45be8723e30f08b6e38ec105a636a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=74755c6afcf45be8723e30f08b6e38ec105a636a", "patch": "@@ -1,5 +1,11 @@\n 2018-06-14  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/tuple (__cpp_lib_tuple_element_t): Move feature test\n+\tmacro from <utility> and change type to long.\n+\t* include/std/utility (__cpp_lib_tuple_element_t): Remove.\n+\t* testsuite/20_util/tuple/tuple_element_t.cc: Check for feature test\n+\tmacro.\n+\n \tP0935R0 Eradicating unnecessarily explicit default constructors\n \t* include/bits/random.h (uniform_real_distribution::param_type)\n \t(normal_distribution::param_type, lognormal_distribution::param_type)"}, {"sha": "0f890504889ca076e41848b95a50ba760a68aa83", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74755c6afcf45be8723e30f08b6e38ec105a636a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74755c6afcf45be8723e30f08b6e38ec105a636a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=74755c6afcf45be8723e30f08b6e38ec105a636a", "patch": "@@ -1298,6 +1298,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  \"tuple index is in range\");\n     };\n \n+#if __cplusplus >= 201402L\n+#define __cpp_lib_tuple_element_t 201402L\n+\n+  template<size_t __i, typename _Tp>\n+    using tuple_element_t = typename tuple_element<__i, _Tp>::type;\n+#endif\n+\n   template<std::size_t __i, typename _Head, typename... _Tail>\n     constexpr _Head&\n     __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept\n@@ -1338,7 +1345,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return std::forward<const __element_type&&>(std::get<__i>(__t));\n     }\n \n-#if __cplusplus > 201103L\n+#if __cplusplus >= 201402L\n \n #define __cpp_lib_tuples_by_type 201304\n \n@@ -1470,6 +1477,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n   // 2275. Why is forward_as_tuple not constexpr?\n+  /// std::forward_as_tuple\n   template<typename... _Elements>\n     constexpr tuple<_Elements&&...>\n     forward_as_tuple(_Elements&&... __args) noexcept"}, {"sha": "7bf80de37459034d02137b854da2cf5f7bcd3de9", "filename": "libstdc++-v3/include/std/utility", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74755c6afcf45be8723e30f08b6e38ec105a636a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74755c6afcf45be8723e30f08b6e38ec105a636a/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Futility?ref=74755c6afcf45be8723e30f08b6e38ec105a636a", "patch": "@@ -135,13 +135,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef typename add_cv<__tuple_element_t<__i, _Tp>>::type type;\n     };\n \n-#if __cplusplus > 201103L\n-#define __cpp_lib_tuple_element_t 201402\n-\n-  template<std::size_t __i, typename _Tp>\n-    using tuple_element_t = typename tuple_element<__i, _Tp>::type;\n-#endif\n-\n   // Various functions which give std::pair a tuple-like interface.\n \n   /// Partial specialization for std::pair"}, {"sha": "6b1b7a54251b5c75ca67722f861a1195e4b80fba", "filename": "libstdc++-v3/testsuite/20_util/tuple/tuple_element_t.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74755c6afcf45be8723e30f08b6e38ec105a636a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_element_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74755c6afcf45be8723e30f08b6e38ec105a636a/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_element_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Ftuple_element_t.cc?ref=74755c6afcf45be8723e30f08b6e38ec105a636a", "patch": "@@ -19,6 +19,12 @@\n \n #include <tuple>\n \n+#ifndef __cpp_lib_tuple_element_t\n+# error \"Feature-test macro for tuple_element_t missing\"\n+#elif __cpp_lib_tuple_element_t != 201402\n+# error \"Feature-test macro for tuple_element_t has wrong value\"\n+#endif\n+\n using namespace std;\n \n struct foo"}]}