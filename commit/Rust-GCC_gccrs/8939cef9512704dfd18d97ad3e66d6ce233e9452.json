{"sha": "8939cef9512704dfd18d97ad3e66d6ce233e9452", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkzOWNlZjk1MTI3MDRkZmQxOGQ5N2FkM2U2NmQ2Y2UyMzNlOTQ1Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-07-26T18:08:13Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-07-27T16:41:05Z"}, "message": "compiler: scan all function literals for escape analysis\n\nWe were scanning only function literals with closures, but not all\nfunction literals have closures.\n\nDiscovered because compiler failed building 1.15rc1, as there is a\nfunction literal in the runtime package (p1 in hexdumpWords) that has\nno closure and, without escape analysis, was forcing a variable to the\nheap which is not permitted in the runtime.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/244802", "tree": {"sha": "9d7be73b3fd4c744798ac64aa041526599e86c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d7be73b3fd4c744798ac64aa041526599e86c33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8939cef9512704dfd18d97ad3e66d6ce233e9452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8939cef9512704dfd18d97ad3e66d6ce233e9452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8939cef9512704dfd18d97ad3e66d6ce233e9452", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8939cef9512704dfd18d97ad3e66d6ce233e9452/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc4ed079dc09a62168699227a794ac52a5b6f6a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4ed079dc09a62168699227a794ac52a5b6f6a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc4ed079dc09a62168699227a794ac52a5b6f6a4"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "0fa32a43489e96402f3238029e0817eb009fb2f8", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8939cef9512704dfd18d97ad3e66d6ce233e9452/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8939cef9512704dfd18d97ad3e66d6ce233e9452/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=8939cef9512704dfd18d97ad3e66d6ce233e9452", "patch": "@@ -1,4 +1,4 @@\n-587d4595e446c597efe97ccdc81b2f05cbc04a21\n+e86f2cb5d6b1984fde345d6ade605e377fa38c04\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "8962f3f38d115c153269f6a385f6cbd2ac63c2cd", "filename": "gcc/go/gofrontend/escape.cc", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8939cef9512704dfd18d97ad3e66d6ce233e9452/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8939cef9512704dfd18d97ad3e66d6ce233e9452/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fescape.cc?ref=8939cef9512704dfd18d97ad3e66d6ce233e9452", "patch": "@@ -142,18 +142,22 @@ Node::ast_format(Gogo* gogo) const\n   else if (this->expr() != NULL)\n     {\n       Expression* e = this->expr();\n+\n       bool is_call = e->call_expression() != NULL;\n       if (is_call)\n-\te->call_expression()->fn();\n+\te = e->call_expression()->fn();\n       Func_expression* fe = e->func_expression();;\n-\n-      bool is_closure = fe != NULL && fe->closure() != NULL;\n-      if (is_closure)\n+      if (fe != NULL)\n \t{\n-\t  if (is_call)\n-\t    return \"(func literal)()\";\n-\t  return \"func literal\";\n+\t  Named_object* no = fe->named_object();\n+\t  if (no->is_function() && no->func_value()->enclosing() != NULL)\n+\t    {\n+\t      if (is_call)\n+\t\treturn \"(func literal)()\";\n+\t      return \"func literal\";\n+\t    }\n \t}\n+\n       Ast_dump_context::dump_to_stream(this->expr(), &ss);\n     }\n   else if (this->statement() != NULL)\n@@ -1172,11 +1176,14 @@ Escape_discover_expr::expression(Expression** pexpr)\n       // Method call or function call.\n       fn = e->call_expression()->fn()->func_expression()->named_object();\n     }\n-  else if (e->func_expression() != NULL\n-           && e->func_expression()->closure() != NULL)\n+  else if (e->func_expression() != NULL)\n     {\n-      // Closure.\n-      fn = e->func_expression()->named_object();\n+      Named_object* no = e->func_expression()->named_object();\n+      if (no->is_function() && no->func_value()->enclosing() != NULL)\n+\t{\n+\t  // Nested function.\n+\t  fn = no;\n+\t}\n     }\n \n   if (fn != NULL)"}]}