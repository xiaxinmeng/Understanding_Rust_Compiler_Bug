{"sha": "4a368ffd957ae319f3e608cd7c2e77d72857d78a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEzNjhmZmQ5NTdhZTMxOWYzZTYwOGNkN2MyZTc3ZDcyODU3ZDc4YQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@wasabisystems.com", "date": "2004-02-24T02:49:24Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2004-02-24T02:49:24Z"}, "message": "cp-demangle.c (__cxa_demangle): It is not an error if status is not NULL.\n\n2004-02-23  Ian Lance Taylor  <ian@wasabisystems.com>\n\n\t* cp-demangle.c (__cxa_demangle): It is not an error if status is\n\tnot NULL.  It is an error if the mangled name is the same as a\n\tbuilt-in type name.\n\t(main): If IN_GLIBCPP_V3 is defined, test __cxa_demangle rather\n\tthan cplus_demangle_v3.\n\nFrom-SVN: r78348", "tree": {"sha": "bc72851c9f3e87d5398c7bdd12449baa2f2afa7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc72851c9f3e87d5398c7bdd12449baa2f2afa7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a368ffd957ae319f3e608cd7c2e77d72857d78a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a368ffd957ae319f3e608cd7c2e77d72857d78a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a368ffd957ae319f3e608cd7c2e77d72857d78a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a368ffd957ae319f3e608cd7c2e77d72857d78a/comments", "author": null, "committer": null, "parents": [{"sha": "8ad1c80ea8014f15b5d5101de011bc40bec661e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad1c80ea8014f15b5d5101de011bc40bec661e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad1c80ea8014f15b5d5101de011bc40bec661e7"}], "stats": {"total": 63, "additions": 52, "deletions": 11}, "files": [{"sha": "97ba223979e25a8aa73ab5b7f22c271f88c4cf10", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a368ffd957ae319f3e608cd7c2e77d72857d78a/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a368ffd957ae319f3e608cd7c2e77d72857d78a/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=4a368ffd957ae319f3e608cd7c2e77d72857d78a", "patch": "@@ -1,5 +1,11 @@\n 2004-02-23  Ian Lance Taylor  <ian@wasabisystems.com>\n \n+\t* cp-demangle.c (__cxa_demangle): It is not an error if status is\n+\tnot NULL.  It is an error if the mangled name is the same as a\n+\tbuilt-in type name.\n+\t(main): If IN_GLIBCPP_V3 is defined, test __cxa_demangle rather\n+\tthan cplus_demangle_v3.\n+\n \t* dyn-string.c: Remove test of IN_LIBGCC2 and IN_GLIBCPP_V3 and\n \tthe associated #define of RETURN_ON_ALLOCATION_FAILURE.\n "}, {"sha": "4d0dd7e5b70670a6575d47303a50ec3d6c2a6979", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 46, "deletions": 11, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a368ffd957ae319f3e608cd7c2e77d72857d78a/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a368ffd957ae319f3e608cd7c2e77d72857d78a/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=4a368ffd957ae319f3e608cd7c2e77d72857d78a", "patch": "@@ -3944,29 +3944,46 @@ __cxa_demangle (mangled_name, output_buffer, length, status)\n   char *demangled;\n   size_t alc;\n \n-  if (status == NULL)\n-    return NULL;\n-\n   if (mangled_name == NULL)\n     {\n-      *status = -3;\n+      if (status != NULL)\n+\t*status = -3;\n       return NULL;\n     }\n \n   if (output_buffer != NULL && length == NULL)\n     {\n-      *status = -3;\n+      if (status != NULL)\n+\t*status = -3;\n+      return NULL;\n+    }\n+\n+  /* The specification for __cxa_demangle() is that if the mangled\n+     name could be either an extern \"C\" identifier, or an internal\n+     built-in type name, then we resolve it as the identifier.  All\n+     internal built-in type names are a single lower case character.\n+     Frankly, this simplistic disambiguation doesn't make sense to me,\n+     but it is documented, so we implement it here.  */\n+  if (mangled_name[1] == '\\0'\n+      && IS_LOWER (mangled_name[0])\n+      && cplus_demangle_builtin_types[mangled_name[0] - 'a'].name != NULL)\n+    {\n+      if (status != NULL)\n+\t*status = -2;\n       return NULL;\n     }\n \n   demangled = d_demangle (mangled_name, DMGL_TYPES, &alc);\n \n   if (demangled == NULL)\n     {\n-      if (alc == 1)\n-\t*status = -1;\n-      else\n-\t*status = -2;\n+      if (status != NULL)\n+\t{\n+\t  if (alc == 1)\n+\t    *status = -1;\n+\t  else\n+\t    *status = -2;\n+\t}\n       return NULL;\n     }\n \n@@ -3990,7 +4007,8 @@ __cxa_demangle (mangled_name, output_buffer, length, status)\n \t}\n     }\n \n-  *status = 0;\n+  if (status != NULL)\n+    *status = 0;\n \n   return demangled;\n }\n@@ -4296,7 +4314,11 @@ main (argc, argv)\n \n \t  if (dyn_string_length (mangled) > 0)\n \t    {\n+#ifdef IN_GLIBCPP_V3\n+\t      s = __cxa_demangle (dyn_string_buf (mangled), NULL, NULL, NULL);\n+#else\n \t      s = cplus_demangle_v3 (dyn_string_buf (mangled), options);\n+#endif\n \n \t      if (s != NULL)\n \t\t{\n@@ -4328,9 +4350,16 @@ main (argc, argv)\n       for (i = optind; i < argc; ++i)\n \t{\n \t  char *s;\n+#ifdef IN_GLIBCPP_V3\n+\t  int status;\n+#endif\n \n \t  /* Attempt to demangle.  */\n+#ifdef IN_GLIBCPP_V3\n+\t  s = __cxa_demangle (argv[i], NULL, NULL, &status);\n+#else\n \t  s = cplus_demangle_v3 (argv[i], options);\n+#endif\n \n \t  /* If it worked, print the demangled name.  */\n \t  if (s != NULL)\n@@ -4339,7 +4368,13 @@ main (argc, argv)\n \t      free (s);\n \t    }\n \t  else\n-\t    fprintf (stderr, \"Failed: %s\\n\", argv[i]);\n+\t    {\n+#ifdef IN_GLIBCPP_V3\n+\t      fprintf (stderr, \"Failed: %s (status %d)\\n\", argv[i], status);\n+#else\n+\t      fprintf (stderr, \"Failed: %s\\n\", argv[i]);\n+#endif\n+\t    }\n \t}\n     }\n "}]}