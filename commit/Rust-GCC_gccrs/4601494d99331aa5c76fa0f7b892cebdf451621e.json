{"sha": "4601494d99331aa5c76fa0f7b892cebdf451621e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYwMTQ5NGQ5OTMzMWFhNWM3NmZhMGY3Yjg5MmNlYmRmNDUxNjIxZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-22T15:14:39Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-22T15:14:39Z"}, "message": "moxie.c (moxie_static_chain, [...]): New.\n\n        * config/moxie/moxie.c (moxie_static_chain,\n        moxie_asm_trampoline_template, moxie_trampoline_init,\n        TARGET_STATIC_CHAIN, TARGET_ASM_TRAMPOLINE_TEMPLATE,\n        TARGET_TRAMPOLINE_INIT): New.\n        * config/moxie/moxie.h (INITIALIZE_TRAMPOLINE): Move code to\n        moxie_trampoline_init.\n        (TRAMPOLINE_TEMPLATE): Move code to moxie_asm_trampoline_template.\n        (STATIC_CHAIN, STATIC_CHAIN_INCOMING): Remove.\n\nFrom-SVN: r152004", "tree": {"sha": "a174aa134bdde941d143b7cccf75e7e59e653d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a174aa134bdde941d143b7cccf75e7e59e653d3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4601494d99331aa5c76fa0f7b892cebdf451621e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4601494d99331aa5c76fa0f7b892cebdf451621e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4601494d99331aa5c76fa0f7b892cebdf451621e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4601494d99331aa5c76fa0f7b892cebdf451621e/comments", "author": null, "committer": null, "parents": [{"sha": "bdeb5f0c355d5f6d0d95798cd8c8de42ef80a853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdeb5f0c355d5f6d0d95798cd8c8de42ef80a853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdeb5f0c355d5f6d0d95798cd8c8de42ef80a853"}], "stats": {"total": 101, "additions": 65, "deletions": 36}, "files": [{"sha": "229a560f143b8c13150045c3d865fcec33f3f34d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4601494d99331aa5c76fa0f7b892cebdf451621e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4601494d99331aa5c76fa0f7b892cebdf451621e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4601494d99331aa5c76fa0f7b892cebdf451621e", "patch": "@@ -183,6 +183,15 @@\n \tmn10300_asm_trampoline_template.\n \t(INITIALIZE_TRAMPOLINE): Move code to mn10300_trampoline_init.\n \n+\t* config/moxie/moxie.c (moxie_static_chain,\n+\tmoxie_asm_trampoline_template, moxie_trampoline_init,\n+\tTARGET_STATIC_CHAIN, TARGET_ASM_TRAMPOLINE_TEMPLATE,\n+\tTARGET_TRAMPOLINE_INIT): New.\n+\t* config/moxie/moxie.h (INITIALIZE_TRAMPOLINE): Move code to\n+\tmoxie_trampoline_init.\n+\t(TRAMPOLINE_TEMPLATE): Move code to moxie_asm_trampoline_template.\n+\t(STATIC_CHAIN, STATIC_CHAIN_INCOMING): Remove.\n+\n 2009-09-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.c (bdesc_2arg): Fix CODE_FOR_vector_gt* codes"}, {"sha": "215bbdf75a318e1ada06b450a72d83259696bc9c", "filename": "gcc/config/moxie/moxie.c", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4601494d99331aa5c76fa0f7b892cebdf451621e/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4601494d99331aa5c76fa0f7b892cebdf451621e/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.c?ref=4601494d99331aa5c76fa0f7b892cebdf451621e", "patch": "@@ -453,6 +453,55 @@ moxie_arg_partial_bytes (CUMULATIVE_ARGS *cum,\n     return 0;\n }\n \n+/* Worker function for TARGET_STATIC_CHAIN.  */\n+\n+static rtx\n+moxie_static_chain (const_tree fndecl, bool incoming_p)\n+{\n+  rtx addr, mem;\n+\n+  if (DECL_NO_STATIC_CHAIN (fndecl))\n+    return NULL;\n+\n+  if (incoming_p)\n+    addr = plus_constant (arg_pointer_rtx, 2 * UNITS_PER_WORD);\n+  else\n+    addr = plus_constant (stack_pointer_rtx, -UNITS_PER_WORD);\n+\n+  mem = gen_rtx_MEM (Pmode, addr);\n+  MEM_NOTRAP_P (mem) = 1;\n+\n+  return mem;\n+}\n+\n+/* Worker function for TARGET_ASM_TRAMPOLINE_TEMPLATE.  */\n+\n+static void\n+moxie_asm_trampoline_template (FILE *f)\n+{\n+  fprintf (f, \"\\tpush  $sp, $r0\\n\");\n+  fprintf (f, \"\\tldi.l $r0, 0x0\\n\");\n+  fprintf (f, \"\\tsto.l 0x8($fp), $r0\\n\");\n+  fprintf (f, \"\\tpop   $sp, $r0\\n\");\n+  fprintf (f, \"\\tjmpa  0x0\\n\");\n+}\n+\n+/* Worker function for TARGET_TRAMPOLINE_INIT.  */\n+\n+static void\n+moxie_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n+{\n+  rtx mem, fnaddr = XEXP (DECL_RTL (fndecl), 0);\n+\n+  emit_block_move (m_tramp, assemble_trampoline_template (),\n+\t\t   GEN_INT (TRAMPOLINE_SIZE), BLOCK_OP_NORMAL);\n+\n+  mem = adjust_address (m_tramp, SImode, 4);\n+  emit_move_insn (mem, chain_value);\n+  mem = adjust_address (m_tramp, SImode, 18);\n+  emit_move_insn (mem, fnaddr);\n+}\n+\n /* The Global `targetm' Variable.  */\n \n /* Initialize the GCC target structure.  */\n@@ -485,6 +534,13 @@ moxie_arg_partial_bytes (CUMULATIVE_ARGS *cum,\n #undef TARGET_FRAME_POINTER_REQUIRED\n #define TARGET_FRAME_POINTER_REQUIRED hook_bool_void_true\n \n+#undef TARGET_STATIC_CHAIN\n+#define TARGET_STATIC_CHAIN moxie_static_chain\n+#undef TARGET_ASM_TRAMPOLINE_TEMPLATE\n+#define TARGET_ASM_TRAMPOLINE_TEMPLATE moxie_asm_trampoline_template\n+#undef TARGET_TRAMPOLINE_INIT\n+#define TARGET_TRAMPOLINE_INIT moxie_trampoline_init\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-moxie.h\""}, {"sha": "f1b77eaf0c26e62bd54f4763f44d21c9e275f2d7", "filename": "gcc/config/moxie/moxie.h", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4601494d99331aa5c76fa0f7b892cebdf451621e/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4601494d99331aa5c76fa0f7b892cebdf451621e/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.h?ref=4601494d99331aa5c76fa0f7b892cebdf451621e", "patch": "@@ -391,31 +391,6 @@ enum reg_class\n /* Alignment required for trampolines, in bits.  */\n #define TRAMPOLINE_ALIGNMENT 16\n \n-/* A C statement to initialize the variable parts of a trampoline.  ADDR is an\n-   RTX for the address of the trampoline; FNADDR is an RTX for the address of\n-   the nested function; STATIC_CHAIN is an RTX for the static chain value that\n-   should be passed to the function when it is called.  */\n-#define INITIALIZE_TRAMPOLINE(ADDR, FNADDR, STATIC_CHAIN)\t\t      \\\n-do\t\t\t\t\t\t\t\t\t      \\\n-{\t\t\t\t\t\t\t\t\t      \\\n-  emit_move_insn (gen_rtx_MEM (SImode,                                        \\\n-                               plus_constant (ADDR, 4)), STATIC_CHAIN);       \\\n-  emit_move_insn (gen_rtx_MEM (SImode, plus_constant (ADDR, 18)), FNADDR);    \\\n-} while (0);\n-\n-/* A C statement to output, on the stream FILE, assembler code for a\n-   block of data that contains the constant parts of a trampoline.\n-   This code should not include a label--the label is taken care of\n-   automatically.  */\n-#define TRAMPOLINE_TEMPLATE(FILE)\t       \t\\\n-{\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\tpush  $sp, $r0\\n\");         \\\n-  fprintf (FILE, \"\\tldi.l $r0, 0x0\\n\"); \t\\\n-  fprintf (FILE, \"\\tsto.l 0x8($fp), $r0\\n\");\t\\\n-  fprintf (FILE, \"\\tpop   $sp, $r0\\n\");\t\t\\\n-  fprintf (FILE, \"\\tjmpa  0x0\\n\");\t        \\\n-}\n-\n /* An alias for the machine mode for pointers.  */\n #define Pmode         SImode\n \n@@ -435,17 +410,6 @@ do\t\t\t\t\t\t\t\t\t      \\\n    access the function's argument list.  */\n #define ARG_POINTER_REGNUM MOXIE_QAP\n \n-/* If the static chain is passed in memory, these macros provide rtx\n-   giving 'mem' expressions that denote where they are stored.\n-   'STATIC_CHAIN' and 'STATIC_CHAIN_INCOMING' give the locations as\n-   seen by the calling and called functions, respectively.  */\n-\n-#define STATIC_CHAIN\t\t\t\t\t\t\t\\\n-  gen_rtx_MEM (Pmode, plus_constant (stack_pointer_rtx, -UNITS_PER_WORD))\n-\n-#define STATIC_CHAIN_INCOMING\t\t\t\t\t\t\\\n-  gen_rtx_MEM (Pmode, plus_constant (arg_pointer_rtx, 2 * UNITS_PER_WORD))\n-\n #define HARD_FRAME_POINTER_REGNUM MOXIE_FP\n \n #define ELIMINABLE_REGS\t\t\t\t\t\t\t\\"}]}