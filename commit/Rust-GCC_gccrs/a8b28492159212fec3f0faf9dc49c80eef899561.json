{"sha": "a8b28492159212fec3f0faf9dc49c80eef899561", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThiMjg0OTIxNTkyMTJmZWMzZjBmYWY5ZGM0OWM4MGVlZjg5OTU2MQ==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2006-06-05T08:56:49Z"}, "committer": {"name": "Victor Kaplansky", "email": "victork@gcc.gnu.org", "date": "2006-06-05T08:56:49Z"}, "message": "re PR tree-optimization/26360 (Autovectorization of char  -> int loop gets ICE)\n\nChangelog:\n        PR tree-optimization/26360\n        * tree-vectorizer.c (destroy_loop_vec_info): Remove (dead) pattern\n        stmts.\n\ntestsuite/Changelog:\n        PR tree-optimizations/26360\n        * gcc.dg/vect/vect.exp: Compile tests prefixed with \"no-tree-dce\"\n        with -fno-tree-dce.\n        * gcc.dg/vect/no-tree-dce-pr26360.c: New test.\n\n\n\nCo-Authored-By: Victor Kaplansky <victork@il.ibm.com>\n\nFrom-SVN: r114386", "tree": {"sha": "7b579571a919fca063460acd57256b51bbf4f7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b579571a919fca063460acd57256b51bbf4f7ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8b28492159212fec3f0faf9dc49c80eef899561", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b28492159212fec3f0faf9dc49c80eef899561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8b28492159212fec3f0faf9dc49c80eef899561", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b28492159212fec3f0faf9dc49c80eef899561/comments", "author": null, "committer": null, "parents": [{"sha": "6690a9e079bf15d086d2805d00fea0e228cd7db9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6690a9e079bf15d086d2805d00fea0e228cd7db9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6690a9e079bf15d086d2805d00fea0e228cd7db9"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "25d4311771489599f8c988dd4b1b60ae062fdfc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b28492159212fec3f0faf9dc49c80eef899561/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b28492159212fec3f0faf9dc49c80eef899561/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8b28492159212fec3f0faf9dc49c80eef899561", "patch": "@@ -1,3 +1,10 @@\n+2006-06-05  Dorit Nuzman  <dorit@il.ibm.com>\n+\t    Victor Kaplansky  <victork@il.ibm.com>\n+\n+        PR tree-optimization/26360\n+        * tree-vectorizer.c (destroy_loop_vec_info): Remove (dead) pattern\n+        stmts.\n+\n 2006-06-04  Roger Sayle  <roger@eyesopen.com>\n \t    Andrew Pinski  <pinskia@physics.uc.edu>\n "}, {"sha": "5327821839f3ea4e739d0f7d23e8e39c3a626076", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b28492159212fec3f0faf9dc49c80eef899561/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b28492159212fec3f0faf9dc49c80eef899561/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a8b28492159212fec3f0faf9dc49c80eef899561", "patch": "@@ -1,3 +1,11 @@\n+2006-06-05  Dorit Nuzman  <dorit@il.ibm.com>\n+            Victor Kaplansky  <victork@il.ibm.com>\n+\t    \n+        PR tree-optimizations/26360\n+        * gcc.dg/vect/vect.exp: Compile tests prefixed with \"no-tree-dce\"\n+        with -fno-tree-dce.\n+        * gcc.dg/vect/no-tree-dce-pr26360.c: New test.\n+\n 2006-06-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/14067"}, {"sha": "2873b5860ee758ef236866d8d5c0157b27694eda", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b28492159212fec3f0faf9dc49c80eef899561/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b28492159212fec3f0faf9dc49c80eef899561/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=a8b28492159212fec3f0faf9dc49c80eef899561", "patch": "@@ -115,6 +115,12 @@ lappend DEFAULT_VECTCFLAGS \"-fdump-tree-dceloop-details\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/dump-tree-dceloop-*.\\[cS\\]]]  \\\n         \"\" $DEFAULT_VECTCFLAGS\n \n+# -fno-tree-dce tests\n+set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n+lappend DEFAULT_VECTCFLAGS \"-fno-tree-dce\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/no-tree-dce-*.\\[cS\\]]]  \\\n+\t\"\" $DEFAULT_VECTCFLAGS\n+\n # With -Os\n lappend DEFAULT_VECTCFLAGS \"-Os\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/Os-vect-*.\\[cS\\]]]  \\"}, {"sha": "c0d783474de152cdfbbc69f97d215ebfe9813264", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b28492159212fec3f0faf9dc49c80eef899561/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b28492159212fec3f0faf9dc49c80eef899561/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=a8b28492159212fec3f0faf9dc49c80eef899561", "patch": "@@ -1467,18 +1467,36 @@ destroy_loop_vec_info (loop_vec_info loop_vinfo)\n           set_stmt_info (ann, NULL);\n         }\n \n-      for (si = bsi_start (bb); !bsi_end_p (si); bsi_next (&si))\n+      for (si = bsi_start (bb); !bsi_end_p (si); )\n \t{\n \t  tree stmt = bsi_stmt (si);\n \t  stmt_ann_t ann = stmt_ann (stmt);\n \t  stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n \n \t  if (stmt_info)\n \t    {\n+\t      /* Check if this is a \"pattern stmt\" (introduced by the \n+\t\t vectorizer during the pattern recognition pass).  */\n+\t      bool remove_stmt_p = false;\n+\t      tree orig_stmt = STMT_VINFO_RELATED_STMT (stmt_info);\n+\t      if (orig_stmt)\n+\t\t{\n+\t\t  stmt_vec_info orig_stmt_info = vinfo_for_stmt (orig_stmt);\n+\t\t  if (orig_stmt_info\n+\t\t      && STMT_VINFO_IN_PATTERN_P (orig_stmt_info))\n+\t\t    remove_stmt_p = true; \n+\t\t}\n+\t\t\t\n+\t      /* Free stmt_vec_info.  */\n \t      VEC_free (dr_p, heap, STMT_VINFO_SAME_ALIGN_REFS (stmt_info));\n \t      free (stmt_info);\n \t      set_stmt_info ((tree_ann_t)ann, NULL);\n+\n+\t      /* Remove dead \"pattern stmts\".  */\n+\t      if (remove_stmt_p)\n+\t        bsi_remove (&si, true);\n \t    }\n+\t  bsi_next (&si);\n \t}\n     }\n "}]}