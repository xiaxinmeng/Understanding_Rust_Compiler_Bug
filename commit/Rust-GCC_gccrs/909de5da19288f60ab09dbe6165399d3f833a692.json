{"sha": "909de5da19288f60ab09dbe6165399d3f833a692", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA5ZGU1ZGExOTI4OGY2MGFiMDlkYmU2MTY1Mzk5ZDNmODMzYTY5Mg==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-03-22T21:59:04Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-03-22T21:59:04Z"}, "message": "cpplib.h (struct cpp_options): New member, warn_endif_labels.\n\n2002-03-22  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* cpplib.h (struct cpp_options):  New member, warn_endif_labels.\n\t* cppinit.c (cpp_create_reader):  On by default.\n\t(cpp_handle_option):  Handle -W[no-]endif-labels.\n\t(cpp_post_options):  Also enable if -pedantic.\n\t* cpplib.c (do_else):  Use it.\n\t(do_endif):  Likewise.\n\t* doc/cppopts.texi:  Document new option.\n\t* doc/invoke.texi:  Document new option.\n\nFrom-SVN: r51190", "tree": {"sha": "d57dbbd51916727143458d291e8952b43c8151c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d57dbbd51916727143458d291e8952b43c8151c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/909de5da19288f60ab09dbe6165399d3f833a692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/909de5da19288f60ab09dbe6165399d3f833a692", "html_url": "https://github.com/Rust-GCC/gccrs/commit/909de5da19288f60ab09dbe6165399d3f833a692", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/909de5da19288f60ab09dbe6165399d3f833a692/comments", "author": null, "committer": null, "parents": [{"sha": "4299b4e14e26a0c74563843b627ff707d7be0406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4299b4e14e26a0c74563843b627ff707d7be0406", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4299b4e14e26a0c74563843b627ff707d7be0406"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "09ea7641f6257f52036c87d40fa94f099e21b30c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=909de5da19288f60ab09dbe6165399d3f833a692", "patch": "@@ -1,3 +1,14 @@\n+2002-03-22  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* cpplib.h (struct cpp_options):  New member, warn_endif_labels.\n+\t* cppinit.c (cpp_create_reader):  On by default.\n+\t(cpp_handle_option):  Handle -W[no-]endif-labels.\n+\t(cpp_post_options):  Also enable if -pedantic.\n+\t* cpplib.c (do_else):  Use it.\n+\t(do_endif):  Likewise.\n+\t* doc/cppopts.texi:  Document new option.\n+\t* doc/invoke.texi:  Document new option.\n+\n 2002-03-22  Lars Brinkhoff  <lars@nocrew.org>\n \n \t* config/i386/i386.c, config/i386/i386.md: Change all occurences"}, {"sha": "d3d59ef4874eeb1eeb033f1a74223cc7275205dc", "filename": "gcc/cppinit.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=909de5da19288f60ab09dbe6165399d3f833a692", "patch": "@@ -491,6 +491,7 @@ cpp_create_reader (lang)\n   CPP_OPTION (pfile, show_column) = 1;\n   CPP_OPTION (pfile, tabstop) = 8;\n   CPP_OPTION (pfile, operator_names) = 1;\n+  CPP_OPTION (pfile, warn_endif_labels) = 1;\n #if DEFAULT_SIGNED_CHAR\n   CPP_OPTION (pfile, signed_char) = 1;\n #else\n@@ -1735,6 +1736,8 @@ cpp_handle_option (pfile, argc, argv, ignore)\n \t    CPP_OPTION (pfile, warnings_are_errors) = 1;\n \t  else if (!strcmp (argv[i], \"-Wsystem-headers\"))\n \t    CPP_OPTION (pfile, warn_system_headers) = 1;\n+\t  else if (!strcmp (argv[i], \"-Wendif-labels\"))\n+\t    CPP_OPTION (pfile, warn_endif_labels) = 1;\n \t  else if (!strcmp (argv[i], \"-Wno-traditional\"))\n \t    CPP_OPTION (pfile, warn_traditional) = 0;\n \t  else if (!strcmp (argv[i], \"-Wno-trigraphs\"))\n@@ -1751,6 +1754,8 @@ cpp_handle_option (pfile, argc, argv, ignore)\n \t    CPP_OPTION (pfile, warnings_are_errors) = 0;\n \t  else if (!strcmp (argv[i], \"-Wno-system-headers\"))\n \t    CPP_OPTION (pfile, warn_system_headers) = 0;\n+\t  else if (!strcmp (argv[i], \"-Wno-endif-labels\"))\n+\t    CPP_OPTION (pfile, warn_endif_labels) = 0;\n \t  else if (! ignore)\n \t    return i;\n \t  break;\n@@ -1832,6 +1837,10 @@ cpp_post_options (pfile)\n        || CPP_OPTION (pfile, deps_file)\n        || CPP_OPTION (pfile, deps_phony_targets)))\n     cpp_fatal (pfile, \"you must additionally specify either -M or -MM\");\n+\n+  /* Some things should always be on in pedantic mode.  */\n+  if (CPP_OPTION (pfile, pedantic) == 1)\n+    CPP_OPTION (pfile, warn_endif_labels) = 1;\n }\n \n /* Set up dependency-file output.  On exit, if print_deps is non-zero"}, {"sha": "9a6b077f24b40e1747986b87d4ed8dcd1ed537a2", "filename": "gcc/cpplib.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=909de5da19288f60ab09dbe6165399d3f833a692", "patch": "@@ -1375,7 +1375,7 @@ do_else (pfile)\n       ifs->mi_cmacro = 0;\n \n       /* Only check EOL if was not originally skipping.  */\n-      if (!ifs->was_skipping)\n+      if (!ifs->was_skipping && CPP_OPTION (pfile, warn_endif_labels))\n \tcheck_eol (pfile);\n     }\n }\n@@ -1430,7 +1430,7 @@ do_endif (pfile)\n   else\n     {\n       /* Only check EOL if was not originally skipping.  */\n-      if (!ifs->was_skipping)\n+      if (!ifs->was_skipping && CPP_OPTION (pfile, warn_endif_labels))\n \tcheck_eol (pfile);\n \n       /* If potential control macro, we go back outside again.  */"}, {"sha": "783b25835b06764850a6483691d0eab1b3ad83e8", "filename": "gcc/cpplib.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=909de5da19288f60ab09dbe6165399d3f833a692", "patch": "@@ -308,6 +308,9 @@ struct cpp_options\n      traditional C.  */\n   unsigned char warn_traditional;\n \n+  /* Nonzero means warn about text after an #endif (or #else).  */\n+  unsigned char warn_endif_labels;\n+\n   /* Nonzero means turn warnings into errors.  */\n   unsigned char warnings_are_errors;\n "}, {"sha": "7ab651b7251d3309c52e1b81fa8540088456d90b", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=909de5da19288f60ab09dbe6165399d3f833a692", "patch": "@@ -110,6 +110,23 @@ Warn whenever an identifier which is not a macro is encountered in an\n @samp{#if} directive, outside of @samp{defined}.  Such identifiers are\n replaced with zero.\n \n+@item -Wendif-labels\n+@opindex Wendif-labels\n+Warn whenever an @samp{#else} or an @samp{#endif} are followed by text.\n+This usually happens in code of the form\n+\n+@smallexample\n+#if FOO\n+@dots{}\n+#else FOO\n+@dots{}\n+#endif FOO\n+@end smallexample\n+\n+@noindent\n+The second and third @code{FOO} should be in comments, but often are not\n+in older programs.  This warning is on by default.\n+\n @item -Werror\n @opindex Werror\n Make all warnings into hard errors.  Source code which triggers warnings"}, {"sha": "7e6b714c9b5e0ee2da7318efbd2dcf9e78da0e50", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/909de5da19288f60ab09dbe6165399d3f833a692/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=909de5da19288f60ab09dbe6165399d3f833a692", "patch": "@@ -220,7 +220,7 @@ in the following sections.\n -Wimplicit  -Wimplicit-int  @gol\n -Wimplicit-function-declaration @gol\n -Werror-implicit-function-declaration @gol\n--Wimport  -Winline @gol\n+-Wimport  -Winline -Wno-endif-labels @gol\n -Wlarger-than-@var{len}  -Wlong-long @gol\n -Wmain  -Wmissing-braces  -Wmissing-declarations @gol\n -Wmissing-format-attribute  -Wmissing-noreturn @gol\n@@ -2384,6 +2384,10 @@ conversion warnings, for the full set use @option{-Wconversion}.\n @opindex Wundef\n Warn if an undefined identifier is evaluated in an @samp{#if} directive.\n \n+@item -Wendif-labels\n+@opindex Wendif-labels\n+Warn whenever an @samp{#else} or an @samp{#endif} are followed by text.\n+\n @item -Wshadow\n @opindex Wshadow\n Warn whenever a local variable shadows another local variable, parameter or"}]}