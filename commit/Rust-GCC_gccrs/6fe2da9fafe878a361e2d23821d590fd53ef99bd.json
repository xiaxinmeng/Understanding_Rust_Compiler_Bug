{"sha": "6fe2da9fafe878a361e2d23821d590fd53ef99bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZlMmRhOWZhZmU4NzhhMzYxZTJkMjM4MjFkNTkwZmQ1M2VmOTliZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2018-11-07T12:25:35Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-11-07T12:25:35Z"}, "message": "tree.c (fld_type_variant_equal_p): Skip TYPE_ALIGN check when building incomplete variant of complete type.\n\n\n\t* tree.c (fld_type_variant_equal_p): Skip TYPE_ALIGN check when\n\tbuilding incomplete variant of complete type.\n\t(fld_type_variant): Do not copy TYPE_ALIGN when building incomplete\n\tvariant of complete type.\n\nFrom-SVN: r265872", "tree": {"sha": "e41f801007654b326ab01c7be0297cea99e0033b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e41f801007654b326ab01c7be0297cea99e0033b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fe2da9fafe878a361e2d23821d590fd53ef99bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fe2da9fafe878a361e2d23821d590fd53ef99bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fe2da9fafe878a361e2d23821d590fd53ef99bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fe2da9fafe878a361e2d23821d590fd53ef99bd/comments", "author": null, "committer": null, "parents": [{"sha": "f70b5dbfa111f03dd31a3e3bd2e3d01eecdc06c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70b5dbfa111f03dd31a3e3bd2e3d01eecdc06c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f70b5dbfa111f03dd31a3e3bd2e3d01eecdc06c3"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "f8295d5e86f9412a3c38c8b503b051297c285a5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fe2da9fafe878a361e2d23821d590fd53ef99bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fe2da9fafe878a361e2d23821d590fd53ef99bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fe2da9fafe878a361e2d23821d590fd53ef99bd", "patch": "@@ -1,3 +1,10 @@\n+2018-11-07  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree.c (fld_type_variant_equal_p): Skip TYPE_ALIGN check when\n+\tbuilding incomplete variant of complete type.\n+\t(fld_type_variant): Do not copy TYPE_ALIGN when building incomplete\n+\tvariant of complete type.\n+\n 2018-11-07  Chenghua Xu  <paul.hua.gm@gmail.com>\n \n \t* config/mips/mips.c: Fix typo in documentation of"}, {"sha": "b1f4ecf5db9f543952111b2c4474745c0ef56d73", "filename": "gcc/tree.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fe2da9fafe878a361e2d23821d590fd53ef99bd/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fe2da9fafe878a361e2d23821d590fd53ef99bd/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6fe2da9fafe878a361e2d23821d590fd53ef99bd", "patch": "@@ -5106,12 +5106,15 @@ static bool\n fld_type_variant_equal_p (tree t, tree v)\n {\n   if (TYPE_QUALS (t) != TYPE_QUALS (v)\n-      || TYPE_ALIGN (t) != TYPE_ALIGN (v)\n+      /* We want to match incomplete variants with complete types.\n+\t In this case we need to ignore alignment.   */\n+      || ((!RECORD_OR_UNION_TYPE_P (t) || COMPLETE_TYPE_P (v))\n+\t  && TYPE_ALIGN (t) != TYPE_ALIGN (v))\n       || fld_simplified_type_name (t) != fld_simplified_type_name (v)\n       || !attribute_list_equal (TYPE_ATTRIBUTES (t),\n \t\t\t        TYPE_ATTRIBUTES (v)))\n     return false;\n-\n+ \n   return true;\n }\n \n@@ -5134,7 +5137,10 @@ fld_type_variant (tree first, tree t, struct free_lang_data_d *fld)\n   TYPE_NAME (v) = TYPE_NAME (t);\n   TYPE_ATTRIBUTES (v) = TYPE_ATTRIBUTES (t);\n   TYPE_CANONICAL (v) = TYPE_CANONICAL (t);\n-  SET_TYPE_ALIGN (v, TYPE_ALIGN (t));\n+  /* Variants of incomplete types should have alignment \n+     set to BITS_PER_UNIT.  Do not copy the actual alignment.  */\n+  if (!RECORD_OR_UNION_TYPE_P (v) || COMPLETE_TYPE_P (v))\n+    SET_TYPE_ALIGN (v, TYPE_ALIGN (t));\n   gcc_checking_assert (fld_type_variant_equal_p (t,v));\n   add_tree_to_fld_list (v, fld);\n   return v;"}]}