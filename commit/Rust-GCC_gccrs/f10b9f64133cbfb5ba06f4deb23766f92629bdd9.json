{"sha": "f10b9f64133cbfb5ba06f4deb23766f92629bdd9", "node_id": "C_kwDOANBUbNoAKGYxMGI5ZjY0MTMzY2JmYjViYTA2ZjRkZWIyMzc2NmY5MjYyOWJkZDk", "commit": {"author": {"name": "Arsen Arsenovic", "email": "arsen@aarsen.me", "date": "2022-10-17T06:58:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-17T06:59:17Z"}, "message": "elf: ELF toolchain --without-{headers, newlib} should provide stdint.h\n\nstdint.h is considered a freestanding headers by C, and a valid stdint.h\nis required for certain parts of libstdc++' configuration, so we should\nsimply provide one when we have no other way (i.e. newlib or\nuser-specified sysroot) of getting one.\n\n\t* config.gcc: --target=*-elf --without-{newlib,headers} should\n\tprovide stdint.h.", "tree": {"sha": "e8bc2ff4f9b4c85f6f2a2febf9e4965aa615f044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8bc2ff4f9b4c85f6f2a2febf9e4965aa615f044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f10b9f64133cbfb5ba06f4deb23766f92629bdd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f10b9f64133cbfb5ba06f4deb23766f92629bdd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f10b9f64133cbfb5ba06f4deb23766f92629bdd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f10b9f64133cbfb5ba06f4deb23766f92629bdd9/comments", "author": {"login": "ArsenArsen", "id": 7805050, "node_id": "MDQ6VXNlcjc4MDUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7805050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArsenArsen", "html_url": "https://github.com/ArsenArsen", "followers_url": "https://api.github.com/users/ArsenArsen/followers", "following_url": "https://api.github.com/users/ArsenArsen/following{/other_user}", "gists_url": "https://api.github.com/users/ArsenArsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArsenArsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArsenArsen/subscriptions", "organizations_url": "https://api.github.com/users/ArsenArsen/orgs", "repos_url": "https://api.github.com/users/ArsenArsen/repos", "events_url": "https://api.github.com/users/ArsenArsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ArsenArsen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd206f0e95fb6f41b96eaaaab1dc0c30378e5e08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd206f0e95fb6f41b96eaaaab1dc0c30378e5e08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd206f0e95fb6f41b96eaaaab1dc0c30378e5e08"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "2af30b4a6ecced56a0e288b42246304120c890da", "filename": "gcc/config.gcc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f10b9f64133cbfb5ba06f4deb23766f92629bdd9/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f10b9f64133cbfb5ba06f4deb23766f92629bdd9/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f10b9f64133cbfb5ba06f4deb23766f92629bdd9", "patch": "@@ -1082,6 +1082,11 @@ case ${target} in\n   # Assume that newlib is being used and so __cxa_atexit is provided.\n   default_use_cxa_atexit=yes\n   use_gcc_stdint=wrap\n+\n+  case \"${with_newlib}-${with_headers}\" in\n+  no-no) use_gcc_stdint=provide ;;\n+  *) ;;\n+  esac\n   ;;\n esac\n "}]}