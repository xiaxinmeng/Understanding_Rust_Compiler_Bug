{"sha": "f7aeb823d9b0dee572015810cdb58103e91758f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhZWI4MjNkOWIwZGVlNTcyMDE1ODEwY2RiNTgxMDNlOTE3NThmMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-03T19:12:08Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-12-03T20:40:09Z"}, "message": "c++: uninstantiated template friends\n\ntemplate friends need to be recognized by module streaming and\nassociated with the befriending class.  but their context is that of\nthe friend (a namespace or other class).  This adds a flag to mark\nsuch templates, and uses their DECL_CHAIN to point at the befriender.\n\n\tgcc/cp\n\t* cp-tree.h (DECL_UNINSTANTIATED_TEMPLATE_FRIEND): New.\n\t* pt.c (push_template_decl): Set it.\n\t(tsubst_friend_function): Clear it.", "tree": {"sha": "57293338b9480879708331ced711d7dd83045e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57293338b9480879708331ced711d7dd83045e6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7aeb823d9b0dee572015810cdb58103e91758f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7aeb823d9b0dee572015810cdb58103e91758f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7aeb823d9b0dee572015810cdb58103e91758f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7aeb823d9b0dee572015810cdb58103e91758f3/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3089f5feef36810c625b5813370a97b4ecc841f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3089f5feef36810c625b5813370a97b4ecc841f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3089f5feef36810c625b5813370a97b4ecc841f8"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "4db5012844305d0e7372f79caadd616a45e006aa", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aeb823d9b0dee572015810cdb58103e91758f3/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aeb823d9b0dee572015810cdb58103e91758f3/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=f7aeb823d9b0dee572015810cdb58103e91758f3", "patch": "@@ -545,6 +545,7 @@ extern GTY(()) tree cp_global_trees[CPTI_MAX];\n       DECL_ANON_UNION_VAR_P (in a VAR_DECL)\n       DECL_SELF_REFERENCE_P (in a TYPE_DECL)\n       DECL_INVALID_OVERRIDER_P (in a FUNCTION_DECL)\n+      DECL_UNINSTANIATED_TEMPLATE_FRIEND_P (in TEMPLATE_DECL)\n    5: DECL_INTERFACE_KNOWN.\n    6: DECL_THIS_STATIC (in VAR_DECL, FUNCTION_DECL or PARM_DECL)\n       DECL_FIELD_IS_BASE (in FIELD_DECL)\n@@ -3161,6 +3162,13 @@ struct GTY(()) lang_decl {\n   (DECL_LANG_SPECIFIC (FUNCTION_DECL_CHECK (NODE)) \\\n    ->u.base.friend_or_tls)\n \n+/* True of a TEMPLATE_DECL that is a template class friend.  Such\n+   decls are not pushed until instantiated (as they may depend on\n+   parameters of the befriending class).  DECL_CHAIN is the\n+   befriending class.  */\n+#define DECL_UNINSTANTIATED_TEMPLATE_FRIEND_P(NODE) \\\n+  (DECL_LANG_FLAG_4 (TEMPLATE_DECL_CHECK (NODE)))\n+\n /* Nonzero if the thread-local variable was declared with __thread as\n    opposed to thread_local.  */\n #define DECL_GNU_TLS_P(NODE)\t\t\t\t\\"}, {"sha": "08931823d576052b8788c20ecf2d57161bb7b49e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aeb823d9b0dee572015810cdb58103e91758f3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aeb823d9b0dee572015810cdb58103e91758f3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f7aeb823d9b0dee572015810cdb58103e91758f3", "patch": "@@ -22,7 +22,9 @@ along with GCC; see the file COPYING3.  If not see\n /* Known bugs or deficiencies include:\n \n      all methods must be provided in header files; can't use a source\n-     file that contains only the method templates and \"just win\".  */\n+     file that contains only the method templates and \"just win\".\n+\n+     Fixed by: C++20 modules.  */\n \n #include \"config.h\"\n #include \"system.h\"\n@@ -6044,6 +6046,14 @@ push_template_decl (tree decl, bool is_friend)\n \t      tmpl = NULL_TREE;\n \t    }\n \t}\n+      else if (is_friend)\n+\t{\n+\t  /* Record this decl as belonging to the current class.  It's\n+\t     not chained onto anything else.  */\n+\t  DECL_UNINSTANTIATED_TEMPLATE_FRIEND_P (tmpl) = true;\n+\t  gcc_checking_assert (!DECL_CHAIN (tmpl));\n+\t  DECL_CHAIN (tmpl) = current_scope ();\n+\t}\n     }\n   else if (tmpl)\n     /* The type may have been completed, or (erroneously) changed.  */\n@@ -11053,6 +11063,7 @@ tsubst_friend_function (tree decl, tree args)\n   DECL_USE_TEMPLATE (new_friend) = 0;\n   if (TREE_CODE (new_friend) == TEMPLATE_DECL)\n     {\n+      DECL_UNINSTANTIATED_TEMPLATE_FRIEND_P (new_friend) = false;\n       DECL_USE_TEMPLATE (DECL_TEMPLATE_RESULT (new_friend)) = 0;\n       DECL_SAVED_TREE (DECL_TEMPLATE_RESULT (new_friend))\n \t= DECL_SAVED_TREE (DECL_TEMPLATE_RESULT (decl));"}]}