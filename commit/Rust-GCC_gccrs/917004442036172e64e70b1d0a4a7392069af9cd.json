{"sha": "917004442036172e64e70b1d0a4a7392069af9cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE3MDA0NDQyMDM2MTcyZTY0ZTcwYjFkMGE0YTczOTIwNjlhZjljZA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2001-08-08T10:38:57Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2001-08-08T10:38:57Z"}, "message": "Make cselib_subst_to_values global.\n\nFrom-SVN: r44717", "tree": {"sha": "7400c2594762a88011f7c77c8ed35b1d7229f9df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7400c2594762a88011f7c77c8ed35b1d7229f9df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/917004442036172e64e70b1d0a4a7392069af9cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917004442036172e64e70b1d0a4a7392069af9cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/917004442036172e64e70b1d0a4a7392069af9cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917004442036172e64e70b1d0a4a7392069af9cd/comments", "author": null, "committer": null, "parents": [{"sha": "4b6c5340748f9914998e4beafe3832acfe5d8aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6c5340748f9914998e4beafe3832acfe5d8aae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6c5340748f9914998e4beafe3832acfe5d8aae"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "aa78d55115cf5cc51406507b0bba81621fe7eb55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917004442036172e64e70b1d0a4a7392069af9cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917004442036172e64e70b1d0a4a7392069af9cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=917004442036172e64e70b1d0a4a7392069af9cd", "patch": "@@ -15,6 +15,11 @@\n \t* sched-rgn.c (rgn_sched_info): Likewise.\n \t* Makefile.in (sched-deps.o): Update dependencies.\n \n+\t* cselib.h (cselib_subst_to_values): Declare.\n+\t* cselib.c (cselib_subst_to_values): No longer static.  Allow MEMs\n+\tthat have no value and autoincs to be handled by generating a new\n+\tdummy value.\n+\t\n 2001-08-08  Graham Stott  <grahams@redhat.com>\n \n \t* final.c (shorten_branches): Update the INSN_ADDRESSES of insns"}, {"sha": "89a274f1e14dac5a9a9549731d266fb7eead4315", "filename": "gcc/cselib.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917004442036172e64e70b1d0a4a7392069af9cd/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917004442036172e64e70b1d0a4a7392069af9cd/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=917004442036172e64e70b1d0a4a7392069af9cd", "patch": "@@ -60,7 +60,6 @@ static cselib_val *new_cselib_val\tPARAMS ((unsigned int,\n static void add_mem_for_addr\t\tPARAMS ((cselib_val *, cselib_val *,\n \t\t\t\t\t\t rtx));\n static cselib_val *cselib_lookup_mem\tPARAMS ((rtx, int));\n-static rtx cselib_subst_to_values\tPARAMS ((rtx));\n static void cselib_invalidate_regno\tPARAMS ((unsigned int,\n \t\t\t\t\t\t enum machine_mode));\n static int cselib_mem_conflict_p\tPARAMS ((rtx, rtx));\n@@ -765,7 +764,7 @@ cselib_lookup_mem (x, create)\n    X isn't actually modified; if modifications are needed, new rtl is\n    allocated.  However, the return value can share rtl with X.  */\n \n-static rtx\n+rtx\n cselib_subst_to_values (x)\n      rtx x;\n {\n@@ -788,7 +787,11 @@ cselib_subst_to_values (x)\n     case MEM:\n       e = cselib_lookup_mem (x, 0);\n       if (! e)\n-\tabort ();\n+\t{\n+\t  /* This happens for autoincrements.  Assign a value that doesn't\n+\t     match any other.  */\n+\t  e = new_cselib_val (++next_unknown_value, GET_MODE (x));\n+\t}\n       return e->u.val_rtx;\n \n       /* CONST_DOUBLEs must be special-cased here so that we won't try to\n@@ -797,6 +800,15 @@ cselib_subst_to_values (x)\n     case CONST_INT:\n       return x;\n \n+    case POST_INC:\n+    case PRE_INC:\n+    case POST_DEC:\n+    case PRE_DEC:\n+    case POST_MODIFY:\n+    case PRE_MODIFY:\n+      e = new_cselib_val (++next_unknown_value, GET_MODE (x));\n+      return e->u.val_rtx;\n+      \n     default:\n       break;\n     }"}, {"sha": "a3f7ee9c799a55615078a51727802b9620461e62", "filename": "gcc/cselib.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917004442036172e64e70b1d0a4a7392069af9cd/gcc%2Fcselib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917004442036172e64e70b1d0a4a7392069af9cd/gcc%2Fcselib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.h?ref=917004442036172e64e70b1d0a4a7392069af9cd", "patch": "@@ -65,3 +65,4 @@ extern void cselib_finish\t\tPARAMS ((void));\n extern void cselib_process_insn\t\tPARAMS ((rtx));\n extern int rtx_equal_for_cselib_p\tPARAMS ((rtx, rtx));\n extern int references_value_p\t\tPARAMS ((rtx, int));\n+extern rtx cselib_subst_to_values\tPARAMS ((rtx));"}]}