{"sha": "575643d56cd35107e7352060f420e93eda8282d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1NjQzZDU2Y2QzNTEwN2U3MzUyMDYwZjQyMGU5M2VkYTgyODJkNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-09-05T08:39:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-09-05T08:39:42Z"}, "message": "re PR tree-optimization/28900 (ICE verify_stmts failed (invalid operand to unary operator))\n\n2006-09-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/28900\n\t* tree-if-conv.c (find_phi_replacement_condition): Gimplify\n\tcompound conditional before creating COND_EXPR condition.\n\n\t* gcc.dg/torture/pr28900.c: New testcase\n\nFrom-SVN: r116697", "tree": {"sha": "1d8da7d4ffe531ba692eaaf37c1c19d211862241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d8da7d4ffe531ba692eaaf37c1c19d211862241"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/575643d56cd35107e7352060f420e93eda8282d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575643d56cd35107e7352060f420e93eda8282d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575643d56cd35107e7352060f420e93eda8282d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575643d56cd35107e7352060f420e93eda8282d5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2db922002d6d95cc0fc2f7965c9a5ba81c6cf5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2db922002d6d95cc0fc2f7965c9a5ba81c6cf5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2db922002d6d95cc0fc2f7965c9a5ba81c6cf5a"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "ba5a9e0d2d0e04f2dbb3ebca3a50e4882f84ed0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575643d56cd35107e7352060f420e93eda8282d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575643d56cd35107e7352060f420e93eda8282d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=575643d56cd35107e7352060f420e93eda8282d5", "patch": "@@ -1,3 +1,9 @@\n+2006-09-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/28900\n+\t* tree-if-conv.c (find_phi_replacement_condition): Gimplify\n+\tcompound conditional before creating COND_EXPR condition.\n+\n 2006-09-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/28905"}, {"sha": "ac55cac729d4a3d87854f2556b85927e0e79c4a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575643d56cd35107e7352060f420e93eda8282d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575643d56cd35107e7352060f420e93eda8282d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=575643d56cd35107e7352060f420e93eda8282d5", "patch": "@@ -1,3 +1,8 @@\n+2006-09-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/28900\n+\t* gcc.dg/torture/pr28900.c: New testcase\n+\n 2006-09-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/28905"}, {"sha": "75555f46ec0d40df5dd61b26a844d653efaac982", "filename": "gcc/testsuite/gcc.dg/torture/pr28900.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575643d56cd35107e7352060f420e93eda8282d5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28900.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575643d56cd35107e7352060f420e93eda8282d5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28900.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr28900.c?ref=575643d56cd35107e7352060f420e93eda8282d5", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ftree-vectorize\" } */\n+\n+int synths_ ( float * rc)\n+{\n+  float r1, r2;\n+  int i;\n+  for (i = 0; i < 128; ++i)\n+    {\n+      r2 = rc[i];\n+      r1 = ((r2) <= (.99f) ? (r2) : (.99f));\n+      rc[i] = ((r1) >= (-.99f) ? (r1) : (-.99f));\n+    }\n+}\n+"}, {"sha": "6e16a40a9c360c0fd369acda0a444c5c8b20cb5e", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575643d56cd35107e7352060f420e93eda8282d5/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575643d56cd35107e7352060f420e93eda8282d5/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=575643d56cd35107e7352060f420e93eda8282d5", "patch": "@@ -666,7 +666,7 @@ find_phi_replacement_condition (struct loop *loop,\n {\n   basic_block first_bb = NULL;\n   basic_block second_bb = NULL;\n-  tree tmp_cond;\n+  tree tmp_cond, new_stmts;\n \n   gcc_assert (EDGE_COUNT (bb->preds) == 2);\n   first_bb = (EDGE_PRED (bb, 0))->src;\n@@ -732,6 +732,9 @@ find_phi_replacement_condition (struct loop *loop,\n      value as condition. Various targets use different means to communicate\n      condition in vector compare operation. Using gimple value allows compiler\n      to emit vector compare and select RTL without exposing compare's result.  */\n+  *cond = force_gimple_operand (*cond, &new_stmts, false, NULL_TREE);\n+  if (new_stmts)\n+    bsi_insert_before (bsi, new_stmts, BSI_SAME_STMT);\n   if (!is_gimple_reg (*cond) && !is_gimple_condexpr (*cond))\n     {\n       tree new_stmt;"}]}