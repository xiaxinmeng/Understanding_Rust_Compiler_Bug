{"sha": "4088b790cc40b0fbcf12bafd1e3ef822c976a702", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA4OGI3OTBjYzQwYjBmYmNmMTJiYWZkMWUzZWY4MjJjOTc2YTcwMg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-11-14T11:22:12Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-11-14T11:22:12Z"}, "message": "re PR sanitizer/63839 (ICE: tree check: expected ssa_name, have var_decl in simplify_builtin_call, at tree-ssa-forwprop.c:1441 with -fsanitize=unreachable)\n\n\tPR sanitizer/63839\n\t* asan.c (ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST,\n\tATTR_COLD_CONST_NORETURN_NOTHROW_LEAF_LIST): Define.\n\t* builtin-attrs.def (ATTR_COLD_CONST_NORETURN_NOTHROW_LEAF_LIST):\n\tDefine.\n\t* builtins.c (fold_builtin_0): Don't include ubsan.h.  Don't\n\tinstrument BUILT_IN_UNREACHABLE here.\n\t* sanitizer.def (BUILT_IN_UBSAN_HANDLE_BUILTIN_UNREACHABLE): Make\n\tconst.\n\t* sanopt.c (pass_sanopt::execute): Instrument BUILT_IN_UNREACHABLE.\n\t* tree-ssa-ccp.c (optimize_unreachable): Bail out if\n\tSANITIZE_UNREACHABLE.\n\t* ubsan.c (ubsan_instrument_unreachable): Rewrite for GIMPLE.\n\t* ubsan.h (ubsan_instrument_unreachable): Adjust declaration.\ntestsuite/\n\t* c-c++-common/ubsan/pr63839.c: New test.\n\t* c-c++-common/ubsan/unreachable-2.c: New test.\n\nFrom-SVN: r217553", "tree": {"sha": "f5208d057eaf4ec81d4adff4f52bce7cd091e6de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5208d057eaf4ec81d4adff4f52bce7cd091e6de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4088b790cc40b0fbcf12bafd1e3ef822c976a702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4088b790cc40b0fbcf12bafd1e3ef822c976a702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4088b790cc40b0fbcf12bafd1e3ef822c976a702", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4088b790cc40b0fbcf12bafd1e3ef822c976a702/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba067536a7c03b18bb8dcb5bdf3126d2997dafda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba067536a7c03b18bb8dcb5bdf3126d2997dafda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba067536a7c03b18bb8dcb5bdf3126d2997dafda"}], "stats": {"total": 126, "additions": 106, "deletions": 20}, "files": [{"sha": "58efc772d66dea789038b008eee710abad617b95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -1,3 +1,20 @@\n+2014-11-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/63839\n+\t* asan.c (ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST,\n+\tATTR_COLD_CONST_NORETURN_NOTHROW_LEAF_LIST): Define.\n+\t* builtin-attrs.def (ATTR_COLD_CONST_NORETURN_NOTHROW_LEAF_LIST):\n+\tDefine.\n+\t* builtins.c (fold_builtin_0): Don't include ubsan.h.  Don't\n+\tinstrument BUILT_IN_UNREACHABLE here.\n+\t* sanitizer.def (BUILT_IN_UBSAN_HANDLE_BUILTIN_UNREACHABLE): Make\n+\tconst.\n+\t* sanopt.c (pass_sanopt::execute): Instrument BUILT_IN_UNREACHABLE.\n+\t* tree-ssa-ccp.c (optimize_unreachable): Bail out if\n+\tSANITIZE_UNREACHABLE.\n+\t* ubsan.c (ubsan_instrument_unreachable): Rewrite for GIMPLE.\n+\t* ubsan.h (ubsan_instrument_unreachable): Adjust declaration.\n+\n 2014-11-14  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/rs6000/vector.md (vec_shl_<mode>): Remove."}, {"sha": "2961b4460dee50e671a30993838f711449ecf607", "filename": "gcc/asan.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -2346,6 +2346,9 @@ initialize_sanitizer_builtins (void)\n #define ATTR_TMPURE_NOTHROW_LEAF_LIST ECF_TM_PURE | ATTR_NOTHROW_LEAF_LIST\n #undef ATTR_NORETURN_NOTHROW_LEAF_LIST\n #define ATTR_NORETURN_NOTHROW_LEAF_LIST ECF_NORETURN | ATTR_NOTHROW_LEAF_LIST\n+#undef ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST\n+#define ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST \\\n+  ECF_CONST | ATTR_NORETURN_NOTHROW_LEAF_LIST\n #undef ATTR_TMPURE_NORETURN_NOTHROW_LEAF_LIST\n #define ATTR_TMPURE_NORETURN_NOTHROW_LEAF_LIST \\\n   ECF_TM_PURE | ATTR_NORETURN_NOTHROW_LEAF_LIST\n@@ -2355,6 +2358,9 @@ initialize_sanitizer_builtins (void)\n #undef ATTR_COLD_NORETURN_NOTHROW_LEAF_LIST\n #define ATTR_COLD_NORETURN_NOTHROW_LEAF_LIST \\\n   /* ECF_COLD missing */ ATTR_NORETURN_NOTHROW_LEAF_LIST\n+#undef ATTR_COLD_CONST_NORETURN_NOTHROW_LEAF_LIST\n+#define ATTR_COLD_CONST_NORETURN_NOTHROW_LEAF_LIST \\\n+  /* ECF_COLD missing */ ATTR_CONST_NORETURN_NOTHROW_LEAF_LIST\n #undef DEF_SANITIZER_BUILTIN\n #define DEF_SANITIZER_BUILTIN(ENUM, NAME, TYPE, ATTRS) \\\n   decl = add_builtin_function (\"__builtin_\" NAME, TYPE, ENUM,\t\t\\"}, {"sha": "c707367d4e7dafc3f64f47e1465c0c126d4b1071", "filename": "gcc/builtin-attrs.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fbuiltin-attrs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fbuiltin-attrs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-attrs.def?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -145,6 +145,8 @@ DEF_ATTR_TREE_LIST (ATTR_SENTINEL_NOTHROW_LIST, ATTR_SENTINEL,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LIST)\n DEF_ATTR_TREE_LIST (ATTR_SENTINEL_NOTHROW_LEAF_LIST, ATTR_SENTINEL,\t\\\n \t\t\tATTR_NULL, ATTR_NOTHROW_LEAF_LIST)\n+DEF_ATTR_TREE_LIST (ATTR_COLD_CONST_NORETURN_NOTHROW_LEAF_LIST, ATTR_CONST,\\\n+\t\t\tATTR_NULL, ATTR_COLD_NORETURN_NOTHROW_LEAF_LIST)\n \n /* Functions whose pointer parameter(s) are all nonnull.  */\n DEF_ATTR_TREE_LIST (ATTR_NONNULL_LIST, ATTR_NONNULL, ATTR_NULL, ATTR_NULL)"}, {"sha": "311c0e382797807fd04cd78a86570a3dfde74fc2", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -64,7 +64,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"builtins.h\"\n #include \"asan.h\"\n-#include \"ubsan.h\"\n #include \"cilk.h\"\n #include \"ipa-ref.h\"\n #include \"lto-streamer.h\"\n@@ -9803,14 +9802,6 @@ fold_builtin_0 (location_t loc, tree fndecl, bool ignore ATTRIBUTE_UNUSED)\n     case BUILT_IN_CLASSIFY_TYPE:\n       return fold_builtin_classify_type (NULL_TREE);\n \n-    case BUILT_IN_UNREACHABLE:\n-      if (flag_sanitize & SANITIZE_UNREACHABLE\n-\t  && (current_function_decl == NULL\n-\t      || !lookup_attribute (\"no_sanitize_undefined\",\n-\t\t\t\t    DECL_ATTRIBUTES (current_function_decl))))\n-\treturn ubsan_instrument_unreachable (loc);\n-      break;\n-\n     default:\n       break;\n     }"}, {"sha": "3fc8c8396be66efc1946abe6fb7cf5cc949875be", "filename": "gcc/sanitizer.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fsanitizer.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fsanitizer.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanitizer.def?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -394,7 +394,7 @@ DEF_SANITIZER_BUILTIN(BUILT_IN_UBSAN_HANDLE_SHIFT_OUT_OF_BOUNDS,\n DEF_SANITIZER_BUILTIN(BUILT_IN_UBSAN_HANDLE_BUILTIN_UNREACHABLE,\n \t\t      \"__ubsan_handle_builtin_unreachable\",\n \t\t      BT_FN_VOID_PTR,\n-\t\t      ATTR_COLD_NORETURN_NOTHROW_LEAF_LIST)\n+\t\t      ATTR_COLD_CONST_NORETURN_NOTHROW_LEAF_LIST)\n DEF_SANITIZER_BUILTIN(BUILT_IN_UBSAN_HANDLE_MISSING_RETURN,\n \t\t      \"__ubsan_handle_missing_return\",\n \t\t      BT_FN_VOID_PTR,"}, {"sha": "fe2e42d121ccf1176477f40e094681dd89d2c206", "filename": "gcc/sanopt.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fsanopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fsanopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanopt.c?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -312,6 +312,21 @@ pass_sanopt::execute (function *fun)\n \t\t  break;\n \t\t}\n \t    }\n+\t  else if (gimple_call_builtin_p (stmt, BUILT_IN_NORMAL))\n+\t    {\n+\t      tree callee = gimple_call_fndecl (stmt);\n+\t      switch (DECL_FUNCTION_CODE (callee))\n+\t\t{\n+\t\tcase BUILT_IN_UNREACHABLE:\n+\t\t  if (flag_sanitize & SANITIZE_UNREACHABLE\n+\t\t      && !lookup_attribute (\"no_sanitize_undefined\",\n+\t\t\t\t\t    DECL_ATTRIBUTES (fun->decl)))\n+\t\t    no_next = ubsan_instrument_unreachable (&gsi);\n+\t\t  break;\n+\t\tdefault:\n+\t\t  break;\n+\t\t}\n+\t    }\n \n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {"}, {"sha": "1d3ef947bf24f90c053b4b2b42efcc86bebab9a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -1,3 +1,9 @@\n+2014-11-14  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/63839\n+\t* c-c++-common/ubsan/pr63839.c: New test.\n+\t* c-c++-common/ubsan/unreachable-2.c: New test.\n+\n 2014-11-14  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.c-torture/execute/shiftopt-1.c: XFAIL invalid parts."}, {"sha": "e3933f7fe6629092ab740d4884d2559190343351", "filename": "gcc/testsuite/c-c++-common/ubsan/pr63839.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63839.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63839.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr63839.c?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=unreachable\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O2\" } } */\n+/* { dg-shouldfail \"ubsan\" } */\n+\n+static void __attribute__ ((noreturn))\n+bar ()\n+{\n+} /* { dg-warning \"function does return\" } */\n+\n+void\n+foo ()\n+{\n+  bar ();\n+}\n+\n+int\n+main (void)\n+{\n+  foo ();\n+}\n+\n+/* { dg-output \"execution reached a __builtin_unreachable\\\\(\\\\) call\" } */"}, {"sha": "783ebc249136bb35971d810d580acb03b811fe08", "filename": "gcc/testsuite/c-c++-common/ubsan/unreachable-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Funreachable-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Funreachable-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Funreachable-2.c?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=unreachable\" } */\n+/* { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O2\" } } */\n+/* { dg-shouldfail \"ubsan\" } */\n+\n+int e;\n+\n+int\n+main (void)\n+{\n+  return e ? 0 : (__builtin_unreachable (), 1);\n+}\n+\n+/* { dg-output \"execution reached a __builtin_unreachable\\\\(\\\\) call\" } */"}, {"sha": "31ca0e120e3e70f0f9e7e3b3ec15f4866b2a066a", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -2568,6 +2568,9 @@ optimize_unreachable (gimple_stmt_iterator i)\n   edge e;\n   bool ret;\n \n+  if (flag_sanitize & SANITIZE_UNREACHABLE)\n+    return false;\n+\n   for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n     {\n       stmt = gsi_stmt (gsi);"}, {"sha": "b5b1b924c67561d1f88407eb7436d5c4d47e4811", "filename": "gcc/ubsan.c", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -588,17 +588,26 @@ ubsan_create_data (const char *name, int loccnt, const location_t *ploc, ...)\n /* Instrument the __builtin_unreachable call.  We just call the libubsan\n    routine instead.  */\n \n-tree\n-ubsan_instrument_unreachable (location_t loc)\n+bool\n+ubsan_instrument_unreachable (gimple_stmt_iterator *gsi)\n {\n-  if (flag_sanitize_undefined_trap_on_error)\n-    return build_call_expr_loc (loc, builtin_decl_explicit (BUILT_IN_TRAP), 0);\n+  gimple g;\n+  location_t loc = gimple_location (gsi_stmt (*gsi));\n \n-  initialize_sanitizer_builtins ();\n-  tree data = ubsan_create_data (\"__ubsan_unreachable_data\", 1, &loc, NULL_TREE,\n-\t\t\t\t NULL_TREE);\n-  tree t = builtin_decl_explicit (BUILT_IN_UBSAN_HANDLE_BUILTIN_UNREACHABLE);\n-  return build_call_expr_loc (loc, t, 1, build_fold_addr_expr_loc (loc, data));\n+  if (flag_sanitize_undefined_trap_on_error)\n+    g = gimple_build_call (builtin_decl_explicit (BUILT_IN_TRAP), 0);\n+  else\n+    {\n+      tree data = ubsan_create_data (\"__ubsan_unreachable_data\", 1, &loc,\n+\t\t\t\t     NULL_TREE, NULL_TREE);\n+      data = build_fold_addr_expr_loc (loc, data);\n+      tree fn\n+\t= builtin_decl_explicit (BUILT_IN_UBSAN_HANDLE_BUILTIN_UNREACHABLE);\n+      g = gimple_build_call (fn, 1, data);\n+    }\n+  gimple_set_location (g, loc);\n+  gsi_replace (gsi, g, false);\n+  return false;\n }\n \n /* Return true if T is a call to a libubsan routine.  */"}, {"sha": "dcdbb4fa4c98e0a9075b71711d8403571275f16a", "filename": "gcc/ubsan.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fubsan.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4088b790cc40b0fbcf12bafd1e3ef822c976a702/gcc%2Fubsan.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.h?ref=4088b790cc40b0fbcf12bafd1e3ef822c976a702", "patch": "@@ -41,7 +41,7 @@ enum ubsan_print_style {\n extern bool ubsan_expand_bounds_ifn (gimple_stmt_iterator *);\n extern bool ubsan_expand_null_ifn (gimple_stmt_iterator *);\n extern bool ubsan_expand_objsize_ifn (gimple_stmt_iterator *);\n-extern tree ubsan_instrument_unreachable (location_t);\n+extern bool ubsan_instrument_unreachable (gimple_stmt_iterator *);\n extern tree ubsan_create_data (const char *, int, const location_t *, ...);\n extern tree ubsan_type_descriptor (tree, enum ubsan_print_style = UBSAN_PRINT_NORMAL);\n extern tree ubsan_encode_value (tree, bool = false);"}]}