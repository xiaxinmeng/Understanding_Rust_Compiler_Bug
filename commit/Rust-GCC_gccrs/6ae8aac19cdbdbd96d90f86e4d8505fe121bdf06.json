{"sha": "6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFlOGFhYzE5Y2RiZGJkOTZkOTBmODZlNGQ4NTA1ZmUxMjFiZGYwNg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-07-17T21:38:39Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-07-18T19:37:48Z"}, "message": "x86: Enable the GPR only instructions for -mgeneral-regs-only\n\nFor -mgeneral-regs-only, enable the GPR only instructions which are\nenabled implicitly by SSE ISAs unless they have been disabled explicitly.\n\ngcc/\n\n\tPR target/101492\n\t* common/config/i386/i386-common.c (ix86_handle_option): For\n\t-mgeneral-regs-only, enable the GPR only instructions which are\n\tenabled implicitly by SSE ISAs unless they have been disabled\n\texplicitly.\n\ngcc/testsuite/\n\n\tPR target/101492\n\t* gcc.target/i386/pr101492-1.c: New test.\n\t* gcc.target/i386/pr101492-2.c: Likewise.\n\t* gcc.target/i386/pr101492-3.c: Likewise.\n\t* gcc.target/i386/pr101492-4.c: Likewise.", "tree": {"sha": "9c77c74007cd08c616cfa8f93f41067c8e82bf66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c77c74007cd08c616cfa8f93f41067c8e82bf66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f527b8233498b40c8a2c616b82265f2e58aba42a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f527b8233498b40c8a2c616b82265f2e58aba42a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f527b8233498b40c8a2c616b82265f2e58aba42a"}], "stats": {"total": 69, "additions": 67, "deletions": 2}, "files": [{"sha": "76ab1a14e54fda14d05be46c9417d9415b73a039", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06", "patch": "@@ -354,16 +354,39 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mgeneral_regs_only:\n       if (value)\n \t{\n+\t  HOST_WIDE_INT general_regs_only_flags = 0;\n+\t  HOST_WIDE_INT general_regs_only_flags2 = 0;\n+\n+\t  /* NB: Enable the GPR only instructions which are enabled\n+\t     implicitly by SSE ISAs unless they have been disabled\n+\t     explicitly.  */\n+\t  if (TARGET_SSE4_2_P (opts->x_ix86_isa_flags))\n+\t    {\n+\t      if (!TARGET_EXPLICIT_CRC32_P (opts))\n+\t\tgeneral_regs_only_flags |= OPTION_MASK_ISA_CRC32;\n+\t      if (!TARGET_EXPLICIT_POPCNT_P (opts))\n+\t\tgeneral_regs_only_flags |= OPTION_MASK_ISA_POPCNT;\n+\t    }\n+\t  if (TARGET_SSE3_P (opts->x_ix86_isa_flags))\n+\t    {\n+\t      if (!TARGET_EXPLICIT_MWAIT_P (opts))\n+\t\tgeneral_regs_only_flags2 |= OPTION_MASK_ISA2_MWAIT;\n+\t    }\n+\n \t  /* Disable MMX, SSE and x87 instructions if only\n \t     general registers are allowed.  */\n \t  opts->x_ix86_isa_flags\n \t    &= ~OPTION_MASK_ISA_GENERAL_REGS_ONLY_UNSET;\n \t  opts->x_ix86_isa_flags2\n \t    &= ~OPTION_MASK_ISA2_GENERAL_REGS_ONLY_UNSET;\n+\t  opts->x_ix86_isa_flags |= general_regs_only_flags;\n+\t  opts->x_ix86_isa_flags2 |= general_regs_only_flags2;\n \t  opts->x_ix86_isa_flags_explicit\n-\t    |= OPTION_MASK_ISA_GENERAL_REGS_ONLY_UNSET;\n+\t    |= (OPTION_MASK_ISA_GENERAL_REGS_ONLY_UNSET\n+\t\t| general_regs_only_flags);\n \t  opts->x_ix86_isa_flags2_explicit\n-\t    |= OPTION_MASK_ISA2_GENERAL_REGS_ONLY_UNSET;\n+\t    |= (OPTION_MASK_ISA2_GENERAL_REGS_ONLY_UNSET\n+\t\t| general_regs_only_flags2);\n \n \t  opts->x_target_flags &= ~MASK_80387;\n \t}"}, {"sha": "41002571761f9d8fb8a716cac92993fe1e2ecd0e", "filename": "gcc/testsuite/gcc.target/i386/pr101492-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-1.c?ref=6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse4.2 -mgeneral-regs-only\" } */\n+\n+#include <x86intrin.h>\n+\n+unsigned int\n+foo1 (unsigned int x, unsigned int y)\n+{\n+  return __crc32d (x, y);\n+}"}, {"sha": "c7d24f43c398990ce7c170eac151545bb9417025", "filename": "gcc/testsuite/gcc.target/i386/pr101492-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-2.c?ref=6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse4.2 -mgeneral-regs-only\" } */\n+\n+#include <x86intrin.h>\n+\n+unsigned int\n+foo1 (unsigned int x)\n+{\n+  return _mm_popcnt_u32 (x);\n+}"}, {"sha": "37e2071ab57716c2147aa4787675210974b00706", "filename": "gcc/testsuite/gcc.target/i386/pr101492-3.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-3.c?ref=6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse3 -mgeneral-regs-only\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+foo1 (unsigned int x, unsigned int y)\n+{\n+  _mm_mwait (x, y);\n+}"}, {"sha": "c5a4f0abd25aa9d3c64c17ec1f385230d6b6441a", "filename": "gcc/testsuite/gcc.target/i386/pr101492-4.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101492-4.c?ref=6ae8aac19cdbdbd96d90f86e4d8505fe121bdf06", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-mwait -msse3 -mgeneral-regs-only\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+foo1 (unsigned int x, unsigned int y)\n+{\n+  _mm_mwait (x, y);\n+}\n+\n+/* { dg-error \"target specific option mismatch\" \"\" { target *-*-* } 0 } */"}]}