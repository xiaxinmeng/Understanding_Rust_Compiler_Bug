{"sha": "8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRmN2VlNjdmNmZkYzc4MGU5NDUzZjJiYWE4ZDFiZjYyYzAwMDc2MQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-05-23T17:01:43Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-05-23T17:01:43Z"}, "message": "Fixes a hang on an invalid ID in a WAIT statement.\n\ngcc/fortran/ChangeLog:\n\n2020-05-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/95191\n\t* libgfortran.h (libgfortran_error_codes): Add\n\tLIBERROR_BAD_WAIT_ID.\n\nlibgfortran/ChangeLog:\n\n2020-05-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/95191\n\t* io/async.c (async_wait_id): Generate error if ID is higher\n\tthan the highest current ID.\n\t* runtime/error.c (translate_error): Handle LIBERROR_BAD_WAIT_ID.\n\nlibgomp/ChangeLog:\n\n2020-05-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/95191\n\t* testsuite/libgomp.fortran/async_io_9.f90: New test.", "tree": {"sha": "015a612d02b3a3e1cfc3b9ee97c08d8643d8e5a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/015a612d02b3a3e1cfc3b9ee97c08d8643d8e5a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/comments", "author": null, "committer": null, "parents": [{"sha": "584d52b088f9fcf78704b504c3f1f07e17c1cded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/584d52b088f9fcf78704b504c3f1f07e17c1cded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/584d52b088f9fcf78704b504c3f1f07e17c1cded"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "55d5dae3cf538a774dda913c716fb654220285b9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "patch": "@@ -1,3 +1,9 @@\n+2020-05-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/95191\n+\t* libgfortran.h (libgfortran_error_codes): Add\n+\tLIBERROR_BAD_WAIT_ID.\n+\n 2020-05-20  Mark Eggleston  <markeggleston@gcc.gnu.org>\n \n \tPR fortran/39695"}, {"sha": "6a9139c98fc78b012c0183a1afdb5f30516235bd", "filename": "gcc/fortran/libgfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/gcc%2Ffortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/gcc%2Ffortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flibgfortran.h?ref=8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "patch": "@@ -124,6 +124,7 @@ typedef enum\n   LIBERROR_SHORT_RECORD,\n   LIBERROR_CORRUPT_FILE,\n   LIBERROR_INQUIRE_INTERNAL_UNIT, /* Must be different from STAT_STOPPED_IMAGE.  */\n+  LIBERROR_BAD_WAIT_ID,\n   LIBERROR_LAST\t\t\t/* Not a real error, the last error # + 1.  */\n }\n libgfortran_error_codes;"}, {"sha": "ddb1af1721f14b8244aa666f1d60573688683616", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "patch": "@@ -1,3 +1,10 @@\n+2020-05-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/95191\n+\t* io/async.c (async_wait_id): Generate error if ID is higher\n+\tthan the highest current ID.\n+\t* runtime/error.c (translate_error): Handle LIBERROR_BAD_WAIT_ID.\n+\n 2020-05-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* m4/matmul.m4: Don't include <config/i386/cpuinfo.h>.  Use"}, {"sha": "1bf38e9c0ffdb422064b107e9eddf0e07913873c", "filename": "libgfortran/io/async.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgfortran%2Fio%2Fasync.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgfortran%2Fio%2Fasync.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fasync.c?ref=8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "patch": "@@ -424,6 +424,13 @@ async_wait_id (st_parameter_common *cmp, async_unit *au, int i)\n     }\n \n   LOCK (&au->lock);\n+  if (i > au->id.high)\n+    {\n+      generate_error_common (cmp, LIBERROR_BAD_WAIT_ID, NULL);\n+      UNLOCK (&au->lock);\n+      return true;\n+    }\n+\n   NOTE (\"Waiting for id %d\", i);\n   if (au->id.waiting < i)\n     au->id.waiting = i;"}, {"sha": "ff6b852a07c38dec5384efebbe488ce7b02336c2", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "patch": "@@ -660,6 +660,10 @@ translate_error (int code)\n       p = \"Inquire statement identifies an internal file\";\n       break;\n \n+    case LIBERROR_BAD_WAIT_ID:\n+      p = \"Bad ID in WAIT statement\";\n+      break;\n+\n     default:\n       p = \"Unknown error code\";\n       break;"}, {"sha": "a0922a4db39c3bf1fae6081c3a19d9d0eae7262c", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "patch": "@@ -1,3 +1,8 @@\n+2020-05-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/95191\n+\t* testsuite/libgomp.fortran/async_io_9.f90: New test.\n+\n 2020-05-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* omp.h.in (omp_uintptr_t): New typedef."}, {"sha": "2dc111c3967781fb29f1575d506932ee295fb4f3", "filename": "libgomp/testsuite/libgomp.fortran/async_io_9.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df7ee67f6fdc780e9453f2baa8d1bf62c000761/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fasync_io_9.f90?ref=8df7ee67f6fdc780e9453f2baa8d1bf62c000761", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+! PR 95191 - this used to hang.\n+! Original test case by Bill Long.\n+program test\n+  real a(10000)\n+  integer my_id\n+  integer bad_id\n+  integer :: iostat\n+  character (len=100) :: iomsg\n+  data my_id /1/\n+  data bad_id /2/\n+  a = 1.\n+  open (unit=10, file='test.dat', form='unformatted', &\n+       &                asynchronous='yes')\n+  write (unit=10, asynchronous='yes', id=my_id) a\n+  iomsg = \"\"\n+  wait (unit=10, id=bad_id, iostat=iostat, iomsg=iomsg)\n+  if (iostat == 0 .or. iomsg /= \"Bad ID in WAIT statement\") stop 1\n+  close (unit=10, status='delete')\n+end program test"}]}