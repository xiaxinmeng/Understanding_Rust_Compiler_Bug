{"sha": "6b2fe1bcaf0005dbebb838aced50ea2b281645ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIyZmUxYmNhZjAwMDVkYmViYjgzOGFjZWQ1MGVhMmIyODE2NDVmZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-15T20:27:24Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-15T20:27:24Z"}, "message": "dse-1.c: Pass the union as a second parameter to each function.\n\ngcc/testsuite/\n\t* gcc.target/mips/dse-1.c: Pass the union as a second parameter\n\tto each function.  Check that there are no unsigned loads.\n\nFrom-SVN: r129369", "tree": {"sha": "2fd95eb3310e9099a31402ce411017b9a21a17e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fd95eb3310e9099a31402ce411017b9a21a17e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b2fe1bcaf0005dbebb838aced50ea2b281645ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2fe1bcaf0005dbebb838aced50ea2b281645ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b2fe1bcaf0005dbebb838aced50ea2b281645ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2fe1bcaf0005dbebb838aced50ea2b281645ff/comments", "author": null, "committer": null, "parents": [{"sha": "adb417d78cd7c3d95622e82091b6fa5932c08c3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb417d78cd7c3d95622e82091b6fa5932c08c3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adb417d78cd7c3d95622e82091b6fa5932c08c3d"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "791b6e115afac04f4c0c70652165f4c88e48b600", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2fe1bcaf0005dbebb838aced50ea2b281645ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2fe1bcaf0005dbebb838aced50ea2b281645ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b2fe1bcaf0005dbebb838aced50ea2b281645ff", "patch": "@@ -1,3 +1,8 @@\n+2007-10-15  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* gcc.target/mips/dse-1.c: Pass the union as a second parameter\n+\tto each function.  Check that there are no unsigned loads.\n+\n 2007-10-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/33136"}, {"sha": "0491265ae6c472f6dad7df3da4951661750fe0c8", "filename": "gcc/testsuite/gcc.target/mips/dse-1.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2fe1bcaf0005dbebb838aced50ea2b281645ff/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2fe1bcaf0005dbebb838aced50ea2b281645ff/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdse-1.c?ref=6b2fe1bcaf0005dbebb838aced50ea2b281645ff", "patch": "@@ -1,19 +1,19 @@\n /* { dg-mips-options \"-mgp64 -O\" } */\n \n #define TEST(ID, TYPE1, TYPE2)\t\t\t\t\t\\\n-  union {\t\t\t\t\t\t\t\\\n+  union u##ID {\t\t\t\t\t\t\t\\\n     TYPE1 m1[sizeof (TYPE2) / sizeof (TYPE1)];\t\t\t\\\n     TYPE2 m2;\t\t\t\t\t\t\t\\\n-  } u##ID;\t\t\t\t\t\t\t\\\n+  };\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n   /* The MIPS16 versions of the shifts we need are too\t\t\\\n      expensive.  */\t\t\t\t\t\t\\\n   TYPE1 __attribute__((nomips16))\t\t\t\t\\\n-  f##ID (TYPE2 x)\t\t\t\t\t\t\\\n+  f##ID (TYPE2 x, union u##ID *u)\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n-    u##ID.m2 = x;\t\t\t\t\t\t\\\n-    return (u##ID.m1[0]\t\t\t\t\t\t\\\n-\t    + u##ID.m1[sizeof (TYPE2) / sizeof (TYPE1) - 1]);\t\\\n+    u->m2 = x;\t\t\t\t\t\t\t\\\n+    return (u->m1[0]\t\t\t\t\t\t\\\n+\t    + u->m1[sizeof (TYPE2) / sizeof (TYPE1) - 1]);\t\\\n   }\n \n TEST (1, unsigned int, unsigned long long);\n@@ -32,5 +32,8 @@ TEST (10, signed char, int);\n    (char, short) tests won't pass.  */\n \n /* { dg-final { scan-assembler-not \"\\tlh\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tlhu\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tlw\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tlwu\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tlb\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tlbu\\t\" } } */"}]}