{"sha": "5d34c8e946a9df8f7c48739046418b28201077df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQzNGM4ZTk0NmE5ZGY4ZjdjNDg3MzkwNDY0MThiMjgyMDEwNzdkZg==", "commit": {"author": {"name": "Kevin Ryde", "email": "user42@zip.com.au", "date": "2003-05-20T22:13:34Z"}, "committer": {"name": "Wolfgang Bangerth", "email": "bangerth@gcc.gnu.org", "date": "2003-05-20T22:13:34Z"}, "message": "doc/extend.texi: Put warning into documentation of attribute regparm.\n\nCo-Authored-By: Wolfgang Bangerth <bangerth@dealii.org>\n\nFrom-SVN: r67037", "tree": {"sha": "fca75c3443f240e7da77528540e3e61d193772f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fca75c3443f240e7da77528540e3e61d193772f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d34c8e946a9df8f7c48739046418b28201077df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d34c8e946a9df8f7c48739046418b28201077df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d34c8e946a9df8f7c48739046418b28201077df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d34c8e946a9df8f7c48739046418b28201077df/comments", "author": {"login": "kryde", "id": 1286980, "node_id": "MDQ6VXNlcjEyODY5ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1286980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kryde", "html_url": "https://github.com/kryde", "followers_url": "https://api.github.com/users/kryde/followers", "following_url": "https://api.github.com/users/kryde/following{/other_user}", "gists_url": "https://api.github.com/users/kryde/gists{/gist_id}", "starred_url": "https://api.github.com/users/kryde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kryde/subscriptions", "organizations_url": "https://api.github.com/users/kryde/orgs", "repos_url": "https://api.github.com/users/kryde/repos", "events_url": "https://api.github.com/users/kryde/events{/privacy}", "received_events_url": "https://api.github.com/users/kryde/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a63996f10f6f3cc5b728849f8afc47e0ae2efedf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a63996f10f6f3cc5b728849f8afc47e0ae2efedf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a63996f10f6f3cc5b728849f8afc47e0ae2efedf"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "c99a4fdaa483f87b71f5ae500d676022095bcfe4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d34c8e946a9df8f7c48739046418b28201077df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d34c8e946a9df8f7c48739046418b28201077df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d34c8e946a9df8f7c48739046418b28201077df", "patch": "@@ -1,3 +1,10 @@\n+2003-05-20  Kevin Ryde <user42@zip.com.au>\n+\t    Wolfgang Bangerth <bangerth@dealii.org>\n+\n+\tPR/10355\n+\t* doc/extend.texi: Put a warning into the documentation\n+\tof attribute regparm.\n+\n 2003-05-20  Jason Merrill  <jason@redhat.com>\n \n \t* tree.c (expr_last): New fn."}, {"sha": "dc9646ac5b5de00ca15e660216e0ed35adbf0791", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d34c8e946a9df8f7c48739046418b28201077df/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d34c8e946a9df8f7c48739046418b28201077df/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=5d34c8e946a9df8f7c48739046418b28201077df", "patch": "@@ -2368,13 +2368,24 @@ since it is known that the calling function loaded the correct value.\n Not all ELF targets support this attribute.\n \n @item regparm (@var{number})\n+@cindex @code{regparm} attribute\n @cindex functions that are passed arguments in registers on the 386\n On the Intel 386, the @code{regparm} attribute causes the compiler to\n pass up to @var{number} integer arguments in registers EAX,\n EDX, and ECX instead of on the stack.  Functions that take a\n variable number of arguments will continue to be passed all of their\n arguments on the stack.\n \n+Beware that on some ELF systems this attribute is unsuitable for\n+global functions in shared libraries with lazy binding (which is the\n+default).  Lazy binding will send the first call via resolving code in\n+the loader, which might assume EAX, EDX and ECX can be clobbered, as\n+per the standard calling conventions.  Solaris 8 is affected by this.\n+GNU systems with GLIBC 2.1 or higher, and FreeBSD, are believed to be\n+safe since the loaders there save all registers.  (Lazy binding can be\n+disabled with the linker or the loader if desired, to avoid the\n+problem.)\n+\n @item stdcall\n @cindex functions that pop the argument stack on the 386\n On the Intel 386, the @code{stdcall} attribute causes the compiler to"}]}