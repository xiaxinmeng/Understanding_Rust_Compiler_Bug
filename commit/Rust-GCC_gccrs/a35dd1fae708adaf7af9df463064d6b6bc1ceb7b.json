{"sha": "a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM1ZGQxZmFlNzA4YWRhZjdhZjlkZjQ2MzA2NGQ2YjZiYzFjZWI3Yg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-05-23T16:46:59Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-05-23T16:46:59Z"}, "message": "rs6000: Make all rlw*nm and rld*c* type shift\n\nThey are often labeled just \"integer\" currently.  Fix that.\n\nAlso handle shift properly in those scheduling descriptions that\nneglected it.\n\nFrom-SVN: r210873", "tree": {"sha": "53831f8826a441ce4acf1985b8be94513a0c4073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53831f8826a441ce4acf1985b8be94513a0c4073"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "73c076c8a2b46d1f87c64a92bf1e7edfe0b6e076", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c076c8a2b46d1f87c64a92bf1e7edfe0b6e076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73c076c8a2b46d1f87c64a92bf1e7edfe0b6e076"}], "stats": {"total": 161, "additions": 110, "deletions": 51}, "files": [{"sha": "845c8c611e2da34ad809fa53ef95536bf925d6a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "patch": "@@ -1,3 +1,32 @@\n+2014-05-23  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/440.md (ppc440-integer): Include shift without\n+\tdot.\n+\t(ppc440-compare): Include shift with dot.\n+\t* config/rs6000/e300c2c3.md (ppce300c3_iu): Include shift without\n+\tdot.\n+\t* config/rs6000/e5500.md (e5500_sfx2): Include constant shift\n+\twithout dot.\n+\t* config/rs6000/e6500.md (e6500_sfx): Exclude constant shift\n+\twithout dot.\n+\t(e6500_sfx2): Include it.\n+\t* config/rs6000/rs6000.md ( *zero_extend<mode>di2_internal1,\n+\t*zero_extend<mode>di2_internal2, *zero_extend<mode>di2_internal3,\n+\t*zero_extendsidi2_lfiwzx, andsi3_mc, andsi3_nomc,\n+\tandsi3_internal0_nomc, extzvsi_internal, extzvdi_internal,\n+\t*extzvdi_internal1, *extzvdi_internal2, rotlsi3, *rotlsi3_64,\n+\t*rotlsi3_internal4, *rotlsi3_internal7le, *rotlsi3_internal7be,\n+\t*rotlsi3_internal10le, *rotlsi3_internal10be, rlwinm,\n+\t*lshiftrt_internal1le, *lshiftrt_internal1be,\n+\t*lshiftrt_internal4le, *lshiftrt_internal4be, rotldi3,\n+\t*rotldi3_internal4, *rotldi3_internal7le, *rotldi3_internal7be,\n+\t*rotldi3_internal10le, *rotldi3_internal10be,\n+\t*rotldi3_internal13le, *rotldi3_internal13be, *ashldi3_internal4,\n+\tashldi3_internal5, *ashldi3_internal6, *ashldi3_internal7,\n+\tashldi3_internal8, *ashldi3_internal9, anddi3_mc, anddi3_nomc,\n+\t*anddi3_internal2_mc, *anddi3_internal3_mc, and 4 anonymous\n+\tdefine_insns): Use type \"shift\" in the appropriate alternatives.\n+\n 2014-05-23  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (type): Add \"logical\".  Delete"}, {"sha": "f956bd65aac859c6b4d24253fc666a52cb16a000", "filename": "gcc/config/rs6000/440.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2F440.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2F440.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F440.md?ref=a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "patch": "@@ -53,8 +53,8 @@\n   \"ppc440_issue,ppc440_l_pipe\")\n \n (define_insn_reservation \"ppc440-integer\" 1\n-  (and (ior (eq_attr \"type\" \"integer,insert,shift,trap,cntlz,exts,isel\")\n-\t    (and (eq_attr \"type\" \"add,logical\")\n+  (and (ior (eq_attr \"type\" \"integer,insert,trap,cntlz,exts,isel\")\n+\t    (and (eq_attr \"type\" \"add,logical,shift\")\n \t\t (eq_attr \"dot\" \"no\")))\n        (eq_attr \"cpu\" \"ppc440\"))\n   \"ppc440_issue,ppc440_i_pipe|ppc440_j_pipe\")\n@@ -96,7 +96,7 @@\n \n (define_insn_reservation \"ppc440-compare\" 2\n   (and (ior (eq_attr \"type\" \"cmp,compare,cr_logical,delayed_cr,mfcr\")\n-\t    (and (eq_attr \"type\" \"add,logical\")\n+\t    (and (eq_attr \"type\" \"add,logical,shift\")\n \t\t (eq_attr \"dot\" \"yes\")))\n        (eq_attr \"cpu\" \"ppc440\"))\n   \"ppc440_issue,ppc440_i_pipe\")"}, {"sha": "f80ef30df3dabc83b6b2702bdc46c35978854fe0", "filename": "gcc/config/rs6000/e300c2c3.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe300c2c3.md?ref=a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "patch": "@@ -93,7 +93,7 @@\n ;; Other one cycle IU insns\n (define_insn_reservation \"ppce300c3_iu\" 1\n   (and (ior (eq_attr \"type\" \"integer,insert,isel\")\n-\t    (and (eq_attr \"type\" \"add,logical\")\n+\t    (and (eq_attr \"type\" \"add,logical,shift\")\n \t\t (eq_attr \"dot\" \"no\")))\n        (ior (eq_attr \"cpu\" \"ppce300c2\") (eq_attr \"cpu\" \"ppce300c3\")))\n   \"ppce300c3_decode,ppce300c3_issue+ppce300c3_iu_stage0+ppce300c3_retire\")"}, {"sha": "8d784e0e4dee93ba3f4da5453ff69c04793d76eb", "filename": "gcc/config/rs6000/e5500.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2Fe5500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2Fe5500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe5500.md?ref=a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "patch": "@@ -67,7 +67,10 @@\n (define_insn_reservation \"e5500_sfx2\" 2\n   (and (ior (eq_attr \"type\" \"cmp,compare,trap\")\n \t    (and (eq_attr \"type\" \"add,logical\")\n-\t\t (eq_attr \"dot\"  \"yes\")))\n+\t\t (eq_attr \"dot\"  \"yes\"))\n+\t    (and (eq_attr \"type\" \"shift\")\n+\t\t (eq_attr \"dot\"  \"yes\")\n+\t\t (eq_attr \"var_shift\" \"no\")))\n        (eq_attr \"cpu\" \"ppce5500\"))\n   \"e5500_decode,e5500_sfx\")\n "}, {"sha": "a013a945b078e2b418ee0219b5f6bf8c8efb9174", "filename": "gcc/config/rs6000/e6500.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2Fe6500.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2Fe6500.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe6500.md?ref=a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "patch": "@@ -63,14 +63,18 @@\n \t    (and (eq_attr \"type\" \"add,logical\")\n \t\t (eq_attr \"dot\"  \"no\"))\n \t    (and (eq_attr \"type\" \"shift\")\n+\t\t (eq_attr \"dot\"  \"no\")\n \t\t (eq_attr \"var_shift\" \"no\")))\n        (eq_attr \"cpu\" \"ppce6500\"))\n   \"e6500_decode,e6500_sfx\")\n \n (define_insn_reservation \"e6500_sfx2\" 2\n   (and (ior (eq_attr \"type\" \"cmp,compare,trap\")\n \t    (and (eq_attr \"type\" \"add,logical\")\n-\t\t (eq_attr \"dot\"  \"yes\")))\n+\t\t (eq_attr \"dot\"  \"yes\"))\n+\t    (and (eq_attr \"type\" \"shift\")\n+\t\t (eq_attr \"dot\"  \"yes\")\n+\t\t (eq_attr \"var_shift\" \"no\")))\n        (eq_attr \"cpu\" \"ppce6500\"))\n   \"e6500_decode,e6500_sfx\")\n "}, {"sha": "54df18a6dc7382f8be36d8ad9382a12392623bc8", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 68, "deletions": 45, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35dd1fae708adaf7af9df463064d6b6bc1ceb7b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=a35dd1fae708adaf7af9df463064d6b6bc1ceb7b", "patch": "@@ -565,7 +565,7 @@\n   \"@\n    l<wd>z%U1%X1 %0,%1\n    rldicl %0,%1,0,<dbits>\"\n-  [(set_attr \"type\" \"load,*\")])\n+  [(set_attr \"type\" \"load,shift\")])\n \n (define_insn \"*zero_extend<mode>di2_internal2\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -576,7 +576,8 @@\n   \"@\n    rldicl. %2,%1,0,<dbits>\n    #\"\n-  [(set_attr \"type\" \"compare\")\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -602,7 +603,8 @@\n   \"@\n    rldicl. %0,%1,0,<dbits>\n    #\"\n-  [(set_attr \"type\" \"compare\")\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -629,7 +631,7 @@\n    mtvsrwz %x0,%1\n    lfiwzx %0,%y1\n    lxsiwzx %x0,%y1\"\n-  [(set_attr \"type\" \"load,*,mffgpr,fpload,fpload\")])\n+  [(set_attr \"type\" \"load,shift,mffgpr,fpload,fpload\")])\n \n (define_insn \"extendqidi2\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n@@ -866,7 +868,7 @@\n   \"@\n    lbz%U1%X1 %0,%1\n    rlwinm %0,%1,0,0xff\"\n-  [(set_attr \"type\" \"load,*\")])\n+  [(set_attr \"type\" \"load,shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -988,7 +990,7 @@\n   \"@\n    lbz%U1%X1 %0,%1\n    rlwinm %0,%1,0,0xff\"\n-  [(set_attr \"type\" \"load,*\")])\n+  [(set_attr \"type\" \"load,shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -1116,7 +1118,7 @@\n   \"@\n    lhz%U1%X1 %0,%1\n    rlwinm %0,%1,0,0xffff\"\n-  [(set_attr \"type\" \"load,*\")])\n+  [(set_attr \"type\" \"load,shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -2915,7 +2917,7 @@\n    rlwinm %0,%1,0,%m2,%M2\n    andi. %0,%1,%b2\n    andis. %0,%1,%u2\"\n-  [(set_attr \"type\" \"*,*,logical,logical\")\n+  [(set_attr \"type\" \"*,shift,logical,logical\")\n    (set_attr \"dot\" \"no,no,yes,yes\")])\n \n (define_insn \"andsi3_nomc\"\n@@ -2926,7 +2928,8 @@\n   \"!rs6000_gen_cell_microcode\"\n   \"@\n    and %0,%1,%2\n-   rlwinm %0,%1,0,%m2,%M2\")\n+   rlwinm %0,%1,0,%m2,%M2\"\n+  [(set_attr \"type\" \"logical,shift\")])\n \n (define_insn \"andsi3_internal0_nomc\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -2935,7 +2938,8 @@\n   \"!rs6000_gen_cell_microcode\"\n   \"@\n    and %0,%1,%2\n-   rlwinm %0,%1,0,%m2,%M2\")\n+   rlwinm %0,%1,0,%m2,%M2\"\n+  [(set_attr \"type\" \"logical,shift\")])\n \n \n ;; Note to set cr's other than cr0 we do the and immediate and then\n@@ -3665,7 +3669,8 @@\n   else\n     operands[3] = GEN_INT (start + size);\n   return \\\"rlwinm %0,%1,%3,%s2,31\\\";\n-}\")\n+}\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"*extzvsi_internal1\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -3795,7 +3800,8 @@\n     operands[3] = GEN_INT (start + size);\n   operands[2] = GEN_INT (64 - size);\n   return \\\"rldicl %0,%1,%3,%2\\\";\n-}\")\n+}\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"*extzvdi_internal1\"\n   [(set (match_operand:CC 0 \"gpc_reg_operand\" \"=x\")\n@@ -3817,7 +3823,8 @@\n   operands[2] = GEN_INT (64 - size);\n   return \\\"rldicl. %4,%1,%3,%2\\\";\n }\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")])\n \n (define_insn \"*extzvdi_internal2\"\n   [(set (match_operand:CC 4 \"gpc_reg_operand\" \"=x\")\n@@ -3840,7 +3847,8 @@\n   operands[2] = GEN_INT (64 - size);\n   return \\\"rldicl. %0,%1,%3,%2\\\";\n }\"\n-  [(set_attr \"type\" \"compare\")])\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")])\n \n (define_insn \"rotlsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n@@ -3850,7 +3858,7 @@\n   \"@\n    rlwnm %0,%1,%2,0xffffffff\n    rlwinm %0,%1,%h2,0xffffffff\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotlsi3_64\"\n@@ -3862,7 +3870,7 @@\n   \"@\n    rlwnm %0,%1,%2,0xffffffff\n    rlwinm %0,%1,%h2,0xffffffff\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotlsi3_internal2\"\n@@ -3938,7 +3946,7 @@\n   \"@\n    rlwnm %0,%1,%2,%m3,%M3\n    rlwinm %0,%1,%h2,%m3,%M3\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotlsi3_internal5\"\n@@ -4026,7 +4034,8 @@\n   [(set (attr \"cell_micro\")\n      (if_then_else (match_operand:SI 2 \"const_int_operand\" \"\")\n \t(const_string \"not\")\n-\t(const_string \"always\")))])\n+\t(const_string \"always\")))\n+   (set_attr \"type\" \"shift\")])\n \n (define_insn \"*rotlsi3_internal7be\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -4039,7 +4048,8 @@\n   [(set (attr \"cell_micro\")\n      (if_then_else (match_operand:SI 2 \"const_int_operand\" \"\")\n \t(const_string \"not\")\n-\t(const_string \"always\")))])\n+\t(const_string \"always\")))\n+   (set_attr \"type\" \"shift\")])\n \n (define_insn \"*rotlsi3_internal8le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n@@ -4199,7 +4209,7 @@\n   \"@\n    rlwnm %0,%1,%2,0xffff\n    rlwinm %0,%1,%h2,0xffff\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotlsi3_internal10be\"\n@@ -4212,7 +4222,7 @@\n   \"@\n    rlwnm %0,%1,%2,0xffff\n    rlwinm %0,%1,%h2,0xffff\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotlsi3_internal11le\"\n@@ -4456,7 +4466,8 @@\n \t\t\t   (match_operand:SI 2 \"const_int_operand\" \"i\"))\n \t\t(match_operand:SI 3 \"mask_operand\" \"n\")))]\n   \"includes_lshift_p (operands[2], operands[3])\"\n-  \"rlwinm %0,%1,%h2,%m3,%M3\")\n+  \"rlwinm %0,%1,%h2,%m3,%M3\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -4623,7 +4634,8 @@\n \t\t\t     (match_operand:SI 2 \"const_int_operand\" \"i\"))\n \t\t(match_operand:SI 3 \"mask_operand\" \"n\")))]\n   \"includes_rshift_p (operands[2], operands[3])\"\n-  \"rlwinm %0,%1,%s2,%m3,%M3\")\n+  \"rlwinm %0,%1,%s2,%m3,%M3\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -4699,7 +4711,8 @@\n \t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 0)))]\n   \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255))\"\n-  \"rlwinm %0,%1,%s2,0xff\")\n+  \"rlwinm %0,%1,%s2,0xff\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"*lshiftrt_internal1be\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -4708,7 +4721,8 @@\n \t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 3)))]\n   \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255))\"\n-  \"rlwinm %0,%1,%s2,0xff\")\n+  \"rlwinm %0,%1,%s2,0xff\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"*lshiftrt_internal2le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -4861,7 +4875,8 @@\n \t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 0)))]\n   \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535))\"\n-  \"rlwinm %0,%1,%s2,0xffff\")\n+  \"rlwinm %0,%1,%s2,0xffff\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"*lshiftrt_internal4be\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -4870,7 +4885,8 @@\n \t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 2)))]\n   \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535))\"\n-  \"rlwinm %0,%1,%s2,0xffff\")\n+  \"rlwinm %0,%1,%s2,0xffff\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"*lshiftrt_internal5le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -6969,7 +6985,7 @@\n   \"@\n    rldcl %0,%1,%2,0\n    rldicl %0,%1,%H2,0\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotldi3_internal2\"\n@@ -7045,7 +7061,7 @@\n   \"@\n    rldc%B3 %0,%1,%2,%S3\n    rldic%B3 %0,%1,%H2,%S3\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotldi3_internal5\"\n@@ -7132,7 +7148,7 @@\n   \"@\n    rldcl %0,%1,%2,56\n    rldicl %0,%1,%H2,56\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotldi3_internal7be\"\n@@ -7145,7 +7161,7 @@\n   \"@\n    rldcl %0,%1,%2,56\n    rldicl %0,%1,%H2,56\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotldi3_internal8le\"\n@@ -7306,7 +7322,7 @@\n   \"@\n    rldcl %0,%1,%2,48\n    rldicl %0,%1,%H2,48\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotldi3_internal10be\"\n@@ -7319,7 +7335,7 @@\n   \"@\n    rldcl %0,%1,%2,48\n    rldicl %0,%1,%H2,48\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotldi3_internal11le\"\n@@ -7480,7 +7496,7 @@\n   \"@\n    rldcl %0,%1,%2,32\n    rldicl %0,%1,%H2,32\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotldi3_internal13be\"\n@@ -7493,7 +7509,7 @@\n   \"@\n    rldcl %0,%1,%2,32\n    rldicl %0,%1,%H2,32\"\n-  [(set_attr \"type\" \"shift,integer\")\n+  [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*rotldi3_internal14le\"\n@@ -7732,7 +7748,8 @@\n \t\t\t   (match_operand:SI 2 \"const_int_operand\" \"i\"))\n \t\t(match_operand:DI 3 \"const_int_operand\" \"n\")))]\n   \"TARGET_POWERPC64 && includes_rldic_lshift_p (operands[2], operands[3])\"\n-  \"rldic %0,%1,%H2,%W3\")\n+  \"rldic %0,%1,%H2,%W3\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"ashldi3_internal5\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -7746,7 +7763,8 @@\n   \"@\n    rldic. %4,%1,%H2,%W3\n    #\"\n-  [(set_attr \"type\" \"compare\")\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -7780,7 +7798,8 @@\n   \"@\n    rldic. %0,%1,%H2,%W3\n    #\"\n-  [(set_attr \"type\" \"compare\")\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -7808,7 +7827,8 @@\n \t\t\t   (match_operand:SI 2 \"const_int_operand\" \"i\"))\n \t\t(match_operand:DI 3 \"mask64_operand\" \"n\")))]\n   \"TARGET_POWERPC64 && includes_rldicr_lshift_p (operands[2], operands[3])\"\n-  \"rldicr %0,%1,%H2,%S3\")\n+  \"rldicr %0,%1,%H2,%S3\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"ashldi3_internal8\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n@@ -7822,7 +7842,8 @@\n   \"@\n    rldicr. %4,%1,%H2,%S3\n    #\"\n-  [(set_attr \"type\" \"compare\")\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -7856,7 +7877,8 @@\n   \"@\n    rldicr. %0,%1,%H2,%S3\n    #\"\n-  [(set_attr \"type\" \"compare\")\n+  [(set_attr \"type\" \"shift\")\n+   (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -8084,7 +8106,7 @@\n    andi. %0,%1,%b2\n    andis. %0,%1,%u2\n    #\"\n-  [(set_attr \"type\" \"*,*,*,logical,logical,*\")\n+  [(set_attr \"type\" \"*,shift,shift,logical,logical,*\")\n    (set_attr \"dot\" \"no,no,no,yes,yes,no\")\n    (set_attr \"length\" \"4,4,4,4,4,8\")])\n \n@@ -8099,7 +8121,8 @@\n    rldic%B2 %0,%1,0,%S2\n    rlwinm %0,%1,0,%m2,%M2\n    #\"\n-  [(set_attr \"length\" \"4,4,4,8\")])\n+  [(set_attr \"type\" \"*,shift,shift,*\")\n+   (set_attr \"length\" \"4,4,4,8\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n@@ -8143,7 +8166,7 @@\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"logical,compare,shift,logical,\\\n+  [(set_attr \"type\" \"logical,shift,shift,logical,\\\n \t\t     logical,compare,compare,compare,compare,compare,\\\n \t\t     compare,compare\")\n    (set_attr \"dot\" \"yes\")\n@@ -8197,7 +8220,7 @@\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"logical,compare,shift,logical,\\\n+  [(set_attr \"type\" \"logical,shift,shift,logical,\\\n \t\t     logical,compare,compare,compare,compare,compare,\\\n \t\t     compare,compare\")\n    (set_attr \"dot\" \"yes\")"}]}