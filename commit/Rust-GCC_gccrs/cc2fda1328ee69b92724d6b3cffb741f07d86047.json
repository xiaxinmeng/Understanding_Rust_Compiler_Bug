{"sha": "cc2fda1328ee69b92724d6b3cffb741f07d86047", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MyZmRhMTMyOGVlNjliOTI3MjRkNmIzY2ZmYjc0MWYwN2Q4NjA0Nw==", "commit": {"author": {"name": "Mihailo Stojanovic", "email": "mihailo.stojanovic@typhoon-hil.com", "date": "2021-03-30T10:42:49Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-03-30T10:42:49Z"}, "message": "aarch64: Prevent use of SIMD fcvtz[su] instruction variant with \"nosimd\"\n\nCurrently, SF->SI and DF->DI conversions on Aarch64 with the \"nosimd\"\nflag provided sometimes cause the emitting of a vector variant of the\nfcvtz[su] instruction (e.g. fcvtzu s0, s0).\n\nThis modifies the corresponding pattern to only select the vector\nvariant of the instruction when generating code with SIMD enabled.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64.md\n\t(<optab>_trunc<fcvt_target><GPI:mode>2): Set the \"arch\"\n\tattribute to disambiguate between SIMD and FP variants of the\n\tinstruction.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/fcvt_nosimd.c: New test.", "tree": {"sha": "30b6f64d73005f89b36823472d6f66df2b986a7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30b6f64d73005f89b36823472d6f66df2b986a7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc2fda1328ee69b92724d6b3cffb741f07d86047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2fda1328ee69b92724d6b3cffb741f07d86047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc2fda1328ee69b92724d6b3cffb741f07d86047", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2fda1328ee69b92724d6b3cffb741f07d86047/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65374af219f9c5c594951a07e766fe70c1136a1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65374af219f9c5c594951a07e766fe70c1136a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65374af219f9c5c594951a07e766fe70c1136a1f"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "dd1dc2bd7a83e4bd57d8ae73720a55838dba6e25", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2fda1328ee69b92724d6b3cffb741f07d86047/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2fda1328ee69b92724d6b3cffb741f07d86047/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=cc2fda1328ee69b92724d6b3cffb741f07d86047", "patch": "@@ -5989,7 +5989,8 @@\n   \"@\n    fcvtz<su>\\t%<s>0, %<s>1\n    fcvtz<su>\\t%<w>0, %<s>1\"\n-  [(set_attr \"type\" \"neon_fp_to_int_s,f_cvtf2i\")]\n+  [(set_attr \"type\" \"neon_fp_to_int_s,f_cvtf2i\")\n+   (set_attr \"arch\" \"simd,fp\")]\n )\n \n ;; Convert HF -> SI or DI"}, {"sha": "7b2ab65e3070da970cbdf5c81ca71e8cffab503c", "filename": "gcc/testsuite/gcc.target/aarch64/fcvt_nosimd.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2fda1328ee69b92724d6b3cffb741f07d86047/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffcvt_nosimd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2fda1328ee69b92724d6b3cffb741f07d86047/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffcvt_nosimd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffcvt_nosimd.c?ref=cc2fda1328ee69b92724d6b3cffb741f07d86047", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8-a+nosimd\" } */\n+\n+#include <stdint.h>\n+\n+uint64_t test_double_to_uint64(double x) {\n+  return (uint64_t)x;\n+}\n+\n+int64_t test_double_to_int64(double x) {\n+  return (int64_t)x;\n+}\n+\n+uint32_t test_float_to_uint32(float x) {\n+  return (uint32_t)x;\n+}\n+\n+int32_t test_float_to_int32(float x) {\n+  return (int32_t)x;\n+}\n+\n+/* { dg-final { scan-assembler-not {\\tfcvtz[su]\\td[0-9]*, d[0-9]*} } } */\n+/* { dg-final { scan-assembler-not {\\tfcvtz[su]\\ts[0-9]*, s[0-9]*} } } */"}]}