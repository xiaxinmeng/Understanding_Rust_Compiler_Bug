{"sha": "c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJkZGExOWIzYjFlNmU1M2E4MDdlZjM0NDZjNmZkOGEzOGJlOTNlNQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-09-20T14:47:20Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-09-20T14:47:20Z"}, "message": "builtins.c (fold_builtin): Call the new omonymous target hook for machine-dependent built-ins.\n\n2004-09-20  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* builtins.c (fold_builtin): Call the new omonymous\n\ttarget hook for machine-dependent built-ins.\n\t* target-def.h (TARGET_FOLD_BUILTIN): New.\n\t* target.h (struct gcc_target): Add the fold_builtin hook.\n\t* targhooks.c (default_fold_builtin): New.\n\t* targhooks.h (default_fold_builtin): Declare it.\n\nFrom-SVN: r87756", "tree": {"sha": "16c237419acab4d9dc03318e2a6013538f78d3ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16c237419acab4d9dc03318e2a6013538f78d3ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb9be5eb9c3c40851cf8db6d00ebe1ac4f04944b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb9be5eb9c3c40851cf8db6d00ebe1ac4f04944b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb9be5eb9c3c40851cf8db6d00ebe1ac4f04944b"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "1a28aa24c40036ed098770a07866803d9b17c0d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "patch": "@@ -1,3 +1,12 @@\n+2004-09-20  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* builtins.c (fold_builtin): Call the new omonymous\n+\ttarget hook for machine-dependent built-ins.\n+\t* target-def.h (TARGET_FOLD_BUILTIN): New.\n+\t* target.h (struct gcc_target): Add the fold_builtin hook.\n+\t* targhooks.c (default_fold_builtin): New.\n+\t* targhooks.h (default_fold_builtin): Declare it.\n+\n 2004-09-20  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cfg.c, tree-ssa-threadupdate.c, tree-vectorizer.c: Fix"}, {"sha": "dab12e64be568d73dd90f04457021bfcc3a69260", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "patch": "@@ -8206,7 +8206,7 @@ fold_builtin_1 (tree exp, bool ignore)\n   tree type = TREE_TYPE (TREE_TYPE (fndecl));\n \n   if (DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_MD)\n-    return 0;\n+    return targetm.fold_builtin (exp, ignore);\n \n   switch (DECL_FUNCTION_CODE (fndecl))\n     {"}, {"sha": "a77c3be82b1f97f7ee1a041cc5a089521d9fa805", "filename": "gcc/target-def.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "patch": "@@ -287,6 +287,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n /* In builtins.c.  */\n #define TARGET_INIT_BUILTINS hook_void_void\n #define TARGET_EXPAND_BUILTIN default_expand_builtin\n+#define TARGET_FOLD_BUILTIN default_fold_builtin\n \n /* In varasm.c.  */\n #ifndef TARGET_SECTION_TYPE_FLAGS\n@@ -477,6 +478,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n   TARGET_ALIGN_ANON_BITFIELD,\t\t\t\\\n   TARGET_INIT_BUILTINS,\t\t\t\t\\\n   TARGET_EXPAND_BUILTIN,\t\t\t\\\n+  TARGET_FOLD_BUILTIN,\t\t\t\t\\\n   TARGET_MANGLE_FUNDAMENTAL_TYPE,\t\t\\\n   TARGET_INIT_LIBFUNCS,\t\t\t\t\\\n   TARGET_SECTION_TYPE_FLAGS,\t\t\t\\"}, {"sha": "6824c13562e8d42e442135a65ae134687dd9bbdb", "filename": "gcc/target.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "patch": "@@ -324,6 +324,9 @@ struct gcc_target\n   rtx (* expand_builtin) (tree exp, rtx target, rtx subtarget,\n \t\t\t  enum machine_mode mode, int ignore);\n \n+  /* Fold a target-specific builtin.  */\n+  tree (* fold_builtin) (tree exp, bool ignore);\n+\n   /* For a vendor-specific fundamental TYPE, return a pointer to\n      a statically-allocated string containing the C++ mangling for\n      TYPE.  In all other cases, return NULL.  */"}, {"sha": "c71707524441dec16fda57065d7fd8a36ecd4602", "filename": "gcc/targhooks.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "patch": "@@ -97,6 +97,12 @@ default_expand_builtin_saveregs (void)\n   return const0_rtx;\n }\n \n+tree\n+default_fold_builtin (tree t ATTRIBUTE_UNUSED, bool ignore ATTRIBUTE_UNUSED)\n+{\n+  return NULL_TREE;\n+}\n+  \n void\n default_setup_incoming_varargs (CUMULATIVE_ARGS *ca ATTRIBUTE_UNUSED,\n \t\t\t\tenum machine_mode mode ATTRIBUTE_UNUSED,"}, {"sha": "4ff0ea36af8d01c3d8e9a3af273a12b42869a412", "filename": "gcc/targhooks.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=c2dda19b3b1e6e53a807ef3446c6fd8a38be93e5", "patch": "@@ -29,6 +29,7 @@ extern rtx default_expand_builtin_saveregs (void);\n extern void default_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode, tree, int *, int);\n extern rtx default_builtin_setjmp_frame_value (void);\n extern bool default_pretend_outgoing_varargs_named (CUMULATIVE_ARGS *);\n+extern tree default_fold_builtin (tree t, bool ignore);\n \n extern enum machine_mode default_eh_return_filter_mode (void);\n extern unsigned HOST_WIDE_INT default_shift_truncation_mask"}]}