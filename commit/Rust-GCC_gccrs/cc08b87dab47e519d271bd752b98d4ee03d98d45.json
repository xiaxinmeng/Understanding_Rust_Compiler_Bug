{"sha": "cc08b87dab47e519d271bd752b98d4ee03d98d45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MwOGI4N2RhYjQ3ZTUxOWQyNzFiZDc1MmI5OGQ0ZWUwM2Q5OGQ0NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-08-11T13:22:45Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1993-08-11T13:22:45Z"}, "message": "Get size_t typedef using gcc, not cc\n\nFrom-SVN: r5133", "tree": {"sha": "5e3ff07bbaf8d05dbb6115deaae2a4c2804648b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e3ff07bbaf8d05dbb6115deaae2a4c2804648b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc08b87dab47e519d271bd752b98d4ee03d98d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc08b87dab47e519d271bd752b98d4ee03d98d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc08b87dab47e519d271bd752b98d4ee03d98d45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc08b87dab47e519d271bd752b98d4ee03d98d45/comments", "author": null, "committer": null, "parents": [{"sha": "64e026bced0cd76e52fa13c5b2a07617ca31711c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e026bced0cd76e52fa13c5b2a07617ca31711c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64e026bced0cd76e52fa13c5b2a07617ca31711c"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "fd308d159512a71a369e7c10a47fe5b7ec90d251", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc08b87dab47e519d271bd752b98d4ee03d98d45/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc08b87dab47e519d271bd752b98d4ee03d98d45/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=cc08b87dab47e519d271bd752b98d4ee03d98d45", "patch": "@@ -1381,15 +1381,15 @@ stmp-headers: stmp-int-hdrs gfloat.h\n \ttouch stmp-headers\n \n # Build fixed copies of system files.\n-stmp-fixinc: $(srcdir)/$(FIXINCLUDES) gsyslimits.h\n+stmp-fixinc: $(srcdir)/$(FIXINCLUDES) gsyslimits.h xgcc cpp\n \trm -rf include\n \tmkdir include\n \tif [ x$(FIXINCLUDES) != xMakefile.in ]; \\\n \tthen \\\n \t  for dir in $(SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS); do \\\n \t    if [ -d $$dir ]; \\\n \t    then \\\n-\t      $(srcdir)/$(FIXINCLUDES) include $$dir $(srcdir); \\\n+\t      $(srcdir)/$(FIXINCLUDES) include $$dir $(srcdir) \"`pwd`/xgcc -B`pwd`/\"; \\\n \t    else true; fi; \\\n \t  done; \\\n \telse true; \\"}, {"sha": "e7a30dc7e6086dbdcd112fc821b181c4a4353b33", "filename": "gcc/fixincludes", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc08b87dab47e519d271bd752b98d4ee03d98d45/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc08b87dab47e519d271bd752b98d4ee03d98d45/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=cc08b87dab47e519d271bd752b98d4ee03d98d45", "patch": "@@ -5,6 +5,9 @@\n \n # See README-fixinc for more information.\n \n+# Command to run gcc.\n+GCCCMD=${4-${GCCCMD-gcc}}\n+\n # Directory where gcc sources (and sometimes special include files) live.\n # fixincludes doesn't use this, but fixinc.svr4 does, and I want to make\n # sure somebody doesn't try to use arg3 for something incompatible. -- gumby\n@@ -340,14 +343,13 @@ for file in sys/types.h stdlib.h sys/stdtypes.h; do\n \n   if [ -r ${LIB}/$file ]; then\n     echo Fixing $file comment\n-    # Extract the definition of SIZE_TYPE, if any.\n+    # Get the definition of __SIZE_TYPE__, if any.\n     # (This file must be called something.c).\n-    echo \"#include \\\"tm.h\\\"\n-gobblegobble SIZE_TYPE\" > ${LIB}/types.c\n-    foo=`cd ${LIB}; cc -E -I${ORIGDIR} -I${SRCDIR} -I${SRCDIR}/config types.c | grep gobblegobble | sed -e \"s/gobblegobble[ \t]*//\"`\n+    echo \"__SIZE_TYPE__\" > ${LIB}/types.c\n+    foo=`${GCCCMD} -E -P ${LIB}/types.c`\n     rm -f ${LIB}/types.c\n     # Default to our preferred type.\n-    if [ \"$foo\" = SIZE_TYPE ]; then foo=\"unsigned long int\"; else foo=`echo $foo | sed -e 's/^.*\"\\(.*\\)\".*$/\\1/'`; fi\n+    if [ \"$foo\" = __SIZE_TYPE__ ]; then foo=\"unsigned long int\"; fi\n     sed -e \"s/typedef[ \ta-z_]*[ \t]size_t/typedef $foo size_t/\" ${LIB}/$file > ${LIB}/${file}.sed\n     rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n     if cmp $file ${LIB}/$file >/dev/null 2>&1; then"}]}