{"sha": "cf966403d91afcf475347f0d06dd2b7215ae3611", "node_id": "C_kwDOANBUbNoAKGNmOTY2NDAzZDkxYWZjZjQ3NTM0N2YwZDA2ZGQyYjcyMTVhZTM2MTE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-09-28T00:16:21Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-09-28T00:16:21Z"}, "message": "Daily bump.", "tree": {"sha": "334b3f14065f251add2c506dc4635f669a95f4c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/334b3f14065f251add2c506dc4635f669a95f4c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf966403d91afcf475347f0d06dd2b7215ae3611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf966403d91afcf475347f0d06dd2b7215ae3611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf966403d91afcf475347f0d06dd2b7215ae3611", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf966403d91afcf475347f0d06dd2b7215ae3611/comments", "author": null, "committer": null, "parents": [{"sha": "51018dd1395c72b3681ae5f84eceb94320472922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51018dd1395c72b3681ae5f84eceb94320472922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51018dd1395c72b3681ae5f84eceb94320472922"}], "stats": {"total": 274, "additions": 273, "deletions": 1}, "files": [{"sha": "218c10abe7843975656afcabd538400feabf2fde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,139 @@\n+2021-09-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-range-path.cc\n+\t(path_range_query::precompute_ranges_in_block): Rename to...\n+\t(path_range_query::compute_ranges_in_block): ...this.\n+\t(path_range_query::precompute_ranges): Rename to...\n+\t(path_range_query::compute_ranges): ...this.\n+\t(path_range_query::precompute_relations): Rename to...\n+\t(path_range_query::compute_relations): ...this.\n+\t(path_range_query::precompute_phi_relations): Rename to...\n+\t(path_range_query::compute_phi_relations): ...this.\n+\t* gimple-range-path.h: Rename precompute* to compute*.\n+\t* tree-ssa-threadbackward.c\n+\t(back_threader::find_taken_edge_switch): Same.\n+\t(back_threader::find_taken_edge_cond): Same.\n+\t* tree-ssa-threadedge.c\n+\t(hybrid_jt_simplifier::compute_ranges_from_state): Same.\n+\t(hybrid_jt_state::register_equivs_stmt): Inline...\n+\t* tree-ssa-threadedge.h: ...here.\n+\n+2021-09-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (lhs_of_dominating_assert): Remove.\n+\t(class vrp_jt_state): Remove.\n+\t(class vrp_jt_simplifier): Remove.\n+\t(vrp_jt_simplifier::simplify): Remove.\n+\t(class vrp_jump_threader): Remove.\n+\t(vrp_jump_threader::vrp_jump_threader): Remove.\n+\t(vrp_jump_threader::~vrp_jump_threader): Remove.\n+\t(vrp_jump_threader::before_dom_children): Remove.\n+\t(vrp_jump_threader::after_dom_children): Remove.\n+\n+2021-09-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* passes.def (pass_vrp_threader): New.\n+\t* tree-pass.h (make_pass_vrp_threader): Add make_pass_vrp_threader.\n+\t* tree-ssa-threadedge.c (hybrid_jt_state::register_equivs_stmt): New.\n+\t(hybrid_jt_simplifier::hybrid_jt_simplifier): New.\n+\t(hybrid_jt_simplifier::simplify): New.\n+\t(hybrid_jt_simplifier::compute_ranges_from_state): New.\n+\t* tree-ssa-threadedge.h (class hybrid_jt_state): New.\n+\t(class hybrid_jt_simplifier): New.\n+\t* tree-vrp.c (execute_vrp): Remove ASSERT_EXPR based jump\n+\tthreader.\n+\t(class hybrid_threader): New.\n+\t(hybrid_threader::hybrid_threader): New.\n+\t(hybrid_threader::~hybrid_threader): New.\n+\t(hybrid_threader::before_dom_children): New.\n+\t(hybrid_threader::after_dom_children): New.\n+\t(execute_vrp_threader): New.\n+\t(class pass_vrp_threader): New.\n+\t(make_pass_vrp_threader): New.\n+\n+2021-09-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* output.h (enum section_flag): New.\n+\t(SECTION_FORGET): Remove.\n+\t(SECTION_ENTSIZE): Make it (1UL << 8) - 1.\n+\t(SECTION_STYLE_MASK): Define it based on other enum\n+\tvalues.\n+\t* varasm.c (switch_to_section): Remove unused handling of\n+\tSECTION_FORGET.\n+\n+2021-09-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* common.opt: Add new variable flag_default_complex_method.\n+\t* opts.c (finish_options): Handle flags related to\n+\t  x_flag_complex_method.\n+\t* toplev.c (process_options): Remove option handling related\n+\tto flag_complex_method.\n+\n+2021-09-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/102450\n+\t* gimple-fold.c (gimple_fold_builtin_memory_op): Avoid using\n+\ttype_for_size, instead use int_mode_for_size.\n+\n+2021-09-27  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR c/94726\n+\t* gimplify.c (gimplify_save_expr): Return early\n+\tif the type of val is error_mark_node.\n+\n+2021-09-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-ssanames.c (ssa_name_has_boolean_range): Use\n+\tget_range_query.\n+\n+2021-09-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-ssa-evrp-analyze.h (class evrp_range_analyzer): Remove\n+\tvrp_visit_cond_stmt.\n+\t* tree-ssa-dom.c (cprop_operand): Convert to range_query API.\n+\t(cprop_into_stmt): Same.\n+\t(dom_opt_dom_walker::optimize_stmt): Same.\n+\n+2021-09-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97351\n+\tPR tree-optimization/97352\n+\tPR tree-optimization/82426\n+\t* tree-vectorizer.h (dr_misalignment): Add vector type\n+\targument.\n+\t(aligned_access_p): Likewise.\n+\t(known_alignment_for_access_p): Likewise.\n+\t(vect_supportable_dr_alignment): Likewise.\n+\t(vect_known_alignment_in_bytes): Likewise.  Refactor.\n+\t(DR_MISALIGNMENT): Remove.\n+\t(vect_update_shared_vectype): Likewise.\n+\t* tree-vect-data-refs.c (dr_misalignment): Refactor, handle\n+\ta vector type with larger alignment requirement and apply\n+\tthe negative step adjustment here.\n+\t(vect_calculate_target_alignment): Remove.\n+\t(vect_compute_data_ref_alignment): Get explicit vector type\n+\targument, do not apply a negative step alignment adjustment\n+\there.\n+\t(vect_slp_analyze_node_alignment): Re-analyze alignment\n+\twhen we re-visit the DR with a bigger desired alignment but\n+\tkeep more precise results from smaller alignments.\n+\t* tree-vect-slp.c (vect_update_shared_vectype): Remove.\n+\t(vect_slp_analyze_node_operations_1): Do not update the\n+\tshared vector type on stmts.\n+\t* tree-vect-stmts.c (vect_analyze_stmt): Push/pop the\n+\tvector type of an SLP node to the representative stmt-info.\n+\t(vect_transform_stmt): Likewise.\n+\n+2021-09-27  liuhongt  <hongtao.liu@intel.com>\n+\n+\tRevert:\n+\t2021-09-09  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101059\n+\t* config/i386/sse.md (reduc_plus_scal_<mode>): Split to ..\n+\t(reduc_plus_scal_v4sf): .. this, New define_expand.\n+\t(reduc_plus_scal_v2df): .. and this, New define_expand.\n+\n 2021-09-26  liuhongt  <hongtao.liu@intel.com>\n \n \t* doc/extend.texi (Half-Precision): Remove storage only"}, {"sha": "fbdb92926d0af3819078d822677f537d91481768", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1 +1 @@\n-20210927\n+20210928"}, {"sha": "cf6a309ced0f480178a1c4292d585672fec787cb", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,8 @@\n+2021-09-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-opts.c (c_common_init_options_struct): Set also\n+\t  x_flag_default_complex_method.\n+\n 2021-09-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-omp.c (c_omp_split_clauses): Copy over OMP_CLAUSE_ALLOCATE_ALIGN."}, {"sha": "f60587a905dfedceb7f56e9957acfd9e5d40c54b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,11 @@\n+2021-09-27  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/102479\n+\t* pt.c (rewrite_template_parm): Handle single-level tsubst_args.\n+\tAvoid a tree cycle when assigning the DECL_TEMPLATE_PARMS for a\n+\trewritten ttp.\n+\t(alias_ctad_tweaks): Set current_template_parms accordingly.\n+\n 2021-09-23  Michel Morin  <mimomorin@gmail.com>\n \n \t* parser.c (cp_keyword_starts_decl_specifier_p): Do not"}, {"sha": "724f3ff019402f95377b6e05307eb239be129e3d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,22 @@\n+2021-09-27  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/94070\n+\t* trans-array.c (gfc_tree_array_size): New function to\n+\tfind size inline (whole array or one dimension).\n+\t(array_parameter_size): Use it, take stmt_block as arg.\n+\t(gfc_conv_array_parameter): Update call.\n+\t* trans-array.h (gfc_tree_array_size): Add prototype.\n+\t* trans-decl.c (gfor_fndecl_size0, gfor_fndecl_size1): Remove\n+\tthese global vars.\n+\t(gfc_build_intrinsic_function_decls): Remove their initialization.\n+\t* trans-expr.c (gfc_conv_procedure_call): Update\n+\tbounds of pointer/allocatable actual args to nonallocatable/nonpointer\n+\tdummies to be one based.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_shape): Fix case for\n+\tassumed rank with allocatable/pointer dummy.\n+\t(gfc_conv_intrinsic_size): Update to use inline function.\n+\t* trans.h (gfor_fndecl_size0, gfor_fndecl_size1): Remove var decl.\n+\n 2021-09-26  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/101334"}, {"sha": "c17e3a46b29d528f5e422ba0fc400e4e59642513", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,8 @@\n+2021-09-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* go-lang.c (go_langhook_init_options_struct): Set also\n+\t  x_flag_default_complex_method.\n+\n 2021-06-29  Ian Lance Taylor  <iant@golang.org>\n \n \t* go-gcc.cc (Gcc_backend::static_chain_variable): Set"}, {"sha": "1aea3f807130c8f78269bc46101b53afefeb42b6", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,8 @@\n+2021-09-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-lang.c (lto_init_options_struct): Set also\n+\t  x_flag_default_complex_method.\n+\n 2021-09-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/102024"}, {"sha": "929ff6121098f1060121cce840a6b46374b89f13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,70 @@\n+2021-09-27  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/102479\n+\t* g++.dg/cpp1z/class-deduction12.C: Also test alias CTAD in the\n+\tsame way.\n+\t* g++.dg/cpp1z/class-deduction99.C: New test.\n+\n+2021-09-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gcc.dg/torture/pr55107.c: Adjust.\n+\t* gcc.dg/tree-ssa/phi_on_compare-1.c: Adjust.\n+\t* gcc.dg/tree-ssa/phi_on_compare-2.c: Adjust.\n+\t* gcc.dg/tree-ssa/phi_on_compare-3.c: Adjust.\n+\t* gcc.dg/tree-ssa/phi_on_compare-4.c: Adjust.\n+\t* gcc.dg/tree-ssa/pr21559.c: Adjust.\n+\t* gcc.dg/tree-ssa/pr59597.c: Adjust.\n+\t* gcc.dg/tree-ssa/pr61839_1.c: Adjust.\n+\t* gcc.dg/tree-ssa/pr61839_3.c: Adjust.\n+\t* gcc.dg/tree-ssa/pr71437.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-11.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-16.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-18.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-2a.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-4.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-thread-14.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-vrp-thread-1.c: Adjust.\n+\t* gcc.dg/tree-ssa/vrp106.c: Adjust.\n+\t* gcc.dg/tree-ssa/vrp55.c: Adjust.\n+\n+2021-09-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.c-torture/compile/attr-complex-method-2.c: New test.\n+\t* gcc.c-torture/compile/attr-complex-method.c: New test.\n+\n+2021-09-27  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/94070\n+\t* gfortran.dg/c-interop/cf-out-descriptor-6.f90: Remove xfail.\n+\t* gfortran.dg/c-interop/size.f90: Remove xfail.\n+\t* gfortran.dg/intrinsic_size_3.f90: Update scan-tree-dump-times.\n+\t* gfortran.dg/transpose_optimization_2.f90: Likewise.\n+\t* gfortran.dg/size_optional_dim_1.f90: Add scan-tree-dump-not.\n+\t* gfortran.dg/assumed_rank_22.f90: New test.\n+\t* gfortran.dg/assumed_rank_22_aux.c: New test.\n+\n+2021-09-27  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR c/94726\n+\t* gcc.dg/pr94726.c: New test.\n+\n+2021-09-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97351\n+\tPR tree-optimization/97352\n+\tPR tree-optimization/82426\n+\t* gcc.target/i386/vect-pr82426.c: New testcase.\n+\t* gcc.target/i386/vect-pr97352.c: Likewise.\n+\n+2021-09-27  liuhongt  <hongtao.liu@intel.com>\n+\n+\tRevert:\n+\t2021-09-27  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/101059\n+\t* gcc.target/i386/sse2-pr101059.c: New test.\n+\t* gcc.target/i386/sse3-pr101059.c: New test.\n+\n 2021-09-26  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/101334"}, {"sha": "9a639c056dcc7b43ee44551dc580118f38e8a594", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,7 @@\n+2021-09-27  Vincent Lefevre  <vincent@vinc17.net>\n+\n+\t* floatformat.h: Update pathname for IBM long double description.\n+\n 2021-09-22  Alan Modra  <amodra@gmail.com>\n \n \t* obstack.h (__PTR_ALIGN): Expand and simplify __BPTR_ALIGN"}, {"sha": "12816cc837812b4ad9a2a0cb9f7a2d4564d8775b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,9 @@\n+2021-09-27  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/94070\n+\t* intrinsics/size.c (size0, size1): Comment that now not\n+\tused by newer compiler code.\n+\n 2021-09-26  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/101334"}, {"sha": "32514745a445293341149ab6e35b71957bffab52", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf966403d91afcf475347f0d06dd2b7215ae3611/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf966403d91afcf475347f0d06dd2b7215ae3611/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=cf966403d91afcf475347f0d06dd2b7215ae3611", "patch": "@@ -1,3 +1,20 @@\n+2021-09-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* team.c: Initialize start_data.\n+\t* testsuite/libgomp.graphite/force-parallel-4.c: Adjust.\n+\t* testsuite/libgomp.graphite/force-parallel-8.c: Adjust.\n+\n+2021-09-27  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/privatized-ref-2.f90: Change\n+\tdg-message back to dg-note.\n+\n+2021-09-27  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/94070\n+\t* testsuite/libgomp.oacc-fortran/privatized-ref-2.f90: Update\n+\texpected dg-note output.\n+\n 2021-09-22  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/55534"}]}