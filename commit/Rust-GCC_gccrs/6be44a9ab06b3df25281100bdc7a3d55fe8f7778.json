{"sha": "6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJlNDRhOWFiMDZiM2RmMjUyODExMDBiZGM3YTNkNTVmZThmNzc3OA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2014-07-30T10:48:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T10:48:49Z"}, "message": "exp_ch9.ads, [...]: Minor comment fixes.\n\n2014-07-30  Bob Duff  <duff@adacore.com>\n\n\t* exp_ch9.ads, sem_prag.adb, exp_ch4.adb, sem_ch13.adb: Minor comment\n\tfixes.\n\t* treepr.ads, treepr.adb (ppp): Make this debugging routine\n\taccept any type covered by Union_Id.\n\nFrom-SVN: r213248", "tree": {"sha": "de6edf5d0aa70a81c1cc3c2d68023d15f142afa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de6edf5d0aa70a81c1cc3c2d68023d15f142afa1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac072cb2f4dd884d48fb7527cadf2aa0b1a656d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac072cb2f4dd884d48fb7527cadf2aa0b1a656d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac072cb2f4dd884d48fb7527cadf2aa0b1a656d0"}], "stats": {"total": 91, "additions": 37, "deletions": 54}, "files": [{"sha": "868ddbbdc3cd2c0510234977482f1d635b13901e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "patch": "@@ -1,3 +1,10 @@\n+2014-07-30  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch9.ads, sem_prag.adb, exp_ch4.adb, sem_ch13.adb: Minor comment\n+\tfixes.\n+\t* treepr.ads, treepr.adb (ppp): Make this debugging routine\n+\taccept any type covered by Union_Id.\n+\n 2014-07-30  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch4.adb (Analyze_If_Expression): Resolve condition before"}, {"sha": "72e47d808f9fdd60a68032dae2b09e1f220615e3", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "patch": "@@ -4529,7 +4529,7 @@ package body Exp_Ch4 is\n       --  type of the access type is a task or contains tasks. In this case\n       --  the call to Init (Temp.all ...) is replaced by code that ensures\n       --  that tasks get activated (see Exp_Ch9.Build_Task_Allocate_Block\n-      --  for details). In addition, if the type T is a task T, then the\n+      --  for details). In addition, if the type T is a task type, then the\n       --  first argument to Init must be converted to the task record type.\n \n       declare"}, {"sha": "d9fa7d6d7fbf59f39ff8e9f2af62d928a1233905", "filename": "gcc/ada/exp_ch9.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Fexp_ch9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Fexp_ch9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.ads?ref=6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -173,7 +173,8 @@ package Exp_Ch9 is\n    --  allocated aggregates with default initialized components. Init_Stmts\n    --  contains the list of statements required to initialize the allocated\n    --  aggregate. It replaces the call to Init (Args) done by\n-   --  Build_Task_Allocate_Block.\n+   --  Build_Task_Allocate_Block. Also used to expand allocators containing\n+   --  build-in-place function calls.\n \n    function Build_Wrapper_Spec\n      (Subp_Id : Entity_Id;"}, {"sha": "1336e2132c4dcdac84f64e55348ef922c24cfbf9", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "patch": "@@ -2007,7 +2007,7 @@ package body Sem_Ch13 is\n                      --  the supported profile) to make sure that one of these\n                      --  packages is implicitly with'ed, since we need to have\n                      --  the tasking run time active for the pragma Priority to\n-                     --  have any effect. Previously with with'ed the package\n+                     --  have any effect. Previously we with'ed the package\n                      --  System.Tasking, but this package does not trigger the\n                      --  required initialization of the run-time library.\n "}, {"sha": "68b97481b72559ef60289c3e3e6b8514e7617d8d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "patch": "@@ -18342,9 +18342,9 @@ package body Sem_Prag is\n                --  supported profile) to make sure that one of these packages\n                --  is implicitly with'ed, since we need to have the tasking\n                --  run time active for the pragma Priority to have any effect.\n-               --  Previously with with'ed the package System.Tasking, but\n-               --  this package does not trigger the required initialization\n-               --  of the run-time library.\n+               --  Previously we with'ed the package System.Tasking, but this\n+               --  package does not trigger the required initialization of the\n+               --  run-time library.\n \n                declare\n                   Discard : Entity_Id;"}, {"sha": "4adf382bdd47fd9dca17057682fd21f7be690aa8", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 11, "deletions": 29, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "patch": "@@ -236,15 +236,6 @@ package body Treepr is\n       end case;\n    end p;\n \n-   --------\n-   -- pe --\n-   --------\n-\n-   procedure pe (E : Elist_Id) is\n-   begin\n-      Print_Tree_Elist (E);\n-   end pe;\n-\n    --------\n    -- pl --\n    --------\n@@ -323,15 +314,6 @@ package body Treepr is\n       end case;\n    end pn;\n \n-   --------\n-   -- pp --\n-   --------\n-\n-   procedure pp (N : Union_Id) is\n-   begin\n-      pn (N);\n-   end pp;\n-\n    ----------------\n    -- Print_Char --\n    ----------------\n@@ -1583,20 +1565,20 @@ package body Treepr is\n    -- pt --\n    --------\n \n-   procedure pt (N : Node_Id) is\n+   procedure pt (N : Union_Id) is\n    begin\n-      Print_Node_Subtree (N);\n+      case N is\n+         when List_Low_Bound .. List_High_Bound - 1 =>\n+            Print_List_Subtree (List_Id (N));\n+         when Node_Range =>\n+            Print_Node_Subtree (Node_Id (N));\n+         when Elist_Range =>\n+            Print_Elist_Subtree (Elist_Id (N));\n+         when others =>\n+            pp (N);\n+      end case;\n    end pt;\n \n-   ---------\n-   -- ppp --\n-   ---------\n-\n-   procedure ppp (N : Node_Id) is\n-   begin\n-      pt (N);\n-   end ppp;\n-\n    -------------------\n    -- Serial_Number --\n    -------------------"}, {"sha": "b913014d08ab6e8492f5b3460b59b6809fc64042", "filename": "gcc/ada/treepr.ads", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Ftreepr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6be44a9ab06b3df25281100bdc7a3d55fe8f7778/gcc%2Fada%2Ftreepr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.ads?ref=6be44a9ab06b3df25281100bdc7a3d55fe8f7778", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,20 +73,12 @@ package Treepr is\n    --  the definition of Union_Id. Historically this was only for printing\n    --  nodes, hence the name.\n \n-   procedure pp (N : Union_Id);\n-   pragma Export (Ada, pp);\n-   --  Identical to pn, present for historical reasons\n-\n-   procedure ppp (N : Node_Id);\n-   pragma Export (Ada, ppp);\n-   --  Same as Print_Node_Subtree\n-\n-   --  The following are no longer really needed, now that pn will print\n-   --  anything you throw at it.\n-\n-   procedure pe (E : Elist_Id);\n-   pragma Export (Ada, pe);\n-   --  Same as Print_Tree_Elist\n+   procedure pt (N : Union_Id);\n+   pragma Export (Ada, pt);\n+   --  Same as pn, except prints subtrees. For Nodes, it is exactly the same\n+   --  as Print_Node_Subtree. For Elists it is the same as Print_Elist_Subtree.\n+   --  For Lists, it is the same as Print_Tree_List. If given anything other\n+   --  than a Node, List, or Elist, same effect as pn.\n \n    procedure pl (L : Int);\n    pragma Export (Ada, pl);\n@@ -95,8 +87,9 @@ package Treepr is\n    --  on the left and add a minus sign. This just saves some typing in the\n    --  debugger.\n \n-   procedure pt (N : Node_Id);\n-   pragma Export (Ada, pt);\n-   --  Same as ppp\n+   procedure pe  (N : Union_Id) renames pt;\n+   procedure pp  (N : Union_Id) renames pn;\n+   procedure ppp (N : Union_Id) renames pt;\n+   --  Synonyms retained for historical reasons\n \n end Treepr;"}]}