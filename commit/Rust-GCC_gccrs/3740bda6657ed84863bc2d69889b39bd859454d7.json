{"sha": "3740bda6657ed84863bc2d69889b39bd859454d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0MGJkYTY2NTdlZDg0ODYzYmMyZDY5ODg5YjM5YmQ4NTk0NTRkNw==", "commit": {"author": {"name": "Paulo Matos", "email": "paulo@matos-sorge.com", "date": "2014-03-04T11:45:06Z"}, "committer": {"name": "Paulo Matos", "email": "pmatos@gcc.gnu.org", "date": "2014-03-04T11:45:06Z"}, "message": "tree-streamer.c (record_common_node): Assert we don't record nodes with type double.\n\n2014-03-04  Paulo Matos  <paulo@matos-sorge.com>\n\n        * tree-streamer.c (record_common_node): Assert we don't record\n        nodes with type double.\n        (preload_common_node): Skip type double, complex double and\n        double pointer since it is now frontend dependent due to\n        fshort-double option.\n\n2014-03-04  Paulo Matos  <paulo@matos-sorge.com>\n\n        * gcc.dg/lto/pr55113_0.c: New testcase.\n\nFrom-SVN: r208312", "tree": {"sha": "d3f1cfa6443c860c5862f9b21a9f7ad7fa2ee144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3f1cfa6443c860c5862f9b21a9f7ad7fa2ee144"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3740bda6657ed84863bc2d69889b39bd859454d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3740bda6657ed84863bc2d69889b39bd859454d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3740bda6657ed84863bc2d69889b39bd859454d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3740bda6657ed84863bc2d69889b39bd859454d7/comments", "author": {"login": "pmatos", "id": 7911, "node_id": "MDQ6VXNlcjc5MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/7911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmatos", "html_url": "https://github.com/pmatos", "followers_url": "https://api.github.com/users/pmatos/followers", "following_url": "https://api.github.com/users/pmatos/following{/other_user}", "gists_url": "https://api.github.com/users/pmatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmatos/subscriptions", "organizations_url": "https://api.github.com/users/pmatos/orgs", "repos_url": "https://api.github.com/users/pmatos/repos", "events_url": "https://api.github.com/users/pmatos/events{/privacy}", "received_events_url": "https://api.github.com/users/pmatos/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "91856735012800f9cf75affc9abe6c7bf56739c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91856735012800f9cf75affc9abe6c7bf56739c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91856735012800f9cf75affc9abe6c7bf56739c8"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "57bb1d5a711c344aa059f3fa4df833c0df33cc48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3740bda6657ed84863bc2d69889b39bd859454d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3740bda6657ed84863bc2d69889b39bd859454d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3740bda6657ed84863bc2d69889b39bd859454d7", "patch": "@@ -1,3 +1,11 @@\n+2014-03-04  Paulo Matos  <paulo@matos-sorge.com>\n+\n+        * tree-streamer.c (record_common_node): Assert we don't record\n+        nodes with type double.\n+        (preload_common_node): Skip type double, complex double and\n+        double pointer since it is now frontend dependent due to\n+        fshort-double option.\n+\n 2014-03-04  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/60405"}, {"sha": "3d8b5459ada50c276c467beeda14045e77052ecc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3740bda6657ed84863bc2d69889b39bd859454d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3740bda6657ed84863bc2d69889b39bd859454d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3740bda6657ed84863bc2d69889b39bd859454d7", "patch": "@@ -1,3 +1,7 @@\n+2014-03-04  Paulo Matos  <paulo@matos-sorge.com>\n+\n+        * gcc.dg/lto/pr55113_0.c: New testcase.\n+\n 2014-03-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/60376"}, {"sha": "8ef11dc47f3b69649ffc357d363b7f5ec61ae050", "filename": "gcc/testsuite/gcc.dg/lto/pr55113_0.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3740bda6657ed84863bc2d69889b39bd859454d7/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr55113_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3740bda6657ed84863bc2d69889b39bd859454d7/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr55113_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr55113_0.c?ref=3740bda6657ed84863bc2d69889b39bd859454d7", "patch": "@@ -0,0 +1,13 @@\n+/* PR 55113 */\n+/* { dg-lto-do link } */\n+/* { dg-lto-options { { -flto -fshort-double -O0 } } }*/\n+/* { dg-skip-if \"PR60410\" { { x86_64-*-* i?86-*-* } && lp64 } } */\n+\n+int \n+main(void)\n+{\n+  float a = 1.0;\n+  float b = 2.0;\n+  double f = a + b * 1e-12;\n+  return (int)f - 1;\n+}"}, {"sha": "4b3e3e4cd5a00013e8b7200b66bbf57560e659a2", "filename": "gcc/tree-streamer.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3740bda6657ed84863bc2d69889b39bd859454d7/gcc%2Ftree-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3740bda6657ed84863bc2d69889b39bd859454d7/gcc%2Ftree-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer.c?ref=3740bda6657ed84863bc2d69889b39bd859454d7", "patch": "@@ -264,7 +264,8 @@ record_common_node (struct streamer_tree_cache_d *cache, tree node)\n \n   gcc_checking_assert (node != boolean_type_node\n \t\t       && node != boolean_true_node\n-\t\t       && node != boolean_false_node);\n+\t\t       && node != boolean_false_node\n+\t\t       && node != double_type_node);\n \n   /* We have to make sure to fill exactly the same number of\n      elements for all frontends.  That can include NULL trees.\n@@ -315,10 +316,14 @@ preload_common_nodes (struct streamer_tree_cache_d *cache)\n     record_common_node (cache, sizetype_tab[i]);\n \n   for (i = 0; i < TI_MAX; i++)\n-    /* Skip boolean type and constants, they are frontend dependent.  */\n+    /* Skip boolean type and constants. They are frontend dependent.\n+       Skip double type, frontend dependent due to -fshort-double.  */\n     if (i != TI_BOOLEAN_TYPE\n \t&& i != TI_BOOLEAN_FALSE\n-\t&& i != TI_BOOLEAN_TRUE)\n+\t&& i != TI_BOOLEAN_TRUE\n+\t&& i != TI_DOUBLE_TYPE\n+\t&& i != TI_COMPLEX_DOUBLE_TYPE\n+\t&& i != TI_DOUBLE_PTR_TYPE)\n       record_common_node (cache, global_trees[i]);\n }\n "}]}