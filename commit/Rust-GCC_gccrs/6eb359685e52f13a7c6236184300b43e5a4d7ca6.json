{"sha": "6eb359685e52f13a7c6236184300b43e5a4d7ca6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmViMzU5Njg1ZTUyZjEzYTdjNjIzNjE4NDMwMGI0M2U1YTRkN2NhNg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-10-25T15:13:05Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-10-25T15:13:05Z"}, "message": "re PR c++/7228 (ICE when using member template and template function)\n\n        PR c++/7228\n        * cp-tree.h (CLASSTYPE_READONLY_FIELDS_NEED_INIT): Check that\n        lang_type structure exists before accessing field.\n        (SET_CLASSTYPE_READONLY_FIELDS_NEED_INIT): New macro.\n        (CLASSTYPE_REF_FIELDS_NEED_INIT): Similar.\n        (SET_CLASSTYPE_REF_FIELDS_NEED_INIT): New macro.\n        * class.c (check_field_decls): Use new macros.\n        * typeck2.c (process_init_constructor): Remove redundant check for\n        existence of lang_type structure.\n\nFrom-SVN: r58532", "tree": {"sha": "ee8ceb671f247299c4b6756beaccd217014712ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee8ceb671f247299c4b6756beaccd217014712ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6eb359685e52f13a7c6236184300b43e5a4d7ca6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb359685e52f13a7c6236184300b43e5a4d7ca6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eb359685e52f13a7c6236184300b43e5a4d7ca6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb359685e52f13a7c6236184300b43e5a4d7ca6/comments", "author": null, "committer": null, "parents": [{"sha": "8c40b097ec9ca1dcc51f7d03a7408dee50331bd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "119bdc12b994658cf842902435ecab19494ca70e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb359685e52f13a7c6236184300b43e5a4d7ca6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb359685e52f13a7c6236184300b43e5a4d7ca6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6eb359685e52f13a7c6236184300b43e5a4d7ca6", "patch": "@@ -1,3 +1,15 @@\n+2002-10-24  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR c++/7228\n+\t* cp-tree.h (CLASSTYPE_READONLY_FIELDS_NEED_INIT): Check that\n+\tlang_type structure exists before accessing field.\n+\t(SET_CLASSTYPE_READONLY_FIELDS_NEED_INIT): New macro.\n+\t(CLASSTYPE_REF_FIELDS_NEED_INIT): Similar.\n+\t(SET_CLASSTYPE_REF_FIELDS_NEED_INIT): New macro.\n+\t* class.c (check_field_decls): Use new macros.\n+\t* typeck2.c (process_init_constructor): Remove redundant check for\n+\texistence of lang_type structure.\n+\n 2002-10-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* class.c (end_of_base): New method."}, {"sha": "f4b9beb39eac504663571df7664c43963f6b7a1f", "filename": "gcc/cp/class.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb359685e52f13a7c6236184300b43e5a4d7ca6/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb359685e52f13a7c6236184300b43e5a4d7ca6/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=6eb359685e52f13a7c6236184300b43e5a4d7ca6", "patch": "@@ -3264,7 +3264,7 @@ check_field_decls (tree t, tree *access_decls,\n  \t{\n \t  CLASSTYPE_NON_POD_P (t) = 1;\n \t  if (DECL_INITIAL (x) == NULL_TREE)\n-\t    CLASSTYPE_REF_FIELDS_NEED_INIT (t) = 1;\n+\t    SET_CLASSTYPE_REF_FIELDS_NEED_INIT (t, 1);\n \n \t  /* ARM $12.6.2: [A member initializer list] (or, for an\n \t     aggregate, initialization by a brace-enclosed list) is the\n@@ -3299,7 +3299,7 @@ check_field_decls (tree t, tree *access_decls,\n \t{\n \t  C_TYPE_FIELDS_READONLY (t) = 1;\n \t  if (DECL_INITIAL (x) == NULL_TREE)\n-\t    CLASSTYPE_READONLY_FIELDS_NEED_INIT (t) = 1;\n+\t    SET_CLASSTYPE_READONLY_FIELDS_NEED_INIT (t, 1);\n \n \t  /* ARM $12.6.2: [A member initializer list] (or, for an\n \t     aggregate, initialization by a brace-enclosed list) is the\n@@ -3316,8 +3316,9 @@ check_field_decls (tree t, tree *access_decls,\n       else if (IS_AGGR_TYPE (type))\n \t{\n \t  C_TYPE_FIELDS_READONLY (t) |= C_TYPE_FIELDS_READONLY (type);\n-\t  CLASSTYPE_READONLY_FIELDS_NEED_INIT (t) \n-\t    |= CLASSTYPE_READONLY_FIELDS_NEED_INIT (type);\n+\t  SET_CLASSTYPE_READONLY_FIELDS_NEED_INIT (t,\n+\t    CLASSTYPE_READONLY_FIELDS_NEED_INIT (t)\n+\t    | CLASSTYPE_READONLY_FIELDS_NEED_INIT (type));\n \t}\n \n       /* Core issue 80: A nonstatic data member is required to have a"}, {"sha": "40c4ab50e2a3b7624882a7a237a700c6669627e3", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb359685e52f13a7c6236184300b43e5a4d7ca6/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb359685e52f13a7c6236184300b43e5a4d7ca6/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=6eb359685e52f13a7c6236184300b43e5a4d7ca6", "patch": "@@ -1476,13 +1476,21 @@ struct lang_type GTY(())\n #define CLASSTYPE_DECLARED_CLASS(NODE) \\\n   (LANG_TYPE_CLASS_CHECK (NODE)->declared_class)\n \n-/* Nonzero if this class has const members which have no specified initialization.  */\n-#define CLASSTYPE_READONLY_FIELDS_NEED_INIT(NODE) \\\n-  (LANG_TYPE_CLASS_CHECK (NODE)->h.const_needs_init)\n-\n-/* Nonzero if this class has ref members which have no specified initialization.  */\n-#define CLASSTYPE_REF_FIELDS_NEED_INIT(NODE) \\\n-  (LANG_TYPE_CLASS_CHECK (NODE)->h.ref_needs_init)\n+/* Nonzero if this class has const members\n+   which have no specified initialization.  */\n+#define CLASSTYPE_READONLY_FIELDS_NEED_INIT(NODE)\t\\\n+  (TYPE_LANG_SPECIFIC (NODE)\t\t\t\t\\\n+   ? LANG_TYPE_CLASS_CHECK (NODE)->h.const_needs_init : 0)\n+#define SET_CLASSTYPE_READONLY_FIELDS_NEED_INIT(NODE, VALUE) \\\n+  (LANG_TYPE_CLASS_CHECK (NODE)->h.const_needs_init = (VALUE))\n+\n+/* Nonzero if this class has ref members\n+   which have no specified initialization.  */\n+#define CLASSTYPE_REF_FIELDS_NEED_INIT(NODE)\t\t\\\n+  (TYPE_LANG_SPECIFIC (NODE)\t\t\t\t\\\n+   ? LANG_TYPE_CLASS_CHECK (NODE)->h.ref_needs_init : 0)\n+#define SET_CLASSTYPE_REF_FIELDS_NEED_INIT(NODE, VALUE) \\\n+  (LANG_TYPE_CLASS_CHECK (NODE)->h.ref_needs_init = (VALUE))\n \n /* Nonzero if this class is included from a header file which employs\n    `#pragma interface', and it is not included in its implementation file.  */"}, {"sha": "b8d0869d1efd74f761d220869cc96799772d2d44", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb359685e52f13a7c6236184300b43e5a4d7ca6/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb359685e52f13a7c6236184300b43e5a4d7ca6/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=6eb359685e52f13a7c6236184300b43e5a4d7ca6", "patch": "@@ -830,8 +830,7 @@ process_init_constructor (type, init, elts)\n \t    {\n \t      if (TREE_READONLY (field))\n \t\terror (\"uninitialized const member `%D'\", field);\n-\t      else if (TYPE_LANG_SPECIFIC (TREE_TYPE (field))\n-\t\t       && CLASSTYPE_READONLY_FIELDS_NEED_INIT (TREE_TYPE (field)))\n+\t      else if (CLASSTYPE_READONLY_FIELDS_NEED_INIT (TREE_TYPE (field)))\n \t\terror (\"member `%D' with uninitialized const fields\",\n \t\t\t  field);\n \t      else if (TREE_CODE (TREE_TYPE (field)) == REFERENCE_TYPE)"}]}