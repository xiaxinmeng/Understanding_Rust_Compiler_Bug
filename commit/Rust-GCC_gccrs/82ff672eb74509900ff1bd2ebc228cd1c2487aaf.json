{"sha": "82ff672eb74509900ff1bd2ebc228cd1c2487aaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJmZjY3MmViNzQ1MDk5MDBmZjFiZDJlYmMyMjhjZDFjMjQ4N2FhZg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-12-03T23:30:21Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-12-03T23:30:21Z"}, "message": "verify.c (subroutine_nesting): New function.\n\n\n\t* verify.c (subroutine_nesting):  New function.\n\t(verify_jvm_instructions):  Use it to fix logic for checking that\n\twe're done with the current subroutine.\n\n\t* verify.c (verify_jvm_instruction): For OPCODE_checkcast and\n\tOPCODE_instanceof use POP_TYPE macro for better diagnostics.\n\nFrom-SVN: r47572", "tree": {"sha": "84ee71f240d009ca160df23fe23e3cd96e223623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84ee71f240d009ca160df23fe23e3cd96e223623"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82ff672eb74509900ff1bd2ebc228cd1c2487aaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ff672eb74509900ff1bd2ebc228cd1c2487aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82ff672eb74509900ff1bd2ebc228cd1c2487aaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82ff672eb74509900ff1bd2ebc228cd1c2487aaf/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fe038e86158cc0e9cee1538575fd781f44d32de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fe038e86158cc0e9cee1538575fd781f44d32de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fe038e86158cc0e9cee1538575fd781f44d32de"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "87ad138ab6aa3e49d151f23d702f578656b7d46b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82ff672eb74509900ff1bd2ebc228cd1c2487aaf/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82ff672eb74509900ff1bd2ebc228cd1c2487aaf/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=82ff672eb74509900ff1bd2ebc228cd1c2487aaf", "patch": "@@ -1,3 +1,12 @@\n+2001-12-03  Per Bothner  <per@bothner.com>\n+\n+\t* verify.c (subroutine_nesting):  New function.\n+\t(verify_jvm_instructions):  Use it to fix logic for checking that\n+\twe're done with the current subroutine.\n+\n+\t* verify.c (verify_jvm_instruction): For OPCODE_checkcast and\n+\tOPCODE_instanceof use POP_TYPE macro for better diagnostics.\n+\n 2001-12-03  Per Bothner  <per@bothner.com>\n \n \t* jcf.h:  Fix obvious typo in comment."}, {"sha": "6a03b865e7183600c82baa25fbe4577a60db6cff", "filename": "gcc/java/verify.c", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82ff672eb74509900ff1bd2ebc228cd1c2487aaf/gcc%2Fjava%2Fverify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82ff672eb74509900ff1bd2ebc228cd1c2487aaf/gcc%2Fjava%2Fverify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify.c?ref=82ff672eb74509900ff1bd2ebc228cd1c2487aaf", "patch": "@@ -104,6 +104,22 @@ check_pending_block (target_label)\n   return NULL;\n }\n \n+/* Count the number of nested jsr calls needed to reach LABEL. */\n+\n+static int\n+subroutine_nesting (tree label)\n+{\n+  int nesting = 0;\n+  while (label != NULL_TREE && LABEL_IN_SUBR (label))\n+    {\n+      if (! LABEL_IS_SUBR_START(label))\n+\tlabel = LABEL_SUBR_START (label);\n+      label = LABEL_SUBR_CONTEXT (label);\n+      nesting++;\n+    }\n+  return nesting;\n+}\n+\n /* Return the \"merged\" types of TYPE1 and TYPE2.\n    If either is primitive, the other must match (after promotion to int).\n    For reference types, return the common super-class.\n@@ -497,11 +513,9 @@ verify_jvm_instructions (jcf, byte_ops, length)\n       if (current_subr \n \t  && PC == INVALID_PC)\n \t{\n-\t  tree caller = LABEL_SUBR_CONTEXT (current_subr);\n-\n \t  if (pending_blocks == NULL_TREE\n-\t      || ! LABEL_IN_SUBR (pending_blocks)\n-\t      || LABEL_SUBR_START (pending_blocks) == caller)\n+\t      || (subroutine_nesting (pending_blocks)\n+\t\t  < subroutine_nesting (current_subr)))\n \t    {\n \t      int size = DECL_MAX_LOCALS(current_function_decl)+stack_pointer;\n \t      tree ret_map = LABEL_RETURN_TYPE_STATE (current_subr);\n@@ -511,7 +525,7 @@ verify_jvm_instructions (jcf, byte_ops, length)\n \t\t have returned to an earlier caller.  Obviously a\n \t\t \"ret\" can only return one level, but a throw may\n \t\t return many levels.*/\n-\t      current_subr = caller;\n+\t      current_subr = LABEL_SUBR_CONTEXT (current_subr);\n \n \t      if (RETURN_MAP_ADJUSTED (ret_map))\n \t\t{\n@@ -1174,12 +1188,14 @@ verify_jvm_instructions (jcf, byte_ops, length)\n \t  break;\n \n \tcase OPCODE_checkcast:\n-\t  pop_type (ptr_type_node);\n+\t  POP_TYPE (object_ptr_type_node,\n+\t\t    \"checkcast operand is not a pointer\");\n \t  type = get_class_constant (current_jcf, IMMEDIATE_u2);\n \t  PUSH_TYPE (type);\n \t  break;\n \tcase OPCODE_instanceof:\n-\t  pop_type (ptr_type_node);\n+\t  POP_TYPE (object_ptr_type_node,\n+\t\t    \"instanceof operand is not a pointer\");\n \t  get_class_constant (current_jcf, IMMEDIATE_u2);\n \t  PUSH_TYPE (int_type_node);\n \t  break;"}]}