{"sha": "a32b99ad60f2df32ed7122cc549afacf708ed492", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMyYjk5YWQ2MGYyZGYzMmVkNzEyMmNjNTQ5YWZhY2Y3MDhlZDQ5Mg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-10-15T12:45:58Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-10-15T12:45:58Z"}, "message": "rx.c (rx_option_optimization): Change to rx_override_options_after_change.\n\n\t* config/rx/rx.c (rx_option_optimization): Change to\n\trx_override_options_after_change.  Don't change\n\tflag_lto_compression_level.  Don't check for changes to whether\n\tFPU instructions can be used.  Check and set only\n\tflag_finite_math_only, not other fast-math flags.\n\t(rx_option_override): Call rx_override_options_after_change.\n\t(TARGET_OPTION_OPTIMIZATION): Remove.\n\t(TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE): Define.\n\nFrom-SVN: r165508", "tree": {"sha": "5c11a9816a20d0390ef224d9b07b88e16f4f92ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c11a9816a20d0390ef224d9b07b88e16f4f92ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a32b99ad60f2df32ed7122cc549afacf708ed492", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32b99ad60f2df32ed7122cc549afacf708ed492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a32b99ad60f2df32ed7122cc549afacf708ed492", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32b99ad60f2df32ed7122cc549afacf708ed492/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55bd9c35eb4196c89c571ebceff7fba7715d4e79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55bd9c35eb4196c89c571ebceff7fba7715d4e79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55bd9c35eb4196c89c571ebceff7fba7715d4e79"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "271988a054240303f9b83185ca2da824d2e79689", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32b99ad60f2df32ed7122cc549afacf708ed492/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32b99ad60f2df32ed7122cc549afacf708ed492/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a32b99ad60f2df32ed7122cc549afacf708ed492", "patch": "@@ -1,3 +1,14 @@\n+2010-10-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/rx/rx.c (rx_option_optimization): Change to\n+\trx_override_options_after_change.  Don't change\n+\tflag_lto_compression_level.  Don't check for changes to whether\n+\tFPU instructions can be used.  Check and set only\n+\tflag_finite_math_only, not other fast-math flags.\n+\t(rx_option_override): Call rx_override_options_after_change.\n+\t(TARGET_OPTION_OPTIMIZATION): Remove.\n+\t(TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE): Define.\n+\n 2010-10-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/rs6000/rs6000.c (rs6000_option_optimization): Don't"}, {"sha": "f087c665d06b3b9cdc166336ab7bb0a487f9f90d", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 11, "deletions": 20, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32b99ad60f2df32ed7122cc549afacf708ed492/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32b99ad60f2df32ed7122cc549afacf708ed492/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=a32b99ad60f2df32ed7122cc549afacf708ed492", "patch": "@@ -2191,41 +2191,30 @@ rx_handle_option (size_t code, const char *  arg ATTRIBUTE_UNUSED, int value)\n   return true;\n }\n \n-/* Implement TARGET_OPTION_OPTIMIZATION.  */\n+/* Implement TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE.  */\n \n static void\n-rx_option_optimization (int level ATTRIBUTE_UNUSED, int size ATTRIBUTE_UNUSED)\n+rx_override_options_after_change (void)\n {\n   static bool first_time = TRUE;\n-  static bool saved_allow_rx_fpu = TRUE;\n \n   if (first_time)\n     {\n       /* If this is the first time through and the user has not disabled\n-\t the use of RX FPU hardware then enable unsafe math optimizations,\n-\t since the FPU instructions themselves are unsafe.  */\n+\t the use of RX FPU hardware then enable -ffinite-math-only,\n+\t since the FPU instructions do not support NaNs and infinities.  */\n       if (TARGET_USE_FPU)\n-\tset_fast_math_flags (true);\n+\tflag_finite_math_only = 1;\n \n-      /* FIXME: For some unknown reason LTO compression is not working,\n-\t at least on my local system.  So set the default compression\n-\t level to none, for now.  */\n-      if (flag_lto_compression_level == -1)\n-        flag_lto_compression_level = 0;\n-\n-      saved_allow_rx_fpu = ALLOW_RX_FPU_INSNS;\n       first_time = FALSE;\n     }\n   else\n     {\n       /* Alert the user if they are changing the optimization options\n \t to use IEEE compliant floating point arithmetic with RX FPU insns.  */\n       if (TARGET_USE_FPU\n-\t  && ! fast_math_flags_set_p ())\n-\twarning (0, \"RX FPU instructions are not IEEE compliant\");\n-\n-      if (saved_allow_rx_fpu != ALLOW_RX_FPU_INSNS)\n-\terror (\"Changing the FPU insns/math optimizations pairing is not supported\");\n+\t  && !flag_finite_math_only)\n+\twarning (0, \"RX FPU instructions do not support NaNs and infinities\");\n     }\n }\n \n@@ -2235,6 +2224,8 @@ rx_option_override (void)\n   /* This target defaults to strict volatile bitfields.  */\n   if (flag_strict_volatile_bitfields < 0)\n     flag_strict_volatile_bitfields = 1;\n+\n+  rx_override_options_after_change ();\n }\n \n \f\n@@ -2834,8 +2825,8 @@ rx_memory_move_cost (enum machine_mode mode, enum reg_class regclass, bool in)\n #undef  TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE\t\t\trx_option_override\n \n-#undef  TARGET_OPTION_OPTIMIZATION\n-#define TARGET_OPTION_OPTIMIZATION\t\trx_option_optimization\n+#undef  TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE\n+#define TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE\trx_override_options_after_change\n \n #undef  TARGET_EXCEPT_UNWIND_INFO\n #define TARGET_EXCEPT_UNWIND_INFO\t\tsjlj_except_unwind_info"}]}