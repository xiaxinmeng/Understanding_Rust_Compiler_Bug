{"sha": "6cb0725cdbef47a7486629b7933f51a29a591781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNiMDcyNWNkYmVmNDdhNzQ4NjYyOWI3OTMzZjUxYTI5YTU5MTc4MQ==", "commit": {"author": {"name": "Andrew Waterman", "email": "andrew@sifive.com", "date": "2017-12-08T00:44:13Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2017-12-08T00:44:13Z"}, "message": "Add srodata section support to riscv port.\n\n\t2017-12-07  Andrew Waterman  <andrew@sifive.com>\n\tgcc/\n\t* config/riscv/riscv.c (TARGET_ASM_SELECT_SECTION): New define.\n\t(TARGET_HAVE_SRODATA_SECTION): New define.\n\t(riscv_select_section): New function.\n\nFrom-SVN: r255491", "tree": {"sha": "bca6dbdbf3d5933fbbf58250160a811a10d723f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bca6dbdbf3d5933fbbf58250160a811a10d723f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cb0725cdbef47a7486629b7933f51a29a591781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb0725cdbef47a7486629b7933f51a29a591781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb0725cdbef47a7486629b7933f51a29a591781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb0725cdbef47a7486629b7933f51a29a591781/comments", "author": {"login": "aswaterman", "id": 1031106, "node_id": "MDQ6VXNlcjEwMzExMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1031106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aswaterman", "html_url": "https://github.com/aswaterman", "followers_url": "https://api.github.com/users/aswaterman/followers", "following_url": "https://api.github.com/users/aswaterman/following{/other_user}", "gists_url": "https://api.github.com/users/aswaterman/gists{/gist_id}", "starred_url": "https://api.github.com/users/aswaterman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aswaterman/subscriptions", "organizations_url": "https://api.github.com/users/aswaterman/orgs", "repos_url": "https://api.github.com/users/aswaterman/repos", "events_url": "https://api.github.com/users/aswaterman/events{/privacy}", "received_events_url": "https://api.github.com/users/aswaterman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68a970039e06d40e6d33626030cee86761ca4801", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a970039e06d40e6d33626030cee86761ca4801", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a970039e06d40e6d33626030cee86761ca4801"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "b9d7ed742cb70f55d27c01757073d82ecdbb772b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb0725cdbef47a7486629b7933f51a29a591781/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb0725cdbef47a7486629b7933f51a29a591781/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cb0725cdbef47a7486629b7933f51a29a591781", "patch": "@@ -1,3 +1,9 @@\n+2017-12-07  Andrew Waterman  <andrew@sifive.com>\n+\n+\t* config/riscv/riscv.c (TARGET_ASM_SELECT_SECTION): New define.\n+\t(TARGET_HAVE_SRODATA_SECTION): New define.\n+\t(riscv_select_section): New function.\n+\n 2017-12-08  Joseph Myers  <joseph@codesourcery.com>\n \t    Alexander Monakov  <amonakov@ispras.ru>\n \t    Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "cfab2e77686aa5684154042e19a458d9fd880ae2", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb0725cdbef47a7486629b7933f51a29a591781/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb0725cdbef47a7486629b7933f51a29a591781/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=6cb0725cdbef47a7486629b7933f51a29a591781", "patch": "@@ -3042,6 +3042,22 @@ riscv_in_small_data_p (const_tree x)\n   return riscv_size_ok_for_small_data_p (int_size_in_bytes (TREE_TYPE (x)));\n }\n \n+/* Switch to the appropriate section for output of DECL.  */\n+\n+static section *\n+riscv_select_section (tree decl, int reloc,\n+\t\t      unsigned HOST_WIDE_INT align)\n+{\n+  switch (categorize_decl_for_section (decl, reloc))\n+    {\n+    case SECCAT_SRODATA:\n+      return get_named_section (decl, \".srodata\", reloc);\n+\n+    default:\n+      return default_elf_select_section (decl, reloc, align);\n+    }\n+}\n+\n /* Return a section for X, handling small data. */\n \n static section *\n@@ -4320,6 +4336,12 @@ riscv_constant_alignment (const_tree exp, HOST_WIDE_INT align)\n #undef TARGET_IN_SMALL_DATA_P\n #define TARGET_IN_SMALL_DATA_P riscv_in_small_data_p\n \n+#undef TARGET_HAVE_SRODATA_SECTION\n+#define TARGET_HAVE_SRODATA_SECTION true\n+\n+#undef TARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION riscv_select_section\n+\n #undef TARGET_ASM_SELECT_RTX_SECTION\n #define TARGET_ASM_SELECT_RTX_SECTION  riscv_elf_select_rtx_section\n "}]}