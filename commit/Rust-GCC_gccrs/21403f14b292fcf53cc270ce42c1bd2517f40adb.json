{"sha": "21403f14b292fcf53cc270ce42c1bd2517f40adb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE0MDNmMTRiMjkyZmNmNTNjYzI3MGNlNDJjMWJkMjUxN2Y0MGFkYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-13T22:32:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-13T22:32:39Z"}, "message": "(fold): When converting a COND_EXPR to an ABS_EXPR, get the types\nright for ABS_EXPR to work.\n\nFrom-SVN: r9939", "tree": {"sha": "b043ec48f6fcfb58f9ed3e8dbcd8a0670f5418aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b043ec48f6fcfb58f9ed3e8dbcd8a0670f5418aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21403f14b292fcf53cc270ce42c1bd2517f40adb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21403f14b292fcf53cc270ce42c1bd2517f40adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21403f14b292fcf53cc270ce42c1bd2517f40adb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21403f14b292fcf53cc270ce42c1bd2517f40adb/comments", "author": null, "committer": null, "parents": [{"sha": "dbfac751de5465c89ecc64e3e7a4e3fd300691f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbfac751de5465c89ecc64e3e7a4e3fd300691f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbfac751de5465c89ecc64e3e7a4e3fd300691f0"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "73ec234e720410cc2f393c09e47bf177acd31542", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21403f14b292fcf53cc270ce42c1bd2517f40adb/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21403f14b292fcf53cc270ce42c1bd2517f40adb/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=21403f14b292fcf53cc270ce42c1bd2517f40adb", "patch": "@@ -4854,12 +4854,16 @@ fold (expr)\n \t      case GE_EXPR:\n \t      case GT_EXPR:\n \t\treturn pedantic_non_lvalue\n-\t\t  (fold (build1 (ABS_EXPR, type, arg1)));\n+\t\t  (convert (type, fold (build1 (ABS_EXPR,\n+\t\t\t\t\t\tTREE_TYPE (arg1), arg1))));\n \t      case LE_EXPR:\n \t      case LT_EXPR:\n \t\treturn pedantic_non_lvalue\n \t\t  (fold (build1 (NEGATE_EXPR, type,\n-\t\t\t\t fold (build1 (ABS_EXPR, type, arg1)))));\n+\t\t\t\t convert (type,\n+\t\t\t\t\t  fold (build1 (ABS_EXPR,\n+\t\t\t\t\t\t\tTREE_TYPE (arg1),\n+\t\t\t\t\t\t\targ1))))));\n \t      }\n \n \t  /* If this is A != 0 ? A : 0, this is simply A.  For ==, it is"}]}