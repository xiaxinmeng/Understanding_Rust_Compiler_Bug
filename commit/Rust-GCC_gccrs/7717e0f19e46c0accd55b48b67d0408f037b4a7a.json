{"sha": "7717e0f19e46c0accd55b48b67d0408f037b4a7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcxN2UwZjE5ZTQ2YzBhY2NkNTViNDhiNjdkMDQwOGYwMzdiNGE3YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-08-21T18:33:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-08-21T18:33:07Z"}, "message": "re PR c++/67240 ([concepts] Implicit conversion constraints are not respected)\n\n\tPR c++/67240\n\t* constraint.cc (satisfy_implicit_conversion_constraint): Also\n\tcheck for NULL_TREE.\n\nFrom-SVN: r227081", "tree": {"sha": "9ce9e3c332b9ac7a95e7ca2f28488c84378c7924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ce9e3c332b9ac7a95e7ca2f28488c84378c7924"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7717e0f19e46c0accd55b48b67d0408f037b4a7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7717e0f19e46c0accd55b48b67d0408f037b4a7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7717e0f19e46c0accd55b48b67d0408f037b4a7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7717e0f19e46c0accd55b48b67d0408f037b4a7a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f291336269664e5a89c94335c30dfed38142803f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f291336269664e5a89c94335c30dfed38142803f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f291336269664e5a89c94335c30dfed38142803f"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "c2a1206c66d019b008af5dd00961869cc85ec656", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7717e0f19e46c0accd55b48b67d0408f037b4a7a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7717e0f19e46c0accd55b48b67d0408f037b4a7a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7717e0f19e46c0accd55b48b67d0408f037b4a7a", "patch": "@@ -1,3 +1,9 @@\n+2015-08-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/67240\n+\t* constraint.cc (satisfy_implicit_conversion_constraint): Also\n+\tcheck for NULL_TREE.\n+\n 2015-08-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (grokvardecl): Simplify the latter."}, {"sha": "cb82535af49fe68313b1a4108d66f687afdcf009", "filename": "gcc/cp/constraint.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7717e0f19e46c0accd55b48b67d0408f037b4a7a/gcc%2Fcp%2Fconstraint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7717e0f19e46c0accd55b48b67d0408f037b4a7a/gcc%2Fcp%2Fconstraint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstraint.cc?ref=7717e0f19e46c0accd55b48b67d0408f037b4a7a", "patch": "@@ -1775,7 +1775,7 @@ satisfy_implicit_conversion_constraint (tree t, tree args,\n      of the form TYPE <unspecified> = EXPR.  */\n   tree conv =\n     perform_direct_initialization_if_possible (type, expr, false, complain);\n-  if (conv == error_mark_node)\n+  if (conv == NULL_TREE || conv == error_mark_node)\n     return boolean_false_node;\n   else\n     return boolean_true_node;"}, {"sha": "c4dd38fe5b45615f40f6ee21a576ba5e39e0d682", "filename": "gcc/testsuite/g++.dg/concepts/iconv1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7717e0f19e46c0accd55b48b67d0408f037b4a7a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ficonv1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7717e0f19e46c0accd55b48b67d0408f037b4a7a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ficonv1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Ficonv1.C?ref=7717e0f19e46c0accd55b48b67d0408f037b4a7a", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/67240\n+// { dg-options -std=c++1z }\n+\n+int foo(int x)\n+{\n+    return x;\n+}\n+ \n+template <typename T>\n+concept bool C1 = requires (T x) {\n+    {foo(x)} -> int&;\n+};\n+\n+template <typename T>\n+concept bool C2 = requires (T x) {\n+    {foo(x)} -> void;\n+};\n+ \n+static_assert( C1<int> );\t// { dg-error \"assert\" }\n+static_assert( C2<int> );\t// { dg-error \"assert\" }"}]}