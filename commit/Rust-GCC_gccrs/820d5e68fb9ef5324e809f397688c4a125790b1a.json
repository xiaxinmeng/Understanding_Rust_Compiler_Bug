{"sha": "820d5e68fb9ef5324e809f397688c4a125790b1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIwZDVlNjhmYjllZjUzMjRlODA5ZjM5NzY4OGM0YTEyNTc5MGIxYQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T21:33:28Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T21:33:28Z"}, "message": "trans-array.c (get_array_ref_dim): Change argument type and name.\n\n\t* trans-array.c (get_array_ref_dim): Change argument type and name.\n\tObtain previous argument from the new argument in the body.\n\t(gfc_trans_create_temp_arry, gfc_conv_loop_setup): Update calls.\n\nFrom-SVN: r180861", "tree": {"sha": "378af56e7a8647d2ded7d4b8bf01b1b818e16aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/378af56e7a8647d2ded7d4b8bf01b1b818e16aab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/820d5e68fb9ef5324e809f397688c4a125790b1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820d5e68fb9ef5324e809f397688c4a125790b1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/820d5e68fb9ef5324e809f397688c4a125790b1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820d5e68fb9ef5324e809f397688c4a125790b1a/comments", "author": null, "committer": null, "parents": [{"sha": "43e7d60bc6f03030a9b1355e3866b67a4e769cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43e7d60bc6f03030a9b1355e3866b67a4e769cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43e7d60bc6f03030a9b1355e3866b67a4e769cc7"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "7bf389415bd449dd5ef14862ce63f528db4e38c0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820d5e68fb9ef5324e809f397688c4a125790b1a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820d5e68fb9ef5324e809f397688c4a125790b1a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=820d5e68fb9ef5324e809f397688c4a125790b1a", "patch": "@@ -1,3 +1,9 @@\n+2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans-array.c (get_array_ref_dim): Change argument type and name.\n+\tObtain previous argument from the new argument in the body.\n+\t(gfc_trans_create_temp_arry, gfc_conv_loop_setup): Update calls.\n+\n 2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.c (gfc_set_vector_loop_bounds, set_vector_loop_bounds):"}, {"sha": "eeed8bb9ffaecaa850d10dd60734e5bb81caeeee", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820d5e68fb9ef5324e809f397688c4a125790b1a/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820d5e68fb9ef5324e809f397688c4a125790b1a/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=820d5e68fb9ef5324e809f397688c4a125790b1a", "patch": "@@ -807,9 +807,12 @@ gfc_trans_allocate_array_storage (stmtblock_t * pre, stmtblock_t * post,\n    */\n \n static int\n-get_array_ref_dim (gfc_ss_info *info, int loop_dim)\n+get_array_ref_dim (gfc_ss *ss, int loop_dim)\n {\n   int n, array_dim, array_ref_dim;\n+  gfc_ss_info *info;\n+\n+  info = &ss->data.info;\n \n   array_ref_dim = 0;\n   array_dim = info->dim[loop_dim];\n@@ -884,7 +887,7 @@ gfc_trans_create_temp_array (stmtblock_t * pre, stmtblock_t * post,\n \t to the n'th dimension of the array. We need to reconstruct loop infos\n \t in the right order before using it to set the descriptor\n \t bounds.  */\n-      tmp_dim = get_array_ref_dim (info, n);\n+      tmp_dim = get_array_ref_dim (ss, n);\n       from[tmp_dim] = loop->from[n];\n       to[tmp_dim] = loop->to[n];\n \n@@ -3976,7 +3979,7 @@ gfc_conv_loop_setup (gfc_loopinfo * loop, locus * where)\n \t  && INTEGER_CST_P (info->stride[dim]))\n \t{\n \t  loop->from[n] = info->start[dim];\n-\t  mpz_set (i, cshape[get_array_ref_dim (info, n)]);\n+\t  mpz_set (i, cshape[get_array_ref_dim (loopspec[n], n)]);\n \t  mpz_sub_ui (i, i, 1);\n \t  /* To = from + (size - 1) * stride.  */\n \t  tmp = gfc_conv_mpz_to_tree (i, gfc_index_integer_kind);"}]}