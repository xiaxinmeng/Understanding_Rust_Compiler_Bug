{"sha": "31af8899966d8096de6a78a5de2ba53c11a98bae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhZjg4OTk5NjZkODA5NmRlNmE3OGE1ZGUyYmE1M2MxMWE5OGJhZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-22T14:03:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-22T14:03:25Z"}, "message": "[multiple changes]\n\n2012-02-22  Pascal Obry  <obry@adacore.com>\n\n\t* s-taprop-mingw.adb (Finalize_TCB): Do not wait on thread handle as\n\tthis is our own thread.\n\n2012-02-22  Sergey Rybin  <rybin@adacore.com frybin>\n\n\t* tree_io.ads: Update ASIS_Version_Number because of the changes\n\tin Snames.\n\n2012-02-22  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Create_Finalizer): Suppress elaboration checks on \n\tstack-related finalizers.\n\n2012-02-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Expression_Function): If the construct\n\tis a completion, indicate that its formals are the formals of\n\ta completion, and as such do not get a cross- reference entry.\n\t(Analyze_Subprogram_Specification): Do not generate a definition\n\tfor the entity of an expression function, because it may be a\n\tcompletion. Definition will be generated if needed when analyzing\n\tthe generated subprogram declaration.\n\n2012-02-22  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Check): When checking if an object file is in the\n\tcorrect object directory, get the unit name from a previous call\n\tto Check_Source_Info_In_ALI.\n\t* makeutl.adb (Check_Source_Info_In_ALI): Return the name of\n\tthe unit when everything is OK, otherwise return No_Name.\n\t* makeutl.ads (Check_Source_Info_In_ALI): Return Name_Id instead\n\tof Boolean\n\n2012-02-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Find_Equality_Types, Try_One_Interp): In an\n\tinstance, the operator is visible if an operand is of some\n\tnumeric type which is not in use or directly visible, and the\n\tother operand is a numeric literal.\n\n2012-02-22  Tristan Gingold  <gingold@adacore.com>\n\n\t* init.c: Minor code clean up.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\n2012-02-22  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnatlink.adb (Gnatlink): Use -gnatcC in CodePeer_Node,\n\totherwise GCC will generate an object file.\n\n2012-02-22  Vincent Celier  <celier@adacore.com>\n\n\t* projects.texi: Correct typo related to \"**\" in Source_Dirs.\n\nFrom-SVN: r184477", "tree": {"sha": "c8905d30c97db074d7cae0cf3f9eaea256f13094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8905d30c97db074d7cae0cf3f9eaea256f13094"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31af8899966d8096de6a78a5de2ba53c11a98bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31af8899966d8096de6a78a5de2ba53c11a98bae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31af8899966d8096de6a78a5de2ba53c11a98bae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31af8899966d8096de6a78a5de2ba53c11a98bae/comments", "author": null, "committer": null, "parents": [{"sha": "45958634230a7a6f0d98ea53a973e336c9670280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45958634230a7a6f0d98ea53a973e336c9670280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45958634230a7a6f0d98ea53a973e336c9670280"}], "stats": {"total": 327, "additions": 228, "deletions": 99}, "files": [{"sha": "05784e68d5ec6d55fd1cec0f858c03be4a22b091", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -1,3 +1,59 @@\n+2012-02-22  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-taprop-mingw.adb (Finalize_TCB): Do not wait on thread handle as\n+\tthis is our own thread.\n+\n+2012-02-22  Sergey Rybin  <rybin@adacore.com frybin>\n+\n+\t* tree_io.ads: Update ASIS_Version_Number because of the changes\n+\tin Snames.\n+\n+2012-02-22  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Create_Finalizer): Suppress elaboration checks on \n+\tstack-related finalizers.\n+\n+2012-02-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Expression_Function): If the construct\n+\tis a completion, indicate that its formals are the formals of\n+\ta completion, and as such do not get a cross- reference entry.\n+\t(Analyze_Subprogram_Specification): Do not generate a definition\n+\tfor the entity of an expression function, because it may be a\n+\tcompletion. Definition will be generated if needed when analyzing\n+\tthe generated subprogram declaration.\n+\n+2012-02-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Check): When checking if an object file is in the\n+\tcorrect object directory, get the unit name from a previous call\n+\tto Check_Source_Info_In_ALI.\n+\t* makeutl.adb (Check_Source_Info_In_ALI): Return the name of\n+\tthe unit when everything is OK, otherwise return No_Name.\n+\t* makeutl.ads (Check_Source_Info_In_ALI): Return Name_Id instead\n+\tof Boolean\n+\n+2012-02-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Find_Equality_Types, Try_One_Interp): In an\n+\tinstance, the operator is visible if an operand is of some\n+\tnumeric type which is not in use or directly visible, and the\n+\tother operand is a numeric literal.\n+\n+2012-02-22  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* init.c: Minor code clean up.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n+2012-02-22  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnatlink.adb (Gnatlink): Use -gnatcC in CodePeer_Node,\n+\totherwise GCC will generate an object file.\n+\n+2012-02-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* projects.texi: Correct typo related to \"**\" in Source_Dirs.\n+\n 2012-02-22  Steve Baird  <baird@adacore.com>\n \n \t* sem_prag.adb (Analyze_PPC_In_Decl_Part): Clean up generation of"}, {"sha": "7f5fcaaf90d94867263277bd5760e1d51430e36b", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -1372,6 +1372,37 @@ package body Exp_Ch7 is\n             Fin_Id :=\n               Make_Defining_Identifier (Loc,\n                 Chars => New_External_Name (Name_uFinalizer));\n+\n+            --  The visibility semantics of AT_END handlers force a strange\n+            --  separation of spec and body for stack-related finalizers:\n+\n+            --     declare : Enclosing_Scope\n+            --        procedure _finalizer;\n+            --     begin\n+            --        <controlled objects>\n+            --        procedure _finalizer is\n+            --           ...\n+            --     at end\n+            --        _finalizer;\n+            --     end;\n+\n+            --  Both spec and body are within the same construct and scope, but\n+            --  the body is part of the handled sequence of statements. This\n+            --  placement confuses the elaboration mechanism on targets where\n+            --  AT_END handlers are expanded into \"when all others\" handlers:\n+\n+            --     exception\n+            --        when all others =>\n+            --           _finalizer;  --  appears to require elab checks\n+            --     at end\n+            --        _finalizer;\n+            --     end;\n+\n+            --  Since the compiler guarantees that the body of a _finalizer is\n+            --  always inserted in the same construct where the AT_END handler\n+            --  resides, there is no need for elaboration checks.\n+\n+            Set_Kill_Elaboration_Checks (Fin_Id);\n          end if;\n \n          --  Step 2: Creation of the finalizer specification"}, {"sha": "06a88030bdb979fa7ed23962191bda5d05c6ed51", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 38, "deletions": 36, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -2079,19 +2079,20 @@ ada/exp_ch5.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/checks.ads ada/checks.adb \\\n    ada/csets.ads ada/debug.ads ada/debug_a.ads ada/einfo.ads ada/einfo.adb \\\n-   ada/elists.ads ada/err_vars.ads ada/errout.ads ada/erroutc.ads \\\n-   ada/eval_fat.ads ada/exp_aggr.ads ada/exp_ch11.ads ada/exp_ch2.ads \\\n-   ada/exp_ch4.ads ada/exp_ch5.ads ada/exp_ch5.adb ada/exp_ch6.ads \\\n-   ada/exp_ch7.ads ada/exp_dbug.ads ada/exp_disp.ads ada/exp_pakd.ads \\\n-   ada/exp_tss.ads ada/exp_util.ads ada/exp_util.adb ada/expander.ads \\\n-   ada/fname.ads ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads \\\n-   ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads ada/hlo.ads \\\n-   ada/hostparm.ads ada/inline.ads ada/interfac.ads ada/itypes.ads \\\n-   ada/lib.ads ada/lib-load.ads ada/lib-util.ads ada/lib-xref.ads \\\n-   ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n-   ada/nmake.adb ada/opt.ads ada/output.ads ada/put_alfa.ads \\\n-   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n-   ada/scans.ads ada/sem.ads ada/sem.adb ada/sem_attr.ads ada/sem_aux.ads \\\n+   ada/elists.ads ada/err_vars.ads ada/errout.ads ada/errout.adb \\\n+   ada/erroutc.ads ada/erroutc.adb ada/eval_fat.ads ada/exp_aggr.ads \\\n+   ada/exp_ch11.ads ada/exp_ch2.ads ada/exp_ch4.ads ada/exp_ch5.ads \\\n+   ada/exp_ch5.adb ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_dbug.ads \\\n+   ada/exp_disp.ads ada/exp_pakd.ads ada/exp_tss.ads ada/exp_util.ads \\\n+   ada/exp_util.adb ada/expander.ads ada/fname.ads ada/fname-uf.ads \\\n+   ada/freeze.ads ada/get_targ.ads ada/gnat.ads ada/g-hesorg.ads \\\n+   ada/g-htable.ads ada/gnatvsn.ads ada/hlo.ads ada/hostparm.ads \\\n+   ada/inline.ads ada/interfac.ads ada/itypes.ads ada/lib.ads \\\n+   ada/lib-load.ads ada/lib-util.ads ada/lib-xref.ads ada/namet.ads \\\n+   ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb \\\n+   ada/opt.ads ada/output.ads ada/put_alfa.ads ada/restrict.ads \\\n+   ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/scans.ads \\\n+   ada/sem.ads ada/sem.adb ada/sem_attr.ads ada/sem_aux.ads \\\n    ada/sem_aux.adb ada/sem_cat.ads ada/sem_ch10.ads ada/sem_ch11.ads \\\n    ada/sem_ch12.ads ada/sem_ch13.ads ada/sem_ch13.adb ada/sem_ch2.ads \\\n    ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch5.ads ada/sem_ch6.ads \\\n@@ -4338,29 +4339,30 @@ ada/sem_dim.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/atree.adb ada/casing.ads ada/csets.ads ada/debug.ads \\\n    ada/debug_a.ads ada/einfo.ads ada/einfo.adb ada/elists.ads \\\n    ada/err_vars.ads ada/errout.ads ada/errout.adb ada/erroutc.ads \\\n-   ada/erroutc.adb ada/exp_tss.ads ada/expander.ads ada/fname.ads \\\n-   ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads ada/gnatvsn.ads \\\n-   ada/hlo.ads ada/hostparm.ads ada/inline.ads ada/interfac.ads \\\n-   ada/lib.ads ada/lib.adb ada/lib-list.adb ada/lib-load.ads \\\n-   ada/lib-sort.adb ada/namet.ads ada/namet.adb ada/nlists.ads \\\n-   ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n-   ada/restrict.ads ada/rident.ads ada/rtsfind.ads ada/scans.ads \\\n-   ada/sem.ads ada/sem.adb ada/sem_attr.ads ada/sem_aux.ads \\\n-   ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads ada/sem_ch13.ads \\\n-   ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch5.ads \\\n-   ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads \\\n-   ada/sem_dim.ads ada/sem_dim.adb ada/sem_eval.ads ada/sem_prag.ads \\\n-   ada/sem_res.ads ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n-   ada/stringt.adb ada/stylesw.ads ada/system.ads ada/s-exctab.ads \\\n-   ada/s-htable.ads ada/s-htable.adb ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-strhas.ads ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/erroutc.adb ada/exp_dist.ads ada/exp_tss.ads ada/expander.ads \\\n+   ada/fname.ads ada/fname-uf.ads ada/gnat.ads ada/g-hesorg.ads \\\n+   ada/g-htable.ads ada/gnatvsn.ads ada/hlo.ads ada/hostparm.ads \\\n+   ada/inline.ads ada/interfac.ads ada/lib.ads ada/lib.adb \\\n+   ada/lib-list.adb ada/lib-load.ads ada/lib-sort.adb ada/namet.ads \\\n+   ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb \\\n+   ada/opt.ads ada/output.ads ada/restrict.ads ada/rident.ads \\\n+   ada/rtsfind.ads ada/rtsfind.adb ada/scans.ads ada/sem.ads ada/sem.adb \\\n+   ada/sem_attr.ads ada/sem_aux.ads ada/sem_ch10.ads ada/sem_ch11.ads \\\n+   ada/sem_ch12.ads ada/sem_ch13.ads ada/sem_ch2.ads ada/sem_ch3.ads \\\n+   ada/sem_ch4.ads ada/sem_ch5.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n+   ada/sem_ch8.ads ada/sem_ch9.ads ada/sem_dim.ads ada/sem_dim.adb \\\n+   ada/sem_dist.ads ada/sem_eval.ads ada/sem_prag.ads ada/sem_res.ads \\\n+   ada/sem_util.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/snames.ads ada/stand.ads ada/stringt.ads ada/stringt.adb \\\n+   ada/stylesw.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n+   ada/s-htable.adb ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-strhas.ads ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/sem_disp.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "09ce5bb0f5d4d636a0f91f7c651ad9c79d75da85", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1653,7 +1653,7 @@ begin\n    --             because bindgen uses brackets encoding for all upper\n    --             half and wide characters in identifier names.\n \n-   --  In addition, in CodePeer mode compile with -gnatC\n+   --  In addition, in CodePeer mode compile with -gnatcC\n \n    Binder_Options_From_ALI.Increment_Last;\n    Binder_Options_From_ALI.Table (Binder_Options_From_ALI.Last) :=\n@@ -1668,7 +1668,7 @@ begin\n    if Opt.CodePeer_Mode then\n       Binder_Options_From_ALI.Increment_Last;\n       Binder_Options_From_ALI.Table (Binder_Options_From_ALI.Last) :=\n-           new String'(\"-gnatC\");\n+           new String'(\"-gnatcC\");\n    end if;\n \n    --  Locate all the necessary programs and verify required files are present"}, {"sha": "18280c28ca96ad650e1af41997076741bffe7211", "filename": "gcc/ada/init.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -1239,8 +1239,6 @@ static const struct cond_except dec_ada_cond_except_table [] = {\n   {ADA$_KEY_MISMATCH,    &Use_Error},\n   {ADA$_MAXLINEXC,       &constraint_error},\n   {ADA$_LINEXCMRS,       &constraint_error},\n-  {0,                    0}\n-};\n \n #if 0\n    /* Already handled by a pragma Import_Exception\n@@ -1250,6 +1248,9 @@ static const struct cond_except dec_ada_cond_except_table [] = {\n   {ADA$_KEY_ERROR,       &Key_Error},\n #endif\n \n+  {0,                    0}\n+};\n+\n #endif /* IN_RTS */\n \n /* Non-DEC Ada specific conditions.  We could probably also put"}, {"sha": "0b1cd09b44c336d17d7b6afca80fdf6e740362f8", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1863,44 +1863,44 @@ package body Make is\n                end if;\n \n             elsif not Read_Only and then Main_Project /= No_Project then\n-               if not Check_Source_Info_In_ALI (ALI, Project_Tree) then\n-                  ALI := No_ALI_Id;\n-                  return;\n-               end if;\n+               declare\n+                  Uname : constant Name_Id :=\n+                    Check_Source_Info_In_ALI (ALI, Project_Tree);\n \n-               --  Check that the ALI file is in the correct object directory.\n-               --  If it is in the object directory of a project that is\n-               --  extended and it depends on a source that is in one of its\n-               --  extending projects, then the ALI file is not in the correct\n-               --  object directory.\n+                  Udata : Prj.Unit_Index;\n \n-               --  First, find the project of this ALI file. As there may be\n-               --  several projects with the same object directory, we first\n-               --  need to find the project of the source.\n+               begin\n+                  if Uname = No_Name then\n+                     ALI := No_ALI_Id;\n+                     return;\n+                  end if;\n \n-               ALI_Project := No_Project;\n+                  --  Check that the ALI file is in the correct object\n+                  --  directory. If it is in the object directory of a project\n+                  --  that is extended and it depends on a source that is in\n+                  --  one of its extending projects, then the ALI file is not\n+                  --  in the correct object directory.\n \n-               declare\n-                  Udata : Prj.Unit_Index;\n+                  --  First, find the project of this ALI file. As there may be\n+                  --  several projects with the same object directory, we first\n+                  --  need to find the project of the source.\n \n-               begin\n-                  Udata := Units_Htable.Get_First (Project_Tree.Units_HT);\n-                  while Udata /= No_Unit_Index loop\n+                  ALI_Project := No_Project;\n+\n+                  Udata := Units_Htable.Get (Project_Tree.Units_HT, Uname);\n+\n+                  if Udata /= No_Unit_Index then\n                      if Udata.File_Names (Impl) /= null\n                        and then Udata.File_Names (Impl).File = Source_File\n                      then\n                         ALI_Project := Udata.File_Names (Impl).Project;\n-                        exit;\n \n                      elsif Udata.File_Names (Spec) /= null\n                        and then Udata.File_Names (Spec).File = Source_File\n                      then\n                         ALI_Project := Udata.File_Names (Spec).Project;\n-                        exit;\n                      end if;\n-\n-                     Udata := Units_Htable.Get_Next (Project_Tree.Units_HT);\n-                  end loop;\n+                  end if;\n                end;\n \n                if ALI_Project = No_Project then"}, {"sha": "bc3a0ee1409e7e5095f225efb4023197fe2c9c5c", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -186,8 +186,9 @@ package body Makeutl is\n \n    function Check_Source_Info_In_ALI\n      (The_ALI : ALI_Id;\n-      Tree    : Project_Tree_Ref) return Boolean\n+      Tree    : Project_Tree_Ref) return Name_Id\n    is\n+      Result    : Name_Id := No_Name;\n       Unit_Name : Name_Id;\n \n    begin\n@@ -203,7 +204,11 @@ package body Makeutl is\n          Unit_Name := Name_Find;\n \n          if File_Not_A_Source_Of (Tree, Unit_Name, Units.Table (U).Sfile) then\n-            return False;\n+            return No_Name;\n+         end if;\n+\n+         if Result = No_Name then\n+            Result := Unit_Name;\n          end if;\n \n          --  Loop to do same check for each of the withed units\n@@ -219,7 +224,7 @@ package body Makeutl is\n                   Unit_Name := Name_Find;\n \n                   if File_Not_A_Source_Of (Tree, Unit_Name, WR.Sfile) then\n-                     return False;\n+                     return No_Name;\n                   end if;\n                end if;\n             end;\n@@ -258,7 +263,7 @@ package body Makeutl is\n                               Get_Name_String (Replacement));\n                         end if;\n \n-                        return False;\n+                        return No_Name;\n                      end if;\n                   end;\n                end if;\n@@ -294,14 +299,14 @@ package body Makeutl is\n                            & \" parsing the project. Will recompile\");\n                      end if;\n \n-                     return False;\n+                     return No_Name;\n                   end if;\n                end if;\n             end if;\n          end;\n       end loop;\n \n-      return True;\n+      return Result;\n    end Check_Source_Info_In_ALI;\n \n    --------------------------------"}, {"sha": "3ddb2085dd8293c7e66aa17b620725cf24e68921", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -123,10 +123,10 @@ package Makeutl is\n \n    function Check_Source_Info_In_ALI\n      (The_ALI      : ALI.ALI_Id;\n-      Tree         : Project_Tree_Ref) return Boolean;\n+      Tree         : Project_Tree_Ref) return Name_Id;\n    --  Check whether all file references in ALI are still valid (i.e. the\n-   --  source files are still associated with the same units). Return True\n-   --  if everything is still valid.\n+   --  source files are still associated with the same units). Return the name\n+   --  of the unit if everything is still valid. Return No_Name otherwise.\n \n    function Is_Subunit (Source : Source_Id) return Boolean;\n    --  Return True if source is a subunit"}, {"sha": "fd0de1bb8f2088feb2f1baaff129caf8e3898fe5", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -403,12 +403,12 @@ If the order of the source directories is known statically, that is if\n be several files with the same source file name sitting in different\n directories of the project. In this case, only the file in the first directory\n is considered as a source of the project and the others are hidden. If\n-@code{\"**\"} is not used in the string list @code{Source_Dirs}, it is an error\n+@code{\"**\"} is used in the string list @code{Source_Dirs}, it is an error\n to have several files with the same source file name in the same directory\n @code{\"**\"} subtree, since there would be an ambiguity as to which one should\n-be used. However, two files with the same source file name may in two single\n-directories or directory subtrees. In this case, the one in the first directory\n-or directory subtree is a source of the project.\n+be used. However, two files with the same source file name may exist in two\n+single directories or directory subtrees. In this case, the one in the first\n+directory or directory subtree is a source of the project.\n \n @c ---------------------------------------------\n @node Object and Exec Directory"}, {"sha": "2aa5fd7c0b6310ed6548f4b926f081a34f148c6c", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,13 +41,13 @@ pragma Polling (Off);\n with Interfaces.C;\n with Interfaces.C.Strings;\n \n+with System.Float_Control;\n+with System.Interrupt_Management;\n with System.Multiprocessors;\n-with System.Tasking.Debug;\n with System.OS_Primitives;\n with System.Task_Info;\n-with System.Interrupt_Management;\n+with System.Tasking.Debug;\n with System.Win32.Ext;\n-with System.Float_Control;\n \n with System.Soft_Links;\n --  We use System.Soft_Links instead of System.Tasking.Initialization because\n@@ -59,14 +59,14 @@ package body System.Task_Primitives.Operations is\n \n    package SSL renames System.Soft_Links;\n \n-   use System.Tasking.Debug;\n-   use System.Tasking;\n    use Interfaces.C;\n    use Interfaces.C.Strings;\n    use System.OS_Interface;\n-   use System.Parameters;\n    use System.OS_Primitives;\n+   use System.Parameters;\n    use System.Task_Info;\n+   use System.Tasking;\n+   use System.Tasking.Debug;\n    use System.Win32;\n    use System.Win32.Ext;\n \n@@ -979,7 +979,6 @@ package body System.Task_Primitives.Operations is\n    ------------------\n \n    procedure Finalize_TCB (T : Task_Id) is\n-      Result    : DWORD;\n       Succeeded : BOOL;\n \n    begin\n@@ -995,11 +994,9 @@ package body System.Task_Primitives.Operations is\n \n       if T.Common.LL.Thread /= 0 then\n \n-         --  This task has been activated. Wait for the thread to terminate\n-         --  then close it. This is needed to release system resources.\n+         --  This task has been activated. Close the thread handle. This\n+         --  is needed to release system resources.\n \n-         Result := WaitForSingleObject (T.Common.LL.Thread, Wait_Infinite);\n-         pragma Assert (Result /= WAIT_FAILED);\n          Succeeded := CloseHandle (T.Common.LL.Thread);\n          pragma Assert (Succeeded = Win32.TRUE);\n       end if;"}, {"sha": "2b343aa0c4ca824d052d5c4365de1ce189fe5e70", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -5545,7 +5545,9 @@ package body Sem_Ch4 is\n \n          --  If we have infix notation, the operator must be usable.\n          --  Within an instance, if the type is already established we\n-         --  know it is correct.\n+         --  know it is correct. If an operand is universal it is compatible\n+         --  with any numeric type.\n+\n          --  In Ada 2005, the equality on anonymous access types is declared\n          --  in Standard, and is always visible.\n \n@@ -5554,8 +5556,13 @@ package body Sem_Ch4 is\n            or else In_Use (Bas)\n            or else (In_Use (Scope (Bas))\n                      and then not Is_Hidden (Bas))\n+\n            or else (In_Instance\n-                     and then First_Subtype (T1) = First_Subtype (Etype (R)))\n+                    and then\n+                      (First_Subtype (T1) = First_Subtype (Etype (R))\n+                       or else (Is_Numeric_Type (T1)\n+                         and then Is_Universal_Numeric_Type (Etype (R)))))\n+\n            or else Ekind (T1) = E_Anonymous_Access_Type\n          then\n             null;"}, {"sha": "fecf5f036ba90beb95c6cd31a1ded5fe3ef42cf7", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -273,7 +273,6 @@ package body Sem_Ch6 is\n       Spec     : constant Node_Id    := Specification (N);\n \n       Def_Id :  Entity_Id;\n-      pragma Unreferenced (Def_Id);\n \n       Prev :  Entity_Id;\n       --  If the expression is a completion, Prev is the entity whose\n@@ -371,6 +370,26 @@ package body Sem_Ch6 is\n \n          if Has_Completion (Prev) then\n             Set_Is_Inlined (Prev);\n+\n+            --  The formals of the expression function are body formals,\n+            --  and do not appear in the ali file, which will only contain\n+            --  references to the formals of the original subprogram spec.\n+\n+            declare\n+               F1 : Entity_Id;\n+               F2 : Entity_Id;\n+\n+            begin\n+               F1 := First_Formal (Def_Id);\n+               F2 := First_Formal (Prev);\n+\n+               while Present (F1) loop\n+                  Set_Spec_Entity (F1, F2);\n+                  Next_Formal (F1);\n+                  Next_Formal (F2);\n+               end loop;\n+            end;\n+\n          else\n             Set_Is_Inlined (Defining_Entity (New_Body));\n          end if;\n@@ -3198,8 +3217,12 @@ package body Sem_Ch6 is\n       end if;\n \n       Designator := Analyze_Subprogram_Specification (Specification (N));\n+\n+      --  A reference may already have been generated for the unit name, in\n+      --  which case the following call is redundant. However it is needed for\n+      --  declarations that are the rewriting of an expression function.\n+\n       Generate_Definition (Designator);\n-      --  ??? why this call, already in Analyze_Subprogram_Specification\n \n       if Debug_Flag_C then\n          Write_Str (\"==> subprogram spec \");\n@@ -3399,9 +3422,15 @@ package body Sem_Ch6 is\n          Check_SPARK_Restriction (\"user-defined operator is not allowed\", N);\n       end if;\n \n-      --  Proceed with analysis\n+      --  Proceed with analysis. Do not emit a cross-reference entry if the\n+      --  specification comes from an expression function, because it may be\n+      --  the completion of a previous declaration. It is is not, the cross-\n+      --  reference entry will be emitted for the new subprogram declaration.\n+\n+      if Nkind (Parent (N)) /= N_Expression_Function then\n+         Generate_Definition (Designator);\n+      end if;\n \n-      Generate_Definition (Designator);\n       Set_Contract (Designator, Make_Contract (Sloc (Designator)));\n \n       if Nkind (N) = N_Function_Specification then"}, {"sha": "12c1ae545fe8e681211d9fc2b2ea869633e8a3fa", "filename": "gcc/ada/tree_io.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Ftree_io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31af8899966d8096de6a78a5de2ba53c11a98bae/gcc%2Fada%2Ftree_io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftree_io.ads?ref=31af8899966d8096de6a78a5de2ba53c11a98bae", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,14 +47,15 @@ package Tree_IO is\n    Tree_Format_Error : exception;\n    --  Raised if a format error is detected in the input file\n \n-   ASIS_Version_Number : constant := 27;\n+   ASIS_Version_Number : constant := 28;\n    --  ASIS Version. This is used to check for consistency between the compiler\n    --  used to generate trees and an ASIS application that is reading the\n    --  trees. It must be incremented whenever a change is made to the tree\n    --  format that would result in the compiler being incompatible with an\n    --  older version of ASIS.\n    --\n    --  27  Changes in the tree structures for expression functions\n+   --  28  Changes in Snames\n \n    procedure Tree_Read_Initialize (Desc : File_Descriptor);\n    --  Called to initialize reading of a tree file. This call must be made"}]}