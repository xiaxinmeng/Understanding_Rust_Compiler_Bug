{"sha": "60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBlOWYwZDcyNmZkMjhiOTYwYzU2NzRhM2M3YmVhZjcwMTVkYmQzNA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2003-06-07T18:35:00Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2003-06-07T18:35:00Z"}, "message": "re PR libgcj/8738 (java.io.CharArrayWriter's write methods erroneously throw IOExceptions)\n\n2002-06-06  James Clark  <jjc@jclark.com>\n\n       Fix for PR libgcj/8738:\n       * gnu/gcj/convert/UnicodeToBytes.java (havePendingBytes): New method.\n       * gnu/gcj/convert/Output_SJIS.java (havePendingBytes): Likewise.\n       * gnu/gcj/convert/Output_EUCJIS.java (havePendingBytes): Likewise.\n       * gnu/gcj/convert/Output_UTF8.java (havePendingBytes): Likewise.\n       (write): Always decrease avail when count is increased.\n       * java/lang/natString.cc (getBytes): Check converter havePendingBytes()\n       and whether output buffer is full before increasing size.\n\n2002-06-06  Mark Wielaard  <mark@klomp dot org>\n\n       * java/io/PrintStream.java (writeChars(char[],int, int)):\n       Check converter.havePendingBytes().\n       (writeChars(String,int,int)): Likewise.\n       * java/io/OutputStreamWriter.java (writeChars(char[], int, int)):\n       Check converter.havePendingBytes() and flush buffer when stalled.\n\nFrom-SVN: r67595", "tree": {"sha": "4416490914744db9c6d980b6558414bd86715239", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4416490914744db9c6d980b6558414bd86715239"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/comments", "author": null, "committer": null, "parents": [{"sha": "ddc612a2ba3864c86a0e9c0b30811727096c1772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc612a2ba3864c86a0e9c0b30811727096c1772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddc612a2ba3864c86a0e9c0b30811727096c1772"}], "stats": {"total": 82, "additions": 68, "deletions": 14}, "files": [{"sha": "10e54f5f7deea56627234948328a5ce618bc39b0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "patch": "@@ -1,3 +1,22 @@\n+2002-06-06  James Clark  <jjc@jclark.com>\n+\n+\tFix for PR libgcj/8738:\n+\t* gnu/gcj/convert/UnicodeToBytes.java (havePendingBytes): New method.\n+\t* gnu/gcj/convert/Output_SJIS.java (havePendingBytes): Likewise.\n+\t* gnu/gcj/convert/Output_EUCJIS.java (havePendingBytes): Likewise.\n+\t* gnu/gcj/convert/Output_UTF8.java (havePendingBytes): Likewise.\n+\t(write): Always decrease avail when count is increased.\n+\t* java/lang/natString.cc (getBytes): Check converter havePendingBytes()\n+\tand whether output buffer is full before increasing size.\n+\n+2002-06-06  Mark Wielaard  <mark@klomp dot org>\n+\n+\t* java/io/PrintStream.java (writeChars(char[],int, int)):\n+\tCheck converter.havePendingBytes().\n+\t(writeChars(String,int,int)): Likewise.\n+\t* java/io/OutputStreamWriter.java (writeChars(char[], int, int)):\n+\tCheck converter.havePendingBytes() and flush buffer when stalled.\n+\n 2003-06-07  Michael Koch  <konqueror@gmx.de>\n \n \t* include/posix.h"}, {"sha": "c0cc4378b26d8087d8242b2c7fc527b9379adcb1", "filename": "libjava/gnu/gcj/convert/Output_EUCJIS.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_EUCJIS.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_EUCJIS.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_EUCJIS.java?ref=60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -22,6 +22,11 @@ public class Output_EUCJIS extends UnicodeToBytes\n \n   public native int write (String str, int inpos, int inlength, char[] work);\n \n+  public boolean havePendingBytes()\n+  {\n+    return pending1 >= 0;\n+  }\n+\n   int pending1 = -1;\n   int pending2;\n }"}, {"sha": "67470ba7803a4f2a02813d2479024ac2965465e0", "filename": "libjava/gnu/gcj/convert/Output_SJIS.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_SJIS.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_SJIS.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_SJIS.java?ref=60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -22,5 +22,10 @@ public class Output_SJIS extends UnicodeToBytes\n \n   public native int write (String str, int inpos, int inlength, char[] work);\n \n+  public boolean havePendingBytes()\n+  {\n+    return pending >= 0;\n+  }\n+\n   int pending = -1;\n }"}, {"sha": "f54e7ebcfc255984135db44ac89474544b9ea455", "filename": "libjava/gnu/gcj/convert/Output_UTF8.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_UTF8.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_UTF8.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FOutput_UTF8.java?ref=60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -104,6 +104,7 @@ else if (ch >= 0xD800 && ch <= 0xDFFF && standardUTF8)\n \t      {\n \t\tvalue = (hi_part - 0xD800) * 0x400 + (ch - 0xDC00) + 0x10000;\n \t\tbuf[count++] = (byte) (0xF0 | (value >> 18));\n+\t\tavail--;\n \t\tbytes_todo = 3;\n \t\thi_part = 0;\n \t      }\n@@ -118,4 +119,10 @@ else if (ch >= 0xD800 && ch <= 0xDFFF && standardUTF8)\n       }\n     return inpos - start_pos;\n   }\n+\n+  public boolean havePendingBytes()\n+  {\n+    return bytes_todo > 0;\n+  }\n+\n }"}, {"sha": "0785d7ea43ed92499ece7e2d53ef6fc0e1926465", "filename": "libjava/gnu/gcj/convert/UnicodeToBytes.java", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java?ref=60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -146,6 +146,17 @@ public int write (String str, int inpos, int inlength, char[] work)\n     return write(work, 0, srcEnd - inpos);\n   }\n \n+  /**\n+   * Returns true when the converter has consumed some bytes that are\n+   * not yet converted to characters because further continuation\n+   * bytes are needed.  Defaults to false, should be overridden by\n+   * decoders that internally store some bytes.\n+   */\n+  public boolean havePendingBytes()\n+  {\n+    return false;\n+  }\n+\n   /** Indicate that the converter is resuable.\n    * This class keeps track of converters on a per-encoding basis.\n    * When done with an encoder you may call this method to indicate"}, {"sha": "8a47fdfc6512259378605dbef6be02df6e6391dc", "filename": "libjava/java/io/OutputStreamWriter.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fjava%2Fio%2FOutputStreamWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fjava%2Fio%2FOutputStreamWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FOutputStreamWriter.java?ref=60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "patch": "@@ -215,7 +215,7 @@ public void write (char[] buf, int offset, int count) throws IOException\n   private void writeChars(char[] buf, int offset, int count)\n     throws IOException\n   {\n-    while (count > 0)\n+    while (count > 0 || converter.havePendingBytes())\n       {\n \t// We must flush if out.count == out.buf.length.\n \t// It is probably a good idea to flush if out.buf is almost full.\n@@ -228,6 +228,13 @@ private void writeChars(char[] buf, int offset, int count)\n \t  }\n \tconverter.setOutput(out.buf, out.count);\n \tint converted = converter.write(buf, offset, count);\n+\t// Flush if we cannot make progress.\n+\tif (converted == 0 && out.count == converter.count)\n+\t  {\n+\t    out.flush();\n+\t    if (out.count != 0)\n+\t      throw new IOException(\"unable to flush output byte buffer\");\n+\t  }\n \toffset += converted;\n \tcount -= converted;\n \tout.count = converter.count;"}, {"sha": "489b3dd0dcdbf746869a34d91175601ea712e39d", "filename": "libjava/java/io/PrintStream.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fjava%2Fio%2FPrintStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fjava%2Fio%2FPrintStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintStream.java?ref=60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "patch": "@@ -1,5 +1,5 @@\n /* PrintStream.java -- OutputStream for printing output\n-   Copyright (C) 1998,2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2001, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -262,7 +262,7 @@ private synchronized void print (char[] chars, int pos, int len,\n   private void writeChars(char[] buf, int offset, int count)\n     throws IOException\n   {\n-    while (count > 0)\n+    while (count > 0 || converter.havePendingBytes())\n       {\n \tconverter.setOutput(work_bytes, 0);\n \tint converted = converter.write(buf, offset, count);\n@@ -275,7 +275,7 @@ private void writeChars(char[] buf, int offset, int count)\n   private void writeChars(String str, int offset, int count)\n     throws IOException\n   {\n-    while (count > 0)\n+    while (count > 0 || converter.havePendingBytes())\n       {\n \tconverter.setOutput(work_bytes, 0);\n \tint converted = converter.write(str, offset, count, work);"}, {"sha": "98309cfe62ea2a066baa273fcfbf73102b1b5eef", "filename": "libjava/java/lang/natString.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fjava%2Flang%2FnatString.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60e9f0d726fd28b960c5674a3c7beaf7015dbd34/libjava%2Fjava%2Flang%2FnatString.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatString.cc?ref=60e9f0d726fd28b960c5674a3c7beaf7015dbd34", "patch": "@@ -602,23 +602,23 @@ java::lang::String::getBytes (jstring enc)\n   jint offset = 0;\n   gnu::gcj::convert::UnicodeToBytes *converter\n     = gnu::gcj::convert::UnicodeToBytes::getEncoder(enc);\n-  while (todo > 0)\n+  while (todo > 0 || converter->havePendingBytes())\n     {\n       converter->setOutput(buffer, bufpos);\n       int converted = converter->write(this, offset, todo, NULL);\n       bufpos = converter->count;\n-      if (converted == 0)\n+      if (converted == 0 && bufpos == converter->count)\n \t{\n \t  buflen *= 2;\n \t  jbyteArray newbuffer = JvNewByteArray(buflen);\n \t  memcpy (elements (newbuffer), elements (buffer), bufpos);\n \t  buffer = newbuffer;\n \t}\n       else\n-\t{\n-\t  offset += converted;\n-\t  todo -= converted;\n-\t}\n+\tbufpos = converter->count;\n+\n+      offset += converted;\n+      todo -= converted;\n     }\n   converter->done ();\n   if (bufpos == buflen)"}]}