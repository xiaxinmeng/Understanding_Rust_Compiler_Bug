{"sha": "5bfc90dea315f4ec135119a3526741e8fa6deb48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJmYzkwZGVhMzE1ZjRlYzEzNTExOWEzNTI2NzQxZThmYTZkZWI0OA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2002-08-08T10:14:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-08-08T10:14:15Z"}, "message": "class.c (convert_to_base): Correct check for error_mark_node.\n\n\t* class.c (convert_to_base): Correct check for error_mark_node.\n\t(create_vtable_ptr): Remove unused VFUNS_P parm\n\nFrom-SVN: r56127", "tree": {"sha": "e2ccf554468b4379eb1227345d0c6f9dc22dedc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2ccf554468b4379eb1227345d0c6f9dc22dedc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bfc90dea315f4ec135119a3526741e8fa6deb48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bfc90dea315f4ec135119a3526741e8fa6deb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bfc90dea315f4ec135119a3526741e8fa6deb48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bfc90dea315f4ec135119a3526741e8fa6deb48/comments", "author": null, "committer": null, "parents": [{"sha": "22aa533ee7d27798b56117436b3d7a5f036c36e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22aa533ee7d27798b56117436b3d7a5f036c36e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22aa533ee7d27798b56117436b3d7a5f036c36e1"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "3d852a13c9ff0df5eddb7bce139d69b899cf7f92", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bfc90dea315f4ec135119a3526741e8fa6deb48/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bfc90dea315f4ec135119a3526741e8fa6deb48/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5bfc90dea315f4ec135119a3526741e8fa6deb48", "patch": "@@ -1,3 +1,8 @@\n+2002-08-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (convert_to_base): Correct check for error_mark_node.\n+\t(create_vtable_ptr): Remove unused VFUNS_P parm.\n+\n 2002-08-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cp/Make-lang.in (c++.mostlyclean): Remove coverage files."}, {"sha": "211305f0886c6a1306d9ca607410bd1db25ef7ef", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bfc90dea315f4ec135119a3526741e8fa6deb48/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bfc90dea315f4ec135119a3526741e8fa6deb48/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=5bfc90dea315f4ec135119a3526741e8fa6deb48", "patch": "@@ -145,7 +145,7 @@ static void check_methods PARAMS ((tree));\n static void remove_zero_width_bit_fields PARAMS ((tree));\n static void check_bases PARAMS ((tree, int *, int *, int *));\n static void check_bases_and_members PARAMS ((tree, int *));\n-static tree create_vtable_ptr PARAMS ((tree, int *, int *, tree *));\n+static tree create_vtable_ptr PARAMS ((tree, int *, tree *));\n static void layout_class_type PARAMS ((tree, int *, int *, tree *));\n static void fixup_pending_inline PARAMS ((tree));\n static void fixup_inline_methods PARAMS ((tree));\n@@ -370,7 +370,7 @@ convert_to_base (tree object, tree type, bool check_access)\n   binfo = lookup_base (TREE_TYPE (object), type, \n \t\t       check_access ? ba_check : ba_ignore, \n \t\t       NULL);\n-  if (!binfo || TREE_CODE (binfo) == error_mark_node)\n+  if (!binfo || binfo == error_mark_node)\n     return error_mark_node;\n \n   return build_base_path (PLUS_EXPR, object, binfo, /*nonnull=*/1);\n@@ -4342,10 +4342,9 @@ check_bases_and_members (t, empty_p)\n    on VIRTUALS_P.  */\n \n static tree\n-create_vtable_ptr (t, empty_p, vfuns_p, virtuals_p)\n+create_vtable_ptr (t, empty_p, virtuals_p)\n      tree t;\n      int *empty_p;\n-     int *vfuns_p;\n      tree *virtuals_p;\n {\n   tree fn;\n@@ -4789,7 +4788,7 @@ layout_class_type (t, empty_p, vfuns_p, virtuals_p)\n   determine_primary_base (t, vfuns_p);\n \n   /* Create a pointer to our virtual function table.  */\n-  vptr = create_vtable_ptr (t, empty_p, vfuns_p, virtuals_p);\n+  vptr = create_vtable_ptr (t, empty_p, virtuals_p);\n \n   /* The vptr is always the first thing in the class.  */\n   if (vptr)"}]}