{"sha": "c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdiM2I5OWYzMTAxYmE4OWZmNmQ1YTViYjQ3Mzg4Y2ZjNTlmMTdmNg==", "commit": {"author": {"name": "Po-Chun Chang", "email": "pchang9@cs.wisc.edu", "date": "2013-07-23T15:56:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-07-23T15:56:37Z"}, "message": "reload.c (find_reloads): Exit loop once we find this operand cannot be reloaded somehow for this alternative.\n\n2013-07-22  Po-Chun Chang  <pchang9@cs.wisc.edu>\n\n\t* reload.c (find_reloads): Exit loop once we find this operand\n\tcannot be reloaded somehow for this alternative.\n\n\t* reload.c (find_reloads): Exit loop once we find a hard register.\n\n\t* rtlanal.c (computed_jump_p): Exit loop once we find label\n\treference is used.\n\n\t* i386.c (ix86_pad_returns): Exit loop after setting replace.\n\n\t* cfgloopmanip.c (remove_path): Exit loop after setting\n\tirred_invalidated.\n\n\t* gensupport.c (subst_dup): Avoid loop if code is not\n\tMATCH_DUP nor MATCH_OP_DUP.\n\nFrom-SVN: r201174", "tree": {"sha": "7eb216da80109b2f703503c7cf426f926601aa74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb216da80109b2f703503c7cf426f926601aa74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/comments", "author": null, "committer": null, "parents": [{"sha": "c8fbf1fafa9adf574a2609e570e27bd0c234e527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8fbf1fafa9adf574a2609e570e27bd0c234e527", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8fbf1fafa9adf574a2609e570e27bd0c234e527"}], "stats": {"total": 52, "additions": 43, "deletions": 9}, "files": [{"sha": "95a86e47b1f614a05e69010a7fe87d1ebeb4b3b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "patch": "@@ -1,3 +1,21 @@\n+2013-07-22  Po-Chun Chang  <pchang9@cs.wisc.edu>\n+\n+\t* reload.c (find_reloads): Exit loop once we find this operand\n+\tcannot be reloaded somehow for this alternative.\n+\n+\t* reload.c (find_reloads): Exit loop once we find a hard register.\n+\n+\t* rtlanal.c (computed_jump_p): Exit loop once we find label\n+\treference is used.\n+\n+\t* i386.c (ix86_pad_returns): Exit loop after setting replace.\n+\n+\t* cfgloopmanip.c (remove_path): Exit loop after setting\n+\tirred_invalidated.\n+\n+\t* gensupport.c (subst_dup): Avoid loop if code is not\n+\tMATCH_DUP nor MATCH_OP_DUP.\n+\n 2013-07-23  Nicklas Bo Jensen  <nbjensen@gmail.com>\n \n \t* doc/md.texi (Machine-Specific Peephole Optimizers): Fix a typo.\n@@ -161,7 +179,7 @@\n \t-march=r5900 -mhard-float -mdouble-float.  Use spu_single_format\n \tfor -march=r5900 -mhard-float.\n \n-2013-07-22  Chang  <pchang9@cs.wisc.edu>\n+2013-07-22  Po-Chun Chang  <pchang9@cs.wisc.edu>\n \n \t* df-problems.c (can_move_insns_across): Exit loop once we\n \tfind a non-fixed, non-global register.\n@@ -433,7 +451,7 @@\n \n \t* tree-pass.h (pass_ipa_lto_wpa_fixup): Remove redundant decl.\n \n-2013-07-18  Chang  <pchang9@cs.wisc.edu>\n+2013-07-18  Po-Chun Chang  <pchang9@cs.wisc.edu>\n \n \t* read-rtl.c (validate_const_int): Once an invalid character is\n \tseen, quit the loop."}, {"sha": "f35e5aedc7902c6591f67ac1248029347c351324", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "patch": "@@ -343,7 +343,11 @@ remove_path (edge e)\n     FOR_EACH_EDGE (ae, ei, e->src->succs)\n       if (ae != e && ae->dest != EXIT_BLOCK_PTR && !bitmap_bit_p (seen, ae->dest->index)\n \t  && ae->flags & EDGE_IRREDUCIBLE_LOOP)\n-\tirred_invalidated = true;\n+\t{\n+\t  irred_invalidated = true;\n+\t  break;\n+\t}\n+\n   for (i = 0; i < nrem; i++)\n     {\n       bb = rem_bbs[i];"}, {"sha": "0c546af00b2f99e5362a8d982da41342ab85afcf", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "patch": "@@ -35725,7 +35725,10 @@ ix86_pad_returns (void)\n \t  FOR_EACH_EDGE (e, ei, bb->preds)\n \t    if (EDGE_FREQUENCY (e) && e->src->index >= 0\n \t\t&& !(e->flags & EDGE_FALLTHRU))\n-\t      replace = true;\n+\t      {\n+\t\treplace = true;\n+\t\tbreak;\n+\t      }\n \t}\n       if (!replace)\n \t{"}, {"sha": "c7a27c42617b96f4fd6c68a3393317dea34cfc37", "filename": "gcc/gensupport.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "patch": "@@ -2178,8 +2178,8 @@ subst_dup (rtx pattern, int n_alt, int n_subst_alt)\n \t  if (XVEC (pattern, i) == NULL)\n \t    break;\n \tcase 'E':\n-\t  for (j = XVECLEN (pattern, i) - 1; j >= 0; --j)\n-\t    if (code != MATCH_DUP && code != MATCH_OP_DUP)\n+\t  if (code != MATCH_DUP && code != MATCH_OP_DUP)\n+\t    for (j = XVECLEN (pattern, i) - 1; j >= 0; --j)\n \t      XVECEXP (pattern, i, j) = subst_dup (XVECEXP (pattern, i, j),\n \t\t\t\t\t\t   n_alt, n_subst_alt);\n \t  break;"}, {"sha": "b15f3b20eb7d4ad87f6285b1df1f89b973c213eb", "filename": "gcc/reload.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "patch": "@@ -3324,7 +3324,10 @@ find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n \t\t      for (j = 0; j < i; j++)\n \t\t\tif (this_alternative_matches[j]\n \t\t\t    == this_alternative_matches[i])\n-\t\t\t  badop = 1;\n+\t\t\t  {\n+\t\t\t    badop = 1;\n+\t\t\t    break;\n+\t\t\t  }\n \t\t    break;\n \n \t\t  case 'p':\n@@ -4640,7 +4643,10 @@ find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n \n \t    for (nri = 1; nri < nr; nri ++)\n \t      if (! TEST_HARD_REG_BIT (reg_class_contents[rld[i].rclass], regno + nri))\n-\t\tok = 0;\n+\t\t{\n+\t\t  ok = 0;\n+\t\t  break;\n+\t\t}\n \n \t    if (ok)\n \t      rld[i].reg_rtx = dest;"}, {"sha": "95a314f0f3fdefe1ac4170d00ff72c183fe9ede2", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=c7b3b99f3101ba89ff6d5a5bb47388cfc59f17f6", "patch": "@@ -2802,7 +2802,10 @@ computed_jump_p (const_rtx insn)\n \t    if (GET_CODE (XVECEXP (pat, 0, i)) == USE\n \t\t&& (GET_CODE (XEXP (XVECEXP (pat, 0, i), 0))\n \t\t    == LABEL_REF))\n-\t      has_use_labelref = 1;\n+\t      {\n+\t        has_use_labelref = 1;\n+\t        break;\n+\t      }\n \n \t  if (! has_use_labelref)\n \t    for (i = len - 1; i >= 0; i--)"}]}