{"sha": "9e7fe10ef10cce9c393ca90a95298ab390ea19c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU3ZmUxMGVmMTBjY2U5YzM5M2NhOTBhOTUyOThhYjM5MGVhMTljNg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2012-02-15T00:38:04Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2012-02-15T00:38:04Z"}, "message": "c6x.md (reserve_cycles): New attribute.\n\n\t* config/c6x/c6x.md (reserve_cycles): New attribute.\n\t* config/c6x/c6x.c (c6x_sched_reorder_1): Ensure insns we predicate\n\tdon't reserve functional units after the branch occurs.\n\nFrom-SVN: r184252", "tree": {"sha": "940ae982b2fb3910c8642693062862c748d41ba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/940ae982b2fb3910c8642693062862c748d41ba8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e7fe10ef10cce9c393ca90a95298ab390ea19c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7fe10ef10cce9c393ca90a95298ab390ea19c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e7fe10ef10cce9c393ca90a95298ab390ea19c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7fe10ef10cce9c393ca90a95298ab390ea19c6/comments", "author": null, "committer": null, "parents": [{"sha": "a7ff6e2725731539c2f122618c97847069a9a6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ff6e2725731539c2f122618c97847069a9a6aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ff6e2725731539c2f122618c97847069a9a6aa"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "1bfeffc980a21934670be3ce658922484b050003", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7fe10ef10cce9c393ca90a95298ab390ea19c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7fe10ef10cce9c393ca90a95298ab390ea19c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e7fe10ef10cce9c393ca90a95298ab390ea19c6", "patch": "@@ -1,3 +1,9 @@\n+2012-02-14  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* config/c6x/c6x.md (reserve_cycles): New attribute.\n+\t* config/c6x/c6x.c (c6x_sched_reorder_1): Ensure insns we predicate\n+\tdon't reserve functional units after the branch occurs.\n+\n 2012-02-14  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR middle-end/52142"}, {"sha": "4cb4ffb4c4cb3be93e350dc1ffa9c7d01de257d0", "filename": "gcc/config/c6x/c6x.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7fe10ef10cce9c393ca90a95298ab390ea19c6/gcc%2Fconfig%2Fc6x%2Fc6x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7fe10ef10cce9c393ca90a95298ab390ea19c6/gcc%2Fconfig%2Fc6x%2Fc6x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.c?ref=9e7fe10ef10cce9c393ca90a95298ab390ea19c6", "patch": "@@ -1,5 +1,5 @@\n /* Target Code for TI C6X\n-   Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n+   Copyright (C) 2010, 2011, 2012 Free Software Foundation, Inc.\n    Contributed by Andrew Jenner <andrew@codesourcery.com>\n    Contributed by Bernd Schmidt <bernds@codesourcery.com>\n \n@@ -4196,13 +4196,14 @@ c6x_sched_reorder_1 (rtx *ready, int *pn_ready, int clock_var)\n \t  bool is_asm = (icode < 0\n \t\t\t && (GET_CODE (PATTERN (insn)) == ASM_INPUT\n \t\t\t     || asm_noperands (PATTERN (insn)) >= 0));\n-\t  int this_cycles;\n+\t  int this_cycles, rsrv_cycles;\n \t  enum attr_type type;\n \n \t  gcc_assert (!is_asm);\n \t  if (icode < 0)\n \t    continue;\n \t  this_cycles = get_attr_cycles (insn);\n+\t  rsrv_cycles = get_attr_reserve_cycles (insn);\n \t  type = get_attr_type (insn);\n \t  /* Treat branches specially; there is also a hazard if two jumps\n \t     end at the same cycle.  */\n@@ -4211,6 +4212,7 @@ c6x_sched_reorder_1 (rtx *ready, int *pn_ready, int clock_var)\n \t  if (clock_var + this_cycles <= first_cycle)\n \t    continue;\n \t  if ((first_jump > 0 && clock_var + this_cycles > second_cycle)\n+\t      || clock_var + rsrv_cycles > first_cycle\n \t      || !predicate_insn (insn, first_cond, false))\n \t    {\n \t      memmove (ready + 1, ready, (insnp - ready) * sizeof (rtx));"}, {"sha": "8e6ef4a59e262a424743f4a9dfbfc7f7cec0b439", "filename": "gcc/config/c6x/c6x.md", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e7fe10ef10cce9c393ca90a95298ab390ea19c6/gcc%2Fconfig%2Fc6x%2Fc6x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e7fe10ef10cce9c393ca90a95298ab390ea19c6/gcc%2Fconfig%2Fc6x%2Fc6x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.md?ref=9e7fe10ef10cce9c393ca90a95298ab390ea19c6", "patch": "@@ -1,5 +1,5 @@\n ;; Machine description for TI C6X.\n-;; Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n+;; Copyright (C) 2010, 2011, 2012 Free Software Foundation, Inc.\n ;; Contributed by Andrew Jenner <andrew@codesourcery.com>\n ;; Contributed by Bernd Schmidt <bernds@codesourcery.com>\n ;; Contributed by CodeSourcery.\n@@ -201,6 +201,17 @@\n \t (eq_attr \"type\" \"mpysp2dp\") (const_int 5)]\n \t(const_int 1)))\n \n+;; The number of cycles during which the instruction reserves functional\n+;; units.\n+(define_attr \"reserve_cycles\" \"\"\n+  (cond [(eq_attr \"type\" \"cmpdp\") (const_int 2)\n+\t (eq_attr \"type\" \"adddp\") (const_int 2)\n+\t (eq_attr \"type\" \"mpydp\") (const_int 4)\n+\t (eq_attr \"type\" \"mpyi\") (const_int 4)\n+\t (eq_attr \"type\" \"mpyid\") (const_int 4)\n+\t (eq_attr \"type\" \"mpyspdp\") (const_int 2)]\n+\t(const_int 1)))\n+\n (define_attr \"predicable\" \"no,yes\"\n   (const_string \"yes\"))\n "}]}