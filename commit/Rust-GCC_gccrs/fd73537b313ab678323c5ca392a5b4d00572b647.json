{"sha": "fd73537b313ab678323c5ca392a5b4d00572b647", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ3MzUzN2IzMTNhYjY3ODMyM2M1Y2EzOTJhNWI0ZDAwNTcyYjY0Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-06-11T09:22:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-06-11T09:22:27Z"}, "message": "tree-flow.h (may_point_to_global_var): Declare.\n\n2008-06-11  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-flow.h (may_point_to_global_var): Declare.\n\t* tree-ssa-alias.c (may_point_to_global_var): New function.\n\t* tree-ssa-sink.c (is_hidden_global_store): Use it.\n\nFrom-SVN: r136657", "tree": {"sha": "23b06d8a746a3a709b462d97b637223b78a6f62c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23b06d8a746a3a709b462d97b637223b78a6f62c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd73537b313ab678323c5ca392a5b4d00572b647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd73537b313ab678323c5ca392a5b4d00572b647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd73537b313ab678323c5ca392a5b4d00572b647", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd73537b313ab678323c5ca392a5b4d00572b647/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6717c5442ef81a7242e3ae1bd9f9274ab688ea2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6717c5442ef81a7242e3ae1bd9f9274ab688ea2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6717c5442ef81a7242e3ae1bd9f9274ab688ea2f"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "0d84391d2d7afc22ca57ecbd4211ef6f940a48f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd73537b313ab678323c5ca392a5b4d00572b647/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd73537b313ab678323c5ca392a5b4d00572b647/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd73537b313ab678323c5ca392a5b4d00572b647", "patch": "@@ -1,3 +1,9 @@\n+2008-06-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-flow.h (may_point_to_global_var): Declare.\n+\t* tree-ssa-alias.c (may_point_to_global_var): New function.\n+\t* tree-ssa-sink.c (is_hidden_global_store): Use it.\n+\n 2008-06-10  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* configure.ac: Teach that fido supports .debug_line."}, {"sha": "45711ae3f124580c2455da120883d57b7e8c082a", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd73537b313ab678323c5ca392a5b4d00572b647/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd73537b313ab678323c5ca392a5b4d00572b647/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=fd73537b313ab678323c5ca392a5b4d00572b647", "patch": "@@ -853,6 +853,7 @@ extern void dump_points_to_info_for (FILE *, tree);\n extern void debug_points_to_info_for (tree);\n extern bool may_be_aliased (tree);\n extern struct ptr_info_def *get_ptr_info (tree);\n+extern bool may_point_to_global_var (tree);\n extern void new_type_alias (tree, tree, tree);\n extern void count_uses_and_derefs (tree, tree, unsigned *, unsigned *,\n \t\t\t\t   unsigned *);"}, {"sha": "e89e73b9f5981b5650e552906d7273bc70cbef30", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd73537b313ab678323c5ca392a5b4d00572b647/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd73537b313ab678323c5ca392a5b4d00572b647/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=fd73537b313ab678323c5ca392a5b4d00572b647", "patch": "@@ -2783,6 +2783,23 @@ may_alias_p (tree ptr, alias_set_type mem_alias_set,\n   return true;\n }\n \n+/* Return true, if PTR may point to a global variable.  */\n+\n+bool\n+may_point_to_global_var (tree ptr)\n+{\n+  struct ptr_info_def *pi = SSA_NAME_PTR_INFO (ptr);\n+\n+  /* If we do not have points-to information for this variable,\n+     we have to punt.  */\n+  if (!pi\n+      || !pi->name_mem_tag)\n+    return true;\n+\n+  /* The name memory tag is marked as global variable if the points-to\n+     set contains a global variable.  */\n+  return is_global_var (pi->name_mem_tag);\n+}\n \n /* Add ALIAS to the set of variables that may alias VAR.  */\n "}, {"sha": "ebf54e2070b83eb453cf2f883d434838b44bf981", "filename": "gcc/tree-ssa-sink.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd73537b313ab678323c5ca392a5b4d00572b647/gcc%2Ftree-ssa-sink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd73537b313ab678323c5ca392a5b4d00572b647/gcc%2Ftree-ssa-sink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sink.c?ref=fd73537b313ab678323c5ca392a5b4d00572b647", "patch": "@@ -189,20 +189,7 @@ is_hidden_global_store (tree stmt)\n \n \t}\n       else if (INDIRECT_REF_P (lhs))\n-\t{\n-\t  tree ptr = TREE_OPERAND (lhs, 0);\n-\t  struct ptr_info_def *pi = SSA_NAME_PTR_INFO (ptr);\n-\t  tree nmt = (pi) ? pi->name_mem_tag : NULL_TREE;\n-\t  tree smt = symbol_mem_tag (SSA_NAME_VAR (ptr));\n-\n-\t  /* If either the name tag or the symbol tag for PTR is a\n-\t     global variable, then the store is necessary.  */\n-\t  if ((nmt && is_global_var (nmt))\n-\t      || (smt && is_global_var (smt)))\n-\t    {\n-\t      return true;\n-\t    }\n-\t}\n+\treturn may_point_to_global_var (TREE_OPERAND (lhs, 0));\n       else\n \tgcc_unreachable ();\n     }"}]}