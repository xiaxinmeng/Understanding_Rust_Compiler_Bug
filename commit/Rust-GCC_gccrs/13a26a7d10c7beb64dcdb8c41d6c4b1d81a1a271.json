{"sha": "13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNhMjZhN2QxMGM3YmViNjRkY2RiOGM0MWQ2YzRiMWQ4MWExYTI3MQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-11-01T08:39:31Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-01T08:39:31Z"}, "message": "configure.ac (HAVE_AS_IX86_INTERUNIT_MOVQ): Always define as 0/1.\n\n\t* configure.ac (HAVE_AS_IX86_INTERUNIT_MOVQ): Always define as 0/1.\n\t* configure: Regenerate.\n\t* config/i386/i386.md (*movdi_internal): Change\n\tHAVE_AS_IX86_INTERUNIT_MOVQ to runtime check.\n\t(*movdf_internal): Ditto.\n\t* config/i386/mmx.md (*mov<mode>_internal): Ditto.\n\t* config/i386/sse.md (vec_concatv2di): Output interunit movq\n\tfor HAVE_AS_IX86_INTERUNIT_MOVQ targets.\n\nFrom-SVN: r204289", "tree": {"sha": "2389ec09c09ab8d3e08ead56d13f42c99709506e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2389ec09c09ab8d3e08ead56d13f42c99709506e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "942323000bbc5bde768c0f651d62af5eea462c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/942323000bbc5bde768c0f651d62af5eea462c1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/942323000bbc5bde768c0f651d62af5eea462c1d"}], "stats": {"total": 55, "additions": 31, "deletions": 24}, "files": [{"sha": "0eea81e5001bfec016393fb22c8cf29f22163fa3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "patch": "@@ -1,3 +1,14 @@\n+2013-11-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* configure.ac (HAVE_AS_IX86_INTERUNIT_MOVQ): Always define as 0/1.\n+\t* configure: Regenerate.\n+\t* config/i386/i386.md (*movdi_internal): Change\n+\tHAVE_AS_IX86_INTERUNIT_MOVQ to runtime check.\n+\t(*movdf_internal): Ditto.\n+\t* config/i386/mmx.md (*mov<mode>_internal): Ditto.\n+\t* config/i386/sse.md (vec_concatv2di): Output interunit movq\n+\tfor HAVE_AS_IX86_INTERUNIT_MOVQ targets.\n+\n 2013-10-31  Robert Suchanek  <Robert.Suchanek@imgtec.com>\n \n \t* lra-spills.c (assign_spill_hard_regs): Remove statement terminator"}, {"sha": "383bb97bace84e2b3f65eac625f203073010046f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "patch": "@@ -2007,11 +2007,10 @@\n       return \"pxor\\t%0, %0\";\n \n     case TYPE_MMXMOV:\n-#ifndef HAVE_AS_IX86_INTERUNIT_MOVQ\n       /* Handle broken assemblers that require movd instead of movq.  */\n-      if (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1]))\n+      if (!HAVE_AS_IX86_INTERUNIT_MOVQ\n+\t  && (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1])))\n \treturn \"movd\\t{%1, %0|%0, %1}\";\n-#endif\n       return \"movq\\t{%1, %0|%0, %1}\";\n \n     case TYPE_SSELOG1:\n@@ -2024,11 +2023,10 @@\n       switch (get_attr_mode (insn))\n \t{\n \tcase MODE_DI:\n-#ifndef HAVE_AS_IX86_INTERUNIT_MOVQ\n \t  /* Handle broken assemblers that require movd instead of movq.  */\n-\t  if (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1]))\n+\t  if (!HAVE_AS_IX86_INTERUNIT_MOVQ\n+\t      && (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1])))\n \t    return \"%vmovd\\t{%1, %0|%0, %1}\";\n-#endif\n \t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n \tcase MODE_TI:\n \t  return \"%vmovdqa\\t{%1, %0|%0, %1}\";\n@@ -2944,12 +2942,11 @@\n \t  return \"movlpd\\t{%1, %0|%0, %1}\";\n \n \tcase MODE_DI:\n-#ifndef HAVE_AS_IX86_INTERUNIT_MOVQ\n \t  /* Handle broken assemblers that require movd instead of movq.  */\n-\t  if (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1]))\n+\t  if (!HAVE_AS_IX86_INTERUNIT_MOVQ\n+\t      && (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1])))\n \t    return \"%vmovd\\t{%1, %0|%0, %1}\";\n-#endif\n- \t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n+\t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n \n \tdefault:\n \t  gcc_unreachable ();"}, {"sha": "cc0db3a9d06f3cfde05cb19feb9ae0108572b6f7", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "patch": "@@ -99,11 +99,10 @@\n       return \"pxor\\t%0, %0\";\n \n     case TYPE_MMXMOV:\n-#ifndef HAVE_AS_IX86_INTERUNIT_MOVQ\n       /* Handle broken assemblers that require movd instead of movq.  */\n-      if (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1]))\n+      if (!HAVE_AS_IX86_INTERUNIT_MOVQ\n+\t  && (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1])))\n \treturn \"movd\\t{%1, %0|%0, %1}\";\n-#endif\n       return \"movq\\t{%1, %0|%0, %1}\";\n \n     case TYPE_SSECVT:\n@@ -119,15 +118,13 @@\n       switch (get_attr_mode (insn))\n \t{\n \tcase MODE_DI:\n-#ifndef HAVE_AS_IX86_INTERUNIT_MOVQ\n \t  /* Handle broken assemblers that require movd instead of movq.  */\n-\t  if (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1]))\n+\t  if (!HAVE_AS_IX86_INTERUNIT_MOVQ\n+\t      && (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1])))\n \t    return \"%vmovd\\t{%1, %0|%0, %1}\";\n-#endif\n \t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n \tcase MODE_TI:\n \t  return \"%vmovdqa\\t{%1, %0|%0, %1}\";\n-\n \tcase MODE_XI:\n \t  return \"vmovdqa64\\t{%g1, %g0|%g0, %g1}\";\n "}, {"sha": "9094a1c8b9735f50336c8c58804292230b8673d1", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "patch": "@@ -9489,7 +9489,7 @@\n   \"@\n    pinsrq\\t{$1, %2, %0|%0, %2, 1}\n    vpinsrq\\t{$1, %2, %1, %0|%0, %1, %2, 1}\n-   %vmovd\\t{%1, %0|%0, %1}\n+   * return HAVE_AS_IX86_INTERUNIT_MOVQ ? \\\"%vmovq\\t{%1, %0|%0, %1}\\\" : \\\"%vmovd\\t{%1, %0|%0, %1}\\\";\n    %vmovq\\t{%1, %0|%0, %1}\n    movq2dq\\t{%1, %0|%0, %1}\n    punpcklqdq\\t{%2, %0|%0, %2}"}, {"sha": "759862c00f75bdc4e9ebabad0691f78ebfc1c5d4", "filename": "gcc/configure", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "patch": "@@ -24802,11 +24802,12 @@ else\n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_ix86_interunit_movq\" >&5\n $as_echo \"$gcc_cv_as_ix86_interunit_movq\" >&6; }\n-if test $gcc_cv_as_ix86_interunit_movq = yes; then\n \n-$as_echo \"#define HAVE_AS_IX86_INTERUNIT_MOVQ 1\" >>confdefs.h\n \n-fi\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_AS_IX86_INTERUNIT_MOVQ `if test $gcc_cv_as_ix86_interunit_movq = yes; then echo 1; else echo 0; fi`\n+_ACEOF\n+\n \n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for hle prefixes\" >&5\n $as_echo_n \"checking assembler for hle prefixes... \" >&6; }"}, {"sha": "8670c7b7ceee2701c39a9f24bc9cd2e7b0ae1665", "filename": "gcc/configure.ac", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=13a26a7d10c7beb64dcdb8c41d6c4b1d81a1a271", "patch": "@@ -3754,9 +3754,10 @@ foo:\tnop\n       gcc_cv_as_ix86_interunit_movq,,,\n       [.code64\n        movq %mm0, %rax\n-       movq %rax, %xmm0],,\n-      [AC_DEFINE(HAVE_AS_IX86_INTERUNIT_MOVQ, 1,\n-        [Define if your assembler supports interunit movq mnemonic.])])\n+       movq %rax, %xmm0])\n+    AC_DEFINE_UNQUOTED(HAVE_AS_IX86_INTERUNIT_MOVQ,\n+      [`if test $gcc_cv_as_ix86_interunit_movq = yes; then echo 1; else echo 0; fi`],\n+      [Define if your assembler supports interunit movq mnemonic.])\n \n     gcc_GAS_CHECK_FEATURE([hle prefixes],\n       gcc_cv_as_ix86_hle,,,"}]}