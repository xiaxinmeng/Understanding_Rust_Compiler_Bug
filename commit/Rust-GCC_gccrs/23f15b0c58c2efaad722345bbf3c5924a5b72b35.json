{"sha": "23f15b0c58c2efaad722345bbf3c5924a5b72b35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNmMTViMGM1OGMyZWZhYWQ3MjIzNDViYmYzYzU5MjRhNWI3MmIzNQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-21T01:27:13Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-21T01:27:13Z"}, "message": "(do_xifdef): Handle c++ comments.\n\n(do_endif): Likewise.\n\nFrom-SVN: r9214", "tree": {"sha": "32a9d8aec72500d80bd79521874a79bd0c2272d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32a9d8aec72500d80bd79521874a79bd0c2272d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23f15b0c58c2efaad722345bbf3c5924a5b72b35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f15b0c58c2efaad722345bbf3c5924a5b72b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23f15b0c58c2efaad722345bbf3c5924a5b72b35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f15b0c58c2efaad722345bbf3c5924a5b72b35/comments", "author": null, "committer": null, "parents": [{"sha": "f0959e58ca77e179cb34859e32a1260b01b51cce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0959e58ca77e179cb34859e32a1260b01b51cce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0959e58ca77e179cb34859e32a1260b01b51cce"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "fb1e6fd64a0da51747e4bcd945ac05d17b0c128d", "filename": "gcc/cccp.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23f15b0c58c2efaad722345bbf3c5924a5b72b35/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23f15b0c58c2efaad722345bbf3c5924a5b72b35/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=23f15b0c58c2efaad722345bbf3c5924a5b72b35", "patch": "@@ -6953,7 +6953,11 @@ do_xifdef (buf, limit, op, keyword)\n       U_CHAR c = *p++;\n       if (is_space[c])\n \t;\n-      else if (c == '/' && p != ip->bufp && *p == '*') {\n+      /* ??? Why is the test with ip->bufp here?  */\n+      /* ??? We don't handle \\-n inside /-*.  */\n+      /* ??? Comment handling in general could use a major cleanup.  */\n+      else if (c == '/' && p != ip->bufp\n+\t       && (*p == '*' || (cplusplus_comments && *p == '/'))) {\n \t/* Skip this comment.  */\n \tint junk = 0;\n \tU_CHAR *save_bufp = ip->bufp;\n@@ -7410,7 +7414,8 @@ do_endif (buf, limit, op, keyword)\n       while (p != ep) {\n \tU_CHAR c = *p++;\n \tif (!is_space[c]) {\n-\t  if (c == '/' && p != ep && *p == '*') {\n+\t  if (c == '/' && p != ep\n+\t      && (*p == '*' || (cplusplus_comments && *p == '/'))) {\n \t    /* Skip this comment.  */\n \t    int junk = 0;\n \t    U_CHAR *save_bufp = ip->bufp;"}]}