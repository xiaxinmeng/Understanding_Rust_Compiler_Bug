{"sha": "18146f456f5a66b20d9f9f886a38364369b0474c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxNDZmNDU2ZjVhNjZiMjBkOWY5Zjg4NmEzODM2NDM2OWIwNDc0Yw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-01-07T20:40:46Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-01-07T20:40:46Z"}, "message": "API extension: add GCC_JIT_UNARY_OP_ABS to enum gcc_jit_unary_op\n\ngcc/jit/ChangeLog:\n\t* docs/topics/expressions.rst (Unary Operations): Add\n\tGCC_JIT_UNARY_OP_ABS.\n\t* jit-playback.c (gcc::jit::playback::context::new_unary_op):\n\tLikewise.\n\t* jit-recording.c (unary_op_strings): Likewise.\n\t* libgccjit.c (gcc_jit_context_new_unary_op): Update checking\n\tof \"op\" to reflect addition of GCC_JIT_UNARY_OP_ABS.\n\t* libgccjit.h (enum gcc_jit_unary_op): Add GCC_JIT_UNARY_OP_ABS.\n\t* docs/_build/texinfo/libgccjit.texi: Regenerate.\n\ngcc/testsuite/ChangeLog:\n\t* jit.dg/test-expressions.c (make_tests_of_unary_ops): Add test of\n\tGCC_JIT_UNARY_OP_ABS.\n\t(verify_unary_ops): Likewise.\n\nFrom-SVN: r219321", "tree": {"sha": "f4ac466c9b35679f58cc38f46554ecece9ad0d3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4ac466c9b35679f58cc38f46554ecece9ad0d3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18146f456f5a66b20d9f9f886a38364369b0474c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18146f456f5a66b20d9f9f886a38364369b0474c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18146f456f5a66b20d9f9f886a38364369b0474c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18146f456f5a66b20d9f9f886a38364369b0474c/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f63c7f852468f409205d1d0182b2fba989c38f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63c7f852468f409205d1d0182b2fba989c38f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63c7f852468f409205d1d0182b2fba989c38f93"}], "stats": {"total": 698, "additions": 387, "deletions": 311}, "files": [{"sha": "b17706e58ca3e12468b0ec566b5ce2fce2d95b74", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=18146f456f5a66b20d9f9f886a38364369b0474c", "patch": "@@ -1,3 +1,15 @@\n+2015-01-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* docs/topics/expressions.rst (Unary Operations): Add\n+\tGCC_JIT_UNARY_OP_ABS.\n+\t* jit-playback.c (gcc::jit::playback::context::new_unary_op):\n+\tLikewise.\n+\t* jit-recording.c (unary_op_strings): Likewise.\n+\t* libgccjit.c (gcc_jit_context_new_unary_op): Update checking\n+\tof \"op\" to reflect addition of GCC_JIT_UNARY_OP_ABS.\n+\t* libgccjit.h (enum gcc_jit_unary_op): Add GCC_JIT_UNARY_OP_ABS.\n+\t* docs/_build/texinfo/libgccjit.texi: Regenerate.\n+\n 2015-01-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jit-recording.h (gcc::jit::recording::memento_of_get_type): Fix"}, {"sha": "ba64b929312181357e035c6ad6abdc85b1b137df", "filename": "gcc/jit/docs/_build/texinfo/libgccjit.texi", "status": "modified", "additions": 332, "deletions": 309, "changes": 641, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi?ref=18146f456f5a66b20d9f9f886a38364369b0474c"}, {"sha": "72a10856a275d52165d2a6c5189e6983eb1b1d11", "filename": "gcc/jit/docs/topics/expressions.rst", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst?ref=18146f456f5a66b20d9f9f886a38364369b0474c", "patch": "@@ -137,6 +137,7 @@ Unary Operation                             C equivalent\n :c:macro:`GCC_JIT_UNARY_OP_MINUS`           `-(EXPR)`\n :c:macro:`GCC_JIT_UNARY_OP_BITWISE_NEGATE`  `~(EXPR)`\n :c:macro:`GCC_JIT_UNARY_OP_LOGICAL_NEGATE`  `!(EXPR)`\n+:c:macro:`GCC_JIT_UNARY_OP_ABS`             `abs (EXPR)`\n ==========================================  ============\n \n .. c:macro:: GCC_JIT_UNARY_OP_MINUS\n@@ -170,6 +171,16 @@ Unary Operation                             C equivalent\n \n     in C.\n \n+.. c:macro:: GCC_JIT_UNARY_OP_ABS\n+\n+    Absolute value of an arithmetic expression; analogous to:\n+\n+    .. code-block:: c\n+\n+        abs (EXPR)\n+\n+    in C.\n+\n Binary Operations\n *****************\n "}, {"sha": "013ee0f20d0f7de7241382e329e743e5b0e5609f", "filename": "gcc/jit/jit-playback.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Fjit-playback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Fjit-playback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-playback.c?ref=18146f456f5a66b20d9f9f886a38364369b0474c", "patch": "@@ -615,6 +615,10 @@ new_unary_op (location *loc,\n       if (loc)\n \tset_tree_location (inner_result, loc);\n       return new rvalue (this, inner_result);\n+\n+    case GCC_JIT_UNARY_OP_ABS:\n+      inner_op = ABS_EXPR;\n+      break;\n     }\n \n   inner_result = build1 (inner_op,"}, {"sha": "dc7a7fbcfd3895060df0d8f7363c7d481709ea35", "filename": "gcc/jit/jit-recording.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Fjit-recording.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Fjit-recording.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-recording.c?ref=18146f456f5a66b20d9f9f886a38364369b0474c", "patch": "@@ -2797,6 +2797,7 @@ static const char * const unary_op_strings[] = {\n   \"-\", /* GCC_JIT_UNARY_OP_MINUS */\n   \"~\", /* GCC_JIT_UNARY_OP_BITWISE_NEGATE */\n   \"!\", /* GCC_JIT_UNARY_OP_LOGICAL_NEGATE */\n+  \"abs \", /* GCC_JIT_UNARY_OP_ABS */\n };\n \n recording::string *"}, {"sha": "6853bb0b20b25b7f11427e070484ff738b6e940a", "filename": "gcc/jit/libgccjit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Flibgccjit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Flibgccjit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Flibgccjit.c?ref=18146f456f5a66b20d9f9f886a38364369b0474c", "patch": "@@ -1180,7 +1180,7 @@ gcc_jit_context_new_unary_op (gcc_jit_context *ctxt,\n   /* LOC can be NULL.  */\n   RETURN_NULL_IF_FAIL_PRINTF1 (\n     (op >= GCC_JIT_UNARY_OP_MINUS\n-     && op <= GCC_JIT_UNARY_OP_LOGICAL_NEGATE),\n+     && op <= GCC_JIT_UNARY_OP_ABS),\n     ctxt, loc,\n     \"unrecognized value for enum gcc_jit_unary_op: %i\",\n     op);"}, {"sha": "2049795a2138b5bc68c589d51924a884ccb956b8", "filename": "gcc/jit/libgccjit.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Flibgccjit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Fjit%2Flibgccjit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Flibgccjit.h?ref=18146f456f5a66b20d9f9f886a38364369b0474c", "patch": "@@ -649,7 +649,13 @@ enum gcc_jit_unary_op\n   /* Logical negation of an arithmetic or pointer value; analogous to:\n        !(EXPR)\n      in C.  */\n-  GCC_JIT_UNARY_OP_LOGICAL_NEGATE\n+  GCC_JIT_UNARY_OP_LOGICAL_NEGATE,\n+\n+  /* Absolute value of an arithmetic expression; analogous to:\n+       abs (EXPR)\n+     in C.  */\n+  GCC_JIT_UNARY_OP_ABS\n+\n };\n \n extern gcc_jit_rvalue *"}, {"sha": "d6509c90952610c6ecbfcc412091848d78cdc730", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18146f456f5a66b20d9f9f886a38364369b0474c", "patch": "@@ -1,3 +1,9 @@\n+2015-01-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* jit.dg/test-expressions.c (make_tests_of_unary_ops): Add test of\n+\tGCC_JIT_UNARY_OP_ABS.\n+\t(verify_unary_ops): Likewise.\n+\n 2015-01-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jit.dg/test-arith-overflow.c: New test case."}, {"sha": "7e33b56b772e2f7f43aeaf17b4155114f48922f8", "filename": "gcc/testsuite/jit.dg/test-expressions.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Ftestsuite%2Fjit.dg%2Ftest-expressions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18146f456f5a66b20d9f9f886a38364369b0474c/gcc%2Ftestsuite%2Fjit.dg%2Ftest-expressions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Ftest-expressions.c?ref=18146f456f5a66b20d9f9f886a38364369b0474c", "patch": "@@ -73,6 +73,12 @@ make_tests_of_unary_ops (gcc_jit_context *ctxt)\n \t\t\t   GCC_JIT_UNARY_OP_LOGICAL_NEGATE,\n \t\t\t   \"test_UNARY_OP_LOGICAL_NEGATE_on_int\"),\n     \"!(a)\");\n+  CHECK_STRING_VALUE (\n+    make_test_of_unary_op (ctxt,\n+\t\t\t   int_type,\n+\t\t\t   GCC_JIT_UNARY_OP_ABS,\n+\t\t\t   \"test_UNARY_OP_ABS_on_int\"),\n+    \"abs (a)\");\n }\n \n static void\n@@ -104,6 +110,13 @@ verify_unary_ops (gcc_jit_result *result)\n   CHECK_VALUE (test_UNARY_OP_LOGICAL_NEGATE_on_int (42), 0);\n   CHECK_VALUE (test_UNARY_OP_LOGICAL_NEGATE_on_int (-5), 0);\n \n+  test_fn test_UNARY_OP_ABS_on_int =\n+    (test_fn)gcc_jit_result_get_code (result,\n+\t\t\t\t      \"test_UNARY_OP_ABS_on_int\");\n+  CHECK_NON_NULL (test_UNARY_OP_ABS_on_int);\n+  CHECK_VALUE (test_UNARY_OP_ABS_on_int (0), 0);\n+  CHECK_VALUE (test_UNARY_OP_ABS_on_int (42), 42);\n+  CHECK_VALUE (test_UNARY_OP_ABS_on_int (-5), 5);\n }\n \n /**********************************************************************"}]}