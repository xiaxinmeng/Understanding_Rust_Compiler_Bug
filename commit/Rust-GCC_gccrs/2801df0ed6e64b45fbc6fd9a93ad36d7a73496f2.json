{"sha": "2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgwMWRmMGVkNmU2NGI0NWZiYzZmZDlhOTNhZDM2ZDdhNzM0OTZmMg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2002-04-04T08:32:28Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2002-04-04T08:32:28Z"}, "message": "Modifier.java (toString(int,StringBuffer)): Fix ordering.\n\n        * java/lang/reflect/Modifier.java (toString(int,StringBuffer)): Fix\n        ordering.\n\nFrom-SVN: r51848", "tree": {"sha": "5cfa65505969fe3b90d0868161f4e6c83178d8ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cfa65505969fe3b90d0868161f4e6c83178d8ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2/comments", "author": null, "committer": null, "parents": [{"sha": "257b325b512f88c4b3ae9be44aec83ec42898f64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/257b325b512f88c4b3ae9be44aec83ec42898f64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/257b325b512f88c4b3ae9be44aec83ec42898f64"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "60d724267f145f528645f1b773c70e57599d1112", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2", "patch": "@@ -1,3 +1,8 @@\n+2002-04-03  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/lang/reflect/Modifier.java (toString(int,StringBuffer)): Fix\n+\tordering.\n+\n 2002-04-02  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/natClassLoader.cc (findClass): Compare against `3',"}, {"sha": "75d0c9b47f5938cd49d7fd5f16f34ebf8e25901a", "filename": "libjava/java/lang/reflect/Modifier.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2/libjava%2Fjava%2Flang%2Freflect%2FModifier.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2/libjava%2Fjava%2Flang%2Freflect%2FModifier.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FModifier.java?ref=2801df0ed6e64b45fbc6fd9a93ad36d7a73496f2", "patch": "@@ -280,8 +280,8 @@ public static boolean isVolatile(int mod)\n   /**\n    * Get a string representation of all the modifiers represented by the\n    * given int. The keywords are printed in this order:\n-   * <code>&lt;public|private|protected&gt; abstract static final transient\n-   * volatile native synchronized interface strictfp</code>.\n+   * <code>&lt;public|protected|private&gt; abstract static final transient\n+   * volatile synchronized native strictfp interface</code>.\n    *\n    * @param mod the modifier.\n    * @return the String representing the modifiers.\n@@ -301,10 +301,10 @@ static StringBuffer toString(int mod, StringBuffer r)\n   {\n     if (isPublic(mod))\n       r.append(\"public \");\n-    if (isPrivate(mod))\n-      r.append(\"private \");\n     if (isProtected(mod))\n       r.append(\"protected \");\n+    if (isPrivate(mod))\n+      r.append(\"private \");\n     if (isAbstract(mod))\n       r.append(\"abstract \");\n     if (isStatic(mod))\n@@ -315,14 +315,14 @@ static StringBuffer toString(int mod, StringBuffer r)\n       r.append(\"transient \");\n     if (isVolatile(mod))\n       r.append(\"volatile \");\n-    if (isNative(mod))\n-      r.append(\"native \");\n     if (isSynchronized(mod))\n       r.append(\"synchronized \");\n-    if (isInterface(mod))\n-      r.append(\"interface \");\n+    if (isNative(mod))\n+      r.append(\"native \");\n     if (isStrict(mod))\n       r.append(\"strictfp \");\n+    if (isInterface(mod))\n+      r.append(\"interface \");\n     \n     // Trim trailing space.\n     if ((mod & ALL_FLAGS) != 0)"}]}