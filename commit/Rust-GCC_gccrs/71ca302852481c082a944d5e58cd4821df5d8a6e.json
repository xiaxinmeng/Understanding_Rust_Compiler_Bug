{"sha": "71ca302852481c082a944d5e58cd4821df5d8a6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFjYTMwMjg1MjQ4MWMwODJhOTQ0ZDVlNThjZDQ4MjFkZjVkOGE2ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2014-05-17T12:58:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-05-17T12:58:34Z"}, "message": "extend.texi (Size of an asm): Move node text according to its @menu entry position.\n\n\t* doc/extend.texi (Size of an asm): Move node text according\n\tto its @menu entry position.\n\nFrom-SVN: r210555", "tree": {"sha": "81483370535a20ec681428584b8aad93d15fae25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81483370535a20ec681428584b8aad93d15fae25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71ca302852481c082a944d5e58cd4821df5d8a6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71ca302852481c082a944d5e58cd4821df5d8a6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71ca302852481c082a944d5e58cd4821df5d8a6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71ca302852481c082a944d5e58cd4821df5d8a6e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87a34442667d0ecd397e141e26a64419fb71850c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87a34442667d0ecd397e141e26a64419fb71850c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87a34442667d0ecd397e141e26a64419fb71850c"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "22c52a6dc5b2acc67a95391dc99779734d80fdf7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71ca302852481c082a944d5e58cd4821df5d8a6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71ca302852481c082a944d5e58cd4821df5d8a6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71ca302852481c082a944d5e58cd4821df5d8a6e", "patch": "@@ -1,3 +1,8 @@\n+2014-05-17  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* doc/extend.texi (Size of an asm): Move node text according\n+\tto its @menu entry position.\n+\n 2014-05-17  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR tree-optimization/61140"}, {"sha": "bd2c82915bcb3c9a15bf85b25ce95c1441a77ef7", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71ca302852481c082a944d5e58cd4821df5d8a6e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71ca302852481c082a944d5e58cd4821df5d8a6e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=71ca302852481c082a944d5e58cd4821df5d8a6e", "patch": "@@ -7172,28 +7172,6 @@ asm (\"fyl2xp1\" : \"=t\" (result) : \"0\" (x), \"u\" (y) : \"st(1)\");\n @include md.texi\n @raisesections\n \n-@node Size of an asm\n-@subsection Size of an @code{asm}\n-\n-Some targets require that GCC track the size of each instruction used\n-in order to generate correct code.  Because the final length of the\n-code produced by an @code{asm} statement is only known by the\n-assembler, GCC must make an estimate as to how big it will be.  It\n-does this by counting the number of instructions in the pattern of the\n-@code{asm} and multiplying that by the length of the longest\n-instruction supported by that processor.  (When working out the number\n-of instructions, it assumes that any occurrence of a newline or of\n-whatever statement separator character is supported by the assembler --\n-typically @samp{;} --- indicates the end of an instruction.)\n-\n-Normally, GCC's estimate is adequate to ensure that correct\n-code is generated, but it is possible to confuse the compiler if you use\n-pseudo instructions or assembler macros that expand into multiple real\n-instructions, or if you use assembler directives that expand to more\n-space in the object file than is needed for a single instruction.\n-If this happens then the assembler may produce a diagnostic saying that\n-a label is unreachable.\n-\n @node Asm Labels\n @subsection Controlling Names Used in Assembler Code\n @cindex assembler names for identifiers\n@@ -7277,6 +7255,28 @@ output of the assembler instruction directly into a particular register.\n specified for that operand in the @code{asm}.)\n @end itemize\n \n+@node Size of an asm\n+@subsection Size of an @code{asm}\n+\n+Some targets require that GCC track the size of each instruction used\n+in order to generate correct code.  Because the final length of the\n+code produced by an @code{asm} statement is only known by the\n+assembler, GCC must make an estimate as to how big it will be.  It\n+does this by counting the number of instructions in the pattern of the\n+@code{asm} and multiplying that by the length of the longest\n+instruction supported by that processor.  (When working out the number\n+of instructions, it assumes that any occurrence of a newline or of\n+whatever statement separator character is supported by the assembler --\n+typically @samp{;} --- indicates the end of an instruction.)\n+\n+Normally, GCC's estimate is adequate to ensure that correct\n+code is generated, but it is possible to confuse the compiler if you use\n+pseudo instructions or assembler macros that expand into multiple real\n+instructions, or if you use assembler directives that expand to more\n+space in the object file than is needed for a single instruction.\n+If this happens then the assembler may produce a diagnostic saying that\n+a label is unreachable.\n+\n @menu\n * Global Reg Vars::\n * Local Reg Vars::"}]}