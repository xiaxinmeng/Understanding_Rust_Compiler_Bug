{"sha": "b63fe0076d20fa0ddd660e53d882792e54d1bef7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYzZmUwMDc2ZDIwZmEwZGRkNjYwZTUzZDg4Mjc5MmU1NGQxYmVmNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-02-11T16:05:44Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-02-11T16:05:44Z"}, "message": "re PR rtl-optimization/56275 (ICE in simplify_subreg, at simplify-rtx.c:5261 with vector code.)\n\n\tPR rtl-optimization/56275\n\t* simplify-rtx.c (avoid_constant_pool_reference): Check that\n\toffset is non-negative and less than cmode size before\n\tcalling simplify_subreg.\n\ntestsuite/ChangeLog:\n\n\tPR rtl-optimization/56275\n\t* gcc.dg/pr56275.c: New test.\n\nFrom-SVN: r195944", "tree": {"sha": "75844929969655f7bf9fe5bbc236484d6ff418c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75844929969655f7bf9fe5bbc236484d6ff418c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b63fe0076d20fa0ddd660e53d882792e54d1bef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b63fe0076d20fa0ddd660e53d882792e54d1bef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b63fe0076d20fa0ddd660e53d882792e54d1bef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b63fe0076d20fa0ddd660e53d882792e54d1bef7/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9146c16bc6a7f3539e4cef5f5a9a8207de66ad"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "00d07847c834edb2f73d5bd195b5251761825c62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63fe0076d20fa0ddd660e53d882792e54d1bef7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63fe0076d20fa0ddd660e53d882792e54d1bef7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b63fe0076d20fa0ddd660e53d882792e54d1bef7", "patch": "@@ -1,3 +1,10 @@\n+2013-02-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/56275\n+\t* simplify-rtx.c (avoid_constant_pool_reference): Check that\n+\toffset is non-negative and less than cmode size before\n+\tcalling simplify_subreg.\n+\n 2013-02-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56264"}, {"sha": "3f04b8bdeb3c0114a55cfd359f9566bb805643ce", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63fe0076d20fa0ddd660e53d882792e54d1bef7/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63fe0076d20fa0ddd660e53d882792e54d1bef7/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=b63fe0076d20fa0ddd660e53d882792e54d1bef7", "patch": "@@ -242,7 +242,8 @@ avoid_constant_pool_reference (rtx x)\n       /* If we're accessing the constant in a different mode than it was\n          originally stored, attempt to fix that up via subreg simplifications.\n          If that fails we have no choice but to return the original memory.  */\n-      if (offset != 0 || cmode != GET_MODE (x))\n+      if ((offset != 0 || cmode != GET_MODE (x))\n+\t  && offset >= 0 && offset < GET_MODE_SIZE (cmode))\n         {\n           rtx tem = simplify_subreg (GET_MODE (x), c, cmode, offset);\n           if (tem && CONSTANT_P (tem))"}, {"sha": "dce413d2486014f632450e6a384440b3de4fe8dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63fe0076d20fa0ddd660e53d882792e54d1bef7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63fe0076d20fa0ddd660e53d882792e54d1bef7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b63fe0076d20fa0ddd660e53d882792e54d1bef7", "patch": "@@ -1,3 +1,8 @@\n+2013-02-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/56275\n+\t* gcc.dg/pr56275.c: New test.\n+\n 2013-02-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56273"}, {"sha": "b901bb2b1998b815912706bf01dbf7a26418a37b", "filename": "gcc/testsuite/gcc.dg/pr56275.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b63fe0076d20fa0ddd660e53d882792e54d1bef7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56275.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b63fe0076d20fa0ddd660e53d882792e54d1bef7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56275.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56275.c?ref=b63fe0076d20fa0ddd660e53d882792e54d1bef7", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-additional-options \"-mno-sse\" { target { i?86-*-* x86_64-*-* } } } */\n+\n+typedef long long v2tw __attribute__ ((vector_size (2 * sizeof (long long))));\n+\n+void tiger_block_v2 (long long in1, v2tw *res)\n+{\n+  v2tw i1 = { in1, in1 };\n+\n+  *res = i1 << 1;\n+}"}]}