{"sha": "b3656137984c755671e79da32c66379c0a4d2425", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM2NTYxMzc5ODRjNzU1NjcxZTc5ZGEzMmM2NjM3OWMwYTRkMjQyNQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-12-09T16:31:53Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-12-09T16:31:53Z"}, "message": "1750a.md: Add default case in switch.\n\n\t* 1750a.md: Add default case in switch.\n\t* alpha/vms.h (INITIAL_ELIMINATION_OFFSET): Add abort clause in\n\tif-else statement.\n\t* dsp16xx.c (print_operand_address): Likewise.\n\t* i386/osf1elf.h (FUNCTION_PROFILER): Const-ify.\n\t* ia64.md: Add missing braces.\n\t* rs6000-protos.h (s8bit_cint_operand): Prototype.\n\t* s390.h (INITIAL_ELIMINATION_OFFSET): Add abort clause in\n        if-else statement.\n\t* stormy16.h (REG_CLASS_CONTENTS): Add missing braces.\n\t* v850.h (OUTPUT_ADDR_CONST_EXTRA): Don't issue a `return'.\n\t* dbxout.c (dbxout_source_file): Move a variable into the scope\n\twhere it is used.\n\t* final.c (profile_function): Mark parameter with\n\tATTRIBUTE_UNUSED.\n\t* genemit.c (gen_expand): Likewise for generated file.\n\t* insn-addr.h (INSN_ADDRESSES_NEW): Avoid undefined behavior.\n\nFrom-SVN: r47812", "tree": {"sha": "2612c00ba3fd0d0772838493d20ed0302595f51b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2612c00ba3fd0d0772838493d20ed0302595f51b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3656137984c755671e79da32c66379c0a4d2425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3656137984c755671e79da32c66379c0a4d2425", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3656137984c755671e79da32c66379c0a4d2425", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3656137984c755671e79da32c66379c0a4d2425/comments", "author": null, "committer": null, "parents": [{"sha": "cadf4f299ddaab8ef6dfb5911f09177e6d2cb4df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cadf4f299ddaab8ef6dfb5911f09177e6d2cb4df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cadf4f299ddaab8ef6dfb5911f09177e6d2cb4df"}], "stats": {"total": 87, "additions": 59, "deletions": 28}, "files": [{"sha": "311c27137f50c1008c5f1ce73513b4f2bcafb35b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -1,5 +1,23 @@\n 2001-12-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* 1750a.md: Add default case in switch.\n+\t* alpha/vms.h (INITIAL_ELIMINATION_OFFSET): Add abort clause in\n+\tif-else statement.\n+\t* dsp16xx.c (print_operand_address): Likewise.\n+\t* i386/osf1elf.h (FUNCTION_PROFILER): Const-ify.\n+\t* ia64.md: Add missing braces.\n+\t* rs6000-protos.h (s8bit_cint_operand): Prototype.\n+\t* s390.h (INITIAL_ELIMINATION_OFFSET): Add abort clause in\n+        if-else statement.\n+\t* stormy16.h (REG_CLASS_CONTENTS): Add missing braces.\n+\t* v850.h (OUTPUT_ADDR_CONST_EXTRA): Don't issue a `return'.\n+\t* dbxout.c (dbxout_source_file): Move a variable into the scope\n+\twhere it is used.\n+\t* final.c (profile_function): Mark parameter with\n+\tATTRIBUTE_UNUSED.\n+\t* genemit.c (gen_expand): Likewise for generated file.\n+\t* insn-addr.h (INSN_ADDRESSES_NEW): Avoid undefined behavior.\n+\n \t* vmsdbg.h: Delete spurious close-comment.\n \t(DST_HEADER): Fix typo in ENUM_BITFIELD parameter.\n \t* vmsdbgout.c (write_modbeg): Define return type."}, {"sha": "2117e94fab6b719f7bd9e31e140436a6b2c6878a", "filename": "gcc/config/1750a/1750a.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2F1750a%2F1750a.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2F1750a%2F1750a.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.md?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -693,6 +693,8 @@\n        case 4:\n          istr = \\\"dv  \\\";\n          break;\n+       default:\n+         abort();\n       }\n       return mod_regno_adjust (istr, operands);\n      }\")"}, {"sha": "f6388bc3d40d2a52de11c3e91ffe0df597e27b56", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -148,6 +148,8 @@ Boston, MA 02111-1307, USA.  */\n \t\t\t     + get_frame_size ()\t\t\t\\\n \t\t\t     + current_function_pretend_args_size)\t\\\n \t\t- current_function_pretend_args_size);\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    abort();\t\t\t\t\t\t\t\t\\\n   if ((TO) == STACK_POINTER_REGNUM)\t\t\t\t\t\\\n     (OFFSET) += ALPHA_ROUND (current_function_outgoing_args_size);\t\\\n }"}, {"sha": "5e67f710e2972fc2fd2304cad2a4095d0033bf63", "filename": "gcc/config/dsp16xx/dsp16xx.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.c?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -1941,6 +1941,8 @@ print_operand_address(file, addr)\n \toffset = INTVAL(XEXP(addr,0)), base = XEXP(addr,1);\n       else if (GET_CODE (XEXP(addr,1)) == CONST_INT)\n \toffset = INTVAL(XEXP(addr,1)), base = XEXP(addr,0);\n+      else\n+\tabort();\n       if (GET_CODE (base) == REG && REGNO(base) == STACK_POINTER_REGNUM)\n \t{\n \t  if (offset >= -31 && offset <= 0)"}, {"sha": "812e9914a5448d5bf302fd463fe581885f3ac624", "filename": "gcc/config/i386/osf1elf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fi386%2Fosf1elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fi386%2Fosf1elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosf1elf.h?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -153,9 +153,9 @@ do\t\t\t\t\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n     if (!OSF_PROFILE_BEFORE_PROLOGUE)\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tchar *prefix = \"\";\t\t\t\\\n-\tchar *lprefix = LPREFIX;\t\t\t\t\t\\\n-\tint labelno = LABELNO;\t\t\t\t\t\\\n+\tconst char *const prefix = \"\";\t\t\t\t\t\\\n+\tconst char *const lprefix = LPREFIX;\t\t\t\t\\\n+\tint labelno = LABELNO;\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \t/* Note that OSF/rose blew it in terms of calling mcount,\t\\\n \t   since OSF/rose prepends a leading underscore, but mcount's\t\\"}, {"sha": "4f45575a55e05b931010b20891e82d9fcd3b0fe0", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -5057,14 +5057,18 @@\n   \"\"\n {\n   static const char * const alt[2][4] = {\n-    \"lfetch.nta [%0]\",\n-    \"lfetch.nt1 [%0]\",\n-    \"lfetch.nt2 [%0]\",\n-    \"lfetch [%0]\",\n-    \"lfetch.excl.nta [%0]\",\n-    \"lfetch.excl.nt1 [%0]\",\n-    \"lfetch.excl.nt2 [%0]\",\n-    \"lfetch.excl [%0]\"\n+    {\n+      \"lfetch.nta [%0]\",\n+      \"lfetch.nt1 [%0]\",\n+      \"lfetch.nt2 [%0]\",\n+      \"lfetch [%0]\"\n+    },\n+    {\n+      \"lfetch.excl.nta [%0]\",\n+      \"lfetch.excl.nt1 [%0]\",\n+      \"lfetch.excl.nt2 [%0]\",\n+      \"lfetch.excl [%0]\"\n+    }\n   };\n   int i = (INTVAL (operands[1]));\n   int j = (INTVAL (operands[2]));"}, {"sha": "5a86ab07f6ea38be47b4d0382445e607cbac70e7", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -70,6 +70,7 @@ extern int call_operand PARAMS ((rtx, enum machine_mode));\n extern int current_file_function_operand PARAMS ((rtx, enum machine_mode));\n extern int input_operand PARAMS ((rtx, enum machine_mode));\n extern int small_data_operand PARAMS ((rtx, enum machine_mode));\n+extern int s8bit_cint_operand PARAMS ((rtx, enum machine_mode));\n extern int constant_pool_expr_p PARAMS ((rtx));\n extern int toc_relative_expr_p PARAMS ((rtx));\n extern int expand_block_move PARAMS ((rtx[]));"}, {"sha": "e9fa7e41a1497640a6cfd4bc24a48e57b53eacad", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -395,6 +395,8 @@ while (0)\n   { (OFFSET) = s390_arg_frame_offset (); }     \t\t\t\t  \\\n   else if ((FROM) == ARG_POINTER_REGNUM && (TO) == STACK_POINTER_REGNUM)  \\\n   { (OFFSET) = s390_arg_frame_offset (); }     \t\t\t\t  \\\n+  else\t\t\t\t\t\t\t\t\t  \\\n+    abort();\t\t\t\t\t\t\t\t  \\\n }\n \n #define CAN_DEBUG_WITHOUT_FP"}, {"sha": "7ad9c55b63f131f465ccaf4354fa639088fdd650", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -1234,17 +1234,17 @@ enum reg_class\n    `hard-reg-set.h'.  */\n #define REG_CLASS_CONTENTS\t\t\t\\\n {\t\t\t\t\t\t\\\n-  0x00000,\t\t\t\t\t\\\n-  0x00001,\t\t\t\t\t\\\n-  0x00002,\t\t\t\t\t\\\n-  0x00003,\t\t\t\t\t\\\n-  0x00004,\t\t\t\t\t\\\n-  0x000FF,\t\t\t\t\t\\\n-  0x00100,\t\t\t\t\t\\\n-  0x00300,\t\t\t\t\t\\\n-  0x6FFFF,\t\t\t\t\t\\\n-  0x10000,\t\t\t\t\t\\\n-  (1 << FIRST_PSEUDO_REGISTER) - 1\t\t\\\n+  { 0x00000 },\t\t\t\t\t\\\n+  { 0x00001 },\t\t\t\t\t\\\n+  { 0x00002 },\t\t\t\t\t\\\n+  { 0x00003 },\t\t\t\t\t\\\n+  { 0x00004 },\t\t\t\t\t\\\n+  { 0x000FF },\t\t\t\t\t\\\n+  { 0x00100 },\t\t\t\t\t\\\n+  { 0x00300 },\t\t\t\t\t\\\n+  { 0x6FFFF },\t\t\t\t\t\\\n+  { 0x10000 },\t\t\t\t\t\\\n+  { (1 << FIRST_PSEUDO_REGISTER) - 1 }\t\t\\\n }\n \n /* A C expression whose value is a register class containing hard register"}, {"sha": "834ab52ce0a3d7f8305563e5f9c02e13fbccc107", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -1254,7 +1254,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define OUTPUT_ADDR_CONST_EXTRA(FILE, X, FAIL)\t\t\\\n   if (GET_CODE (x) == TRUNCATE)\t\t\t\t\\\n-    return output_addr_const (FILE, XEXP (X, 0));\t\\\n+    output_addr_const (FILE, XEXP (X, 0));\t\t\\\n   else\t\t\t\t\t\t\t\\\n     goto FAIL;\n "}, {"sha": "2ee877d3fb6d6a31ba6cf53227438345c904b3c6", "filename": "gcc/dbxout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -566,13 +566,13 @@ dbxout_source_file (file, filename)\n      FILE *file;\n      const char *filename;\n {\n-  char ltext_label_name[100];\n-\n   if (filename && (lastfile == 0 || strcmp (filename, lastfile)))\n     {\n #ifdef DBX_OUTPUT_SOURCE_FILENAME\n       DBX_OUTPUT_SOURCE_FILENAME (file, filename);\n #else\n+      char ltext_label_name[100];\n+\n       ASM_GENERATE_INTERNAL_LABEL (ltext_label_name, \"Ltext\",\n \t\t\t\t   source_label_number);\n       fprintf (file, \"%s\", ASM_STABS_OP);"}, {"sha": "fcaaf374f3522c42d112edb9079fa298995186bf", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -1600,7 +1600,7 @@ profile_after_prologue (file)\n \n static void\n profile_function (file)\n-     FILE *file;\n+     FILE *file ATTRIBUTE_UNUSED;\n {\n #ifndef NO_PROFILE_COUNTERS\n   int align = MIN (BIGGEST_ALIGNMENT, LONG_TYPE_SIZE);"}, {"sha": "712dd24e38bea0683e69bcd9d85c3d647afc2ff8", "filename": "gcc/genemit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -464,7 +464,7 @@ gen_expand (expand)\n   for (i = operands; i <= max_dup_opno; i++)\n     printf (\"  rtx operand%d;\\n\", i);\n   for (; i <= max_scratch_opno; i++)\n-    printf (\"  rtx operand%d;\\n\", i);\n+    printf (\"  rtx operand%d ATTRIBUTE_UNUSED;\\n\", i);\n   printf (\"  rtx _val = 0;\\n\");\n   printf (\"  start_sequence ();\\n\");\n "}, {"sha": "214df19d5734e2a2ba9fc2735b6c95f214e821a9", "filename": "gcc/insn-addr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Finsn-addr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3656137984c755671e79da32c66379c0a4d2425/gcc%2Finsn-addr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finsn-addr.h?ref=b3656137984c755671e79da32c66379c0a4d2425", "patch": "@@ -41,7 +41,7 @@ extern int insn_current_address;\n     if (INSN_ADDRESSES_SET_P ())\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tif (INSN_ADDRESSES_SIZE () <= insn_uid__)\t\t\t\\\n-\t  insn_addresses_ = VARRAY_GROW (insn_addresses_, insn_uid__ + 1); \\\n+\t  VARRAY_GROW (insn_addresses_, insn_uid__ + 1);\t\t\\\n \tINSN_ADDRESSES (insn_uid__) = insn_addr__;\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t\\"}]}