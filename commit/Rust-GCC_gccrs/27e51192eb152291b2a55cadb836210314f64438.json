{"sha": "27e51192eb152291b2a55cadb836210314f64438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlNTExOTJlYjE1MjI5MWIyYTU1Y2FkYjgzNjIxMDMxNGY2NDQzOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-11-29T00:04:48Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-11-29T00:04:48Z"}, "message": "opt-functions.awk (lang_enabled_by): Support || for enabled-by.\n\n2014-11-29  Tobias Burnus  <burnus@net-b.de>\n            Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\ngcc/\n        * opt-functions.awk (lang_enabled_by): Support || for\n        enabled-by.\n        * optc-gen.awk: Ditto.\n        * doc/options.texi (LangEnabledBy, EnabledBy): Document the\n        || syntax.\n\ngcc/fortran/\n        * lang.opt (Wtabs): Combine duplicated item into a single\n        one using || for LangEnabledBy.\n\n\nCo-Authored-By: Manuel L\u00f3pez-Ib\u00e1\u00f1ez <manu@gcc.gnu.org>\n\nFrom-SVN: r218175", "tree": {"sha": "817e0bd186b25372de8bb48878056440c3f75bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/817e0bd186b25372de8bb48878056440c3f75bfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27e51192eb152291b2a55cadb836210314f64438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e51192eb152291b2a55cadb836210314f64438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27e51192eb152291b2a55cadb836210314f64438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e51192eb152291b2a55cadb836210314f64438/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e5d3a2c07c230635986fce17f9ddeffcc2de44f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e5d3a2c07c230635986fce17f9ddeffcc2de44f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e5d3a2c07c230635986fce17f9ddeffcc2de44f"}], "stats": {"total": 116, "additions": 61, "deletions": 55}, "files": [{"sha": "6fdbadb2c11a7959d012b6834cd60954f0760b26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e51192eb152291b2a55cadb836210314f64438/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e51192eb152291b2a55cadb836210314f64438/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27e51192eb152291b2a55cadb836210314f64438", "patch": "@@ -1,3 +1,12 @@\n+2014-11-29  Tobias Burnus  <burnus@net-b.de>\n+\t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* opt-functions.awk (lang_enabled_by): Support || for\n+\tenabled-by.\n+\t* optc-gen.awk: Ditto.\n+\t* doc/options.texi (LangEnabledBy, EnabledBy): Document the\n+\t|| syntax.\n+\n 2014-11-28  Mike Stump  <mikestump@comcast.net>\n \n \t* bitmap.c (bitmap_ior): Zap current as it could be deleted."}, {"sha": "b9f7c6562091fb7dc8d96da5df69f2cd7332c86c", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e51192eb152291b2a55cadb836210314f64438/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e51192eb152291b2a55cadb836210314f64438/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=27e51192eb152291b2a55cadb836210314f64438", "patch": "@@ -372,13 +372,9 @@ C++ ObjC++ Var(warn_delete_incomplete) Init(1) Warning\n Warn when deleting a pointer to incomplete type\n \n Wdelete-non-virtual-dtor\n-C++ ObjC++ Var(warn_delnonvdtor) Warning LangEnabledBy(C++ ObjC++,Wall)\n+C++ ObjC++ Var(warn_delnonvdtor) Warning LangEnabledBy(C++ ObjC++,Wall || Weffc++)\n Warn about deleting polymorphic objects with non-virtual destructors\n \n-Wdelete-non-virtual-dtor\n-LangEnabledBy(C++ ObjC++,Weffc++)\n-;\n-\n Wdeprecated\n C C++ ObjC ObjC++ CPP(cpp_warn_deprecated) CppReason(CPP_W_DEPRECATED) Var(warn_deprecated) Init(1) Warning\n Warn if a deprecated compiler feature, class, method, or field is used\n@@ -408,13 +404,9 @@ C ObjC C++ ObjC++ CPP(warn_endif_labels) CppReason(CPP_W_ENDIF_LABELS) Var(cpp_w\n Warn about stray tokens after #elif and #endif\n \n Wenum-compare\n-C ObjC C++ ObjC++ Var(warn_enum_compare) Init(-1) Warning LangEnabledBy(C ObjC,Wall)\n+C ObjC C++ ObjC++ Var(warn_enum_compare) Init(-1) Warning LangEnabledBy(C ObjC,Wall || Wc++-compat)\n Warn about comparison of different enum types\n \n-Wenum-compare\n-LangEnabledBy(C ObjC,Wc++-compat)\n-;\n-\n Werror\n C ObjC C++ ObjC++\n ; Documented in common.opt\n@@ -614,13 +606,9 @@ C ObjC C++ ObjC++ CPP(warn_multichar) CppReason(CPP_W_MULTICHAR) Var(cpp_warn_mu\n Warn about use of multi-character character constants\n \n Wnarrowing\n-C ObjC C++ ObjC++ Warning Var(warn_narrowing) Init(-1) LangEnabledBy(C++ ObjC++,Wall)\n+C ObjC C++ ObjC++ Warning Var(warn_narrowing) Init(-1) LangEnabledBy(C++ ObjC++,Wall || Wc++0x-compat)\n Warn about narrowing conversions within { } that are ill-formed in C++11\n \n-Wnarrowing\n-C ObjC C++ ObjC++ LangEnabledBy(C++ ObjC++,Wc++0x-compat)\n-;\n-\n Wnested-externs\n C ObjC Var(warn_nested_externs) Warning\n Warn about \\\"extern\\\" declarations not at file scope\n@@ -721,13 +709,9 @@ C ObjC C++ ObjC++ Var(warn_pointer_arith) Warning LangEnabledBy(C ObjC C++ ObjC+\n Warn about function pointer arithmetic\n \n Wpointer-sign\n-C ObjC Var(warn_pointer_sign) Warning LangEnabledBy(C ObjC,Wall)\n+C ObjC Var(warn_pointer_sign) Warning LangEnabledBy(C ObjC,Wall || Wpedantic)\n Warn when a pointer differs in signedness in an assignment\n \n-Wpointer-sign\n-C ObjC LangEnabledBy(C ObjC,Wpedantic)\n-;\n-\n Wpointer-to-int-cast\n C ObjC Var(warn_pointer_to_int_cast) Init(1) Warning\n Warn when a pointer is cast to an integer of a different size\n@@ -877,13 +861,9 @@ C ObjC C++ ObjC++ Var(warn_unused_result) Init(1) Warning\n Warn if a caller of a function, marked with attribute warn_unused_result, does not use its return value\n \n Wvariadic-macros\n-C ObjC C++ ObjC++ CPP(warn_variadic_macros) CppReason(CPP_W_VARIADIC_MACROS) Var(cpp_warn_variadic_macros) Init(0) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic)\n+C ObjC C++ ObjC++ CPP(warn_variadic_macros) CppReason(CPP_W_VARIADIC_MACROS) Var(cpp_warn_variadic_macros) Init(0) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic || Wtraditional)\n Warn about using variadic macros\n \n-Wvariadic-macros\n-LangEnabledBy(C ObjC C++ ObjC++,Wtraditional)\n-;\n-\n Wvarargs\n C ObjC C++ ObjC++ Warning Var(warn_varargs) Init(1)\n Warn about questionable usage of the macros used to retrieve variable arguments"}, {"sha": "1ead0972134977720b6991d9f96ee9859f2734df", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e51192eb152291b2a55cadb836210314f64438/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e51192eb152291b2a55cadb836210314f64438/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=27e51192eb152291b2a55cadb836210314f64438", "patch": "@@ -459,15 +459,18 @@ value of @option{-fmath-errno} for languages that do not use\n @code{errno}.\n \n @item EnabledBy(@var{opt})\n+@itemx EnabledBy(@var{opt} || @var{opt2})\n @itemx EnabledBy(@var{opt} && @var{opt2})\n If not explicitly set, the option is set to the value of\n-@option{-@var{opt}}.  The second form specifies that the option is\n+@option{-@var{opt}}; multiple options can be given, separated by\n+@code{||}.  The third form using @code{&&} specifies that the option is\n only set if both @var{opt} and @var{opt2} are set.\n \n @item LangEnabledBy(@var{language}, @var{opt})\n @itemx LangEnabledBy(@var{language}, @var{opt}, @var{posarg}, @var{negarg})\n When compiling for the given language, the option is set to the value\n-of @option{-@var{opt}}, if not explicitly set. In the second form, if\n+of @option{-@var{opt}}, if not explicitly set. @var{opt} can be also a list\n+of @code{||} separated options. In the second form, if\n @var{opt} is used in the positive form then @var{posarg} is considered\n to be passed to the option, and if @var{opt} is used in the negative\n form then @var{negarg} is considered to be passed to the option.  It"}, {"sha": "a6e9035a29f3a015e9785fd99a96e1cc70233b3c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e51192eb152291b2a55cadb836210314f64438/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e51192eb152291b2a55cadb836210314f64438/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=27e51192eb152291b2a55cadb836210314f64438", "patch": "@@ -1,3 +1,9 @@\n+2014-11-29  Tobias Burnus  <burnus@net-b.de>\n+\t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* lang.opt (Wtabs): Combine duplicated item into a single\n+\tone using || for LangEnabledBy.\n+\n 2014-11-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* error.c (gfc_internal_error): Convert to common diagnostics."}, {"sha": "1d6cdde47a99c4661b7796accae0c26de0d1bdc6", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e51192eb152291b2a55cadb836210314f64438/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e51192eb152291b2a55cadb836210314f64438/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=27e51192eb152291b2a55cadb836210314f64438", "patch": "@@ -298,13 +298,9 @@ Fortran Warning\n Warn about \\\"suspicious\\\" constructs\n \n Wtabs\n-Fortran Warning Var(warn_tabs) LangEnabledBy(Fortran,Wall)\n+Fortran Warning Var(warn_tabs) LangEnabledBy(Fortran,Wall || Wpedantic)\n Permit nonconforming uses of the tab character\n \n-Wtabs\n-LangEnabledBy(Fortran,Wpedantic)\n-;\n-\n Wunderflow\n Fortran Warning\n Warn about underflow of numerical constant expressions"}, {"sha": "a83b4a83c9df5c011658488f3c15c13f5fcd829e", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e51192eb152291b2a55cadb836210314f64438/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e51192eb152291b2a55cadb836210314f64438/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=27e51192eb152291b2a55cadb836210314f64438", "patch": "@@ -319,29 +319,33 @@ function search_var_name(name, opt_numbers, opts, flags, n_opts)\n function lang_enabled_by(enabledby_langs, enabledby_name, enabledby_posarg, enabledby_negarg)\n {\n     n_enabledby_arg_langs = split(enabledby_langs, enabledby_arg_langs, \" \");\n-    enabledby_index = opt_numbers[enabledby_name];\n-    if (enabledby_index == \"\") {\n-        print \"#error LangEnabledby: \" enabledby_name \n+    if (enabledby_posarg != \"\" && enabledby_negarg != \"\") {\n+        with_args = \",\" enabledby_posarg \",\" enabledby_negarg\n+    } else if (enabledby_posarg == \"\" && enabledby_negarg == \"\") {\n+        with_args = \"\"\n     } else {\n-        if (enabledby_posarg != \"\" && enabledby_negarg != \"\") {\n-            with_args = \",\" enabledby_posarg \",\" enabledby_negarg\n-        } else if (enabledby_posarg == \"\" && enabledby_negarg == \"\") {\n-            with_args = \"\"\n+        print \"#error LangEnabledBy(\"enabledby_langs\",\"enabledby_name\", \" \\\n+            enabledby_posarg\", \" enabledby_negargs                  \\\n+            \") with three arguments, it should have either 2 or 4\"\n+    }\n+\n+    n_enabledby_array = split(enabledby_name, enabledby_array, \" \\\\|\\\\| \");\n+    for (k = 1; k <= n_enabledby_array; k++) {\n+        enabledby_index = opt_numbers[enabledby_array[k]];\n+        if (enabledby_index == \"\") {\n+             print \"#error LangEnabledBy(\"enabledby_langs\",\"enabledby_name\", \" \\\n+                 enabledby_posarg\", \" enabledby_negargs\") has invalid ENABLEDBY_NAME\"\n         } else {\n-            print \"#error LangEnabledBy(\"enabledby_langs\",\"enabledby_name\", \" \\\n-                enabledby_posarg\", \" enabledby_negargs                  \\\n-                \") with three arguments, it should have either 2 or 4\"\n-        }\n-        \n-        for (j = 1; j <= n_enabledby_arg_langs; j++) {\n-            lang_name = lang_sanitized_name(enabledby_arg_langs[j]);\n-            lang_index = lang_numbers[enabledby_arg_langs[j]];\n-            if (enables[lang_name,enabledby_name] == \"\") {\n-                enabledby[lang_name,n_enabledby_lang[lang_index]] = enabledby_name;\n-                n_enabledby_lang[lang_index]++;\n+            for (j = 1; j <= n_enabledby_arg_langs; j++) {\n+                 lang_name = lang_sanitized_name(enabledby_arg_langs[j]);\n+                 lang_index = lang_numbers[enabledby_arg_langs[j]];\n+                 if (enables[lang_name,enabledby_array[k]] == \"\") {\n+                     enabledby[lang_name,n_enabledby_lang[lang_index]] = enabledby_array[k];\n+                     n_enabledby_lang[lang_index]++;\n+                 }\n+                 enables[lang_name,enabledby_array[k]] \\\n+                     = enables[lang_name,enabledby_array[k]] opts[i] with_args \";\";\n             }\n-            enables[lang_name,enabledby_name] = enables[lang_name,enabledby_name] opts[i] with_args \";\";\n         }\n     }\n }\n-"}, {"sha": "8868510657f5756433c824d348c82f8ec416ac8b", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e51192eb152291b2a55cadb836210314f64438/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e51192eb152291b2a55cadb836210314f64438/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=27e51192eb152291b2a55cadb836210314f64438", "patch": "@@ -38,8 +38,16 @@ for (i = 0; i < n_langs; i++) {\n for (i = 0; i < n_opts; i++) {\n     enabledby_arg = opt_args(\"EnabledBy\", flags[i]);\n     if (enabledby_arg != \"\") {\n-        n_enabledby_names = split(enabledby_arg, enabledby_names, \" && \");\n-        if (n_enabledby_names > 2) {\n+        logical_and = index(enabledby_arg, \" && \");\n+        if (logical_and != 0) {\n+            # EnabledBy(arg1 && arg2)\n+            split_sep = \" && \";\n+        } else {\n+            # EnabledBy(arg) or EnabledBy(arg1 || arg2 || arg3)\n+            split_sep = \" \\\\|\\\\| \";\n+        }\n+        n_enabledby_names = split(enabledby_arg, enabledby_names, split_sep);\n+        if (logical_and != 0 && n_enabledby_names > 2) {\n             print \"#error EnabledBy (Wfoo && Wbar && Wbaz) not currently supported\"\n         }\n         for (j = 1; j <= n_enabledby_names; j++) {\n@@ -49,7 +57,7 @@ for (i = 0; i < n_opts; i++) {\n                 print \"#error Enabledby: \" enabledby_name \n             } else {\n                 condition = \"\";\n-                if (n_enabledby_names == 2) {\n+                if (logical_and != 0) {\n                     opt_var_name_1 = search_var_name(enabledby_names[1], opt_numbers, opts, flags, n_opts);\n                     opt_var_name_2 = search_var_name(enabledby_names[2], opt_numbers, opts, flags, n_opts);\n                     if (opt_var_name_1 == \"\") {"}]}