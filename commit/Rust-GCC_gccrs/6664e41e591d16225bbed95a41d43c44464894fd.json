{"sha": "6664e41e591d16225bbed95a41d43c44464894fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY2NGU0MWU1OTFkMTYyMjViYmVkOTVhNDFkNDNjNDQ0NjQ4OTRmZA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-10-31T09:33:25Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-10-31T09:33:25Z"}, "message": "Tune pointer-plus folding\n\n2015-10-31  Tom de Vries  <tom@codesourcery.com>\n\n\t* fold-const.c (fold_unary_loc): Tune POINTER_PLUS_EXPR folding.\n\n\t* gfortran.dg/assumed_type_2.f90: Update test.\n\t* gfortran.dg/no_arg_check_2.f90: Same.\n\nFrom-SVN: r229621", "tree": {"sha": "8d3d2131443e37af6aa9321e23fd5a717c4b411f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d3d2131443e37af6aa9321e23fd5a717c4b411f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6664e41e591d16225bbed95a41d43c44464894fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6664e41e591d16225bbed95a41d43c44464894fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6664e41e591d16225bbed95a41d43c44464894fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6664e41e591d16225bbed95a41d43c44464894fd/comments", "author": null, "committer": null, "parents": [{"sha": "82d2c2706f59e54c681bd3afecda93feb90d37cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d2c2706f59e54c681bd3afecda93feb90d37cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d2c2706f59e54c681bd3afecda93feb90d37cc"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "48cd3f80d43bf009e724c5fbdcd95acf4f80c360", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6664e41e591d16225bbed95a41d43c44464894fd", "patch": "@@ -1,3 +1,7 @@\n+2015-10-31  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* fold-const.c (fold_unary_loc): Tune POINTER_PLUS_EXPR folding.\n+\n 2015-10-31  Tom de Vries  <tom@codesourcery.com>\n \n \t* tree-ssa-structalias.c (intra_create_variable_infos): Don't expect"}, {"sha": "197ccfddddb2d2e34e63c11e313dd43bf5479129", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6664e41e591d16225bbed95a41d43c44464894fd", "patch": "@@ -7755,14 +7755,12 @@ fold_unary_loc (location_t loc, enum tree_code code, tree type, tree op0)\n \t    }\n \t}\n \n-      /* Convert (T1)(X p+ Y) into ((T1)X p+ Y), for pointer type,\n-         when one of the new casts will fold away. Conservatively we assume\n-\t that this happens when X or Y is NOP_EXPR or Y is INTEGER_CST. */\n+      /* Convert (T1)(X p+ Y) into ((T1)X p+ Y), for pointer type, when the new\n+\t cast (T1)X will fold away.  We assume that this happens when X itself\n+\t is a cast.  */\n       if (POINTER_TYPE_P (type)\n \t  && TREE_CODE (arg0) == POINTER_PLUS_EXPR\n-\t  && (TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST\n-\t      || TREE_CODE (TREE_OPERAND (arg0, 0)) == NOP_EXPR\n-\t      || TREE_CODE (TREE_OPERAND (arg0, 1)) == NOP_EXPR))\n+\t  && CONVERT_EXPR_P (TREE_OPERAND (arg0, 0)))\n \t{\n \t  tree arg00 = TREE_OPERAND (arg0, 0);\n \t  tree arg01 = TREE_OPERAND (arg0, 1);"}, {"sha": "85dff2ef2f7ee84ad85986084db691fc2497e7fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6664e41e591d16225bbed95a41d43c44464894fd", "patch": "@@ -1,3 +1,8 @@\n+2015-10-31  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* gfortran.dg/assumed_type_2.f90: Update test.\n+\t* gfortran.dg/no_arg_check_2.f90: Same.\n+\n 2015-10-30  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* gfortran.dg/gomp/intentin1.f90: Adjust copyprivate warning."}, {"sha": "f1a20747884436fae2c4ed88232ac47da31d993a", "filename": "gcc/testsuite/gfortran.dg/assumed_type_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_type_2.f90?ref=6664e41e591d16225bbed95a41d43c44464894fd", "patch": "@@ -155,7 +155,7 @@ end subroutine sub_array_assumed\n ! { dg-final { scan-tree-dump-times \"sub_scalar .&\\\\(.\\\\(struct t2.0:. . restrict\\\\) array_t2_alloc.data\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_scalar .&\\\\(.\\\\(struct t3.0:. .\\\\) array_t3_ptr.data\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_scalar .\\\\(struct t1 .\\\\) array_class_t1_alloc._data.data\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"sub_scalar .\\\\(struct t1 .\\\\) array_class_t1_ptr._data.dat\" 1 \"original\" } }a\n+! { dg-final { scan-tree-dump-times \"sub_scalar .\\\\(struct t1 .\\\\) \\\\(array_class_t1_ptr._data.dat\" 1 \"original\" } }\n \n ! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(D\" 3 \"original\" } }\n ! { dg-final { scan-tree-dump-times \" = _gfortran_internal_pack \\\\(&parm\" 1 \"original\" } }"}, {"sha": "b3fb4685efe61f70fb4014ea70859dcb877ff425", "filename": "gcc/testsuite/gfortran.dg/no_arg_check_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fno_arg_check_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6664e41e591d16225bbed95a41d43c44464894fd/gcc%2Ftestsuite%2Fgfortran.dg%2Fno_arg_check_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fno_arg_check_2.f90?ref=6664e41e591d16225bbed95a41d43c44464894fd", "patch": "@@ -137,7 +137,7 @@ end subroutine sub\n ! { dg-final { scan-tree-dump-times \"sub_scalar .&\\\\(.\\\\(struct t2.0:. . restrict\\\\) array_t2_alloc.data\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_scalar .&\\\\(.\\\\(struct t3.0:. .\\\\) array_t3_ptr.data\" 1 \"original\" } }\n ! { dg-final { scan-tree-dump-times \"sub_scalar .\\\\(struct t1 .\\\\) array_class_t1_alloc._data.data\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"sub_scalar .\\\\(struct t1 .\\\\) array_class_t1_ptr._data.dat\" 1 \"original\" } }a\n+! { dg-final { scan-tree-dump-times \"sub_scalar .\\\\(struct t1 .\\\\) \\\\(array_class_t1_ptr._data.dat\" 1 \"original\" } }\n \n ! { dg-final { scan-tree-dump-times \"sub_array_assumed \\\\(D\" 3 \"original\" } }\n ! { dg-final { scan-tree-dump-times \" = _gfortran_internal_pack \\\\(&parm\" 1 \"original\" } }"}]}