{"sha": "3c395ecf7d41384016acbcc18d4847c72685013c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzOTVlY2Y3ZDQxMzg0MDE2YWNiY2MxOGQ0ODQ3YzcyNjg1MDEzYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-07T15:09:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-07T15:09:29Z"}, "message": "re PR c++/48780 ([C++0x] scoped enumerations and va_arg (default argument promotions))\n\n\tPR c++/48780\n\t* typeck.c (perform_integral_promotions): Don't promote scoped enums.\n\t* call.c (convert_arg_to_ellipsis): Promote them here in old ABI.\n\nFrom-SVN: r174751", "tree": {"sha": "7b362ff7ad48bea5b1140d97d5790865a4121aeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b362ff7ad48bea5b1140d97d5790865a4121aeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c395ecf7d41384016acbcc18d4847c72685013c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c395ecf7d41384016acbcc18d4847c72685013c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c395ecf7d41384016acbcc18d4847c72685013c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c395ecf7d41384016acbcc18d4847c72685013c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c074d7402137a7aecd560091686f56add84c1353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c074d7402137a7aecd560091686f56add84c1353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c074d7402137a7aecd560091686f56add84c1353"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "ba3fd1a3f0c80b2f786165793ec0c6c47675f8b9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3c395ecf7d41384016acbcc18d4847c72685013c", "patch": "@@ -1,3 +1,9 @@\n+2011-06-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48780\n+\t* typeck.c (perform_integral_promotions): Don't promote scoped enums.\n+\t* call.c (convert_arg_to_ellipsis): Promote them here in old ABI.\n+\n 2011-06-06  Nicola Pero  <nicola.pero@meta-innovation.com>,\n \n \tPR obj-c++/48275"}, {"sha": "d955b63936ca812b4d6c86c3f6fa85a4ab96a916", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3c395ecf7d41384016acbcc18d4847c72685013c", "patch": "@@ -5896,7 +5896,15 @@ convert_arg_to_ellipsis (tree arg)\n   else if (NULLPTR_TYPE_P (arg_type))\n     arg = null_pointer_node;\n   else if (INTEGRAL_OR_ENUMERATION_TYPE_P (arg_type))\n-    arg = perform_integral_promotions (arg);\n+    {\n+      if (SCOPED_ENUM_P (arg_type) && !abi_version_at_least (6))\n+\t{\n+\t  warning (OPT_Wabi, \"scoped enum %qT will not promote to an \"\n+\t\t   \"integral type in a future version of GCC\", arg_type);\n+\t  arg = cp_convert (ENUM_UNDERLYING_TYPE (arg_type), arg);\n+\t}\n+      arg = perform_integral_promotions (arg);\n+    }\n \n   arg = require_complete_type (arg);\n   arg_type = TREE_TYPE (arg);"}, {"sha": "8a23d5199f67d9f0385f811567892af00cfb3552", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=3c395ecf7d41384016acbcc18d4847c72685013c", "patch": "@@ -1616,7 +1616,8 @@ type_promotes_to (tree type)\n   if (TREE_CODE (type) == BOOLEAN_TYPE)\n     type = integer_type_node;\n \n-  /* scoped enums don't promote.  */\n+  /* Scoped enums don't promote, but pretend they do for backward ABI bug\n+     compatibility wrt varargs.  */\n   else if (SCOPED_ENUM_P (type) && abi_version_at_least (6))\n     ;\n "}, {"sha": "8e4fd4213c30f658a47e440cfa04032c0328b086", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=3c395ecf7d41384016acbcc18d4847c72685013c", "patch": "@@ -1953,6 +1953,9 @@ perform_integral_promotions (tree expr)\n   if (!type || TREE_CODE (type) != ENUMERAL_TYPE)\n     type = TREE_TYPE (expr);\n   gcc_assert (INTEGRAL_OR_ENUMERATION_TYPE_P (type));\n+  /* Scoped enums don't promote.  */\n+  if (SCOPED_ENUM_P (type))\n+    return expr;\n   promoted_type = type_promotes_to (type);\n   if (type != promoted_type)\n     expr = cp_convert (promoted_type, expr);"}, {"sha": "b38cd1e677036fc13015e1f45743ef1bceb63135", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c395ecf7d41384016acbcc18d4847c72685013c", "patch": "@@ -1,3 +1,7 @@\n+2011-06-06  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/enum19.C: New.\n+\n 2011-06-07  Sergey Grechanik  <mouseentity@ispras.ru>\n \n \t* gcc.target/arm/neon-reload-class.c: New test."}, {"sha": "acdd86c0ba407bac3d65a18b9defe01f4661881b", "filename": "gcc/testsuite/g++.dg/cpp0x/enum19.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c395ecf7d41384016acbcc18d4847c72685013c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum19.C?ref=3c395ecf7d41384016acbcc18d4847c72685013c", "patch": "@@ -0,0 +1,12 @@\n+// We shouldn't give an ABI warning about promotion in switch.\n+// { dg-options \"-std=c++0x -fabi-version=5 -Wabi\" }\n+\n+enum class Foo { X };\n+void test(Foo val)\n+{\n+    switch(val)\n+    {\n+    case Foo::X:\n+        break;\n+    }\n+};"}]}