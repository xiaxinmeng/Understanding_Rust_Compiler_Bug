{"sha": "ed0d30514f77227b7d1d89c855f9791db102180e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQwZDMwNTE0Zjc3MjI3YjdkMWQ4OWM4NTVmOTc5MWRiMTAyMTgwZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-09-25T09:51:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-09-25T09:51:13Z"}, "message": "re PR bootstrap/58521 (bootstrap failure: ICE in mem_ref_in_stmt, at tree-ssa-loop-im.c:677)\n\n2013-09-25  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/58521\n\t* tree.c (iterative_hash_expr): Remove MEM_REF special handling.\n\nFrom-SVN: r202889", "tree": {"sha": "716270551e013694621d834f6f31a6abc0fc2e01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/716270551e013694621d834f6f31a6abc0fc2e01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed0d30514f77227b7d1d89c855f9791db102180e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0d30514f77227b7d1d89c855f9791db102180e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0d30514f77227b7d1d89c855f9791db102180e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0d30514f77227b7d1d89c855f9791db102180e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "123485ca222611b71c63f0f54777cceaf23883a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/123485ca222611b71c63f0f54777cceaf23883a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/123485ca222611b71c63f0f54777cceaf23883a3"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "fdca49515ef893a81c1cb7759d4cdb074173a4b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0d30514f77227b7d1d89c855f9791db102180e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0d30514f77227b7d1d89c855f9791db102180e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed0d30514f77227b7d1d89c855f9791db102180e", "patch": "@@ -1,3 +1,8 @@\n+2013-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/58521\n+\t* tree.c (iterative_hash_expr): Remove MEM_REF special handling.\n+\n 2013-09-25  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (cgraph_resolve_speculation): Use semantical equivalency"}, {"sha": "1c881e4a4ce724e359a6dcf0f08431f751e32672", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0d30514f77227b7d1d89c855f9791db102180e/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0d30514f77227b7d1d89c855f9791db102180e/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=ed0d30514f77227b7d1d89c855f9791db102180e", "patch": "@@ -7280,21 +7280,6 @@ iterative_hash_expr (const_tree t, hashval_t val)\n \t  }\n \treturn val;\n       }\n-    case MEM_REF:\n-      {\n-\t/* The type of the second operand is relevant, except for\n-\t   its top-level qualifiers.  */\n-\ttree type = TYPE_MAIN_VARIANT (TREE_TYPE (TREE_OPERAND (t, 1)));\n-\n-\tval = iterative_hash_object (TYPE_HASH (type), val);\n-\n-\t/* We could use the standard hash computation from this point\n-\t   on.  */\n-\tval = iterative_hash_object (code, val);\n-\tval = iterative_hash_expr (TREE_OPERAND (t, 1), val);\n-\tval = iterative_hash_expr (TREE_OPERAND (t, 0), val);\n-\treturn val;\n-      }\n     case FUNCTION_DECL:\n       /* When referring to a built-in FUNCTION_DECL, use the __builtin__ form.\n \t Otherwise nodes that compare equal according to operand_equal_p might"}]}