{"sha": "be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU4YWMzZTI0M2RkYTk0MzBlZTUzYTI0NWEzYzFlZTNhNmFjYmM3Yw==", "commit": {"author": {"name": "Grigory Zagorodnev", "email": "grigory_zagorodnev@linux.intel.com", "date": "2006-02-18T09:25:31Z"}, "committer": {"name": "Marcin Dalecki", "email": "dalecki@gcc.gnu.org", "date": "2006-02-18T09:25:31Z"}, "message": "cpp.texi (__TIMESTAMP__): Document.\n\n2006-02-17  Grigory Zagorodnev <grigory_zagorodnev@linux.intel.com>\n\ngcc/ChangeLog:\n     * doc/cpp.texi (__TIMESTAMP__): Document.\n\nlibcpp/ChangeLog:\n     * macro.c (_cpp_builtin_macro_text): Handle BT_TIMESTAMP.\n     * files.c (_cpp_get_file_stat): New function.\n     * include/cpplib.h (builtin_type): Add BT_TIMESTAMP.\n     * init.c (builtin_array): Add support for __TIMESTAMP__/BT_TIMESTAMP.\n     * internal.h (_cpp_get_file_stat): Prototype.\n     (struct cpp_buffer): Add timestamp.\n\ngcc/testsuite/ChangeLog:\n     * gcc.dg/cpp/undef3.c: New test.\n     * gcc.dg/cpp/trad/builtins2.c: New test.\n\nFrom-SVN: r111232", "tree": {"sha": "7042da2d52f0b0578ba88e4df4ca0cbceeee00ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7042da2d52f0b0578ba88e4df4ca0cbceeee00ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/comments", "author": null, "committer": null, "parents": [{"sha": "8d08b2d786e93fffe4c6802239b6808680785bc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d08b2d786e93fffe4c6802239b6808680785bc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d08b2d786e93fffe4c6802239b6808680785bc9"}], "stats": {"total": 83, "additions": 82, "deletions": 1}, "files": [{"sha": "0025c6c670ffb328ab35a98ec7a95da207a33319", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "patch": "@@ -1,3 +1,7 @@\n+2006-02-17  Grigory Zagorodnev <grigory_zagorodnev@linux.intel.com>\n+\n+\t* doc/cpp.texi (__TIMESTAMP__): Document.\n+\n 2006-02-17  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/25600"}, {"sha": "e69394298e6dba8b9baa94ecd0671e3dc7eea560", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "patch": "@@ -2128,6 +2128,17 @@ use.\n This macro is defined, with value 2, when @option{-fstack-protector-all} is\n in use.\n \n+@item __TIMESTAMP__\n+This macro expands to a string constant that describes the date and time\n+of the last modification of the current source file. The string constant\n+contains abbreviated day of the week, month, day of the month, time in\n+hh:mm:ss form, year and looks like @code{@w{\"Sun Sep 16 01:03:52 1973\"}}.\n+If the day of the month is less than 10, it is padded with a space on the left.\n+\n+If GCC cannot determine the current date, it will emit a warning message\n+(once per compilation) and @code{__TIMESTAMP__} will expand to\n+@code{@w{\"??? ??? ?? ??:??:?? ????\"}}.\n+\n @end table\n \n @node System-specific Predefined Macros"}, {"sha": "08b1d2dd72181383ade38b42b97c859f4b4c6cd9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "patch": "@@ -1,3 +1,8 @@\n+2006-02-17  Grigory Zagorodnev <grigory_zagorodnev@linux.intel.com>\n+\n+\t* gcc.dg/cpp/undef3.c: New test.\n+\t* gcc.dg/cpp/trad/builtins2.c: New test.\n+\n 2006-02-18  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/26266"}, {"sha": "3b42cc104a18f629110c93560455a6e7bca1eced", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "patch": "@@ -1,3 +1,12 @@\n+2006-02-17  Grigory Zagorodnev <grigory_zagorodnev@linux.intel.com>\n+\n+\t* macro.c (_cpp_builtin_macro_text): Handle BT_TIMESTAMP.\n+\t* files.c (_cpp_get_file_stat): New function.\n+\t* include/cpplib.h (builtin_type): Add BT_TIMESTAMP.\n+\t* init.c (builtin_array): Add support for __TIMESTAMP__/BT_TIMESTAMP.\n+\t* internal.h (_cpp_get_file_stat): Prototype.\n+\t(struct cpp_buffer): Add timestamp.\n+\n 2006-01-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR preprocessor/25717"}, {"sha": "833421805900c1bba0c77774c4787ab9b6a065f8", "filename": "libcpp/files.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "patch": "@@ -1147,6 +1147,13 @@ _cpp_pop_file_buffer (cpp_reader *pfile, _cpp_file *file)\n     }\n }\n \n+/* Inteface to file statistics record in _cpp_file structure. */\n+struct stat *\n+_cpp_get_file_stat (_cpp_file *file)\n+{\n+    return &file->st;\n+}\n+\n /* Set the include chain for \"\" to QUOTE, for <> to BRACKET.  If\n    QUOTE_IGNORES_SOURCE_DIR, then \"\" includes do not look in the\n    directory of the including file."}, {"sha": "2cea1f5afd2ef749974a450235d21ad6a3cb185e", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "patch": "@@ -555,7 +555,8 @@ enum builtin_type\n   BT_INCLUDE_LEVEL,\t\t/* `__INCLUDE_LEVEL__' */\n   BT_TIME,\t\t\t/* `__TIME__' */\n   BT_STDC,\t\t\t/* `__STDC__' */\n-  BT_PRAGMA\t\t\t/* `_Pragma' operator */\n+  BT_PRAGMA,\t\t\t/* `_Pragma' operator */\n+  BT_TIMESTAMP\t\t\t/* `__TIMESTAMP__' */\n };\n \n #define CPP_HASHNODE(HNODE)\t((cpp_hashnode *) (HNODE))"}, {"sha": "4330f884be72eceb17b908eaee0f46a516067c51", "filename": "libcpp/init.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "patch": "@@ -301,6 +301,7 @@ struct builtin\n #define B(n, t)    { DSC(n), t }\n static const struct builtin builtin_array[] =\n {\n+  B(\"__TIMESTAMP__\",\t BT_TIMESTAMP),\n   B(\"__TIME__\",\t\t BT_TIME),\n   B(\"__DATE__\",\t\t BT_DATE),\n   B(\"__FILE__\",\t\t BT_FILE),"}, {"sha": "857bfe1d8c586ddd15d7e558cdd0455853320372", "filename": "libcpp/internal.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Finternal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Finternal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finternal.h?ref=be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "patch": "@@ -264,6 +264,10 @@ struct cpp_buffer\n      Used for include_next and to record control macros.  */\n   struct _cpp_file *file;\n \n+  /* Saved value of __TIMESTAMP__ macro - date and time of last modification\n+     of the assotiated file.  */\n+  const unsigned char *timestamp;\n+\n   /* Value of if_stack at start of this file.\n      Used to prohibit unmatched #endif (etc) in an include file.  */\n   struct if_stack *if_stack;\n@@ -524,6 +528,7 @@ extern void _cpp_cleanup_files (cpp_reader *);\n extern void _cpp_pop_file_buffer (cpp_reader *, struct _cpp_file *);\n extern bool _cpp_save_file_entries (cpp_reader *pfile, FILE *f);\n extern bool _cpp_read_file_entries (cpp_reader *, FILE *);\n+extern struct stat *_cpp_get_file_stat (_cpp_file *);\n \n /* In expr.c */\n extern bool _cpp_parse_expr (cpp_reader *);"}, {"sha": "67e936ee31aec4e930e756e9d8bb105ef6cf2f28", "filename": "libcpp/macro.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=be8ac3e243dda9430ee53a245a3c1ee3a6acbc7c", "patch": "@@ -123,6 +123,44 @@ _cpp_builtin_macro_text (cpp_reader *pfile, cpp_hashnode *node)\n \t\t NODE_NAME (node));\n       break;\n \n+    case BT_TIMESTAMP:\n+      {\n+\tcpp_buffer *pbuffer = cpp_get_buffer (pfile);\n+\tif (pbuffer->timestamp == NULL)\n+\t  {\n+\t    /* Initialize timestamp value of the assotiated file. */\n+            struct _cpp_file *file = cpp_get_file (pbuffer);\n+\t    if (file)\n+\t      {\n+    \t\t/* Generate __TIMESTAMP__ string, that represents \n+\t\t   the date and time of the last modification \n+\t\t   of the current source file. The string constant \n+\t\t   looks like \"Sun Sep 16 01:03:52 1973\".  */\n+\t\tstruct tm *tb = NULL;\n+\t\tstruct stat *st = _cpp_get_file_stat (file);\n+\t\tif (st)\n+\t\t  tb = localtime (&st->st_mtime);\n+\t\tif (tb)\n+\t\t  {\n+\t\t    char *str = asctime (tb);\n+\t\t    size_t len = strlen (str);\n+\t\t    unsigned char *buf = _cpp_unaligned_alloc (pfile, len + 2);\n+\t\t    buf[0] = '\"';\n+\t\t    strcpy ((char *) buf + 1, str);\n+\t\t    buf[len] = '\"';\n+\t\t    pbuffer->timestamp = buf;\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    cpp_errno (pfile, CPP_DL_WARNING,\n+\t\t\t\"could not determine file timestamp\");\n+\t\t    pbuffer->timestamp = U\"\\\"??? ??? ?? ??:??:?? ????\\\"\";\n+\t\t  }\n+\t      }\n+\t  }\n+\tresult = pbuffer->timestamp;\n+      }\n+      break;\n     case BT_FILE:\n     case BT_BASE_FILE:\n       {"}]}