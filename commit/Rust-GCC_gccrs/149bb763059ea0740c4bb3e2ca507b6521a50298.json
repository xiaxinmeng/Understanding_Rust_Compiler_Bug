{"sha": "149bb763059ea0740c4bb3e2ca507b6521a50298", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ5YmI3NjMwNTllYTA3NDBjNGJiM2UyY2E1MDdiNjUyMWE1MDI5OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-01-13T00:49:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-01-13T00:49:57Z"}, "message": "* cccp.c (do_pragma): Add cast to (char *).\n\nFrom-SVN: r31371", "tree": {"sha": "fd2de48e6033d24bf451287c55860fb18a17e6bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd2de48e6033d24bf451287c55860fb18a17e6bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/149bb763059ea0740c4bb3e2ca507b6521a50298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/149bb763059ea0740c4bb3e2ca507b6521a50298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/149bb763059ea0740c4bb3e2ca507b6521a50298", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/149bb763059ea0740c4bb3e2ca507b6521a50298/comments", "author": null, "committer": null, "parents": [{"sha": "11950183bc5004ac79e488df60f8decce0edc84c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11950183bc5004ac79e488df60f8decce0edc84c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11950183bc5004ac79e488df60f8decce0edc84c"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "fe53b3383082e86eedf06dafdeea899929d09db2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/149bb763059ea0740c4bb3e2ca507b6521a50298/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/149bb763059ea0740c4bb3e2ca507b6521a50298/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=149bb763059ea0740c4bb3e2ca507b6521a50298", "patch": "@@ -1,3 +1,53 @@\n+2000-01-12  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* cccp.c (do_pragma): Add cast to (char *).\n+\n+2000-01-12  Richard Henderson  <rth@cygnus.com>\n+\t    Fred Fish  <fnf@be.com>\n+\t    Jason Merrill  <jason@cygnus.com>\n+\n+\t* configure.in (i?86-*-beos{pe,elf,}*): Recognize.\n+\t* i386/t-beos, i386/x-beos, i386/xm-beos.h: New files.\n+\t* i386/beos-elf.h, i386/beos-pe.h: New files.\n+\n+\t* Makefile.in (CROSS_SYSTEM_HEADER_DIR): New.\n+\t* cross-make (SYSTEM_HEADER_DIR): Define using\n+\tCROSS_SYSTEM_HEADER_DIR.\n+\n+\t* gcc.c (LIBRARY_PATH_ENV): Provide default.\n+\t(process_command): Use it.\n+\t(main): Likewise.  Kill trailing = from env vars.\n+\t(build_search_list): Put it back.\n+\t* collect2.c (main): Use LIBRARY_PATH_ENV.\n+\n+\t* configure.in (GCC_NEED_DECLARATIONS): Add environ.\n+\t* toplev.c: Use NEED_DECLARATION_ENVIRON.\n+\n+\t* tm.texi (Frame Layout): Document SMALL_STACK.\n+\t* c-common.c (c_common_nodes_and_builtins): Check it.\n+\n+\t* system.h: Undef alloca after including glibc's <stdlib.h>,\n+\tif USE_C_ALLOCA is defined.\n+\n+\t* gcc.c (set_input): New fn.\n+\t(main): After all input files are compiled, reset the input file\n+\tinfo to the first.\n+\n+\t* aclocal.m4 (rindex, index): If already defined, don't attempt\n+\tto redefine.\n+\n+\t* ginclude/varargs.h: (__va_list__): Define ifndef.\n+\t* ginclude/stdarg.h: Likewise.\n+\n+\t* ginclude/stddef.h (__WCHAR_TYPE__) [BEOS]: Use int \n+\tinstead of unsigned char.\n+\n+\t* hash.h (true, false, boolean): Undef before enum.\n+\n+\t* expmed.c (choose_multiplier): Cast &mhigh_lo and &mhigh_hi to be\n+\tproper type of \"HOST_WIDE_INT *\", rather than their natural type of\n+\t\"unsigned HOST_WIDE_INT *\".\n+\n 2000-01-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* svr3.h (ASM_FILE_START): Wrap if-clause in squigly brackets.\n@@ -531,7 +581,7 @@ Thu Jan  6 13:44:59 CET 2000  Jan Hubicka  <jh@suse.cz>\n \t(asm_emit_uninitialised): Invoke UNIQUE_SECTION if either\n \tflag_data_sections or UNIQUE_SECTION_P are true.\n \n-\t* tm.texi (UNIQUE)SECTION): Document that it can be called for\n+\t* tm.texi (UNIQUE_SECTION): Document that it can be called for\n \tunitialised data decls.\n \n \t* config/i386/winnt.c (i386_pe_unique_section): Cope with"}, {"sha": "c534164caaab0fbec86863030e3951151f2fce55", "filename": "gcc/cccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/149bb763059ea0740c4bb3e2ca507b6521a50298/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/149bb763059ea0740c4bb3e2ca507b6521a50298/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=149bb763059ea0740c4bb3e2ca507b6521a50298", "patch": "@@ -7211,7 +7211,7 @@ do_pragma (buf, limit, op, keyword)\n     do_once ();\n   }\n \n-  if (!strncmp (buf, \"poison\", 6)) {\n+  if (!strncmp ((char *) buf, \"poison\", 6)) {\n     /* Poison these symbols so that all subsequent usage produces an\n        error message.  */\n     U_CHAR *p = buf + 6;"}]}