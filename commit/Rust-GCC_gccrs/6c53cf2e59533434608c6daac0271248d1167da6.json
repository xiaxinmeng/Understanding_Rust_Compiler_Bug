{"sha": "6c53cf2e59533434608c6daac0271248d1167da6", "node_id": "C_kwDOANBUbNoAKDZjNTNjZjJlNTk1MzM0MzQ2MDhjNmRhYWMwMjcxMjQ4ZDExNjdkYTY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-03-29T08:04:53Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-05-05T12:51:51Z"}, "message": "profile: Unify identifier names for profiling\n\ngcc/ChangeLog:\n\n\t* tree-profile.cc (gimple_gen_ic_profiler): Prefix names with\n\tPROF_*.\n\t(gimple_gen_time_profiler): Likewise.", "tree": {"sha": "83f05d2be2e14d34128afd26d4b5e37d6c5dcace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83f05d2be2e14d34128afd26d4b5e37d6c5dcace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c53cf2e59533434608c6daac0271248d1167da6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c53cf2e59533434608c6daac0271248d1167da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c53cf2e59533434608c6daac0271248d1167da6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c53cf2e59533434608c6daac0271248d1167da6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b03970c423c1914d4fed9dfd56a1959c41626fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b03970c423c1914d4fed9dfd56a1959c41626fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b03970c423c1914d4fed9dfd56a1959c41626fb"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "97aab8801d0bc943d7512f08f23c76f270f4dae9", "filename": "gcc/tree-profile.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c53cf2e59533434608c6daac0271248d1167da6/gcc%2Ftree-profile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c53cf2e59533434608c6daac0271248d1167da6/gcc%2Ftree-profile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.cc?ref=6c53cf2e59533434608c6daac0271248d1167da6", "patch": "@@ -383,8 +383,8 @@ gimple_gen_ic_profiler (histogram_value value, unsigned tag)\n     Example:\n       f_1 = foo;\n       __gcov_indirect_call.counters = &__gcov4.main[0];\n-      PROF_9 = f_1;\n-      __gcov_indirect_call.callee = PROF_9;\n+      PROF_fn_9 = f_1;\n+      __gcov_indirect_call.callee = PROF_fn_9;\n       _4 = f_1 ();\n    */\n \n@@ -394,7 +394,7 @@ gimple_gen_ic_profiler (histogram_value value, unsigned tag)\n \t\t\t     ic_tuple_var, ic_tuple_counters_field, NULL_TREE);\n \n   stmt1 = gimple_build_assign (counter_ref, ref_ptr);\n-  tmp1 = make_temp_ssa_name (ptr_type_node, NULL, \"PROF\");\n+  tmp1 = make_temp_ssa_name (ptr_type_node, NULL, \"PROF_fn\");\n   stmt2 = gimple_build_assign (tmp1, unshare_expr (value->hvalue.value));\n   tree callee_ref = build3 (COMPONENT_REF, ptr_type_node,\n \t\t\t     ic_tuple_var, ic_tuple_callee_field, NULL_TREE);\n@@ -520,7 +520,7 @@ gimple_gen_time_profiler (unsigned tag)\n   if (flag_profile_update == PROFILE_UPDATE_ATOMIC)\n     {\n       tree ptr = make_temp_ssa_name (build_pointer_type (type), NULL,\n-\t\t\t\t     \"time_profiler_counter_ptr\");\n+\t\t\t\t     \"PROF_time_profiler_counter_ptr\");\n       tree addr = build1 (ADDR_EXPR, TREE_TYPE (ptr),\n \t\t\t  tree_time_profiler_counter);\n       gassign *assign = gimple_build_assign (ptr, NOP_EXPR, addr);\n@@ -532,10 +532,10 @@ gimple_gen_time_profiler (unsigned tag)\n \t\t\t\t       build_int_cst (integer_type_node,\n \t\t\t\t\t\t      MEMMODEL_RELAXED));\n       tree result_type = TREE_TYPE (TREE_TYPE (f));\n-      tree tmp = make_temp_ssa_name (result_type, NULL, \"time_profile\");\n+      tree tmp = make_temp_ssa_name (result_type, NULL, \"PROF_time_profile\");\n       gimple_set_lhs (stmt, tmp);\n       gsi_insert_after (&gsi, stmt, GSI_NEW_STMT);\n-      tmp = make_temp_ssa_name (type, NULL, \"time_profile\");\n+      tmp = make_temp_ssa_name (type, NULL, \"PROF_time_profile\");\n       assign = gimple_build_assign (tmp, NOP_EXPR,\n \t\t\t\t    gimple_call_lhs (stmt));\n       gsi_insert_after (&gsi, assign, GSI_NEW_STMT);\n@@ -544,11 +544,11 @@ gimple_gen_time_profiler (unsigned tag)\n     }\n   else\n     {\n-      tree tmp = make_temp_ssa_name (type, NULL, \"time_profile\");\n+      tree tmp = make_temp_ssa_name (type, NULL, \"PROF_time_profile\");\n       gassign *assign = gimple_build_assign (tmp, tree_time_profiler_counter);\n       gsi_insert_before (&gsi, assign, GSI_NEW_STMT);\n \n-      tmp = make_temp_ssa_name (type, NULL, \"time_profile\");\n+      tmp = make_temp_ssa_name (type, NULL, \"PROF_time_profile\");\n       assign = gimple_build_assign (tmp, PLUS_EXPR, gimple_assign_lhs (assign),\n \t\t\t\t    one);\n       gsi_insert_after (&gsi, assign, GSI_NEW_STMT);"}]}