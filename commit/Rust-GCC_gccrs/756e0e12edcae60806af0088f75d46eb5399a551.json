{"sha": "756e0e12edcae60806af0088f75d46eb5399a551", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU2ZTBlMTJlZGNhZTYwODA2YWYwMDg4Zjc1ZDQ2ZWI1Mzk5YTU1MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-22T21:40:29Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-22T21:40:29Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1058", "tree": {"sha": "04c07f30a35aad7f086db891c56bad93b1655bde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04c07f30a35aad7f086db891c56bad93b1655bde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/756e0e12edcae60806af0088f75d46eb5399a551", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756e0e12edcae60806af0088f75d46eb5399a551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/756e0e12edcae60806af0088f75d46eb5399a551", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/756e0e12edcae60806af0088f75d46eb5399a551/comments", "author": null, "committer": null, "parents": [{"sha": "4803a34aa2e83749b072d1b30106fd3dae5f1cf5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4803a34aa2e83749b072d1b30106fd3dae5f1cf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4803a34aa2e83749b072d1b30106fd3dae5f1cf5"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "2b5da07533c052b9cd2604917b1f7c5b194295fa", "filename": "gcc/calls.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/756e0e12edcae60806af0088f75d46eb5399a551/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/756e0e12edcae60806af0088f75d46eb5399a551/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=756e0e12edcae60806af0088f75d46eb5399a551", "patch": "@@ -1337,6 +1337,14 @@ expand_call (exp, target, ignore)\n #endif\n #endif\n \n+  /* If register arguments require space on the stack and stack space\n+     was not preallocated, allocate stack space here for arguments\n+     passed in registers.  */\n+#if ! defined(ALLOCATE_OUTGOING_ARGS) && defined(OUTGOING_REG_PARM_STACK_SPACE)\n+  if (must_preallocate == 0 && reg_parm_stack_space > 0)\n+    anti_adjust_stack (gen_rtx (CONST_INT, VOIDmode, reg_parm_stack_space));\n+#endif\n+\n   /* Pass the function the address in which to return a structure value.  */\n   if (structure_value_addr && ! structure_value_addr_parm)\n     {"}]}