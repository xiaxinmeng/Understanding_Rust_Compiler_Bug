{"sha": "5a54a15e30542c3cad550e08f3fd6cfcd4969e30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1NGExNWUzMDU0MmMzY2FkNTUwZTA4ZjNmZDZjZmNkNDk2OWUzMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-02-20T18:56:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-02-20T18:56:56Z"}, "message": "re PR middle-end/82123 (spurious -Wformat-overflow warning for converted vars)\n\n\tPR middle-end/82123\n\tPR tree-optimization/81592\n\tPR middle-end/79257\n\t* gimple-ssa-sprintf.c (get_int_range): Query EVRP range analyzer for\n\trange data rather than using global data.\n\nFrom-SVN: r257855", "tree": {"sha": "04b472ecb182f7cae6440dc3d16a604ae2eeb4a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04b472ecb182f7cae6440dc3d16a604ae2eeb4a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a54a15e30542c3cad550e08f3fd6cfcd4969e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a54a15e30542c3cad550e08f3fd6cfcd4969e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a54a15e30542c3cad550e08f3fd6cfcd4969e30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a54a15e30542c3cad550e08f3fd6cfcd4969e30/comments", "author": null, "committer": null, "parents": [{"sha": "bbe2e114efdfec46d0e1ce08f53c0931987fd01f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbe2e114efdfec46d0e1ce08f53c0931987fd01f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbe2e114efdfec46d0e1ce08f53c0931987fd01f"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "161c9aa50519da9043bc4f037dad34f0653e0d11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a54a15e30542c3cad550e08f3fd6cfcd4969e30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a54a15e30542c3cad550e08f3fd6cfcd4969e30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a54a15e30542c3cad550e08f3fd6cfcd4969e30", "patch": "@@ -3,6 +3,8 @@\n \tPR middle-end/82123\n \tPR tree-optimization/81592\n \tPR middle-end/79257\n+\t* gimple-ssa-sprintf.c (get_int_range): Query EVRP range analyzer for\n+\trange data rather than using global data.\n \t* gimple-ssa-sprintf.c (get_int_range): Accept vr_values parameter\n \tpass it to children as needed.\n \t(struct directive::fmtresult): Similarly."}, {"sha": "b3ffaec3ba62e272a7db85aa2a7dc321e87bb072", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a54a15e30542c3cad550e08f3fd6cfcd4969e30/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a54a15e30542c3cad550e08f3fd6cfcd4969e30/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=5a54a15e30542c3cad550e08f3fd6cfcd4969e30", "patch": "@@ -1149,9 +1149,10 @@ get_int_range (tree arg, HOST_WIDE_INT *pmin, HOST_WIDE_INT *pmax,\n \t  && TYPE_PRECISION (argtype) <= TYPE_PRECISION (type))\n \t{\n \t  /* Try to determine the range of values of the integer argument.  */\n-\t  wide_int min, max;\n-\t  enum value_range_type range_type = get_range_info (arg, &min, &max);\n-\t  if (range_type == VR_RANGE)\n+\t  value_range *vr = vr_values->get_value_range (arg);\n+\t  if (vr->type == VR_RANGE\n+\t      && TREE_CODE (vr->min) == INTEGER_CST\n+\t      && TREE_CODE (vr->max) == INTEGER_CST)\n \t    {\n \t      HOST_WIDE_INT type_min\n \t\t= (TYPE_UNSIGNED (argtype)\n@@ -1160,8 +1161,8 @@ get_int_range (tree arg, HOST_WIDE_INT *pmin, HOST_WIDE_INT *pmax,\n \n \t      HOST_WIDE_INT type_max = tree_to_uhwi (TYPE_MAX_VALUE (argtype));\n \n-\t      *pmin = min.to_shwi ();\n-\t      *pmax = max.to_shwi ();\n+\t      *pmin = TREE_INT_CST_LOW (vr->min);\n+\t      *pmax = TREE_INT_CST_LOW (vr->max);\n \n \t      if (*pmin < *pmax)\n \t\t{"}]}