{"sha": "60ae6360d70362b707910df8cf83b29f1e2a7041", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBhZTYzNjBkNzAzNjJiNzA3OTEwZGY4Y2Y4M2IyOWYxZTJhNzA0MQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-09-25T00:03:17Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-09-25T00:03:17Z"}, "message": "trouble.texi: Remove obsolete information.\n\n\t* doc/trouble.texi: Remove obsolete information.  Update\n\tinformation on how to regenerate fixincluded headers.\n\nFrom-SVN: r88082", "tree": {"sha": "fba65c1514f8679b6424b221b1e6163fdb798800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fba65c1514f8679b6424b221b1e6163fdb798800"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60ae6360d70362b707910df8cf83b29f1e2a7041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ae6360d70362b707910df8cf83b29f1e2a7041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60ae6360d70362b707910df8cf83b29f1e2a7041", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ae6360d70362b707910df8cf83b29f1e2a7041/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b99cfc227383ee5b6e26b37a9b3787187ebeb7e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b99cfc227383ee5b6e26b37a9b3787187ebeb7e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b99cfc227383ee5b6e26b37a9b3787187ebeb7e7"}], "stats": {"total": 194, "additions": 14, "deletions": 180}, "files": [{"sha": "f967b7b3d95059d464b6b5175108123fe8abf571", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ae6360d70362b707910df8cf83b29f1e2a7041/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ae6360d70362b707910df8cf83b29f1e2a7041/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60ae6360d70362b707910df8cf83b29f1e2a7041", "patch": "@@ -1,3 +1,8 @@\n+2004-09-25  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* doc/trouble.texi: Remove obsolete information.  Update\n+\tinformation on how to regenerate fixincluded headers.\n+\n 2004-09-25  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/12951"}, {"sha": "e20604117e084900d564fdf301f6988a28ba98d4", "filename": "gcc/doc/trouble.texi", "status": "modified", "additions": 9, "deletions": 180, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ae6360d70362b707910df8cf83b29f1e2a7041/gcc%2Fdoc%2Ftrouble.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ae6360d70362b707910df8cf83b29f1e2a7041/gcc%2Fdoc%2Ftrouble.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftrouble.texi?ref=60ae6360d70362b707910df8cf83b29f1e2a7041", "patch": "@@ -22,7 +22,6 @@ where people's opinions differ as to what is best.\n * Cross-Compiler Problems::   Common problems of cross compiling with GCC.\n * Interoperation::      Problems using GCC with other compilers,\n \t\t\t   and with certain linkers, assemblers and debuggers.\n-* External Bugs::\tProblems compiling certain programs.\n * Incompatibilities::   GCC is incompatible with traditional C.\n * Fixed Headers::       GCC uses corrected versions of system header files.\n                            This is necessary, but doesn't always work smoothly.\n@@ -52,12 +51,6 @@ The @code{fixproto} script will sometimes add prototypes for the\n @code{jmp_buf} type before that type is defined.  To work around this,\n edit the offending file and place the typedef in front of the\n prototypes.\n-\n-@item\n-@opindex pedantic-errors\n-When @option{-pedantic-errors} is specified, GCC will incorrectly give\n-an error message when a function name is specified in an expression\n-involving the comma operator.\n @end itemize\n \n @node Cross-Compiler Problems\n@@ -67,29 +60,6 @@ You may run into problems with cross compilation on certain machines,\n for several reasons.\n \n @itemize @bullet\n-@item\n-Cross compilation can run into trouble for certain machines because\n-some target machines' assemblers require floating point numbers to be\n-written as @emph{integer} constants in certain contexts.\n-\n-The compiler writes these integer constants by examining the floating\n-point value as an integer and printing that integer, because this is\n-simple to write and independent of the details of the floating point\n-representation.  But this does not work if the compiler is running on\n-a different machine with an incompatible floating point format, or\n-even a different byte-ordering.\n-\n-In addition, correct constant folding of floating point values\n-requires representing them in the target machine's format.\n-(The C standard does not quite require this, but in practice\n-it is the only way to win.)\n-\n-It is now possible to overcome these problems by defining macros such\n-as @code{REAL_VALUE_TYPE}.  But doing so is a substantial amount of\n-work for each target machine.\n-@xref{Cross-compilation,,Cross Compilation and Floating Point,\n-gccint, GNU Compiler Collection (GCC) Internals}.\n-\n @item\n At present, the program @file{mips-tfile} which adds debug\n support to object files on MIPS systems does not work in a cross\n@@ -120,42 +90,11 @@ provided from other compilers---but the programs would then crash when\n run.  Incompatible libraries are then detected at link time, rather than\n at run time.\n \n-@item\n-Older GDB versions sometimes fail to read the output of GCC version\n-2.  If you have trouble, get GDB version 4.4 or later.\n-\n-@item\n-@cindex DBX\n-DBX rejects some files produced by GCC, though it accepts similar\n-constructs in output from PCC@.  Until someone can supply a coherent\n-description of what is valid DBX input and what is not, there is\n-nothing that can be done about these problems.\n-\n-@item\n-The GNU assembler (GAS) does not support PIC@.  To generate PIC code, you\n-must use some other assembler, such as @file{/bin/as}.\n-\n @item\n On some BSD systems, including some versions of Ultrix, use of profiling\n causes static variable destructors (currently used only in C++) not to\n be run.\n \n-@ignore\n-@cindex @code{vfork}, for the Sun-4\n-@item\n-There is a bug in @code{vfork} on the Sun-4 which causes the registers\n-of the child process to clobber those of the parent.  Because of this,\n-programs that call @code{vfork} are likely to lose when compiled\n-optimized with GCC when the child code alters registers which contain\n-C variables in the parent.  This affects variables which are live in the\n-parent across the call to @code{vfork}.\n-\n-If you encounter this, you can work around the problem by declaring\n-variables @code{volatile} in the function that calls @code{vfork}, until\n-the problem goes away, or by not declaring them @code{register} and not\n-using @option{-O} for those source files.\n-@end ignore\n-\n @item\n On some SGI systems, when you use @option{-lgl_s} as an option,\n it gets translated magically to @samp{-lgl_s -lX11_s -lc_s}.\n@@ -210,32 +149,6 @@ The solution is to not use the @file{libmalloc.a} library.  Use instead\n @code{malloc} and related functions from @file{libc.a}; they do not have\n this problem.\n \n-@item\n-Sun forgot to include a static version of @file{libdl.a} with some\n-versions of SunOS (mainly 4.1).  This results in undefined symbols when\n-linking static binaries (that is, if you use @option{-static}).  If you\n-see undefined symbols @code{_dlclose}, @code{_dlsym} or @code{_dlopen}\n-when linking, compile and link against the file\n-@file{mit/util/misc/dlsym.c} from the MIT version of X windows.\n-\n-@item\n-The 128-bit long double format that the SPARC port supports currently\n-works by using the architecturally defined quad-word floating point\n-instructions.  Since there is no hardware that supports these\n-instructions they must be emulated by the operating system.  Long\n-doubles do not work in Sun OS versions 4.0.3 and earlier, because the\n-kernel emulator uses an obsolete and incompatible format.  Long doubles\n-do not work in Sun OS version 4.1.1 due to a problem in a Sun library.\n-Long doubles do work on Sun OS versions 4.1.2 and higher, but GCC\n-does not enable them by default.  Long doubles appear to work in Sun OS\n-5.x (Solaris 2.x).\n-\n-@item\n-On HP-UX version 9.01 on the HP PA, the HP compiler @code{cc} does not\n-compile GCC correctly.  We do not yet know why.  However, GCC\n-compiled on earlier HP-UX versions works properly on HP-UX 9.01 and can\n-compile itself properly on 9.01.\n-\n @item\n On the HP PA machine, ADB sometimes fails to work on functions compiled\n with GCC@.  Specifically, it fails to work on functions that use\n@@ -275,23 +188,6 @@ the form:\n \n These warnings are harmless and can be safely ignored.\n \n-@item\n-On the IBM RS/6000, compiling code of the form\n-\n-@smallexample\n-extern int foo;\n-\n-@dots{} foo @dots{}\n-\n-static int foo;\n-@end smallexample\n-\n-@noindent\n-will cause the linker to report an undefined symbol @code{foo}.\n-Although this behavior differs from most other systems, it is not a\n-bug because redefining an @code{extern} variable as @code{static}\n-is undefined in ISO C@.\n-\n @item\n In extremely rare cases involving some very large functions you may\n receive errors from the AIX Assembler complaining about a displacement\n@@ -352,58 +248,6 @@ these options to produce code compatible with the Fortran compiler:\n @smallexample\n -fcall-saved-r2 -fcall-saved-r3 -fcall-saved-r4 -fcall-saved-r5\n @end smallexample\n-\n-@item\n-On the Alpha, you may get assembler errors about invalid syntax as a\n-result of floating point constants.  This is due to a bug in the C\n-library functions @code{ecvt}, @code{fcvt} and @code{gcvt}.  Given valid\n-floating point numbers, they sometimes print @samp{NaN}.\n-@end itemize\n-\n-@node External Bugs\n-@section Problems Compiling Certain Programs\n-\n-@c prevent bad page break with this line\n-Certain programs have problems compiling.\n-\n-@itemize @bullet\n-@item\n-Parse errors may occur compiling X11 on a Decstation running Ultrix 4.2\n-because of problems in DEC's versions of the X11 header files\n-@file{X11/Xlib.h} and @file{X11/Xutil.h}.  People recommend adding\n-@option{-I/usr/include/mit} to use the MIT versions of the header files,\n-or fixing the header files by adding this:\n-\n-@smallexample\n-#ifdef __STDC__\n-#define NeedFunctionPrototypes 0\n-#endif\n-@end smallexample\n-\n-@item\n-On various 386 Unix systems derived from System V, including SCO, ISC,\n-and ESIX, you may get error messages about running out of virtual memory\n-while compiling certain programs.\n-\n-You can prevent this problem by linking GCC with the GNU malloc\n-(which thus replaces the malloc that comes with the system).  GNU malloc\n-is available as a separate package, and also in the file\n-@file{src/gmalloc.c} in the GNU Emacs 19 distribution.\n-\n-If you have installed GNU malloc as a separate library package, use this\n-option when you relink GCC:\n-\n-@smallexample\n-MALLOC=/usr/local/lib/libgmalloc.a\n-@end smallexample\n-\n-Alternatively, if you have compiled @file{gmalloc.c} from Emacs 19, copy\n-the object file to @file{gmalloc.o} and use this option when you relink\n-GCC:\n-\n-@smallexample\n-MALLOC=gmalloc.o\n-@end smallexample\n @end itemize\n \n @node Incompatibilities\n@@ -662,44 +506,31 @@ incompatible with ISO C, and some depend on special features of other\n compilers.\n \n Installing GCC automatically creates and installs the fixed header\n-files, by running a program called @code{fixincludes} (or for certain\n-targets an alternative such as @code{fixinc.svr4}).  Normally, you\n+files, by running a program called @code{fixincludes}.  Normally, you\n don't need to pay attention to this.  But there are cases where it\n doesn't do the right thing automatically.\n \n @itemize @bullet\n @item\n If you update the system's header files, such as by installing a new\n system version, the fixed header files of GCC are not automatically\n-updated.  The easiest way to update them is to reinstall GCC@.  (If\n-you want to be clever, look in the makefile and you can find a\n-shortcut.)\n+updated.  They can be updated using the @command{mkheaders} script\n+installed in\n+@file{@var{libexecdir}/gcc/@var{target}/@var{version}/install-tools/}.\n \n @item\n-On some systems, in particular SunOS 4, header file directories contain\n+On some systems, header file directories contain\n machine-specific symbolic links in certain places.  This makes it\n possible to share most of the header files among hosts running the\n-same version of SunOS 4 on different machine models.\n+same version of the system on different machine models.\n \n The programs that fix the header files do not understand this special\n way of using symbolic links; therefore, the directory of fixed header\n files is good only for the machine model used to build it.\n \n-In SunOS 4, only programs that look inside the kernel will notice the\n-difference between machine models.  Therefore, for most purposes, you\n-need not be concerned about this.\n-\n It is possible to make separate sets of fixed header files for the\n different machine models, and arrange a structure of symbolic links so\n as to use the proper set, but you'll have to do this by hand.\n-\n-@item\n-On Lynxos, GCC by default does not fix the header files.  This is\n-because bugs in the shell cause the @code{fixincludes} script to fail.\n-\n-This means you will encounter problems due to bugs in the system header\n-files.  It may be no comfort that they aren't GCC's fault, but it\n-does mean that there's nothing for us to do about them.\n @end itemize\n \n @node Standard Libraries\n@@ -796,11 +627,9 @@ scripts adapt to various systems by searching all the system header\n files for the problem cases that we know about.\n \n If new system header files are installed, nothing automatically arranges\n-to update the corrected header files.  You will have to reinstall GCC\n-to fix the new header files.  More specifically, go to the build\n-directory and delete the files @file{stmp-fixinc} and\n-@file{stmp-headers}, and the subdirectory @code{include}; then do\n-@samp{make install} again.\n+to update the corrected header files.  They can be updated using the\n+@command{mkheaders} script installed in\n+@file{@var{libexecdir}/gcc/@var{target}/@var{version}/install-tools/}.\n \n @item\n @cindex floating point precision"}]}