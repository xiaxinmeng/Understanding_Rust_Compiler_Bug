{"sha": "e1691d7e604001acf559885a0db261eaef0dc5d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE2OTFkN2U2MDQwMDFhY2Y1NTk4ODVhMGRiMjYxZWFlZjBkYzVkOA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2017-04-25T13:28:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:28:14Z"}, "message": "sem_util.adb, [...] (From_Nested_Package): New predicate to determine whether a type is declared in a local package that...\n\n2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb, sem_util.ads (From_Nested_Package): New predicate\n\tto determine whether a type is declared in a local package that\n\thas not yet been frozen.\n\t* freeze.adb (Freeze_Before): Use new predicate to determine\n\twhether a local package must be installed on the scope stack\n\tin order to evaluate in the proper scope actions generated by\n\taspect specifications, such as Predicate\n\t* sem_ch13.adb: Simplify code in Analyze_Aspects_At_Freeze_Point\n\tusing new predicate.\n\nFrom-SVN: r247229", "tree": {"sha": "d24645f3ab59ca8707c75802915e62f8e2bd9d25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d24645f3ab59ca8707c75802915e62f8e2bd9d25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1691d7e604001acf559885a0db261eaef0dc5d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1691d7e604001acf559885a0db261eaef0dc5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1691d7e604001acf559885a0db261eaef0dc5d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1691d7e604001acf559885a0db261eaef0dc5d8/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57f6e00c4611b78a71d060e6a5a10ac95ec0f8fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f6e00c4611b78a71d060e6a5a10ac95ec0f8fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f6e00c4611b78a71d060e6a5a10ac95ec0f8fd"}], "stats": {"total": 61, "additions": 54, "deletions": 7}, "files": [{"sha": "6badf78f33772e63a4959f6cccace6a40559524e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e1691d7e604001acf559885a0db261eaef0dc5d8", "patch": "@@ -1,3 +1,15 @@\n+2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb, sem_util.ads (From_Nested_Package): New predicate\n+\tto determine whether a type is declared in a local package that\n+\thas not yet been frozen.\n+\t* freeze.adb (Freeze_Before): Use new predicate to determine\n+\twhether a local package must be installed on the scope stack\n+\tin order to evaluate in the proper scope actions generated by\n+\taspect specifications, such as Predicate\n+\t* sem_ch13.adb: Simplify code in Analyze_Aspects_At_Freeze_Point\n+\tusing new predicate.\n+\n 2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_warn.adb (Warn_On_Constant_Valid_Condition): Do not consider"}, {"sha": "5afdc6666e2951bf040ab4db8e5fb6fb79aa6612", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=e1691d7e604001acf559885a0db261eaef0dc5d8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2108,14 +2108,31 @@ package body Freeze is\n \n       Freeze_Nodes : constant List_Id :=\n                        Freeze_Entity (T, N, Do_Freeze_Profile);\n+      Pack         : constant Entity_Id := Scope (T);\n \n    begin\n       if Ekind (T) = E_Function then\n          Check_Expression_Function (N, T);\n       end if;\n \n       if Is_Non_Empty_List (Freeze_Nodes) then\n-         Insert_Actions (N, Freeze_Nodes);\n+\n+         --  If the entity is a type declared in an inner package, it may be\n+         --  frozen by an outer declaration before the package itself is\n+         --  frozen. Install the package scope to analyze the freeze nodes,\n+         --  which may include generated subprograms such as predicate\n+         --  functions, etc.\n+\n+         if Is_Type (T) and then From_Nested_Package (T) then\n+            Push_Scope (Pack);\n+            Install_Visible_Declarations (Pack);\n+            Install_Private_Declarations (Pack);\n+            Insert_Actions (N, Freeze_Nodes);\n+            End_Package_Scope (Pack);\n+\n+         else\n+            Insert_Actions (N, Freeze_Nodes);\n+         end if;\n       end if;\n    end Freeze_Before;\n "}, {"sha": "c80ca5c00bf84b040ebc6487bf5c8252347d4b67", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=e1691d7e604001acf559885a0db261eaef0dc5d8", "patch": "@@ -1188,10 +1188,7 @@ package body Sem_Ch13 is\n       --  itself is frozen the type will have been frozen as well.\n \n       if not Scope_Within_Or_Same (Current_Scope, Scope (E)) then\n-         if Is_Type (E)\n-           and then Ekind (Scope (E)) = E_Package\n-           and then not Is_Frozen (Scope (E))\n-         then\n+         if Is_Type (E) and then From_Nested_Package (E) then\n             declare\n                Pack : constant Entity_Id := Scope (E);\n \n@@ -1208,6 +1205,7 @@ package body Sem_Ch13 is\n                end if;\n \n                End_Package_Scope (Pack);\n+               return;\n             end;\n \n          else"}, {"sha": "d2cdf5520b290ff9ca4fad2c5e7496acbdb68a6f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e1691d7e604001acf559885a0db261eaef0dc5d8", "patch": "@@ -7575,6 +7575,19 @@ package body Sem_Util is\n       return Res (Res'First .. Res_Index - 1);\n    end Fix_Msg;\n \n+   -------------------------\n+   -- From_Nested_Package --\n+   -------------------------\n+\n+   function From_Nested_Package (T : Entity_Id) return Boolean is\n+      Pack : constant Entity_Id := Scope (T);\n+   begin\n+      return Ekind (Pack) = E_Package\n+        and then not Is_Frozen (Pack)\n+        and then not Scope_Within_Or_Same (Current_Scope, Pack)\n+        and then In_Open_Scopes (Scope (Pack));\n+   end From_Nested_Package;\n+\n    -----------------------\n    -- Gather_Components --\n    -----------------------"}, {"sha": "e494f14bc849a97cdebaba763388762318d4372c", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1691d7e604001acf559885a0db261eaef0dc5d8/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=e1691d7e604001acf559885a0db261eaef0dc5d8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -819,6 +819,13 @@ package Sem_Util is\n    --      - \"task\" when Id is a single task object, task type or task body\n    --  All other non-matching words remain as is\n \n+   function From_Nested_Package (T : Entity_Id) return Boolean;\n+   --  A type declared in a nested package may be frozen by a declaration\n+   --  appearing after the package but before the package is frozen. If the\n+   --  type has aspects that generate subprograms, these may contain references\n+   --  to entities local to the nested package. In that case the package must\n+   --  be installed on the scope stack to prevent spurious visibility errors.\n+\n    procedure Gather_Components\n      (Typ           : Entity_Id;\n       Comp_List     : Node_Id;"}]}