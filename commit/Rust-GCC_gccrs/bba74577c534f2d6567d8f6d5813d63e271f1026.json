{"sha": "bba74577c534f2d6567d8f6d5813d63e271f1026", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJhNzQ1NzdjNTM0ZjJkNjU2N2Q4ZjZkNTgxM2Q2M2UyNzFmMTAyNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-05-05T19:44:55Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-05-05T19:44:55Z"}, "message": "* decl.c (maybe_pad_type): Add ??? comment.\n\nFrom-SVN: r134953", "tree": {"sha": "57dcad53dac8fae566e8f3a996b0c2641c92d6ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57dcad53dac8fae566e8f3a996b0c2641c92d6ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bba74577c534f2d6567d8f6d5813d63e271f1026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bba74577c534f2d6567d8f6d5813d63e271f1026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bba74577c534f2d6567d8f6d5813d63e271f1026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bba74577c534f2d6567d8f6d5813d63e271f1026/comments", "author": null, "committer": null, "parents": [{"sha": "2368848178cfe3eb1391285b57c2950aeac22507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2368848178cfe3eb1391285b57c2950aeac22507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2368848178cfe3eb1391285b57c2950aeac22507"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "ae31fb49963287479bbe74bb4847eefcd60a52b4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba74577c534f2d6567d8f6d5813d63e271f1026/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba74577c534f2d6567d8f6d5813d63e271f1026/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bba74577c534f2d6567d8f6d5813d63e271f1026", "patch": "@@ -1,3 +1,7 @@\n+2008-05-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl.c (maybe_pad_type): Add ??? comment.\n+\n 2008-05-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* decl.c (components_to_record): Zero the alignment of the qualified"}, {"sha": "6e144927ef8bbfc71ac4c93c0d01546ac7f8c3f7", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bba74577c534f2d6567d8f6d5813d63e271f1026/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bba74577c534f2d6567d8f6d5813d63e271f1026/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=bba74577c534f2d6567d8f6d5813d63e271f1026", "patch": "@@ -5671,7 +5671,13 @@ maybe_pad_type (tree type, tree size, unsigned int align,\n      integral mode, which will be much more efficient.  There is no point\n      in doing so if a size is specified unless it is also a small constant\n      size and it is incorrect to do so if we cannot guarantee that the mode\n-     will be naturally aligned since the field must always be addressable.  */\n+     will be naturally aligned since the field must always be addressable.\n+\n+     ??? This might not always be a win when done for a stand-alone object:\n+     since the nominal and the effective type of the object will now have\n+     different modes, a VIEW_CONVERT_EXPR will be required for converting\n+     between them and it might be hard to overcome afterwards, including\n+     at the RTL level when the stand-alone object is accessed as a whole.  */\n   if (align != 0\n       && TREE_CODE (type) == RECORD_TYPE\n       && TYPE_MODE (type) == BLKmode"}]}