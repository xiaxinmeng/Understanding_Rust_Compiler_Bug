{"sha": "c53265937acc1bc646f5c70ec45676217d07f533", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUzMjY1OTM3YWNjMWJjNjQ2ZjVjNzBlYzQ1Njc2MjE3ZDA3ZjUzMw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2009-07-10T09:09:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-10T09:09:59Z"}, "message": "sem_prag.adb (Analyze pragma, [...]): Analyze argument of pragma, to capture global references if the context is generic.\n\n2009-07-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Analyze pragma, case Task_Name): Analyze argument of\n\tpragma, to capture global references if the context is generic.\n\n\t* exp_ch2.adb (Expand_Discriminant): If a task type discriminant\n\tappears within the initialization procedure for the corresponding\n\trecord, replace it with the proper discriminal.\n\nFrom-SVN: r149459", "tree": {"sha": "b0c1ad066b60cf2b06a334ed1befc1564b740d90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0c1ad066b60cf2b06a334ed1befc1564b740d90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c53265937acc1bc646f5c70ec45676217d07f533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53265937acc1bc646f5c70ec45676217d07f533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c53265937acc1bc646f5c70ec45676217d07f533", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c53265937acc1bc646f5c70ec45676217d07f533/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "156f545a1bf194040a24f5e54e1ec5ac4eff642f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156f545a1bf194040a24f5e54e1ec5ac4eff642f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/156f545a1bf194040a24f5e54e1ec5ac4eff642f"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "47b17487b29cc70c67423b5894378d8b51b2c335", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53265937acc1bc646f5c70ec45676217d07f533/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53265937acc1bc646f5c70ec45676217d07f533/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=c53265937acc1bc646f5c70ec45676217d07f533", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -308,6 +308,17 @@ package body Exp_Ch2 is\n            and then In_Entry\n          then\n             Set_Entity (N, CR_Discriminant (Entity (N)));\n+\n+            --  Finally, if the entity is the discriminant of the original\n+            --  type declaration, and we are within the initialization\n+            --  procedure for a task, the designated entity is the\n+            --  discriminal of the task body. This can happen when the\n+            --  argument of pragma Task_Name mentions a discriminant,\n+            --  because the pragma is analyzed in the task declaration\n+            --  but is expanded in the call to Create_Task in the init_proc.\n+\n+         elsif Within_Init_Proc then\n+            Set_Entity (N, Discriminal (CR_Discriminant (Entity (N))));\n          else\n             Set_Entity (N, Discriminal (Entity (N)));\n          end if;"}, {"sha": "a9ef7d1281fe4921dc2b036270d08ef14f593fdb", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c53265937acc1bc646f5c70ec45676217d07f533/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c53265937acc1bc646f5c70ec45676217d07f533/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c53265937acc1bc646f5c70ec45676217d07f533", "patch": "@@ -11248,9 +11248,11 @@ package body Sem_Prag is\n             Arg := Expression (Arg1);\n \n             --  The expression is used in the call to Create_Task, and must be\n-            --  expanded there, not in the context of the current spec.\n+            --  expanded there, not in the context of the current spec. It must\n+            --  however be analyzed to capture global references, in case it\n+            --  appears in a generic context.\n \n-            Preanalyze_And_Resolve (New_Copy_Tree (Arg), Standard_String);\n+            Preanalyze_And_Resolve (Arg, Standard_String);\n \n             if Nkind (P) /= N_Task_Definition then\n                Pragma_Misplaced;"}]}