{"sha": "601f64e2e91c232210796cce3bc12a2e19a36ff2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAxZjY0ZTJlOTFjMjMyMjEwNzk2Y2NlM2JjMTJhMmUxOWEzNmZmMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-09-07T11:28:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-09-07T11:28:39Z"}, "message": "re PR tree-optimization/50213 (Regression in space-optimized code relative to 4.5.x)\n\n2011-09-07  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/50213\n\t* tree-flow.h (simple_iv_increment_p): Declare.\n\t* tree-ssa-dom.c (simple_iv_increment_p): Export.  Also handle\n\tPOINTER_PLUS_EXPR.\n\t* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine): Do\n\tnot propagate simple IV counter increments.\n\nFrom-SVN: r178633", "tree": {"sha": "c6bedca9793378da04071c4b6c255b9f6de8eec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6bedca9793378da04071c4b6c255b9f6de8eec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/601f64e2e91c232210796cce3bc12a2e19a36ff2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601f64e2e91c232210796cce3bc12a2e19a36ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/601f64e2e91c232210796cce3bc12a2e19a36ff2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601f64e2e91c232210796cce3bc12a2e19a36ff2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1aeee5ad50a46b9104eb9430054ff1d76dd5fe42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aeee5ad50a46b9104eb9430054ff1d76dd5fe42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aeee5ad50a46b9104eb9430054ff1d76dd5fe42"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "224e1a551b856a43f9f724fa36a12a619d8fad98", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601f64e2e91c232210796cce3bc12a2e19a36ff2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601f64e2e91c232210796cce3bc12a2e19a36ff2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=601f64e2e91c232210796cce3bc12a2e19a36ff2", "patch": "@@ -1,3 +1,12 @@\n+2011-09-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/50213\n+\t* tree-flow.h (simple_iv_increment_p): Declare.\n+\t* tree-ssa-dom.c (simple_iv_increment_p): Export.  Also handle\n+\tPOINTER_PLUS_EXPR.\n+\t* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine): Do\n+\tnot propagate simple IV counter increments.\n+\n 2011-09-07  Eric Botcazou  <ebotcazou@adacore.com>\n \t    Iain Sandoe  <iains@gcc.gnu.org>\n "}, {"sha": "d4bf54cbe693e4e46fa22c694c2f886d11fc0678", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601f64e2e91c232210796cce3bc12a2e19a36ff2/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601f64e2e91c232210796cce3bc12a2e19a36ff2/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=601f64e2e91c232210796cce3bc12a2e19a36ff2", "patch": "@@ -597,6 +597,7 @@ extern void dump_dominator_optimization_stats (FILE *);\n extern void debug_dominator_optimization_stats (void);\n int loop_depth_of_name (tree);\n tree degenerate_phi_result (gimple);\n+bool simple_iv_increment_p (gimple);\n \n /* In tree-ssa-copy.c  */\n extern void propagate_value (use_operand_p, tree);"}, {"sha": "18923aede7bf1ebb4cde64cd5d668d27b62d7896", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601f64e2e91c232210796cce3bc12a2e19a36ff2/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601f64e2e91c232210796cce3bc12a2e19a36ff2/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=601f64e2e91c232210796cce3bc12a2e19a36ff2", "patch": "@@ -1409,9 +1409,10 @@ record_equality (tree x, tree y)\n    i_1 = phi (..., i_2)\n    i_2 = i_1 +/- ...  */\n \n-static bool\n+bool\n simple_iv_increment_p (gimple stmt)\n {\n+  enum tree_code code;\n   tree lhs, preinc;\n   gimple phi;\n   size_t i;\n@@ -1423,12 +1424,13 @@ simple_iv_increment_p (gimple stmt)\n   if (TREE_CODE (lhs) != SSA_NAME)\n     return false;\n \n-  if (gimple_assign_rhs_code (stmt) != PLUS_EXPR\n-      && gimple_assign_rhs_code (stmt) != MINUS_EXPR)\n+  code = gimple_assign_rhs_code (stmt);\n+  if (code != PLUS_EXPR\n+      && code != MINUS_EXPR\n+      && code != POINTER_PLUS_EXPR)\n     return false;\n \n   preinc = gimple_assign_rhs1 (stmt);\n-\n   if (TREE_CODE (preinc) != SSA_NAME)\n     return false;\n "}, {"sha": "ae37095d88e5df3ab38935f2d4dd4f05fca09638", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601f64e2e91c232210796cce3bc12a2e19a36ff2/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601f64e2e91c232210796cce3bc12a2e19a36ff2/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=601f64e2e91c232210796cce3bc12a2e19a36ff2", "patch": "@@ -2377,21 +2377,23 @@ ssa_forward_propagate_and_combine (void)\n \t      else\n \t\tgsi_next (&gsi);\n \t    }\n-\t  else if (code == POINTER_PLUS_EXPR && can_propagate_from (stmt))\n+\t  else if (code == POINTER_PLUS_EXPR)\n \t    {\n-\t      if (TREE_CODE (gimple_assign_rhs2 (stmt)) == INTEGER_CST\n+\t      tree off = gimple_assign_rhs2 (stmt);\n+\t      if (TREE_CODE (off) == INTEGER_CST\n+\t\t  && can_propagate_from (stmt)\n+\t\t  && !simple_iv_increment_p (stmt)\n \t\t  /* ???  Better adjust the interface to that function\n \t\t     instead of building new trees here.  */\n \t\t  && forward_propagate_addr_expr\n-\t\t  (lhs,\n-\t\t   build1 (ADDR_EXPR,\n-\t\t\t   TREE_TYPE (rhs),\n-\t\t\t   fold_build2 (MEM_REF,\n-\t\t\t\t\tTREE_TYPE (TREE_TYPE (rhs)),\n-\t\t\t\t\trhs,\n-\t\t\t\t\tfold_convert\n-\t\t\t\t\t(ptr_type_node,\n-\t\t\t\t\t gimple_assign_rhs2 (stmt))))))\n+\t\t       (lhs,\n+\t\t\tbuild1_loc (gimple_location (stmt),\n+\t\t\t\t    ADDR_EXPR, TREE_TYPE (rhs),\n+\t\t\t\t    fold_build2 (MEM_REF,\n+\t\t\t\t\t\t TREE_TYPE (TREE_TYPE (rhs)),\n+\t\t\t\t\t\t rhs,\n+\t\t\t\t\t\t fold_convert (ptr_type_node,\n+\t\t\t\t\t\t\t       off)))))\n \t\t{\n \t\t  release_defs (stmt);\n \t\t  todoflags |= TODO_remove_unused_locals;"}]}