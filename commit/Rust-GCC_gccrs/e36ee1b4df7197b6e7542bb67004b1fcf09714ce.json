{"sha": "e36ee1b4df7197b6e7542bb67004b1fcf09714ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM2ZWUxYjRkZjcxOTdiNmU3NTQyYmI2NzAwNGIxZmNmMDk3MTRjZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-12-22T15:34:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-03T09:28:21Z"}, "message": "[Ada] Spurious warning on postcondition and result\n\ngcc/ada/\n\n\t* sem_util.adb (Check_Result_And_Post_State): Replace custom\n\tHas_In_Out_Parameter with existing Has_Out_Or_In_Out_Parameter\n\tflag which corresponds exactly to what we need.", "tree": {"sha": "4c718af3c6d41b3f01b1797de8590f864d76cef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c718af3c6d41b3f01b1797de8590f864d76cef5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e36ee1b4df7197b6e7542bb67004b1fcf09714ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e36ee1b4df7197b6e7542bb67004b1fcf09714ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e36ee1b4df7197b6e7542bb67004b1fcf09714ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e36ee1b4df7197b6e7542bb67004b1fcf09714ce/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1668564fdefee11a2f455766f310baf8d5b2e1af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1668564fdefee11a2f455766f310baf8d5b2e1af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1668564fdefee11a2f455766f310baf8d5b2e1af"}], "stats": {"total": 30, "additions": 2, "deletions": 28}, "files": [{"sha": "c4fe191211fe578eb8b0532ba227470f4e7d700e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 28, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e36ee1b4df7197b6e7542bb67004b1fcf09714ce/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e36ee1b4df7197b6e7542bb67004b1fcf09714ce/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=e36ee1b4df7197b6e7542bb67004b1fcf09714ce", "patch": "@@ -4701,10 +4701,6 @@ package body Sem_Util is\n       --  and post-state. Prag is a [refined] postcondition or a contract-cases\n       --  pragma. Result_Seen is set when the pragma mentions attribute 'Result\n \n-      function Has_In_Out_Parameter (Subp_Id : Entity_Id) return Boolean;\n-      --  Determine whether subprogram Subp_Id contains at least one IN OUT\n-      --  formal parameter.\n-\n       -------------------------------------------\n       -- Check_Result_And_Post_State_In_Pragma --\n       -------------------------------------------\n@@ -5093,28 +5089,6 @@ package body Sem_Util is\n          end if;\n       end Check_Result_And_Post_State_In_Pragma;\n \n-      --------------------------\n-      -- Has_In_Out_Parameter --\n-      --------------------------\n-\n-      function Has_In_Out_Parameter (Subp_Id : Entity_Id) return Boolean is\n-         Formal : Entity_Id;\n-\n-      begin\n-         --  Traverse the formals looking for an IN OUT parameter\n-\n-         Formal := First_Formal (Subp_Id);\n-         while Present (Formal) loop\n-            if Ekind (Formal) = E_In_Out_Parameter then\n-               return True;\n-            end if;\n-\n-            Next_Formal (Formal);\n-         end loop;\n-\n-         return False;\n-      end Has_In_Out_Parameter;\n-\n       --  Local variables\n \n       Items        : constant Node_Id := Contract (Subp_Id);\n@@ -5194,10 +5168,10 @@ package body Sem_Util is\n          null;\n \n       --  Regardless of whether the function has postconditions or contract\n-      --  cases, or whether they mention attribute 'Result, an IN OUT formal\n+      --  cases, or whether they mention attribute 'Result, an [IN] OUT formal\n       --  parameter is always treated as a result.\n \n-      elsif Has_In_Out_Parameter (Spec_Id) then\n+      elsif Has_Out_Or_In_Out_Parameter (Spec_Id) then\n          null;\n \n       --  The function has both a postcondition and contract cases and they do"}]}