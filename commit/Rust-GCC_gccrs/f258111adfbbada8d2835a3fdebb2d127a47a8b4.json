{"sha": "f258111adfbbada8d2835a3fdebb2d127a47a8b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI1ODExMWFkZmJiYWRhOGQyODM1YTNmZGViYjJkMTI3YTQ3YThiNA==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2015-02-19T23:47:58Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2015-02-19T23:47:58Z"}, "message": "pa.c (pa_reloc_rw_mask): New function.\n\n\t* config/pa/pa.c (pa_reloc_rw_mask): New function.\n\t(TARGET_ASM_RELOC_RW_MASK): Define.\n\t(pa_cannot_force_const_mem): Revert previous change.\n\nFrom-SVN: r220827", "tree": {"sha": "0aea18675d4b1f41831714ca939846fe1ced1e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aea18675d4b1f41831714ca939846fe1ced1e96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f258111adfbbada8d2835a3fdebb2d127a47a8b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f258111adfbbada8d2835a3fdebb2d127a47a8b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f258111adfbbada8d2835a3fdebb2d127a47a8b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f258111adfbbada8d2835a3fdebb2d127a47a8b4/comments", "author": null, "committer": null, "parents": [{"sha": "81d43c6bb892b782435460279012b1ef5494ef2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81d43c6bb892b782435460279012b1ef5494ef2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81d43c6bb892b782435460279012b1ef5494ef2d"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "691a319eedaa881fece1ba54d34a296e71efe68e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f258111adfbbada8d2835a3fdebb2d127a47a8b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f258111adfbbada8d2835a3fdebb2d127a47a8b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f258111adfbbada8d2835a3fdebb2d127a47a8b4", "patch": "@@ -1,3 +1,9 @@\n+2015-02-19  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/pa.c (pa_reloc_rw_mask): New function.\n+\t(TARGET_ASM_RELOC_RW_MASK): Define.\n+\t(pa_cannot_force_const_mem): Revert previous change.\n+\n 2015-02-19  Martin Jambor  <mjmabor@suse.cz>\n \t    Jan Hubicka  <hubicka@ucw.cz>\n "}, {"sha": "ecb17242ae151ca38e99406e5c9aad5a1c7e9796", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f258111adfbbada8d2835a3fdebb2d127a47a8b4/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f258111adfbbada8d2835a3fdebb2d127a47a8b4/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=f258111adfbbada8d2835a3fdebb2d127a47a8b4", "patch": "@@ -149,6 +149,7 @@ static void pa_output_function_epilogue (FILE *, HOST_WIDE_INT);\n static int pa_adjust_cost (rtx_insn *, rtx, rtx_insn *, int);\n static int pa_adjust_priority (rtx_insn *, int);\n static int pa_issue_rate (void);\n+static int pa_reloc_rw_mask (void);\n static void pa_som_asm_init_sections (void) ATTRIBUTE_UNUSED;\n static section *pa_som_tm_clone_table_section (void) ATTRIBUTE_UNUSED;\n static section *pa_select_section (tree, int, unsigned HOST_WIDE_INT)\n@@ -324,6 +325,9 @@ static size_t n_deferred_plabels = 0;\n #define TARGET_ASM_FILE_END output_deferred_plabels\n #endif\n \n+#undef TARGET_ASM_RELOC_RW_MASK\n+#define TARGET_ASM_RELOC_RW_MASK pa_reloc_rw_mask\n+\n #undef TARGET_PRINT_OPERAND_PUNCT_VALID_P\n #define TARGET_PRINT_OPERAND_PUNCT_VALID_P pa_print_operand_punct_valid_p\n \n@@ -1569,14 +1573,6 @@ force_mode (machine_mode mode, rtx orig)\n static bool\n pa_cannot_force_const_mem (machine_mode mode ATTRIBUTE_UNUSED, rtx x)\n {\n-  /* Reload sometimes tries to put const data symbolic operands in\n-     readonly memory.  The HP SOM linker doesn't allow symbolic data\n-     in readonly memory.  */\n-  if (TARGET_SOM\n-      && !function_label_operand (x, VOIDmode)\n-      && symbolic_operand (x, VOIDmode))\n-    return true;\n-\n   return tls_referenced_p (x);\n }\n \n@@ -9707,6 +9703,19 @@ pa_select_section (tree exp, int reloc,\n     return data_section;\n }\n \n+/* Implement pa_reloc_rw_mask.  */\n+\n+static int\n+pa_reloc_rw_mask (void)\n+{\n+  /* We force (const (plus (symbol) (const_int))) to memory when the\n+     const_int doesn't fit in a 14-bit integer.  The SOM linker can't\n+     handle this construct in read-only memory and we want to avoid\n+     this for ELF.  So, we always force an RTX needing relocation to\n+     the data section.  */\n+  return 3;\n+}\n+\n static void\n pa_globalize_label (FILE *stream, const char *name)\n {"}]}