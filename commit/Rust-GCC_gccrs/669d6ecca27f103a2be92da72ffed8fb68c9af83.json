{"sha": "669d6ecca27f103a2be92da72ffed8fb68c9af83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY5ZDZlY2NhMjdmMTAzYTJiZTkyZGE3MmZmZWQ4ZmI2OGM5YWY4Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2004-07-22T19:01:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-07-22T19:01:03Z"}, "message": "integrate.c (copy_decl_for_inlining): Remove invisible reference handling.\n\n        * integrate.c (copy_decl_for_inlining): Remove invisible reference\n        handling.\n        * tree-inline.c (setup_one_parameter): Likewise.\n\nFrom-SVN: r85057", "tree": {"sha": "ece1ab0e3a1a4989820f68049386494c0435fc3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ece1ab0e3a1a4989820f68049386494c0435fc3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/669d6ecca27f103a2be92da72ffed8fb68c9af83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/669d6ecca27f103a2be92da72ffed8fb68c9af83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/669d6ecca27f103a2be92da72ffed8fb68c9af83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/669d6ecca27f103a2be92da72ffed8fb68c9af83/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92976927ec5d544e7273a0dd9d68e7874939c1db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92976927ec5d544e7273a0dd9d68e7874939c1db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92976927ec5d544e7273a0dd9d68e7874939c1db"}], "stats": {"total": 52, "additions": 11, "deletions": 41}, "files": [{"sha": "12aac93f7bac362fa8a382aea3fa1cc789abce5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/669d6ecca27f103a2be92da72ffed8fb68c9af83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/669d6ecca27f103a2be92da72ffed8fb68c9af83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=669d6ecca27f103a2be92da72ffed8fb68c9af83", "patch": "@@ -1,3 +1,9 @@\n+2004-07-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* integrate.c (copy_decl_for_inlining): Remove invisible reference\n+\thandling.\n+\t* tree-inline.c (setup_one_parameter): Likewise.\n+\n 2004-07-22  Brian Booth  <bbooth@redhat.com>\n \n \t* tree-ssa-ccp.c (latticevalue): Add UNKNOWN_VAL."}, {"sha": "2fa5164bec55cfe906ae0e9c6c4143b47fb9db8d", "filename": "gcc/integrate.c", "status": "modified", "additions": 4, "deletions": 26, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/669d6ecca27f103a2be92da72ffed8fb68c9af83/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/669d6ecca27f103a2be92da72ffed8fb68c9af83/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=669d6ecca27f103a2be92da72ffed8fb68c9af83", "patch": "@@ -116,36 +116,14 @@ copy_decl_for_inlining (tree decl, tree from_fn, tree to_fn)\n   /* Copy the declaration.  */\n   if (TREE_CODE (decl) == PARM_DECL || TREE_CODE (decl) == RESULT_DECL)\n     {\n-      tree type;\n-      int invisiref = 0;\n-\n-      /* See if the frontend wants to pass this by invisible reference.  */\n-      if (TREE_CODE (decl) == PARM_DECL\n-\t  && DECL_ARG_TYPE (decl) != TREE_TYPE (decl)\n-\t  && POINTER_TYPE_P (DECL_ARG_TYPE (decl))\n-\t  && TREE_TYPE (DECL_ARG_TYPE (decl)) == TREE_TYPE (decl))\n-\t{\n-\t  invisiref = 1;\n-\t  type = DECL_ARG_TYPE (decl);\n-\t}\n-      else\n-\ttype = TREE_TYPE (decl);\n+      tree type = TREE_TYPE (decl);\n \n       /* For a parameter or result, we must make an equivalent VAR_DECL, not a\n \t new PARM_DECL.  */\n       copy = build_decl (VAR_DECL, DECL_NAME (decl), type);\n-      if (!invisiref)\n-\t{\n-\t  TREE_ADDRESSABLE (copy) = TREE_ADDRESSABLE (decl);\n-\t  TREE_READONLY (copy) = TREE_READONLY (decl);\n-\t  TREE_THIS_VOLATILE (copy) = TREE_THIS_VOLATILE (decl);\n-\t}\n-      else\n-\t{\n-\t  TREE_ADDRESSABLE (copy) = 0;\n-\t  TREE_READONLY (copy) = 1;\n-\t  TREE_THIS_VOLATILE (copy) = 0;\n-\t}\n+      TREE_ADDRESSABLE (copy) = TREE_ADDRESSABLE (decl);\n+      TREE_READONLY (copy) = TREE_READONLY (decl);\n+      TREE_THIS_VOLATILE (copy) = TREE_THIS_VOLATILE (decl);\n     }\n   else\n     {"}, {"sha": "6412ce0306d27e3de8cd75e89419e892d1ecf339", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/669d6ecca27f103a2be92da72ffed8fb68c9af83/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/669d6ecca27f103a2be92da72ffed8fb68c9af83/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=669d6ecca27f103a2be92da72ffed8fb68c9af83", "patch": "@@ -693,7 +693,6 @@ setup_one_parameter (inline_data *id, tree p, tree value, tree fn,\n {\n   tree init_stmt;\n   tree var;\n-  tree var_sub;\n \n   /* If the parameter is never assigned to, we may not need to\n      create a new variable here at all.  Instead, we may be able\n@@ -724,23 +723,10 @@ setup_one_parameter (inline_data *id, tree p, tree value, tree fn,\n      function. */\n   var = copy_decl_for_inlining (p, fn, VARRAY_TREE (id->fns, 0));\n \n-  /* See if the frontend wants to pass this by invisible reference.  If\n-     so, our new VAR_DECL will have REFERENCE_TYPE, and we need to\n-     replace uses of the PARM_DECL with dereferences.  */\n-  if (TREE_TYPE (var) != TREE_TYPE (p)\n-      && POINTER_TYPE_P (TREE_TYPE (var))\n-      && TREE_TYPE (TREE_TYPE (var)) == TREE_TYPE (p))\n-    {\n-      insert_decl_map (id, var, var);\n-      var_sub = build1 (INDIRECT_REF, TREE_TYPE (p), var);\n-    }\n-  else\n-    var_sub = var;\n-\n   /* Register the VAR_DECL as the equivalent for the PARM_DECL;\n      that way, when the PARM_DECL is encountered, it will be\n      automatically replaced by the VAR_DECL.  */\n-  insert_decl_map (id, p, var_sub);\n+  insert_decl_map (id, p, var);\n \n   /* Declare this new variable.  */\n   TREE_CHAIN (var) = *vars;"}]}