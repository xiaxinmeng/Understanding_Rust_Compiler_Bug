{"sha": "e8d76a395e5f1d93a17f4a353b8c80e620cb1597", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThkNzZhMzk1ZTVmMWQ5M2ExN2Y0YTM1M2I4YzgwZTYyMGNiMTU5Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-19T04:48:37Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-19T04:48:37Z"}, "message": "(fold_rtx): For SUBREG, actually test subreg_lowpart_p in the code to handle narrowing subregs.\n\n(fold_rtx): For SUBREG, actually test subreg_lowpart_p in the\ncode to handle narrowing subregs.  And exclude binary ops like DIV\nwhere truncating the args is not valid.\n\nFrom-SVN: r2160", "tree": {"sha": "14cefde7cd92b9311058c81e6e37f2b5c1215ba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14cefde7cd92b9311058c81e6e37f2b5c1215ba8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8d76a395e5f1d93a17f4a353b8c80e620cb1597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d76a395e5f1d93a17f4a353b8c80e620cb1597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8d76a395e5f1d93a17f4a353b8c80e620cb1597", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d76a395e5f1d93a17f4a353b8c80e620cb1597/comments", "author": null, "committer": null, "parents": [{"sha": "f0c70ef08a3cce8fe2642fd47973cb05532faff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c70ef08a3cce8fe2642fd47973cb05532faff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c70ef08a3cce8fe2642fd47973cb05532faff5"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "85ecc774842228bdb0d844748f75e3ccbb1376e8", "filename": "gcc/cse.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8d76a395e5f1d93a17f4a353b8c80e620cb1597/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8d76a395e5f1d93a17f4a353b8c80e620cb1597/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=e8d76a395e5f1d93a17f4a353b8c80e620cb1597", "patch": "@@ -4457,7 +4457,8 @@ fold_rtx (x, insn)\n \t can use the inner value.  */\n \n       if (GET_CODE (folded_arg0) == REG\n-\t  && GET_MODE_SIZE (mode) < GET_MODE_SIZE (GET_MODE (folded_arg0)))\n+\t  && GET_MODE_SIZE (mode) < GET_MODE_SIZE (GET_MODE (folded_arg0))\n+\t  && subreg_lowpart_p (x))\n \t{\n \t  struct table_elt *elt;\n \n@@ -4472,6 +4473,8 @@ fold_rtx (x, insn)\n \n \t  for (; elt; elt = elt->next_same_value)\n \t    {\n+\t      enum rtx_code eltcode = GET_CODE (elt->exp);\n+\n \t      /* Just check for unary and binary operations.  */\n \t      if (GET_RTX_CLASS (GET_CODE (elt->exp)) == '1'\n \t\t  && GET_CODE (elt->exp) != SIGN_EXTEND\n@@ -4491,6 +4494,10 @@ fold_rtx (x, insn)\n \t\t}\n \t      else if ((GET_RTX_CLASS (GET_CODE (elt->exp)) == '2'\n \t\t\t|| GET_RTX_CLASS (GET_CODE (elt->exp)) == 'c')\n+\t\t       && eltcode != DIV && eltcode != MOD\n+\t\t       && eltcode != UDIV && eltcode != UMOD\n+\t\t       && eltcode != ASHIFTRT && eltcode != LSHIFTRT\n+\t\t       && eltcode != ROTATE && eltcode != ROTATERT\n \t\t       && ((GET_CODE (XEXP (elt->exp, 0)) == SUBREG\n \t\t\t    && (GET_MODE (SUBREG_REG (XEXP (elt->exp, 0)))\n \t\t\t\t== mode))"}]}