{"sha": "9c28689a9908c56fffcf7b1acd6dec3fb8a947e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMyODY4OWE5OTA4YzU2ZmZmY2Y3YjFhY2Q2ZGVjM2ZiOGE5NDdlMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-11-28T17:51:40Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-28T17:51:40Z"}, "message": "Remove leftover optimize checks.\n\n\t* ipa-inline.c (want_early_inline_function_p): Remove leftover optimize\n\tchecks.\n\nFrom-SVN: r278816", "tree": {"sha": "3b335bf7ed2cbd136366f31094ae0dbe8a57db5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b335bf7ed2cbd136366f31094ae0dbe8a57db5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c28689a9908c56fffcf7b1acd6dec3fb8a947e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c28689a9908c56fffcf7b1acd6dec3fb8a947e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c28689a9908c56fffcf7b1acd6dec3fb8a947e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c28689a9908c56fffcf7b1acd6dec3fb8a947e2/comments", "author": null, "committer": null, "parents": [{"sha": "b225a29b8ced82d88b0a2fa142cb071335d91fd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b225a29b8ced82d88b0a2fa142cb071335d91fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b225a29b8ced82d88b0a2fa142cb071335d91fd3"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "50b2278b2729d4a0117d19bf5da2def6562a80e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c28689a9908c56fffcf7b1acd6dec3fb8a947e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c28689a9908c56fffcf7b1acd6dec3fb8a947e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c28689a9908c56fffcf7b1acd6dec3fb8a947e2", "patch": "@@ -1,3 +1,8 @@\n+2019-11-28  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-inline.c (want_early_inline_function_p): Remove leftover optimize\n+\tchecks.\n+\n 2019-11-28  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* profile-count.c (profile_count::combine_with_ipa_count): Return"}, {"sha": "c742a99bcd7f0edd45cbc1714f596bd6976f3268", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c28689a9908c56fffcf7b1acd6dec3fb8a947e2/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c28689a9908c56fffcf7b1acd6dec3fb8a947e2/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=9c28689a9908c56fffcf7b1acd6dec3fb8a947e2", "patch": "@@ -701,10 +701,8 @@ want_early_inline_function_p (struct cgraph_edge *e)\n \t  if (dump_enabled_p ())\n \t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, e->call_stmt,\n \t\t\t     \"  will not early inline: %C->%C, \"\n-\t\t\t     \"growth %i exceeds --param early-inlining-insns%s\\n\",\n-\t\t\t     e->caller, callee, growth,\n-\t\t\t     opt_for_fn (e->caller->decl, optimize) >= 3\n-\t\t\t     ? \"\" : \"-O2\");\n+\t\t\t     \"growth %i exceeds --param early-inlining-insns\\n\",\n+\t\t\t     e->caller, callee, growth);\n \t  want_inline = false;\n \t}\n       else if ((n = num_calls (callee)) != 0\n@@ -713,11 +711,9 @@ want_early_inline_function_p (struct cgraph_edge *e)\n \t  if (dump_enabled_p ())\n \t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, e->call_stmt,\n \t\t\t     \"  will not early inline: %C->%C, \"\n-\t\t\t     \"growth %i exceeds --param early-inlining-insns%s \"\n+\t\t\t     \"growth %i exceeds --param early-inlining-insns \"\n \t\t\t     \"divided by number of calls\\n\",\n-\t\t\t     e->caller, callee, growth,\n-\t\t\t     opt_for_fn (e->caller->decl, optimize) >= 3\n-\t\t\t     ? \"\" : \"-O2\");\n+\t\t\t     e->caller, callee, growth);\n \t  want_inline = false;\n \t}\n     }\n@@ -861,12 +857,9 @@ want_inline_small_function_p (struct cgraph_edge *e, bool report)\n \t\t- ipa_call_summaries->get (e)->call_stmt_size\n \t      > inline_insns_single (e->caller, true))\n     {\n-      if (opt_for_fn (e->caller->decl, optimize) >= 3)\n-\te->inline_failed = (DECL_DECLARED_INLINE_P (callee->decl)\n-\t\t\t    ? CIF_MAX_INLINE_INSNS_SINGLE_LIMIT\n-\t\t\t    : CIF_MAX_INLINE_INSNS_AUTO_LIMIT);\n-      else\n-\te->inline_failed = CIF_MAX_INLINE_INSNS_AUTO_LIMIT;\n+      e->inline_failed = (DECL_DECLARED_INLINE_P (callee->decl)\n+\t\t\t  ? CIF_MAX_INLINE_INSNS_SINGLE_LIMIT\n+\t\t\t  : CIF_MAX_INLINE_INSNS_AUTO_LIMIT);\n       want_inline = false;\n     }\n   else"}]}