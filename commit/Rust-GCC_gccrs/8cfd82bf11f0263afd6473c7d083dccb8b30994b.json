{"sha": "8cfd82bf11f0263afd6473c7d083dccb8b30994b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNmZDgyYmYxMWYwMjYzYWZkNjQ3M2M3ZDA4M2RjY2I4YjMwOTk0Yg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2010-07-22T22:34:11Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2010-07-22T22:34:11Z"}, "message": "ira.c (check_allocation): Correctly handle the case where an allocno with two objects was allocated to a...\n\n\t* ira.c (check_allocation): Correctly handle the case where an allocno\n\twith two objects was allocated to a single reg.\n\nFrom-SVN: r162432", "tree": {"sha": "1bc97e5c8304c5748e093edb4e0c982d7ede7eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bc97e5c8304c5748e093edb4e0c982d7ede7eac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cfd82bf11f0263afd6473c7d083dccb8b30994b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfd82bf11f0263afd6473c7d083dccb8b30994b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cfd82bf11f0263afd6473c7d083dccb8b30994b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfd82bf11f0263afd6473c7d083dccb8b30994b/comments", "author": null, "committer": null, "parents": [{"sha": "1a39adaec83f79b303de34234b89c4827af9f313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a39adaec83f79b303de34234b89c4827af9f313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a39adaec83f79b303de34234b89c4827af9f313"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "4c71bb5b0ba164a0e94e4b279ba6a85a06faf280", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cfd82bf11f0263afd6473c7d083dccb8b30994b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cfd82bf11f0263afd6473c7d083dccb8b30994b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cfd82bf11f0263afd6473c7d083dccb8b30994b", "patch": "@@ -1,3 +1,8 @@\n+2010-07-22  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* ira.c (check_allocation): Correctly handle the case where an allocno\n+\twith two objects was allocated to a single reg.\n+\n 2010-07-22  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* tree-ssa-math-opts.c (is_widening_mult_rhs_p): New function."}, {"sha": "a6b77cdd3df92033d2c429a6e15dfbaee7464ab4", "filename": "gcc/ira.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cfd82bf11f0263afd6473c7d083dccb8b30994b/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cfd82bf11f0263afd6473c7d083dccb8b30994b/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=8cfd82bf11f0263afd6473c7d083dccb8b30994b", "patch": "@@ -1624,11 +1624,14 @@ check_allocation (void)\n \t  || (hard_regno = ALLOCNO_HARD_REGNO (a)) < 0)\n \tcontinue;\n       nregs = hard_regno_nregs[hard_regno][ALLOCNO_MODE (a)];\n-      if (n > 1)\n-\t{\n-\t  gcc_assert (n == nregs);\n-\t  nregs = 1;\n-\t}\n+      if (nregs == 1)\n+\t/* We allocated a single hard register.  */\n+\tn = 1;\n+      else if (n > 1)\n+\t/* We allocated multiple hard registers, and we will test\n+\t   conflicts in a granularity of single hard regs.  */\n+\tnregs = 1;\n+\n       for (i = 0; i < n; i++)\n \t{\n \t  ira_object_t obj = ALLOCNO_OBJECT (a, i);\n@@ -1648,7 +1651,13 @@ check_allocation (void)\n \t      int conflict_hard_regno = ALLOCNO_HARD_REGNO (conflict_a);\n \t      if (conflict_hard_regno < 0)\n \t\tcontinue;\n-\t      if (ALLOCNO_NUM_OBJECTS (conflict_a) > 1)\n+\n+\t      conflict_nregs\n+\t\t= (hard_regno_nregs\n+\t\t   [conflict_hard_regno][ALLOCNO_MODE (conflict_a)]);\n+\n+\t      if (ALLOCNO_NUM_OBJECTS (conflict_a) > 1\n+\t\t  && conflict_nregs == ALLOCNO_NUM_OBJECTS (conflict_a))\n \t\t{\n \t\t  if (WORDS_BIG_ENDIAN)\n \t\t    conflict_hard_regno += (ALLOCNO_NUM_OBJECTS (conflict_a)\n@@ -1657,10 +1666,6 @@ check_allocation (void)\n \t\t    conflict_hard_regno += OBJECT_SUBWORD (conflict_obj);\n \t\t  conflict_nregs = 1;\n \t\t}\n-\t      else\n-\t\tconflict_nregs\n-\t\t  = (hard_regno_nregs\n-\t\t     [conflict_hard_regno][ALLOCNO_MODE (conflict_a)]);\n \n \t      if ((conflict_hard_regno <= this_regno\n \t\t && this_regno < conflict_hard_regno + conflict_nregs)"}]}