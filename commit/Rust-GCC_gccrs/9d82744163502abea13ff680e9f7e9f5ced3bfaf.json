{"sha": "9d82744163502abea13ff680e9f7e9f5ced3bfaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ4Mjc0NDE2MzUwMmFiZWExM2ZmNjgwZTlmN2U5ZjVjZWQzYmZhZg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-06-14T11:24:27Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-06-14T11:24:27Z"}, "message": "re PR fortran/57508 ([OOP] Intrinsic assignment+defined-assignment for comps: PROCEDURE attribute of '_F.DA0' conflicts with VARIABLE attribute)\n\n2013-06-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57508\n        * resolve.c (get_temp_from_expr): Don't copy function\n        result attributes to temporary.\n\n2013-06-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/57508\n        * gfortran.dg/defined_assignment_7.f90: New.\n\nFrom-SVN: r200089", "tree": {"sha": "a8016d97c1cb33f2f03c3f53a496efefaabe1d84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8016d97c1cb33f2f03c3f53a496efefaabe1d84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d82744163502abea13ff680e9f7e9f5ced3bfaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d82744163502abea13ff680e9f7e9f5ced3bfaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d82744163502abea13ff680e9f7e9f5ced3bfaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d82744163502abea13ff680e9f7e9f5ced3bfaf/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffe7516f004d3ad9d5453b6c8c42ad23309ec6e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffe7516f004d3ad9d5453b6c8c42ad23309ec6e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffe7516f004d3ad9d5453b6c8c42ad23309ec6e0"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "89c2ea4891d5f37bab97b49419f9f9d5b21d2f86", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d82744163502abea13ff680e9f7e9f5ced3bfaf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d82744163502abea13ff680e9f7e9f5ced3bfaf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9d82744163502abea13ff680e9f7e9f5ced3bfaf", "patch": "@@ -1,3 +1,9 @@\n+2013-06-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57508\n+\t* resolve.c (get_temp_from_expr): Don't copy function\n+\tresult attributes to temporary.\n+\n 2013-06-14  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57596"}, {"sha": "2788994112a0ad8496eeb837581b547d01a0b0c2", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d82744163502abea13ff680e9f7e9f5ced3bfaf/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d82744163502abea13ff680e9f7e9f5ced3bfaf/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=9d82744163502abea13ff680e9f7e9f5ced3bfaf", "patch": "@@ -9295,6 +9295,10 @@ get_temp_from_expr (gfc_expr *e, gfc_namespace *ns)\n \n   /* Add the attributes and the arrayspec to the temporary.  */\n   tmp->n.sym->attr = gfc_expr_attr (e);\n+  tmp->n.sym->attr.function = 0;\n+  tmp->n.sym->attr.result = 0;\n+  tmp->n.sym->attr.flavor = FL_VARIABLE;\n+\n   if (as)\n     {\n       tmp->n.sym->as = gfc_copy_array_spec (as);"}, {"sha": "ea929e013d05c9dba302622a79641f29a9d840fb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d82744163502abea13ff680e9f7e9f5ced3bfaf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d82744163502abea13ff680e9f7e9f5ced3bfaf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d82744163502abea13ff680e9f7e9f5ced3bfaf", "patch": "@@ -1,3 +1,8 @@\n+2013-06-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/57508\n+\t* gfortran.dg/defined_assignment_7.f90: New.\n+\n 2013-06-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57599"}, {"sha": "5f60f50e7812bd4ff8c549c4793a3b1931e86625", "filename": "gcc/testsuite/gfortran.dg/defined_assignment_7.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d82744163502abea13ff680e9f7e9f5ced3bfaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d82744163502abea13ff680e9f7e9f5ced3bfaf/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefined_assignment_7.f90?ref=9d82744163502abea13ff680e9f7e9f5ced3bfaf", "patch": "@@ -0,0 +1,29 @@\n+! { dg-compile }\n+!\n+! PR fortran/57508\n+!\n+module ForTrilinos_ref_counter\n+  type ref_counter\n+  contains\n+      procedure :: assign\n+      generic   :: assignment(=) => assign\n+  end type\n+contains\n+  subroutine assign (lhs, rhs)\n+    class (ref_counter), intent(inout) :: lhs\n+    class (ref_counter), intent(in) :: rhs\n+  end subroutine\n+end module\n+module FEpetra_BlockMap\n+  use ForTrilinos_ref_counter, only : ref_counter\n+  type :: Epetra_BlockMap \n+    type(ref_counter) :: counter\n+  end type\n+contains\n+  function from_struct() result(new_Epetra_BlockMap)\n+    type(Epetra_BlockMap) :: new_Epetra_BlockMap\n+  end function\n+  type(Epetra_BlockMap) function create_arbitrary()\n+    create_arbitrary = from_struct()\n+  end function\n+end module"}]}