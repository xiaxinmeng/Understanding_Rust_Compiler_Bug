{"sha": "5e278028ed86b38bc0b649aa6e351d35c6ad539c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUyNzgwMjhlZDg2YjM4YmMwYjY0OWFhNmUzNTFkMzVjNmFkNTM5Yw==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-07-07T21:52:01Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2009-07-07T21:52:01Z"}, "message": "tree.c (set_expr_locus): Remove.\n\n2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* tree.c (set_expr_locus): Remove.\n\t* tree.h (EXPR_LOCUS,SET_EXPR_LOCUS,set_expr_locus): Remove.\n\t* c-typeck.c (c_finish_stmt_expr):  Replace EXPR_LOCUS by\n\tEXPR_LOCATION.\n\t* gimplify.c (internal_get_tmp_var): Likewise.\n\t(gimplify_call_expr): Likewise.\n\t(gimplify_one_sizepos): Likewise.\nobjc/\n\t* objc-act.c (next_sjlj_build_catch_list): Replace EXPR_LOCUS by\n\tEXPR_LOCATION.\ncp/\t\n\t* semantics.c (finalize_nrv_r): Replace EXPR_LOCUS by\n\tEXPR_LOCATION.\nada/\n\t* gcc-interface/trans.c (gnat_gimplify_expr):  Replace EXPR_LOCUS by\n\tEXPR_LOCATION.\n\nFrom-SVN: r149350", "tree": {"sha": "e14c2f08a9711f5cd94a281bba187340d63b46b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e14c2f08a9711f5cd94a281bba187340d63b46b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e278028ed86b38bc0b649aa6e351d35c6ad539c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e278028ed86b38bc0b649aa6e351d35c6ad539c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e278028ed86b38bc0b649aa6e351d35c6ad539c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e278028ed86b38bc0b649aa6e351d35c6ad539c/comments", "author": null, "committer": null, "parents": [{"sha": "ed3346c20d1e764dcd98cd84e47d8f7a7ae72fcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3346c20d1e764dcd98cd84e47d8f7a7ae72fcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed3346c20d1e764dcd98cd84e47d8f7a7ae72fcb"}], "stats": {"total": 61, "additions": 34, "deletions": 27}, "files": [{"sha": "8140cc3c4398f153ce839d7bed15aa74d25de85a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -1,3 +1,13 @@\n+2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* tree.c (set_expr_locus): Remove.\n+\t* tree.h (EXPR_LOCUS,SET_EXPR_LOCUS,set_expr_locus): Remove.\n+\t* c-typeck.c (c_finish_stmt_expr):  Replace EXPR_LOCUS by\n+\tEXPR_LOCATION.\n+\t* gimplify.c (internal_get_tmp_var): Likewise.\n+\t(gimplify_call_expr): Likewise.\n+\t(gimplify_one_sizepos): Likewise.\n+\n 2009-07-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR debug/40666"}, {"sha": "082756dfd8b2b807374298961e36af917149511b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -1,3 +1,8 @@\n+2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* gcc-interface/trans.c (gnat_gimplify_expr):  Replace EXPR_LOCUS by\n+\tEXPR_LOCATION.\n+\n 2009-07-07  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch6.adb (Expand_Actuals): Call Add_Call_By_Copy_Code for in out"}, {"sha": "76200ab34a9db353231a26ea1469571af654d394", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -5846,7 +5846,7 @@ gnat_gimplify_expr (tree *expr_p, gimple_seq *pre_p,\n \n \t  stmt = gimplify_assign (new_var, op, pre_p);\n \t  if (EXPR_HAS_LOCATION (op))\n-\t    gimple_set_location (stmt, *EXPR_LOCUS (op));\n+\t    gimple_set_location (stmt, EXPR_LOCATION (op));\n \n \t  TREE_OPERAND (expr, 0) = new_var;\n \t  recompute_tree_invariant_for_addr_expr (expr);"}, {"sha": "f7df74e9eefa07fe7f5133cc7bdadab1cb6b03dd", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -8674,7 +8674,7 @@ c_finish_stmt_expr (location_t loc, tree body)\n     val = TREE_OPERAND (val, 0);\n \n   *last_p = build2 (MODIFY_EXPR, void_type_node, tmp, val);\n-  SET_EXPR_LOCUS (*last_p, EXPR_LOCUS (last));\n+  SET_EXPR_LOCATION (*last_p, EXPR_LOCATION (last));\n \n   {\n     tree t = build4 (TARGET_EXPR, type, tmp, body, NULL_TREE, NULL_TREE);"}, {"sha": "aa28747c85690442808ec78f35f644ae68fcb3f4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -1,3 +1,8 @@\n+2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* semantics.c (finalize_nrv_r): Replace EXPR_LOCUS by\n+\tEXPR_LOCATION.\n+\t\n 2009-07-07  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/37816"}, {"sha": "aa52a362fb793bbbf7db97158820a3dca7918390", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -3334,7 +3334,7 @@ finalize_nrv_r (tree* tp, int* walk_subtrees, void* data)\n       else\n \tinit = build_empty_stmt (EXPR_LOCATION (*tp));\n       DECL_INITIAL (dp->var) = NULL_TREE;\n-      SET_EXPR_LOCUS (init, EXPR_LOCUS (*tp));\n+      SET_EXPR_LOCATION (init, EXPR_LOCATION (*tp));\n       *tp = init;\n     }\n   /* And replace all uses of the NRV with the RESULT_DECL.  */"}, {"sha": "032228d2a28d4c9f14c9f7f1943514d91d46119b", "filename": "gcc/gimplify.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -610,7 +610,7 @@ internal_get_tmp_var (tree val, gimple_seq *pre_p, gimple_seq *post_p,\n   mod = build2 (INIT_EXPR, TREE_TYPE (t), t, unshare_expr (val));\n \n   if (EXPR_HAS_LOCATION (val))\n-    SET_EXPR_LOCUS (mod, EXPR_LOCUS (val));\n+    SET_EXPR_LOCATION (mod, EXPR_LOCATION (val));\n   else\n     SET_EXPR_LOCATION (mod, input_location);\n \n@@ -814,7 +814,7 @@ gimple_set_do_not_emit_location (gimple g)\n   gimple_set_plf (g, GF_PLF_1, true);\n }\n \n-/* Set the location for gimple statement GS to LOCUS.  */\n+/* Set the location for gimple statement GS to LOCATION.  */\n \n static void\n annotate_one_with_location (gimple gs, location_t location)\n@@ -854,7 +854,7 @@ annotate_all_with_location_after (gimple_seq seq, gimple_stmt_iterator gsi,\n }\n \n \n-/* Set the location for all the statements in a sequence STMT_P to LOCUS.  */\n+/* Set the location for all the statements in a sequence STMT_P to LOCATION.  */\n \n void\n annotate_all_with_location (gimple_seq stmt_p, location_t location)\n@@ -2375,7 +2375,7 @@ gimplify_call_expr (tree *expr_p, gimple_seq *pre_p, bool want_value)\n \t    = CALL_EXPR_RETURN_SLOT_OPT (call);\n \t  CALL_FROM_THUNK_P (*expr_p) = CALL_FROM_THUNK_P (call);\n \t  CALL_CANNOT_INLINE_P (*expr_p) = CALL_CANNOT_INLINE_P (call);\n-\t  SET_EXPR_LOCUS (*expr_p, EXPR_LOCUS (call));\n+\t  SET_EXPR_LOCATION (*expr_p, EXPR_LOCATION (call));\n \t  TREE_BLOCK (*expr_p) = TREE_BLOCK (call);\n \n \t  /* Set CALL_EXPR_VA_ARG_PACK.  */\n@@ -7360,7 +7360,7 @@ gimplify_one_sizepos (tree *expr_p, gimple_seq *stmt_p)\n       tmp = build1 (NOP_EXPR, type, expr);\n       stmt = gimplify_assign (*expr_p, tmp, stmt_p);\n       if (EXPR_HAS_LOCATION (expr))\n-\tgimple_set_location (stmt, *EXPR_LOCUS (expr));\n+\tgimple_set_location (stmt, EXPR_LOCATION (expr));\n       else\n \tgimple_set_location (stmt, input_location);\n     }"}, {"sha": "00475c1ac1e49bf5374a24cf87ee0c6f57d9dd4e", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -1,3 +1,8 @@\n+2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* objc-act.c (next_sjlj_build_catch_list): Replace EXPR_LOCUS by\n+\tEXPR_LOCATION.\n+\t\n 2009-07-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* objc-act.c: Replace %J by an explicit location. Update all"}, {"sha": "23aae280e6b85afff8cf408c21dd2c664d3a7daf", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -3669,7 +3669,7 @@ next_sjlj_build_catch_list (void)\n \t      cond = c_common_truthvalue_conversion (input_location, t);\n \t    }\n \t  t = build3 (COND_EXPR, void_type_node, cond, body, NULL);\n-\t  SET_EXPR_LOCUS (t, EXPR_LOCUS (stmt));\n+\t  SET_EXPR_LOCATION (t, EXPR_LOCATION (stmt));\n \n \t  *last = t;\n \t  last = &COND_EXPR_ELSE (t);"}, {"sha": "7c5f154ad389a42a20a0a6b1a47544c0a8134d70", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -3940,18 +3940,6 @@ expand_location (source_location loc)\n }\n \n \f\n-/* Source location accessor functions.  */\n-\n-\n-void\n-set_expr_locus (tree node, source_location *loc)\n-{\n-  if (loc == NULL)\n-    EXPR_CHECK (node)->exp.locus = UNKNOWN_LOCATION;\n-  else\n-    EXPR_CHECK (node)->exp.locus = *loc;\n-}\n-\n /* Like SET_EXPR_LOCATION, but make sure the tree can have a location.\n \n    LOC is the location to use in tree T.  */"}, {"sha": "cc00c6d31fee76c492808f3c2818611d121bcd5f", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e278028ed86b38bc0b649aa6e351d35c6ad539c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=5e278028ed86b38bc0b649aa6e351d35c6ad539c", "patch": "@@ -1540,10 +1540,6 @@ struct GTY(()) tree_constructor {\n #define EXPR_LOCATION(NODE) (EXPR_P ((NODE)) ? (NODE)->exp.locus : UNKNOWN_LOCATION)\n #define SET_EXPR_LOCATION(NODE, LOCUS) EXPR_CHECK ((NODE))->exp.locus = (LOCUS)\n #define EXPR_HAS_LOCATION(NODE) (EXPR_LOCATION (NODE) != UNKNOWN_LOCATION)\n-#define EXPR_LOCUS(NODE) (EXPR_P (NODE) \\\n-\t\t\t  ? CONST_CAST (source_location *, &(NODE)->exp.locus) \\\n-\t\t\t  : (source_location *) NULL)\n-#define SET_EXPR_LOCUS(NODE, FROM) set_expr_locus ((NODE), (FROM))\n #define EXPR_FILENAME(NODE) LOCATION_FILE (EXPR_CHECK ((NODE))->exp.locus)\n #define EXPR_LINENO(NODE) LOCATION_LINE (EXPR_CHECK (NODE)->exp.locus)\n \n@@ -4858,8 +4854,6 @@ extern HOST_WIDEST_INT widest_int_cst_value (const_tree);\n extern bool fields_compatible_p (const_tree, const_tree);\n extern tree find_compatible_field (tree, tree);\n \n-extern void set_expr_locus (tree, source_location *);\n-\n extern tree *tree_block (tree);\n extern location_t *block_nonartificial_location (tree);\n extern location_t tree_nonartificial_location (tree);"}]}