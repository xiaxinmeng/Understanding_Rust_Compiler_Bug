{"sha": "4841ba4b1d6d93eb360f046d908643d26f0b042c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg0MWJhNGIxZDZkOTNlYjM2MGYwNDZkOTA4NjQzZDI2ZjBiMDQyYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-18T23:23:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-18T23:23:49Z"}, "message": "(record_reg_classes): When handling case of single SET between a hard register alone in a class and a pseudo...\n\n(record_reg_classes): When handling case of single SET\nbetween a hard register alone in a class and a pseudo, make sure the\nregister is the only member of the class.\n\nFrom-SVN: r8511", "tree": {"sha": "4701fcef836e9a8b2749bc3156de8d503b06ee76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4701fcef836e9a8b2749bc3156de8d503b06ee76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4841ba4b1d6d93eb360f046d908643d26f0b042c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4841ba4b1d6d93eb360f046d908643d26f0b042c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4841ba4b1d6d93eb360f046d908643d26f0b042c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4841ba4b1d6d93eb360f046d908643d26f0b042c/comments", "author": null, "committer": null, "parents": [{"sha": "1ced4e9b049df5ba9f4ba699f6df044c463061ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ced4e9b049df5ba9f4ba699f6df044c463061ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ced4e9b049df5ba9f4ba699f6df044c463061ef"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "5e758549e8a5470761773e42a1c5735187b14c40", "filename": "gcc/regclass.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4841ba4b1d6d93eb360f046d908643d26f0b042c/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4841ba4b1d6d93eb360f046d908643d26f0b042c/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=4841ba4b1d6d93eb360f046d908643d26f0b042c", "patch": "@@ -1364,6 +1364,7 @@ record_reg_classes (n_alts, n_ops, ops, modes, constraints, insn)\n \t  int regno = REGNO (ops[!i]);\n \t  enum machine_mode mode = GET_MODE (ops[!i]);\n \t  int class;\n+\t  int nr;\n \n \t  if (regno >= FIRST_PSEUDO_REGISTER && prefclass != 0\n \t      && (reg_class_size[prefclass[regno]]\n@@ -1373,7 +1374,21 @@ record_reg_classes (n_alts, n_ops, ops, modes, constraints, insn)\n \t    for (class = 0; class < N_REG_CLASSES; class++)\n \t      if (TEST_HARD_REG_BIT (reg_class_contents[class], regno)\n \t\t  && reg_class_size[class] == CLASS_MAX_NREGS (class, mode))\n-\t\top_costs[i].cost[class] = -1;\n+\t\t{\n+\t\t  if (reg_class_size[class] == 1)\n+\t\t    op_costs[i].cost[class] = -1;\n+\t\t  else\n+\t\t    {\n+\t\t      for (nr = 0; nr < HARD_REGNO_NREGS(regno, mode); nr++)\n+\t\t\t{\n+\t\t\t  if (!TEST_HARD_REG_BIT (reg_class_contents[class], regno + nr))\n+\t\t\t    break;\n+\t\t\t}\n+\n+\t\t      if (nr == HARD_REGNO_NREGS(regno,mode))\n+\t\t\top_costs[i].cost[class] = -1;\n+\t\t    }\n+\t\t}\n \t}\n }\n \f"}]}