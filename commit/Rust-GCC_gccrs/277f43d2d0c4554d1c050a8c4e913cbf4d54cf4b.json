{"sha": "277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc3ZjQzZDJkMGM0NTU0ZDFjMDUwYThjNGU5MTNjYmY0ZDU0Y2Y0Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-08-25T23:01:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-08-25T23:01:40Z"}, "message": "re PR libstdc++/54297 ([C++11] Segmentation fault with std::async and released shared state)\n\n\tPR libstdc++/54297\n\t* include/std/future (~_Async_state_impl): Join thread before\n\tderived class members are destroyed.\n\t(~_Async_state_common): Only define non-trivial destructor when\n\tincluded from future.cc for ABI compatibility reasons.\n\t* src/c++11/future.cc (_GLIBCXX_ABI_COMPAT_ASYNC): Define.\n\t* testsuite/30_threads/async/54297.cc: New.\n\nFrom-SVN: r190672", "tree": {"sha": "14a840fae3c8a2b3e7a91873a4133ad272af91d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14a840fae3c8a2b3e7a91873a4133ad272af91d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81ea3024cac22aa75bd589fa455b132895e1a82f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ea3024cac22aa75bd589fa455b132895e1a82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81ea3024cac22aa75bd589fa455b132895e1a82f"}], "stats": {"total": 69, "additions": 67, "deletions": 2}, "files": [{"sha": "361abc5316fba7d015e1b712131fbc77e8aa2941", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b", "patch": "@@ -1,3 +1,13 @@\n+2012-08-25  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/54297\n+\t* include/std/future (~_Async_state_impl): Join thread before\n+\tderived class members are destroyed.\n+\t(~_Async_state_common): Only define non-trivial destructor when\n+\tincluded from future.cc for ABI compatibility reasons.\n+\t* src/c++11/future.cc (_GLIBCXX_ABI_COMPAT_ASYNC): Define.\n+\t* testsuite/30_threads/async/54297.cc: New.\n+\n 2012-08-25  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/54248"}, {"sha": "feae382fe00ba46c2e682437935d0b3b00a82c8c", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b", "patch": "@@ -1427,10 +1427,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   class __future_base::_Async_state_common : public __future_base::_State_base\n   {\n   protected:\n-#ifdef _GLIBCXX_HAVE_TLS\n+#if defined(_GLIBCXX_HAVE_TLS) && defined(_GLIBCXX_ABI_COMPAT_ASYNC)\n     ~_Async_state_common();\n #else\n-    ~_Async_state_common() { _M_join(); }\n+    ~_Async_state_common() = default;\n #endif\n \n     // Allow non-timed waiting functions to block until the thread completes,\n@@ -1457,6 +1457,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         } };\n       }\n \n+      ~_Async_state_impl() { _M_join(); }\n+\n     private:\n       typedef __future_base::_Ptr<_Result<_Res>> _Ptr_type;\n       _Ptr_type _M_result;"}, {"sha": "eaea39375e707af0eca7e1cf8e4c4d194e8a8238", "filename": "libstdc++-v3/src/c++11/future.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc?ref=277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b", "patch": "@@ -22,6 +22,8 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n+#define _GLIBCXX_ABI_COMPAT_ASYNC\n+\n #include <future>\n \n namespace\n@@ -86,6 +88,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __future_base::_State_base::~_State_base() = default;\n \n #ifdef _GLIBCXX_HAVE_TLS\n+  // Exported for compatibility with ABI version 3.4.17\n   __future_base::_Async_state_common::~_Async_state_common() { _M_join(); }\n \n   // Explicit instantiation due to -fno-implicit-instantiation."}, {"sha": "1d4d0a422e6d2fce67842d068e9bc52c7a9c0f18", "filename": "libstdc++-v3/testsuite/30_threads/async/54297.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F54297.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F54297.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fasync%2F54297.cc?ref=277f43d2d0c4554d1c050a8c4e913cbf4d54cf4b", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+// { dg-require-atomic-builtins \"\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <chrono>\n+#include <thread>\n+#include <future>\n+#include <set>\n+#include <testsuite_hooks.h>\n+\n+struct Task;\n+\n+std::set<const Task*> dead_tasks;\n+\n+struct Task\n+{\n+  ~Task() { dead_tasks.insert(this); }\n+\n+  void operator()() const\n+  {\n+    std::this_thread::sleep_for(std::chrono::seconds(1));\n+    VERIFY( dead_tasks.count(this) == 0 );\n+  }\n+};\n+\n+int main()\n+{\n+  std::async(std::launch::async, Task());\n+}"}]}