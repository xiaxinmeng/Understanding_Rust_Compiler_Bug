{"sha": "ff84991f990cfd20fd24331701912f78427f83ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY4NDk5MWY5OTBjZmQyMGZkMjQzMzE3MDE5MTJmNzg0MjdmODNhZQ==", "commit": {"author": {"name": "Dirk Mueller", "email": "dmueller@suse.de", "date": "2006-10-30T14:44:45Z"}, "committer": {"name": "Dirk Mueller", "email": "mueller@gcc.gnu.org", "date": "2006-10-30T14:44:45Z"}, "message": "typeck.c (build_unary_op): Fix indenting.\n\n2006-10-30  Dirk Mueller  <dmueller@suse.de>\n\n       * typeck.c (build_unary_op): Fix indenting. Use G_().\n\nFrom-SVN: r118185", "tree": {"sha": "4a9a96300d80dc7652121d321269e20fe61100aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a9a96300d80dc7652121d321269e20fe61100aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff84991f990cfd20fd24331701912f78427f83ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff84991f990cfd20fd24331701912f78427f83ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff84991f990cfd20fd24331701912f78427f83ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff84991f990cfd20fd24331701912f78427f83ae/comments", "author": null, "committer": null, "parents": [{"sha": "709e1a1a8a1118ace67aad141573bbd2c519f329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709e1a1a8a1118ace67aad141573bbd2c519f329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/709e1a1a8a1118ace67aad141573bbd2c519f329"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "fe1460e52bd4a3f36d3d835022139d27485b9bd8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff84991f990cfd20fd24331701912f78427f83ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff84991f990cfd20fd24331701912f78427f83ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ff84991f990cfd20fd24331701912f78427f83ae", "patch": "@@ -1,3 +1,7 @@\n+2006-10-30  Dirk Mueller  <dmueller@suse.de>\n+\n+\t* typeck.c (build_unary_op): Fix indenting. Use G_().\n+\n 2006-10-29  Dirk Mueller  <dmueller@suse.de>\n \n \tPR c++/29089"}, {"sha": "c7bc0609cc938d61da2315c783a8ab79a9b93765", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff84991f990cfd20fd24331701912f78427f83ae/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff84991f990cfd20fd24331701912f78427f83ae/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ff84991f990cfd20fd24331701912f78427f83ae", "patch": "@@ -39,6 +39,7 @@ Boston, MA 02110-1301, USA.  */\n #include \"output.h\"\n #include \"toplev.h\"\n #include \"diagnostic.h\"\n+#include \"intl.h\"\n #include \"target.h\"\n #include \"convert.h\"\n #include \"c-common.h\"\n@@ -3228,11 +3229,13 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n \t  if (TREE_CODE (op1) == INTEGER_CST)\n \t    {\n \t      if (tree_int_cst_lt (op1, integer_zero_node))\n-\t\twarning (0, (code == LROTATE_EXPR) ? \"left rotate count is negative\" :\n-\t\t\t    \"right rotate count is negative\");\n+\t\twarning (0, (code == LROTATE_EXPR)\n+                            ? G_(\"left rotate count is negative\")\n+                            : G_(\"right rotate count is negative\"));\n \t      else if (compare_tree_int (op1, TYPE_PRECISION (type0)) >= 0)\n-\t\twarning (0, (code == LROTATE_EXPR) ? \"left rotate count >= width of type\" :\n-\t\t\t \"right rotate count >= width of type\");\n+\t\twarning (0, (code == LROTATE_EXPR) \n+                            ? G_(\"left rotate count >= width of type\")\n+                            : G_(\"right rotate count >= width of type\"));\n \t    }\n \t  /* Convert the shift-count to an integer, regardless of\n \t     size of value being shifted.  */\n@@ -4121,9 +4124,9 @@ build_unary_op (enum tree_code code, tree xarg, int noconvert)\n \n \t/* ARM $5.2.5 last annotation says this should be forbidden.  */\n \tif (TREE_CODE (argtype) == ENUMERAL_TYPE)\n-\t  pedwarn ((code == PREINCREMENT_EXPR || code == POSTINCREMENT_EXPR) ?\n-                   \"ISO C++ forbids incrementing an enum\" :\n-                   \"ISO C++ forbids decrementing an enum\");\n+\t  pedwarn ((code == PREINCREMENT_EXPR || code == POSTINCREMENT_EXPR)\n+\t\t   ? G_(\"ISO C++ forbids incrementing an enum\")\n+\t\t   : G_(\"ISO C++ forbids decrementing an enum\"));\n \n \t/* Compute the increment.  */\n \n@@ -4134,17 +4137,15 @@ build_unary_op (enum tree_code code, tree xarg, int noconvert)\n \t    if (!COMPLETE_OR_VOID_TYPE_P (type))\n \t      error (((code == PREINCREMENT_EXPR\n \t\t       || code == POSTINCREMENT_EXPR))\n-\t\t      ?\n-                      \"cannot increment a pointer to incomplete type %qT\" :\n-                      \"cannot decrement a pointer to incomplete type %qT\",\n+\t\t     ? G_(\"cannot increment a pointer to incomplete type %qT\")\n+\t\t     : G_(\"cannot decrement a pointer to incomplete type %qT\"),\n                       TREE_TYPE (argtype));\n \t    else if ((pedantic || warn_pointer_arith)\n \t\t     && !TYPE_PTROB_P (argtype))\n-\t      pedwarn (((code == PREINCREMENT_EXPR\n+\t      pedwarn ((code == PREINCREMENT_EXPR\n \t\t\t || code == POSTINCREMENT_EXPR)\n-\t\t\t? \n-                        \"ISO C++ forbids incrementing a pointer of type %qT\" :\n-                        \"ISO C++ forbids decrementing a pointer of type %qT\"),\n+\t\t       ? G_(\"ISO C++ forbids incrementing a pointer of type %qT\")\n+\t\t       : G_(\"ISO C++ forbids decrementing a pointer of type %qT\"),\n                         argtype);\n \t    inc = cxx_sizeof_nowarn (TREE_TYPE (argtype));\n \t  }"}]}