{"sha": "c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZlOGIwYjNhZjRhMmYxZGI5ZDFiMTNmNTQyODBjNTQwMWM1M2U0Yw==", "commit": {"author": {"name": "Paul A. Clarke", "email": "pc@us.ibm.com", "date": "2018-10-10T20:52:48Z"}, "committer": {"name": "Paul Clarke", "email": "pc@gcc.gnu.org", "date": "2018-10-10T20:52:48Z"}, "message": "Fat-fingered my recent patch adding the SSE3 testcases for powerpc,\n\nmost likely by twice applying the patch which added the testcases.\n\nThis patch removes the duplicated code.\n\n[gcc/testsuite]\n\n2018-10-10  Paul A. Clarke  <pc@us.ibm.com>\n\n\tPR target/87579\n\t* gcc.target/powerpc/sse3-check.h: Remove duplicated code.\n\t* gcc.target/powerpc/sse3-addsubps.c: Likewise.\n\t* gcc.target/powerpc/sse3-addsubpd.c: Likewise.\n\t* gcc.target/powerpc/sse3-haddps.c: Likewise.\n\t* gcc.target/powerpc/sse3-hsubps.c: Likewise.\n\t* gcc.target/powerpc/sse3-haddpd.c: Likewise.\n\t* gcc.target/powerpc/sse3-hsubpd.c: Likewise.\n\t* gcc.target/powerpc/sse3-lddqu.c: Likewise.\n\t* gcc.target/powerpc/sse3-movsldup.c: Likewise.\n\t* gcc.target/powerpc/sse3-movshdup.c: Likewise.\n\t* gcc.target/powerpc/sse3-movddup.c: Likewise.\n\t* gcc.target/powerpc/pr37191.c: Likewise.\n\nFrom-SVN: r265026", "tree": {"sha": "ff8c65d74240c534ab728fff00b0c3d3457c2576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff8c65d74240c534ab728fff00b0c3d3457c2576"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/comments", "author": {"login": "ThinkOpenly", "id": 12301795, "node_id": "MDQ6VXNlcjEyMzAxNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/12301795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkOpenly", "html_url": "https://github.com/ThinkOpenly", "followers_url": "https://api.github.com/users/ThinkOpenly/followers", "following_url": "https://api.github.com/users/ThinkOpenly/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkOpenly/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkOpenly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkOpenly/subscriptions", "organizations_url": "https://api.github.com/users/ThinkOpenly/orgs", "repos_url": "https://api.github.com/users/ThinkOpenly/repos", "events_url": "https://api.github.com/users/ThinkOpenly/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkOpenly/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3846751b82fdf80aa13982ef44f81f43c5cf150e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3846751b82fdf80aa13982ef44f81f43c5cf150e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3846751b82fdf80aa13982ef44f81f43c5cf150e"}], "stats": {"total": 1139, "additions": 15, "deletions": 1124}, "files": [{"sha": "bbb47d379c05af1f53129f74757112c27b678264", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -1,3 +1,18 @@\n+2018-10-10  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\tPR target/87579\n+\t* gcc.target/powerpc/sse3-check.h: Remove duplicated code.\n+\t* gcc.target/powerpc/sse3-addsubps.c: Likewise.\n+\t* gcc.target/powerpc/sse3-addsubpd.c: Likewise.\n+\t* gcc.target/powerpc/sse3-haddps.c: Likewise.\n+\t* gcc.target/powerpc/sse3-hsubps.c: Likewise.\n+\t* gcc.target/powerpc/sse3-haddpd.c: Likewise.\n+\t* gcc.target/powerpc/sse3-hsubpd.c: Likewise.\n+\t* gcc.target/powerpc/sse3-lddqu.c: Likewise.\n+\t* gcc.target/powerpc/sse3-movsldup.c: Likewise.\n+\t* gcc.target/powerpc/sse3-movshdup.c: Likewise.\n+\t* gcc.target/powerpc/sse3-movddup.c: Likewise.\n+\t* gcc.target/powerpc/pr37191.c: Likewise.\n 2018-10-10  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/54391"}, {"sha": "2df5ebadf223909a0b68e751f4038cc265793fb4", "filename": "gcc/testsuite/gcc.target/powerpc/pr37191.c", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr37191.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr37191.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr37191.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -49,54 +49,3 @@ void h264_h_loop_filter_chroma_intra_mmx2(uint8_t *pix, int stride, int alpha, i\n   transpose4x4(pix-2, trans, stride, 8);\n   transpose4x4(pix-2+4*stride, trans+4, stride, 8);\n }\n-/* { dg-do compile } */\n-/* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n-/* { dg-options \"-O3 -mpower8-vector\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-\n-#include <mmintrin.h>\n-#include <stddef.h>\n-#include <stdint.h>\n-\n-#if 0\n-extern const uint64_t ff_bone;\n-#endif\n-\n-static inline void transpose4x4(uint8_t *dst, uint8_t *src, ptrdiff_t dst_stride, ptrdiff_t src_stride) {\n-  __m64 row0 = _mm_cvtsi32_si64(*(unsigned*)(src + (0 * src_stride)));\n-  __m64 row1 = _mm_cvtsi32_si64(*(unsigned*)(src + (1 * src_stride)));\n-  __m64 row2 = _mm_cvtsi32_si64(*(unsigned*)(src + (2 * src_stride)));\n-  __m64 row3 = _mm_cvtsi32_si64(*(unsigned*)(src + (3 * src_stride)));\n-  __m64 tmp0 = _mm_unpacklo_pi8(row0, row1);\n-  __m64 tmp1 = _mm_unpacklo_pi8(row2, row3);\n-  __m64 row01 = _mm_unpacklo_pi16(tmp0, tmp1);\n-  __m64 row23 = _mm_unpackhi_pi16(tmp0, tmp1);\n-  *((unsigned*)(dst + (0 * dst_stride))) = _mm_cvtsi64_si32(row01);\n-  *((unsigned*)(dst + (1 * dst_stride))) = _mm_cvtsi64_si32(_mm_unpackhi_pi32(row01, row01));\n-  *((unsigned*)(dst + (2 * dst_stride))) = _mm_cvtsi64_si32(row23);\n-  *((unsigned*)(dst + (3 * dst_stride))) = _mm_cvtsi64_si32(_mm_unpackhi_pi32(row23, row23));\n-}\n-\n-#if 0\n-static inline void h264_loop_filter_chroma_intra_mmx2(uint8_t *pix, int stride, int alpha1, int beta1)\n-{\n-    asm volatile(\n-        \"\"\n-        :: \"r\"(pix-2*stride), \"r\"(pix), \"r\"((long)stride),\n-           \"m\"(alpha1), \"m\"(beta1), \"m\"(ff_bone)\n-    );\n-}\n-#endif\n-\n-void h264_h_loop_filter_chroma_intra_mmx2(uint8_t *pix, int stride, int alpha, int beta)\n-{\n-  uint8_t trans[8*4] __attribute__ ((aligned (8)));\n-  transpose4x4(trans, pix-2, 8, stride);\n-  transpose4x4(trans+4, pix-2+4*stride, 8, stride);\n-//    h264_loop_filter_chroma_intra_mmx2(trans+2*8, 8, alpha-1, beta-1);\n-  transpose4x4(pix-2, trans, stride, 8);\n-  transpose4x4(pix-2+4*stride, trans+4, stride, 8);\n-}"}, {"sha": "065f88a96cd741758795e2ff13a01e67a143fb5d", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-addsubpd.c", "status": "modified", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-addsubpd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-addsubpd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-addsubpd.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -100,104 +100,3 @@ TEST (void)\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_addsubpd_1\n-#endif\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_addsubpd (double *i1, double *i2, double *r)\n-{\n-  __m128d t1 = _mm_loadu_pd (i1);\n-  __m128d t2 = _mm_loadu_pd (i2);\n-\n-  t1 = _mm_addsub_pd (t1, t2);\n-\n-  _mm_storeu_pd (r, t1);\n-}\n-\n-static void\n-sse3_test_addsubpd_subsume (double *i1, double *i2, double *r)\n-{\n-  __m128d t1 = _mm_load_pd (i1);\n-  __m128d t2 = _mm_load_pd (i2);\n-\n-  t1 = _mm_addsub_pd (t1, t2);\n-\n-  _mm_storeu_pd (r, t1);\n-}\n-\n-static int\n-chk_pd (double *v1, double *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 2; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static double p1[2] __attribute__ ((aligned(16)));\n-static double p2[2] __attribute__ ((aligned(16)));\n-static double p3[2];\n-static double ck[2];\n-\n-double vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST (void)\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals[0]); i += 4)\n-    {\n-      p1[0] = vals[i+0];\n-      p1[1] = vals[i+1];\n-\n-      p2[0] = vals[i+2];\n-      p2[1] = vals[i+3];\n-\n-      ck[0] = p1[0] - p2[0];\n-      ck[1] = p1[1] + p2[1];\n-\n-      sse3_test_addsubpd (p1, p2, p3);\n-\n-      fail += chk_pd (ck, p3);\n-\n-      sse3_test_addsubpd_subsume (p1, p2, p3);\n-\n-      fail += chk_pd (ck, p3);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}, {"sha": "e16db948b4e109c92eefd48001e64b0842e6355c", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-addsubps.c", "status": "modified", "additions": 0, "deletions": 107, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-addsubps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-addsubps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-addsubps.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -106,110 +106,3 @@ TEST (void)\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_addsubps_1\n-#endif\n-\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_addsubps (float *i1, float *i2, float *r)\n-{\n-  __m128 t1 = _mm_loadu_ps (i1);\n-  __m128 t2 = _mm_loadu_ps (i2);\n-\n-  t1 = _mm_addsub_ps (t1, t2);\n-\n-  _mm_storeu_ps (r, t1);\n-}\n-\n-static void\n-sse3_test_addsubps_subsume (float *i1, float *i2, float *r)\n-{\n-  __m128 t1 = _mm_load_ps (i1);\n-  __m128 t2 = _mm_load_ps (i2);\n-\n-  t1 = _mm_addsub_ps (t1, t2);\n-\n-  _mm_storeu_ps (r, t1);\n-}\n-\n-static int\n-chk_ps (float *v1, float *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 4; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static float p1[4] __attribute__ ((aligned(16)));\n-static float p2[4] __attribute__ ((aligned(16)));\n-static float p3[4];\n-static float ck[4];\n-\n-static float vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST (void)\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals); i += 8)\n-    {\n-      p1[0] = vals[i+0];\n-      p1[1] = vals[i+1];\n-      p1[2] = vals[i+2];\n-      p1[3] = vals[i+3];\n-\n-      p2[0] = vals[i+4];\n-      p2[1] = vals[i+5];\n-      p2[2] = vals[i+6];\n-      p2[3] = vals[i+7];\n-\n-      ck[0] = p1[0] - p2[0];\n-      ck[1] = p1[1] + p2[1];\n-      ck[2] = p1[2] - p2[2];\n-      ck[3] = p1[3] + p2[3];\n-\n-      sse3_test_addsubps (p1, p2, p3);\n-\n-      fail += chk_ps (ck, p3);\n-\n-      sse3_test_addsubps_subsume (p1, p2, p3);\n-\n-      fail += chk_ps (ck, p3);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}, {"sha": "d205f9eaa6e65ed72a6490c9bbe4d5e810ae244c", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-check.h", "status": "modified", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-check.h?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -41,46 +41,3 @@ main ()\n #endif /* __BUILTIN_CPU_SUPPORTS__ */\n   return 0;\n }\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n-#include \"m128-check.h\"\n-\n-/* define DEBUG replace abort with printf on error.  */\n-//#define DEBUG 1\n-\n-#define TEST sse3_test\n-\n-static void sse3_test (void);\n-\n-static void\n-__attribute__ ((noinline))\n-do_test (void)\n-{\n-  sse3_test ();\n-}\n-\n-int\n-main ()\n-{\n-#ifdef __BUILTIN_CPU_SUPPORTS__\n-  /* Most SSE intrinsic operations can be implemented via VMX\n-     instructions, but some operations may be faster / simpler\n-     using the POWER8 VSX instructions.  This is especially true\n-     when we are transferring / converting to / from __m64 types.\n-     The direct register transfer instructions from POWER8 are\n-     especially important.  So we test for arch_2_07.  */\n-  if (__builtin_cpu_supports (\"arch_2_07\"))\n-    {\n-      do_test ();\n-#ifdef DEBUG\n-      printf (\"PASSED\\n\");\n-#endif\n-    }\n-#ifdef DEBUG\n-  else\n-    printf (\"SKIPPED\\n\");\n-#endif\n-#endif /* __BUILTIN_CPU_SUPPORTS__ */\n-  return 0;\n-}"}, {"sha": "cde00817c3f08a7f6df2b9c7096ab4903e2d28e1", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-haddpd.c", "status": "modified", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-haddpd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-haddpd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-haddpd.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -98,103 +98,3 @@ void TEST (void)\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_haddpd_1\n-#endif\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_haddpd (double *i1, double *i2, double *r)\n-{\n-  __m128d t1 = _mm_loadu_pd (i1);\n-  __m128d t2 = _mm_loadu_pd (i2);\n-\n-  t1 = _mm_hadd_pd (t1, t2);\n-\n-  _mm_storeu_pd (r, t1);\n-}\n-\n-static void\n-sse3_test_haddpd_subsume (double *i1, double *i2, double *r)\n-{\n-  __m128d t1 = _mm_load_pd (i1);\n-  __m128d t2 = _mm_load_pd (i2);\n-\n-  t1 = _mm_hadd_pd (t1, t2);\n-\n-  _mm_storeu_pd (r, t1);\n-}\n-\n-static int\n-chk_pd (double *v1, double *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 2; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static double p1[2] __attribute__ ((aligned(16)));\n-static double p2[2] __attribute__ ((aligned(16)));\n-static double p3[2];\n-static double ck[2];\n-\n-static double vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST (void)\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals[0]); i += 4)\n-    {\n-      p1[0] = vals[i + 0];\n-      p1[1] = vals[i + 1];\n-\n-      p2[0] = vals[i + 2];\n-      p2[1] = vals[i + 3];\n-\n-      ck[0] = p1[0] + p1[1];\n-      ck[1] = p2[0] + p2[1];\n-\n-      sse3_test_haddpd (p1, p2, p3);\n-\n-      fail += chk_pd (ck, p3);\n-\n-      sse3_test_haddpd_subsume (p1, p2, p3);\n-\n-      fail += chk_pd (ck, p3);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}, {"sha": "1df9841f3054b54a62af4d88177166b24247195b", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-haddps.c", "status": "modified", "additions": 0, "deletions": 107, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-haddps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-haddps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-haddps.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -106,110 +106,3 @@ TEST ()\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_haddps_1\n-#endif\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_haddps (float *i1, float *i2, float *r)\n-{\n-  __m128 t1 = _mm_loadu_ps (i1);\n-  __m128 t2 = _mm_loadu_ps (i2);\n-\n-  t1 = _mm_hadd_ps (t1, t2);\n-\n-  _mm_storeu_ps (r, t1);\n-}\n-\n-static void\n-sse3_test_haddps_subsume (float *i1, float *i2, float *r)\n-{\n-  __m128 t1 = _mm_load_ps (i1);\n-  __m128 t2 = _mm_load_ps (i2);\n-\n-  t1 = _mm_hadd_ps (t1, t2);\n-\n-  _mm_storeu_ps (r, t1);\n-}\n-\n-static int\n-chk_ps(float *v1, float *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 4; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static float p1[4] __attribute__ ((aligned(16)));\n-static float p2[4] __attribute__ ((aligned(16)));\n-static float p3[4];\n-static float ck[4];\n-\n-static float vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST ()\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals[0]); i += 8)\n-    {\n-      p1[0] = vals[i+0];\n-      p1[1] = vals[i+1];\n-      p1[2] = vals[i+2];\n-      p1[3] = vals[i+3];\n-\n-      p2[0] = vals[i+4];\n-      p2[1] = vals[i+5];\n-      p2[2] = vals[i+6];\n-      p2[3] = vals[i+7];\n-\n-      ck[0] = p1[0] + p1[1];\n-      ck[1] = p1[2] + p1[3];\n-      ck[2] = p2[0] + p2[1];\n-      ck[3] = p2[2] + p2[3];\n-\n-      sse3_test_haddps (p1, p2, p3);\n-\n-      fail += chk_ps (ck, p3);\n-\n-      sse3_test_haddps_subsume (p1, p2, p3);\n-\n-      fail += chk_ps (ck, p3);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}, {"sha": "59c2e49642e9aac6f3cf33316043a3c8a76d30d7", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-hsubpd.c", "status": "modified", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-hsubpd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-hsubpd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-hsubpd.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -99,104 +99,3 @@ void TEST (void)\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_hsubpd_1\n-#endif\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_hsubpd (double *i1, double *i2, double *r)\n-{\n-  __m128d t1 = _mm_loadu_pd (i1);\n-  __m128d t2 = _mm_loadu_pd (i2);\n-\n-  t1 = _mm_hsub_pd (t1, t2);\n-\n-  _mm_storeu_pd (r, t1);\n-}\n-\n-static void\n-sse3_test_hsubpd_subsume (double *i1, double *i2, double *r)\n-{\n-  __m128d t1 = _mm_load_pd (i1);\n-  __m128d t2 = _mm_load_pd (i2);\n-\n-  t1 = _mm_hsub_pd (t1, t2);\n-\n-  _mm_storeu_pd (r, t1);\n-}\n-\n-static int\n-chk_pd (double *v1, double *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 2; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static double p1[2] __attribute__ ((aligned(16)));\n-static double p2[2] __attribute__ ((aligned(16)));\n-static double p3[2];\n-static double ck[2];\n-\n-static double vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST (void)\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals[0]); i += 4)\n-    {\n-      p1[0] = vals[i + 0];\n-      p1[1] = vals[i + 1];\n-\n-      p2[0] = vals[i + 2];\n-      p2[1] = vals[i + 3];\n-\n-      ck[0] = p1[0] - p1[1];\n-      ck[1] = p2[0] - p2[1];\n-\n-      sse3_test_hsubpd (p1, p2, p3);\n-\n-      fail += chk_pd (ck, p3);\n-\n-      sse3_test_hsubpd_subsume (p1, p2, p3);\n-\n-      fail += chk_pd (ck, p3);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}, {"sha": "b220dbb9960b31757d00e75372ab2e08f67efcd7", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-hsubps.c", "status": "modified", "additions": 0, "deletions": 107, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-hsubps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-hsubps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-hsubps.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -106,110 +106,3 @@ TEST ()\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_hsubps_1\n-#endif\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_hsubps (float *i1, float *i2, float *r)\n-{\n-  __m128 t1 = _mm_loadu_ps (i1);\n-  __m128 t2 = _mm_loadu_ps (i2);\n-\n-  t1 = _mm_hsub_ps (t1, t2);\n-\n-  _mm_storeu_ps (r, t1);\n-}\n-\n-static void\n-sse3_test_hsubps_subsume (float *i1, float *i2, float *r)\n-{\n-  __m128 t1 = _mm_load_ps (i1);\n-  __m128 t2 = _mm_load_ps (i2);\n-\n-  t1 = _mm_hsub_ps (t1, t2);\n-\n-  _mm_storeu_ps (r, t1);\n-}\n-\n-static int\n-chk_ps(float *v1, float *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 4; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static float p1[4] __attribute__ ((aligned(16)));\n-static float p2[4] __attribute__ ((aligned(16)));\n-static float p3[4];\n-static float ck[4];\n-\n-static float vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST ()\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals[0]); i += 8)\n-    {\n-      p1[0] = vals[i+0];\n-      p1[1] = vals[i+1];\n-      p1[2] = vals[i+2];\n-      p1[3] = vals[i+3];\n-\n-      p2[0] = vals[i+4];\n-      p2[1] = vals[i+5];\n-      p2[2] = vals[i+6];\n-      p2[3] = vals[i+7];\n-\n-      ck[0] = p1[0] - p1[1];\n-      ck[1] = p1[2] - p1[3];\n-      ck[2] = p2[0] - p2[1];\n-      ck[3] = p2[2] - p2[3];\n-\n-      sse3_test_hsubps (p1, p2, p3);\n-\n-      fail += chk_ps (ck, p3);\n-\n-      sse3_test_hsubps_subsume (p1, p2, p3);\n-\n-      fail += chk_ps (ck, p3);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}, {"sha": "cb5fba686116072edfd0188b816b321d967ad7b9", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-lddqu.c", "status": "modified", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-lddqu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-lddqu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-lddqu.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -78,82 +78,3 @@ TEST (void)\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_lddqu_1\n-#endif\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_lddqu (double *i1, double *r)\n-{\n-  __m128i t1 = _mm_lddqu_si128 ((__m128i *) i1);\n-\n-  _mm_storeu_si128 ((__m128i *) r, t1);\n-}\n-\n-static int\n-chk_pd (double *v1, double *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 2; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static double p1[2];\n-static double p2[2];\n-static double ck[2];\n-\n-static double vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST (void)\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals[0]); i += 2)\n-    {\n-      p1[0] = vals[i+0];\n-      p1[1] = vals[i+1];\n-\n-      sse3_test_lddqu (p1, p2);\n-\n-      ck[0] = p1[0];\n-      ck[1] = p1[1];\n-\n-      fail += chk_pd (ck, p2);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}, {"sha": "0345ca8de18f4b72bd9244f53324a0c6e949990c", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-movddup.c", "status": "modified", "additions": 0, "deletions": 134, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-movddup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-movddup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-movddup.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -133,137 +133,3 @@ TEST (void)\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_movddup_1\n-#endif\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_movddup_mem (double *i1, double *r)\n-{\n-  __m128d t1 = _mm_loaddup_pd (i1);\n-\n-  _mm_storeu_pd (r, t1);\n-}\n-\n-static double cnst1 [2] = {1.0, 1.0};\n-\n-static void\n-sse3_test_movddup_reg (double *i1, double *r)\n-{\n-  __m128d t1 = _mm_loadu_pd (i1);\n-  __m128d t2 = _mm_loadu_pd (&cnst1[0]);\n-\n-  t1  = _mm_mul_pd (t1, t2);\n-  t2  = _mm_movedup_pd (t1);\n-\n-  _mm_storeu_pd (r, t2);\n-}\n-\n-static void\n-sse3_test_movddup_reg_subsume_unaligned (double *i1, double *r)\n-{\n-  __m128d t1 = _mm_loadu_pd (i1);\n-  __m128d t2 = _mm_movedup_pd (t1);\n-\n-  _mm_storeu_pd (r, t2);\n-}\n-\n-static void\n-sse3_test_movddup_reg_subsume_ldsd (double *i1, double *r)\n-{\n-  __m128d t1 = _mm_load_sd (i1);\n-  __m128d t2 = _mm_movedup_pd (t1);\n-\n-  _mm_storeu_pd (r, t2);\n-}\n-\n-static void\n-sse3_test_movddup_reg_subsume (double *i1, double *r)\n-{\n-  __m128d t1 = _mm_load_pd (i1);\n-  __m128d t2 = _mm_movedup_pd (t1);\n-\n-  _mm_storeu_pd (r, t2);\n-}\n-\n-static int\n-chk_pd (double *v1, double *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 2; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static double p1[2] __attribute__ ((aligned(16)));\n-static double p2[2];\n-static double ck[2];\n-\n-static double vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST (void)\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals[0]); i += 1)\n-    {\n-      p1[0] = vals[i+0];\n-\n-      ck[0] = p1[0];\n-      ck[1] = p1[0];\n-\n-      sse3_test_movddup_mem (p1, p2);\n-\n-      fail += chk_pd (ck, p2);\n-\n-      sse3_test_movddup_reg (p1, p2);\n-\n-      fail += chk_pd (ck, p2);\n-\n-      sse3_test_movddup_reg_subsume (p1, p2);\n-\n-      fail += chk_pd (ck, p2);\n-\n-      sse3_test_movddup_reg_subsume_unaligned (p1, p2);\n-\n-      fail += chk_pd (ck, p2);\n-\n-      sse3_test_movddup_reg_subsume_ldsd (p1, p2);\n-\n-      fail += chk_pd (ck, p2);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}, {"sha": "3314ff62208fd352e2c7dbcba28fe187f0a87464", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-movshdup.c", "status": "modified", "additions": 0, "deletions": 97, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-movshdup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-movshdup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-movshdup.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -96,100 +96,3 @@ TEST (void)\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_movshdup_1\n-#endif\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_movshdup_reg (float *i1, float *r)\n-{\n-  __m128 t1 = _mm_loadu_ps (i1);\n-  __m128 t2 = _mm_movehdup_ps (t1);\n-\n-  _mm_storeu_ps (r, t2);\n-}\n-\n-static void\n-sse3_test_movshdup_reg_subsume (float *i1, float *r)\n-{\n-  __m128 t1 = _mm_load_ps (i1);\n-  __m128 t2 = _mm_movehdup_ps (t1);\n-\n-  _mm_storeu_ps (r, t2);\n-}\n-\n-static int\n-chk_ps (float *v1, float *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 4; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static float p1[4] __attribute__ ((aligned(16)));\n-static float p2[4];\n-static float ck[4];\n-\n-static float vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST (void)\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals[0]); i += 2)\n-    {\n-      p1[0] = 0.0;\n-      p1[1] = vals[i+0];\n-      p1[2] = 1.0;\n-      p1[3] = vals[i+1];\n-\n-      ck[0] = p1[1];\n-      ck[1] = p1[1];\n-      ck[2] = p1[3];\n-      ck[3] = p1[3];\n-\n-      sse3_test_movshdup_reg (p1, p2);\n-\n-      fail += chk_ps (ck, p2);\n-\n-      sse3_test_movshdup_reg_subsume (p1, p2);\n-\n-      fail += chk_ps (ck, p2);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}, {"sha": "154521e663a03bc69ea3484e0d464e1171f87691", "filename": "gcc/testsuite/gcc.target/powerpc/sse3-movsldup.c", "status": "modified", "additions": 0, "deletions": 97, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-movsldup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-movsldup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsse3-movsldup.c?ref=c6e8b0b3af4a2f1db9d1b13f54280c5401c53e4c", "patch": "@@ -96,100 +96,3 @@ TEST (void)\n   if (fail != 0)\n     abort ();\n }\n-/* { dg-do run } */\n-/* { dg-options \"-O3 -mpower8-vector -Wno-psabi\" } */\n-/* { dg-require-effective-target lp64 } */\n-/* { dg-require-effective-target p8vector_hw } */\n-\n-#ifndef CHECK_H\n-#define CHECK_H \"sse3-check.h\"\n-#endif\n-\n-#include CHECK_H\n-\n-#ifndef TEST\n-#define TEST sse3_test_movsldup_1\n-#endif\n-\n-#define NO_WARN_X86_INTRINSICS 1\n-#include <pmmintrin.h>\n-\n-static void\n-sse3_test_movsldup_reg (float *i1, float *r)\n-{\n-  __m128 t1 = _mm_loadu_ps (i1);\n-  __m128 t2 = _mm_moveldup_ps (t1);\n-\n-  _mm_storeu_ps (r, t2);\n-}\n-\n-static void\n-sse3_test_movsldup_reg_subsume (float *i1, float *r)\n-{\n-  __m128 t1 = _mm_load_ps (i1);\n-  __m128 t2 = _mm_moveldup_ps (t1);\n-\n-  _mm_storeu_ps (r, t2);\n-}\n-\n-static int\n-chk_ps (float *v1, float *v2)\n-{\n-  int i;\n-  int n_fails = 0;\n-\n-  for (i = 0; i < 4; i++)\n-    if (v1[i] != v2[i])\n-      n_fails += 1;\n-\n-  return n_fails;\n-}\n-\n-static float p1[4] __attribute__ ((aligned(16)));\n-static float p2[4];\n-static float ck[4];\n-\n-static float vals[] =\n-  {\n-    100.0,  200.0, 300.0, 400.0, 5.0, -1.0, .345, -21.5,\n-    1100.0, 0.235, 321.3, 53.40, 0.3, 10.0, 42.0, 32.52,\n-    32.6,   123.3, 1.234, 2.156, 0.1, 3.25, 4.75, 32.44,\n-    12.16,  52.34, 64.12, 71.13, -.1, 2.30, 5.12, 3.785,\n-    541.3,  321.4, 231.4, 531.4, 71., 321., 231., -531.,\n-    23.45,  23.45, 23.45, 23.45, 23.45, 23.45, 23.45, 23.45,\n-    23.45,  -1.43, -6.74, 6.345, -20.1, -20.1, -40.1, -40.1,\n-    1.234,  2.345, 3.456, 4.567, 5.678, 6.789, 7.891, 8.912,\n-    -9.32,  -8.41, -7.50, -6.59, -5.68, -4.77, -3.86, -2.95,\n-    9.32,  8.41, 7.50, 6.59, -5.68, -4.77, -3.86, -2.95\n-  };\n-\n-static void\n-TEST (void)\n-{\n-  int i;\n-  int fail = 0;\n-\n-  for (i = 0; i < sizeof (vals) / sizeof (vals[0]); i += 2)\n-    {\n-      p1[0] = vals[i+0];\n-      p1[1] = 0.0;\n-      p1[2] = vals[i+1];\n-      p1[3] = 1.0;\n-\n-      ck[0] = p1[0];\n-      ck[1] = p1[0];\n-      ck[2] = p1[2];\n-      ck[3] = p1[2];\n-\n-      sse3_test_movsldup_reg (p1, p2);\n-\n-      fail += chk_ps (ck, p2);\n-\n-      sse3_test_movsldup_reg_subsume (p1, p2);\n-\n-      fail += chk_ps (ck, p2);\n-    }\n-\n-  if (fail != 0)\n-    abort ();\n-}"}]}