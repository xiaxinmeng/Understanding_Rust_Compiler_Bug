{"sha": "39dabefd0e5e21b7829ec4ddf811ab19346983d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlkYWJlZmQwZTVlMjFiNzgyOWVjNGRkZjgxMWFiMTkzNDY5ODNkNw==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-06-05T20:33:22Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-06-05T20:33:22Z"}, "message": "c-common.c: Move to c-family/.\n\ngcc/ChangeLog:\n\t* c-common.c: Move to c-family/.\n\t* c-common.def: Likewise.\n\t* c-common.h: Likewise.\n\t* c-cppbuiltin.c: Likewise.\n\t* c-dump.c: Likewise.\n\t* c-format.c: Likewise.\n\t* c-format.h : Likewise.\n\t* c-gimplify.c: Likewise.\n\t* c-lex.c: Likewise.\n\t* c-omp.c: Likewise.\n\t* c.opt: Likewise.\n\t* c-opts.c: Likewise.\n\t* c-pch.c: Likewise.\n\t* c-ppoutput.c: Likewise.\n\t* c-pragma.c: Likewise.\n\t* c-pragma.h: Likewise.\n\t* c-pretty-print.c: Likewise.\n\t* c-pretty-print.h: Likewise.\n\t* c-semantics.c: Likewise.\n\t* stub-objc.c: Likewise.\n\n\t* gengtype.c (get_file_langdir): Special-case files in c-family/.\n\t(get_output_file_with_visibility): Fix name for c-common.h.\n\t* c-config-lang.in: Update paths in gtfiles for files in c-family/.\n\n\t* c-tree.h: Update include path for moved files.\n\t* c-lang.c: Likewise.\n\t* c-lang.h: Likewise.\n\t* c-parser.c: Likewise.\n\t* c-convert.c: Likewise.\n\t* c-decl.c: Likewise.\n\t* c-objc-common.c: Likewise.\n\t* configure.ac: Make sure c-family/ exists in the build directory.\n\t* configure: Regenerate.\n\t* Makefile.in: Update paths for moved files.  Regroup files per\n\tlocation and update dependencies.  Move generated_files down after\n\tALL_GTFILES_H.\n\n\t* config/spu/spu-c.c: Update paths for moved files.\n\t* config/mep/mep-pragma.c: Likewise.\n\t* config/darwin-c.c: Likewise.\n\t* config/i386/msformat-c.c: Likewise.\n\t* config/i386/i386-c.c: Likewise.\n\t* config/avr/avr-c.c: Likewise.\n\t* config/sol2-c.c: Likewise.\n\t* config/ia64/ia64-c.c: Likewise.\n\t* config/rs6000/rs6000-c.c: Likewise.\n\t* config/arm/arm.c: Likewise.\n\t* config/arm/arm-c.c: Likewise.\n\t* config/h8300/h8300.c: Likewise.\n\t* config/v850/v850-c.c: Likewise.\n\n\t* config/t-darwin: Fix dependencies for moved files.\n\t* config/t-sol2: Fix dependencies for moved files.\n\t* config/mep/t-mep: Fix dependencies for moved files.\n\t* config/ia64/t-ia64: Fix dependencies for moved files.\n\t* config/rs6000/t-rs6000: Fix dependencies for moved files.\n\t* config/v850/t-v850: Fix dependencies for moved files.\n\t* config/v850/t-v850e: Fix dependencies for moved files.\n\n\t* config/m32c/m32c-pragma.c\n\n\t* po/exgettext: Look in c-family/ also.\n\nc-family/ChangeLog:\n\t* c-common.c: Include gt-c-family-c-common.h.\n\t* c-pragma.c: Include gt-c-family-c-pragma.h.\n\nobjc/ChangeLog:\n\t* objc-act.c: Update include path for moved files.\n\t* objc-lang.c: Likewise.\n\t* config-lang.in: Update paths in gtfiles for files in c-family/.\n\nobjcp/ChangeLog:\n\t* objcp-lang.c: Update include path for moved files.\n\t* config-lang.in: Update paths in gtfiles for files in c-family/.\n\ncp/ChangeLog:\n\t* typeck.c: Update include path for moved files.\n\t* decl.c: Likewise.\n\t* rtti.c: Likewise.\n\t* cp-gimplify.c: Likewise.\n\t* cp-lang.c: Likewise.\n\t* pt.c: Likewise.\n\t* semantics.c: Likewise.\n\t* cxx-pretty-print.h: Likewise.\n\t* decl2.c: Likewise.\n\t* parser.c: Likewise.\n\t* cp-objcp-common.c: Likewise.\n\t* cp-tree.h: Likewise.\n\t* name-lookup.c: Likewise.\n\t* lex.c: Likewise.\n\t* name-lookup.h: Likewise.\n\t* config-lang.in: Update paths in gtfiles for files in c-family/.\n\t* Make-lang.in: Likewise.\n\nFrom-SVN: r160330", "tree": {"sha": "68de2ea9a7798604f2afa24cac397e87b3bf94d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68de2ea9a7798604f2afa24cac397e87b3bf94d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39dabefd0e5e21b7829ec4ddf811ab19346983d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39dabefd0e5e21b7829ec4ddf811ab19346983d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39dabefd0e5e21b7829ec4ddf811ab19346983d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39dabefd0e5e21b7829ec4ddf811ab19346983d7/comments", "author": null, "committer": null, "parents": [{"sha": "ad06ee51fe9e658817b79f5db44a431fc1854288", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad06ee51fe9e658817b79f5db44a431fc1854288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad06ee51fe9e658817b79f5db44a431fc1854288"}], "stats": {"total": 578, "additions": 372, "deletions": 206}, "files": [{"sha": "f9415a23f0c485ae002e07b9092fa0d241e5f5ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -1,3 +1,69 @@\n+2010-06-05  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c-common.c: Move to c-family/.\n+\t* c-common.def: Likewise.\n+\t* c-common.h: Likewise.\n+\t* c-cppbuiltin.c: Likewise.\n+\t* c-dump.c: Likewise.\n+\t* c-format.c: Likewise.\n+\t* c-format.h : Likewise.\n+\t* c-gimplify.c: Likewise.\n+\t* c-lex.c: Likewise.\n+\t* c-omp.c: Likewise.\n+\t* c.opt: Likewise.\n+\t* c-opts.c: Likewise.\n+\t* c-pch.c: Likewise.\n+\t* c-ppoutput.c: Likewise.\n+\t* c-pragma.c: Likewise.\n+\t* c-pragma.h: Likewise.\n+\t* c-pretty-print.c: Likewise.\n+\t* c-pretty-print.h: Likewise.\n+\t* c-semantics.c: Likewise.\n+\t* stub-objc.c: Likewise.\n+\n+\t* gengtype.c (get_file_langdir): Special-case files in c-family/.\n+\t(get_output_file_with_visibility): Fix name for c-common.h.\n+\t* c-config-lang.in: Update paths in gtfiles for files in c-family/.\n+\n+\t* c-tree.h: Update include path for moved files.\n+\t* c-lang.c: Likewise.\n+\t* c-lang.h: Likewise.\n+\t* c-parser.c: Likewise.\n+\t* c-convert.c: Likewise.\n+\t* c-decl.c: Likewise.\n+\t* c-objc-common.c: Likewise.\n+\t* configure.ac: Make sure c-family/ exists in the build directory.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Update paths for moved files.  Regroup files per\n+\tlocation and update dependencies.  Move generated_files down after\n+\tALL_GTFILES_H.\n+\n+\t* config/spu/spu-c.c: Update paths for moved files.\n+\t* config/mep/mep-pragma.c: Likewise.\n+\t* config/darwin-c.c: Likewise.\n+\t* config/i386/msformat-c.c: Likewise.\n+\t* config/i386/i386-c.c: Likewise.\n+\t* config/avr/avr-c.c: Likewise.\n+\t* config/sol2-c.c: Likewise.\n+\t* config/ia64/ia64-c.c: Likewise.\n+\t* config/rs6000/rs6000-c.c: Likewise.\n+\t* config/arm/arm.c: Likewise.\n+\t* config/arm/arm-c.c: Likewise.\n+\t* config/h8300/h8300.c: Likewise.\n+\t* config/v850/v850-c.c: Likewise.\n+\n+\t* config/t-darwin: Fix dependencies for moved files.\n+\t* config/t-sol2: Fix dependencies for moved files.\n+\t* config/mep/t-mep: Fix dependencies for moved files.\n+\t* config/ia64/t-ia64: Fix dependencies for moved files.\n+\t* config/rs6000/t-rs6000: Fix dependencies for moved files.\n+\t* config/v850/t-v850: Fix dependencies for moved files.\n+\t* config/v850/t-v850e: Fix dependencies for moved files.\n+\n+\t* config/m32c/m32c-pragma.c\n+\n+\t* po/exgettext: Look in c-family/ also.\n+\n 2010-06-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-ssa-dce.c (mark_last_stmt_necessary): New function."}, {"sha": "8d9b8082f16fd6ebeed7b93d9708bf1f1da8d8ea", "filename": "gcc/Makefile.in", "status": "modified", "additions": 154, "deletions": 124, "changes": 278, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -502,7 +502,7 @@ check_gcc_parallelize=execute.exp=execute/2* \\\n \t\t      compile.exp dg.exp \\\n \t\t      dg-torture.exp,builtins.exp \\\n \t\t      struct-layout-1.exp,unsorted.exp,stackalign.exp,i386.exp\n-lang_opt_files=@lang_opt_files@ $(srcdir)/c.opt $(srcdir)/common.opt\n+lang_opt_files=@lang_opt_files@ $(srcdir)/c-family/c.opt $(srcdir)/common.opt\n lang_specs_files=@lang_specs_files@\n lang_tree_files=@lang_tree_files@\n target_cpu_default=@target_cpu_default@\n@@ -873,11 +873,11 @@ FIXED_VALUE_H = fixed-value.h $(MACHMODE_H) double-int.h\n RTL_H = $(RTL_BASE_H) genrtl.h vecir.h\n PARAMS_H = params.h params.def\n BUILTINS_DEF = builtins.def sync-builtins.def omp-builtins.def\n-TREE_H = tree.h all-tree.def tree.def c-common.def $(lang_tree_files) \\\n-          $(MACHMODE_H) tree-check.h $(BUILTINS_DEF) \\\n-          $(INPUT_H) statistics.h $(VEC_H) treestruct.def $(HASHTAB_H) \\\n-          double-int.h alias.h $(SYMTAB_H) options.h vecir.h \\\n-\t  $(REAL_H) $(FIXED_VALUE_H)\n+TREE_H = tree.h all-tree.def tree.def c-family/c-common.def \\\n+\t$(lang_tree_files) $(MACHMODE_H) tree-check.h $(BUILTINS_DEF) \\\n+\t$(INPUT_H) statistics.h $(VEC_H) treestruct.def $(HASHTAB_H) \\\n+\tdouble-int.h alias.h $(SYMTAB_H) options.h vecir.h \\\n+\t$(REAL_H) $(FIXED_VALUE_H)\n REGSET_H = regset.h $(BITMAP_H) hard-reg-set.h\n BASIC_BLOCK_H = basic-block.h $(PREDICT_H) $(VEC_H) $(FUNCTION_H) cfghooks.h\n GIMPLE_H = gimple.h gimple.def gsstruct.def pointer-set.h $(VEC_H) \\\n@@ -917,8 +917,9 @@ GGC_H = ggc.h gtype-desc.h statistics.h\n TIMEVAR_H = timevar.h timevar.def\n INSN_ATTR_H = insn-attr.h $(INSN_ADDR_H)\n INSN_ADDR_H = $(srcdir)/insn-addr.h vecprim.h\n-C_COMMON_H = c-common.h $(SPLAY_TREE_H) $(CPPLIB_H) $(GGC_H) $(DIAGNOSTIC_CORE_H)\n-C_PRAGMA_H = c-pragma.h $(CPPLIB_H)\n+C_COMMON_H = c-family/c-common.h c-family/c-common.def \\\n+\t$(SPLAY_TREE_H) $(CPPLIB_H) $(GGC_H) $(DIAGNOSTIC_CORE_H)\n+C_PRAGMA_H = c-family/c-pragma.h $(CPPLIB_H)\n C_TREE_H = c-tree.h $(C_COMMON_H) $(TOPLEV_H) $(DIAGNOSTIC_H)\n SYSTEM_H = system.h hwint.h $(srcdir)/../include/libiberty.h \\\n \t$(srcdir)/../include/safe-ctype.h $(srcdir)/../include/filenames.h\n@@ -945,7 +946,8 @@ SSAEXPAND_H = ssaexpand.h $(TREE_SSA_LIVE_H)\n PRETTY_PRINT_H = pretty-print.h $(INPUT_H) $(OBSTACK_H)\n DIAGNOSTIC_CORE_H = diagnostic-core.h input.h diagnostic.def\n DIAGNOSTIC_H = diagnostic.h $(DIAGNOSTIC_CORE_H) $(PRETTY_PRINT_H)\n-C_PRETTY_PRINT_H = c-pretty-print.h $(PRETTY_PRINT_H) $(C_COMMON_H) $(TREE_H)\n+C_PRETTY_PRINT_H = c-family/c-pretty-print.h $(PRETTY_PRINT_H) \\\n+\t$(C_COMMON_H) $(TREE_H)\n SCEV_H = tree-scalar-evolution.h $(GGC_H) tree-chrec.h $(PARAMS_H)\n LAMBDA_H = lambda.h $(TREE_H) $(VEC_H) $(GGC_H)\n TREE_DATA_REF_H = tree-data-ref.h $(LAMBDA_H) omega.h graphds.h $(SCEV_H)\n@@ -1128,15 +1130,20 @@ FORTRAN_TARGET_OBJS=@fortran_target_objs@\n GCC_OBJS = gcc.o opts-common.o gcc-options.o diagnostic.o pretty-print.o \\\n   input.o\n \n+# Language-specific object files shared by all C-family front ends.\n+C_COMMON_OBJS = c-family/c-common.o c-family/c-cppbuiltin.o c-family/c-dump.o \\\n+  c-family/c-format.o c-family/c-gimplify.o c-family/c-lex.o \\\n+  c-family/c-omp.o c-family/c-opts.o c-family/c-pch.o \\\n+  c-family/c-ppoutput.o c-family/c-pragma.o c-family/c-pretty-print.o \\\n+  c-family/c-semantics.o c-family/c-ada-spec.o\n+\n # Language-specific object files for C and Objective C.\n-C_AND_OBJC_OBJS = attribs.o c-errors.o c-lex.o c-pragma.o c-decl.o c-typeck.o \\\n-  c-convert.o c-aux-info.o c-common.o c-opts.o c-format.o c-semantics.o \\\n-  c-ppoutput.o c-cppbuiltin.o \\\n-  c-objc-common.o c-dump.o c-pch.o c-parser.o $(C_TARGET_OBJS) \\\n-  c-gimplify.o tree-mudflap.o c-pretty-print.o c-omp.o c-ada-spec.o\n+C_AND_OBJC_OBJS = attribs.o c-errors.o c-decl.o c-typeck.o \\\n+  c-convert.o c-aux-info.o c-objc-common.o c-parser.o tree-mudflap.o \\\n+  $(C_COMMON_OBJS) $(C_TARGET_OBJS)\n \n # Language-specific object files for C.\n-C_OBJS = c-lang.o stub-objc.o $(C_AND_OBJC_OBJS)\n+C_OBJS = c-lang.o c-family/stub-objc.o $(C_AND_OBJC_OBJS)\n \n # Language-independent object files.\n # We put the insn-*.o files first so that a parallel make will build\n@@ -1571,7 +1578,7 @@ s-alltree: Makefile\n \trm -f tmp-all-tree.def\n \techo '#include \"tree.def\"' > tmp-all-tree.def\n \techo 'END_OF_BASE_TREE_CODES' >> tmp-all-tree.def\n-\techo '#include \"c-common.def\"' >> tmp-all-tree.def\n+\techo '#include \"c-family/c-common.def\"' >> tmp-all-tree.def\n \tltf=\"$(lang_tree_files)\"; for f in $$ltf; do \\\n \t  echo \"#include \\\"$$f\\\"\"; \\\n \tdone | sed 's|$(srcdir)/||' >> tmp-all-tree.def\n@@ -1970,62 +1977,58 @@ s-crt0:\t$(CRT0_S) $(MCRT0_S) $(GCC_PASSES) $(CONFIG_H)\n # Note that dependencies on obstack.h are not written\n # because that file is not part of GCC.\n \n-# C language specific files.\n-\n-c-errors.o: c-errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) $(TM_P_H)\n-c-parser.o : c-parser.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(GGC_H) $(TIMEVAR_H) $(C_TREE_H) $(INPUT_H) $(FLAGS_H) $(TOPLEV_H) output.h \\\n-    $(CPPLIB_H) gt-c-parser.h $(RTL_H) langhooks.h $(C_COMMON_H) $(C_PRAGMA_H) \\\n-    $(VEC_H) $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H)\n-\n srcextra: gcc.srcextra lang.srcextra\n \n gcc.srcextra: gengtype-lex.c\n \t-cp -p $^ $(srcdir)\n \n-incpath.o: incpath.c incpath.h $(CONFIG_H) $(SYSTEM_H) $(CPPLIB_H) \\\n-\t\tintl.h prefix.h coretypes.h $(TM_H) cppdefault.h $(TARGET_H) \\\n-\t\t$(MACHMODE_H)\n+# C language specific files.\n+c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(C_TREE_H) $(TREE_H) $(FLAGS_H) $(TOPLEV_H)\n \n-c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(RTL_H) $(C_TREE_H) $(GGC_H) $(TARGET_H) $(FLAGS_H) $(FUNCTION_H) output.h \\\n-    debug.h $(TOPLEV_H) intl.h $(TM_P_H) $(TREE_INLINE_H) $(TIMEVAR_H) \\\n-    opts.h $(C_PRAGMA_H) gt-c-decl.h $(CGRAPH_H) $(HASHTAB_H) libfuncs.h \\\n-    $(EXCEPT_H) $(LANGHOOKS_DEF_H) $(TREE_DUMP_H) $(C_COMMON_H) $(CPPLIB_H) \\\n-    $(DIAGNOSTIC_CORE_H) $(INPUT_H) langhooks.h tree-mudflap.h \\\n-    pointer-set.h tree-iterator.h c-lang.h $(PLUGIN_H) c-ada-spec.h\n-c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-    $(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h output.h $(EXPR_H) \\\n-    $(TOPLEV_H) langhooks.h $(TREE_FLOW_H) tree-iterator.h c-lang.h\n-c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(C_TREE_H) $(DIAGNOSTIC_CORE_H) \\\n-    langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h \\\n-    c-objc-common.h $(C_PRAGMA_H) c-common.def $(TREE_INLINE_H)\n-stub-objc.o : stub-objc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n-    $(C_COMMON_H)\n-c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(FIXED_VALUE_H) debug.h $(C_TREE_H) $(C_COMMON_H) $(SPLAY_TREE_H) \\\n-    $(C_PRAGMA_H) $(INPUT_H) intl.h $(FLAGS_H) $(TOPLEV_H) output.h \\\n-    $(CPPLIB_H) $(TARGET_H) $(TIMEVAR_H)\n-c-ppoutput.o : c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-    $(C_COMMON_H) $(TREE_H) $(CPPLIB_H) $(CPP_INTERNAL_H) $(C_PRAGMA_H)\n-c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-    $(TREE_H) $(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) \\\n-    langhooks.h $(GGC_H) $(C_PRETTY_PRINT_H) c-objc-common.h intl.h \\\n-    tree-pretty-print.h\n-c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-    $(C_TREE_H) $(FLAGS_H) $(TOPLEV_H)\n c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-    $(TREE_H) $(FLAGS_H) $(TOPLEV_H) $(C_COMMON_H) convert.h $(C_TREE_H) \\\n-    langhooks.h $(TARGET_H)\n-c-pragma.o: c-pragma.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-    $(TREE_H) $(FUNCTION_H) $(C_PRAGMA_H) $(TOPLEV_H) output.h $(TM_P_H) \\\n-    $(C_COMMON_H) $(TARGET_H) gt-c-pragma.h $(CPPLIB_H) $(FLAGS_H) $(DIAGNOSTIC_H) \\\n-    opts.h $(PLUGINS_H)\n+\t$(TREE_H) $(C_TREE_H) $(FLAGS_H) $(TOPLEV_H) $(C_COMMON_H) convert.h \\\n+\tlanghooks.h $(TARGET_H)\n+\n+c-decl.o : c-decl.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(TREE_H) $(C_TREE_H) $(GGC_H) $(TARGET_H) $(FLAGS_H) $(FUNCTION_H) \\\n+\toutput.h debug.h $(TOPLEV_H) intl.h $(TM_P_H) $(TREE_INLINE_H) $(TIMEVAR_H) \\\n+\topts.h $(C_PRAGMA_H) gt-c-decl.h $(CGRAPH_H) $(HASHTAB_H) libfuncs.h \\\n+\t$(EXCEPT_H) $(LANGHOOKS_DEF_H) $(TREE_DUMP_H) $(C_COMMON_H) $(CPPLIB_H) \\\n+\t$(DIAGNOSTIC_CORE_H) $(INPUT_H) langhooks.h tree-mudflap.h \\\n+\tpointer-set.h tree-iterator.h  $(PLUGIN_H) c-family/c-ada-spec.h\n+\n+c-errors.o: c-errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+\t$(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) $(TM_P_H)\n+\n+c-lang.o : c-lang.c c-objc-common.h \\\n+\t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+\t$(C_TREE_H) $(DIAGNOSTIC_CORE_H) \\\n+\tlanghooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h \\\n+\t$(C_PRAGMA_H) $(TREE_INLINE_H)\n+\n+c-objc-common.o : c-objc-common.c c-objc-common.h \\\n+\t$(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(TREE_H) $(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) \\\n+\tlanghooks.h $(GGC_H) $(C_PRETTY_PRINT_H) intl.h \\\n+\ttree-pretty-print.h\n+\n+c-parser.o : c-parser.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(TM_H) $(TREE_H) $(C_TREE_H) $(C_COMMON_H) $(C_PRAGMA_H) $(CPPLIB_H) \\\n+\t$(GGC_H) $(TIMEVAR_H) $(INPUT_H) $(FLAGS_H) $(TOPLEV_H) output.h \\\n+\tgt-c-parser.h langhooks.h \\\n+\t$(VEC_H) $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H)\n+\n+c-typeck.o : c-typeck.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h output.h $(EXPR_H) \\\n+\t$(TOPLEV_H) langhooks.h $(TREE_FLOW_H) tree-iterator.h\n+\n+\n+\n graph.o: graph.c $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) $(FLAGS_H) output.h \\\n     $(RTL_H) $(FUNCTION_H) hard-reg-set.h $(BASIC_BLOCK_H) graph.h $(OBSTACK_H) \\\n     $(CONFIG_H) $(EMIT_RTL_H)\n+\n sbitmap.o: sbitmap.c sbitmap.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(BASIC_BLOCK_H)\n ebitmap.o: ebitmap.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(EBITMAP_H) $(RTL_H) $(FLAGS_H) $(OBSTACK_H)\n@@ -2058,62 +2061,104 @@ lto-wrapper$(exeext): lto-wrapper.o intl.o $(LIBDEPS)\n lto-wrapper.o: lto-wrapper.c $(CONFIG_H) $(SYSTEM_H) defaults.h intl.h \\\n \t$(OBSTACK_H)\n \n-# A file used by all variants of C.\n-\n-c-common.o : c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+# Files used by all variants of C.\n+c-family/c-common.o : c-family/c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(TM_H) $(TREE_H) \\\n \t$(OBSTACK_H) $(C_COMMON_H) $(FLAGS_H) $(TOPLEV_H) output.h $(C_PRAGMA_H) \\\n \t$(GGC_H) $(EXPR_H) builtin-types.def builtin-attrs.def \\\n-\t$(DIAGNOSTIC_H) gt-c-common.h langhooks.h $(RTL_H) \\\n-\t$(TARGET_H) $(C_TREE_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n+\t$(DIAGNOSTIC_H) langhooks.h $(RTL_H) \\\n+\t$(TARGET_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n \tintl.h opts.h $(CPPLIB_H) $(TREE_INLINE_H) $(HASHTAB_H) \\\n \t$(BUILTINS_DEF) $(CGRAPH_H) $(BASIC_BLOCK_H) $(TARGET_DEF_H) \\\n-\tlibfuncs.h\n+\tlibfuncs.h \\\n+\tgt-c-family-c-common.h\n \n-c-pretty-print.o : c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n-\t$(C_TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(DIAGNOSTIC_H) tree-iterator.h intl.h tree-pretty-print.h\n+c-family/c-cppbuiltin.o : c-family/c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) \\\n+\tcoretypes.h $(TM_H) $(TREE_H) version.h $(C_COMMON_H) $(C_PRAGMA_H) \\\n+\t$(FLAGS_H) $(TOPLEV_H) output.h $(EXCEPT_H) $(TREE_H) $(TARGET_H) \\\n+\t$(TM_P_H) $(BASEVER) debug.h\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n+\t\t-DBASEVER=$(BASEVER_s) $< $(OUTPUT_OPTION)\n+\n+c-family/c-dump.o : c-family/c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(TM_H) $(TREE_H) $(TREE_DUMP_H)\n \n-c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+c-family/c-format.o : c-family/c-format.c c-family/c-format.h \\\n+\t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) langhooks.h \\\n+\t$(C_COMMON_H) $(FLAGS_H) $(TOPLEV_H) intl.h \\\n+\t$(DIAGNOSTIC_CORE_H) alloc-pool.h\n+\n+c-family/c-gimplify.o : c-family/c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n+\t$(C_COMMON_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) \\\n+\t$(FLAGS_H) langhooks.h $(TOPLEV_H) $(TREE_FLOW_H) $(LANGHOOKS_DEF_H) \\\n+\t$(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) $(BASIC_BLOCK_H) \\\n+\thard-reg-set.h $(TREE_DUMP_H) $(TREE_INLINE_H)\n+\n+c-family/c-lex.o : c-family/c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(TM_H) $(TREE_H) $(FIXED_VALUE_H) debug.h $(C_COMMON_H) $(SPLAY_TREE_H) \\\n+\t$(C_PRAGMA_H) $(INPUT_H) intl.h $(FLAGS_H) $(TOPLEV_H) output.h \\\n+\t$(CPPLIB_H) $(TARGET_H) $(TIMEVAR_H)\n+\n+c-family/c-omp.o : c-family/c-omp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(TREE_H) $(C_COMMON_H) $(TOPLEV_H) $(GIMPLE_H) langhooks.h\n+\n+c-family/c-opts.o : c-family/c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n         $(TREE_H) $(C_PRAGMA_H) $(FLAGS_H) $(TOPLEV_H) langhooks.h \\\n         $(DIAGNOSTIC_H) intl.h debug.h $(C_COMMON_H)\t\\\n-        opts.h options.h $(MKDEPS_H) incpath.h cppdefault.h $(C_TREE_H)\n+        opts.h options.h $(MKDEPS_H) incpath.h cppdefault.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n \n-c-cppbuiltin.o : c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) version.h $(C_COMMON_H) $(C_PRAGMA_H) $(FLAGS_H) \\\n-\t$(TOPLEV_H) output.h $(EXCEPT_H) $(TREE_H) $(TARGET_H) $(TM_P_H) \\\n-\t$(BASEVER) debug.h\n+c-family/c-pch.o : c-family/c-pch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(CPPLIB_H) $(TREE_H) $(C_COMMON_H) output.h $(TOPLEV_H) $(C_PRAGMA_H) \\\n+\t$(GGC_H) debug.h langhooks.h $(FLAGS_H) hosthooks.h version.h \\\n+\t$(TARGET_H) opts.h $(TIMEVAR_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n-\t\t-DBASEVER=$(BASEVER_s) $< $(OUTPUT_OPTION)\n+\t  -DHOST_MACHINE=\\\"$(host)\\\" -DTARGET_MACHINE=\\\"$(target)\\\" \\\n+\t  $< $(OUTPUT_OPTION)\n \n-# A file used by all variants of C and some other languages.\n+c-family/c-ppoutput.o : c-family/c-ppoutput.c $(CONFIG_H) $(SYSTEM_H) \\\n+\tcoretypes.h $(C_COMMON_H) $(TREE_H) $(CPPLIB_H) $(CPP_INTERNAL_H) \\\n+\t$(C_PRAGMA_H)\n \n-attribs.o : attribs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-\t$(FLAGS_H) $(TOPLEV_H) output.h $(GGC_H) $(TM_P_H) \\\n-\t$(TARGET_H) langhooks.h $(CPPLIB_H) $(PLUGIN_H)\n+c-family/c-pragma.o: c-family/c-pragma.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+\t$(TM_H) $(TREE_H) $(FUNCTION_H) $(C_PRAGMA_H) $(TOPLEV_H) output.h \\\n+\t$(TM_P_H) $(C_COMMON_H) $(TARGET_H) $(CPPLIB_H) $(FLAGS_H) \\\n+\t$(DIAGNOSTIC_H) opts.h $(PLUGINS_H) \\\n+\tgt-c-family-c-pragma.h\n \n-c-format.o : c-format.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) langhooks.h \\\n-\t$(C_COMMON_H) $(FLAGS_H) $(TOPLEV_H) intl.h $(DIAGNOSTIC_CORE_H) alloc-pool.h \\\n-\tc-format.h\n+c-family/c-pretty-print.o : c-family/c-pretty-print.c $(C_PRETTY_PRINT_H) \\\n+\t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n+\t$(DIAGNOSTIC_H) tree-iterator.h intl.h tree-pretty-print.h\n \n-c-semantics.o : c-semantics.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-\t$(TREE_H) $(FLAGS_H) $(TOPLEV_H) output.h $(C_COMMON_H) $(FUNCTION_H) \\\n-\tlanghooks.h $(SPLAY_TREE_H) $(TIMEVAR_H) tree-iterator.h\n+c-family/c-semantics.o : c-family/c-semantics.c $(CONFIG_H) $(SYSTEM_H) \\\n+\tcoretypes.h $(TM_H) $(TREE_H) $(FLAGS_H) $(TOPLEV_H) output.h \\\n+\t$(C_COMMON_H) $(FUNCTION_H) langhooks.h $(SPLAY_TREE_H) $(TIMEVAR_H) \\\n+\ttree-iterator.h\n \n-c-dump.o : c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-\t$(C_TREE_H) $(TREE_DUMP_H)\n+c-family/c-ada-spec.o : c-family/c-ada-spec.c c-family/c-ada-spec.h \\\n+\t$(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPP_ID_DATA_H) $(TM_H) \\\n+\tcoretypes.h tree-iterator.h tree-pass.h output.h\n+\n+c-family/stub-objc.o : c-family/stub-objc.c $(CONFIG_H) $(SYSTEM_H) \\\n+\tcoretypes.h $(TREE_H) $(C_COMMON_H)\n \n-c-pch.o : c-pch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(CPPLIB_H) $(TREE_H) \\\n-\t$(C_COMMON_H) output.h $(TOPLEV_H) $(C_PRAGMA_H) $(GGC_H) debug.h \\\n-\tlanghooks.h $(FLAGS_H) hosthooks.h version.h $(TARGET_H) opts.h \\\n-\t$(TIMEVAR_H)\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n-\t  -DHOST_MACHINE=\\\"$(host)\\\" -DTARGET_MACHINE=\\\"$(target)\\\" \\\n-\t  $< $(OUTPUT_OPTION)\n \n-c-omp.o : c-omp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\\n-\t$(C_COMMON_H) $(TOPLEV_H) $(GIMPLE_H) langhooks.h\n+# Files used by all variants of C and some other languages.\n+\n+attribs.o : attribs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n+\t$(FLAGS_H) $(TOPLEV_H) output.h $(GGC_H) $(TM_P_H) \\\n+\t$(TARGET_H) langhooks.h $(CPPLIB_H) $(PLUGIN_H)\n+\n+incpath.o: incpath.c incpath.h $(CONFIG_H) $(SYSTEM_H) $(CPPLIB_H) \\\n+\t\tintl.h prefix.h coretypes.h $(TM_H) cppdefault.h $(TARGET_H) \\\n+\t\t$(MACHMODE_H)\n+\n+prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) prefix.h \\\n+\tMakefile $(BASEVER)\n+\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n+\t-DPREFIX=\\\"$(prefix)\\\" -DBASEVER=$(BASEVER_s) \\\n+\t  -c $(srcdir)/prefix.c $(OUTPUT_OPTION)\n \n # Language-independent files.\n \n@@ -2216,12 +2261,6 @@ ggc-none.o: ggc-none.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GGC_H) \\\n stringpool.o: stringpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) $(GGC_H) gt-stringpool.h $(CPPLIB_H) $(SYMTAB_H)\n \n-prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) prefix.h \\\n-\tMakefile $(BASEVER)\n-\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n-\t-DPREFIX=\\\"$(prefix)\\\" -DBASEVER=$(BASEVER_s) \\\n-\t  -c $(srcdir)/prefix.c $(OUTPUT_OPTION)\n-\n convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(FLAGS_H) convert.h $(TOPLEV_H) langhooks.h\n \n@@ -2560,11 +2599,6 @@ tree-optimize.o : tree-optimize.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_INLINE_H) tree-mudflap.h $(GGC_H) graph.h $(CGRAPH_H) \\\n    $(TREE_PASS_H) $(CFGLOOP_H) $(EXCEPT_H) $(REGSET_H)\n \n-c-gimplify.o : c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n-   $(C_TREE_H) $(C_COMMON_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) \\\n-   $(FLAGS_H) langhooks.h $(TOPLEV_H) $(RTL_H) $(TREE_FLOW_H) $(LANGHOOKS_DEF_H) \\\n-   $(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) $(BASIC_BLOCK_H) \\\n-   hard-reg-set.h $(TREE_DUMP_H) $(TREE_INLINE_H)\n gimplify.o : gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(GIMPLE_H) \\\n    $(DIAGNOSTIC_H) $(GIMPLE_H) $(TREE_INLINE_H) langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(TREE_FLOW_H) $(CGRAPH_H) $(TIMEVAR_H) $(TM_H) \\\n@@ -2744,10 +2778,6 @@ tree-pretty-print.o : tree-pretty-print.c $(CONFIG_H) $(SYSTEM_H) \\\n    $(TREE_PASS_H) value-prof.h output.h tree-pretty-print.h\n tree-diagnostic.o : tree-diagnostic.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TREE_H) $(DIAGNOSTIC_H) tree-diagnostic.h langhooks.h $(LANGHOOKS_DEF_H)\n-c-ada-spec.o : c-ada-spec.c c-ada-spec.h $(CONFIG_H) $(SYSTEM_H) \\\n-   $(TREE_H) $(REAL_H) $(HASHTAB_H) $(TREE_FLOW_H) \\\n-   $(CPP_ID_DATA_H) $(TM_H) coretypes.h tree-iterator.h tree-pass.h \\\n-   value-prof.h fixed-value.h output.h\n fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FLAGS_H) $(TOPLEV_H) $(HASHTAB_H) $(EXPR_H) $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) langhooks.h $(MD5_H) intl.h $(TARGET_H) \\\n@@ -3553,16 +3583,6 @@ $(simple_generated_c:insn-%.c=s-%): s-%: build/gen%$(build_exeext) \\\n \t$(SHELL) $(srcdir)/../move-if-change tmp-$*.c insn-$*.c\n \t$(STAMP) s-$*\n \n-generated_files = config.h tm.h $(TM_P_H) $(TM_H) multilib.h \\\n-       $(simple_generated_h) specs.h \\\n-       tree-check.h genrtl.h insn-modes.h tm-preds.h tm-constrs.h \\\n-       $(ALL_GTFILES_H) gtype-desc.c gtype-desc.h gcov-iov.h\n-\n-# In order for parallel make to really start compiling the expensive\n-# objects from $(OBJS-common) as early as possible, build all their\n-# prerequisites strictly before all objects.\n-$(ALL_HOST_OBJS) : | $(generated_files)\n-\n # genconstants needs to run before insn-conditions.md is available\n # (because the constants may be used in the conditions).\n insn-constants.h: s-constants; @true\n@@ -3721,6 +3741,16 @@ s-gtype: build/gengtype$(build_exeext) $(filter-out [%], $(GTFILES)) \\\n \t$(RUN_GEN) build/gengtype$(build_exeext) $(srcdir) gtyp-input.list\n \t$(STAMP) s-gtype\n \n+generated_files = config.h tm.h $(TM_P_H) $(TM_H) multilib.h \\\n+       $(simple_generated_h) specs.h \\\n+       tree-check.h genrtl.h insn-modes.h tm-preds.h tm-constrs.h \\\n+       $(ALL_GTFILES_H) gtype-desc.c gtype-desc.h gcov-iov.h\n+\n+# In order for parallel make to really start compiling the expensive\n+# objects from $(OBJS-common) as early as possible, build all their\n+# prerequisites strictly before all objects.\n+$(ALL_HOST_OBJS) : | $(generated_files)\n+\n #\f\n # How to compile object files to run on the build machine.\n "}, {"sha": "2565186b10d29ec27cd7eb10cff232b0f4884875", "filename": "gcc/c-config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-config-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-config-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-config-lang.in?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -22,4 +22,4 @@\n # files used by C that have garbage collection GTY macros in them\n # which therefore need to be scanned by gengtype.c.\n \n-gtfiles=\"\\$(srcdir)/c-lang.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-common.c \\$(srcdir)/c-common.h \\$(srcdir)/c-pragma.h \\$(srcdir)/c-pragma.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-parser.c \\$(srcdir)/c-lang.h\"\n+gtfiles=\"\\$(srcdir)/c-lang.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-parser.c \\$(srcdir)/c-lang.h\""}, {"sha": "4de3cdb1c57bab890713fc60d93c8985029adbaa", "filename": "gcc/c-convert.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-convert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-convert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-convert.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -31,7 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"convert.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"c-tree.h\"\n #include \"langhooks.h\"\n #include \"toplev.h\""}, {"sha": "2485bf44c107101f1df9f43a6cc8e93c80c38ba0", "filename": "gcc/c-decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -45,8 +45,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"debug.h\"\n #include \"opts.h\"\n #include \"timevar.h\"\n-#include \"c-common.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-common.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"c-lang.h\"\n #include \"langhooks.h\"\n #include \"tree-mudflap.h\"\n@@ -58,7 +58,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks-def.h\"\n #include \"pointer-set.h\"\n #include \"plugin.h\"\n-#include \"c-ada-spec.h\"\n+#include \"c-family/c-ada-spec.h\"\n \n /* In grokdeclarator, distinguish syntactic contexts of declarators.  */\n enum decl_context"}, {"sha": "f250139ed4d5334a9437122f8f1206a8ed634f70", "filename": "gcc/c-family/ChangeLog", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -0,0 +1,31 @@\n+2010-06-05  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c-common.c: Moved to here from parent directory. \n+\t* c-common.def: Likewise.\n+\t* c-common.h: Likewise.\n+\t* c-cppbuiltin.c: Likewise.\n+\t* c-dump.c: Likewise.\n+\t* c-format.c: Likewise.\n+\t* c-format.h : Likewise.\n+\t* c-gimplify.c: Likewise.\n+\t* c-lex.c: Likewise.\n+\t* c-omp.c: Likewise.\n+\t* c.opt: Likewise.\n+\t* c-opts.c: Likewise.\n+\t* c-pch.c: Likewise.\n+\t* c-ppoutput.c: Likewise.\n+\t* c-pragma.c: Likewise.\n+\t* c-pragma.h: Likewise.\n+\t* c-pretty-print.c: Likewise.\n+\t* c-pretty-print.h: Likewise.\n+\t* c-semantics.c: Likewise.\n+\t* stub-objc.c: Likewise.\n+\n+\t* c-common.c: Include gt-c-family-c-common.h.\n+\t* c-pragma.c: Include gt-c-family-c-pragma.h.\n+\f\n+Copyright (C) 2010 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "697b9633afd4966e244473a4758f22083b1e1eee", "filename": "gcc/c-family/c-ada-spec.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-ada-spec.c"}, {"sha": "8aed158678cdc73690d07a7a2f67e0117416384e", "filename": "gcc/c-family/c-ada-spec.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-ada-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-ada-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-ada-spec.h"}, {"sha": "1053c2bfaecf41f64988a3a99ec9f7f078fe89e3", "filename": "gcc/c-family/c-common.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -9463,4 +9463,4 @@ make_tree_vector_copy (const VEC(tree,gc) *orig)\n   return ret;\n }\n \n-#include \"gt-c-common.h\"\n+#include \"gt-c-family-c-common.h\"", "previous_filename": "gcc/c-common.c"}, {"sha": "1c593633e12051636fa69eac1d94e357067d8c33", "filename": "gcc/c-family/c-common.def", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-common.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-common.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.def?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-common.def"}, {"sha": "289d70c6be231f267554395f78bdc3cffbaaa6a0", "filename": "gcc/c-family/c-common.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-common.h"}, {"sha": "6bbdb460e7ad5b7e0945ed86009c3e38bdc9175d", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-cppbuiltin.c"}, {"sha": "71e872e22cbf420fdf92892e7554d457947cbb52", "filename": "gcc/c-family/c-dump.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-dump.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-dump.c"}, {"sha": "2c73ead370ce486231d98cb7c89fe53a051ba3d7", "filename": "gcc/c-family/c-format.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-format.c"}, {"sha": "9d01f0af495456caceb20c79323fa9bb3a4d1f6e", "filename": "gcc/c-family/c-format.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-format.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-format.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-format.h"}, {"sha": "06963a05e71c7a9f92f62f1c04b2684f63a00e5f", "filename": "gcc/c-family/c-gimplify.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-gimplify.c"}, {"sha": "5af574db22601addebb05e4677f9af954a66f1b4", "filename": "gcc/c-family/c-lex.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-lex.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-lex.c"}, {"sha": "31970bdeaeebab72a95db3919ff2eeb5caaa7745", "filename": "gcc/c-family/c-omp.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-omp.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-omp.c"}, {"sha": "08592f58e4b9e4c50503712c81685750b6369534", "filename": "gcc/c-family/c-opts.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-opts.c"}, {"sha": "951ab1fc303bd0c2e69a86bcc3e3ed5737f7405f", "filename": "gcc/c-family/c-pch.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pch.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-pch.c"}, {"sha": "1700fae3ed01e7bb32c066b88bf3512581cc36ce", "filename": "gcc/c-family/c-ppoutput.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-ppoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-ppoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ppoutput.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-ppoutput.c"}, {"sha": "a48bf4fc50e62eb6a8ac9c9808872f83a0729f9b", "filename": "gcc/c-family/c-pragma.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -1333,4 +1333,4 @@ init_pragma (void)\n   invoke_plugin_callbacks (PLUGIN_PRAGMAS, NULL);\n }\n \n-#include \"gt-c-pragma.h\"\n+#include \"gt-c-family-c-pragma.h\"", "previous_filename": "gcc/c-pragma.c"}, {"sha": "eab23db6cd9a6ce79deafee99190828bfab6eef6", "filename": "gcc/c-family/c-pragma.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-pragma.h"}, {"sha": "7f4b2388f43e1fb53cbccadcf1cbfae7202b4cf4", "filename": "gcc/c-family/c-pretty-print.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-pretty-print.c"}, {"sha": "60ef0bc375e04da56fe57bf0576f6e2f5c65ebff", "filename": "gcc/c-family/c-pretty-print.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-pretty-print.h"}, {"sha": "683655f77c01d219034629daa4e1ff2e92ffb9c5", "filename": "gcc/c-family/c-semantics.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-semantics.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c-semantics.c"}, {"sha": "01d6428ea6aedff217c9d54b0b290caeaecea40d", "filename": "gcc/c-family/c.opt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/c.opt"}, {"sha": "b7748f79c6e56e1719dace8611765c951642b477", "filename": "gcc/c-family/stub-objc.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fstub-objc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-family%2Fstub-objc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fstub-objc.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "previous_filename": "gcc/stub-objc.c"}, {"sha": "45a764f20e2192eabc274b71f12ca8e3f1d106bf", "filename": "gcc/c-lang.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -26,13 +26,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\"\n #include \"tree-inline.h\"\n #include \"diagnostic-core.h\"\n #include \"c-objc-common.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n \n enum c_language_kind c_language = clk_c;\n "}, {"sha": "c0bdc7cb9e5b2b77ed8a42c94418705f89a17da5", "filename": "gcc/c-lang.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-lang.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-lang.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -21,7 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_C_LANG_H\n #define GCC_C_LANG_H\n \n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"ggc.h\"\n \n struct GTY(()) lang_type {"}, {"sha": "0bb252f5765ec2fdf3f9bdc09e0cc7cdbcec21fb", "filename": "gcc/c-objc-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -24,7 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"intl.h\"\n-#include \"c-pretty-print.h\"\n+#include \"c-family/c-pretty-print.h\"\n #include \"flags.h\"\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\""}, {"sha": "56d5d83eccdf074004c531f08ca6e87d4048c8af", "filename": "gcc/c-parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -46,13 +46,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"input.h\"\n #include \"cpplib.h\"\n #include \"timevar.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"c-tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"vec.h\"\n #include \"target.h\"\n #include \"cgraph.h\""}, {"sha": "a607ecdeda6da49db616f03b489badae40e310b2", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_C_TREE_H\n #define GCC_C_TREE_H\n \n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"toplev.h\"\n #include \"diagnostic.h\"\n "}, {"sha": "786a7a3587fdd9e03562c78a5437df0d51e5633b", "filename": "gcc/config/arm/arm-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Farm%2Farm-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Farm%2Farm-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -23,7 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"tree.h\"\n #include \"output.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n \n \n /* Output C specific EABI object attributes.  These can not be done in"}, {"sha": "31c13543e908727ced60f3425899c4e4d014ed64", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -45,7 +45,7 @@\n #include \"cgraph.h\"\n #include \"ggc.h\"\n #include \"except.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\t/* ??? */\n #include \"integrate.h\"\n #include \"tm_p.h\"\n #include \"target.h\""}, {"sha": "22724c1de6352317eacdd66657cad92396d4b437", "filename": "gcc/config/avr/avr-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Favr%2Favr-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Favr%2Favr-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -26,7 +26,7 @@\n #include \"tm_p.h\"\r\n #include \"cpplib.h\"\r\n #include \"tree.h\"\r\n-#include \"c-common.h\"\r\n+#include \"c-family/c-common.h\"\r\n \r\n /* Not included in avr.c since this requires C front end.  */\r\n \r"}, {"sha": "6221ab3be1be24c0c43c1ab5298913a45bec86da", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -25,9 +25,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n-#include \"c-pragma.h\"\n #include \"incpath.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"toplev.h\"\n #include \"flags.h\"\n #include \"tm_p.h\""}, {"sha": "5773fb15b51e0d8e20d06f07b023a4b61ea47f7d", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -39,7 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"optabs.h\"\n #include \"toplev.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\t/* ??? */\n #include \"tm_p.h\"\n #include \"ggc.h\"\n #include \"target.h\""}, {"sha": "1b89a0b428fab0479e538cdae838f2f7066bfda2", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -25,12 +25,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"ggc.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"cpplib.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n \n static bool ix86_pragma_target_parse (tree, tree);\n static void ix86_target_macros_internal"}, {"sha": "635c2ca6b62be81edb0ac3ab586c8743ab9b7674", "filename": "gcc/config/i386/msformat-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmsformat-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -25,12 +25,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"toplev.h\"\n #include \"intl.h\"\n #include \"diagnostic.h\"\n #include \"langhooks.h\"\n-#include \"c-format.h\"\n+#include \"c-family/c-format.h\"\n #include \"alloc-pool.h\"\n \n /* Mingw specific format attributes ms_printf, ms_scanf, and ms_strftime.  */"}, {"sha": "7a0bdd7a3cd3285990147af03c8e1081e1917b02", "filename": "gcc/config/ia64/ia64-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fia64%2Fia64-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fia64%2Fia64-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -24,8 +24,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cpplib.h\"\n-#include \"c-common.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-common.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"toplev.h\"\n #include \"tm_p.h\"\n "}, {"sha": "212bef7cfabea64b2805c68f8f653c0433647361", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -46,7 +46,7 @@ LIB2ADDEH = $(srcdir)/config/ia64/unwind-ia64.c $(srcdir)/unwind-sjlj.c \\\n   $(srcdir)/unwind-c.c\n \n ia64-c.o: $(srcdir)/config/ia64/ia64-c.c $(CONFIG_H) $(SYSTEM_H) \\\n-    coretypes.h $(TM_H) $(TREE_H) $(CPPLIB_H) $(C_COMMON_H) c-pragma.h toplev.h\n+    coretypes.h $(TM_H) $(TREE_H) $(CPPLIB_H) $(C_COMMON_H) $(C_PRAGMA_H) toplev.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/ia64/ia64-c.c\n "}, {"sha": "e2fef7e571c11154cdd5774299eb7be01d864cc3", "filename": "gcc/config/m32c/m32c-pragma.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c-pragma.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -26,7 +26,7 @@\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"toplev.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"cpplib.h\"\n #include \"hard-reg-set.h\"\n #include \"output.h\""}, {"sha": "1d79a3bd19f7bdb56f53823dc556396cc99ad0ae", "filename": "gcc/config/mep/mep-pragma.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep-pragma.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"toplev.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"cpplib.h\"\n #include \"hard-reg-set.h\"\n #include \"output.h\""}, {"sha": "9608d6c46d321363a8a17729e150a854f25c85ca", "filename": "gcc/config/mep/t-mep", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fmep%2Ft-mep", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fmep%2Ft-mep", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Ft-mep?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -33,7 +33,7 @@ CRTSTUFF_CFLAGS = -O0 $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n TCFLAGS = -mlibrary\n \n mep-pragma.o: $(srcdir)/config/mep/mep-pragma.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(TM_H) $(TREE_H) $(RTL_H) toplev.h c-pragma.h \\\n+\tcoretypes.h $(TM_H) $(TREE_H) $(RTL_H) toplev.h $(C_PRAGMA_H) \\\n \t$(CPPLIB_H) hard-reg-set.h output.h $(srcdir)/config/mep/mep-protos.h \\\n \tfunction.h insn-config.h reload.h $(TARGET_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "20f594a33e986dc18ee27136c3bfdc8ad1839663", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -27,8 +27,8 @@\n #include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n-#include \"c-common.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-common.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"toplev.h\"\n #include \"tm_p.h\"\n #include \"target.h\""}, {"sha": "8066c890eb11d5352987da361a5460fd9291ee60", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -32,7 +32,7 @@ rs6000.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n rs6000-c.o: $(srcdir)/config/rs6000/rs6000-c.c \\\n     $(srcdir)/config/rs6000/rs6000-protos.h \\\n     $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(CPPLIB_H) \\\n-    $(TM_P_H) c-pragma.h errors.h coretypes.h $(TM_H)\n+    $(TM_P_H) $(C_PRAGMA_H) errors.h coretypes.h $(TM_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/rs6000/rs6000-c.c\n "}, {"sha": "f53fc32acced46ee97b5f721458fcac319136822", "filename": "gcc/config/sol2-c.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fsol2-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fsol2-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -26,12 +26,12 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"toplev.h\"\n \n-#include \"c-format.h\"\n+#include \"c-family/c-format.h\"\n #include \"intl.h\"\n \n #include \"cpplib.h\"\n-#include \"c-pragma.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-pragma.h\"\n+#include \"c-family/c-common.h\"\n \n /* cmn_err only accepts \"l\" and \"ll\".  */\n static const format_length_info cmn_err_length_specs[] ="}, {"sha": "ce5f92d94db6fa9118df20faee1801a2a3cd4beb", "filename": "gcc/config/spu/spu-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fspu%2Fspu-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fspu%2Fspu-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -20,8 +20,8 @@\n #include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n-#include \"c-common.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-common.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"tm_p.h\"\n #include \"langhooks.h\"\n \f"}, {"sha": "b538ccfa4052c893182355f4905376fec54bffc3", "filename": "gcc/config/t-darwin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-darwin?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -26,7 +26,7 @@ darwin.o: $(srcdir)/config/darwin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h     \\\n \t\t$(srcdir)/config/darwin.c\n \n darwin-c.o: $(srcdir)/config/darwin-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h toplev.h $(TM_P_H) \\\n+  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) toplev.h $(TM_P_H) \\\n   incpath.h flags.h $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/darwin-c.c $(PREPROCESSOR_DEFINES)"}, {"sha": "6112f2db8b52a571941f06b048827ebe74d042fa", "filename": "gcc/config/t-sol2", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-sol2?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -18,8 +18,8 @@\n \n # Solaris-specific format checking and pragmas\n sol2-c.o: $(srcdir)/config/sol2-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  tree.h c-format.h intl.h $(CPPLIB_H) c-pragma.h $(TM_H) $(TM_P_H) \\\n-  toplev.h $(C_COMMON_H)\n+  tree.h c-family/c-format.h $(C_PRAGMA_H) $(C_COMMON_H) $(CPPLIB_H) \\\n+  intl.h $(TM_H) $(TM_P_H) toplev.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(srcdir)/config/sol2-c.c\n "}, {"sha": "139ec5b40d5d47916666c7efdf4d5ca4d18ad1f8", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -108,7 +108,7 @@ MULTILIB_MATCHES  = mv850e=mv850e1\n TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n \n v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h toplev.h $(GGC_H) $(TM_P_H)\n+  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) toplev.h $(GGC_H) $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/v850/v850-c.c \n "}, {"sha": "f0e9c6f6e5c70782055ad2e4893a5c4969231404", "filename": "gcc/config/v850/t-v850e", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fv850%2Ft-v850e", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fv850%2Ft-v850e", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850e?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -106,7 +106,7 @@ INSTALL_LIBGCC    = install-multilib\n TCFLAGS = -mno-app-regs -msmall-sld -Wa,-mwarn-signed-overflow -Wa,-mwarn-unsigned-overflow\n \n v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(TM_H) $(CPPLIB_H) $(TREE_H) c-pragma.h toplev.h $(GGC_H) $(TM_P_H)\n+  $(TM_H) $(CPPLIB_H) $(TREE_H) $(C_PRAGMA_H) toplev.h $(GGC_H) $(TM_P_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/v850/v850-c.c \n "}, {"sha": "c3c3815492ee65b62d154c1ad9b90215d9aa089e", "filename": "gcc/config/v850/v850-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fv850%2Fv850-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfig%2Fv850%2Fv850-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-c.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -25,7 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"cpplib.h\"\n #include \"tree.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n #include \"tm_p.h\""}, {"sha": "97642e8a164a92a81ce7c4d2e68cd478834faa47", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -26906,7 +26906,7 @@ case ${CONFIG_HEADERS} in\n   echo > cstamp-h ;;\n esac\n # Make sure all the subdirs exist.\n-for d in $subdirs doc build\n+for d in $subdirs doc build c-family\n do\n     test -d $d || mkdir $d\n done"}, {"sha": "ebf291040c9c688c38f420b1b25773ee8a5b676e", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -4638,7 +4638,7 @@ case ${CONFIG_HEADERS} in\n   echo > cstamp-h ;;\n esac\n # Make sure all the subdirs exist.\n-for d in $subdirs doc build\n+for d in $subdirs doc build c-family\n do\n     test -d $d || mkdir $d\n done"}, {"sha": "d75030e8c06b4a9f196c39ee6e2feaff7f4f5bd8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -1,3 +1,23 @@\n+2010-06-05  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* typeck.c: Update include path for moved files.\n+\t* decl.c: Likewise.\n+\t* rtti.c: Likewise.\n+\t* cp-gimplify.c: Likewise.\n+\t* cp-lang.c: Likewise.\n+\t* pt.c: Likewise.\n+\t* semantics.c: Likewise.\n+\t* cxx-pretty-print.h: Likewise.\n+\t* decl2.c: Likewise.\n+\t* parser.c: Likewise.\n+\t* cp-objcp-common.c: Likewise.\n+\t* cp-tree.h: Likewise.\n+\t* name-lookup.c: Likewise.\n+\t* lex.c: Likewise.\n+\t* name-lookup.h: Likewise.\n+\t* config-lang.in: Update paths in gtfiles for files in c-family/.\n+\t* Make-lang.in: Likewise.\n+\n 2010-06-04  Magnus Fromreide  <magfr@lysator.liu.se>\n \n \t* cvt.c (cp_convert_to_pointer): Use null_ptr_cst_p."}, {"sha": "bfccd72d5d8231461f2b933dd2d9183109ba3aab", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -71,10 +71,8 @@ g++-cross$(exeext): g++$(exeext)\n \n # The compiler itself.\n # Shared with C front end:\n-CXX_C_OBJS = attribs.o c-common.o c-format.o c-pragma.o c-semantics.o c-lex.o \\\n-\tc-dump.o $(CXX_TARGET_OBJS) c-pretty-print.o c-opts.o c-pch.o \\\n-\tincpath.o c-ppoutput.o c-cppbuiltin.o prefix.o \\\n-\tc-gimplify.o c-omp.o c-ada-spec.o\n+CXX_C_OBJS = attribs.o incpath.o prefix.o \\\n+\t$(C_COMMON_OBJS) $(CXX_TARGET_OBJS)\n \n # Language-specific object files for C++ and Objective C++.\n CXX_AND_OBJCXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\\n@@ -85,7 +83,7 @@ CXX_AND_OBJCXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\\n  cp/cp-gimplify.o tree-mudflap.o $(CXX_C_OBJS)\n \n # Language-specific object files for C++.\n-CXX_OBJS = cp/cp-lang.o stub-objc.o $(CXX_AND_OBJCXX_OBJS)\n+CXX_OBJS = cp/cp-lang.o c-family/stub-objc.o $(CXX_AND_OBJCXX_OBJS)\n \n c++_OBJS = $(CXX_OBJS) dummy-checksum.o cc1plus-checksum.o cp/g++spec.o\n \n@@ -260,7 +258,7 @@ cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n cp/decl2.o: cp/decl2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n   output.h $(EXCEPT_H) toplev.h $(C_COMMON_H) gt-cp-decl2.h $(CGRAPH_H) \\\n   $(C_PRAGMA_H) $(TREE_DUMP_H) intl.h $(TARGET_H) $(GIMPLE_H) $(POINTER_SET_H) \\\n-  $(SPLAY_TREE_H) c-ada-spec.h\n+  $(SPLAY_TREE_H) c-family/c-ada-spec.h\n cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) $(C_COMMON_H) toplev.h \\\n   langhooks.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) debug.h \\"}, {"sha": "a15c7e247056e514d2b8ba17008798c26f371433", "filename": "gcc/cp/config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconfig-lang.in?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -30,4 +30,4 @@ compilers=\"cc1plus\\$(exeext)\"\n \n target_libs=\"target-libstdc++-v3\"\n \n-gtfiles=\"\\$(srcdir)/cp/rtti.c \\$(srcdir)/cp/mangle.c \\$(srcdir)/cp/name-lookup.h \\$(srcdir)/cp/name-lookup.c \\$(srcdir)/cp/cp-tree.h \\$(srcdir)/cp/decl.h \\$(srcdir)/cp/call.c \\$(srcdir)/cp/decl.c \\$(srcdir)/cp/decl2.c \\$(srcdir)/cp/pt.c \\$(srcdir)/cp/repo.c \\$(srcdir)/cp/semantics.c \\$(srcdir)/cp/tree.c \\$(srcdir)/cp/parser.c \\$(srcdir)/cp/method.c \\$(srcdir)/cp/typeck2.c \\$(srcdir)/c-common.c \\$(srcdir)/c-common.h \\$(srcdir)/c-lex.c \\$(srcdir)/c-pragma.h \\$(srcdir)/c-pragma.c \\$(srcdir)/cp/class.c \\$(srcdir)/cp/cp-objcp-common.c \\$(srcdir)/cp/cp-lang.c\"\n+gtfiles=\"\\$(srcdir)/cp/rtti.c \\$(srcdir)/cp/mangle.c \\$(srcdir)/cp/name-lookup.h \\$(srcdir)/cp/name-lookup.c \\$(srcdir)/cp/cp-tree.h \\$(srcdir)/cp/decl.h \\$(srcdir)/cp/call.c \\$(srcdir)/cp/decl.c \\$(srcdir)/cp/decl2.c \\$(srcdir)/cp/pt.c \\$(srcdir)/cp/repo.c \\$(srcdir)/cp/semantics.c \\$(srcdir)/cp/tree.c \\$(srcdir)/cp/parser.c \\$(srcdir)/cp/method.c \\$(srcdir)/cp/typeck2.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-lex.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/cp/class.c \\$(srcdir)/cp/cp-objcp-common.c \\$(srcdir)/cp/cp-lang.c\""}, {"sha": "f45d714780fa6aeb1199ffb3f1c5c9939af16408", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"toplev.h\"\n #include \"tree-iterator.h\"\n #include \"gimple.h\""}, {"sha": "541e9adcdeb85bd7269e955751775315bc786176", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -25,7 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"toplev.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\""}, {"sha": "63ce56b3c3025c8cdd2ec106fd03433ab6fe87dd", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -24,7 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"toplev.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\""}, {"sha": "9861946092723d7f81ab0370502cbf902a9c3b50", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -42,7 +42,7 @@ c-common.h, not after.\n #endif\n #include \"toplev.h\"\n #include \"diagnostic.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n \n #include \"name-lookup.h\"\n "}, {"sha": "5a51f44bdb8856dbaea0c492337d6e6de48bced7", "filename": "gcc/cp/cxx-pretty-print.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcxx-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fcxx-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -21,7 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_CXX_PRETTY_PRINT_H\n #define GCC_CXX_PRETTY_PRINT_H\n \n-#include \"c-pretty-print.h\"\n+#include \"c-family/c-pretty-print.h\"\n \n #undef pp_c_base\n #define pp_c_base(PP) (&(PP)->c_base)"}, {"sha": "d534ea3bf9b7ea95c7a278c96ef84b18233f620f", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -45,8 +45,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hashtab.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n-#include \"c-common.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-common.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"diagnostic.h\"\n #include \"intl.h\"\n #include \"debug.h\""}, {"sha": "070bc3efdc3a0e2edbf1e2b0538a2f5756dd011e", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -42,18 +42,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"cpplib.h\"\n #include \"target.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"tree-mudflap.h\"\n #include \"cgraph.h\"\n #include \"tree-inline.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"tree-dump.h\"\n #include \"intl.h\"\n #include \"gimple.h\"\n #include \"pointer-set.h\"\n #include \"splay-tree.h\"\n #include \"langhooks.h\"\n-#include \"c-ada-spec.h\"\n+#include \"c-family/c-ada-spec.h\"\n \n extern cpp_reader *parse_in;\n "}, {"sha": "1bae86fd69264d1c3de8d82c1cca663c14abfc2d", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -32,7 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"cpplib.h\"\n #include \"flags.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"toplev.h\"\n #include \"output.h\"\n #include \"tm_p.h\""}, {"sha": "0c759c6404a06fdf8e4d36ada871e526b9512bfc", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -31,7 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"diagnostic-core.h\"\n #include \"debug.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n \n /* The bindings for a particular name in a particular scope.  */\n "}, {"sha": "e5190eba93fc027429a35903418dcfce9aabd472", "filename": "gcc/cp/name-lookup.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fname-lookup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fname-lookup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.h?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_CP_NAME_LOOKUP_H\n #define GCC_CP_NAME_LOOKUP_H\n \n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n \n /* The type of dictionary used to map names to types declared at\n    a given scope.  */"}, {"sha": "eb347e24bae758337451c152b97931908ae9f8ea", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -27,15 +27,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"intl.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"decl.h\"\n #include \"flags.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n #include \"output.h\"\n #include \"target.h\"\n #include \"cgraph.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"plugin.h\"\n \n \f"}, {"sha": "b95fdf728bd0c7ef27d02b64872ef26dd88472ee", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -35,7 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"pointer-set.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"cp-objcp-common.h\"\n #include \"tree-inline.h\"\n #include \"decl.h\""}, {"sha": "12d1784f206766a4b0d67ad69af45b4ee38edf5f", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -33,7 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"convert.h\"\n #include \"target.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-pragma.h\"\n \n /* C++ returns type information to the user in struct type_info\n    objects. We also use type information to implement dynamic_cast and"}, {"sha": "3e75240d0346b9cf2382e41f448ed5e807f9de90", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -30,7 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"tree-inline.h\"\n #include \"tree-mudflap.h\"\n #include \"except.h\""}, {"sha": "a43c432bd22d2c2febc7396923c38cc41813743a", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -39,7 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"target.h\"\n #include \"convert.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"params.h\"\n \n static tree pfn_from_ptrmemfunc (tree);"}, {"sha": "90e643493656d5b496843b8d319cb977204d8a72", "filename": "gcc/gengtype.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -1657,13 +1657,21 @@ get_file_langdir (const char *f)\n \n   int lang_index;\n   const char * srcdir_relative_path = get_file_srcdir_relative_path (f);\n+  const char * r;\n \n   if (!srcdir_relative_path)\n     return NULL;\n \n   lang_index = get_prefix_langdir_index (srcdir_relative_path);\n+  if (lang_index < 0\n+      && strncmp (srcdir_relative_path, \"c-family\", 8) == 0)\n+    r = \"c-family\";\n+  else if (lang_index >= 0)\n+    r = lang_dir_names [lang_index];\n+  else\n+    r = NULL;\n \n-  return (lang_index >= 0) ? lang_dir_names [lang_index] : NULL;\n+  return r;\n }\n \n /* The gt- output file name for F.  */\n@@ -1743,8 +1751,10 @@ get_output_file_with_visibility (const char *input_file)\n      (and gengtype doesn't know how to direct spewage into multiple\n      gtype-<lang>.h headers at this time).  Instead, we pair up these\n      headers with source files (and their special purpose gt-*.h headers).  */\n-  else if (strcmp (basename, \"c-common.h\") == 0)\n-    output_name = \"gt-c-common.h\", for_name = \"c-common.c\";\n+  else if (strncmp (basename, \"c-family\", 8) == 0\n+\t   && IS_DIR_SEPARATOR (basename[8])\n+\t   && strcmp (basename + 9, \"c-common.h\") == 0)\n+    output_name = \"gt-c-family-c-common.h\", for_name = \"c-family/c-common.c\";\n   else if (strcmp (basename, \"c-lang.h\") == 0)\n     output_name = \"gt-c-decl.h\", for_name = \"c-decl.c\";\n   else if (strcmp (basename, \"c-tree.h\") == 0)"}, {"sha": "9934f24d126fa25a03fa8e3911741a57f1a646f9", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -1,3 +1,9 @@\n+2010-06-05  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* objc-act.c: Update include path for moved files.\n+\t* objc-lang.c: Likewise.\n+\t* config-lang.in: Update paths in gtfiles for files in c-family/.\n+\n 2010-06-01  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* objc-act.c (build_next_objc_exception_stuff): Give setjmp a"}, {"sha": "1a02b7fe7b170d2f0453c5b6c98c3836dc931a6c", "filename": "gcc/objc/config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjc%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjc%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fconfig-lang.in?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -33,4 +33,4 @@ target_libs=target-libobjc\n # Most of the object files for cc1obj actually come from C.\n lang_requires=\"c\"\n \n-gtfiles=\"\\$(srcdir)/objc/objc-act.h \\$(srcdir)/c-parser.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-common.c \\$(srcdir)/c-common.h \\$(srcdir)/c-pragma.h \\$(srcdir)/c-pragma.c \\$(srcdir)/objc/objc-act.c\"\n+gtfiles=\"\\$(srcdir)/objc/objc-act.h \\$(srcdir)/c-parser.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/objc/objc-act.c\""}, {"sha": "f10592fed1e0d22d8f218325c18d59fa4ed0e1a8", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -53,8 +53,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-lang.h\"\n #endif\n \n-#include \"c-common.h\"\n-#include \"c-pragma.h\"\n+#include \"c-family/c-common.h\"\n+#include \"c-family/c-pragma.h\"\n #include \"flags.h\"\n #include \"langhooks.h\"\n #include \"objc-act.h\""}, {"sha": "fa7496475fb6830bee157e45e2ee861d74289a35", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"ggc.h\"\n #include \"objc-act.h\"\n #include \"langhooks.h\""}, {"sha": "e6fbad5984117a24b1b5e12b8c9ca532987adcdf", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -1,3 +1,8 @@\n+2010-06-05  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* objcp-lang.c: Update include path for moved files.\n+\t* config-lang.in: Update paths in gtfiles for files in c-family/.\n+\n 2010-05-25  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* objcp-decl.c: Do not include tm.h, rtl.h, expr.h, c-common.h,"}, {"sha": "febcb635da70b7f03b535523de50bbc837bb809d", "filename": "gcc/objcp/config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjcp%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjcp%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fconfig-lang.in?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -37,4 +37,4 @@ build_by_default=\"no\"\n lang_requires=\"objc c++\"\n subdir_requires=\"objc cp\"\n \n-gtfiles=\"\\$(srcdir)/objcp/objcp-decl.c \\$(srcdir)/objc/objc-act.c \\$(srcdir)/objc/objc-act.h \\$(srcdir)/cp/rtti.c \\$(srcdir)/cp/mangle.c \\$(srcdir)/cp/name-lookup.h \\$(srcdir)/cp/name-lookup.c \\$(srcdir)/cp/cp-tree.h \\$(srcdir)/cp/decl.h \\$(srcdir)/cp/call.c \\$(srcdir)/cp/decl.c \\$(srcdir)/cp/decl2.c \\$(srcdir)/cp/pt.c \\$(srcdir)/cp/repo.c \\$(srcdir)/cp/semantics.c \\$(srcdir)/cp/tree.c \\$(srcdir)/cp/parser.c \\$(srcdir)/cp/method.c \\$(srcdir)/cp/typeck2.c \\$(srcdir)/c-common.c \\$(srcdir)/c-common.h \\$(srcdir)/c-lex.c \\$(srcdir)/c-pragma.h \\$(srcdir)/c-pragma.c \\$(srcdir)/cp/cp-objcp-common.c\"\n+gtfiles=\"\\$(srcdir)/objcp/objcp-decl.c \\$(srcdir)/objc/objc-act.c \\$(srcdir)/objc/objc-act.h \\$(srcdir)/cp/rtti.c \\$(srcdir)/cp/mangle.c \\$(srcdir)/cp/name-lookup.h \\$(srcdir)/cp/name-lookup.c \\$(srcdir)/cp/cp-tree.h \\$(srcdir)/cp/decl.h \\$(srcdir)/cp/call.c \\$(srcdir)/cp/decl.c \\$(srcdir)/cp/decl2.c \\$(srcdir)/cp/pt.c \\$(srcdir)/cp/repo.c \\$(srcdir)/cp/semantics.c \\$(srcdir)/cp/tree.c \\$(srcdir)/cp/parser.c \\$(srcdir)/cp/method.c \\$(srcdir)/cp/typeck2.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-lex.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/cp/cp-objcp-common.c\""}, {"sha": "91e5c7e693cf1331fbbe7cede528daafb5960103", "filename": "gcc/objcp/objcp-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjcp%2Fobjcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fobjcp%2Fobjcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fobjcp-lang.c?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -25,7 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n-#include \"c-common.h\"\n+#include \"c-family/c-common.h\"\n #include \"objc-act.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\""}, {"sha": "e0658302ac87d7d86b00526924772fbc7027abb9", "filename": "gcc/po/exgettext", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fpo%2Fexgettext", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dabefd0e5e21b7829ec4ddf811ab19346983d7/gcc%2Fpo%2Fexgettext", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fexgettext?ref=39dabefd0e5e21b7829ec4ddf811ab19346983d7", "patch": "@@ -84,7 +84,7 @@ echo \"scanning for keywords, %e and %n strings...\" >&2\n \n ( cd $srcdir\n   lang_subdirs=`echo */config-lang.in */*/config-lang.in | sed -e 's|config-lang\\.in||g'`\n-  { for dir in \"\" config/ config/*/ $lang_subdirs\n+  { for dir in \"\" c-family/ config/ config/*/ $lang_subdirs\n     do  for glob in '*.c' '*.h' '*.def'\n         do  eval echo $dir$glob\n         done"}]}