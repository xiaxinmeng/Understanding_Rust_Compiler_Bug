{"sha": "5f2862cf634d18f230404307e993a02c936957d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYyODYyY2Y2MzRkMThmMjMwNDA0MzA3ZTk5M2EwMmM5MzY5NTdkNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-12-16T20:52:47Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-12-16T20:52:47Z"}, "message": "thread.cc (execute_native_thread_routine): Do not swallow __forced_unwind exceptions.\n\n\t* src/c++11/thread.cc (execute_native_thread_routine): Do not swallow\n\t__forced_unwind exceptions.\n\t* testsuite/30_threads/thread/native_handle/cancel.cc: New.\n\nFrom-SVN: r194539", "tree": {"sha": "f5ffd92152011d9acaa0e8d6b0392195a7fd4651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5ffd92152011d9acaa0e8d6b0392195a7fd4651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f2862cf634d18f230404307e993a02c936957d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2862cf634d18f230404307e993a02c936957d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2862cf634d18f230404307e993a02c936957d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2862cf634d18f230404307e993a02c936957d4/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6180209821b0ea49ecc060d5657e876c93ff12a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6180209821b0ea49ecc060d5657e876c93ff12a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6180209821b0ea49ecc060d5657e876c93ff12a5"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "93332d12b6bb66ba19fdb9b6c4cf07c4842fdd3d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2862cf634d18f230404307e993a02c936957d4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2862cf634d18f230404307e993a02c936957d4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5f2862cf634d18f230404307e993a02c936957d4", "patch": "@@ -1,3 +1,9 @@\n+2012-12-16  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* src/c++11/thread.cc (execute_native_thread_routine): Do not swallow\n+\t__forced_unwind exceptions.\n+\t* testsuite/30_threads/thread/native_handle/cancel.cc: New.\n+\n 2012-12-14  Steve Ellcey  <sellcey@mips.com>\n \n \t* testsuite/21_strings/basic_string/append/wchar_t/3.cc: Shrink"}, {"sha": "fa86a1bd34ec47b948dca8ea2e2ea77fa37a2d15", "filename": "libstdc++-v3/src/c++11/thread.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2862cf634d18f230404307e993a02c936957d4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2862cf634d18f230404307e993a02c936957d4/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc?ref=5f2862cf634d18f230404307e993a02c936957d4", "patch": "@@ -26,6 +26,7 @@\n #include <thread>\n #include <system_error>\n #include <cerrno>\n+#include <cxxabi_forced.h>\n \n #if defined(_GLIBCXX_HAS_GTHREADS) && defined(_GLIBCXX_USE_C99_STDINT_TR1)\n \n@@ -80,6 +81,10 @@ namespace std _GLIBCXX_VISIBILITY(default)\n \t{\n \t  __t->_M_run();\n \t}\n+      __catch(const __cxxabiv1::__forced_unwind&)\n+\t{\n+\t  __throw_exception_again;\n+\t}\n       __catch(...)\n \t{\n \t  std::terminate();"}, {"sha": "96b579108dec84673e996005128629decff49a5f", "filename": "libstdc++-v3/testsuite/30_threads/thread/native_handle/cancel.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2862cf634d18f230404307e993a02c936957d4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fnative_handle%2Fcancel.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2862cf634d18f230404307e993a02c936957d4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fnative_handle%2Fcancel.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fnative_handle%2Fcancel.cc?ref=5f2862cf634d18f230404307e993a02c936957d4", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <pthread.h>\n+#include <thread>\n+#include <atomic>\n+\n+void f(std::atomic<bool>& started)\n+{\n+  started = true;\n+  while (true)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(100));\n+}\n+\n+int main()\n+{\n+  std::atomic<bool> started{ false };\n+  std::thread t(f, std::ref(started));\n+  while (!started)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(100));\n+  pthread_cancel(t.native_handle());\n+  t.join();\n+}"}]}