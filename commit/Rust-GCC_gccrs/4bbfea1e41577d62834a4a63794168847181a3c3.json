{"sha": "4bbfea1e41577d62834a4a63794168847181a3c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiZmVhMWU0MTU3N2Q2MjgzNGE0YTYzNzk0MTY4ODQ3MTgxYTNjMw==", "commit": {"author": {"name": "Nala Ginrut", "email": "mulei@gnu.org", "date": "2020-05-02T19:08:41Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T19:10:27Z"}, "message": "Enhance let statement in AST dump", "tree": {"sha": "97f1a033464bcf46302e7601a72bfd36de5dd9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97f1a033464bcf46302e7601a72bfd36de5dd9e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bbfea1e41577d62834a4a63794168847181a3c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bbfea1e41577d62834a4a63794168847181a3c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bbfea1e41577d62834a4a63794168847181a3c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bbfea1e41577d62834a4a63794168847181a3c3/comments", "author": {"login": "NalaGinrut", "id": 19734, "node_id": "MDQ6VXNlcjE5NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/19734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NalaGinrut", "html_url": "https://github.com/NalaGinrut", "followers_url": "https://api.github.com/users/NalaGinrut/followers", "following_url": "https://api.github.com/users/NalaGinrut/following{/other_user}", "gists_url": "https://api.github.com/users/NalaGinrut/gists{/gist_id}", "starred_url": "https://api.github.com/users/NalaGinrut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NalaGinrut/subscriptions", "organizations_url": "https://api.github.com/users/NalaGinrut/orgs", "repos_url": "https://api.github.com/users/NalaGinrut/repos", "events_url": "https://api.github.com/users/NalaGinrut/events{/privacy}", "received_events_url": "https://api.github.com/users/NalaGinrut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fec18623e1a937863f86cc25fa855e65e91d473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fec18623e1a937863f86cc25fa855e65e91d473", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fec18623e1a937863f86cc25fa855e65e91d473"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "ea19c6b4ff268a62b671c56d7760e4099467dbac", "filename": "gcc/rust/ast/rust-ast-full-test.cc", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bbfea1e41577d62834a4a63794168847181a3c3/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bbfea1e41577d62834a4a63794168847181a3c3/gcc%2Frust%2Fast%2Frust-ast-full-test.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-full-test.cc?ref=4bbfea1e41577d62834a4a63794168847181a3c3", "patch": "@@ -411,7 +411,7 @@ StaticItem::as_string () const\n {\n   ::std::string str = VisItem::as_string ();\n \n-  str += \"static\";\n+  str += indent_spaces (stay) + \"static\";\n \n   if (has_mut)\n     {\n@@ -427,7 +427,7 @@ StaticItem::as_string () const\n \t\t       \"pointer type in static item.\");\n       return \"NULL_POINTER_MARK\";\n     }\n-  str += \"\\n  Type: \" + type->as_string ();\n+  str += \"\\n\" + indent_spaces (stay) + \"Type: \" + type->as_string ();\n \n   // DEBUG: null pointer check\n   if (expr == NULL)\n@@ -436,7 +436,7 @@ StaticItem::as_string () const\n \t\t       \"pointer expr in static item.\");\n       return \"NULL_POINTER_MARK\";\n     }\n-  str += \"\\n  Expression: \" + expr->as_string ();\n+  str += \"\\n\" + indent_spaces (stay) + \"Expression: \" + expr->as_string ();\n \n   return str + \"\\n\";\n }\n@@ -3326,13 +3326,15 @@ LetStmt::as_string () const\n     {\n       // note that this does not print them with \"outer attribute\" syntax -\n       // just the body\n+      indent_spaces (enter);\n       for (const auto &attr : outer_attrs)\n \t{\n-\t  str += \"\\n  \" + attr.as_string ();\n+\t  str += \"\\n\" + indent_spaces (stay) + attr.as_string ();\n \t}\n+      indent_spaces (out);\n     }\n \n-  str += \"\\nlet \" + variables_pattern->as_string ();\n+  str += \"\\n\" + indent_spaces (stay) + \"let \" + variables_pattern->as_string ();\n \n   if (has_type ())\n     {"}]}