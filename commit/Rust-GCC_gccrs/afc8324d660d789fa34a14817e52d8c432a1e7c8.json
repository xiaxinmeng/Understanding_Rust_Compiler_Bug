{"sha": "afc8324d660d789fa34a14817e52d8c432a1e7c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjODMyNGQ2NjBkNzg5ZmEzNGExNDgxN2U1MmQ4YzQzMmExZTdjOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T15:12:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T15:12:44Z"}, "message": "[multiple changes]\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* inline.adb, stand.ads, sem_ch6.adb, sem_ch8.adb: Minor reformatting.\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch4.ads: minor formatting.\n\nFrom-SVN: r177176", "tree": {"sha": "875bc4d90cade5d66fe445a60ccc5c3ce6c29d00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/875bc4d90cade5d66fe445a60ccc5c3ce6c29d00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afc8324d660d789fa34a14817e52d8c432a1e7c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc8324d660d789fa34a14817e52d8c432a1e7c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc8324d660d789fa34a14817e52d8c432a1e7c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc8324d660d789fa34a14817e52d8c432a1e7c8/comments", "author": null, "committer": null, "parents": [{"sha": "2ba431e53edd2d06e5040a585454680990935d9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba431e53edd2d06e5040a585454680990935d9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ba431e53edd2d06e5040a585454680990935d9d"}], "stats": {"total": 83, "additions": 45, "deletions": 38}, "files": [{"sha": "ece9717f063581a6c5f96783e594524a56b61162", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=afc8324d660d789fa34a14817e52d8c432a1e7c8", "patch": "@@ -1,3 +1,11 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* inline.adb, stand.ads, sem_ch6.adb, sem_ch8.adb: Minor reformatting.\n+\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch4.ads: minor formatting.\n+\n 2011-08-02  Yannick Moy  <moy@adacore.com>\n \n \t* sem_aggr.adb, err_vars.ads, sem_ch3.adb, sem_ch5.adb, sem_ch9.adb,"}, {"sha": "d85e0866a48bda7796e3f4a9b47a8556d16d7900", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=afc8324d660d789fa34a14817e52d8c432a1e7c8", "patch": "@@ -344,7 +344,7 @@ package body Inline is\n                elsif not Is_Inlined (Pack)\n                  and then\n                    (not Has_Completion (E)\n-                      or else Is_Expression_Function (E))\n+                     or else Is_Expression_Function (E))\n                then\n                   Set_Is_Inlined (Pack);\n                   Inlined_Bodies.Increment_Last;"}, {"sha": "96550f26c4b98fba15783e220665f6ec00bd8d51", "filename": "gcc/ada/sem_ch4.ads", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Fsem_ch4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Fsem_ch4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.ads?ref=afc8324d660d789fa34a14817e52d8c432a1e7c8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,34 +26,34 @@\n with Types; use Types;\n \n package Sem_Ch4  is\n-   procedure Analyze_Aggregate                          (N : Node_Id);\n-   procedure Analyze_Allocator                          (N : Node_Id);\n-   procedure Analyze_Arithmetic_Op                      (N : Node_Id);\n-   procedure Analyze_Call                               (N : Node_Id);\n-   procedure Analyze_Case_Expression                    (N : Node_Id);\n-   procedure Analyze_Comparison_Op                      (N : Node_Id);\n-   procedure Analyze_Concatenation                      (N : Node_Id);\n-   procedure Analyze_Conditional_Expression             (N : Node_Id);\n-   procedure Analyze_Equality_Op                        (N : Node_Id);\n-   procedure Analyze_Explicit_Dereference               (N : Node_Id);\n-   procedure Analyze_Expression_With_Actions            (N : Node_Id);\n-   procedure Analyze_Logical_Op                         (N : Node_Id);\n-   procedure Analyze_Membership_Op                      (N : Node_Id);\n-   procedure Analyze_Negation                           (N : Node_Id);\n-   procedure Analyze_Null                               (N : Node_Id);\n-   procedure Analyze_Qualified_Expression               (N : Node_Id);\n-   procedure Analyze_Quantified_Expression              (N : Node_Id);\n-   procedure Analyze_Range                              (N : Node_Id);\n-   procedure Analyze_Reference                          (N : Node_Id);\n-   procedure Analyze_Selected_Component                 (N : Node_Id);\n-   procedure Analyze_Short_Circuit                      (N : Node_Id);\n-   procedure Analyze_Slice                              (N : Node_Id);\n-   procedure Analyze_Type_Conversion                    (N : Node_Id);\n-   procedure Analyze_Unary_Op                           (N : Node_Id);\n-   procedure Analyze_Unchecked_Expression               (N : Node_Id);\n-   procedure Analyze_Unchecked_Type_Conversion          (N : Node_Id);\n+   procedure Analyze_Aggregate                 (N : Node_Id);\n+   procedure Analyze_Allocator                 (N : Node_Id);\n+   procedure Analyze_Arithmetic_Op             (N : Node_Id);\n+   procedure Analyze_Call                      (N : Node_Id);\n+   procedure Analyze_Case_Expression           (N : Node_Id);\n+   procedure Analyze_Comparison_Op             (N : Node_Id);\n+   procedure Analyze_Concatenation             (N : Node_Id);\n+   procedure Analyze_Conditional_Expression    (N : Node_Id);\n+   procedure Analyze_Equality_Op               (N : Node_Id);\n+   procedure Analyze_Explicit_Dereference      (N : Node_Id);\n+   procedure Analyze_Expression_With_Actions   (N : Node_Id);\n+   procedure Analyze_Logical_Op                (N : Node_Id);\n+   procedure Analyze_Membership_Op             (N : Node_Id);\n+   procedure Analyze_Negation                  (N : Node_Id);\n+   procedure Analyze_Null                      (N : Node_Id);\n+   procedure Analyze_Qualified_Expression      (N : Node_Id);\n+   procedure Analyze_Quantified_Expression     (N : Node_Id);\n+   procedure Analyze_Range                     (N : Node_Id);\n+   procedure Analyze_Reference                 (N : Node_Id);\n+   procedure Analyze_Selected_Component        (N : Node_Id);\n+   procedure Analyze_Short_Circuit             (N : Node_Id);\n+   procedure Analyze_Slice                     (N : Node_Id);\n+   procedure Analyze_Type_Conversion           (N : Node_Id);\n+   procedure Analyze_Unary_Op                  (N : Node_Id);\n+   procedure Analyze_Unchecked_Expression      (N : Node_Id);\n+   procedure Analyze_Unchecked_Type_Conversion (N : Node_Id);\n \n-   procedure Analyze_Indexed_Component_Form (N : Node_Id);\n+   procedure Analyze_Indexed_Component_Form    (N : Node_Id);\n    --  Prior to semantic analysis, an indexed component node can denote any\n    --  of the following syntactic constructs:\n    --    a) An indexed component of an array"}, {"sha": "87b6a0c2e8821c66aa4bd09bf826d6f370a7dcf7", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=afc8324d660d789fa34a14817e52d8c432a1e7c8", "patch": "@@ -279,7 +279,7 @@ package body Sem_Ch6 is\n \n    begin\n       --  This is one of the occasions on which we transform the tree during\n-      --  semantic analysis. If this is a completion,  transform the expression\n+      --  semantic analysis. If this is a completion, transform the expression\n       --  function into an equivalent subprogram body, and analyze it.\n \n       --  Expression functions are inlined unconditionally. The back-end will\n@@ -631,8 +631,7 @@ package body Sem_Ch6 is\n          Analyze_And_Resolve (Expr, R_Type);\n          Check_Limited_Return (Expr);\n \n-         --  The only RETURN allowed in SPARK is as the last statement of the\n-         --  function.\n+         --  RETURN only allowed in SPARK is as the last statement function\n \n          if Nkind (Parent (N)) /= N_Handled_Sequence_Of_Statements\n            and then"}, {"sha": "67a53e36399b9b64eda8b2f64070a42d317e7ed1", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=afc8324d660d789fa34a14817e52d8c432a1e7c8", "patch": "@@ -1580,10 +1580,10 @@ package body Sem_Ch8 is\n    ---------------------------------\n \n    procedure Analyze_Subprogram_Renaming (N : Node_Id) is\n-      Formal_Spec : constant Node_Id          := Corresponding_Formal_Spec (N);\n-      Is_Actual   : constant Boolean          := Present (Formal_Spec);\n+      Formal_Spec : constant Node_Id := Corresponding_Formal_Spec (N);\n+      Is_Actual   : constant Boolean := Present (Formal_Spec);\n \n-      CW_Actual   : Boolean                   := False;\n+      CW_Actual : Boolean := False;\n       --  True if the renaming is for a defaulted formal subprogram when the\n       --  actual for a related formal type is class-wide. For AI05-0071.\n \n@@ -2440,9 +2440,8 @@ package body Sem_Ch8 is\n             --  no check for mode conformance,  given that the signatures don't\n             --  match (the source mentions T but the actual mentions T'class).\n \n-            if  CW_Actual then\n+            if CW_Actual then\n                null;\n-\n             else\n                Check_Mode_Conformant (New_S, Old_S);\n             end if;"}, {"sha": "07c86b65ecfdbd51c6d46ab62caa31cfec50216c", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc8324d660d789fa34a14817e52d8c432a1e7c8/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=afc8324d660d789fa34a14817e52d8c432a1e7c8", "patch": "@@ -313,7 +313,8 @@ package Stand is\n    Boolean_Literals : array (Boolean) of Entity_Id;\n    --  Entities for the two boolean literals, used by the expander\n \n-   --  Standard types which are in ALFA are associated to True\n+   --  Standard types which are in ALFA are associated set to True\n+\n    Standard_Type_Is_In_ALFA : array (S_Types) of Boolean :=\n      (S_Boolean             => True,\n "}]}