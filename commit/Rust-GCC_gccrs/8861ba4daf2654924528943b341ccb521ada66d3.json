{"sha": "8861ba4daf2654924528943b341ccb521ada66d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg2MWJhNGRhZjI2NTQ5MjQ1Mjg5NDNiMzQxY2NiNTIxYWRhNjZkMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-04-14T13:30:46Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-04-14T13:30:46Z"}, "message": "sse.md (ssse3_plusminus): New code iterator.\n\n2012-04-14  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* config/i386/sse.md (ssse3_plusminus): New code iterator.\n\t(avx2_ph<plusminus_mnemonic>wv16hi3): Macroize insn from\n\tavx2_ph{add,adds,sub,subs}wv16hi3 using ssse3_plusminus code iterator.\n\t(ssse3_ph<plusminus_mnemonic>wv8hi3): Macroize insn from\n\tssse3_ph{add,adds,sub,subs}wv8hi3 using ssse3_plusminus code iterator.\n\t(ssse3_ph<plusminus_mnemonic>wv4hi3): Macroize insn from\n\tssse3_ph{add,adds,sub,subs}wv4hi3 using ssse3_plusminus code iterator.\n\n\t(avx2_ph<plusminus_mnemonic>dv8si3): Macroize insn from\n\tavx2_ph{add,adds,sub,subs}dv8si3 using plusminus code iterator.\n\t(ssse3_ph<plusminus_mnemonic>dv4si3): Macroize insn from\n\tssse3_ph{add,adds,sub,subs}dv4si3 using plusminus code iterator.\n\t(ssse3_ph<plusminus_mnemonic>dv2si3): Macroize insn from\n\tssse3_ph{add,adds,sub,subs}dv2si3 using plusminus code iterator.\n\n\t(xop_plus): New code iterator.\n\t(macs): New code attribute.\n\t(macds): Ditto.\n\t(xop_p<macs><ssemodesuffix><ssemodesuffix>): Macroize insn from\n\txop_pmacs{,s}{ww,dd} using xop_plus code iterator and VI24_128 mode\n\titerator.\n\t(xop_p<macs>dql): Macroize insn from xop_pmacs{,s}dql using\n\txop_plus code iterator.\n\t(xop_p<macs>dqh): Macroize insn from xop_pmacs{,s}dqh using\n\txop_plus code iterator.\n\t(xop_p<macs>wd): Macroize insn from xop_pmacs{,s}wd using\n\txop_plus code iterator.\n\t(xop_p<madcs>wd): Macroize insn from xop_pmadcs{,s}wd using\n\txop_plus code iterator.\n\n\t(xop_phadd<u>bw): Macroize insn from xop_phadd{,u}bw usign\n\tany_extend code iterator.\n\t(xop_phadd<u>bd): Macroize insn from xop_phadd{,u}bd usign\n\tany_extend code iterator.\n\t(xop_phadd<u>bq): Macroize insn from xop_phadd{,u}bq usign\n\tany_extend code iterator.\n\t(xop_phadd<u>wd): Macroize insn from xop_phadd{,u}wd usign\n\tany_extend code iterator.\n\t(xop_phadd<u>wq): Macroize insn from xop_phadd{,u}wq usign\n\tany_extend code iterator.\n\t(xop_phadd<u>dq): Macroize insn from xop_phadd{,u}dq usign\n\tany_extend code iterator.\n\nFrom-SVN: r186454", "tree": {"sha": "a7369c04f7698a54de2b0b4524aa6f08bb5b7f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7369c04f7698a54de2b0b4524aa6f08bb5b7f37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8861ba4daf2654924528943b341ccb521ada66d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8861ba4daf2654924528943b341ccb521ada66d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8861ba4daf2654924528943b341ccb521ada66d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8861ba4daf2654924528943b341ccb521ada66d3/comments", "author": null, "committer": null, "parents": [{"sha": "531b2c7b74cf54b2cf38523143948c3e0e503e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/531b2c7b74cf54b2cf38523143948c3e0e503e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/531b2c7b74cf54b2cf38523143948c3e0e503e4a"}], "stats": {"total": 1200, "additions": 186, "deletions": 1014}, "files": [{"sha": "682e11f2308c45bcc77f165e0eb099b0378149a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8861ba4daf2654924528943b341ccb521ada66d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8861ba4daf2654924528943b341ccb521ada66d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8861ba4daf2654924528943b341ccb521ada66d3", "patch": "@@ -1,3 +1,48 @@\n+2012-04-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (ssse3_plusminus): New code iterator.\n+\t(avx2_ph<plusminus_mnemonic>wv16hi3): Macroize insn from\n+\tavx2_ph{add,adds,sub,subs}wv16hi3 using ssse3_plusminus code iterator.\n+\t(ssse3_ph<plusminus_mnemonic>wv8hi3): Macroize insn from\n+\tssse3_ph{add,adds,sub,subs}wv8hi3 using ssse3_plusminus code iterator.\n+\t(ssse3_ph<plusminus_mnemonic>wv4hi3): Macroize insn from\n+\tssse3_ph{add,adds,sub,subs}wv4hi3 using ssse3_plusminus code iterator.\n+\n+\t(avx2_ph<plusminus_mnemonic>dv8si3): Macroize insn from\n+\tavx2_ph{add,adds,sub,subs}dv8si3 using plusminus code iterator.\n+\t(ssse3_ph<plusminus_mnemonic>dv4si3): Macroize insn from\n+\tssse3_ph{add,adds,sub,subs}dv4si3 using plusminus code iterator.\n+\t(ssse3_ph<plusminus_mnemonic>dv2si3): Macroize insn from\n+\tssse3_ph{add,adds,sub,subs}dv2si3 using plusminus code iterator.\n+\n+\t(xop_plus): New code iterator.\n+\t(macs): New code attribute.\n+\t(macds): Ditto.\n+\t(xop_p<macs><ssemodesuffix><ssemodesuffix>): Macroize insn from\n+\txop_pmacs{,s}{ww,dd} using xop_plus code iterator and VI24_128 mode\n+\titerator.\n+\t(xop_p<macs>dql): Macroize insn from xop_pmacs{,s}dql using\n+\txop_plus code iterator.\n+\t(xop_p<macs>dqh): Macroize insn from xop_pmacs{,s}dqh using\n+\txop_plus code iterator.\n+\t(xop_p<macs>wd): Macroize insn from xop_pmacs{,s}wd using\n+\txop_plus code iterator.\n+\t(xop_p<madcs>wd): Macroize insn from xop_pmadcs{,s}wd using\n+\txop_plus code iterator.\n+\n+\t(xop_phadd<u>bw): Macroize insn from xop_phadd{,u}bw usign\n+\tany_extend code iterator.\n+\t(xop_phadd<u>bd): Macroize insn from xop_phadd{,u}bd usign\n+\tany_extend code iterator.\n+\t(xop_phadd<u>bq): Macroize insn from xop_phadd{,u}bq usign\n+\tany_extend code iterator.\n+\t(xop_phadd<u>wd): Macroize insn from xop_phadd{,u}wd usign\n+\tany_extend code iterator.\n+\t(xop_phadd<u>wq): Macroize insn from xop_phadd{,u}wq usign\n+\tany_extend code iterator.\n+\t(xop_phadd<u>dq): Macroize insn from xop_phadd{,u}dq usign\n+\tany_extend code iterator.\n+\n 2012-04-14  Tom de Vries  <tom@codesourcery.com>\n \n \t* cfgcleanup.c (try_optimize_cfg): Replace call to delete_insn_chain by\n@@ -204,8 +249,7 @@\n 2012-04-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/52862\n-\t* convert.c (convert_to_pointer): Remove special-casing of\n-\tzero.\n+\t* convert.c (convert_to_pointer): Remove special-casing of zero.\n \n 2012-04-13  Joey Ye  <joey.ye@arm.com>\n "}, {"sha": "c5aadad26ece1a190d1839f2c3c88be4149937ec", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 140, "deletions": 1012, "changes": 1152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8861ba4daf2654924528943b341ccb521ada66d3/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8861ba4daf2654924528943b341ccb521ada66d3/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=8861ba4daf2654924528943b341ccb521ada66d3", "patch": "@@ -8037,9 +8037,10 @@\n ;; surely not generally useful.\n (define_insn \"<sse2_avx2>_psadbw\"\n   [(set (match_operand:VI8_AVX2 0 \"register_operand\" \"=x,x\")\n-\t(unspec:VI8_AVX2 [(match_operand:<ssebytemode> 1 \"register_operand\" \"0,x\")\n-\t\t\t  (match_operand:<ssebytemode> 2 \"nonimmediate_operand\" \"xm,xm\")]\n-\t\t\t  UNSPEC_PSADBW))]\n+\t(unspec:VI8_AVX2\n+\t  [(match_operand:<ssebytemode> 1 \"register_operand\" \"0,x\")\n+\t   (match_operand:<ssebytemode> 2 \"nonimmediate_operand\" \"xm,xm\")]\n+\t  UNSPEC_PSADBW))]\n   \"TARGET_SSE2\"\n   \"@\n    psadbw\\t{%2, %0|%0, %2}\n@@ -8175,375 +8176,125 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"avx2_phaddwv16hi3\"\n-  [(set (match_operand:V16HI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V16HI\n-\t  (vec_concat:V8HI\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(plus:HI\n-\t\t  (vec_select:HI\n-\t\t    (match_operand:V16HI 1 \"register_operand\" \"x\")\n-\t\t    (parallel [(const_int 0)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t      (vec_concat:V2HI\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 8)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 9)])))\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 10)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 11)]))))\n-\t      (vec_concat:V2HI\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 12)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 13)])))\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 14)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 15)]))))))\n-\t  (vec_concat:V8HI\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(plus:HI\n-\t\t  (vec_select:HI\n-\t\t    (match_operand:V16HI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t    (parallel [(const_int 0)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t      (vec_concat:V2HI\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 8)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 9)])))\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 10)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 11)]))))\n-\t      (vec_concat:V2HI\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 12)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 13)])))\n-\t\t(plus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 14)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 15)]))))))))]\n-  \"TARGET_AVX2\"\n-  \"vphaddw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"OI\")])\n-\n-(define_insn \"ssse3_phaddwv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n-\t(vec_concat:V8HI\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (plus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (plus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n-  \"TARGET_SSSE3\"\n-  \"@\n-   phaddw\\t{%2, %0|%0, %2}\n-   vphaddw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx\")\n-   (set_attr \"type\" \"sseiadd\")\n-   (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1,*\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"orig,vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"ssse3_phaddwv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n-\t(vec_concat:V4HI\n-\t  (vec_concat:V2HI\n-\t    (plus:HI\n-\t      (vec_select:HI\n-\t\t(match_operand:V4HI 1 \"register_operand\" \"0\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (plus:HI\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t  (vec_concat:V2HI\n-\t    (plus:HI\n-\t      (vec_select:HI\n-\t\t(match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (plus:HI\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))))]\n-  \"TARGET_SSSE3\"\n-  \"phaddw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"avx2_phadddv8si3\"\n-  [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V8SI\n-\t  (vec_concat:V4SI\n-\t    (vec_concat:V2SI\n-\t      (plus:SI\n-\t\t(vec_select:SI\n-\t\t  (match_operand:V8SI 1 \"register_operand\" \"x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (plus:SI\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2SI\n-\t      (plus:SI\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (plus:SI\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:SI (match_dup 1) (parallel [(const_int 7)])))))\n-\t  (vec_concat:V4SI\n-\t    (vec_concat:V2SI\n-\t      (plus:SI\n-\t\t(vec_select:SI\n-\t\t  (match_operand:V8SI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (plus:SI\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2SI\n-\t      (plus:SI\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (plus:SI\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:SI (match_dup 2) (parallel [(const_int 7)])))))))]\n-  \"TARGET_AVX2\"\n-  \"vphaddd\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"OI\")])\n-\n-(define_insn \"ssse3_phadddv4si3\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n-\t(vec_concat:V4SI\n-\t  (vec_concat:V2SI\n-\t    (plus:SI\n-\t      (vec_select:SI\n-\t\t(match_operand:V4SI 1 \"register_operand\" \"0,x\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (plus:SI\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 2)]))\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 3)]))))\n-\t  (vec_concat:V2SI\n-\t    (plus:SI\n-\t      (vec_select:SI\n-\t\t(match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,xm\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (plus:SI\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 3)]))))))]\n-  \"TARGET_SSSE3\"\n-  \"@\n-   phaddd\\t{%2, %0|%0, %2}\n-   vphaddd\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx\")\n-   (set_attr \"type\" \"sseiadd\")\n-   (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1,*\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"orig,vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"ssse3_phadddv2si3\"\n-  [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n-\t(vec_concat:V2SI\n-\t  (plus:SI\n-\t    (vec_select:SI\n-\t      (match_operand:V2SI 1 \"register_operand\" \"0\")\n-\t      (parallel [(const_int 0)]))\n-\t    (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t  (plus:SI\n-\t    (vec_select:SI\n-\t      (match_operand:V2SI 2 \"nonimmediate_operand\" \"ym\")\n-\t      (parallel [(const_int 0)]))\n-\t    (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))))]\n-  \"TARGET_SSSE3\"\n-  \"phaddd\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n-   (set_attr \"mode\" \"DI\")])\n+(define_code_iterator ssse3_plusminus [plus ss_plus minus ss_minus])\n \n-(define_insn \"avx2_phaddswv16hi3\"\n+(define_insn \"avx2_ph<plusminus_mnemonic>wv16hi3\"\n   [(set (match_operand:V16HI 0 \"register_operand\" \"=x\")\n \t(vec_concat:V16HI\n \t  (vec_concat:V8HI\n \t    (vec_concat:V4HI\n \t      (vec_concat:V2HI\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI\n \t\t    (match_operand:V16HI 1 \"register_operand\" \"x\")\n \t\t    (parallel [(const_int 0)]))\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n \t      (vec_concat:V2HI\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n \t    (vec_concat:V4HI\n \t      (vec_concat:V2HI\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 8)]))\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 9)])))\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 10)]))\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 11)]))))\n \t      (vec_concat:V2HI\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 12)]))\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 13)])))\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 14)]))\n \t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 15)]))))))\n \t  (vec_concat:V8HI\n \t    (vec_concat:V4HI\n \t      (vec_concat:V2HI\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI\n \t\t    (match_operand:V16HI 2 \"nonimmediate_operand\" \"xm\")\n \t\t    (parallel [(const_int 0)]))\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n \t      (vec_concat:V2HI\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))\n \t    (vec_concat:V4HI\n \t      (vec_concat:V2HI\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 8)]))\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 9)])))\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 10)]))\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 11)]))))\n \t      (vec_concat:V2HI\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 12)]))\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 13)])))\n-\t\t(ss_plus:HI\n+\t\t(ssse3_plusminus:HI\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 14)]))\n \t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 15)]))))))))]\n   \"TARGET_AVX2\"\n-  \"vphaddsw\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"vph<plusminus_mnemonic>w\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"ssse3_phaddswv8hi3\"\n+(define_insn \"ssse3_ph<plusminus_mnemonic>wv8hi3\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(vec_concat:V8HI\n \t  (vec_concat:V4HI\n \t    (vec_concat:V2HI\n-\t      (ss_plus:HI\n+\t      (ssse3_plusminus:HI\n \t\t(vec_select:HI\n \t\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (ss_plus:HI\n+\t      (ssse3_plusminus:HI\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n \t    (vec_concat:V2HI\n-\t      (ss_plus:HI\n+\t      (ssse3_plusminus:HI\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (ss_plus:HI\n+\t      (ssse3_plusminus:HI\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n \t  (vec_concat:V4HI\n \t    (vec_concat:V2HI\n-\t      (ss_plus:HI\n+\t      (ssse3_plusminus:HI\n \t\t(vec_select:HI\n \t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (ss_plus:HI\n+\t      (ssse3_plusminus:HI\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n \t    (vec_concat:V2HI\n-\t      (ss_plus:HI\n+\t      (ssse3_plusminus:HI\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (ss_plus:HI\n+\t      (ssse3_plusminus:HI\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n   \"TARGET_SSSE3\"\n   \"@\n-   phaddsw\\t{%2, %0|%0, %2}\n-   vphaddsw\\t{%2, %1, %0|%0, %1, %2}\"\n+   ph<plusminus_mnemonic>w\\t{%2, %0|%0, %2}\n+   vph<plusminus_mnemonic>w\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n@@ -8552,259 +8303,104 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"ssse3_phaddswv4hi3\"\n+(define_insn \"ssse3_ph<plusminus_mnemonic>wv4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n \t(vec_concat:V4HI\n \t  (vec_concat:V2HI\n-\t    (ss_plus:HI\n+\t    (ssse3_plusminus:HI\n \t      (vec_select:HI\n \t\t(match_operand:V4HI 1 \"register_operand\" \"0\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (ss_plus:HI\n+\t    (ssse3_plusminus:HI\n \t      (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n \t      (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n \t  (vec_concat:V2HI\n-\t    (ss_plus:HI\n+\t    (ssse3_plusminus:HI\n \t      (vec_select:HI\n \t\t(match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (ss_plus:HI\n+\t    (ssse3_plusminus:HI\n \t      (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n \t      (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))))]\n   \"TARGET_SSSE3\"\n-  \"phaddsw\\t{%2, %0|%0, %2}\"\n+  \"ph<plusminus_mnemonic>w\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"avx2_phsubwv16hi3\"\n-  [(set (match_operand:V16HI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V16HI\n-\t  (vec_concat:V8HI\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(minus:HI\n-\t\t  (vec_select:HI\n-\t\t    (match_operand:V16HI 1 \"register_operand\" \"x\")\n-\t\t    (parallel [(const_int 0)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t      (vec_concat:V2HI\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 8)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 9)])))\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 10)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 11)]))))\n-\t      (vec_concat:V2HI\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 12)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 13)])))\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 14)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 15)]))))))\n-\t  (vec_concat:V8HI\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(minus:HI\n-\t\t  (vec_select:HI\n-\t\t    (match_operand:V16HI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t    (parallel [(const_int 0)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t      (vec_concat:V2HI\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 8)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 9)])))\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 10)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 11)]))))\n-\t      (vec_concat:V2HI\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 12)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 13)])))\n-\t\t(minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 14)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 15)]))))))))]\n-  \"TARGET_AVX2\"\n-  \"vphsubw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"OI\")])\n-\n-(define_insn \"ssse3_phsubwv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n-\t(vec_concat:V8HI\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (minus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (minus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n-  \"TARGET_SSSE3\"\n-  \"@\n-   phsubw\\t{%2, %0|%0, %2}\n-   vphsubw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx\")\n-   (set_attr \"type\" \"sseiadd\")\n-   (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1,*\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"orig,vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"ssse3_phsubwv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n-\t(vec_concat:V4HI\n-\t  (vec_concat:V2HI\n-\t    (minus:HI\n-\t      (vec_select:HI\n-\t\t(match_operand:V4HI 1 \"register_operand\" \"0\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (minus:HI\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t  (vec_concat:V2HI\n-\t    (minus:HI\n-\t      (vec_select:HI\n-\t\t(match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (minus:HI\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))))]\n-  \"TARGET_SSSE3\"\n-  \"phsubw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"avx2_phsubdv8si3\"\n+(define_insn \"avx2_ph<plusminus_mnemonic>dv8si3\"\n   [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n \t(vec_concat:V8SI\n \t  (vec_concat:V4SI\n \t    (vec_concat:V2SI\n-\t      (minus:SI\n+\t      (plusminus:SI\n \t\t(vec_select:SI\n \t\t  (match_operand:V8SI 1 \"register_operand\" \"x\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (minus:SI\n+\t      (plusminus:SI\n \t\t(vec_select:SI (match_dup 1) (parallel [(const_int 2)]))\n \t\t(vec_select:SI (match_dup 1) (parallel [(const_int 3)]))))\n \t    (vec_concat:V2SI\n-\t      (minus:SI\n+\t      (plusminus:SI\n \t\t(vec_select:SI (match_dup 1) (parallel [(const_int 4)]))\n \t\t(vec_select:SI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (minus:SI\n+\t      (plusminus:SI\n \t\t(vec_select:SI (match_dup 1) (parallel [(const_int 6)]))\n \t\t(vec_select:SI (match_dup 1) (parallel [(const_int 7)])))))\n \t  (vec_concat:V4SI\n \t    (vec_concat:V2SI\n-\t      (minus:SI\n+\t      (plusminus:SI\n \t\t(vec_select:SI\n \t\t  (match_operand:V8SI 2 \"nonimmediate_operand\" \"xm\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (minus:SI\n+\t      (plusminus:SI\n \t\t(vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n \t\t(vec_select:SI (match_dup 2) (parallel [(const_int 3)]))))\n \t    (vec_concat:V2SI\n-\t      (minus:SI\n+\t      (plusminus:SI\n \t\t(vec_select:SI (match_dup 2) (parallel [(const_int 4)]))\n \t\t(vec_select:SI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (minus:SI\n+\t      (plusminus:SI\n \t\t(vec_select:SI (match_dup 2) (parallel [(const_int 6)]))\n \t\t(vec_select:SI (match_dup 2) (parallel [(const_int 7)])))))))]\n   \"TARGET_AVX2\"\n-  \"vphsubd\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"vph<plusminus_mnemonic>d\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"ssse3_phsubdv4si3\"\n+(define_insn \"ssse3_ph<plusminus_mnemonic>dv4si3\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n \t(vec_concat:V4SI\n \t  (vec_concat:V2SI\n-\t    (minus:SI\n+\t    (plusminus:SI\n \t      (vec_select:SI\n \t\t(match_operand:V4SI 1 \"register_operand\" \"0,x\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (minus:SI\n+\t    (plusminus:SI\n \t      (vec_select:SI (match_dup 1) (parallel [(const_int 2)]))\n \t      (vec_select:SI (match_dup 1) (parallel [(const_int 3)]))))\n \t  (vec_concat:V2SI\n-\t    (minus:SI\n+\t    (plusminus:SI\n \t      (vec_select:SI\n \t\t(match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,xm\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (minus:SI\n+\t    (plusminus:SI\n \t      (vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n \t      (vec_select:SI (match_dup 2) (parallel [(const_int 3)]))))))]\n   \"TARGET_SSSE3\"\n   \"@\n-   phsubd\\t{%2, %0|%0, %2}\n-   vphsubd\\t{%2, %1, %0|%0, %1, %2}\"\n-\n+   ph<plusminus_mnemonic>d\\t{%2, %0|%0, %2}\n+   vph<plusminus_mnemonic>d\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n@@ -8813,175 +8409,21 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"ssse3_phsubdv2si3\"\n+(define_insn \"ssse3_ph<plusminus_mnemonic>dv2si3\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n \t(vec_concat:V2SI\n-\t  (minus:SI\n+\t  (plusminus:SI\n \t    (vec_select:SI\n \t      (match_operand:V2SI 1 \"register_operand\" \"0\")\n \t      (parallel [(const_int 0)]))\n \t    (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t  (minus:SI\n+\t  (plusminus:SI\n \t    (vec_select:SI\n \t      (match_operand:V2SI 2 \"nonimmediate_operand\" \"ym\")\n \t      (parallel [(const_int 0)]))\n \t    (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))))]\n   \"TARGET_SSSE3\"\n-  \"phsubd\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"avx2_phsubswv16hi3\"\n-  [(set (match_operand:V16HI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V16HI\n-\t  (vec_concat:V8HI\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI\n-\t\t    (match_operand:V16HI 1 \"register_operand\" \"x\")\n-\t\t    (parallel [(const_int 0)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t      (vec_concat:V2HI\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 8)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 9)])))\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 10)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 11)]))))\n-\t      (vec_concat:V2HI\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 12)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 13)])))\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 14)]))\n-\t\t  (vec_select:HI (match_dup 1) (parallel [(const_int 15)]))))))\n-\t  (vec_concat:V8HI\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI\n-\t\t    (match_operand:V16HI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t    (parallel [(const_int 0)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t      (vec_concat:V2HI\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))\n-\t    (vec_concat:V4HI\n-\t      (vec_concat:V2HI\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 8)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 9)])))\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 10)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 11)]))))\n-\t      (vec_concat:V2HI\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 12)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 13)])))\n-\t\t(ss_minus:HI\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 14)]))\n-\t\t  (vec_select:HI (match_dup 2) (parallel [(const_int 15)]))))))))]\n-  \"TARGET_AVX2\"\n-  \"vphsubsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"OI\")])\n-\n-(define_insn \"ssse3_phsubswv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n-\t(vec_concat:V8HI\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n-  \"TARGET_SSSE3\"\n-  \"@\n-   phsubsw\\t{%2, %0|%0, %2}\n-   vphsubsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx\")\n-   (set_attr \"type\" \"sseiadd\")\n-   (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1,*\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"orig,vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"ssse3_phsubswv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n-\t(vec_concat:V4HI\n-\t  (vec_concat:V2HI\n-\t    (ss_minus:HI\n-\t      (vec_select:HI\n-\t\t(match_operand:V4HI 1 \"register_operand\" \"0\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (ss_minus:HI\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t      (vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t  (vec_concat:V2HI\n-\t    (ss_minus:HI\n-\t      (vec_select:HI\n-\t\t(match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (ss_minus:HI\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t      (vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))))]\n-  \"TARGET_SSSE3\"\n-  \"phsubsw\\t{%2, %0|%0, %2}\"\n+  \"ph<plusminus_mnemonic>d\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -9314,9 +8756,10 @@\n \n (define_insn \"<ssse3_avx2>_pshufb<mode>3\"\n   [(set (match_operand:VI1_AVX2 0 \"register_operand\" \"=x,x\")\n-\t(unspec:VI1_AVX2 [(match_operand:VI1_AVX2 1 \"register_operand\" \"0,x\")\n-\t\t\t  (match_operand:VI1_AVX2 2 \"nonimmediate_operand\" \"xm,xm\")]\n-\t\t\t UNSPEC_PSHUFB))]\n+\t(unspec:VI1_AVX2\n+\t  [(match_operand:VI1_AVX2 1 \"register_operand\" \"0,x\")\n+\t   (match_operand:VI1_AVX2 2 \"nonimmediate_operand\" \"xm,xm\")]\n+\t  UNSPEC_PSHUFB))]\n   \"TARGET_SSSE3\"\n   \"@\n    pshufb\\t{%2, %0|%0, %2}\n@@ -9372,10 +8815,11 @@\n \n (define_insn \"<ssse3_avx2>_palignr<mode>\"\n   [(set (match_operand:SSESCALARMODE 0 \"register_operand\" \"=x,x\")\n-\t(unspec:SSESCALARMODE [(match_operand:SSESCALARMODE 1 \"register_operand\" \"0,x\")\n-\t\t\t       (match_operand:SSESCALARMODE 2 \"nonimmediate_operand\" \"xm,xm\")\n-\t\t\t       (match_operand:SI 3 \"const_0_to_255_mul_8_operand\" \"n,n\")]\n-\t\t\t      UNSPEC_PALIGNR))]\n+\t(unspec:SSESCALARMODE\n+\t  [(match_operand:SSESCALARMODE 1 \"register_operand\" \"0,x\")\n+\t   (match_operand:SSESCALARMODE 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t   (match_operand:SI 3 \"const_0_to_255_mul_8_operand\" \"n,n\")]\n+\t  UNSPEC_PALIGNR))]\n   \"TARGET_SSSE3\"\n {\n   operands[3] = GEN_INT (INTVAL (operands[3]) / 8);\n@@ -9595,10 +9039,11 @@\n \n (define_insn \"<sse4_1_avx2>_mpsadbw\"\n   [(set (match_operand:VI1_AVX2 0 \"register_operand\" \"=x,x\")\n-\t(unspec:VI1_AVX2 [(match_operand:VI1_AVX2 1 \"register_operand\" \"0,x\")\n-\t\t\t  (match_operand:VI1_AVX2 2 \"nonimmediate_operand\" \"xm,xm\")\n-\t\t\t  (match_operand:SI 3 \"const_0_to_255_operand\" \"n,n\")]\n-\t\t\t UNSPEC_MPSADBW))]\n+\t(unspec:VI1_AVX2\n+\t  [(match_operand:VI1_AVX2 1 \"register_operand\" \"0,x\")\n+\t   (match_operand:VI1_AVX2 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t   (match_operand:SI 3 \"const_0_to_255_operand\" \"n,n\")]\n+\t  UNSPEC_MPSADBW))]\n   \"TARGET_SSE4_1\"\n   \"@\n    mpsadbw\\t{%3, %2, %0|%0, %2, %3}\n@@ -10396,112 +9841,65 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n+(define_code_iterator xop_plus [plus ss_plus])\n+\n+(define_code_attr macs [(plus \"macs\") (ss_plus \"macss\")])\n+(define_code_attr madcs [(plus \"madcs\") (ss_plus \"madcss\")])\n+\n ;; XOP parallel integer multiply/add instructions.\n ;; Note the XOP multiply/add instructions\n ;;     a[i] = b[i] * c[i] + d[i];\n ;; do not allow the value being added to be a memory operation.\n-(define_insn \"xop_pmacsww\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(plus:V8HI\n-\t (mult:V8HI\n-\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x\")\n-\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\"))\n-\t (match_operand:V8HI 3 \"nonimmediate_operand\" \"x\")))]\n-  \"TARGET_XOP\"\n-  \"vpmacsww\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"xop_pmacssww\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(ss_plus:V8HI\n-\t (mult:V8HI (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x\")\n-\t\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\"))\n-\t (match_operand:V8HI 3 \"nonimmediate_operand\" \"x\")))]\n+(define_insn \"xop_p<macs><ssemodesuffix><ssemodesuffix>\"\n+  [(set (match_operand:VI24_128 0 \"register_operand\" \"=x\")\n+\t(xop_plus:VI24_128\n+\t (mult:VI24_128\n+\t  (match_operand:VI24_128 1 \"nonimmediate_operand\" \"%x\")\n+\t  (match_operand:VI24_128 2 \"nonimmediate_operand\" \"xm\"))\n+\t (match_operand:VI24_128 3 \"nonimmediate_operand\" \"x\")))]\n   \"TARGET_XOP\"\n-  \"vpmacssww\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"vp<macs><ssemodesuffix><ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"xop_pmacsdd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(plus:V4SI\n-\t (mult:V4SI\n-\t  (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x\")\n-\t  (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\"))\n-\t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n-  \"TARGET_XOP\"\n-  \"vpmacsdd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"xop_pmacssdd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(ss_plus:V4SI\n-\t (mult:V4SI (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x\")\n-\t\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\"))\n-\t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n-  \"TARGET_XOP\"\n-  \"vpmacssdd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"xop_pmacssdql\"\n+(define_insn \"xop_p<macs>dql\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(ss_plus:V2DI\n+\t(xop_plus:V2DI\n \t (mult:V2DI\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x\")\n \t    (parallel [(const_int 1)\n \t\t       (const_int 3)])))\n-\t  (vec_select:V2SI\n-\t   (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)])))\n-\t (match_operand:V2DI 3 \"nonimmediate_operand\" \"x\")))]\n-  \"TARGET_XOP\"\n-  \"vpmacssdql\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"xop_pmacssdqh\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(ss_plus:V2DI\n-\t (mult:V2DI\n-\t  (sign_extend:V2DI\n-\t   (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 2)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 2)]))))\n+\t    (parallel [(const_int 1)\n+\t\t       (const_int 3)]))))\n \t (match_operand:V2DI 3 \"nonimmediate_operand\" \"x\")))]\n   \"TARGET_XOP\"\n-  \"vpmacssdqh\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"vp<macs>dql\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"xop_pmacsdql\"\n+(define_insn \"xop_p<macs>dqh\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(plus:V2DI\n+\t(xop_plus:V2DI\n \t (mult:V2DI\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x\")\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)])))\n+\t    (parallel [(const_int 0)\n+\t\t       (const_int 2)])))\n \t  (sign_extend:V2DI\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)]))))\n+\t    (parallel [(const_int 0)\n+\t\t       (const_int 2)]))))\n \t (match_operand:V2DI 3 \"nonimmediate_operand\" \"x\")))]\n   \"TARGET_XOP\"\n-  \"vpmacsdql\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"vp<macs>dqh\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n@@ -10547,26 +9945,6 @@\n   [(set_attr \"type\" \"ssemul\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"xop_pmacsdqh\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(plus:V2DI\n-\t (mult:V2DI\n-\t  (sign_extend:V2DI\n-\t   (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"%x\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 2)])))\n-\t  (sign_extend:V2DI\n-\t   (vec_select:V2SI\n-\t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 2)]))))\n-\t (match_operand:V2DI 3 \"nonimmediate_operand\" \"x\")))]\n-  \"TARGET_XOP\"\n-  \"vpmacsdqh\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"TI\")])\n-\n ;; We don't have a straight 32-bit parallel multiply and extend on XOP, so\n ;; fake it with a multiply/add.  In general, we expect the define_split to\n ;; occur before register allocation, so we have to handle the corner case where\n@@ -10610,33 +9988,9 @@\n    (set_attr \"mode\" \"TI\")])\n \n ;; XOP parallel integer multiply/add instructions for the intrinisics\n-(define_insn \"xop_pmacsswd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(ss_plus:V4SI\n-\t (mult:V4SI\n-\t  (sign_extend:V4SI\n-\t   (vec_select:V4HI\n-\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x\")\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)\n-\t\t       (const_int 5)\n-\t\t       (const_int 7)])))\n-\t  (sign_extend:V4SI\n-\t   (vec_select:V4HI\n-\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 3)\n-\t\t       (const_int 5)\n-\t\t       (const_int 7)]))))\n-\t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n-  \"TARGET_XOP\"\n-  \"vpmacsswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"xop_pmacswd\"\n+(define_insn \"xop_p<macs>wd\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(plus:V4SI\n+\t(xop_plus:V4SI\n \t (mult:V4SI\n \t  (sign_extend:V4SI\n \t   (vec_select:V4HI\n@@ -10654,53 +10008,13 @@\n \t\t       (const_int 7)]))))\n \t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n   \"TARGET_XOP\"\n-  \"vpmacswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n-  [(set_attr \"type\" \"ssemuladd\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"xop_pmadcsswd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(ss_plus:V4SI\n-\t (plus:V4SI\n-\t  (mult:V4SI\n-\t   (sign_extend:V4SI\n-\t    (vec_select:V4HI\n-\t     (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x\")\n-\t     (parallel [(const_int 0)\n-\t\t\t(const_int 2)\n-\t\t\t(const_int 4)\n-\t\t\t(const_int 6)])))\n-\t   (sign_extend:V4SI\n-\t    (vec_select:V4HI\n-\t     (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t     (parallel [(const_int 0)\n-\t\t\t(const_int 2)\n-\t\t\t(const_int 4)\n-\t\t\t(const_int 6)]))))\n-\t  (mult:V4SI\n-\t   (sign_extend:V4SI\n-\t    (vec_select:V4HI\n-\t     (match_dup 1)\n-\t     (parallel [(const_int 1)\n-\t\t\t(const_int 3)\n-\t\t\t(const_int 5)\n-\t\t\t(const_int 7)])))\n-\t   (sign_extend:V4SI\n-\t    (vec_select:V4HI\n-\t     (match_dup 2)\n-\t     (parallel [(const_int 1)\n-\t\t\t(const_int 3)\n-\t\t\t(const_int 5)\n-\t\t\t(const_int 7)])))))\n-\t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n-  \"TARGET_XOP\"\n-  \"vpmadcsswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"vp<macs>wd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"xop_pmadcswd\"\n+(define_insn \"xop_p<madcs>wd\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(plus:V4SI\n+\t(xop_plus:V4SI\n \t (plus:V4SI\n \t  (mult:V4SI\n \t   (sign_extend:V4SI\n@@ -10734,7 +10048,7 @@\n \t\t\t(const_int 7)])))))\n \t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n   \"TARGET_XOP\"\n-  \"vpmadcswd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"vp<madcs>wd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"TI\")])\n \n@@ -10750,196 +10064,10 @@\n   [(set_attr \"type\" \"sse4arg\")])\n \n ;; XOP horizontal add/subtract instructions\n-(define_insn \"xop_phaddbw\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(plus:V8HI\n-\t (sign_extend:V8HI\n-\t  (vec_select:V8QI\n-\t   (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 0)\n-\t\t      (const_int 2)\n-\t\t      (const_int 4)\n-\t\t      (const_int 6)\n-\t\t      (const_int 8)\n-\t\t      (const_int 10)\n-\t\t      (const_int 12)\n-\t\t      (const_int 14)])))\n-\t (sign_extend:V8HI\n-\t  (vec_select:V8QI\n-\t   (match_dup 1)\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)\n-\t\t      (const_int 5)\n-\t\t      (const_int 7)\n-\t\t      (const_int 9)\n-\t\t      (const_int 11)\n-\t\t      (const_int 13)\n-\t\t      (const_int 15)])))))]\n-  \"TARGET_XOP\"\n-  \"vphaddbw\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sseiadd1\")])\n-\n-(define_insn \"xop_phaddbd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(plus:V4SI\n-\t (plus:V4SI\n-\t  (sign_extend:V4SI\n-\t   (vec_select:V4QI\n-\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 4)\n-\t\t       (const_int 8)\n-\t\t       (const_int 12)])))\n-\t  (sign_extend:V4SI\n-\t   (vec_select:V4QI\n-\t    (match_dup 1)\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 5)\n-\t\t       (const_int 9)\n-\t\t       (const_int 13)]))))\n-\t (plus:V4SI\n-\t  (sign_extend:V4SI\n-\t   (vec_select:V4QI\n-\t    (match_dup 1)\n-\t    (parallel [(const_int 2)\n-\t\t       (const_int 6)\n-\t\t       (const_int 10)\n-\t\t       (const_int 14)])))\n-\t  (sign_extend:V4SI\n-\t   (vec_select:V4QI\n-\t    (match_dup 1)\n-\t    (parallel [(const_int 3)\n-\t\t       (const_int 7)\n-\t\t       (const_int 11)\n-\t\t       (const_int 15)]))))))]\n-  \"TARGET_XOP\"\n-  \"vphaddbd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sseiadd1\")])\n-\n-(define_insn \"xop_phaddbq\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(plus:V2DI\n-\t (plus:V2DI\n-\t  (plus:V2DI\n-\t   (sign_extend:V2DI\n-\t    (vec_select:V2QI\n-\t     (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t     (parallel [(const_int 0)\n-\t\t\t(const_int 4)])))\n-\t   (sign_extend:V2DI\n-\t    (vec_select:V2QI\n-\t     (match_dup 1)\n-\t     (parallel [(const_int 1)\n-\t\t\t(const_int 5)]))))\n-\t  (plus:V2DI\n-\t   (sign_extend:V2DI\n-\t    (vec_select:V2QI\n-\t     (match_dup 1)\n-\t     (parallel [(const_int 2)\n-\t\t\t(const_int 6)])))\n-\t   (sign_extend:V2DI\n-\t    (vec_select:V2QI\n-\t     (match_dup 1)\n-\t     (parallel [(const_int 3)\n-\t\t\t(const_int 7)])))))\n-\t (plus:V2DI\n-\t  (plus:V2DI\n-\t   (sign_extend:V2DI\n-\t    (vec_select:V2QI\n-\t     (match_dup 1)\n-\t     (parallel [(const_int 8)\n-\t\t\t(const_int 12)])))\n-\t   (sign_extend:V2DI\n-\t    (vec_select:V2QI\n-\t     (match_dup 1)\n-\t     (parallel [(const_int 9)\n-\t\t\t(const_int 13)]))))\n-\t  (plus:V2DI\n-\t   (sign_extend:V2DI\n-\t    (vec_select:V2QI\n-\t     (match_dup 1)\n-\t     (parallel [(const_int 10)\n-\t\t\t(const_int 14)])))\n-\t   (sign_extend:V2DI\n-\t    (vec_select:V2QI\n-\t     (match_dup 1)\n-\t     (parallel [(const_int 11)\n-\t\t\t(const_int 15)])))))))]\n-  \"TARGET_XOP\"\n-  \"vphaddbq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sseiadd1\")])\n-\n-(define_insn \"xop_phaddwd\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(plus:V4SI\n-\t (sign_extend:V4SI\n-\t  (vec_select:V4HI\n-\t   (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 0)\n-\t\t      (const_int 2)\n-\t\t      (const_int 4)\n-\t\t      (const_int 6)])))\n-\t (sign_extend:V4SI\n-\t  (vec_select:V4HI\n-\t   (match_dup 1)\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)\n-\t\t      (const_int 5)\n-\t\t      (const_int 7)])))))]\n-  \"TARGET_XOP\"\n-  \"vphaddwd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sseiadd1\")])\n-\n-(define_insn \"xop_phaddwq\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(plus:V2DI\n-\t (plus:V2DI\n-\t  (sign_extend:V2DI\n-\t   (vec_select:V2HI\n-\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n-\t    (parallel [(const_int 0)\n-\t\t       (const_int 4)])))\n-\t  (sign_extend:V2DI\n-\t   (vec_select:V2HI\n-\t    (match_dup 1)\n-\t    (parallel [(const_int 1)\n-\t\t       (const_int 5)]))))\n-\t (plus:V2DI\n-\t  (sign_extend:V2DI\n-\t   (vec_select:V2HI\n-\t    (match_dup 1)\n-\t    (parallel [(const_int 2)\n-\t\t       (const_int 6)])))\n-\t  (sign_extend:V2DI\n-\t   (vec_select:V2HI\n-\t    (match_dup 1)\n-\t    (parallel [(const_int 3)\n-\t\t       (const_int 7)]))))))]\n-  \"TARGET_XOP\"\n-  \"vphaddwq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sseiadd1\")])\n-\n-(define_insn \"xop_phadddq\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(plus:V2DI\n-\t (sign_extend:V2DI\n-\t  (vec_select:V2SI\n-\t   (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n-\t   (parallel [(const_int 0)\n-\t\t      (const_int 2)])))\n-\t (sign_extend:V2DI\n-\t  (vec_select:V2SI\n-\t   (match_dup 1)\n-\t   (parallel [(const_int 1)\n-\t\t      (const_int 3)])))))]\n-  \"TARGET_XOP\"\n-  \"vphadddq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sseiadd1\")])\n-\n-(define_insn \"xop_phaddubw\"\n+(define_insn \"xop_phadd<u>bw\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n \t(plus:V8HI\n-\t (zero_extend:V8HI\n+\t (any_extend:V8HI\n \t  (vec_select:V8QI\n \t   (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n \t   (parallel [(const_int 0)\n@@ -10950,7 +10078,7 @@\n \t\t      (const_int 10)\n \t\t      (const_int 12)\n \t\t      (const_int 14)])))\n-\t (zero_extend:V8HI\n+\t (any_extend:V8HI\n \t  (vec_select:V8QI\n \t   (match_dup 1)\n \t   (parallel [(const_int 1)\n@@ -10962,164 +10090,164 @@\n \t\t      (const_int 13)\n \t\t      (const_int 15)])))))]\n   \"TARGET_XOP\"\n-  \"vphaddubw\\t{%1, %0|%0, %1}\"\n+  \"vphadd<u>bw\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n \n-(define_insn \"xop_phaddubd\"\n+(define_insn \"xop_phadd<u>bd\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n \t(plus:V4SI\n \t (plus:V4SI\n-\t  (zero_extend:V4SI\n+\t  (any_extend:V4SI\n \t   (vec_select:V4QI\n \t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 4)\n \t\t       (const_int 8)\n \t\t       (const_int 12)])))\n-\t  (zero_extend:V4SI\n+\t  (any_extend:V4SI\n \t   (vec_select:V4QI\n \t    (match_dup 1)\n \t    (parallel [(const_int 1)\n \t\t       (const_int 5)\n \t\t       (const_int 9)\n \t\t       (const_int 13)]))))\n \t (plus:V4SI\n-\t  (zero_extend:V4SI\n+\t  (any_extend:V4SI\n \t   (vec_select:V4QI\n \t    (match_dup 1)\n \t    (parallel [(const_int 2)\n \t\t       (const_int 6)\n \t\t       (const_int 10)\n \t\t       (const_int 14)])))\n-\t  (zero_extend:V4SI\n+\t  (any_extend:V4SI\n \t   (vec_select:V4QI\n \t    (match_dup 1)\n \t    (parallel [(const_int 3)\n \t\t       (const_int 7)\n \t\t       (const_int 11)\n \t\t       (const_int 15)]))))))]\n   \"TARGET_XOP\"\n-  \"vphaddubd\\t{%1, %0|%0, %1}\"\n+  \"vphadd<u>bd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n \n-(define_insn \"xop_phaddubq\"\n+(define_insn \"xop_phadd<u>bq\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(plus:V2DI\n \t (plus:V2DI\n \t  (plus:V2DI\n-\t   (zero_extend:V2DI\n+\t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n \t     (parallel [(const_int 0)\n \t\t\t(const_int 4)])))\n-\t   (sign_extend:V2DI\n+\t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n \t     (parallel [(const_int 1)\n \t\t\t(const_int 5)]))))\n \t  (plus:V2DI\n-\t   (zero_extend:V2DI\n+\t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n \t     (parallel [(const_int 2)\n \t\t\t(const_int 6)])))\n-\t   (zero_extend:V2DI\n+\t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n \t     (parallel [(const_int 3)\n \t\t\t(const_int 7)])))))\n \t (plus:V2DI\n \t  (plus:V2DI\n-\t   (zero_extend:V2DI\n+\t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n \t     (parallel [(const_int 8)\n \t\t\t(const_int 12)])))\n-\t   (sign_extend:V2DI\n+\t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n \t     (parallel [(const_int 9)\n \t\t\t(const_int 13)]))))\n \t  (plus:V2DI\n-\t   (zero_extend:V2DI\n+\t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n \t     (parallel [(const_int 10)\n \t\t\t(const_int 14)])))\n-\t   (zero_extend:V2DI\n+\t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n \t     (parallel [(const_int 11)\n \t\t\t(const_int 15)])))))))]\n   \"TARGET_XOP\"\n-  \"vphaddubq\\t{%1, %0|%0, %1}\"\n+  \"vphadd<u>bq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n \n-(define_insn \"xop_phadduwd\"\n+(define_insn \"xop_phadd<u>wd\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n \t(plus:V4SI\n-\t (zero_extend:V4SI\n+\t (any_extend:V4SI\n \t  (vec_select:V4HI\n \t   (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n \t   (parallel [(const_int 0)\n \t\t      (const_int 2)\n \t\t      (const_int 4)\n \t\t      (const_int 6)])))\n-\t (zero_extend:V4SI\n+\t (any_extend:V4SI\n \t  (vec_select:V4HI\n \t   (match_dup 1)\n \t   (parallel [(const_int 1)\n \t\t      (const_int 3)\n \t\t      (const_int 5)\n \t\t      (const_int 7)])))))]\n   \"TARGET_XOP\"\n-  \"vphadduwd\\t{%1, %0|%0, %1}\"\n+  \"vphadd<u>wd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n \n-(define_insn \"xop_phadduwq\"\n+(define_insn \"xop_phadd<u>wq\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(plus:V2DI\n \t (plus:V2DI\n-\t  (zero_extend:V2DI\n+\t  (any_extend:V2DI\n \t   (vec_select:V2HI\n \t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0)\n \t\t       (const_int 4)])))\n-\t  (zero_extend:V2DI\n+\t  (any_extend:V2DI\n \t   (vec_select:V2HI\n \t    (match_dup 1)\n \t    (parallel [(const_int 1)\n \t\t       (const_int 5)]))))\n \t (plus:V2DI\n-\t  (zero_extend:V2DI\n+\t  (any_extend:V2DI\n \t   (vec_select:V2HI\n \t    (match_dup 1)\n \t    (parallel [(const_int 2)\n \t\t       (const_int 6)])))\n-\t  (zero_extend:V2DI\n+\t  (any_extend:V2DI\n \t   (vec_select:V2HI\n \t    (match_dup 1)\n \t    (parallel [(const_int 3)\n \t\t       (const_int 7)]))))))]\n   \"TARGET_XOP\"\n-  \"vphadduwq\\t{%1, %0|%0, %1}\"\n+  \"vphadd<u>wq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n \n-(define_insn \"xop_phaddudq\"\n+(define_insn \"xop_phadd<u>dq\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(plus:V2DI\n-\t (zero_extend:V2DI\n+\t (any_extend:V2DI\n \t  (vec_select:V2SI\n \t   (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n \t   (parallel [(const_int 0)\n \t\t      (const_int 2)])))\n-\t (zero_extend:V2DI\n+\t (any_extend:V2DI\n \t  (vec_select:V2SI\n \t   (match_dup 1)\n \t   (parallel [(const_int 1)\n \t\t      (const_int 3)])))))]\n   \"TARGET_XOP\"\n-  \"vphaddudq\\t{%1, %0|%0, %1}\"\n+  \"vphadd<u>dq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])\n \n (define_insn \"xop_phsubbw\""}]}