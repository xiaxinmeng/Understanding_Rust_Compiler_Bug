{"sha": "dcd25113c6c37534621934617f07776b9212ef33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNkMjUxMTNjNmMzNzUzNDYyMTkzNDYxN2YwNzc3NmI5MjEyZWYzMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-06-01T10:13:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-06-01T10:13:36Z"}, "message": "* fold-const.c (fold_ternary): Optimize BIT_FIELD_REF of VECTOR_CST.\n\nFrom-SVN: r100442", "tree": {"sha": "d4483d63d139eff9738f540f3168a9f08952531c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4483d63d139eff9738f540f3168a9f08952531c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcd25113c6c37534621934617f07776b9212ef33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcd25113c6c37534621934617f07776b9212ef33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcd25113c6c37534621934617f07776b9212ef33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcd25113c6c37534621934617f07776b9212ef33/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a00cb0b926ac650709e3816bc967c8795869c116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00cb0b926ac650709e3816bc967c8795869c116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a00cb0b926ac650709e3816bc967c8795869c116"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "01a685a22a1266e1033b21f6fded939b9f83ccbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd25113c6c37534621934617f07776b9212ef33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd25113c6c37534621934617f07776b9212ef33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcd25113c6c37534621934617f07776b9212ef33", "patch": "@@ -1,5 +1,7 @@\n 2005-06-01  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* fold-const.c (fold_ternary): Optimize BIT_FIELD_REF of VECTOR_CST.\n+\n \t* config/i386/xmmintrin.h (_mm_setzero_ps, _mm_set_ss, _mm_set1_ps,\n \t_mm_set_ps, _mm_setr_ps): Add __extension__.\n \t* config/i386/emmintrin.h (_mm_set_sd, _mm_set1_pd, _mm_set_pd,"}, {"sha": "13984d1c8be0b4274eca63b8a6057bab0d8237dc", "filename": "gcc/fold-const.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd25113c6c37534621934617f07776b9212ef33/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd25113c6c37534621934617f07776b9212ef33/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=dcd25113c6c37534621934617f07776b9212ef33", "patch": "@@ -10284,6 +10284,29 @@ fold_ternary (enum tree_code code, tree type, tree op0, tree op1, tree op2)\n \t}\n       return NULL_TREE;\n \n+    case BIT_FIELD_REF:\n+      if (TREE_CODE (arg0) == VECTOR_CST\n+\t  && type == TREE_TYPE (TREE_TYPE (arg0))\n+\t  && host_integerp (arg1, 1)\n+\t  && host_integerp (op2, 1))\n+\t{\n+\t  unsigned HOST_WIDE_INT width = tree_low_cst (arg1, 1);\n+\t  unsigned HOST_WIDE_INT idx = tree_low_cst (op2, 1);\n+\n+\t  if (width != 0\n+\t      && simple_cst_equal (arg1, TYPE_SIZE (type)) == 1\n+\t      && (idx % width) == 0\n+\t      && (idx = idx / width)\n+\t\t < TYPE_VECTOR_SUBPARTS (TREE_TYPE (arg0)))\n+\t    {\n+\t      tree elements = TREE_VECTOR_CST_ELTS (arg0);\n+\t      while (idx-- > 0)\n+\t\telements = TREE_CHAIN (elements);\n+\t      return TREE_VALUE (elements);\n+\t    }\n+\t}\n+      return NULL_TREE;\n+\n     default:\n       return NULL_TREE;\n     } /* switch (code) */"}]}