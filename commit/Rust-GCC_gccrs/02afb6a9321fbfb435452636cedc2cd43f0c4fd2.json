{"sha": "02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhZmI2YTkzMjFmYmZiNDM1NDUyNjM2Y2VkYzJjZDQzZjBjNGZkMg==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2019-11-04T11:23:46Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2019-11-04T11:23:46Z"}, "message": "MSP430: Add -mtiny-printf option\n\n2019-11-04  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\ngcc/\n\t* config.in: Regenerate.\n\t* config/msp430/msp430.c (msp430_option_override): Emit an error if\n\t-mtiny-printf is used without GCC being configured with\n\t--enable-newlib-nano-formatted-io.\n\t* config/msp430/msp430.h (LINK_SPEC): Pass \n\t\"--wrap puts --wrap printf\" when -mtiny-printf is used.\n\t* config/msp430/msp430.opt: Document -mtiny-printf.\n\t* configure: Regenerate.\n\t* configure.ac: Enable --enable-newlib-nano-formatted-io flag.\n\tDefine HAVE_NEWLIB_NANO_FORMATTED_IO if\n\t--enable-newlib-nano-formatted-io is passed.\n\t* doc/invoke.texi: Document -mtiny-printf.\n\ngcc/testsuite/\n\t* gcc.target/msp430/tiny-printf.c: New test.\n\nFrom-SVN: r277774", "tree": {"sha": "b95094eb460ebe7546a506c6abd911669e8fbecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b95094eb460ebe7546a506c6abd911669e8fbecf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0f8e3da333591e40d07ec3621dafef4ae082dcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f8e3da333591e40d07ec3621dafef4ae082dcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0f8e3da333591e40d07ec3621dafef4ae082dcb"}], "stats": {"total": 98, "additions": 94, "deletions": 4}, "files": [{"sha": "193e8e40d1976d82b4df0335a75015f5b4f7702c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -1,3 +1,18 @@\n+2019-11-04  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config.in: Regenerate.\n+\t* config/msp430/msp430.c (msp430_option_override): Emit an error if\n+\t-mtiny-printf is used without GCC being configured with\n+\t--enable-newlib-nano-formatted-io.\n+\t* config/msp430/msp430.h (LINK_SPEC): Pass \n+\t\"--wrap puts --wrap printf\" when -mtiny-printf is used.\n+\t* config/msp430/msp430.opt: Document -mtiny-printf.\n+\t* configure: Regenerate.\n+\t* configure.ac: Enable --enable-newlib-nano-formatted-io flag.\n+\tDefine HAVE_NEWLIB_NANO_FORMATTED_IO if\n+\t--enable-newlib-nano-formatted-io is passed.\n+\t* doc/invoke.texi: Document -mtiny-printf.\n+\n 2019-11-04  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* configure: Regenerate."}, {"sha": "e2afcbc894047c3f42dd89d17ed68db383a52ac1", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -1688,6 +1688,13 @@\n #endif\n \n \n+/* Define if GCC has been configured with --enable-newlib-nano-formatted-io.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_NEWLIB_NANO_FORMATTED_IO\n+#endif\n+\n+\n /* Define to 1 if you have the `nl_langinfo' function. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_NL_LANGINFO"}, {"sha": "4ebdcf51e8b14ea483c457758563bf126bb13ac8", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -287,6 +287,12 @@ msp430_option_override (void)\n      possible to build newlib with -Os enabled.  Until now...  */\n   if (TARGET_OPT_SPACE && optimize < 3)\n     optimize_size = 1;\n+\n+#ifndef HAVE_NEWLIB_NANO_FORMATTED_IO\n+  if (TARGET_TINY_PRINTF)\n+    error (\"GCC must be configured with %<--enable-newlib-nano-formatted-io%> \"\n+\t   \"to use %<-mtiny-printf%>\");\n+#endif\n }\n \n #undef  TARGET_SCALAR_MODE_SUPPORTED_P"}, {"sha": "0ea6b0a093e64951776d9c998a0d609a18fc578d", "filename": "gcc/config/msp430/msp430.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfig%2Fmsp430%2Fmsp430.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.h?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -75,7 +75,8 @@ extern bool msp430x;\n     \"msp430_propagate_region_opt(%* %{muse-lower-region-prefix})} \" \\\n   \"%{mdata-region=*:--data-region=%:\" \\\n     \"msp430_propagate_region_opt(%* %{muse-lower-region-prefix})} \" \\\n-  \"%:msp430_get_linker_devices_include_path()\"\n+  \"%:msp430_get_linker_devices_include_path() \" \\\n+  \"%{mtiny-printf:--wrap puts --wrap printf} \"\n \n #define DRIVER_SELF_SPECS \\\n   \" %{!mlarge:%{mcode-region=*:%{mdata-region=*:%e-mcode-region and \"\t\\"}, {"sha": "b451174c3d10832e675c930d0dc18e0707bcb766", "filename": "gcc/config/msp430/msp430.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfig%2Fmsp430%2Fmsp430.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfig%2Fmsp430%2Fmsp430.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.opt?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -2,6 +2,10 @@ msim\n Target\n Use simulator runtime.\n \n+mtiny-printf\n+Target Report Mask(TINY_PRINTF)\n+Use a lightweight configuration of printf and puts to reduce code size. For single-threaded applications, not requiring reentrant I/O only. Requires Newlib Nano IO.\n+\n masm-hex\n Target Mask(ASM_HEX)\n Force assembly output to always use hex constants."}, {"sha": "9fe04293f726043f81ce8afe1b625faf63d2e9a4", "filename": "gcc/configure", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -990,6 +990,7 @@ with_plugin_ld\n enable_gnu_indirect_function\n enable_initfini_array\n enable_comdat\n+enable_newlib_nano_formatted_io\n enable_standard_branch_protection\n enable_fix_cortex_a53_835769\n enable_fix_cortex_a53_843419\n@@ -1718,6 +1719,8 @@ Optional Features:\n                           glibc systems\n   --enable-initfini-array\tuse .init_array/.fini_array sections\n   --enable-comdat         enable COMDAT group support\n+  --enable-newlib-nano-formatted-io\n+                          Use nano version formatted IO\n \n   --enable-standard-branch-protection\n                           enable Branch Target Identification Mechanism and\n@@ -18923,7 +18926,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18926 \"configure\"\n+#line 18929 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19029,7 +19032,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19032 \"configure\"\n+#line 19035 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -24549,6 +24552,19 @@ $as_echo \"#define HAVE_GAS_DISCRIMINATOR 1\" >>confdefs.h\n fi\n \n \n+# Catch the newlib flag of the same name so we can gate GCC features on it.\n+# Check whether --enable-newlib-nano-formatted-io was given.\n+if test \"${enable_newlib_nano_formatted_io+set}\" = set; then :\n+  enableval=$enable_newlib_nano_formatted_io; case \"${enableval}\" in\n+  yes|no)\n+    ;;\n+  *)\n+    as_fn_error $? \"unknown newlib-nano-formatted-io setting $enableval\" \"$LINENO\" 5\n+    ;;\n+esac\n+fi\n+\n+\n # Thread-local storage - the check is heavily parameterized.\n conftest_s=\n tls_first_major=\n@@ -27939,6 +27955,11 @@ $as_echo \"#define HAVE_AS_MSPABI_ATTRIBUTE 1\" >>confdefs.h\n \n fi\n \n+    if test x$enable_newlib_nano_formatted_io = xyes; then\n+\n+$as_echo \"#define HAVE_NEWLIB_NANO_FORMATTED_IO 1\" >>confdefs.h\n+\n+      fi\n     ;;\n     riscv*-*-*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .attribute support\" >&5"}, {"sha": "0fe4e5472728e90eb4993da89e5b33754036870e", "filename": "gcc/configure.ac", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -3359,6 +3359,18 @@ gcc_GAS_CHECK_FEATURE([line table discriminator support],\n [AC_DEFINE(HAVE_GAS_DISCRIMINATOR, 1,\n   [Define if your assembler supports the .loc discriminator sub-directive.])])\n \n+# Catch the newlib flag of the same name so we can gate GCC features on it.\n+AC_ARG_ENABLE(newlib-nano-formatted-io,\n+[AS_HELP_STRING([--enable-newlib-nano-formatted-io], [Use nano version\n+ formatted IO])],\n+[case \"${enableval}\" in\n+  yes|no)\n+    ;;\n+  *)\n+    AC_MSG_ERROR([unknown newlib-nano-formatted-io setting $enableval])\n+    ;;\n+esac], [])\n+\n # Thread-local storage - the check is heavily parameterized.\n conftest_s=\n tls_first_major=\n@@ -4999,6 +5011,10 @@ pointers into PC-relative form.])\n       [.mspabi_attribute 4,1],,\n       [AC_DEFINE(HAVE_AS_MSPABI_ATTRIBUTE, 1,\n \t  [Define if your assembler supports .mspabi_attribute.])])\n+    if test x$enable_newlib_nano_formatted_io = xyes; then\n+      AC_DEFINE(HAVE_NEWLIB_NANO_FORMATTED_IO, 1, [Define if GCC has been\n+configured with --enable-newlib-nano-formatted-io.])\n+      fi\n     ;;\n     riscv*-*-*)\n     gcc_GAS_CHECK_FEATURE([.attribute support],"}, {"sha": "bf3ea3f6c046f652f81dd104ef0a4d03e26fff9a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -1010,7 +1010,7 @@ Objective-C and Objective-C++ Dialects}.\n -mwarn-mcu @gol\n -mcode-region=  -mdata-region= @gol\n -msilicon-errata=  -msilicon-errata-warn= @gol\n--mhwmult=  -minrt}\n+-mhwmult=  -minrt  -mtiny-printf}\n \n @emph{NDS32 Options}\n @gccoptlist{-mbig-endian  -mlittle-endian @gol\n@@ -23323,6 +23323,19 @@ initializers or constructors.  This is intended for memory-constrained\n devices.  The compiler includes special symbols in some objects\n that tell the linker and runtime which code fragments are required.\n \n+@item -mtiny-printf\n+@opindex mtiny-printf\n+Enable reduced code size @code{printf} and @code{puts} library functions.\n+The @samp{tiny} implementations of these functions are not reentrant, so\n+must be used with caution in multi-threaded applications.\n+\n+Support for streams has been removed and the string to be printed will\n+always be sent to stdout via the @code{write} syscall.  The string is not\n+buffered before it is sent to write.\n+\n+This option requires Newlib Nano IO, so GCC must be configured with\n+@samp{--enable-newlib-nano-formatted-io}.\n+\n @item -mcode-region=\n @itemx -mdata-region=\n @opindex mcode-region"}, {"sha": "7f7acb3f887a8f7b805e69ae618fc98f99a29924", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -1,3 +1,7 @@\n+2019-11-04  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.target/msp430/tiny-printf.c: New test.\n+\n 2019-11-04  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* gcc.target/msp430/devices/csv-using-env-var.c: New test."}, {"sha": "55ef5f76ca43484fd073cbeeccd95d063179150a", "filename": "gcc/testsuite/gcc.target/msp430/tiny-printf.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Ftiny-printf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02afb6a9321fbfb435452636cedc2cd43f0c4fd2/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Ftiny-printf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmsp430%2Ftiny-printf.c?ref=02afb6a9321fbfb435452636cedc2cd43f0c4fd2", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mtiny-printf\" } */\n+/* { dg-error \"GCC must be configured with --enable-newlib-nano-formatted-io to use -mtiny-printf\" \"\" { target { ! newlib_nano_io } } 0 } */"}]}