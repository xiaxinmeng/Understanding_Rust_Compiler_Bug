{"sha": "867580ce463bb435a5f05bf9c1fcabf0ab0ddf73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY3NTgwY2U0NjNiYjQzNWE1ZjA1YmY5YzFmY2FiZjBhYjBkZGY3Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-29T00:58:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-29T00:58:46Z"}, "message": "class.c (finish_struct): Use bitsize_zero_node.\n\n        * class.c (finish_struct): Use bitsize_zero_node.\n        * pt.c (instantiate_class_template): Likewise.\n\nFrom-SVN: r32794", "tree": {"sha": "4c13db3659cab3432035db822e8a10c10aaff8bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c13db3659cab3432035db822e8a10c10aaff8bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73/comments", "author": null, "committer": null, "parents": [{"sha": "acbedd7cc0bdf155b70b9b993bc343466c984ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acbedd7cc0bdf155b70b9b993bc343466c984ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acbedd7cc0bdf155b70b9b993bc343466c984ef6"}], "stats": {"total": 51, "additions": 29, "deletions": 22}, "files": [{"sha": "1b893439b62e859d0337555647c97baef1e96dd4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 27, "deletions": 20, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=867580ce463bb435a5f05bf9c1fcabf0ab0ddf73", "patch": "@@ -1,3 +1,8 @@\n+2000-03-28  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* class.c (finish_struct): Use bitsize_zero_node.\n+\t* pt.c (instantiate_class_template): Likewise.\n+\n 2000-03-28  Mark Mitchell  <mark@codesourcery.com>\n \n \tPut RTTI entries at negative offsets in new ABI.\n@@ -121,30 +126,32 @@ Sat Mar 25 09:12:10 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2000-03-20 Theodore Papadopoulo <Theodore.Papadopoulo@sophia.inria.fr>\n \n-\t* call.c (check_dtor_name,build_new_method_call): Use DECL_P and\n-\tTYPE_P macros.\n-\t* decl.c (push_class_binding,poplevel,pushtag,lookup_namespace_name,\n-\tmake_typename_type,check_initializer,cp_finish_decl,xref_tag): Likewise.\n-\t* decl2.c (grokfield,build_expr_from_tree,build_expr_from_tree,\n-\tdecl_namespace,arg_assoc_template_arg,arg_assoc,\n-\tvalidate_nonmember_using_decl,do_class_using_decl): Likewise.\n-\t* error.c (dump_template_argument,dump_expr,cp_file_of,cp_line_of,\n+\t* call.c (check_dtor_name, build_new_method_call): Use TYPE_P and\n+\tDECL_P macros.\n+\t* decl.c (push_class_binding, poplevel, pushtag, lookup_namespace_name,\n+\tmake_typename_type, check_initializer, cp_finish_decl,\n+\txref_tag): Likewise.\n+\t* decl2.c (grokfield, build_expr_from_tree, build_expr_from_tree,\n+\tdecl_namespace, arg_assoc_template_arg, arg_assoc,\n+\tvalidate_nonmember_using_decl, do_class_using_decl): Likewise.\n+\t* error.c (dump_template_argument, dump_expr, cp_file_of, cp_line_of,\n \targs_to_string): Likewise.\n \t* friend.c (is_friend): Likewise.\n-\t* lex.c (note_got_semicolon,note_list_got_semicolon,is_global): Likewise.\n-\t* method.c (build_overload_nested_name,build_overload_value,\n-\tbuild_qualified_name,build_qualified_name,hack_identifier): Likewise.\n-\t* parse.y (typename_sub,typename_sub1): Likewise.\n-\t* pt.c (push_inline_template_parms_recursive,check_template_shadow,\n-\tprocess_partial_specialization,convert_template_argument,\n-\ttemplate_args_equal,add_pending_template,lookup_template_class,\n-\tfor_each_template_parm_r,maybe_fold_nontype_arg,\n-\ttsubst,instantiate_template,type_unification_real,unify,\n-\tinstantiate_pending_templates,set_mangled_name_for_template_decl):\n+\t* lex.c (note_got_semicolon, note_list_got_semicolon,\n+\tis_global): Likewise.\n+\t* method.c (build_overload_nested_name, build_overload_value,\n+\tbuild_qualified_name, build_qualified_name, hack_identifier): Likewise.\n+\t* parse.y (typename_sub, typename_sub1): Likewise.\n+\t* pt.c (push_inline_template_parms_recursive, check_template_shadow,\n+\tprocess_partial_specialization, convert_template_argument,\n+\ttemplate_args_equal, add_pending_template, lookup_template_class,\n+\tfor_each_template_parm_r, maybe_fold_nontype_arg,\n+\ttsubst, instantiate_template, type_unification_real, unify,\n+\tinstantiate_pending_templates, set_mangled_name_for_template_decl):\n \tLikewise.\n-\t* repo.c (repo_get_id,repo_template_used): Likewise.\n+\t* repo.c (repo_get_id, repo_template_used): Likewise.\n \t* search.c (lookup_field_1): Likewise.\n-\t* tree.c (walk_tree,get_type_decl,cp_tree_equal,member_p): Likewise.\n+\t* tree.c (walk_tree, get_type_decl, cp_tree_equal, member_p): Likewise.\n \t* xref.c (classname): Likewise.\n \t\n 2000-03-22  Mark Mitchell  <mark@codesourcery.com>"}, {"sha": "881c66d8aa1efde0a70e6a59ecdd266cca67e184", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=867580ce463bb435a5f05bf9c1fcabf0ab0ddf73", "patch": "@@ -5430,7 +5430,7 @@ finish_struct (t, attributes)\n   if (processing_template_decl)\n     {\n       finish_struct_methods (t);\n-      TYPE_SIZE (t) = integer_zero_node;\n+      TYPE_SIZE (t) = bitsize_zero_node;\n     }\n   else\n     finish_struct_1 (t);"}, {"sha": "83d738decde94dba5d16c79cd921d9bc380a7a2b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867580ce463bb435a5f05bf9c1fcabf0ab0ddf73/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=867580ce463bb435a5f05bf9c1fcabf0ab0ddf73", "patch": "@@ -4757,7 +4757,7 @@ instantiate_class_template (type)\n       CLASSTYPE_TAGS (type) = CLASSTYPE_TAGS (pattern);\n       /* Pretend that the type is complete, so that we will look\n \t inside it during name lookup and such.  */\n-      TYPE_SIZE (type) = integer_zero_node;\n+      TYPE_SIZE (type) = bitsize_zero_node;\n       return type;\n     }\n "}]}