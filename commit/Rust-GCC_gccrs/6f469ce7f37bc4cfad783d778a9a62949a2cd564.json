{"sha": "6f469ce7f37bc4cfad783d778a9a62949a2cd564", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY0NjljZTdmMzdiYzRjZmFkNzgzZDc3OGE5YTYyOTQ5YTJjZDU2NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-14T00:35:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-14T00:35:30Z"}, "message": "Initial revision\n\nFrom-SVN: r11759", "tree": {"sha": "4f9e3d4a406b1669d70f4b088ccfd68ad0dd988b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f9e3d4a406b1669d70f4b088ccfd68ad0dd988b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f469ce7f37bc4cfad783d778a9a62949a2cd564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f469ce7f37bc4cfad783d778a9a62949a2cd564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f469ce7f37bc4cfad783d778a9a62949a2cd564", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f469ce7f37bc4cfad783d778a9a62949a2cd564/comments", "author": null, "committer": null, "parents": [{"sha": "e247ca2ac42b5cca9acdd9a4f35dec09beba0a08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e247ca2ac42b5cca9acdd9a4f35dec09beba0a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e247ca2ac42b5cca9acdd9a4f35dec09beba0a08"}], "stats": {"total": 309, "additions": 309, "deletions": 0}, "files": [{"sha": "79a242068a5fb722c84e7e6a4f05715a390c0794", "filename": "gcc/config/m68k/auxas.h", "status": "added", "additions": 189, "deletions": 0, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f469ce7f37bc4cfad783d778a9a62949a2cd564/gcc%2Fconfig%2Fm68k%2Fauxas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f469ce7f37bc4cfad783d778a9a62949a2cd564/gcc%2Fconfig%2Fm68k%2Fauxas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fauxas.h?ref=6f469ce7f37bc4cfad783d778a9a62949a2cd564", "patch": "@@ -0,0 +1,189 @@\n+/* Definitions for Motorola 680x0 running A/UX using /bin/as\n+   Copyright (C) 1996 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define USE_BIN_AS\n+\n+#ifndef USE_COLLECT2\n+#define USE_COLLECT2\n+#endif\n+\n+#ifndef __ASSEMBLY__\n+\n+#include \"m68k/sgs.h\"\n+\n+#define ASM_SPEC \"%{m68030:-68030 }%{m68040:-68040 }\"\n+\n+/* Modify AT&T SGS assembler syntax */\n+/* A/UX's as doesn't do dots in pseodo-ops */\n+\n+#define SDB_DEBUGGING_INFO\n+\n+#define NO_DOLLAR_IN_LABEL\n+#define NO_DOT_IN_LABEL\n+\n+#undef TEXT_SECTION_ASM_OP\n+#define TEXT_SECTION_ASM_OP\t\"\\ttext\"\n+\n+#undef DATA_SECTION_ASM_OP\n+#define DATA_SECTION_ASM_OP\t\"\\tdata\\t1\"\n+\n+#undef BYTE_ASM_OP\n+#define\tBYTE_ASM_OP\t\t\"byte\"\n+\n+#undef WORD_ASM_OP\n+#define WORD_ASM_OP\t\t\"short\"\n+\n+#undef LONG_ASM_OP\n+#define LONG_ASM_OP\t\t\"long\"\n+\n+#undef SPACE_ASM_OP\n+#define SPACE_ASM_OP\t\t\"space\"\n+\n+#undef ALIGN_ASM_OP\n+#define ALIGN_ASM_OP\t\t\"align\"\n+\n+#undef GLOBAL_ASM_OP\n+#define GLOBAL_ASM_OP\t\t\"\\tglobal\"\n+\n+#undef SWBEG_ASM_OP\n+#define SWBEG_ASM_OP\t\t\"swbeg\"\n+\n+#undef SET_ASM_OP\n+#define SET_ASM_OP\t\t\"set\"\n+\n+#undef ASM_PN_FORMAT\n+#define ASM_PN_FORMAT\t\t\"%s%%%d\"\n+\n+#undef LOCAL_LABEL_PREFIX\n+#define LOCAL_LABEL_PREFIX\t\"L%\"\n+\n+#define ADDITIONAL_REGISTER_NAMES { \"%a6\", 14, \"%a7\", 15 }\n+\n+#undef ASM_OUTPUT_INT\n+#define ASM_OUTPUT_INT(FILE,VALUE)                      \\\n+( fprintf ((FILE), \"\\t%s \", LONG_ASM_OP),               \\\n+  output_addr_const ((FILE), (VALUE)),                  \\\n+  fprintf ((FILE), \"\\n\"))\n+\n+#undef ASM_OUTPUT_COMMON\n+#define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)\t\\\n+( fputs (\"\\tcomm\\t\", (FILE)),\t\t\t\t\\\n+  assemble_name ((FILE), (NAME)),\t\t\t\\\n+  fprintf ((FILE), \",%u\\n\", (ROUNDED)))\n+\n+#undef ASM_OUTPUT_LOCAL\n+#define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)\t\\\n+( fputs (\"\\tlcomm\\t\", (FILE)),\t\t\t\t\\\n+  assemble_name ((FILE), (NAME)),\t\t\t\\\n+  fprintf ((FILE), \",%u\\n\", (ROUNDED)))\n+\n+#undef ASM_FILE_START\n+#define ASM_FILE_START(FILE)\t\t\t\t\\\n+  output_file_directive ((FILE), main_input_filename)\n+\n+#undef ASM_OUTPUT_SOURCE_FILENAME\n+#define ASM_OUTPUT_SOURCE_FILENAME(FILE, NAME)\t\t\\\n+( fputs (\"\\tfile\\t\", (FILE)),\t\t\t\t\\\n+  output_quoted_string ((FILE), (NAME)),\t\t\\\n+  fputc ('\\n', (FILE)) )\n+\n+#undef ASM_OUTPUT_CASE_FETCH\n+#define ASM_OUTPUT_CASE_FETCH(file, labelno, regname)\t\\\n+    asm_fprintf (file, \"10(%Rpc,%s.\", regname)\n+\n+#define SGS_NO_LI\n+\n+/* Random macros describing parts of SDB data.  */\n+\n+#define PUT_SDB_SCL(a) \\\n+  fprintf(asm_out_file, \"\\tscl\\t%d%s\", (a), SDB_DELIM)\n+\n+#define PUT_SDB_INT_VAL(a) \\\n+  fprintf (asm_out_file, \"\\tval\\t%d%s\", (a), SDB_DELIM)\n+\n+#define PUT_SDB_VAL(a)\t\t\t\t\\\n+( fputs (\"\\tval\\t\", asm_out_file),\t\t\\\n+  output_addr_const (asm_out_file, (a)),\t\\\n+  fprintf (asm_out_file, SDB_DELIM))\n+\n+#define PUT_SDB_DEF(a)\t\t\t\t\\\n+do { fprintf (asm_out_file, \"\\tdef\\t\");\t\t\\\n+     ASM_OUTPUT_LABELREF (asm_out_file, a); \t\\\n+     fprintf (asm_out_file, SDB_DELIM); } while (0)\n+\n+#define PUT_SDB_PLAIN_DEF(a) fprintf(asm_out_file,\"\\tdef\\t~%s%s\", a, SDB_DELIM)\n+\n+#define PUT_SDB_ENDEF fputs(\"\\tendef\\n\", asm_out_file)\n+\n+#define PUT_SDB_TYPE(a) fprintf(asm_out_file, \"\\ttype\\t0%o%s\", a, SDB_DELIM)\n+\n+#define PUT_SDB_SIZE(a) fprintf(asm_out_file, \"\\tsize\\t%d%s\", a, SDB_DELIM)\n+\n+#define PUT_SDB_START_DIM fprintf(asm_out_file, \"\\tdim\\t\")\n+\n+#define PUT_SDB_NEXT_DIM(a) fprintf(asm_out_file, \"%d,\", a)\n+\n+#define PUT_SDB_LAST_DIM(a) fprintf(asm_out_file, \"%d%s\", a, SDB_DELIM)\n+\n+#define PUT_SDB_TAG(a)\t\t\t\t\\\n+do { fprintf (asm_out_file, \"\\ttag\\t\");\t\t\\\n+     ASM_OUTPUT_LABELREF (asm_out_file, a);\t\\\n+     fprintf (asm_out_file, SDB_DELIM); } while (0)\n+\n+#define PUT_SDB_BLOCK_START(LINE)\t\t\\\n+  fprintf (asm_out_file,\t\t\t\\\n+\t   \"\\tdef\\t~bb%s\\tval\\t~%s\\tscl\\t100%s\\tline\\t%d%s\\tendef\\n\", \\\n+\t   SDB_DELIM, SDB_DELIM, SDB_DELIM, (LINE), SDB_DELIM)\n+\n+#define PUT_SDB_BLOCK_END(LINE)\t\t\t\\\n+  fprintf (asm_out_file,\t\t\t\\\n+\t   \"\\tdef\\t~eb%s\\tval\\t~%s\\tscl\\t100%s\\tline\\t%d%s\\tendef\\n\",  \\\n+\t   SDB_DELIM, SDB_DELIM, SDB_DELIM, (LINE), SDB_DELIM)\n+\n+#define PUT_SDB_FUNCTION_START(LINE)\t\t\\\n+  fprintf (asm_out_file,\t\t\t\\\n+\t   \"\\tdef\\t~bf%s\\tval\\t~%s\\tscl\\t101%s\\tline\\t%d%s\\tendef\\n\", \\\n+\t   SDB_DELIM, SDB_DELIM, SDB_DELIM, (LINE), SDB_DELIM)\n+\n+#define PUT_SDB_FUNCTION_END(LINE)\t\t\\\n+  fprintf (asm_out_file,\t\t\t\\\n+\t   \"\\tdef\\t~ef%s\\tval\\t~%s\\tscl\\t101%s\\tline\\t%d%s\\tendef\\n\", \\\n+\t   SDB_DELIM, SDB_DELIM, SDB_DELIM, (LINE), SDB_DELIM)\n+\n+#define PUT_SDB_EPILOGUE_END(NAME)\t\t\t\\\n+do { fprintf (asm_out_file, \"\\tdef\\t\");\t\t\t\\\n+     ASM_OUTPUT_LABELREF (asm_out_file, NAME);\t\t\\\n+     fprintf (asm_out_file,\t\t\t\t\\\n+\t      \"%s\\tval\\t~%s\\tscl\\t-1%s\\tendef\\n\",\t\\\n+\t      SDB_DELIM, SDB_DELIM, SDB_DELIM); } while (0)\n+\n+#define SDB_GENERATE_FAKE(BUFFER, NUMBER) \\\n+  sprintf ((BUFFER), \"~%dfake\", (NUMBER));\n+\n+#define ASM_OUTPUT_SOURCE_LINE(FILE, LINE)\t\t\\\n+    fprintf((FILE), \"\\tln\\t%d\\n\", \t\t\t\\\n+\t    (sdb_begin_function_line > 1 ?\t\t\\\n+\t     last_linenum - sdb_begin_function_line : 1))\n+\n+#define ASM_MOV_INSN\t\"mov.l\"\n+\n+#define FUNCTION_PROFILER_SYMBOL \"mcount%\"\n+\n+#endif /* !__ASSEMBLY__ */"}, {"sha": "c2e0d567b4553b3f168f367e91d2773c7d253cb4", "filename": "gcc/config/m68k/auxgas.h", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f469ce7f37bc4cfad783d778a9a62949a2cd564/gcc%2Fconfig%2Fm68k%2Fauxgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f469ce7f37bc4cfad783d778a9a62949a2cd564/gcc%2Fconfig%2Fm68k%2Fauxgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fauxgas.h?ref=6f469ce7f37bc4cfad783d778a9a62949a2cd564", "patch": "@@ -0,0 +1,56 @@\n+/* Definitions for Motorola 680x0 running A/UX using GAS\n+   Copyright (C) 1996 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define USE_GAS\n+\n+#ifndef __ASSEMBLY__\n+\n+#include \"m68k/m68k.h\"\n+#include \"m68k/coff.h\"\n+\n+#define ASM_SPEC \"%{m68000:-Am68000 }%{m68030:-Am68030 }%{m68040:-Am68040 }\"\n+\n+/* Output #ident as a .ident.  */\n+#define ASM_OUTPUT_IDENT(FILE, NAME) \\\n+  fprintf (FILE, \"\\t.ident \\\"%s\\\"\\n\", NAME);\n+\n+#ifdef IDENTIFY_WITH_IDENT\n+/* Put the GCC identification somewhere nicer, I think.\n+   Does the COFF GDB use the \"gcc2_complied.\" symbol anyway? */\n+#define ASM_IDENTIFY_GCC(FILE) /* nothing */\n+#define ASM_IDENTIFY_LANGUAGE(FILE) \\\n+  fprintf (FILE, \"\\t.ident \\\"GCC (%s) %s\\\"\\n\", lang_identify(), version_string)\n+#endif\n+\n+#ifdef USE_COLLECT2\n+#undef ASM_OUTPUT_CONSTRUCTOR\n+#undef ASM_OUTPUT_DESTRUCTOR\n+/* for the sake of link-level compatibility with /bin/as version */\n+#define NO_DOLLAR_IN_LABEL\n+#define NO_DOT_IN_LABEL\n+#endif\n+\n+#define ADDITIONAL_REGISTER_NAMES  { \"%fp\", 14, \"%a7\", 15 }\n+\n+#define ASM_MOV_INSN\t\"movel\"\n+\n+#define FUNCTION_PROFILER_SYMBOL \"__mcount\"\n+\n+#endif /* !__ASSEMBLY__ */"}, {"sha": "12c97afaead1f5e2f647e52e57c9ecc5dfb71a2c", "filename": "gcc/config/m68k/auxgld.h", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f469ce7f37bc4cfad783d778a9a62949a2cd564/gcc%2Fconfig%2Fm68k%2Fauxgld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f469ce7f37bc4cfad783d778a9a62949a2cd564/gcc%2Fconfig%2Fm68k%2Fauxgld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fauxgld.h?ref=6f469ce7f37bc4cfad783d778a9a62949a2cd564", "patch": "@@ -0,0 +1,29 @@\n+/* Definitions for Motorola 680x0 running A/UX using GLD\n+   Copyright (C) 1996 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define USE_GNU_LD\n+\n+#ifndef __ASSEMBLY__\n+\n+#define LINK_SPEC \\\n+\"%{p:-L/lib/libp -L/usr/lib/libp }%{pg:-L/lib/libp -L/usr/lib/libp }\\\n+%{smac:-T low.gld%s }\"\n+\n+#endif /* !__ASSEMBLY__ */"}, {"sha": "932dd6ab9530e2a3f726f91d1221d7ee96e22d0a", "filename": "gcc/config/m68k/auxld.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f469ce7f37bc4cfad783d778a9a62949a2cd564/gcc%2Fconfig%2Fm68k%2Fauxld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f469ce7f37bc4cfad783d778a9a62949a2cd564/gcc%2Fconfig%2Fm68k%2Fauxld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fauxld.h?ref=6f469ce7f37bc4cfad783d778a9a62949a2cd564", "patch": "@@ -0,0 +1,35 @@\n+/* Definitions for Motorola 680x0 running A/UX using /bin/ld\n+   Copyright (C) 1996 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define USE_BIN_LD\n+\n+#ifndef USE_COLLECT2\n+#define USE_COLLECT2\n+#endif\n+\n+#ifndef __ASSEMBLY__\n+\n+#define LINK_SPEC \\\n+\"%{p:-L/lib/libp -L/usr/lib/libp }%{pg:-L/lib/libp -L/usr/lib/libp }\\\n+%{smac:low.ld%s }%{!smac:shlib.ld%s }\"\n+\n+#define SWITCHES_NEED_SPACES \"o\"\n+\n+#endif /* !__ASSEMBLY__ */"}]}