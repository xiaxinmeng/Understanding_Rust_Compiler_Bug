{"sha": "34de028f1d663a366c006721e9719e66199b136e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRkZTAyOGYxZDY2M2EzNjZjMDA2NzIxZTk3MTllNjYxOTliMTM2ZQ==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-09-22T07:58:01Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-09-22T07:58:01Z"}, "message": "c4x.c (c4x_process_after_reload): Rework machdep insn splitting to not use output template.\n\n\t* config/c4x/c4x.c (c4x_process_after_reload): Rework machdep insn\n\tsplitting to not use output template.\n\nFrom-SVN: r29579", "tree": {"sha": "d5f50c09656717b5335d585b0773d9829492d484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5f50c09656717b5335d585b0773d9829492d484"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34de028f1d663a366c006721e9719e66199b136e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34de028f1d663a366c006721e9719e66199b136e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34de028f1d663a366c006721e9719e66199b136e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34de028f1d663a366c006721e9719e66199b136e/comments", "author": null, "committer": null, "parents": [{"sha": "634f1f20df6193f043d70429d8d3d750563980a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/634f1f20df6193f043d70429d8d3d750563980a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/634f1f20df6193f043d70429d8d3d750563980a7"}], "stats": {"total": 38, "additions": 21, "deletions": 17}, "files": [{"sha": "41a280500b6a8c31f92f4bc14db38724ba4539d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34de028f1d663a366c006721e9719e66199b136e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34de028f1d663a366c006721e9719e66199b136e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34de028f1d663a366c006721e9719e66199b136e", "patch": "@@ -1,3 +1,8 @@\n+Wed Sep 22 19:56:25 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.c (c4x_process_after_reload): Rework machdep insn\n+\tsplitting to not use output template.\n+\n Wed Sep 22 19:50:12 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.h (EXPAND_BUILTIN_VA_START): Call c4x_va_start."}, {"sha": "28ec73b72216f19ba55a9658dbe74191aa3e551d", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34de028f1d663a366c006721e9719e66199b136e/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34de028f1d663a366c006721e9719e66199b136e/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=34de028f1d663a366c006721e9719e66199b136e", "patch": "@@ -2200,26 +2200,25 @@ c4x_process_after_reload (first)\n \t  if (insn_code_number == CODE_FOR_rptb_end)\n \t    c4x_rptb_insert(insn);\n \n-\t  /* We split all insns here if they have a # for the output\n-\t     template.  */\n-\n-\t  if (1)\n+\t  /* When the optimization level less than 2 we need to split\n+\t     the insn here.  Otherwise the calls to force_const_mem\n+\t     will not work.  */\n+\t  if (optimize < 2)\n \t    {\n-\t      const char *template;\n+\t      rtx old = insn;\n+\n+\t      /* Don't split the insn if it has been deleted.  */\n+\t      if (! INSN_DELETED_P (old))\n+\t        insn = try_split (PATTERN(old), old, 1);\n \n-\t      template = get_insn_template (insn_code_number, insn);\n-\t      if (template && template[0] == '#' && template[1] == '\\0')\n+\t      /* When not optimizing, the old insn will be still left around\n+\t\t with only the 'deleted' bit set.  Transform it into a note\n+\t\t to avoid confusion of subsequent processing.  */\n+\t      if (INSN_DELETED_P (old))\n \t\t{\n-\t\t  rtx new = try_split (PATTERN(insn), insn, 0);\n-\t\t  \n-\t\t  /* If we didn't split the insn, go away.  */\n-\t\t  if (new == insn && PATTERN (new) == PATTERN(insn))\n-\t\t    fatal_insn (\"Couldn't split pattern\", insn);\n-\n-\t\t  PUT_CODE (insn, NOTE);\n-\t\t  NOTE_SOURCE_FILE (insn) = 0;\n-\t\t  NOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n-\t\t  insn = new;\n+\t\t  PUT_CODE (old, NOTE);\n+\t\t  NOTE_LINE_NUMBER (old) = NOTE_INSN_DELETED;\n+\t\t  NOTE_SOURCE_FILE (old) = 0;\n \t\t}\n \t    }\n \t}"}]}