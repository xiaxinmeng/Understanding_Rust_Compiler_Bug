{"sha": "dd8f3ed555ee6fdae7c9570e9dfda963330e9b15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ4ZjNlZDU1NWVlNmZkYWU3Yzk1NzBlOWRmZGE5NjMzMzBlOWIxNQ==", "commit": {"author": {"name": "Geoffrey Noer", "email": "noer@cygnus.com", "date": "1998-11-19T21:16:49Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-11-19T21:16:49Z"}, "message": "configure.in: detect cygwin* instead of cygwin32*\n\n  \t* configure.in: detect cygwin* instead of cygwin32*\n  \t* configure: regenerate\n  \t* configure.in: in comment, call AC_EXEEXT instead of AM_EXEEXT\n\nFrom-SVN: r23725", "tree": {"sha": "ff8a5bccc182a6fa581cb18d91f121ce3588ca2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff8a5bccc182a6fa581cb18d91f121ce3588ca2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15/comments", "author": null, "committer": null, "parents": [{"sha": "24deb20af90e66d879221e5f360d86130180181e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24deb20af90e66d879221e5f360d86130180181e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24deb20af90e66d879221e5f360d86130180181e"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "3c0c2da2ec944876c4e2c8e3f95f8ae46f5a2352", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=dd8f3ed555ee6fdae7c9570e9dfda963330e9b15", "patch": "@@ -33,6 +33,11 @@ Sat Nov  7 16:02:10 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* mkstemp.c: Likewise.\n \t* pexecute.c: Likewise.\n \n+Mon Nov  2 15:05:33 1998  Geoffrey Noer  <noer@cygnus.com>\n+\n+        * configure.in: detect cygwin* instead of cygwin32*\n+        * configure: regenerate\n+\n Mon Nov  2 10:22:01 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* pexecute.c: Check HAVE_CONFIG_H, not IN_GCC, when determining\n@@ -129,6 +134,10 @@ Tue Oct 13 23:51:51 1998  Jeffrey A Law  (law@cygnus.com)\n \t* configure.in (AC_CHECK_HEADERS): Check for strings.h too.\n \t* config.in, configure: Rebuilt.\n \n+Mon Oct 12 19:15:59 1998  Geoffrey Noer  <noer@cygnus.com>\n+\n+        * configure.in: in comment, call AC_EXEEXT instead of AM_EXEEXT\n+\n Sun Oct 11 17:36:06 1998  Michael Tiemann  <tiemann@holodeck.cygnus.com>\n \n \t* Makefile.in (cplus-dem.o, obstack.o): Depend upon config.h."}, {"sha": "2eac6f3a28163cc49e0ecc955a4a4d24f65b1457", "filename": "libiberty/configure", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=dd8f3ed555ee6fdae7c9570e9dfda963330e9b15", "patch": "@@ -1595,10 +1595,10 @@ if test -z \"${setobjs}\"; then\n \n   case \"${host}\" in\n \n-  *-*-cygwin32*)\n-    # The cygwin32 library actually uses a couple of files from\n+  *-*-cygwin*)\n+    # The Cygwin library actually uses a couple of files from\n     # libiberty when it is built.  If we are building a native\n-    # cygwin32, and we run the tests, we will appear to have these\n+    # Cygwin, and we run the tests, we will appear to have these\n     # files.  However, when we go on to build winsup, we will wind up\n     # with a library which does not have the files, since they should\n     # have come from libiberty."}, {"sha": "0b9b35b478508d9fb4670bc1da8746709a7d8aa3", "filename": "libiberty/configure.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd8f3ed555ee6fdae7c9570e9dfda963330e9b15/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=dd8f3ed555ee6fdae7c9570e9dfda963330e9b15", "patch": "@@ -93,7 +93,7 @@ AC_CONFIG_HEADER(config.h:config.in)\n \n dnl When we start using automake:\n dnl AM_MAINTAINER_MODE\n-dnl AM_EXEEXT\n+dnl AC_EXEEXT\n \n dnl When we start using automake:\n dnl AM_PROG_INSTALL\n@@ -249,10 +249,10 @@ if test -z \"${setobjs}\"; then\n \n   case \"${host}\" in\n \n-  *-*-cygwin32*)\n-    # The cygwin32 library actually uses a couple of files from\n+  *-*-cygwin*)\n+    # The Cygwin library actually uses a couple of files from\n     # libiberty when it is built.  If we are building a native\n-    # cygwin32, and we run the tests, we will appear to have these\n+    # Cygwin, and we run the tests, we will appear to have these\n     # files.  However, when we go on to build winsup, we will wind up\n     # with a library which does not have the files, since they should\n     # have come from libiberty."}]}