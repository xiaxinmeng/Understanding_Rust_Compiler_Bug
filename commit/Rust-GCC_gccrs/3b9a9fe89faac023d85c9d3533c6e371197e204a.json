{"sha": "3b9a9fe89faac023d85c9d3533c6e371197e204a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I5YTlmZTg5ZmFhYzAyM2Q4NWM5ZDM1MzNjNmUzNzExOTdlMjA0YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-11-28T21:39:42Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-11-28T21:39:42Z"}, "message": "Implement P1094R2, Nested inline namespaces.\n\n\t* parser.c (cp_parser_namespace_definition): Parse the optional inline\n\tkeyword in a nested-namespace-definition.  Adjust push_namespace call.\n\tFormatting fix.\n\n\t* g++.dg/cpp2a/nested-inline-ns1.C: New test.\n\t* g++.dg/cpp2a/nested-inline-ns2.C: New test.\n\nFrom-SVN: r266592", "tree": {"sha": "1bfdbf1020e96a1fc963ea590229baa2c1c3cad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bfdbf1020e96a1fc963ea590229baa2c1c3cad6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b9a9fe89faac023d85c9d3533c6e371197e204a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9a9fe89faac023d85c9d3533c6e371197e204a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b9a9fe89faac023d85c9d3533c6e371197e204a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b9a9fe89faac023d85c9d3533c6e371197e204a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d794ab85f7b14b546701c23f357d49bbab474d39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d794ab85f7b14b546701c23f357d49bbab474d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d794ab85f7b14b546701c23f357d49bbab474d39"}], "stats": {"total": 97, "additions": 93, "deletions": 4}, "files": [{"sha": "f7f20206550c21bb7d2f69db0d930407aebd9c13", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3b9a9fe89faac023d85c9d3533c6e371197e204a", "patch": "@@ -1,3 +1,10 @@\n+2018-11-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tImplement P1094R2, Nested inline namespaces.\n+\t* parser.c (cp_parser_namespace_definition): Parse the optional inline\n+\tkeyword in a nested-namespace-definition.  Adjust push_namespace call.\n+\tFormatting fix.\n+\n 2018-11-28  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/87531"}, {"sha": "3ef1eda451885ad31ee3bb1dce74d1772b3d709a", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=3b9a9fe89faac023d85c9d3533c6e371197e204a", "patch": "@@ -19004,6 +19004,7 @@ cp_parser_namespace_definition (cp_parser* parser)\n   cp_ensure_no_oacc_routine (parser);\n \n   bool is_inline = cp_lexer_next_token_is_keyword (parser->lexer, RID_INLINE);\n+  const bool topmost_inline_p = is_inline;\n \n   if (is_inline)\n     {\n@@ -19022,6 +19023,17 @@ cp_parser_namespace_definition (cp_parser* parser)\n     {\n       identifier = NULL_TREE;\n       \n+      bool nested_inline_p = cp_lexer_next_token_is_keyword (parser->lexer,\n+\t\t\t\t\t\t\t     RID_INLINE);\n+      if (nested_inline_p && nested_definition_count != 0)\n+\t{\n+\t  if (cxx_dialect < cxx2a)\n+\t    pedwarn (cp_lexer_peek_token (parser->lexer)->location,\n+\t\t     OPT_Wpedantic, \"nested inline namespace definitions only \"\n+\t\t     \"available with -std=c++2a or -std=gnu++2a\");\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t}\n+\n       if (cp_lexer_next_token_is (parser->lexer, CPP_NAME))\n \t{\n \t  identifier = cp_parser_identifier (parser);\n@@ -19036,7 +19048,14 @@ cp_parser_namespace_definition (cp_parser* parser)\n \t}\n \n       if (cp_lexer_next_token_is_not (parser->lexer, CPP_SCOPE))\n-\tbreak;\n+\t{\n+\t  /* Don't forget that the innermost namespace might have been\n+\t     marked as inline.  Use |= because we cannot overwrite\n+\t     IS_INLINE in case the outermost namespace is inline, but\n+\t     there are no nested inlines.  */\n+\t  is_inline |= nested_inline_p;\n+\t  break;\n+\t}\n   \n       if (!nested_definition_count && cxx_dialect < cxx17)\n         pedwarn (input_location, OPT_Wpedantic,\n@@ -19045,7 +19064,9 @@ cp_parser_namespace_definition (cp_parser* parser)\n \n       /* Nested namespace names can create new namespaces (unlike\n \t other qualified-ids).  */\n-      if (int count = identifier ? push_namespace (identifier) : 0)\n+      if (int count = (identifier\n+\t\t       ? push_namespace (identifier, nested_inline_p)\n+\t\t       : 0))\n \tnested_definition_count += count;\n       else\n \tcp_parser_error (parser, \"nested namespace name required\");\n@@ -19058,7 +19079,7 @@ cp_parser_namespace_definition (cp_parser* parser)\n   if (nested_definition_count && attribs)\n     error_at (token->location,\n \t      \"a nested namespace definition cannot have attributes\");\n-  if (nested_definition_count && is_inline)\n+  if (nested_definition_count && topmost_inline_p)\n     error_at (token->location,\n \t      \"a nested namespace definition cannot be inline\");\n \n@@ -19067,7 +19088,7 @@ cp_parser_namespace_definition (cp_parser* parser)\n \n   bool has_visibility = handle_namespace_attrs (current_namespace, attribs);\n \n-  warning  (OPT_Wnamespaces, \"namespace %qD entered\", current_namespace);\n+  warning (OPT_Wnamespaces, \"namespace %qD entered\", current_namespace);\n \n   /* Look for the `{' to validate starting the namespace.  */\n   matching_braces braces;"}, {"sha": "0ba033a08ae9eba3c18f27aefe281262e678fd25", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3b9a9fe89faac023d85c9d3533c6e371197e204a", "patch": "@@ -1,3 +1,9 @@\n+2018-11-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tImplement P1094R2, Nested inline namespaces.\n+\t* g++.dg/cpp2a/nested-inline-ns1.C: New test.\n+\t* g++.dg/cpp2a/nested-inline-ns2.C: New test.\n+\n 2018-11-28  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/87531"}, {"sha": "8c9573ea5db7265cd6593598c590bc9e88ce6730", "filename": "gcc/testsuite/g++.dg/cpp2a/nested-inline-ns1.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnested-inline-ns1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnested-inline-ns1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnested-inline-ns1.C?ref=3b9a9fe89faac023d85c9d3533c6e371197e204a", "patch": "@@ -0,0 +1,29 @@\n+// P1094R2\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wpedantic\" }\n+\n+namespace A::inline B::C { // { dg-warning \"nested inline namespace definitions only\" \"\" { target c++17_down } }\n+// { dg-warning \"nested namespace definitions only available\" \"\" { target c++14_down } .-1 }\n+  int i;\n+}\n+\n+namespace D::E::inline F { // { dg-warning \"nested inline namespace definitions only\" \"\" { target c++17_down } }\n+// { dg-warning \"nested namespace definitions only available\" \"\" { target c++14_down } .-1 }\n+  int j;\n+}\n+\n+inline namespace X {\n+  int x;\n+}\n+\n+// Make sure the namespaces are marked inline.\n+void\n+g ()\n+{\n+  A::B::C::i++;\n+  A::C::i++;\n+  D::E::j++;\n+  D::E::F::j++;\n+  X::x++;\n+  x++;\n+}"}, {"sha": "9b5f2cab47b020498e4abe28e753488e631ac46d", "filename": "gcc/testsuite/g++.dg/cpp2a/nested-inline-ns2.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnested-inline-ns2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b9a9fe89faac023d85c9d3533c6e371197e204a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnested-inline-ns2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnested-inline-ns2.C?ref=3b9a9fe89faac023d85c9d3533c6e371197e204a", "patch": "@@ -0,0 +1,26 @@\n+// P1094R2\n+// { dg-do compile { target c++2a } }\n+\n+inline namespace A::B { // { dg-error \"a nested namespace definition cannot be inline\" }\n+  int i;\n+}\n+\n+namespace inline C::D { // { dg-error \"expected|does not name a type\" }\n+  int i;\n+}\n+\n+namespace E::F inline { // { dg-error \"expected\" }\n+  int i;\n+}\n+\n+namespace inline G { // { dg-error \"expected|does not name a type\" }\n+  int i;\n+}\n+\n+inline namespace inline H { // { dg-error \"expected|does not name a type\" }\n+  int i;\n+}\n+\n+inline namespace inline I::J { // { dg-error \"expected|does not name a type\" }\n+  int i;\n+}"}]}