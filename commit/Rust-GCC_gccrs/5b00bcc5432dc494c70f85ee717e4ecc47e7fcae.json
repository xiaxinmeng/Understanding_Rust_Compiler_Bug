{"sha": "5b00bcc5432dc494c70f85ee717e4ecc47e7fcae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwMGJjYzU0MzJkYzQ5NGM3MGY4NWVlNzE3ZTRlY2M0N2U3ZmNhZQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2020-10-13T10:31:36Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2020-10-14T17:38:38Z"}, "message": "Rework CPP_BUILTINS_SPEC for powerpc-vxworks\n\nThis change reworks CPP_BUILTINS_SPEC for powerpc-vxworks to\nprepare for the upcoming addition of 32 and 64 bit ports for\nVxWorks 7r2.\n\n2020-10-14  Olivier Hainque  <hainque@adacore.com>\n\ngcc/\n\t* config/rs6000/vxworks.h (TARGET_OS_CPP_BUILTINS): Accommodate\n\texpectations from different versions of VxWorks, for 32 or 64bit\n\tconfigurations.", "tree": {"sha": "0ca57ff22b35a389d90a532efcb3a27629d8901b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ca57ff22b35a389d90a532efcb3a27629d8901b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b00bcc5432dc494c70f85ee717e4ecc47e7fcae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b00bcc5432dc494c70f85ee717e4ecc47e7fcae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b00bcc5432dc494c70f85ee717e4ecc47e7fcae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b00bcc5432dc494c70f85ee717e4ecc47e7fcae/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d00f8b405679e2744e7a9789a7a6eaa6e2f21d78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d00f8b405679e2744e7a9789a7a6eaa6e2f21d78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d00f8b405679e2744e7a9789a7a6eaa6e2f21d78"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "60e1ef42390fb17c04e1026108d514fd80001771", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 50, "deletions": 7, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b00bcc5432dc494c70f85ee717e4ecc47e7fcae/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b00bcc5432dc494c70f85ee717e4ecc47e7fcae/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=5b00bcc5432dc494c70f85ee717e4ecc47e7fcae", "patch": "@@ -29,17 +29,60 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-      builtin_define (\"__ppc\");\t\t\t\\\n-      builtin_define (\"__PPC__\");\t\t\\\n-      builtin_define (\"__EABI__\");\t\t\\\n       builtin_define (\"__ELF__\");\t\t\\\n+      if (!TARGET_VXWORKS7)\t\t\t\\\n+\tbuiltin_define (\"__EABI__\");\t\t\\\n+\t\t\t\t\t\t\\\n+      /* CPU macros, based on what the system compilers do.  */\t\\\n+      if (!TARGET_VXWORKS7)\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_define (\"__ppc\");\t\t\\\n+\t  /* Namespace violation below, but the system headers \\\n+\t     really depend heavily on this.  */\t\\\n+\t  builtin_define (\"CPU_FAMILY=PPC\");\t\\\n+\t\t\t\t\t\t\\\n+\t  /* __PPC__ isn't actually emitted by the system compiler \\\n+\t     prior to vx7 but has been advertised by us for ages.  */\t\\\n+\t  builtin_define (\"__PPC__\");\t\t\\\n+\t}\t\t\t\t\t\\\n+      else\t\t\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_define (\"__PPC__\");\t\t\\\n+\t  builtin_define (\"__powerpc__\");\t\\\n+\t  if (TARGET_64BIT)\t\t\t\\\n+\t    {\t\t\t\t\t\\\n+\t      builtin_define (\"__PPC64__\");\t\\\n+\t      builtin_define (\"__powerpc64__\");\t\\\n+\t    }\t\t\t\t\t\\\n+\t  else\t\t\t\t\t\\\n+\t    {\t\t\t\t\t\\\n+\t      builtin_define (\"__PPC\");\t\t\\\n+\t      builtin_define (\"__powerpc\");\t\\\n+\t    }\t\t\t\t\t\\\n+\t}\t\t\t\t\t\\\n+\t\t\t\t\t\t\\\n+      /* Asserts for #cpu and #machine.  */\t\\\n+      if (TARGET_64BIT)\t\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_assert (\"cpu=powerpc64\");     \\\n+\t  builtin_assert (\"machine=powerpc64\"); \\\n+\t}\t\t\t\t\t\\\n+      else \t\t\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_assert (\"cpu=powerpc\");\t\\\n+\t  builtin_assert (\"machine=powerpc\");   \\\n+\t}\t\t\t\t\t\\\n+\t\t\t\t\t\t\\\n+      /* PowerPC VxWorks specificities.  */\t\\\n       if (!TARGET_SOFT_FLOAT)\t\t\t\\\n-\tbuiltin_define (\"__hardfp\");\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_define (\"__hardfp\");\t\t\\\n+\t  builtin_define (\"_WRS_HARDWARE_FP\");  \\\n+\t}                                       \\\n \t\t\t\t\t\t\\\n-      /* C89 namespace violation! */\t\t\\\n-      builtin_define (\"CPU_FAMILY=PPC\");\t\\\n-        \t\t\t\t\t\\\n+      /* Common VxWorks and port items.  */\t\\\n       VXWORKS_OS_CPP_BUILTINS ();\t\t\\\n+      TARGET_OS_SYSV_CPP_BUILTINS ();\t\t\\\n     }\t\t\\\n   while (0)\n "}]}