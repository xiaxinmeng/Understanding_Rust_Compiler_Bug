{"sha": "b622076c56b245967a8e777cfd8fd049e7ed784c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYyMjA3NmM1NmIyNDU5NjdhOGU3NzdjZmQ4ZmQwNDllN2VkNzg0Yw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-12-13T09:03:02Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-13T09:03:02Z"}, "message": "[Ada] New flag to indicate whether aspect appears on partial view\n\n2019-12-13  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sinfo.ads, sinfo.adb (Aspect_On_Partial_View,\n\tSet_Aspect_On_Partial_View): New flag for use by SPARK, to\n\tindicate whether an aspect that appears on a type declaration\n\tapplies to the partial view of that type.\n\t* sem_ch13.adb (Analyze_Aspect_Specification): Set new flag\n\tappropriately.\n\nFrom-SVN: r279339", "tree": {"sha": "6b13143f4908c6112bbb0822e91a16a1b6b24fec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b13143f4908c6112bbb0822e91a16a1b6b24fec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b622076c56b245967a8e777cfd8fd049e7ed784c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b622076c56b245967a8e777cfd8fd049e7ed784c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b622076c56b245967a8e777cfd8fd049e7ed784c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b622076c56b245967a8e777cfd8fd049e7ed784c/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db0aa34fb45afad19e56c573321d4c8ebaf56833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db0aa34fb45afad19e56c573321d4c8ebaf56833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db0aa34fb45afad19e56c573321d4c8ebaf56833"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "1c5d5bcb7dd60dab43780237f104b12ec5e4df3c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b622076c56b245967a8e777cfd8fd049e7ed784c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b622076c56b245967a8e777cfd8fd049e7ed784c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b622076c56b245967a8e777cfd8fd049e7ed784c", "patch": "@@ -1,3 +1,12 @@\n+2019-12-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb (Aspect_On_Partial_View,\n+\tSet_Aspect_On_Partial_View): New flag for use by SPARK, to\n+\tindicate whether an aspect that appears on a type declaration\n+\tapplies to the partial view of that type.\n+\t* sem_ch13.adb (Analyze_Aspect_Specification): Set new flag\n+\tappropriately.\n+\n 2019-12-12  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb (Same_Reprewentation): if the actual in a call is"}, {"sha": "9c8a0cf6b7a0e3dcd8d46f8dc7afe93a01842526", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b622076c56b245967a8e777cfd8fd049e7ed784c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b622076c56b245967a8e777cfd8fd049e7ed784c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=b622076c56b245967a8e777cfd8fd049e7ed784c", "patch": "@@ -3788,6 +3788,15 @@ package body Sem_Ch13 is\n                Set_From_Aspect_Specification (Aitem);\n             end if;\n \n+            --  For an aspect that applies to a type, indicate whether it\n+            --  appears on a partial view of the type.\n+\n+            if Is_Type (E)\n+              and then Is_Private_Type (E)\n+            then\n+               Set_Aspect_On_Partial_View (Aspect);\n+            end if;\n+\n             --  In the context of a compilation unit, we directly put the\n             --  pragma in the Pragmas_After list of the N_Compilation_Unit_Aux\n             --  node (no delay is required here) except for aspects on a"}, {"sha": "b99a32d90ecaa3c6ad02cb81accd4084f1e1e254", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b622076c56b245967a8e777cfd8fd049e7ed784c/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b622076c56b245967a8e777cfd8fd049e7ed784c/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=b622076c56b245967a8e777cfd8fd049e7ed784c", "patch": "@@ -269,6 +269,14 @@ package body Sinfo is\n       return Node3 (N);\n    end Array_Aggregate;\n \n+   function Aspect_On_Partial_View\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      return Flag18 (N);\n+   end Aspect_On_Partial_View;\n+\n    function Aspect_Rep_Item\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -3763,6 +3771,14 @@ package body Sinfo is\n       Set_Node3_With_Parent (N, Val);\n    end Set_Array_Aggregate;\n \n+   procedure Set_Aspect_On_Partial_View\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      Set_Flag18 (N, Val);\n+   end Set_Aspect_On_Partial_View;\n+\n    procedure Set_Aspect_Rep_Item\n       (N : Node_Id; Val : Node_Id) is\n    begin"}, {"sha": "5e047726e110ece7823c9c6a6b6e933c655e3918", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b622076c56b245967a8e777cfd8fd049e7ed784c/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b622076c56b245967a8e777cfd8fd049e7ed784c/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=b622076c56b245967a8e777cfd8fd049e7ed784c", "patch": "@@ -933,6 +933,12 @@ package Sinfo is\n    --    is used for translation of the at end handler into a normal exception\n    --    handler.\n \n+   --  Aspect_On_Partial_View (Flag18)\n+   --    Present on an N_Aspect_Specification node. For an aspect that applies\n+   --    to a type entity, indicates whether the specification appears on the\n+   --    partial view of a private type or extension. Undefined for aspects\n+   --    that apply to other entities.\n+\n    --  Aspect_Rep_Item (Node2-Sem)\n    --    Present in N_Aspect_Specification nodes. Points to the corresponding\n    --    pragma/attribute definition node used to process the aspect.\n@@ -7638,6 +7644,7 @@ package Sinfo is\n       --  Is_Disabled (Flag15-Sem)\n       --  Is_Boolean_Aspect (Flag16-Sem)\n       --  Split_PPC (Flag17) Set if split pre/post attribute\n+      --  Aspect_On_Partial_View (Flag18-Sem)\n \n       --  Note: Aspect_Specification is an Ada 2012 feature\n \n@@ -9299,6 +9306,9 @@ package Sinfo is\n    function Array_Aggregate\n      (N : Node_Id) return Node_Id;    -- Node3\n \n+   function Aspect_On_Partial_View\n+     (N : Node_Id) return Boolean;    -- Flag18\n+\n    function Aspect_Rep_Item\n      (N : Node_Id) return Node_Id;    -- Node2\n \n@@ -10411,6 +10421,9 @@ package Sinfo is\n    procedure Set_Array_Aggregate\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n+   procedure Set_Aspect_On_Partial_View\n+     (N : Node_Id; Val : Boolean := True);    -- Flag18\n+\n    procedure Set_Aspect_Rep_Item\n      (N : Node_Id; Val : Node_Id);            -- Node2\n \n@@ -13324,6 +13337,7 @@ package Sinfo is\n    pragma Inline (Ancestor_Part);\n    pragma Inline (Atomic_Sync_Required);\n    pragma Inline (Array_Aggregate);\n+   pragma Inline (Aspect_On_Partial_View);\n    pragma Inline (Aspect_Rep_Item);\n    pragma Inline (Assignment_OK);\n    pragma Inline (Associated_Node);\n@@ -13690,6 +13704,7 @@ package Sinfo is\n    pragma Inline (Set_Alternatives);\n    pragma Inline (Set_Ancestor_Part);\n    pragma Inline (Set_Array_Aggregate);\n+   pragma Inline (Set_Aspect_On_Partial_View);\n    pragma Inline (Set_Aspect_Rep_Item);\n    pragma Inline (Set_Assignment_OK);\n    pragma Inline (Set_Associated_Node);"}]}