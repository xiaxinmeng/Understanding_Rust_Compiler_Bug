{"sha": "a125901c55ea18dc7aa1d34b5d938d1e8352d5f1", "node_id": "C_kwDOANBUbNoAKGExMjU5MDFjNTVlYTE4ZGM3YWExZDM0YjVkOTM4ZDFlODM1MmQ1ZjE", "commit": {"author": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2022-04-08T10:08:14Z"}, "committer": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2022-04-13T08:30:46Z"}, "message": "rust-session-manager: address more comments\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\nSigned-off-by: Zixing Liu <liushuyu011@gmail.com>", "tree": {"sha": "164f782b120878a326893ae85ffce9480ef3ee33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/164f782b120878a326893ae85ffce9480ef3ee33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a125901c55ea18dc7aa1d34b5d938d1e8352d5f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE6x/rcKrl3aOwzUVJI9HORTRBlDcFAmJWijcACgkQI9HORTRB\nlDco5hAAkY1uccCDHrillRsvPqImdgNk3EyNguQNceTr1od7TgvR0QrWtaBM8ka6\n01mIigOfbOiFBk0edEnk1a3ustvgS7qL+rrja6gvgF3ZobZofjnt4tKuRKoMeHHX\n68813p/m5NLfaejc+CzBT+E0TZIhR1ng3x6O0f4KfpjRvdC6x3HMJ+OHvfo1WkIb\nvKw6ZfQtBBCGpBn1mlHwrLRTteA6mCeJtjpc0/hbY2VPLqroXRjvDUYtv3LkcNAz\nHlRvX46Nb2TH7uMIdi/1gd+qy0ufaBqha+AAXHkvk4FvwbBx0Z7VjzrCjWEUuXtR\nsl9YOsccNfFc1v8LUMdG5AwSjjalzbfCOhPxZYJK6bFmJARqSYiDEQKoO4VhYNAO\nCqob0ZfSSG+dWP63VYGuAKDChA2cPFShRCNVkYpzv79Vfau1qALSBBPMWqmkmvjJ\nO8bkKHj0s7RvgMTPFzgK7vSOCeygL+0XJKiYC8smwlCrdB47ZZuSVdfjAqteJE30\nC/qdUgDQTgCFStUETGLucZAN9Aye2gy3A8UThLUn8eioQ1ht0vB+xOvlTAJuCaZm\nECAr+sysTBUQPQrEQujZPbVhoD56x8nya8rIXHNTCbQMWDnDAY2yL3PLFl76npV6\nUsc5MPZqxBKs3EKectctyzkcSR9agn1PXBBypC6pNyH1ew7mafk=\n=fbdL\n-----END PGP SIGNATURE-----", "payload": "tree 164f782b120878a326893ae85ffce9480ef3ee33\nparent 1a7391d97ffef5efb797f3701a82577c7270ce66\nauthor liushuyu <liushuyu011@gmail.com> 1649412494 -0600\ncommitter liushuyu <liushuyu011@gmail.com> 1649838646 -0600\n\nrust-session-manager: address more comments\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\nSigned-off-by: Zixing Liu <liushuyu011@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a125901c55ea18dc7aa1d34b5d938d1e8352d5f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a125901c55ea18dc7aa1d34b5d938d1e8352d5f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a125901c55ea18dc7aa1d34b5d938d1e8352d5f1/comments", "author": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a7391d97ffef5efb797f3701a82577c7270ce66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a7391d97ffef5efb797f3701a82577c7270ce66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a7391d97ffef5efb797f3701a82577c7270ce66"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "bdab0d89feb8c9579826ad4598984f2924ef57cb", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 30, "deletions": 14, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a125901c55ea18dc7aa1d34b5d938d1e8352d5f1/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a125901c55ea18dc7aa1d34b5d938d1e8352d5f1/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=a125901c55ea18dc7aa1d34b5d938d1e8352d5f1", "patch": "@@ -85,25 +85,28 @@ infer_crate_name (const std::string &filename)\n   return crate;\n }\n \n-bool\n-CompileOptions::validate_crate_name (const std::string &crate_name)\n+/* Validate the crate name using the ASCII rules\n+   TODO: Support Unicode version of the rules */\n+\n+static bool\n+validate_crate_name (const std::string &crate_name, Error &error)\n {\n   if (crate_name.empty ())\n     {\n-      rust_error_at (Location (), \"crate name cannot be empty\");\n+      error = Error (Location (), \"crate name cannot be empty\");\n       return false;\n     }\n   if (crate_name.length () > kMaxNameLength)\n     {\n-      rust_error_at (Location (), \"crate name cannot exceed %ld characters\",\n+      error = Error (Location (), \"crate name cannot exceed %ld characters\",\n \t\t     kMaxNameLength);\n       return false;\n     }\n   for (auto &c : crate_name)\n     {\n       if (!(ISALNUM (c) || c == '_'))\n \t{\n-\t  rust_error_at (Location (),\n+\t  error = Error (Location (),\n \t\t\t \"invalid character %<%c%> in crate name: %<%s%>\", c,\n \t\t\t crate_name.c_str ());\n \t  return false;\n@@ -399,7 +402,16 @@ Session::handle_option (\n     case OPT_frust_crate_:\n       // set the crate name\n       if (arg != nullptr)\n-\tret = options.set_crate_name (arg);\n+\t{\n+\t  auto error = Error (Location (), std::string ());\n+\t  if ((ret = validate_crate_name (arg, error)))\n+\t    options.set_crate_name (arg);\n+\t  else\n+\t    {\n+\t      rust_assert (!error.message.empty ());\n+\t      error.emit_error ();\n+\t    }\n+\t}\n       else\n \tret = false;\n       break;\n@@ -541,17 +553,20 @@ Session::parse_files (int num_files, const char **files)\n \tfilename = files[0];\n \n       auto crate_name = infer_crate_name (filename);\n+      Error error ((Location ()), std::string ());\n       rust_debug (\"inferred crate name: %s\", crate_name.c_str ());\n-      if (!options.set_crate_name (crate_name))\n+      if (!validate_crate_name (crate_name, error))\n \t{\n \t  // fake a linemapping so that we can show the filename\n \t  linemap->start_file (filename, 0);\n \t  linemap->start_line (0, 1);\n+\t  error.emit_error ();\n \t  rust_inform (linemap->get_location (0),\n \t\t       \"crate name inferred from this file\");\n \t  linemap->stop ();\n \t  return;\n \t}\n+      options.set_crate_name (crate_name);\n     }\n \n   auto mappings = Analysis::Mappings::get ();\n@@ -1202,16 +1217,17 @@ namespace selftest {\n void\n rust_crate_name_validation_test (void)\n {\n-  ASSERT_TRUE (Rust::CompileOptions::validate_crate_name (\"example\"));\n-  ASSERT_TRUE (Rust::CompileOptions::validate_crate_name (\"abcdefg_1234\"));\n-  ASSERT_TRUE (Rust::CompileOptions::validate_crate_name (\"1\"));\n+  auto error = Rust::Error (Location (), std::string ());\n+  ASSERT_TRUE (Rust::validate_crate_name (\"example\", error));\n+  ASSERT_TRUE (Rust::validate_crate_name (\"abcdefg_1234\", error));\n+  ASSERT_TRUE (Rust::validate_crate_name (\"1\", error));\n   // FIXME: The next test does not pass as of current implementation\n   // ASSERT_TRUE (Rust::CompileOptions::validate_crate_name (\"\u60ca\u5413\"));\n   // NOTE: - is not allowed in the crate name ...\n-  /*\n-  ASSERT_FALSE (Rust::CompileOptions::validate_crate_name (\"abcdefg-1234\"));\n-  ASSERT_FALSE (Rust::CompileOptions::validate_crate_name (\"a+b\"));\n-  ASSERT_FALSE (Rust::CompileOptions::validate_crate_name (\"/a+b/\")); */\n+\n+  ASSERT_FALSE (Rust::validate_crate_name (\"abcdefg-1234\", error));\n+  ASSERT_FALSE (Rust::validate_crate_name (\"a+b\", error));\n+  ASSERT_FALSE (Rust::validate_crate_name (\"/a+b/\", error));\n \n   /* Tests for crate name inference */\n   ASSERT_EQ (Rust::infer_crate_name (\"c.rs\"), \"c\");"}, {"sha": "6fa83d97ca656b48ea743a5b447c663df9828e2f", "filename": "gcc/rust/rust-session-manager.h", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a125901c55ea18dc7aa1d34b5d938d1e8352d5f1/gcc%2Frust%2Frust-session-manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a125901c55ea18dc7aa1d34b5d938d1e8352d5f1/gcc%2Frust%2Frust-session-manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.h?ref=a125901c55ea18dc7aa1d34b5d938d1e8352d5f1", "patch": "@@ -213,17 +213,11 @@ struct CompileOptions\n     enable_dump_option (DumpOption::TYPE_RESOLUTION_DUMP);\n   }\n \n-  /* Validate the crate name using the ASCII rules\n-   TODO: Support Unicode version of the rules */\n-  static bool validate_crate_name (const std::string &crate_name);\n-\n-  bool set_crate_name (std::string name)\n+  void set_crate_name (std::string name)\n   {\n-    if (!validate_crate_name (name))\n-      return false;\n+    rust_assert (!name.empty ());\n \n     crate_name = std::move (name);\n-    return true;\n   }\n \n   void set_edition (int raw_edition)"}]}