{"sha": "30acf2829633b900ea5fe9a3a00aad1e9a84bf43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBhY2YyODI5NjMzYjkwMGVhNWZlOWEzYTAwYWFkMWU5YTg0YmY0Mw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-12-20T12:52:37Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-12-20T12:52:37Z"}, "message": "poly_int: fold_ctor_reference\n\nThis patch changes the offset and size arguments to\nfold_ctor_reference from unsigned HOST_WIDE_INT to poly_uint64.\n\n2017-12-20  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* gimple-fold.h (fold_ctor_reference): Take the offset and size\n\tas poly_uint64 rather than unsigned HOST_WIDE_INT.\n\t* gimple-fold.c (fold_ctor_reference): Likewise.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r255869", "tree": {"sha": "f72f7530acb32b59e21e928608e3d12b5d8f3e97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f72f7530acb32b59e21e928608e3d12b5d8f3e97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30acf2829633b900ea5fe9a3a00aad1e9a84bf43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30acf2829633b900ea5fe9a3a00aad1e9a84bf43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30acf2829633b900ea5fe9a3a00aad1e9a84bf43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30acf2829633b900ea5fe9a3a00aad1e9a84bf43/comments", "author": null, "committer": null, "parents": [{"sha": "74c74aa05ee8757210dfb16f6198024e6dc445d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c74aa05ee8757210dfb16f6198024e6dc445d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74c74aa05ee8757210dfb16f6198024e6dc445d5"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "562907636ecb9bb2510a182b8fc99dc1274a350a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30acf2829633b900ea5fe9a3a00aad1e9a84bf43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30acf2829633b900ea5fe9a3a00aad1e9a84bf43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30acf2829633b900ea5fe9a3a00aad1e9a84bf43", "patch": "@@ -1,3 +1,11 @@\n+2017-12-20  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* gimple-fold.h (fold_ctor_reference): Take the offset and size\n+\tas poly_uint64 rather than unsigned HOST_WIDE_INT.\n+\t* gimple-fold.c (fold_ctor_reference): Likewise.\n+\n 2017-12-20  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "285ece23b0ee28cb531bb188245baa267fda7862", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30acf2829633b900ea5fe9a3a00aad1e9a84bf43/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30acf2829633b900ea5fe9a3a00aad1e9a84bf43/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=30acf2829633b900ea5fe9a3a00aad1e9a84bf43", "patch": "@@ -6527,20 +6527,25 @@ fold_nonarray_ctor_reference (tree type, tree ctor,\n   return build_zero_cst (type);\n }\n \n-/* CTOR is value initializing memory, fold reference of type TYPE and size SIZE\n-   to the memory at bit OFFSET.  */\n+/* CTOR is value initializing memory, fold reference of type TYPE and\n+   size POLY_SIZE to the memory at bit POLY_OFFSET.  */\n \n tree\n-fold_ctor_reference (tree type, tree ctor, unsigned HOST_WIDE_INT offset,\n-\t\t     unsigned HOST_WIDE_INT size, tree from_decl)\n+fold_ctor_reference (tree type, tree ctor, poly_uint64 poly_offset,\n+\t\t     poly_uint64 poly_size, tree from_decl)\n {\n   tree ret;\n \n   /* We found the field with exact match.  */\n   if (useless_type_conversion_p (type, TREE_TYPE (ctor))\n-      && !offset)\n+      && known_eq (poly_offset, 0U))\n     return canonicalize_constructor_val (unshare_expr (ctor), from_decl);\n \n+  /* The remaining optimizations need a constant size and offset.  */\n+  unsigned HOST_WIDE_INT size, offset;\n+  if (!poly_size.is_constant (&size) || !poly_offset.is_constant (&offset))\n+    return NULL_TREE;\n+\n   /* We are at the end of walk, see if we can view convert the\n      result.  */\n   if (!AGGREGATE_TYPE_P (TREE_TYPE (ctor)) && !offset"}, {"sha": "c2e9dc8b86eb587c191bf724daae849ed798e89d", "filename": "gcc/gimple-fold.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30acf2829633b900ea5fe9a3a00aad1e9a84bf43/gcc%2Fgimple-fold.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30acf2829633b900ea5fe9a3a00aad1e9a84bf43/gcc%2Fgimple-fold.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.h?ref=30acf2829633b900ea5fe9a3a00aad1e9a84bf43", "patch": "@@ -44,8 +44,7 @@ extern tree follow_single_use_edges (tree);\n extern tree gimple_fold_stmt_to_constant_1 (gimple *, tree (*) (tree),\n \t\t\t\t\t    tree (*) (tree) = no_follow_ssa_edges);\n extern tree gimple_fold_stmt_to_constant (gimple *, tree (*) (tree));\n-extern tree fold_ctor_reference (tree, tree, unsigned HOST_WIDE_INT,\n-\t\t\t\t unsigned HOST_WIDE_INT, tree);\n+extern tree fold_ctor_reference (tree, tree, poly_uint64, poly_uint64, tree);\n extern tree fold_const_aggregate_ref_1 (tree, tree (*) (tree));\n extern tree fold_const_aggregate_ref (tree);\n extern tree gimple_get_virt_method_for_binfo (HOST_WIDE_INT, tree,"}]}