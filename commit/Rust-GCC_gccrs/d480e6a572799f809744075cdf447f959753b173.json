{"sha": "d480e6a572799f809744075cdf447f959753b173", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ4MGU2YTU3Mjc5OWY4MDk3NDQwNzVjZGY0NDdmOTU5NzUzYjE3Mw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-10-21T11:34:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-10-21T11:34:04Z"}, "message": "re PR middle-end/58742 (pointer arithmetic simplification)\n\n2013-10-21  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/58742\n\t* fold-const.c (fold_binary_loc): Fold ((T) (X /[ex] C)) * C\n\tto (T) X for sign-changing conversions (or no conversion).\n\n\t* c-c++-common/fold-divmul-1.c: New testcase.\n\nFrom-SVN: r203890", "tree": {"sha": "d39c87a3db103241526f21769916ac517ea36d8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d39c87a3db103241526f21769916ac517ea36d8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d480e6a572799f809744075cdf447f959753b173", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d480e6a572799f809744075cdf447f959753b173", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d480e6a572799f809744075cdf447f959753b173", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d480e6a572799f809744075cdf447f959753b173/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54f9aba03140c7cdace8ff3c6847af855764656f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f9aba03140c7cdace8ff3c6847af855764656f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f9aba03140c7cdace8ff3c6847af855764656f"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "99b921abfbd21eb806771408d9131900ccec88e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d480e6a572799f809744075cdf447f959753b173/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d480e6a572799f809744075cdf447f959753b173/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d480e6a572799f809744075cdf447f959753b173", "patch": "@@ -1,3 +1,9 @@\n+2013-10-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/58742\n+\t* fold-const.c (fold_binary_loc): Fold ((T) (X /[ex] C)) * C\n+\tto (T) X for sign-changing conversions (or no conversion).\n+\n 2013-10-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (kxnor<mode>): Add FLAGS_REG clobber."}, {"sha": "2a184109ea1fcc1d6cbbf587f8247a12ecd2b57c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d480e6a572799f809744075cdf447f959753b173/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d480e6a572799f809744075cdf447f959753b173/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d480e6a572799f809744075cdf447f959753b173", "patch": "@@ -11002,6 +11002,13 @@ fold_binary_loc (location_t loc,\n \t\t\t\tfold_build2_loc (loc, MULT_EXPR, type,\n \t\t\t\t\t     build_int_cst (type, 2) , arg1));\n \n+\t  /* ((T) (X /[ex] C)) * C cancels out if the conversion is\n+\t     sign-changing only.  */\n+\t  if (TREE_CODE (arg1) == INTEGER_CST\n+\t      && TREE_CODE (arg0) == EXACT_DIV_EXPR\n+\t      && operand_equal_p (arg1, TREE_OPERAND (arg0, 1), 0))\n+\t    return fold_convert_loc (loc, type, TREE_OPERAND (arg0, 0));\n+\n \t  strict_overflow_p = false;\n \t  if (TREE_CODE (arg1) == INTEGER_CST\n \t      && 0 != (tem = extract_muldiv (op0, arg1, code, NULL_TREE,"}, {"sha": "6add22c389ebb7fbaa72301107def4e8a3bc3c59", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d480e6a572799f809744075cdf447f959753b173/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d480e6a572799f809744075cdf447f959753b173/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d480e6a572799f809744075cdf447f959753b173", "patch": "@@ -1,3 +1,8 @@\n+2013-10-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/58742\n+\t* c-c++-common/fold-divmul-1.c: New testcase.\n+\n 2013-10-21  Michael Zolotukhin  <michael.v.zolotukhin@gmail.com>\n \n \t* gcc.target/i386/memset-vector_loop-1.c: New test."}, {"sha": "5c867923d2ea1be2a2f8cbd50e30bf48e2ee3f02", "filename": "gcc/testsuite/c-c++-common/fold-divmul-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d480e6a572799f809744075cdf447f959753b173/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-divmul-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d480e6a572799f809744075cdf447f959753b173/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-divmul-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-divmul-1.c?ref=d480e6a572799f809744075cdf447f959753b173", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-original\" } */\n+\n+int *\n+fx (int *b, int *e)\n+{\n+  return b + (e - b);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"/\\\\\\[ex\\\\\\]\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}]}