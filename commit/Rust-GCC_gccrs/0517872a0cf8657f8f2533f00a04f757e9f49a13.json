{"sha": "0517872a0cf8657f8f2533f00a04f757e9f49a13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUxNzg3MmEwY2Y4NjU3ZjhmMjUzM2YwMGEwNGY3NTdlOWY0OWExMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-06-28T21:19:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-06-28T21:19:41Z"}, "message": "dwarf2out.c (output_loc_operands): Don't support >1 byte output unless DWARF2_DEBUGGING_INFO is defined.\n\n        * dwarf2out.c (output_loc_operands): Don't support >1 byte output\n        unless DWARF2_DEBUGGING_INFO is defined.\n        (ASM_OUTPUT_DWARF_*): Wrap normal output defs with #ifndefs.\n\nFrom-SVN: r34768", "tree": {"sha": "faa28176bf11b7cc046a2231f82b1c7bc57a96c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faa28176bf11b7cc046a2231f82b1c7bc57a96c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0517872a0cf8657f8f2533f00a04f757e9f49a13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0517872a0cf8657f8f2533f00a04f757e9f49a13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0517872a0cf8657f8f2533f00a04f757e9f49a13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0517872a0cf8657f8f2533f00a04f757e9f49a13/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e500c78697c7f0c5c1becd724644bd4488d3d1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e500c78697c7f0c5c1becd724644bd4488d3d1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e500c78697c7f0c5c1becd724644bd4488d3d1e"}], "stats": {"total": 56, "additions": 45, "deletions": 11}, "files": [{"sha": "e70b9718393a93049fc7b06a1737a6f2401b0cd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0517872a0cf8657f8f2533f00a04f757e9f49a13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0517872a0cf8657f8f2533f00a04f757e9f49a13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0517872a0cf8657f8f2533f00a04f757e9f49a13", "patch": "@@ -1,3 +1,9 @@\n+2000-06-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2out.c (output_loc_operands): Don't support >1 byte output\n+\tunless DWARF2_DEBUGGING_INFO is defined.\n+\t(ASM_OUTPUT_DWARF_*): Wrap normal output defs with #ifndefs.\n+\n 2000-06-28  Richard Henderson  <rth@cygnus.com>\n \n \t* config/alpha/alpha.c (summarize_insn): Ignore SCRATCH."}, {"sha": "6a438b55bacd2313fc6e98c744fde502353b9c92", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 39, "deletions": 11, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0517872a0cf8657f8f2533f00a04f757e9f49a13/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0517872a0cf8657f8f2533f00a04f757e9f49a13/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=0517872a0cf8657f8f2533f00a04f757e9f49a13", "patch": "@@ -464,41 +464,63 @@ static void def_cfa_1\t\t \tPARAMS ((const char *, dw_cfa_location *));\n /* We don't have unaligned support, let's hope the normal output works for\n    .debug_frame.  */\n \n+#ifndef ASM_OUTPUT_DWARF_ADDR\n #define ASM_OUTPUT_DWARF_ADDR(FILE,LABEL) \\\n   assemble_integer (gen_rtx_SYMBOL_REF (Pmode, LABEL), DWARF2_ADDR_SIZE, 1)\n+#endif\n+\n+#ifndef ASM_OUTPUT_DWARF_ADDR_CONST\n+#define ASM_OUTPUT_DWARF_ADDR_CONST(FILE,RTX) ASM_OUTPUT_DWARF_ADDR (FILE,RTX)\n+#endif\n \n+#ifndef ASM_OUTPUT_DWARF_OFFSET4\n #define ASM_OUTPUT_DWARF_OFFSET4(FILE,LABEL) \\\n   assemble_integer (gen_rtx_SYMBOL_REF (SImode, LABEL), 4, 1)\n+#endif\n \n+#ifndef ASM_OUTPUT_DWARF_OFFSET\n #define ASM_OUTPUT_DWARF_OFFSET(FILE,LABEL) \\\n   assemble_integer (gen_rtx_SYMBOL_REF (SImode, LABEL), 4, 1)\n+#endif\n \n+#ifndef ASM_OUTPUT_DWARF_DELTA2\n #define ASM_OUTPUT_DWARF_DELTA2(FILE,LABEL1,LABEL2)\t\t\t\\\n   assemble_integer (gen_rtx_MINUS (HImode,\t\t\t      \t\\\n \t\t\t\t   gen_rtx_SYMBOL_REF (Pmode, LABEL1),  \\\n \t\t\t\t   gen_rtx_SYMBOL_REF (Pmode, LABEL2)),\t\\\n \t\t    2, 1)\n+#endif\n   \n+#ifndef ASM_OUTPUT_DWARF_DELTA4\n #define ASM_OUTPUT_DWARF_DELTA4(FILE,LABEL1,LABEL2)\t\t\t\\\n   assemble_integer (gen_rtx_MINUS (SImode,\t\t\t      \t\\\n \t\t\t\t   gen_rtx_SYMBOL_REF (Pmode, LABEL1),  \\\n \t\t\t\t   gen_rtx_SYMBOL_REF (Pmode, LABEL2)),\t\\\n \t\t    4, 1)\n+#endif\n \n+#ifndef ASM_OUTPUT_DWARF_ADDR_DELTA\n #define ASM_OUTPUT_DWARF_ADDR_DELTA(FILE,LABEL1,LABEL2)\t\t\t\\\n   assemble_integer (gen_rtx_MINUS (Pmode,\t\t\t\t\\\n \t\t\t\t   gen_rtx_SYMBOL_REF (Pmode, LABEL1),\t\\\n \t\t\t\t   gen_rtx_SYMBOL_REF (Pmode, LABEL2)),\t\\\n \t\t    DWARF2_ADDR_SIZE, 1)\n+#endif\n \n+#ifndef ASM_OUTPUT_DWARF_DELTA\n #define ASM_OUTPUT_DWARF_DELTA(FILE,LABEL1,LABEL2) \\\n   ASM_OUTPUT_DWARF_DELTA4 (FILE,LABEL1,LABEL2)\n+#endif\n \n+#ifndef ASM_OUTPUT_DWARF_DATA2\n #define ASM_OUTPUT_DWARF_DATA2(FILE,VALUE) \\\n   assemble_integer (GEN_INT (VALUE), 2, 1)\n+#endif\n \n+#ifndef ASM_OUTPUT_DWARF_DATA4\n #define ASM_OUTPUT_DWARF_DATA4(FILE,VALUE) \\\n   assemble_integer (GEN_INT (VALUE), 4, 1)\n+#endif\n \n #endif /* UNALIGNED_INT_ASM_OP */\n \n@@ -2599,15 +2621,15 @@ output_loc_operands (loc)\n \n   switch (loc->dw_loc_opc)\n     {\n+#ifdef DWARF2_DEBUGGING_INFO\n+      /* We currently don't make any attempt to make sure these are\n+         aligned properly like we do for the main unwind info, so\n+         don't support emitting things larger than a byte if we're\n+         only doing unwinding.  */\n     case DW_OP_addr:\n       ASM_OUTPUT_DWARF_ADDR_CONST (asm_out_file, val1->v.val_addr);\n       fputc ('\\n', asm_out_file);\n       break;\n-    case DW_OP_const1u:\n-    case DW_OP_const1s:\n-      ASM_OUTPUT_DWARF_DATA1 (asm_out_file, val1->v.val_flag);\n-      fputc ('\\n', asm_out_file);\n-      break;\n     case DW_OP_const2u:\n     case DW_OP_const2s:\n       ASM_OUTPUT_DWARF_DATA2 (asm_out_file, val1->v.val_int);\n@@ -2623,6 +2645,17 @@ output_loc_operands (loc)\n       abort ();\n       fputc ('\\n', asm_out_file);\n       break;\n+    case DW_OP_skip:\n+    case DW_OP_bra:\n+      ASM_OUTPUT_DWARF_DATA2 (asm_out_file, val1->v.val_int);\n+      fputc ('\\n', asm_out_file);\n+      break;\n+#endif\n+    case DW_OP_const1u:\n+    case DW_OP_const1s:\n+      ASM_OUTPUT_DWARF_DATA1 (asm_out_file, val1->v.val_flag);\n+      fputc ('\\n', asm_out_file);\n+      break;\n     case DW_OP_constu:\n       output_uleb128 (val1->v.val_unsigned);\n       fputc ('\\n', asm_out_file);\n@@ -2639,11 +2672,6 @@ output_loc_operands (loc)\n       output_uleb128 (val1->v.val_unsigned);\n       fputc ('\\n', asm_out_file);\n       break;\n-    case DW_OP_skip:\n-    case DW_OP_bra:\n-      ASM_OUTPUT_DWARF_DATA2 (asm_out_file, val1->v.val_int);\n-      fputc ('\\n', asm_out_file);\n-      break;\n     case DW_OP_breg0:\n     case DW_OP_breg1:\n     case DW_OP_breg2:\n@@ -2703,7 +2731,7 @@ output_loc_operands (loc)\n       fputc ('\\n', asm_out_file);\n       break;\n     default:\n-      break;\n+      abort ();\n     }\n }\n "}]}