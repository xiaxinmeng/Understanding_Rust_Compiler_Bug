{"sha": "caf1c1cd1253a847644744e3d6df3f98051ef024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FmMWMxY2QxMjUzYTg0NzY0NDc0NGUzZDZkZjNmOTgwNTFlZjAyNA==", "commit": {"author": {"name": "Andrew Waterman", "email": "andrew@sifive.com", "date": "2017-11-05T00:39:01Z"}, "committer": {"name": "Palmer Dabbelt", "email": "palmer@gcc.gnu.org", "date": "2017-11-05T00:39:01Z"}, "message": "RISC-V: If -m[no-]strict-align is not passed, assume its value from -mtune\n\n2017-11-04  Andrew Waterman  <andrew@sifive.com>\n\n\t* config/riscv/riscv.c (riscv_option_override): Conditionally set\n\tTARGET_STRICT_ALIGN based upon -mtune argument.\n\nFrom-SVN: r254417", "tree": {"sha": "ea3a913a9901cb4877862b088ee4ebc768ac76eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea3a913a9901cb4877862b088ee4ebc768ac76eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caf1c1cd1253a847644744e3d6df3f98051ef024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caf1c1cd1253a847644744e3d6df3f98051ef024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caf1c1cd1253a847644744e3d6df3f98051ef024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caf1c1cd1253a847644744e3d6df3f98051ef024/comments", "author": {"login": "aswaterman", "id": 1031106, "node_id": "MDQ6VXNlcjEwMzExMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1031106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aswaterman", "html_url": "https://github.com/aswaterman", "followers_url": "https://api.github.com/users/aswaterman/followers", "following_url": "https://api.github.com/users/aswaterman/following{/other_user}", "gists_url": "https://api.github.com/users/aswaterman/gists{/gist_id}", "starred_url": "https://api.github.com/users/aswaterman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aswaterman/subscriptions", "organizations_url": "https://api.github.com/users/aswaterman/orgs", "repos_url": "https://api.github.com/users/aswaterman/repos", "events_url": "https://api.github.com/users/aswaterman/events{/privacy}", "received_events_url": "https://api.github.com/users/aswaterman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ecc82a8d0551e02afc9bb4d9dff450f6f0098b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc82a8d0551e02afc9bb4d9dff450f6f0098b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecc82a8d0551e02afc9bb4d9dff450f6f0098b4e"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "09b0cd7ca03ffb3c1689de399245886837aa486b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caf1c1cd1253a847644744e3d6df3f98051ef024/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caf1c1cd1253a847644744e3d6df3f98051ef024/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=caf1c1cd1253a847644744e3d6df3f98051ef024", "patch": "@@ -1,3 +1,8 @@\n+2017-11-04  Andrew Waterman  <andrew@sifive.com>\n+\n+\t* config/riscv/riscv.c (riscv_option_override): Conditionally set\n+\tTARGET_STRICT_ALIGN based upon -mtune argument.\n+\n 2017-11-04  Andrew Waterman  <andrew@sifive.com>\n \n \t* config/riscv/riscv.h (SLOW_BYTE_ACCESS): Change to 1."}, {"sha": "52bbc25d0cce11aad2f89a13d2e504f63aaed56d", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caf1c1cd1253a847644744e3d6df3f98051ef024/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caf1c1cd1253a847644744e3d6df3f98051ef024/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=caf1c1cd1253a847644744e3d6df3f98051ef024", "patch": "@@ -3772,9 +3772,13 @@ riscv_option_override (void)\n \n   /* Use -mtune's setting for slow_unaligned_access, even when optimizing\n      for size.  For architectures that trap and emulate unaligned accesses,\n-     the performance cost is too great, even for -Os.  */\n+     the performance cost is too great, even for -Os.  Similarly, if\n+     -m[no-]strict-align is left unspecified, heed -mtune's advice.  */\n   riscv_slow_unaligned_access_p = (cpu->tune_info->slow_unaligned_access\n \t\t\t\t   || TARGET_STRICT_ALIGN);\n+  if ((target_flags_explicit & MASK_STRICT_ALIGN) == 0\n+      && cpu->tune_info->slow_unaligned_access)\n+    target_flags |= MASK_STRICT_ALIGN;\n \n   /* If the user hasn't specified a branch cost, use the processor's\n      default.  */"}]}