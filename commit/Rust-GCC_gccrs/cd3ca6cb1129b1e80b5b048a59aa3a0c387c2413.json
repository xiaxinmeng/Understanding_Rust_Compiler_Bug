{"sha": "cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QzY2E2Y2IxMTI5YjFlODBiNWIwNDhhNTlhYTNhMGMzODdjMjQxMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-08T20:31:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2020-01-08T20:31:16Z"}, "message": "Remove constexpr support for DECL_BY_REFERENCE.\n\nSince we switched to doing constexpr evaluation on pre-GENERIC trees,\nwe don't have to handle DECL_BY_REFERENCE.\n\n\t* constexpr.c (cxx_eval_call_expression): Remove DECL_BY_REFERENCE\n\tsupport.\n\nFrom-SVN: r280017", "tree": {"sha": "1e603d55f8cd52f0c7a5878df141773ba2efd913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e603d55f8cd52f0c7a5878df141773ba2efd913"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b18be0b2bfcd9050bce5c456de377f73ee1f314", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b18be0b2bfcd9050bce5c456de377f73ee1f314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b18be0b2bfcd9050bce5c456de377f73ee1f314"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "c650fdeb5900d1192fac0d778f29b724bf56d904", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413", "patch": "@@ -1,3 +1,8 @@\n+2020-01-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* constexpr.c (cxx_eval_call_expression): Remove DECL_BY_REFERENCE\n+\tsupport.\n+\n 2020-01-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* init.c (build_new): Add location_t parameter and use it throughout."}, {"sha": "806d3ab2cffbe520949884f7522c4da0b2250d41", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=cd3ca6cb1129b1e80b5b048a59aa3a0c387c2413", "patch": "@@ -2333,17 +2333,8 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n \t      remapped = DECL_CHAIN (remapped);\n \t    }\n \t  /* Add the RESULT_DECL to the values map, too.  */\n-\t  tree slot = NULL_TREE;\n-\t  if (DECL_BY_REFERENCE (res))\n-\t    {\n-\t      slot = AGGR_INIT_EXPR_SLOT (t);\n-\t      tree addr = build_address (slot);\n-\t      addr = build_nop (TREE_TYPE (res), addr);\n-\t      ctx->global->values.put (res, addr);\n-\t      ctx->global->values.put (slot, NULL_TREE);\n-\t    }\n-\t  else\n-\t    ctx->global->values.put (res, NULL_TREE);\n+\t  gcc_assert (!DECL_BY_REFERENCE (res));\n+\t  ctx->global->values.put (res, NULL_TREE);\n \n \t  /* Track the callee's evaluated SAVE_EXPRs and TARGET_EXPRs so that\n \t     we can forget their values after the call.  */\n@@ -2370,7 +2361,7 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n \t    result = void_node;\n \t  else\n \t    {\n-\t      result = *ctx->global->values.get (slot ? slot : res);\n+\t      result = *ctx->global->values.get (res);\n \t      if (result == NULL_TREE && !*non_constant_p)\n \t\t{\n \t\t  if (!ctx->quiet)\n@@ -2409,8 +2400,6 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n \t     one constexpr evaluation?  If so, maybe also clear out\n \t     other vars from call, maybe in BIND_EXPR handling?  */\n \t  ctx->global->values.remove (res);\n-\t  if (slot)\n-\t    ctx->global->values.remove (slot);\n \t  for (tree parm = parms; parm; parm = TREE_CHAIN (parm))\n \t    ctx->global->values.remove (parm);\n "}]}