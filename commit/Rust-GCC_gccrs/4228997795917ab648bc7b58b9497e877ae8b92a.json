{"sha": "4228997795917ab648bc7b58b9497e877ae8b92a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIyODk5Nzc5NTkxN2FiNjQ4YmM3YjU4Yjk0OTdlODc3YWU4YjkyYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-06-21T14:54:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-06-21T14:54:47Z"}, "message": "re PR tree-optimization/32453 (ICE in build2_stat, at tree.c:3074 (extract_range_from_assert))\n\n2007-06-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/32453\n\t* tree-vrp.c (extract_range_from_assert): Build POINTER_PLUS_EXPR\n\tfor pointer anti-range.\n\n\t* gcc.c-torture/compile/pr32453.c: New testcase.\n\nFrom-SVN: r125922", "tree": {"sha": "30178c30f5f53ba548194c129e6273ceb7ad0460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30178c30f5f53ba548194c129e6273ceb7ad0460"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4228997795917ab648bc7b58b9497e877ae8b92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4228997795917ab648bc7b58b9497e877ae8b92a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4228997795917ab648bc7b58b9497e877ae8b92a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4228997795917ab648bc7b58b9497e877ae8b92a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "461a73b5789a77c47ddc54e02358d92e13486098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/461a73b5789a77c47ddc54e02358d92e13486098", "html_url": "https://github.com/Rust-GCC/gccrs/commit/461a73b5789a77c47ddc54e02358d92e13486098"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "4e0d1ddb4e857f3448531607456180b8e50a0dca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4228997795917ab648bc7b58b9497e877ae8b92a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4228997795917ab648bc7b58b9497e877ae8b92a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4228997795917ab648bc7b58b9497e877ae8b92a", "patch": "@@ -1,3 +1,9 @@\n+2007-06-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/32453\n+\t* tree-vrp.c (extract_range_from_assert): Build POINTER_PLUS_EXPR\n+\tfor pointer anti-range.\n+\n 2007-06-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (processor_target_table): Increase maximum"}, {"sha": "cdcf8fb6ab965883e14c2b56cbf52197cf1c47a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4228997795917ab648bc7b58b9497e877ae8b92a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4228997795917ab648bc7b58b9497e877ae8b92a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4228997795917ab648bc7b58b9497e877ae8b92a", "patch": "@@ -1,3 +1,8 @@\n+2007-06-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/32453\n+\t* gcc.c-torture/compile/pr32453.c: New testcase.\n+\n 2007-06-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/31866"}, {"sha": "bdabac76d7160a3106ad5664dd69b6596e56f1a2", "filename": "gcc/testsuite/gcc.c-torture/compile/pr32453.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4228997795917ab648bc7b58b9497e877ae8b92a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32453.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4228997795917ab648bc7b58b9497e877ae8b92a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32453.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32453.c?ref=4228997795917ab648bc7b58b9497e877ae8b92a", "patch": "@@ -0,0 +1,11 @@\n+void ucs2reverse_internal_loop_single (long *irreversible, int foo)\n+{\n+    unsigned char bytebuf[2];\n+    const unsigned char *inptr = bytebuf;\n+    if (irreversible == (void *)0)\n+\t;\n+    else \n+\tinptr += 2;\n+    if (inptr != bytebuf)\n+\t((inptr - bytebuf > foo) ? (void) (0) : __assert_fail ());\n+}"}, {"sha": "937a76b7046858168547c93429e5b2a5772ffbaf", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4228997795917ab648bc7b58b9497e877ae8b92a/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4228997795917ab648bc7b58b9497e877ae8b92a/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=4228997795917ab648bc7b58b9497e877ae8b92a", "patch": "@@ -1473,10 +1473,13 @@ extract_range_from_assert (value_range_t *vr_p, tree expr)\n \t\t    }\n \t\t  min = positive_overflow_infinity (TREE_TYPE (var_vr->min));\n \t\t}\n-\t      else\n+\t      else if (!POINTER_TYPE_P (TREE_TYPE (var_vr->min)))\n \t\tmin = fold_build2 (PLUS_EXPR, TREE_TYPE (var_vr->min),\n \t\t\t\t   anti_max,\n \t\t\t\t   build_int_cst (TREE_TYPE (var_vr->min), 1));\n+\t      else\n+\t\tmin = fold_build2 (POINTER_PLUS_EXPR, TREE_TYPE (var_vr->min),\n+\t\t\t\t   anti_max, size_int (1));\n \t      max = real_max;\n \t      set_value_range (vr_p, VR_RANGE, min, max, vr_p->equiv);\n \t    }"}]}