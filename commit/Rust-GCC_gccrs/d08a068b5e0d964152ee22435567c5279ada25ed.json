{"sha": "d08a068b5e0d964152ee22435567c5279ada25ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA4YTA2OGI1ZTBkOTY0MTUyZWUyMjQzNTU2N2M1Mjc5YWRhMjVlZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-03-07T20:00:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-03-07T20:00:31Z"}, "message": "typeck.c (comp_template_parms_position): 'auto' and 'decltype(auto)' are different from real template parms.\n\n\t* typeck.c (comp_template_parms_position): 'auto' and\n\t'decltype(auto)' are different from real template parms.\n\nFrom-SVN: r208414", "tree": {"sha": "764677ad4ab0679b3434a88ea863af7f73bc17fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/764677ad4ab0679b3434a88ea863af7f73bc17fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d08a068b5e0d964152ee22435567c5279ada25ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d08a068b5e0d964152ee22435567c5279ada25ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d08a068b5e0d964152ee22435567c5279ada25ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d08a068b5e0d964152ee22435567c5279ada25ed/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "941515205deb8586b79b3f02722d2d7a9532539f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/941515205deb8586b79b3f02722d2d7a9532539f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/941515205deb8586b79b3f02722d2d7a9532539f"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "99a71fbbb73da9964b8155854187acb9cc1a5fa9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08a068b5e0d964152ee22435567c5279ada25ed/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08a068b5e0d964152ee22435567c5279ada25ed/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d08a068b5e0d964152ee22435567c5279ada25ed", "patch": "@@ -1,5 +1,8 @@\n 2014-03-07  Jason Merrill  <jason@redhat.com>\n \n+\t* typeck.c (comp_template_parms_position): 'auto' and\n+\t'decltype(auto)' are different from real template parms.\n+\n \t* parser.c (cp_parser_using_declaration): Consume the semicolon\n \tafter bare parameter pack error.\n "}, {"sha": "559f19b55df30bdcd6572ec98c85e2b1339c1a95", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08a068b5e0d964152ee22435567c5279ada25ed/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08a068b5e0d964152ee22435567c5279ada25ed/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=d08a068b5e0d964152ee22435567c5279ada25ed", "patch": "@@ -1150,6 +1150,11 @@ comp_template_parms_position (tree t1, tree t2)\n \t  != TEMPLATE_PARM_PARAMETER_PACK (index2)))\n     return false;\n \n+  /* In C++14 we can end up comparing 'auto' to a normal template\n+     parameter.  Don't confuse them.  */\n+  if (cxx_dialect >= cxx1y && (is_auto (t1) || is_auto (t2)))\n+    return TYPE_IDENTIFIER (t1) == TYPE_IDENTIFIER (t2);\n+\n   return true;\n }\n "}, {"sha": "dcdb28c04803c5e21ae83df66c6e1fd3fe8583a0", "filename": "gcc/testsuite/g++.dg/cpp0x/auto11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d08a068b5e0d964152ee22435567c5279ada25ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d08a068b5e0d964152ee22435567c5279ada25ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto11.C?ref=d08a068b5e0d964152ee22435567c5279ada25ed", "patch": "@@ -8,5 +8,5 @@ template<int> struct A\n \n void foo()\n {\n-  A<0>().operator auto();\t// { dg-error \"auto.*conversion\" }\n+  A<0>().operator auto();\t// { dg-error \"auto\" }\n }"}]}