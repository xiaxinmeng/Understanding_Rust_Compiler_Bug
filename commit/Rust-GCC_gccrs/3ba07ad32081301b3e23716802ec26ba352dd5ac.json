{"sha": "3ba07ad32081301b3e23716802ec26ba352dd5ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JhMDdhZDMyMDgxMzAxYjNlMjM3MTY4MDJlYzI2YmEzNTJkZDVhYw==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-08-16T16:36:33Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2014-08-16T16:36:33Z"}, "message": "re PR target/61641 (undefined label in jump_table_data)\n\n\tPR target/61641\n\t* config/pa/pa-protos.h (pa_output_addr_vec, pa_output_addr_diff_vec):\n\tDeclare.\n\t* config/pa/pa.c (pa_reorg): Remove code to insert brtab marker insns.\n\t(pa_output_addr_vec, pa_output_addr_diff_vec): New.\n\t* config/pa/pa.h (ASM_OUTPUT_ADDR_VEC, ASM_OUTPUT_ADDR_DIFF_VEC):\n\tDefine.\n\t* config/pa/pa.md (begin_brtab): Delete insn.\n\t(end_brtab): Likewise.\n\nFrom-SVN: r214064", "tree": {"sha": "232ae71258f3c9abc3172d69fabb376e0e1544a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/232ae71258f3c9abc3172d69fabb376e0e1544a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ba07ad32081301b3e23716802ec26ba352dd5ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba07ad32081301b3e23716802ec26ba352dd5ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ba07ad32081301b3e23716802ec26ba352dd5ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba07ad32081301b3e23716802ec26ba352dd5ac/comments", "author": null, "committer": null, "parents": [{"sha": "5f05dc5550287bc09490f7aeeffbdad80288b5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f05dc5550287bc09490f7aeeffbdad80288b5e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f05dc5550287bc09490f7aeeffbdad80288b5e5"}], "stats": {"total": 123, "additions": 67, "deletions": 56}, "files": [{"sha": "081bd12b4a52c7dbaf6cc7eb41c7f44447cc4fd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ba07ad32081301b3e23716802ec26ba352dd5ac", "patch": "@@ -1,3 +1,15 @@\n+2014-08-16  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/61641\n+\t* config/pa/pa-protos.h (pa_output_addr_vec, pa_output_addr_diff_vec):\n+\tDeclare.\n+\t* config/pa/pa.c (pa_reorg): Remove code to insert brtab marker insns.\n+\t(pa_output_addr_vec, pa_output_addr_diff_vec): New.\n+\t* config/pa/pa.h (ASM_OUTPUT_ADDR_VEC, ASM_OUTPUT_ADDR_DIFF_VEC):\n+\tDefine.\n+\t* config/pa/pa.md (begin_brtab): Delete insn.\n+\t(end_brtab): Likewise.\n+\n 2014-08-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* doc/cppopts.texi (ftrack-macro-expansion): Add missing @code."}, {"sha": "45031e28df6ba90cb5b01e53f440dd9a17476cb6", "filename": "gcc/config/pa/pa-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-protos.h?ref=3ba07ad32081301b3e23716802ec26ba352dd5ac", "patch": "@@ -49,6 +49,8 @@ extern const char *pa_output_mul_insn (int, rtx);\n extern const char *pa_output_div_insn (rtx *, int, rtx);\n extern const char *pa_output_mod_insn (int, rtx);\n extern const char *pa_singlemove_string (rtx *);\n+extern void pa_output_addr_vec (rtx, rtx);\n+extern void pa_output_addr_diff_vec (rtx, rtx);\n extern void pa_output_arg_descriptor (rtx);\n extern void pa_output_global_address (FILE *, rtx, int);\n extern void pa_print_operand (FILE *, rtx, int);"}, {"sha": "d47d5c832c55acce608f1c90cef143ad72329b9a", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 43, "deletions": 26, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=3ba07ad32081301b3e23716802ec26ba352dd5ac", "patch": "@@ -8926,40 +8926,15 @@ pa_following_call (rtx insn)\n }\n \n /* We use this hook to perform a PA specific optimization which is difficult\n-   to do in earlier passes.\n-\n-   We surround the jump table itself with BEGIN_BRTAB and END_BRTAB\n-   insns.  Those insns mark where we should emit .begin_brtab and\n-   .end_brtab directives when using GAS.  This allows for better link\n-   time optimizations.  */\n+   to do in earlier passes.  */\n \n static void\n pa_reorg (void)\n {\n-  rtx insn;\n-\n   remove_useless_addtr_insns (1);\n \n   if (pa_cpu < PROCESSOR_8000)\n     pa_combine_instructions ();\n-\n-    /* Still need brtab marker insns.  FIXME: the presence of these\n-       markers disables output of the branch table to readonly memory,\n-       and any alignment directives that might be needed.  Possibly,\n-       the begin_brtab insn should be output before the label for the\n-       table.  This doesn't matter at the moment since the tables are\n-       always output in the text section.  */\n-    for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n-      {\n-\t/* Find an ADDR_VEC insn.  */\n-\tif (! JUMP_TABLE_DATA_P (insn))\n-\t  continue;\n-\n-\t/* Now generate markers for the beginning and end of the\n-\t   branch table.  */\n-\temit_insn_before (gen_begin_brtab (), insn);\n-\temit_insn_after (gen_end_brtab (), insn);\n-      }\n }\n \n /* The PA has a number of odd instructions which can perform multiple\n@@ -10554,4 +10529,46 @@ pa_legitimize_reload_address (rtx ad, enum machine_mode mode,\n   return NULL_RTX;\n }\n \n+/* Output address vector.  */\n+\n+void\n+pa_output_addr_vec (rtx lab, rtx body)\n+{\n+  int idx, vlen = XVECLEN (body, 0);\n+\n+  targetm.asm_out.internal_label (asm_out_file, \"L\", CODE_LABEL_NUMBER (lab));\n+  if (TARGET_GAS)\n+    fputs (\"\\t.begin_brtab\\n\", asm_out_file);\n+  for (idx = 0; idx < vlen; idx++)\n+    {\n+      ASM_OUTPUT_ADDR_VEC_ELT\n+\t(asm_out_file, CODE_LABEL_NUMBER (XEXP (XVECEXP (body, 0, idx), 0)));\n+    }\n+  if (TARGET_GAS)\n+    fputs (\"\\t.end_brtab\\n\", asm_out_file);\n+}\n+\n+/* Output address difference vector.  */\n+\n+void\n+pa_output_addr_diff_vec (rtx lab, rtx body)\n+{\n+  rtx base = XEXP (XEXP (body, 0), 0);\n+  int idx, vlen = XVECLEN (body, 1);\n+\n+  targetm.asm_out.internal_label (asm_out_file, \"L\", CODE_LABEL_NUMBER (lab));\n+  if (TARGET_GAS)\n+    fputs (\"\\t.begin_brtab\\n\", asm_out_file);\n+  for (idx = 0; idx < vlen; idx++)\n+    {\n+      ASM_OUTPUT_ADDR_DIFF_ELT\n+\t(asm_out_file,\n+\t body,\n+\t CODE_LABEL_NUMBER (XEXP (XVECEXP (body, 1, idx), 0)),\n+\t CODE_LABEL_NUMBER (base));\n+    }\n+  if (TARGET_GAS)\n+    fputs (\"\\t.end_brtab\\n\", asm_out_file);\n+}\n+\n #include \"gt-pa.h\""}, {"sha": "9a1773f29e4d552d4c75b65d98610637aa9cbfbc", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=3ba07ad32081301b3e23716802ec26ba352dd5ac", "patch": "@@ -1193,6 +1193,16 @@ do {\t\t\t\t\t\t\t\t\t     \\\n #define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, BODY, VALUE, REL)  \\\n   fprintf (FILE, \"\\t.word L$%04d-L$%04d\\n\", VALUE, REL)\n \n+/* This is how to output an absolute case-vector.  */\n+\n+#define ASM_OUTPUT_ADDR_VEC(LAB,BODY)\t\\\n+  pa_output_addr_vec ((LAB),(BODY))\n+\n+/* This is how to output a relative case-vector.  */\n+\n+#define ASM_OUTPUT_ADDR_DIFF_VEC(LAB,BODY)\t\\\n+  pa_output_addr_diff_vec ((LAB),(BODY))\n+\n /* This is how to output an assembler line that says to advance the\n    location counter to a multiple of 2**LOG bytes.  */\n "}, {"sha": "a9421ac2e61d9f33fb8201890fe78d0408837a5b", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba07ad32081301b3e23716802ec26ba352dd5ac/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=3ba07ad32081301b3e23716802ec26ba352dd5ac", "patch": "@@ -8508,36 +8508,6 @@ add,l %2,%3,%3\\;bv,n %%r0(%3)\"\n   [(set_attr \"type\" \"move\")\n    (set_attr \"length\" \"4\")])\n \n-;; These are just placeholders so we know where branch tables\n-;; begin and end.\n-(define_insn \"begin_brtab\"\n-  [(const_int 1)]\n-  \"\"\n-  \"*\n-{\n-  /* Only GAS actually supports this pseudo-op.  */\n-  if (TARGET_GAS)\n-    return \\\".begin_brtab\\\";\n-  else\n-    return \\\"\\\";\n-}\"\n-  [(set_attr \"type\" \"move\")\n-   (set_attr \"length\" \"0\")])\n-\n-(define_insn \"end_brtab\"\n-  [(const_int 2)]\n-  \"\"\n-  \"*\n-{\n-  /* Only GAS actually supports this pseudo-op.  */\n-  if (TARGET_GAS)\n-    return \\\".end_brtab\\\";\n-  else\n-    return \\\"\\\";\n-}\"\n-  [(set_attr \"type\" \"move\")\n-   (set_attr \"length\" \"0\")])\n-\n ;;; EH does longjmp's from and within the data section.  Thus,\n ;;; an interspace branch is required for the longjmp implementation.\n ;;; Registers r1 and r2 are used as scratch registers for the jump"}]}