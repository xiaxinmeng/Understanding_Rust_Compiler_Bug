{"sha": "dbeccab7a1f5dcc1876c854f17816047ba1ef137", "node_id": "C_kwDOANBUbNoAKGRiZWNjYWI3YTFmNWRjYzE4NzZjODU0ZjE3ODE2MDQ3YmExZWYxMzc", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-03T10:13:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-03T10:19:37Z"}, "message": "gimple-fold: Fix up fputs -> fwrite folding [PR108988]\n\ngimple_fold_builtin_fputs when folding fputs into fwrite emits the third\nargument (INTEGER_CST) with incorrect type - get_maxval_strlen or c_strlen\nreturn ssizetype, while fwrite argument is size_type_node.\nThe following patch fixes that, I've skimmed through the rest of\ngimple-fold.cc and in all other places get_maxval_strlen/c_strlen result\nwas fold_converted to size_type_node already (or GIMPLE cast stmt has been\nemitted directly etc.).\n\n2023-03-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/108988\n\t* gimple-fold.cc (gimple_fold_builtin_fputs): Fold len to\n\tsize_type_node before passing it as argument to fwrite.  Formatting\n\tfixes.", "tree": {"sha": "d2550d5f0cf276ae94a05c547c86b6bbf9c41d4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2550d5f0cf276ae94a05c547c86b6bbf9c41d4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbeccab7a1f5dcc1876c854f17816047ba1ef137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbeccab7a1f5dcc1876c854f17816047ba1ef137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbeccab7a1f5dcc1876c854f17816047ba1ef137", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbeccab7a1f5dcc1876c854f17816047ba1ef137/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5c543910a1679ba3c9b78e3b362a16a150e2bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5c543910a1679ba3c9b78e3b362a16a150e2bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5c543910a1679ba3c9b78e3b362a16a150e2bf7"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "2b6855d12057c2ed0e1e228780a6fe2537a46fa2", "filename": "gcc/gimple-fold.cc", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbeccab7a1f5dcc1876c854f17816047ba1ef137/gcc%2Fgimple-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbeccab7a1f5dcc1876c854f17816047ba1ef137/gcc%2Fgimple-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.cc?ref=dbeccab7a1f5dcc1876c854f17816047ba1ef137", "patch": "@@ -2954,8 +2954,7 @@ gimple_fold_builtin_fputs (gimple_stmt_iterator *gsi,\n   /* Get the length of the string passed to fputs.  If the length\n      can't be determined, punt.  */\n   tree len = get_maxval_strlen (arg0, SRK_STRLEN);\n-  if (!len\n-      || TREE_CODE (len) != INTEGER_CST)\n+  if (!len || TREE_CODE (len) != INTEGER_CST)\n     return false;\n \n   switch (compare_tree_int (len, 1))\n@@ -2972,9 +2971,10 @@ gimple_fold_builtin_fputs (gimple_stmt_iterator *gsi,\n \t    if (!fn_fputc)\n \t      return false;\n \n-\t    gimple *repl = gimple_build_call (fn_fputc, 2,\n-\t\t\t\t\t     build_int_cst\n-\t\t\t\t\t     (integer_type_node, p[0]), arg1);\n+\t    gimple *repl\n+\t      = gimple_build_call (fn_fputc, 2,\n+\t\t\t\t   build_int_cst (integer_type_node, p[0]),\n+\t\t\t\t   arg1);\n \t    replace_call_with_call_and_fold (gsi, repl);\n \t    return true;\n \t  }\n@@ -2990,8 +2990,9 @@ gimple_fold_builtin_fputs (gimple_stmt_iterator *gsi,\n \tif (!fn_fwrite)\n \t  return false;\n \n-\tgimple *repl = gimple_build_call (fn_fwrite, 4, arg0,\n-\t\t\t\t\t size_one_node, len, arg1);\n+\tgimple *repl\n+\t  = gimple_build_call (fn_fwrite, 4, arg0, size_one_node,\n+\t\t\t       fold_convert (size_type_node, len), arg1);\n \treplace_call_with_call_and_fold (gsi, repl);\n \treturn true;\n       }"}]}