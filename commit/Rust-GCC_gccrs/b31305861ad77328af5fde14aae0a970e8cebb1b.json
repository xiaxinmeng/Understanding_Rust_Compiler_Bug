{"sha": "b31305861ad77328af5fde14aae0a970e8cebb1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMxMzA1ODYxYWQ3NzMyOGFmNWZkZTE0YWFlMGE5NzBlOGNlYmIxYg==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2006-01-29T16:50:05Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2006-01-29T16:50:05Z"}, "message": "re PR tree-optimization/25911 (ice in vect_recog_dot_prod_pattern)\n\n        PR tree-opt/25911\n        * tree-vect-patterns.c (vect_recog_dot_prod_pattern): Change assert\n        to an if check.\n\nFrom-SVN: r110377", "tree": {"sha": "18f25807d04bcac94fbcb9315db276a1065e2a80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18f25807d04bcac94fbcb9315db276a1065e2a80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b31305861ad77328af5fde14aae0a970e8cebb1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b31305861ad77328af5fde14aae0a970e8cebb1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b31305861ad77328af5fde14aae0a970e8cebb1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b31305861ad77328af5fde14aae0a970e8cebb1b/comments", "author": null, "committer": null, "parents": [{"sha": "a920e94a9e87d680206d24e1a38902f3c5536c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a920e94a9e87d680206d24e1a38902f3c5536c29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a920e94a9e87d680206d24e1a38902f3c5536c29"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "0c18c08451a23365aa3f124e6591c3217e2910d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31305861ad77328af5fde14aae0a970e8cebb1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31305861ad77328af5fde14aae0a970e8cebb1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b31305861ad77328af5fde14aae0a970e8cebb1b", "patch": "@@ -1,3 +1,9 @@\n+2006-01-29  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-opt/25911\n+\t* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Change assert\n+\tto an if check.\n+\n 2006-01-29  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* toplev.c: Fix thinko."}, {"sha": "ecfd75caca5f69457e98cad5fe06e1eedfedfd76", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31305861ad77328af5fde14aae0a970e8cebb1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31305861ad77328af5fde14aae0a970e8cebb1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b31305861ad77328af5fde14aae0a970e8cebb1b", "patch": "@@ -1,3 +1,8 @@\n+2006-01-29  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-opt/25911\n+\t* gcc.dg/vect/fast-math-vect-pr25911.c: New.\n+\n 2006-01-29  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/18578"}, {"sha": "633382f5b787faa2094ecd908ec1f0a981be18cb", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-vect-pr25911.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31305861ad77328af5fde14aae0a970e8cebb1b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-pr25911.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31305861ad77328af5fde14aae0a970e8cebb1b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-pr25911.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-vect-pr25911.c?ref=b31305861ad77328af5fde14aae0a970e8cebb1b", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+\n+float bessel_Kn_scaled_small_x(int n)\n+{\n+  int k;\n+  float k_term, sum1;\n+  for(k=1; k<=n-1; k++)\n+  {\n+    k_term *= -1/(k * (n-k));\n+    sum1 += k_term;\n+  }\n+  return sum1;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "61d66e1ab474d0c18dfdd28a888b7c9f47ab1b06", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b31305861ad77328af5fde14aae0a970e8cebb1b/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b31305861ad77328af5fde14aae0a970e8cebb1b/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=b31305861ad77328af5fde14aae0a970e8cebb1b", "patch": "@@ -243,7 +243,8 @@ vect_recog_dot_prod_pattern (tree last_stmt, tree *type_in, tree *type_out)\n   gcc_assert (stmt);\n   stmt_vinfo = vinfo_for_stmt (stmt);\n   gcc_assert (stmt_vinfo);\n-  gcc_assert (STMT_VINFO_DEF_TYPE (stmt_vinfo) == vect_loop_def);\n+  if (STMT_VINFO_DEF_TYPE (stmt_vinfo) != vect_loop_def)\n+    return NULL;\n   expr = TREE_OPERAND (stmt, 1);\n   if (TREE_CODE (expr) != MULT_EXPR)\n     return NULL;"}]}