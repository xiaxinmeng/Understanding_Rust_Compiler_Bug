{"sha": "9374bd85eb0680c7198aa6413ff738c3d31d81b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM3NGJkODVlYjA2ODBjNzE5OGFhNjQxM2ZmNzM4YzNkMzFkODFiNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-21T22:31:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-21T22:31:06Z"}, "message": "(prepare_scc_operands): New local variable mode.\n\n(prepare_scc_operands): New local variable mode.  Set it from\nsh_compare_op0 or sh_compare_op1.  Use it instead of SImode in\nforce_reg calls.\n\nFrom-SVN: r10500", "tree": {"sha": "e886cc64b0b3dc2f2c62178fc6ba50bebeb5891c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e886cc64b0b3dc2f2c62178fc6ba50bebeb5891c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9374bd85eb0680c7198aa6413ff738c3d31d81b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9374bd85eb0680c7198aa6413ff738c3d31d81b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9374bd85eb0680c7198aa6413ff738c3d31d81b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9374bd85eb0680c7198aa6413ff738c3d31d81b7/comments", "author": null, "committer": null, "parents": [{"sha": "c8f6f18d84829f59cc51137e7e27cca9414dca9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8f6f18d84829f59cc51137e7e27cca9414dca9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8f6f18d84829f59cc51137e7e27cca9414dca9d"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "bbb708c10a1ca6f476462ffd55c4b3e2a198a6bc", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9374bd85eb0680c7198aa6413ff738c3d31d81b7/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9374bd85eb0680c7198aa6413ff738c3d31d81b7/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=9374bd85eb0680c7198aa6413ff738c3d31d81b7", "patch": "@@ -320,6 +320,7 @@ prepare_scc_operands (code)\n {\n   rtx t_reg = gen_rtx (REG, SImode, T_REG);\n   enum rtx_code oldcode = code;\n+  enum machine_mode mode;\n \n   /* First need a compare insn.  */\n   switch (code)\n@@ -347,11 +348,15 @@ prepare_scc_operands (code)\n       sh_compare_op1 = tmp;\n     }\n \n-  sh_compare_op0 = force_reg (SImode, sh_compare_op0);\n+  mode = GET_MODE (sh_compare_op0);\n+  if (mode == VOIDmode)\n+    mode = GET_MODE (sh_compare_op1);\n+\n+  sh_compare_op0 = force_reg (mode, sh_compare_op0);\n   if (code != EQ && code != NE\n       && (sh_compare_op1 != const0_rtx\n \t  || code == GTU  || code == GEU || code == LTU || code == LEU))\n-    sh_compare_op1 = force_reg (SImode, sh_compare_op1);\n+    sh_compare_op1 = force_reg (mode, sh_compare_op1);\n \n   emit_insn (gen_rtx (SET, VOIDmode, t_reg,\n \t\t      gen_rtx (code, SImode, sh_compare_op0,"}]}