{"sha": "e8f9b13a305dddbefab7d710706f033aa25f53ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThmOWIxM2EzMDVkZGRiZWZhYjdkNzEwNzA2ZjAzM2FhMjVmNTNlYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-10-13T17:22:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-10-13T17:22:40Z"}, "message": "genrecog.c (write_subroutine): Careful for null trees.\n\n        * genrecog.c (write_subroutine): Careful for null trees.\n        (process_tree): Don't elide empty functions.\n\nFrom-SVN: r29948", "tree": {"sha": "a20d99d6120df50b68cea46249962e38725a9992", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a20d99d6120df50b68cea46249962e38725a9992"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8f9b13a305dddbefab7d710706f033aa25f53ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8f9b13a305dddbefab7d710706f033aa25f53ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8f9b13a305dddbefab7d710706f033aa25f53ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8f9b13a305dddbefab7d710706f033aa25f53ea/comments", "author": null, "committer": null, "parents": [{"sha": "5c371bd09cfb37dcfaebf23f57753cecdc3b453d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c371bd09cfb37dcfaebf23f57753cecdc3b453d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c371bd09cfb37dcfaebf23f57753cecdc3b453d"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "6a7151a35eb4078889357a05a90602c4c815e728", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8f9b13a305dddbefab7d710706f033aa25f53ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8f9b13a305dddbefab7d710706f033aa25f53ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8f9b13a305dddbefab7d710706f033aa25f53ea", "patch": "@@ -1,3 +1,8 @@\n+Wed Oct 13 10:20:58 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* genrecog.c (write_subroutine): Careful for null trees.\n+\t(process_tree): Don't elide empty functions.\n+\n Wed Oct 13 10:07:54 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* Makefile.in (genrtl.o): Depend on ggc.h."}, {"sha": "0114bc17533c56acc3b25636b00195829c42b808", "filename": "gcc/genrecog.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8f9b13a305dddbefab7d710706f033aa25f53ea/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8f9b13a305dddbefab7d710706f033aa25f53ea/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=e8f9b13a305dddbefab7d710706f033aa25f53ea", "patch": "@@ -1859,7 +1859,7 @@ peephole2%s (x0, insn, _plast_insn)\\n\\\n      rtx *_plast_insn ATTRIBUTE_UNUSED;\\n\"\n   };\n      \n-  int subfunction = head->first->subroutine_number;\n+  int subfunction = head->first ? head->first->subroutine_number : 0;\n   const char *s_or_e;\n   char extension[32];\n   int i;\n@@ -1884,7 +1884,10 @@ peephole2%s (x0, insn, _plast_insn)\\n\\\n     printf (\"  register rtx _last_insn = insn;\\n\");\n   printf (\"  %s tem ATTRIBUTE_UNUSED;\\n\", IS_SPLIT (type) ? \"rtx\" : \"int\");\n \n-  write_tree (head, \"\", type, 1);\n+  if (head->first)\n+    write_tree (head, \"\", type, 1);\n+  else\n+    printf (\"  goto ret0;\\n\");\n \n   if (type == PEEPHOLE2)\n     printf (\" ret1:\\n  *_plast_insn = _last_insn;\\n  return tem;\\n\");\n@@ -2128,17 +2131,17 @@ process_tree (head, subroutine_type)\n      struct decision_head *head;\n      enum routine_type subroutine_type;\n {\n-  if (head->first == NULL)\n-    return;\n-\n-  factor_tests (head);\n-  simplify_tests (head);\n+  if (head->first != NULL)\n+    {\n+      factor_tests (head);\n+      simplify_tests (head);\n \n-  next_subroutine_number = 0;\n-  break_out_subroutines (head, 1);\n-  find_afterward (head, NULL);\n+      next_subroutine_number = 0;\n+      break_out_subroutines (head, 1);\n+      find_afterward (head, NULL);\n \n-  write_subroutines (head, subroutine_type);\n+      write_subroutines (head, subroutine_type);\n+    }\n   write_subroutine (head, subroutine_type);\n }\n \f"}]}