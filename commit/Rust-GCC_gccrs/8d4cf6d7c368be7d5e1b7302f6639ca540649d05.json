{"sha": "8d4cf6d7c368be7d5e1b7302f6639ca540649d05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ0Y2Y2ZDdjMzY4YmU3ZDVlMWI3MzAyZjY2MzljYTU0MDY0OWQwNQ==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "basile@starynkevitch.net", "date": "2009-07-09T17:57:14Z"}, "committer": {"name": "Basile Starynkevitch", "email": "bstarynk@gcc.gnu.org", "date": "2009-07-09T17:57:14Z"}, "message": "plugin.c (try_init_one_plugin): passes RTLD_GLOBAL to dlopen.\n\n\n2009-07-09  Basile Starynkevitch  <basile@starynkevitch.net>\n\n\t* gcc/plugin.c (try_init_one_plugin): passes RTLD_GLOBAL to dlopen.\n\nFrom-SVN: r149424", "tree": {"sha": "13574a26da2449b731d606de92e0fecc392d78f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13574a26da2449b731d606de92e0fecc392d78f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d4cf6d7c368be7d5e1b7302f6639ca540649d05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4cf6d7c368be7d5e1b7302f6639ca540649d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d4cf6d7c368be7d5e1b7302f6639ca540649d05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d4cf6d7c368be7d5e1b7302f6639ca540649d05/comments", "author": {"login": "bstarynk", "id": 90412, "node_id": "MDQ6VXNlcjkwNDEy", "avatar_url": "https://avatars.githubusercontent.com/u/90412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstarynk", "html_url": "https://github.com/bstarynk", "followers_url": "https://api.github.com/users/bstarynk/followers", "following_url": "https://api.github.com/users/bstarynk/following{/other_user}", "gists_url": "https://api.github.com/users/bstarynk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstarynk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstarynk/subscriptions", "organizations_url": "https://api.github.com/users/bstarynk/orgs", "repos_url": "https://api.github.com/users/bstarynk/repos", "events_url": "https://api.github.com/users/bstarynk/events{/privacy}", "received_events_url": "https://api.github.com/users/bstarynk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8be2c87161b7db3a5067bd0e1a5b5565744680a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be2c87161b7db3a5067bd0e1a5b5565744680a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be2c87161b7db3a5067bd0e1a5b5565744680a2"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "114d4a18d4da7ed35563d477a578d98df322e519", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4cf6d7c368be7d5e1b7302f6639ca540649d05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4cf6d7c368be7d5e1b7302f6639ca540649d05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d4cf6d7c368be7d5e1b7302f6639ca540649d05", "patch": "@@ -1,3 +1,8 @@\n+\n+2009-07-09  Basile Starynkevitch  <basile@starynkevitch.net>\n+\n+\t* plugin.c (try_init_one_plugin): passes RTLD_GLOBAL to dlopen. \n+\n 2009-07-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/40692"}, {"sha": "906068387b7de4bc04003132dc9fb7f86d69cf32", "filename": "gcc/plugin.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d4cf6d7c368be7d5e1b7302f6639ca540649d05/gcc%2Fplugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d4cf6d7c368be7d5e1b7302f6639ca540649d05/gcc%2Fplugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.c?ref=8d4cf6d7c368be7d5e1b7302f6639ca540649d05", "patch": "@@ -592,7 +592,11 @@ try_init_one_plugin (struct plugin_name_args *plugin)\n   char *err;\n   PTR_UNION_TYPE (plugin_init_func) plugin_init_union;\n \n-  dl_handle = dlopen (plugin->full_name, RTLD_NOW);\n+  /* We use RTLD_NOW to accelerate binding and detect any mismatch\n+     between the API expected by the plugin and the GCC API; we use\n+     RTLD_GLOBAL which is useful to plugins which themselves call\n+     dlopen.  */\n+  dl_handle = dlopen (plugin->full_name, RTLD_NOW | RTLD_GLOBAL);\n   if (!dl_handle)\n     {\n       error (\"Cannot load plugin %s\\n%s\", plugin->full_name, dlerror ());"}]}