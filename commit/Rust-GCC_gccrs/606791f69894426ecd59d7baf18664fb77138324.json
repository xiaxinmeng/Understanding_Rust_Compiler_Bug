{"sha": "606791f69894426ecd59d7baf18664fb77138324", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA2NzkxZjY5ODk0NDI2ZWNkNTlkN2JhZjE4NjY0ZmI3NzEzODMyNA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-05-30T21:25:02Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-05-30T21:25:02Z"}, "message": "re PR c++/27803 (ICE with invalid bit-field)\n\n\tPR c++/27803\n\t* class.c (check_bitfield_decl): Ensure that all bitfields have\n\tintegral type.\n\tPR c++/27803\n\t* g++.dg/parse/bitfield1.C: New test.\n\nFrom-SVN: r114245", "tree": {"sha": "4a0522dc4f55cb8eb61381e3632191ea2dbb06e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a0522dc4f55cb8eb61381e3632191ea2dbb06e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/606791f69894426ecd59d7baf18664fb77138324", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606791f69894426ecd59d7baf18664fb77138324", "html_url": "https://github.com/Rust-GCC/gccrs/commit/606791f69894426ecd59d7baf18664fb77138324", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606791f69894426ecd59d7baf18664fb77138324/comments", "author": null, "committer": null, "parents": [{"sha": "c98662e02092adc0bd3fe4cf898f5bf2ba533f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c98662e02092adc0bd3fe4cf898f5bf2ba533f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c98662e02092adc0bd3fe4cf898f5bf2ba533f37"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "fcfb7f30a615b7c00597d7006fe3f1862de57ba0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606791f69894426ecd59d7baf18664fb77138324/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606791f69894426ecd59d7baf18664fb77138324/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=606791f69894426ecd59d7baf18664fb77138324", "patch": "@@ -1,3 +1,9 @@\n+2006-05-30  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27803\n+\t* class.c (check_bitfield_decl): Ensure that all bitfields have\n+\tintegral type.\n+\n 2006-05-29  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* pt.c (convert_nontype_argument): Fix a typo in an error"}, {"sha": "a1460c0e58df8b9691614f3da35d65ba3417b79b", "filename": "gcc/cp/class.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606791f69894426ecd59d7baf18664fb77138324/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606791f69894426ecd59d7baf18664fb77138324/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=606791f69894426ecd59d7baf18664fb77138324", "patch": "@@ -2625,21 +2625,25 @@ static void\n check_bitfield_decl (tree field)\n {\n   tree type = TREE_TYPE (field);\n-  tree w = NULL_TREE;\n+  tree w;\n+\n+  /* Extract the declared width of the bitfield, which has been\n+     temporarily stashed in DECL_INITIAL.  */\n+  w = DECL_INITIAL (field);\n+  gcc_assert (w != NULL_TREE); \n+  /* Remove the bit-field width indicator so that the rest of the\n+     compiler does not treat that value as an initializer.  */\n+  DECL_INITIAL (field) = NULL_TREE;\n \n   /* Detect invalid bit-field type.  */\n-  if (DECL_INITIAL (field)\n-      && ! INTEGRAL_TYPE_P (TREE_TYPE (field)))\n+  if (!INTEGRAL_TYPE_P (type))\n     {\n       error (\"bit-field %q+#D with non-integral type\", field);\n+      TREE_TYPE (field) = error_mark_node;\n       w = error_mark_node;\n     }\n-\n-  /* Detect and ignore out of range field width.  */\n-  if (DECL_INITIAL (field))\n+  else\n     {\n-      w = DECL_INITIAL (field);\n-\n       /* Avoid the non_lvalue wrapper added by fold for PLUS_EXPRs.  */\n       STRIP_NOPS (w);\n \n@@ -2676,10 +2680,6 @@ check_bitfield_decl (tree field)\n \twarning (0, \"%q+D is too small to hold all values of %q#T\", field, type);\n     }\n \n-  /* Remove the bit-field width indicator so that the rest of the\n-     compiler does not treat that value as an initializer.  */\n-  DECL_INITIAL (field) = NULL_TREE;\n-\n   if (w != error_mark_node)\n     {\n       DECL_SIZE (field) = convert (bitsizetype, w);"}, {"sha": "1cc2f13451bd6c7101c9f9f8143b53c7b9a29cef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606791f69894426ecd59d7baf18664fb77138324/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606791f69894426ecd59d7baf18664fb77138324/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=606791f69894426ecd59d7baf18664fb77138324", "patch": "@@ -1,3 +1,8 @@\n+2006-05-30  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27803\n+\t* g++.dg/parse/bitfield1.C: New test. \n+\n 2006-05-30  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.target/ppc-eq0-1.c: New test case."}, {"sha": "70fe5cbd7148208cdc841cf37193941f970182bb", "filename": "gcc/testsuite/g++.dg/parse/bitfield1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/606791f69894426ecd59d7baf18664fb77138324/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/606791f69894426ecd59d7baf18664fb77138324/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield1.C?ref=606791f69894426ecd59d7baf18664fb77138324", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/27803\n+\n+struct A\n+{\n+  double i : 8; // { dg-error \"type\" }\n+};\n+\n+void foo(A& a)\n+{\n+  (char)a.i;\n+}"}]}