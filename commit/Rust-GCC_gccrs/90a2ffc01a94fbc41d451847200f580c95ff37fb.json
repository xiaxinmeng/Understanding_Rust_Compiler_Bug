{"sha": "90a2ffc01a94fbc41d451847200f580c95ff37fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBhMmZmYzAxYTk0ZmJjNDFkNDUxODQ3MjAwZjU4MGM5NWZmMzdmYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-11-08T19:06:54Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-11-08T19:06:54Z"}, "message": "re PR target/70799 (STV pass does not convert DImode shifts)\n\n\tPR target/70799\n\t* config/i386/i386.c (dimode_scalar_to_vector_candidate_p):\n\tHandle ASHIFT and LSHIFTRT.\n\t(dimode_scalar_chain::compute_convert_gain): Ditto.\n\t(dimode_scalar_chain::convert_insn): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/70799\n\t* gcc.target/i386/pr70799-2.c: New test.\n\nFrom-SVN: r241974", "tree": {"sha": "1ebfe2120a42fc29c87378f1c10d55322ac4fe00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ebfe2120a42fc29c87378f1c10d55322ac4fe00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90a2ffc01a94fbc41d451847200f580c95ff37fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a2ffc01a94fbc41d451847200f580c95ff37fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90a2ffc01a94fbc41d451847200f580c95ff37fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a2ffc01a94fbc41d451847200f580c95ff37fb/comments", "author": null, "committer": null, "parents": [{"sha": "eba5aec8e347d75013268de658efa1c7af93123a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eba5aec8e347d75013268de658efa1c7af93123a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eba5aec8e347d75013268de658efa1c7af93123a"}], "stats": {"total": 69, "additions": 60, "deletions": 9}, "files": [{"sha": "7e128080e6e13bf68ac4cdea2a443959487f28ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a2ffc01a94fbc41d451847200f580c95ff37fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a2ffc01a94fbc41d451847200f580c95ff37fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90a2ffc01a94fbc41d451847200f580c95ff37fb", "patch": "@@ -1,3 +1,11 @@\n+2016-11-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70799\n+\t* config/i386/i386.c (dimode_scalar_to_vector_candidate_p):\n+\tHandle ASHIFT and LSHIFTRT.\n+\t(dimode_scalar_chain::compute_convert_gain): Ditto.\n+\t(dimode_scalar_chain::convert_insn): Ditto.\n+\n 2016-11-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gimple-ssa-store-merging.c: Include selftest.h\n@@ -94,7 +102,7 @@\n 2016-11-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/78229\n-\t* config/i386/i386.c (ix86_gimple_fold_builtin): Do not adjust                                                                             \n+\t* config/i386/i386.c (ix86_gimple_fold_builtin): Do not adjust\n \tEH info even for bzhi and pdep/pext.\n \n 2016-11-07  Peter Bergner  <bergner@vnet.ibm.com>"}, {"sha": "a5c4ba7b6300c12dfc1dfe9a190b9167c2439e05", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a2ffc01a94fbc41d451847200f580c95ff37fb/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a2ffc01a94fbc41d451847200f580c95ff37fb/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=90a2ffc01a94fbc41d451847200f580c95ff37fb", "patch": "@@ -2805,11 +2805,24 @@ dimode_scalar_to_vector_candidate_p (rtx_insn *insn)\n \n   switch (GET_CODE (src))\n     {\n+    case ASHIFT:\n+    case LSHIFTRT:\n+      /* Consider only non-variable shifts narrower\n+\t than general register width.  */\n+      if (!(CONST_INT_P (XEXP (src, 1))\n+\t    && IN_RANGE (INTVAL (XEXP (src, 1)), 0, 31)))\n+\treturn false;\n+      break;\n+\n     case PLUS:\n     case MINUS:\n     case IOR:\n     case XOR:\n     case AND:\n+      if (!REG_P (XEXP (src, 1))\n+\t  && !MEM_P (XEXP (src, 1))\n+\t  && !CONST_INT_P (XEXP (src, 1)))\n+\treturn false;\n       break;\n \n     case REG:\n@@ -2832,11 +2845,6 @@ dimode_scalar_to_vector_candidate_p (rtx_insn *insn)\n \t  || !REG_P (XEXP (XEXP (src, 0), 0))))\n       return false;\n \n-  if (!REG_P (XEXP (src, 1))\n-      && !MEM_P (XEXP (src, 1))\n-      && !CONST_INT_P (XEXP (src, 1)))\n-      return false;\n-\n   if ((GET_MODE (XEXP (src, 0)) != DImode\n        && !CONST_INT_P (XEXP (src, 0)))\n       || (GET_MODE (XEXP (src, 1)) != DImode\n@@ -3387,6 +3395,13 @@ dimode_scalar_chain::compute_convert_gain ()\n \tgain += 2 * ix86_cost->int_store[2] - ix86_cost->sse_store[1];\n       else if (MEM_P (src) && REG_P (dst))\n \tgain += 2 * ix86_cost->int_load[2] - ix86_cost->sse_load[1];\n+      else if (GET_CODE (src) == ASHIFT\n+\t       || GET_CODE (src) == LSHIFTRT)\n+\t{\n+\t  gain += ix86_cost->add;\n+    \t  if (CONST_INT_P (XEXP (src, 0)))\n+\t    gain -= vector_const_cost (XEXP (src, 0));\n+\t}\n       else if (GET_CODE (src) == PLUS\n \t       || GET_CODE (src) == MINUS\n \t       || GET_CODE (src) == IOR\n@@ -3738,6 +3753,12 @@ dimode_scalar_chain::convert_insn (rtx_insn *insn)\n \n   switch (GET_CODE (src))\n     {\n+    case ASHIFT:\n+    case LSHIFTRT:\n+      convert_op (&XEXP (src, 0), insn);\n+      PUT_MODE (src, V2DImode);\n+      break;\n+\n     case PLUS:\n     case MINUS:\n     case IOR:"}, {"sha": "05159aa410846b0eb8f874b3e4ca076ece2540dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a2ffc01a94fbc41d451847200f580c95ff37fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a2ffc01a94fbc41d451847200f580c95ff37fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90a2ffc01a94fbc41d451847200f580c95ff37fb", "patch": "@@ -1,3 +1,8 @@\n+2016-11-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70799\n+\t* gcc.target/i386/pr70799-2.c: New test.\n+\n 2016-11-08  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/77596\n@@ -48,7 +53,7 @@\n \t* gcc.dg/store_merging_1.c: Require store_merge.\n \t* gcc.dg/store_merging_2.c: Likewise.\n \t* gcc.dg/store_merging_4.c: Likewise.\n-\t* gcc.dg/store_merging_5.c: Likewise. \n+\t* gcc.dg/store_merging_5.c: Likewise.\n \t* gcc.dg/store_merging_6.c: Likewise.\n \t* gcc.dg/store_merging_7.c: Likewise.\n \t* gcc.dg/store_merging_8.c: Likewise.\n@@ -532,8 +537,8 @@\n \t* gcc.dg/divmod-7.c: Likewise.\n \n 2016-10-28  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n-            Jakub Jelinek  <jakub@redhat.com>\n-            Andrew Pinski  <pinskia@gmail.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\t    Andrew Pinski  <pinskia@gmail.com>\n \n \tPR middle-end/22141\n \tPR rtl-optimization/23684"}, {"sha": "47810511f973f5d7ff39a49d1eb7dc5d2e407f28", "filename": "gcc/testsuite/gcc.target/i386/pr70799-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a2ffc01a94fbc41d451847200f580c95ff37fb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70799-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a2ffc01a94fbc41d451847200f580c95ff37fb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70799-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70799-2.c?ref=90a2ffc01a94fbc41d451847200f580c95ff37fb", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/pr70799 */\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-O2 -march=slm -mno-stackrealign\" } */\n+/* { dg-final { scan-assembler \"psllq\" } } */\n+/* { dg-final { scan-assembler \"psrlq\" } } */\n+\n+unsigned long long a, b;\n+\n+void test1 (void)\n+{\n+  a = b << 21;\n+}\n+\n+void test2 (void)\n+{\n+  a = b >> 21;\n+}"}]}