{"sha": "1d6e77c504dc3f5750374b2d0157f804c95031db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ2ZTc3YzUwNGRjM2Y1NzUwMzc0YjJkMDE1N2Y4MDRjOTUwMzFkYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-12-04T12:32:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-12-04T12:32:26Z"}, "message": "tree-ssa-sccvn.c (sccvn_dom_walker): Add unreachable_dom member and initialize it.\n\n2015-12-04  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (sccvn_dom_walker): Add unreachable_dom\n\tmember and initialize it.\n\t(sccvn_dom_walker::after_dom_children): Reset unreachable_dom\n\tif necessary.\n\t(sccvn_dom_walker::before_dom_children): If unreachable_dom\n\tis set BB is not reachable either.  Set unreachable_dom\n\tif not set and BB is unreachable.\n\nFrom-SVN: r231262", "tree": {"sha": "c1f7bb1b67a14f516903cc81707e4910e9ff3675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1f7bb1b67a14f516903cc81707e4910e9ff3675"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d6e77c504dc3f5750374b2d0157f804c95031db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6e77c504dc3f5750374b2d0157f804c95031db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d6e77c504dc3f5750374b2d0157f804c95031db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6e77c504dc3f5750374b2d0157f804c95031db/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a8c6effec0cd293b6d1ab50a7e221817acad5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a8c6effec0cd293b6d1ab50a7e221817acad5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a8c6effec0cd293b6d1ab50a7e221817acad5d8"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "c1eacbcda39048cd39beca49ca0242b7ee08e2f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6e77c504dc3f5750374b2d0157f804c95031db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6e77c504dc3f5750374b2d0157f804c95031db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d6e77c504dc3f5750374b2d0157f804c95031db", "patch": "@@ -1,3 +1,13 @@\n+2015-12-04  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (sccvn_dom_walker): Add unreachable_dom\n+\tmember and initialize it.\n+\t(sccvn_dom_walker::after_dom_children): Reset unreachable_dom\n+\tif necessary.\n+\t(sccvn_dom_walker::before_dom_children): If unreachable_dom\n+\tis set BB is not reachable either.  Set unreachable_dom\n+\tif not set and BB is unreachable.\n+\n 2015-12-04  Richard Biener  <rguenther@suse.de>\n \n \t* bitmap.c (bitmap_find_bit): Guard the bitmap descriptor"}, {"sha": "2014ee7a7ebf11748b99e010c034b33fa879fbb1", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6e77c504dc3f5750374b2d0157f804c95031db/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6e77c504dc3f5750374b2d0157f804c95031db/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=1d6e77c504dc3f5750374b2d0157f804c95031db", "patch": "@@ -4207,7 +4207,8 @@ class sccvn_dom_walker : public dom_walker\n {\n public:\n   sccvn_dom_walker ()\n-    : dom_walker (CDI_DOMINATORS), fail (false), cond_stack (vNULL) {}\n+    : dom_walker (CDI_DOMINATORS), fail (false), unreachable_dom (NULL),\n+      cond_stack (vNULL) {}\n   ~sccvn_dom_walker ();\n \n   virtual void before_dom_children (basic_block);\n@@ -4219,6 +4220,7 @@ class sccvn_dom_walker : public dom_walker\n \t\t     enum tree_code code, tree lhs, tree rhs, bool value);\n \n   bool fail;\n+  basic_block unreachable_dom;\n   vec<std::pair <basic_block, std::pair <vn_nary_op_t, vn_nary_op_t> > >\n     cond_stack;\n };\n@@ -4299,6 +4301,9 @@ sccvn_dom_walker::record_conds (basic_block bb,\n void\n sccvn_dom_walker::after_dom_children (basic_block bb)\n {\n+  if (unreachable_dom == bb)\n+    unreachable_dom = NULL;\n+\n   while (!cond_stack.is_empty ()\n \t && cond_stack.last ().first == bb)\n     {\n@@ -4325,10 +4330,14 @@ sccvn_dom_walker::before_dom_children (basic_block bb)\n   /* If any of the predecessor edges that do not come from blocks dominated\n      by us are still marked as possibly executable consider this block\n      reachable.  */\n-  bool reachable = bb == ENTRY_BLOCK_PTR_FOR_FN (cfun);\n-  FOR_EACH_EDGE (e, ei, bb->preds)\n-    if (!dominated_by_p (CDI_DOMINATORS, e->src, bb))\n-      reachable |= (e->flags & EDGE_EXECUTABLE);\n+  bool reachable = false;\n+  if (!unreachable_dom)\n+    {\n+      reachable = bb == ENTRY_BLOCK_PTR_FOR_FN (cfun);\n+      FOR_EACH_EDGE (e, ei, bb->preds)\n+\tif (!dominated_by_p (CDI_DOMINATORS, e->src, bb))\n+\t  reachable |= (e->flags & EDGE_EXECUTABLE);\n+    }\n \n   /* If the block is not reachable all outgoing edges are not\n      executable.  Neither are incoming edges with src dominated by us.  */\n@@ -4352,6 +4361,11 @@ sccvn_dom_walker::before_dom_children (basic_block bb)\n \t      e->flags &= ~EDGE_EXECUTABLE;\n \t    }\n \t}\n+\n+      /* Record the most dominating unreachable block.  */\n+      if (!unreachable_dom)\n+\tunreachable_dom = bb;\n+\n       return;\n     }\n "}]}