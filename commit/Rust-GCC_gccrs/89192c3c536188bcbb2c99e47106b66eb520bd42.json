{"sha": "89192c3c536188bcbb2c99e47106b66eb520bd42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkxOTJjM2M1MzYxODhiY2JiMmM5OWU0NzEwNmI2NmViNTIwYmQ0Mg==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2016-06-21T16:35:44Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2016-06-21T16:35:44Z"}, "message": "The recently added gcc.target/aarch64/advsimd-intrinsics/vrnd*.c tests cause...\n\nThe recently added gcc.target/aarch64/advsimd-intrinsics/vrnd*.c tests cause\nfailures due to accidentally running on non-ARMv8 hardware - the target check\narm_v8_neon_ok is correct for compilation tests but should be arm_v8_neon_hw\nfor execution tests.  Fix this and also change arm_v8_neon_hw to return\ntrue for AArch64 so these tests are run on AArch64 too.\n\n    gcc/testsuite/\n\t* gcc.target/aarch64/advsimd-intrinsics/vrnd.c\n\t(dg-require-effective-target): Use arm_v8_neon_hw.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrnda.c\n\t(dg-require-effective-target): Likewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrndm.c\n\t(dg-require-effective-target): Likewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrndn.c\n\t(dg-require-effective-target): Likewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrndp.c\n\t(dg-require-effective-target): Likewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vrndx.c\n\t(dg-require-effective-target): Likewise.\n\t* lib/target-supports.exp (check_runtime arm_v8_neon_hw_available):\n\tAdd AArch64 check.\n\nFrom-SVN: r237653", "tree": {"sha": "a4eab55abb8dd4ea4880d93cbd8e30ecb176a63c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4eab55abb8dd4ea4880d93cbd8e30ecb176a63c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89192c3c536188bcbb2c99e47106b66eb520bd42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89192c3c536188bcbb2c99e47106b66eb520bd42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89192c3c536188bcbb2c99e47106b66eb520bd42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89192c3c536188bcbb2c99e47106b66eb520bd42/comments", "author": null, "committer": null, "parents": [{"sha": "64ac50e29b7551e7ddde5f59ff1a7d7a95376475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ac50e29b7551e7ddde5f59ff1a7d7a95376475", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ac50e29b7551e7ddde5f59ff1a7d7a95376475"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "ffb16146c31252ad331c7c6f763f7527cffec476", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89192c3c536188bcbb2c99e47106b66eb520bd42", "patch": "@@ -1,3 +1,20 @@\n+2016-06-21  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrnd.c\n+\t(dg-require-effective-target): Use arm_v8_neon_hw.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrnda.c\n+\t(dg-require-effective-target): Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrndm.c\n+\t(dg-require-effective-target): Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrndn.c\n+\t(dg-require-effective-target): Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrndp.c\n+\t(dg-require-effective-target): Likewise.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vrndx.c\n+\t(dg-require-effective-target): Likewise.\n+\t* lib/target-supports.exp (check_runtime arm_v8_neon_hw_available):\n+\tAdd AArch64 check.\n+\n 2016-06-21  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.dg/tree-ssa/attr-hotcold-2.c (scan-tree-dump-times):"}, {"sha": "d97a3a25ee5fb0a6021f0d75c4d653bff0d59bb7", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrnd.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnd.c?ref=89192c3c536188bcbb2c99e47106b66eb520bd42", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-require-effective-target arm_v8_neon_hw } */\n /* { dg-add-options arm_v8_neon } */\n \n #include <arm_neon.h>"}, {"sha": "ff2bdc0563fc3a15115ae6121408f134bb9e81cd", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrnda.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrnda.c?ref=89192c3c536188bcbb2c99e47106b66eb520bd42", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-require-effective-target arm_v8_neon_hw } */\n /* { dg-add-options arm_v8_neon } */\n \n #include <arm_neon.h>"}, {"sha": "eae9f61c5859b7f7add3dd01ff0edfd0ae8cd75b", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrndm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndm.c?ref=89192c3c536188bcbb2c99e47106b66eb520bd42", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-require-effective-target arm_v8_neon_hw } */\n /* { dg-add-options arm_v8_neon } */\n \n #include <arm_neon.h>"}, {"sha": "c6c707d67655cc648e0526a489046411a065675f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrndn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndn.c?ref=89192c3c536188bcbb2c99e47106b66eb520bd42", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-require-effective-target arm_v8_neon_hw } */\n /* { dg-add-options arm_v8_neon } */\n \n #include <arm_neon.h>"}, {"sha": "e94eb6b76221c7b229229e1286eb910b7eef740f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrndp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndp.c?ref=89192c3c536188bcbb2c99e47106b66eb520bd42", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-require-effective-target arm_v8_neon_hw } */\n /* { dg-add-options arm_v8_neon } */\n \n #include <arm_neon.h>"}, {"sha": "0d2a63ef26c75f684ed17689a37d1b8ada0b043f", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vrndx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvrndx.c?ref=89192c3c536188bcbb2c99e47106b66eb520bd42", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-require-effective-target arm_v8_neon_ok } */\n+/* { dg-require-effective-target arm_v8_neon_hw } */\n /* { dg-add-options arm_v8_neon } */\n \n #include <arm_neon.h>"}, {"sha": "2a8feb8f13e0130036771a73a40015c905c21993", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89192c3c536188bcbb2c99e47106b66eb520bd42/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=89192c3c536188bcbb2c99e47106b66eb520bd42", "patch": "@@ -3417,11 +3417,17 @@ proc check_effective_target_arm_v8_neon_hw { } {\n \tint\n \tmain (void)\n \t{\n-\t  float32x2_t a;\n+\t  float32x2_t a = { 1.0f, 2.0f };\n+\t  #ifdef __ARM_ARCH_ISA_A64\n+\t  asm (\"frinta %0.2s, %1.2s\"\n+\t      : \"=w\" (a)\n+\t      : \"w\" (a));\n+\t  #else\n \t  asm (\"vrinta.f32 %P0, %P1\"\n \t       : \"=w\" (a)\n \t       : \"0\" (a));\n-\t  return 0;\n+\t  #endif\n+\t  return a[0] == 2.0f;\n \t}\n     } [add_options_for_arm_v8_neon \"\"]]\n }"}]}