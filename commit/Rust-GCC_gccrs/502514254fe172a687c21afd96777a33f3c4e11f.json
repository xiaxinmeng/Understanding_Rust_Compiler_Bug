{"sha": "502514254fe172a687c21afd96777a33f3c4e11f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAyNTE0MjU0ZmUxNzJhNjg3YzIxYWZkOTY3NzdhMzNmM2M0ZTExZg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2012-09-26T16:49:32Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2012-09-26T16:49:32Z"}, "message": "re PR tree-optimization/54674 (ICE in build2_stat, at tree.c:3835)\n\n2012-09-26  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR tree-optimization/54674\n\t* gimple-ssa-strength-reduction.c (analyze_increments): Don't\n\tintroduce a multiplication with a pointer operand.\n\nFrom-SVN: r191765", "tree": {"sha": "8ef57b5a01485028ede63b3b1c1fd0a19803cb45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ef57b5a01485028ede63b3b1c1fd0a19803cb45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/502514254fe172a687c21afd96777a33f3c4e11f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502514254fe172a687c21afd96777a33f3c4e11f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502514254fe172a687c21afd96777a33f3c4e11f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502514254fe172a687c21afd96777a33f3c4e11f/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5bfed9a91f036d8c168afebfd8e9dd34e2919c9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bfed9a91f036d8c168afebfd8e9dd34e2919c9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bfed9a91f036d8c168afebfd8e9dd34e2919c9a"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "afcee648f33a1786cbb7cd0a1f713dfc5e5fceeb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502514254fe172a687c21afd96777a33f3c4e11f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502514254fe172a687c21afd96777a33f3c4e11f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=502514254fe172a687c21afd96777a33f3c4e11f", "patch": "@@ -1,3 +1,9 @@\n+2012-09-26  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/54674\n+\t* gimple-ssa-strength-reduction.c (analyze_increments): Don't\n+\tintroduce a multiplication with a pointer operand.\n+\n 2012-09-26  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR middle-end/54635"}, {"sha": "46600a57f8132a38bf2d4f6f4fafcbe31676dfcb", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/502514254fe172a687c21afd96777a33f3c4e11f/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/502514254fe172a687c21afd96777a33f3c4e11f/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=502514254fe172a687c21afd96777a33f3c4e11f", "patch": "@@ -2028,6 +2028,17 @@ analyze_increments (slsr_cand_t first_dep, enum machine_mode mode, bool speed)\n \n \tincr_vec[i].cost = COST_INFINITE;\n \n+      /* If we need to add an initializer, make sure we don't introduce\n+\t a multiply by a pointer type, which can happen in certain cast\n+\t scenarios.  FIXME: When cleaning up these cast issues, we can\n+         afford to introduce the multiply provided we cast out to an\n+         unsigned int of appropriate size.  */\n+      else if (!incr_vec[i].initializer\n+\t       && TREE_CODE (first_dep->stride) != INTEGER_CST\n+\t       && POINTER_TYPE_P (TREE_TYPE (first_dep->stride)))\n+\n+\tincr_vec[i].cost = COST_INFINITE;\n+\n       /* For any other increment, if this is a multiply candidate, we\n \t must introduce a temporary T and initialize it with\n \t T_0 = stride * increment.  When optimizing for speed, walk the"}]}