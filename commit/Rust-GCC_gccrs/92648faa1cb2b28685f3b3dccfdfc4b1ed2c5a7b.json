{"sha": "92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2NDhmYWExY2IyYjI4Njg1ZjNiM2RjY2ZkZmM0YjFlZDJjNWE3Yg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-18T18:33:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-11-18T18:33:30Z"}, "message": "aix: Fixinclude\n\nThis fixes an ODR violation in the AIX headers that is detected by C++\nmodules.  While unnamed structs with typedef names for linkage\npurposes are accepted, this case is an anonymous struct without such a\ntypedef name -- the typedef is attached to the pointer-to-struct type.\nFixed by naming the struct.\n\n\tfixincludes/\n\t* inclhack.def (aix_physaddr_t): New.\n\t* fixincl.x: Regenerated.", "tree": {"sha": "50a52e925439420ec31cd6a9220abf97042000db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50a52e925439420ec31cd6a9220abf97042000db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9c3d5f28a589cd00be5748010783657189e9855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9c3d5f28a589cd00be5748010783657189e9855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9c3d5f28a589cd00be5748010783657189e9855"}], "stats": {"total": 67, "additions": 62, "deletions": 5}, "files": [{"sha": "21439652bcec106cdeeff6e77baace815ca05265", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  October  3, 2020 at 11:40:52 PM by AutoGen 5.18\n+ * It has been AutoGen-ed  October 21, 2020 at 10:43:22 AM by AutoGen 5.18.16\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Oct  3 23:40:52 UTC 2020\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Oct 21 10:43:22 EDT 2020\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 259 fixup descriptions.\n+ * This file contains 260 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -1247,6 +1247,43 @@ static const char* apzAix_Rwlock_Initializer_1Patch[] = {\n {{ \\\\\\n\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Aix_Physadr_T fix\n+ */\n+tSCC zAix_Physadr_TName[] =\n+     \"aix_physadr_t\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zAix_Physadr_TList[] =\n+  \"sys/types.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzAix_Physadr_TMachs[] = {\n+        \"*-*-aix*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zAix_Physadr_TSelect0[] =\n+       \"typedef[ \\t]*struct[ \\t]*([{][^}]*[}][ \\t]*\\\\*[ \\t]*physadr_t;)\";\n+\n+#define    AIX_PHYSADR_T_TEST_CT  1\n+static tTestDesc aAix_Physadr_TTests[] = {\n+  { TT_EGREP,    zAix_Physadr_TSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Aix_Physadr_T\n+ */\n+static const char* apzAix_Physadr_TPatch[] = {\n+    \"format\",\n+    \"typedef struct __physadr_s %1\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Aix_Pthread fix\n@@ -10521,9 +10558,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          297\n+#define REGEX_COUNT          298\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            259\n+#define FIX_COUNT            260\n \n /*\n  *  Enumerate the fixes\n@@ -10555,6 +10592,7 @@ typedef enum {\n     AIX_MUTEX_INITIALIZER_1_FIXIDX,\n     AIX_COND_INITIALIZER_1_FIXIDX,\n     AIX_RWLOCK_INITIALIZER_1_FIXIDX,\n+    AIX_PHYSADR_T_FIXIDX,\n     AIX_PTHREAD_FIXIDX,\n     AIX_STDINT_1_FIXIDX,\n     AIX_STDINT_2_FIXIDX,\n@@ -10921,6 +10959,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      AIX_RWLOCK_INITIALIZER_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_Rwlock_Initializer_1Tests,   apzAix_Rwlock_Initializer_1Patch, 0 },\n \n+  {  zAix_Physadr_TName,    zAix_Physadr_TList,\n+     apzAix_Physadr_TMachs,\n+     AIX_PHYSADR_T_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aAix_Physadr_TTests,   apzAix_Physadr_TPatch, 0 },\n+\n   {  zAix_PthreadName,    zAix_PthreadList,\n      apzAix_PthreadMachs,\n      AIX_PTHREAD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "80c9adfb07c5911fac60ddf8b972411a0fc27db7", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=92648faa1cb2b28685f3b3dccfdfc4b1ed2c5a7b", "patch": "@@ -720,6 +720,20 @@ fix = {\n \t\t\"{ \\\\\\\\\\n\";\n };\n \n+\n+/* On AIX 'typedef struct {<stuff>} * physadr_t;' needs to give the struct a\n+   name for linkage purposes.  Fortunately it is on exactly one\n+   line.  */\n+fix = {\n+    hackname  = aix_physadr_t;\n+    mach      = \"*-*-aix*\";\n+    files     = sys/types.h;\n+    select    = \"typedef[ \\t]*struct[ \\t]*([{][^}]*[}][ \\t]*\\\\*[ \\t]*physadr_t;)\";\n+    c_fix     = format;\n+    c_fix_arg = \"typedef struct __physadr_s %1\";\n+    test_text = \"typedef struct __physadr_s {\";\n+};\n+\n /*\n  *  pthread.h on AIX 4.3.3 tries to define a macro without whitspace\n  *  which violates a requirement of ISO C."}]}