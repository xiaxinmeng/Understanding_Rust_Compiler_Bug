{"sha": "d5ace3b55dc544d0b2a75530998e9c928f452e16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhY2UzYjU1ZGM1NDRkMGIyYTc1NTMwOTk4ZTljOTI4ZjQ1MmUxNg==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2016-02-22T16:28:25Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2016-02-22T16:28:25Z"}, "message": "nvptx.c (nvptx_gen_shuffle): Add support for QImode and HImode registers.\n\n\tgcc/\n\t* config/nvptx/nvptx.c (nvptx_gen_shuffle): Add support for QImode\n\tand HImode registers.\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/vprop.c: New test.\n\nFrom-SVN: r233607", "tree": {"sha": "59462d6f260d9bd71ab8c3d35d4ed153aacb921e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59462d6f260d9bd71ab8c3d35d4ed153aacb921e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5ace3b55dc544d0b2a75530998e9c928f452e16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ace3b55dc544d0b2a75530998e9c928f452e16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ace3b55dc544d0b2a75530998e9c928f452e16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ace3b55dc544d0b2a75530998e9c928f452e16/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4e360f44f346e795a671b200d33c61ba187bdcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e360f44f346e795a671b200d33c61ba187bdcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4e360f44f346e795a671b200d33c61ba187bdcd"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "a76236eb901c145711e9c290759e8ef6a36e20f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ace3b55dc544d0b2a75530998e9c928f452e16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ace3b55dc544d0b2a75530998e9c928f452e16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5ace3b55dc544d0b2a75530998e9c928f452e16", "patch": "@@ -1,3 +1,8 @@\n+2016-02-22  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.c (nvptx_gen_shuffle): Add support for QImode\n+\tand HImode registers.\n+\n 2016-02-22  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69882"}, {"sha": "33b495ffcd94b792c0f2c82184d52c533dfa813c", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ace3b55dc544d0b2a75530998e9c928f452e16/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ace3b55dc544d0b2a75530998e9c928f452e16/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=d5ace3b55dc544d0b2a75530998e9c928f452e16", "patch": "@@ -1306,6 +1306,20 @@ nvptx_gen_shuffle (rtx dst, rtx src, rtx idx, nvptx_shuffle_kind kind)\n \tend_sequence ();\n       }\n       break;\n+    case QImode:\n+    case HImode:\n+      {\n+\trtx tmp = gen_reg_rtx (SImode);\n+\n+\tstart_sequence ();\n+\temit_insn (gen_rtx_SET (tmp, gen_rtx_fmt_e (ZERO_EXTEND, SImode, src)));\n+\temit_insn (nvptx_gen_shuffle (tmp, tmp, idx, kind));\n+\temit_insn (gen_rtx_SET (dst, gen_rtx_fmt_e (TRUNCATE, GET_MODE (dst),\n+\t\t\t\t\t\t    tmp)));\n+\tres = get_insns ();\n+\tend_sequence ();\n+      }\n+      break;\n       \n     default:\n       gcc_unreachable ();"}, {"sha": "1394126f98fe6c26947d46e736d503650277834e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ace3b55dc544d0b2a75530998e9c928f452e16/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ace3b55dc544d0b2a75530998e9c928f452e16/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=d5ace3b55dc544d0b2a75530998e9c928f452e16", "patch": "@@ -1,3 +1,7 @@\n+2016-02-22  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/vprop.c: New test.\n+\n 2016-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR driver/69805"}, {"sha": "a9b63dcea720f95917b5736dfab17fa23ab44045", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/vprop.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ace3b55dc544d0b2a75530998e9c928f452e16/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ace3b55dc544d0b2a75530998e9c928f452e16/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fvprop.c?ref=d5ace3b55dc544d0b2a75530998e9c928f452e16", "patch": "@@ -0,0 +1,34 @@\n+#include <assert.h>\n+\n+#define test(type)\t\t\t\t\\\n+void\t\t\t\t\t\t\\\n+test_##type ()\t\t\t\t\t\\\n+{\t\t\t\t\t\t\\\n+  type b[100];\t\t\t\t\t\\\n+  type i, j, x = -1, y = -1;\t\t\t\\\n+\t\t\t\t\t\t\\\n+  _Pragma(\"acc parallel loop copyout (b)\")\t\\\n+  for (j = 0; j > -5; j--)\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      type c = x+y;                             \\\n+      _Pragma(\"acc loop vector\")\t\t\\\n+      for (i = 0; i < 20; i++)\t\t\t\\\n+\tb[-j*20 + i] = c;\t\t\t\\\n+      b[5-j] = c;                               \\\n+    }\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\\\n+  for (i = 0; i < 100; i++)\t\t\t\\\n+    assert (b[i] == -2);\t\t\t\\\n+}\n+\n+test(char)\n+test(short)\n+\n+int\n+main ()\n+{\n+  test_char ();\n+  test_short ();\n+\n+  return 0;\n+}"}]}