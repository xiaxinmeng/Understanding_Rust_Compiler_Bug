{"sha": "858d7ee1a0cd97c01d844ea73ab81918da738344", "node_id": "C_kwDOANBUbNoAKDg1OGQ3ZWUxYTBjZDk3YzAxZDg0NGVhNzNhYjgxOTE4ZGE3MzgzNDQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-05T15:39:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-05T15:59:28Z"}, "message": "x86: Make stringop_algs::stringop_strategy ctor constexpr [PR100246]\n\n> Several older compilers fail to build modern GCC because of missing\n> or incomplete C++11 support.\n>\n>       * config/i386/i386.h (struct stringop_algs): Define a CTOR for\n>       this type.\n\nUnfortunately, as mentioned in my\nhttps://gcc.gnu.org/pipermail/gcc-patches/2021-November/583289.html\nmail, without the new dyninit pass this causes dynamic initialization of\nmany variables, 6.5KB _GLOBAL__sub_I_* on x86_64 and 12.5KB on i686.\n\nThe following patch makes the ctor constexpr so that already the FE\nis able to statically initialize all those.\n\nI have tested on godbolt a reduced testcase without a constructor,\nwith constructor and with constexpr constructor.\nclang before 3.3 is unhappy about all the 3 cases, clang 3.3 and 3.4\nis ok with ctor and ctor with constexpr and optimizes it into static\ninitialization, clang 3.5+ is ok with all 3 versions and optimizes,\ngcc 4.8 and 5+ is ok with all 3 versions and no ctor and ctor with constexpr\nis optimized, gcc 4.9 is unhappy about the no ctor case and happy with the\nother two.\n\n2021-11-05  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR bootstrap/100246\n\t* config/i386/i386.h\n\t(stringop_algs::stringop_strategy::stringop_strategy): Make the ctor\n\tconstexpr.", "tree": {"sha": "6d125610ffdfa1aec31cad99166cd24c69591427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d125610ffdfa1aec31cad99166cd24c69591427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/858d7ee1a0cd97c01d844ea73ab81918da738344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/858d7ee1a0cd97c01d844ea73ab81918da738344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/858d7ee1a0cd97c01d844ea73ab81918da738344", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/858d7ee1a0cd97c01d844ea73ab81918da738344/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b58c12f3cf926f877ea2f590c411fe7e853974e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b58c12f3cf926f877ea2f590c411fe7e853974e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b58c12f3cf926f877ea2f590c411fe7e853974e3"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "e35c79c192c5ccf9b2ea395cc6499eb0b49745c0", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/858d7ee1a0cd97c01d844ea73ab81918da738344/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/858d7ee1a0cd97c01d844ea73ab81918da738344/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=858d7ee1a0cd97c01d844ea73ab81918da738344", "patch": "@@ -78,8 +78,9 @@ struct stringop_algs\n        this issue.  Since this header is used by code compiled with the C\n        compiler we must guard the addition.  */\n #ifdef __cplusplus\n-    stringop_strategy(int _max = -1, enum stringop_alg _alg = libcall,\n-\t\t      int _noalign = false)\n+    constexpr\n+    stringop_strategy (int _max = -1, enum stringop_alg _alg = libcall,\n+\t\t       int _noalign = false)\n       : max (_max), alg (_alg), noalign (_noalign) {}\n #endif\n     const int max;"}]}