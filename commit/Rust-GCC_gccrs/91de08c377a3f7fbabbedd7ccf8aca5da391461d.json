{"sha": "91de08c377a3f7fbabbedd7ccf8aca5da391461d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkZTA4YzM3N2EzZjdmYmFiYmVkZDdjY2Y4YWNhNWRhMzkxNDYxZA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2003-10-14T13:22:14Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2003-10-14T13:22:14Z"}, "message": "arm.c (arm_addimm_operand): MODE arguemnt is unused.\n\n* arm.c (arm_addimm_operand): MODE arguemnt is unused.\n* arm.md (cbranchne_decr1): Fix bootstrap warning.\n\nFrom-SVN: r72466", "tree": {"sha": "308305db599101a5e197a1d3afa85e0cfe7e300c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/308305db599101a5e197a1d3afa85e0cfe7e300c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91de08c377a3f7fbabbedd7ccf8aca5da391461d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91de08c377a3f7fbabbedd7ccf8aca5da391461d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91de08c377a3f7fbabbedd7ccf8aca5da391461d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91de08c377a3f7fbabbedd7ccf8aca5da391461d/comments", "author": null, "committer": null, "parents": [{"sha": "821281db25562b7ef271fda9e2fd39a70cfb2731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821281db25562b7ef271fda9e2fd39a70cfb2731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/821281db25562b7ef271fda9e2fd39a70cfb2731"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "64553324e29d9acba0fbe9b7e9e913f346a2deda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91de08c377a3f7fbabbedd7ccf8aca5da391461d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91de08c377a3f7fbabbedd7ccf8aca5da391461d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91de08c377a3f7fbabbedd7ccf8aca5da391461d", "patch": "@@ -1,3 +1,8 @@\n+2003-10-14  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.c (arm_addimm_operand): MODE arguemnt is unused.\n+\t* arm.md (cbranchne_decr1): Fix bootstrap warning.\n+\n 2003-10-14  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* fixinc/inclhack.def (alpha_pthread_gcc): New fix."}, {"sha": "d338e00895ac383a0a1f8d505984aa3b2c2bce3f", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91de08c377a3f7fbabbedd7ccf8aca5da391461d/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91de08c377a3f7fbabbedd7ccf8aca5da391461d/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=91de08c377a3f7fbabbedd7ccf8aca5da391461d", "patch": "@@ -3752,7 +3752,7 @@ arm_add_operand (rtx op, enum machine_mode mode)\n \n /* Return TRUE for valid ARM constants (or when valid if negated).  */\n int\n-arm_addimm_operand (rtx op, enum machine_mode mode)\n+arm_addimm_operand (rtx op, enum machine_mode mode ATTRIBUTE_UNUSED)\n {\n   return (GET_CODE (op) == CONST_INT\n \t  && (const_ok_for_arm (INTVAL (op))"}, {"sha": "502b8d205781ba7584e09ddb4935dc7ba78a48ff", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91de08c377a3f7fbabbedd7ccf8aca5da391461d/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91de08c377a3f7fbabbedd7ccf8aca5da391461d/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=91de08c377a3f7fbabbedd7ccf8aca5da391461d", "patch": "@@ -5286,13 +5286,13 @@\n      switch (get_attr_length (insn) - (which_alternative ? 2 : 0))\n        {\n \t case 4:\n-\t   output_asm_insn (\\\"b%d0\\\\t%l1\\\", &cond);\n+\t   output_asm_insn (\\\"b%d0\\\\t%l1\\\", cond);\n \t   return \\\"\\\";\n \t case 6:\n-\t   output_asm_insn (\\\"b%D0\\\\t.LCB%=\\\", &cond);\n+\t   output_asm_insn (\\\"b%D0\\\\t.LCB%=\\\", cond);\n \t   return \\\"b\\\\t%l4\\\\t%@long jump\\\\n.LCB%=:\\\";\n \t default:\n-\t   output_asm_insn (\\\"b%D0\\\\t.LCB%=\\\", &cond);\n+\t   output_asm_insn (\\\"b%D0\\\\t.LCB%=\\\", cond);\n \t   return \\\"bl\\\\t%l4\\\\t%@far jump\\\\n.LCB%=:\\\";\n        }\n    }"}]}