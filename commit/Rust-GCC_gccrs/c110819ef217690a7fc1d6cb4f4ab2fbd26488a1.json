{"sha": "c110819ef217690a7fc1d6cb4f4ab2fbd26488a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzExMDgxOWVmMjE3NjkwYTdmYzFkNmNiNGY0YWIyZmJkMjY0ODhhMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-09-03T16:00:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-09-03T16:00:33Z"}, "message": "Initial revision\n\nFrom-SVN: r12687", "tree": {"sha": "0acb0900a61ad9d35b5358c00c978b5b180dcd1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0acb0900a61ad9d35b5358c00c978b5b180dcd1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c110819ef217690a7fc1d6cb4f4ab2fbd26488a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c110819ef217690a7fc1d6cb4f4ab2fbd26488a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c110819ef217690a7fc1d6cb4f4ab2fbd26488a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c110819ef217690a7fc1d6cb4f4ab2fbd26488a1/comments", "author": null, "committer": null, "parents": [{"sha": "55e42fd9f5073cc16df744a0c08a95da1dcf01a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e42fd9f5073cc16df744a0c08a95da1dcf01a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55e42fd9f5073cc16df744a0c08a95da1dcf01a4"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "2c3294b493531677ac1dd24138bd2d1d805869e6", "filename": "gcc/config/sh/elf.h", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c110819ef217690a7fc1d6cb4f4ab2fbd26488a1/gcc%2Fconfig%2Fsh%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c110819ef217690a7fc1d6cb4f4ab2fbd26488a1/gcc%2Fconfig%2Fsh%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Felf.h?ref=c110819ef217690a7fc1d6cb4f4ab2fbd26488a1", "patch": "@@ -0,0 +1,105 @@\n+/* Definitions of target machine for gcc for Hitachi Super-H using ELF.\n+   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Contributed by Ian Lance Taylor <ian@cygnus.com>.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Mostly like the regular SH configuration.  */\n+#include \"sh/sh.h\"\n+\n+/* No SDB debugging info.  */\n+#undef SDB_DEBUGGING_INFO\n+\n+/* Prefer stabs.  */\n+#undef PREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+\n+/* Undefine some macros defined in both sh.h and svr4.h.  */\n+#undef IDENT_ASM_OP\n+#undef ASM_FILE_END\n+#undef ASM_OUTPUT_SOURCE_LINE\n+#undef DBX_OUTPUT_MAIN_SOURCE_FILE_END\n+#undef CTORS_SECTION_ASM_OP\n+#undef DTORS_SECTION_ASM_OP\n+#undef ASM_OUTPUT_SECTION_NAME\n+#undef ASM_OUTPUT_CONSTRUCTOR\n+#undef ASM_OUTPUT_DESTRUCTOR\n+#undef ASM_DECLARE_FUNCTION_NAME\n+\n+/* Be ELF-like.  */\n+#include \"svr4.h\"\n+\n+/* Let code know that this is ELF.  */\n+#define CPP_PREDEFINES \"-D__sh__ -D__ELF__ -Acpu(sh) -Amachine(sh)\"\n+\n+/* Pass -ml and -mrelax to the assembler and linker.  */\n+#undef ASM_SPEC\n+#define ASM_SPEC  \"%{ml:-little} %{mrelax:-relax}\"\n+\n+#undef LINK_SPEC\n+#define LINK_SPEC \"%{ml:-m shl} %{mrelax:-relax}\"\n+\n+/* svr4.h undefined DBX_REGISTER_NUMBER, so we need to define it\n+   again.  */\n+#define DBX_REGISTER_NUMBER(REGNO)\t\\\n+  (((REGNO) >= 22 && (REGNO) <= 39) ? ((REGNO) + 1) : (REGNO))\n+\n+/* SH ELF, unlike most ELF implementations, uses underscores before\n+   symbol names.  */\n+#undef ASM_OUTPUT_LABELREF\n+#define ASM_OUTPUT_LABELREF(STREAM,NAME) \\\n+  fprintf (STREAM, \"_%s\", NAME)\n+\n+/* Because SH ELF uses underscores, we don't put a '.' before local\n+   labels, for easy compatibility with the COFF implementation.  */\n+\n+#undef ASM_GENERATE_INTERNAL_LABEL\n+#define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM) \\\n+  sprintf (STRING, \"*%s%d\", PREFIX, NUM)\n+\n+#undef ASM_OUTPUT_INTERNAL_LABEL\n+#define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM) \\\n+  fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n+\n+#undef  ASM_OUTPUT_SOURCE_LINE\n+#define ASM_OUTPUT_SOURCE_LINE(file, line)\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    static int sym_lineno = 1;\t\t\t\t\t\t\\\n+    fprintf (file, \".stabn 68,0,%d,LM%d-\",\t\t\t\t\\\n+\t     line, sym_lineno);\t\t\t\t\t\t\\\n+    assemble_name (file,\t\t\t\t\t\t\\\n+\t\t   XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0));\\\n+    fprintf (file, \"\\nLM%d:\\n\", sym_lineno);\t\t\t\t\\\n+    sym_lineno += 1;\t\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+\n+#undef DBX_OUTPUT_MAIN_SOURCE_FILE_END\n+#define DBX_OUTPUT_MAIN_SOURCE_FILE_END(FILE, FILENAME)\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  text_section ();\t\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\t.stabs \\\"\\\",%d,0,0,Letext\\nLetext:\\n\", N_SO);\t\\\n+} while (0)\n+\n+/* Arrange to call __main, rather than using crtbegin.o and crtend.o\n+   and relying on .init and .fini being executed at appropriate times.  */\n+#undef INIT_SECTION_ASM_OP\n+#undef FINI_SECTION_ASM_OP\n+#undef STARTFILE_SPEC\n+#undef ENDFILE_SPEC"}]}