{"sha": "6df588cbd18d6721fae4c05db7d78a11c2c5af7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRmNTg4Y2JkMThkNjcyMWZhZTRjMDVkYjdkNzhhMTFjMmM1YWY3ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-26T12:42:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-26T12:42:41Z"}, "message": "re PR lto/46664 (Failed to build 481.wrf in SPEC CPU 2006 with LTO)\n\n2010-11-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46664\n\t* tree-affine.c (aff_combination_to_tree): Add rest last.\n\nFrom-SVN: r167173", "tree": {"sha": "35e0caf1d5d720776b46102650df9fed06448d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35e0caf1d5d720776b46102650df9fed06448d44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6df588cbd18d6721fae4c05db7d78a11c2c5af7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6df588cbd18d6721fae4c05db7d78a11c2c5af7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6df588cbd18d6721fae4c05db7d78a11c2c5af7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6df588cbd18d6721fae4c05db7d78a11c2c5af7d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a150fc83a4d64ff1c3dbf723ee5c33604d2324d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a150fc83a4d64ff1c3dbf723ee5c33604d2324d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a150fc83a4d64ff1c3dbf723ee5c33604d2324d"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "05c19eb173e1b5abcd4093a5c8054fe481eaeac9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6df588cbd18d6721fae4c05db7d78a11c2c5af7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6df588cbd18d6721fae4c05db7d78a11c2c5af7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6df588cbd18d6721fae4c05db7d78a11c2c5af7d", "patch": "@@ -1,3 +1,8 @@\n+2010-11-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46664\n+\t* tree-affine.c (aff_combination_to_tree): Add rest last.\n+\n 2010-11-26  Michael Haubenwallner  <michael.haubenwallner@salomon.at>\n \n \tPR target/33637"}, {"sha": "c57eaff2e956141010be44c875d7c7c0a52ab75a", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6df588cbd18d6721fae4c05db7d78a11c2c5af7d/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6df588cbd18d6721fae4c05db7d78a11c2c5af7d/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=6df588cbd18d6721fae4c05db7d78a11c2c5af7d", "patch": "@@ -434,7 +434,7 @@ tree\n aff_combination_to_tree (aff_tree *comb)\n {\n   tree type = comb->type;\n-  tree expr = comb->rest;\n+  tree expr = NULL_TREE;\n   unsigned i;\n   double_int off, sgn;\n   tree type1 = type;\n@@ -447,6 +447,9 @@ aff_combination_to_tree (aff_tree *comb)\n     expr = add_elt_to_tree (expr, type, comb->elts[i].val, comb->elts[i].coef,\n \t\t\t    comb);\n \n+  if (comb->rest)\n+    expr = add_elt_to_tree (expr, type, comb->rest, double_int_one, comb);\n+\n   /* Ensure that we get x - 1, not x + (-1) or x + 0xff..f if x is\n      unsigned.  */\n   if (double_int_negative_p (comb->offset))"}]}