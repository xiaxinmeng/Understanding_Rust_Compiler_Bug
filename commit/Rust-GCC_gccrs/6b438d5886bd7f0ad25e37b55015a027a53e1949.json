{"sha": "6b438d5886bd7f0ad25e37b55015a027a53e1949", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI0MzhkNTg4NmJkN2YwYWQyNWUzN2I1NTAxNWEwMjdhNTNlMTk0OQ==", "commit": {"author": {"name": "Anton Blanchard", "email": "anton@samba.org", "date": "2013-06-11T06:17:50Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2013-06-11T06:17:50Z"}, "message": "rs6000.c (rs6000_adjust_atomic_subword): Calculate correct shift value in little-endian mode.\n\n\t* config/rs6000/rs6000.c (rs6000_adjust_atomic_subword): Calculate\n\tcorrect shift value in little-endian mode.\n\nFrom-SVN: r199935", "tree": {"sha": "ff49c6fa813aaeb20958acb9f023d2c6c2bb0958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff49c6fa813aaeb20958acb9f023d2c6c2bb0958"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b438d5886bd7f0ad25e37b55015a027a53e1949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b438d5886bd7f0ad25e37b55015a027a53e1949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b438d5886bd7f0ad25e37b55015a027a53e1949", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b438d5886bd7f0ad25e37b55015a027a53e1949/comments", "author": {"login": "antonblanchard", "id": 2029971, "node_id": "MDQ6VXNlcjIwMjk5NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/2029971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antonblanchard", "html_url": "https://github.com/antonblanchard", "followers_url": "https://api.github.com/users/antonblanchard/followers", "following_url": "https://api.github.com/users/antonblanchard/following{/other_user}", "gists_url": "https://api.github.com/users/antonblanchard/gists{/gist_id}", "starred_url": "https://api.github.com/users/antonblanchard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antonblanchard/subscriptions", "organizations_url": "https://api.github.com/users/antonblanchard/orgs", "repos_url": "https://api.github.com/users/antonblanchard/repos", "events_url": "https://api.github.com/users/antonblanchard/events{/privacy}", "received_events_url": "https://api.github.com/users/antonblanchard/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3bc66938e06e05d6b733e80c6f497e62715bb121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc66938e06e05d6b733e80c6f497e62715bb121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bc66938e06e05d6b733e80c6f497e62715bb121"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "b3db96e247666a246e9581390622d72021f14792", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b438d5886bd7f0ad25e37b55015a027a53e1949/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b438d5886bd7f0ad25e37b55015a027a53e1949/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b438d5886bd7f0ad25e37b55015a027a53e1949", "patch": "@@ -1,3 +1,8 @@\n+2013-06-11  Anton Blanchard  <anton@samba.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_adjust_atomic_subword): Calculate\n+\tcorrect shift value in little-endian mode.\n+\n 2013-06-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/56564"}, {"sha": "54dc0cee2ccf1f2f639fc84806c1ce919745b3f6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b438d5886bd7f0ad25e37b55015a027a53e1949/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b438d5886bd7f0ad25e37b55015a027a53e1949/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=6b438d5886bd7f0ad25e37b55015a027a53e1949", "patch": "@@ -17881,8 +17881,9 @@ rs6000_adjust_atomic_subword (rtx orig_mem, rtx *pshift, rtx *pmask)\n   shift = gen_reg_rtx (SImode);\n   addr = gen_lowpart (SImode, addr);\n   emit_insn (gen_rlwinm (shift, addr, GEN_INT (3), GEN_INT (shift_mask)));\n-  shift = expand_simple_binop (SImode, XOR, shift, GEN_INT (shift_mask),\n-\t\t\t       shift, 1, OPTAB_LIB_WIDEN);\n+  if (WORDS_BIG_ENDIAN)\n+    shift = expand_simple_binop (SImode, XOR, shift, GEN_INT (shift_mask),\n+\t\t\t         shift, 1, OPTAB_LIB_WIDEN);\n   *pshift = shift;\n \n   /* Mask for insertion.  */"}]}