{"sha": "5e7d8b4c02496eb117cd151872584683ab19ae4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU3ZDhiNGMwMjQ5NmViMTE3Y2QxNTE4NzI1ODQ2ODNhYjE5YWU0Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-04-12T10:40:10Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-04-12T10:40:10Z"}, "message": "constraints.md: Add new register constraint \"kb\".\n\ngcc/\n2014-04-12  Catherine Moore  <clm@codesourcery.com>\n\n\t* config/mips/constraints.md: Add new register constraint \"kb\".\n\t* config/mips/mips.md (*mov<mode>_internal): Use constraint \"kb\".\n\t(*movhi_internal): Likewise.\n\t(*movqi_internal): Likewise.\n\t* config/mips/mips.h (M16_STORE_REGS): New register class.\n\t(REG_CLASS_NAMES): Add M16_STORE_REGS.\n\t(REG_CLASS_CONTENTS): Likewise.\n\t* config/mips/mips.c (mips_regno_to_class): Add M16_STORE_REGS.\n\ngcc/testsuite/\n\t* gcc.target/mips/umips-store16-1.c: New test.\n\nFrom-SVN: r209334", "tree": {"sha": "d05507b73b99698bac7691c49a93491144218a35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d05507b73b99698bac7691c49a93491144218a35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e7d8b4c02496eb117cd151872584683ab19ae4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e7d8b4c02496eb117cd151872584683ab19ae4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e7d8b4c02496eb117cd151872584683ab19ae4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e7d8b4c02496eb117cd151872584683ab19ae4c/comments", "author": null, "committer": null, "parents": [{"sha": "09b1b83390a3bc86eaade47ea4d50621d8806115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b1b83390a3bc86eaade47ea4d50621d8806115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09b1b83390a3bc86eaade47ea4d50621d8806115"}], "stats": {"total": 74, "additions": 63, "deletions": 11}, "files": [{"sha": "b343e00468e09e346633a1a49593ed0f44ed5b02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e7d8b4c02496eb117cd151872584683ab19ae4c", "patch": "@@ -1,3 +1,14 @@\n+2014-04-12  Catherine Moore  <clm@codesourcery.com>\n+\n+\t* config/mips/constraints.md: Add new register constraint \"kb\".\n+\t* config/mips/mips.md (*mov<mode>_internal): Use constraint \"kb\".\n+\t(*movhi_internal): Likewise.\n+\t(*movqi_internal): Likewise.\n+\t* config/mips/mips.h (M16_STORE_REGS): New register class.\n+\t(REG_CLASS_NAMES): Add M16_STORE_REGS.\n+\t(REG_CLASS_CONTENTS): Likewise.\n+\t* config/mips/mips.c (mips_regno_to_class): Add M16_STORE_REGS.\n+\n 2014-04-11  Tobias Burnus  <burnus@net-b.de>\n \n \tPR c/60194"}, {"sha": "f6834fd1e9415a5855759f1edfdb63c8632a5365", "filename": "gcc/config/mips/constraints.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Fconfig%2Fmips%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Fconfig%2Fmips%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fconstraints.md?ref=5e7d8b4c02496eb117cd151872584683ab19ae4c", "patch": "@@ -92,6 +92,9 @@\n ;; but the DSP version allows any accumulator target.\n (define_register_constraint \"ka\" \"ISA_HAS_DSP_MULT ? ACC_REGS : MD_REGS\")\n \n+(define_register_constraint \"kb\" \"M16_STORE_REGS\"\n+  \"@internal\")\n+\n (define_constraint \"kf\"\n   \"@internal\"\n   (match_operand 0 \"force_to_mem_operand\"))"}, {"sha": "83fe55b6661c9e0e17392d663e3e6e8ace1cde22", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=5e7d8b4c02496eb117cd151872584683ab19ae4c", "patch": "@@ -648,14 +648,15 @@ static mips_one_only_stub *mips16_set_fcsr_stub;\n \n /* Index R is the smallest register class that contains register R.  */\n const enum reg_class mips_regno_to_class[FIRST_PSEUDO_REGISTER] = {\n-  LEA_REGS,\tLEA_REGS,\tM16_REGS,\tV1_REG,\n-  M16_REGS,\tM16_REGS,\tM16_REGS,\tM16_REGS,\n-  LEA_REGS,\tLEA_REGS,\tLEA_REGS,\tLEA_REGS,\n-  LEA_REGS,\tLEA_REGS,\tLEA_REGS,\tLEA_REGS,\n-  M16_REGS,\tM16_REGS,\tLEA_REGS,\tLEA_REGS,\n-  LEA_REGS,\tLEA_REGS,\tLEA_REGS,\tLEA_REGS,\n-  T_REG,\tPIC_FN_ADDR_REG, LEA_REGS,\tLEA_REGS,\n-  LEA_REGS,\tLEA_REGS,\tLEA_REGS,\tLEA_REGS,\n+  LEA_REGS,        LEA_REGS,        M16_STORE_REGS,  V1_REG,\n+  M16_STORE_REGS,  M16_STORE_REGS,  M16_STORE_REGS,  M16_STORE_REGS,\n+  LEA_REGS,        LEA_REGS,        LEA_REGS,        LEA_REGS,\n+  LEA_REGS,        LEA_REGS,        LEA_REGS,        LEA_REGS,\n+  M16_REGS,        M16_STORE_REGS,  LEA_REGS,        LEA_REGS,\n+  LEA_REGS,        LEA_REGS,        LEA_REGS,        LEA_REGS,\n+  T_REG,           PIC_FN_ADDR_REG, LEA_REGS,        LEA_REGS,\n+  LEA_REGS,        LEA_REGS,        LEA_REGS,        LEA_REGS,\n+\n   FP_REGS,\tFP_REGS,\tFP_REGS,\tFP_REGS,\n   FP_REGS,\tFP_REGS,\tFP_REGS,\tFP_REGS,\n   FP_REGS,\tFP_REGS,\tFP_REGS,\tFP_REGS,"}, {"sha": "b25865b6dfb61a08249f678ef74406e52d65a04a", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=5e7d8b4c02496eb117cd151872584683ab19ae4c", "patch": "@@ -1870,6 +1870,7 @@ struct mips_cpu_info {\n enum reg_class\n {\n   NO_REGS,\t\t\t/* no registers in set */\n+  M16_STORE_REGS,\t\t/* microMIPS store registers  */\n   M16_REGS,\t\t\t/* mips16 directly accessible registers */\n   T_REG,\t\t\t/* mips16 T register ($24) */\n   M16_T_REGS,\t\t\t/* mips16 registers plus T register */\n@@ -1907,6 +1908,7 @@ enum reg_class\n #define REG_CLASS_NAMES\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   \"NO_REGS\",\t\t\t\t\t\t\t\t\\\n+  \"M16_STORE_REGS\",\t\t\t\t\t\t\t\\\n   \"M16_REGS\",\t\t\t\t\t\t\t\t\\\n   \"T_REG\",\t\t\t\t\t\t\t\t\\\n   \"M16_T_REGS\",\t\t\t\t\t\t\t\t\\\n@@ -1947,6 +1949,7 @@ enum reg_class\n #define REG_CLASS_CONTENTS\t\t\t\t\t\t                                \\\n {\t\t\t\t\t\t\t\t\t                                \\\n   { 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* NO_REGS */\t\t\\\n+  { 0x000200fc, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* M16_STORE_REGS */\t\\\n   { 0x000300fc, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* M16_REGS */\t\t\\\n   { 0x01000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* T_REG */\t\t\\\n   { 0x010300fc, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t/* M16_T_REGS */\t\\"}, {"sha": "e82772bba347f69a778c4dca477e3eb3dca44465", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=5e7d8b4c02496eb117cd151872584683ab19ae4c", "patch": "@@ -4437,7 +4437,7 @@\n \n (define_insn \"*mov<mode>_internal\"\n   [(set (match_operand:IMOVE32 0 \"nonimmediate_operand\" \"=d,!u,!u,d,e,!u,!ks,d,ZS,ZT,m,*f,*f,*d,*m,*d,*z,*a,*d,*B*C*D,*B*C*D,*d,*m\")\n-\t(match_operand:IMOVE32 1 \"move_operand\" \"d,J,Udb7,Yd,Yf,ZT,ZS,m,!ks,!u,dJ,*d*J,*m,*f,*f,*z,*d,*J*d,*a,*d,*m,*B*C*D,*B*C*D\"))]\n+\t(match_operand:IMOVE32 1 \"move_operand\" \"d,J,Udb7,Yd,Yf,ZT,ZS,m,!ks,!kb,dJ,*d*J,*m,*f,*f,*z,*d,*J*d,*a,*d,*m,*B*C*D,*B*C*D\"))]\n   \"!TARGET_MIPS16\n    && (register_operand (operands[0], <MODE>mode)\n        || reg_or_0_operand (operands[1], <MODE>mode))\"\n@@ -4578,7 +4578,7 @@\n \n (define_insn \"*movhi_internal\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,!u,d,!u,d,ZU,m,*a,*d\")\n-\t(match_operand:HI 1 \"move_operand\"         \"d,J,I,ZU,m,!u,dJ,*d*J,*a\"))]\n+\t(match_operand:HI 1 \"move_operand\"         \"d,J,I,ZU,m,!kb,dJ,*d*J,*a\"))]\n   \"!TARGET_MIPS16\n    && (register_operand (operands[0], HImode)\n        || reg_or_0_operand (operands[1], HImode))\"\n@@ -4654,7 +4654,7 @@\n \n (define_insn \"*movqi_internal\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,!u,d,!u,d,ZV,m,*a,*d\")\n-\t(match_operand:QI 1 \"move_operand\"         \"d,J,I,ZW,m,!u,dJ,*d*J,*a\"))]\n+\t(match_operand:QI 1 \"move_operand\"         \"d,J,I,ZW,m,!kb,dJ,*d*J,*a\"))]\n   \"!TARGET_MIPS16\n    && (register_operand (operands[0], QImode)\n        || reg_or_0_operand (operands[1], QImode))\""}, {"sha": "83062f87da8d744ed7ade4b91c326b5aeabceb72", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e7d8b4c02496eb117cd151872584683ab19ae4c", "patch": "@@ -1,3 +1,7 @@\n+2014-04-12  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* gcc.target/mips/umips-store16-1.c: New test.\n+\n 2014-04-11  Tobias Burnus  <burnus@net-b.de>\n \n \tPR c/60194"}, {"sha": "6377e8569d632fd5a9b85f4fa09fb3acc584e322", "filename": "gcc/testsuite/gcc.target/mips/umips-store16-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fumips-store16-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7d8b4c02496eb117cd151872584683ab19ae4c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fumips-store16-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fumips-store16-1.c?ref=5e7d8b4c02496eb117cd151872584683ab19ae4c", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-options \"(-mmicromips)\" } */\n+/* { dg-do assemble } */\n+\n+register unsigned int global asm (\"$16\");\n+\n+extern void exit (int) __attribute__((noreturn));\n+\n+MICROMIPS void\n+test_sb (unsigned char *ptr, void (*f) (void))\n+{\n+  ptr[0] = global;\n+  f ();\n+  exit (0);\n+}\n+\n+MICROMIPS void\n+test_sh (unsigned short *ptr, void (*f) (void))\n+{\n+  ptr[0] = global;\n+  f ();\n+  exit (0);\n+}\n+\n+MICROMIPS void\n+test_sw (unsigned int *ptr, void (*f) (void))\n+{\n+  ptr[0] = global;\n+  f ();\n+  exit (0);\n+}"}]}