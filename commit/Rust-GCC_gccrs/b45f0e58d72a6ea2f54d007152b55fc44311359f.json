{"sha": "b45f0e58d72a6ea2f54d007152b55fc44311359f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ1ZjBlNThkNzJhNmVhMmY1NGQwMDcxNTJiNTVmYzQ0MzExMzU5Zg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-04-09T16:07:43Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-04-09T16:07:43Z"}, "message": "expmed.c (expand_divmod): Always use a comparison for a division by a large unsigned integer.\n\n2009-04-09  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* expmed.c (expand_divmod): Always use a comparison for a division\n\tby a large unsigned integer.\n\n        * fold-const.c (tree_single_nonzero_warnv_p): Always treat decls\n        for things others than variables or functions as nonzero.\n\ntestsuite:\n2009-04-09  Paolo Bonzini  <bonzini@gnu.org>\n\n        * gcc.dg/pr27150-1.c: Change to a link test.\n\nFrom-SVN: r145846", "tree": {"sha": "d12ca0de4241fd0f950beabe6b910ba0a883eabd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d12ca0de4241fd0f950beabe6b910ba0a883eabd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b45f0e58d72a6ea2f54d007152b55fc44311359f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b45f0e58d72a6ea2f54d007152b55fc44311359f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b45f0e58d72a6ea2f54d007152b55fc44311359f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b45f0e58d72a6ea2f54d007152b55fc44311359f/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9332c6ebd1b4ce843ddf9be3d9abdf6abeb3dfcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9332c6ebd1b4ce843ddf9be3d9abdf6abeb3dfcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9332c6ebd1b4ce843ddf9be3d9abdf6abeb3dfcd"}], "stats": {"total": 68, "additions": 60, "deletions": 8}, "files": [{"sha": "90e7b113880b7f66e72510628de36f8de27fceee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b45f0e58d72a6ea2f54d007152b55fc44311359f", "patch": "@@ -1,3 +1,11 @@\n+2009-04-09  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* expmed.c (expand_divmod): Always use a comparison for a division\n+\tby a large unsigned integer.\n+\n+        * fold-const.c (tree_single_nonzero_warnv_p): Always treat decls\n+        for things others than variables or functions as nonzero.\n+\n 2009-04-09  Nick Clifton  <nickc@redhat.com>\n \n \t* unwind-compat.c: Change copyright header to refer to version\n@@ -338,6 +346,41 @@\n \n 2009-04-09  Paolo Bonzini  <bonzini@gnu.org>\n \n+        * config/i386/i386.md (cmpcc): New.\n+        * config/i386/sync.md (sync_compare_and_swap*): Set FLAGS_REG.\n+        (sync_compare_and_swap_cc*): Delete.\n+\n+        * config/s390/s390.c (s390_compare_emitted): Remove.\n+        (s390_emit_compare): Handle MODE_CC s390_compare_op0 like\n+        s390_compare_emitted used to be handled.  Assert that modes match.\n+        (s390_emit_compare_and_swap): Use s390_emit_compare, do not\n+        refer to sync_compare_and_swap_ccsi.\n+        * config/s390/s390.h (s390_compare_emitted): Remove.\n+        * config/s390/s390.md (seq): Look for MODE_CC s390_compare_op0\n+        instead of s390_compare_emitted.\n+        (stack_protect_test, sync_compare_and_swap_cc): Set s390_compare_op0\n+        instead of s390_compare_emitted.\n+        * config/s390/s390.md (cmpcc): New.\n+        (sync_compare_and_swapqi, sync_compare_and_swaphi): Clobber\n+        CC_REGNUM, do not pretend it's set.\n+        (sync_compare_and_swap_cc*): Delete.\n+        * config/s390/predicates.md (cc_reg_operand): New.\n+\n+        * expr.c (sync_compare_and_swap_cc): Delete.\n+        * optabs.h (sync_compare_and_swap_cc): Delete.\n+        * optabs.c (prepare_cmp_insn): Ignore which specific CCmode\n+        is being used with can_compare_p.\n+        (emit_cmp_and_jump_insn_1): Likewise when looking in the optab.\n+        (find_cc_set): New.\n+        (expand_bool_compare_and_swap): Do not use sync_compare_and_swap_cc,\n+        look for a MODE_CC set instead.  Use emit_store_flag.\n+        (expand_compare_and_swap_loop): Likewise, with some additional\n+        complication to avoid a force_reg when useless.  Use\n+        emit_cmp_and_jump_insns.\n+        * genopinit.c (optabs): Delete sync_compare_and_swap_cc.\n+        * doc/md.texi (sync_compare_and_swap_cc): Merge with\n+        sync_compare_and_swap documentation.\n+=======\n \t* config/i386/i386.md (cmpcc): New.\n \t* config/i386/sync.md (sync_compare_and_swap*): Set FLAGS_REG.\n \t(sync_compare_and_swap_cc*): Delete."}, {"sha": "165bcaea09e3a7f2e103c941c82e773ce25a1593", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=b45f0e58d72a6ea2f54d007152b55fc44311359f", "patch": "@@ -3998,10 +3998,8 @@ expand_divmod (int rem_flag, enum tree_code code, enum machine_mode mode,\n \t\t      {\n \t\t\t/* Most significant bit of divisor is set; emit an scc\n \t\t\t   insn.  */\n-\t\t\tquotient = emit_store_flag (tquotient, GEU, op0, op1,\n-\t\t\t\t\t\t    compute_mode, 1, 1);\n-\t\t\tif (quotient == 0)\n-\t\t\t  goto fail1;\n+\t\t\tquotient = emit_store_flag_force (tquotient, GEU, op0, op1,\n+\t\t\t\t\t\t\t  compute_mode, 1, 1);\n \t\t      }\n \t\t    else\n \t\t      {"}, {"sha": "821e581348a88e2155fe2fa5704141678ebf7248", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b45f0e58d72a6ea2f54d007152b55fc44311359f", "patch": "@@ -15018,8 +15018,8 @@ tree_single_nonzero_warnv_p (tree t, bool *strict_overflow_p)\n \t  return false;\n \n \t/* Weak declarations may link to NULL.  */\n-\tif (VAR_OR_FUNCTION_DECL_P (base))\n-\t  return !DECL_WEAK (base);\n+\tif (DECL_P (base) && flag_delete_null_pointer_checks)\n+\t  return !VAR_OR_FUNCTION_DECL_P (base) || !DECL_WEAK (base);\n \n \t/* Constants are never weak.  */\n \tif (CONSTANT_CLASS_P (base))"}, {"sha": "145880d5f4d945eb5365897825657809de0f232f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b45f0e58d72a6ea2f54d007152b55fc44311359f", "patch": "@@ -1,3 +1,7 @@\n+2009-04-09  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        * gcc.dg/pr27150-1.c: Change to a link test.\n+\n 2009-04-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/lookup/using2.C: Change copyright header to refer to version"}, {"sha": "5a00cf9f90fb7cf6536553a483c90a0eaedbbf02", "filename": "gcc/testsuite/gcc.dg/pr27150-1.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27150-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b45f0e58d72a6ea2f54d007152b55fc44311359f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27150-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27150-1.c?ref=b45f0e58d72a6ea2f54d007152b55fc44311359f", "patch": "@@ -1,7 +1,14 @@\n-/* { dg-do compile } */\n+/* { dg-do link } */\n /* { dg-options \"-O2\" } */\n+extern int link_error ();\n int g(int f)\n {\n-  return (&f)!=0;\n+  int a = ((&f)!=0);\n+  if (!a) link_error ();\n+  return a;\n }\n \n+int main()\n+{\n+  g(10);\n+}"}]}