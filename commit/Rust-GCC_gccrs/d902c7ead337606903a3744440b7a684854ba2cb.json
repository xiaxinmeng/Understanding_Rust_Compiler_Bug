{"sha": "d902c7ead337606903a3744440b7a684854ba2cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkwMmM3ZWFkMzM3NjA2OTAzYTM3NDQ0NDBiN2E2ODQ4NTRiYTJjYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-05-20T16:59:51Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-05-20T16:59:51Z"}, "message": "(expand_exit_loop_if_false): Emit conditional jump around\nunconditional loop exit instead of conditional loop exit.\n\nFrom-SVN: r7346", "tree": {"sha": "7ac16619953c1c3a8f64d5d4bd59afe13eaac3ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ac16619953c1c3a8f64d5d4bd59afe13eaac3ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d902c7ead337606903a3744440b7a684854ba2cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d902c7ead337606903a3744440b7a684854ba2cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d902c7ead337606903a3744440b7a684854ba2cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d902c7ead337606903a3744440b7a684854ba2cb/comments", "author": null, "committer": null, "parents": [{"sha": "f6709c70a8a8bd93173cbc9ff001e257e8d41a08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6709c70a8a8bd93173cbc9ff001e257e8d41a08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6709c70a8a8bd93173cbc9ff001e257e8d41a08"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "9d2c97741e8dbc01dd42a68b3e2ea3026dcca08f", "filename": "gcc/stmt.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d902c7ead337606903a3744440b7a684854ba2cb/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d902c7ead337606903a3744440b7a684854ba2cb/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=d902c7ead337606903a3744440b7a684854ba2cb", "patch": "@@ -2267,7 +2267,17 @@ expand_exit_loop_if_false (whichloop, cond)\n \t\t\t       NULL_TREE);\n     }\n   else\n-    do_jump (cond, whichloop->data.loop.end_label, NULL_RTX);\n+    {\n+      /* In order to handle fixups, we actually create a conditional jump\n+\t around a unconditional branch to exit the loop.  If fixups are\n+\t necessary, they go before the unconditional branch.  */\n+\n+      rtx label = gen_label_rtx ();\n+      do_jump (cond, NULL_RTX, label);\n+      expand_goto_internal (NULL_TREE, whichloop->data.loop.end_label,\n+\t\t\t    NULL_RTX);\n+      emit_label (label);\n+    }\n \n   return 1;\n }"}]}