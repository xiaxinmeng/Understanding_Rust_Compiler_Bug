{"sha": "1272573a6b2257a7ed525a81e26862a563fb68a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI3MjU3M2E2YjIyNTdhN2VkNTI1YTgxZTI2ODYyYTU2M2ZiNjhhMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-04T10:37:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-04T11:41:25Z"}, "message": "add costing to SLP vectorized PHIs\n\nI forgot to cost vectorized PHIs.  Scalar PHIs are just costed\nas scalar_stmt so the following costs vector PHIs as vector_stmt.\n\n2020-11-04  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vectorizer.h (vectorizable_phi): Adjust prototype.\n\t* tree-vect-stmts.c (vect_transform_stmt): Adjust.\n\t(vect_analyze_stmt): Pass cost_vec to vectorizable_phi.\n\t* tree-vect-loop.c (vectorizable_phi): Do costing.", "tree": {"sha": "9ec31f960b967ba8d4420a0105648147c421d8de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ec31f960b967ba8d4420a0105648147c421d8de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1272573a6b2257a7ed525a81e26862a563fb68a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1272573a6b2257a7ed525a81e26862a563fb68a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1272573a6b2257a7ed525a81e26862a563fb68a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1272573a6b2257a7ed525a81e26862a563fb68a0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e9f339d946b8296e3785bec77e03d71b487d689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e9f339d946b8296e3785bec77e03d71b487d689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e9f339d946b8296e3785bec77e03d71b487d689"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "5e7188ab87a0649a1cfba42916a05a816a30f11f", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1272573a6b2257a7ed525a81e26862a563fb68a0/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1272573a6b2257a7ed525a81e26862a563fb68a0/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=1272573a6b2257a7ed525a81e26862a563fb68a0", "patch": "@@ -7548,7 +7548,7 @@ vectorizable_lc_phi (loop_vec_info loop_vinfo,\n bool\n vectorizable_phi (vec_info *,\n \t\t  stmt_vec_info stmt_info, gimple **vec_stmt,\n-\t\t  slp_tree slp_node)\n+\t\t  slp_tree slp_node, stmt_vector_for_cost *cost_vec)\n {\n   if (!is_a <gphi *> (stmt_info->stmt) || !slp_node)\n     return false;\n@@ -7577,6 +7577,8 @@ vectorizable_phi (vec_info *,\n \t\t\t       \"incompatible vector types for invariants\\n\");\n \t    return false;\n \t  }\n+      record_stmt_cost (cost_vec, SLP_TREE_NUMBER_OF_VEC_STMTS (slp_node),\n+\t\t\tvector_stmt, stmt_info, vectype, 0, vect_body);\n       STMT_VINFO_TYPE (stmt_info) = phi_info_type;\n       return true;\n     }"}, {"sha": "2c7a8a70913bfc4b9903e9328f4489257ca59e02", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1272573a6b2257a7ed525a81e26862a563fb68a0/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1272573a6b2257a7ed525a81e26862a563fb68a0/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=1272573a6b2257a7ed525a81e26862a563fb68a0", "patch": "@@ -10727,7 +10727,7 @@ vect_analyze_stmt (vec_info *vinfo,\n \t\t\t\t\t NULL, NULL, node, cost_vec)\n \t      || vectorizable_comparison (vinfo, stmt_info, NULL, NULL, node,\n \t\t\t\t\t  cost_vec)\n-\t      || vectorizable_phi (vinfo, stmt_info, NULL, node));\n+\t      || vectorizable_phi (vinfo, stmt_info, NULL, node, cost_vec));\n     }\n \n   if (!ok)\n@@ -10868,7 +10868,7 @@ vect_transform_stmt (vec_info *vinfo,\n       break;\n \n     case phi_info_type:\n-      done = vectorizable_phi (vinfo, stmt_info, &vec_stmt, slp_node);\n+      done = vectorizable_phi (vinfo, stmt_info, &vec_stmt, slp_node, NULL);\n       gcc_assert (done);\n       break;\n "}, {"sha": "0252d79956109d9190b68fff336078950fb6f6d4", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1272573a6b2257a7ed525a81e26862a563fb68a0/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1272573a6b2257a7ed525a81e26862a563fb68a0/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=1272573a6b2257a7ed525a81e26862a563fb68a0", "patch": "@@ -1940,7 +1940,8 @@ extern bool vect_transform_cycle_phi (loop_vec_info, stmt_vec_info,\n \t\t\t\t      slp_tree, slp_instance);\n extern bool vectorizable_lc_phi (loop_vec_info, stmt_vec_info,\n \t\t\t\t gimple **, slp_tree);\n-extern bool vectorizable_phi (vec_info *, stmt_vec_info, gimple **, slp_tree);\n+extern bool vectorizable_phi (vec_info *, stmt_vec_info, gimple **, slp_tree,\n+\t\t\t      stmt_vector_for_cost *);\n extern bool vect_worthwhile_without_simd_p (vec_info *, tree_code);\n extern int vect_get_known_peeling_cost (loop_vec_info, int, int *,\n \t\t\t\t\tstmt_vector_for_cost *,"}]}