{"sha": "b90d1b50867d7c0468e1851f24bc33fe338bcc20", "node_id": "C_kwDOANBUbNoAKGI5MGQxYjUwODY3ZDdjMDQ2OGUxODUxZjI0YmMzM2ZlMzM4YmNjMjA", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-01T20:20:49Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-03T11:06:25Z"}, "message": "Do not compare incompatible ranges in ipa-prop.\n\ngcc/ChangeLog:\n\n\t* ipa-prop.cc (struct ipa_vr_ggc_hash_traits): Do not compare\n\tincompatible ranges in ipa-prop.", "tree": {"sha": "3c21438c33b8a8709c2aa58c11f09a0020a3549e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c21438c33b8a8709c2aa58c11f09a0020a3549e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b90d1b50867d7c0468e1851f24bc33fe338bcc20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90d1b50867d7c0468e1851f24bc33fe338bcc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b90d1b50867d7c0468e1851f24bc33fe338bcc20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90d1b50867d7c0468e1851f24bc33fe338bcc20/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31d7c8bc2630e1b5a35ccce97ac862c4920ba582", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d7c8bc2630e1b5a35ccce97ac862c4920ba582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31d7c8bc2630e1b5a35ccce97ac862c4920ba582"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "724c9456308742c5cb042f1a10409a127fc15b44", "filename": "gcc/ipa-prop.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90d1b50867d7c0468e1851f24bc33fe338bcc20/gcc%2Fipa-prop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90d1b50867d7c0468e1851f24bc33fe338bcc20/gcc%2Fipa-prop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.cc?ref=b90d1b50867d7c0468e1851f24bc33fe338bcc20", "patch": "@@ -126,8 +126,8 @@ struct ipa_vr_ggc_hash_traits : public ggc_cache_remove <value_range *>\n   static bool\n   equal (const value_range *a, const value_range *b)\n     {\n-      return (*a == *b\n-\t      && types_compatible_p (a->type (), b->type ()));\n+      return (types_compatible_p (a->type (), b->type ())\n+\t      && *a == *b);\n     }\n   static const bool empty_zero_p = true;\n   static void"}]}