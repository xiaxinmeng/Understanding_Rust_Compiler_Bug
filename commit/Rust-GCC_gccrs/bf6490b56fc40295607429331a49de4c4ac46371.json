{"sha": "bf6490b56fc40295607429331a49de4c4ac46371", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY2NDkwYjU2ZmM0MDI5NTYwNzQyOTMzMWE0OWRlNGM0YWM0NjM3MQ==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2011-05-18T08:40:50Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2011-05-18T08:40:50Z"}, "message": "trans.c (Exception_Handler_to_gnu_sjlj): Use boolean_false_node instead of integer_zero_node.\n\n2011-05-18  Kai Tietz <ktietz@redhat.com>\n\n\t* gcc-interface/trans.c (Exception_Handler_to_gnu_sjlj): Use\n\tboolean_false_node instead of integer_zero_node.\n\t(convert_with_check): Likewise.\n\t* gcc-interface/decl.c (choices_to_gnu): Likewise.\n\nFrom-SVN: r173846", "tree": {"sha": "ee423d169b12d834bb64ac98fd4061ef9ab9c20e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee423d169b12d834bb64ac98fd4061ef9ab9c20e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf6490b56fc40295607429331a49de4c4ac46371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6490b56fc40295607429331a49de4c4ac46371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf6490b56fc40295607429331a49de4c4ac46371", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6490b56fc40295607429331a49de4c4ac46371/comments", "author": null, "committer": null, "parents": [{"sha": "26a8964cbdfa508d1874b1915f0f56ae62a34b3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a8964cbdfa508d1874b1915f0f56ae62a34b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a8964cbdfa508d1874b1915f0f56ae62a34b3a"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "b9325bcc54a4debd29313ba8a1c06e43d1fd815b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6490b56fc40295607429331a49de4c4ac46371/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6490b56fc40295607429331a49de4c4ac46371/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bf6490b56fc40295607429331a49de4c4ac46371", "patch": "@@ -1,3 +1,10 @@\n+2011-05-18  Kai Tietz <ktietz@redhat.com>\n+\n+\t* gcc-interface/trans.c (Exception_Handler_to_gnu_sjlj): Use\n+\tboolean_false_node instead of integer_zero_node.\n+\t(convert_with_check): Likewise.\n+\t* gcc-interface/decl.c (choices_to_gnu): Likewise.\n+\n 2011-05-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (call_to_gnu): In the by-reference case, if the"}, {"sha": "2ded33bbdcd1ed56b788eb419226d2087a8099dd", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6490b56fc40295607429331a49de4c4ac46371/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6490b56fc40295607429331a49de4c4ac46371/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=bf6490b56fc40295607429331a49de4c4ac46371", "patch": "@@ -6595,7 +6595,7 @@ choices_to_gnu (tree operand, Node_Id choices)\n {\n   Node_Id choice;\n   Node_Id gnat_temp;\n-  tree result = integer_zero_node;\n+  tree result = boolean_false_node;\n   tree this_test, low = 0, high = 0, single = 0;\n \n   for (choice = First (choices); Present (choice); choice = Next (choice))\n@@ -6660,7 +6660,7 @@ choices_to_gnu (tree operand, Node_Id choices)\n \t  break;\n \n \tcase N_Others_Choice:\n-\t  this_test = integer_one_node;\n+\t  this_test = boolean_true_node;\n \t  break;\n \n \tdefault:"}, {"sha": "5f08877709fb2b08f3491f235d43488f37d4baed", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf6490b56fc40295607429331a49de4c4ac46371/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf6490b56fc40295607429331a49de4c4ac46371/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=bf6490b56fc40295607429331a49de4c4ac46371", "patch": "@@ -3563,7 +3563,7 @@ Exception_Handler_to_gnu_sjlj (Node_Id gnat_node)\n      an \"if\" statement to select the proper exceptions.  For \"Others\", exclude\n      exceptions where Handled_By_Others is nonzero unless the All_Others flag\n      is set. For \"Non-ada\", accept an exception if \"Lang\" is 'V'.  */\n-  tree gnu_choice = integer_zero_node;\n+  tree gnu_choice = boolean_false_node;\n   tree gnu_body = build_stmt_group (Statements (gnat_node), false);\n   Node_Id gnat_temp;\n \n@@ -3575,7 +3575,7 @@ Exception_Handler_to_gnu_sjlj (Node_Id gnat_node)\n       if (Nkind (gnat_temp) == N_Others_Choice)\n \t{\n \t  if (All_Others (gnat_temp))\n-\t    this_choice = integer_one_node;\n+\t    this_choice = boolean_true_node;\n \t  else\n \t    this_choice\n \t      = build_binary_op\n@@ -7101,7 +7101,7 @@ convert_with_check (Entity_Id gnat_type, tree gnu_expr, bool overflowp,\n     {\n       /* Ensure GNU_EXPR only gets evaluated once.  */\n       tree gnu_input = gnat_protect_expr (gnu_result);\n-      tree gnu_cond = integer_zero_node;\n+      tree gnu_cond = boolean_false_node;\n       tree gnu_in_lb = TYPE_MIN_VALUE (gnu_in_basetype);\n       tree gnu_in_ub = TYPE_MAX_VALUE (gnu_in_basetype);\n       tree gnu_out_lb = TYPE_MIN_VALUE (gnu_base_type);"}]}