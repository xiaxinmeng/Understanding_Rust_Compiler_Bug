{"sha": "6d3fbe2feee0627f2e3669c4d30c2ea003927dce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQzZmJlMmZlZWUwNjI3ZjJlMzY2OWM0ZDMwYzJlYTAwMzkyN2RjZQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@spamcop.net", "date": "2010-12-10T03:58:30Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-12-10T03:58:30Z"}, "message": "re PR target/46881 (arm_preferred_rename_class uses keyword class as parameter name)\n\n\tPR target/46881\n\t* doc/tm.texi: Regenerate.\n\t* target.def: Fix \"preferred\" spelling.  Refer to rclass by its\n\texact name.\n\t* config/arm/arm.c (arm_preferred_rename_class): Rename parameter class\n\tto rclass.\n\nFrom-SVN: r167678", "tree": {"sha": "7ab0c1e261e13feec9231953600512581cf2d5be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ab0c1e261e13feec9231953600512581cf2d5be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d3fbe2feee0627f2e3669c4d30c2ea003927dce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d3fbe2feee0627f2e3669c4d30c2ea003927dce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d3fbe2feee0627f2e3669c4d30c2ea003927dce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d3fbe2feee0627f2e3669c4d30c2ea003927dce/comments", "author": null, "committer": null, "parents": [{"sha": "80f4fc8ccc8f5259bfb99b62ab9cc2c943120d18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f4fc8ccc8f5259bfb99b62ab9cc2c943120d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80f4fc8ccc8f5259bfb99b62ab9cc2c943120d18"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "7027df576586a20b04e96b91a4858a306d12dd40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d3fbe2feee0627f2e3669c4d30c2ea003927dce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d3fbe2feee0627f2e3669c4d30c2ea003927dce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d3fbe2feee0627f2e3669c4d30c2ea003927dce", "patch": "@@ -1,3 +1,12 @@\n+2010-12-10  Joern Rennecke  <amylaar@spamcop.net>\n+\n+\tPR target/46881\n+\t* doc/tm.texi: Regenerate.\n+\t* target.def: Fix \"preferred\" spelling.  Refer to rclass by its\n+\texact name.\n+\t* config/arm/arm.c (arm_preferred_rename_class): Rename parameter class\n+\tto rclass.\n+\n 2010-12-09  Paul Koning  <ni1d@arrl.net>\n \n \t* config/pdp11/pdp11-protos.h (output_move_double,"}, {"sha": "cd4783174304846cd7069069ac7975bca507444d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d3fbe2feee0627f2e3669c4d30c2ea003927dce/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d3fbe2feee0627f2e3669c4d30c2ea003927dce/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=6d3fbe2feee0627f2e3669c4d30c2ea003927dce", "patch": "@@ -248,7 +248,7 @@ static bool arm_builtin_support_vector_misalignment (enum machine_mode mode,\n \t\t\t\t\t\t     int misalignment,\n \t\t\t\t\t\t     bool is_packed);\n static void arm_conditional_register_usage (void);\n-static reg_class_t arm_preferred_rename_class (reg_class_t class);\n+static reg_class_t arm_preferred_rename_class (reg_class_t rclass);\n \n \f\n /* Table of machine attributes.  */\n@@ -23473,12 +23473,12 @@ arm_conditional_register_usage (void)\n }\n \n static reg_class_t\n-arm_preferred_rename_class (reg_class_t class)\n+arm_preferred_rename_class (reg_class_t rclass)\n {\n   /* Thumb-2 instructions using LO_REGS may be smaller than instructions\n      using GENERIC_REGS.  During register rename pass, we prefer LO_REGS,\n      and code size can be reduced.  */\n-  if (TARGET_THUMB2 && class == GENERAL_REGS)\n+  if (TARGET_THUMB2 && rclass == GENERAL_REGS)\n     return LO_REGS;\n   else\n     return NO_REGS;"}, {"sha": "7ebe039e4ff1941923a13e7d8deec06c598d27b8", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d3fbe2feee0627f2e3669c4d30c2ea003927dce/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d3fbe2feee0627f2e3669c4d30c2ea003927dce/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=6d3fbe2feee0627f2e3669c4d30c2ea003927dce", "patch": "@@ -2505,7 +2505,7 @@ only if neither labeling works.\n @end defmac\n \n @deftypefn {Target Hook} reg_class_t TARGET_PREFERRED_RENAME_CLASS (reg_class_t @var{rclass})\n-A target hook that places additional preference on the register class to use when it is necessary to rename a register in class @var{class} to another class, or perhaps @var{NO_REGS}, if no prefered register class is found or hook @code{preferred_rename_class} is not implemented. Sometimes returning a more restrictive class makes better code.  For example, on ARM, thumb-2 instructions using @code{LO_REGS} may be smaller than instructions using @code{GENERIC_REGS}.  By returning @code{LO_REGS} from @code{preferred_rename_class}, code size can be reduced.\n+A target hook that places additional preference on the register class to use when it is necessary to rename a register in class @var{rclass} to another class, or perhaps @var{NO_REGS}, if no preferred register class is found or hook @code{preferred_rename_class} is not implemented. Sometimes returning a more restrictive class makes better code.  For example, on ARM, thumb-2 instructions using @code{LO_REGS} may be smaller than instructions using @code{GENERIC_REGS}.  By returning @code{LO_REGS} from @code{preferred_rename_class}, code size can be reduced.\n @end deftypefn\n \n @deftypefn {Target Hook} reg_class_t TARGET_PREFERRED_RELOAD_CLASS (rtx @var{x}, reg_class_t @var{rclass})"}, {"sha": "8162d763f12e07ba66813dc5aa9f5aa9374c63a8", "filename": "gcc/target.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d3fbe2feee0627f2e3669c4d30c2ea003927dce/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d3fbe2feee0627f2e3669c4d30c2ea003927dce/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=6d3fbe2feee0627f2e3669c4d30c2ea003927dce", "patch": "@@ -2228,8 +2228,8 @@ DEFHOOK\n (preferred_rename_class,\n  \"A target hook that places additional preference on the register\\\n  class to use when it is necessary to rename a register in class\\\n- @var{class} to another class, or perhaps @var{NO_REGS}, if no\\\n- prefered register class is found or hook @code{preferred_rename_class}\\\n+ @var{rclass} to another class, or perhaps @var{NO_REGS}, if no\\\n+ preferred register class is found or hook @code{preferred_rename_class}\\\n  is not implemented.\\\n  Sometimes returning a more restrictive class makes better code.  For\\\n  example, on ARM, thumb-2 instructions using @code{LO_REGS} may be\\"}]}