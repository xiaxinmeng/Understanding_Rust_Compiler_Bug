{"sha": "1e4c40729a2606b0b3cd7993d9f6faac7ca1506b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU0YzQwNzI5YTI2MDZiMGIzY2Q3OTkzZDlmNmZhYWM3Y2ExNTA2Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-10-31T15:10:12Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-10-31T15:10:12Z"}, "message": "[multiple changes]\n\n2007-10-31  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/33941\n        * modules.c (intrinsics): Use only alphabetic names for\n        intrinsic operators.\n\n\n2007-10-31  Dominique d'Humieres  <dominiq@lps.ens.fr>\n            Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/33941\n        * gfortran.dg/module_read_1.f90: New.\n\nFrom-SVN: r129801", "tree": {"sha": "ef12b1b4fe237e820892760c288137f83de1be2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef12b1b4fe237e820892760c288137f83de1be2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b/comments", "author": null, "committer": null, "parents": [{"sha": "5b9a40df4e3e9c4253239bbc32578eda155577ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9a40df4e3e9c4253239bbc32578eda155577ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9a40df4e3e9c4253239bbc32578eda155577ea"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "71c8d54c0c05827b9bdba84acdf14799a49da743", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1e4c40729a2606b0b3cd7993d9f6faac7ca1506b", "patch": "@@ -1,3 +1,9 @@\n+2007-10-31  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/33941\n+\t* modules.c (intrinsics): Use only alphabetic names for\n+\tintrinsic operators.\n+\n 2007-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/33162"}, {"sha": "a05437adf93899f21fe8cf34d0af3f2194d7678a", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=1e4c40729a2606b0b3cd7993d9f6faac7ca1506b", "patch": "@@ -2627,17 +2627,17 @@ static const mstring intrinsics[] =\n     minit (\"OR\", INTRINSIC_OR),\n     minit (\"EQV\", INTRINSIC_EQV),\n     minit (\"NEQV\", INTRINSIC_NEQV),\n-    minit (\"==\", INTRINSIC_EQ),\n+    minit (\"EQ_SIGN\", INTRINSIC_EQ),\n     minit (\"EQ\", INTRINSIC_EQ_OS),\n-    minit (\"/=\", INTRINSIC_NE),\n+    minit (\"NE_SIGN\", INTRINSIC_NE),\n     minit (\"NE\", INTRINSIC_NE_OS),\n-    minit (\">\", INTRINSIC_GT),\n+    minit (\"GT_SIGN\", INTRINSIC_GT),\n     minit (\"GT\", INTRINSIC_GT_OS),\n-    minit (\">=\", INTRINSIC_GE),\n+    minit (\"GE_SIGN\", INTRINSIC_GE),\n     minit (\"GE\", INTRINSIC_GE_OS),\n-    minit (\"<\", INTRINSIC_LT),\n+    minit (\"LT_SIGN\", INTRINSIC_LT),\n     minit (\"LT\", INTRINSIC_LT_OS),\n-    minit (\"<=\", INTRINSIC_LE),\n+    minit (\"LE_SIGN\", INTRINSIC_LE),\n     minit (\"LE\", INTRINSIC_LE_OS),\n     minit (\"NOT\", INTRINSIC_NOT),\n     minit (\"PARENTHESES\", INTRINSIC_PARENTHESES),"}, {"sha": "9ff71b51f2c9c02a6d0894a8aff3e25432adeb70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e4c40729a2606b0b3cd7993d9f6faac7ca1506b", "patch": "@@ -1,3 +1,9 @@\n+2007-10-31  Dominique d'Humieres  <dominiq@lps.ens.fr>\n+\t    Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/33941\n+\t* gfortran.dg/module_read_1.f90: New.\n+\n 2007-10-31  Tom Tromey  <tromey@redhat.com>\n \n \tPR preprocessor/30786:"}, {"sha": "9a680a62f3eab01f90ca802c4127cc64ef1bd238", "filename": "gcc/testsuite/gfortran.dg/module_read_1.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_read_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4c40729a2606b0b3cd7993d9f6faac7ca1506b/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_read_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_read_1.f90?ref=1e4c40729a2606b0b3cd7993d9f6faac7ca1506b", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do run }\n+! PR fortran/33941\n+! The problem was that the intrinsic operators\n+! were written to the module file as '/=' etc.\n+! but this format was not understood on reading.\n+!\n+! Test case by Toby White, stripped down by\n+! Dominique d'Humieres and Francois-Xavier Coudert\n+\n+module foo\n+contains\n+  function pop(n) result(item)\n+    integer :: n\n+    character(len=merge(1, 0, n > 0)) :: item\n+  end function pop\n+  function push(n) result(item)\n+    integer :: n\n+    character(len=merge(1, 0, n /= 0)) :: item\n+  end function push\n+end module foo\n+\n+program test\n+  use foo\n+  if(len(pop(0)) /= 0) call abort()\n+  if(len(pop(1)) /= 1) call abort()\n+  if(len(push(0)) /= 0) call abort()\n+  if(len(push(1)) /= 1) call abort()\n+end program\n+! { dg-final { cleanup-modules \"foo\" } }"}]}