{"sha": "176e79b51e9e778a768e9e33bd4daa47600300fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc2ZTc5YjUxZTllNzc4YTc2OGU5ZTMzYmQ0ZGFhNDc2MDAzMDBmZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-04-21T19:26:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-04-21T19:26:54Z"}, "message": "PR c++/80179 - ICE with initialized flexible array member.\n\n\t* constexpr.c (verify_ctor_sanity): Handle flexible array members.\n\nFrom-SVN: r247067", "tree": {"sha": "1b7f1130a6566026e8fc26a717b0af8ca08acc61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b7f1130a6566026e8fc26a717b0af8ca08acc61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/176e79b51e9e778a768e9e33bd4daa47600300fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/176e79b51e9e778a768e9e33bd4daa47600300fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/176e79b51e9e778a768e9e33bd4daa47600300fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/176e79b51e9e778a768e9e33bd4daa47600300fd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2f3e54dec0244e27ae22720713b8249430dbe95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f3e54dec0244e27ae22720713b8249430dbe95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f3e54dec0244e27ae22720713b8249430dbe95"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "6799e2edad9b166130253e4b9428f4cf10c937eb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/176e79b51e9e778a768e9e33bd4daa47600300fd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/176e79b51e9e778a768e9e33bd4daa47600300fd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=176e79b51e9e778a768e9e33bd4daa47600300fd", "patch": "@@ -1,3 +1,8 @@\n+2017-04-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/80179 - ICE with initialized flexible array member.\n+\t* constexpr.c (verify_ctor_sanity): Handle flexible array members.\n+\n 2017-04-21  Richard Biener  <rguenther@suse.de>\n \n \t* cp-tree.h (copy_decl): Annotate with CXX_MEM_STAT_INFO."}, {"sha": "366d562a8a60b0b7129217ecb050486d1bd99258", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/176e79b51e9e778a768e9e33bd4daa47600300fd/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/176e79b51e9e778a768e9e33bd4daa47600300fd/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=176e79b51e9e778a768e9e33bd4daa47600300fd", "patch": "@@ -2643,8 +2643,16 @@ verify_ctor_sanity (const constexpr_ctx *ctx, tree type)\n   /* We used to check that ctx->ctor was empty, but that isn't the case when\n      the object is zero-initialized before calling the constructor.  */\n   if (ctx->object)\n-    gcc_assert (same_type_ignoring_top_level_qualifiers_p\n-\t\t(type, TREE_TYPE (ctx->object)));\n+    {\n+      tree otype = TREE_TYPE (ctx->object);\n+      gcc_assert (same_type_ignoring_top_level_qualifiers_p (type, otype)\n+\t\t  /* Handle flexible array members.  */\n+\t\t  || (TREE_CODE (otype) == ARRAY_TYPE\n+\t\t      && TYPE_DOMAIN (otype) == NULL_TREE\n+\t\t      && TREE_CODE (type) == ARRAY_TYPE\n+\t\t      && (same_type_ignoring_top_level_qualifiers_p\n+\t\t\t  (TREE_TYPE (type), TREE_TYPE (otype)))));\n+    }\n   gcc_assert (!ctx->object || !DECL_P (ctx->object)\n \t      || *(ctx->values->get (ctx->object)) == ctx->ctor);\n }"}, {"sha": "c25e540243a119881cca1960c9c42a2c6c5bc1c1", "filename": "gcc/testsuite/g++.dg/ext/flexary24.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/176e79b51e9e778a768e9e33bd4daa47600300fd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/176e79b51e9e778a768e9e33bd4daa47600300fd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary24.C?ref=176e79b51e9e778a768e9e33bd4daa47600300fd", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/80179\n+// { dg-options \"\" }\n+\n+struct S {\n+  int n;\n+  const char *a[];\n+};\n+\n+void bar (const char *a)\n+{\n+  static const S t = { 1, { a, \"b\" } };\n+}"}]}