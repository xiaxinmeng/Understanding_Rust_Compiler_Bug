{"sha": "297abd0d40f4691e79dff8da2a0f11205cb7a1bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk3YWJkMGQ0MGY0NjkxZTc5ZGZmOGRhMmEwZjExMjA1Y2I3YTFiYg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-08-26T14:24:20Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-08-26T14:24:20Z"}, "message": "rs6000.md (eq<mode>_compare): Only enable when optimizing for size.\n\n\t* config/rs6000/rs6000.md (eq<mode>_compare): Only enable when\n\toptimizing for size.\n\t(plus_eqsi): Same.\n\t(compare_plus_eqsi): Same.\n\t(plus_eqsi_compare): Same.\n\t(neg_eq0<mode>): Same.\n\t(neg_eq<mode>): Same.\n\n\t* config/rs6000/aix52.h (PROCESSOR_DEFAULT): Change to\n\tPROCESSOR_POWER4.\n\nFrom-SVN: r103522", "tree": {"sha": "6b8b14d046a3f7e5e751b615d393abd1372e388d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b8b14d046a3f7e5e751b615d393abd1372e388d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/297abd0d40f4691e79dff8da2a0f11205cb7a1bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/297abd0d40f4691e79dff8da2a0f11205cb7a1bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/297abd0d40f4691e79dff8da2a0f11205cb7a1bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/297abd0d40f4691e79dff8da2a0f11205cb7a1bb/comments", "author": null, "committer": null, "parents": [{"sha": "2ec6cd51b63c9d73ca831391d00ff5aca2c76512", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ec6cd51b63c9d73ca831391d00ff5aca2c76512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ec6cd51b63c9d73ca831391d00ff5aca2c76512"}], "stats": {"total": 53, "additions": 33, "deletions": 20}, "files": [{"sha": "30a83691cd97fb653a30a135ffcaf65d03f87b7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297abd0d40f4691e79dff8da2a0f11205cb7a1bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297abd0d40f4691e79dff8da2a0f11205cb7a1bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=297abd0d40f4691e79dff8da2a0f11205cb7a1bb", "patch": "@@ -1,3 +1,16 @@\n+2005-08-26  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.md (eq<mode>_compare): Only enable when\n+\toptimizing for size.\n+\t(plus_eqsi): Same.\n+\t(compare_plus_eqsi): Same.\n+\t(plus_eqsi_compare): Same.\n+\t(neg_eq0<mode>): Same.\n+\t(neg_eq<mode>): Same.\n+\n+\t* config/rs6000/aix52.h (PROCESSOR_DEFAULT): Change to\n+\tPROCESSOR_POWER4.\n+\n 2005-08-26  Nick Clifton  <nickc@redhat.com>\n \n \t* config/v850/v850.c (ep_memory_operand): Return FALSE if"}, {"sha": "d793d6431410b4f52c085372622b64e5177e3a1e", "filename": "gcc/config/rs6000/aix52.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297abd0d40f4691e79dff8da2a0f11205cb7a1bb/gcc%2Fconfig%2Frs6000%2Faix52.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297abd0d40f4691e79dff8da2a0f11205cb7a1bb/gcc%2Fconfig%2Frs6000%2Faix52.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix52.h?ref=297abd0d40f4691e79dff8da2a0f11205cb7a1bb", "patch": "@@ -106,7 +106,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define TARGET_DEFAULT (MASK_POWERPC | MASK_NEW_MNEMONICS)\n \n #undef  PROCESSOR_DEFAULT\n-#define PROCESSOR_DEFAULT PROCESSOR_PPC630\n+#define PROCESSOR_DEFAULT PROCESSOR_POWER4\n #undef  PROCESSOR_DEFAULT64\n #define PROCESSOR_DEFAULT64 PROCESSOR_POWER4\n "}, {"sha": "329b3f4905ad021c6e801a57ff33f78a2a17a500", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/297abd0d40f4691e79dff8da2a0f11205cb7a1bb/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/297abd0d40f4691e79dff8da2a0f11205cb7a1bb/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=297abd0d40f4691e79dff8da2a0f11205cb7a1bb", "patch": "@@ -11176,9 +11176,9 @@\n \t (const_int 0)))\n    (set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n \t(eq:P (match_dup 1) (match_dup 2)))]\n-  \"\"\n+  \"optimize_size\"\n   \"#\"\n-  \"\"\n+  \"optimize_size\"\n   [(set (match_dup 0)\n \t(clz:P (match_dup 4)))\n    (parallel [(set (match_dup 3)\n@@ -11223,12 +11223,12 @@\n    (set (match_dup 2) (plus:SI (match_op_dup 1 [(match_dup 2) (match_dup 3)])\n \t\t\t       (match_dup 4)))])\n \n-(define_insn \"\"\n+(define_insn \"*plus_eqsi\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r,&r\")\n \t(plus:SI (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r\")\n \t\t\t(match_operand:SI 2 \"scc_eq_operand\" \"r,O,K,L,I\"))\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r,r\")))]\n-  \"TARGET_32BIT\"\n+  \"TARGET_32BIT && optimize_size\"\n   \"@\n    xor %0,%1,%2\\;{sfi|subfic} %0,%0,0\\;{aze|addze} %0,%3\n    {sfi|subfic} %0,%1,0\\;{aze|addze} %0,%3\n@@ -11238,7 +11238,7 @@\n   [(set_attr \"type\" \"three,two,three,three,three\")\n    (set_attr \"length\" \"12,8,12,12,12\")])\n \n-(define_insn \"\"\n+(define_insn \"*compare_plus_eqsi\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,x,x,x,?y,?y,?y,?y,?y\")\n \t(compare:CC\n \t (plus:SI\n@@ -11247,7 +11247,7 @@\n \t  (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r,r,r,r,r,r,r\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 4 \"=&r,&r,&r,&r,&r,&r,&r,&r,&r,&r\"))]\n-  \"TARGET_32BIT\"\n+  \"TARGET_32BIT && optimize_size\"\n   \"@\n    xor %4,%1,%2\\;{sfi|subfic} %4,%4,0\\;{aze.|addze.} %4,%3\n    {sfi|subfic} %4,%1,0\\;{aze.|addze.} %4,%3\n@@ -11271,7 +11271,7 @@\n \t  (match_operand:SI 3 \"gpc_reg_operand\" \"\"))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 4 \"\"))]\n-  \"TARGET_32BIT && reload_completed\"\n+  \"TARGET_32BIT && optimize_size && reload_completed\"\n   [(set (match_dup 4)\n \t(plus:SI (eq:SI (match_dup 1)\n \t\t (match_dup 2))\n@@ -11281,7 +11281,7 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*plus_eqsi_compare\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,x,x,x,x,?y,?y,?y,?y,?y\")\n \t(compare:CC\n \t (plus:SI\n@@ -11291,7 +11291,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,&r,&r,&r,&r,&r,&r,&r,&r,&r\")\n \t(plus:SI (eq:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"TARGET_32BIT\"\n+  \"TARGET_32BIT && optimize_size\"\n   \"@\n    xor %0,%1,%2\\;{sfi|subfic} %0,%0,0\\;{aze.|addze.} %0,%3\n    {sfi|subfic} %0,%1,0\\;{aze.|addze.} %0,%3\n@@ -11316,7 +11316,7 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(plus:SI (eq:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n-  \"TARGET_32BIT && reload_completed\"\n+  \"TARGET_32BIT && optimize_size && reload_completed\"\n   [(set (match_dup 0)\n \t(plus:SI (eq:SI (match_dup 1) (match_dup 2)) (match_dup 3)))\n    (set (match_dup 4)\n@@ -11328,7 +11328,7 @@\n   [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:P (eq:P (match_operand:P 1 \"gpc_reg_operand\" \"r\")\n \t\t     (const_int 0))))]\n-  \"\"\n+  \"optimize_size\"\n   \"{ai|addic} %0,%1,-1\\;{sfe|subfe} %0,%0,%0\"\n   [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n@@ -11337,9 +11337,9 @@\n   [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:P (eq:P (match_operand:P 1 \"gpc_reg_operand\" \"%r\")\n \t\t     (match_operand:P 2 \"scc_eq_operand\" \"<scc_eq_op2>\"))))]\n-  \"\"\n+  \"optimize_size\"\n   \"#\"\n-  \"\"\n+  \"optimize_size\"\n   [(set (match_dup 0) (neg:P (eq:P (match_dup 3) (const_int 0))))]\n   {\n     if (GET_CODE (operands[2]) != CONST_INT || INTVAL (operands[2]) != 0)\n@@ -11384,7 +11384,7 @@\n    (set_attr \"length\" \"8\")])\n \n ;; This is what (plus (ne X (const_int 0)) Y) looks like.\n-(define_insn \"\"\n+(define_insn \"*plus_ne0si\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(plus:SI (lshiftrt:SI\n \t\t  (neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))\n@@ -11396,7 +11396,7 @@\n   [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n \n-(define_insn \"\"\n+(define_insn \"*plus_ne0di\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(plus:DI (lshiftrt:DI\n \t\t  (neg:DI (abs:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")))\n@@ -11408,7 +11408,7 @@\n   [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n \n-(define_insn \"\"\n+(define_insn \"*compare_plus_ne0si\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:SI (lshiftrt:SI\n@@ -11446,7 +11446,7 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*compare_plus_ne0di\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:DI (lshiftrt:DI\n@@ -11481,7 +11481,7 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*plus_ne0si_compare\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:SI (lshiftrt:SI\n@@ -11522,7 +11522,7 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*plus_ne0di_compare\"\n   [(set (match_operand:CC 4 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (plus:DI (lshiftrt:DI"}]}