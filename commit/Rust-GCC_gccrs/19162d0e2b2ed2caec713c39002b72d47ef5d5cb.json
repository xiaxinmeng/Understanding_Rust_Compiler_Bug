{"sha": "19162d0e2b2ed2caec713c39002b72d47ef5d5cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkxNjJkMGUyYjJlZDJjYWVjNzEzYzM5MDAyYjcyZDQ3ZWY1ZDVjYg==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2003-01-17T02:08:05Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2003-01-17T02:08:05Z"}, "message": "QNX needs a bypass for limits_ifndefs\n\nFrom-SVN: r61417", "tree": {"sha": "2e33e8093cd3b58ac28687e1d3506589abe2d3ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e33e8093cd3b58ac28687e1d3506589abe2d3ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19162d0e2b2ed2caec713c39002b72d47ef5d5cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19162d0e2b2ed2caec713c39002b72d47ef5d5cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19162d0e2b2ed2caec713c39002b72d47ef5d5cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19162d0e2b2ed2caec713c39002b72d47ef5d5cb/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca2ceadd31dfff7c806fad1b2fd6e2bd4501dbc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2ceadd31dfff7c806fad1b2fd6e2bd4501dbc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca2ceadd31dfff7c806fad1b2fd6e2bd4501dbc3"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "c930d837a5e7c85b3fff97b4eadbe07bbf4b4671", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19162d0e2b2ed2caec713c39002b72d47ef5d5cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19162d0e2b2ed2caec713c39002b72d47ef5d5cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19162d0e2b2ed2caec713c39002b72d47ef5d5cb", "patch": "@@ -1,3 +1,7 @@\n+2003-01-16  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* gcc/fixinc/inclhack.def(limits_ifndef): QNX needs a bypass, too.\n+\n 2003-01-16  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n         * config/sh/sh.c (sh_initialize_trampoline): Emit rotrdi3_mextr"}, {"sha": "4f159e1fea5282986fe999a540326f81ee634507", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19162d0e2b2ed2caec713c39002b72d47ef5d5cb/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19162d0e2b2ed2caec713c39002b72d47ef5d5cb/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=19162d0e2b2ed2caec713c39002b72d47ef5d5cb", "patch": "@@ -296,10 +296,10 @@ fix = {\\n\\\n     replace  = <<-  _EndOfHeader_\\n\\\n #ifndef _SYS_BYTEORDER_H\\n\\\n #define _SYS_BYTEORDER_H\\n\\n\\\n-/* Functions to convert `short\\\\' and `long\\\\' quantities from host byte order\\n\\\n+/* Functions to convert `short' and `long' quantities from host byte order\\n\\\n    to (internet) network byte order (i.e. big-endian).\\n\\n\\\n    Written by Ron Guilmette (rfg@ncd.com).\\n\\n\\\n-   This isn\\\\'t actually used by GCC.  It is installed by fixinc.svr4.\\n\\n\\\n+   This isn't actually used by GCC.  It is installed by fixinc.svr4.\\n\\n\\\n    For big-endian machines these functions are essentially no-ops.\\n\\n\\\n    For little-endian machines, we define the functions using specialized\\n\\\n    asm sequences in cases where doing so yields better code (e.g. i386).  */\\n\\n\\\n@@ -2423,7 +2423,7 @@ tSCC zLimits_IfndefsList[] =\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zLimits_IfndefsBypass0[] =\n-       \"ifndef[ \\t]+FLT_MIN\";\n+       \"ifndef[ \\t]+FLT_(MIN|MAX)\";\n \n #define    LIMITS_IFNDEFS_TEST_CT  1\n static tTestDesc aLimits_IfndefsTests[] = {"}, {"sha": "fc39fbbd2b8bf7cd18564e443d14bdb7ca8b2bfa", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19162d0e2b2ed2caec713c39002b72d47ef5d5cb/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19162d0e2b2ed2caec713c39002b72d47ef5d5cb/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=19162d0e2b2ed2caec713c39002b72d47ef5d5cb", "patch": "@@ -1398,12 +1398,16 @@ fix = {\n  *  comment.  Fortunately, HP/UX already uses #ifndefs in limits.h; if\n  *  we find a #ifndef FLT_MIN we assume that all the required #ifndefs\n  *  are there, and we do not add them ourselves.\n+ *\n+ *  QNX Software Systems also guards the defines, but doesn't define\n+ *  FLT_MIN.  Therefore, bypass the fix for *either* guarded FLT_MIN\n+ *  or guarded FLT_MAX.\n  */\n fix = {\n     hackname = limits_ifndefs;\n     files  = \"sys/limits.h\";\n     files  = \"limits.h\";\n-    bypass = \"ifndef[ \\t]+FLT_MIN\";\n+    bypass = \"ifndef[ \\t]+FLT_(MIN|MAX)\";\n \n     c_fix     = format;\n     c_fix_arg = \"#ifndef %1\\n%0\\n#endif\";"}]}