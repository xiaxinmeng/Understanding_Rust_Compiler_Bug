{"sha": "0877856b4ea175fe9d5339752124a2b4faf929ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg3Nzg1NmI0ZWExNzVmZTlkNTMzOTc1MjEyNGEyYjRmYWY5MjllYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T09:53:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T09:53:00Z"}, "message": "[multiple changes]\n\n2010-10-18  Arnaud Charlet  <charlet@adacore.com>\n\n\t* g-comlin.adb (Get_Switches): Prevent dereferencing null Config.\n\n2010-10-18  Robert Dewar  <dewar@adacore.com>\n\n\t* aspects.ads, aspects.adb: Add entries for aspects\n\tRead/Write/Input/Output.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Add processing for\n\thandling aspects Read/Write/Input/Output.\n\n2010-10-18  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_util.adb (Note_Possible_Modification): Do not give warning for\n\tuse of pragma Unmodified unless we are sure this is a modification.\n\n2010-10-18  Tristan Gingold  <gingold@adacore.com>\n\n\t* sysdep.c: Add __gnat_get_stack_bounds.\n\t* s-taprop-mingw.adb Call __gnat_get_stack_bounds to set Pri_Stack_Info.\n\n2010-10-18  Robert Dewar  <dewar@adacore.com>\n\n\t* a-assert.ads: Fix bad name in header.\n\t* sem_ch4.adb, sem_ch6.adb, sem_ch7.adb, sem_ch10.adb: Minor\n\treformatting.\n\t* exp_aggr.adb: Fix typo in comment.\n\nFrom-SVN: r165615", "tree": {"sha": "3d9032a0797e7fdf2282a10a3eb70fe86bfbd5d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d9032a0797e7fdf2282a10a3eb70fe86bfbd5d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0877856b4ea175fe9d5339752124a2b4faf929ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0877856b4ea175fe9d5339752124a2b4faf929ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0877856b4ea175fe9d5339752124a2b4faf929ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0877856b4ea175fe9d5339752124a2b4faf929ea/comments", "author": null, "committer": null, "parents": [{"sha": "a780db15307e718218f39f753eebe20689fa1e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a780db15307e718218f39f753eebe20689fa1e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a780db15307e718218f39f753eebe20689fa1e30"}], "stats": {"total": 151, "additions": 121, "deletions": 30}, "files": [{"sha": "274dde2fea3a3fc1dfa651218bd4d0adbd8a36e9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -1,3 +1,31 @@\n+2010-10-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* g-comlin.adb (Get_Switches): Prevent dereferencing null Config.\n+\n+2010-10-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* aspects.ads, aspects.adb: Add entries for aspects\n+\tRead/Write/Input/Output.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Add processing for\n+\thandling aspects Read/Write/Input/Output.\n+\n+2010-10-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_util.adb (Note_Possible_Modification): Do not give warning for\n+\tuse of pragma Unmodified unless we are sure this is a modification.\n+\n+2010-10-18  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* sysdep.c: Add __gnat_get_stack_bounds.\n+\t* s-taprop-mingw.adb Call __gnat_get_stack_bounds to set Pri_Stack_Info.\n+\n+2010-10-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-assert.ads: Fix bad name in header.\n+\t* sem_ch4.adb, sem_ch6.adb, sem_ch7.adb, sem_ch10.adb: Minor\n+\treformatting.\n+\t* exp_aggr.adb: Fix typo in comment.\n+\n 2010-10-18  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_util.adb (Side_Effect_Free): Code clean up."}, {"sha": "232201b157da7626d907214e1c0b7dcc403c0a79", "filename": "gcc/ada/a-assert.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fa-assert.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fa-assert.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-assert.ads?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                           A D A . A S S E R T                            --\n+--                       A D A . A S S E R T I O N S                        --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --"}, {"sha": "faf50cd867767f2e488856f8d2bc38cd87eb2985", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -86,16 +86,19 @@ package body Aspects is\n      (Name_Favor_Top_Level,              Aspect_Favor_Top_Level),\n      (Name_Inline,                       Aspect_Inline),\n      (Name_Inline_Always,                Aspect_Inline_Always),\n+     (Name_Input,                        Aspect_Input),\n      (Name_Invariant,                    Aspect_Invariant),\n      (Name_Machine_Radix,                Aspect_Machine_Radix),\n      (Name_Object_Size,                  Aspect_Object_Size),\n+     (Name_Output,                       Aspect_Output),\n      (Name_Pack,                         Aspect_Pack),\n      (Name_Persistent_BSS,               Aspect_Persistent_BSS),\n      (Name_Post,                         Aspect_Post),\n      (Name_Pre,                          Aspect_Pre),\n      (Name_Predicate,                    Aspect_Predicate),\n      (Name_Preelaborable_Initialization, Aspect_Preelaborable_Initialization),\n      (Name_Pure_Function,                Aspect_Pure_Function),\n+     (Name_Read,                         Aspect_Read),\n      (Name_Shared,                       Aspect_Shared),\n      (Name_Size,                         Aspect_Size),\n      (Name_Storage_Pool,                 Aspect_Storage_Pool),\n@@ -112,7 +115,8 @@ package body Aspects is\n      (Name_Value_Size,                   Aspect_Value_Size),\n      (Name_Volatile,                     Aspect_Volatile),\n      (Name_Volatile_Components,          Aspect_Volatile_Components),\n-     (Name_Warnings,                     Aspect_Warnings));\n+     (Name_Warnings,                     Aspect_Warnings),\n+     (Name_Write,                        Aspect_Write));\n \n    -------------------------------------\n    -- Hash Table for Aspect Id Values --"}, {"sha": "63cb76550810b0e280c69391d9727fd243fe02b8", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -56,17 +56,20 @@ package Aspects is\n       Aspect_Favor_Top_Level,               -- GNAT\n       Aspect_Inline,\n       Aspect_Inline_Always,                 -- GNAT\n+      Aspect_Input,\n       Aspect_Invariant,\n       Aspect_Machine_Radix,\n       Aspect_No_Return,\n       Aspect_Object_Size,                   -- GNAT\n+      Aspect_Output,\n       Aspect_Pack,\n       Aspect_Persistent_BSS,                -- GNAT\n       Aspect_Post,\n       Aspect_Pre,\n       Aspect_Predicate,                     -- GNAT???\n       Aspect_Preelaborable_Initialization,\n       Aspect_Pure_Function,                 -- GNAT\n+      Aspect_Read,\n       Aspect_Shared,                        -- GNAT (equivalent to Atomic)\n       Aspect_Size,\n       Aspect_Storage_Pool,\n@@ -83,7 +86,8 @@ package Aspects is\n       Aspect_Value_Size,                    -- GNAT\n       Aspect_Volatile,\n       Aspect_Volatile_Components,\n-      Aspect_Warnings);                     -- GNAT\n+      Aspect_Warnings,\n+      Aspect_Write);                        -- GNAT\n \n    --  The following array indicates aspects that accept 'Class\n \n@@ -118,17 +122,20 @@ package Aspects is\n                         Aspect_Favor_Top_Level              => Optional,\n                         Aspect_Inline                       => Optional,\n                         Aspect_Inline_Always                => Optional,\n+                        Aspect_Input                        => Name,\n                         Aspect_Invariant                    => Expression,\n                         Aspect_Machine_Radix                => Expression,\n                         Aspect_No_Return                    => Optional,\n                         Aspect_Object_Size                  => Expression,\n+                        Aspect_Output                       => Name,\n                         Aspect_Persistent_BSS               => Optional,\n                         Aspect_Pack                         => Optional,\n                         Aspect_Post                         => Expression,\n                         Aspect_Pre                          => Expression,\n                         Aspect_Predicate                    => Expression,\n                         Aspect_Preelaborable_Initialization => Optional,\n                         Aspect_Pure_Function                => Optional,\n+                        Aspect_Read                         => Name,\n                         Aspect_Shared                       => Optional,\n                         Aspect_Size                         => Expression,\n                         Aspect_Storage_Pool                 => Name,\n@@ -145,7 +152,8 @@ package Aspects is\n                         Aspect_Value_Size                   => Expression,\n                         Aspect_Volatile                     => Optional,\n                         Aspect_Volatile_Components          => Optional,\n-                        Aspect_Warnings                     => Name);\n+                        Aspect_Warnings                     => Name,\n+                        Aspect_Write                        => Name);\n \n    function Get_Aspect_Id (Name : Name_Id) return Aspect_Id;\n    pragma Inline (Get_Aspect_Id);"}, {"sha": "1b1d9f5779dfe2ba9157205a02b7ce35eb66a4c6", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -5421,7 +5421,7 @@ package body Exp_Aggr is\n       --  of the following form (c1 and c2 are inherited components)\n \n       --   (Exp with c3 => a, c4 => b)\n-      --      ==> (c1 => Exp.c1, c2 => Exp.c2, c1 => a, c2 => b)\n+      --      ==> (c1 => Exp.c1, c2 => Exp.c2, c3 => a, c4 => b)\n \n       else\n          Set_Etype (N, Typ);"}, {"sha": "eb98696f4d939580dd6da1c5514e0496deb4cf64", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -1462,6 +1462,10 @@ package body GNAT.Command_Line is\n    --  Start of processing for Get_Switches\n \n    begin\n+      if Config = null then\n+         return \"\";\n+      end if;\n+\n       Foreach (Config, Section => Section);\n \n       --  Adding relevant aliases"}, {"sha": "29465a1c8f594ad571a0306aefa043a9ee51361f", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -794,6 +794,9 @@ package body System.Task_Primitives.Operations is\n       pragma Import (C, Init_Float, \"__gnat_init_float\");\n       --  Properly initializes the FPU for x86 systems\n \n+      procedure Get_Stack_Bounds (Base : Address; Limit : Address);\n+      pragma Import (C, Get_Stack_Bounds, \"__gnat_get_stack_bounds\");\n+      --  Get stack boundaries\n    begin\n       Specific.Set (Self_ID);\n       Init_Float;\n@@ -806,6 +809,10 @@ package body System.Task_Primitives.Operations is\n       end if;\n \n       Self_ID.Common.LL.Thread_Id := GetCurrentThreadId;\n+\n+      Get_Stack_Bounds\n+        (Self_ID.Common.Compiler_Data.Pri_Stack_Info.Base'Address,\n+         Self_ID.Common.Compiler_Data.Pri_Stack_Info.Limit'Address);\n    end Enter_Task;\n \n    --------------"}, {"sha": "89dda5da36d901a4f3dadbc0039671a32e92cd96", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -86,8 +86,8 @@ package body Sem_Ch10 is\n    --  included in a standalone library.\n \n    procedure Check_Private_Child_Unit (N : Node_Id);\n-   --  If a with_clause mentions a private child unit, the compilation\n-   --  unit must be a member of the same family, as described in 10.1.2.\n+   --  If a with_clause mentions a private child unit, the compilation unit\n+   --  must be a member of the same family, as described in 10.1.2.\n \n    procedure Check_Stub_Level (N : Node_Id);\n    --  Verify that a stub is declared immediately within a compilation unit,\n@@ -126,8 +126,8 @@ package body Sem_Ch10 is\n    --  example through a limited_with clause in a parent unit.\n \n    procedure Install_Context_Clauses (N : Node_Id);\n-   --  Subsidiary to Install_Context and Install_Parents. Process only with_\n-   --  and use_clauses for current unit and its library unit if any.\n+   --  Subsidiary to Install_Context and Install_Parents. Process all with\n+   --  and use clauses for current unit and its library unit if any.\n \n    procedure Install_Limited_Context_Clauses (N : Node_Id);\n    --  Subsidiary to Install_Context. Process only limited with_clauses for\n@@ -187,18 +187,18 @@ package body Sem_Ch10 is\n    --  that all parents are removed in the nested case.\n \n    procedure Remove_Unit_From_Visibility (Unit_Name : Entity_Id);\n-   --  Reset all visibility flags on unit after compiling it, either as a\n-   --  main unit or as a unit in the context.\n+   --  Reset all visibility flags on unit after compiling it, either as a main\n+   --  unit or as a unit in the context.\n \n    procedure Unchain (E : Entity_Id);\n    --  Remove single entity from visibility list\n \n    procedure Analyze_Proper_Body (N : Node_Id; Nam : Entity_Id);\n    --  Common processing for all stubs (subprograms, tasks, packages, and\n-   --  protected cases). N is the stub to be analyzed. Once the subunit\n-   --  name is established, load and analyze. Nam is the non-overloadable\n-   --  entity for which the proper body provides a completion. Subprogram\n-   --  stubs are handled differently because they can be declarations.\n+   --  protected cases). N is the stub to be analyzed. Once the subunit name\n+   --  is established, load and analyze. Nam is the non-overloadable entity\n+   --  for which the proper body provides a completion. Subprogram stubs are\n+   --  handled differently because they can be declarations.\n \n    procedure sm;\n    --  A dummy procedure, for debugging use, called just before analyzing the\n@@ -272,11 +272,10 @@ package body Sem_Ch10 is\n            Clause            : Node_Id;\n            Used              : in out Boolean;\n            Used_Type_Or_Elab : in out Boolean);\n-         --  Examine the context clauses of a package body, trying to match\n-         --  the name entity of Clause with any list element. If the match\n-         --  occurs on a use package clause, set Used to True, for a use\n-         --  type clause, pragma Elaborate or pragma Elaborate_All, set\n-         --  Used_Type_Or_Elab to True.\n+         --  Examine the context clauses of a package body, trying to match the\n+         --  name entity of Clause with any list element. If the match occurs\n+         --  on a use package clause set Used to True, for a use type clause or\n+         --  pragma Elaborate[_All], set Used_Type_Or_Elab to True.\n \n          procedure Process_Spec_Clauses\n           (Context_List : List_Id;"}, {"sha": "8966e151b0fec0bfa1a53f16fcb8e12f158092fb", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -870,13 +870,34 @@ package body Sem_Ch13 is\n                         New_Occurrence_Of (E, Eloc),\n                         Relocate_Node (Expr)),\n                       Pragma_Identifier            =>\n-                      Make_Identifier (Sloc (Id), Chars (Id)));\n+                        Make_Identifier (Sloc (Id), Chars (Id)));\n \n                   --  We don't have to play the delay game here, since the only\n                   --  values are check names which don't get analyzed anyway.\n \n                   Delay_Required := False;\n \n+               --  Aspects corresponding to stream routines\n+\n+               when Aspect_Input  |\n+                    Aspect_Output |\n+                    Aspect_Read   |\n+                    Aspect_Write  =>\n+\n+                  --  Construct the attribute definition clause\n+\n+                  Aitem :=\n+                    Make_Attribute_Definition_Clause (Loc,\n+                      Name       => Ent,\n+                      Chars      => Chars (Id),\n+                      Expression => Relocate_Node (Expr));\n+\n+                  --  These are always delayed (typically the subprogram that\n+                  --  is referenced cannot have been declared yet, since it has\n+                  --  a reference to the type for which this aspect is defined.\n+\n+                  Delay_Required := True;\n+\n                --  Aspects corresponding to pragmas with two arguments, where\n                --  the second argument is a local name referring to the entity,\n                --  and the first argument is the aspect definition expression."}, {"sha": "37efac8781d8017048410e1ebb99224918e9e1f8", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -99,7 +99,7 @@ package body Sem_Ch4 is\n    --  the operand of the operator node.\n \n    procedure Ambiguous_Operands (N : Node_Id);\n-   --  for equality, membership, and comparison operators with overloaded\n+   --  For equality, membership, and comparison operators with overloaded\n    --  arguments, list possible interpretations.\n \n    procedure Analyze_One_Call"}, {"sha": "761bed9a5d4a75757b42e93f5b00407ee8c5ce3b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -180,7 +180,7 @@ package body Sem_Ch6 is\n    --  entity with that name.\n \n    procedure Install_Entity (E : Entity_Id);\n-   --  Make single entity visible. Used for generic formals as well\n+   --  Make single entity visible (used for generic formals as well)\n \n    function Is_Non_Overriding_Operation\n      (Prev_E : Entity_Id;"}, {"sha": "ae14084bdf6238678bb9dca5b8d36bbbf17b1e0d", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -254,9 +254,8 @@ package body Sem_Ch7 is\n          end if;\n \n          if Is_Package_Or_Generic_Package (Spec_Id)\n-           and then\n-             (Scope (Spec_Id) = Standard_Standard\n-               or else Is_Child_Unit (Spec_Id))\n+           and then (Scope (Spec_Id) = Standard_Standard\n+                      or else Is_Child_Unit (Spec_Id))\n            and then not Unit_Requires_Body (Spec_Id)\n          then\n             if Ada_Version = Ada_83 then"}, {"sha": "c78d4a9e5616720c3a4736cb9aae5ea64ef067c7", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -9451,7 +9451,10 @@ package body Sem_Util is\n                if Comes_From_Source (Exp)\n                  or else Modification_Comes_From_Source\n                then\n-                  if Has_Pragma_Unmodified (Ent) then\n+                  --  Give warning if pragma unmodified given and we are\n+                  --  sure this is a modification.\n+\n+                  if Has_Pragma_Unmodified (Ent) and then Sure then\n                      Error_Msg_NE (\"?pragma Unmodified given for &!\", N, Ent);\n                   end if;\n "}, {"sha": "19612884fa86f8fc06b21ae673348686d3c76c74", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0877856b4ea175fe9d5339752124a2b4faf929ea/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=0877856b4ea175fe9d5339752124a2b4faf929ea", "patch": "@@ -235,7 +235,7 @@ winflush_nt (void)\n   /* Does nothing as there is no problem under NT.  */\n }\n \n-#else\n+#else /* !RTX */\n \n static void winflush_init (void);\n \n@@ -301,9 +301,27 @@ __gnat_is_windows_xp (void)\n   return is_win_xp;\n }\n \n-#endif\n+#endif /* !RTX */\n \n-#endif\n+/* Get the bounds of the stack.  The stack pointer is supposed to be\n+   initialized to BASE when a thread is created and the stack can be extended\n+   to LIMIT before reaching a guard page.\n+   Note: for the main thread, the system automatically extend the stack, so\n+   LIMIT is only the current limit.  */\n+\n+void\n+__gnat_get_stack_bounds (void **base, void **limit)\n+{\n+  NT_TIB *tib;\n+\n+  /* We know that the first field of the TEB is the TIB.  */\n+  tib = (NT_TIB *)NtCurrentTeb ();\n+\n+  *base = tib->StackBase;\n+  *limit = tib->StackLimit;\n+}\n+\n+#endif /* !__MINGW32__ */\n \n #else\n "}]}