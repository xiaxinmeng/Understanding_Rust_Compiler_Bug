{"sha": "ca086b8b8bb3995f369a523e92db4bf0cb763194", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EwODZiOGI4YmIzOTk1ZjM2OWE1MjNlOTJkYjRiZjBjYjc2MzE5NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-12-14T12:07:14Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-12-14T16:04:51Z"}, "message": "gcov: Update comments.\n\ngcc/ChangeLog:\n\n\t* gcov.c (output_json_intermediate_file): Update comments.", "tree": {"sha": "6dabe14263d17919c44622417ae59bd5d81ac2c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dabe14263d17919c44622417ae59bd5d81ac2c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca086b8b8bb3995f369a523e92db4bf0cb763194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca086b8b8bb3995f369a523e92db4bf0cb763194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca086b8b8bb3995f369a523e92db4bf0cb763194", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca086b8b8bb3995f369a523e92db4bf0cb763194/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a21ec1de4e512e2aa26f8cb8e45f5ef98788b203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21ec1de4e512e2aa26f8cb8e45f5ef98788b203", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a21ec1de4e512e2aa26f8cb8e45f5ef98788b203"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "daa1266db86d5fb61d8aaecadef2ab0ea53cafdc", "filename": "gcc/gcov.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca086b8b8bb3995f369a523e92db4bf0cb763194/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca086b8b8bb3995f369a523e92db4bf0cb763194/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=ca086b8b8bb3995f369a523e92db4bf0cb763194", "patch": "@@ -293,7 +293,7 @@ class function_info\n   /* Index of source file where the function is defined.  */\n   unsigned src;\n \n-  /* Vector of line information.  */\n+  /* Vector of line information (used only for group functions).  */\n   vector<line_info> lines;\n \n   /* Next function.  */\n@@ -1172,14 +1172,15 @@ output_json_intermediate_file (json::array *json_files, source_info *src)\n       vector<function_info *> *fns = src->get_functions_at_location (line_num);\n \n       if (fns != NULL)\n-\t/* Print first group functions that begin on the line.  */\n+\t/* Print info for all group functions that begin on the line.  */\n \tfor (vector<function_info *>::iterator it2 = fns->begin ();\n \t     it2 != fns->end (); it2++)\n \t  {\n \t    if (!(*it2)->is_group)\n \t      last_non_group_fn = *it2;\n \n \t    vector<line_info> &lines = (*it2)->lines;\n+\t    /* The LINES array is allocated only for group functions.  */\n \t    for (unsigned i = 0; i < lines.size (); i++)\n \t      {\n \t\tline_info *line = &lines[i];"}]}