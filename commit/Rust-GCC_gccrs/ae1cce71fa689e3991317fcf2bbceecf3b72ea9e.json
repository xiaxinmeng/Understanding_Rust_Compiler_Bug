{"sha": "ae1cce71fa689e3991317fcf2bbceecf3b72ea9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxY2NlNzFmYTY4OWUzOTkxMzE3ZmNmMmJiY2VlY2YzYjcyZWE5ZQ==", "commit": {"author": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2021-09-08T17:28:59Z"}, "committer": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2021-09-10T16:06:58Z"}, "message": "bpf testsuite: add tests for new feature options\n\nThis commit adds tests for the new -mjmpext, -mjmp32 and -malu32 feature\noptions in the BPF backend.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.target/bpf/alu-1.c: New test.\n\t* gcc.target/bpf/jmp-1.c: New test.", "tree": {"sha": "4ece23bba67d268e8e41c7cd7a584aaf33527a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ece23bba67d268e8e41c7cd7a584aaf33527a06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae1cce71fa689e3991317fcf2bbceecf3b72ea9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1cce71fa689e3991317fcf2bbceecf3b72ea9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1cce71fa689e3991317fcf2bbceecf3b72ea9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1cce71fa689e3991317fcf2bbceecf3b72ea9e/comments", "author": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b2ab1d35e41528ea844c6f5ee030f8e032f4c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2ab1d35e41528ea844c6f5ee030f8e032f4c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b2ab1d35e41528ea844c6f5ee030f8e032f4c18"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "98149305e829bdc73aaeeb05669878f34e8270a5", "filename": "gcc/testsuite/gcc.target/bpf/alu-1.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1cce71fa689e3991317fcf2bbceecf3b72ea9e/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Falu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1cce71fa689e3991317fcf2bbceecf3b72ea9e/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Falu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Falu-1.c?ref=ae1cce71fa689e3991317fcf2bbceecf3b72ea9e", "patch": "@@ -0,0 +1,56 @@\n+/* Ensure 32-bit ALU instructions are not generated if -malu32 is\n+   not enabled.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-mno-alu32\" } */\n+\n+int foo (int a, int b)\n+{\n+  a += 1;\n+  b += a;\n+  b -= 5;\n+  a -= a;\n+\n+  a *= 2;\n+  b *= a;\n+\n+  a |= 0xfafa;\n+  b |= a;\n+  b &= 0x00ffff00;\n+  b &= a;\n+\n+  a <<= 2;\n+  b <<= a;\n+  b >>= 5;\n+  a >>= b;\n+\n+  int c = a;\n+  int d = 5;\n+\n+  d ^= a;\n+  c ^= 0xe5e5e5e5;\n+  c = -c;\n+\n+  unsigned int x = a;\n+  unsigned int y = b;\n+  x /= 3;\n+  y /= x;\n+  x %= 4;\n+  y %= x;\n+\n+  return a + b - c + d - x + y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"mov32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"add32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"sub32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"mul32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"div32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"mod32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"neg32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"and32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"or32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"xor32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"rsh32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"lsh32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"arsh32\\t0\" 0 } } */"}, {"sha": "eaf825395efe9803cbeff41404e60b1777cdc624", "filename": "gcc/testsuite/gcc.target/bpf/jmp-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1cce71fa689e3991317fcf2bbceecf3b72ea9e/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fjmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1cce71fa689e3991317fcf2bbceecf3b72ea9e/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fjmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fjmp-1.c?ref=ae1cce71fa689e3991317fcf2bbceecf3b72ea9e", "patch": "@@ -0,0 +1,57 @@\n+/* Ensure jlt, jslt, jle and jsle instructions are not generated if\n+   -mjmpext is not enabled, and no 32-bit jump instructions are generated\n+   if -mjmp32 is not enabled.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-mno-jmpext -mno-jmp32\" } */\n+\n+int foo (int a, int b)\n+{\n+  if (a == 1)\n+    b += 1;\n+  if (a != 3)\n+    b += 2;\n+  if (a > 5)\n+    b += 3;\n+  if (a >= 7)\n+    b += 4;\n+  if (a < 9)\n+    b += 5;\n+  if (a <= 10)\n+    b += 6;\n+\n+  return a + b;\n+}\n+\n+unsigned int bar (unsigned int a, unsigned int b)\n+{\n+  if (a == 1)\n+    b += 1;\n+  if (a != 3)\n+    b += 2;\n+  if (a > 5)\n+    b += 3;\n+  if (a >= 7)\n+    b += 4;\n+  if (a < 9)\n+    b += 5;\n+  if (a <= 10)\n+    b += 6;\n+\n+  return a + b;\n+}\n+\n+/* { dg-final { scan-assembler-times \"jlt\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jslt\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jle\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jsle\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jeq32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jne32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jlt32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jgt32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jle32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jge32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jslt32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jsgt32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jsle32\\t0\" 0 } } */\n+/* { dg-final { scan-assembler-times \"jsge32\\t0\" 0 } } */"}]}