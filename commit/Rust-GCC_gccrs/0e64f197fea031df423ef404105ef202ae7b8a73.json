{"sha": "0e64f197fea031df423ef404105ef202ae7b8a73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU2NGYxOTdmZWEwMzFkZjQyM2VmNDA0MTA1ZWYyMDJhZTdiOGE3Mw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-08-24T10:01:01Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-24T10:01:01Z"}, "message": "sparc.md (TFmode splits): Use reg_overlap_mentioned_p to detect when the source and destination overlap.\n\n        * sparc.md (TFmode splits): Use reg_overlap_mentioned_p to detect\n        when the source and destination overlap.\n\nFrom-SVN: r21933", "tree": {"sha": "26ccd1eacd4a61996ebddf33a63378e6db4c0b24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26ccd1eacd4a61996ebddf33a63378e6db4c0b24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e64f197fea031df423ef404105ef202ae7b8a73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e64f197fea031df423ef404105ef202ae7b8a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e64f197fea031df423ef404105ef202ae7b8a73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e64f197fea031df423ef404105ef202ae7b8a73/comments", "author": null, "committer": null, "parents": [{"sha": "ea90cb6276d90d258aca08accbe17b7702d9f07b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea90cb6276d90d258aca08accbe17b7702d9f07b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea90cb6276d90d258aca08accbe17b7702d9f07b"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "10f8e267a83fdbd7fc568b390c93c05e3d62adfb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e64f197fea031df423ef404105ef202ae7b8a73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e64f197fea031df423ef404105ef202ae7b8a73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e64f197fea031df423ef404105ef202ae7b8a73", "patch": "@@ -1,5 +1,8 @@\n Mon Aug 24 10:25:46 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* sparc.md (TFmode splits): Use reg_overlap_mentioned_p to detect\n+\twhen the source and destination overlap.\n+\n \t* stmt.c (emit_case_nodes): Change rtx_function to rtx_fn to avoid\n \tclash with global type.\n "}, {"sha": "003e39eb92a11724e9004c35a0c74daf0f32ad3b", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e64f197fea031df423ef404105ef202ae7b8a73/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e64f197fea031df423ef404105ef202ae7b8a73/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=0e64f197fea031df423ef404105ef202ae7b8a73", "patch": "@@ -2661,7 +2661,7 @@\n \n   /* Now emit using the real source and destination we found, swapping\n      the order if we detect overlap.  */\n-  if (REGNO (dest1) == REGNO (src2))\n+  if (reg_overlap_mentioned_p (dest1, src2))\n     {\n       emit_insn (gen_movsi (dest2, src2));\n       emit_insn (gen_movsi (dest1, src1));\n@@ -2692,8 +2692,8 @@\n   rtx low_part = gen_lowpart (SImode, operands[0]);\n   int self_reference;\n \n-  self_reference = reg_mentioned_p (operands[0],\n-                                    XEXP (XEXP (word1, 0), 0));\n+  self_reference = reg_overlap_mentioned_p (operands[0],\n+\t\t\t\t\t    XEXP (XEXP (word1, 0), 0));\n   if (self_reference != 0\n       && WORDS_BIG_ENDIAN)\n     {\n@@ -3119,7 +3119,7 @@\n \n   /* Now emit using the real source and destination we found, swapping\n      the order if we detect overlap.  */\n-  if (REGNO(dest1) == REGNO(src2))\n+  if (reg_overlap_mentioned_p (dest1, src2))\n     {\n       emit_insn (gen_movsf (dest2, src2));\n       emit_insn (gen_movsf (dest1, src1));\n@@ -3151,8 +3151,8 @@\n \t\t\t      plus_constant_for_output (XEXP (word0, 0), 4));\n   int self_reference;\n \n-  self_reference = reg_mentioned_p (operands[0],\n-                                    XEXP (XEXP (word1, 0), 0));\n+  self_reference = reg_overlap_mentioned_p (operands[0],\n+\t\t\t\t\t    XEXP (XEXP (word1, 0), 0));\n   if (GET_CODE (operands[0]) == SUBREG)\n     operands[0] = alter_subreg (operands[0]);\n \n@@ -3354,7 +3354,7 @@\n \n   /* Now emit using the real source and destination we found, swapping\n      the order if we detect overlap.  */\n-  if (REGNO(dest1) == REGNO(src2))\n+  if (reg_overlap_mentioned_p (dest1, src2))\n     {\n       emit_insn (gen_movdf (dest2, src2));\n       emit_insn (gen_movdf (dest1, src1));\n@@ -3379,8 +3379,8 @@\n   rtx word1 = change_address (operands[1], DFmode,\n \t\t\t      plus_constant_for_output (XEXP (word0, 0), 8));\n   rtx dest1, dest2;\n-  int self_reference = reg_mentioned_p (operands[0],\n-                                        XEXP (XEXP (word1, 0), 0));\n+  int self_reference = reg_overlap_mentioned_p (operands[0],\n+\t\t\t\t\t\tXEXP (XEXP (word1, 0), 0));\n \n   /* Ugly, but gen_highpart will crap out here for 32-bit targets.  */\n   dest1 = gen_rtx_SUBREG (DFmode, operands[0], WORDS_BIG_ENDIAN == 0);"}]}