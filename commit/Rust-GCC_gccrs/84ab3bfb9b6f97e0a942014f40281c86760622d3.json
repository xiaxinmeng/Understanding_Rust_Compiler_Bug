{"sha": "84ab3bfb9b6f97e0a942014f40281c86760622d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRhYjNiZmI5YjZmOTdlMGE5NDIwMTRmNDAyODFjODY3NjA2MjJkMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-21T21:18:45Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-21T21:18:45Z"}, "message": "(TARGET_SWITCHES): Add SUBTARGET_SWITCHES.\n\n(OVERRIDE_OPTIONS): Add SUBTARGET_OVERRIDE_OPTIONS.\n(SUBTARGET_SWITCHES, SUBTARGET_OVERRIDE_OPTIONS): Define.\n\nFrom-SVN: r4954", "tree": {"sha": "c4b80ba95ae47af2235a21a0255c82f9042ab5de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4b80ba95ae47af2235a21a0255c82f9042ab5de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84ab3bfb9b6f97e0a942014f40281c86760622d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ab3bfb9b6f97e0a942014f40281c86760622d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ab3bfb9b6f97e0a942014f40281c86760622d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ab3bfb9b6f97e0a942014f40281c86760622d3/comments", "author": null, "committer": null, "parents": [{"sha": "1f1ff018a2faa49d0d68d936521bd4fbf8891d45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f1ff018a2faa49d0d68d936521bd4fbf8891d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f1ff018a2faa49d0d68d936521bd4fbf8891d45"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "3650d3b2828b39bfda58ac10226c92958a995720", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ab3bfb9b6f97e0a942014f40281c86760622d3/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ab3bfb9b6f97e0a942014f40281c86760622d3/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=84ab3bfb9b6f97e0a942014f40281c86760622d3", "patch": "@@ -121,9 +121,13 @@ extern int target_flags;\n     { \"68030\", -01400},\t\t\t\t\\\n     { \"68030\", 5},\t\t\t\t\\\n     { \"68040\", 01007},\t\t\t\t\\\n+    SUBTARGET_SWITCHES\t\t\t\t\\\n     { \"\", TARGET_DEFAULT}}\n /* TARGET_DEFAULT is defined in sun*.h and isi.h, etc.  */\n \n+/* This is meant to be redefined in the host dependent files */\n+#define SUBTARGET_SWITCHES\n+\n #ifdef SUPPORT_SUN_FPA\n /* Blow away 68881 flag silently on TARGET_FPA (since we can't clear\n    any bits in TARGET_SWITCHES above) */\n@@ -132,14 +136,19 @@ extern int target_flags;\n   if (TARGET_FPA) target_flags &= ~2;\t\\\n   if (! TARGET_68020 && flag_pic == 2)\t\\\n     error(\"-fPIC is not currently supported on the 68000 or 68010\\n\");\t\\\n+  SUBTARGET_OVERRIDE_OPTIONS\t\t\\\n }\n #else\n #define OVERRIDE_OPTIONS\t\t\\\n {\t\t\t\t\t\\\n   if (! TARGET_68020 && flag_pic == 2)\t\\\n     error(\"-fPIC is not currently supported on the 68000 or 68010\\n\");\t\\\n+  SUBTARGET_OVERRIDE_OPTIONS\t\t\\\n }\n #endif /* defined SUPPORT_SUN_FPA */\n+\n+/* This is meant to be redefined in the host dependent files */\n+#define SUBTARGET_OVERRIDE_OPTIONS\n \f\n /* target machine storage layout */\n "}, {"sha": "0e0f83ff6ee8e422a3e8cd11d3297739bda7a9ad", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ab3bfb9b6f97e0a942014f40281c86760622d3/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ab3bfb9b6f97e0a942014f40281c86760622d3/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=84ab3bfb9b6f97e0a942014f40281c86760622d3", "patch": "@@ -63,8 +63,14 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    the frame pointer (because the return address will get smashed).  */\n \n #define OVERRIDE_OPTIONS \\\n-  do { if (profile_flag || profile_block_flag)\t\\\n-\t flag_omit_frame_pointer = 0, flag_pic = 0; } while (0)\n+{\t\t\t\t\t\t\\\n+  if (profile_flag || profile_block_flag)\t\\\n+    flag_omit_frame_pointer = 0, flag_pic = 0;\t\\\n+  SUBTARGET_OVERRIDE_OPTIONS\t\t\t\\\n+  }\n+\n+/* This is meant to be redefined in the host dependent files */\n+#define SUBTARGET_OVERRIDE_OPTIONS\n \n /* These compiler options take an argument.  We ignore -target for now.  */\n \n@@ -152,9 +158,13 @@ extern int target_flags;\n /*  {\"no-frw\", -256}, */\t\\\n /*  {\"frw-compat\", 256+512}, */\t\\\n /*  {\"no-frw-compat\", -(256+512)}, */ \\\n+    SUBTARGET_SWITCHES\t\t\\\n     { \"\", TARGET_DEFAULT}}\n \n #define TARGET_DEFAULT 3\n+\n+/* This is meant to be redefined in the host dependent files */\n+#define SUBTARGET_SWITCHES\n \f\n /* target machine storage layout */\n "}]}