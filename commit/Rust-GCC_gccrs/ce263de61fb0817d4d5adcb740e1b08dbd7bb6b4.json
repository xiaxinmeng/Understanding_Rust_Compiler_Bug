{"sha": "ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4", "node_id": "C_kwDOANBUbNoAKGNlMjYzZGU2MWZiMDgxN2Q0ZDVhZGNiNzQwZTFiMDhkYmQ3YmI2YjQ", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-01-07T10:11:10Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-11T13:24:49Z"}, "message": "[Ada] Remove unreferenced CCG-specific routine Insert_Declaration\n\ngcc/ada/\n\n\t* exp_util.ads (Insert_Declaration): Remove spec.\n\t* exp_util.adb (Insert_Declaration): Remove body.", "tree": {"sha": "f38139b818a2990b5b2a1e418f696aa1cd63d88d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f38139b818a2990b5b2a1e418f696aa1cd63d88d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d4a5ddc7b124f201d7c6746e07b0ad98be5f702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d4a5ddc7b124f201d7c6746e07b0ad98be5f702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d4a5ddc7b124f201d7c6746e07b0ad98be5f702"}], "stats": {"total": 49, "additions": 0, "deletions": 49}, "files": [{"sha": "64324bfcb72c7ac08790e41270f176d588d590e0", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4", "patch": "@@ -7916,43 +7916,6 @@ package body Exp_Util is\n       end if;\n    end Insert_Actions_After;\n \n-   ------------------------\n-   -- Insert_Declaration --\n-   ------------------------\n-\n-   procedure Insert_Declaration (N : Node_Id; Decl : Node_Id) is\n-      P : Node_Id;\n-\n-   begin\n-      pragma Assert (Nkind (N) in N_Subexpr);\n-\n-      --  Climb until we find a procedure or a package\n-\n-      P := N;\n-      loop\n-         pragma Assert (Present (Parent (P)));\n-         P := Parent (P);\n-\n-         if Is_List_Member (P) then\n-            exit when Nkind (Parent (P)) in\n-                        N_Package_Specification | N_Subprogram_Body;\n-\n-            --  Special handling for handled sequence of statements, we must\n-            --  insert in the statements not the exception handlers!\n-\n-            if Nkind (Parent (P)) = N_Handled_Sequence_Of_Statements then\n-               P := First (Statements (Parent (P)));\n-               exit;\n-            end if;\n-         end if;\n-      end loop;\n-\n-      --  Now do the insertion\n-\n-      Insert_Before (P, Decl);\n-      Analyze (Decl);\n-   end Insert_Declaration;\n-\n    ---------------------------------\n    -- Insert_Library_Level_Action --\n    ---------------------------------"}, {"sha": "0233e566b28a5595c204cd7f92d9120ee15fe782", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=ce263de61fb0817d4d5adcb740e1b08dbd7bb6b4", "patch": "@@ -164,18 +164,6 @@ package Exp_Util is\n    --  generalize to expressions if there is a need but this is tricky to\n    --  implement because of short-circuits (among other things).\n \n-   procedure Insert_Declaration (N : Node_Id; Decl : Node_Id);\n-   --  N must be a subexpression (Nkind in N_Subexpr). This is similar to\n-   --  Insert_Action (N, Decl), but inserts Decl outside the expression in\n-   --  which N appears. This is called Insert_Declaration because the intended\n-   --  use is for declarations that have no associated code. We can't go\n-   --  moving other kinds of things out of the current expression, since they\n-   --  could be executed conditionally (e.g. right operand of short circuit,\n-   --  or THEN/ELSE of if expression). This is currently used only in\n-   --  Modify_Tree_For_C mode, where it is needed because in C we have no\n-   --  way of having declarations within an expression (a really annoying\n-   --  limitation).\n-\n    procedure Insert_Library_Level_Action (N : Node_Id);\n    --  This procedure inserts and analyzes the node N as an action at the\n    --  library level for the current unit (i.e. it is attached to the"}]}