{"sha": "6a9368d941dc626ac70fcb331ce15235b56ddc7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5MzY4ZDk0MWRjNjI2YWM3MGZjYjMzMWNlMTUyMzViNTZkZGM3Yg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-07-13T15:20:21Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2010-07-13T15:20:21Z"}, "message": "re PR objc/44488 (objc test inconsistencies w/ / w/out --enable-build-with-cxx)\n\n\n\tPR objc/44488\n\t* lib/objc-torture.exp (objc-set-runtime-options): Base runtime list\n\ton the target.  Make sure that we can assemble the emitted asm when \n\tthe test type is 'compile'.\n\nFrom-SVN: r162144", "tree": {"sha": "628ba07765a3061dfa337b75759ada04a7c02113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/628ba07765a3061dfa337b75759ada04a7c02113"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a9368d941dc626ac70fcb331ce15235b56ddc7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9368d941dc626ac70fcb331ce15235b56ddc7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9368d941dc626ac70fcb331ce15235b56ddc7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9368d941dc626ac70fcb331ce15235b56ddc7b/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c55c061a89bf2afbfa4eeff80ec9f601d8e513db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55c061a89bf2afbfa4eeff80ec9f601d8e513db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c55c061a89bf2afbfa4eeff80ec9f601d8e513db"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "f0792b5d6c52b8101b2b3dbb068e64a74d240e21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9368d941dc626ac70fcb331ce15235b56ddc7b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9368d941dc626ac70fcb331ce15235b56ddc7b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a9368d941dc626ac70fcb331ce15235b56ddc7b", "patch": "@@ -1,3 +1,10 @@\n+2010-07-13  Iain Sandoe  <iains@gcc.gnu.org>\n+\n+\tPR objc/44488\n+\t* lib/objc-torture.exp (objc-set-runtime-options): Base runtime list\n+\ton the target.  Make sure that we can assemble the emitted asm when \n+\tthe test type is 'compile'.\n+\t\n 2010-07-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/36960"}, {"sha": "d3207a466acf0c6e7ba8b917e3d571a814538c53", "filename": "gcc/testsuite/lib/objc-torture.exp", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9368d941dc626ac70fcb331ce15235b56ddc7b/gcc%2Ftestsuite%2Flib%2Fobjc-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9368d941dc626ac70fcb331ce15235b56ddc7b/gcc%2Ftestsuite%2Flib%2Fobjc-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc-torture.exp?ref=6a9368d941dc626ac70fcb331ce15235b56ddc7b", "patch": "@@ -23,17 +23,24 @@ load_lib target-supports.exp\n # Make sure that the runtime list is re-evaluated for each multilib.\n proc objc-set-runtime-options { dowhat args } {\n     global OBJC_RUNTIME_OPTIONS\n-    if ![info exists OBJC_RUNTIME_OPTIONS] {\n-\tset rtlist [list \"-fgnu-runtime\" \"-fnext-runtime\" ]\n-    } else {\n-\tset rtlist [list \"-fgnu-runtime\" \"-fnext-runtime\" ]\n-\tforeach other $OBJC_RUNTIME_OPTIONS {\n-\t    # Don't do tests twice...\n-\t    if { ( $other == \"-fnext-runtime\"  || $other == \"-fgnu-runtime\" ) } {\n-\t\tcontinue\n-\t    }\n-\t    lappend rtlist $other\n+    set rtlist [list \"-fgnu-runtime\" ]\n+    # At present (4.6), the only NeXT runtime target is Darwin.\n+    # The previously used approach of testing trivial compiles is not reliable\n+    # for determining the absence of the NeXT runtime, since a non-Darwin\n+    # installation can have the objc headers present in the same locations \n+    # that Darwin uses.  If NeXT is ported to another target, then it should\n+    # be listed here.\n+    if [istarget \"*-*-darwin*\" ] {\n+      lappend rtlist \"-fnext-runtime\" \n+    }\n+    if [info exists OBJC_RUNTIME_OPTIONS] {\n+      foreach other $OBJC_RUNTIME_OPTIONS {\n+\t# Don't do tests twice...\n+\tif { ( $other == \"-fnext-runtime\"  || $other == \"-fgnu-runtime\" ) } {\n+\t  continue\n \t}\n+\tlappend rtlist $other\n+      }\n     }\n \n     set OBJC_RUNTIME_OPTIONS \"\"\n@@ -49,8 +56,10 @@ proc objc-set-runtime-options { dowhat args } {\n \tif [info exists dowhat] {\n           switch $dowhat {\n \t    \"compile\" {\n-\t      set compile_type \"assembly\"\n-\t      set output_file \"trivial.s\"\n+              # We should check that the generated asm is sensible, so do \n+              #\u00a0the equivalent of -c.\n+\t      set compile_type \"object\"\n+\t      set output_file \"trivial.o\"\n \t      set comp_output [objc_target_compile \\\n \t        \"$srcdir/$subdir/trivial.m\" \"$output_file\" \"$compile_type\" $options]\n "}]}