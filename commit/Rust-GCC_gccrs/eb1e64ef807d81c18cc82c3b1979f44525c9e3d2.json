{"sha": "eb1e64ef807d81c18cc82c3b1979f44525c9e3d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxZTY0ZWY4MDdkODFjMThjYzgyYzNiMTk3OWY0NDUyNWM5ZTNkMg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@mckinlay.net.nz", "date": "2003-12-07T21:03:49Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2003-12-07T21:03:49Z"}, "message": "Hashtable.java (internalContainsValue): Removed.\n\n\t* java/util/Hashtable.java (internalContainsValue): Removed.\n\t(containsValue): Don't delegate to internalContainsValue.\n\nFrom-SVN: r74399", "tree": {"sha": "a09567998f1ce863b1accce49c0c96aa1838a251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a09567998f1ce863b1accce49c0c96aa1838a251"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb1e64ef807d81c18cc82c3b1979f44525c9e3d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1e64ef807d81c18cc82c3b1979f44525c9e3d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1e64ef807d81c18cc82c3b1979f44525c9e3d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1e64ef807d81c18cc82c3b1979f44525c9e3d2/comments", "author": null, "committer": null, "parents": [{"sha": "63cf211af7291642bb723a58898f78fe1a1cf3de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63cf211af7291642bb723a58898f78fe1a1cf3de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63cf211af7291642bb723a58898f78fe1a1cf3de"}], "stats": {"total": 62, "additions": 23, "deletions": 39}, "files": [{"sha": "98210397a62582eee0735533fa81ec80cdf2f896", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1e64ef807d81c18cc82c3b1979f44525c9e3d2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1e64ef807d81c18cc82c3b1979f44525c9e3d2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=eb1e64ef807d81c18cc82c3b1979f44525c9e3d2", "patch": "@@ -1,3 +1,8 @@\n+2002-12-08  Bryce McKinlay  <bryce@mckinlay.net.nz>\n+\n+\t* java/util/Hashtable.java (internalContainsValue): Removed.\n+\t(containsValue): Don't delegate to internalContainsValue.\n+\n 2003-12-06  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/naming/directory/Attribute.java,"}, {"sha": "9cfa925762aa3c57d8f91bdbadfddeb7df10b791", "filename": "libjava/java/util/Hashtable.java", "status": "modified", "additions": 18, "deletions": 39, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1e64ef807d81c18cc82c3b1979f44525c9e3d2/libjava%2Fjava%2Futil%2FHashtable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1e64ef807d81c18cc82c3b1979f44525c9e3d2/libjava%2Fjava%2Futil%2FHashtable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashtable.java?ref=eb1e64ef807d81c18cc82c3b1979f44525c9e3d2", "patch": "@@ -333,11 +333,22 @@ public Enumeration elements()\n    */\n   public synchronized boolean contains(Object value)\n   {\n-    /* delegate to non-overridable worker method \n-     * to avoid blowing up the stack, when called \n-     * from overridden contains[Value]() method.\n-     */\n-    return internalContainsValue(value);\n+    for (int i = buckets.length - 1; i >= 0; i--)\n+      {\n+        HashEntry e = buckets[i];\n+        while (e != null)\n+          {\n+            if (value.equals(e.value))\n+              return true;\n+            e = e.next;\n+          }\n+      }\n+\n+    // Must throw on null argument even if the table is empty\n+    if (value == null)\n+      throw new NullPointerException();\n+ \n+    return false;  \n   }\n \n   /**\n@@ -354,43 +365,11 @@ public synchronized boolean contains(Object value)\n    */\n   public boolean containsValue(Object value)\n   {\n-    /* delegate to older method to make sure code overwriting it \n-     * continues to work.\n-     */\n+    // Delegate to older method to make sure code overriding it continues \n+    // to work.\n     return contains(value);\n   }\n \n-  /**\n-   * Returns true if this Hashtable contains a value <code>o</code>, such that\n-   * <code>o.equals(value)</code>. This is an internal worker method\n-   * called by <code>contains()</code> and <code>containsValue()</code>.\n-   *\n-   * @param value the value to search for in this Hashtable\n-   * @return true if at least one key maps to the value\n-   * @see #contains(Object)\n-   * @see #containsKey(Object)\n-   * @throws NullPointerException if <code>value</code> is null\n-   */\n-  private boolean internalContainsValue(Object value)\n-  {\n-    for (int i = buckets.length - 1; i >= 0; i--)\n-      {\n-        HashEntry e = buckets[i];\n-        while (e != null)\n-          {\n-            if (value.equals(e.value))\n-              return true;\n-            e = e.next;\n-          }\n-      }\n-\n-    // Must throw on null argument even if the table is empty\n-    if (value == null)\n-      throw new NullPointerException();\n- \n-    return false;\n-  }\n-\n   /**\n    * Returns true if the supplied object <code>equals()</code> a key\n    * in this Hashtable."}]}