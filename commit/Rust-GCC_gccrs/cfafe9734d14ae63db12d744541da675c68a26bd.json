{"sha": "cfafe9734d14ae63db12d744541da675c68a26bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZhZmU5NzM0ZDE0YWU2M2RiMTJkNzQ0NTQxZGE2NzVjNjhhMjZiZA==", "commit": {"author": {"name": "Robert Millan", "email": "robertmh@gnu.org", "date": "2004-06-24T02:56:23Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2004-06-24T02:56:23Z"}, "message": "Patch from Robert Millan.\n\n* config.gcc: Merge kfreebsd*-gnu with linux* and add knetbsd*-gnu.\n* config/i386/linux.h: Allow overriding of LINK_EMULATION,\n  DYNAMIC_LINKER and register names in sc_ structure.\n* config/kfreebsd-gnu.h: New. kfreebsd-gnu followup for linux.h.\n* config/i386/kfreebsd-gnu.h: New. Ditto for i386-kfreebsd-gnu.\n* config/knetbsd-gnu.h: New. Ditto for knetbsd-gnu.\n* config/i386/knetbsd-gnu.h: New. Ditto for i386-knetbsd-gnu.\n* config/kfreebsdgnu.h: Remove.\n* config/t-kfreebsd-gnu: Likewise.\n* config/i386/kfreebsdgnu.h: Likewise.\n\nFrom-SVN: r83577", "tree": {"sha": "611b7c19931269b92d455ba78be01fea92ceb74f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/611b7c19931269b92d455ba78be01fea92ceb74f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfafe9734d14ae63db12d744541da675c68a26bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfafe9734d14ae63db12d744541da675c68a26bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfafe9734d14ae63db12d744541da675c68a26bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfafe9734d14ae63db12d744541da675c68a26bd/comments", "author": null, "committer": null, "parents": [{"sha": "d18227544985fbd2e01d73c706ae3bcc24f00d98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d18227544985fbd2e01d73c706ae3bcc24f00d98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d18227544985fbd2e01d73c706ae3bcc24f00d98"}], "stats": {"total": 261, "additions": 148, "deletions": 113}, "files": [{"sha": "9739978aa528ae6c738300d38eeac31af3b5074d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfafe9734d14ae63db12d744541da675c68a26bd", "patch": "@@ -1,3 +1,17 @@\n+2004-06-23  Robert Millan  <robertmh@gnu.org>\n+\n+\t* config.gcc: Merge kfreebsd*-gnu with linux* and add knetbsd*-gnu.\n+\t* config/i386/linux.h: Allow overriding of LINK_EMULATION,\n+\t  DYNAMIC_LINKER and register names in sc_ structure.\n+\t* config/kfreebsd-gnu.h: New. kfreebsd-gnu followup for linux.h.\n+\t* config/i386/kfreebsd-gnu.h: New. Ditto for i386-kfreebsd-gnu.\n+\t* config/knetbsd-gnu.h: New. Ditto for knetbsd-gnu.\n+\t* config/i386/knetbsd-gnu.h: New. Ditto for i386-knetbsd-gnu.\n+\n+\t* config/kfreebsdgnu.h: Remove.\n+\t* config/t-kfreebsd-gnu: Likewise.\n+\t* config/i386/kfreebsdgnu.h: Likewise.\n+\n 2004-06-23  Eric Christopher  <echristo@redhat.com>\n \n \t* fold-const.c (make_range): Cleanup type checking through function."}, {"sha": "aa0399614f0fb3eef54c779648527e15954b1f49", "filename": "gcc/config.gcc", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=cfafe9734d14ae63db12d744541da675c68a26bd", "patch": "@@ -412,21 +412,10 @@ case ${target} in\n   esac\n   fbsd_tm_file=\"${fbsd_tm_file} freebsd-spec.h freebsd.h\"\n   ;;\n-*-*-kfreebsd*-gnu)\n-  # Must come before *-*-gnu*\n-  xm_defines=POSIX # needed for cross-compiling from FreeBSD?\n-  extra_parts=\"crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o\"\n-  # GNU tools are the only tools.\n-  gas=yes\n-  gnu_ld=yes\n-  case ${enable_threads} in\n-    \"\" | yes | posix) thread_file='posix' ;;\n-  esac\n-  ;;\n *-*-linux*libc1* | *-*-linux*aout*)\n   # Avoid the generic linux case.\n   ;;\n-*-*-linux* | frv-*-*linux*)\n+*-*-linux* | frv-*-*linux* | *-*-kfreebsd*-gnu | *-*-knetbsd*-gnu)\n   # Must come before *-*-gnu* (because of *-*-linux-gnu* systems).\n   extra_parts=\"crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o\"\n   gas=yes\n@@ -926,23 +915,21 @@ i[34567]86-*-coff*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/i386-coff.h\"\n \tuse_fixproto=yes\n \t;;\n-i[34567]86-*-linux*)\t# Intel 80386's running GNU/Linux\n+i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu)\n+\t\t\t# Intel 80386's running GNU/*\n \t\t\t# with ELF format using glibc 2\n-\t\t\t# aka GNU/Linux C library 6\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h linux.h i386/linux.h\"\n+\tcase ${target} in\n+\ti[34567]86-*-knetbsd*-gnu) tm_file=\"${tm_file} knetbsd-gnu.h i386/knetbsd-gnu.h\" ;;\n+\ti[34567]86-*-kfreebsd*-gnu) tm_file=\"${tm_file} kfreebsd-gnu.h i386/kfreebsd-gnu.h\" ;;\n+\tesac\n \ttmake_file=\"${tmake_file} i386/t-crtstuff\"\n \t;;\n x86_64-*-linux*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h linux.h \\\n \t\t i386/x86-64.h i386/linux64.h\"\n \ttmake_file=\"${tmake_file} i386/t-linux64\"\n \t;;\n-i[34567]86-*-kfreebsd*-gnu) # must be before i[34567]86-*-gnu*\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h linux.h i386/linux.h kfreebsdgnu.h i386/kfreebsdgnu.h\"\n-\ttmake_file=\"t-slibgcc-elf-ver t-kfreebsd-gnu i386/t-crtstuff\"\n-\tfloat_format=i386\n-\tuse_fixproto=no\n-\t;;\n i[34567]86-*-gnu*)\n \t;;\n i[34567]86-pc-msdosdjgpp*)"}, {"sha": "884777d50c9b822893c69835fc1e2e80cda18c89", "filename": "gcc/config/i386/kfreebsd-gnu.h", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fi386%2Fkfreebsd-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fi386%2Fkfreebsd-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fkfreebsd-gnu.h?ref=cfafe9734d14ae63db12d744541da675c68a26bd", "patch": "@@ -0,0 +1,26 @@\n+/* Definitions for Intel 386 running kFreeBSD-based GNU systems with ELF format\n+   Copyright (C) 2004\n+   Free Software Foundation, Inc.\n+   Contributed by Robert Millan.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#undef LINK_EMULATION\n+#define LINK_EMULATION \"elf_i386_fbsd\"\n+#undef REG_NAME\n+#define REG_NAME(reg) sc_ ## reg"}, {"sha": "a1cda7bcbb5cb18d02a22c6dd5f0db429c7a2adf", "filename": "gcc/config/i386/knetbsd-gnu.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fi386%2Fknetbsd-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fi386%2Fknetbsd-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fknetbsd-gnu.h?ref=cfafe9734d14ae63db12d744541da675c68a26bd", "patch": "@@ -0,0 +1,24 @@\n+/* Definitions for Intel 386 running kNetBSD-based GNU systems with ELF format\n+   Copyright (C) 2004\n+   Free Software Foundation, Inc.\n+   Contributed by Robert Millan.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#undef REG_NAME\n+#define REG_NAME(reg) sc_ ## reg"}, {"sha": "85e6cf2c98f4f6f4eeffa7c04f9d22dea728c443", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=cfafe9734d14ae63db12d744541da675c68a26bd", "patch": "@@ -108,24 +108,26 @@ Boston, MA 02111-1307, USA.  */\n \n /* If ELF is the default format, we should not use /lib/elf.  */\n \n-#undef\tLINK_SPEC\n+#define LINK_EMULATION \"elf_i386\"\n #ifdef USE_GNULIBC_1\n-#define LINK_SPEC \"-m elf_i386 %{shared:-shared} \\\n-  %{!shared: \\\n-    %{!ibcs: \\\n-      %{!static: \\\n-\t%{rdynamic:-export-dynamic} \\\n-\t%{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.1}} \\\n-\t%{static:-static}}}\"\n+# define DYNAMIC_LINKER \"/lib/ld-linux.so.1\"\n #else\n-#define LINK_SPEC \"-m elf_i386 %{shared:-shared} \\\n+# define DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n+#endif\n+\n+#undef  SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS \\\n+  { \"link_emulation\", LINK_EMULATION },\\\n+  { \"dynamic_linker\", DYNAMIC_LINKER }\n+\n+#undef\tLINK_SPEC\n+#define LINK_SPEC \"-m %(link_emulation) %{shared:-shared} \\\n   %{!shared: \\\n     %{!ibcs: \\\n       %{!static: \\\n \t%{rdynamic:-export-dynamic} \\\n-\t%{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.2}} \\\n+\t%{!dynamic-linker:-dynamic-linker %(dynamic_linker)}} \\\n \t%{static:-static}}}\"\n-#endif\n \n /* A C statement (sans semicolon) to output to the stdio stream\n    FILE the assembler definition of uninitialized global DECL named\n@@ -217,6 +219,8 @@ Boston, MA 02111-1307, USA.  */\n #include <signal.h>\n #include <sys/ucontext.h>\n \n+#define REG_NAME(reg) reg\n+\n #define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS, SUCCESS)\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     unsigned char *pc_ = (CONTEXT)->ra;\t\t\t\t\t\\\n@@ -245,28 +249,28 @@ Boston, MA 02111-1307, USA.  */\n     else\t\t\t\t\t\t\t\t\\\n       break;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    new_cfa_ = sc_->esp;\t\t\t\t\t\t\\\n+    new_cfa_ = sc_->REG_NAME(esp);\t\t\t\t\t\t\\\n     (FS)->cfa_how = CFA_REG_OFFSET;\t\t\t\t\t\\\n     (FS)->cfa_reg = 4;\t\t\t\t\t\t\t\\\n     (FS)->cfa_offset = new_cfa_ - (long) (CONTEXT)->cfa;\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n     /* The SVR4 register numbering macros aren't usable in libgcc.  */\t\\\n     (FS)->regs.reg[0].how = REG_SAVED_OFFSET;\t\t\t\t\\\n-    (FS)->regs.reg[0].loc.offset = (long)&sc_->eax - new_cfa_;\t\t\\\n+    (FS)->regs.reg[0].loc.offset = (long)&sc_->REG_NAME(eax) - new_cfa_;\t\\\n     (FS)->regs.reg[3].how = REG_SAVED_OFFSET;\t\t\t\t\\\n-    (FS)->regs.reg[3].loc.offset = (long)&sc_->ebx - new_cfa_;\t\t\\\n+    (FS)->regs.reg[3].loc.offset = (long)&sc_->REG_NAME(ebx) - new_cfa_;\t\\\n     (FS)->regs.reg[1].how = REG_SAVED_OFFSET;\t\t\t\t\\\n-    (FS)->regs.reg[1].loc.offset = (long)&sc_->ecx - new_cfa_;\t\t\\\n+    (FS)->regs.reg[1].loc.offset = (long)&sc_->REG_NAME(ecx) - new_cfa_;\t\\\n     (FS)->regs.reg[2].how = REG_SAVED_OFFSET;\t\t\t\t\\\n-    (FS)->regs.reg[2].loc.offset = (long)&sc_->edx - new_cfa_;\t\t\\\n+    (FS)->regs.reg[2].loc.offset = (long)&sc_->REG_NAME(edx) - new_cfa_;\t\\\n     (FS)->regs.reg[6].how = REG_SAVED_OFFSET;\t\t\t\t\\\n-    (FS)->regs.reg[6].loc.offset = (long)&sc_->esi - new_cfa_;\t\t\\\n+    (FS)->regs.reg[6].loc.offset = (long)&sc_->REG_NAME(esi) - new_cfa_;\t\\\n     (FS)->regs.reg[7].how = REG_SAVED_OFFSET;\t\t\t\t\\\n-    (FS)->regs.reg[7].loc.offset = (long)&sc_->edi - new_cfa_;\t\t\\\n+    (FS)->regs.reg[7].loc.offset = (long)&sc_->REG_NAME(edi) - new_cfa_;\t\\\n     (FS)->regs.reg[5].how = REG_SAVED_OFFSET;\t\t\t\t\\\n-    (FS)->regs.reg[5].loc.offset = (long)&sc_->ebp - new_cfa_;\t\t\\\n+    (FS)->regs.reg[5].loc.offset = (long)&sc_->REG_NAME(ebp) - new_cfa_;\t\\\n     (FS)->regs.reg[8].how = REG_SAVED_OFFSET;\t\t\t\t\\\n-    (FS)->regs.reg[8].loc.offset = (long)&sc_->eip - new_cfa_;\t\t\\\n+    (FS)->regs.reg[8].loc.offset = (long)&sc_->REG_NAME(eip) - new_cfa_;\t\\\n     (FS)->retaddr_column = 8;\t\t\t\t\t\t\\\n     goto SUCCESS;\t\t\t\t\t\t\t\\\n   } while (0)"}, {"sha": "953c69cc083a6937d87143f2dcb50243c93b5958", "filename": "gcc/config/kfreebsd-gnu.h", "status": "renamed", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fkfreebsd-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fkfreebsd-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fkfreebsd-gnu.h?ref=cfafe9734d14ae63db12d744541da675c68a26bd", "patch": "@@ -1,6 +1,7 @@\n-/* Definitions for Intel 386 running GNU/KFreeBSD systems with ELF format.\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-   Contributed by Bruno Haible.\n+/* Definitions for kFreeBSD-based GNU systems with ELF format\n+   Copyright (C) 2004\n+   Free Software Foundation, Inc.\n+   Contributed by Robert Millan.\n \n This file is part of GCC.\n \n@@ -19,17 +20,17 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (i386 KFreeBSD/ELF)\");\n+#undef LINUX_TARGET_OS_CPP_BUILTINS    \n+#define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__FreeBSD_kernel__\");\t\\\n+\tbuiltin_define (\"__GLIBC__\");\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=posix\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n-/* FIXME: Is a KFreeBSD-specific fallback mechanism necessary?  */\n-#undef MD_FALLBACK_FRAME_STATE_FOR\n-\n-#undef LINK_SPEC\n-#define LINK_SPEC \"-m elf_i386_fbsd %{shared:-shared} \\\n-  %{!shared: \\\n-    %{!ibcs: \\\n-      %{!static: \\\n-\t%{rdynamic:-export-dynamic} \\\n-\t%{!dynamic-linker:-dynamic-linker /lib/ld.so.1}} \\\n-\t%{static:-static}}}\"\n+#undef DYNAMIC_LINKER\n+#define DYNAMIC_LINKER \"/lib/ld.so.1\"", "previous_filename": "gcc/config/i386/kfreebsdgnu.h"}, {"sha": "ad8d68c3f21f215a21d134fe623f4e3daf803c0d", "filename": "gcc/config/kfreebsdgnu.h", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18227544985fbd2e01d73c706ae3bcc24f00d98/gcc%2Fconfig%2Fkfreebsdgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18227544985fbd2e01d73c706ae3bcc24f00d98/gcc%2Fconfig%2Fkfreebsdgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fkfreebsdgnu.h?ref=d18227544985fbd2e01d73c706ae3bcc24f00d98", "patch": "@@ -1,41 +0,0 @@\n-/* Definitions for GNU/KFreeBSD systems with ELF format.\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n-   Contributed by Bruno Haible.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef WCHAR_TYPE\n-#define WCHAR_TYPE \"int\"\n-\n-#undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n-  builtin_define (\"__GNU_KFreeBSD__=0\");\t\t\\\n-  builtin_define (\"__gnu_kfreebsd__=0\");\t\t\\\n-  builtin_define (\"__FreeBSD_kernel__=5\");\t\t\\\n-  builtin_define (\"__ELF__\");\t\t\t\t\\\n-  builtin_define_std (\"unix\");\t\t\t\t\\\n-  builtin_assert (\"system=posix\");\n-\n-#undef TARGET_CPU_CPP_BUILTINS\n-#define TARGET_CPU_CPP_BUILTINS()\t\t\t\\\n-  builtin_define (\"__i386__\");\t\t\t\t\\\n-  builtin_define_std (\"i386\");\t\t\t\t\\\n-  builtin_assert (\"cpu=i386\");\t\t\t\t\\\n-  builtin_assert (\"machine=i386\");\n-\n-/* do {} while (0) */"}, {"sha": "744cfc23de7dc9ab13435cd0a508d2274eeacb22", "filename": "gcc/config/knetbsd-gnu.h", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fknetbsd-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfafe9734d14ae63db12d744541da675c68a26bd/gcc%2Fconfig%2Fknetbsd-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fknetbsd-gnu.h?ref=cfafe9734d14ae63db12d744541da675c68a26bd", "patch": "@@ -0,0 +1,36 @@\n+/* Definitions for kNetBSD-based GNU systems with ELF format\n+   Copyright (C) 2004\n+   Free Software Foundation, Inc.\n+   Contributed by Robert Millan.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#undef LINUX_TARGET_OS_CPP_BUILTINS    \n+#define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__NetBSD_kernel__\");\t\\\n+\tbuiltin_define (\"__GLIBC__\");\t\t\\\n+\tbuiltin_define_std (\"unix\");\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\\\n+\tbuiltin_assert (\"system=posix\");\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n+#undef DYNAMIC_LINKER\n+#define DYNAMIC_LINKER \"/lib/ld.so.1\""}, {"sha": "a40dc7a568a218ca7e008a9e714727d3a4679494", "filename": "gcc/config/t-kfreebsd-gnu", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d18227544985fbd2e01d73c706ae3bcc24f00d98/gcc%2Fconfig%2Ft-kfreebsd-gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d18227544985fbd2e01d73c706ae3bcc24f00d98/gcc%2Fconfig%2Ft-kfreebsd-gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-kfreebsd-gnu?ref=d18227544985fbd2e01d73c706ae3bcc24f00d98", "patch": "@@ -1,16 +0,0 @@\n-# glibc provides a limits.h, which must be combined with gcc's limits.h.\n-LIMITS_H_TEST = true\n-\n-# Compile crtbeginS.o and crtendS.o with pic.\n-CRTSTUFF_T_CFLAGS_S = -fPIC\n-# Compile libgcc2.a with pic.\n-TARGET_LIBGCC2_CFLAGS = -fPIC\n-\n-# Override t-slibgcc-elf-ver to export some libgcc symbols with\n-# the symbol versions that glibc used.\n-SHLIB_MAPFILES += $(srcdir)/config/libgcc-glibc.ver\n-\n-# Use unwind-dw2-fde-glibc\n-LIB2ADDEH = $(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde-glibc.c \\\n-  $(srcdir)/unwind-sjlj.c\n-LIB2ADDEHDEP = unwind.inc unwind-dw2-fde.h unwind-dw2-fde.c"}]}