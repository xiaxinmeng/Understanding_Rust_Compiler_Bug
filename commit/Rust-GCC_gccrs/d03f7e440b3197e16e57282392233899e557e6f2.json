{"sha": "d03f7e440b3197e16e57282392233899e557e6f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAzZjdlNDQwYjMxOTdlMTZlNTcyODIzOTIyMzM4OTllNTU3ZTZmMg==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim.kuvyrkov@linaro.org", "date": "2015-01-17T01:06:17Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2015-01-17T01:06:17Z"}, "message": "Enable max_issue for AArch32 and AArch64\n\nEnable max_issue for AArch32 and AArch64\n\t* config/aarch64/aarch64.c\n\t(aarch64_sched_first_cycle_multipass_dfa_lookahead): Implement hook.\n\t(TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD): Define.\n\t* config/arm/arm.c\n\t(arm_first_cycle_multipass_dfa_lookahead): Implement hook.\n\t(TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD): Define.\n\nFrom-SVN: r219787", "tree": {"sha": "2b95f6ab2dd3441b6b44fa9429f314f49bed18c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b95f6ab2dd3441b6b44fa9429f314f49bed18c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d03f7e440b3197e16e57282392233899e557e6f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d03f7e440b3197e16e57282392233899e557e6f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d03f7e440b3197e16e57282392233899e557e6f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d03f7e440b3197e16e57282392233899e557e6f2/comments", "author": {"login": "maxim-kuvyrkov", "id": 12545699, "node_id": "MDQ6VXNlcjEyNTQ1Njk5", "avatar_url": "https://avatars.githubusercontent.com/u/12545699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxim-kuvyrkov", "html_url": "https://github.com/maxim-kuvyrkov", "followers_url": "https://api.github.com/users/maxim-kuvyrkov/followers", "following_url": "https://api.github.com/users/maxim-kuvyrkov/following{/other_user}", "gists_url": "https://api.github.com/users/maxim-kuvyrkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxim-kuvyrkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxim-kuvyrkov/subscriptions", "organizations_url": "https://api.github.com/users/maxim-kuvyrkov/orgs", "repos_url": "https://api.github.com/users/maxim-kuvyrkov/repos", "events_url": "https://api.github.com/users/maxim-kuvyrkov/events{/privacy}", "received_events_url": "https://api.github.com/users/maxim-kuvyrkov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25d1a5a74d172683fac3e62816ff0aef8ad3b379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25d1a5a74d172683fac3e62816ff0aef8ad3b379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25d1a5a74d172683fac3e62816ff0aef8ad3b379"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "1d20442f3abc19fad64ec0ab8b619a22f7012409", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d03f7e440b3197e16e57282392233899e557e6f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d03f7e440b3197e16e57282392233899e557e6f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d03f7e440b3197e16e57282392233899e557e6f2", "patch": "@@ -1,3 +1,12 @@\n+2015-01-17  Maxim Kuvyrkov  <maxim.kuvyrkov@linaro.org>\n+\n+\t* config/aarch64/aarch64.c\n+\t(aarch64_sched_first_cycle_multipass_dfa_lookahead): Implement hook.\n+\t(TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD): Define.\n+\t* config/arm/arm.c\n+\t(arm_first_cycle_multipass_dfa_lookahead): Implement hook.\n+\t(TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD): Define.\n+\n 2015-01-17  Alan Modra  <amodra@gmail.com>\n \n \t* cprop.c (do_local_cprop): Disallow replacement of fixed"}, {"sha": "a89bb417ede1e26a5eabfbb84e63d68d5369be16", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d03f7e440b3197e16e57282392233899e557e6f2/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d03f7e440b3197e16e57282392233899e557e6f2/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d03f7e440b3197e16e57282392233899e557e6f2", "patch": "@@ -94,6 +94,7 @@\n #include \"builtins.h\"\n #include \"rtl-iter.h\"\n #include \"tm-constrs.h\"\n+#include \"sched-int.h\"\n \n /* Defined for convenience.  */\n #define POINTER_BYTES (POINTER_SIZE / BITS_PER_UNIT)\n@@ -6499,6 +6500,14 @@ aarch64_sched_issue_rate (void)\n   return aarch64_tune_params->issue_rate;\n }\n \n+static int\n+aarch64_sched_first_cycle_multipass_dfa_lookahead (void)\n+{\n+  int issue_rate = aarch64_sched_issue_rate ();\n+\n+  return issue_rate > 1 && !sched_fusion ? issue_rate : 0;\n+}\n+\n /* Vectorizer cost model target hooks.  */\n \n /* Implement targetm.vectorize.builtin_vectorization_cost.  */\n@@ -11387,6 +11396,10 @@ aarch64_gen_adjusted_ldpstp (rtx *operands, bool load,\n #undef TARGET_SCHED_ISSUE_RATE\n #define TARGET_SCHED_ISSUE_RATE aarch64_sched_issue_rate\n \n+#undef TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD\n+#define TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD \\\n+  aarch64_sched_first_cycle_multipass_dfa_lookahead\n+\n #undef TARGET_TRAMPOLINE_INIT\n #define TARGET_TRAMPOLINE_INIT aarch64_trampoline_init\n "}, {"sha": "337a69b43e00179fd8944e19920781b1dd706039", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d03f7e440b3197e16e57282392233899e557e6f2/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d03f7e440b3197e16e57282392233899e557e6f2/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=d03f7e440b3197e16e57282392233899e557e6f2", "patch": "@@ -268,6 +268,7 @@ static unsigned HOST_WIDE_INT arm_shift_truncation_mask (machine_mode);\n static bool arm_macro_fusion_p (void);\n static bool arm_cannot_copy_insn_p (rtx_insn *);\n static int arm_issue_rate (void);\n+static int arm_first_cycle_multipass_dfa_lookahead (void);\n static void arm_output_dwarf_dtprel (FILE *, int, rtx) ATTRIBUTE_UNUSED;\n static bool arm_output_addr_const_extra (FILE *, rtx);\n static bool arm_allocate_stack_slots_for_args (void);\n@@ -624,6 +625,10 @@ static const struct attribute_spec arm_attribute_table[] =\n #undef TARGET_SCHED_ISSUE_RATE\n #define TARGET_SCHED_ISSUE_RATE arm_issue_rate\n \n+#undef TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD\n+#define TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD \\\n+  arm_first_cycle_multipass_dfa_lookahead\n+\n #undef TARGET_MANGLE_TYPE\n #define TARGET_MANGLE_TYPE arm_mangle_type\n \n@@ -27138,6 +27143,16 @@ arm_issue_rate (void)\n     }\n }\n \n+/* Return how many instructions should scheduler lookahead to choose the\n+   best one.  */\n+static int\n+arm_first_cycle_multipass_dfa_lookahead (void)\n+{\n+  int issue_rate = arm_issue_rate ();\n+\n+  return issue_rate > 1 && !sched_fusion ? issue_rate : 0;\n+}\n+\n const char *\n arm_mangle_type (const_tree type)\n {"}]}