{"sha": "022ed1787e398b279fa7afba30e4c9847d56bb9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIyZWQxNzg3ZTM5OGIyNzlmYTdhZmJhMzBlNGM5ODQ3ZDU2YmI5Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T10:13:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T10:13:59Z"}, "message": "[multiple changes]\n\n2014-07-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration): New\n\tpredicate Discriminated_Size, to distinguish between private\n\tcomponents that depend on discriminants from those whose size\n\tdepends on some other non-static expression.\n\n2014-07-31  Nicolas Setton  <setton@adacore.com>\n\n\t* g-exptty.adb (Close): Fix binding to Waitpid: use the\n\ttty version.\n\nFrom-SVN: r213341", "tree": {"sha": "e9b421464ed852e525b3031fc8124e10ad433986", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9b421464ed852e525b3031fc8124e10ad433986"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/022ed1787e398b279fa7afba30e4c9847d56bb9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/022ed1787e398b279fa7afba30e4c9847d56bb9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/022ed1787e398b279fa7afba30e4c9847d56bb9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/022ed1787e398b279fa7afba30e4c9847d56bb9f/comments", "author": null, "committer": null, "parents": [{"sha": "936ddf9211b071868cef7351978fd3d216bd178f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/936ddf9211b071868cef7351978fd3d216bd178f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/936ddf9211b071868cef7351978fd3d216bd178f"}], "stats": {"total": 129, "additions": 111, "deletions": 18}, "files": [{"sha": "8daa4dc2a376db29eee1a30663b452d977db0abd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/022ed1787e398b279fa7afba30e4c9847d56bb9f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/022ed1787e398b279fa7afba30e4c9847d56bb9f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=022ed1787e398b279fa7afba30e4c9847d56bb9f", "patch": "@@ -1,3 +1,15 @@\n+2014-07-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Protected_Type_Declaration): New\n+\tpredicate Discriminated_Size, to distinguish between private\n+\tcomponents that depend on discriminants from those whose size\n+\tdepends on some other non-static expression.\n+\n+2014-07-31  Nicolas Setton  <setton@adacore.com>\n+\n+\t* g-exptty.adb (Close): Fix binding to Waitpid: use the\n+\ttty version.\n+\n 2014-07-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Make_Index): Reject properly the use of 'Length"}, {"sha": "cbd522e360839bd1a4bc6e7c2accfd16696e5768", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 85, "deletions": 8, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/022ed1787e398b279fa7afba30e4c9847d56bb9f/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/022ed1787e398b279fa7afba30e4c9847d56bb9f/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=022ed1787e398b279fa7afba30e4c9847d56bb9f", "patch": "@@ -8877,6 +8877,12 @@ package body Exp_Ch9 is\n       --  to the internal body, for possible inlining later on. The source\n       --  operation is invisible to the back-end and is never actually called.\n \n+      function Discriminated_Size (Comp : Entity_Id) return Boolean;\n+      --  If a component size is not static then a warning will be emitted\n+      --  in Ravenscar or other restricted contexts. When a component is non-\n+      --  static because of a discriminant constraint we can specialize the\n+      --  warning by mentioning discriminants explicitly.\n+\n       procedure Expand_Entry_Declaration (Comp : Entity_Id);\n       --  Create the subprograms for the barrier and for the body, and append\n       --  then to Entry_Bodies_Array.\n@@ -8904,9 +8910,65 @@ package body Exp_Ch9 is\n          end if;\n       end Check_Inlining;\n \n-      ---------------------------------\n-      -- Check_Static_Component_Size --\n-      ---------------------------------\n+      ------------------------\n+      -- Discriminated_Size --\n+      ------------------------\n+\n+      function Discriminated_Size (Comp : Entity_Id) return Boolean\n+      is\n+         Typ   : constant Entity_Id := Etype (Comp);\n+         Index : Node_Id;\n+\n+         function Non_Static_Bound (Bound : Node_Id) return Boolean;\n+         --  Check whether the bound of an index is non-static and does\n+         --  denote a discriminant, in which case any protected object of\n+         --  the type will have a non-static size.\n+\n+         ----------------------\n+         -- Non_Static_Bound --\n+         ----------------------\n+\n+         function Non_Static_Bound (Bound : Node_Id) return Boolean is\n+         begin\n+            if Is_Static_Expression (Bound) then\n+               return False;\n+\n+            elsif Is_Entity_Name (Bound)\n+               and then Present (Discriminal_Link (Entity (Bound)))\n+            then\n+               return False;\n+\n+            else\n+               return True;\n+            end if;\n+         end Non_Static_Bound;\n+\n+      begin\n+         if not Is_Array_Type (Typ) then\n+            return False;\n+         end if;\n+\n+         if Ekind (Typ) = E_Array_Subtype then\n+            Index := First_Index (Typ);\n+            while Present (Index) loop\n+               if Non_Static_Bound (Low_Bound (Index))\n+                 or else Non_Static_Bound (High_Bound (Index))\n+               then\n+                  return False;\n+               end if;\n+\n+               Next_Index (Index);\n+            end loop;\n+\n+            return True;\n+         end if;\n+\n+         return False;\n+      end Discriminated_Size;\n+\n+      ---------------------------\n+      -- Static_Component_Size --\n+      ---------------------------\n \n       function Static_Component_Size (Comp : Entity_Id) return Boolean is\n          Typ : constant Entity_Id := Etype (Comp);\n@@ -9100,11 +9162,26 @@ package body Exp_Ch9 is\n                      Check_Restriction (No_Implicit_Heap_Allocations, Priv);\n \n                   elsif Restriction_Active (No_Implicit_Heap_Allocations) then\n-                     Error_Msg_N (\"component has non-static size??\", Priv);\n-                     Error_Msg_NE\n-                       (\"\\creation of protected object of type& will violate\"\n-                        & \" restriction No_Implicit_Heap_Allocations??\",\n-                        Priv, Prot_Typ);\n+                     if not Discriminated_Size (Defining_Identifier (Priv))\n+                     then\n+\n+                        --  Any object of the type will be  non-static.\n+\n+                        Error_Msg_N (\"component has non-static size??\", Priv);\n+                        Error_Msg_NE\n+                          (\"\\creation of protected object of type& will\"\n+                           & \" violate restriction \"\n+                           & \"No_Implicit_Heap_Allocations??\", Priv, Prot_Typ);\n+                     else\n+\n+                        --  Object will be non-static if discriminants are.\n+\n+                        Error_Msg_NE\n+                          (\"creation of protected object of type& with \"\n+                           &  \"non-static discriminants  will violate\"\n+                           & \" restriction No_Implicit_Heap_Allocations??\",\n+                           Priv, Prot_Typ);\n+                     end if;\n                   end if;\n                end if;\n "}, {"sha": "3e7819369a56f7f6d659795a81e2c6f9876e8a9d", "filename": "gcc/ada/g-exptty.adb", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/022ed1787e398b279fa7afba30e4c9847d56bb9f/gcc%2Fada%2Fg-exptty.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/022ed1787e398b279fa7afba30e4c9847d56bb9f/gcc%2Fada%2Fg-exptty.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-exptty.adb?ref=022ed1787e398b279fa7afba30e4c9847d56bb9f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                    Copyright (C) 2000-2011, AdaCore                      --\n+--                    Copyright (C) 2000-2014, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,7 +50,7 @@ package body GNAT.Expect.TTY is\n       pragma Import (C, Terminate_Process, \"__gnat_terminate_process\");\n \n       function Waitpid (Process : System.Address) return Integer;\n-      pragma Import (C, Waitpid, \"__gnat_waitpid\");\n+      pragma Import (C, Waitpid, \"__gnat_tty_waitpid\");\n       --  Wait for a specific process id, and return its exit code\n \n       procedure Free_Process (Process : System.Address);\n@@ -66,6 +66,18 @@ package body GNAT.Expect.TTY is\n          Status := -1;\n \n       else\n+         --  Send a Ctrl-C to the process first. This way, if the\n+         --  launched process is a \"sh\" or \"cmd\", the child processes\n+         --  will get terminated as well. Otherwise, terminating the\n+         --  main process brutally will leave the children running.\n+         --\n+         --  Note: special characters are sent to the terminal to generate\n+         --  the signal, so this needs to be done while the file descriptors\n+         --  are still open.\n+\n+         Interrupt (Descriptor);\n+         delay (0.05);\n+\n          if Descriptor.Input_Fd /= Invalid_FD then\n             Close (Descriptor.Input_Fd);\n          end if;\n@@ -80,14 +92,6 @@ package body GNAT.Expect.TTY is\n             Close (Descriptor.Output_Fd);\n          end if;\n \n-         --  Send a Ctrl-C to the process first. This way, if the\n-         --  launched process is a \"sh\" or \"cmd\", the child processes\n-         --  will get terminated as well. Otherwise, terminating the\n-         --  main process brutally will leave the children running.\n-\n-         Interrupt (Descriptor);\n-         delay 0.05;\n-\n          Terminate_Process (Descriptor.Process);\n          Status := Waitpid (Descriptor.Process);\n "}]}