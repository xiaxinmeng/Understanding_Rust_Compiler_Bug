{"sha": "522d2b3fccdaea685db88d1533789e42f61511a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIyZDJiM2ZjY2RhZWE2ODVkYjg4ZDE1MzM3ODllNDJmNjE1MTFhNg==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2003-10-06T01:24:53Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2003-10-06T01:24:53Z"}, "message": "linux.h (MD_FALLBACK_FRAME_STATE_FOR): Handle new signal trampoline codes.\n\n\t* config/sh/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Handle new\n\tsignal trampoline codes.\n\nFrom-SVN: r72128", "tree": {"sha": "0677fbf3279f4a4aebee85a52dddd7e2bebffa41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0677fbf3279f4a4aebee85a52dddd7e2bebffa41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/522d2b3fccdaea685db88d1533789e42f61511a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522d2b3fccdaea685db88d1533789e42f61511a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522d2b3fccdaea685db88d1533789e42f61511a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522d2b3fccdaea685db88d1533789e42f61511a6/comments", "author": null, "committer": null, "parents": [{"sha": "56ef49efaec15d542aff8190dc7c652651dc9db3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56ef49efaec15d542aff8190dc7c652651dc9db3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56ef49efaec15d542aff8190dc7c652651dc9db3"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "ac396db1b11bc0bedb1050d2d3d97ccd612c6387", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d2b3fccdaea685db88d1533789e42f61511a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d2b3fccdaea685db88d1533789e42f61511a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=522d2b3fccdaea685db88d1533789e42f61511a6", "patch": "@@ -1,3 +1,8 @@\n+2003-10-05  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Handle new\n+\tsignal trampoline codes.\n+\n 2003-10-05  Chris Demetriou  <cgd@broadcom.com>\n \n \t* config/mips/mips.md (*divsf3): Move description of"}, {"sha": "da423516b16af125d9db9342cde6ba115eae3f9c", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/522d2b3fccdaea685db88d1533789e42f61511a6/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/522d2b3fccdaea685db88d1533789e42f61511a6/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=522d2b3fccdaea685db88d1533789e42f61511a6", "patch": "@@ -220,13 +220,24 @@ do { \\\n \t\t\t\t\t\t\t\t\t\\\n     /* mov.w 1f,r3; trapa #0x10; 1: .short 0x77  (sigreturn)  */\t\\\n     /* mov.w 1f,r3; trapa #0x10; 1: .short 0xad  (rt_sigreturn)  */\t\\\n-    if ((*(unsigned short *) (pc_+0)  == 0x9300)\t\t\t\\\n-\t&& (*(unsigned short *) (pc_+2)  == 0xc310)\t\t\t\\\n-\t&& (*(unsigned short *) (pc_+4)  == 0x0077))\t\t\t\\\n+    /* Newer kernel uses pad instructions to avoid an SH-4 core bug.  */\\\n+    /* mov.w 1f,r3; trapa #0x10; or r0,r0; or r0,r0; or r0,r0; or r0,r0;\\\n+       or r0,r0; 1: .short 0x77  (sigreturn)  */\t\t\t\\\n+    /* mov.w 1f,r3; trapa #0x10; or r0,r0; or r0,r0; or r0,r0; or r0,r0;\\\n+       or r0,r0; 1: .short 0xad  (rt_sigreturn)  */\t\t\t\\\n+    if (((*(unsigned short *) (pc_+0)  == 0x9300)\t\t\t\\\n+\t && (*(unsigned short *) (pc_+2)  == 0xc310)\t\t\t\\\n+\t && (*(unsigned short *) (pc_+4)  == 0x0077))\t\t\t\\\n+\t|| (((*(unsigned short *) (pc_+0)  == 0x9305)\t\t\t\\\n+\t    && (*(unsigned short *) (pc_+2)  == 0xc310)\t\t\t\\\n+\t    && (*(unsigned short *) (pc_+14)  == 0x0077))))\t\t\\\n       sc_ = (CONTEXT)->cfa;\t\t\t\t\t\t\\\n-    else if ((*(unsigned short *) (pc_+0) == 0x9300)\t\t\t\\\n-\t&& (*(unsigned short *) (pc_+2)  == 0xc310)\t\t\t\\\n-\t&& (*(unsigned short *) (pc_+4)  == 0x00ad))\t\t\t\\\n+    else if (((*(unsigned short *) (pc_+0) == 0x9300)\t\t\t\\\n+\t      && (*(unsigned short *) (pc_+2)  == 0xc310)\t\t\\\n+\t      && (*(unsigned short *) (pc_+4)  == 0x00ad))\t\t\\\n+\t     || (((*(unsigned short *) (pc_+0) == 0x9305)\t\t\\\n+\t\t && (*(unsigned short *) (pc_+2)  == 0xc310)\t\t\\\n+\t\t && (*(unsigned short *) (pc_+14)  == 0x00ad))))\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tstruct rt_sigframe {\t\t\t\t\t\t\\\n \t  struct siginfo info;\t\t\t\t\t\t\\"}]}