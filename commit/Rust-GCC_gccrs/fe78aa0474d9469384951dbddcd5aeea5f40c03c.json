{"sha": "fe78aa0474d9469384951dbddcd5aeea5f40c03c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3OGFhMDQ3NGQ5NDY5Mzg0OTUxZGJkZGNkNWFlZWE1ZjQwYzAzYw==", "commit": {"author": {"name": "Andreas Arnez", "email": "arnez@linux.vnet.ibm.com", "date": "2015-12-02T07:26:30Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-12-02T07:26:30Z"}, "message": "[PR68603] Associate conditional C++ loop's back-jump with start, not body\n\nSVN commit r230979 always associates a loop's back-jump with the start\nof the loop body.  This caused a regression for gcov with conditional\nloops, because then the loop body appears to be covered twice per\niteration.\n\n2015-12-02  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n\n\tPR gcov-profile/68603\n\t* cp-gimplify.c (genericize_cp_loop): For the back-jump's location\n\tuse the start of the loop body only if the loop is unconditional.\n\nFrom-SVN: r231146", "tree": {"sha": "22b8c4643f1392c93c1f11bdb98955d9afa2a630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22b8c4643f1392c93c1f11bdb98955d9afa2a630"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe78aa0474d9469384951dbddcd5aeea5f40c03c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe78aa0474d9469384951dbddcd5aeea5f40c03c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe78aa0474d9469384951dbddcd5aeea5f40c03c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe78aa0474d9469384951dbddcd5aeea5f40c03c/comments", "author": null, "committer": null, "parents": [{"sha": "df096e508e95abecfacdf0c18abae8807b56cc11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df096e508e95abecfacdf0c18abae8807b56cc11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df096e508e95abecfacdf0c18abae8807b56cc11"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "385ba635c4b5962a089c124b2d197daf47ed7e55", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe78aa0474d9469384951dbddcd5aeea5f40c03c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe78aa0474d9469384951dbddcd5aeea5f40c03c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fe78aa0474d9469384951dbddcd5aeea5f40c03c", "patch": "@@ -1,3 +1,14 @@\n+2015-12-02  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n+\n+\tPR gcov-profile/68603\n+\t* cp-gimplify.c (genericize_cp_loop): For the back-jump's location\n+\tuse the start of the loop body only if the loop is unconditional.\n+\n+2015-11-26  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n+\n+\t* cp-gimplify.c (genericize_cp_loop): Change LOOP_EXPR's location\n+\tto start of loop body instead of start of loop.\n+\n 2015-12-01  Julian Brown  <julian@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n \t    James Norris  <James_Norris@mentor.com>"}, {"sha": "3c89f1b05d0e2b54e4d929e5a31c5cff87c4df8a", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe78aa0474d9469384951dbddcd5aeea5f40c03c/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe78aa0474d9469384951dbddcd5aeea5f40c03c/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=fe78aa0474d9469384951dbddcd5aeea5f40c03c", "patch": "@@ -264,7 +264,9 @@ genericize_cp_loop (tree *stmt_p, location_t start_locus, tree cond, tree body,\n     }\n   else\n     {\n-      location_t loc = EXPR_LOCATION (expr_first (body));\n+      location_t loc = start_locus;\n+      if (!cond || integer_nonzerop (cond))\n+\tloc = EXPR_LOCATION (expr_first (body));\n       if (loc == UNKNOWN_LOCATION)\n \tloc = start_locus;\n       loop = build1_loc (loc, LOOP_EXPR, void_type_node, stmt_list);"}]}