{"sha": "66753821b5fd89c3fc5711240ecd7a3230586bf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY3NTM4MjFiNWZkODljM2ZjNTcxMTI0MGVjZDdhMzIzMDU4NmJmMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-11-17T01:43:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-11-17T01:43:10Z"}, "message": "re PR c++/46497 ([C++0x] Defaulted vs declared move constructor vs is_convertible)\n\n\tPR c++/46497\n\t* call.c (build_over_call): Check for =delete even when trivial.\n\nFrom-SVN: r166851", "tree": {"sha": "3674dee3d513d3cfe61ab481df6b0240514a9218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3674dee3d513d3cfe61ab481df6b0240514a9218"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66753821b5fd89c3fc5711240ecd7a3230586bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66753821b5fd89c3fc5711240ecd7a3230586bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66753821b5fd89c3fc5711240ecd7a3230586bf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66753821b5fd89c3fc5711240ecd7a3230586bf2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf4c0738c0a3f8984feae12e7ef89f05793a35c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4c0738c0a3f8984feae12e7ef89f05793a35c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf4c0738c0a3f8984feae12e7ef89f05793a35c9"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "d651ba8edcf45dd221d27f5ce37dd15d4d9b251d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66753821b5fd89c3fc5711240ecd7a3230586bf2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66753821b5fd89c3fc5711240ecd7a3230586bf2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=66753821b5fd89c3fc5711240ecd7a3230586bf2", "patch": "@@ -1,5 +1,8 @@\n 2010-11-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/46497\n+\t* call.c (build_over_call): Check for =delete even when trivial.\n+\n \tDR 1004\n \t* decl.c (make_unbound_class_template): Handle using\n \tinjected-type-name as template."}, {"sha": "7fa1cf633a297d5cebe38f5d337301c807909999", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66753821b5fd89c3fc5711240ecd7a3230586bf2/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66753821b5fd89c3fc5711240ecd7a3230586bf2/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=66753821b5fd89c3fc5711240ecd7a3230586bf2", "patch": "@@ -6057,7 +6057,7 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t}\n       /* [class.copy]: the copy constructor is implicitly defined even if\n \t the implementation elided its use.  */\n-      else if (!trivial)\n+      else if (!trivial || DECL_DELETED_FN (fn))\n \t{\n \t  mark_used (fn);\n \t  already_used = true;\n@@ -6086,7 +6086,8 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t}\n     }\n   else if (DECL_OVERLOADED_OPERATOR_P (fn) == NOP_EXPR\n-\t   && trivial_fn_p (fn))\n+\t   && trivial_fn_p (fn)\n+\t   && !DECL_DELETED_FN (fn))\n     {\n       tree to = stabilize_reference\n \t(cp_build_indirect_ref (argarray[0], RO_NULL, complain));"}, {"sha": "76540df89d5a7e1b061aa822e33638cae4f1c023", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66753821b5fd89c3fc5711240ecd7a3230586bf2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66753821b5fd89c3fc5711240ecd7a3230586bf2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66753821b5fd89c3fc5711240ecd7a3230586bf2", "patch": "@@ -1,5 +1,7 @@\n 2010-11-16  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/defaulted20.C: New.\n+\n \t* g++.dg/template/injected2.C: New.\n \n 2010-11-17  Nicola Pero  <nicola.pero@meta-innovation.com>"}, {"sha": "d9ad04fec4e400bc42cfb30a4c61de6002c225ea", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted20.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66753821b5fd89c3fc5711240ecd7a3230586bf2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66753821b5fd89c3fc5711240ecd7a3230586bf2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted20.C?ref=66753821b5fd89c3fc5711240ecd7a3230586bf2", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/46497\n+// { dg-options -std=c++0x }\n+\n+struct A {\n+  A(A&&) = default;\t\t// { dg-message \"A::A\" }\n+};\n+struct B {\n+  const A a;\n+  B(const B&) = default;\n+  B(B&&) = default;\t\t// { dg-error \"implicitly deleted|no match\" }\n+};\n+\n+void g(B);\t\t\t// { dg-error \"argument 1\" }\n+B&& f();\n+\n+int main()\n+{\n+  g(f());\t\t\t// { dg-error \"deleted\" }\n+}"}]}