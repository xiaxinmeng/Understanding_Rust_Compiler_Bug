{"sha": "5b1ebbca8dbba62d58f460bf119c63884238452a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIxZWJiY2E4ZGJiYTYyZDU4ZjQ2MGJmMTE5YzYzODg0MjM4NDUyYQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-06-13T17:05:26Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-06-13T17:05:26Z"}, "message": "rs6000: Sanitize vector modes\n\nThis removes the vector modes that were only used by SPE.  It also\nrearranges things so it is easier to see what is there, and for what.\n\n\n\t* config/rs6000/rs6000-modes.def: Remove all 8-byte vector modes\n\texcept V2SF and V2SI.  Rearrange the vector modes, and add comments.\n\t* config/rs6000/rs6000.c (rs6000_debug_reg_global): Remove V8QImode\n\tand V4HImode.\n\t(reg_offset_addressing_ok_p): Remove V4HImode and V1DImode.\n\t(rs6000_legitimate_offset_address_p): Ditto.\n\t(rs6000_emit_move): Ditto.\n\t(rs6000_init_builtins): Remove V4HI_type_node.\n\nFrom-SVN: r249162", "tree": {"sha": "fc0c2cfd060035e7f4bc422171c168cc881d057e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc0c2cfd060035e7f4bc422171c168cc881d057e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b1ebbca8dbba62d58f460bf119c63884238452a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1ebbca8dbba62d58f460bf119c63884238452a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b1ebbca8dbba62d58f460bf119c63884238452a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b1ebbca8dbba62d58f460bf119c63884238452a/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78a88fb63f23fd9f3d9bf84e31b2f7acc67f25d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a88fb63f23fd9f3d9bf84e31b2f7acc67f25d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a88fb63f23fd9f3d9bf84e31b2f7acc67f25d7"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "9e2bfa419e27fb2165dbc487cd8921032fc85d20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1ebbca8dbba62d58f460bf119c63884238452a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1ebbca8dbba62d58f460bf119c63884238452a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b1ebbca8dbba62d58f460bf119c63884238452a", "patch": "@@ -1,3 +1,14 @@\n+2017-06-13  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000-modes.def: Remove all 8-byte vector modes\n+\texcept V2SF and V2SI.  Rearrange the vector modes, and add comments.\n+\t* config/rs6000/rs6000.c (rs6000_debug_reg_global): Remove V8QImode\n+\tand V4HImode.\n+\t(reg_offset_addressing_ok_p): Remove V4HImode and V1DImode.\n+\t(rs6000_legitimate_offset_address_p): Ditto.\n+\t(rs6000_emit_move): Ditto.\n+\t(rs6000_init_builtins): Remove V4HI_type_node.\n+\n 2017-06-13  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitize/78204"}, {"sha": "65f890e2dcabefc93667d5da8c735253d243990d", "filename": "gcc/config/rs6000/rs6000-modes.def", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1ebbca8dbba62d58f460bf119c63884238452a/gcc%2Fconfig%2Frs6000%2Frs6000-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1ebbca8dbba62d58f460bf119c63884238452a/gcc%2Fconfig%2Frs6000%2Frs6000-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-modes.def?ref=5b1ebbca8dbba62d58f460bf119c63884238452a", "patch": "@@ -41,15 +41,20 @@ CC_MODE (CCFP);\n CC_MODE (CCEQ);\n \n /* Vector modes.  */\n-VECTOR_MODES (INT, 8);        /*       V8QI  V4HI V2SI */\n+\n+/* VMX/VSX.  */\n VECTOR_MODES (INT, 16);       /* V16QI V8HI  V4SI V2DI */\n-VECTOR_MODES (INT, 32);       /* V32QI V16HI V8SI V4DI */\n-VECTOR_MODE (INT, DI, 1);\n-VECTOR_MODE (INT, TI, 1);\n-VECTOR_MODES (FLOAT, 8);      /*             V4HF V2SF */\n+VECTOR_MODE (INT, TI, 1);     /*                  V1TI */\n VECTOR_MODES (FLOAT, 16);     /*       V8HF  V4SF V2DF */\n+\n+/* Two VMX/VSX vectors (for permute, select, concat, etc.)  */\n+VECTOR_MODES (INT, 32);       /* V32QI V16HI V8SI V4DI */\n VECTOR_MODES (FLOAT, 32);     /*       V16HF V8SF V4DF */\n \n+/* Paired single.  */\n+VECTOR_MODE (FLOAT, SF, 2);   /* The only valid paired-single mode.  */\n+VECTOR_MODE (INT, SI, 2);     /* For paired-single permutes.  */\n+\n /* Replacement for TImode that only is allowed in GPRs.  We also use PTImode\n    for quad memory atomic operations to force getting an even/odd register\n    combination.  */"}, {"sha": "b51ffcc56774b151c1eef2b0a41ffb2f7fe40ff1", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b1ebbca8dbba62d58f460bf119c63884238452a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b1ebbca8dbba62d58f460bf119c63884238452a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5b1ebbca8dbba62d58f460bf119c63884238452a", "patch": "@@ -2450,8 +2450,6 @@ rs6000_debug_reg_global (void)\n     SDmode,\n     DDmode,\n     TDmode,\n-    V8QImode,\n-    V4HImode,\n     V2SImode,\n     V16QImode,\n     V8HImode,\n@@ -8490,9 +8488,7 @@ reg_offset_addressing_ok_p (machine_mode mode)\n \treturn mode_supports_vsx_dform_quad (mode);\n       break;\n \n-    case V4HImode:\n     case V2SImode:\n-    case V1DImode:\n     case V2SFmode:\n        /* Paired vector modes.  Only reg+reg addressing is valid.  */\n       if (TARGET_PAIRED_FLOAT)\n@@ -8730,9 +8726,7 @@ rs6000_legitimate_offset_address_p (machine_mode mode, rtx x,\n   extra = 0;\n   switch (mode)\n     {\n-    case V4HImode:\n     case V2SImode:\n-    case V1DImode:\n     case V2SFmode:\n       /* SPE vector modes.  */\n       return SPE_CONST_OFFSET_OK (offset);\n@@ -10981,10 +10975,8 @@ rs6000_emit_move (rtx dest, rtx source, machine_mode mode)\n     case V8HImode:\n     case V4SFmode:\n     case V4SImode:\n-    case V4HImode:\n     case V2SFmode:\n     case V2SImode:\n-    case V1DImode:\n     case V2DFmode:\n     case V2DImode:\n     case V1TImode:\n@@ -16843,7 +16835,6 @@ rs6000_init_builtins (void)\n \t\t\t\t       : \"__vector long long\",\n \t\t\t\t       intDI_type_node, 2);\n   V2DF_type_node = rs6000_vector_type (\"__vector double\", double_type_node, 2);\n-  V4HI_type_node = build_vector_type (intHI_type_node, 4);\n   V4SI_type_node = rs6000_vector_type (\"__vector signed int\",\n \t\t\t\t       intSI_type_node, 4);\n   V4SF_type_node = rs6000_vector_type (\"__vector float\", float_type_node, 4);\n@@ -16991,7 +16982,6 @@ rs6000_init_builtins (void)\n   builtin_mode_to_type[V2DImode][0] = V2DI_type_node;\n   builtin_mode_to_type[V2DImode][1] = unsigned_V2DI_type_node;\n   builtin_mode_to_type[V2DFmode][0] = V2DF_type_node;\n-  builtin_mode_to_type[V4HImode][0] = V4HI_type_node;\n   builtin_mode_to_type[V4SImode][0] = V4SI_type_node;\n   builtin_mode_to_type[V4SImode][1] = unsigned_V4SI_type_node;\n   builtin_mode_to_type[V4SFmode][0] = V4SF_type_node;"}]}