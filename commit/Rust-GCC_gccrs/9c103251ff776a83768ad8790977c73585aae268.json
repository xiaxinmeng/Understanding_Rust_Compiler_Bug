{"sha": "9c103251ff776a83768ad8790977c73585aae268", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMxMDMyNTFmZjc3NmE4Mzc2OGFkODc5MDk3N2M3MzU4NWFhZTI2OA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-04T02:22:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-01-04T02:22:04Z"}, "message": "* pa.c (incscc_operator): New function.\n\nFrom-SVN: r3080", "tree": {"sha": "2ed008dc449abdb49435dfe35a1af2743fc23dc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ed008dc449abdb49435dfe35a1af2743fc23dc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c103251ff776a83768ad8790977c73585aae268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c103251ff776a83768ad8790977c73585aae268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c103251ff776a83768ad8790977c73585aae268", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c103251ff776a83768ad8790977c73585aae268/comments", "author": null, "committer": null, "parents": [{"sha": "ff6cb22f9c458b56c43286608da7b1846c6b0e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff6cb22f9c458b56c43286608da7b1846c6b0e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff6cb22f9c458b56c43286608da7b1846c6b0e90"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "a1df7c7feb2aaa66cb4223efe15bd999afcf6bd8", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c103251ff776a83768ad8790977c73585aae268/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c103251ff776a83768ad8790977c73585aae268/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=9c103251ff776a83768ad8790977c73585aae268", "patch": "@@ -2644,6 +2644,20 @@ fmpysuboperands(operands)\n   return 1;\n }\n \n+\n+/* Return 1 iff OP is a valid operator to use in an incscc \n+   instruction.  Adding or subtracting the condition code\n+   to/from another operand is valid on the PA, so return 1 \n+   for PLUS or MINUS.  */\n+int\n+incscc_operator (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  return (GET_CODE (op) == PLUS || GET_CODE (op) == MINUS);\n+}\n+\n+\n /* Return 1 if OP is suitable for the second add operand (the unshifed \n    operand) in an shadd instruction.   Allow CONST_INT to work around\n    a reload bug.  */"}]}