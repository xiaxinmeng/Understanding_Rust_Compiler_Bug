{"sha": "8936f5310aba723f2fbc2b0106e74fd307e4c347", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkzNmY1MzEwYWJhNzIzZjJmYmMyYjAxMDZlNzRmZDMwN2U0YzM0Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-02-14T09:07:09Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-02-14T09:07:09Z"}, "message": "Document LWG 2735 status and add test\n\nThis DR was already resolved for GCC 7.1 by the implementation of DR\n2192, but we didn't have an explicit test for the behaviour that 2735\nguarantees.\n\n\t* doc/xml/manual/intro.xml: Document LWG 2735 status.\n\t* include/bits/std_abs.h: Add comment about LWG 2735.\n\t* testsuite/26_numerics/headers/cstdlib/dr2735.cc: New test.\n\nFrom-SVN: r268867", "tree": {"sha": "b6993c8b6aa9f6c47acc0ef70f7cb54f6c33b079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6993c8b6aa9f6c47acc0ef70f7cb54f6c33b079"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8936f5310aba723f2fbc2b0106e74fd307e4c347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8936f5310aba723f2fbc2b0106e74fd307e4c347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8936f5310aba723f2fbc2b0106e74fd307e4c347", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8936f5310aba723f2fbc2b0106e74fd307e4c347/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31de5e4d91c8b348dd23ed2042983b9b057c882c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31de5e4d91c8b348dd23ed2042983b9b057c882c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31de5e4d91c8b348dd23ed2042983b9b057c882c"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "6fcfcea10995742e241519ce5bb4e616627bc2ad", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8936f5310aba723f2fbc2b0106e74fd307e4c347/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8936f5310aba723f2fbc2b0106e74fd307e4c347/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8936f5310aba723f2fbc2b0106e74fd307e4c347", "patch": "@@ -1,3 +1,9 @@\n+2019-02-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/intro.xml: Document LWG 2735 status.\n+\t* include/bits/std_abs.h: Add comment about LWG 2735.\n+\t* testsuite/26_numerics/headers/cstdlib/dr2735.cc: New test.\n+\n 2019-02-13  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/89345"}, {"sha": "71050a0cebc45c9738f8b2bce0b2eb9b8e17be4e", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8936f5310aba723f2fbc2b0106e74fd307e4c347/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8936f5310aba723f2fbc2b0106e74fd307e4c347/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=8936f5310aba723f2fbc2b0106e74fd307e4c347", "patch": "@@ -1134,6 +1134,17 @@ requirements of the license of GCC.\n     <listitem><para>Define the <code>value_compare</code> typedef.\n     </para></listitem></varlistentry>\n \n+    <varlistentry xml:id=\"manual.bugs.dr2735\"><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"&DR;#2735\">2735</link>:\n+       <emphasis><code>std::abs(short)</code>,\n+\t <code>std::abs(signed char)</code> and others should return\n+\t <code>int</code> instead of <code>double</code> in order to be\n+\t compatible with C++98 and C\n+       </emphasis>\n+    </term>\n+    <listitem><para>Resolved by the changes for\n+      <link linkend=\"manual.bugs.dr2192\">2192</link>.\n+    </para></listitem></varlistentry>\n+\n     <varlistentry xml:id=\"manual.bugs.dr2770\"><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"&DR;#2770\">2770</link>:\n        <emphasis><code>tuple_size&lt;const T&gt;</code> specialization is not\n \t SFINAE compatible and breaks decomposition declarations"}, {"sha": "8430010b43220fc7b3bc8cd13a8763f1d152ec66", "filename": "libstdc++-v3/include/bits/std_abs.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8936f5310aba723f2fbc2b0106e74fd307e4c347/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_abs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8936f5310aba723f2fbc2b0106e74fd307e4c347/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_abs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_abs.h?ref=8936f5310aba723f2fbc2b0106e74fd307e4c347", "patch": "@@ -64,6 +64,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n // _GLIBCXX_RESOLVE_LIB_DEFECTS\n // 2192. Validity and return type of std::abs(0u) is unclear\n // 2294. <cstdlib> should declare abs(double)\n+// 2735. std::abs(short), std::abs(signed char) and others should return int\n \n #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO\n   inline _GLIBCXX_CONSTEXPR double"}, {"sha": "2a542011fa67302683b1cee719010bcbe71911d5", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cstdlib/dr2735.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8936f5310aba723f2fbc2b0106e74fd307e4c347/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2Fdr2735.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8936f5310aba723f2fbc2b0106e74fd307e4c347/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2Fdr2735.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcstdlib%2Fdr2735.cc?ref=8936f5310aba723f2fbc2b0106e74fd307e4c347", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+\n+// NB: Don't include any other headers in this file.\n+// LWG 2735. std::abs(short), std::abs(signed char) and others should return\n+// int instead of double in order to be compatible with C++98 and C\n+#include <cstdlib>\n+\n+template<typename> struct is_int { };\n+template<> struct is_int<int> { typedef int type; };\n+\n+template<typename T>\n+typename is_int<T>::type\n+do_check(T t)\n+{\n+  return T(0);\n+}\n+\n+template<typename T>\n+void check()\n+{\n+  do_check(std::abs(T(0)));\n+}\n+\n+void test()\n+{\n+  check<short>();\n+  check<unsigned short>();\n+  check<char>();\n+  check<signed char>();\n+  check<unsigned char>();\n+}"}]}