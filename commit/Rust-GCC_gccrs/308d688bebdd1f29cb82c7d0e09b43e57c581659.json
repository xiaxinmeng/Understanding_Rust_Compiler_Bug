{"sha": "308d688bebdd1f29cb82c7d0e09b43e57c581659", "node_id": "C_kwDOANBUbNoAKDMwOGQ2ODhiZWJkZDFmMjljYjgyYzdkMGUwOWI0M2U1N2M1ODE2NTk", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-12-12T17:03:03Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2021-12-15T13:58:40Z"}, "message": "nvptx: Add -misa=sm_75 and -misa=sm_80\n\nAdd new target macros TARGET_SM75 and TARGET_SM80.  Add support for\n__builtin_tanhf, HFmode exp2/tanh and also for HFmode min/max, controlled by\nTARGET_SM75 and TARGET_SM80 respectively.\n\nThe following has been tested on nvptx-none, hosted on x86_64-pc-linux-gnu\nwith a \"make\" and \"make -k check\" with no new failures.\n\ngcc/ChangeLog:\n\n\t* config/nvptx/nvptx-opts.h (ptx_isa): PTX_ISA_SM75 and PTX_ISA_SM80\n\tISA levels.\n\t* config/nvptx/nvptx.opt: Add sm_75 and sm_80 to -misa.\n\t* config/nvptx/nvptx.h (TARGET_SM75, TARGET_SM80):\n\tNew helper macros to conditionalize functionality on target ISA.\n\t* config/nvptx/nvptx-c.c (nvptx_cpu_cpp_builtins): Add __PTX_SM__\n\tsupport for the new ISA levels.\n\t* config/nvptx/nvptx.c (nvptx_file_start): Add support for TARGET_SM75\n\tand TARGET_SM80.\n\t* config/nvptx/nvptx.md (define_c_enum \"unspec\"): New UNSPEC_TANH.\n\t(define_mode_iterator HSFM): New iterator for HFmode and SFmode.\n\t(exp2hf2): New define_insn controlled by TARGET_SM75.\n\t(tanh<mode>2): New define_insn controlled by TARGET_SM75.\n\t(sminhf3, smaxhf3): New define_isnns controlled by TARGET_SM80.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/nvptx/float16-2.c: New test case.\n\t* gcc.target/nvptx/tanh-1.c: New test case.", "tree": {"sha": "868747cb6f838101e6836d1d2fe1ab4709dde51c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/868747cb6f838101e6836d1d2fe1ab4709dde51c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/308d688bebdd1f29cb82c7d0e09b43e57c581659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308d688bebdd1f29cb82c7d0e09b43e57c581659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308d688bebdd1f29cb82c7d0e09b43e57c581659", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308d688bebdd1f29cb82c7d0e09b43e57c581659/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eede2498e61e00a176fb2908ca0317b55c084a84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eede2498e61e00a176fb2908ca0317b55c084a84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eede2498e61e00a176fb2908ca0317b55c084a84"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "d51ad00582a7c587bc338dea716faff4ad2f4393", "filename": "gcc/config/nvptx/nvptx-c.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx-c.c?ref=308d688bebdd1f29cb82c7d0e09b43e57c581659", "patch": "@@ -39,7 +39,11 @@ nvptx_cpu_cpp_builtins (void)\n     cpp_define (parse_in, \"__nvptx_softstack__\");\n   if (TARGET_UNIFORM_SIMT)\n     cpp_define (parse_in,\"__nvptx_unisimt__\");\n-  if (TARGET_SM53)\n+  if (TARGET_SM80)\n+    cpp_define (parse_in, \"__PTX_SM__=800\");\n+  else if (TARGET_SM75)\n+    cpp_define (parse_in, \"__PTX_SM__=750\");\n+  else if (TARGET_SM53)\n     cpp_define (parse_in, \"__PTX_SM__=530\");\n   else if (TARGET_SM35)\n     cpp_define (parse_in, \"__PTX_SM__=350\");"}, {"sha": "7b6ecd42fedf7db6ce06b672a923029cac5b5226", "filename": "gcc/config/nvptx/nvptx-opts.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx-opts.h?ref=308d688bebdd1f29cb82c7d0e09b43e57c581659", "patch": "@@ -24,7 +24,9 @@ enum ptx_isa\n {\n   PTX_ISA_SM30,\n   PTX_ISA_SM35,\n-  PTX_ISA_SM53\n+  PTX_ISA_SM53,\n+  PTX_ISA_SM75,\n+  PTX_ISA_SM80\n };\n \n enum ptx_version"}, {"sha": "ff44d9fdbef9eca40af165704d558e8293be8e58", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=308d688bebdd1f29cb82c7d0e09b43e57c581659", "patch": "@@ -5410,7 +5410,11 @@ nvptx_file_start (void)\n     fputs (\"\\t.version\\t6.3\\n\", asm_out_file);\n   else\n     fputs (\"\\t.version\\t3.1\\n\", asm_out_file);\n-  if (TARGET_SM53)\n+  if (TARGET_SM80)\n+    fputs (\"\\t.target\\tsm_80\\n\", asm_out_file);\n+  else if (TARGET_SM75)\n+    fputs (\"\\t.target\\tsm_75\\n\", asm_out_file);\n+  else if (TARGET_SM53)\n     fputs (\"\\t.target\\tsm_53\\n\", asm_out_file);\n   else if (TARGET_SM35)\n     fputs (\"\\t.target\\tsm_35\\n\", asm_out_file);"}, {"sha": "a25cccb42d4676360a211b3add89ff65a59a3212", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=308d688bebdd1f29cb82c7d0e09b43e57c581659", "patch": "@@ -88,6 +88,8 @@\n \n #define TARGET_SM35 (ptx_isa_option >= PTX_ISA_SM35)\n #define TARGET_SM53 (ptx_isa_option >= PTX_ISA_SM53)\n+#define TARGET_SM75 (ptx_isa_option >= PTX_ISA_SM75)\n+#define TARGET_SM80 (ptx_isa_option >= PTX_ISA_SM80)\n \n #define TARGET_PTX_6_3 (ptx_version_option >= PTX_VERSION_6_3)\n #define TARGET_PTX_7_0 (ptx_version_option >= PTX_VERSION_7_0)"}, {"sha": "6599b3a928af252d73197a792393deb67e3548b4", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=308d688bebdd1f29cb82c7d0e09b43e57c581659", "patch": "@@ -26,6 +26,7 @@\n    UNSPEC_EXP2\n    UNSPEC_SIN\n    UNSPEC_COS\n+   UNSPEC_TANH\n \n    UNSPEC_FPINT_FLOOR\n    UNSPEC_FPINT_BTRUNC\n@@ -196,6 +197,7 @@\n (define_mode_iterator QHIM [QI HI])\n (define_mode_iterator QHSIM [QI HI SI])\n (define_mode_iterator SDFM [SF DF])\n+(define_mode_iterator HSFM [HF SF])\n (define_mode_iterator SDCM [SC DC])\n (define_mode_iterator BITS [SI SF])\n (define_mode_iterator BITD [DI DF])\n@@ -1143,6 +1145,36 @@\n   \"TARGET_SM53\"\n   \"%.\\\\tmul.f16\\\\t%0, %1, %2;\")\n \n+(define_insn \"exp2hf2\"\n+  [(set (match_operand:HF 0 \"nvptx_register_operand\" \"=R\")\n+\t(unspec:HF [(match_operand:HF 1 \"nvptx_register_operand\" \"R\")]\n+\t\t   UNSPEC_EXP2))]\n+  \"TARGET_SM75 && flag_unsafe_math_optimizations\"\n+  \"%.\\\\tex2.approx.f16\\\\t%0, %1;\")\n+\n+(define_insn \"tanh<mode>2\"\n+  [(set (match_operand:HSFM 0 \"nvptx_register_operand\" \"=R\")\n+\t(unspec:HSFM [(match_operand:HSFM 1 \"nvptx_register_operand\" \"R\")]\n+\t\t     UNSPEC_TANH))]\n+  \"TARGET_SM75 && flag_unsafe_math_optimizations\"\n+  \"%.\\\\ttanh.approx%t0\\\\t%0, %1;\")\n+\n+;; HFmode floating point arithmetic.\n+\n+(define_insn \"sminhf3\"\n+  [(set (match_operand:HF 0 \"nvptx_register_operand\" \"=R\")\n+\t(smin:HF (match_operand:HF 1 \"nvptx_register_operand\" \"R\")\n+\t\t (match_operand:HF 2 \"nvptx_register_operand\" \"R\")))]\n+  \"TARGET_SM80\"\n+  \"%.\\\\tmin.f16\\\\t%0, %1, %2;\")\n+\n+(define_insn \"smaxhf3\"\n+  [(set (match_operand:HF 0 \"nvptx_register_operand\" \"=R\")\n+\t(smax:HF (match_operand:HF 1 \"nvptx_register_operand\" \"R\")\n+\t\t (match_operand:HF 2 \"nvptx_register_operand\" \"R\")))]\n+  \"TARGET_SM80\"\n+  \"%.\\\\tmax.f16\\\\t%0, %1, %2;\")\n+\n ;; Conversions involving floating point\n \n (define_insn \"extendsfdf2\""}, {"sha": "1d88ef18d0489e68430094a2037a202b99c13d5a", "filename": "gcc/config/nvptx/nvptx.opt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt?ref=308d688bebdd1f29cb82c7d0e09b43e57c581659", "patch": "@@ -64,6 +64,12 @@ Enum(ptx_isa) String(sm_35) Value(PTX_ISA_SM35)\n EnumValue\n Enum(ptx_isa) String(sm_53) Value(PTX_ISA_SM53)\n \n+EnumValue\n+Enum(ptx_isa) String(sm_75) Value(PTX_ISA_SM75)\n+\n+EnumValue\n+Enum(ptx_isa) String(sm_80) Value(PTX_ISA_SM80)\n+\n ; Default needs to be in sync with default in ASM_SPEC in nvptx.h.\n misa=\n Target RejectNegative ToLower Joined Enum(ptx_isa) Var(ptx_isa_option) Init(PTX_ISA_SM35)"}, {"sha": "5748a9c7a97202a99c6074a8e4f91a304a83b630", "filename": "gcc/testsuite/gcc.target/nvptx/float16-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Ffloat16-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Ffloat16-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Ffloat16-2.c?ref=308d688bebdd1f29cb82c7d0e09b43e57c581659", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -misa=sm_80 -mptx=7.0\" } */\n+\n+_Float16 x;\n+_Float16 y;\n+_Float16 t;\n+\n+void foo()\n+{\n+  t = x < y ? x : y;\n+}\n+\n+void bar()\n+{\n+  t = x > y ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler \"min.f16\" } } */\n+/* { dg-final { scan-assembler \"max.f16\" } } */\n+"}, {"sha": "56a0e5a85784f06d58a4291f4966a43e3943a252", "filename": "gcc/testsuite/gcc.target/nvptx/tanh-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Ftanh-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308d688bebdd1f29cb82c7d0e09b43e57c581659/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Ftanh-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Ftanh-1.c?ref=308d688bebdd1f29cb82c7d0e09b43e57c581659", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math -misa=sm_75 -mptx=7.0\" } */\n+\n+float foo(float x)\n+{\n+  return __builtin_tanhf(x);\n+}\n+\n+/* { dg-final { scan-assembler \"tanh.approx.f32\" } } */"}]}