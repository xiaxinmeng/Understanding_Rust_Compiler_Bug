{"sha": "d58bc084b4b97eb0056a2658604c855fa1775c5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU4YmMwODRiNGI5N2ViMDA1NmEyNjU4NjA0Yzg1NWZhMTc3NWM1Zg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2009-06-22T11:54:59Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2009-06-22T11:54:59Z"}, "message": "arm.c (arm_print_operand): Deal with HIGH.\n\n\t* config/arm/arm.c (arm_print_operand): Deal with HIGH.\n\t* config/arm/constraints.md (j): New constraint for movw operands.\n\t(N): Remove thumb2 meaning.\n\t* config/arm/arm.md (*arm_movw): Delete.\n\t(*arm_movsi_insn): Use j constraint for movw instead of N constraint.\n\t* config/arm/vfp.md (*arm_movsi_vfp, *thumb2_movsi_vfp): Likewise.\n\t* config/arm/thumb2.md (*thumb2_movsi_insn): Likewise.\n\nFrom-SVN: r148788", "tree": {"sha": "ec049216288a8ea05bf54ad556f23b2f05c86f35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec049216288a8ea05bf54ad556f23b2f05c86f35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d58bc084b4b97eb0056a2658604c855fa1775c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58bc084b4b97eb0056a2658604c855fa1775c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d58bc084b4b97eb0056a2658604c855fa1775c5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58bc084b4b97eb0056a2658604c855fa1775c5f/comments", "author": null, "committer": null, "parents": [{"sha": "ac6cb60cdf1df4a9fd13f09575bdfae0d3cba87d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac6cb60cdf1df4a9fd13f09575bdfae0d3cba87d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac6cb60cdf1df4a9fd13f09575bdfae0d3cba87d"}], "stats": {"total": 48, "additions": 30, "deletions": 18}, "files": [{"sha": "4804cfa7609c2e1adf2ccb213e7d07f949baa0a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d58bc084b4b97eb0056a2658604c855fa1775c5f", "patch": "@@ -1,3 +1,13 @@\n+2009-06-22  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_print_operand): Deal with HIGH.\n+\t* config/arm/constraints.md (j): New constraint for movw operands.\n+\t(N): Remove thumb2 meaning.\n+\t* config/arm/arm.md (*arm_movw): Delete.\n+\t(*arm_movsi_insn): Use j constraint for movw instead of N constraint.\n+\t* config/arm/vfp.md (*arm_movsi_vfp, *thumb2_movsi_vfp): Likewise.\n+\t* config/arm/thumb2.md (*thumb2_movsi_insn): Likewise.\n+\n 2009-06-22  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/40492"}, {"sha": "7a11d52c296635f58bf9534f0033cec06c0618f4", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=d58bc084b4b97eb0056a2658604c855fa1775c5f", "patch": "@@ -14097,6 +14097,12 @@ arm_print_operand (FILE *stream, rtx x, int code)\n \tdefault:\n \t  gcc_assert (GET_CODE (x) != NEG);\n \t  fputc ('#', stream);\n+\t  if (GET_CODE (x) == HIGH)\n+\t    {\n+\t      fputs (\":lower16:\", stream);\n+\t      x = XEXP (x, 0);\n+\t    }\n+\t    \n \t  output_addr_const (stream, x);\n \t  break;\n \t}"}, {"sha": "8423e9464b18030ee6674209cd1a528b3cd160d6", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=d58bc084b4b97eb0056a2658604c855fa1775c5f", "patch": "@@ -5086,18 +5086,9 @@\n    (set_attr \"length\" \"4\")]\n )\n \n-(define_insn \"*arm_movw\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r\")\n-\t(high:SI (match_operand:SI 1 \"general_operand\"      \"i\")))]\n-  \"TARGET_32BIT\"\n-  \"movw%?\\t%0, #:lower16:%c1\"\n-  [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"length\" \"4\")]\n-)\n-\n (define_insn \"*arm_movsi_insn\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rk,r,r,r,rk,m\")\n-\t(match_operand:SI 1 \"general_operand\"      \"rk, I,K,N,mi,rk\"))]\n+\t(match_operand:SI 1 \"general_operand\"      \"rk, I,K,j,mi,rk\"))]\n   \"TARGET_ARM && ! TARGET_IWMMXT\n    && !(TARGET_HARD_FLOAT && TARGET_VFP)\n    && (   register_operand (operands[0], SImode)"}, {"sha": "edb0215a90e84aec4a60dd19340a8d95fef66606", "filename": "gcc/config/arm/constraints.md", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fconstraints.md?ref=d58bc084b4b97eb0056a2658604c855fa1775c5f", "patch": "@@ -25,7 +25,7 @@\n ;; In ARM state, 'l' is an alias for 'r'\n \n ;; The following normal constraints have been used:\n-;; in ARM/Thumb-2 state: G, H, I, J, K, L, M\n+;; in ARM/Thumb-2 state: G, H, I, j, J, K, L, M\n ;; in Thumb-1 state: I, J, K, L, M, N, O\n \n ;; The following multi-letter normal constraints have been used:\n@@ -66,6 +66,13 @@\n (define_register_constraint \"h\" \"TARGET_THUMB ? HI_REGS : NO_REGS\"\n  \"In Thumb state the core registers @code{r8}-@code{r15}.\")\n \n+(define_constraint \"j\"\n+ \"A constant suitable for a MOVW instruction. (ARM/Thumb-2)\"\n+ (and (match_test \"TARGET_32BIT && arm_arch_thumb2\")\n+      (ior (match_code \"high\")\n+\t   (and (match_code \"const_int\")\n+                (match_test \"(ival & 0xffff0000) == 0\")))))\n+\n (define_register_constraint \"k\" \"STACK_REG\"\n  \"@internal The stack register.\")\n \n@@ -117,11 +124,9 @@\n \t\t   : ((ival >= 0 && ival <= 1020) && ((ival & 3) == 0))\")))\n \n (define_constraint \"N\"\n- \"In ARM/Thumb-2 state a constant suitable for a MOVW instruction.\n-  In Thumb-1 state a constant in the range 0-31.\"\n+ \"Thumb-1 state a constant in the range 0-31.\"\n  (and (match_code \"const_int\")\n-      (match_test \"TARGET_32BIT ? arm_arch_thumb2 && ((ival & 0xffff0000) == 0)\n-\t\t\t\t: (ival >= 0 && ival <= 31)\")))\n+      (match_test \"!TARGET_32BIT && (ival >= 0 && ival <= 31)\")))\n \n (define_constraint \"O\"\n  \"In Thumb-1 state a constant that is a multiple of 4 in the range"}, {"sha": "0c5c2dbd9ce1ad15f25dcd6339fe954b97ed60ea", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=d58bc084b4b97eb0056a2658604c855fa1775c5f", "patch": "@@ -225,7 +225,7 @@\n \n (define_insn \"*thumb2_movsi_insn\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rk,r,r,r,rk,m\")\n-\t(match_operand:SI 1 \"general_operand\"\t   \"rk ,I,K,N,mi,rk\"))]\n+\t(match_operand:SI 1 \"general_operand\"\t   \"rk ,I,K,j,mi,rk\"))]\n   \"TARGET_THUMB2 && ! TARGET_IWMMXT\n    && !(TARGET_HARD_FLOAT && TARGET_VFP)\n    && (   register_operand (operands[0], SImode)"}, {"sha": "06c2019bd34ff482fe59e9b537b05927e41e01e2", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d58bc084b4b97eb0056a2658604c855fa1775c5f/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=d58bc084b4b97eb0056a2658604c855fa1775c5f", "patch": "@@ -51,7 +51,7 @@\n ;; problems because small constants get converted into adds.\n (define_insn \"*arm_movsi_vfp\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rk,r,r,r,rk,m ,*t,r,*t,*t, *Uv\")\n-      (match_operand:SI 1 \"general_operand\"\t   \"rk, I,K,N,mi,rk,r,*t,*t,*Uvi,*t\"))]\n+      (match_operand:SI 1 \"general_operand\"\t   \"rk, I,K,j,mi,rk,r,*t,*t,*Uvi,*t\"))]\n   \"TARGET_ARM && TARGET_VFP && TARGET_HARD_FLOAT\n    && (   s_register_operand (operands[0], SImode)\n        || s_register_operand (operands[1], SImode))\"\n@@ -88,7 +88,7 @@\n \n (define_insn \"*thumb2_movsi_vfp\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rk,r,r,r,rk,m,*t,r, *t,*t, *Uv\")\n-      (match_operand:SI 1 \"general_operand\"\t   \"rk, I,K,N,mi,rk,r,*t,*t,*Uvi,*t\"))]\n+      (match_operand:SI 1 \"general_operand\"\t   \"rk, I,K,j,mi,rk,r,*t,*t,*Uvi,*t\"))]\n   \"TARGET_THUMB2 && TARGET_VFP && TARGET_HARD_FLOAT\n    && (   s_register_operand (operands[0], SImode)\n        || s_register_operand (operands[1], SImode))\""}]}