{"sha": "0b5a27249aa584eb385d9146d94ef1067241e155", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI1YTI3MjQ5YWE1ODRlYjM4NWQ5MTQ2ZDk0ZWYxMDY3MjQxZTE1NQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2011-04-21T09:39:57Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-04-21T09:39:57Z"}, "message": "tree-vect-data-refs.c (vect_drs_dependent_in_basic_block): Use operand_equal_p to compare DR_BASE_ADDRESSes.\n\ngcc/\n\t* tree-vect-data-refs.c (vect_drs_dependent_in_basic_block): Use\n\toperand_equal_p to compare DR_BASE_ADDRESSes.\n\t(vect_check_interleaving): Likewise.\n\ngcc/testsuite/\n\t* gcc.dg/vect/vect-119.c: New test.\n\nFrom-SVN: r172817", "tree": {"sha": "8d4502e068a72f18b13cf72a0bd83eb685187b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d4502e068a72f18b13cf72a0bd83eb685187b18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b5a27249aa584eb385d9146d94ef1067241e155", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5a27249aa584eb385d9146d94ef1067241e155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b5a27249aa584eb385d9146d94ef1067241e155", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5a27249aa584eb385d9146d94ef1067241e155/comments", "author": null, "committer": null, "parents": [{"sha": "5a2e560830dac0c29358248b5b489446c18e179e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a2e560830dac0c29358248b5b489446c18e179e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a2e560830dac0c29358248b5b489446c18e179e"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "028e230f4f6a2e8ee181f11ae3dbc81fbef8da10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5a27249aa584eb385d9146d94ef1067241e155/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5a27249aa584eb385d9146d94ef1067241e155/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b5a27249aa584eb385d9146d94ef1067241e155", "patch": "@@ -1,3 +1,9 @@\n+2011-04-21  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* tree-vect-data-refs.c (vect_drs_dependent_in_basic_block): Use\n+\toperand_equal_p to compare DR_BASE_ADDRESSes.\n+\t(vect_check_interleaving): Likewise.\n+\n 2011-04-21  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR target/46329"}, {"sha": "5917c5ba638cac869e5e43e24a35ccdac9237d8a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5a27249aa584eb385d9146d94ef1067241e155/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5a27249aa584eb385d9146d94ef1067241e155/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b5a27249aa584eb385d9146d94ef1067241e155", "patch": "@@ -1,3 +1,7 @@\n+2011-04-21  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* gcc.dg/vect/vect-119.c: New test.\n+\n 2011-04-21  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gcc.dg/vect/vect.exp: Run the main tests twice, one with -flto"}, {"sha": "fa40f15c934bedf20d0d3b70eebcefbfeb0ca3c8", "filename": "gcc/testsuite/gcc.dg/vect/vect-119.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5a27249aa584eb385d9146d94ef1067241e155/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-119.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5a27249aa584eb385d9146d94ef1067241e155/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-119.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-119.c?ref=0b5a27249aa584eb385d9146d94ef1067241e155", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+\n+#define OUTER 32\n+#define INNER 40\n+\n+static unsigned int\n+bar (const unsigned int x[INNER][2], unsigned int sum)\n+{\n+  int i;\n+\n+  for (i = 0; i < INNER; i++)\n+    sum += x[i][0] * x[i][0] + x[i][1] * x[i][1];\n+  return sum;\n+}\n+\n+unsigned int foo (const unsigned int x[OUTER][INNER][2])\n+{\n+  int i;\n+  unsigned int sum;\n+\n+  sum = 0.0f;\n+  for (i = 0; i < OUTER; i++)\n+    sum = bar (x[i], sum);\n+  return sum;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Detected interleaving of size 2\" 1 \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "9ce4626f4b13cf9f75733d36c130f34e8d6e3f88", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b5a27249aa584eb385d9146d94ef1067241e155/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b5a27249aa584eb385d9146d94ef1067241e155/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=0b5a27249aa584eb385d9146d94ef1067241e155", "patch": "@@ -314,11 +314,7 @@ vect_drs_dependent_in_basic_block (struct data_reference *dra,\n \n   /* Check that the data-refs have same bases and offsets.  If not, we can't\n      determine if they are dependent.  */\n-  if ((DR_BASE_ADDRESS (dra) != DR_BASE_ADDRESS (drb)\n-       && (TREE_CODE (DR_BASE_ADDRESS (dra)) != ADDR_EXPR\n-           || TREE_CODE (DR_BASE_ADDRESS (drb)) != ADDR_EXPR\n-           || TREE_OPERAND (DR_BASE_ADDRESS (dra), 0)\n-           != TREE_OPERAND (DR_BASE_ADDRESS (drb),0)))\n+  if (!operand_equal_p (DR_BASE_ADDRESS (dra), DR_BASE_ADDRESS (drb), 0)\n       || !dr_equal_offsets_p (dra, drb))\n     return true;\n \n@@ -364,11 +360,7 @@ vect_check_interleaving (struct data_reference *dra,\n \n   /* Check that the data-refs have same first location (except init) and they\n      are both either store or load (not load and store).  */\n-  if ((DR_BASE_ADDRESS (dra) != DR_BASE_ADDRESS (drb)\n-       && (TREE_CODE (DR_BASE_ADDRESS (dra)) != ADDR_EXPR\n-\t   || TREE_CODE (DR_BASE_ADDRESS (drb)) != ADDR_EXPR\n-\t   || TREE_OPERAND (DR_BASE_ADDRESS (dra), 0)\n-\t   != TREE_OPERAND (DR_BASE_ADDRESS (drb),0)))\n+  if (!operand_equal_p (DR_BASE_ADDRESS (dra), DR_BASE_ADDRESS (drb), 0)\n       || !dr_equal_offsets_p (dra, drb)\n       || !tree_int_cst_compare (DR_INIT (dra), DR_INIT (drb))\n       || DR_IS_READ (dra) != DR_IS_READ (drb))"}]}