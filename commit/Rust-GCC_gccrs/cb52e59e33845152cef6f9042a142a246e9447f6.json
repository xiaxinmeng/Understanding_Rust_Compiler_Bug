{"sha": "cb52e59e33845152cef6f9042a142a246e9447f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I1MmU1OWUzMzg0NTE1MmNlZjZmOTA0MmExNDJhMjQ2ZTk0NDdmNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-29T12:25:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-29T13:01:21Z"}, "message": "rtl-optimization/98863 - fix PRE/CPROP memory usage check\n\nThis fixes overflow of the memory usage estimate in turn failing\nto disable itself on WRF with LTO, causing a few GBs worth of\nmemory peak.\n\n2021-01-29  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/98863\n\t* gcse.c (gcse_or_cprop_is_too_expensive): Use unsigned\n\tHOST_WIDE_INT for the memory estimate.", "tree": {"sha": "a68198405c71a823e31a75ab595d0f21d1166776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a68198405c71a823e31a75ab595d0f21d1166776"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb52e59e33845152cef6f9042a142a246e9447f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb52e59e33845152cef6f9042a142a246e9447f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb52e59e33845152cef6f9042a142a246e9447f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb52e59e33845152cef6f9042a142a246e9447f6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4e426f7bd7df279cb7aaecd91d273d9b7db338d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e426f7bd7df279cb7aaecd91d273d9b7db338d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4e426f7bd7df279cb7aaecd91d273d9b7db338d"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "29c9f900a8c3ed50a7f2a9a78b8124095dddd259", "filename": "gcc/gcse.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb52e59e33845152cef6f9042a142a246e9447f6/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb52e59e33845152cef6f9042a142a246e9447f6/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=cb52e59e33845152cef6f9042a142a246e9447f6", "patch": "@@ -3982,9 +3982,9 @@ update_ld_motion_stores (struct gcse_expr * expr)\n bool\n gcse_or_cprop_is_too_expensive (const char *pass)\n {\n-  int memory_request = (n_basic_blocks_for_fn (cfun)\n-\t\t\t* SBITMAP_SET_SIZE (max_reg_num ())\n-\t\t\t* sizeof (SBITMAP_ELT_TYPE));\n+  unsigned HOST_WIDE_INT memory_request\n+    = ((unsigned HOST_WIDE_INT)n_basic_blocks_for_fn (cfun)\n+       * SBITMAP_SET_SIZE (max_reg_num ()) * sizeof (SBITMAP_ELT_TYPE));\n   \n   /* Trying to perform global optimizations on flow graphs which have\n      a high connectivity will take a long time and is unlikely to be\n@@ -4007,11 +4007,12 @@ gcse_or_cprop_is_too_expensive (const char *pass)\n \n   /* If allocating memory for the dataflow bitmaps would take up too much\n      storage it's better just to disable the optimization.  */\n-  if (memory_request > param_max_gcse_memory)\n+  if (memory_request > (unsigned HOST_WIDE_INT)param_max_gcse_memory)\n     {\n       warning (OPT_Wdisabled_optimization,\n \t       \"%s: %d basic blocks and %d registers; \"\n-\t       \"increase %<--param max-gcse-memory%> above %d\",\n+\t       \"increase %<--param max-gcse-memory%> above \"\n+\t       HOST_WIDE_INT_PRINT_UNSIGNED,\n \t       pass, n_basic_blocks_for_fn (cfun), max_reg_num (),\n \t       memory_request);\n "}]}