{"sha": "3c940d42701707559fabe49be99296f60fbc43e7", "node_id": "C_kwDOANBUbNoAKDNjOTQwZDQyNzAxNzA3NTU5ZmFiZTQ5YmU5OTI5NmY2MGZiYzQzZTc", "commit": {"author": {"name": "Hongyu Wang", "email": "hongyu.wang@intel.com", "date": "2022-04-22T06:42:30Z"}, "committer": {"name": "Hongyu Wang", "email": "hongyu.wang@intel.com", "date": "2022-04-25T01:17:36Z"}, "message": "AVX512F: Add missing macro for mask(z?)_scalf_s[sd] [PR 105339]\n\nAdd missing macro under O0 and adjust macro format for scalf\nintrinsics.\n\ngcc/ChangeLog:\n\n\tPR target/105339\n\t* config/i386/avx512fintrin.h (_mm512_scalef_round_pd):\n\tAdd parentheses for parameters and djust format.\n\t(_mm512_mask_scalef_round_pd): Ditto.\n\t(_mm512_maskz_scalef_round_pd): Ditto.\n\t(_mm512_scalef_round_ps): Ditto.\n\t(_mm512_mask_scalef_round_ps): Ditto.\n\t(_mm512_maskz_scalef_round_ps): Ditto.\n\t(_mm_scalef_round_sd): Use _mm_undefined_pd.\n\t(_mm_scalef_round_ss): Use _mm_undefined_ps.\n\t(_mm_mask_scalef_round_sd): New macro.\n\t(_mm_mask_scalef_round_ss): Ditto.\n\t(_mm_maskz_scalef_round_sd): Ditto.\n\t(_mm_maskz_scalef_round_ss): Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/105339\n\t* gcc.target/i386/sse-14.c: Add tests for new macro.", "tree": {"sha": "d28690de2ae3f8c0f8d7743aa9d53c2ed58076d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d28690de2ae3f8c0f8d7743aa9d53c2ed58076d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c940d42701707559fabe49be99296f60fbc43e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c940d42701707559fabe49be99296f60fbc43e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c940d42701707559fabe49be99296f60fbc43e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c940d42701707559fabe49be99296f60fbc43e7/comments", "author": {"login": "wwwhhhyyy", "id": 5366075, "node_id": "MDQ6VXNlcjUzNjYwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5366075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwhhhyyy", "html_url": "https://github.com/wwwhhhyyy", "followers_url": "https://api.github.com/users/wwwhhhyyy/followers", "following_url": "https://api.github.com/users/wwwhhhyyy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwhhhyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwhhhyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwhhhyyy/subscriptions", "organizations_url": "https://api.github.com/users/wwwhhhyyy/orgs", "repos_url": "https://api.github.com/users/wwwhhhyyy/repos", "events_url": "https://api.github.com/users/wwwhhhyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwhhhyyy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wwwhhhyyy", "id": 5366075, "node_id": "MDQ6VXNlcjUzNjYwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5366075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwhhhyyy", "html_url": "https://github.com/wwwhhhyyy", "followers_url": "https://api.github.com/users/wwwhhhyyy/followers", "following_url": "https://api.github.com/users/wwwhhhyyy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwhhhyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwhhhyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwhhhyyy/subscriptions", "organizations_url": "https://api.github.com/users/wwwhhhyyy/orgs", "repos_url": "https://api.github.com/users/wwwhhhyyy/repos", "events_url": "https://api.github.com/users/wwwhhhyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwhhhyyy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd64885971be856a0feffb0d6eb59e62655d1285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd64885971be856a0feffb0d6eb59e62655d1285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd64885971be856a0feffb0d6eb59e62655d1285"}], "stats": {"total": 80, "additions": 60, "deletions": 20}, "files": [{"sha": "77d6249c2bc50aaca57607bcb9788ac7b0c6a656", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 56, "deletions": 20, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c940d42701707559fabe49be99296f60fbc43e7/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c940d42701707559fabe49be99296f60fbc43e7/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=3c940d42701707559fabe49be99296f60fbc43e7", "patch": "@@ -3286,31 +3286,67 @@ _mm_maskz_scalef_round_ss (__mmask8 __U, __m128 __A, __m128 __B, const int __R)\n \t\t\t\t\t\t      (__mmask8) __U, __R);\n }\n #else\n-#define _mm512_scalef_round_pd(A, B, C)            \\\n-    (__m512d)__builtin_ia32_scalefpd512_mask(A, B, (__v8df)_mm512_undefined_pd(), -1, C)\n-\n-#define _mm512_mask_scalef_round_pd(W, U, A, B, C) \\\n-    (__m512d)__builtin_ia32_scalefpd512_mask(A, B, W, U, C)\n-\n-#define _mm512_maskz_scalef_round_pd(U, A, B, C)   \\\n-    (__m512d)__builtin_ia32_scalefpd512_mask(A, B, (__v8df)_mm512_setzero_pd(), U, C)\n+#define _mm512_scalef_round_pd(A, B, C)\t\t\t\t\t\\\n+  ((__m512d)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefpd512_mask((A), (B),\t\t\t\t\\\n+\t\t\t\t   (__v8df) _mm512_undefined_pd(),\t\\\n+\t\t\t\t   -1, (C)))\n+\n+#define _mm512_mask_scalef_round_pd(W, U, A, B, C)\t\t\t\\\n+  ((__m512d) __builtin_ia32_scalefpd512_mask((A), (B), (W), (U), (C)))\n+\n+#define _mm512_maskz_scalef_round_pd(U, A, B, C)\t\t\t\\\n+  ((__m512d)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefpd512_mask((A), (B),\t\t\t\t\\\n+\t\t\t\t   (__v8df) _mm512_setzero_pd(),\t\\\n+\t\t\t\t   (U), (C)))\n+\n+#define _mm512_scalef_round_ps(A, B, C)\t\t\t\t\t\\\n+  ((__m512)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefps512_mask((A), (B),\t\t\t\t\\\n+\t\t\t\t   (__v16sf) _mm512_undefined_ps(),\t\\\n+\t\t\t\t   -1, (C)))\n+\n+#define _mm512_mask_scalef_round_ps(W, U, A, B, C)\t\t\t\\\n+  ((__m512) __builtin_ia32_scalefps512_mask((A), (B), (W), (U), (C)))\n+\n+#define _mm512_maskz_scalef_round_ps(U, A, B, C)\t\t\t\\\n+  ((__m512)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefps512_mask((A), (B),\t\t\t\t\\\n+\t\t\t\t   (__v16sf) _mm512_setzero_ps(),\t\\\n+\t\t\t\t   (U), (C)))\n+\n+#define _mm_scalef_round_sd(A, B, C)\t\t\t\t\t\\\n+  ((__m128d)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefsd_mask_round ((A), (B),\t\t\t\\\n+\t\t\t\t       (__v2df) _mm_undefined_pd (),\t\\\n+\t\t\t\t       -1, (C)))\n \n-#define _mm512_scalef_round_ps(A, B, C)            \\\n-    (__m512)__builtin_ia32_scalefps512_mask(A, B, (__v16sf)_mm512_undefined_ps(), -1, C)\n+#define _mm_scalef_round_ss(A, B, C)\t\t\t\t\t\\\n+  ((__m128)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefss_mask_round ((A), (B),\t\t\t\\\n+\t\t\t\t       (__v4sf) _mm_undefined_ps (),\t\\\n+\t\t\t\t       -1, (C)))\n \n-#define _mm512_mask_scalef_round_ps(W, U, A, B, C) \\\n-    (__m512)__builtin_ia32_scalefps512_mask(A, B, W, U, C)\n+#define _mm_mask_scalef_round_sd(W, U, A, B, C)\t\t\t\t\\\n+  ((__m128d)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefsd_mask_round ((A), (B), (W), (U), (C)))\n \n-#define _mm512_maskz_scalef_round_ps(U, A, B, C)   \\\n-    (__m512)__builtin_ia32_scalefps512_mask(A, B, (__v16sf)_mm512_setzero_ps(), U, C)\n+#define _mm_mask_scalef_round_ss(W, U, A, B, C)\t\t\t\t\\\n+  ((__m128)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefss_mask_round ((A), (B), (W), (U), (C)))\n \n-#define _mm_scalef_round_sd(A, B, C)            \\\n-    (__m128d)__builtin_ia32_scalefsd_mask_round (A, B, \\\n-\t(__v2df)_mm_setzero_pd (), -1, C)\n+#define _mm_maskz_scalef_round_sd(U, A, B, C)\t\t\t\t\\\n+  ((__m128d)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefsd_mask_round ((A), (B),\t\t\t\\\n+\t\t\t\t       (__v2df) _mm_setzero_pd (),\t\\\n+\t\t\t\t       (U), (C)))\n \n-#define _mm_scalef_round_ss(A, B, C)            \\\n-    (__m128)__builtin_ia32_scalefss_mask_round (A, B, \\\n-\t(__v4sf)_mm_setzero_ps (), -1, C)\n+#define _mm_maskz_scalef_round_ss(U, A, B, C)\t\t\t\t\\\n+  ((__m128)\t\t\t\t\t\t\t\t\\\n+   __builtin_ia32_scalefss_mask_round ((A), (B),\t\t\t\\\n+\t\t\t\t       (__v4sf) _mm_setzero_ps (),\t\\\n+\t\t\t\t       (U), (C)))\n #endif\n \n #define _mm_mask_scalef_sd(W, U, A, B) \\"}, {"sha": "f41493b93f3ddb3019c48c9b3d849b27f6870391", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c940d42701707559fabe49be99296f60fbc43e7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c940d42701707559fabe49be99296f60fbc43e7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=3c940d42701707559fabe49be99296f60fbc43e7", "patch": "@@ -430,7 +430,9 @@ test_3 (_mm_maskz_mul_round_sd, __m128d, __mmask8, __m128d, __m128d, 9)\n test_3 (_mm512_maskz_mul_round_ps, __m512, __mmask16, __m512, __m512, 9)\n test_3 (_mm_maskz_mul_round_ss, __m128, __mmask8, __m128, __m128, 9)\n test_3 (_mm512_maskz_scalef_round_pd, __m512d, __mmask8, __m512d, __m512d, 9)\n+test_3 (_mm_maskz_scalef_round_sd, __m128d, __mmask8, __m128d, __m128d, 9)\n test_3 (_mm512_maskz_scalef_round_ps, __m512, __mmask16, __m512, __m512, 9)\n+test_3 (_mm_maskz_scalef_round_ss, __m128, __mmask8, __m128, __m128, 9)\n test_3 (_mm512_maskz_shuffle_f32x4, __m512, __mmask16, __m512, __m512, 1)\n test_3 (_mm512_maskz_shuffle_f64x2, __m512d, __mmask8, __m512d, __m512d, 1)\n test_3 (_mm512_maskz_shuffle_i32x4, __m512i, __mmask16, __m512i, __m512i, 1)\n@@ -545,7 +547,9 @@ test_4 (_mm_mask_mul_round_sd, __m128d, __m128d, __mmask8, __m128d, __m128d, 9)\n test_4 (_mm512_mask_mul_round_ps, __m512, __m512, __mmask16, __m512, __m512, 9)\n test_4 (_mm_mask_mul_round_ss, __m128, __m128, __mmask8, __m128, __m128, 9)\n test_4 (_mm512_mask_scalef_round_pd, __m512d, __m512d, __mmask8, __m512d, __m512d, 9)\n+test_4 (_mm_mask_scalef_round_sd, __m128d, __m128d, __mmask8, __m128d, __m128d, 9)\n test_4 (_mm512_mask_scalef_round_ps, __m512, __m512, __mmask16, __m512, __m512, 9)\n+test_4 (_mm_mask_scalef_round_ss, __m128, __m128, __mmask8, __m128, __m128, 9)\n test_4 (_mm512_mask_shuffle_f32x4, __m512, __m512, __mmask16, __m512, __m512, 1)\n test_4 (_mm512_mask_shuffle_f64x2, __m512d, __m512d, __mmask8, __m512d, __m512d, 1)\n test_4 (_mm512_mask_shuffle_i32x4, __m512i, __m512i, __mmask16, __m512i, __m512i, 1)"}]}