{"sha": "5592679df783547049efc6d73727c5ff809ec302", "node_id": "C_kwDOANBUbNoAKDU1OTI2NzlkZjc4MzU0NzA0OWVmYzZkNzM3MjdjNWZmODA5ZWMzMDI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-23T16:17:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-23T16:17:05Z"}, "message": "testsuite: Fix up modules.exp [PR108899]\n\nOn Wed, Feb 22, 2023 at 02:33:42PM -0300, Alexandre Oliva via Gcc-patches wrote:\n> When a multi-source module is found to be unsupported, we fail\n> module_cmi_p and subsequent sources.  Override proc unsupported to\n> mark the result in module_do, and test it to skip module_cmp_p and\n> subsequent related tests.\n>\n> for  gcc/testsuite/ChangeLog\n>\n>       * g++.dg/modules/modules.exp: Override unsupported to update\n>       module_do, and test it after dg-test.\n\nThis patch breaks testing with more than one set of options in\ntarget board, like\nmake check-g++ RUNTESTFLAGS='--target_board=unix\\{-m32,-m64\\} modules.exp'\nyields:\n...\n                 === g++ Summary for unix/-m32 ===\n\n # of expected passes            7217\n # of unexpected failures        1\n # of expected failures          18\n # of unsupported tests          2\n Running target unix/-m64\n...\n ERROR: tcl error sourcing /home/jakub/src/gcc/gcc/testsuite/g++.dg/modules/modules.exp.\n ERROR: tcl error code TCL OPERATION RENAME TARGET_EXISTS\n ERROR: can't rename to \"saved-unsupported\": command already exists\n     while executing\n \"rename unsupported saved-unsupported\"\n     (file \"/home/jakub/src/gcc/gcc/testsuite/g++.dg/modules/modules.exp\" line 322)\n     invoked from within\n \"source /home/jakub/src/gcc/gcc/testsuite/g++.dg/modules/modules.exp\"\n     (\"uplevel\" body line 1)\n     invoked from within\n \"uplevel #0 source /home/jakub/src/gcc/gcc/testsuite/g++.dg/modules/modules.exp\"\n     invoked from within\n \"catch \"uplevel #0 source $test_file_name\" msg\"\n\nIn other spots where we in *.exp files rename some routine, we guard that\nand the following patch does that for modules.exp too.\n\nTested with running\nmake check-g++ RUNTESTFLAGS='--target_board=unix\\{-m32,-m64\\} modules.exp'\nagain which now works properly again.\n\n2023-02-23  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR testsuite/108899\n\t* g++.dg/modules/modules.exp: Only override unsupported if it\n\texists and saved-unsupported doesn't.", "tree": {"sha": "870f21109e6aa13b26c91beb478303eed8502443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/870f21109e6aa13b26c91beb478303eed8502443"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5592679df783547049efc6d73727c5ff809ec302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5592679df783547049efc6d73727c5ff809ec302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5592679df783547049efc6d73727c5ff809ec302", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5592679df783547049efc6d73727c5ff809ec302/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "426b0ae103894d1f1bd82e5f049ff8a53bd82a8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/426b0ae103894d1f1bd82e5f049ff8a53bd82a8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/426b0ae103894d1f1bd82e5f049ff8a53bd82a8d"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "80aa392bc7f3bf35f06827d11a8039e161a931a9", "filename": "gcc/testsuite/g++.dg/modules/modules.exp", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5592679df783547049efc6d73727c5ff809ec302/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5592679df783547049efc6d73727c5ff809ec302/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp?ref=5592679df783547049efc6d73727c5ff809ec302", "patch": "@@ -319,11 +319,15 @@ cleanup_module_files [find $DEFAULT_REPO *.gcm]\n # so that, after an unsupported result in dg-test, we can skip rather\n # than fail subsequent related tests.\n set module_do {\"compile\" \"P\"}\n-rename unsupported saved-unsupported\n-proc unsupported { args } {\n-    global module_do\n-    lset module_do 1 \"N\"\n-    return [saved-unsupported $args]\n+if { [info procs unsupported] != [list] \\\n+      && [info procs saved-unsupported] == [list] } {\n+    rename unsupported saved-unsupported\n+\n+    proc unsupported { args } {\n+\tglobal module_do\n+\tlset module_do 1 \"N\"\n+\treturn [saved-unsupported $args]\n+    }\n }\n \n # not grouped tests, sadly tcl doesn't have negated glob"}]}