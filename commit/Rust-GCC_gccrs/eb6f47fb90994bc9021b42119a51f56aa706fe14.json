{"sha": "eb6f47fb90994bc9021b42119a51f56aa706fe14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI2ZjQ3ZmI5MDk5NGJjOTAyMWI0MjExOWE1MWY1NmFhNzA2ZmUxNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-07-05T07:51:07Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-07-05T07:51:07Z"}, "message": "target-insns.def (trap): New targetm instruction pattern.\n\ngcc/\n\t* target-insns.def (trap): New targetm instruction pattern.\n\t* builtins.c (expand_builtin_trap): Use it instead of HAVE_*/gen_*\n\tinterface.\n\t* explow.c (allocate_dynamic_stack_space): Likewise.\n\t* ifcvt.c (find_if_header): Likewise.\n\nFrom-SVN: r225425", "tree": {"sha": "d03fee8436802cd55820f4aa8cc8096a090c3417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d03fee8436802cd55820f4aa8cc8096a090c3417"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb6f47fb90994bc9021b42119a51f56aa706fe14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6f47fb90994bc9021b42119a51f56aa706fe14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb6f47fb90994bc9021b42119a51f56aa706fe14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6f47fb90994bc9021b42119a51f56aa706fe14/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "134b044daf0999cee9f85203be3fa35c48051da1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134b044daf0999cee9f85203be3fa35c48051da1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/134b044daf0999cee9f85203be3fa35c48051da1"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "848d4dbb68e6d5d2d5b1fd18a6b4496f0ee491b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb6f47fb90994bc9021b42119a51f56aa706fe14", "patch": "@@ -1,3 +1,11 @@\n+2015-07-05  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* target-insns.def (trap): New targetm instruction pattern.\n+\t* builtins.c (expand_builtin_trap): Use it instead of HAVE_*/gen_*\n+\tinterface.\n+\t* explow.c (allocate_dynamic_stack_space): Likewise.\n+\t* ifcvt.c (find_if_header): Likewise.\n+\n 2015-07-05  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* target-insns.def (prefetch): New targetm instruction pattern."}, {"sha": "d953c634800620f308198f6a30dfe5081404b564", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=eb6f47fb90994bc9021b42119a51f56aa706fe14", "patch": "@@ -4737,18 +4737,16 @@ expand_builtin_assume_aligned (tree exp, rtx target)\n void\n expand_builtin_trap (void)\n {\n-#ifdef HAVE_trap\n-  if (HAVE_trap)\n+  if (targetm.have_trap ())\n     {\n-      rtx_insn *insn = emit_insn (gen_trap ());\n+      rtx_insn *insn = emit_insn (targetm.gen_trap ());\n       /* For trap insns when not accumulating outgoing args force\n \t REG_ARGS_SIZE note to prevent crossjumping of calls with\n \t different args sizes.  */\n       if (!ACCUMULATE_OUTGOING_ARGS)\n \tadd_reg_note (insn, REG_ARGS_SIZE, GEN_INT (stack_pointer_delta));\n     }\n   else\n-#endif\n     emit_library_call (abort_libfunc, LCT_NORETURN, VOIDmode, 0);\n   emit_barrier ();\n }"}, {"sha": "c2158f35f28e9af88aa56dc30c6193ac0ced74f7", "filename": "gcc/explow.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=eb6f47fb90994bc9021b42119a51f56aa706fe14", "patch": "@@ -1422,11 +1422,9 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n \n \t  emit_cmp_and_jump_insns (available, size, GEU, NULL_RTX, Pmode, 1,\n \t\t\t\t   space_available);\n-#ifdef HAVE_trap\n-\t  if (HAVE_trap)\n-\t    emit_insn (gen_trap ());\n+\t  if (targetm.have_trap ())\n+\t    emit_insn (targetm.gen_trap ());\n \t  else\n-#endif\n \t    error (\"stack limits not supported on this target\");\n \t  emit_barrier ();\n \t  emit_label (space_available);"}, {"sha": "f796799fc3d92e60c6e4c614942acada381ea493", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=eb6f47fb90994bc9021b42119a51f56aa706fe14", "patch": "@@ -67,9 +67,6 @@\n #ifndef HAVE_decscc\n #define HAVE_decscc 0\n #endif\n-#ifndef HAVE_trap\n-#define HAVE_trap 0\n-#endif\n \n #ifndef MAX_CONDITIONAL_EXECUTE\n #define MAX_CONDITIONAL_EXECUTE \\\n@@ -3414,7 +3411,7 @@ find_if_header (basic_block test_bb, int pass)\n       && cond_exec_find_if_block (&ce_info))\n     goto success;\n \n-  if (HAVE_trap\n+  if (targetm.have_trap ()\n       && optab_handler (ctrap_optab, word_mode) != CODE_FOR_nothing\n       && find_cond_trap (test_bb, then_edge, else_edge))\n     goto success;"}, {"sha": "33e112e9200bd47ae48188aff11ebf2aabcc2f42", "filename": "gcc/target-insns.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2Ftarget-insns.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6f47fb90994bc9021b42119a51f56aa706fe14/gcc%2Ftarget-insns.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-insns.def?ref=eb6f47fb90994bc9021b42119a51f56aa706fe14", "patch": "@@ -51,5 +51,6 @@ DEF_TARGET_INSN (sibcall_epilogue, (void))\n DEF_TARGET_INSN (simple_return, (void))\n DEF_TARGET_INSN (store_multiple, (rtx x0, rtx x1, rtx x2))\n DEF_TARGET_INSN (tablejump, (rtx x0, rtx x1))\n+DEF_TARGET_INSN (trap, (void))\n DEF_TARGET_INSN (untyped_call, (rtx x0, rtx x1, rtx x2))\n DEF_TARGET_INSN (untyped_return, (rtx x0, rtx x1))"}]}