{"sha": "0d858698b6741132801b03c09901c56cd78e5083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ4NTg2OThiNjc0MTEzMjgwMWIwM2MwOTkwMWM1NmNkNzhlNTA4Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-04-24T07:01:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-04-24T07:01:41Z"}, "message": "decl.c (gnat_to_gnu_entity): If an alignment is specified, do not promote that of the component type beyond it.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Type>: If an\n\talignment is specified, do not promote that of the component type\n\tbeyond it.\n\t<E_Array_Subtype>: Likewise.\n\nFrom-SVN: r146670", "tree": {"sha": "8a3bba04fcb19049af005796d22718b58a268485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a3bba04fcb19049af005796d22718b58a268485"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d858698b6741132801b03c09901c56cd78e5083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d858698b6741132801b03c09901c56cd78e5083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d858698b6741132801b03c09901c56cd78e5083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d858698b6741132801b03c09901c56cd78e5083/comments", "author": null, "committer": null, "parents": [{"sha": "6216f94e37db8de5a846c5945f4aa5f4e32aaedf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6216f94e37db8de5a846c5945f4aa5f4e32aaedf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6216f94e37db8de5a846c5945f4aa5f4e32aaedf"}], "stats": {"total": 70, "additions": 64, "deletions": 6}, "files": [{"sha": "0c74f82f1ddf9cf4a1fe018d41d2389c2487aa10", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0d858698b6741132801b03c09901c56cd78e5083", "patch": "@@ -1,3 +1,10 @@\n+2009-04-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Type>: If an\n+\talignment is specified, do not promote that of the component type\n+\tbeyond it.\n+\t<E_Array_Subtype>: Likewise.\n+\n 2009-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* einfo.ads (Is_True_Constant): Lift restriction on atomic objects."}, {"sha": "bc44fa06a20ac1b21ebf5c2b34e4f6444f766e95", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=0d858698b6741132801b03c09901c56cd78e5083", "patch": "@@ -1957,11 +1957,28 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \n \tif (gnu_comp_size && !Is_Bit_Packed_Array (gnat_entity))\n \t  {\n-\t    tree orig_tem;\n+\t    tree orig_tem = tem;\n+\t    unsigned int max_align;\n+\n+\t    /* If an alignment is specified, use it as a cap on the component\n+\t       type so that it can be honored for the whole type.  But ignore\n+\t       it for the original type of packed array types.  */\n+\t    if (No (Packed_Array_Type (gnat_entity))\n+\t\t&& Known_Alignment (gnat_entity))\n+\t      max_align = validate_alignment (Alignment (gnat_entity),\n+\t\t\t\t\t      gnat_entity, 0);\n+\t    else\n+\t      max_align = 0;\n+\n \t    tem = make_type_from_size (tem, gnu_comp_size, false);\n-\t    orig_tem = tem;\n+\t    if (max_align > 0 && TYPE_ALIGN (tem) > max_align)\n+\t      tem = orig_tem;\n+\t    else\n+\t      orig_tem = tem;\n+\n \t    tem = maybe_pad_type (tem, gnu_comp_size, 0, gnat_entity,\n \t\t\t\t  \"C_PAD\", false, definition, true);\n+\n \t    /* If a padding record was made, declare it now since it will\n \t       never be declared otherwise.  This is necessary to ensure\n \t       that its subtrees are properly marked.  */\n@@ -2343,13 +2360,31 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \n \t      if (gnu_comp_size && !Is_Bit_Packed_Array (gnat_entity))\n \t\t{\n-\t\t  tree orig_gnu_type;\n+\t\t  tree orig_gnu_type = gnu_type;\n+\t\t  unsigned int max_align;\n+\n+\t\t  /* If an alignment is specified, use it as a cap on the\n+\t\t     component type so that it can be honored for the whole\n+\t\t     type.  But ignore it for the original type of packed\n+\t\t     array types.  */\n+\t\t  if (No (Packed_Array_Type (gnat_entity))\n+\t\t      && Known_Alignment (gnat_entity))\n+\t\t    max_align = validate_alignment (Alignment (gnat_entity),\n+\t\t\t\t\t\t    gnat_entity, 0);\n+\t\t  else\n+\t\t    max_align = 0;\n+\n \t\t  gnu_type\n \t\t    = make_type_from_size (gnu_type, gnu_comp_size, false);\n-\t\t  orig_gnu_type = gnu_type;\n+\t\t  if (max_align > 0 && TYPE_ALIGN (gnu_type) > max_align)\n+\t\t    gnu_type = orig_gnu_type;\n+\t\t  else\n+\t\t    orig_gnu_type = gnu_type;\n+\n \t\t  gnu_type = maybe_pad_type (gnu_type, gnu_comp_size, 0,\n \t\t\t\t\t     gnat_entity, \"C_PAD\", false,\n \t\t\t\t\t     definition, true);\n+\n \t\t  /* If a padding record was made, declare it now since it\n \t\t     will never be declared otherwise.  This is necessary\n \t\t     to ensure that its subtrees are properly marked.  */"}, {"sha": "592aac6d985cf98f6f16f7a861675de13605236d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d858698b6741132801b03c09901c56cd78e5083", "patch": "@@ -1,3 +1,8 @@\n+2009-04-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/pr34799.ads: Rename to rep_clause1.ads.\n+\t* gnat.dg/specs/rep_clause2.ads: New test.\n+\n 2009-04-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/39794"}, {"sha": "57f63ad3b68449b9beacdee6ce5ebd5361484b26", "filename": "gcc/testsuite/gnat.dg/specs/rep_clause1.ads", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Frep_clause1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Frep_clause1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Frep_clause1.ads?ref=0d858698b6741132801b03c09901c56cd78e5083", "patch": "@@ -1,7 +1,7 @@\n -- { dg-do compile }\n -- { dg-options \"-gnatwa\" }\n \n-package PR34799 is\n+package Rep_Clause1 is\n    generic\n       type Custom_T is private;\n    package Handler is\n@@ -16,4 +16,4 @@ package PR34799 is\n          B at 1 range 0..0;\n       end record;\n    end Handler;\n-end PR34799;\n+end Rep_Clause1;", "previous_filename": "gcc/testsuite/gnat.dg/specs/pr34799.ads"}, {"sha": "361c141ec40ba58b156fe8056eaf5bc1ad4c25a1", "filename": "gcc/testsuite/gnat.dg/specs/rep_clause2.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Frep_clause2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d858698b6741132801b03c09901c56cd78e5083/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Frep_clause2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Frep_clause2.ads?ref=0d858698b6741132801b03c09901c56cd78e5083", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+package Rep_Clause2 is\n+\n+  type S is new String;\n+  for S'Component_Size use 256;\n+\n+  type T is new S(1..8);\n+\n+end Rep_Clause2;"}]}