{"sha": "017360184d9eabff8d1479b3ed09bd1a5b11ff11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE3MzYwMTg0ZDllYWJmZjhkMTQ3OWIzZWQwOWJkMWE1YjExZmYxMQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2016-01-22T16:44:10Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2016-01-22T16:44:10Z"}, "message": "system.h (string, algorithm): Include only conditionally.\n\n\t* system.h (string, algorithm): Include only conditionally.\n\t(new): Include always under C++.\n\t* bb-reorder.c (toplevel): Define INCLUDE_ALGORITHM.\n\t* final.c (toplevel): Ditto.\n\t* ipa-chkp.c (toplevel): Define INCLUDE_STRING.\n\t* genconditions.c (write_header): Make gencondmd.c define\n\tINCLUDE_STRING.\n\t* mem-stats.h (mem_usage::print_dash_line): Don't use std::string.\n\n\t* config/aarch64/aarch64.c (toplevel): Define INCLUDE_STRING.\n\t* common/config/aarch64/aarch64-common.c (toplevel): Ditto.\n\nFrom-SVN: r232736", "tree": {"sha": "93cc6b7235cf5430477fce1662a210a0904b17e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93cc6b7235cf5430477fce1662a210a0904b17e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/017360184d9eabff8d1479b3ed09bd1a5b11ff11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017360184d9eabff8d1479b3ed09bd1a5b11ff11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/017360184d9eabff8d1479b3ed09bd1a5b11ff11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017360184d9eabff8d1479b3ed09bd1a5b11ff11/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6041f70ae3c9822a41046a7826c1d33818d346bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6041f70ae3c9822a41046a7826c1d33818d346bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6041f70ae3c9822a41046a7826c1d33818d346bd"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "4a5665f528e80968922959dfdfdeeb530a90ff16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=017360184d9eabff8d1479b3ed09bd1a5b11ff11", "patch": "@@ -1,3 +1,17 @@\n+2016-01-22  Michael Matz  <matz@suse.de>\n+\n+\t* system.h (string, algorithm): Include only conditionally.\n+\t(new): Include always under C++.\n+\t* bb-reorder.c (toplevel): Define INCLUDE_ALGORITHM.\n+\t* final.c (toplevel): Ditto.\n+\t* ipa-chkp.c (toplevel): Define INCLUDE_STRING.\n+\t* genconditions.c (write_header): Make gencondmd.c define\n+\tINCLUDE_STRING.\n+\t* mem-stats.h (mem_usage::print_dash_line): Don't use std::string.\n+\n+\t* config/aarch64/aarch64.c (toplevel): Define INCLUDE_STRING.\n+\t* common/config/aarch64/aarch64-common.c (toplevel): Ditto.\n+\n 2016-01-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/pr63354.c: Restrict to Linux targets with"}, {"sha": "8cbde89b5e14582af21c9faa58ebedd3de685deb", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=017360184d9eabff8d1479b3ed09bd1a5b11ff11", "patch": "@@ -91,6 +91,7 @@\n */\n \n #include \"config.h\"\n+#define INCLUDE_ALGORITHM /* stable_sort */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"backend.h\""}, {"sha": "69f5da70e3d796752040de80ab1594a260e613d1", "filename": "gcc/common/config/aarch64/aarch64-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c?ref=017360184d9eabff8d1479b3ed09bd1a5b11ff11", "patch": "@@ -19,6 +19,7 @@\n    <http://www.gnu.org/licenses/>.  */\n \n #include \"config.h\"\n+#define INCLUDE_STRING\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\""}, {"sha": "df3dec0a72b9d6b81d0b739a1343b430718aec12", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=017360184d9eabff8d1479b3ed09bd1a5b11ff11", "patch": "@@ -19,6 +19,7 @@\n    <http://www.gnu.org/licenses/>.  */\n \n #include \"config.h\"\n+#define INCLUDE_STRING\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"backend.h\""}, {"sha": "55cf509611f7bc61246c63a6e997bd7402dd8428", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=017360184d9eabff8d1479b3ed09bd1a5b11ff11", "patch": "@@ -43,6 +43,7 @@ along with GCC; see the file COPYING3.  If not see\n    function_epilogue.  Those instructions never exist as rtl.  */\n \n #include \"config.h\"\n+#define INCLUDE_ALGORITHM /* reverse */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"backend.h\""}, {"sha": "8abf1c243a96dcda35e7adf5e2653fecc18b7fe2", "filename": "gcc/genconditions.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fgenconditions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fgenconditions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconditions.c?ref=017360184d9eabff8d1479b3ed09bd1a5b11ff11", "patch": "@@ -51,6 +51,7 @@ write_header (void)\n    machine description file.  */\\n\\\n \\n\\\n #include \\\"bconfig.h\\\"\\n\\\n+#define INCLUDE_STRING\\n\\\n #include \\\"system.h\\\"\\n\\\n \\n\\\n /* It is necessary, but not entirely safe, to include the headers below\\n\\"}, {"sha": "4a6b43e7a8a3452b909750a8fa6de7e5fae6a0a5", "filename": "gcc/ipa-chkp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fipa-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fipa-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-chkp.c?ref=017360184d9eabff8d1479b3ed09bd1a5b11ff11", "patch": "@@ -19,6 +19,7 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"config.h\"\n+#define INCLUDE_STRING\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"backend.h\""}, {"sha": "cdf2885ec2a64803170e5ce47da59908beeaf433", "filename": "gcc/mem-stats.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fmem-stats.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fmem-stats.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmem-stats.h?ref=017360184d9eabff8d1479b3ed09bd1a5b11ff11", "patch": "@@ -200,7 +200,9 @@ struct mem_usage\n   static inline void\n   print_dash_line (size_t count = 140)\n   {\n-    fprintf (stderr, \"%s\\n\", std::string (count, '-').c_str ());\n+    while (count--)\n+      fputc ('-', stderr);\n+    fputc ('\\n', stderr);\n   }\n \n   /* Dump header with NAME.  */"}, {"sha": "8151e0a7b2a35c0ac6da0c9dc0083e8098943c84", "filename": "gcc/system.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017360184d9eabff8d1479b3ed09bd1a5b11ff11/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=017360184d9eabff8d1479b3ed09bd1a5b11ff11", "patch": "@@ -198,8 +198,10 @@ extern int fprintf_unlocked (FILE *, const char *, ...);\n    the ctype macros through safe-ctype.h */\n \n #ifdef __cplusplus\n+#ifdef INCLUDE_STRING\n # include <string>\n #endif\n+#endif\n \n /* There are an extraordinary number of issues with <ctype.h>.\n    The last straw is that it varies with the locale.  Use libiberty's\n@@ -215,8 +217,11 @@ extern int errno;\n #endif\n \n #ifdef __cplusplus\n+#ifdef INCLUDE_ALGORITHM\n # include <algorithm>\n+#endif\n # include <cstring>\n+# include <new>\n # include <utility>\n #endif\n "}]}