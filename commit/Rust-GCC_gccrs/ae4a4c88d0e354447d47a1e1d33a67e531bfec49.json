{"sha": "ae4a4c88d0e354447d47a1e1d33a67e531bfec49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU0YTRjODhkMGUzNTQ0NDdkNDdhMWUxZDMzYTY3ZTUzMWJmZWM0OQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-06-25T17:30:38Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-06-25T17:30:38Z"}, "message": "expr.c (lookup_field): Print error and return error_mark_node if field reference is ambiguous.\n\n\t* expr.c (lookup_field): Print error and return error_mark_node if\n\tfield reference is ambiguous.\n\nFrom-SVN: r34698", "tree": {"sha": "b84accb0eeca3ecaf5c1072b07edc5fb6f81bce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b84accb0eeca3ecaf5c1072b07edc5fb6f81bce9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae4a4c88d0e354447d47a1e1d33a67e531bfec49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4a4c88d0e354447d47a1e1d33a67e531bfec49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae4a4c88d0e354447d47a1e1d33a67e531bfec49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4a4c88d0e354447d47a1e1d33a67e531bfec49/comments", "author": null, "committer": null, "parents": [{"sha": "120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/120f0c104ac56e8b6dcbe2b29dd6940e6fb0e7a2"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "95109964926ebb78e0cbeebca24e3cde17ba4151", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4a4c88d0e354447d47a1e1d33a67e531bfec49/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4a4c88d0e354447d47a1e1d33a67e531bfec49/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ae4a4c88d0e354447d47a1e1d33a67e531bfec49", "patch": "@@ -1,5 +1,8 @@\n 2000-06-24  Tom Tromey  <tromey@cygnus.com>\n \n+\t* expr.c (lookup_field): Print error and return error_mark_node if\n+\tfield reference is ambiguous.\n+\n \t* parse.y (check_abstract_method_definitions): Also check if\n \t`other_method' is abstract.\n "}, {"sha": "144eee99a968c03cb1eaceb629040ee36e06805f", "filename": "gcc/java/expr.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4a4c88d0e354447d47a1e1d33a67e531bfec49/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4a4c88d0e354447d47a1e1d33a67e531bfec49/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=ae4a4c88d0e354447d47a1e1d33a67e531bfec49", "patch": "@@ -1315,7 +1315,8 @@ expand_java_binop (type, op)\n \n /* Lookup the field named NAME in *TYPEP or its super classes.\n    If not found, return NULL_TREE.\n-   (If the *TYPEP is not found, return error_mark_node.)\n+   (If the *TYPEP is not found, or if the field reference is\n+   ambiguous, return error_mark_node.)\n    If found, return the FIELD_DECL, and set *TYPEP to the\n    class containing the field. */\n \n@@ -1334,6 +1335,7 @@ lookup_field (typep, name)\n   do\n     {\n       tree field, basetype_vec;\n+      tree save_field;\n       int n, i;\n \n       for (field = TYPE_FIELDS (*typep); field; field = TREE_CHAIN (field))\n@@ -1353,12 +1355,30 @@ lookup_field (typep, name)\n       /* Process implemented interfaces. */\n       basetype_vec = TYPE_BINFO_BASETYPES (*typep);\n       n = TREE_VEC_LENGTH (basetype_vec);\n+      save_field = NULL_TREE;\n       for (i = 0; i < n; i++)\n \t{\n \t  tree t = BINFO_TYPE (TREE_VEC_ELT (basetype_vec, i));\n \t  if ((field = lookup_field (&t, name)))\n-\t    return field;\n+\t    {\n+\t      if (save_field == NULL_TREE)\n+\t\tsave_field = field;\n+\t      else\n+\t\t{\n+\t\t  tree i1 = DECL_CONTEXT (save_field);\n+\t\t  tree i2 = DECL_CONTEXT (field);\n+\t\t  error (\"reference `%s' is ambiguous: appears in interface `%s' and interface `%s'\",\n+\t\t\t IDENTIFIER_POINTER (name),\n+\t\t\t IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (i1))),\n+\t\t\t IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (i2))));\n+\t\t  return error_mark_node;\n+\t\t}\n+\t    }\n \t}\n+\n+      if (save_field != NULL_TREE)\n+\treturn save_field;\n+\n       *typep = CLASSTYPE_SUPER (*typep);\n     } while (*typep);\n   return NULL_TREE;"}]}