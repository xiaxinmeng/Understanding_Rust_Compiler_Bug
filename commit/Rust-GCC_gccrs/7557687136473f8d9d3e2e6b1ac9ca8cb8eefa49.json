{"sha": "7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU1NzY4NzEzNjQ3M2Y4ZDlkM2UyZTZiMWFjOWNhOGNiOGVlZmE0OQ==", "commit": {"author": {"name": "Billy Biggs", "email": "billy.biggs@gmail.com", "date": "2005-10-05T08:27:44Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-10-05T08:27:44Z"}, "message": "re PR target/23809 (Misleading documentation for -mmmx/msse/...)\n\n2005-10-05  Billy Biggs  <billy.biggs@gmail.com>\n\t    Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR target/23809\n\n\t* doc/extend.texi (x86 Built-ins): Document that -msse and friends\n\tenable the instructions and not just the built-ins.\n\t* doc/invoke.texi (x86 Options): Likewise.\n\nCo-Authored-By: Paolo Bonzini <bonzini@gnu.org>\n\nFrom-SVN: r104979", "tree": {"sha": "8a0fc9182f13dc2b333ff1b7c5985d3ec7992005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a0fc9182f13dc2b333ff1b7c5985d3ec7992005"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49/comments", "author": null, "committer": null, "parents": [{"sha": "1061f99e78a8e42f91e84588ec45e3fa3b0693a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1061f99e78a8e42f91e84588ec45e3fa3b0693a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1061f99e78a8e42f91e84588ec45e3fa3b0693a4"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "24f14e9b83dfd99fc2432b4bee8fa5297c5b5f9b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49", "patch": "@@ -1,3 +1,12 @@\n+2005-10-05  Billy Biggs  <billy.biggs@gmail.com>\n+\t    Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR target/23809\n+\n+\t* doc/extend.texi (x86 Built-ins): Document that -msse and friends\n+\tenable the instructions and not just the built-ins.\n+\t* doc/invoke.texi (x86 Options): Likewise.\n+\n 2005-10-04  Geoffrey Keating  <geoffk@apple.com>\n \n \t* config/i386/t-darwin (SHLIB_VERPFX): Fix typo."}, {"sha": "71518e45b17a4ca98560c9264bf9a4157b765c58", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49", "patch": "@@ -6466,6 +6466,14 @@ into the data cache.  The instruction will be issued in slot I1@.\n These built-in functions are available for the i386 and x86-64 family\n of computers, depending on the command-line switches used.\n \n+Note that, if you specify command-line switches such as @option{-msse},\n+the compiler could use the extended instruction sets even if the built-ins\n+are not used explicitly in the program.  For this reason, applications\n+which perform runtime CPU detection must compile separate files for each\n+supported architecture, using the appropriate flags.  In particular,\n+the file containing the CPU detection code should be compiled without\n+these options.\n+\n The following machine modes are available for use with MMX built-in functions\n (@pxref{Vector Extensions}): @code{V2SI} for a vector of two 32-bit integers,\n @code{V4HI} for a vector of four 16-bit integers, and @code{V8QI} for a"}, {"sha": "b859a7f423ff1849128ac3cb400442cb948c1054", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7557687136473f8d9d3e2e6b1ac9ca8cb8eefa49", "patch": "@@ -9261,15 +9261,20 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @opindex mno-sse\n @opindex m3dnow\n @opindex mno-3dnow\n-These switches enable or disable the use of built-in functions that allow\n-direct access to the MMX, SSE, SSE2, SSE3 and 3Dnow extensions of the\n-instruction set.\n-\n-@xref{X86 Built-in Functions}, for details of the functions enabled\n-and disabled by these switches.\n+These switches enable or disable the use of instructions in the MMX,\n+SSE, SSE2 or 3DNow! extended instruction sets.  These extensions are\n+also available as built-in functions: see @ref{X86 Built-in Functions},\n+for details of the functions enabled and disabled by these switches.\n \n To have SSE/SSE2 instructions generated automatically from floating-point\n-code, see @option{-mfpmath=sse}.\n+code (as opposed to 387 instructions), see @option{-mfpmath=sse}.\n+\n+These options will enable GCC to use these extended instructions in\n+generated code, even without @option{-mfpmath=sse}.  Applications which\n+perform runtime CPU detection must compile separate files for each\n+supported architecture, using the appropriate flags.  In particular,\n+the file containing the CPU detection code should be compiled without\n+these options.\n \n @item -mpush-args\n @itemx -mno-push-args"}]}