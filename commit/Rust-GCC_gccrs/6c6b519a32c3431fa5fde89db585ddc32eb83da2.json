{"sha": "6c6b519a32c3431fa5fde89db585ddc32eb83da2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM2YjUxOWEzMmMzNDMxZmE1ZmRlODlkYjU4NWRkYzMyZWI4M2RhMg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-06-06T15:35:35Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-06-06T15:35:35Z"}, "message": "Remove NO_LABEL_VALUES\n\n2017-06-06  Tom de Vries  <tom@codesourcery.com>\n\n\t* doc/sourcebuild.texi (Testsuites, C Language Testsuites,\n\tgcc.c-torture/compile): Remove mention of NO_LABEL_VALUES in fixme.\n\n\t* gcc.c-torture/compile/20000326-2.c: Use dg-require-effective-target\n\tlabel_values instead of NO_LABEL_VALUES.\n\t* gcc.c-torture/compile/920301-1.c: Same.\n\t* gcc.c-torture/compile/920501-1.c: Same.\n\t* gcc.c-torture/compile/941014-4.c: Same.\n\t* gcc.c-torture/compile/labels-1.c: Same.\n\t* gcc.c-torture/compile/pr18903.c: Same.\n\t* gcc.c-torture/execute/920302-1.c: Same.\n\t* gcc.c-torture/execute/920415-1.c: Same.\n\t* gcc.c-torture/execute/920428-2.c: Same.\n\t* gcc.c-torture/execute/920501-3.c: Same.\n\t* gcc.c-torture/execute/920501-4.c: Same.\n\t* gcc.c-torture/execute/920501-5.c: Same.\n\t* gcc.c-torture/execute/920501-7.c: Same.\n\t* gcc.c-torture/execute/920721-4.c: Same.\n\t* gcc.c-torture/execute/980526-1.c: Same.\n\t* gcc.c-torture/execute/990208-1.c: Same.\n\t* gcc.c-torture/execute/comp-goto-1.c: Same.\n\t* gcc.c-torture/execute/comp-goto-2.c: Same.\n\t* gcc.dg/torture/stackalign/comp-goto-1.c: Same.\n\t* gcc.dg/torture/stackalign/non-local-goto-4.c: Same.\n\t* gcc.dg/torture/stackalign/non-local-goto-5.c: Same.\n\t* gcc.dg/tree-prof/comp-goto-1.c: Same.\n\t* gcc.dg/tree-prof/pr44777.c: Same.\n\t* gcc.misc-tests/bprob-2.c: Same.\n\t* gcc.misc-tests/gcov-3.c: Same.\n\t* lib/gcc.exp (gcc_target_compile): Remove appending of\n\t-DNO_LABEL_VALUES to additional_flags.\n\t* lib/objc.exp (objc_target_compile): Same.\n\t* lib/target-supports.exp (check_effective_target_label_values): Test on\n\t'target_info exists gcc,no_label_values' instead of NO_LABEL_VALUES.\n\nFrom-SVN: r248923", "tree": {"sha": "ee5b564504c12d2728a819a7dd333ffa8d856a4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee5b564504c12d2728a819a7dd333ffa8d856a4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c6b519a32c3431fa5fde89db585ddc32eb83da2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6b519a32c3431fa5fde89db585ddc32eb83da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c6b519a32c3431fa5fde89db585ddc32eb83da2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6b519a32c3431fa5fde89db585ddc32eb83da2/comments", "author": null, "committer": null, "parents": [{"sha": "25d446fd388959e5c87cfe621c17a9a2f78f90aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25d446fd388959e5c87cfe621c17a9a2f78f90aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25d446fd388959e5c87cfe621c17a9a2f78f90aa"}], "stats": {"total": 194, "additions": 101, "deletions": 93}, "files": [{"sha": "5dd00df1af06f5990ee42f9adc37029bf8c1c572", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,3 +1,8 @@\n+2017-06-06  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* doc/sourcebuild.texi (Testsuites, C Language Testsuites,\n+\tgcc.c-torture/compile): Remove mention of NO_LABEL_VALUES in fixme.\n+\n 2017-06-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/atomics.md (atomic_compare_and_swap<mode> expander):"}, {"sha": "841e75abbd817980cc51a52bcea4393176697b02", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -2604,7 +2604,7 @@ you wish to test for the presence or absence of compiler warnings.\n While special options can be set, and tests disabled on specific\n platforms, by the use of @file{.x} files, mostly these test cases\n should not contain platform dependencies.  FIXME: discuss how defines\n-such as @code{NO_LABEL_VALUES} and @code{STACK_SIZE} are used.\n+such as @code{STACK_SIZE} are used.\n @item gcc.c-torture/execute\n This testsuite contains test cases that should compile, link and run;\n otherwise the same comments as for @file{gcc.c-torture/compile} apply."}, {"sha": "70179fab05063b1d981d78fc35816635d656ec4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,3 +1,37 @@\n+2017-06-06  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* gcc.c-torture/compile/20000326-2.c: Use dg-require-effective-target\n+\tlabel_values instead of NO_LABEL_VALUES.\n+\t* gcc.c-torture/compile/920301-1.c: Same.\n+\t* gcc.c-torture/compile/920501-1.c: Same.\n+\t* gcc.c-torture/compile/941014-4.c: Same.\n+\t* gcc.c-torture/compile/labels-1.c: Same.\n+\t* gcc.c-torture/compile/pr18903.c: Same.\n+\t* gcc.c-torture/execute/920302-1.c: Same.\n+\t* gcc.c-torture/execute/920415-1.c: Same.\n+\t* gcc.c-torture/execute/920428-2.c: Same.\n+\t* gcc.c-torture/execute/920501-3.c: Same.\n+\t* gcc.c-torture/execute/920501-4.c: Same.\n+\t* gcc.c-torture/execute/920501-5.c: Same.\n+\t* gcc.c-torture/execute/920501-7.c: Same.\n+\t* gcc.c-torture/execute/920721-4.c: Same.\n+\t* gcc.c-torture/execute/980526-1.c: Same.\n+\t* gcc.c-torture/execute/990208-1.c: Same.\n+\t* gcc.c-torture/execute/comp-goto-1.c: Same.\n+\t* gcc.c-torture/execute/comp-goto-2.c: Same.\n+\t* gcc.dg/torture/stackalign/comp-goto-1.c: Same.\n+\t* gcc.dg/torture/stackalign/non-local-goto-4.c: Same.\n+\t* gcc.dg/torture/stackalign/non-local-goto-5.c: Same.\n+\t* gcc.dg/tree-prof/comp-goto-1.c: Same.\n+\t* gcc.dg/tree-prof/pr44777.c: Same.\n+\t* gcc.misc-tests/bprob-2.c: Same.\n+\t* gcc.misc-tests/gcov-3.c: Same.\n+\t* lib/gcc.exp (gcc_target_compile): Remove appending of\n+\t-DNO_LABEL_VALUES to additional_flags.\n+\t* lib/objc.exp (objc_target_compile): Same.\n+\t* lib/target-supports.exp (check_effective_target_label_values): Test on\n+\t'target_info exists gcc,no_label_values' instead of NO_LABEL_VALUES.\n+\n 2017-06-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/atomic_cmp_exchange_zero_reg_1.c: New test."}, {"sha": "6578d4e41c637bfbed71cfb3440d5d03f8c52a92", "filename": "gcc/testsuite/gcc.c-torture/compile/20000326-2.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000326-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000326-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000326-2.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,5 @@\n-#ifndef NO_LABEL_VALUES\n+/* { dg-require-effective-target label_values } */\n+\n extern int printk(const char *fmt, ...);\n \n void foo (int x, int y)\n@@ -7,7 +8,3 @@ void foo (int x, int y)\n   here:\n   printk (\"\", &&here);\n }\n-\n-#else\n-int x;\n-#endif"}, {"sha": "b61fe93b5543648e9835ead55ca863cdce786dd7", "filename": "gcc/testsuite/gcc.c-torture/compile/920301-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920301-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920301-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920301-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,4 @@\n-#ifndef NO_LABEL_VALUES\n+/* { dg-require-effective-target label_values } */\n+\n f(){static void*t[]={&&x};x:;}\n-#endif\n g(){static unsigned p[5];}"}, {"sha": "84cc122070b6890c42177f9e6f9ad09af622d1ee", "filename": "gcc/testsuite/gcc.c-torture/compile/920501-1.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920501-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,5 +1,3 @@\n-#ifndef NO_LABEL_VALUES\n+/* { dg-require-effective-target label_values } */\n+\n a(){int**b[]={&&c};c:;}\n-#else\n-int x;\n-#endif"}, {"sha": "9c4cec8b7a0510d897149cd6aa103b87f71fdeab", "filename": "gcc/testsuite/gcc.c-torture/compile/941014-4.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F941014-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F941014-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F941014-4.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,5 @@\n-#ifndef NO_LABEL_VALUES\n+/* { dg-require-effective-target label_values } */\n+\n f (int *re)\n {\n   int *loops = 0, *loope = 0;\n@@ -11,6 +12,3 @@ f (int *re)\n   if (dat0 & 1)\n     re[(dat0 >> 2) & 3] = 0;\n }\n-#else\n-int x;\n-#endif"}, {"sha": "7889567ffa64d4d2ea5b4496be95f2aa6af230bb", "filename": "gcc/testsuite/gcc.c-torture/compile/labels-1.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flabels-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flabels-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flabels-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,5 @@\n-#ifndef NO_LABEL_VALUES\n+/* { dg-require-effective-target label_values } */\n+\n f ()\n {\n   void *x = &&L2;\n@@ -8,6 +9,3 @@ f ()\n  L2: abort ();\n  L3:;\n }\n-#else\n-int x;\n-#endif"}, {"sha": "461504f611a137f2f982d3795980896a9b4e4b0d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr18903.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr18903.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr18903.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr18903.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,8 +1,9 @@\n+/* { dg-require-effective-target label_values } */\n+\n /* We were ICEing in bsi_after_labels because \n    we had a BB which did not have a lablel.\n    PR middle-end/18903 */\n \n-#ifndef NO_LABEL_VALUES\n void g (int s, int f)\n {\n   &&ff;\n@@ -12,6 +13,3 @@ void g (int s, int f)\n   f = s;\n   end:;\n }\n-#else\n-int g;\n-#endif"}, {"sha": "62e4fc205a94653629095230d27efc64c2cdd116", "filename": "gcc/testsuite/gcc.c-torture/execute/920302-1.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920302-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920302-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920302-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,9 +1,10 @@\n+/* { dg-require-effective-target label_values } */\n+\n short optab[5];\n char buf[10];\n execute (ip)\n      register short *ip;\n {\n-#ifndef NO_LABEL_VALUES\n   register void *base = &&x;\n   char *bp = buf;\n   static void *tab[] = {&&x, &&y, &&z};\n@@ -21,9 +22,6 @@ y:  *bp++='y';\n z:  *bp++='z';\n     *bp=0;\n     return;\n-#else\n-    strcpy (buf, \"xyxyz\");\n-#endif\n }\n \n short p[5];"}, {"sha": "ec31ea94a525493efbc61c1553f747f4e0d5c0cd", "filename": "gcc/testsuite/gcc.c-torture/execute/920415-1.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920415-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920415-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920415-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,5 +1,2 @@\n-#ifndef NO_LABEL_VALUES\n+/* { dg-require-effective-target label_values } */\n main(){__label__ l;void*x(){return&&l;}goto*x();abort();return;l:exit(0);}\n-#else\n-main(){ exit (0); }\n-#endif"}, {"sha": "99a39257496903386a0a18e2c0d165bb5631a9b4", "filename": "gcc/testsuite/gcc.c-torture/execute/920428-2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920428-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920428-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920428-2.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,6 @@\n-#if !defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+/* { dg-require-effective-target label_values } */\n+\n+#if !defined (NO_TRAMPOLINES)\n s(i){if(i>0){__label__ l1;int f(int i){if(i==2)goto l1;return 0;}return f(i);l1:;}return 1;}\n x(){return s(0)==1&&s(1)==0&&s(2)==1;}\n main(){if(x()!=1)abort();exit(0);}"}, {"sha": "452d7c0debe8f9e115c21c9622288b46fd0a8728", "filename": "gcc/testsuite/gcc.c-torture/execute/920501-3.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-3.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,8 +1,9 @@\n+/* { dg-require-effective-target label_values } */\n+\n int tab[9];\n execute(oip, ip)\n      unsigned short *oip, *ip;\n {\n-#ifndef NO_LABEL_VALUES\n   int x = 0;\n   int *xp = tab;\n base:\n@@ -14,12 +15,6 @@ execute(oip, ip)\n     }\n   *xp++ = ip - oip;\n   goto *(&&base + *ip++);\n-#else\n-  tab[0] = 0;\n-  tab[1] = 1;\n-  tab[2] = 2;\n-  tab[3] = 0;\n-#endif\n }\n \n main()"}, {"sha": "c99857079aa2c570cb3d22cd96e7627133ccbe25", "filename": "gcc/testsuite/gcc.c-torture/execute/920501-4.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-4.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,5 @@\n-#ifndef NO_LABEL_VALUES\n+/* { dg-require-effective-target label_values } */\n+\n int\n x (int i)\n {\n@@ -21,7 +22,3 @@ main (void)\n \n   exit (0);\n }\n-#else\n-int\n-main (void) { exit (0); }\n-#endif"}, {"sha": "f0b907166531b7fba844f0384c2ba27894c43dd0", "filename": "gcc/testsuite/gcc.c-torture/execute/920501-5.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-5.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,5 @@\n-#ifndef NO_LABEL_VALUES\n+/* { dg-require-effective-target label_values } */\n+\n x (int i)\n {\n   void *j[] = {&&x, &&y, &&z};\n@@ -14,6 +15,3 @@ main ()\n     abort();\n   exit(0);\n }\n-#else\n-main(){ exit (0); }\n-#endif"}, {"sha": "ea8f93191e10494b7a7e330ae3849b691568f0a4", "filename": "gcc/testsuite/gcc.c-torture/execute/920501-7.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-7.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,10 +1,12 @@\n+/* { dg-require-effective-target label_values } */\n+\n #ifdef STACK_SIZE\n #define DEPTH ((STACK_SIZE) / 512 + 1)\n #else\n #define DEPTH 1000\n #endif\n \n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n x(a)\n {\n   __label__ xlab;\n@@ -22,7 +24,7 @@ x(a)\n \n main ()\n {\n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n   if (x (DEPTH) != DEPTH)\n     abort ();\n #endif"}, {"sha": "805918b2aa3dcd4a0ddcc765a5e2fd1772a8538b", "filename": "gcc/testsuite/gcc.c-torture/execute/920721-4.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920721-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920721-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920721-4.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,5 @@\n-#ifndef NO_LABEL_VALUES\n+/* { dg-require-effective-target label_values } */\n+\n int try (int num) {\n   __label__ lab1, lab2, lab3, lab4, lab5, lab6, default_lab;\n \n@@ -55,6 +56,3 @@ main()\n     }\n   exit(0);\n }\n-#else\n-main(){ exit (0); }\n-#endif"}, {"sha": "15c580791aba64427dc4bf294708b961724f69f7", "filename": "gcc/testsuite/gcc.c-torture/execute/980526-1.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980526-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980526-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980526-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-skip-if \"requires indirect jumps\" { ! indirect_jumps } { \"-O0\" } { \"\" } } */\n-/* { dg-skip-if \"requires label values\" { ! label_values } { \"-O0\" } { \"\" } } */\n+/* { dg-require-effective-target label_values } */\n+\n int expect_do1 = 1, expect_do2 = 2;\n  \n static int doit(int x){\n@@ -31,9 +31,5 @@ static void do2(void){\n }\n  \n int main(void){\n-#ifndef NO_LABEL_VALUES\n-  do1();\n-  do2();\n-#endif\n   exit(0);\n }"}, {"sha": "15dcdfbdf7acbe7c83a2c8c441a73dd9c1555373", "filename": "gcc/testsuite/gcc.c-torture/execute/990208-1.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990208-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990208-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F990208-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,8 +1,9 @@\n+/* { dg-require-effective-target label_values } */\n+\n /* As a quality of implementation issue, we should not prevent inlining\n    of function explicitly marked inline just because a label therein had\n    its address taken.  */\n \n-#ifndef NO_LABEL_VALUES\n static void *ptr1, *ptr2;\n static int i = 1;\n \n@@ -44,7 +45,3 @@ int main()\n }\n \n void bar(void) { }\n-\n-#else /* NO_LABEL_VALUES */\n-int main() { exit(0); }\n-#endif"}, {"sha": "d01f96ba70a62347b769c08fbc3721f9e1abfe84", "filename": "gcc/testsuite/gcc.c-torture/execute/comp-goto-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,6 +1,8 @@\n+/* { dg-require-effective-target label_values } */\n+\n #include <stdlib.h>\n \n-#if !defined(NO_LABEL_VALUES) && (!defined(STACK_SIZE) || STACK_SIZE >= 4000) && __INT_MAX__ >= 2147483647\n+#if (!defined(STACK_SIZE) || STACK_SIZE >= 4000) && __INT_MAX__ >= 2147483647\n typedef unsigned int uint32;\n typedef signed int sint32;\n "}, {"sha": "1b594db2758c73fc7e9ec916b154d48fe7dbafe1", "filename": "gcc/testsuite/gcc.c-torture/execute/comp-goto-2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-2.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target label_values } */\n+\n /* A slight variation of 920501-7.c.  */\n \n #ifdef STACK_SIZE\n@@ -6,7 +8,7 @@\n #define DEPTH 1000\n #endif\n \n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n x(a)\n {\n   __label__ xlab;\n@@ -28,7 +30,7 @@ x(a)\n \n main ()\n {\n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n   if (x (DEPTH) != DEPTH)\n     abort ();\n #endif"}, {"sha": "1129b00a49ef2b1881f0b8b96cc5dc166717390c", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/comp-goto-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fcomp-goto-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-require-effective-target label_values } */\n \n #ifdef STACK_SIZE\n #define DEPTH ((STACK_SIZE) / 512 + 1)\n@@ -9,7 +10,7 @@\n extern void abort (void);\n extern void exit (int);\n \n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n int\n x(int a)\n {\n@@ -33,7 +34,7 @@ x(int a)\n int\n main ()\n {\n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n   if (x (DEPTH) != DEPTH)\n     abort ();\n #endif"}, {"sha": "bcad887a93fc2f27c4e1116aeb9849044b23d912", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/non-local-goto-4.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-4.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-require-effective-target nonlocal_goto } */\n+/* { dg-require-effective-target label_values } */\n \n extern void abort (void);\n extern void exit (int);\n@@ -10,7 +11,7 @@ extern void exit (int);\n #define DEPTH 1000\n #endif\n \n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n int\n x(int a)\n {\n@@ -30,7 +31,7 @@ x(int a)\n int\n main ()\n {\n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n   if (x (DEPTH) != DEPTH)\n     abort ();\n #endif"}, {"sha": "ab524fe36562b6f5900e5810be61bb59cabcbd5e", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/non-local-goto-5.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-5.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,8 +1,9 @@\n /* { dg-do run } */\n /* { dg-require-effective-target nonlocal_goto } */\n+/* { dg-require-effective-target label_values } */\n \n extern void exit (int);\n-#if !defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n extern void abort (void);\n int s(int i){if(i>0){__label__ l1;int f(int i){if(i==2)goto l1;return 0;}return f(i);l1:;}return 1;}\n int x(){return s(0)==1&&s(1)==0&&s(2)==1;}"}, {"sha": "86e88adb89d3beed65942a7b7078cf2c09b46ec0", "filename": "gcc/testsuite/gcc.dg/tree-prof/comp-goto-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcomp-goto-1.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,8 +1,9 @@\n /* { dg-require-effective-target freorder } */\n+/* { dg-require-effective-target label_values } */\n /* { dg-options \"-O2 -freorder-blocks-and-partition\" } */\n #include <stdlib.h>\n \n-#if !defined(NO_LABEL_VALUES) && (!defined(STACK_SIZE) || STACK_SIZE >= 4000) && __INT_MAX__ >= 2147483647\n+#if (!defined(STACK_SIZE) || STACK_SIZE >= 4000) && __INT_MAX__ >= 2147483647\n typedef unsigned int uint32;\n typedef signed int sint32;\n "}, {"sha": "4550599a2885eaaed6092015eda888dda9cdbbc3", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr44777.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr44777.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr44777.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr44777.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,4 +1,5 @@\n /* PR middle-end/44777 */\n+/* { dg-require-effective-target label_values } */\n /* { dg-options \"-O0\" } */\n /* A variant of gcc.c-torture/execute/comp-goto-2.c.  */\n \n@@ -11,7 +12,7 @@ extern void exit (int);\n #define DEPTH 1000\n #endif\n \n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n int\n x (int a)\n {\n@@ -35,7 +36,7 @@ x (int a)\n int\n main ()\n {\n-#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+#if !defined (NO_TRAMPOLINES)\n   if (x (DEPTH) != DEPTH)\n     abort ();\n #endif"}, {"sha": "90ed7d74b8c19adce8932ed577fb51780594e1c4", "filename": "gcc/testsuite/gcc.misc-tests/bprob-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob-2.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target label_values } */\n+\n /* Test profile-directed block ordering with computed gotos.\n  *\n    This is the same as test gcc.c-torture/execute/980526-1.c and\n@@ -37,9 +39,7 @@ static void do2(void){\n }\n  \n int main(void){\n-#ifndef NO_LABEL_VALUES\n   do1();\n   do2();\n-#endif\n   exit(0);\n }"}, {"sha": "eb6e4cc46bfaf4f92fba86fde915de750c0abfd1", "filename": "gcc/testsuite/gcc.misc-tests/gcov-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-3.c?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target label_values } */\n+\n /* Test Gcov with computed gotos.\n    This is the same as test gcc.c-torture/execute/980526-1.c */\n \n@@ -38,10 +40,8 @@ static void do2(void){\n }\n  \n int main(void){\t\t\t/* count(1) */\n-#ifndef NO_LABEL_VALUES\n   do1();\n   do2();\n-#endif\n   exit(0);\t\t\t/* count(1) */\n }\n "}, {"sha": "19d500c6a29437b1215f5059eb4e4b1b18e37be3", "filename": "gcc/testsuite/lib/gcc.exp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc.exp?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -147,9 +147,6 @@ proc gcc_target_compile { source dest type options } {\n     if [target_info exists gcc,no_trampolines] {\n \tlappend options \"additional_flags=-DNO_TRAMPOLINES\"\n     }\n-    if [target_info exists gcc,no_label_values] {\n-\tlappend options \"additional_flags=-DNO_LABEL_VALUES\"\n-    }\n     if [target_info exists gcc,signal_suppress] {\n \tlappend options \"additional_flags=-DSIGNAL_SUPPRESS\"\n     }"}, {"sha": "c4c954e1db67c8d1006a2e7f40badd0e2ae83b97", "filename": "gcc/testsuite/lib/objc.exp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc.exp?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -197,9 +197,6 @@ proc objc_target_compile { source dest type options } {\n     if [target_info exists objc,no_trampolines] {\n \tlappend options \"additional_flags=-DNO_TRAMPOLINES\"\n     }\n-    if [target_info exists objc,no_label_values] {\n-\tlappend options \"additional_flags=-DNO_LABEL_VALUES\"\n-    }\n \n     # TEST_ALWAYS_FLAGS are flags that should be passed to every\n     # compilation.  They are passed first to allow individual"}, {"sha": "8b99f35513330d40e455326d9feaf7541987c932", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6b519a32c3431fa5fde89db585ddc32eb83da2/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=6c6b519a32c3431fa5fde89db585ddc32eb83da2", "patch": "@@ -749,14 +749,11 @@ proc check_effective_target_global_constructor {} {\n # Return 1 if taking label values is supported, 0 otherwise.\n \n proc check_effective_target_label_values {} {\n-    if { [istarget nvptx-*-*] } {\n+    if { [istarget nvptx-*-*] || [target_info exists gcc,no_label_values] } {\n \treturn 0\n     }\n-    return [check_no_compiler_messages label_values assembly {\n-\t#ifdef NO_LABEL_VALUES\n-\t#error NO\n-\t#endif\n-    }]\n+\n+    return 1\n }\n \n # Return 1 if builtin_return_address and builtin_frame_address are"}]}