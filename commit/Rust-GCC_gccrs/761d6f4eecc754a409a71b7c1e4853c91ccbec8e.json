{"sha": "761d6f4eecc754a409a71b7c1e4853c91ccbec8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYxZDZmNGVlY2M3NTRhNDA5YTcxYjdjMWU0ODUzYzkxY2NiZWM4ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-09-24T06:30:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-09-24T06:30:52Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r228072", "tree": {"sha": "21db6de7b6167b80183fe13a403615d9616d638f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21db6de7b6167b80183fe13a403615d9616d638f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/761d6f4eecc754a409a71b7c1e4853c91ccbec8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761d6f4eecc754a409a71b7c1e4853c91ccbec8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/761d6f4eecc754a409a71b7c1e4853c91ccbec8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761d6f4eecc754a409a71b7c1e4853c91ccbec8e/comments", "author": null, "committer": null, "parents": [{"sha": "6b95d7cc2d5ba73f698a4f0439cdff2145583df2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b95d7cc2d5ba73f698a4f0439cdff2145583df2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b95d7cc2d5ba73f698a4f0439cdff2145583df2"}], "stats": {"total": 206, "additions": 100, "deletions": 106}, "files": [{"sha": "c9eb9afd30c8ecc4d55a40f0d84707c9ff599c2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 90, "deletions": 96, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761d6f4eecc754a409a71b7c1e4853c91ccbec8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761d6f4eecc754a409a71b7c1e4853c91ccbec8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=761d6f4eecc754a409a71b7c1e4853c91ccbec8e", "patch": "@@ -44,8 +44,8 @@\n 2015-09-23  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/67391\n-\t* config/sh/sh.md (addsi3, *addsi3_compact): Don't check for overlapping\n-\tregs when matching the pattern.\n+\t* config/sh/sh.md (addsi3, *addsi3_compact): Don't check for\n+\toverlapping regs when matching the pattern.\n \n 2015-09-23  James Greenhalgh  <james.greenhalgh@arm.com>\n \n@@ -90,7 +90,7 @@\n \n 2015-09-22  Jeff Law  <law@redhat.com>\n \n-\t* config/pa/pa.h (MIN_LEGIT_64BIT_CONST_INT: Avoid undefined\n+\t* config/pa/pa.h (MIN_LEGIT_64BIT_CONST_INT): Avoid undefined\n \tbehavior.\n \n 2015-09-22  Nathan Sidwell  <nathan@codesourcery.com>\n@@ -123,16 +123,16 @@\n 2015-09-22  Kirill Yukhin <kirill.yukhin@intel.com>\n \n \t* config.gcc: Support \"skylake-avx512\".\n-        * config/i386/i386-c.c (ix86_target_macros_internal): Handle\n-        PROCESSOR_SKYLAKE_AVX512.\n-        * config/i386/i386.c (m_SKYLAKE_AVX512): Define.\n-        (processor_target_table): Add \"skylake-avx512\".\n-        (PTA_SKYLAKE_AVX512): Define.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle\n+\tPROCESSOR_SKYLAKE_AVX512.\n+\t* config/i386/i386.c (m_SKYLAKE_AVX512): Define.\n+\t(processor_target_table): Add \"skylake-avx512\".\n+\t(PTA_SKYLAKE_AVX512): Define.\n \t(ix86_option_override_internal): Add \"skylake_avx512\".\n-        (fold_builtin_cpu): Handle \"skylake_avx512\", add F_AVX512VL\n+\t(fold_builtin_cpu): Handle \"skylake_avx512\", add F_AVX512VL\n \tF_AVX512BW, F_AVX512DQ, F_AVX512ER, F_AVX512PF, F_AVX512CD.\n-        * config/i386/i386.h (TARGET_SKYLAKE_AVX512): Define.\n-        (processor_type): Add PROCESSOR_SKYLAKE_AVX512.\n+\t* config/i386/i386.h (TARGET_SKYLAKE_AVX512): Define.\n+\t(processor_type): Add PROCESSOR_SKYLAKE_AVX512.\n \t* doc/invoke.texi (skylake-avx512): New.\n \n 2015-09-22  Kirill Yukhin <kirill.yukhin@intel.com>\n@@ -230,36 +230,36 @@\n \tRevert:\n \t2015-09-11  David S. Miller  <davem@davemloft.net>\n \n-\t\t* config/sparc/constraints.md: Make \"U\" constraint a real register\n-\t\tconstraint.\n-\t\t* config/sparc/sparc.c (TARGET_LRA_P): Define.\n-\t\t(D_MODES, DF_MODES): Add missing cast.\n-\t\t(TF_MODES, TF_MODES_NO_S): Include T_MODE.\n-\t\t(OF_MODES, OF_MODES_NO_S): Include O_MODE.\n-\t\t(sparc_register_move_cost): Decrease Niagara/UltrsSPARC memory\n-\t\tcost to 8.\n-\t\t* config/sparc/sparc.h (PROMOTE_MODE): Define.\n-\t\t* config/sparc/sparc.md (*movsi_lo_sum, *movsi_high): Do not\n-\t\tprovide these insn when flag_pic.\n+\t* config/sparc/constraints.md: Make \"U\" constraint a real register\n+\tconstraint.\n+\t* config/sparc/sparc.c (TARGET_LRA_P): Define.\n+\t(D_MODES, DF_MODES): Add missing cast.\n+\t(TF_MODES, TF_MODES_NO_S): Include T_MODE.\n+\t(OF_MODES, OF_MODES_NO_S): Include O_MODE.\n+\t(sparc_register_move_cost): Decrease Niagara/UltrsSPARC memory\n+\tcost to 8.\n+\t* config/sparc/sparc.h (PROMOTE_MODE): Define.\n+\t* config/sparc/sparc.md (*movsi_lo_sum, *movsi_high): Do not\n+\tprovide these insn when flag_pic.\n \n \t2015-09-17  David S. Miller  <davem@davemloft.net>\n \n-\t\t* config/sparc/sparc-protos.h (sparc_secondary_memory_needed):\n-\t\tDeclare.\n-\t\t* config/sparc/sparc.c (sparc_secondary_memory_needed): New\n-\t\tfunction.\n-\t\t* config/sparc/sparc.h (SECONDARY_MEMORY_NEEDED): Use it.\n-\t\t(HARD_REGNO_CALLER_SAVE_MODE): Define.\n-\t\t* config/sparc/sparc.md (sethi_di_medlow, losum_di_medlow, seth44)\n-\t\t(setm44, setl44, sethh, setlm, sethm, setlo, embmedany_sethi)\n-\t\t(embmedany_losum, embmedany_brsum, embmedany_textuhi)\n-\t\t(embmedany_texthi, embmedany_textulo, embmedany_textlo): Do not\n-\t\tprovide when flag_pic.\n+\t* config/sparc/sparc-protos.h (sparc_secondary_memory_needed):\n+\tDeclare.\n+\t* config/sparc/sparc.c (sparc_secondary_memory_needed): New\n+\tfunction.\n+\t* config/sparc/sparc.h (SECONDARY_MEMORY_NEEDED): Use it.\n+\t(HARD_REGNO_CALLER_SAVE_MODE): Define.\n+\t* config/sparc/sparc.md (sethi_di_medlow, losum_di_medlow, seth44)\n+\t(setm44, setl44, sethh, setlm, sethm, setlo, embmedany_sethi)\n+\t(embmedany_losum, embmedany_brsum, embmedany_textuhi)\n+\t(embmedany_texthi, embmedany_textulo, embmedany_textlo): Do not\n+\tprovide when flag_pic.\n \n 2015-09-21  Jeff Law  <law@redhat.com>\n \n \t* config/h8300/h8300.md (andsi3_ashift_n_lower): Avoid undefined\n-\tbehavior. \n+\tbehavior.\n \n 2015-09-21  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n@@ -381,8 +381,7 @@\n \n 2015-09-19  Trevor Saunders  <tbsaunde@tbsaunde.org>\n \n-\t* coretypes.h (gimple): Change typedef to be a forward\n-\tdeclaration.\n+\t* coretypes.h (gimple): Change typedef to be a forward declaration.\n \t* gimple.h (gimple_statement_base): rename to gimple.\n \t* (all functions and types using gimple): Adjust.\n \t* *.[ch]: Likewise.\n@@ -473,7 +472,7 @@\n \t* tree-ssa-scopedtables.h (class avail_exprs_stack): Add missing\n \t\"void\" in prototype for pop_to_marker method.  Add accessor method\n \tfor the underlying avail_exprs table.\n-\t\n+\n \t* tree-ssa-threadedge.c: Remove trailing whitespace.\n \n 2014-09-18  John David Anglin  <danglin@gcc.gnu.org>\n@@ -628,19 +627,17 @@\n \t* genopinit.c (main): Add an include guard to insn-opinit.h.\n \tProtect the rtx_code parts with NUM_RTX_CODE.\n \t* optabs.h: Split parts out to...\n-\t* optabs-libfuncs.h, optabs-query.h, optabs-tree.h: ...these\n-\tnew files.\n+\t* optabs-libfuncs.h, optabs-query.h, optabs-tree.h: ...these new files.\n \t* optabs.c: Split parts out to...\n-\t* optabs-libfuncs.c, optabs-query.c, optabs-tree.c: ...these\n-\tnew files.\n+\t* optabs-libfuncs.c, optabs-query.c, optabs-tree.c: ...these new files.\n \t* cilk-common.c: Include optabs-query.h rather than optabs.h.\n \t* fold-const.c: Likewise.\n \t* target-globals.c: Likewise.\n \t* tree-if-conv.c: Likewise.\n \t* tree-ssa-forwprop.c: Likewise.\n \t* tree-ssa-loop-prefetch.c: Likewise.\n-\t* tree-ssa-math-opts.c: Include optabs-tree.h rather than\n-\toptabs.h.  Remove unncessary include files.\n+\t* tree-ssa-math-opts.c: Include optabs-tree.h rather than optabs.h.\n+\tRemove unncessary include files.\n \t* tree-ssa-phiopt.c: Likewise.\n \t* tree-ssa-reassoc.c: Likewise.\n \t* tree-switch-conversion.c: Likewise.\n@@ -705,10 +702,8 @@\n \n 2015-09-17  David S. Miller  <davem@davemloft.net>\n \n-\t* config/sparc/sparc-protos.h (sparc_secondary_memory_needed):\n-\tDeclare.\n-\t* config/sparc/sparc.c (sparc_secondary_memory_needed): New\n-\tfunction.\n+\t* config/sparc/sparc-protos.h (sparc_secondary_memory_needed): Declare.\n+\t* config/sparc/sparc.c (sparc_secondary_memory_needed): New function.\n \t* config/sparc/sparc.h (SECONDARY_MEMORY_NEEDED): Use it.\n \t(HARD_REGNO_CALLER_SAVE_MODE): Define.\n \t* config/sparc/sparc.md (sethi_di_medlow, losum_di_medlow, seth44)\n@@ -725,8 +720,7 @@\n 2015-09-17  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/66388\n-\t* tree-ssa-loop-ivopts.c (struct iv, iv_cand, ivopts_data): New\n-\tfields.\n+\t* tree-ssa-loop-ivopts.c (struct iv, iv_cand, ivopts_data): New fields.\n \t(dump_iv): Dump no_overflow information.\n \t(alloc_iv): Initialize new field for struct iv.\n \t(mark_bivs): Count number of no_overflow bivs.\n@@ -761,21 +755,20 @@\n \t(pass_dominator::execute): Set up initial edge info structures.\n \t(dom_opt_dom_walker::thread_across_edge): Pass avail_expr_stack to\n \tthread_across_edge.\n-\t* tree-ssa-threadedge.c (thread_across_edge): Accept new argument.  If\n-\tnon-null, then push/pop markers appropriately.\n+\t* tree-ssa-threadedge.c (thread_across_edge): Accept new argument.\n+\tIf non-null, then push/pop markers appropriately.\n \t* tree-ssa-threadedge.h (thread_across_edge): Update prototype.\n \t* tree-vrp.c (identify_jump_threads): Pass NULL for new argument to\n \tthread-across_edge.\n \n 2015-09-16  James Bowman  <james.bowman@ftdichip.com>\n \n-\t* config/ft32/ft32.c Fix the memory address space predicate.\n+\t* config/ft32/ft32.c: Fix the memory address space predicate.\n \n 2015-09-16  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR target/67573\n-\t* config/sh/sh.md (call_pcrel): Add early clobber to scratch\n-\toperand.\n+\t* config/sh/sh.md (call_pcrel): Add early clobber to scratch operand.\n \t(call_value_pcrel, sibcall_pcrel, sibcall_value_pcrel): Likewise.\n \n 2015-09-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n@@ -913,7 +906,7 @@\n \n 2015-09-15  Jeff Law  <law@redhat.com>\n \n-        PR tree-optimization/47679\n+\tPR tree-optimization/47679\n \t* tree-ssa-dom.c (expr_hash_elt): Now a class with ctors/dtors,\n \tmethods and private members.\n \t(avail_exprs_stack): Similarly.  Change type of global\n@@ -1096,7 +1089,7 @@\n \n 2015-09-15  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n-        * config/s390/s390.c (s390_const_operand_ok): Add missing\n+\t* config/s390/s390.c (s390_const_operand_ok): Add missing\n \tbrackets.\n \n 2015-09-15  Richard Biener  <rguenther@suse.de>\n@@ -1132,7 +1125,7 @@\n \n 2015-09-14  Jeff Law  <law@redhat.com>\n \n-        PR tree-optimization/47679\n+\tPR tree-optimization/47679\n \t* tree-ssa-dom.c (avail_expr_hash): Pass a pointer to a real\n \ttype rather than void *.\n \n@@ -2081,16 +2074,18 @@\n \t* target.def: Add scatter builtin.\n \t* tree-vectorizer.h: Rename gather_p to gather_scatter_p and use it\n \tfor loads/stores in case of gather/scatter accordingly.\n-\t(STMT_VINFO_GATHER_SCATTER_P(S)): Use it instead of STMT_VINFO_GATHER_P(S).\n+\t(STMT_VINFO_GATHER_SCATTER_P(S)): Use it instead of\n+\tSTMT_VINFO_GATHER_P(S).\n \t(vect_check_gather): Rename to ...\n \t(vect_check_gather_scatter): this.\n \t* tree-vect-data-refs.c (vect_analyze_data_ref_dependence): Use\n \tSTMT_VINFO_GATHER_SCATTER_P instead of STMT_VINFO_SCATTER_P.\n \t(vect_check_gather_scatter): Use it instead of vect_check_gather.\n-\t(vect_analyze_data_refs): Add gatherscatter enum and maybe_scatter variable\n-\tand new checkings for it accordingly.\n+\t(vect_analyze_data_refs): Add gatherscatter enum and maybe_scatter\n+\tvariable and new checkings for it accordingly.\n \t* tree-vect-stmts.c\n-\t(STMT_VINFO_GATHER_SCATTER_P(S)): Use it instead of STMT_VINFO_GATHER_P(S).\n+\t(STMT_VINFO_GATHER_SCATTER_P(S)): Use it instead of\n+\tSTMT_VINFO_GATHER_P(S).\n \t(vect_check_gather_scatter): Use it instead of vect_check_gather.\n \t(vectorizable_store): Add checkings for STMT_VINFO_GATHER_SCATTER_P.\n \n@@ -2126,8 +2121,8 @@\n 2015-09-03  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/65637\n-\t* omp-low.c (expand_omp_for_static_chunk): Handle case that fin_bb has 2\n-\tpredecessors.\n+\t* omp-low.c (expand_omp_for_static_chunk): Handle case that\n+\tfin_bb has 2 predecessors.\n \n 2015-09-03  Tom de Vries  <tom@codesourcery.com>\n \n@@ -2156,7 +2151,7 @@\n 2015-09-03  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \tPR middle-end/67351\n-\t* fold-const.c (fold_binary_loc) : Move \n+\t* fold-const.c (fold_binary_loc) : Move\n \tTransform (x >> c) << c into x & (-1<<c) or\n \ttransform (x << c) >> c into x & ((unsigned)-1 >> c) for unsigned\n \ttypes using simplify and match.\n@@ -2305,10 +2300,8 @@\n 2015-09-01  Kyrylo Tkachov <kyrylo.tkachov@arm.com>\n \n \t* ifcvt.c (struct noce_if_info): Add then_simple, else_simple,\n-\tthen_cost, else_cost fields.  Change branch_cost field to unsigned\n-\tint.\n-\t(end_ifcvt_sequence): Call set_used_flags on each insn in the\n-\tsequence.\n+\tthen_cost, else_cost fields.  Change branch_cost field to unsigned int.\n+\t(end_ifcvt_sequence): Call set_used_flags on each insn in the sequence.\n \tInclude rtl-iter.h.\n \t(noce_simple_bbs): New function.\n \t(noce_try_move): Bail if basic blocks are not simple.\n@@ -2475,14 +2468,15 @@\n \n \tRevert:\n \t2015-08-27  Alan Lawrence  <alan.lawrence@arm.com>\n-\t\tPR tree-optimization/67283\n-\t\t* tree-sra.c (type_consists_of_records_p): Rename to...\n-\t\t(scalarizable_type_p): ...this, add case for ARRAY_TYPE.\n \n-\t\t(completely_scalarize_record): Rename to...\n-\t\t(completely_scalarize): ...this, add ARRAY_TYPE case, move some\n-\t\t code to:\n-\t\t(scalarize_elem): New.\n+\tPR tree-optimization/67283\n+\t* tree-sra.c (type_consists_of_records_p): Rename to...\n+\t(scalarizable_type_p): ...this, add case for ARRAY_TYPE.\n+\n+\t(completely_scalarize_record): Rename to...\n+\t(completely_scalarize): ...this, add ARRAY_TYPE case, move some\n+\tcode to:\n+\t(scalarize_elem): New.\n \n 2015-08-28  Jiong Wang  <jiong.wang@arm.com>\n \n@@ -2985,7 +2979,7 @@\n \n 2015-08-26  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n-\t* fold-const.c (fold_binary_loc) : Move Optimize \n+\t* fold-const.c (fold_binary_loc) : Move Optimize\n \troot(x)*root(y)\tas root(x*y) to match.pd.\n \tMove Optimize expN(x)*expN(y) as expN(x+y) to match.pd.\n \tMove Optimize pow(x,y)*pow(x,z) as pow(x,y+z) to match.pd.\n@@ -3247,9 +3241,10 @@\n \n \t* config/aarch64/aarch64-tuning-flags.def: Remove all index to\n \tAARCH64_EXTRA_TUNING_OPTION.\n-\t* config/aarch64/aarch64-protos.h (aarch64_extra_tuning_flags_index): New enum.\n-\t(aarch64_extra_tuning_flags): Base the shifted value on the index instead\n-\tof the argument to AARCH64_EXTRA_TUNING_OPTION.\n+\t* config/aarch64/aarch64-protos.h (aarch64_extra_tuning_flags_index):\n+\tNew enum.\n+\t(aarch64_extra_tuning_flags): Base the shifted value on the index\n+\tinstead of the argument to AARCH64_EXTRA_TUNING_OPTION.\n \t* config/aarch64/aarch64.c: Remove the last argument to\n \tAARCH64_EXTRA_TUNING_OPTION.\n \n@@ -3303,7 +3298,7 @@\n \t(calculate_dominance_info): Adjust to use dom_info class.\n \t(verify_dominators): Likewise.\n \n-2015-08-21  Alexandre Oliva <aoliva@redhat.com>\n+2015-08-21  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* print-rtl.c (print_rtx): Check the correct range for\n \tflag_dump_unnumbered_links to behave as documented.\n@@ -3362,11 +3357,11 @@\n 2014-08-21  Felix Yang  <felix.yang@huawei.com>\n \t    Jiji Jiang  <jiangjiji@huawei.com>\n \n-\t* value-prof.c (interesting_stringop_to_profile_p): Removed FNDECL argument\n-\tand get builtin function code directly from CALL.\n+\t* value-prof.c (interesting_stringop_to_profile_p): Removed FNDECL\n+\targument and get builtin function code directly from CALL.\n \t(gimple_stringop_fixed_value): Modified accordingly.\n-\t(gimple_stringops_transform, gimple_stringops_values_to_profile): Modified\n-\taccordingly and only accept BUILT_IN_NORMAL string operations.\n+\t(gimple_stringops_transform, gimple_stringops_values_to_profile):\n+\tModified accordingly and only accept BUILT_IN_NORMAL string operations.\n \n 2015-08-21  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n@@ -3560,7 +3555,7 @@\n \t* config.in: Regenerated.\n \t* configure: Likewise.\n \n-2015-08-19  Alexandre Oliva <aoliva@redhat.com>\n+2015-08-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/64164\n \t* cfgexpand.c (parm_maybe_byref_p): Renamed to...\n@@ -3768,7 +3763,7 @@\n \tPR middle-end/16107\n \t* match.pd (div (coss (op @0) : New simplifier.\n \n-2015-08-14  Alexandre Oliva <aoliva@redhat.com>\n+2015-08-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/64164\n \tPR bootstrap/66978\n@@ -4302,8 +4297,7 @@\n 2015-08-10  Thomas Schwinge  <thomas@codesourcery.com>\n \t    Ilya Verbin  <ilya.verbin@intel.com>\n \n-\t* lto-streamer-in.c (lto_input_mode_table): Correctly advance\n-\titerator.\n+\t* lto-streamer-in.c (lto_input_mode_table): Correctly advance iterator.\n \n 2015-08-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n@@ -4330,7 +4324,7 @@\n 2015-08-07  DJ Delorie  <dj@redhat.com>\n \n \t* config/rx/rx.c (rx_mode_dependent_address_p): Remove unneeded asserts.\n-\t\n+\n 2015-08-07  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/67029\n@@ -6173,7 +6167,7 @@\n 2015-07-25  David Edelsohn  <dje.gcc@gmail.com>\n \n \tRevert:\n-\t2015-07-23  Alexandre Oliva <aoliva@redhat.com>\n+\t2015-07-23  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/64164\n \t* Makefile.in (OBJS): Drop tree-ssa-copyrename.o.\n@@ -6513,7 +6507,7 @@\n \n \t* tree-pass.h (get_current_pass_name): Removed.\n \n-2015-07-23  Alexandre Oliva <aoliva@redhat.com>\n+2015-07-23  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/64164\n \t* Makefile.in (OBJS): Drop tree-ssa-copyrename.o.\n@@ -12874,10 +12868,10 @@\n \t* doc/extend.texi: Document ARM/Thumb target attribute.\n \t* doc/invoke.texi: Likewise.\n \n-2015-06-09  Alexandre Oliva <aoliva@redhat.com>\n+2015-06-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \tRevert:\n-\t2015-06-09  Alexandre Oliva <aoliva@redhat.com>\n+\t2015-06-09  Alexandre Oliva  <aoliva@redhat.com>\n \tPR rtl-optimization/64164\n \t* Makefile.in (OBJS): Drop tree-ssa-copyrename.o.\n \t* tree-ssa-copyrename.c: Removed.\n@@ -13056,7 +13050,7 @@\n \t* gimple-iterator.h (gimple_seq_nondebug_singleton_p): Don't\n \talways return false.\n \n-2015-06-09  Alexandre Oliva <aoliva@redhat.com>\n+2015-06-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/64164\n \t* Makefile.in (OBJS): Drop tree-ssa-copyrename.o.\n@@ -13147,7 +13141,7 @@\n \t* tree-ssa-loop-niter.c (loop_exits_before_overflow): Don't\n \tfail assert on conversion between unsigned types.\n \n-2015-06-09  Alexandre Oliva <aoliva@redhat.com>\n+2015-06-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/58315\n \t* tree-inline.c (reset_debug_binding): New.\n@@ -25293,7 +25287,7 @@\n \tBEGIN_CHKP_BUILTINS and END_CHKP_BUILTINS only define enum values\n \tfor builtins that use DEF_BUILTIN_CHKP macro.\n \n-2015-02-04  Alexandre Oliva <aoliva@redhat.com>\n+2015-02-04  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/64817\n \t* cfgexpand.c (expand_debug_expr): Compute unsignedp from"}, {"sha": "bf0e13a0cefa6c2d13d6e99d2fa76214e56582ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761d6f4eecc754a409a71b7c1e4853c91ccbec8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761d6f4eecc754a409a71b7c1e4853c91ccbec8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=761d6f4eecc754a409a71b7c1e4853c91ccbec8e", "patch": "@@ -8,7 +8,7 @@\n \t* g++.dg/diagnostic/disable.C: Replace 'namepace'\n \twith 'namespace'.\n \n-2015-09-23   Richard Biener  <rguenther@suse.de>\n+2015-09-23  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/67662\n \t* gcc.dg/ubsan/pr67662.c: New testcase.\n@@ -46,7 +46,7 @@\n \n 2015-09-22  Kirill Yukhin <kirill.yukhin@intel.com>\n \n-        * gcc.target/i386/funcspec-5.c: Test avx512vl, avx512bw,\n+\t* gcc.target/i386/funcspec-5.c: Test avx512vl, avx512bw,\n \tavx512dq, avx512cd, avx512er, avx512pf and skylake-avx512.\n \t* gcc.target/i386/builtin_target.c: Test  avx512vl, avx512bw,\n \tavx512dq, avx512cd, avx512er and avx512pf.\n@@ -66,7 +66,7 @@\n \n \t* gcc.target/aarch64/atomic-inst-ops.inc: (TEST_MODEL): New.\n \t(TEST_ONE): New.\n-        * gcc.target/aarch64/atomic-inst-swap.c: New.\n+\t* gcc.target/aarch64/atomic-inst-swap.c: New.\n \n 2015-09-22  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n@@ -1488,7 +1488,7 @@\n \t* gfortran.dg/norm2_4.f90: this.\n \t* gfortran.dg/norm2_5.f90: New test.\n \n-2015-08-14  Alexandre Oliva <aoliva@redhat.com>\n+2015-08-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gcc.dg/guality/pr54200.c: Add -fno-tree-coalesce-vars.\n \t* gcc.dg/ssp-1.c: Make counter a register.\n@@ -2110,7 +2110,7 @@\n 2015-07-25  David Edelsohn  <dje.gcc@gmail.com>\n \n \tRevert:\n-\t2015-07-23  Alexandre Oliva <aoliva@redhat.com>\n+\t2015-07-23  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/64164\n \t* gcc.dg/guality/pr54200.c: Add -fno-tree-coalesce-vars.\n@@ -2202,7 +2202,7 @@\n \tPR c++/66572\n \t* g++.dg/warn/Wlogical-op-2.C: New test.\n \n-2015-07-23  Alexandre Oliva <aoliva@redhat.com>\n+2015-07-23  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR rtl-optimization/64164\n \t* gcc.dg/guality/pr54200.c: Add -fno-tree-coalesce-vars.\n@@ -4200,10 +4200,10 @@\n \t* gcc.target/arm/pr65710.c: Do not override -mfloat-abi directives\n \tpassed by the testsuite driver.\n \n-2015-06-09  Alexandre Oliva <aoliva@redhat.com>\n+2015-06-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \tRevert:\n-\t2015-06-09  Alexandre Oliva <aoliva@redhat.com>\n+\t2015-06-09  Alexandre Oliva  <aoliva@redhat.com>\n \t* gcc.dg/guality/pr54200.c: Add -fno-tree-coalesce-vars.\n \t* gcc.dg/ssp-1.c: Make counter a register.\n \t* gcc.dg/ssp-2.c: Likewise.\n@@ -4250,7 +4250,7 @@\n \tPR middle-end/66413\n \t* gcc.dg/torture/pr66413.c: New testcase.\n \n-2015-06-09  Alexandre Oliva <aoliva@redhat.com>\n+2015-06-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gcc.dg/guality/pr54200.c: Add -fno-tree-coalesce-vars.\n \t* gcc.dg/ssp-1.c: Make counter a register.\n@@ -9251,7 +9251,7 @@\n \t* gcc.dg/guality/pr41447-1.c: Remove xfail.\n \t* gcc.dg/guality/pr41616-1.c: Ditto.\n \n-2015-02-04  Alexandre Oliva <aoliva@redhat.com>\n+2015-02-04  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/64817\n \t* gcc.dg/pr64817-3.c: New."}]}