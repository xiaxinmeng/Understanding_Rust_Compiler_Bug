{"sha": "70f0918881ba6bb31047544723c2a4ed11b2eed5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBmMDkxODg4MWJhNmJiMzEwNDc1NDQ3MjNjMmE0ZWQxMWIyZWVkNQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2013-01-04T22:30:37Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2013-01-04T22:30:37Z"}, "message": "aarch64.c (aarch64_fixed_condition_code_regs): New function.\n\n2013-01-04  Andrew Pinski  <apinski@cavium.com>\n\n\t* config/aarch64/aarch64.c (aarch64_fixed_condition_code_regs):\n\tNew function.\n\t(TARGET_FIXED_CONDITION_CODE_REGS): Define.\n\n2013-01-04  Andrew Pinski  <apinski@cavium.com>\n\n\t* gcc.target/aarch64/cmp-1.c: New testcase.\n\nFrom-SVN: r194920", "tree": {"sha": "4ed190a41460510f0447456de3c97d37db56b4dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ed190a41460510f0447456de3c97d37db56b4dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70f0918881ba6bb31047544723c2a4ed11b2eed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f0918881ba6bb31047544723c2a4ed11b2eed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f0918881ba6bb31047544723c2a4ed11b2eed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f0918881ba6bb31047544723c2a4ed11b2eed5/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "429cb99447a8111be5bffba67270837e90b77929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429cb99447a8111be5bffba67270837e90b77929", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429cb99447a8111be5bffba67270837e90b77929"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "c972d9cb13b46952f6d17b9d08a5fd738d98d6fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f0918881ba6bb31047544723c2a4ed11b2eed5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f0918881ba6bb31047544723c2a4ed11b2eed5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70f0918881ba6bb31047544723c2a4ed11b2eed5", "patch": "@@ -1,3 +1,9 @@\n+2013-01-04  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_fixed_condition_code_regs):\n+\tNew function.\n+\t(TARGET_FIXED_CONDITION_CODE_REGS): Define.\n+\n 2013-01-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_legitimize_address): Call convert_to_mode"}, {"sha": "6bba8cc8a6dd03a950b5f2216e12e8f7010a3c79", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f0918881ba6bb31047544723c2a4ed11b2eed5/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f0918881ba6bb31047544723c2a4ed11b2eed5/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=70f0918881ba6bb31047544723c2a4ed11b2eed5", "patch": "@@ -3041,6 +3041,16 @@ aarch64_const_double_zero_rtx_p (rtx x)\n   return REAL_VALUES_EQUAL (r, dconst0);\n }\n \n+/* Return the fixed registers used for condition codes.  */\n+\n+static bool\n+aarch64_fixed_condition_code_regs (unsigned int *p1, unsigned int *p2)\n+{\n+  *p1 = CC_REGNUM;\n+  *p2 = INVALID_REGNUM;\n+  return true;\n+}\n+\n enum machine_mode\n aarch64_select_cc_mode (RTX_CODE code, rtx x, rtx y)\n {\n@@ -7551,6 +7561,9 @@ aarch64_vectorize_vec_perm_const_ok (enum machine_mode vmode,\n #define TARGET_VECTORIZE_VEC_PERM_CONST_OK \\\n   aarch64_vectorize_vec_perm_const_ok\n \n+\n+#define TARGET_FIXED_CONDITION_CODE_REGS aarch64_fixed_condition_code_regs\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-aarch64.h\""}, {"sha": "388d1cef143a3af5a301bbfa119e829fdd7f300f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f0918881ba6bb31047544723c2a4ed11b2eed5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f0918881ba6bb31047544723c2a4ed11b2eed5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=70f0918881ba6bb31047544723c2a4ed11b2eed5", "patch": "@@ -1,3 +1,7 @@\n+2013-01-04  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* gcc.target/aarch64/cmp-1.c: New testcase.\n+\n 2013-01-04  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/55172"}, {"sha": "4c082b484ab81e3a9d4f4bdeae6d1d075f29bb98", "filename": "gcc/testsuite/gcc.target/aarch64/cmp-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f0918881ba6bb31047544723c2a4ed11b2eed5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f0918881ba6bb31047544723c2a4ed11b2eed5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcmp-1.c?ref=70f0918881ba6bb31047544723c2a4ed11b2eed5", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int f(int a, int b)\n+{\n+  if(a<b)\n+    return 1;\n+  if(a>b)\n+    return -1;\n+  return 0;\n+}\n+\n+/* We should optimize away the second cmp. */\n+/* { dg-final { scan-assembler-times \"cmp\\tw\" 1 } } */\n+"}]}