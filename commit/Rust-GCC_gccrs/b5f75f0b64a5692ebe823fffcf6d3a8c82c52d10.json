{"sha": "b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVmNzVmMGI2NGE1NjkyZWJlODIzZmZmY2Y2ZDNhOGM4MmM1MmQxMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-01-26T12:24:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-26T12:24:58Z"}, "message": "avx512fintrin.h (_ktest_mask16_u8, [...]): Move to ...\n\n\t* config/i386/avx512fintrin.h (_ktest_mask16_u8,\n\t_ktestz_mask16_u8, _ktestc_mask16_u8, _kadd_mask16): Move to ...\n\t* config/i386/avx512dqintrin.h (_ktest_mask16_u8,\n\t_ktestz_mask16_u8, _ktestc_mask16_u8, _kadd_mask16): ... here.\n\t* config/i386/i386-builtin.def (__builtin_ia32_ktestchi,\n\t__builtin_ia32_ktestzhi, __builtin_ia32_kaddhi): Use\n\tOPTION_MASK_ISA_AVX512DQ instead of OPTION_MASK_ISA_AVX512F.\n\t* config/i386/sse.md (SWI1248_AVX512BWDQ2): New mode iterator.\n\t(kadd<mode>, ktest<mode>): Use it instead of SWI1248_AVX512BWDQ.\ntestsuite/\n\t* gcc.target/i386/avx512f-kaddw-1.c: Renamed to ...\n\t* gcc.target/i386/avx512dq-kaddw-1.c: ... this.  New test.  Replace\n\tavx512f with avx512dq.\n\t* gcc.target/i386/avx512f-ktestw-1.c: Renamed to ...\n\t* gcc.target/i386/avx512dq-ktestw-1.c: ... this.  New test.  Replace\n\tavx512f with avx512dq.\n\t* gcc.target/i386/avx512f-ktestw-2.c: Renamed to ...\n\t* gcc.target/i386/avx512dq-ktestw-2.c: ... this.  New test.  Replace\n\tavx512f with avx512dq.\n\nFrom-SVN: r244929", "tree": {"sha": "b4d2ab01125e950e5afacedfa585361af3dd7ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4d2ab01125e950e5afacedfa585361af3dd7ecd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a38b341a8c6e6ee8357ca78c3105b7082337611", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a38b341a8c6e6ee8357ca78c3105b7082337611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a38b341a8c6e6ee8357ca78c3105b7082337611"}], "stats": {"total": 121, "additions": 75, "deletions": 46}, "files": [{"sha": "c0d588b630c288f77cc3d8894ceb077601495b46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "patch": "@@ -1,3 +1,15 @@\n+2017-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/avx512fintrin.h (_ktest_mask16_u8,\n+\t_ktestz_mask16_u8, _ktestc_mask16_u8, _kadd_mask16): Move to ...\n+\t* config/i386/avx512dqintrin.h (_ktest_mask16_u8,\n+\t_ktestz_mask16_u8, _ktestc_mask16_u8, _kadd_mask16): ... here.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_ktestchi,\n+\t__builtin_ia32_ktestzhi, __builtin_ia32_kaddhi): Use\n+\tOPTION_MASK_ISA_AVX512DQ instead of OPTION_MASK_ISA_AVX512F.\n+\t* config/i386/sse.md (SWI1248_AVX512BWDQ2): New mode iterator.\n+\t(kadd<mode>, ktest<mode>): Use it instead of SWI1248_AVX512BWDQ.\n+\n 2017-01-26  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/79199"}, {"sha": "88e8adb18c54baad7c89daae59a51f2f6bfe3693", "filename": "gcc/config/i386/avx512dqintrin.h", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h?ref=b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "patch": "@@ -56,6 +56,28 @@ _ktestc_mask8_u8 (__mmask8 __A, __mmask8 __B)\n   return (unsigned char) __builtin_ia32_ktestcqi (__A, __B);\n }\n \n+extern __inline unsigned char\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_ktest_mask16_u8  (__mmask16 __A,  __mmask16 __B, unsigned char *__CF)\n+{\n+  *__CF = (unsigned char) __builtin_ia32_ktestchi (__A, __B);\n+  return (unsigned char) __builtin_ia32_ktestzhi (__A, __B);\n+}\n+\n+extern __inline unsigned char\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_ktestz_mask16_u8 (__mmask16 __A, __mmask16 __B)\n+{\n+  return (unsigned char) __builtin_ia32_ktestzhi (__A, __B);\n+}\n+\n+extern __inline unsigned char\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_ktestc_mask16_u8 (__mmask16 __A, __mmask16 __B)\n+{\n+  return (unsigned char) __builtin_ia32_ktestchi (__A, __B);\n+}\n+\n extern __inline unsigned char\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _kortest_mask8_u8  (__mmask8 __A,  __mmask8 __B, unsigned char *__CF)\n@@ -85,6 +107,13 @@ _kadd_mask8 (__mmask8 __A, __mmask8 __B)\n   return (__mmask8) __builtin_ia32_kaddqi ((__mmask8) __A, (__mmask8) __B);\n }\n \n+extern __inline __mmask16\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_kadd_mask16 (__mmask16 __A, __mmask16 __B)\n+{\n+  return (__mmask16) __builtin_ia32_kaddhi ((__mmask16) __A, (__mmask16) __B);\n+}\n+\n extern __inline unsigned int\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _cvtmask8_u32 (__mmask8 __A)"}, {"sha": "68c3d6a105ae4fca9b35925a376096b5047651d3", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "patch": "@@ -10006,28 +10006,6 @@ _mm512_maskz_expandloadu_epi32 (__mmask16 __U, void const *__P)\n #define _kxnor_mask16 _mm512_kxnor\n #define _kxor_mask16 _mm512_kxor\n \n-extern __inline unsigned char\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_ktest_mask16_u8  (__mmask16 __A,  __mmask16 __B, unsigned char *__CF)\n-{\n-  *__CF = (unsigned char) __builtin_ia32_ktestchi (__A, __B);\n-  return (unsigned char) __builtin_ia32_ktestzhi (__A, __B);\n-}\n-\n-extern __inline unsigned char\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_ktestz_mask16_u8 (__mmask16 __A, __mmask16 __B)\n-{\n-  return (unsigned char) __builtin_ia32_ktestzhi (__A, __B);\n-}\n-\n-extern __inline unsigned char\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_ktestc_mask16_u8 (__mmask16 __A, __mmask16 __B)\n-{\n-  return (unsigned char) __builtin_ia32_ktestchi (__A, __B);\n-}\n-\n extern __inline unsigned char\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _kortest_mask16_u8  (__mmask16 __A,  __mmask16 __B, unsigned char *__CF)\n@@ -10052,13 +10030,6 @@ _kortestc_mask16_u8 (__mmask16 __A, __mmask16 __B)\n \t\t\t\t\t\t    (__mmask16) __B);\n }\n \n-extern __inline __mmask16\n-__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n-_kadd_mask16 (__mmask16 __A, __mmask16 __B)\n-{\n-  return (__mmask16) __builtin_ia32_kaddhi ((__mmask16) __A, (__mmask16) __B);\n-}\n-\n extern __inline unsigned int\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _cvtmask16_u32 (__mmask16 __A)"}, {"sha": "a8fe0a510a464083b892d27bf4a827ef7949bc56", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "patch": "@@ -1466,8 +1466,8 @@ BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kiorsi, \"__builtin_ia32_korsi\", IX86_B\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kiordi, \"__builtin_ia32_kordi\", IX86_BUILTIN_KOR64, UNKNOWN, (int) UDI_FTYPE_UDI_UDI)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_ktestqi, \"__builtin_ia32_ktestcqi\", IX86_BUILTIN_KTESTC8, UNKNOWN, (int) UQI_FTYPE_UQI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_ktestqi, \"__builtin_ia32_ktestzqi\", IX86_BUILTIN_KTESTZ8, UNKNOWN, (int) UQI_FTYPE_UQI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ktesthi, \"__builtin_ia32_ktestchi\", IX86_BUILTIN_KTESTC16, UNKNOWN, (int) UHI_FTYPE_UHI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ktesthi, \"__builtin_ia32_ktestzhi\", IX86_BUILTIN_KTESTZ16, UNKNOWN, (int) UHI_FTYPE_UHI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_ktesthi, \"__builtin_ia32_ktestchi\", IX86_BUILTIN_KTESTC16, UNKNOWN, (int) UHI_FTYPE_UHI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_ktesthi, \"__builtin_ia32_ktestzhi\", IX86_BUILTIN_KTESTZ16, UNKNOWN, (int) UHI_FTYPE_UHI_UHI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ktestsi, \"__builtin_ia32_ktestcsi\", IX86_BUILTIN_KTESTC32, UNKNOWN, (int) USI_FTYPE_USI_USI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ktestsi, \"__builtin_ia32_ktestzsi\", IX86_BUILTIN_KTESTZ32, UNKNOWN, (int) USI_FTYPE_USI_USI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ktestdi, \"__builtin_ia32_ktestcdi\", IX86_BUILTIN_KTESTC64, UNKNOWN, (int) UDI_FTYPE_UDI_UDI)\n@@ -1495,7 +1495,7 @@ BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_kmovw, \"__builtin_ia32_kmovw\", IX86_BUI\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kmovd, \"__builtin_ia32_kmovd\", IX86_BUILTIN_KMOV32, UNKNOWN, (int) USI_FTYPE_USI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kmovq, \"__builtin_ia32_kmovq\", IX86_BUILTIN_KMOV64, UNKNOWN, (int) UDI_FTYPE_UDI)\n BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_kaddqi, \"__builtin_ia32_kaddqi\", IX86_BUILTIN_KADD8, UNKNOWN, (int) UQI_FTYPE_UQI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_kaddhi, \"__builtin_ia32_kaddhi\", IX86_BUILTIN_KADD16, UNKNOWN, (int) UHI_FTYPE_UHI_UHI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_kaddhi, \"__builtin_ia32_kaddhi\", IX86_BUILTIN_KADD16, UNKNOWN, (int) UHI_FTYPE_UHI_UHI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kaddsi, \"__builtin_ia32_kaddsi\", IX86_BUILTIN_KADD32, UNKNOWN, (int) USI_FTYPE_USI_USI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_kadddi, \"__builtin_ia32_kadddi\", IX86_BUILTIN_KADD64, UNKNOWN, (int) UDI_FTYPE_UDI_UDI)\n "}, {"sha": "a19c8f2bc2e05d6ff80750f703047907c8ef88ad", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "patch": "@@ -1302,6 +1302,11 @@\n (define_mode_iterator SWI1248_AVX512BW\n   [QI HI (SI \"TARGET_AVX512BW\") (DI \"TARGET_AVX512BW\")])\n \n+;; All integer modes with AVX512BW/DQ, even HImode requires DQ.\n+(define_mode_iterator SWI1248_AVX512BWDQ2\n+  [(QI \"TARGET_AVX512DQ\") (HI \"TARGET_AVX512DQ\")\n+   (SI \"TARGET_AVX512BW\") (DI \"TARGET_AVX512BW\")])\n+\n (define_expand \"kmov<mskmodesuffix>\"\n   [(set (match_operand:SWI1248_AVX512BWDQ 0 \"nonimmediate_operand\")\n \t(match_operand:SWI1248_AVX512BWDQ 1 \"nonimmediate_operand\"))]\n@@ -1398,10 +1403,10 @@\n \t   (const_string \"<MODE>\")))])\n \n (define_insn \"kadd<mode>\"\n-  [(set (match_operand:SWI1248_AVX512BWDQ 0 \"register_operand\" \"=k\")\n-\t(plus:SWI1248_AVX512BWDQ\n-\t  (match_operand:SWI1248_AVX512BWDQ 1 \"register_operand\" \"k\")\n-\t  (match_operand:SWI1248_AVX512BWDQ 2 \"register_operand\" \"k\")))\n+  [(set (match_operand:SWI1248_AVX512BWDQ2 0 \"register_operand\" \"=k\")\n+\t(plus:SWI1248_AVX512BWDQ2\n+\t  (match_operand:SWI1248_AVX512BWDQ2 1 \"register_operand\" \"k\")\n+\t  (match_operand:SWI1248_AVX512BWDQ2 2 \"register_operand\" \"k\")))\n    (unspec [(const_int 0)] UNSPEC_MASKOP)]\n   \"TARGET_AVX512F\"\n   \"kadd<mskmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n@@ -1427,8 +1432,8 @@\n (define_insn \"ktest<mode>\"\n   [(set (reg:CC FLAGS_REG)\n \t(unspec:CC\n-\t  [(match_operand:SWI1248_AVX512BWDQ 0 \"register_operand\" \"k\")\n-\t   (match_operand:SWI1248_AVX512BWDQ 1 \"register_operand\" \"k\")]\n+\t  [(match_operand:SWI1248_AVX512BWDQ2 0 \"register_operand\" \"k\")\n+\t   (match_operand:SWI1248_AVX512BWDQ2 1 \"register_operand\" \"k\")]\n \t  UNSPEC_KTEST))]\n   \"TARGET_AVX512F\"\n   \"ktest<mskmodesuffix>\\t{%1, %0|%0, %1}\""}, {"sha": "4054dd0a11ab37fbacf37131f48e46749d67b955", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "patch": "@@ -1,3 +1,15 @@\n+2017-01-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.target/i386/avx512f-kaddw-1.c: Renamed to ...\n+\t* gcc.target/i386/avx512dq-kaddw-1.c: ... this.  New test.  Replace\n+\tavx512f with avx512dq.\n+\t* gcc.target/i386/avx512f-ktestw-1.c: Renamed to ...\n+\t* gcc.target/i386/avx512dq-ktestw-1.c: ... this.  New test.  Replace\n+\tavx512f with avx512dq.\n+\t* gcc.target/i386/avx512f-ktestw-2.c: Renamed to ...\n+\t* gcc.target/i386/avx512dq-ktestw-2.c: ... this.  New test.  Replace\n+\tavx512f with avx512dq.\n+\n 2017-01-26  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/79199"}, {"sha": "86d92b997a95dec7211353b4ba369b3e7f57f792", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-kaddw-1.c", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-kaddw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-kaddw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-kaddw-1.c?ref=b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mavx512f -O2\" } */\n+/* { dg-options \"-mavx512dq -O2\" } */\n /* { dg-final { scan-assembler-times \"kaddw\\[ \\\\t\\]+\\[^\\{\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n \n void\n-avx512f_test ()\n+avx512dq_test ()\n {\n   __mmask16 k = _kadd_mask16 (11, 12);\n   asm volatile (\"\" : \"+k\" (k));", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512f-kaddw-1.c"}, {"sha": "5394604814f0b2bab6905583a8e708004ec33254", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-ktestw-1.c", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-ktestw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-ktestw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-ktestw-1.c?ref=b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O0 -mavx512f\" } */\n+/* { dg-options \"-O0 -mavx512dq\" } */\n /* { dg-final { scan-assembler-times \"ktestw\\[ \\\\t\\]+\\[^\\{\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 2 } } */\n \n #include <immintrin.h>\n \n void\n-avx512f_test () {\n+avx512dq_test () {\n   volatile __mmask16 k1;\n   __mmask16 k2;\n ", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512f-ktestw-1.c"}, {"sha": "fcc0cf47eb0187357790cb9827af91c1d35a6fff", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-ktestw-2.c", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-ktestw-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-ktestw-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-ktestw-2.c?ref=b5f75f0b64a5692ebe823fffcf6d3a8c82c52d10", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2 -mavx512f\" } */\n-/* { dg-require-effective-target avx512f } */\n+/* { dg-options \"-O2 -mavx512dq\" } */\n+/* { dg-require-effective-target avx512dq } */\n \n-#include \"avx512f-check.h\"\n+#include \"avx512dq-check.h\"\n \n void\n-avx512f_test ()\n+avx512dq_test ()\n {\n   volatile __mmask16 k1, k2;\n   unsigned char r1, r2;", "previous_filename": "gcc/testsuite/gcc.target/i386/avx512f-ktestw-2.c"}]}