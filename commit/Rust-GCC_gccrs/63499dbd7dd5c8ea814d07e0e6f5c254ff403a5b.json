{"sha": "63499dbd7dd5c8ea814d07e0e6f5c254ff403a5b", "node_id": "C_kwDOANBUbNoAKDYzNDk5ZGJkN2RkNWM4ZWE4MTRkMDdlMGU2ZjVjMjU0ZmY0MDNhNWI", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2022-08-19T16:25:45Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-06T07:14:22Z"}, "message": "[Ada] Disable if expression optimization for LLVM\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_N_If_Expression): Disable optimization\n\tfor LLVM.", "tree": {"sha": "f038611ae557e06957d295a27708bd46d07393ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f038611ae557e06957d295a27708bd46d07393ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63499dbd7dd5c8ea814d07e0e6f5c254ff403a5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63499dbd7dd5c8ea814d07e0e6f5c254ff403a5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63499dbd7dd5c8ea814d07e0e6f5c254ff403a5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63499dbd7dd5c8ea814d07e0e6f5c254ff403a5b/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c245f7273f170f3236f30562a72567be648c300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c245f7273f170f3236f30562a72567be648c300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c245f7273f170f3236f30562a72567be648c300"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "0b7e3911c6a94503982abeb822f7442005b122ee", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63499dbd7dd5c8ea814d07e0e6f5c254ff403a5b/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63499dbd7dd5c8ea814d07e0e6f5c254ff403a5b/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=63499dbd7dd5c8ea814d07e0e6f5c254ff403a5b", "patch": "@@ -6135,6 +6135,10 @@ package body Exp_Ch4 is\n       --  itself such a slice, in order to catch if expressions with more than\n       --  two dependent expressions in the source code.\n \n+      --  Also note that this creates variables on branches without an explicit\n+      --  scope, causing troubles with e.g. the LLVM IR, so disable this\n+      --  optimization when Unnest_Subprogram_Mode (enabled for LLVM).\n+\n       elsif Is_Array_Type (Typ)\n         and then Number_Dimensions (Typ) = 1\n         and then not Is_Constrained (Typ)\n@@ -6151,6 +6155,7 @@ package body Exp_Ch4 is\n              and then\n                OK_For_Single_Subtype (Etype (Thenx), Etype (Prefix (Elsex)))))\n         and then not Generate_C_Code\n+        and then not Unnest_Subprogram_Mode\n       then\n          declare\n             Ityp : constant Entity_Id := Base_Type (Etype (First_Index (Typ)));"}]}