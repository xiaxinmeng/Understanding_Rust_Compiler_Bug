{"sha": "2b672e358d4022363e398446ff6efbf9b55e066e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI2NzJlMzU4ZDQwMjIzNjNlMzk4NDQ2ZmY2ZWZiZjliNTVlMDY2ZQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-05-28T15:55:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-28T15:55:52Z"}, "message": "sinput-p.adb (Source_File_Is_Subunit): Allow special character used for preprocessing\n\n2008-05-28  Vincent Celier  <celier@adacore.com>\n\n\t* sinput-p.adb (Source_File_Is_Subunit): Allow special character used\n\tfor preprocessing\n\t\n\t* sinput-p.ads: Minor comment update and reformatting\n\nFrom-SVN: r136112", "tree": {"sha": "3bccfd1647078c9c205e84d4e5d4c610e788dbde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bccfd1647078c9c205e84d4e5d4c610e788dbde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b672e358d4022363e398446ff6efbf9b55e066e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b672e358d4022363e398446ff6efbf9b55e066e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b672e358d4022363e398446ff6efbf9b55e066e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b672e358d4022363e398446ff6efbf9b55e066e/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3fdd06e1ec6e3fd364b2958f4fefe9eb3b09d1ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fdd06e1ec6e3fd364b2958f4fefe9eb3b09d1ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fdd06e1ec6e3fd364b2958f4fefe9eb3b09d1ad"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "b57c73bf957908ca0ab9f077d2b56d3fd5a2bb19", "filename": "gcc/ada/sinput-p.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b672e358d4022363e398446ff6efbf9b55e066e/gcc%2Fada%2Fsinput-p.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b672e358d4022363e398446ff6efbf9b55e066e/gcc%2Fada%2Fsinput-p.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-p.adb?ref=2b672e358d4022363e398446ff6efbf9b55e066e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -95,6 +95,11 @@ package body Sinput.P is\n    begin\n       Prj.Err.Scanner.Initialize_Scanner (X);\n \n+      --  No error for special characters that are used for preprocessing\n+\n+      Prj.Err.Scanner.Set_Special_Character ('#');\n+      Prj.Err.Scanner.Set_Special_Character ('$');\n+\n       --  We scan past junk to the first interesting compilation unit\n       --  token, to see if it is SEPARATE. We ignore WITH keywords during\n       --  this and also PRIVATE. The reason for ignoring PRIVATE is that\n@@ -108,6 +113,8 @@ package body Sinput.P is\n          Prj.Err.Scanner.Scan;\n       end loop;\n \n+      Prj.Err.Scanner.Reset_Special_Characters;\n+\n       return Token = Tok_Separate;\n    end Source_File_Is_Subunit;\n "}, {"sha": "85ac35d331a878dcd48d4fb274a2c32621b813e8", "filename": "gcc/ada/sinput-p.ads", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b672e358d4022363e398446ff6efbf9b55e066e/gcc%2Fada%2Fsinput-p.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b672e358d4022363e398446ff6efbf9b55e066e/gcc%2Fada%2Fsinput-p.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-p.ads?ref=2b672e358d4022363e398446ff6efbf9b55e066e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,37 +32,37 @@ with Scans; use Scans;\n package Sinput.P is\n \n    function Load_Project_File (Path : String) return Source_File_Index;\n-   --  Load into memory the source of a project source file.\n-   --  Initialize the Scans state.\n+   --  Load into memory the source of a project source file. Initialize the\n+   --  Scans state.\n \n    procedure Reset_First;\n    --  Indicate that the next project loaded should be considered as the first\n    --  one, so that Sinput.Main_Source_File is set for this project file. This\n    --  is to get the correct number of lines when error finalization is called.\n \n    function Source_File_Is_Subunit (X : Source_File_Index) return Boolean;\n-   --  This function determines if a source file represents a subunit. It\n-   --  works by scanning for the first compilation unit token, and returning\n-   --  True if it is the token SEPARATE. It will return False otherwise,\n-   --  meaning that the file cannot possibly be a legal subunit. This\n-   --  function does NOT do a complete parse of the file, or build a\n-   --  tree. It is used in gnatmake to decide if a body without a spec\n-   --  in a project file needs to be compiled or not.\n+   --  This function determines if a source file represents a subunit. It works\n+   --  by scanning for the first compilation unit token, and returning True if\n+   --  it is the token SEPARATE. It will return False otherwise, meaning that\n+   --  the file cannot possibly be a legal subunit. This function does NOT do a\n+   --  complete parse of the file, or build a tree. It is used in gnatmake and\n+   --  gprbuild to decide if a body without a spec in a project file needs to\n+   --  be compiled or not.\n \n    type Saved_Project_Scan_State is limited private;\n    --  Used to save project scan state in following two routines\n \n    procedure Save_Project_Scan_State\n      (Saved_State : out Saved_Project_Scan_State);\n    pragma Inline (Save_Project_Scan_State);\n-   --  Save the Scans state, as well as the values of\n-   --  Source and Current_Source_File.\n+   --  Save the Scans state, as well as the values of Source and\n+   --  Current_Source_File.\n \n    procedure Restore_Project_Scan_State\n      (Saved_State : Saved_Project_Scan_State);\n    pragma Inline (Restore_Project_Scan_State);\n-   --  Restore the Scans state and the values of\n-   --  Source and Current_Source_File.\n+   --  Restore the Scans state and the values of Source and\n+   --  Current_Source_File.\n \n private\n "}]}