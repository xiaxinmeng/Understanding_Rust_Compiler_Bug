{"sha": "c72f8eec54e029306e2f4ce8226ecb632e0794ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcyZjhlZWM1NGUwMjkzMDZlMmY0Y2U4MjI2ZWNiNjMyZTA3OTRhYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-02T15:56:06Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-02T15:56:06Z"}, "message": "* objc-act.c: Fix comment typos.\n\nFrom-SVN: r88426", "tree": {"sha": "a84514ee5b33f306100744879f4fd29cb116676b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a84514ee5b33f306100744879f4fd29cb116676b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c72f8eec54e029306e2f4ce8226ecb632e0794ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c72f8eec54e029306e2f4ce8226ecb632e0794ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c72f8eec54e029306e2f4ce8226ecb632e0794ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c72f8eec54e029306e2f4ce8226ecb632e0794ac/comments", "author": null, "committer": null, "parents": [{"sha": "64beac09f9ad034b925c684885d753ee7cf0856f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64beac09f9ad034b925c684885d753ee7cf0856f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64beac09f9ad034b925c684885d753ee7cf0856f"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "734f74d6bf98c548cd0e60567d280800e36735b8", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72f8eec54e029306e2f4ce8226ecb632e0794ac/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72f8eec54e029306e2f4ce8226ecb632e0794ac/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=c72f8eec54e029306e2f4ce8226ecb632e0794ac", "patch": "@@ -1,3 +1,7 @@\n+2004-10-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* objc-act.c: Fix comment typos.\n+\n 2004-09-24  Ziemowit Laski  <zlaski@apple.com>\n \n \t* objc-act.c (init_objc_symtab, init_module_descriptor,"}, {"sha": "e530f2c1dff4cab70d3e8740c4f3c56e50b9dc19", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72f8eec54e029306e2f4ce8226ecb632e0794ac/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72f8eec54e029306e2f4ce8226ecb632e0794ac/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=c72f8eec54e029306e2f4ce8226ecb632e0794ac", "patch": "@@ -1287,7 +1287,7 @@ finish_var_decl (tree var, tree initializer)\n   TREE_USED (var) = 1;\n }\n \n-/* Find the decl for the constant string class refernce.  This is only\n+/* Find the decl for the constant string class reference.  This is only\n    used for the NeXT runtime.  */\n \n static tree\n@@ -3091,7 +3091,7 @@ next_sjlj_build_try_catch_finally (void)\n   TREE_THIS_VOLATILE (rethrow_decl) = 1;\n   TREE_CHAIN (rethrow_decl) = stack_decl;\n \n-  /* Build the outermost varible binding level.  */\n+  /* Build the outermost variable binding level.  */\n   bind = build (BIND_EXPR, void_type_node, rethrow_decl, NULL, NULL);\n   SET_EXPR_LOCATION (bind, cur_try_context->try_locus);\n   TREE_SIDE_EFFECTS (bind) = 1;\n@@ -3863,7 +3863,7 @@ generate_protocol_references (tree plist)\n    objects).  Because, as explained above, the compiler generates as\n    few Protocol objects as possible, some Protocol object might end up\n    being referenced multiple times when compiled with the GNU runtime,\n-   and end up being fixed up multiple times at runtime inizialization.\n+   and end up being fixed up multiple times at runtime initialization.\n    But that doesn't hurt, it's just a little inefficient.  */\n \n static void\n@@ -7348,7 +7348,7 @@ objc_push_parm (tree parm)\n   objc_parmlist = chainon (objc_parmlist, parm);\n }\n \n-/* Retrieve the formal paramter list constructed via preceding calls to\n+/* Retrieve the formal parameter list constructed via preceding calls to\n    objc_push_parm().  */\n \n #ifdef OBJCPLUS"}]}