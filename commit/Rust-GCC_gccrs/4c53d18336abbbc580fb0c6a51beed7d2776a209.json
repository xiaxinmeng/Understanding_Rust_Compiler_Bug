{"sha": "4c53d18336abbbc580fb0c6a51beed7d2776a209", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM1M2QxODMzNmFiYmJjNTgwZmIwYzZhNTFiZWVkN2QyNzc2YTIwOQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2012-06-15T14:46:36Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2012-06-15T14:46:36Z"}, "message": "gimplify.c (gimplify_compound_literal_expr): Take gimple_test_f argument...\n\n\t* gimplify.c (gimplify_compound_literal_expr): Take gimple_test_f\n\targument, don't emit assign statement if value is directly usable.\n\t(gimplify_expr): Adjust.\n\ntestsuite/\n\t* gcc.dg/tree-ssa/vector-4.c: New test.\n\nFrom-SVN: r188665", "tree": {"sha": "52ddf82808940117f11925d8592a4fa676566921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52ddf82808940117f11925d8592a4fa676566921"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c53d18336abbbc580fb0c6a51beed7d2776a209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c53d18336abbbc580fb0c6a51beed7d2776a209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c53d18336abbbc580fb0c6a51beed7d2776a209", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c53d18336abbbc580fb0c6a51beed7d2776a209/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6da8be895c345e90cec9a70fdeb38111fc48a880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da8be895c345e90cec9a70fdeb38111fc48a880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da8be895c345e90cec9a70fdeb38111fc48a880"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "ebb64a7e7f3e9d7ce00bc3992f30786b9db08e5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c53d18336abbbc580fb0c6a51beed7d2776a209/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c53d18336abbbc580fb0c6a51beed7d2776a209/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c53d18336abbbc580fb0c6a51beed7d2776a209", "patch": "@@ -1,3 +1,9 @@\n+2012-06-15  Michael Matz  <matz@suse.de>\n+\n+\t* gimplify.c (gimplify_compound_literal_expr): Take gimple_test_f\n+\targument, don't emit assign statement if value is directly usable.\n+\t(gimplify_expr): Adjust.\n+\n 2012-06-15  Michael Matz  <matz@suse.de>\n \n \t* gimplify.c (gimplify_modify_expr): Fold generated statements."}, {"sha": "9bf4ead84ed202d2a84b0fa870b38822ed3c0ba9", "filename": "gcc/gimplify.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c53d18336abbbc580fb0c6a51beed7d2776a209/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c53d18336abbbc580fb0c6a51beed7d2776a209/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=4c53d18336abbbc580fb0c6a51beed7d2776a209", "patch": "@@ -3796,15 +3796,29 @@ rhs_predicate_for (tree lhs)\n \n static enum gimplify_status\n gimplify_compound_literal_expr (tree *expr_p, gimple_seq *pre_p,\n+\t\t\t\tbool (*gimple_test_f) (tree),\n \t\t\t\tfallback_t fallback)\n {\n   tree decl_s = COMPOUND_LITERAL_EXPR_DECL_EXPR (*expr_p);\n   tree decl = DECL_EXPR_DECL (decl_s);\n+  tree init = DECL_INITIAL (decl);\n   /* Mark the decl as addressable if the compound literal\n      expression is addressable now, otherwise it is marked too late\n      after we gimplify the initialization expression.  */\n   if (TREE_ADDRESSABLE (*expr_p))\n     TREE_ADDRESSABLE (decl) = 1;\n+  /* Otherwise, if we don't need an lvalue and have a literal directly\n+     substitute it.  Check if it matches the gimple predicate, as\n+     otherwise we'd generate a new temporary, and we can as well just\n+     use the decl we already have.  */\n+  else if (!TREE_ADDRESSABLE (decl)\n+\t   && init\n+\t   && (fallback & fb_lvalue) == 0\n+\t   && gimple_test_f (init))\n+    {\n+      *expr_p = init;\n+      return GS_OK;\n+    }\n \n   /* Preliminarily mark non-addressed complex variables as eligible\n      for promotion to gimple registers.  We'll transform their uses\n@@ -7121,7 +7135,8 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t  break;\n \n \tcase COMPOUND_LITERAL_EXPR:\n-\t  ret = gimplify_compound_literal_expr (expr_p, pre_p, fallback);\n+\t  ret = gimplify_compound_literal_expr (expr_p, pre_p,\n+\t\t\t\t\t\tgimple_test_f, fallback);\n \t  break;\n \n \tcase MODIFY_EXPR:"}, {"sha": "8678626f8b1ebb64bb51071d7e4c1549b04af839", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c53d18336abbbc580fb0c6a51beed7d2776a209/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c53d18336abbbc580fb0c6a51beed7d2776a209/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c53d18336abbbc580fb0c6a51beed7d2776a209", "patch": "@@ -1,3 +1,7 @@\n+2012-06-15  Michael Matz  <matz@suse.de>\n+\n+\t* gcc.dg/tree-ssa/vector-4.c: New test.\n+\n 2012-06-15  Michael Matz  <matz@suse.de>\n \n \t* gcc.dg/debug/dwarf2/inline3.c: Adjust."}, {"sha": "bfef25f74250f75d7d0df8001eb518431d48cae8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vector-4.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c53d18336abbbc580fb0c6a51beed7d2776a209/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvector-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c53d18336abbbc580fb0c6a51beed7d2776a209/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvector-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvector-4.c?ref=4c53d18336abbbc580fb0c6a51beed7d2776a209", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-w -O1 -fdump-tree-gimple\" } */\n+\n+typedef int v4si __attribute__ ((vector_size (16)));\n+\n+v4si vs (v4si a, v4si b)\n+{\n+  return __builtin_shuffle (a, b, (v4si) {0, 4, 1, 5});\n+}\n+\n+/* The compound literal should be placed directly in the vec_perm.  */\n+/* { dg-final { scan-tree-dump-times \"VEC_PERM_EXPR <a, b, { 0, 4, 1, 5 }>;\" 1 \"gimple\"} } */\n+\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */"}]}