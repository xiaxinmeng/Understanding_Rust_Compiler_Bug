{"sha": "4d1bc60a12eafe8aed38fff234a4f6ca16f78501", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQxYmM2MGExMmVhZmU4YWVkMzhmZmYyMzRhNGY2Y2ExNmY3ODUwMQ==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2010-10-22T19:53:48Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2010-10-22T19:53:48Z"}, "message": "* config/pdp11/pdp11.h (IRA_COVER_CLASSES): Define.\n\nFrom-SVN: r165858", "tree": {"sha": "d9e1822bd282718886ad97daede197ba5f2723fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9e1822bd282718886ad97daede197ba5f2723fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d1bc60a12eafe8aed38fff234a4f6ca16f78501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d1bc60a12eafe8aed38fff234a4f6ca16f78501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d1bc60a12eafe8aed38fff234a4f6ca16f78501", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d1bc60a12eafe8aed38fff234a4f6ca16f78501/comments", "author": null, "committer": null, "parents": [{"sha": "834d5dce795dd36136ab744c65c7008bc3804583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834d5dce795dd36136ab744c65c7008bc3804583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834d5dce795dd36136ab744c65c7008bc3804583"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "d4114d31e9a3a3ac8701a1449eb83dad4b9790b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1bc60a12eafe8aed38fff234a4f6ca16f78501/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1bc60a12eafe8aed38fff234a4f6ca16f78501/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d1bc60a12eafe8aed38fff234a4f6ca16f78501", "patch": "@@ -1,3 +1,7 @@\n+2010-10-22  Paul Koning  <ni1d@arrl.net>\n+\n+\t* config/pdp11/pdp11.h (IRA_COVER_CLASSES): Define.\n+\n 2010-10-22  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (ix86_builtin_vectorized_function): Add"}, {"sha": "81180ebf6f6cf8054359459d9e4bcb83209d2dca", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d1bc60a12eafe8aed38fff234a4f6ca16f78501/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d1bc60a12eafe8aed38fff234a4f6ca16f78501/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=4d1bc60a12eafe8aed38fff234a4f6ca16f78501", "patch": "@@ -320,6 +320,16 @@ enum reg_class { NO_REGS, MUL_REGS, GENERAL_REGS, LOAD_FPU_REGS, NO_LOAD_FPU_REG\n #define INDEX_REG_CLASS GENERAL_REGS\n #define BASE_REG_CLASS GENERAL_REGS\n \n+/* The following macro defines cover classes for Integrated Register\n+   Allocator.  Cover classes is a set of non-intersected register\n+   classes covering all hard registers used for register allocation\n+   purpose.  Any move between two registers of a cover class should be\n+   cheaper than load or store of the registers.  The macro value is\n+   array of register classes with LIM_REG_CLASSES used as the end\n+   marker.  */\n+\n+#define IRA_COVER_CLASSES { GENERAL_REGS, FPU_REGS, LIM_REG_CLASSES }\n+\n /* Given an rtx X being reloaded into a reg required to be\n    in class CLASS, return the class of reg to actually use.\n    In general this is just CLASS; but on some machines"}]}