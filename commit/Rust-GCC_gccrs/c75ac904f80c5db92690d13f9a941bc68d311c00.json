{"sha": "c75ac904f80c5db92690d13f9a941bc68d311c00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc1YWM5MDRmODBjNWRiOTI2OTBkMTNmOWE5NDFiYzY4ZDMxMWMwMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-29T03:21:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-29T03:21:11Z"}, "message": "(adjust_copied_decl_tree):  New function.\n\n(save_for_inline_copying):  When making copies of NOTE_INSN_BLOCK_END\nnotes, stash a \"forwarding\" pointer in the original to point to the\ncopy.  Also, when all BLOCKs & insns for a function have been copied,\ncall `adjust_copied_decl_tree' to fixup the end_note pointers in the\ncopied BLOCKs.\n\nFrom-SVN: r1991", "tree": {"sha": "0375ec92fc972c2e895f6b7b93af5f28085ecc28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0375ec92fc972c2e895f6b7b93af5f28085ecc28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c75ac904f80c5db92690d13f9a941bc68d311c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75ac904f80c5db92690d13f9a941bc68d311c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c75ac904f80c5db92690d13f9a941bc68d311c00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75ac904f80c5db92690d13f9a941bc68d311c00/comments", "author": null, "committer": null, "parents": [{"sha": "7629c93617a9cbe51f9db77d5321ab03cb83f34d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7629c93617a9cbe51f9db77d5321ab03cb83f34d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7629c93617a9cbe51f9db77d5321ab03cb83f34d"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "ca915434a630e74ea104cfa42ae84ceada235187", "filename": "gcc/integrate.c", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c75ac904f80c5db92690d13f9a941bc68d311c00/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c75ac904f80c5db92690d13f9a941bc68d311c00/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=c75ac904f80c5db92690d13f9a941bc68d311c00", "patch": "@@ -331,6 +331,30 @@ finish_inline (fndecl, head)\n   DECL_INLINE (fndecl) = 1;\n }\n \n+/* Adjust the BLOCK_END_NOTE pointers in a given copied DECL tree so that\n+   they all point to the new (copied) rtxs.  */\n+\n+static void\n+adjust_copied_decl_tree (block)\n+     register tree block;\n+{\n+  register tree subblock;\n+  register rtx original_end;\n+\n+  original_end = BLOCK_END_NOTE (block);\n+  if (original_end)\n+    {\n+      BLOCK_END_NOTE (block) = (rtx) NOTE_SOURCE_FILE (original_end);\n+      NOTE_SOURCE_FILE (original_end) = 0;\n+    }\n+\n+  /* Process all subblocks.  */\n+  for (subblock = BLOCK_SUBBLOCKS (block);\n+       subblock;\n+       subblock = TREE_CHAIN (subblock))\n+    adjust_copied_decl_tree (subblock);\n+}\n+\n /* Make the insns and PARM_DECLs of the current function permanent\n    and record other information in DECL_SAVED_INSNS to allow inlining\n    of this function in subsequent calls.\n@@ -509,8 +533,14 @@ save_for_inline_copying (fndecl)\n \t    continue;\n \n \t  copy = rtx_alloc (NOTE);\n-\t  NOTE_SOURCE_FILE (copy) = NOTE_SOURCE_FILE (insn);\n \t  NOTE_LINE_NUMBER (copy) = NOTE_LINE_NUMBER (insn);\n+\t  if (NOTE_LINE_NUMBER (insn) != NOTE_INSN_BLOCK_END)\n+\t    NOTE_SOURCE_FILE (copy) = NOTE_SOURCE_FILE (insn);\n+\t  else\n+\t    {\n+\t      NOTE_SOURCE_FILE (insn) = (char *) copy;\n+\t      NOTE_SOURCE_FILE (copy) = 0;\n+\t    }\n \t  break;\n \n \tcase INSN:\n@@ -542,6 +572,8 @@ save_for_inline_copying (fndecl)\n       last_insn = copy;\n     }\n \n+  adjust_copied_decl_tree (DECL_INITIAL (fndecl));\n+\n   /* Now copy the REG_NOTES.  */\n   for (insn = NEXT_INSN (get_insns ()); insn; insn = NEXT_INSN (insn))\n     if (GET_RTX_CLASS (GET_CODE (insn)) == 'i'"}]}