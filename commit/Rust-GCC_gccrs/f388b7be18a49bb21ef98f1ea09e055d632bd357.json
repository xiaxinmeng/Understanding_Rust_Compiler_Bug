{"sha": "f388b7be18a49bb21ef98f1ea09e055d632bd357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM4OGI3YmUxOGE0OWJiMjFlZjk4ZjFlYTA5ZTA1NWQ2MzJiZDM1Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-07-24T02:56:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-07-24T02:56:22Z"}, "message": "PR c++/55922 - list-value-initialization of base\n\n\tPR c++/63151\n\t* init.c (expand_aggr_init_1): Handle list-initialization from {}.\n\nFrom-SVN: r238688", "tree": {"sha": "7ba623c34ac17b9be8f1ea62925903aa94d43649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ba623c34ac17b9be8f1ea62925903aa94d43649"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f388b7be18a49bb21ef98f1ea09e055d632bd357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f388b7be18a49bb21ef98f1ea09e055d632bd357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f388b7be18a49bb21ef98f1ea09e055d632bd357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f388b7be18a49bb21ef98f1ea09e055d632bd357/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2dac37c091b5cfb2eca123803fa3c8bd9701101c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dac37c091b5cfb2eca123803fa3c8bd9701101c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dac37c091b5cfb2eca123803fa3c8bd9701101c"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "d60846b1dc13583baf73edcb280debfb93df5fa5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f388b7be18a49bb21ef98f1ea09e055d632bd357/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f388b7be18a49bb21ef98f1ea09e055d632bd357/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f388b7be18a49bb21ef98f1ea09e055d632bd357", "patch": "@@ -1,5 +1,9 @@\n 2016-07-23  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/55922\n+\tPR c++/63151\n+\t* init.c (expand_aggr_init_1): Handle list-initialization from {}.\n+\n \tPR c++/70709\n \t* class.c (walk_subobject_offsets): Handle 0-length array.\n "}, {"sha": "636226359833309a9dce871707c795090e34741e", "filename": "gcc/cp/init.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f388b7be18a49bb21ef98f1ea09e055d632bd357/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f388b7be18a49bb21ef98f1ea09e055d632bd357/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=f388b7be18a49bb21ef98f1ea09e055d632bd357", "patch": "@@ -1817,6 +1817,19 @@ expand_aggr_init_1 (tree binfo, tree true_exp, tree exp, tree init, int flags,\n       return;\n     }\n \n+  /* List-initialization from {} becomes value-initialization for non-aggregate\n+     classes with default constructors.  Handle this here so protected access\n+     works.  */\n+  if (init && TREE_CODE (init) == TREE_LIST)\n+    {\n+      tree elt = TREE_VALUE (init);\n+      if (DIRECT_LIST_INIT_P (elt)\n+\t  && CONSTRUCTOR_ELTS (elt) == 0\n+\t  && CLASSTYPE_NON_AGGREGATE (type)\n+\t  && TYPE_HAS_DEFAULT_CONSTRUCTOR (type))\n+\tinit = void_type_node;\n+    }\n+\n   /* If an explicit -- but empty -- initializer list was present,\n      that's value-initialization.  */\n   if (init == void_type_node)"}, {"sha": "68ccad908c8b671459dd16d6f850a51effa17d13", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist-base2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f388b7be18a49bb21ef98f1ea09e055d632bd357/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-base2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f388b7be18a49bb21ef98f1ea09e055d632bd357/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-base2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-base2.C?ref=f388b7be18a49bb21ef98f1ea09e055d632bd357", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/55922\n+// { dg-do run { target c++11 } }\n+\n+bool called = false;\n+\n+struct Base {\n+  Base() { if (called) throw 1; called = true; }\n+};\n+\n+struct B1 : virtual Base {\n+  B1() { }\n+};\n+\n+struct C : B1, virtual Base {\n+  C() : B1{}\n+  { }\n+};\n+\n+int main() {\n+  C c;\n+}"}, {"sha": "9febac304e196074907244db4c2f5f73484a4adf", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist-base3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f388b7be18a49bb21ef98f1ea09e055d632bd357/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-base3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f388b7be18a49bb21ef98f1ea09e055d632bd357/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-base3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-base3.C?ref=f388b7be18a49bb21ef98f1ea09e055d632bd357", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/71774\n+// { dg-do compile { target c++11 } }\n+\n+class Meow\n+{\n+  protected:\n+    Meow() =default;        \n+    virtual void f() {}\n+};\n+\n+class Purr : public Meow\n+{\n+  public:\n+    Purr()\n+      : Meow{}\n+    {}  \n+};"}]}