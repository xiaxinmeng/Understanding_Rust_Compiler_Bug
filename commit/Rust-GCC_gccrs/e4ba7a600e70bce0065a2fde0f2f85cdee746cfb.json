{"sha": "e4ba7a600e70bce0065a2fde0f2f85cdee746cfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRiYTdhNjAwZTcwYmNlMDA2NWEyZmRlMGYyZjg1Y2RlZTc0NmNmYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-04-20T15:37:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-04-20T15:37:51Z"}, "message": "re PR libgomp/43706 (scheduling two threads on one core leads to starvation)\n\n\tPR libgomp/43706\n\t* config/linux/affinity.c (gomp_init_affinity): Decrease\n\tgomp_available_cpus if affinity mask confines the process to fewer\n\tCPUs.\n\t* config/linux/proc.c (get_num_procs): If gomp_cpu_affinity is\n\tnon-NULL, just return gomp_available_cpus.\n\nFrom-SVN: r158565", "tree": {"sha": "f290c50df00f07577021b710e347cd10c8be0b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f290c50df00f07577021b710e347cd10c8be0b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5221d7a91b9d6b674fb473675274099f1da939dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5221d7a91b9d6b674fb473675274099f1da939dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5221d7a91b9d6b674fb473675274099f1da939dd"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "95c1f00cac9ed61930a0cf95866ff116dec3255a", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e4ba7a600e70bce0065a2fde0f2f85cdee746cfb", "patch": "@@ -1,5 +1,12 @@\n 2010-04-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR libgomp/43706\n+\t* config/linux/affinity.c (gomp_init_affinity): Decrease\n+\tgomp_available_cpus if affinity mask confines the process to fewer\n+\tCPUs.\n+\t* config/linux/proc.c (get_num_procs): If gomp_cpu_affinity is\n+\tnon-NULL, just return gomp_available_cpus.\n+\n \tPR libgomp/43569\n \t* sections.c (gomp_sections_init): Initialize ws->mode.\n "}, {"sha": "da9f3d8fdcb0c1a492911a7d5f5df8d735397657", "filename": "libgomp/config/linux/affinity.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb/libgomp%2Fconfig%2Flinux%2Faffinity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb/libgomp%2Fconfig%2Flinux%2Faffinity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Flinux%2Faffinity.c?ref=e4ba7a600e70bce0065a2fde0f2f85cdee746cfb", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>.\n \n    This file is part of the GNU OpenMP Library (libgomp).\n@@ -39,8 +39,9 @@ static unsigned int affinity_counter;\n void\n gomp_init_affinity (void)\n {\n-  cpu_set_t cpuset;\n+  cpu_set_t cpuset, cpusetnew;\n   size_t idx, widx;\n+  unsigned long cpus = 0;\n \n   if (pthread_getaffinity_np (pthread_self (), sizeof (cpuset), &cpuset))\n     {\n@@ -51,10 +52,18 @@ gomp_init_affinity (void)\n       return;\n     }\n \n+  CPU_ZERO (&cpusetnew);\n   for (widx = idx = 0; idx < gomp_cpu_affinity_len; idx++)\n     if (gomp_cpu_affinity[idx] < CPU_SETSIZE\n         && CPU_ISSET (gomp_cpu_affinity[idx], &cpuset))\n-      gomp_cpu_affinity[widx++] = gomp_cpu_affinity[idx];\n+      {\n+\tif (! CPU_ISSET (gomp_cpu_affinity[idx], &cpusetnew))\n+\t  {\n+\t    cpus++;\n+\t    CPU_SET (gomp_cpu_affinity[idx], &cpusetnew);\n+\t  }\n+\tgomp_cpu_affinity[widx++] = gomp_cpu_affinity[idx];\n+      }\n \n   if (widx == 0)\n     {\n@@ -66,6 +75,8 @@ gomp_init_affinity (void)\n     }\n \n   gomp_cpu_affinity_len = widx;\n+  if (cpus < gomp_available_cpus)\n+    gomp_available_cpus = cpus;\n   CPU_ZERO (&cpuset);\n   CPU_SET (gomp_cpu_affinity[0], &cpuset);\n   pthread_setaffinity_np (pthread_self (), sizeof (cpuset), &cpuset);"}, {"sha": "01f51dfa193891ddce02b8e6169c2e4d0aa90d35", "filename": "libgomp/config/linux/proc.c", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb/libgomp%2Fconfig%2Flinux%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ba7a600e70bce0065a2fde0f2f85cdee746cfb/libgomp%2Fconfig%2Flinux%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Flinux%2Fproc.c?ref=e4ba7a600e70bce0065a2fde0f2f85cdee746cfb", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>.\n \n    This file is part of the GNU OpenMP Library (libgomp).\n@@ -104,26 +105,13 @@ get_num_procs (void)\n     }\n   else\n     {\n-      size_t idx;\n-      static int affinity_cpus;\n-\n       /* We can't use pthread_getaffinity_np in this case\n \t (we have changed it ourselves, it binds to just one CPU).\n \t Count instead the number of different CPUs we are\n-\t using.  */\n-      CPU_ZERO (&cpuset);\n-      if (affinity_cpus == 0)\n-\t{\n-\t  int cpus = 0;\n-\t  for (idx = 0; idx < gomp_cpu_affinity_len; idx++)\n-\t    if (! CPU_ISSET (gomp_cpu_affinity[idx], &cpuset))\n-\t      {\n-\t\tcpus++;\n-\t\tCPU_SET (gomp_cpu_affinity[idx], &cpuset);\n-\t      }\n-\t  affinity_cpus = cpus;\n-\t}\n-      return affinity_cpus;\n+\t using.  gomp_init_affinity updated gomp_available_cpus to\n+\t the number of CPUs in the GOMP_AFFINITY mask that we are\n+\t allowed to use though.  */\n+      return gomp_available_cpus;\n     }\n #endif\n #ifdef _SC_NPROCESSORS_ONLN"}]}