{"sha": "02ca2184cdabf79c8c8353b7d464f15d26d1f24f", "node_id": "C_kwDOANBUbNoAKDAyY2EyMTg0Y2RhYmY3OWM4YzgzNTNiN2Q0NjRmMTVkMjZkMWYyNGY", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-10-26T16:05:43Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-11-09T09:44:48Z"}, "message": "[Ada] Simplify expansion of array equality\n\ngcc/ada/\n\n\t* exp_ch4.adb (Test_Empty_Arrays): Simplify with Evolve_Or_Else;\n\tremove unnecessary call to Relocate_Node.\n\t(Test_Lengths_Correspond): Likewise.", "tree": {"sha": "99bc369ba64c11b14f1e3ea60e42f6cf39a05cdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99bc369ba64c11b14f1e3ea60e42f6cf39a05cdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02ca2184cdabf79c8c8353b7d464f15d26d1f24f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ca2184cdabf79c8c8353b7d464f15d26d1f24f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ca2184cdabf79c8c8353b7d464f15d26d1f24f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ca2184cdabf79c8c8353b7d464f15d26d1f24f/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4665dc4fb511a40a104f1986488861fee8b24f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4665dc4fb511a40a104f1986488861fee8b24f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4665dc4fb511a40a104f1986488861fee8b24f7"}], "stats": {"total": 50, "additions": 9, "deletions": 41}, "files": [{"sha": "269964447354c967f8b4067a594a9ca21c4b9380", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 9, "deletions": 41, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ca2184cdabf79c8c8353b7d464f15d26d1f24f/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ca2184cdabf79c8c8353b7d464f15d26d1f24f/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=02ca2184cdabf79c8c8353b7d464f15d26d1f24f", "patch": "@@ -1902,41 +1902,20 @@ package body Exp_Ch4 is\n       -----------------------\n \n       function Test_Empty_Arrays return Node_Id is\n-         Alist : Node_Id;\n-         Blist : Node_Id;\n-\n-         Atest : Node_Id;\n-         Btest : Node_Id;\n+         Alist : Node_Id := Empty;\n+         Blist : Node_Id := Empty;\n \n       begin\n-         Alist := Empty;\n-         Blist := Empty;\n          for J in 1 .. Number_Dimensions (Ltyp) loop\n-            Atest :=\n+            Evolve_Or_Else (Alist,\n               Make_Op_Eq (Loc,\n                 Left_Opnd  => Arr_Attr (A, Name_Length, J),\n-                Right_Opnd => Make_Integer_Literal (Loc, 0));\n+                Right_Opnd => Make_Integer_Literal (Loc, Uint_0)));\n \n-            Btest :=\n+            Evolve_Or_Else (Blist,\n               Make_Op_Eq (Loc,\n                 Left_Opnd  => Arr_Attr (B, Name_Length, J),\n-                Right_Opnd => Make_Integer_Literal (Loc, 0));\n-\n-            if No (Alist) then\n-               Alist := Atest;\n-               Blist := Btest;\n-\n-            else\n-               Alist :=\n-                 Make_Or_Else (Loc,\n-                   Left_Opnd  => Relocate_Node (Alist),\n-                   Right_Opnd => Atest);\n-\n-               Blist :=\n-                 Make_Or_Else (Loc,\n-                   Left_Opnd  => Relocate_Node (Blist),\n-                   Right_Opnd => Btest);\n-            end if;\n+                Right_Opnd => Make_Integer_Literal (Loc, Uint_0)));\n          end loop;\n \n          return\n@@ -1950,25 +1929,14 @@ package body Exp_Ch4 is\n       -----------------------------\n \n       function Test_Lengths_Correspond return Node_Id is\n-         Result : Node_Id;\n-         Rtest  : Node_Id;\n+         Result : Node_Id := Empty;\n \n       begin\n-         Result := Empty;\n          for J in 1 .. Number_Dimensions (Ltyp) loop\n-            Rtest :=\n+            Evolve_Or_Else (Result,\n               Make_Op_Ne (Loc,\n                 Left_Opnd  => Arr_Attr (A, Name_Length, J),\n-                Right_Opnd => Arr_Attr (B, Name_Length, J));\n-\n-            if No (Result) then\n-               Result := Rtest;\n-            else\n-               Result :=\n-                 Make_Or_Else (Loc,\n-                   Left_Opnd  => Relocate_Node (Result),\n-                   Right_Opnd => Rtest);\n-            end if;\n+                Right_Opnd => Arr_Attr (B, Name_Length, J)));\n          end loop;\n \n          return Result;"}]}