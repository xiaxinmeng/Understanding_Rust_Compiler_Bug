{"sha": "ea90cb6276d90d258aca08accbe17b7702d9f07b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE5MGNiNjI3NmQ5MGQyNThhY2EwOGFjY2JlMTdiNzcwMmQ5ZjA3Yg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-24T09:27:39Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-24T09:27:39Z"}, "message": "stmt.c (emit_case_nodes): Change rtx_function to rtx_fn to avoid clash with global type.\n\n8\n        * stmt.c (emit_case_nodes): Change rtx_function to rtx_fn to avoid\n        clash with global type.\n\nFrom-SVN: r21932", "tree": {"sha": "e12ec4276a6ab414ed70b5552b76af482f1367d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e12ec4276a6ab414ed70b5552b76af482f1367d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea90cb6276d90d258aca08accbe17b7702d9f07b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea90cb6276d90d258aca08accbe17b7702d9f07b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea90cb6276d90d258aca08accbe17b7702d9f07b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea90cb6276d90d258aca08accbe17b7702d9f07b/comments", "author": null, "committer": null, "parents": [{"sha": "094439624ccda315dcf4fb8d40cc3fffd7f82bd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094439624ccda315dcf4fb8d40cc3fffd7f82bd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094439624ccda315dcf4fb8d40cc3fffd7f82bd2"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "b524362d5243ceee104c88939e1becb5ac53b357", "filename": "gcc/stmt.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea90cb6276d90d258aca08accbe17b7702d9f07b/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea90cb6276d90d258aca08accbe17b7702d9f07b/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=ea90cb6276d90d258aca08accbe17b7702d9f07b", "patch": "@@ -5539,11 +5539,11 @@ emit_case_nodes (index, node, default_label, index_type)\n {\n   /* If INDEX has an unsigned type, we must make unsigned branches.  */\n   int unsignedp = TREE_UNSIGNED (index_type);\n-  typedef rtx rtx_function ();\n-  rtx_function *gen_bgt_pat = unsignedp ? gen_bgtu : gen_bgt;\n-  rtx_function *gen_bge_pat = unsignedp ? gen_bgeu : gen_bge;\n-  rtx_function *gen_blt_pat = unsignedp ? gen_bltu : gen_blt;\n-  rtx_function *gen_ble_pat = unsignedp ? gen_bleu : gen_ble;\n+  typedef rtx rtx_fn ();\n+  rtx_fn *gen_bgt_pat = unsignedp ? gen_bgtu : gen_bgt;\n+  rtx_fn *gen_bge_pat = unsignedp ? gen_bgeu : gen_bge;\n+  rtx_fn *gen_blt_pat = unsignedp ? gen_bltu : gen_blt;\n+  rtx_fn *gen_ble_pat = unsignedp ? gen_bleu : gen_ble;\n   enum machine_mode mode = GET_MODE (index);\n \n   /* See if our parents have already tested everything for us."}]}