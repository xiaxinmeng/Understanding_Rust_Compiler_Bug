{"sha": "6edc3e32a45cd1dc3466b4544f5f31278afd1c62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVkYzNlMzJhNDVjZDFkYzM0NjZiNDU0NGY1ZjMxMjc4YWZkMWM2Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-02-07T18:01:40Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-02-07T18:01:40Z"}, "message": "re PR bootstrap/56227 (Bootstrap failure on MinGW building ggc-page.c)\n\n\tPR bootstrap/56227\n\t* ggc-page.c (ggc_print_statistics): Use HOST_LONG_LONG_FORMAT\n\tinstead of \"ll\".\n\t* config/i386/i386.c (ix86_print_operand): Ditto.\n\nlto/ChangeLog:\n\n\tPR bootstrap/56227\n\t* lto.c (lto_resolution_ready): Use %wx instead of\n\tHOST_WIDE_INT_PRINT_HEX_PURE in the argument to internal_error.\n\nFrom-SVN: r195860", "tree": {"sha": "9c29cc53d3236c8fca2ec8df62a4662e5aca37b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c29cc53d3236c8fca2ec8df62a4662e5aca37b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6edc3e32a45cd1dc3466b4544f5f31278afd1c62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edc3e32a45cd1dc3466b4544f5f31278afd1c62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6edc3e32a45cd1dc3466b4544f5f31278afd1c62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/comments", "author": null, "committer": null, "parents": [{"sha": "2052ce24f1200a62154b280583f068f7f7a6ed44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2052ce24f1200a62154b280583f068f7f7a6ed44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2052ce24f1200a62154b280583f068f7f7a6ed44"}], "stats": {"total": 67, "additions": 37, "deletions": 30}, "files": [{"sha": "08f9b8f817c7035214791fcebba751a07620cc0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6edc3e32a45cd1dc3466b4544f5f31278afd1c62", "patch": "@@ -1,7 +1,13 @@\n+2013-02-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR bootstrap/56227\n+\t* ggc-page.c (ggc_print_statistics): Use HOST_LONG_LONG_FORMAT\n+\tinstead of \"ll\".\n+\t* config/i386/i386.c (ix86_print_operand): Ditto.\n+\n 2013-02-07  Vladimir Makarov  <vmakarov@redhat.com>\n \n-\t* lra-constraints.c (process_alt_operands): Fix recently added\n-\tcomment.\n+\t* lra-constraints.c (process_alt_operands): Fix recently added comment.\n \n 2013-02-07  Vladimir Makarov  <vmakarov@redhat.com>\n \n@@ -17,8 +23,7 @@\n \t(in_first_function_p, maybe_at_text_label_p,\n \tfirst_loclabel_num_not_at_text_label): New variables.\n \t(dwarf2out_var_location): In the first function find out\n-\tlowest loclabel_num N where .LVLN is known not to be equal\n-\tto .Ltext0.\n+\tlowest loclabel_num N where .LVLN is known not to be equal to .Ltext0.\n \t(find_empty_loc_ranges_at_text_label, dwarf2out_end_function): New\n \tfunctions.\n \n@@ -171,8 +176,7 @@\n \t* lto-symtab.c (lto_symtab_merge_decls_1): Make non-builtin\n \tnode prevail as last resort.\n \t(lto_symtab_merge_decls): Remove guard on LTRANS here.\n-\t(lto_symtab_prevailing_decl): Builtins are their own prevailing\n-\tdecl.\n+\t(lto_symtab_prevailing_decl): Builtins are their own prevailing decl.\n \n 2013-02-04  Richard Biener  <rguenther@suse.de>\n \n@@ -359,8 +363,7 @@\n \t* config/v850/v850.opt (mv850e3v5, mv850e2v4): New options.\n \t(mloop): New option.\n \t* config.gcc: Add support for configuring v840e3v5 target.\n-\t* doc/invoke.texi: Document new v850 specific command line\n-\toptions.\n+\t* doc/invoke.texi: Document new v850 specific command line options.\n \n 2013-01-31  Paul Koning  <ni1d@arrl.net>\n \n@@ -468,8 +471,7 @@\n 2013-01-30  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/56147\n-\t* lto-symtab.c (lto_symtab_merge_decls_1): Guard DECL_BUILT_IN\n-\tcheck.\n+\t* lto-symtab.c (lto_symtab_merge_decls_1): Guard DECL_BUILT_IN check.\n \n 2013-01-30  Georg-Johann Lay  <avr@gjlay.de>\n \n@@ -624,8 +626,7 @@\n 2013-01-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56034\n-\t* tree-loop-distribution.c (enum partition_kind): Add\n-\tPKIND_REDUCTION.\n+\t* tree-loop-distribution.c (enum partition_kind): Add PKIND_REDUCTION.\n \t(partition_builtin_p): Adjust.\n \t(generate_code_for_partition): Handle PKIND_REDUCTION.  Assert\n \tit is the last partition.\n@@ -1587,7 +1588,7 @@\n \t* predict.c (predict_loops): If max is 0, don't call compare_tree_int.\n \tIf nitercst is 0, don't predict the exit edge.\n \n-2013-01-08   Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n+2013-01-08  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \t* config/aarch64/aarch64.c (aarch64_print_operand): Replace %r\n \tin asm_fprintf with reg_names.\n@@ -1747,10 +1748,10 @@\n \t* asan.c (asan_protect_global): Don't check TREE_ASM_WRITTEN here.\n \t(asan_finish_file): Test it here instead.\n \n-2013-01-07   Nick Clifton  <nickc@redhat.com>\n-\t     Matthias Klose  <doko@debian.org>\n-\t     Doug Kwan  <dougkwan@google.com>\n-\t     H.J. Lu  <hongjiu.lu@intel.com>\n+2013-01-07  Nick Clifton  <nickc@redhat.com>\n+\t    Matthias Klose  <doko@debian.org>\n+\t    Doug Kwan  <dougkwan@google.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR driver/55470\n \t* collect2.c (main): Support -fuse-ld=bfd and -fuse-ld=gold."}, {"sha": "c6f3d53f0e066c60563689e977c193e92191a2b3", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6edc3e32a45cd1dc3466b4544f5f31278afd1c62", "patch": "@@ -14628,7 +14628,8 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \tputc ('$', file);\n       /* Sign extend 32bit SFmode immediate to 8 bytes.  */\n       if (code == 'q')\n-\tfprintf (file, \"0x%08llx\", (unsigned long long) (int) l);\n+\tfprintf (file, \"0x%08\" HOST_LONG_LONG_FORMAT \"x\",\n+\t\t (unsigned long long) (int) l);\n       else\n \tfprintf (file, \"0x%08x\", (unsigned int) l);\n     }"}, {"sha": "5b18468439d28bbd87200ba786b830fd2aeda5aa", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=6edc3e32a45cd1dc3466b4544f5f31278afd1c62", "patch": "@@ -2170,31 +2170,31 @@ ggc_print_statistics (void)\n     {\n       fprintf (stderr, \"\\nTotal allocations and overheads during the compilation process\\n\");\n \n-      fprintf (stderr, \"Total Overhead:                        %10lld\\n\",\n+      fprintf (stderr, \"Total Overhead:                        %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t       G.stats.total_overhead);\n-      fprintf (stderr, \"Total Allocated:                       %10lld\\n\",\n+      fprintf (stderr, \"Total Allocated:                       %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t       G.stats.total_allocated);\n \n-      fprintf (stderr, \"Total Overhead  under  32B:            %10lld\\n\",\n+      fprintf (stderr, \"Total Overhead  under  32B:            %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t       G.stats.total_overhead_under32);\n-      fprintf (stderr, \"Total Allocated under  32B:            %10lld\\n\",\n+      fprintf (stderr, \"Total Allocated under  32B:            %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t       G.stats.total_allocated_under32);\n-      fprintf (stderr, \"Total Overhead  under  64B:            %10lld\\n\",\n+      fprintf (stderr, \"Total Overhead  under  64B:            %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t       G.stats.total_overhead_under64);\n-      fprintf (stderr, \"Total Allocated under  64B:            %10lld\\n\",\n+      fprintf (stderr, \"Total Allocated under  64B:            %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t       G.stats.total_allocated_under64);\n-      fprintf (stderr, \"Total Overhead  under 128B:            %10lld\\n\",\n+      fprintf (stderr, \"Total Overhead  under 128B:            %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t       G.stats.total_overhead_under128);\n-      fprintf (stderr, \"Total Allocated under 128B:            %10lld\\n\",\n+      fprintf (stderr, \"Total Allocated under 128B:            %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t       G.stats.total_allocated_under128);\n \n       for (i = 0; i < NUM_ORDERS; i++)\n \tif (G.stats.total_allocated_per_order[i])\n \t  {\n-\t    fprintf (stderr, \"Total Overhead  page size %7lu:     %10lld\\n\",\n+\t    fprintf (stderr, \"Total Overhead  page size %7lu:     %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t\t     (unsigned long) OBJECT_SIZE (i),\n \t\t     G.stats.total_overhead_per_order[i]);\n-\t    fprintf (stderr, \"Total Allocated page size %7lu:     %10lld\\n\",\n+\t    fprintf (stderr, \"Total Allocated page size %7lu:     %10\" HOST_LONG_LONG_FORMAT \"d\\n\",\n \t\t     (unsigned long) OBJECT_SIZE (i),\n \t\t     G.stats.total_allocated_per_order[i]);\n \t  }"}, {"sha": "6743f2f680ae0a49916f13c3779b6a79b0fe7255", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=6edc3e32a45cd1dc3466b4544f5f31278afd1c62", "patch": "@@ -1,3 +1,9 @@\n+2013-02-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR bootstrap/56227\n+\t* lto.c (lto_resolution_ready): Use %wx instead of\n+\tHOST_WIDE_INT_PRINT_HEX_PURE in the argument to internal_error.\n+\n 2013-02-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/56168"}, {"sha": "983fa03aa1c4fd1bdd51090dce2e304ba40e4c5d", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc3e32a45cd1dc3466b4544f5f31278afd1c62/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=6edc3e32a45cd1dc3466b4544f5f31278afd1c62", "patch": "@@ -2225,8 +2225,7 @@ lto_resolution_read (splay_tree file_ids, FILE *resolution, lto_file *file)\n \t{\n \t  nd = lto_splay_tree_lookup (file_ids, id);\n \t  if (nd == NULL)\n-\t    internal_error (\"resolution sub id \" HOST_WIDE_INT_PRINT_HEX_PURE\n-\t\t\t    \" not in object file\", id);\n+\t    internal_error (\"resolution sub id %wx not in object file\", id);\n \t}\n \n       file_data = (struct lto_file_decl_data *)nd->value;"}]}