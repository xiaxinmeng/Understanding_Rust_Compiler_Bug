{"sha": "18424ae17a3b474ac341c9e57e74c487dcdec15a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg0MjRhZTE3YTNiNDc0YWMzNDFjOWU1N2U3NGM0ODdkY2RlYzE1YQ==", "commit": {"author": {"name": "Brad Lucier", "email": "lucier@math.purdue.edu", "date": "2000-09-22T07:22:07Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-09-22T07:22:07Z"}, "message": "toplev.c (warn_disabled_optimization): Declare new warning flag.\n\n        * toplev.c (warn_disabled_optimization): Declare new warning flag.\n        * flags.h (warn_disabled_optimization): Add it here.\n        * gcse.c (gcse_main): Add warning when disabled.\n        * invoke.texi: Document -Wdisabled-optimization\n\nCo-Authored-By: Mark Mitchell <mark@codesourcery.com>\n\nFrom-SVN: r36568", "tree": {"sha": "aeb1f76a6793c86109041c2fad56320edbf89a4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb1f76a6793c86109041c2fad56320edbf89a4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18424ae17a3b474ac341c9e57e74c487dcdec15a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18424ae17a3b474ac341c9e57e74c487dcdec15a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18424ae17a3b474ac341c9e57e74c487dcdec15a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18424ae17a3b474ac341c9e57e74c487dcdec15a/comments", "author": {"login": "gambiteer", "id": 1544698, "node_id": "MDQ6VXNlcjE1NDQ2OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1544698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gambiteer", "html_url": "https://github.com/gambiteer", "followers_url": "https://api.github.com/users/gambiteer/followers", "following_url": "https://api.github.com/users/gambiteer/following{/other_user}", "gists_url": "https://api.github.com/users/gambiteer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gambiteer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gambiteer/subscriptions", "organizations_url": "https://api.github.com/users/gambiteer/orgs", "repos_url": "https://api.github.com/users/gambiteer/repos", "events_url": "https://api.github.com/users/gambiteer/events{/privacy}", "received_events_url": "https://api.github.com/users/gambiteer/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "401219a6c93d1ba14cee07ed0ab7935f04072358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/401219a6c93d1ba14cee07ed0ab7935f04072358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/401219a6c93d1ba14cee07ed0ab7935f04072358"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "c44d716ebda247101b0f779164cb1820db452bf7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18424ae17a3b474ac341c9e57e74c487dcdec15a", "patch": "@@ -1,3 +1,11 @@\n+2000-09-22  Brad Lucier <lucier@math.purdue.edu>\n+\t    Mark Mitchell  <mark@codesourcery.com>\n+\n+        * toplev.c (warn_disabled_optimization): Declare new warning flag.\n+        * flags.h (warn_disabled_optimization): Add it here.\n+        * gcse.c (gcse_main): Add warning when disabled.\n+        * invoke.texi: Document -Wdisabled-optimization\n+\n 2000-09-21  Jason Merrill  <jason@redhat.com>\n \n \t* dwarf2out.c (add_const_value_attribute): Multiply by length, not 4."}, {"sha": "6a87edb8e63b8cd61ba57822a8fc17190acf31ff", "filename": "gcc/flags.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=18424ae17a3b474ac341c9e57e74c487dcdec15a", "patch": "@@ -160,6 +160,10 @@ extern int warn_packed;\n \n extern int warn_padded;\n \n+/* Warn when an optimization pass is disabled.  */\n+\n+extern int warn_disabled_optimization;\n+\n /* Nonzero if generating code to do profiling.  */\n \n extern int profile_flag;"}, {"sha": "ba07aa75444389ef59df3fe60ec45546cc754a8e", "filename": "gcc/gcse.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=18424ae17a3b474ac341c9e57e74c487dcdec15a", "patch": "@@ -685,7 +685,12 @@ gcse_main (f, file)\n      a couple switch statements.  So we require a relatively large number\n      of basic blocks and the ratio of edges to blocks to be high.  */\n   if (n_basic_blocks > 1000 && n_edges / n_basic_blocks >= 20)\n-    return 0;\n+    {\n+      if (warn_disabled_optimization)\n+      warning (\"GCSE disabled: %d > 1000 basic blocks and %d >= 20 edges/basic block\",\n+               n_basic_blocks, n_edges / n_basic_blocks);\n+      return 0;\n+    }\n \n   /* See what modes support reg/reg copy operations.  */\n   if (! can_copy_init_p)"}, {"sha": "43aafbade452247d69437c691b27352d3b759e75", "filename": "gcc/invoke.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=18424ae17a3b474ac341c9e57e74c487dcdec15a", "patch": "@@ -131,7 +131,7 @@ in the following sections.\n -fsyntax-only  -pedantic  -pedantic-errors\n -w  -W  -Wall  -Waggregate-return \n -Wcast-align  -Wcast-qual  -Wchar-subscripts  -Wcomment\n--Wconversion  -Werror  -Wformat\n+-Wconversion  -Wdisabled-optimization -Werror  -Wformat\n -Wid-clash-@var{len}  -Wimplicit -Wimplicit-int \n -Wimplicit-function-declaration  -Wimport\n -Werror-implicit-function-declaration  -Wfloat-equal -Winline\n@@ -2018,6 +2018,14 @@ the warning messages, use @samp{-Wno-long-long}.  Flags\n @samp{-Wlong-long} and @samp{-Wno-long-long} are taken into account\n only when @samp{-pedantic} flag is used.\n \n+@item -Wdisabled-optimization\n+Warn if a requested optimization pass is disabled.  This warning does\n+not generally indicate that there is anything wrong with your code; it\n+merely indicates that GCC's optimizers were unable to handle the code\n+effectively.  Often, the problem is that your code is too big or too\n+complex; GCC will refuse to optimize programs when the optimization\n+itself is likely to take inordinate amounts of time.\n+\n @item -Werror\n Make all warnings into errors.\n @end table"}, {"sha": "76ff873f13ad0a057a78c8fb3a3dc22564b7b602", "filename": "gcc/toplev.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18424ae17a3b474ac341c9e57e74c487dcdec15a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=18424ae17a3b474ac341c9e57e74c487dcdec15a", "patch": "@@ -1397,6 +1397,10 @@ int warn_packed;\n \n int warn_padded;\n \n+/* Warn when an optimization pass is disabled.  */\n+\n+int warn_disabled_optimization;\n+\n /* Likewise for -W.  */\n \n lang_independent_options W_options[] =\n@@ -1423,7 +1427,9 @@ lang_independent_options W_options[] =\n   {\"packed\", &warn_packed, 1,\n    \"Warn when the packed attribute has no effect on struct layout\"},\n   {\"padded\", &warn_padded, 1,\n-   \"Warn when padding is required to align struct members\"}\n+   \"Warn when padding is required to align struct members\"},\n+  {\"disabled-optimization\", &warn_disabled_optimization, 1,\n+   \"Warn when an optimization pass is disabled\"}\n };\n \f\n /* Output files for assembler code (real compiler output)"}]}