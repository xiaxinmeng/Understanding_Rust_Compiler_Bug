{"sha": "10f48858e8ca925deb5002e580db511b667bc24b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBmNDg4NThlOGNhOTI1ZGViNTAwMmU1ODBkYjUxMWI2NjdiYzI0Yg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-17T13:42:30Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-17T13:42:30Z"}, "message": "[libbacktrace] Add btest_dwz test-case\n\nAdd test-case to verify that libbacktrace can read debug info that was\ncompressed with dwz.\n\n2019-01-17  Tom de Vries  <tdevries@suse.de>\n\n\tPR libbacktrace/82857\n\t* configure.ac (DWZ): Set with AC_CHECK_PROG.\n\t(HAVE_DWZ): Set with AM_CONDITIONAL.\n\t* configure: Regenerate.\n\t* Makefile.am (TESTS): Add btest_dwz.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r268032", "tree": {"sha": "f124bcf8499e3bda4a0f5a326c4a29c3f2256408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f124bcf8499e3bda4a0f5a326c4a29c3f2256408"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10f48858e8ca925deb5002e580db511b667bc24b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10f48858e8ca925deb5002e580db511b667bc24b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10f48858e8ca925deb5002e580db511b667bc24b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10f48858e8ca925deb5002e580db511b667bc24b/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c2a9a37c681aa24ece35b671931870b1afe5797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2a9a37c681aa24ece35b671931870b1afe5797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c2a9a37c681aa24ece35b671931870b1afe5797"}], "stats": {"total": 115, "additions": 106, "deletions": 9}, "files": [{"sha": "54c4b79d62332691675b6cffc88f9234b32be4cf", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=10f48858e8ca925deb5002e580db511b667bc24b", "patch": "@@ -1,3 +1,12 @@\n+2019-01-17  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR libbacktrace/82857\n+\t* configure.ac (DWZ): Set with AC_CHECK_PROG.\n+\t(HAVE_DWZ): Set with AM_CONDITIONAL.\n+\t* configure: Regenerate.\n+\t* Makefile.am (TESTS): Add btest_dwz.\n+\t* Makefile.in: Regenerate.\n+\n 2019-01-17  Tom de Vries  <tdevries@suse.de>\n \n \tPR libbacktrace/82857"}, {"sha": "bf90ebdb2d527240114c9e6f497044ffc44dd5bc", "filename": "libbacktrace/Makefile.am", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.am?ref=10f48858e8ca925deb5002e580db511b667bc24b", "patch": "@@ -178,6 +178,20 @@ btest_alloc_LDADD = libbacktrace_alloc.la\n \n check_PROGRAMS += btest_alloc\n \n+if HAVE_DWZ\n+\n+%_dwz: %\n+\trm -f $@ $@_common.debug\n+\tcp $< $@_1\n+\tcp $< $@_2\n+\t$(DWZ) -m $@_common.debug $@_1 $@_2\n+\trm -f $@_2\n+\tmv $@_1 $@\n+\n+TESTS += btest_dwz\n+\n+endif HAVE_DWZ\n+\n stest_SOURCES = stest.c\n stest_LDADD = libbacktrace.la\n "}, {"sha": "d55e0501171620b176e1670dfcc446f289988eb1", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=10f48858e8ca925deb5002e580db511b667bc24b", "patch": "@@ -126,11 +126,12 @@ check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3)\n @NATIVE_TRUE@\tallocfail btest btest_alloc stest stest_alloc \\\n @NATIVE_TRUE@\tztest ztest_alloc edtest edtest_alloc\n @NATIVE_TRUE@am__append_2 = allocfail.sh\n-@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_3 = -lz\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@am__append_3 = btest_dwz\n @HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_4 = -lz\n-@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_5 = ttest ttest_alloc\n-@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_6 = dtest\n-@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__append_7 = ctestg ctesta \\\n+@HAVE_ZLIB_TRUE@@NATIVE_TRUE@am__append_5 = -lz\n+@HAVE_PTHREAD_TRUE@@NATIVE_TRUE@am__append_6 = ttest ttest_alloc\n+@HAVE_OBJCOPY_DEBUGLINK_TRUE@@NATIVE_TRUE@am__append_7 = dtest\n+@HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@am__append_8 = ctestg ctesta \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctestg_alloc \\\n @HAVE_COMPRESSED_DEBUG_TRUE@@NATIVE_TRUE@\tctesta_alloc\n subdir = .\n@@ -632,6 +633,7 @@ CYGPATH_W = @CYGPATH_W@\n DEFS = @DEFS@\n DSYMUTIL = @DSYMUTIL@\n DUMPBIN = @DUMPBIN@\n+DWZ = @DWZ@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n@@ -786,7 +788,8 @@ libbacktrace_la_LIBADD = \\\n \t$(ALLOC_FILE)\n \n libbacktrace_la_DEPENDENCIES = $(libbacktrace_la_LIBADD)\n-TESTS = $(check_PROGRAMS) $(am__append_2) $(am__append_6)\n+TESTS = $(check_PROGRAMS) $(am__append_2) $(am__append_3) \\\n+\t$(am__append_7)\n @NATIVE_TRUE@check_LTLIBRARIES = libbacktrace_alloc.la \\\n @NATIVE_TRUE@\tlibbacktrace_noformat.la \\\n @NATIVE_TRUE@\tlibbacktrace_instrumented_alloc.la\n@@ -831,9 +834,9 @@ TESTS = $(check_PROGRAMS) $(am__append_2) $(am__append_6)\n @NATIVE_TRUE@stest_alloc_LDADD = libbacktrace_alloc.la\n @NATIVE_TRUE@ztest_SOURCES = ztest.c testlib.c\n @NATIVE_TRUE@ztest_CFLAGS = -DSRCDIR=\\\"$(srcdir)\\\"\n-@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_3) \\\n+@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_4) \\\n @NATIVE_TRUE@\t$(CLOCK_GETTIME_LINK)\n-@NATIVE_TRUE@ztest_alloc_LDADD = libbacktrace_alloc.la $(am__append_4) \\\n+@NATIVE_TRUE@ztest_alloc_LDADD = libbacktrace_alloc.la $(am__append_5) \\\n @NATIVE_TRUE@\t$(CLOCK_GETTIME_LINK)\n @NATIVE_TRUE@ztest_alloc_SOURCES = $(ztest_SOURCES)\n @NATIVE_TRUE@ztest_alloc_CFLAGS = $(ztest_CFLAGS)\n@@ -1575,6 +1578,13 @@ allocfail.sh.log: allocfail.sh\n \t--log-file $$b.log --trs-file $$b.trs \\\n \t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n \t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+btest_dwz.log: btest_dwz\n+\t@p='btest_dwz'; \\\n+\tb='btest_dwz'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n dtest.log: dtest\n \t@p='dtest'; \\\n \tb='dtest'; \\\n@@ -1743,6 +1753,14 @@ uninstall-am:\n \n @NATIVE_TRUE@allocfail.sh: allocfail\n \n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@%_dwz: %\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@\trm -f $@ $@_common.debug\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@\tcp $< $@_1\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@\tcp $< $@_2\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@\t$(DWZ) -m $@_common.debug $@_1 $@_2\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@\trm -f $@_2\n+@HAVE_DWZ_TRUE@@NATIVE_TRUE@\tmv $@_1 $@\n+\n @NATIVE_TRUE@edtest2_build.c: gen_edtest2_build; @true\n @NATIVE_TRUE@gen_edtest2_build: $(srcdir)/edtest2.c\n @NATIVE_TRUE@\tcat $(srcdir)/edtest2.c > tmp-edtest2_build.c"}, {"sha": "2ea112bde6845e5ead888ad6cb8d261e45aa6991", "filename": "libbacktrace/configure", "status": "modified", "additions": 55, "deletions": 2, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=10f48858e8ca925deb5002e580db511b667bc24b", "patch": "@@ -672,6 +672,9 @@ LD\n FGREP\n SED\n LIBTOOL\n+HAVE_DWZ_FALSE\n+HAVE_DWZ_TRUE\n+DWZ\n RANLIB\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -5366,6 +5369,52 @@ case \"$AWK\" in\n \"\") as_fn_error $? \"can't build without awk\" \"$LINENO\" 5 ;;\n esac\n \n+# Extract the first word of \"dwz\", so it can be a program name with args.\n+set dummy dwz; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_DWZ+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$DWZ\"; then\n+  ac_cv_prog_DWZ=\"$DWZ\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_DWZ=\"dwz\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+DWZ=$ac_cv_prog_DWZ\n+if test -n \"$DWZ\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $DWZ\" >&5\n+$as_echo \"$DWZ\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+ if test \"$DWZ\" != \"\"; then\n+  HAVE_DWZ_TRUE=\n+  HAVE_DWZ_FALSE='#'\n+else\n+  HAVE_DWZ_TRUE='#'\n+  HAVE_DWZ_FALSE=\n+fi\n+\n+\n case `pwd` in\n   *\\ * | *\\\t*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \\`pwd\\`\" >&5\n@@ -11440,7 +11489,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11443 \"configure\"\n+#line 11492 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11546,7 +11595,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11549 \"configure\"\n+#line 11598 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13558,6 +13607,10 @@ if test -z \"${MAINTAINER_MODE_TRUE}\" && test -z \"${MAINTAINER_MODE_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"MAINTAINER_MODE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${HAVE_DWZ_TRUE}\" && test -z \"${HAVE_DWZ_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"HAVE_DWZ\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${HAVE_PTHREAD_TRUE}\" && test -z \"${HAVE_PTHREAD_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"HAVE_PTHREAD\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "c64bf3473bbd7fc2c7cb6af29e2bdd4ebd3f9045", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f48858e8ca925deb5002e580db511b667bc24b/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=10f48858e8ca925deb5002e580db511b667bc24b", "patch": "@@ -78,6 +78,9 @@ case \"$AWK\" in\n \"\") AC_MSG_ERROR([can't build without awk]) ;;\n esac\n \n+AC_CHECK_PROG(DWZ, dwz, dwz)\n+AM_CONDITIONAL(HAVE_DWZ, test \"$DWZ\" != \"\")\n+\n LT_INIT\n AM_PROG_LIBTOOL\n "}]}