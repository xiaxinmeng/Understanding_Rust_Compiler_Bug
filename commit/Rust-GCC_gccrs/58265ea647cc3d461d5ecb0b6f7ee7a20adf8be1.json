{"sha": "58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgyNjVlYTY0N2NjM2Q0NjFkNWVjYjBiNmY3ZWU3YTIwYWRmOGJlMQ==", "commit": {"author": {"name": "Gary Funck", "email": "gary@intrepid.com", "date": "2011-09-02T21:19:17Z"}, "committer": {"name": "Gary Funck", "email": "gfunck@gcc.gnu.org", "date": "2011-09-02T21:19:17Z"}, "message": "opts.c (print_specific_help): Fix off-by-one compare in assertion check.\n\n2011-09-02  Gary Funck <gary@intrepid.com>\n\n\t* opts.c (print_specific_help): Fix off-by-one compare in\n\tassertion check.\n\t* opts.h (CL_PARAMS, CL_WARNING, CL_OPTIMIZATION, CL_DRIVER,\n\tCL_TARGET, CL_COMMON, CL_JOINED, CL_SEPARATE, CL_UNDOCUMENTED):\n\tIncrease by +5 to allow for more languages.\n\t* optc-gen.awk: Generate #if that ensures that the number of\n\tlanguages is within the implementation-defined limit.\n\nFrom-SVN: r178491", "tree": {"sha": "f7d31cb76ec49cf7d2ed94711ee6111092b65896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7d31cb76ec49cf7d2ed94711ee6111092b65896"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1/comments", "author": {"login": "gary-funck", "id": 2517592, "node_id": "MDQ6VXNlcjI1MTc1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2517592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gary-funck", "html_url": "https://github.com/gary-funck", "followers_url": "https://api.github.com/users/gary-funck/followers", "following_url": "https://api.github.com/users/gary-funck/following{/other_user}", "gists_url": "https://api.github.com/users/gary-funck/gists{/gist_id}", "starred_url": "https://api.github.com/users/gary-funck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gary-funck/subscriptions", "organizations_url": "https://api.github.com/users/gary-funck/orgs", "repos_url": "https://api.github.com/users/gary-funck/repos", "events_url": "https://api.github.com/users/gary-funck/events{/privacy}", "received_events_url": "https://api.github.com/users/gary-funck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dde460d482fcf150d17b0baa2bc0b97714ec6365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde460d482fcf150d17b0baa2bc0b97714ec6365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dde460d482fcf150d17b0baa2bc0b97714ec6365"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "48bdefac5c647fdb133c8fe28ac781b4be1e393d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1", "patch": "@@ -1,3 +1,13 @@\n+2011-09-02  Gary Funck <gary@intrepid.com>\n+\n+\t* opts.c (print_specific_help): Fix off-by-one compare in\n+\tassertion check.\n+\t* opts.h (CL_PARAMS, CL_WARNING, CL_OPTIMIZATION, CL_DRIVER,\n+\tCL_TARGET, CL_COMMON, CL_JOINED, CL_SEPARATE, CL_UNDOCUMENTED):\n+\tIncrease by +5 to allow for more languages.\n+\t* optc-gen.awk: Generate #if that ensures that the number of\n+\tlanguages is within the implementation-defined limit.\n+\n 2011-09-02  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/50260"}, {"sha": "e28c397f48a9a3614d58a172c34b21d855c7d0f6", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1", "patch": "@@ -169,6 +169,9 @@ for (i = 0; i < n_langs; i++) {\n \n print \"  0\\n};\\n\"\n print \"const unsigned int cl_options_count = N_OPTS;\\n\"\n+print \"#if (1U << \" n_langs \") > CL_MIN_OPTION_CLASS\"\n+print \"  #error the number of languages exceeds the implementation limit\"\n+print \"#endif\"\n print \"const unsigned int cl_lang_count = \" n_langs \";\\n\"\n \n print \"const struct cl_option cl_options[] =\\n{\""}, {"sha": "5d5bcb9602853b6e5f573d34e60f6ae43081161f", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1", "patch": "@@ -1125,7 +1125,7 @@ print_specific_help (unsigned int include_flags,\n \n   /* Sanity check: Make sure that we do not have more\n      languages than we have bits available to enumerate them.  */\n-  gcc_assert ((1U << cl_lang_count) < CL_MIN_OPTION_CLASS);\n+  gcc_assert ((1U << cl_lang_count) <= CL_MIN_OPTION_CLASS);\n \n   /* If we have not done so already, obtain\n      the desired maximum width of the output.  */"}, {"sha": "621cdea49343bf1eb04fbd82d0dbd7043e683d89", "filename": "gcc/opts.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=58265ea647cc3d461d5ecb0b6f7ee7a20adf8be1", "patch": "@@ -127,12 +127,12 @@ extern const unsigned int cl_options_count;\n extern const char *const lang_names[];\n extern const unsigned int cl_lang_count;\n \n-#define CL_PARAMS               (1U << 11) /* Fake entry.  Used to display --param info with --help.  */\n-#define CL_WARNING\t\t(1U << 12) /* Enables an (optional) warning message.  */\n-#define CL_OPTIMIZATION\t\t(1U << 13) /* Enables an (optional) optimization.  */\n-#define CL_DRIVER\t\t(1U << 14) /* Driver option.  */\n-#define CL_TARGET\t\t(1U << 15) /* Target-specific option.  */\n-#define CL_COMMON\t\t(1U << 16) /* Language-independent.  */\n+#define CL_PARAMS               (1U << 16) /* Fake entry.  Used to display --param info with --help.  */\n+#define CL_WARNING\t\t(1U << 17) /* Enables an (optional) warning message.  */\n+#define CL_OPTIMIZATION\t\t(1U << 18) /* Enables an (optional) optimization.  */\n+#define CL_DRIVER\t\t(1U << 19) /* Driver option.  */\n+#define CL_TARGET\t\t(1U << 20) /* Target-specific option.  */\n+#define CL_COMMON\t\t(1U << 21) /* Language-independent.  */\n \n #define CL_MIN_OPTION_CLASS\tCL_PARAMS\n #define CL_MAX_OPTION_CLASS\tCL_COMMON\n@@ -142,9 +142,9 @@ extern const unsigned int cl_lang_count;\n    This distinction is important because --help will not list options\n    which only have these higher bits set.  */\n \n-#define CL_JOINED\t\t(1U << 17) /* If takes joined argument.  */\n-#define CL_SEPARATE\t\t(1U << 18) /* If takes a separate argument.  */\n-#define CL_UNDOCUMENTED\t\t(1U << 19) /* Do not output with --help.  */\n+#define CL_JOINED\t\t(1U << 22) /* If takes joined argument.  */\n+#define CL_SEPARATE\t\t(1U << 23) /* If takes a separate argument.  */\n+#define CL_UNDOCUMENTED\t\t(1U << 24) /* Do not output with --help.  */\n \n /* Flags for an enumerated option argument.  */\n #define CL_ENUM_CANONICAL\t(1 << 0) /* Canonical for this value.  */"}]}