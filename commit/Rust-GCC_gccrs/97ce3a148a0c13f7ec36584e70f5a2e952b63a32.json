{"sha": "97ce3a148a0c13f7ec36584e70f5a2e952b63a32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdjZTNhMTQ4YTBjMTNmN2VjMzY1ODRlNzBmNWEyZTk1MmI2M2EzMg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2012-11-06T10:45:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-11-06T10:45:56Z"}, "message": "exp_attr.adb, [...]: Minor reformatting.\n\n2012-11-06  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb, sem_attr.adb: Minor reformatting.\n\nFrom-SVN: r193230", "tree": {"sha": "3a1a533fefbde97f9df0bf57d5bfca920075618c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a1a533fefbde97f9df0bf57d5bfca920075618c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97ce3a148a0c13f7ec36584e70f5a2e952b63a32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ce3a148a0c13f7ec36584e70f5a2e952b63a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ce3a148a0c13f7ec36584e70f5a2e952b63a32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ce3a148a0c13f7ec36584e70f5a2e952b63a32/comments", "author": null, "committer": null, "parents": [{"sha": "ff97910daf84acf7f3073b6b53660efcad9e6480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff97910daf84acf7f3073b6b53660efcad9e6480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff97910daf84acf7f3073b6b53660efcad9e6480"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "d2ad5416b2993c19511f4093b43b74e38c2289d4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ce3a148a0c13f7ec36584e70f5a2e952b63a32/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ce3a148a0c13f7ec36584e70f5a2e952b63a32/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=97ce3a148a0c13f7ec36584e70f5a2e952b63a32", "patch": "@@ -1,3 +1,7 @@\n+2012-11-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb, sem_attr.adb: Minor reformatting.\n+\n 2012-11-06  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_attr.adb (Expand_N_Attribute_Reference): Apply a predicate"}, {"sha": "dcaac0c29b9bd17c06788f8f32d65e61880ee142", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ce3a148a0c13f7ec36584e70f5a2e952b63a32/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ce3a148a0c13f7ec36584e70f5a2e952b63a32/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=97ce3a148a0c13f7ec36584e70f5a2e952b63a32", "patch": "@@ -5627,6 +5627,9 @@ package body Exp_Attr is\n                --  function, then issue a warning that this will cause infinite\n                --  recursion.\n \n+               --  Do we have to issue these warnings in the expander rather\n+               --  than during analysis (means they are skipped in -gnatc???).\n+\n                if Current_Scope = Pred_Func then\n                   Error_Msg_N\n                     (\"attribute Valid requires a predicate check?\", N);"}, {"sha": "7ed94b4d91a7c148531241257d1d1579b3630996", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97ce3a148a0c13f7ec36584e70f5a2e952b63a32/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97ce3a148a0c13f7ec36584e70f5a2e952b63a32/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=97ce3a148a0c13f7ec36584e70f5a2e952b63a32", "patch": "@@ -7235,6 +7235,8 @@ package body Sem_Attr is\n       -- Loop_Entry --\n       ----------------\n \n+      --  This null processing requires an explanatory comment???\n+\n       when Attribute_Loop_Entry =>\n          null;\n "}]}