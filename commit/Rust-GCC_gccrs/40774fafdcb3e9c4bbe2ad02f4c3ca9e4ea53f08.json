{"sha": "40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA3NzRmYWZkY2IzZTljNGJiZTJhZDAyZjRjM2NhOWU0ZWE1M2YwOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-05-26T14:22:40Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-05-26T14:22:40Z"}, "message": "free.asm: Delete.\n\n\t* config/nvptx/free.asm: Delete.\n\t* config/nvptx/malloc.asm: Delete.\n\t* config/nvptx/realloc.c: Delete.\n\t* t-nvptx: Update.\n\nFrom-SVN: r236773", "tree": {"sha": "44476b7a1487d1e877a2e72db3c14a88c3d2ce53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44476b7a1487d1e877a2e72db3c14a88c3d2ce53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4557008c45c0a44ae848c71d31ce4ed6316d043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4557008c45c0a44ae848c71d31ce4ed6316d043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4557008c45c0a44ae848c71d31ce4ed6316d043"}], "stats": {"total": 167, "additions": 8, "deletions": 159}, "files": [{"sha": "d99eb63a05d1ea4543651adcca343f75bd958608", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08", "patch": "@@ -1,3 +1,10 @@\n+2016-05-26  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* config/nvptx/free.asm: Delete.\n+\t* config/nvptx/malloc.asm: Delete.\n+\t* config/nvptx/realloc.c: Delete.\n+\t* t-nvptx: Update.\n+\n 2016-05-25  Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/crt0.s: Delete."}, {"sha": "3b8e39e43aa9763c72728a25ea1d9c77b7f6c2c5", "filename": "libgcc/config/nvptx/free.asm", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4557008c45c0a44ae848c71d31ce4ed6316d043/libgcc%2Fconfig%2Fnvptx%2Ffree.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4557008c45c0a44ae848c71d31ce4ed6316d043/libgcc%2Fconfig%2Fnvptx%2Ffree.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnvptx%2Ffree.asm?ref=b4557008c45c0a44ae848c71d31ce4ed6316d043", "patch": "@@ -1,50 +0,0 @@\n-// A wrapper around free to enable a realloc implementation.\n-\n-// Copyright (C) 2014-2016 Free Software Foundation, Inc.\n-\n-// This file is free software; you can redistribute it and/or modify it\n-// under the terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option) any\n-// later version.\n-\n-// This file is distributed in the hope that it will be useful, but\n-// WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-// General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-        .version        3.1\n-        .target sm_30\n-        .address_size 64\n-\n-.extern .func free(.param.u64 %in_ar1);\n-\n-// BEGIN GLOBAL FUNCTION DEF: __nvptx_free\n-.visible .func __nvptx_free(.param.u64 %in_ar1)\n-{\n-\t.reg.u64 %ar1;\n-\t.reg.u64 %hr10;\n-\t.reg.u64 %r23;\n-\t.reg.pred %r25;\n-\t.reg.u64 %r27;\n-\tld.param.u64 %ar1, [%in_ar1];\n-\t\tmov.u64\t%r23, %ar1;\n-\t\tsetp.eq.u64 %r25,%r23,0;\n-\t@%r25\tbra\t$L1;\n-\t\tadd.u64\t%r27, %r23, -8;\n-\t{\n-\t\t.param.u64 %out_arg0;\n-\t\tst.param.u64 [%out_arg0], %r27;\n-\t\tcall free, (%out_arg0);\n-\t}\n-$L1:\n-\tret;\n-\t}"}, {"sha": "3d60981ca78ef73051300153079c1bac5afe9035", "filename": "libgcc/config/nvptx/malloc.asm", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4557008c45c0a44ae848c71d31ce4ed6316d043/libgcc%2Fconfig%2Fnvptx%2Fmalloc.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4557008c45c0a44ae848c71d31ce4ed6316d043/libgcc%2Fconfig%2Fnvptx%2Fmalloc.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnvptx%2Fmalloc.asm?ref=b4557008c45c0a44ae848c71d31ce4ed6316d043", "patch": "@@ -1,55 +0,0 @@\n-// A wrapper around malloc to enable a realloc implementation.\n-\n-// Copyright (C) 2014-2016 Free Software Foundation, Inc.\n-\n-// This file is free software; you can redistribute it and/or modify it\n-// under the terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option) any\n-// later version.\n-\n-// This file is distributed in the hope that it will be useful, but\n-// WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-// General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-        .version        3.1\n-        .target sm_30\n-        .address_size 64\n-\n-.extern .func (.param.u64 %out_retval) malloc(.param.u64 %in_ar1);\n-\n-// BEGIN GLOBAL FUNCTION DEF: __nvptx_malloc\n-.visible .func (.param.u64 %out_retval) __nvptx_malloc(.param.u64 %in_ar1)\n-{\n-        .reg.u64 %ar1;\n-.reg.u64 %retval;\n-        .reg.u64 %hr10;\n-        .reg.u64 %r26;\n-        .reg.u64 %r28;\n-        .reg.u64 %r29;\n-        .reg.u64 %r31;\n-        ld.param.u64 %ar1, [%in_ar1];\n-\t\tmov.u64 %r26, %ar1;\n-\t\tadd.u64 %r28, %r26, 8;\n-        {\n-\t\t.param.u64 %retval_in;\n-\t\t.param.u64 %out_arg0;\n-\t\tst.param.u64 [%out_arg0], %r28;\n-\t\tcall (%retval_in), malloc, (%out_arg0);\n-\t\tld.param.u64    %r29, [%retval_in];\n-        }\n-\t\tst.u64  [%r29], %r26;\n-\t\tadd.u64 %r31, %r29, 8;\n-\t\tmov.u64 %retval, %r31;\n-\t\tst.param.u64    [%out_retval], %retval;\n-\t\tret;\n-}"}, {"sha": "82d6a02cdd67251152a7a33ca6044a234ae880b7", "filename": "libgcc/config/nvptx/realloc.c", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4557008c45c0a44ae848c71d31ce4ed6316d043/libgcc%2Fconfig%2Fnvptx%2Frealloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4557008c45c0a44ae848c71d31ce4ed6316d043/libgcc%2Fconfig%2Fnvptx%2Frealloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnvptx%2Frealloc.c?ref=b4557008c45c0a44ae848c71d31ce4ed6316d043", "patch": "@@ -1,50 +0,0 @@\n-/* Implement realloc with the help of the malloc and free wrappers.\n-\n-   Copyright (C) 2014-2016 Free Software Foundation, Inc.\n-\n-   This file is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by the\n-   Free Software Foundation; either version 3, or (at your option) any\n-   later version.\n-\n-   This file is distributed in the hope that it will be useful, but\n-   WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   General Public License for more details.\n-\n-   Under Section 7 of GPL version 3, you are granted additional\n-   permissions described in the GCC Runtime Library Exception, version\n-   3.1, as published by the Free Software Foundation.\n-\n-   You should have received a copy of the GNU General Public License and\n-   a copy of the GCC Runtime Library Exception along with this program;\n-   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-#include <stddef.h>\n-#include \"nvptx-malloc.h\"\n-\n-void *\n-__nvptx_realloc (void *ptr, size_t newsz)\n-{\n-  if (newsz == 0)\n-    {\n-      __nvptx_free (ptr);\n-      return NULL;\n-    }\n-  void *newptr = __nvptx_malloc (newsz);\n-\n-  size_t oldsz;\n-  if (ptr == NULL)\n-    oldsz = 0;\n-  else\n-    {\n-      size_t *sp = __extension__ (size_t *)(ptr - 8);\n-      oldsz = *sp;\n-    }\n-  if (oldsz != 0)\n-    __builtin_memcpy (newptr, ptr, oldsz > newsz ? newsz : oldsz);\n-\n-  __nvptx_free (ptr);\n-  return newptr;\n-}"}, {"sha": "daf252f247212ecfbb164cfe01aa26a0cf72a016", "filename": "libgcc/config/nvptx/t-nvptx", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08/libgcc%2Fconfig%2Fnvptx%2Ft-nvptx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08/libgcc%2Fconfig%2Fnvptx%2Ft-nvptx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnvptx%2Ft-nvptx?ref=40774fafdcb3e9c4bbe2ad02f4c3ca9e4ea53f08", "patch": "@@ -1,7 +1,4 @@\n-LIB2ADD=$(srcdir)/config/nvptx/malloc.asm \\\n-\t$(srcdir)/config/nvptx/free.asm \\\n-\t$(srcdir)/config/nvptx/realloc.c \\\n-\t$(srcdir)/config/nvptx/reduction.c\n+LIB2ADD=$(srcdir)/config/nvptx/reduction.c\n \n LIB2ADDEH=\n LIB2FUNCS_EXCLUDE=__main"}]}