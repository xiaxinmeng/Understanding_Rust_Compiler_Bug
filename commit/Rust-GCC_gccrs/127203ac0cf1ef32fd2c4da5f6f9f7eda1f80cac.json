{"sha": "127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI3MjAzYWMwY2YxZWYzMmZkMmM0ZGE1ZjZmOWY3ZWRhMWY4MGNhYw==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2005-12-09T19:24:28Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2005-12-09T19:24:28Z"}, "message": "tree.c (recompute_tree_invariant_for_addr_expr): Rename from recompute_tree_invarant_for_addr_expr.\n\n\n\t* tree.c (recompute_tree_invariant_for_addr_expr): Rename from\n\trecompute_tree_invarant_for_addr_expr.\n\tUpdate uses everywhere.\n\nFrom-SVN: r108316", "tree": {"sha": "917c4067abf8ee556f34c6463ed645d758e23c14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/917c4067abf8ee556f34c6463ed645d758e23c14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/comments", "author": null, "committer": null, "parents": [{"sha": "63ff35769cec32502ebff743fd5fcb5465060fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63ff35769cec32502ebff743fd5fcb5465060fb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63ff35769cec32502ebff743fd5fcb5465060fb8"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "75d209058f143ec29f511021747c51da689d3c75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -1,3 +1,9 @@\n+2005-12-09  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* tree.c (recompute_tree_invariant_for_addr_expr): Rename from\n+\trecompute_tree_invarant_for_addr_expr.\n+\tUpdate uses everywhere.\n+\n 2005-12-09  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config/ms1/t-ms1 (MULTILIB_OPTIONS): Define."}, {"sha": "f8698c5a77adb218c212bb3678cf9ff82b327c83", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -4622,7 +4622,7 @@ gnat_gimplify_expr (tree *expr_p, tree *pre_p, tree *post_p ATTRIBUTE_UNUSED)\n \t  DECL_INITIAL (new_var) = op;\n \n \t  TREE_OPERAND (expr, 0) = new_var;\n-\t  recompute_tree_invarant_for_addr_expr (expr);\n+\t  recompute_tree_invariant_for_addr_expr (expr);\n \t  return GS_ALL_DONE;\n \t}\n \n@@ -4646,7 +4646,7 @@ gnat_gimplify_expr (tree *expr_p, tree *pre_p, tree *post_p ATTRIBUTE_UNUSED)\n \n \t  gimplify_and_add (mod, pre_p);\n \t  TREE_OPERAND (expr, 0) = new_var;\n-\t  recompute_tree_invarant_for_addr_expr (expr);\n+\t  recompute_tree_invariant_for_addr_expr (expr);\n \t  return GS_ALL_DONE;\n \t}\n "}, {"sha": "841e3fa5ff11b3453d9ed6314b023a7da5a46413", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -3611,7 +3611,7 @@ gimplify_addr_expr (tree *expr_p, tree *pre_p, tree *post_p)\n \n \t  /* Make sure TREE_INVARIANT, TREE_CONSTANT, and TREE_SIDE_EFFECTS\n \t     is set properly.  */\n-\t  recompute_tree_invarant_for_addr_expr (expr);\n+\t  recompute_tree_invariant_for_addr_expr (expr);\n \n \t  /* Mark the RHS addressable.  */\n \t  lang_hooks.mark_addressable (TREE_OPERAND (expr, 0));"}, {"sha": "3d97c9362cb73e81afbb588115c1401a3b9ce48d", "filename": "gcc/langhooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -415,7 +415,7 @@ struct lang_hooks\n   /* Used to set up the tree_contains_structure array for a frontend. */\n   void (*init_ts) (void);\n \n-  /* Called by recompute_tree_invarant_for_addr_expr to go from EXPR\n+  /* Called by recompute_tree_invariant_for_addr_expr to go from EXPR\n      to a contained expression or DECL, possibly updating *TC, *TI or\n      *SE if in the process TREE_CONSTANT, TREE_INVARIANT or\n      TREE_SIDE_EFFECTS need updating.  */"}, {"sha": "fd6d1c703eee21ca4ada4ea16001d822c79aad44", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -1270,7 +1270,7 @@ replace_uses_by (tree name, tree val)\n \n       rhs = get_rhs (stmt);\n       if (TREE_CODE (rhs) == ADDR_EXPR)\n-\trecompute_tree_invarant_for_addr_expr (rhs);\n+\trecompute_tree_invariant_for_addr_expr (rhs);\n \n       /* If the statement could throw and now cannot, we need to prune cfg.  */\n       if (maybe_clean_or_replace_eh_stmt (stmt, stmt))\n@@ -3193,7 +3193,7 @@ verify_expr (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n \told_constant = TREE_CONSTANT (t);\n \told_side_effects = TREE_SIDE_EFFECTS (t);\n \n-\trecompute_tree_invarant_for_addr_expr (t);\n+\trecompute_tree_invariant_for_addr_expr (t);\n \tnew_invariant = TREE_INVARIANT (t);\n \tnew_side_effects = TREE_SIDE_EFFECTS (t);\n \tnew_constant = TREE_CONSTANT (t);"}, {"sha": "a0cfb60829497c68943962e3a03a1aaebb873b9a", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -704,7 +704,7 @@ copy_body_r (tree *tp, int *walk_subtrees, void *data)\n       else if (TREE_CODE (*tp) == ADDR_EXPR)\n \t{\n \t  walk_tree (&TREE_OPERAND (*tp, 0), copy_body_r, id, NULL);\n-\t  recompute_tree_invarant_for_addr_expr (*tp);\n+\t  recompute_tree_invariant_for_addr_expr (*tp);\n \t  *walk_subtrees = 0;\n \t}\n     }"}, {"sha": "a4bda9f307891fc90f8ba4a908df2fc95e2a672b", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -885,7 +885,7 @@ convert_nonlocal_reference (tree *tp, int *walk_subtrees, void *data)\n \t       since we're no longer directly referencing a decl.  */\n \t    save_context = current_function_decl;\n \t    current_function_decl = info->context;\n-\t    recompute_tree_invarant_for_addr_expr (t);\n+\t    recompute_tree_invariant_for_addr_expr (t);\n \t    current_function_decl = save_context;\n \n \t    /* If the callback converted the address argument in a context\n@@ -1016,7 +1016,7 @@ convert_local_reference (tree *tp, int *walk_subtrees, void *data)\n \t    \n \t  save_context = current_function_decl;\n \t  current_function_decl = info->context;\n-\t  recompute_tree_invarant_for_addr_expr (t);\n+\t  recompute_tree_invariant_for_addr_expr (t);\n \t  current_function_decl = save_context;\n \n \t  /* If we are in a context where we only accept values, then"}, {"sha": "39ba4a8a48fc61aecf44c3cdf134782d053e66de", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -1958,7 +1958,7 @@ fold_stmt_r (tree *expr_p, int *walk_subtrees, void *data)\n       /* Set TREE_INVARIANT properly so that the value is properly\n \t considered constant, and so gets propagated as expected.  */\n       if (*changed_p)\n-        recompute_tree_invarant_for_addr_expr (expr);\n+        recompute_tree_invariant_for_addr_expr (expr);\n       return NULL_TREE;\n \n     case PLUS_EXPR:"}, {"sha": "49f81470d9f226b1b7396784278938cdf36393a4", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -2955,7 +2955,7 @@ optimize_stmt (struct dom_walk_data *walk_data ATTRIBUTE_UNUSED,\n \n       rhs = get_rhs (stmt);\n       if (rhs && TREE_CODE (rhs) == ADDR_EXPR)\n-\trecompute_tree_invarant_for_addr_expr (rhs);\n+\trecompute_tree_invariant_for_addr_expr (rhs);\n \n       /* Constant/copy propagation above may change the set of \n \t virtual operands associated with this statement.  Folding"}, {"sha": "c6897ab9b373aa4f030063ee07ef76e194283145", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -452,7 +452,7 @@ tidy_after_forward_propagate_addr (tree stmt)\n     cfg_changed = true;\n \n   if (TREE_CODE (TREE_OPERAND (stmt, 1)) == ADDR_EXPR)\n-     recompute_tree_invarant_for_addr_expr (TREE_OPERAND (stmt, 1));\n+     recompute_tree_invariant_for_addr_expr (TREE_OPERAND (stmt, 1));\n \n   update_stmt (stmt);\n }"}, {"sha": "c24f72a7fac2ede7c8a3c3e9c0f1107a6caa7ace", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -1160,7 +1160,7 @@ substitute_and_fold (prop_value_t *prop_value, bool use_ranges_p)\n \n \t      rhs = get_rhs (stmt);\n \t      if (TREE_CODE (rhs) == ADDR_EXPR)\n-\t\trecompute_tree_invarant_for_addr_expr (rhs);\n+\t\trecompute_tree_invariant_for_addr_expr (rhs);\n \n \t      if (dump_file && (dump_flags & TDF_DETAILS))\n \t\t{"}, {"sha": "5e99305b1d302a451c53f3249fcc6d799335bfaf", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -2622,7 +2622,7 @@ stabilize_reference_1 (tree e)\n    TREE_INVARIANT, and TREE_SIDE_EFFECTS for an ADDR_EXPR.  */\n \n void\n-recompute_tree_invarant_for_addr_expr (tree t)\n+recompute_tree_invariant_for_addr_expr (tree t)\n {\n   tree node;\n   bool tc = true, ti = true, se = false;\n@@ -2797,7 +2797,7 @@ build1_stat (enum tree_code code, tree type, tree node MEM_STAT_DECL)\n \n     case ADDR_EXPR:\n       if (node)\n-\trecompute_tree_invarant_for_addr_expr (t);\n+\trecompute_tree_invariant_for_addr_expr (t);\n       break;\n \n     default:"}, {"sha": "6c20db8a426068cca8ce510622f8db50ffd0290d", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=127203ac0cf1ef32fd2c4da5f6f9f7eda1f80cac", "patch": "@@ -3952,7 +3952,7 @@ extern void expand_function_end (void);\n extern void expand_function_start (tree);\n extern void stack_protect_prologue (void);\n extern void stack_protect_epilogue (void);\n-extern void recompute_tree_invarant_for_addr_expr (tree);\n+extern void recompute_tree_invariant_for_addr_expr (tree);\n extern bool is_global_var (tree t);\n extern bool needs_to_live_in_memory (tree);\n extern tree reconstruct_complex_type (tree, tree);"}]}