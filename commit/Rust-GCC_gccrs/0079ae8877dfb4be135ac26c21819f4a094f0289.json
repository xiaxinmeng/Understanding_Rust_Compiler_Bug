{"sha": "0079ae8877dfb4be135ac26c21819f4a094f0289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA3OWFlODg3N2RmYjRiZTEzNWFjMjZjMjE4MTlmNGEwOTRmMDI4OQ==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2018-02-09T12:23:46Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2018-02-09T12:23:46Z"}, "message": "re PR target/82641 (Unable to enable crc32 for a certain function with target attribute on ARM (aarch32))\n\n2018-02-09  Tamar Christina  <tamar.christina@arm.com>\n\n\tPR target/82641\n\t* config/arm/arm-c.c (arm_cpu_builtins): Un-define __ARM_FEATURE_LDREX,\n\t__ARM_ARCH_PROFILE, __ARM_ARCH_ISA_THUMB, __ARM_FP and __ARM_NEON_FP.\n\ngcc/testsuite\n2018-02-09  Tamar Christina  <tamar.christina@arm.com>\n\n\tPR target/82641\n\t* gcc.target/arm/pragma_arch_switch_2.c: Use armv6 and armv5t.\n\nFrom-SVN: r257524", "tree": {"sha": "20954a163c6385d6b2f6c85f6e619b8401d1e56b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20954a163c6385d6b2f6c85f6e619b8401d1e56b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0079ae8877dfb4be135ac26c21819f4a094f0289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0079ae8877dfb4be135ac26c21819f4a094f0289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0079ae8877dfb4be135ac26c21819f4a094f0289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0079ae8877dfb4be135ac26c21819f4a094f0289/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c704706201e54b922001b86ecfd81df60772563f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c704706201e54b922001b86ecfd81df60772563f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c704706201e54b922001b86ecfd81df60772563f"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "b112b8105c7f62bdb92a1cc657deba9677143092", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0079ae8877dfb4be135ac26c21819f4a094f0289/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0079ae8877dfb4be135ac26c21819f4a094f0289/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0079ae8877dfb4be135ac26c21819f4a094f0289", "patch": "@@ -1,3 +1,9 @@\n+2018-02-09  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/82641\n+\t* config/arm/arm-c.c (arm_cpu_builtins): Un-define __ARM_FEATURE_LDREX,\n+\t__ARM_ARCH_PROFILE, __ARM_ARCH_ISA_THUMB, __ARM_FP and __ARM_NEON_FP.\n+\n 2018-02-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \tPR target/PR84295"}, {"sha": "7c741e9fe66a0e086556272a46c4cd709996ce36", "filename": "gcc/config/arm/arm-c.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0079ae8877dfb4be135ac26c21819f4a094f0289/gcc%2Fconfig%2Farm%2Farm-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0079ae8877dfb4be135ac26c21819f4a094f0289/gcc%2Fconfig%2Farm%2Farm-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.c?ref=0079ae8877dfb4be135ac26c21819f4a094f0289", "patch": "@@ -87,11 +87,10 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n \tbuiltin_define (\"__ARM_FEATURE_CMSE\");\n     }\n \n+  cpp_undef (pfile, \"__ARM_FEATURE_LDREX\");\n   if (TARGET_ARM_FEATURE_LDREX)\n     builtin_define_with_int_value (\"__ARM_FEATURE_LDREX\",\n \t\t\t\t   TARGET_ARM_FEATURE_LDREX);\n-  else\n-    cpp_undef (pfile, \"__ARM_FEATURE_LDREX\");\n \n   def_or_undef_macro (pfile, \"__ARM_FEATURE_CLZ\",\n \t\t      ((TARGET_ARM_ARCH >= 5 && !TARGET_THUMB)\n@@ -105,6 +104,8 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n   builtin_define_with_int_value (\"__ARM_SIZEOF_MINIMAL_ENUM\",\n \t\t\t\t flag_short_enums ? 1 : 4);\n   builtin_define_type_sizeof (\"__ARM_SIZEOF_WCHAR_T\", wchar_type_node);\n+\n+  cpp_undef (pfile, \"__ARM_ARCH_PROFILE\");\n   if (TARGET_ARM_ARCH_PROFILE)\n     builtin_define_with_int_value (\"__ARM_ARCH_PROFILE\",\n \t\t\t\t   TARGET_ARM_ARCH_PROFILE);\n@@ -128,6 +129,7 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n   else\n     def_or_undef_macro (pfile, \"__THUMBEL__\", TARGET_THUMB);\n \n+  cpp_undef (pfile, \"__ARM_ARCH_ISA_THUMB\");\n   if (TARGET_ARM_ARCH_ISA_THUMB)\n     builtin_define_with_int_value (\"__ARM_ARCH_ISA_THUMB\",\n \t\t\t\t   TARGET_ARM_ARCH_ISA_THUMB);\n@@ -147,10 +149,9 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n \n   builtin_define (\"__VFP_FP__\");\n \n+  cpp_undef (pfile, \"__ARM_FP\");\n   if (TARGET_ARM_FP)\n     builtin_define_with_int_value (\"__ARM_FP\", TARGET_ARM_FP);\n-  else\n-    cpp_undef (pfile, \"__ARM_FP\");\n \n   def_or_undef_macro (pfile, \"__ARM_FP16_FORMAT_IEEE\",\n \t\t      arm_fp16_format == ARM_FP16_FORMAT_IEEE);\n@@ -169,10 +170,9 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n   def_or_undef_macro (pfile, \"__ARM_NEON__\", TARGET_NEON);\n   def_or_undef_macro (pfile, \"__ARM_NEON\", TARGET_NEON);\n \n+  cpp_undef (pfile, \"__ARM_NEON_FP\");\n   if (TARGET_NEON_FP)\n     builtin_define_with_int_value (\"__ARM_NEON_FP\", TARGET_NEON_FP);\n-  else\n-    cpp_undef (pfile, \"__ARM_NEON_FP\");\n \n   /* Add a define for interworking. Needed when building libgcc.a.  */\n   if (arm_cpp_interwork)"}, {"sha": "24751af6d3693a4853e05a36f328d47a382714cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0079ae8877dfb4be135ac26c21819f4a094f0289/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0079ae8877dfb4be135ac26c21819f4a094f0289/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0079ae8877dfb4be135ac26c21819f4a094f0289", "patch": "@@ -1,3 +1,8 @@\n+2018-02-09  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/82641\n+\t* gcc.target/arm/pragma_arch_switch_2.c: Use armv6 and armv5t.\n+\n 2018-02-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \tPR target/PR84295"}, {"sha": "7f297557d555fd139a3b804d354117239a78ae62", "filename": "gcc/testsuite/gcc.target/arm/pragma_arch_switch_2.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0079ae8877dfb4be135ac26c21819f4a094f0289/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_arch_switch_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0079ae8877dfb4be135ac26c21819f4a094f0289/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_arch_switch_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_arch_switch_2.c?ref=0079ae8877dfb4be135ac26c21819f4a094f0289", "patch": "@@ -2,16 +2,16 @@\n /* { dg-skip-if \"instruction not valid on thumb\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n /* { dg-do assemble } */\n /* { dg-require-effective-target arm_arm_ok } */\n-/* { dg-additional-options \"-Wall -O2 -march=armv4t -std=gnu99 -marm\" } */\n+/* { dg-additional-options \"-Wall -O2 -march=armv5t -std=gnu99 -marm\" } */\n \n-#pragma GCC target (\"arch=armv5te\")\n-void cpu_has_iwmmxt (void)\n+#pragma GCC target (\"arch=armv6\")\n+int test_assembly (int hi, int lo)\n {\n-   int lo;\n-   int hi;\n+   int res;\n    __asm__ __volatile__ (\n-      \"mcrr   p0, 0, %2, %3, c0\\n\"\n-      : \"=r\" (lo), \"=r\" (hi)\n-      : \"r\" (0), \"r\" (0x100));\n+      \"uxtah   %0, %1, %2\\n\"\n+      : \"=r\" (res)\n+      : \"r\" (hi),  \"r\" (lo));\n+   return res;\n }\n "}]}