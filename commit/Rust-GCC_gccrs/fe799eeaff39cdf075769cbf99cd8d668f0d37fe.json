{"sha": "fe799eeaff39cdf075769cbf99cd8d668f0d37fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3OTllZWFmZjM5Y2RmMDc1NzY5Y2JmOTljZDhkNjY4ZjBkMzdmZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2014-04-17T21:50:58Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2014-04-17T21:50:58Z"}, "message": "re PR target/60876 (2014-04-17 change to machmode.h breaks PowerPC)\n\n2014-04-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/60876\n\t* config/rs6000/rs6000.c (rs6000_setup_reg_addr_masks): Make sure\n\tGET_MODE_SIZE gets passed an enum machine_mode type and not\n\tinteger.\n\t(rs6000_init_hard_regno_mode_ok): Likewise.\n\nFrom-SVN: r209498", "tree": {"sha": "992126f1cf22ed42c3a76db74e74cce8d2739402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/992126f1cf22ed42c3a76db74e74cce8d2739402"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe799eeaff39cdf075769cbf99cd8d668f0d37fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe799eeaff39cdf075769cbf99cd8d668f0d37fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe799eeaff39cdf075769cbf99cd8d668f0d37fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe799eeaff39cdf075769cbf99cd8d668f0d37fe/comments", "author": null, "committer": null, "parents": [{"sha": "e85baec793f3560bdace25d061dd05874ff5cd2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e85baec793f3560bdace25d061dd05874ff5cd2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e85baec793f3560bdace25d061dd05874ff5cd2f"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "4c15285a30a1ccde7bf6ce6d2b683527f7b1e913", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe799eeaff39cdf075769cbf99cd8d668f0d37fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe799eeaff39cdf075769cbf99cd8d668f0d37fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe799eeaff39cdf075769cbf99cd8d668f0d37fe", "patch": "@@ -1,3 +1,11 @@\n+2014-04-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/60876\n+\t* config/rs6000/rs6000.c (rs6000_setup_reg_addr_masks): Make sure\n+\tGET_MODE_SIZE gets passed an enum machine_mode type and not\n+\tinteger.\n+\t(rs6000_init_hard_regno_mode_ok): Likewise.\n+\n 2014-04-17  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-inline.c (inline_small_functions): Account only non-cold"}, {"sha": "f431e7356996e9650e11e4db3606275758ae1d79", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe799eeaff39cdf075769cbf99cd8d668f0d37fe/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe799eeaff39cdf075769cbf99cd8d668f0d37fe/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=fe799eeaff39cdf075769cbf99cd8d668f0d37fe", "patch": "@@ -2329,6 +2329,8 @@ rs6000_setup_reg_addr_masks (void)\n \n   for (m = 0; m < NUM_MACHINE_MODES; ++m)\n     {\n+      enum machine_mode m2 = (enum machine_mode)m;\n+\n       /* SDmode is special in that we want to access it only via REG+REG\n \t addressing on power7 and above, since we want to use the LFIWZX and\n \t STFIWZX instructions to load it.  */\n@@ -2363,13 +2365,13 @@ rs6000_setup_reg_addr_masks (void)\n \n \t      if (TARGET_UPDATE\n \t\t  && (rc == RELOAD_REG_GPR || rc == RELOAD_REG_FPR)\n-\t\t  && GET_MODE_SIZE (m) <= 8\n-\t\t  && !VECTOR_MODE_P (m)\n-\t\t  && !COMPLEX_MODE_P (m)\n+\t\t  && GET_MODE_SIZE (m2) <= 8\n+\t\t  && !VECTOR_MODE_P (m2)\n+\t\t  && !COMPLEX_MODE_P (m2)\n \t\t  && !indexed_only_p\n-\t\t  && !(TARGET_E500_DOUBLE && GET_MODE_SIZE (m) == 8)\n-\t\t  && !(m == DFmode && TARGET_UPPER_REGS_DF)\n-\t\t  && !(m == SFmode && TARGET_UPPER_REGS_SF))\n+\t\t  && !(TARGET_E500_DOUBLE && GET_MODE_SIZE (m2) == 8)\n+\t\t  && !(m2 == DFmode && TARGET_UPPER_REGS_DF)\n+\t\t  && !(m2 == SFmode && TARGET_UPPER_REGS_SF))\n \t\t{\n \t\t  addr_mask |= RELOAD_REG_PRE_INCDEC;\n \n@@ -2815,6 +2817,7 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n \n       for (m = 0; m < NUM_MACHINE_MODES; ++m)\n \t{\n+\t  enum machine_mode m2 = (enum machine_mode)m;\n \t  int reg_size2 = reg_size;\n \n \t  /* TFmode/TDmode always takes 2 registers, even in VSX.  */\n@@ -2823,7 +2826,7 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n \t    reg_size2 = UNITS_PER_FP_WORD;\n \n \t  rs6000_class_max_nregs[m][c]\n-\t    = (GET_MODE_SIZE (m) + reg_size2 - 1) / reg_size2;\n+\t    = (GET_MODE_SIZE (m2) + reg_size2 - 1) / reg_size2;\n \t}\n     }\n "}]}