{"sha": "01982cfbe7e15384db6f9580bd9d05ea867b2adc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE5ODJjZmJlN2UxNTM4NGRiNmY5NTgwYmQ5ZDA1ZWE4NjdiMmFkYw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2018-10-16T21:07:31Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2018-10-16T21:07:31Z"}, "message": "Extend source-expr test case\n\n        PR fortran/67125\n        * gfortran.dg/allocate_with_source_26.f90: Extend\n        testcase with polymorphic variables.\n\nFrom-SVN: r265215", "tree": {"sha": "529f629473db0373203a9cecaa9c85974f509ad5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/529f629473db0373203a9cecaa9c85974f509ad5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01982cfbe7e15384db6f9580bd9d05ea867b2adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01982cfbe7e15384db6f9580bd9d05ea867b2adc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01982cfbe7e15384db6f9580bd9d05ea867b2adc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01982cfbe7e15384db6f9580bd9d05ea867b2adc/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c152593057a3315c3e11343efb2717d5fa8b5df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c152593057a3315c3e11343efb2717d5fa8b5df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c152593057a3315c3e11343efb2717d5fa8b5df0"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "773e570dd4a2bb92172bc568119226bd4b86e8d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01982cfbe7e15384db6f9580bd9d05ea867b2adc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01982cfbe7e15384db6f9580bd9d05ea867b2adc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01982cfbe7e15384db6f9580bd9d05ea867b2adc", "patch": "@@ -1,3 +1,9 @@\n+2018-10-16  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/67125\n+\t* gfortran.dg/allocate_with_source_26.f90: Extend\n+\ttestcase with polymorphic variables.\n+\n 2018-10-16  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/67125"}, {"sha": "28f24fc1e10adcb79f385f9a6f5a80153d201841", "filename": "gcc/testsuite/gfortran.dg/allocate_with_source_26.f90", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01982cfbe7e15384db6f9580bd9d05ea867b2adc/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_26.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01982cfbe7e15384db6f9580bd9d05ea867b2adc/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_26.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_source_26.f90?ref=01982cfbe7e15384db6f9580bd9d05ea867b2adc", "patch": "@@ -11,6 +11,10 @@\n program p\n  implicit none\n  integer, allocatable :: a(:), b(:), c(:), d(:), e(:)\n+ type t\n+   integer :: i\n+ end type t\n+ class(t), allocatable :: p1(:), p2(:), p3(:), p4(:)\n  integer :: vec(6)\n \n  vec = [1,2,3,4,5,6]\n@@ -21,6 +25,23 @@ program p\n  allocate(d, source=[1,2,3,4,5])\n  allocate(e, source=vec)\n \n+ allocate(p1(3:4))\n+ p1(:)%i = [43,56]\n+ allocate(p2, source=p1)\n+ call do_allocate(p1, size(p1))\n+ allocate(p4, source=poly_init())\n+\n+ if (lbound(p1, 1) /= 3 .or. ubound(p1, 1) /= 4 &\n+     .or. lbound(p2, 1) /= 3 .or. ubound(p2, 1) /= 4 &\n+     .or. lbound(p3, 1) /= 1 .or. ubound(p3, 1) /= 2 &\n+     .or. lbound(p4, 1) /= 7 .or. ubound(p4, 1) /= 8 &\n+     .or. p1(3)%i /= 43 .or. p1(4)%i /= 56 &\n+     .or. p2(3)%i /= 43 .or. p2(4)%i /= 56 &\n+     .or. p3(1)%i /= 43 .or. p3(2)%i /= 56 &\n+     .or. p4(7)%i /= 11 .or. p4(8)%i /= 12) then\n+   call abort()\n+ endif\n+\n  !write(*,*) lbound(a,1), ubound(a,1) ! prints 1 3\n  !write(*,*) lbound(b,1), ubound(b,1) ! prints 1 3\n  !write(*,*) lbound(c,1), ubound(c,1) ! prints 3 5\n@@ -37,6 +58,18 @@ program p\n    \n contains\n \n+ subroutine do_allocate(x, n)\n+   integer, value :: n\n+   class(t), intent(in) :: x(n)\n+   allocate(p3, source=x)\n+ end subroutine\n+\n+ function poly_init()\n+   class(t), allocatable :: poly_init(:)\n+   allocate(poly_init(7:8))\n+   poly_init = [t :: t(11), t(12)]\n+ end function poly_init\n+\n  pure function f(i)\n   integer, intent(in) :: i\n   integer :: f(i)"}]}