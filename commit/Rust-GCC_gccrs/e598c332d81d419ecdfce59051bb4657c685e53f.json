{"sha": "e598c332d81d419ecdfce59051bb4657c685e53f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU5OGMzMzJkODFkNDE5ZWNkZmNlNTkwNTFiYjQ2NTdjNjg1ZTUzZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-10-20T15:51:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-10-20T15:51:16Z"}, "message": "unroll-1.c: New testcase.\n\n\t* gcc.dg/tree-prof/unroll-1.c: New testcase.\n\n\t* loop-unroll.c (decide_unroll_constant_iterations): Don't\n\tperform unrolling for loops with low iterations bounds or estimates.\n\nFrom-SVN: r192638", "tree": {"sha": "595b4113b43061b69a63c45eb00bbb235517a85d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/595b4113b43061b69a63c45eb00bbb235517a85d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e598c332d81d419ecdfce59051bb4657c685e53f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e598c332d81d419ecdfce59051bb4657c685e53f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e598c332d81d419ecdfce59051bb4657c685e53f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e598c332d81d419ecdfce59051bb4657c685e53f/comments", "author": null, "committer": null, "parents": [{"sha": "bcd8d322db3a07471bd32ceeefbd0c5145a934ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcd8d322db3a07471bd32ceeefbd0c5145a934ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcd8d322db3a07471bd32ceeefbd0c5145a934ca"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "0403a90eb45bf2e215dc0f27a289743af7f077f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e598c332d81d419ecdfce59051bb4657c685e53f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e598c332d81d419ecdfce59051bb4657c685e53f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e598c332d81d419ecdfce59051bb4657c685e53f", "patch": "@@ -1,3 +1,8 @@\n+2012-10-20  Jan Hubicka  <jh@suse.cz>\n+\n+\t* loop-unroll.c (decide_unroll_constant_iterations): Don't\n+\tperform unrolling for loops with low iterations bounds or estimates.\n+\n 2012-10-20  Jan Hubicka  <jh@suse.cz>\n \n \t* loop-iv.c (iv_number_of_iterations): Record the upper bound"}, {"sha": "2398e6d6b1145af2dc51b9dd4f214be6f2732488", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e598c332d81d419ecdfce59051bb4657c685e53f/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e598c332d81d419ecdfce59051bb4657c685e53f/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=e598c332d81d419ecdfce59051bb4657c685e53f", "patch": "@@ -519,6 +519,7 @@ decide_unroll_constant_iterations (struct loop *loop, int flags)\n {\n   unsigned nunroll, nunroll_by_av, best_copies, best_unroll = 0, n_copies, i;\n   struct niter_desc *desc;\n+  double_int iterations;\n \n   if (!(flags & UAP_UNROLL))\n     {\n@@ -561,8 +562,14 @@ decide_unroll_constant_iterations (struct loop *loop, int flags)\n       return;\n     }\n \n-  /* Check whether the loop rolls enough to consider.  */\n-  if (desc->niter < 2 * nunroll)\n+  /* Check whether the loop rolls enough to consider.  \n+     Consult also loop bounds and profile; in the case the loop has more\n+     than one exit it may well loop less than determined maximal number\n+     of iterations.  */\n+  if (desc->niter < 2 * nunroll\n+      || ((estimated_loop_iterations (loop, &iterations)\n+\t   || max_loop_iterations (loop, &iterations))\n+\t  && iterations.ult (double_int::from_shwi (2 * nunroll))))\n     {\n       if (dump_file)\n \tfprintf (dump_file, \";; Not unrolling loop, doesn't roll\\n\");"}, {"sha": "a10971c255363013639f6746111af5bc17533417", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e598c332d81d419ecdfce59051bb4657c685e53f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e598c332d81d419ecdfce59051bb4657c685e53f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e598c332d81d419ecdfce59051bb4657c685e53f", "patch": "@@ -1,3 +1,7 @@\n+2012-10-20  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/tree-prof/unroll-1.c: New testcase.\n+\n 2012-10-19  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/54224"}, {"sha": "b1c6b8b2d3923aba87e02a9c1ebc76525ef2e8f7", "filename": "gcc/testsuite/gcc.dg/tree-prof/unroll-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e598c332d81d419ecdfce59051bb4657c685e53f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Funroll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e598c332d81d419ecdfce59051bb4657c685e53f/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Funroll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Funroll-1.c?ref=e598c332d81d419ecdfce59051bb4657c685e53f", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-options \"-O3 -fdump-rtl-loop2_unroll -funroll-loops -fno-peel-loops\" } */\n+void abort ();\n+\n+int a[1000];\n+int\n+__attribute__ ((noinline))\n+t()\n+{\n+  int i;\n+  for (i=0;i<1000;i++)\n+    if (!a[i])\n+      return 1;\n+  abort ();\n+}\n+main()\n+{\n+  int i;\n+  for (i=0;i<1000;i++)\n+    t();\n+  return 0;\n+}\n+/* { dg-final-use { scan-rtl-dump \"Considering unrolling loop with constant number of iterations\" \"loop2_unroll\" } } */\n+/* { dg-final-use { cleanup-rtl-dump \"Not unrolling loop, doesn't roll\" } } */\n+/* { dg-options \"-O3 -fdump-rtl-loop2_unroll -funroll-loops -fno-peel-loops\" } */"}]}