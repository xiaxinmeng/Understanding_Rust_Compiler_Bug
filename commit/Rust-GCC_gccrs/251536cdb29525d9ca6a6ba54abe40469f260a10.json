{"sha": "251536cdb29525d9ca6a6ba54abe40469f260a10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUxNTM2Y2RiMjk1MjVkOWNhNmE2YmE1NGFiZTQwNDY5ZjI2MGExMA==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-23T14:15:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-23T14:15:14Z"}, "message": "Merge #445 #446\n\n445: Fix assert in rust-buffered-queue peek r=dkm a=dkm\n\nWhen end + num_items_to_read > buffer.size the buffer is extended to make sure it\r\ncan hold at least the extra num_items_to_read. The assert at the end of this block\r\nhowever checks against end + num_queued_items. Fix the assert. This makes check-rust\r\nzero fail on arm64.\n\n446: Fix aarch64 config for rust r=dkm a=dkm\n\nDefine aarch64_rust_target_cpu_info in aarch64-protos.h.\r\nAARCH64_ISA_V8_1 isn't defined directly, check aarch64_isa_flags.\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>", "tree": {"sha": "e8eb6746993500d5470d758fce53ed3e261a2749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8eb6746993500d5470d758fce53ed3e261a2749"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/251536cdb29525d9ca6a6ba54abe40469f260a10", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgqmNyCRBK7hj4Ov3rIwAATxwIAKlUC202wtGKwYOpLO9lPmId\ne/Tz8E0bzHl51wpnB05n8WyfqFyBduvQeaWQBZzC5vyihrrAnVJNqffyWamvV8Fk\nUF4TS/bA6blc1cvmUNqrtk69qeP/QbU1ZUPKAceO4cPUQ65o9kd4WMY747JiDJ1X\nXrZghTiOe4UfZ3xR0GR/A/pO1Hvrm5KFW0qeq38YgTbdqvmfSCLZTV34kRier74E\n5ylOTpbyoOtOS9/bA+c8uUCKZZBsbTW3sncSkmH5xzyofwTVdBByaZzOwBSv6om7\n9V9im66LNOiBoYf2axRnjfFsJukBzhekK945Q3rEsNc0v6hGptXvcD07Xrf1HYs=\n=jBtW\n-----END PGP SIGNATURE-----\n", "payload": "tree e8eb6746993500d5470d758fce53ed3e261a2749\nparent 99b73780e6e30f962c01532d3ec189ceeecf7f93\nparent d9a5f670bb6075177a84d0641e05ee25ca9f1727\nparent dcb3a7b62b91cf890c3bc91b4faf3e7343b6cb42\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621779314 +0000\ncommitter GitHub <noreply@github.com> 1621779314 +0000\n\nMerge #445 #446\n\n445: Fix assert in rust-buffered-queue peek r=dkm a=dkm\n\nWhen end + num_items_to_read > buffer.size the buffer is extended to make sure it\r\ncan hold at least the extra num_items_to_read. The assert at the end of this block\r\nhowever checks against end + num_queued_items. Fix the assert. This makes check-rust\r\nzero fail on arm64.\n\n446: Fix aarch64 config for rust r=dkm a=dkm\n\nDefine aarch64_rust_target_cpu_info in aarch64-protos.h.\r\nAARCH64_ISA_V8_1 isn't defined directly, check aarch64_isa_flags.\n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251536cdb29525d9ca6a6ba54abe40469f260a10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251536cdb29525d9ca6a6ba54abe40469f260a10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251536cdb29525d9ca6a6ba54abe40469f260a10/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99b73780e6e30f962c01532d3ec189ceeecf7f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99b73780e6e30f962c01532d3ec189ceeecf7f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99b73780e6e30f962c01532d3ec189ceeecf7f93"}, {"sha": "d9a5f670bb6075177a84d0641e05ee25ca9f1727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a5f670bb6075177a84d0641e05ee25ca9f1727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9a5f670bb6075177a84d0641e05ee25ca9f1727"}, {"sha": "dcb3a7b62b91cf890c3bc91b4faf3e7343b6cb42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb3a7b62b91cf890c3bc91b4faf3e7343b6cb42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb3a7b62b91cf890c3bc91b4faf3e7343b6cb42"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "86c2d49db902f33a02b9788e2592ffe3ef78a02b", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251536cdb29525d9ca6a6ba54abe40469f260a10/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251536cdb29525d9ca6a6ba54abe40469f260a10/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=251536cdb29525d9ca6a6ba54abe40469f260a10", "patch": "@@ -786,6 +786,9 @@ std::string aarch64_get_extension_string_for_isa_flags (uint64_t, uint64_t);\n /* Defined in aarch64-d.c  */\n extern void aarch64_d_target_versions (void);\n \n+/* In aarch64-rust.c  */\n+extern void aarch64_rust_target_cpu_info (void);\n+\n rtl_opt_pass *make_pass_fma_steering (gcc::context *);\n rtl_opt_pass *make_pass_track_speculation (gcc::context *);\n rtl_opt_pass *make_pass_tag_collision_avoidance (gcc::context *);"}, {"sha": "2ecc53afea490b0f42f88210d9560af4ab6d6d16", "filename": "gcc/config/aarch64/aarch64-rust.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251536cdb29525d9ca6a6ba54abe40469f260a10/gcc%2Fconfig%2Faarch64%2Faarch64-rust.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251536cdb29525d9ca6a6ba54abe40469f260a10/gcc%2Fconfig%2Faarch64%2Faarch64-rust.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-rust.c?ref=251536cdb29525d9ca6a6ba54abe40469f260a10", "patch": "@@ -55,7 +55,7 @@ void aarch64_rust_target_cpu_info(void) {\n         rust_add_target_info(\"target_feature\", \"rcpc\");\n     if (TARGET_DOTPROD)\n         rust_add_target_info(\"target_feature\", \"dotprod\");\n-    if (AARCH64_ISA_V8_1)\n+    if (aarch64_isa_flags & AARCH64_FL_V8_2)\n         rust_add_target_info(\"target_feature\", \"v8.1a\");\n     if (AARCH64_ISA_V8_2)\n         rust_add_target_info(\"target_feature\", \"v8.2a\");"}, {"sha": "be8c0b87af87b07e984417ab4feed0416b66c05f", "filename": "gcc/rust/rust-buffered-queue.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251536cdb29525d9ca6a6ba54abe40469f260a10/gcc%2Frust%2Frust-buffered-queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251536cdb29525d9ca6a6ba54abe40469f260a10/gcc%2Frust%2Frust-buffered-queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-buffered-queue.h?ref=251536cdb29525d9ca6a6ba54abe40469f260a10", "patch": "@@ -101,7 +101,7 @@ template <typename T, typename Source> class buffered_queue\n \t     * reallocation upon resizing */\n \n \t    // validate that buffer is large enough now\n-\t    rust_assert (end + num_queued_items < (int) buffer.size ());\n+\t    rust_assert (end + num_items_to_read <= (int) buffer.size ());\n \t  }\n \n \t/* iterate through buffer and invoke operator () on source on values"}]}