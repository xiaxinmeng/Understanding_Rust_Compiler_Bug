{"sha": "ea6e89e07f4223c8ac7877508c62bba368084999", "node_id": "C_kwDOANBUbNoAKGVhNmU4OWUwN2Y0MjIzYzhhYzc4Nzc1MDhjNjJiYmEzNjgwODQ5OTk", "commit": {"author": {"name": "Jiufu Guo", "email": "guojiufu@linux.ibm.com", "date": "2022-09-07T05:32:55Z"}, "committer": {"name": "Jiufu Guo", "email": "guojiufu@linux.ibm.com", "date": "2022-09-07T05:35:18Z"}, "message": "rs6000: remove unused splitter on const_scalar_int_operand\n\nThere are two splitters, both are calling rs6000_emit_set_const to emit\ninstructions for constant building.\nOne splitter checks `const_int_operand`, this splitter is always used.\nAnother spitter checks `const_scalar_int_operand`, this one is never\nused now.\n\nChecking the history, that splitter is introduced around 1999 for\nHOST_BITS_PER_WIDE_INT=32, as below:\n\n(define_split\n  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n\t(match_operand:DI 1 \"const_double_operand\" \"\"))]\n  \"HOST_BITS_PER_WIDE_INT == 32 && TARGET_POWERPC64\n   && num_insns_constant (operands[1], DImode) > 1\"\n\nAnd `HOST_BITS_PER_WIDE_INT == 32` is eliminated later, since it is\n`const_double_operand` can cover it.\nWhen wide_int is introduced, `const_double_operand` is replaced by\n`const_scalar_int_operand`.\n\nNow, HOST_BITS_PER_WIDE_INT is forced to 64, this splitter is safe\nto remove.\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000.md (const_scalar_int splitter): Remove.", "tree": {"sha": "2f21753b23096cbf980084200ea4765b6e97aec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f21753b23096cbf980084200ea4765b6e97aec2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea6e89e07f4223c8ac7877508c62bba368084999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6e89e07f4223c8ac7877508c62bba368084999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea6e89e07f4223c8ac7877508c62bba368084999", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea6e89e07f4223c8ac7877508c62bba368084999/comments", "author": null, "committer": null, "parents": [{"sha": "34ea461fdb471b4d9afa555da69dbc6d02713c54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ea461fdb471b4d9afa555da69dbc6d02713c54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ea461fdb471b4d9afa555da69dbc6d02713c54"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "959fad23091016273541c0fb6e8cb40a33863eb2", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea6e89e07f4223c8ac7877508c62bba368084999/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea6e89e07f4223c8ac7877508c62bba368084999/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=ea6e89e07f4223c8ac7877508c62bba368084999", "patch": "@@ -9712,18 +9712,6 @@\n     FAIL;\n })\n \n-(define_split\n-  [(set (match_operand:DI 0 \"int_reg_operand_not_pseudo\")\n-\t(match_operand:DI 1 \"const_scalar_int_operand\"))]\n-  \"TARGET_POWERPC64 && num_insns_constant (operands[1], DImode) > 1\"\n-  [(pc)]\n-{\n-  if (rs6000_emit_set_const (operands[0], operands[1]))\n-    DONE;\n-  else\n-    FAIL;\n-})\n-\n (define_split\n   [(set (match_operand:DI 0 \"altivec_register_operand\")\n \t(match_operand:DI 1 \"s5bit_cint_operand\"))]"}]}