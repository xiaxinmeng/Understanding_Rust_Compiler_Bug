{"sha": "c652a33260b19ac1ee3cd15cadb4b3499ac587f9", "node_id": "C_kwDOANBUbNoAKGM2NTJhMzMyNjBiMTlhYzFlZTNjZDE1Y2FkYjRiMzQ5OWFjNTg3Zjk", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-10-19T16:44:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-25T15:07:20Z"}, "message": "[Ada] Shutdown codepeer message\n\ngcc/ada/\n\n\t* libgnat/s-widthu.adb: Add pragma Annotate.", "tree": {"sha": "6047165429127db4142d50fa47714400c7442c88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6047165429127db4142d50fa47714400c7442c88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c652a33260b19ac1ee3cd15cadb4b3499ac587f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c652a33260b19ac1ee3cd15cadb4b3499ac587f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c652a33260b19ac1ee3cd15cadb4b3499ac587f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c652a33260b19ac1ee3cd15cadb4b3499ac587f9/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67397bb9888e72fe300746ee9c77b83ce367b733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67397bb9888e72fe300746ee9c77b83ce367b733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67397bb9888e72fe300746ee9c77b83ce367b733"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "fce8c7ad3e0c03a185606834c58a8c9c63ad5323", "filename": "gcc/ada/libgnat/s-widthu.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c652a33260b19ac1ee3cd15cadb4b3499ac587f9/gcc%2Fada%2Flibgnat%2Fs-widthu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c652a33260b19ac1ee3cd15cadb4b3499ac587f9/gcc%2Fada%2Flibgnat%2Fs-widthu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-widthu.adb?ref=c652a33260b19ac1ee3cd15cadb4b3499ac587f9", "patch": "@@ -134,10 +134,13 @@ begin\n          W := W + 1;\n          Pow := Pow * 10;\n \n-         pragma Loop_Variant (Decreases => T);\n          pragma Loop_Invariant (W in 3 .. Max_W + 3);\n          pragma Loop_Invariant (Pow = Big_10 ** (W - 2));\n          pragma Loop_Invariant (Big (T) = Big (T_Init) / Pow);\n+         pragma Loop_Variant (Decreases => T);\n+         pragma Annotate\n+           (CodePeer, False_Positive,\n+            \"validity check\", \"confusion on generated code\");\n       end loop;\n \n       declare"}]}