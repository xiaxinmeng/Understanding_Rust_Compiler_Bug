{"sha": "31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhZWFiZDNjNTFmNzk4YTdhM2NiZmFiNGJhY2JjZTk4MzQxNWFkOA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-09-16T22:56:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-09-16T22:56:32Z"}, "message": "Block forever on send/receive to/from nil channel.\n\nFrom-SVN: r178920", "tree": {"sha": "49f347d9773c306611f0d0b866ae9f0f9fa78147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49f347d9773c306611f0d0b866ae9f0f9fa78147"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/comments", "author": null, "committer": null, "parents": [{"sha": "e7f799cecc08fe69899b7f91e6e40744ce39b2eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f799cecc08fe69899b7f91e6e40744ce39b2eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f799cecc08fe69899b7f91e6e40744ce39b2eb"}], "stats": {"total": 71, "additions": 51, "deletions": 20}, "files": [{"sha": "d919de3e0d957eefbb15ca0850fed94cd1d3e6a7", "filename": "gcc/testsuite/go.test/test/chan/select3.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fchan%2Fselect3.go?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -58,15 +58,15 @@ func main() {\n \tclosedch := make(chan int)\n \tclose(closedch)\n \n-\t// sending/receiving from a nil channel outside a select panics\n-\ttestPanic(always, func() {\n+\t// sending/receiving from a nil channel blocks\n+\ttestBlock(always, func() {\n \t\tnilch <- 7\n \t})\n-\ttestPanic(always, func() {\n+\ttestBlock(always, func() {\n \t\t<-nilch\n \t})\n \n-\t// sending/receiving from a nil channel inside a select never panics\n+\t// sending/receiving from a nil channel inside a select is never selected\n \ttestPanic(never, func() {\n \t\tselect {\n \t\tcase nilch <- 7:"}, {"sha": "c3cc3e39879121209576e7742d7701200b077084", "filename": "libgo/runtime/chan.goc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fchan.goc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fchan.goc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fchan.goc?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -6,14 +6,16 @@ package runtime\n #include \"config.h\"\n #include \"channel.h\"\n \n+#define nil NULL\n+\n typedef _Bool bool;\n typedef unsigned char byte;\n typedef struct __go_channel chan;\n \n /* Do a channel receive with closed status.  */\n \n func chanrecv2(c *chan, val *byte) (received bool) {\n-\tuintptr_t element_size = c->element_type->__size;\n+\tuintptr_t element_size = c == nil ? 0 : c->element_type->__size;\n \tif (element_size > 8) {\n \t\treturn __go_receive_big(c, val, 0);\n \t} else {"}, {"sha": "9176c68f692f2f5cede8a17d8aa8e4cc2ddc4401", "filename": "libgo/runtime/channel.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fchannel.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fchannel.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fchannel.h?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -147,3 +147,6 @@ extern void __go_builtin_close (struct __go_channel *);\n extern int __go_chan_len (struct __go_channel *);\n \n extern int __go_chan_cap (struct __go_channel *);\n+\n+extern uintptr_t __go_select (uintptr_t, _Bool, struct __go_channel **,\n+\t\t\t      _Bool *);"}, {"sha": "d45e90af476d2281e66120db3ed4cb4021909906", "filename": "libgo/runtime/go-rec-big.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-rec-big.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-rec-big.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-rec-big.c?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -20,7 +20,10 @@ __go_receive_big (struct __go_channel *channel, void *val, _Bool for_select)\n   size_t offset;\n \n   if (channel == NULL)\n-    __go_panic_msg (\"receive from nil channel\");\n+    {\n+      /* Block forever.  */\n+      __go_select (0, 0, NULL, NULL);\n+    }\n \n   element_size = channel->element_type->__size;\n   alloc_size = (element_size + sizeof (uint64_t) - 1) / sizeof (uint64_t);"}, {"sha": "659ea1dc33db5da24d650ad812ccc4e1fb136c05", "filename": "libgo/runtime/go-rec-nb-big.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-rec-nb-big.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-rec-nb-big.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-rec-nb-big.c?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -18,6 +18,13 @@ __go_receive_nonblocking_big (struct __go_channel* channel, void *val,\n   size_t alloc_size;\n   size_t offset;\n \n+  if (channel == NULL)\n+    {\n+      if (closed != NULL)\n+\t*closed = 0;\n+      return 0;\n+    }\n+\n   element_size = channel->element_type->__size;\n   alloc_size = (element_size + sizeof (uint64_t) - 1) / sizeof (uint64_t);\n "}, {"sha": "054392009c311a5612a849033a2ead6e534a7c69", "filename": "libgo/runtime/go-rec-nb-small.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-rec-nb-small.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-rec-nb-small.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-rec-nb-small.c?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -97,6 +97,14 @@ __go_receive_nonblocking_small (struct __go_channel *channel)\n   uintptr_t element_size;\n   struct __go_receive_nonblocking_small ret;\n \n+  if (channel == NULL)\n+    {\n+      ret.__val = 0;\n+      ret.__success = 0;\n+      ret.__closed = 0;\n+      return ret;\n+    }\n+\n   element_size = channel->element_type->__size;\n   __go_assert (element_size <= sizeof (uint64_t));\n "}, {"sha": "d94763296941b631aa9e214f64cbc7575f7d283e", "filename": "libgo/runtime/go-rec-small.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-rec-small.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-rec-small.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-rec-small.c?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -270,7 +270,10 @@ __go_receive_small_closed (struct __go_channel *channel, _Bool for_select,\n   uint64_t ret;\n \n   if (channel == NULL)\n-    __go_panic_msg (\"receive from nil channel\");\n+    {\n+      /* Block forever.  */\n+      __go_select (0, 0, NULL, NULL);\n+    }\n \n   element_size = channel->element_type->__size;\n   __go_assert (element_size <= sizeof (uint64_t));"}, {"sha": "6f6693b6b54a61d3abba059a70a7cd3359e18d50", "filename": "libgo/runtime/go-reflect-chan.c", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-reflect-chan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-reflect-chan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-reflect-chan.c?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -45,18 +45,13 @@ chansend (struct __go_channel_type *ct, uintptr_t ch, uintptr_t val_i,\n   void *pv;\n \n   __go_assert (ct->__common.__code == GO_CHAN);\n-  __go_assert (__go_type_descriptors_equal (ct->__element_type,\n-\t\t\t\t\t    channel->element_type));\n \n-  if (channel == NULL)\n-    __go_panic_msg (\"send to nil channel\");\n-\n-  if (__go_is_pointer_type (channel->element_type))\n+  if (__go_is_pointer_type (ct->__element_type))\n     pv = &val_i;\n   else\n     pv = (void *) val_i;\n \n-  element_size = channel->element_type->__size;\n+  element_size = ct->__element_type->__size;\n   if (element_size <= sizeof (uint64_t))\n     {\n       union\n@@ -112,12 +107,10 @@ chanrecv (struct __go_channel_type *ct, uintptr_t ch, _Bool nb)\n   struct chanrecv_ret ret;\n \n   __go_assert (ct->__common.__code == GO_CHAN);\n-  __go_assert (__go_type_descriptors_equal (ct->__element_type,\n-\t\t\t\t\t    channel->element_type));\n \n-  element_size = channel->element_type->__size;\n+  element_size = ct->__element_type->__size;\n \n-  if (__go_is_pointer_type (channel->element_type))\n+  if (__go_is_pointer_type (ct->__element_type))\n     pv = &ret.val;\n   else\n     {"}, {"sha": "61d4a0f13d9247afa2c1abbf8e65dc12c80bcc20", "filename": "libgo/runtime/go-send-big.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-send-big.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-send-big.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-send-big.c?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -17,7 +17,10 @@ __go_send_big (struct __go_channel* channel, const void *val, _Bool for_select)\n   size_t offset;\n \n   if (channel == NULL)\n-    __go_panic_msg (\"send to nil channel\");\n+    {\n+      // Block forever.\n+      __go_select (0, 0, NULL, NULL);\n+    }\n \n   element_size = channel->element_type->__size;\n   alloc_size = (element_size + sizeof (uint64_t) - 1) / sizeof (uint64_t);"}, {"sha": "e039874ef9abe704b18b5b2c4d24bef6867dcde4", "filename": "libgo/runtime/go-send-nb-big.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-send-nb-big.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-send-nb-big.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-send-nb-big.c?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -15,6 +15,9 @@ __go_send_nonblocking_big (struct __go_channel* channel, const void *val)\n   size_t alloc_size;\n   size_t offset;\n \n+  if (channel == NULL)\n+    return 0;\n+\n   element_size = channel->element_type->__size;\n   alloc_size = (element_size + sizeof (uint64_t) - 1) / sizeof (uint64_t);\n "}, {"sha": "51914dbfa3c4591fb039af6f6e6f3de730025201", "filename": "libgo/runtime/go-send-nb-small.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-send-nb-small.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-send-nb-small.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-send-nb-small.c?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -93,6 +93,9 @@ __go_send_nonblocking_acquire (struct __go_channel *channel)\n _Bool\n __go_send_nonblocking_small (struct __go_channel *channel, uint64_t val)\n {\n+  if (channel == NULL)\n+    return 0;\n+\n   __go_assert (channel->element_type->__size <= sizeof (uint64_t));\n \n   if (!__go_send_nonblocking_acquire (channel))"}, {"sha": "25e3c82bd89e41b92d415980a89f41287b91b2b5", "filename": "libgo/runtime/go-send-small.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-send-small.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31aeabd3c51f798a7a3cbfab4bacbce983415ad8/libgo%2Fruntime%2Fgo-send-small.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-send-small.c?ref=31aeabd3c51f798a7a3cbfab4bacbce983415ad8", "patch": "@@ -145,7 +145,10 @@ void\n __go_send_small (struct __go_channel *channel, uint64_t val, _Bool for_select)\n {\n   if (channel == NULL)\n-    __go_panic_msg (\"send to nil channel\");\n+    {\n+      // Block forever.\n+      __go_select (0, 0, NULL, NULL);\n+    }\n \n   __go_assert (channel->element_type->__size <= sizeof (uint64_t));\n "}]}