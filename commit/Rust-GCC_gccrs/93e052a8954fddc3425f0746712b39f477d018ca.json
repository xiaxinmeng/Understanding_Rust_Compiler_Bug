{"sha": "93e052a8954fddc3425f0746712b39f477d018ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNlMDUyYTg5NTRmZGRjMzQyNWYwNzQ2NzEyYjM5ZjQ3N2QwMThjYQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-02-16T16:29:12Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-02-16T16:29:12Z"}, "message": "re PR c/28368 (-std=c89 doesn't warn about gcc's \"?:\" extension)\n\n2008-02-16  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR c/28368\n\t* doc/invoke.texi (-std): Clarify description of -std= and -ansi.\n\nFrom-SVN: r132367", "tree": {"sha": "f17f539fe93feab88a4c8e530a9da9c511db1b57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f17f539fe93feab88a4c8e530a9da9c511db1b57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93e052a8954fddc3425f0746712b39f477d018ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e052a8954fddc3425f0746712b39f477d018ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e052a8954fddc3425f0746712b39f477d018ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e052a8954fddc3425f0746712b39f477d018ca/comments", "author": null, "committer": null, "parents": [{"sha": "49309826a02f6b553b83ab4b071819b6da45f605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49309826a02f6b553b83ab4b071819b6da45f605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49309826a02f6b553b83ab4b071819b6da45f605"}], "stats": {"total": 53, "additions": 34, "deletions": 19}, "files": [{"sha": "6fc4d4b367af5a5e755e662fad0a5cce41152c6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e052a8954fddc3425f0746712b39f477d018ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e052a8954fddc3425f0746712b39f477d018ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93e052a8954fddc3425f0746712b39f477d018ca", "patch": "@@ -1,3 +1,8 @@\n+2008-02-16  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR c/28368\n+\t* doc/invoke.texi (-std): Clarify description of -std= and -ansi.\n+\n 2008-02-16  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n \t* config/m68k/t-rtems (M68K_MLIB_CPU): Add 5208, 5307, 5407, 5475"}, {"sha": "8c91dfdf22a5cf7ffd60bcfaa9d84692f69db6fa", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e052a8954fddc3425f0746712b39f477d018ca/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e052a8954fddc3425f0746712b39f477d018ca/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=93e052a8954fddc3425f0746712b39f477d018ca", "patch": "@@ -1335,12 +1335,31 @@ Determine the language standard. @xref{Standards,,Language Standards\n Supported by GCC}, for details of these standard versions.  This option\n is currently only supported when compiling C or C++. \n \n+The compiler can accept several base standards, such as @samp{c89} or\n+@samp{c++98}, and GNU dialects of those standards, such as\n+@samp{gnu89} or @samp{gnu++98}.  By specifing a base standard, the\n+compiler will accept all programs following that standard and those\n+using GNU extensions that do not contradict it.  For example,\n+@samp{-std=c89} turns off certain features of GCC that are\n+incompatible with ISO C90, such as the @code{asm} and @code{typeof}\n+keywords, but not other GNU extensions that do not have a meaning in\n+ISO C90, such as omitting the middle term of a @code{?:}\n+expression. On the other hand, by specifing a GNU dialect of a\n+standard, all features the compiler support are enabled, even when\n+those features change the meaning of the base standard and some\n+strict-conforming programs may be rejected.  The particular standard\n+is used by @option{-pedantic} to identify which features are GNU\n+extensions given that version of the standard. For example\n+@samp{-std=gnu89 -pedantic} would warn about C++ style @samp{//}\n+comments, while @samp{-std=gnu99 -pedantic} would not.\n+\n A value for this option must be provided; possible values are\n \n @table @samp\n @item c89\n @itemx iso9899:1990\n-ISO C90 (same as @option{-ansi}).\n+Support all ISO C90 programs (certain GNU extensions that conflict\n+with ISO C90 are disabled). Same as @option{-ansi} for C code.\n \n @item iso9899:199409\n ISO C90 as modified in amendment 1.\n@@ -1354,19 +1373,21 @@ ISO C99.  Note that this standard is not yet fully supported; see\n names @samp{c9x} and @samp{iso9899:199x} are deprecated.\n \n @item gnu89\n-Default, ISO C90 plus GNU extensions (including some C99 features).\n+GNU dialect of ISO C90 (including some C99 features). This\n+is the default for C code.\n \n @item gnu99\n @itemx gnu9x\n-ISO C99 plus GNU extensions.  When ISO C99 is fully implemented in GCC,\n+GNU dialect of ISO C99.  When ISO C99 is fully implemented in GCC,\n this will become the default.  The name @samp{gnu9x} is deprecated.\n \n @item c++98\n-The 1998 ISO C++ standard plus amendments.\n+The 1998 ISO C++ standard plus amendments. Same as @option{-ansi} for\n+C++ code.\n \n @item gnu++98\n-The same as @option{-std=c++98} plus GNU extensions.  This is the\n-default for C++ code.\n+GNU dialect of @option{-std=c++98}.  This is the default for\n+C++ code.\n \n @item c++0x\n The working draft of the upcoming ISO C++0x standard. This option\n@@ -1376,21 +1397,10 @@ enabled by this flag may be removed from future versions of GCC if it is\n not part of the C++0x standard.\n \n @item gnu++0x\n-The same as @option{-std=c++0x} plus GNU extensions. As with\n-@option{-std=c++0x}, this option enables experimental features that may\n-be removed in future versions of GCC.\n+GNU dialect of @option{-std=c++0x}. This option enables\n+experimental features that may be removed in future versions of GCC.\n @end table\n \n-Even when this option is not specified, you can still use some of the\n-features of newer standards in so far as they do not conflict with\n-previous C standards.  For example, you may use @code{__restrict__} even\n-when @option{-std=c99} is not specified.\n-\n-The @option{-std} options specifying some version of ISO C have the same\n-effects as @option{-ansi}, except that features that were not in ISO C90\n-but are in the specified version (for example, @samp{//} comments and\n-the @code{inline} keyword in ISO C99) are not disabled.\n-\n @item -fgnu89-inline\n @opindex fgnu89-inline\n The option @option{-fgnu89-inline} tells GCC to use the traditional"}]}