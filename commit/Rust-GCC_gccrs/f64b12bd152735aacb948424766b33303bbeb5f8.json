{"sha": "f64b12bd152735aacb948424766b33303bbeb5f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY0YjEyYmQxNTI3MzVhYWNiOTQ4NDI0NzY2YjMzMzAzYmJlYjVmOA==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2017-09-18T14:15:37Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2017-09-18T14:15:37Z"}, "message": "omp-offload.c (oacc_xform_loop): Enable SIMD vectorization on non-SIMT targets in acc vector loops.\n\n\tgcc/\n\t* omp-offload.c (oacc_xform_loop): Enable SIMD vectorization on\n\tnon-SIMT targets in acc vector loops.\n\nFrom-SVN: r252928", "tree": {"sha": "4d3be81611f2dd90169c0e319025db2a2a70f174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d3be81611f2dd90169c0e319025db2a2a70f174"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f64b12bd152735aacb948424766b33303bbeb5f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64b12bd152735aacb948424766b33303bbeb5f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f64b12bd152735aacb948424766b33303bbeb5f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64b12bd152735aacb948424766b33303bbeb5f8/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c22e690457a1adcb16c599416f4aa9fa83fc353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c22e690457a1adcb16c599416f4aa9fa83fc353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c22e690457a1adcb16c599416f4aa9fa83fc353"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "eb028010efa2f7cd99afbd7607b4b9b14085cffc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64b12bd152735aacb948424766b33303bbeb5f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64b12bd152735aacb948424766b33303bbeb5f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f64b12bd152735aacb948424766b33303bbeb5f8", "patch": "@@ -1,3 +1,8 @@\n+2017-09-18  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* omp-offload.c (oacc_xform_loop): Enable SIMD vectorization on\n+\tnon-SIMT targets in acc vector loops.\n+\n 2017-09-18  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* configure.ac: Add arc and check if assembler supports gdwarf2."}, {"sha": "9d5b8bef649cf5193e5a66461a456fe7ba82f71a", "filename": "gcc/omp-offload.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f64b12bd152735aacb948424766b33303bbeb5f8/gcc%2Fomp-offload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f64b12bd152735aacb948424766b33303bbeb5f8/gcc%2Fomp-offload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-offload.c?ref=f64b12bd152735aacb948424766b33303bbeb5f8", "patch": "@@ -51,6 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"stringpool.h\"\n #include \"attribs.h\"\n+#include \"cfgloop.h\"\n \n /* Describe the OpenACC looping structure of a function.  The entire\n    function is held in a 'NULL' loop.  */\n@@ -370,6 +371,30 @@ oacc_xform_loop (gcall *call)\n       break;\n \n     case IFN_GOACC_LOOP_OFFSET:\n+      /* Enable vectorization on non-SIMT targets.  */\n+      if (!targetm.simt.vf\n+\t  && outer_mask == GOMP_DIM_MASK (GOMP_DIM_VECTOR)\n+\t  /* If not -fno-tree-loop-vectorize, hint that we want to vectorize\n+\t     the loop.  */\n+\t  && (flag_tree_loop_vectorize\n+\t      || !global_options_set.x_flag_tree_loop_vectorize))\n+\t{\n+\t  basic_block bb = gsi_bb (gsi);\n+\t  struct loop *parent = bb->loop_father;\n+\t  struct loop *body = parent->inner;\n+\n+\t  parent->force_vectorize = true;\n+\t  parent->safelen = INT_MAX;\n+\n+\t  /* \"Chunking loops\" may have inner loops.  */\n+\t  if (parent->inner)\n+\t    {\n+\t      body->force_vectorize = true;\n+\t      body->safelen = INT_MAX;\n+\t    }\n+\n+\t  cfun->has_force_vectorize_loops = true;\n+\t}\n       if (striding)\n \t{\n \t  r = oacc_thread_numbers (true, mask, &seq);"}]}