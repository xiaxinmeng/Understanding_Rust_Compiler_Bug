{"sha": "b8dfbe1ea53e170d62f90f696d40d27faf060183", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhkZmJlMWVhNTNlMTcwZDYyZjkwZjY5NmQ0MGQyN2ZhZjA2MDE4Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T13:29:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T13:29:41Z"}, "message": "[multiple changes]\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, sem_disp.adb, usage.adb: Minor reformatting\n\n2009-11-30  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* gnat_ugn.texi: Minor editing.\n\n2009-11-30  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-nmsc.adb (Search_Directories): when -eL was not specified, assume\n\tthat no directory matches the naming scheme for sources.\n\nFrom-SVN: r154795", "tree": {"sha": "7ed3c6ec39b1e711704c661c80402e8d4d2c8b40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ed3c6ec39b1e711704c661c80402e8d4d2c8b40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8dfbe1ea53e170d62f90f696d40d27faf060183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8dfbe1ea53e170d62f90f696d40d27faf060183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8dfbe1ea53e170d62f90f696d40d27faf060183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8dfbe1ea53e170d62f90f696d40d27faf060183/comments", "author": null, "committer": null, "parents": [{"sha": "f18b55bdc2a180fa4a981ceaa8604660d6fa958b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18b55bdc2a180fa4a981ceaa8604660d6fa958b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18b55bdc2a180fa4a981ceaa8604660d6fa958b"}], "stats": {"total": 67, "additions": 45, "deletions": 22}, "files": [{"sha": "9d9ddb8a214d6b045619ff45d054323aca429d1d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b8dfbe1ea53e170d62f90f696d40d27faf060183", "patch": "@@ -1,3 +1,16 @@\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, sem_disp.adb, usage.adb: Minor reformatting\n+\n+2009-11-30  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* gnat_ugn.texi: Minor editing.\n+\n+2009-11-30  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-nmsc.adb (Search_Directories): when -eL was not specified, assume\n+\tthat no directory matches the naming scheme for sources.\n+\n 2009-11-30  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj.adb, prj.ads, prj-nmsc.adb (Has_Multi_Unit_Sources): New field in"}, {"sha": "c8b83101a9c46b754dd6c7294f59e245d293f5a9", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b8dfbe1ea53e170d62f90f696d40d27faf060183", "patch": "@@ -20858,28 +20858,30 @@ Turn off the check for a specified rule with the specified parameter, if any.\n \n @cindex @option{-from} (@command{gnatcheck})\n @item -from=@var{rule_option_filename}\n-Read the rule options from the text file @var{rule_option_filename}, referred as\n-``rule file'' below.\n+Read the rule options from the text file @var{rule_option_filename}, referred\n+to as a ``coding standard file'' below.\n \n @end table\n \n @noindent\n The default behavior is that all the rule checks are disabled.\n \n-A rule file is a text file containing a set of rule options.\n-@cindex Rule file (for @code{gnatcheck})\n+A coding standard file is a text file that contains a set of rule options\n+described above.\n+@cindex Coding standard file (for @code{gnatcheck})\n The file may contain empty lines and Ada-style comments (comment\n-lines and end-of-line comments). The rule file has free format; that is,\n-you do not have to start a new rule option on a new line.\n+lines and end-of-line comments). There can be several rule options on a\n+single line (separated by a space).\n \n-A rule file may contain other @option{-from=@var{rule_option_filename}}\n+A coding standard file may reference other coding standard files by including\n+other @option{-from=@var{rule_option_filename}}\n options, each such option being replaced with the content of the\n-corresponding rule file during the rule files processing. In case a\n+corresponding coding standard file during processing. In case a\n cycle is detected (that is, @file{@var{rule_file_1}} reads rule options\n from @file{@var{rule_file_2}}, and @file{@var{rule_file_2}} reads\n (directly or indirectly) rule options from @file{@var{rule_file_1}}),\n-the processing of rule files is interrupted and a part of their content\n-is ignored.\n+the processing of coding standard files is interrupted and a part of their\n+content is ignored.\n \n \n @node Adding the Results of Compiler Checks to gnatcheck Output"}, {"sha": "1f7c5e493337c70ee974cfa789fd95644660e0e9", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=b8dfbe1ea53e170d62f90f696d40d27faf060183", "patch": "@@ -6833,12 +6833,15 @@ package body Prj.Nmsc is\n \n                      exit when Last = 0;\n \n-                     --  ??? Duplicate system call here, we just did a a\n-                     --  similar one. Maybe Ada.Directories would be more\n-                     --  appropriate here.\n-\n-                     if Is_Regular_File\n-                          (Source_Directory & Name (1 .. Last))\n+                     --  In fast project loading mode (without -eL), the user\n+                     --  guarantees that no directory has a name which is a\n+                     --  valid source name, so we can avoid doing a system call\n+                     --  here. This provides a very significant speed up on\n+                     --  slow file systems (remote files for instance).\n+\n+                     if not Opt.Follow_Links_For_Files\n+                       or else Is_Regular_File\n+                                 (Source_Directory & Name (1 .. Last))\n                      then\n                         if Current_Verbosity = High then\n                            Write_Str  (\"   Checking \");"}, {"sha": "1717aec7afc9d3bcc0c299c96263f4479ebf44f8", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b8dfbe1ea53e170d62f90f696d40d27faf060183", "patch": "@@ -12511,8 +12511,8 @@ package body Sem_Ch3 is\n       then\n          if No (Actual_Subp) then\n             Set_Alias (New_Subp, Visible_Subp);\n-            Set_Is_Abstract_Subprogram\n-              (New_Subp, True);\n+            Set_Is_Abstract_Subprogram (New_Subp, True);\n+\n          else\n             --  If this is a derivation for an instance of a formal derived\n             --  type, abstractness comes from the primitive operation of the"}, {"sha": "9c9da627ee09d6f2525b0c9439b55ff877440541", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=b8dfbe1ea53e170d62f90f696d40d27faf060183", "patch": "@@ -1008,6 +1008,7 @@ package body Sem_Disp is\n            and then not Is_Visibly_Controlled (Tagged_Type)\n          then\n             Set_Is_Overriding_Operation (Subp, False);\n+\n             --  If the subprogram specification carries an overriding\n             --  indicator, no need for the warning: it is either redundant,\n             --  or else an error will be reported.\n@@ -1018,10 +1019,14 @@ package body Sem_Disp is\n                   or else Must_Not_Override (Parent (Subp)))\n             then\n                null;\n+\n+            --  Here we need the warning\n+\n             else\n                Error_Msg_NE\n                  (\"operation does not override inherited&?\", Subp, Subp);\n             end if;\n+\n          else\n             Override_Dispatching_Operation (Tagged_Type, Old_Subp, Subp);\n             Set_Is_Overriding_Operation (Subp);"}, {"sha": "c5caa463992b4be6dcf8bbca463fb5c4f366844f", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8dfbe1ea53e170d62f90f696d40d27faf060183/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=b8dfbe1ea53e170d62f90f696d40d27faf060183", "patch": "@@ -38,10 +38,10 @@ procedure Usage is\n \n    procedure Write_Switch_Char (Sw : String; Prefix : String := \"gnat\");\n    --  Output two spaces followed by the switch character minus followed\n-   --  Prefix, followed by the string given as the argument, and then\n-   --  enough blanks to tab to column 13, i.e. assuming Sw is not longer\n-   --  than 5 characters, the maximum allowed, Write_Switch_Char will\n-   --  always output exactly 12 characters.\n+   --  Prefix, followed by the string given as the argument, and then enough\n+   --  blanks to tab to column 13, i.e. assuming Sw is not longer than 5\n+   --  characters, the maximum allowed, Write_Switch_Char will always output\n+   --  exactly 12 characters.\n \n    -----------------------\n    -- Write_Switch_Char --"}]}