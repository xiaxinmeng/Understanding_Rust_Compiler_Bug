{"sha": "ea9a39e63eba1ba72aa3608317d1c40ae6bcef55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE5YTM5ZTYzZWJhMWJhNzJhYTM2MDgzMTdkMWM0MGFlNmJjZWY1NQ==", "commit": {"author": {"name": "Pat Haugen", "email": "pthaugen@linux.ibm.com", "date": "2021-03-31T19:37:24Z"}, "committer": {"name": "Pat Haugen", "email": "pthaugen@linux.ibm.com", "date": "2021-03-31T19:37:24Z"}, "message": "Update prefixed attribute for Power10.\n\nThis patch creates a new attribute, \"maybe_prefixed\", which is used to mark\nthose instructions that may have a prefixed form. The existing \"prefixed\"\nattribute is now used to mark all instructions that are prefixed form.\n\n2021-03-31  Pat Haugen  <pthaugen@linux.ibm.com>\n\ngcc/\n\tPR target/99133\n\t* config/rs6000/altivec.md (xxspltiw_v4si, xxspltiw_v4sf_inst,\n\txxspltidp_v2df_inst, xxsplti32dx_v4si_inst, xxsplti32dx_v4sf_inst,\n\txxblend_<mode>, xxpermx_inst, xxeval): Mark prefixed.\n\t* config/rs6000/mma.md (mma_<vvi4i4i8>, mma_<avvi4i4i8>,\n\tmma_<vvi4i4i2>, mma_<avvi4i4i2>, mma_<vvi4i4>, mma_<avvi4i4>,\n\tmma_<pvi4i2>, mma_<apvi4i2>, mma_<vvi4i4i4>, mma_<avvi4i4i4>):\n\tLikewise.\n\t* config/rs6000/rs6000.c (rs6000_final_prescan_insn): Adjust test.\n\t* config/rs6000/rs6000.md (define_attr \"maybe_prefixed\"): New.\n\t(define_attr \"prefixed\"): Update initializer.", "tree": {"sha": "bc8628eaf7888f3631e1c6aa97d11cf0dfc1b87f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc8628eaf7888f3631e1c6aa97d11cf0dfc1b87f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55/comments", "author": null, "committer": null, "parents": [{"sha": "4b33c5aaab9e863da162942ab8bcd54070b705af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b33c5aaab9e863da162942ab8bcd54070b705af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b33c5aaab9e863da162942ab8bcd54070b705af"}], "stats": {"total": 77, "additions": 52, "deletions": 25}, "files": [{"sha": "1351dafbc41d4b6b372ece34b6bedbcffcd4a99f", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=ea9a39e63eba1ba72aa3608317d1c40ae6bcef55", "patch": "@@ -826,7 +826,8 @@\n \t\t     UNSPEC_XXSPLTIW))]\n  \"TARGET_POWER10\"\n  \"xxspltiw %x0,%1\"\n- [(set_attr \"type\" \"vecsimple\")])\n+ [(set_attr \"type\" \"vecsimple\")\n+  (set_attr \"prefixed\" \"yes\")])\n \n (define_expand \"xxspltiw_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=wa\")\n@@ -845,7 +846,8 @@\n \t\t     UNSPEC_XXSPLTIW))]\n  \"TARGET_POWER10\"\n  \"xxspltiw %x0,%1\"\n- [(set_attr \"type\" \"vecsimple\")])\n+ [(set_attr \"type\" \"vecsimple\")\n+  (set_attr \"prefixed\" \"yes\")])\n \n (define_expand \"xxspltidp_v2df\"\n   [(set (match_operand:V2DF 0 \"register_operand\" )\n@@ -864,7 +866,8 @@\n \t\t     UNSPEC_XXSPLTID))]\n   \"TARGET_POWER10\"\n   \"xxspltidp %x0,%1\"\n-  [(set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_expand \"xxsplti32dx_v4si\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=wa\")\n@@ -893,7 +896,8 @@\n \t\t     UNSPEC_XXSPLTI32DX))]\n   \"TARGET_POWER10\"\n   \"xxsplti32dx %x0,%2,%3\"\n-  [(set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_expand \"xxsplti32dx_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=wa\")\n@@ -921,7 +925,8 @@\n \t\t     UNSPEC_XXSPLTI32DX))]\n   \"TARGET_POWER10\"\n   \"xxsplti32dx %x0,%2,%3\"\n-  [(set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"xxblend_<mode>\"\n   [(set (match_operand:VM3 0 \"register_operand\" \"=wa\")\n@@ -931,7 +936,8 @@\n \t\t    UNSPEC_XXBLEND))]\n   \"TARGET_POWER10\"\n   \"xxblendv<VM3_char> %x0,%x1,%x2,%x3\"\n-  [(set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_expand \"xxpermx\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"+wa\")\n@@ -975,7 +981,8 @@\n \t\t     UNSPEC_XXPERMX))]\n   \"TARGET_POWER10\"\n   \"xxpermx %x0,%x1,%x2,%x3,%4\"\n-  [(set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_expand \"vstrir_<mode>\"\n   [(set (match_operand:VIshort 0 \"altivec_register_operand\")\n@@ -3623,7 +3630,8 @@\n \t\t     UNSPEC_XXEVAL))]\n    \"TARGET_POWER10\"\n    \"xxeval %0,%1,%2,%3,%4\"\n-   [(set_attr \"type\" \"vecsimple\")])\n+   [(set_attr \"type\" \"vecsimple\")\n+    (set_attr \"prefixed\" \"yes\")])\n \n (define_expand \"vec_unpacku_hi_v16qi\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")"}, {"sha": "1f6fc03d2ac26f1def1aa0c428a6e79dd088e312", "filename": "gcc/config/rs6000/mma.md", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55/gcc%2Fconfig%2Frs6000%2Fmma.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55/gcc%2Fconfig%2Frs6000%2Fmma.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmma.md?ref=ea9a39e63eba1ba72aa3608317d1c40ae6bcef55", "patch": "@@ -540,7 +540,8 @@\n \t\t    MMA_VVI4I4I8))]\n   \"TARGET_MMA\"\n   \"<vvi4i4i8> %A0,%x1,%x2,%3,%4,%5\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<avvi4i4i8>\"\n   [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n@@ -553,7 +554,8 @@\n \t\t    MMA_AVVI4I4I8))]\n   \"TARGET_MMA\"\n   \"<avvi4i4i8> %A0,%x2,%x3,%4,%5,%6\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<vvi4i4i2>\"\n   [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n@@ -565,7 +567,8 @@\n \t\t    MMA_VVI4I4I2))]\n   \"TARGET_MMA\"\n   \"<vvi4i4i2> %A0,%x1,%x2,%3,%4,%5\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<avvi4i4i2>\"\n   [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n@@ -578,7 +581,8 @@\n \t\t    MMA_AVVI4I4I2))]\n   \"TARGET_MMA\"\n   \"<avvi4i4i2> %A0,%x2,%x3,%4,%5,%6\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<vvi4i4>\"\n   [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n@@ -589,7 +593,8 @@\n \t\t    MMA_VVI4I4))]\n   \"TARGET_MMA\"\n   \"<vvi4i4> %A0,%x1,%x2,%3,%4\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<avvi4i4>\"\n   [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n@@ -601,7 +606,8 @@\n \t\t    MMA_AVVI4I4))]\n   \"TARGET_MMA\"\n   \"<avvi4i4> %A0,%x2,%x3,%4,%5\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<pvi4i2>\"\n   [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n@@ -612,7 +618,8 @@\n \t\t    MMA_PVI4I2))]\n   \"TARGET_MMA\"\n   \"<pvi4i2> %A0,%x1,%x2,%3,%4\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<apvi4i2>\"\n   [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n@@ -624,7 +631,8 @@\n \t\t    MMA_APVI4I2))]\n   \"TARGET_MMA\"\n   \"<apvi4i2> %A0,%x2,%x3,%4,%5\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<vvi4i4i4>\"\n   [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n@@ -636,7 +644,8 @@\n \t\t    MMA_VVI4I4I4))]\n   \"TARGET_MMA\"\n   \"<vvi4i4i4> %A0,%x1,%x2,%3,%4,%5\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])\n \n (define_insn \"mma_<avvi4i4i4>\"\n   [(set (match_operand:XO 0 \"fpr_reg_operand\" \"=&d\")\n@@ -649,4 +658,5 @@\n \t\t    MMA_AVVI4I4I4))]\n   \"TARGET_MMA\"\n   \"<avvi4i4i4> %A0,%x2,%x3,%4,%5,%6\"\n-  [(set_attr \"type\" \"mma\")])\n+  [(set_attr \"type\" \"mma\")\n+   (set_attr \"prefixed\" \"yes\")])"}, {"sha": "befab53031c664166cecffb086f67c147f0d7a46", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ea9a39e63eba1ba72aa3608317d1c40ae6bcef55", "patch": "@@ -26396,7 +26396,9 @@ static bool prepend_p_to_next_insn;\n void\n rs6000_final_prescan_insn (rtx_insn *insn, rtx [], int)\n {\n-  prepend_p_to_next_insn = (get_attr_prefixed (insn) != PREFIXED_NO);\n+  prepend_p_to_next_insn = (get_attr_maybe_prefixed (insn)\n+\t\t\t    == MAYBE_PREFIXED_YES\n+\t\t\t    && get_attr_prefixed (insn) == PREFIXED_YES);\n   return;\n }\n "}, {"sha": "c8cdc42533c1af749981b63578b9906e7872dd8e", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9a39e63eba1ba72aa3608317d1c40ae6bcef55/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=ea9a39e63eba1ba72aa3608317d1c40ae6bcef55", "patch": "@@ -264,15 +264,22 @@\n (define_attr \"cannot_copy\" \"no,yes\" (const_string \"no\"))\n \n \n-;; Whether an insn is a prefixed insn, and an initial 'p' should be printed\n-;; before the instruction.  A prefixed instruction has a prefix instruction\n-;; word that extends the immediate value of the instructions from 12-16 bits to\n-;; 34 bits.  The macro ASM_OUTPUT_OPCODE emits a leading 'p' for prefixed\n-;; insns.  The default \"length\" attribute will also be adjusted by default to\n+;; Whether this insn has a prefixed form and a non-prefixed form.\n+(define_attr \"maybe_prefixed\" \"no,yes\"\n+  (if_then_else (eq_attr \"type\" \"load,fpload,vecload,store,fpstore,vecstore,\n+  \t\t\t\t integer,add\")\n+\t\t(const_string \"yes\")\n+\t\t(const_string \"no\")))\n+\n+;; Whether an insn is a prefixed insn.  A prefixed instruction has a prefix\n+;; instruction word that conveys additional information such as a larger\n+;; immediate, additional operands, etc., in addition to the normal instruction\n+;; word.  The default \"length\" attribute will also be adjusted by default to\n ;; be 12 bytes.\n (define_attr \"prefixed\" \"no,yes\"\n   (cond [(ior (match_test \"!TARGET_PREFIXED\")\n-\t      (match_test \"!NONJUMP_INSN_P (insn)\"))\n+\t      (match_test \"!NONJUMP_INSN_P (insn)\")\n+\t      (eq_attr \"maybe_prefixed\" \"no\"))\n \t (const_string \"no\")\n \n \t (eq_attr \"type\" \"load,fpload,vecload\")"}]}