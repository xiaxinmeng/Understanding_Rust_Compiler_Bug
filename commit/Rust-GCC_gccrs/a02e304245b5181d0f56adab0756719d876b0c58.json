{"sha": "a02e304245b5181d0f56adab0756719d876b0c58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAyZTMwNDI0NWI1MTgxZDBmNTZhZGFiMDc1NjcxOWQ4NzZiMGM1OA==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2020-11-25T22:06:13Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2020-11-26T00:58:01Z"}, "message": "[PR97983] LRA: Use the right emit func for putting insn in the destination BB.\n\ngcc/\n\n2020-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR bootstrap/97983\n\t* lra.c (lra_process_new_insns): Use emit_insn_before_noloc or\n\temit_insn_after_noloc with the destination BB.", "tree": {"sha": "a62e4f3caac81a76049ee70f399d7bbd165d0031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a62e4f3caac81a76049ee70f399d7bbd165d0031"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a02e304245b5181d0f56adab0756719d876b0c58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a02e304245b5181d0f56adab0756719d876b0c58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a02e304245b5181d0f56adab0756719d876b0c58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a02e304245b5181d0f56adab0756719d876b0c58/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "360258daf5d8d56fa4e1707aef27028546039401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360258daf5d8d56fa4e1707aef27028546039401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/360258daf5d8d56fa4e1707aef27028546039401"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a79213e32e0dbba9e024b5f3825648e0ecbc2824", "filename": "gcc/lra.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a02e304245b5181d0f56adab0756719d876b0c58/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a02e304245b5181d0f56adab0756719d876b0c58/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=a02e304245b5181d0f56adab0756719d876b0c58", "patch": "@@ -1908,13 +1908,9 @@ lra_process_new_insns (rtx_insn *insn, rtx_insn *before, rtx_insn *after,\n \t\t  tmp = NEXT_INSN (tmp);\n \t\tif (NOTE_INSN_BASIC_BLOCK_P (tmp))\n \t\t  tmp = NEXT_INSN (tmp);\n-\t\tfor (curr = tmp; curr != NULL; curr = NEXT_INSN (curr))\n-\t\t  if (INSN_P (curr))\n-\t\t    break;\n \t\t/* Do not put reload insns if it is the last BB\n-\t\t   without actual insns.  In this case the reload insns\n-\t\t   can get null BB after emitting.  */\n-\t\tif (curr == NULL)\n+\t\t   without actual insns.  */\n+\t\tif (tmp == NULL)\n \t\t  continue;\n \t\tstart_sequence ();\n \t\tfor (curr = after; curr != NULL_RTX; curr = NEXT_INSN (curr))\n@@ -1927,7 +1923,11 @@ lra_process_new_insns (rtx_insn *insn, rtx_insn *before, rtx_insn *after,\n \t\t\t     e->dest->index);\n \t\t    dump_rtl_slim (lra_dump_file, copy, NULL, -1, 0);\n \t\t  }\n-\t\temit_insn_before (copy, tmp);\n+\t\t/* Use the right emit func for setting up BB_END/BB_HEAD: */\n+\t\tif (BB_END (e->dest) == PREV_INSN (tmp))\n+\t\t  emit_insn_after_noloc (copy, PREV_INSN (tmp), e->dest);\n+\t\telse\n+\t\t  emit_insn_before_noloc (copy, tmp, e->dest);\n \t\tpush_insns (last, PREV_INSN (copy));\n \t\tsetup_sp_offset (copy, last);\n \t\t/* We can ignore BB live info here as it and reg notes"}]}