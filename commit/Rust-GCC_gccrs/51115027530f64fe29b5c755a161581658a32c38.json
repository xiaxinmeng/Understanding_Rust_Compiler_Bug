{"sha": "51115027530f64fe29b5c755a161581658a32c38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTExMTUwMjc1MzBmNjRmZTI5YjVjNzU1YTE2MTU4MTY1OGEzMmMzOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-10-11T02:26:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-10-11T02:26:33Z"}, "message": "re PR c++/63194 (ICE in maybe_explain_implicit_delete, at cp/method.c:1552)\n\n\tPR c++/63194\n\t* method.c (defaulted_late_check): Call maybe_instantiate_noexcept.\n\nFrom-SVN: r216114", "tree": {"sha": "b2ac8f947c880b8f62ab85ef2a928b7a19efe354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2ac8f947c880b8f62ab85ef2a928b7a19efe354"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51115027530f64fe29b5c755a161581658a32c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51115027530f64fe29b5c755a161581658a32c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51115027530f64fe29b5c755a161581658a32c38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51115027530f64fe29b5c755a161581658a32c38/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9a6ba678efb79a3a84deae3e4f22678bb55c31f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a6ba678efb79a3a84deae3e4f22678bb55c31f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9a6ba678efb79a3a84deae3e4f22678bb55c31f"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "acdb354816c39476c97721f5193e51a073f2efb5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51115027530f64fe29b5c755a161581658a32c38/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51115027530f64fe29b5c755a161581658a32c38/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=51115027530f64fe29b5c755a161581658a32c38", "patch": "@@ -1,5 +1,8 @@\n 2014-10-10  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/63194\n+\t* method.c (defaulted_late_check): Call maybe_instantiate_noexcept.\n+\n \t* method.c (implicitly_declare_fn): Handle deleted lambda default\n \tctor and copy assop here.\n \t* class.c (check_bases_and_members): Not here."}, {"sha": "418ed8874d09d0f76f3659b828f5b2dd86630a16", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51115027530f64fe29b5c755a161581658a32c38/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51115027530f64fe29b5c755a161581658a32c38/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=51115027530f64fe29b5c755a161581658a32c38", "patch": "@@ -1979,6 +1979,7 @@ defaulted_late_check (tree fn)\n      is explicitly defaulted on its first declaration, (...) it is\n      implicitly considered to have the same exception-specification as if\n      it had been implicitly declared.  */\n+  maybe_instantiate_noexcept (fn);\n   tree fn_spec = TYPE_RAISES_EXCEPTIONS (TREE_TYPE (fn));\n   if (!fn_spec)\n     {"}, {"sha": "e79b7863d723c33539a9eb6678748b1e3cb50e9c", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept25.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51115027530f64fe29b5c755a161581658a32c38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51115027530f64fe29b5c755a161581658a32c38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept25.C?ref=51115027530f64fe29b5c755a161581658a32c38", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/63194\n+// { dg-do compile { target c++11 } }\n+\n+template <int>\n+class A {\n+ public:\n+  A() noexcept(noexcept(0)) = default;\n+};\n+class B {\n+  A<0> m_points;\n+};\n+void fn1(A<0>, A<0>) { B(); }"}]}