{"sha": "20eb7a1891cfd7fa85295a236cebe0322d041edd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBlYjdhMTg5MWNmZDdmYTg1Mjk1YTIzNmNlYmUwMzIyZDA0MWVkZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-16T07:32:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-16T07:32:44Z"}, "message": "c++: Fix up handling of structured bindings in extract_locals_r [PR99833]\n\nThe following testcase ICEs in tsubst_decomp_names because the assumptions\nthat the structured binding artificial var is followed in DECL_CHAIN by\nthe corresponding structured binding vars is violated.\nI've tracked it to extract_locals* which is done for the constexpr\nIF_STMT.  extract_locals_r when it sees a DECL_EXPR adds that decl\ninto a hash set so that such decls aren't returned from extract_locals*,\nbut in the case of a structured binding that just means the artificial var\nand not the vars corresponding to structured binding identifiers.\nThe following patch fixes it by pushing not just the artificial var\nfor structured bindings but also the other vars.\n\n2021-04-16  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/99833\n\t* pt.c (extract_locals_r): When handling DECL_EXPR of a structured\n\tbinding, add to data.internal also all corresponding structured\n\tbinding decls.\n\n\t* g++.dg/cpp1z/pr99833.C: New test.\n\t* g++.dg/cpp2a/pr99833.C: New test.", "tree": {"sha": "8295c3ebe8356c2f3cb3b7fefb7c290f811dc355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8295c3ebe8356c2f3cb3b7fefb7c290f811dc355"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20eb7a1891cfd7fa85295a236cebe0322d041edd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20eb7a1891cfd7fa85295a236cebe0322d041edd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20eb7a1891cfd7fa85295a236cebe0322d041edd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20eb7a1891cfd7fa85295a236cebe0322d041edd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76c7e7d6b003a17d183d0571bf9b34c691819d25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76c7e7d6b003a17d183d0571bf9b34c691819d25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76c7e7d6b003a17d183d0571bf9b34c691819d25"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "19fdafa4c43c8232bedd5beb9a717c9bdb166a86", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20eb7a1891cfd7fa85295a236cebe0322d041edd/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20eb7a1891cfd7fa85295a236cebe0322d041edd/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=20eb7a1891cfd7fa85295a236cebe0322d041edd", "patch": "@@ -12830,7 +12830,27 @@ extract_locals_r (tree *tp, int */*walk_subtrees*/, void *data_)\n     tp = &TYPE_NAME (*tp);\n \n   if (TREE_CODE (*tp) == DECL_EXPR)\n-    data.internal.add (DECL_EXPR_DECL (*tp));\n+    {\n+      tree decl = DECL_EXPR_DECL (*tp);\n+      data.internal.add (decl);\n+      if (VAR_P (decl)\n+\t  && DECL_DECOMPOSITION_P (decl)\n+\t  && TREE_TYPE (decl) != error_mark_node)\n+\t{\n+\t  gcc_assert (DECL_NAME (decl) == NULL_TREE);\n+\t  for (tree decl2 = DECL_CHAIN (decl);\n+\t       decl2\n+\t       && VAR_P (decl2)\n+\t       && DECL_DECOMPOSITION_P (decl2)\n+\t       && DECL_NAME (decl2)\n+\t       && TREE_TYPE (decl2) != error_mark_node;\n+\t       decl2 = DECL_CHAIN (decl2))\n+\t    {\n+\t      gcc_assert (DECL_DECOMP_BASE (decl2) == decl);\n+\t      data.internal.add (decl2);\n+\t    }\n+\t}\n+    }\n   else if (TREE_CODE (*tp) == LAMBDA_EXPR)\n     {\n       /* Since we defer implicit capture, look in the parms and body.  */"}, {"sha": "f7c995887f8e46f6b02caf375b8296c6d9016b00", "filename": "gcc/testsuite/g++.dg/cpp1z/pr99833.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20eb7a1891cfd7fa85295a236cebe0322d041edd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr99833.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20eb7a1891cfd7fa85295a236cebe0322d041edd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr99833.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr99833.C?ref=20eb7a1891cfd7fa85295a236cebe0322d041edd", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/99833\n+// { dg-do compile { target c++17 } }\n+\n+struct S { int a, b; };\n+template <class>\n+void\n+foo ()\n+{\n+  [](auto d) { if constexpr (auto [a, b]{d}; sizeof (a) > 0) a++; } (S{});\n+}\n+template void foo<S> ();"}, {"sha": "33230535e102a3a94683d2c464f940aa645d7edc", "filename": "gcc/testsuite/g++.dg/cpp2a/pr99833.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20eb7a1891cfd7fa85295a236cebe0322d041edd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fpr99833.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20eb7a1891cfd7fa85295a236cebe0322d041edd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fpr99833.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fpr99833.C?ref=20eb7a1891cfd7fa85295a236cebe0322d041edd", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/99833\n+// { dg-do compile { target c++20 } }\n+\n+#include <tuple>\n+\n+auto f(auto&& x)\n+{\n+  [&](auto...) {\n+    auto y = std::tuple{ \"what's happening here?\", x };\n+    if constexpr (auto [_, z] = y; requires { z; })\n+      return;\n+  }();\n+}\n+\n+int main()\n+{\n+  f(42);\n+}"}]}