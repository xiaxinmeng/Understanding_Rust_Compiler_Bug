{"sha": "d9a3647a22f7a446ab6d1699deeff2779790090b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlhMzY0N2EyMmY3YTQ0NmFiNmQxNjk5ZGVlZmYyNzc5NzkwMDkwYg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2013-02-13T21:09:34Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2013-02-13T21:09:34Z"}, "message": "hashtable_policy.h (_Hash_code_base): Restore default constructor protected.\n\n2013-02-13  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/bits/hashtable_policy.h (_Hash_code_base): Restore\n\tdefault constructor protected.\n\t* include/bits/hashtable.h: static assert that _Hash_code_base has\n\ta default constructor available through inheritance.\n\nFrom-SVN: r196030", "tree": {"sha": "3f249c05c448b1fb49af8d73b389869eeb0bc43c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f249c05c448b1fb49af8d73b389869eeb0bc43c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9a3647a22f7a446ab6d1699deeff2779790090b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a3647a22f7a446ab6d1699deeff2779790090b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9a3647a22f7a446ab6d1699deeff2779790090b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9a3647a22f7a446ab6d1699deeff2779790090b/comments", "author": null, "committer": null, "parents": [{"sha": "c4bfe8bfdb11a5fe0734b84a3c60b4db312b22f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bfe8bfdb11a5fe0734b84a3c60b4db312b22f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bfe8bfdb11a5fe0734b84a3c60b4db312b22f1"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "338d5d7cae037020c075a427daf6f4983cf804df", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3647a22f7a446ab6d1699deeff2779790090b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3647a22f7a446ab6d1699deeff2779790090b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d9a3647a22f7a446ab6d1699deeff2779790090b", "patch": "@@ -1,3 +1,10 @@\n+2013-02-13  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/bits/hashtable_policy.h (_Hash_code_base): Restore\n+\tdefault constructor protected.\n+\t* include/bits/hashtable.h: static assert that _Hash_code_base has\n+\ta default constructor available through inheritance.\n+\n 2013-02-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/c_std/cstdlib (at_quick_exit, quick_exit): Provide in"}, {"sha": "246e9bb3bcfd2cd424c325a8e321789d8941fa9c", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3647a22f7a446ab6d1699deeff2779790090b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3647a22f7a446ab6d1699deeff2779790090b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=d9a3647a22f7a446ab6d1699deeff2779790090b", "patch": "@@ -266,7 +266,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // __hash_code_base above to compute node bucket index so it has to be\n       // default constructible.\n       static_assert(__if_hash_not_cached<\n-\t\t      is_default_constructible<__hash_code_base>>::value,\n+\t\t    is_default_constructible<\n+\t\t      // We use _Hashtable_ebo_helper to access the protected\n+\t\t      // default constructor.\n+\t\t      __detail::_Hashtable_ebo_helper<0, __hash_code_base>>>::value,\n \t\t    \"Cache the hash code or make functors involved in hash code\"\n \t\t    \" and bucket index computation default constructible\");\n "}, {"sha": "f75f49fcd6debcd898b06eb07b4ffcda3f8da757", "filename": "libstdc++-v3/include/bits/hashtable_policy.h", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9a3647a22f7a446ab6d1699deeff2779790090b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9a3647a22f7a446ab6d1699deeff2779790090b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h?ref=d9a3647a22f7a446ab6d1699deeff2779790090b", "patch": "@@ -918,15 +918,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;\n       using __ebo_hash = _Hashtable_ebo_helper<1, _Hash>;\n \n-    public:\n-      // We need the default constructor for the local iterators.\n-      _Hash_code_base() = default;\n-\n     protected:\n       typedef void* \t\t\t\t\t__hash_code;\n       typedef _Hash_node<_Value, false>\t\t\t__node_type;\n \n-    protected:\n+      // We need the default constructor for the local iterators.\n+      _Hash_code_base() = default;\n+\n       _Hash_code_base(const _ExtractKey& __ex, const _H1&, const _H2&,\n \t\t      const _Hash& __h)\n       : __ebo_extract_key(__ex), __ebo_hash(__h) { }\n@@ -1004,13 +1002,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       hash_function() const\n       { return _M_h1(); }\n \n-      // We need the default constructor for the local iterators.\n-      _Hash_code_base() = default;\n-\n     protected:\n       typedef std::size_t \t\t\t\t__hash_code;\n       typedef _Hash_node<_Value, false>\t\t\t__node_type;\n \n+      // We need the default constructor for the local iterators.\n+      _Hash_code_base() = default;\n+\n       _Hash_code_base(const _ExtractKey& __ex,\n \t\t      const _H1& __h1, const _H2& __h2,\n \t\t      const _Default_ranged_hash&)"}]}