{"sha": "3e28fe4442551e4d0014159ecbdb95521e278956", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyOGZlNDQ0MjU1MWU0ZDAwMTQxNTllY2JkYjk1NTIxZTI3ODk1Ng==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1997-09-04T19:15:50Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-09-04T19:15:50Z"}, "message": "For phases starting with flow, print basic block information when doing dumps\n\nFrom-SVN: r15082", "tree": {"sha": "992f01f05d3d923c09f01383c24bf63b264414f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/992f01f05d3d923c09f01383c24bf63b264414f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e28fe4442551e4d0014159ecbdb95521e278956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e28fe4442551e4d0014159ecbdb95521e278956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e28fe4442551e4d0014159ecbdb95521e278956", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e28fe4442551e4d0014159ecbdb95521e278956/comments", "author": null, "committer": null, "parents": [{"sha": "417b0fa21150c9049decf23ffff6e5ccbaaac0d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/417b0fa21150c9049decf23ffff6e5ccbaaac0d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/417b0fa21150c9049decf23ffff6e5ccbaaac0d3"}], "stats": {"total": 124, "additions": 114, "deletions": 10}, "files": [{"sha": "b1bee7cf0d12f017cb241f0fbe29d43805c20735", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e28fe4442551e4d0014159ecbdb95521e278956/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e28fe4442551e4d0014159ecbdb95521e278956/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e28fe4442551e4d0014159ecbdb95521e278956", "patch": "@@ -1,3 +1,15 @@\n+Thu Sep  4 15:01:49 1997  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* toplev.c (rest_of_compilation): For passes starting with\n+\tflow_analysis, use print_rtl_with_bb instead of print_rtl.\n+\n+\t* print-rtl.c (print_rtl_single): Print a single rtl value to a\n+\tfile.\n+\n+\t* flow.c (print_rtl_with_bb): Print which insns start and end\n+\tbasic blocks.  For the start of a basic block, also print the live\n+\tinformation.\n+\n Thu Sep  4 11:51:43 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* toplev.c (main): Change #elif to #else/#ifdef"}, {"sha": "3b9e593cd249937eaf635a2dff4f0126f320b6a3", "filename": "gcc/flow.c", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e28fe4442551e4d0014159ecbdb95521e278956/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e28fe4442551e4d0014159ecbdb95521e278956/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=3e28fe4442551e4d0014159ecbdb95521e278956", "patch": "@@ -2933,3 +2933,82 @@ dump_flow_info (file)\n     }\n   fprintf (file, \"\\n\");\n }\n+\n+\f\n+/* Like print_rtl, but also print out live information for the start of each\n+   basic block.  */\n+\n+void\n+print_rtl_with_bb (outf, rtx_first)\n+     FILE *outf;\n+     rtx rtx_first;\n+{\n+  register rtx tmp_rtx;\n+\n+  if (rtx_first == 0)\n+    fprintf (outf, \"(nil)\\n\");\n+\n+  else\n+    {\n+      int i, bb;\n+      enum bb_state { NOT_IN_BB, IN_ONE_BB, IN_MULTIPLE_BB };\n+      int max_uid = get_max_uid ();\n+      int *start = alloca (max_uid * sizeof (int));\n+      int *end = alloca (max_uid * sizeof (int));\n+      char *in_bb_p = alloca (max_uid * sizeof (enum bb_state));\n+\n+      for (i = 0; i < max_uid; i++)\n+\t{\n+\t  start[i] = end[i] = -1;\n+\t  in_bb_p[i] = NOT_IN_BB;\n+\t}\n+\n+      for (i = n_basic_blocks-1; i >= 0; i--)\n+\t{\n+\t  rtx x;\n+\t  start[INSN_UID (basic_block_head[i])] = i;\n+\t  end[INSN_UID (basic_block_end[i])] = i;\n+\t  for (x = basic_block_head[i]; x != NULL_RTX; x = NEXT_INSN (x))\n+\t    {\n+\t      in_bb_p[ INSN_UID(x)] =\n+\t\t((in_bb_p[ INSN_UID(x)] == NOT_IN_BB)\n+\t\t ? IN_ONE_BB\n+\t\t : IN_MULTIPLE_BB);\n+\t      if (x == basic_block_end[i])\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+      for (tmp_rtx = rtx_first; NULL != tmp_rtx; tmp_rtx = NEXT_INSN (tmp_rtx))\n+\t{\n+\t  if ((bb = start[INSN_UID (tmp_rtx)]) >= 0)\n+\t    {\n+\t      fprintf (outf, \";; Start of basic block %d, registers live:\",\n+\t\t       bb);\n+\n+\t      EXECUTE_IF_SET_IN_REG_SET (basic_block_live_at_start[bb], 0, i,\n+\t\t\t\t\t {\n+\t\t\t\t\t   fprintf (outf, \" %d\", i);\n+\t\t\t\t\t   if (i < FIRST_PSEUDO_REGISTER)\n+\t\t\t\t\t     fprintf (outf, \" [%s]\",\n+\t\t\t\t\t\t      reg_names[i]);\n+\t\t\t\t\t });\n+\t      putc ('\\n', outf);\n+\t    }\n+\n+\t  if (in_bb_p[ INSN_UID(tmp_rtx)] == NOT_IN_BB\n+\t      && GET_CODE (tmp_rtx) != NOTE\n+\t      && GET_CODE (tmp_rtx) != BARRIER)\n+\t    fprintf (outf, \";; Insn is not within a basic block\\n\");\n+\t  else if (in_bb_p[ INSN_UID(tmp_rtx)] == IN_MULTIPLE_BB)\n+\t    fprintf (outf, \";; Insn is in multiple basic blocks\\n\");\n+\n+\t  print_rtl_single (outf, tmp_rtx);\n+\n+\t  if ((bb = end[INSN_UID (tmp_rtx)]) >= 0)\n+\t    fprintf (outf, \";; End of basic block %d\\n\", bb);\n+\n+\t  putc ('\\n', outf);\n+\t}\n+    }\n+}"}, {"sha": "bb4ee0d631aa8abb27d0442016665e8a58503ced", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e28fe4442551e4d0014159ecbdb95521e278956/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e28fe4442551e4d0014159ecbdb95521e278956/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=3e28fe4442551e4d0014159ecbdb95521e278956", "patch": "@@ -345,3 +345,16 @@ print_rtl (outf, rtx_first)\n \tprint_rtx (rtx_first);\n       }\n }\n+\n+/* Like print_rtx, except specify a file.  */\n+\n+void\n+print_rtl_single (outf, x)\n+     FILE *outf;\n+     rtx x;\n+{\n+  outfile = outf;\n+  sawclose = 0;\n+  print_rtx (x);\n+  putc ('\\n', outf);\n+}"}, {"sha": "d1ddf202fee70907fb62df3dc805b2f16f215f16", "filename": "gcc/toplev.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e28fe4442551e4d0014159ecbdb95521e278956/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e28fe4442551e4d0014159ecbdb95521e278956/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=3e28fe4442551e4d0014159ecbdb95521e278956", "patch": "@@ -3350,7 +3350,7 @@ rest_of_compilation (decl)\n   if (flow_dump)\n     TIMEVAR (dump_time,\n \t     {\n-\t       print_rtl (flow_dump_file, insns);\n+\t       print_rtl_with_bb (flow_dump_file, insns);\n \t       fflush (flow_dump_file);\n \t     });\n \n@@ -3367,7 +3367,7 @@ rest_of_compilation (decl)\n \t       fprintf (combine_dump_file, \"\\n;; Function %s\\n\\n\",\n \t\t\t(*decl_printable_name) (decl, 2));\n \t       dump_combine_stats (combine_dump_file);\n-\t       print_rtl (combine_dump_file, insns);\n+\t       print_rtl_with_bb (combine_dump_file, insns);\n \t       fflush (combine_dump_file);\n \t     });\n \n@@ -3387,7 +3387,7 @@ rest_of_compilation (decl)\n   if (regmove_dump)\n     TIMEVAR (dump_time,\n \t     {\n-\t       print_rtl (regmove_dump_file, insns);\n+\t       print_rtl_with_bb (regmove_dump_file, insns);\n \t       fflush (regmove_dump_file);\n \t     });\n \n@@ -3414,7 +3414,7 @@ rest_of_compilation (decl)\n   if (sched_dump)\n     TIMEVAR (dump_time,\n \t     {\n-\t       print_rtl (sched_dump_file, insns);\n+\t       print_rtl_with_bb (sched_dump_file, insns);\n \t       fflush (sched_dump_file);\n \t     });\n \n@@ -3437,7 +3437,7 @@ rest_of_compilation (decl)\n \t\t\t(*decl_printable_name) (decl, 2));\n \t       dump_flow_info (local_reg_dump_file);\n \t       dump_local_alloc (local_reg_dump_file);\n-\t       print_rtl (local_reg_dump_file, insns);\n+\t       print_rtl_with_bb (local_reg_dump_file, insns);\n \t       fflush (local_reg_dump_file);\n \t     });\n \n@@ -3466,7 +3466,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       dump_global_regs (global_reg_dump_file);\n-\t       print_rtl (global_reg_dump_file, insns);\n+\t       print_rtl_with_bb (global_reg_dump_file, insns);\n \t       fflush (global_reg_dump_file);\n \t     });\n \n@@ -3505,7 +3505,7 @@ rest_of_compilation (decl)\n       if (sched2_dump)\n \tTIMEVAR (dump_time,\n \t\t {\n-\t\t   print_rtl (sched2_dump_file, insns);\n+\t\t   print_rtl_with_bb (sched2_dump_file, insns);\n \t\t   fflush (sched2_dump_file);\n \t\t });\n     }\n@@ -3533,7 +3533,7 @@ rest_of_compilation (decl)\n \t     {\n \t       fprintf (jump2_opt_dump_file, \"\\n;; Function %s\\n\\n\",\n \t\t\t(*decl_printable_name) (decl, 2));\n-\t       print_rtl (jump2_opt_dump_file, insns);\n+\t       print_rtl_with_bb (jump2_opt_dump_file, insns);\n \t       fflush (jump2_opt_dump_file);\n \t     });\n \n@@ -3555,7 +3555,7 @@ rest_of_compilation (decl)\n \t\t {\n \t\t   fprintf (dbr_sched_dump_file, \"\\n;; Function %s\\n\\n\",\n \t\t\t    (*decl_printable_name) (decl, 2));\n-\t\t   print_rtl (dbr_sched_dump_file, insns);\n+\t\t   print_rtl_with_bb (dbr_sched_dump_file, insns);\n \t\t   fflush (dbr_sched_dump_file);\n \t\t });\n \t}\n@@ -3576,7 +3576,7 @@ rest_of_compilation (decl)\n \t       {\n \t\t fprintf (stack_reg_dump_file, \"\\n;; Function %s\\n\\n\",\n \t\t          (*decl_printable_name) (decl, 2));\n-\t\t print_rtl (stack_reg_dump_file, insns);\n+\t\t print_rtl_with_bb (stack_reg_dump_file, insns);\n \t\t fflush (stack_reg_dump_file);\n \t       });\n     }"}]}