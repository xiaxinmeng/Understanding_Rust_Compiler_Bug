{"sha": "b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVjMzU2OWIwNzkwNzlkNmM3OGYzYTEyZWY2OWIwZWQ4YjlkN2UzNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2004-11-26T20:18:34Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2004-11-26T20:18:34Z"}, "message": "tree-ssa.c (verify_flow_sensitive_alias_info): Don't retrieve annotations or pointer info before it's necessary.\n\n        * tree-ssa.c (verify_flow_sensitive_alias_info): Don't\n        retrieve annotations or pointer info before it's necessary.\n        Reorder tests for early continue of the loop.  Manually CSE\n        SSA_NAME_VAR.\n\nFrom-SVN: r91347", "tree": {"sha": "0424a1a93625c4da7b4389c846fbabbd364534a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0424a1a93625c4da7b4389c846fbabbd364534a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34/comments", "author": null, "committer": null, "parents": [{"sha": "e54c7471819ee8dc9e4ba0ada1db242bd5bd68ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54c7471819ee8dc9e4ba0ada1db242bd5bd68ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54c7471819ee8dc9e4ba0ada1db242bd5bd68ed"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "c3d7358c4fa3043dc3077c51624777a8b9dcc78d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34", "patch": "@@ -1,3 +1,10 @@\n+2004-11-26  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa.c (verify_flow_sensitive_alias_info): Don't\n+\tretrieve annotations or pointer info before it's necessary.\n+\tReorder tests for early continue of the loop.  Manually CSE\n+\tSSA_NAME_VAR.\n+\n 2004-11-26  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* target.h (struct gcc_target): New field 'dwarf_handle_frame_unspec'."}, {"sha": "4aa8b26cc46a8de112497eba26cceabaa8719585", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=b5c3569b079079d6c78f3a12ef69b0ed8b9d7e34", "patch": "@@ -404,31 +404,34 @@ verify_flow_sensitive_alias_info (void)\n \n   for (i = 1; i < num_ssa_names; i++)\n     {\n+      tree var;\n       var_ann_t ann;\n       struct ptr_info_def *pi;\n+ \n \n       ptr = ssa_name (i);\n       if (!ptr)\n \tcontinue;\n-      ann = var_ann (SSA_NAME_VAR (ptr));\n-      pi = SSA_NAME_PTR_INFO (ptr);\n \n       /* We only care for pointers that are actually referenced in the\n \t program.  */\n-      if (!TREE_VISITED (ptr) || !POINTER_TYPE_P (TREE_TYPE (ptr)))\n+      if (!POINTER_TYPE_P (TREE_TYPE (ptr)) || !TREE_VISITED (ptr))\n \tcontinue;\n \n       /* RESULT_DECL is special.  If it's a GIMPLE register, then it\n \t is only written-to only once in the return statement.\n \t Otherwise, aggregate RESULT_DECLs may be written-to more than\n \t once in virtual operands.  */\n-      if (TREE_CODE (SSA_NAME_VAR (ptr)) == RESULT_DECL\n+      var = SSA_NAME_VAR (ptr);\n+      if (TREE_CODE (var) == RESULT_DECL\n \t  && is_gimple_reg (ptr))\n \tcontinue;\n \n+      pi = SSA_NAME_PTR_INFO (ptr);\n       if (pi == NULL)\n \tcontinue;\n \n+      ann = var_ann (var);\n       if (pi->is_dereferenced && !pi->name_mem_tag && !ann->type_mem_tag)\n \t{\n \t  error (\"Dereferenced pointers should have a name or a type tag\");"}]}