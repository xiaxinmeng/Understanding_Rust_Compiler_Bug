{"sha": "ce3e131171b5113d134b9b4a6366efda60234e21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UzZTEzMTE3MWI1MTEzZDEzNGI5YjRhNjM2NmVmZGE2MDIzNGUyMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-04-04T10:09:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-04-04T10:09:09Z"}, "message": "sparc.h (RTX_OK_FOR_OFFSET_P): Leave minor margin so that addresses are offsetable by up to 16 bytes.\n\n\t* config/sparc/sparc.h (RTX_OK_FOR_OFFSET_P): Leave minor margin\n\tso that addresses are offsetable by up to 16 bytes.\n\t(GO_IF_LEGITIMATE_ADDRESS): Don't allow REG+REG addresses for\n\tnon-optimizing TARGET_ARCH32 in DF or DI modes because it is not\n\toffsetable.\n\nFrom-SVN: r32900", "tree": {"sha": "305632bfedca1238e40921f394c25afa358fb589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/305632bfedca1238e40921f394c25afa358fb589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce3e131171b5113d134b9b4a6366efda60234e21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3e131171b5113d134b9b4a6366efda60234e21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3e131171b5113d134b9b4a6366efda60234e21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3e131171b5113d134b9b4a6366efda60234e21/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f761dcbd5fc9ce401c04d9ec5d89a72f08e54ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f761dcbd5fc9ce401c04d9ec5d89a72f08e54ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f761dcbd5fc9ce401c04d9ec5d89a72f08e54ad"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "7b1f3249c165d9ab6654b70cb81f0fa6dd90716c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3e131171b5113d134b9b4a6366efda60234e21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3e131171b5113d134b9b4a6366efda60234e21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce3e131171b5113d134b9b4a6366efda60234e21", "patch": "@@ -1,3 +1,11 @@\n+2000-04-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/sparc/sparc.h (RTX_OK_FOR_OFFSET_P): Leave minor margin\n+\tso that addresses are offsetable by up to 16 bytes.\n+\t(GO_IF_LEGITIMATE_ADDRESS): Don't allow REG+REG addresses for\n+\tnon-optimizing TARGET_ARCH32 in DF or DI modes because it is not\n+\toffsetable.\n+\n Tue Apr  4 00:41:53 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* pa/pa-64.h: New file."}, {"sha": "b98a3801f73e7e38619bd39c6beff13a59c8d822", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3e131171b5113d134b9b4a6366efda60234e21/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3e131171b5113d134b9b4a6366efda60234e21/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=ce3e131171b5113d134b9b4a6366efda60234e21", "patch": "@@ -2359,7 +2359,7 @@ LFLGRET\"ID\":\\n\\\n       && REG_OK_FOR_INDEX_P (SUBREG_REG (X))))\n \n #define RTX_OK_FOR_OFFSET_P(X)\t\t\t\t\t\t\\\n-  (GET_CODE (X) == CONST_INT && INTVAL (X) >= -0x1000 && INTVAL (X) < 0x1000)\n+  (GET_CODE (X) == CONST_INT && INTVAL (X) >= -0x1000 && INTVAL (X) < 0x1000 - 8)\n   \n #define RTX_OK_FOR_OLO10_P(X)\t\t\t\t\t\t\\\n   (GET_CODE (X) == CONST_INT && INTVAL (X) >= -0x1000 && INTVAL (X) < 0xc00 - 8)\n@@ -2396,21 +2396,33 @@ LFLGRET\"ID\":\\n\\\n \t\t REG+REG address, then only one of them\t\\\n \t\t gets converted to an offsetable\t\\\n \t\t address. */\t\t\t\t\\\n- \t      && (MODE != TFmode\t\t\t\\\n-\t\t  || (TARGET_FPU && TARGET_ARCH64\t\\\n-\t\t      && TARGET_V9\t\t\t\\\n-\t\t      && TARGET_HARD_QUAD)))\t\t\\\n+ \t       && (MODE != TFmode\t\t\t\\\n+\t\t   || (TARGET_FPU && TARGET_ARCH64\t\\\n+\t\t       && TARGET_V9\t\t\t\\\n+\t\t       && TARGET_HARD_QUAD))\t\t\\\n+\t      /* We prohibit REG + REG on ARCH32 if\t\\\n+\t\t not optimizing for DFmode/DImode\t\\\n+\t\t because then mem_min_alignment is\t\\\n+\t\t likely to be zero after reload and the \\\n+\t\t forced split would lack a matching\t\\\n+\t\t splitter pattern. */\t\t\t\\\n+\t       && (TARGET_ARCH64 || optimize\t\t\\\n+\t\t   || (MODE != DFmode\t\t\t\\\n+\t\t       && MODE != DImode)))\t\t\\\n \t      || RTX_OK_FOR_OFFSET_P (op1))\t\t\\\n \t    goto ADDR;\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\\\n       else if (RTX_OK_FOR_BASE_P (op1))\t\t\t\\\n \t{\t\t\t\t\t\t\\\n \t  if ((RTX_OK_FOR_INDEX_P (op0)\t\t\t\\\n  \t      /* See the previous comment. */\t\t\\\n- \t      && (MODE != TFmode\t\t\t\\\n+ \t       && (MODE != TFmode\t\t\t\\\n \t\t  || (TARGET_FPU && TARGET_ARCH64\t\\\n \t\t      && TARGET_V9\t\t\t\\\n-\t\t      && TARGET_HARD_QUAD)))\t\t\\\n+\t\t      && TARGET_HARD_QUAD))\t\t\\\n+\t       && (TARGET_ARCH64 || optimize\t\t\\\n+\t\t   || (MODE != DFmode\t\t\t\\\n+\t\t       && MODE != DImode)))\t\t\\\n \t      || RTX_OK_FOR_OFFSET_P (op0))\t\t\\\n \t    goto ADDR;\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\\"}]}