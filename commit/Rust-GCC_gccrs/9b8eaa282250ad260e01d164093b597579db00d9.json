{"sha": "9b8eaa282250ad260e01d164093b597579db00d9", "node_id": "C_kwDOANBUbNoAKDliOGVhYTI4MjI1MGFkMjYwZTAxZDE2NDA5M2I1OTc1NzlkYjAwZDk", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2019-11-27T12:45:41Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2022-01-19T17:34:02Z"}, "message": "ifcvt: Allow constants for noce_convert_multiple.\n\nThis lifts the restriction of not allowing constants for\nnoce_convert_multiple.  The code later checks if a valid sequence\nis produced anyway.\n\ngcc/ChangeLog:\n\n\t* ifcvt.cc (noce_convert_multiple_sets): Allow constants.\n\t(bb_ok_for_noce_convert_multiple_sets): Likewise.", "tree": {"sha": "9a60ae8b851afebcc764f83c4138dff57a959cc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a60ae8b851afebcc764f83c4138dff57a959cc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b8eaa282250ad260e01d164093b597579db00d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b8eaa282250ad260e01d164093b597579db00d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b8eaa282250ad260e01d164093b597579db00d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b8eaa282250ad260e01d164093b597579db00d9/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c46f5a471c239f7d3fb37c748f1f18a8ebae1a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c46f5a471c239f7d3fb37c748f1f18a8ebae1a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c46f5a471c239f7d3fb37c748f1f18a8ebae1a2"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "c696563918d22f3fd7fd12f8a08ced5ecb5d4d26", "filename": "gcc/ifcvt.cc", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8eaa282250ad260e01d164093b597579db00d9/gcc%2Fifcvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8eaa282250ad260e01d164093b597579db00d9/gcc%2Fifcvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.cc?ref=9b8eaa282250ad260e01d164093b597579db00d9", "patch": "@@ -3288,7 +3288,9 @@ noce_convert_multiple_sets (struct noce_if_info *if_info)\n \t we'll end up trying to emit r4:HI = cond ? (r1:SI) : (r3:HI).\n \t Wrap the two cmove operands into subregs if appropriate to prevent\n \t that.  */\n-      if (GET_MODE (new_val) != GET_MODE (temp))\n+\n+      if (!CONSTANT_P (new_val)\n+\t  && GET_MODE (new_val) != GET_MODE (temp))\n \t{\n \t  machine_mode src_mode = GET_MODE (new_val);\n \t  machine_mode dst_mode = GET_MODE (temp);\n@@ -3299,7 +3301,8 @@ noce_convert_multiple_sets (struct noce_if_info *if_info)\n \t    }\n \t  new_val = lowpart_subreg (dst_mode, new_val, src_mode);\n \t}\n-      if (GET_MODE (old_val) != GET_MODE (temp))\n+      if (!CONSTANT_P (old_val)\n+\t  && GET_MODE (old_val) != GET_MODE (temp))\n \t{\n \t  machine_mode src_mode = GET_MODE (old_val);\n \t  machine_mode dst_mode = GET_MODE (temp);\n@@ -3441,9 +3444,9 @@ bb_ok_for_noce_convert_multiple_sets (basic_block test_bb)\n       if (!REG_P (dest))\n \treturn false;\n \n-      if (!(REG_P (src)\n-\t   || (GET_CODE (src) == SUBREG && REG_P (SUBREG_REG (src))\n-\t       && subreg_lowpart_p (src))))\n+      if (!((REG_P (src) || CONSTANT_P (src))\n+\t    || (GET_CODE (src) == SUBREG && REG_P (SUBREG_REG (src))\n+\t      && subreg_lowpart_p (src))))\n \treturn false;\n \n       /* Destination must be appropriate for a conditional write.  */"}]}