{"sha": "0c380712e71adc4f422634762736c220277772bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMzODA3MTJlNzFhZGM0ZjQyMjYzNDc2MjczNmMyMjAyNzc3NzJiYg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-08-23T02:39:56Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-08-23T02:39:56Z"}, "message": "re PR target/21571 (ICE in rs6000.c with -msdata=default.)\n\n\tPR target/21571\n\t* config/rs6000/rs6000.c (rs6000_legitimate_small_data_p): Rename\n\tfrom legitimate_small_data_p, and make global.  Update use.\n\tRemove forward declaration.\n\t* config/rs6000/rs6000-protos.h (rs6000_legitimate_small_data_p):\n\tDeclare.\n\t* config/rs6000/rs6000.md (movdf_hardfloat32): Allow small data mems.\n\nFrom-SVN: r103382", "tree": {"sha": "98588db07a9e8c4055184355eb343c78247a864c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98588db07a9e8c4055184355eb343c78247a864c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c380712e71adc4f422634762736c220277772bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c380712e71adc4f422634762736c220277772bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c380712e71adc4f422634762736c220277772bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c380712e71adc4f422634762736c220277772bb/comments", "author": null, "committer": null, "parents": [{"sha": "d0515b3965b46f91494494e546d4158f64e4f366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0515b3965b46f91494494e546d4158f64e4f366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0515b3965b46f91494494e546d4158f64e4f366"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "9aa60f00a64b2c4e7f03cf32a2c0c7224ff06b70", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c380712e71adc4f422634762736c220277772bb/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c380712e71adc4f422634762736c220277772bb/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=0c380712e71adc4f422634762736c220277772bb", "patch": "@@ -45,6 +45,7 @@ extern void validate_condition_mode (enum rtx_code, enum machine_mode);\n extern bool legitimate_constant_pool_address_p (rtx);\n extern bool legitimate_indirect_address_p (rtx, int);\n extern bool rs6000_legitimate_offset_address_p (enum machine_mode, rtx, int);\n+extern bool rs6000_legitimate_small_data_p (enum machine_mode, rtx);\n \n extern rtx rs6000_got_register (rtx);\n extern rtx find_addr_reg (rtx);"}, {"sha": "edb3d84c522f9a9925857c3a6a6e686e6f8fb292", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c380712e71adc4f422634762736c220277772bb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c380712e71adc4f422634762736c220277772bb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=0c380712e71adc4f422634762736c220277772bb", "patch": "@@ -584,7 +584,6 @@ static unsigned toc_hash_function (const void *);\n static int toc_hash_eq (const void *, const void *);\n static int constant_pool_expr_1 (rtx, int *, int *);\n static bool constant_pool_expr_p (rtx);\n-static bool legitimate_small_data_p (enum machine_mode, rtx);\n static bool legitimate_indexed_address_p (rtx, int);\n static bool legitimate_lo_sum_address_p (enum machine_mode, rtx, int);\n static struct machine_function * rs6000_init_machine_status (void);\n@@ -2631,8 +2630,8 @@ legitimate_constant_pool_address_p (rtx x)\n \t  && constant_pool_expr_p (XEXP (x, 1)));\n }\n \n-static bool\n-legitimate_small_data_p (enum machine_mode mode, rtx x)\n+bool\n+rs6000_legitimate_small_data_p (enum machine_mode mode, rtx x)\n {\n   return (DEFAULT_ABI == ABI_V4\n \t  && !flag_pic && !TARGET_TOC\n@@ -3401,7 +3400,7 @@ rs6000_legitimate_address (enum machine_mode mode, rtx x, int reg_ok_strict)\n       && TARGET_UPDATE\n       && legitimate_indirect_address_p (XEXP (x, 0), reg_ok_strict))\n     return 1;\n-  if (legitimate_small_data_p (mode, x))\n+  if (rs6000_legitimate_small_data_p (mode, x))\n     return 1;\n   if (legitimate_constant_pool_address_p (x))\n     return 1;"}, {"sha": "84db59fd14a634e1607b53f0c54fba371a01ec59", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c380712e71adc4f422634762736c220277772bb/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c380712e71adc4f422634762736c220277772bb/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=0c380712e71adc4f422634762736c220277772bb", "patch": "@@ -7549,9 +7549,10 @@\n       if (GET_CODE (operands[1]) == MEM\n \t  && (rs6000_legitimate_offset_address_p (DFmode, XEXP (operands[1], 0),\n \t\t\treload_completed || reload_in_progress)\n+\t      || rs6000_legitimate_small_data_p (DFmode, XEXP (operands[1], 0))\n \t      || GET_CODE (XEXP (operands[1], 0)) == REG\n \t      || GET_CODE (XEXP (operands[1], 0)) == LO_SUM\n-\t\t  || GET_CODE (XEXP (operands[1], 0)) == PRE_INC\n+\t      || GET_CODE (XEXP (operands[1], 0)) == PRE_INC\n \t      || GET_CODE (XEXP (operands[1], 0)) == PRE_DEC))\n \t{\n \t  /* If the low-address word is used in the address, we must load\n@@ -7591,9 +7592,10 @@\n       if (GET_CODE (operands[0]) == MEM\n           && (rs6000_legitimate_offset_address_p (DFmode, XEXP (operands[0], 0),\n \t\t    reload_completed || reload_in_progress)\n+\t      || rs6000_legitimate_small_data_p (DFmode, XEXP (operands[0], 0))\n \t      || GET_CODE (XEXP (operands[0], 0)) == REG\n     \t      || GET_CODE (XEXP (operands[0], 0)) == LO_SUM\n-\t\t  || GET_CODE (XEXP (operands[0], 0)) == PRE_INC\n+\t      || GET_CODE (XEXP (operands[0], 0)) == PRE_INC\n \t      || GET_CODE (XEXP (operands[0], 0)) == PRE_DEC))\n \treturn \\\"{st%U0|stw%U0} %1,%0\\;{st|stw} %L1,%L0\\\";\n       else"}]}