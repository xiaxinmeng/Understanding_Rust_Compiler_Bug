{"sha": "5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiOWJhMGMzOGEwOGI3MzEzYWIyZTEwYjFhYWJjOThjNWI3MzMwMQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2008-05-13T18:24:33Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2008-05-13T18:24:33Z"}, "message": "tree.h (init_phinodes, [...]): Move ...\n\n2008-05-13  Diego Novillo  <dnovillo@google.com>\n\t    Kenneth Zadeck  <zadeck@naturalbridge.com>\n\n\thttp://gcc.gnu.org/ml/gcc-patches/2008-05/msg00748.html\n\n\t* tree.h (init_phinodes, fini_phinodes, release_phi_node,\n\tphinodes_print_statistics, init_ssanames, fini_ssanames,\n\tmake_ssa_name, duplicate_ssa_name,\n\tduplicate_ssa_name_ptr_info, release_ssa_name,\n\trelease_defs, replace_ssa_name_symbol,\n\tssanames_print_statistics): Move ...\n\t* tree-flow.h: ... here.\n\t* tree-ssanames.c (init_ssanames): Add arguments FN and\n\tSIZE.  Use FN instead of cfun.\n\t(make_ssa_name_fn): Rename from make_ssa_name.\n\t(pass_release_ssa_names): Add TODO_dump_func to finish\n\tflags.\n\t* tree-flow-inline.h (make_ssa_name): Move from\n\ttree-ssanames.c.  Convert to static inline.  Call\n\tmake_ssa_name_fn.\n\t* omp-low.c (expand_omp_parallel):\n\t* tree-flow-inline.h (redirect_edge_var_map_result):\n\t* tree-ssa.c (init_tree_ssa): Add argument FN.  Use it\n\tinstead of cfun.\n\tUpdate all users.\n\n\n\nCo-Authored-By: Kenneth Zadeck <zadeck@naturalbridge.com>\n\nFrom-SVN: r135270", "tree": {"sha": "27982ea789dad2373cffff1356daddf15ef05405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27982ea789dad2373cffff1356daddf15ef05405"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4cfa46f4dc49a0ded5ad3fddcc853345a6da83e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4cfa46f4dc49a0ded5ad3fddcc853345a6da83e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4cfa46f4dc49a0ded5ad3fddcc853345a6da83e"}], "stats": {"total": 148, "additions": 93, "deletions": 55}, "files": [{"sha": "cd5f12b6d6eb818462588f7f1dbb1d4ae9c18a17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "patch": "@@ -1,3 +1,29 @@\n+2008-05-13  Diego Novillo  <dnovillo@google.com>\n+\t    Kenneth Zadeck  <zadeck@naturalbridge.com>\n+\n+\thttp://gcc.gnu.org/ml/gcc-patches/2008-05/msg00748.html\n+\n+\t* tree.h (init_phinodes, fini_phinodes, release_phi_node,\n+\tphinodes_print_statistics, init_ssanames, fini_ssanames,\n+\tmake_ssa_name, duplicate_ssa_name,\n+\tduplicate_ssa_name_ptr_info, release_ssa_name,\n+\trelease_defs, replace_ssa_name_symbol,\n+\tssanames_print_statistics): Move ...\n+\t* tree-flow.h: ... here.\n+\t* tree-ssanames.c (init_ssanames): Add arguments FN and\n+\tSIZE.  Use FN instead of cfun.\n+\t(make_ssa_name_fn): Rename from make_ssa_name.\n+\t(pass_release_ssa_names): Add TODO_dump_func to finish\n+\tflags.\n+\t* tree-flow-inline.h (make_ssa_name): Move from\n+\ttree-ssanames.c.  Convert to static inline.  Call\n+\tmake_ssa_name_fn.\n+\t* omp-low.c (expand_omp_parallel):\n+\t* tree-flow-inline.h (redirect_edge_var_map_result):\n+\t* tree-ssa.c (init_tree_ssa): Add argument FN.  Use it\n+\tinstead of cfun.\n+\tUpdate all users.\n+\n 2008-05-13  Tom Tromey  <tromey@redhat.com>\n \n \tPR preprocessor/22168:"}, {"sha": "3f2ed91a0685ce77c4be5f5d043886d82cc33e74", "filename": "gcc/omp-low.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "patch": "@@ -2659,7 +2659,7 @@ expand_omp_parallel (struct omp_region *region)\n       if (gimple_in_ssa_p (cfun))\n \t{\n \t  push_cfun (child_cfun);\n-\t  init_tree_ssa ();\n+\t  init_tree_ssa (child_cfun);\n \t  init_ssa_operands ();\n \t  cfun->gimple_df->in_ssa_p = true;\n \t  pop_cfun ();"}, {"sha": "a4fe9c29c22e103a60bccc12429881d699e76921", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "patch": "@@ -1689,4 +1689,15 @@ redirect_edge_var_map_result (edge_var_map *v)\n {\n   return v->result;\n }\n+\n+\n+/* Return an SSA_NAME node for variable VAR defined in statement STMT\n+   in function cfun.  */\n+\n+static inline tree\n+make_ssa_name (tree var, tree stmt)\n+{\n+  return make_ssa_name_fn (cfun, var, stmt);\n+}\n+\n #endif /* _TREE_FLOW_INLINE_H  */"}, {"sha": "019cb7ba09c6c504e0bb39d0c1738e42d2037620", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "patch": "@@ -829,6 +829,12 @@ extern void add_phi_arg (tree, tree, edge);\n extern void remove_phi_args (edge);\n extern void remove_phi_node (tree, tree, bool);\n extern tree phi_reverse (tree);\n+extern void init_phinodes (void);\n+extern void fini_phinodes (void);\n+extern void release_phi_node (tree);\n+#ifdef GATHER_STATISTICS\n+extern void phinodes_print_statistics (void);\n+#endif\n \n /* In gimple-low.c  */\n extern void record_vars_into (tree, tree);\n@@ -893,8 +899,7 @@ extern void redirect_edge_var_map_dup (edge, edge);\n extern edge_var_map_vector redirect_edge_var_map_vector (edge);\n extern void redirect_edge_var_map_destroy (void);\n \n-\n-extern void init_tree_ssa (void);\n+extern void init_tree_ssa (struct function *);\n extern edge ssa_redirect_edge (edge, basic_block);\n extern void flush_pending_stmts (edge);\n extern bool tree_ssa_useless_type_conversion (tree);\n@@ -924,6 +929,20 @@ void mark_set_for_renaming (bitmap);\n tree get_current_def (tree);\n void set_current_def (tree, tree);\n \n+/* In tree-ssanames.c  */\n+extern void init_ssanames (struct function *, int);\n+extern void fini_ssanames (void);\n+extern tree make_ssa_name_fn (struct function *, tree, tree);\n+extern tree duplicate_ssa_name (tree, tree);\n+extern void duplicate_ssa_name_ptr_info (tree, struct ptr_info_def *);\n+extern void release_ssa_name (tree);\n+extern void release_defs (tree);\n+extern void replace_ssa_name_symbol (tree, tree);\n+\n+#ifdef GATHER_STATISTICS\n+extern void ssanames_print_statistics (void);\n+#endif\n+\n /* In tree-ssa-ccp.c  */\n bool fold_stmt (tree *);\n bool fold_stmt_inplace (tree);"}, {"sha": "1ba7b60f6f122eabc8147a7e4eb83dc1ef3abf8e", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "patch": "@@ -1301,7 +1301,7 @@ initialize_cfun (tree new_fndecl, tree callee_fndecl, gcov_type count,\n \n   if (src_cfun->gimple_df)\n     {\n-      init_tree_ssa ();\n+      init_tree_ssa (cfun);\n       cfun->gimple_df->in_ssa_p = true;\n       init_ssa_operands ();\n     }"}, {"sha": "84e1e9d9db347e036af97d1c93300419f43d9028", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "patch": "@@ -333,7 +333,7 @@ static unsigned int\n execute_init_datastructures (void)\n {\n   /* Allocate hash tables, arrays and other structures.  */\n-  init_tree_ssa ();\n+  init_tree_ssa (cfun);\n   return 0;\n }\n "}, {"sha": "150074f7c23618c9cc1c98853fa9467465f68e67", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "patch": "@@ -944,18 +944,18 @@ uid_ssaname_map_hash (const void *item)\n /* Initialize global DFA and SSA structures.  */\n \n void\n-init_tree_ssa (void)\n+init_tree_ssa (struct function *fn)\n {\n-  cfun->gimple_df = GGC_CNEW (struct gimple_df);\n-  cfun->gimple_df->referenced_vars = htab_create_ggc (20, uid_decl_map_hash, \n-\t\t\t\t     \t\t      uid_decl_map_eq, NULL);\n-  cfun->gimple_df->default_defs = htab_create_ggc (20, uid_ssaname_map_hash, \n-\t\t\t\t                   uid_ssaname_map_eq, NULL);\n-  cfun->gimple_df->var_anns = htab_create_ggc (20, var_ann_hash, \n-\t\t\t\t\t       var_ann_eq, NULL);\n-  cfun->gimple_df->call_clobbered_vars = BITMAP_GGC_ALLOC ();\n-  cfun->gimple_df->addressable_vars = BITMAP_GGC_ALLOC ();\n-  init_ssanames ();\n+  fn->gimple_df = GGC_CNEW (struct gimple_df);\n+  fn->gimple_df->referenced_vars = htab_create_ggc (20, uid_decl_map_hash, \n+\t\t\t\t     \t\t    uid_decl_map_eq, NULL);\n+  fn->gimple_df->default_defs = htab_create_ggc (20, uid_ssaname_map_hash, \n+\t\t\t\t                 uid_ssaname_map_eq, NULL);\n+  fn->gimple_df->var_anns = htab_create_ggc (20, var_ann_hash, \n+\t\t\t\t\t     var_ann_eq, NULL);\n+  fn->gimple_df->call_clobbered_vars = BITMAP_GGC_ALLOC ();\n+  fn->gimple_df->addressable_vars = BITMAP_GGC_ALLOC ();\n+  init_ssanames (fn, 0);\n   init_phinodes ();\n }\n "}, {"sha": "8d675b43c4902ea5c44dc4b661cfc061d0649fe5", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "patch": "@@ -67,12 +67,16 @@ unsigned int ssa_name_nodes_reused;\n unsigned int ssa_name_nodes_created;\n #endif\n \n-/* Initialize management of SSA_NAMEs.  */\n+/* Initialize management of SSA_NAMEs to default SIZE.  If SIZE is\n+   zero use default.  */\n \n void\n-init_ssanames (void)\n+init_ssanames (struct function *fn, int size)\n {\n-  SSANAMES (cfun) = VEC_alloc (tree, gc, 50);\n+  if (size < 50)\n+    size = 50;\n+\n+  SSANAMES (fn) = VEC_alloc (tree, gc, size);\n \n   /* Version 0 is special, so reserve the first slot in the table.  Though\n      currently unused, we may use version 0 in alias analysis as part of\n@@ -81,8 +85,8 @@ init_ssanames (void)\n \n      We use VEC_quick_push here because we know that SSA_NAMES has at\n      least 50 elements reserved in it.  */\n-  VEC_quick_push (tree, SSANAMES (cfun), NULL_TREE);\n-  FREE_SSANAMES (cfun) = NULL;\n+  VEC_quick_push (tree, SSANAMES (fn), NULL_TREE);\n+  FREE_SSANAMES (fn) = NULL;\n }\n \n /* Finalize management of SSA_NAMEs.  */\n@@ -105,13 +109,13 @@ ssanames_print_statistics (void)\n }\n #endif\n \n-/* Return an SSA_NAME node for variable VAR defined in statement STMT.\n-   STMT may be an empty statement for artificial references (e.g., default\n-   definitions created when a variable is used without a preceding\n-   definition).  */\n+/* Return an SSA_NAME node for variable VAR defined in statement STMT\n+   in function FN.  STMT may be an empty statement for artificial\n+   references (e.g., default definitions created when a variable is\n+   used without a preceding definition).  */\n \n tree\n-make_ssa_name (tree var, tree stmt)\n+make_ssa_name_fn (struct function *fn, tree var, tree stmt)\n {\n   tree t;\n   use_operand_p imm;\n@@ -124,24 +128,24 @@ make_ssa_name (tree var, tree stmt)\n \t      || TREE_CODE (stmt) == PHI_NODE);\n \n   /* If our free list has an element, then use it.  */\n-  if (FREE_SSANAMES (cfun))\n+  if (FREE_SSANAMES (fn))\n     {\n-      t = FREE_SSANAMES (cfun);\n-      FREE_SSANAMES (cfun) = TREE_CHAIN (FREE_SSANAMES (cfun));\n+      t = FREE_SSANAMES (fn);\n+      FREE_SSANAMES (fn) = TREE_CHAIN (FREE_SSANAMES (fn));\n #ifdef GATHER_STATISTICS\n       ssa_name_nodes_reused++;\n #endif\n \n       /* The node was cleared out when we put it on the free list, so\n \t there is no need to do so again here.  */\n       gcc_assert (ssa_name (SSA_NAME_VERSION (t)) == NULL);\n-      VEC_replace (tree, SSANAMES (cfun), SSA_NAME_VERSION (t), t);\n+      VEC_replace (tree, SSANAMES (fn), SSA_NAME_VERSION (t), t);\n     }\n   else\n     {\n       t = make_node (SSA_NAME);\n-      SSA_NAME_VERSION (t) = num_ssa_names;\n-      VEC_safe_push (tree, gc, SSANAMES (cfun), t);\n+      SSA_NAME_VERSION (t) = VEC_length (tree, SSANAMES (fn));\n+      VEC_safe_push (tree, gc, SSANAMES (fn), t);\n #ifdef GATHER_STATISTICS\n       ssa_name_nodes_created++;\n #endif\n@@ -358,6 +362,6 @@ struct gimple_opt_pass pass_release_ssa_names =\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  0\t\t\t\t\t/* todo_flags_finish */\n+  TODO_dump_func \t\t\t/* todo_flags_finish */\n  }\n };"}, {"sha": "d4bd080ffed94574dd375ecd4fa9d0788a1aad7c", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db9ba0c38a08b7313ab2e10b1aabc98c5b73301/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=5db9ba0c38a08b7313ab2e10b1aabc98c5b73301", "patch": "@@ -3880,28 +3880,6 @@ extern tree make_tree_binfo_stat (unsigned MEM_STAT_DECL);\n extern tree make_tree_vec_stat (int MEM_STAT_DECL);\n #define make_tree_vec(t) make_tree_vec_stat (t MEM_STAT_INFO)\n \n-/* Tree nodes for SSA analysis.  */\n-\n-extern void init_phinodes (void);\n-extern void fini_phinodes (void);\n-extern void release_phi_node (tree);\n-#ifdef GATHER_STATISTICS\n-extern void phinodes_print_statistics (void);\n-#endif\n-\n-extern void init_ssanames (void);\n-extern void fini_ssanames (void);\n-extern tree make_ssa_name (tree, tree);\n-extern tree duplicate_ssa_name (tree, tree);\n-extern void duplicate_ssa_name_ptr_info (tree, struct ptr_info_def *);\n-extern void release_ssa_name (tree);\n-extern void release_defs (tree);\n-extern void replace_ssa_name_symbol (tree, tree);\n-\n-#ifdef GATHER_STATISTICS\n-extern void ssanames_print_statistics (void);\n-#endif\n-\n /* Return the (unique) IDENTIFIER_NODE node for a given name.\n    The name is supplied as a char *.  */\n "}]}