{"sha": "8e2b8d136cf9c61db32f94d844ce10d819f70954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUyYjhkMTM2Y2Y5YzYxZGIzMmY5NGQ4NDRjZTEwZDgxOWY3MDk1NA==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-05-10T14:40:59Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-05-10T14:40:59Z"}, "message": "Update to Netlib version of 1999-05-10\n\nFrom-SVN: r26864", "tree": {"sha": "2f60c099d0dc5fc900d95fee36cf23700d91cb55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f60c099d0dc5fc900d95fee36cf23700d91cb55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e2b8d136cf9c61db32f94d844ce10d819f70954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e2b8d136cf9c61db32f94d844ce10d819f70954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e2b8d136cf9c61db32f94d844ce10d819f70954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e2b8d136cf9c61db32f94d844ce10d819f70954/comments", "author": null, "committer": null, "parents": [{"sha": "9733e4ee3172af5cf90267abf4a9ce8e082c058b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9733e4ee3172af5cf90267abf4a9ce8e082c058b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9733e4ee3172af5cf90267abf4a9ce8e082c058b"}], "stats": {"total": 100, "additions": 64, "deletions": 36}, "files": [{"sha": "6d16a161263e09804319012a112870bed2ea3910", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -1,3 +1,11 @@\n+Mon May 10 17:33:45 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\tUpdate to Netlib version of 1999-05-10:\n+\t* changes.netlib, libF77/Version.c, libF77/abort_.c,\n+\tlibF77/c_log.c, libF77/ef1asc_.c, libF77/s_rnge.c,\n+\tlibF77/s_stop.c, libI77/Version.c, libI77/open.c,\n+\treadme.netlib: See changes.netlib for info.\n+\n Fri May 7 9:33:55 1999 Donn Terry (donn@interix.com)\n \n \t* libU77/dtime_.c (G77_dtime_0): Standard-conforming error check."}, {"sha": "a5252202bdbf4a4a60c6be77598088a938753a52", "filename": "libf2c/changes.netlib", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2Fchanges.netlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2Fchanges.netlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fchanges.netlib?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -3003,7 +3003,14 @@ Sun May  2 22:38:25 EDT 1999\n   libf77, libi77, libf2c.zip: make getenv_() more portable (call\n getenv() rather than knowing about char **environ); adjust some\n complex intrinsics to work with overlapping arguments (caused by\n-illegal use of equivalence); open.c: get \"external\" versus \"internal\"\n-right in the error message if a file cannot be opened; err.c: cast a\n-pointer difference to (int) for %d; rdfmt.c: omit fixed-length buffer\n-that could be overwritten by formats Inn or Lnn with nn > 83.\n+inappropriate use of equivalence); open.c: get \"external\" versus\n+\"internal\" right in the error message if a file cannot be opened;\n+err.c: cast a pointer difference to (int) for %d; rdfmt.c: omit\n+fixed-length buffer that could be overwritten by formats Inn or Lnn\n+with nn > 83.\n+\n+Mon May  3 13:14:07 EDT 1999\n+  \"Invisible\" changes to omit a few compiler warnings in f2c and\n+libf2c; two new casts in libf2c/open.c that matter with 64-bit longs,\n+and one more tweak (libf2c/c_log.c) for pathological equivalences.\n+  Minor update to \"fc\" script: new -L flag and comment correction."}, {"sha": "98a91098976ffda86e0eaa606d4ec4f8a1f55a2f", "filename": "libf2c/libF77/Version.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2FVersion.c?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -1,4 +1,4 @@\n-static char junk[] = \"\\n@(#)LIBF77 VERSION 19990502\\n\";\n+static char junk[] = \"\\n@(#)LIBF77 VERSION 19990503\\n\";\n \n /*\n */\n@@ -59,6 +59,8 @@ char __G77_LIBF77_VERSION__[] = \"0.5.24\";\n \t\t\tc_cos.c, c_exp.c, c_sin.c, d_cnjg.c, r_cnjg.c,\n \t\t\tz_cos.c, z_exp.c, z_log.c, z_sin.c: cope fully with\n \t\t\toverlapping arguments caused by equivalence.\n+\t3 May 1999:\t\"invisible\" tweaks to omit compiler warnings in\n+\t\t\tabort_.c, ef1asc_.c, s_rnge.c, s_stop.c.\n */\n \n #include <stdio.h>"}, {"sha": "f0c2f8df3599ee0ea8ec5abf10e875d6cefd3660", "filename": "libf2c/libF77/abort_.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fabort_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fabort_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fabort_.c?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -12,7 +12,5 @@ int G77_abort_0 (void)\n #endif\n {\n sig_die(\"Fortran abort routine called\", 1);\n-#ifdef __cplusplus\n-return 0;\n-#endif\n+return 0;\t/* not reached */\n }"}, {"sha": "24d1a3c957b43d8edddfcc353571817fbeee1c3b", "filename": "libf2c/libF77/c_log.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fc_log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fc_log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fc_log.c?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -11,7 +11,7 @@ extern double f__cabs(double, double);\n void c_log(complex *r, complex *z)\n #endif\n {\n-\tdouble zi = z->i, zr = z->r;\n-\tr->i = atan2(zi, zr);\n-\tr->r = log( f__cabs( zr, zi ) );\n+\tdouble zi, zr;\n+\tr->i = atan2(zi = z->i, zr = z->r);\n+\tr->r = log( f__cabs(zr, zi) );\n \t}"}, {"sha": "8588584fbabe132e88e16509134cca4e962cc7ff", "filename": "libf2c/libF77/ef1asc_.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fef1asc_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fef1asc_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fef1asc_.c?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -15,7 +15,5 @@ int G77_ef1asc_0 (ftnint *a, ftnlen *la, ftnint *b, ftnlen *lb)\n #endif\n {\n s_copy( (char *)a, (char *)b, EVEN(*la), *lb );\n-#ifdef __cplusplus\n-return 0;\n-#endif\n+return 0;\t/* ignored return value */\n }"}, {"sha": "fbe3219d580bc5fdc13f4c4cada3e7d730392f4f", "filename": "libf2c/libF77/s_rnge.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fs_rnge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fs_rnge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fs_rnge.c?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -20,7 +20,5 @@ fprintf(stderr, \".\\nAttempt to access the %ld-th element of variable \", offset+1\n while((i = *varn) && i != ' ')\n \tputc(*varn++, stderr);\n sig_die(\".\", 1);\n-#ifdef __cplusplus\n-return 0;\n-#endif\n+return 0;\t/* not reached */\n }"}, {"sha": "975edb7d4ad08148294166a6573fc6e10ecd980d", "filename": "libf2c/libF77/s_stop.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fs_stop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibF77%2Fs_stop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fs_stop.c?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -30,8 +30,13 @@ if(n > 0)\n f_exit();\n #endif\n exit(0);\n-#ifdef __cplusplus\n+\n+/* We cannot avoid (useless) compiler diagnostics here:\t\t*/\n+/* some compilers complain if there is no return statement,\t*/\n+/* and others complain that this one cannot be reached.\t\t*/\n+\n return 0; /* NOT REACHED */\n }\n-#endif\n+#ifdef __cplusplus\n }\n+#endif"}, {"sha": "c5cf773bf23505524784b3346276a6d275cf4bc7", "filename": "libf2c/libI77/Version.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibI77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibI77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2FVersion.c?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -1,4 +1,4 @@\n-static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 19990502\\n\";\n+static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 19990503\\n\";\n \n /*\n */\n@@ -300,6 +300,7 @@ wrtfmt.c:\n \t\t err.c: cast a pointer difference to (int) for %d.\n \t\t rdfmt.c: omit fixed-length buffer that could be overwritten\n \t\t by formats Inn or Lnn with nn > 83. */\n+/* 3 May 1999:\topen.c: insert two casts for machines with 64-bit longs. */\n \n \n "}, {"sha": "3e4c8bc32b5ce5de9fa11b6854532324d7e80973", "filename": "libf2c/libI77/open.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibI77%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2FlibI77%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fopen.c?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -187,7 +187,7 @@ integer f_open(olist *a)\n \t\t\topnerr(a->oerr,107,\"open\");\n \t\t}\n \telse\n-\t\tsprintf(buf, \"fort.%ld\", a->ounit);\n+\t\tsprintf(buf, \"fort.%ld\", (long)a->ounit);\n \tb->uscrtch = 0;\n \tb->uend=0;\n \tb->uwrt = 0;\n@@ -281,7 +281,7 @@ fk_open(int seq, int fmt, ftnint n)\n \tint rtn;\n \tint save_init;\n \n-\t(void) sprintf(nbuf,\"fort.%ld\",n);\n+\t(void) sprintf(nbuf,\"fort.%ld\",(long)n);\n \ta.oerr=1;\n \ta.ounit=n;\n \ta.ofnm=nbuf;"}, {"sha": "406a753cf30972628a60c143853942ce586a44e2", "filename": "libf2c/readme.netlib", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2Freadme.netlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2b8d136cf9c61db32f94d844ce10d819f70954/libf2c%2Freadme.netlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Freadme.netlib?ref=8e2b8d136cf9c61db32f94d844ce10d819f70954", "patch": "@@ -698,28 +698,44 @@ Sun May  2 22:38:25 EDT 1999\n   libf77, libi77, libf2c.zip: make getenv_() more portable (call\n getenv() rather than knowing about char **environ); adjust some\n complex intrinsics to work with overlapping arguments (caused by\n-illegal use of equivalence); open.c: get \"external\" versus \"internal\"\n-right in the error message if a file cannot be opened; err.c: cast a\n-pointer difference to (int) for %d; rdfmt.c: omit fixed-length buffer\n-that could be overwritten by formats Inn or Lnn with nn > 83.\n+inappropriate use of equivalence); open.c: get \"external\" versus\n+\"internal\" right in the error message if a file cannot be opened;\n+err.c: cast a pointer difference to (int) for %d; rdfmt.c: omit\n+fixed-length buffer that could be overwritten by formats Inn or Lnn\n+with nn > 83.\n+\n+Mon May  3 13:14:07 EDT 1999\n+  \"Invisible\" changes to omit a few compiler warnings in f2c and\n+libf2c; two new casts in libf2c/open.c that matter with 64-bit longs,\n+and one more tweak (libf2c/c_log.c) for pathological equivalences.\n+  Minor update to \"fc\" script: new -L flag and comment correction.\n+\n+Tue May  4 10:06:26 EDT 1999\n+   libf77, libf2c.zip: forgot to copy yesterday's latest updates to\n+netlib.\n \n Current timestamps of files in \"all from f2c/src\", sorted by time,\n appear below (mm/dd/year hh:mm:ss).  To bring your source up to date,\n obtain source files with a timestamp later than the time shown in your\n version.c.  Note that the time shown in the current version.c is the\n timestamp of the source module that immediately follows version.c below:\n \n- 3/28/1999  13:16:27  xsum0.out\n- 3/26/1999  23:18:20  version.c\n+ 5/03/1999  12:46:15  version.c\n+ 5/03/1999  12:39:35  formatdata.c\n+ 5/03/1999  12:31:14  format.c\n+ 5/03/1999  12:27:17  p1output.c\n+ 5/03/1999  12:27:17  data.c\n+ 5/03/1999  10:01:12  xsum0.out\n+ 5/03/1999   9:59:36  io.c\n+ 5/03/1999   9:59:36  misc.c\n+ 5/03/1999   9:59:36  init.c\n  3/26/1999  23:18:11  lex.c\n  3/11/1999  16:44:17  expr.c\n  3/11/1999  16:42:42  exec.c\n  2/10/1999  17:43:01  defs.h\n- 9/13/1998  22:18:21  format.c\n  9/08/1998  10:16:51  f2c.1\n  9/08/1998  10:16:48  f2c.1t\n  9/08/1998  10:14:53  intr.c\n- 8/31/1998  10:13:22  formatdata.c\n  5/16/1998  16:55:49  output.c\n  4/03/1998  17:15:05  gram.c\n  4/03/1998  17:14:59  gram.dcl\n@@ -732,21 +748,16 @@ timestamp of the source module that immediately follows version.c below:\n  7/21/1997  12:58:44  proc.c\n  2/11/1997  23:39:14  vax.c\n 12/04/1996  13:07:53  gram.exec\n-10/01/1996  14:36:18  init.c\n-10/01/1996  14:36:17  data.c\n  9/12/1996  12:12:46  equiv.c\n  8/26/1996   9:41:13  sysdep.c\n  7/09/1996  10:40:45  names.c\n  7/04/1996   9:55:45  sysdep.h\n  7/04/1996   9:55:43  put.c\n  7/04/1996   9:55:41  pread.c\n  7/04/1996   9:55:40  parse_args.c\n- 7/04/1996   9:55:40  p1output.c\n- 7/04/1996   9:55:37  misc.c\n- 7/04/1996   9:55:36  memset.c\n  7/04/1996   9:55:36  mem.c\n+ 7/04/1996   9:55:36  memset.c\n  7/04/1996   9:55:35  main.c\n- 7/04/1996   9:55:33  io.c\n  7/04/1996   9:55:29  error.c\n  7/04/1996   9:55:27  cds.c\n  7/03/1996  15:47:49  xsum.c"}]}