{"sha": "0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZkZGIxODQ3MDE5Y2ViNTcwYzZlMGFlYTBlYTc3OWYxZjk5ODhjZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-08-08T07:50:28Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-08-08T07:50:28Z"}, "message": "Fix file descriptor existence of MinGW.\n\n2019-08-08  Martin Liska  <mliska@suse.cz>\n\n\tPR bootstrap/91352\n\t* gcc.c (driver::detect_jobserver): Use is_valid_fd.\n\t* lto-wrapper.c (jobserver_active_p): Likewise.\n2019-08-08  Martin Liska  <mliska@suse.cz>\n\n\tPR bootstrap/91352\n\t* libiberty.h (is_valid_fd): New function.\n2019-08-08  Martin Liska  <mliska@suse.cz>\n\n\tPR bootstrap/91352\n\t* lrealpath.c (is_valid_fd): New function.\n\nFrom-SVN: r274208", "tree": {"sha": "8b7110505306ba08d399f18bc2af2f9037284603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b7110505306ba08d399f18bc2af2f9037284603"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe8e21fd730f01815bf6533289d2b3e33033a250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe8e21fd730f01815bf6533289d2b3e33033a250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe8e21fd730f01815bf6533289d2b3e33033a250"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "54f7d974821e0c0a1fc338c81f465fac90750bcf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "patch": "@@ -1,3 +1,9 @@\n+2019-08-08  Martin Liska  <mliska@suse.cz>\n+\n+\tPR bootstrap/91352\n+\t* gcc.c (driver::detect_jobserver): Use is_valid_fd.\n+\t* lto-wrapper.c (jobserver_active_p): Likewise.\n+\n 2019-08-08  Martin Liska  <mliska@suse.cz>\n \n \t* cgraphclones.c (set_new_clone_decl_and_node_flags): Drop"}, {"sha": "1216cdd505a18152dc1d3eee5f37755a396761f1", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "patch": "@@ -8380,8 +8380,8 @@ driver::detect_jobserver () const\n \t    = (sscanf (n + strlen (needle), \"%d,%d\", &rfd, &wfd) == 2\n \t       && rfd > 0\n \t       && wfd > 0\n-\t       && fcntl (rfd, F_GETFD) >= 0\n-\t       && fcntl (wfd, F_GETFD) >= 0);\n+\t       && is_valid_fd (rfd)\n+\t       && is_valid_fd (wfd));\n \n \t  /* Drop the jobserver if it's not working now.  */\n \t  if (!jobserver)"}, {"sha": "f1253cdc91ce3c68439193b677d1c97983e08a77", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "patch": "@@ -1237,8 +1237,8 @@ jobserver_active_p (void)\n   return (sscanf (n + strlen (needle), \"%d,%d\", &rfd, &wfd) == 2\n \t  && rfd > 0\n \t  && wfd > 0\n-\t  && fcntl (rfd, F_GETFD) >= 0\n-\t  && fcntl (wfd, F_GETFD) >= 0);\n+\t  && is_valid_fd (rfd)\n+\t  && is_valid_fd (wfd));\n }\n \n /* Execute gcc. ARGC is the number of arguments. ARGV contains the arguments. */"}, {"sha": "83bd789dd2e0444a401410cebec305eb34adcee8", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "patch": "@@ -1,3 +1,8 @@\n+2019-08-08  Martin Liska  <mliska@suse.cz>\n+\n+\tPR bootstrap/91352\n+\t* libiberty.h (is_valid_fd): New function.\n+\n 2019-07-18  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n \n \t* demangle.h (rust_is_mangled): Move to libiberty/rust-demangle.h."}, {"sha": "71192a2937728f1e768bed557e4e14728651adde", "filename": "include/libiberty.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "patch": "@@ -137,6 +137,10 @@ extern const char *unix_lbasename (const char *) ATTRIBUTE_RETURNS_NONNULL ATTRI\n \n extern char *lrealpath (const char *);\n \n+/* Return true when FD file descriptor exists.  */\n+\n+extern int is_valid_fd (int fd);\n+\n /* Concatenate an arbitrary number of strings.  You must pass NULL as\n    the last argument of this function, to terminate the list of\n    strings.  Allocates memory using xmalloc.  */"}, {"sha": "95cb1525f2c4c1e7a3ddb73e4c90a96ce753f3e1", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "patch": "@@ -1,3 +1,8 @@\n+2019-08-08  Martin Liska  <mliska@suse.cz>\n+\n+\tPR bootstrap/91352\n+\t* lrealpath.c (is_valid_fd): New function.\n+\n 2019-07-24  Martin Liska  <mliska@suse.cz>\n \n \tPR lto/91228"}, {"sha": "ac914a7a4f403b09c90416c8e1fa3c6b52c1b48a", "filename": "libiberty/lrealpath.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/libiberty%2Flrealpath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fddb1847019ceb570c6e0aea0ea779f1f9988cf/libiberty%2Flrealpath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Flrealpath.c?ref=0fddb1847019ceb570c6e0aea0ea779f1f9988cf", "patch": "@@ -49,6 +49,9 @@ components will be simplified.  The returned value will be allocated using\n #ifdef HAVE_STRING_H\n #include <string.h>\n #endif\n+#ifdef HAVE_FCNTL_H\n+#include <fcntl.h>\n+#endif\n \n /* On GNU libc systems the declaration is only visible with _GNU_SOURCE.  */\n #if defined(HAVE_CANONICALIZE_FILE_NAME) \\\n@@ -155,3 +158,16 @@ lrealpath (const char *filename)\n   /* This system is a lost cause, just duplicate the filename.  */\n   return strdup (filename);\n }\n+\n+/* Return true when FD file descriptor exists.  */\n+\n+int\n+is_valid_fd (int fd)\n+{\n+#if defined(_WIN32)\n+  HANDLE h = (HANDLE) _get_osfhandle (fd);\n+  return h != (HANDLE) -1;\n+#else\n+  return fcntl (fd, F_GETFD) >= 0;\n+#endif\n+}"}]}