{"sha": "0c5dba7ff5ca748346488e651641e4b93eb53a17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM1ZGJhN2ZmNWNhNzQ4MzQ2NDg4ZTY1MTY0MWU0YjkzZWI1M2ExNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T10:47:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T10:47:59Z"}, "message": "[multiple changes]\n\n2013-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* gnatlink.adb: Minor reformatting.\n\n2013-10-10  Yannick Moy  <moy@adacore.com>\n\n\t* debug.adb: Free flag d.E and change doc for flag d.K.\n\n2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Check_Precondition_Postcondition): If the\n\tpragma comes from an aspect spec, and the subprogram is a\n\tlibrary unit, treat as a ppc in a declarative part in ASIS mode,\n\tso that expression in aspect is properly analyzed. In this case\n\tthere is no later point at which the aspect specification would\n\tbe examined.\n\n2013-10-10  Bob Duff  <duff@adacore.com>\n\n\t* opt.ads: Minor comment fix.\n\n2013-10-10  Vadim Godunko  <godunko@adacore.com>\n\n\t* a-coinho-shared.ads, a-coinho-shared.adb: New file.\n\t* s-atocou.ads: Add procedure to initialize counter.\n\t* s-atocou.adb: Likewise.\n\t* s-atocou-builtin.adb: Likewise.\n\t* s-atocou-x86.adb: Likewise.\n\t* gcc-interface/Makefile.in: Select special version of\n\tIndefinite_Holders package on platforms where atomic built-ins\n\tare supported. Update tools target pairs for PikeOS.\n\nFrom-SVN: r203344", "tree": {"sha": "aef1bc519fb72a6d3e5a3e8a0d806e1fdf2b1d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aef1bc519fb72a6d3e5a3e8a0d806e1fdf2b1d32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c5dba7ff5ca748346488e651641e4b93eb53a17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5dba7ff5ca748346488e651641e4b93eb53a17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c5dba7ff5ca748346488e651641e4b93eb53a17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5dba7ff5ca748346488e651641e4b93eb53a17/comments", "author": null, "committer": null, "parents": [{"sha": "cd38efa560f565cb02cba62fe919e591dc110b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd38efa560f565cb02cba62fe919e591dc110b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd38efa560f565cb02cba62fe919e591dc110b74"}], "stats": {"total": 701, "additions": 625, "deletions": 76}, "files": [{"sha": "6f24bc6518d2982f9d456d8a41210c178fc1cc8d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -1,3 +1,35 @@\n+2013-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatlink.adb: Minor reformatting.\n+\n+2013-10-10  Yannick Moy  <moy@adacore.com>\n+\n+\t* debug.adb: Free flag d.E and change doc for flag d.K.\n+\n+2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Check_Precondition_Postcondition): If the\n+\tpragma comes from an aspect spec, and the subprogram is a\n+\tlibrary unit, treat as a ppc in a declarative part in ASIS mode,\n+\tso that expression in aspect is properly analyzed. In this case\n+\tthere is no later point at which the aspect specification would\n+\tbe examined.\n+\n+2013-10-10  Bob Duff  <duff@adacore.com>\n+\n+\t* opt.ads: Minor comment fix.\n+\n+2013-10-10  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* a-coinho-shared.ads, a-coinho-shared.adb: New file.\n+\t* s-atocou.ads: Add procedure to initialize counter.\n+\t* s-atocou.adb: Likewise.\n+\t* s-atocou-builtin.adb: Likewise.\n+\t* s-atocou-x86.adb: Likewise.\n+\t* gcc-interface/Makefile.in: Select special version of\n+\tIndefinite_Holders package on platforms where atomic built-ins\n+\tare supported. Update tools target pairs for PikeOS.\n+\n 2013-10-10  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb: Minor reformatting."}, {"sha": "9300c0b1dc65b2192a35e8d952c04f1ea98de88b", "filename": "gcc/ada/a-coinho-shared.adb", "status": "added", "additions": 358, "deletions": 0, "changes": 358, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fa-coinho-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fa-coinho-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.adb?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -0,0 +1,358 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT LIBRARY COMPONENTS                          --\n+--                                                                          --\n+--     A D A . C O N T A I N E R S . I N D E F I N I T E _ H O L D E R S    --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--             Copyright (C) 2013, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+------------------------------------------------------------------------------\n+\n+with Ada.Unchecked_Deallocation;\n+\n+package body Ada.Containers.Indefinite_Holders is\n+\n+   procedure Free is\n+     new Ada.Unchecked_Deallocation (Element_Type, Element_Access);\n+\n+   ---------\n+   -- \"=\" --\n+   ---------\n+\n+   function \"=\" (Left, Right : Holder) return Boolean is\n+   begin\n+      if Left.Reference = null and Right.Reference = null then\n+         return True;\n+\n+      elsif Left.Reference /= null and Right.Reference /= null then\n+         return Left.Reference.Element.all = Right.Reference.Element.all;\n+\n+      else\n+         return False;\n+      end if;\n+   end \"=\";\n+\n+   ------------\n+   -- Adjust --\n+   ------------\n+\n+   overriding procedure Adjust (Container : in out Holder) is\n+   begin\n+      if Container.Reference /= null then\n+         Reference (Container.Reference);\n+      end if;\n+\n+      Container.Busy := 0;\n+   end Adjust;\n+\n+   ------------\n+   -- Assign --\n+   ------------\n+\n+   procedure Assign (Target : in out Holder; Source : Holder) is\n+   begin\n+      if Target.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      if Target.Reference /= Source.Reference then\n+         if Target.Reference /= null then\n+            Unreference (Target.Reference);\n+         end if;\n+\n+         Target.Reference := Source.Reference;\n+\n+         if Source.Reference /= null then\n+            Reference (Target.Reference);\n+         end if;\n+      end if;\n+   end Assign;\n+\n+   -----------\n+   -- Clear --\n+   -----------\n+\n+   procedure Clear (Container : in out Holder) is\n+   begin\n+      if Container.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      Unreference (Container.Reference);\n+      Container.Reference := null;\n+   end Clear;\n+\n+   ----------\n+   -- Copy --\n+   ----------\n+\n+   function Copy (Source : Holder) return Holder is\n+   begin\n+      if Source.Reference = null then\n+         return (AF.Controlled with null, 0);\n+      else\n+         Reference (Source.Reference);\n+\n+         return (AF.Controlled with Source.Reference, 0);\n+      end if;\n+   end Copy;\n+\n+   -------------\n+   -- Element --\n+   -------------\n+\n+   function Element (Container : Holder) return Element_Type is\n+   begin\n+      if Container.Reference = null then\n+         raise Constraint_Error with \"container is empty\";\n+      else\n+         return Container.Reference.Element.all;\n+      end if;\n+   end Element;\n+\n+   --------------\n+   -- Finalize --\n+   --------------\n+\n+   overriding procedure Finalize (Container : in out Holder) is\n+   begin\n+      if Container.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      if Container.Reference /= null then\n+         Unreference (Container.Reference);\n+         Container.Reference := null;\n+      end if;\n+   end Finalize;\n+\n+   --------------\n+   -- Is_Empty --\n+   --------------\n+\n+   function Is_Empty (Container : Holder) return Boolean is\n+   begin\n+      return Container.Reference = null;\n+   end Is_Empty;\n+\n+   ----------\n+   -- Move --\n+   ----------\n+\n+   procedure Move (Target : in out Holder; Source : in out Holder) is\n+   begin\n+      if Target.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      if Source.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      if Target.Reference /= Source.Reference then\n+         if Target.Reference /= null then\n+            Unreference (Target.Reference);\n+         end if;\n+\n+         Target.Reference := Source.Reference;\n+         Source.Reference := null;\n+      end if;\n+   end Move;\n+\n+   -------------------\n+   -- Query_Element --\n+   -------------------\n+\n+   procedure Query_Element\n+     (Container : Holder;\n+      Process   : not null access procedure (Element : Element_Type))\n+   is\n+      B : Natural renames Container'Unrestricted_Access.Busy;\n+\n+   begin\n+      if Container.Reference = null then\n+         raise Constraint_Error with \"container is empty\";\n+      end if;\n+\n+      B := B + 1;\n+\n+      begin\n+         Process (Container.Reference.Element.all);\n+      exception\n+         when others =>\n+            B := B - 1;\n+            raise;\n+      end;\n+\n+      B := B - 1;\n+   end Query_Element;\n+\n+   ----------\n+   -- Read --\n+   ----------\n+\n+   procedure Read\n+     (Stream    : not null access Ada.Streams.Root_Stream_Type'Class;\n+      Container : out Holder)\n+   is\n+   begin\n+      Clear (Container);\n+\n+      if not Boolean'Input (Stream) then\n+         Container.Reference :=\n+            new Shared_Holder'\n+              (Counter => <>,\n+               Element => new Element_Type'(Element_Type'Input (Stream)));\n+      end if;\n+   end Read;\n+\n+   ---------------\n+   -- Reference --\n+   ---------------\n+\n+   procedure Reference (Item : not null Shared_Holder_Access) is\n+   begin\n+      System.Atomic_Counters.Increment (Item.Counter);\n+   end Reference;\n+\n+   ---------------------\n+   -- Replace_Element --\n+   ---------------------\n+\n+   procedure Replace_Element\n+     (Container : in out Holder;\n+      New_Item  : Element_Type)\n+   is\n+      --  Element allocator may need an accessibility check in case actual type\n+      --  is class-wide or has access discriminants (RM 4.8(10.1) and\n+      --  AI12-0035).\n+\n+      pragma Unsuppress (Accessibility_Check);\n+\n+   begin\n+      if Container.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      if Container.Reference = null then\n+         --  Holder is empty, allocate new Shared_Holder.\n+\n+         Container.Reference :=\n+            new Shared_Holder'\n+              (Counter => <>,\n+               Element => new Element_Type'(New_Item));\n+\n+      elsif System.Atomic_Counters.Is_One (Container.Reference.Counter) then\n+         --  Shared_Holder can be reused.\n+\n+         Free (Container.Reference.Element);\n+         Container.Reference.Element := new Element_Type'(New_Item);\n+\n+      else\n+         Unreference (Container.Reference);\n+         Container.Reference :=\n+            new Shared_Holder'\n+              (Counter => <>,\n+               Element => new Element_Type'(New_Item));\n+      end if;\n+   end Replace_Element;\n+\n+   ---------------\n+   -- To_Holder --\n+   ---------------\n+\n+   function To_Holder (New_Item : Element_Type) return Holder is\n+      --  The element allocator may need an accessibility check in the case the\n+      --  actual type is class-wide or has access discriminants (RM 4.8(10.1)\n+      --  and AI12-0035).\n+\n+      pragma Unsuppress (Accessibility_Check);\n+\n+   begin\n+      return\n+        (AF.Controlled with\n+            new Shared_Holder'\n+              (Counter => <>,\n+               Element => new Element_Type'(New_Item)), 0);\n+   end To_Holder;\n+\n+   -----------------\n+   -- Unreference --\n+   -----------------\n+\n+   procedure Unreference (Item : not null Shared_Holder_Access) is\n+\n+      procedure Free is\n+        new Ada.Unchecked_Deallocation (Shared_Holder, Shared_Holder_Access);\n+\n+      Aux : Shared_Holder_Access := Item;\n+\n+   begin\n+      if System.Atomic_Counters.Decrement (Aux.Counter) then\n+         Free (Aux.Element);\n+         Free (Aux);\n+      end if;\n+   end Unreference;\n+\n+   --------------------\n+   -- Update_Element --\n+   --------------------\n+\n+   procedure Update_Element\n+     (Container : Holder;\n+      Process   : not null access procedure (Element : in out Element_Type))\n+   is\n+      B : Natural renames Container'Unrestricted_Access.Busy;\n+\n+   begin\n+      if Container.Reference = null then\n+         raise Constraint_Error with \"container is empty\";\n+      end if;\n+\n+      B := B + 1;\n+\n+      begin\n+         Process (Container.Reference.Element.all);\n+      exception\n+         when others =>\n+            B := B - 1;\n+            raise;\n+      end;\n+\n+      B := B - 1;\n+   end Update_Element;\n+\n+   -----------\n+   -- Write --\n+   -----------\n+\n+   procedure Write\n+     (Stream    : not null access Ada.Streams.Root_Stream_Type'Class;\n+      Container : Holder)\n+   is\n+   begin\n+      Boolean'Output (Stream, Container.Reference = null);\n+\n+      if Container.Reference /= null then\n+         Element_Type'Output (Stream, Container.Reference.Element.all);\n+      end if;\n+   end Write;\n+\n+end Ada.Containers.Indefinite_Holders;"}, {"sha": "9abeda33a8f84c9caf6b04c4a0adf8bf68e83f7b", "filename": "gcc/ada/a-coinho-shared.ads", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fa-coinho-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fa-coinho-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.ads?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -0,0 +1,115 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT LIBRARY COMPONENTS                          --\n+--                                                                          --\n+--    A D A . C O N T A I N E R S . I N D E F I N I T E _ H O L D E R S     --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--             Copyright (C) 2013, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+------------------------------------------------------------------------------\n+\n+private with Ada.Finalization;\n+private with Ada.Streams;\n+private with System.Atomic_Counters;\n+\n+generic\n+   type Element_Type (<>) is private;\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n+\n+package Ada.Containers.Indefinite_Holders is\n+   pragma Preelaborate (Indefinite_Holders);\n+   pragma Remote_Types (Indefinite_Holders);\n+\n+   type Holder is tagged private;\n+   pragma Preelaborable_Initialization (Holder);\n+\n+   Empty_Holder : constant Holder;\n+\n+   function \"=\" (Left, Right : Holder) return Boolean;\n+\n+   function To_Holder (New_Item : Element_Type) return Holder;\n+\n+   function Is_Empty (Container : Holder) return Boolean;\n+\n+   procedure Clear (Container : in out Holder);\n+\n+   function Element (Container : Holder) return Element_Type;\n+\n+   procedure Replace_Element\n+     (Container : in out Holder;\n+      New_Item  : Element_Type);\n+\n+   procedure Query_Element\n+     (Container : Holder;\n+      Process   : not null access procedure (Element : Element_Type));\n+   procedure Update_Element\n+     (Container : Holder;\n+      Process   : not null access procedure (Element : in out Element_Type));\n+\n+   procedure Assign (Target : in out Holder; Source : Holder);\n+\n+   function Copy (Source : Holder) return Holder;\n+\n+   procedure Move (Target : in out Holder; Source : in out Holder);\n+\n+private\n+\n+   package AF renames Ada.Finalization;\n+\n+   type Element_Access is access all Element_Type;\n+\n+   type Shared_Holder is record\n+      Counter : System.Atomic_Counters.Atomic_Counter;\n+      Element : Element_Access;\n+   end record;\n+\n+   type Shared_Holder_Access is access all Shared_Holder;\n+\n+   procedure Reference (Item : not null Shared_Holder_Access);\n+   --  Increment reference counter\n+\n+   procedure Unreference (Item : not null Shared_Holder_Access);\n+   --  Decrement reference counter, deallocate Item when counter goes to zero\n+\n+   procedure Read\n+     (Stream    : not null access Ada.Streams.Root_Stream_Type'Class;\n+      Container : out Holder);\n+\n+   procedure Write\n+     (Stream    : not null access Ada.Streams.Root_Stream_Type'Class;\n+      Container : Holder);\n+\n+   type Holder is new Ada.Finalization.Controlled with record\n+      Reference : Shared_Holder_Access;\n+      Busy      : Natural := 0;\n+   end record;\n+   for Holder'Read use Read;\n+   for Holder'Write use Write;\n+\n+   overriding procedure Adjust (Container : in out Holder);\n+   overriding procedure Finalize (Container : in out Holder);\n+\n+   Empty_Holder : constant Holder := (AF.Controlled with null, 0);\n+\n+end Ada.Containers.Indefinite_Holders;"}, {"sha": "8775af7090f2881dc9bf775754ae00dad8ba435d", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -122,13 +122,13 @@ package body Debug is\n    --  d.B\n    --  d.C  Generate concatenation call, do not generate inline code\n    --  d.D  SPARK strict mode\n-   --  d.E  Force SPARK mode for gnat2why\n+   --  d.E\n    --  d.F  SPARK mode\n    --  d.G  Frame condition mode for gnat2why\n    --  d.H  Standard package only mode for gnat2why\n    --  d.I  Do not ignore enum representation clauses in CodePeer mode\n    --  d.J  Disable parallel SCIL generation mode\n-   --  d.K  SPARK detection only mode for gnat2why\n+   --  d.K  SPARK check mode for gnat2why\n    --  d.L  Depend on back end for limited types in if and case expressions\n    --  d.M  Relaxed RM semantics\n    --  d.N  Add node to all entities\n@@ -597,10 +597,6 @@ package body Debug is\n    --  d.D  SPARK strict mode. Interpret compiler permissions as strictly as\n    --       possible in SPARK mode.\n \n-   --  d.E  Force SPARK mode for gnat2why. In this mode, errors are issued for\n-   --       all violations of SPARK in user code, and warnings are issued for\n-   --       constructs not yet implemented in gnat2why.\n-\n    --  d.F  SPARK mode. Generate AST in a form suitable for formal\n    --       verification, as well as additional cross reference information in\n    --       ALI files to compute effects of subprograms. Note that ALI files\n@@ -624,8 +620,8 @@ package body Debug is\n    --       done in parallel to speed processing. This switch disables this\n    --       behavior.\n \n-   --  d.K  SPARK detection only mode for gnat2why. In this mode, gnat2why\n-   --       does not generate Why code.\n+   --  d.K  SPARK check mode for gnat2why. In this mode, gnat2why does not\n+   --       generate Why code.\n \n    --  d.L  Normally the front end generates special expansion for conditional\n    --       expressions of a limited type. This debug flag removes this special"}, {"sha": "067d5a1ff1afb6808cbeebb3e0f11fc5f3392979", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -408,6 +408,8 @@ DUMMY_SOCKETS_TARGET_PAIRS = \\\n # special version of Ada.Strings.Unbounded package can be used.\n \n ATOMICS_TARGET_PAIRS = \\\n+  a-coinho.adb<a-coinho-shared.adb \\\n+  a-coinho.ads<a-coinho-shared.ads \\\n   a-stunau.adb<a-stunau-shared.adb \\\n   a-suteio.adb<a-suteio-shared.adb \\\n   a-strunb.ads<a-strunb-shared.ads \\\n@@ -1581,6 +1583,13 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(target_\n   LIBRARY_VERSION := $(subst .,_,$(LIB_VERSION))\n endif\n \n+# PikeOS\n+ifeq ($(strip $(filter-out powerpc% %86 sysgo pikeos,$(target_cpu) $(target_vendor) $(target_os)))),)\n+  TOOLS_TARGET_PAIRS=\\\n+  mlib-tgt-specific.adb<mlib-tgt-specific-xi.adb \\\n+  indepsw.adb<indepsw-gnu.adb\n+endif\n+\n # *-elf, *-eabi or *-eabispe\n ifeq ($(strip $(filter-out elf eabi eabispe,$(target_os))),)\n   TOOLS_TARGET_PAIRS=\\"}, {"sha": "68262f447e44a24d8911c0888fe1eefe486098d0", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 59, "deletions": 53, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -265,9 +265,7 @@ procedure Gnatlink is\n       end loop;\n \n       Findex2 := File_Name'Last;\n-      while Findex2 > Findex1\n-        and then File_Name (Findex2) /=  '.'\n-      loop\n+      while Findex2 > Findex1 and then File_Name (Findex2) /=  '.' loop\n          Findex2 := Findex2 - 1;\n       end loop;\n \n@@ -343,7 +341,8 @@ procedure Gnatlink is\n    ------------------\n \n    procedure Process_Args is\n-      Next_Arg  : Integer;\n+      Next_Arg : Integer;\n+\n       Skip_Next : Boolean := False;\n       --  Set to true if the next argument is to be added into the list of\n       --  linker's argument without parsing it.\n@@ -637,8 +636,8 @@ procedure Gnatlink is\n                   Linker_Objects.Table (Linker_Objects.Last) :=\n                     new String'(Arg);\n \n-               --  If host object file, record object file\n-               --  e.g. accept foo.o as well as foo.obj on VMS target\n+               --  If host object file, record object file e.g. accept foo.o\n+               --  as well as foo.obj on VMS target.\n \n                elsif Arg'Length > Get_Object_Suffix.all'Length\n                  and then Arg\n@@ -684,8 +683,8 @@ procedure Gnatlink is\n         and then Linker_Options.Last >= Linker_Options.First\n       then\n          Ali_File_Name :=\n-           new String'(Linker_Options.Table (Linker_Options.First).all &\n-                                                                   \".ali\");\n+           new String'(Linker_Options.Table (Linker_Options.First).all\n+                       & \".ali\");\n       end if;\n    end Process_Args;\n \n@@ -895,6 +894,7 @@ procedure Gnatlink is\n \n       procedure Store_File_Context is\n          use type System.CRTL.long;\n+\n       begin\n          RB_Next_Line := Next_Line;\n          RB_Nfirst    := Nfirst;\n@@ -995,9 +995,10 @@ procedure Gnatlink is\n          Linker_Objects.Table (Linker_Objects.Last) :=\n            new String'(Next_Line (Nfirst .. Nlast));\n \n-         Link_Bytes := Link_Bytes + Nlast - Nfirst + 2;\n          --  Nlast - Nfirst + 1, for the size, plus one for the space between\n          --  each arguments.\n+\n+         Link_Bytes := Link_Bytes + Nlast - Nfirst + 2;\n       end loop;\n \n       Objs_End := Linker_Objects.Last;\n@@ -1127,19 +1128,21 @@ procedure Gnatlink is\n                elsif Next_Line (Nfirst .. Nlast) = \"-ldecgnat\"\n                  or else Next_Line (Nfirst .. Nlast) = \"-lgnarl\"\n                  or else Next_Line (Nfirst .. Nlast) = \"-lgnat\"\n-                 or else Next_Line\n+                 or else\n+                   Next_Line\n                      (1 .. Natural'Min (Nlast, 8 + Library_Version'Length)) =\n                        Shared_Lib (\"gnarl\")\n-                 or else Next_Line\n+                 or else\n+                   Next_Line\n                      (1 .. Natural'Min (Nlast, 7 + Library_Version'Length)) =\n                        Shared_Lib (\"gnat\")\n                then\n                   --  If it is a shared library, remove the library version.\n                   --  We will be looking for the static version of the library\n                   --  as it is in the same directory as the shared version.\n \n-                  if Next_Line (Nlast - Library_Version'Length + 1 .. Nlast)\n-                       = Library_Version\n+                  if Next_Line (Nlast - Library_Version'Length + 1 .. Nlast) =\n+                       Library_Version\n                   then\n                      --  Set Last to point to last character before the\n                      --  library version.\n@@ -1159,11 +1162,10 @@ procedure Gnatlink is\n                      File_Path : String_Access;\n \n                      Object_Lib_Extension : constant String :=\n-                                              Value (Object_Library_Ext_Ptr);\n+                       Value (Object_Library_Ext_Ptr);\n \n                      File_Name : constant String := \"lib\" &\n-                                   Next_Line (Nfirst + 2 .. Last) &\n-                                   Object_Lib_Extension;\n+                       Next_Line (Nfirst + 2 .. Last) & Object_Lib_Extension;\n \n                      Run_Path_Opt : constant String :=\n                        Value (Run_Path_Option_Ptr);\n@@ -1179,9 +1181,9 @@ procedure Gnatlink is\n                      if File_Path /= null then\n                         if GNAT_Static then\n \n-                           --  If static gnatlib found, explicitly\n-                           --  specify to overcome possible linker\n-                           --  default usage of shared version.\n+                           --  If static gnatlib found, explicitly specify to\n+                           --  overcome possible linker default usage of shared\n+                           --  version.\n \n                            Linker_Options.Increment_Last;\n \n@@ -1191,9 +1193,9 @@ procedure Gnatlink is\n                         elsif GNAT_Shared then\n                            if Opt.Run_Path_Option then\n \n-                              --  If shared gnatlib desired, add the\n-                              --  appropriate system specific switch\n-                              --  so that it can be located at runtime.\n+                              --  If shared gnatlib desired, add appropriate\n+                              --  system specific switch so that it can be\n+                              --  located at runtime.\n \n                               if Run_Path_Opt'Length /= 0 then\n \n@@ -1204,6 +1206,7 @@ procedure Gnatlink is\n \n                                  declare\n                                     Path : String (1 .. File_Path'Length + 15);\n+\n                                     Path_Last : constant Natural :=\n                                                   File_Path'Length;\n \n@@ -1299,9 +1302,9 @@ procedure Gnatlink is\n                                                                  Run_Path_Opt\n                                           then\n                                              --  We have found an already\n-                                             --  specified run_path_option: we\n-                                             --  will add to this switch,\n-                                             --  because only one\n+                                             --  specified run_path_option:\n+                                             --  we will add to this\n+                                             --  switch, because only one\n                                              --  run_path_option should be\n                                              --  specified.\n \n@@ -1378,9 +1381,8 @@ procedure Gnatlink is\n                         end if;\n \n                      else\n-                        --  If gnatlib library not found, then\n-                        --  add it anyway in case some other\n-                        --  mechanism may find it.\n+                        --  If gnatlib library not found, then add it anyway in\n+                        --  case some other mechanism may find it.\n \n                         Linker_Options.Increment_Last;\n                         Linker_Options.Table (Linker_Options.Last) :=\n@@ -1872,8 +1874,9 @@ begin\n    if Compile_Bind_File then\n       Bind_Step : declare\n          Success : Boolean;\n-         Args    : Argument_List\n-           (1 .. Binder_Options_From_ALI.Last + Binder_Options.Last + 1);\n+\n+         Args : Argument_List\n+                 (1 .. Binder_Options_From_ALI.Last + Binder_Options.Last + 1);\n \n       begin\n          for J in 1 .. Binder_Options_From_ALI.Last loop\n@@ -1954,8 +1957,7 @@ begin\n \n          elsif RTX_RTSS_Kernel_Module_On_Target then\n \n-            --  Remove flags not relevant for Microsoft linker and adapt some\n-            --  others.\n+            --  Remove irrelevant flags for Microsoft linker, adapt some others\n \n             for J in reverse Linker_Options.First .. Linker_Options.Last loop\n \n@@ -1976,12 +1978,13 @@ begin\n \n                --  Replace \"-L\" by its counterpart \"/LIBPATH:\" and UNIX \"/\" by\n                --  Windows \"\\\".\n+\n                elsif Linker_Options.Table (J) (1 .. 2) = \"-L\" then\n                   declare\n                      Libpath_Option : constant String_Access := new String'\n                        (\"/LIBPATH:\" &\n-                        Linker_Options.Table (J)\n-                          (3 .. Linker_Options.Table (J).all'Last));\n+                          Linker_Options.Table\n+                            (J) (3 .. Linker_Options.Table (J).all'Last));\n                   begin\n                      for Index in 10 .. Libpath_Option'Last loop\n                         if Libpath_Option (Index) = '/' then\n@@ -1993,10 +1996,12 @@ begin\n                   end;\n \n                --  Replace \"-g\" by \"/DEBUG\"\n+\n                elsif Linker_Options.Table (J) (1 .. 2) = \"-g\" then\n                   Linker_Options.Table (J) := new String'(\"/DEBUG\");\n \n                --  Replace \"-o\" by \"/OUT:\"\n+\n                elsif Linker_Options.Table (J) (1 .. 2) = \"-o\" then\n                   Linker_Options.Table (J + 1) := new String'\n                     (\"/OUT:\" & Linker_Options.Table (J + 1).all);\n@@ -2007,13 +2012,15 @@ begin\n                   Num_Args := Num_Args - 1;\n \n                --  Replace \"--stack=\" by \"/STACK:\"\n+\n                elsif Linker_Options.Table (J) (1 .. 8) = \"--stack=\" then\n                   Linker_Options.Table (J) := new String'\n                     (\"/STACK:\" &\n                      Linker_Options.Table (J)\n                        (9 .. Linker_Options.Table (J).all'Last));\n \n                --  Replace \"-v\" by its counterpart \"/VERBOSE\"\n+\n                elsif Linker_Options.Table (J) (1 .. 2) = \"-v\" then\n                   Linker_Options.Table (J) := new String'(\"/VERBOSE\");\n                end if;\n@@ -2069,30 +2076,30 @@ begin\n             end;\n          end if;\n \n-         --  Remove duplicate stack size setting from the Linker_Options\n-         --  table. The stack setting option \"-Xlinker --stack=R,C\" can be\n-         --  found in one line when set by a pragma Linker_Options or in two\n-         --  lines (\"-Xlinker\" then \"--stack=R,C\") when set on the command\n-         --  line. We also check for the \"-Wl,--stack=R\" style option.\n+         --  Remove duplicate stack size setting from the Linker_Options table.\n+         --  The stack setting option \"-Xlinker --stack=R,C\" can be found\n+         --  in one line when set by a pragma Linker_Options or in two lines\n+         --  (\"-Xlinker\" then \"--stack=R,C\") when set on the command line. We\n+         --  also check for the \"-Wl,--stack=R\" style option.\n \n-         --  We must remove the second stack setting option instance\n-         --  because the one on the command line will always be the first\n-         --  one. And any subsequent stack setting option will overwrite the\n-         --  previous one. This is done especially for GNAT/NT where we set\n-         --  the stack size for tasking programs by a pragma in the NT\n-         --  specific tasking package System.Task_Primitives.Operations.\n+         --  We must remove the second stack setting option instance because\n+         --  the one on the command line will always be the first one. And any\n+         --  subsequent stack setting option will overwrite the previous one.\n+         --  This is done especially for GNAT/NT where we set the stack size\n+         --  for tasking programs by a pragma in the NT specific tasking\n+         --  package System.Task_Primitives.Operations.\n \n          --  Note: This is not a FOR loop that runs from Linker_Options.First\n          --  to Linker_Options.Last, since operations within the loop can\n          --  modify the length of the table.\n \n          Clean_Link_Option_Set : declare\n-            J : Natural := Linker_Options.First;\n+            J                  : Natural;\n             Shared_Libgcc_Seen : Boolean := False;\n \n          begin\n+            J := Linker_Options.First;\n             while J <= Linker_Options.Last loop\n-\n                if Linker_Options.Table (J).all = \"-Xlinker\"\n                  and then J < Linker_Options.Last\n                  and then Linker_Options.Table (J + 1)'Length > 8\n@@ -2128,12 +2135,12 @@ begin\n                --  pragma Linker_Options set in the NT runtime.\n \n                if (Linker_Options.Table (J)'Length > 17\n-                   and then Linker_Options.Table (J) (1 .. 17)\n-                           = \"-Xlinker --stack=\")\n+                    and then Linker_Options.Table (J) (1 .. 17) =\n+                                                     \"-Xlinker --stack=\")\n                  or else\n                   (Linker_Options.Table (J)'Length > 12\n-                   and then Linker_Options.Table (J) (1 .. 12)\n-                            = \"-Wl,--stack=\")\n+                    and then Linker_Options.Table (J) (1 .. 12) =\n+                                                     \"-Wl,--stack=\")\n                then\n                   if Stack_Op then\n                      Linker_Options.Table (J .. Linker_Options.Last - 1) :=\n@@ -2245,8 +2252,7 @@ begin\n                   Write_Eol;\n \n                   for J in\n-                    Response_File_Objects.First ..\n-                    Response_File_Objects.Last\n+                    Response_File_Objects.First .. Response_File_Objects.Last\n                   loop\n                      Write_Str (Response_File_Objects.Table (J).all);\n                      Write_Eol;"}, {"sha": "42b136922ed3279da224330d4c21a6a78d9efff3", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -1734,12 +1734,12 @@ package Opt is\n    Ada_Version_Config : Ada_Version_Type;\n    --  GNAT\n    --  This is the value of the configuration switch for the Ada 83 mode, as\n-   --  set by the command line switches -gnat83/95/05, and possibly modified by\n-   --  the use of configuration pragmas Ada_*. This switch is used to set the\n-   --  initial value for Ada_Version mode at the start of analysis of a unit.\n-   --  Note however that the setting of this flag is ignored for internal and\n-   --  predefined units (which are always compiled in the most up to date\n-   --  version of Ada).\n+   --  set by the command line switches -gnat83/95/2005/2012, and possibly\n+   --  modified by the use of configuration pragmas Ada_*. This switch is used\n+   --  to set the initial value for Ada_Version mode at the start of analysis\n+   --  of a unit.  Note however that the setting of this flag is ignored for\n+   --  internal and predefined units (which are always compiled in the most up\n+   --  to date version of Ada).\n \n    Ada_Version_Pragma_Config : Node_Id;\n    --  This will be set non empty if it is set by a configuration pragma"}, {"sha": "5e31c18674cd38685efcb7d2cf47fb780a387c7d", "filename": "gcc/ada/s-atocou-builtin.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fs-atocou-builtin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fs-atocou-builtin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou-builtin.adb?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                       Copyright (C) 2011, AdaCore                        --\n+--                    Copyright (C) 2011-2013, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -72,6 +72,15 @@ package body System.Atomic_Counters is\n       Sync_Add_And_Fetch (Item.Value'Unrestricted_Access, 1);\n    end Increment;\n \n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (Item : out Atomic_Counter) is\n+   begin\n+      Item.Value := 1;\n+   end Initialize;\n+\n    ------------\n    -- Is_One --\n    ------------"}, {"sha": "2281e1034370e91a9df5f3ffb8a141c73ee8f82b", "filename": "gcc/ada/s-atocou-x86.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fs-atocou-x86.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fs-atocou-x86.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou-x86.adb?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                       Copyright (C) 2011, AdaCore                        --\n+--                    Copyright (C) 2011-2013, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -74,6 +74,15 @@ package body System.Atomic_Counters is\n          Volatile => True);\n    end Increment;\n \n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (Item : out Atomic_Counter) is\n+   begin\n+      Item.Value := 1;\n+   end Initialize;\n+\n    ------------\n    -- Is_One --\n    ------------"}, {"sha": "8650fe7f1dd904e62f674355d665ff25d3105fd9", "filename": "gcc/ada/s-atocou.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fs-atocou.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fs-atocou.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou.adb?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                       Copyright (C) 2011, AdaCore                        --\n+--                    Copyright (C) 2011-2013, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -57,6 +57,15 @@ package body System.Atomic_Counters is\n       raise Program_Error;\n    end Increment;\n \n+   ----------------\n+   -- Initialize --\n+   ----------------\n+\n+   procedure Initialize (Item : out Atomic_Counter) is\n+   begin\n+      raise Program_Error;\n+   end Initialize;\n+\n    ------------\n    -- Is_One --\n    ------------"}, {"sha": "fc2fd43ac7b522f737d0b37b74c46a29c6afb0c2", "filename": "gcc/ada/s-atocou.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fs-atocou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fs-atocou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atocou.ads?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                       Copyright (C) 2011, AdaCore                        --\n+--                    Copyright (C) 2011-2013, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -65,6 +65,12 @@ package System.Atomic_Counters is\n    pragma Inline_Always (Is_One);\n    --  Returns True when value of the atomic counter is one.\n \n+   procedure Initialize (Item : out Atomic_Counter);\n+   pragma Inline_Always (Initialize);\n+   --  Initialize counter by setting its value to one. This subprogram is\n+   --  intended to be used in special cases when counter object can't be\n+   --  initialized in standard way.\n+\n private\n \n    type Unsigned_32 is mod 2 ** 32;"}, {"sha": "25ba32702a31acc71605af68f25f7cb9a50e1412", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5dba7ff5ca748346488e651641e4b93eb53a17/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0c5dba7ff5ca748346488e651641e4b93eb53a17", "patch": "@@ -3654,9 +3654,11 @@ package body Sem_Prag is\n          elsif Nkind (PO) = N_Compilation_Unit_Aux then\n \n             --  In formal verification mode, analyze pragma expression for\n-            --  correctness, as it is not expanded later.\n+            --  correctness, as it is not expanded later. Ditto in ASIS_Mode\n+            --  where there is no later point at which the aspect will be\n+            --  analyzed.\n \n-            if SPARK_Mode then\n+            if SPARK_Mode or else ASIS_Mode then\n                Analyze_PPC_In_Decl_Part\n                  (N, Defining_Entity (Unit (Parent (PO))));\n             end if;\n@@ -10110,9 +10112,7 @@ package body Sem_Prag is\n          -- Contract_Cases --\n          --------------------\n \n-         --  pragma Contract_Cases (CONTRACT_CASE_LIST);\n-\n-         --  CONTRACT_CASE_LIST ::= CONTRACT_CASE {, CONTRACT_CASE}\n+         --  pragma Contract_Cases ((CONTRACT_CASE {, CONTRACT_CASE));\n \n          --  CONTRACT_CASE ::= CASE_GUARD => CONSEQUENCE\n "}]}