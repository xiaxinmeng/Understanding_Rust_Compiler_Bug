{"sha": "d06c63899f3052740b85775a104db5ff7921c845", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA2YzYzODk5ZjMwNTI3NDBiODU3NzVhMTA0ZGI1ZmY3OTIxYzg0NQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-09-21T13:59:47Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-09-21T13:59:47Z"}, "message": "Fix for g++ failure reported by Brendan.\n\n\t* flow.c (find_basic_blocks): Delete check for in_libcall_block when\n\tprev_code is a CALL_INSN.  Change check for REG_RETVAL note to\n\tuse in_libcall_block.\n\t(find_basic_blocks_1): Delete check for in_libcall_block when prev_code\n\tis a CALL_INSN.  If CALL_INSN and in_libcall_block, then change code\n\tto INSN.\n\nFrom-SVN: r22529", "tree": {"sha": "7bb5a61c6af1d00d8fb6a1b83b8b7d2dbe717b06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bb5a61c6af1d00d8fb6a1b83b8b7d2dbe717b06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d06c63899f3052740b85775a104db5ff7921c845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d06c63899f3052740b85775a104db5ff7921c845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d06c63899f3052740b85775a104db5ff7921c845", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d06c63899f3052740b85775a104db5ff7921c845/comments", "author": null, "committer": null, "parents": [{"sha": "0cfdd854df16a8bb6f36d9b5ed998a802038a223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cfdd854df16a8bb6f36d9b5ed998a802038a223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cfdd854df16a8bb6f36d9b5ed998a802038a223"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "f383cd3d2136e5a166ba1bed5ef5cb9d4eef2fc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d06c63899f3052740b85775a104db5ff7921c845/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d06c63899f3052740b85775a104db5ff7921c845/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d06c63899f3052740b85775a104db5ff7921c845", "patch": "@@ -1,3 +1,12 @@\n+Mon Sep 21 13:51:05 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* flow.c (find_basic_blocks): Delete check for in_libcall_block when\n+\tprev_code is a CALL_INSN.  Change check for REG_RETVAL note to\n+\tuse in_libcall_block.\n+\t(find_basic_blocks_1): Delete check for in_libcall_block when prev_code\n+\tis a CALL_INSN.  If CALL_INSN and in_libcall_block, then change code\n+\tto INSN.\n+\n Mon Sep 21 14:02:23 1998\n \n \t* i386.h: (TARGET_SWITCHES) Improve doc for align-double.  Fix"}, {"sha": "e939d19846561360199ffdb8aa0d022a3ba6ee74", "filename": "gcc/flow.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d06c63899f3052740b85775a104db5ff7921c845/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d06c63899f3052740b85775a104db5ff7921c845/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=d06c63899f3052740b85775a104db5ff7921c845", "patch": "@@ -331,12 +331,13 @@ find_basic_blocks (f, nregs, file, live_reachable_p)\n \t    || (GET_RTX_CLASS (code) == 'i'\n \t\t&& (prev_code == JUMP_INSN\n \t\t    || (prev_code == CALL_INSN\n-\t\t\t&& (nonlocal_label_list != 0 || eh_region)\n-\t\t\t&& ! in_libcall_block)\n+\t\t\t&& (nonlocal_label_list != 0 || eh_region))\n \t\t    || prev_code == BARRIER)))\n \t  i++;\n \n-\tif (code == CALL_INSN && find_reg_note (insn, REG_RETVAL, NULL_RTX))\n+\t/* We change the code of the CALL_INSN, so that it won't start a\n+\t   new block.  */\n+\tif (code == CALL_INSN && in_libcall_block)\n \t  code = INSN;\n \n \tif (code != NOTE)\n@@ -456,8 +457,7 @@ find_basic_blocks_1 (f, nonlocal_label_list, live_reachable_p)\n \t       || (GET_RTX_CLASS (code) == 'i'\n \t\t   && (prev_code == JUMP_INSN\n \t\t       || (prev_code == CALL_INSN\n-\t\t\t   && (nonlocal_label_list != 0 || eh_note)\n-\t\t\t   && ! in_libcall_block)\n+\t\t\t   && (nonlocal_label_list != 0 || eh_note))\n \t\t       || prev_code == BARRIER)))\n \t{\n \t  basic_block_head[++i] = insn;\n@@ -519,6 +519,11 @@ find_basic_blocks_1 (f, nonlocal_label_list, live_reachable_p)\n                                         NOTE_BLOCK_NUMBER (XEXP (eh_note, 0));\n       BLOCK_NUM (insn) = i;\n \n+      /* We change the code of the CALL_INSN, so that it won't start a\n+\t new block.  */\n+      if (code == CALL_INSN && in_libcall_block)\n+\tcode = INSN;\n+\n       if (code != NOTE)\n \tprev_code = code;\n "}]}