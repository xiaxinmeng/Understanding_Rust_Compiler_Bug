{"sha": "ae0bc81a388fd5210fa1a23e8debf1871459e86f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUwYmM4MWEzODhmZDUyMTBmYTFhMjNlOGRlYmYxODcxNDU5ZTg2Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-20T19:12:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-20T19:12:11Z"}, "message": "entered into RCS\n\nFrom-SVN: r536", "tree": {"sha": "2bf0245a0338faf395ac8ee15044ca3cae3be29d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bf0245a0338faf395ac8ee15044ca3cae3be29d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae0bc81a388fd5210fa1a23e8debf1871459e86f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0bc81a388fd5210fa1a23e8debf1871459e86f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0bc81a388fd5210fa1a23e8debf1871459e86f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0bc81a388fd5210fa1a23e8debf1871459e86f/comments", "author": null, "committer": null, "parents": [{"sha": "93c3d169bb407bae416d728da04466708ef2d1e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93c3d169bb407bae416d728da04466708ef2d1e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93c3d169bb407bae416d728da04466708ef2d1e4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "2f768c4db575b25d34e81c20303fade6085b5da2", "filename": "gcc/config/m68k/crds.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae0bc81a388fd5210fa1a23e8debf1871459e86f/gcc%2Fconfig%2Fm68k%2Fcrds.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae0bc81a388fd5210fa1a23e8debf1871459e86f/gcc%2Fconfig%2Fm68k%2Fcrds.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fcrds.h?ref=ae0bc81a388fd5210fa1a23e8debf1871459e86f", "patch": "@@ -255,7 +255,7 @@ do { union { double f; long l[2];} tem;\t\t\t\\\n        sp@, (sp) or (%sp) depending on the style of syntax.\n    '#' for an immediate operand prefix (# in MIT and Motorola syntax\n        but & in SGS syntax, $ in unos syntax).\n-   '!' for the cc register (used in an `and to cc' insn).\n+   '!' for the fpcr register (used in some float-to-fixed conversions).\n \n    'b' for byte insn (no effect, on the Sun; this is for the ISI).\n    'd' to force memory addressing to be absolute, not relative.\n@@ -281,7 +281,7 @@ do { union { double f; long l[2];} tem;\t\t\t\\\n   else if (CODE == '-') fprintf (FILE, \"-(sp)\");\t\t\t\\\n   else if (CODE == '+') fprintf (FILE, \"(sp)+\");\t\t\t\\\n   else if (CODE == '@') fprintf (FILE, \"(sp)\");\t\t\t\t\\\n-  else if (CODE == '!') fprintf (FILE, \"cc\");\t\t\t\t\\\n+  else if (CODE == '!') fprintf (FILE, \"fpcr\");\t\t\t\t\\\n   else if (GET_CODE (X) == REG)\t\t\t\t\t\t\\\n     { if (REGNO (X) < 16 && (CODE == 'y' || CODE == 'x') && GET_MODE (X) == DFmode)\t\\\n         fprintf (FILE, \"%s:%s\", reg_names[REGNO (X)], reg_names[REGNO (X)+1]); \\"}, {"sha": "ef45b9e3db26a773f06b993913108aed55ba8a81", "filename": "gcc/config/m68k/news.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae0bc81a388fd5210fa1a23e8debf1871459e86f/gcc%2Fconfig%2Fm68k%2Fnews.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae0bc81a388fd5210fa1a23e8debf1871459e86f/gcc%2Fconfig%2Fm68k%2Fnews.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnews.h?ref=ae0bc81a388fd5210fa1a23e8debf1871459e86f", "patch": "@@ -260,7 +260,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   else if (CODE == '-') fprintf (FILE, \"-(sp)\");\t\t\t\\\n   else if (CODE == '+') fprintf (FILE, \"(sp)+\");\t\t\t\\\n   else if (CODE == '@') fprintf (FILE, \"(sp)\");\t\t\t\t\\\n-  else if (CODE == '!') fprintf (FILE, \"ccr\");\t\t\t\t\\\n+  else if (CODE == '!') fprintf (FILE, \"fpcr\");\t\t\t\t\\\n   else if (CODE == '$') {if (TARGET_68040_ONLY) fprintf (FILE, \"s\");}\t\\\n   else if (CODE == '&') {if (TARGET_68040_ONLY) fprintf (FILE, \"d\");}\t\\\n   else if (GET_CODE (X) == REG)\t\t\t\t\t\t\\"}]}