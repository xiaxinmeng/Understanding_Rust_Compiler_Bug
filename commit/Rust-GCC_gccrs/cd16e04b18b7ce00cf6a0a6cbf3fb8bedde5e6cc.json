{"sha": "cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QxNmUwNGIxOGI3Y2UwMGNmNmEwYTZjYmYzZmI4YmVkZGU1ZTZjYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-06-30T11:17:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-06-30T11:17:23Z"}, "message": "std_streambuf.h (_M_mode): Move from here to filebuf and stringbuf.\n\n2003-06-30  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/std/std_streambuf.h (_M_mode): Move from here to\n\tfilebuf and stringbuf.\n\t(~basic_streambuf()): Don't set _M_mode.\n\t(basic_streambuf()): Don't set _M_mode.\n\t* include/std/std_fstream.h (_M_mode): Move here, from streambuf.\n\t(~basic_filebuf()): Clean up.\n\t* include/bits/fstream.tcc (basic_filebuf()): Set _M_mode.\n\t* include/std/std_sstream.h (_M_mode): Move here, from streambuf.\n\t* testsuite/27_io/basic_streambuf/cons/char/1.cc: Don't set _M_mode.\n\t* testsuite/27_io/basic_streambuf/overflow/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_streambuf/sgetc/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_streambuf/sgetn/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_streambuf/sputn/char/1.cc: Likewise.\n\n2003-06-30  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/std/std_fstream.h (_M_underflow): Remove.\n\t(uflow): Remove, inherited from streambuf.\n\t(underflow): Only declare.\n\t* include/bits/fstream.tcc (_M_underflow): Rename to\n\tunderflow, to which is equivalent for __bump == false,\n\tsimplify.\n\t* include/std/std_sstream.h (_M_underflow): Remove.\n\t(uflow): Remove, inherited from streambuf.\n\t(underflow): Only declare.\n\t* include/bits/sstream.tcc (_M_underflow): Rename to\n\tunderflow, to which is equivalent for __bump == false,\n\tsimplify.\n\nFrom-SVN: r68695", "tree": {"sha": "b3c547f401d7d498167cb3a09ce8048cacbfa4c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3c547f401d7d498167cb3a09ce8048cacbfa4c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/comments", "author": null, "committer": null, "parents": [{"sha": "3cf5441285f6cbe220ae11903f45b99ed8932054", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cf5441285f6cbe220ae11903f45b99ed8932054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cf5441285f6cbe220ae11903f45b99ed8932054"}], "stats": {"total": 132, "additions": 63, "deletions": 69}, "files": [{"sha": "a50cbed3de874ef42f530419bcf6838a9498597a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -1,3 +1,34 @@\n+2003-06-30  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/std/std_streambuf.h (_M_mode): Move from here to\n+\tfilebuf and stringbuf.\n+\t(~basic_streambuf()): Don't set _M_mode.\n+\t(basic_streambuf()): Don't set _M_mode.\n+\t* include/std/std_fstream.h (_M_mode): Move here, from streambuf.\n+\t(~basic_filebuf()): Clean up.\n+\t* include/bits/fstream.tcc (basic_filebuf()): Set _M_mode.\n+\t* include/std/std_sstream.h (_M_mode): Move here, from streambuf.\n+\t* testsuite/27_io/basic_streambuf/cons/char/1.cc: Don't set _M_mode.\n+\t* testsuite/27_io/basic_streambuf/overflow/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_streambuf/sgetc/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_streambuf/sgetn/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_streambuf/sputn/char/1.cc: Likewise.\n+\n+2003-06-30  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/std/std_fstream.h (_M_underflow): Remove.\n+\t(uflow): Remove, inherited from streambuf.\n+\t(underflow): Only declare.\n+\t* include/bits/fstream.tcc (_M_underflow): Rename to \n+\tunderflow, to which is equivalent for __bump == false,\n+\tsimplify.\n+\t* include/std/std_sstream.h (_M_underflow): Remove.\n+\t(uflow): Remove, inherited from streambuf.\n+\t(underflow): Only declare.\n+\t* include/bits/sstream.tcc (_M_underflow): Rename to \n+\tunderflow, to which is equivalent for __bump == false,\n+\tsimplify.\n+\n 2003-06-29  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/stl_algo.h (LOTS): Fully qualify standard"}, {"sha": "a5510e380aa64f68370af2b7f186aefc4349f56d", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -69,11 +69,11 @@ namespace std\n   template<typename _CharT, typename _Traits>\n     basic_filebuf<_CharT, _Traits>::\n     basic_filebuf() : __streambuf_type(), _M_file(&_M_lock), \n-    _M_state_cur(__state_type()), _M_state_beg(__state_type()),\n-    _M_buf(NULL), _M_buf_size(BUFSIZ), _M_buf_allocated(false),\n-    _M_reading(false), _M_writing(false), _M_last_overflowed(false),\n-    _M_pback_cur_save(0), _M_pback_end_save(0), _M_pback_init(false),\n-    _M_codecvt(0)\n+    _M_mode(ios_base::openmode(0)), _M_state_cur(__state_type()),\n+    _M_state_beg(__state_type()), _M_buf(NULL), _M_buf_size(BUFSIZ),\n+    _M_buf_allocated(false), _M_reading(false), _M_writing(false),\n+    _M_last_overflowed(false), _M_pback_cur_save(0), _M_pback_end_save(0),\n+    _M_pback_init(false), _M_codecvt(0)\n     { \n       if (has_facet<__codecvt_type>(this->_M_buf_locale))\n \t_M_codecvt = &use_facet<__codecvt_type>(this->_M_buf_locale);\n@@ -180,7 +180,7 @@ namespace std\n   template<typename _CharT, typename _Traits>\n     typename basic_filebuf<_CharT, _Traits>::int_type \n     basic_filebuf<_CharT, _Traits>::\n-    _M_underflow(bool __bump)\n+    underflow()\n     {\n       int_type __ret = traits_type::eof();\n       const bool __testin = this->_M_mode & ios_base::in;\n@@ -194,12 +194,7 @@ namespace std\n \t  _M_destroy_pback();\n \n \t  if (this->gptr() < this->egptr())\n-\t    {\n-\t      __ret = traits_type::to_int_type(*this->gptr());\n-\t      if (__bump)\n-\t\tthis->gbump(1);\n-\t      return __ret;\n-\t    }\n+\t    return traits_type::to_int_type(*this->gptr());\n \n \t  // Get and convert input sequence.\n \t  const size_t __buflen = this->_M_buf_size > 1\n@@ -247,8 +242,6 @@ namespace std\n \t      _M_set_buffer(__ilen);\n \t      _M_reading = true;\n \t      __ret = traits_type::to_int_type(*this->gptr());\n-\t      if (__bump)\n-\t\tthis->gbump(1);\n \t    }\n \t  else if (__elen == 0)\n \t    {"}, {"sha": "d512e8adb08ab1ee9e56372df064f84233af0e20", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -115,7 +115,7 @@ namespace std\n   template <class _CharT, class _Traits, class _Alloc>\n     typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type \n     basic_stringbuf<_CharT, _Traits, _Alloc>::\n-    _M_underflow(bool __bump)\n+    underflow()\n     {\n       int_type __ret = traits_type::eof();\n       const bool __testin = this->_M_mode & ios_base::in;\n@@ -125,11 +125,7 @@ namespace std\n \t  _M_update_egptr();\n \n \t  if (this->gptr() < this->egptr())\n-\t    {\n-\t      __ret = traits_type::to_int_type(*this->gptr());\n-\t      if (__bump)\n-\t\tthis->gbump(1);\n-\t    }\n+\t    __ret = traits_type::to_int_type(*this->gptr());\n \t}\n       return __ret;\n     }"}, {"sha": "b4ea860d6c32821cc2eb3e85fd8916d2d504f5ee", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 8, "deletions": 23, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -105,6 +105,13 @@ namespace std\n       */\n       __file_type \t\t_M_file;\n \n+      /**\n+       *  @if maint\n+       *  Place to stash in || out || in | out settings for current filebuf.\n+       *  @endif\n+      */\n+      ios_base::openmode \t_M_mode;\n+\n       // Current and beginning state type for codecvt.\n       /**\n        *  @if maint\n@@ -213,8 +220,6 @@ namespace std\n       ~basic_filebuf()\n       {\n \tthis->close();\n-\t_M_buf_size = 0;\n-\t_M_last_overflowed = false;\n       }\n \n       // Members:\n@@ -281,29 +286,9 @@ namespace std\n       // charater from the real input source when the buffer is empty.\n       // Buffered input uses underflow()\n \n-      // The only difference between underflow() and uflow() is that the\n-      // latter bumps _M_in_cur after the read.  In the sync_with_stdio\n-      // case, this is important, as we need to unget the read character in\n-      // the underflow() case in order to maintain synchronization.  So\n-      // instead of calling underflow() from uflow(), we create a common\n-      // subroutine to do the real work.\n-      /**\n-       *  @if maint\n-       *  @doctodo\n-       *  @endif\n-      */\n-      int_type\n-      _M_underflow(bool __bump);\n-\n-      // [documentation is inherited]\n-      virtual int_type\n-      underflow()\n-      { return _M_underflow(false); }\n-\n       // [documentation is inherited]\n       virtual int_type\n-      uflow()\n-      { return _M_underflow(true); }\n+      underflow();\n \n       // [documentation is inherited]\n       virtual int_type"}, {"sha": "4d6d26046193914ab113a4f501e3a545efb89f00", "filename": "libstdc++-v3/include/std/std_sstream.h", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -85,6 +85,13 @@ namespace std\n       //@}\n \n     protected:\n+      /**\n+       *  @if maint\n+       *  Place to stash in || out || in | out settings for current stringbuf.\n+       *  @endif\n+      */\n+      ios_base::openmode \t_M_mode;\n+\n       // Data Members:\n       /**\n        *  @if maint\n@@ -179,18 +186,9 @@ namespace std\n \t_M_sync(const_cast<char_type*>(_M_string.data()), 0, __len);\n       }\n \n-      int_type\n-      _M_underflow(bool __bump);\n-\n-      // [documentation is inherited]\n-      virtual int_type\n-      underflow()\n-      { return _M_underflow(false); }\n-\n       // [documentation is inherited]\n       virtual int_type\n-      uflow()\n-      { return _M_underflow(true); }\n+      underflow();\n \n       // [documentation is inherited]\n       virtual int_type"}, {"sha": "70967ebf7420433b81bbb788d4d1431356916bcb", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -176,13 +176,6 @@ namespace std\n       char_type* \t\t_M_out_cur;    // Current put area. \n       char_type* \t\t_M_out_end;    // End of put area.\n \n-      /**\n-       *  @if maint\n-       *  Place to stash in || out || in | out settings for current streambuf.\n-       *  @endif\n-      */\n-      ios_base::openmode \t_M_mode;\n-\n       /**\n        *  @if maint\n        *  Current locale setting.\n@@ -201,9 +194,7 @@ namespace std\n       /// Destructor deallocates no buffer space.\n       virtual \n       ~basic_streambuf() \n-      {\n-\t_M_mode = ios_base::openmode(0);\n-      }\n+      { }\n \n       // [27.5.2.2.1] locales\n       /**\n@@ -451,7 +442,7 @@ namespace std\n       basic_streambuf()\n       : _M_in_beg(0), _M_in_cur(0), _M_in_end(0), \n       _M_out_beg(0), _M_out_cur(0), _M_out_end(0),\n-      _M_mode(ios_base::openmode(0)),_M_buf_locale(locale()) \n+      _M_buf_locale(locale()) \n       { }\n \n       // [27.5.2.3.1] get area access"}, {"sha": "c48ecbcc43d570aa345280b4c4335b54ab310068", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/cons/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fcons%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fcons%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fcons%2Fchar%2F1.cc?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -41,7 +41,7 @@ class testbuf : public std::streambuf\n   typedef std::streambuf::char_type char_type;\n \n   testbuf(): std::streambuf() \n-  { _M_mode = (std::ios_base::in | std::ios_base::out); }\n+  { }\n \n   bool\n   check_pointers()"}, {"sha": "2a3a4be1a25a34b96dfa64e4daa2a159e696351b", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/overflow/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Foverflow%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Foverflow%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Foverflow%2Fchar%2F1.cc?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -41,7 +41,7 @@ class testbuf : public std::streambuf\n   typedef std::streambuf::char_type char_type;\n \n   testbuf(): std::streambuf() \n-  { _M_mode = (std::ios_base::in | std::ios_base::out); }\n+  { }\n \n   bool\n   check_pointers()"}, {"sha": "d2833831e725fa7e4191464b24cdb2ac1879081f", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/sgetc/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetc%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetc%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetc%2Fchar%2F1.cc?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -41,7 +41,7 @@ class testbuf : public std::streambuf\n   typedef std::streambuf::char_type char_type;\n \n   testbuf(): std::streambuf() \n-  { _M_mode = (std::ios_base::in | std::ios_base::out); }\n+  { }\n \n   bool\n   check_pointers()"}, {"sha": "f1392dc631da7a9732aeb71c0308a2b1d8a790de", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/sgetn/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetn%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetn%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsgetn%2Fchar%2F1.cc?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -41,7 +41,7 @@ class testbuf : public std::streambuf\n   typedef std::streambuf::char_type char_type;\n \n   testbuf(): std::streambuf() \n-  { _M_mode = (std::ios_base::in | std::ios_base::out); }\n+  { }\n \n   bool\n   check_pointers()"}, {"sha": "0feabcd08cd85b287618545cfc492b4db4f20922", "filename": "libstdc++-v3/testsuite/27_io/basic_streambuf/sputn/char/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsputn%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsputn%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_streambuf%2Fsputn%2Fchar%2F1.cc?ref=cd16e04b18b7ce00cf6a0a6cbf3fb8bedde5e6cc", "patch": "@@ -41,7 +41,7 @@ class testbuf : public std::streambuf\n   typedef std::streambuf::char_type char_type;\n \n   testbuf(): std::streambuf() \n-  { _M_mode = (std::ios_base::in | std::ios_base::out); }\n+  { }\n \n   bool\n   check_pointers()"}]}