{"sha": "013c0411847e7dccb9c2732dab70e14fcad4ebe4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEzYzA0MTE4NDdlN2RjY2I5YzI3MzJkYWI3MGUxNGZjYWQ0ZWJlNA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-05-05T19:35:12Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-05-05T19:35:12Z"}, "message": "rs6000.c (rs6000_handle_option): Don't fall through from -mfpu= handling.\n\n\t* config/rs6000/rs6000.c (rs6000_handle_option): Don't fall\n\tthrough from -mfpu= handling.\n\t* config/rs6000/rs6000.opt (mfpu=): Use Var and Init.\n\nFrom-SVN: r173448", "tree": {"sha": "7aa3659d8b5849e7531de7f2f04510915f0a5150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7aa3659d8b5849e7531de7f2f04510915f0a5150"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/013c0411847e7dccb9c2732dab70e14fcad4ebe4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013c0411847e7dccb9c2732dab70e14fcad4ebe4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/013c0411847e7dccb9c2732dab70e14fcad4ebe4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013c0411847e7dccb9c2732dab70e14fcad4ebe4/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0905f8bf4f33f259a484cf3399d5d418e33c4ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0905f8bf4f33f259a484cf3399d5d418e33c4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0905f8bf4f33f259a484cf3399d5d418e33c4ad"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "93409300f43e9f6324e227a7ab1fde0f1edcc152", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013c0411847e7dccb9c2732dab70e14fcad4ebe4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013c0411847e7dccb9c2732dab70e14fcad4ebe4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=013c0411847e7dccb9c2732dab70e14fcad4ebe4", "patch": "@@ -1,3 +1,9 @@\n+2011-05-05  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_handle_option): Don't fall\n+\tthrough from -mfpu= handling.\n+\t* config/rs6000/rs6000.opt (mfpu=): Use Var and Init.\n+\n 2011-05-05  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* dwarf2out.c (dwarf2out_frame_debug_expr) [rule 10]: Handle"}, {"sha": "d7b00888451ada6bbe7eefa053b08e818afd1786", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013c0411847e7dccb9c2732dab70e14fcad4ebe4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013c0411847e7dccb9c2732dab70e14fcad4ebe4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=013c0411847e7dccb9c2732dab70e14fcad4ebe4", "patch": "@@ -4480,7 +4480,7 @@ rs6000_handle_option (struct gcc_options *opts, struct gcc_options *opts_set,\n \t  opts_set->x_target_flags |= MASK_SOFT_FLOAT;\n \t  opts->x_rs6000_single_float = opts->x_rs6000_double_float = 0;\n \t}\n-      /* Fall through.  */\n+      break;\n \n     case OPT_mrecip:\n       opts->x_rs6000_recip_name = (value) ? \"default\" : \"none\";"}, {"sha": "131cec9cc8f5b13db03885a80cfd9edc62e864fa", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013c0411847e7dccb9c2732dab70e14fcad4ebe4/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013c0411847e7dccb9c2732dab70e14fcad4ebe4/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=013c0411847e7dccb9c2732dab70e14fcad4ebe4", "patch": "@@ -492,7 +492,7 @@ Target RejectNegative Var(rs6000_simple_fpu) Save\n Floating point unit does not support divide & sqrt\n \n mfpu=\n-Target RejectNegative Joined Enum(fpu_type_t)\n+Target RejectNegative Joined Enum(fpu_type_t) Var(rs6000_fpu_type) Init(FPU_NONE)\n -mfpu=\tSpecify FP (sp, dp, sp-lite, dp-lite) (implies -mxilinx-fpu)\n \n Enum"}]}