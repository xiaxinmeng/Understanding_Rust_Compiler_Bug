{"sha": "5beddee9f43b70c178ba7c10f795cb0546b0de93", "node_id": "C_kwDOANBUbNoAKDViZWRkZWU5ZjQzYjcwYzE3OGJhN2MxMGY3OTVjYjA1NDZiMGRlOTM", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2022-07-04T17:22:17Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2022-07-05T00:00:21Z"}, "message": "gcc.dg/analyzer/allocation-size-1..5.c: Fix for 32-bit newlib targets\n\nSee gcc/config/newlib-stdint.h, where targets that have\nLONG_TYPE_SIZE == 32, get INT32_TYPE defined to \"long int\".\nINT32_TYPE ends up in the target int32_t.\n\nThus the tests failed for 32-bit newlib targets due to related\nwarning messages being matched to \"aka int\" where the emitted\nmessage for these targets have \"aka long int\".\n\nTested cris-elf, committed as obvious.\n\ngcc/testsuite:\n\t* gcc.dg/analyzer/allocation-size-1.c,\n\tgcc.dg/analyzer/allocation-size-2.c,\n\tgcc.dg/analyzer/allocation-size-3.c,\n\tgcc.dg/analyzer/allocation-size-4.c,\n\tgcc.dg/analyzer/allocation-size-5.c: Handle int32_t being \"long int\".", "tree": {"sha": "f2cdc1c4d849a1b9ce29c721ea1cee27551fb787", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2cdc1c4d849a1b9ce29c721ea1cee27551fb787"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5beddee9f43b70c178ba7c10f795cb0546b0de93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5beddee9f43b70c178ba7c10f795cb0546b0de93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5beddee9f43b70c178ba7c10f795cb0546b0de93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5beddee9f43b70c178ba7c10f795cb0546b0de93/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3297044f0055880dd23ffbf641aa3a5860197e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3297044f0055880dd23ffbf641aa3a5860197e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3297044f0055880dd23ffbf641aa3a5860197e1"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "b5bed5392503da3e72fad06941999ade6d7b89d9", "filename": "gcc/testsuite/gcc.dg/analyzer/allocation-size-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-1.c?ref=5beddee9f43b70c178ba7c10f795cb0546b0de93", "patch": "@@ -17,7 +17,7 @@ void test_2 (void)\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } malloc2 } */\n   /* { dg-message \"42 bytes\" \"note\" { target *-*-* } malloc2 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc2 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc2 } */\n }\n \n void test_3 (void)\n@@ -34,7 +34,7 @@ void test_4 (void)\n   free (iptr);\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } assign4 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign4 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign4 } */\n }\n \n void test_5 (void)\n@@ -67,7 +67,7 @@ void test_6 (void)\n   free (iptr);\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } assign6 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign6 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign6 } */\n }\n \n void test_7 (void)\n@@ -114,4 +114,4 @@ void test_10 (int32_t n)\n {\n   char *ptr = malloc (7 * n);\n   free (ptr);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "42c39e2e65507842514fd339b0a5447304b8e157", "filename": "gcc/testsuite/gcc.dg/analyzer/allocation-size-2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-2.c?ref=5beddee9f43b70c178ba7c10f795cb0546b0de93", "patch": "@@ -17,7 +17,7 @@ void test_2 (int32_t n)\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } malloc2 } */\n   /* { dg-message \"'\\[a-z0-9\\\\*\\\\(\\\\)\\\\s\\]*' bytes\" \"note\" { target *-*-* } malloc2 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4\" \"note\" { target *-*-* } malloc2 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4\" \"note\" { target *-*-* } malloc2 } */\n }\n \n void test_3 (int32_t n)\n@@ -34,7 +34,7 @@ void test_4 (int32_t n)\n   free (iptr);\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } assign4 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign4 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign4 } */\n }\n \n void test_5 (void)\n@@ -101,7 +101,7 @@ void test_9 (void)\n   free (iptr);\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } assign9 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign9 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign9 } */\n }\n \n void test_11 (void)\n@@ -135,7 +135,7 @@ void test_12 (void)\n   else\n     free (ptr);\n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } assign12 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign12 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign12 } */\n }\n \n void test_13 (void)"}, {"sha": "0c86f09f15b8b0cbf8354fc39fa0ef9521ffc7f6", "filename": "gcc/testsuite/gcc.dg/analyzer/allocation-size-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-3.c?ref=5beddee9f43b70c178ba7c10f795cb0546b0de93", "patch": "@@ -16,7 +16,7 @@ void test_1 (void)\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } malloc1 } */\n   /* { dg-message \"3 bytes\" \"note\" { target *-*-* } malloc1 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc1 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc1 } */\n }\n \n void test_2 (void)\n@@ -26,7 +26,7 @@ void test_2 (void)\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } malloc2 } */\n   /* { dg-message \"14 bytes\" \"note\" { target *-*-* } malloc2 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc2 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc2 } */\n }\n \n void test_3 (int32_t n)\n@@ -36,7 +36,7 @@ void test_3 (int32_t n)\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } malloc3 } */\n   /* { dg-message \"'\\[a-z0-9\\\\+\\\\(\\\\)\\\\s\\]*' bytes\" \"note\" { target *-*-* } malloc3 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc3 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc3 } */\n }\n \n void test_4 (int32_t n, int32_t m)"}, {"sha": "235c156a25ce315245524de0b6bd7c7f5af5a1d8", "filename": "gcc/testsuite/gcc.dg/analyzer/allocation-size-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-4.c?ref=5beddee9f43b70c178ba7c10f795cb0546b0de93", "patch": "@@ -31,7 +31,7 @@ void test_2 (void)\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } malloc2 } */\n   /* { dg-message \"\\\\d+ bytes\" \"note\" { target *-*-* } malloc2 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc2 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } malloc2 } */\n }\n \n void test_3 (void)"}, {"sha": "a15e18d8020260b94f6969f4b6022a8cf9d10096", "filename": "gcc/testsuite/gcc.dg/analyzer/allocation-size-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5beddee9f43b70c178ba7c10f795cb0546b0de93/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fallocation-size-5.c?ref=5beddee9f43b70c178ba7c10f795cb0546b0de93", "patch": "@@ -16,7 +16,7 @@ int32_t *test_1 (void)\n   return ptr;\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } assign1 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign1 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign1 } */\n }\n \n int32_t *test2 (void)\n@@ -33,5 +33,5 @@ int32_t *test3 (void)\n   return ptr;\n \n   /* { dg-warning \"allocated buffer size is not a multiple of the pointee's size \\\\\\[CWE-131\\\\\\]\" \"warning\" { target *-*-* } assign3 } */\n-  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka 'int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign3 } */\n+  /* { dg-message \"'int32_t \\\\*' (\\\\\\{aka '(long )?int \\\\*'\\\\\\})? here; 'sizeof \\\\(int32_t (\\\\\\{aka (long )?int\\\\\\})?\\\\)' is '4'\" \"note\" { target *-*-* } assign3 } */\n }"}]}