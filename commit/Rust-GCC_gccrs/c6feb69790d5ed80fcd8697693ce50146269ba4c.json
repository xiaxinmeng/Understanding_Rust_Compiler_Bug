{"sha": "c6feb69790d5ed80fcd8697693ce50146269ba4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZmZWI2OTc5MGQ1ZWQ4MGZjZDg2OTc2OTNjZTUwMTQ2MjY5YmE0Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-03-11T19:05:19Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-03-11T19:05:19Z"}, "message": "std_complex.h (pow(const complex&, const _Tp&), [...]): Fully qualify with std:: a few calls.\n\n2004-03-11  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/std/std_complex.h (pow(const complex&, const _Tp&),\n\tpow(const _Tp&, const complex&), pow(const complex&,\n\tconst complex&)): Fully qualify with std:: a few calls.\n\t* testsuite/26_numerics/complex/13450.cc: Minor tweak.\n\nFrom-SVN: r79338", "tree": {"sha": "7fea5284943f7386e0e845ae37d6f6b729e7b9b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fea5284943f7386e0e845ae37d6f6b729e7b9b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6feb69790d5ed80fcd8697693ce50146269ba4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6feb69790d5ed80fcd8697693ce50146269ba4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6feb69790d5ed80fcd8697693ce50146269ba4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6feb69790d5ed80fcd8697693ce50146269ba4c/comments", "author": null, "committer": null, "parents": [{"sha": "878cbb7399a6a2dc610f5d9fa8c812c8a2eb33c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/878cbb7399a6a2dc610f5d9fa8c812c8a2eb33c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/878cbb7399a6a2dc610f5d9fa8c812c8a2eb33c2"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "7668e70bfb7a81b59691d6f4065eda747b90cae9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6feb69790d5ed80fcd8697693ce50146269ba4c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6feb69790d5ed80fcd8697693ce50146269ba4c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c6feb69790d5ed80fcd8697693ce50146269ba4c", "patch": "@@ -1,3 +1,10 @@\n+2004-03-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/std/std_complex.h (pow(const complex&, const _Tp&),\n+\tpow(const _Tp&, const complex&), pow(const complex&,\n+\tconst complex&)): Fully qualify with std:: a few calls.\n+\t* testsuite/26_numerics/complex/13450.cc: Minor tweak.\n+\n 2004-03-11  Steven Bosscher  <s.bosscher@student.tudelft.nl>\n \n \tPR libstdc++/11706"}, {"sha": "e1027f65991f5ee355a9813debe7acb7a9666659", "filename": "libstdc++-v3/include/std/std_complex.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6feb69790d5ed80fcd8697693ce50146269ba4c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6feb69790d5ed80fcd8697693ce50146269ba4c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_complex.h?ref=c6feb69790d5ed80fcd8697693ce50146269ba4c", "patch": "@@ -708,23 +708,24 @@ namespace std\n       if (__x.imag() == _Tp() && __x.real() > _Tp())\n         return pow(__x.real(), __y);\n \n-      complex<_Tp> __t = log(__x);\n+      complex<_Tp> __t = std::log(__x);\n       return std::polar(exp(__y * __t.real()), __y * __t.imag());\n     }\n \n   template<typename _Tp>\n     inline complex<_Tp>\n     pow(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     {\n-      return __x == _Tp() ? _Tp() : exp(__y * log(__x));\n+      return __x == _Tp() ? _Tp() : std::exp(__y * std::log(__x));\n     }\n \n   template<typename _Tp>\n     inline complex<_Tp>\n     pow(const _Tp& __x, const complex<_Tp>& __y)\n     {\n-      return __x > _Tp() ? polar(pow(__x, __y.real()), __y.imag() * log(__x))\n-\t                 : pow(complex<_Tp>(__x, _Tp()), __y);\n+      return __x > _Tp() ? std::polar(pow(__x, __y.real()),\n+\t\t\t\t      __y.imag() * log(__x))\n+\t                 : std::pow(complex<_Tp>(__x, _Tp()), __y);\n     }\n \n   // 26.2.3  complex specializations"}, {"sha": "50f4bad3b93e1821c2f17a7e7146a6770115dc5d", "filename": "libstdc++-v3/testsuite/26_numerics/complex/13450.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6feb69790d5ed80fcd8697693ce50146269ba4c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F13450.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6feb69790d5ed80fcd8697693ce50146269ba4c/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F13450.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2F13450.cc?ref=c6feb69790d5ed80fcd8697693ce50146269ba4c", "patch": "@@ -29,7 +29,7 @@ template<typename T>\n     bool test __attribute__((unused)) = true;\n     typedef complex<T> cplx;\n \n-    T eps = numeric_limits<T>::epsilon() * 10;\n+    T eps = numeric_limits<T>::epsilon() * 100;\n     \n     cplx ref = pow(cplx(a, T()), cplx(b, T()));\n     cplx res1 = pow(a, cplx(b, T()));"}]}