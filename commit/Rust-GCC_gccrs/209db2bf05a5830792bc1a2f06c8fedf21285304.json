{"sha": "209db2bf05a5830792bc1a2f06c8fedf21285304", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA5ZGIyYmYwNWE1ODMwNzkyYmMxYTJmMDZjOGZlZGYyMTI4NTMwNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-12-15T11:51:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-12-15T11:51:01Z"}, "message": "[multiple changes]\n\n2003-12-15  Robert Dewar  <dewar@gnat.com>\n\n\t* exp_ch6.adb (Expand_Thread_Body): Fix error in picking up default\n\tsec stack size.\n\n2003-12-15  Vincent Celier  <celier@gnat.com>\n\n\t* gnatchop.adb: (Error_Msg): Do not exit on error for a warning\n\t(Gnatchop): Do not set failure status when reporting the number of\n\twarnings.\n\n2003-12-15  Doug Rupp  <rupp@gnat.com>\n\n\t* s-ctrl.ads: New file.\n\n\t* Makefile.rtl (GNAT_RTL_NONTASKING_OBJS): Add s-crtl$(objext).\n\n\t* Make-lang.in: (GNAT_ADA_OBJS): Add ada/s-crtl.o.\n\t(GNATBIND_OBJS): Add ada/s-crtl.o.\n\n\t* Makefile.in [VMS]: Clean up ifeq rules.\n\n\t* gnatlink.adb, 6vcstrea.adb, a-direio.adb, a-sequio.adb,\n\ta-ststio.adb, a-textio.adb, g-os_lib.adb, a-witeio.adb,\n\tg-os_lib.ads, i-cstrea.adb, i-cstrea.ads, s-direio.adb,\n\ts-fileio.adb, s-memcop.ads, s-memory.adb, s-stache.adb,\n\ts-tasdeb.adb: Update copyright.\n\tImport System.CRTL.\n\tMake minor modifications to use System.CRTL declared functions instead\n\tof importing locally.\n\n2003-12-15  GNAT Script  <nobody@gnat.com>\n\n\t* Make-lang.in: Makefile automatically updated\n\nFrom-SVN: r74627", "tree": {"sha": "1a02b34983bc3ac002967364fb841e53d5f9fc47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a02b34983bc3ac002967364fb841e53d5f9fc47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/209db2bf05a5830792bc1a2f06c8fedf21285304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209db2bf05a5830792bc1a2f06c8fedf21285304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/209db2bf05a5830792bc1a2f06c8fedf21285304", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209db2bf05a5830792bc1a2f06c8fedf21285304/comments", "author": null, "committer": null, "parents": [{"sha": "c1d5acdb6eb4fa31e092602cb9d116c79f52e07d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1d5acdb6eb4fa31e092602cb9d116c79f52e07d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1d5acdb6eb4fa31e092602cb9d116c79f52e07d"}], "stats": {"total": 656, "additions": 420, "deletions": 236}, "files": [{"sha": "04690190b0aeb531567aafa8372cc07b3e1e5086", "filename": "gcc/ada/6vcstrea.adb", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2F6vcstrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2F6vcstrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F6vcstrea.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,8 @@\n with Unchecked_Conversion;\n package body Interfaces.C_Streams is\n \n+   use type System.CRTL.size_t;\n+\n    ------------\n    -- fread --\n    ------------\n@@ -154,14 +156,6 @@ package body Interfaces.C_Streams is\n       size   : size_t)\n       return   int\n    is\n-      function C_setvbuf\n-        (stream : FILEs;\n-         buffer : chars;\n-         mode   : int;\n-         size   : size_t)\n-         return   int;\n-      pragma Import (C, C_setvbuf, \"setvbuf\");\n-\n       use type System.Address;\n    begin\n \n@@ -173,9 +167,11 @@ package body Interfaces.C_Streams is\n       if mode = IONBF\n         and then (stream = stdout or else stream = stderr)\n       then\n-         return C_setvbuf (stream, buffer, IOLBF, size);\n+         return System.CRTL.setvbuf\n+           (stream, buffer, IOLBF, System.CRTL.size_t (size));\n       else\n-         return C_setvbuf (stream, buffer, mode, size);\n+         return System.CRTL.setvbuf\n+           (stream, buffer, mode, System.CRTL.size_t (size));\n       end if;\n    end setvbuf;\n "}, {"sha": "25699d15e35e49c64cf84b5971998ad204adb37e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -1,3 +1,38 @@\n+2003-12-15  Robert Dewar  <dewar@gnat.com>\n+\n+\t* exp_ch6.adb (Expand_Thread_Body): Fix error in picking up default\n+\tsec stack size.\n+\n+2003-12-15  Vincent Celier  <celier@gnat.com>\n+\n+\t* gnatchop.adb: (Error_Msg): Do not exit on error for a warning\n+\t(Gnatchop): Do not set failure status when reporting the number of\n+\twarnings.\n+\n+2003-12-15  Doug Rupp  <rupp@gnat.com>\n+\n+\t* s-ctrl.ads: New file.\n+\n+\t* Makefile.rtl (GNAT_RTL_NONTASKING_OBJS): Add s-crtl$(objext).\n+\n+\t* Make-lang.in: (GNAT_ADA_OBJS): Add ada/s-crtl.o.\n+\t(GNATBIND_OBJS): Add ada/s-crtl.o.\n+\n+\t* Makefile.in [VMS]: Clean up ifeq rules.\n+\n+\t* gnatlink.adb, 6vcstrea.adb, a-direio.adb, a-sequio.adb,\n+\ta-ststio.adb, a-textio.adb, g-os_lib.adb, a-witeio.adb,\n+\tg-os_lib.ads, i-cstrea.adb, i-cstrea.ads, s-direio.adb,\n+\ts-fileio.adb, s-memcop.ads, s-memory.adb, s-stache.adb,\n+\ts-tasdeb.adb: Update copyright.\n+\tImport System.CRTL.\n+\tMake minor modifications to use System.CRTL declared functions instead\n+\tof importing locally.\n+\n+2003-12-15  GNAT Script  <nobody@gnat.com>\n+\n+\t* Make-lang.in: Makefile automatically updated\n+\n 2003-12-11  Ed Falis  <falis@gnat.com>\n \n \t* 5zinit.adb: Clean up."}, {"sha": "b7abcdc1aaf9d2c02248b66943fc4db5143a885d", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -153,7 +153,7 @@ GNAT_ADA_OBJS = ada/ada.o ada/a-charac.o ada/a-chlat1.o ada/a-except.o \\\n  ada/stylesw.o ada/validsw.o ada/system.o ada/table.o ada/targparm.o \\\n  ada/tbuild.o ada/tree_gen.o ada/tree_io.o ada/treepr.o ada/treeprs.o \\\n  ada/ttypef.o ada/ttypes.o ada/types.o ada/uintp.o ada/uname.o ada/urealp.o \\\n- ada/usage.o ada/widechar.o\n+ ada/usage.o ada/widechar.o ada/s-crtl.o\n \n # Object files for gnat executables\n GNAT1_ADA_OBJS = $(GNAT_ADA_OBJS) ada/back_end.o ada/gnat1drv.o\n@@ -212,6 +212,7 @@ GNATBIND_OBJS = \\\n  ada/s-carun8.o   \\\n  ada/s-casuti.o   \\\n  ada/s-crc32.o    \\\n+ ada/s-crtl.o     \\\n  ada/s-except.o   \\\n  ada/s-exctab.o   \\\n  ada/s-htable.o   \\\n@@ -2254,10 +2255,10 @@ ada/g-htable.o : ada/gnat.ads ada/g-htable.ads ada/g-htable.adb \\\n \n ada/g-os_lib.o : ada/ada.ads ada/a-except.ads ada/gnat.ads \\\n    ada/g-os_lib.ads ada/g-os_lib.adb ada/g-string.ads ada/system.ads \\\n-   ada/s-casuti.ads ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-traent.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads \n+   ada/s-casuti.ads ada/s-crtl.ads ada/s-exctab.ads ada/s-exctab.adb \\\n+   ada/s-htable.ads ada/s-parame.ads ada/s-secsta.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-traent.ads ada/unchconv.ads ada/unchdeal.ads \n \n ada/g-speche.o : ada/gnat.ads ada/g-speche.ads ada/g-speche.adb \\\n    ada/system.ads \n@@ -2711,6 +2712,8 @@ ada/s-casuti.o : ada/system.ads ada/s-casuti.ads ada/s-casuti.adb\n ada/s-crc32.o : ada/interfac.ads ada/system.ads ada/s-crc32.ads \\\n    ada/s-crc32.adb \n \n+ada/s-crtl.o : ada/system.ads ada/s-crtl.ads ada/s-parame.ads \n+\n ada/s-except.o : ada/ada.ads ada/a-except.ads ada/system.ads \\\n    ada/s-except.ads ada/s-stalib.ads ada/s-traent.ads ada/unchconv.ads \n \n@@ -2730,9 +2733,9 @@ ada/s-mastop.o : ada/ada.ads ada/a-except.ads ada/system.ads \\\n    ada/s-stoele.ads ada/s-stoele.adb ada/s-traent.ads ada/unchconv.ads \n \n ada/s-memory.o : ada/ada.ads ada/a-except.ads ada/system.ads \\\n-   ada/s-memory.ads ada/s-memory.adb ada/s-parame.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-traent.ads ada/unchconv.ads \n+   ada/s-crtl.ads ada/s-memory.ads ada/s-memory.adb ada/s-parame.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-traent.ads ada/unchconv.ads \n \n ada/s-parame.o : ada/system.ads ada/s-parame.ads ada/s-parame.adb \n \n@@ -2761,9 +2764,9 @@ ada/s-sopco5.o : ada/system.ads ada/s-secsta.ads ada/s-stoele.ads \\\n    ada/s-sopco5.ads ada/s-sopco5.adb ada/unchconv.ads \n \n ada/s-stache.o : ada/ada.ads ada/a-except.ads ada/system.ads \\\n-   ada/s-parame.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stache.adb \\\n-   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-traent.ads \\\n-   ada/unchconv.ads \n+   ada/s-crtl.ads ada/s-parame.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stache.adb ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-traent.ads ada/unchconv.ads \n \n ada/s-stalib.o : ada/ada.ads ada/a-except.ads ada/system.ads \\\n    ada/s-memory.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\"}, {"sha": "b20402c7f17b0678ca49443f5997f72a0b66e55d", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -1123,7 +1123,7 @@ ifeq ($(strip $(filter-out alpha% dec osf%,$(targ))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n-ifeq ($(strip $(filter-out alpha% dec vms% openvms% alphavms%,$(host))),)\n+ifeq ($(strip $(filter-out alpha% ia64 dec vms% openvms% alphavms%,$(host))),)\n \n soext  = .exe\n \n@@ -1134,16 +1134,31 @@ soext  = .exe\n endif\n \n ifeq ($(strip $(filter-out alpha% ia64 dec hp vms% openvms% alphavms%,$(targ))),)\n-ifeq ($(strip $(filter-out alpha64% dec vms% openvms% alphavms%,$(targ))),)\n-  LIBGNAT_TARGET_PAIRS_AUX =\n+\n+ifeq ($(strip $(filter-out ia64% hp vms% openvms%,$(targ))),)\n+  LIBGNAT_TARGET_PAIRS_AUX = \\\n+  s-osinte.adb<5xosinte.adb \\\n+  s-osinte.ads<5xosinte.ads \\\n+  s-parame.ads<5vparame.ads\n+else\n+ifeq ($(strip $(filter-out alpha64% dec hp vms% openvms% alphavms%,$(targ))),)\n+  LIBGNAT_TARGET_PAIRS_AUX = \\\n+  s-osinte.adb<5vosinte.adb \\\n+  s-osinte.ads<5vosinte.ads \\\n+  s-parame.ads<5vparame.ads\n else\n ifeq ($(strip $(filter-out express EXPRESS,$(THREAD_KIND))),)\n   LIBGNAT_TARGET_PAIRS_AUX = \\\n+  s-osinte.adb<5vosinte.adb \\\n+  s-osinte.ads<5vosinte.ads \\\n   s-parame.ads<5xparame.ads\n else\n   LIBGNAT_TARGET_PAIRS_AUX = \\\n+  s-osinte.adb<5vosinte.adb \\\n+  s-osinte.ads<5vosinte.ads \\\n   s-parame.ads<5vparame.ads\n endif\n+endif\n endif\n \n   LIBGNAT_TARGET_PAIRS = \\\n@@ -1152,6 +1167,7 @@ endif\n   a-calend.ads<4vcalend.ads \\\n   a-excpol.adb<4wexcpol.adb \\\n   a-intnam.ads<4vintnam.ads \\\n+  a-numaux.ads<4vnumaux.ads \\\n   g-expect.adb<3vexpect.adb \\\n   g-soccon.ads<3vsoccon.ads \\\n   g-socthi.ads<3vsocthi.ads \\\n@@ -1161,12 +1177,11 @@ endif\n   i-cpp.adb<6vcpp.adb \\\n   interfac.ads<6vinterf.ads \\\n   s-asthan.adb<5vasthan.adb \\\n+  s-crtl.ads<5vcrtl.ads \\\n   s-inmaop.adb<5vinmaop.adb \\\n   s-interr.adb<5vinterr.adb \\\n   s-intman.adb<5vintman.adb \\\n   s-intman.ads<5vintman.ads \\\n-  s-osinte.adb<5vosinte.adb \\\n-  s-osinte.ads<5vosinte.ads \\\n   s-osprim.adb<5vosprim.adb \\\n   s-osprim.ads<5vosprim.ads \\\n   s-taprop.adb<5vtaprop.adb \\"}, {"sha": "0fabb1d0ebd01b1c3957c8e86e504d7efaa57c64", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -1,5 +1,5 @@\n # Makefile.rtl for GNU Ada Compiler (GNAT).\n-#   Copyright (C) 2002 Free Software Foundation, Inc.\n+#   Copyright (C) 2003 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -283,6 +283,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-caun32$(objext) \\\n   s-caun64$(objext) \\\n   s-chepoo$(objext) \\\n+  s-crtl$(objext)   \\\n   s-crc32$(objext)  \\\n   s-direio$(objext) \\\n   s-errrep$(objext) \\"}, {"sha": "3c5743bc439738034de700ca838edbe6820faeb5", "filename": "gcc/ada/a-direio.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -38,6 +38,7 @@\n \n with Interfaces.C_Streams; use Interfaces.C_Streams;\n with System;               use System;\n+with System.CRTL;\n with System.File_Control_Block;\n with System.File_IO;\n with System.Direct_IO;\n@@ -65,6 +66,8 @@ package body Ada.Direct_IO is\n    function To_FCB is new Unchecked_Conversion (File_Mode, FCB.File_Mode);\n    function To_DIO is new Unchecked_Conversion (FCB.File_Mode, File_Mode);\n \n+   use type System.CRTL.size_t;\n+\n    -----------\n    -- Close --\n    -----------"}, {"sha": "7218763a5a4fdcc358e2becfd130a4a3928ad4d9", "filename": "gcc/ada/a-sequio.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-sequio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-sequio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-sequio.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,6 +38,7 @@\n \n with Interfaces.C_Streams; use Interfaces.C_Streams;\n with System;\n+with System.CRTL;\n with System.File_Control_Block;\n with System.File_IO;\n with System.Storage_Elements;\n@@ -58,6 +59,8 @@ package body Ada.Sequential_IO is\n    function To_FCB is new Unchecked_Conversion (File_Mode, FCB.File_Mode);\n    function To_SIO is new Unchecked_Conversion (FCB.File_Mode, File_Mode);\n \n+   use type System.CRTL.size_t;\n+\n    -----------\n    -- Close --\n    -----------"}, {"sha": "2d5db6196fc7aca950034f8e9fc6990f1d464c65", "filename": "gcc/ada/a-ststio.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-ststio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-ststio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -35,6 +35,7 @@ with Interfaces.C_Streams;      use Interfaces.C_Streams;\n with System;                    use System;\n with System.File_IO;\n with System.Soft_Links;\n+with System.CRTL;\n with Unchecked_Conversion;\n with Unchecked_Deallocation;\n \n@@ -382,8 +383,11 @@ package body Ada.Streams.Stream_IO is\n    ------------------\n \n    procedure Set_Position (File : in File_Type) is\n+      use type System.CRTL.long;\n    begin\n-      if fseek (File.Stream, long (File.Index) - 1, SEEK_SET) /= 0 then\n+      if fseek (File.Stream,\n+                System.CRTL.long (File.Index) - 1, SEEK_SET) /= 0\n+      then\n          raise Use_Error;\n       end if;\n    end Set_Position;"}, {"sha": "98766ce9bf3a08b4723779bc8159ebd0fc3d5af9", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -35,6 +35,7 @@ with Ada.Streams;          use Ada.Streams;\n with Interfaces.C_Streams; use Interfaces.C_Streams;\n with System;\n with System.File_IO;\n+with System.CRTL;\n with Unchecked_Conversion;\n with Unchecked_Deallocation;\n \n@@ -51,6 +52,8 @@ package body Ada.Text_IO is\n    function To_TIO is new Unchecked_Conversion (FCB.File_Mode, File_Mode);\n    use type FCB.File_Mode;\n \n+   use type System.CRTL.size_t;\n+\n    -------------------\n    -- AFCB_Allocate --\n    -------------------"}, {"sha": "621f4bd30ff4976b264846c793d4f58cb772da79", "filename": "gcc/ada/a-witeio.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,7 @@ with Ada.Streams;          use Ada.Streams;\n with Interfaces.C_Streams; use Interfaces.C_Streams;\n \n with System;\n+with System.CRTL;\n with System.File_IO;\n with System.WCh_Cnv;       use System.WCh_Cnv;\n with System.WCh_Con;       use System.WCh_Con;\n@@ -55,6 +56,8 @@ package body Ada.Wide_Text_IO is\n    function To_TIO is new Unchecked_Conversion (FCB.File_Mode, File_Mode);\n    use type FCB.File_Mode;\n \n+   use type System.CRTL.size_t;\n+\n    WC_Encoding : Character;\n    pragma Import (C, WC_Encoding, \"__gl_wc_encoding\");\n "}, {"sha": "cad54ac7ba87e8611fdfafff975c86aa5e62d3f5", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -2992,7 +2992,7 @@ package body Exp_Ch6 is\n               Make_Integer_Literal (Loc,\n                 Intval =>\n                   Expr_Value\n-                   (Expression (RTE (RE_Default_Secondary_Stack_Size))));\n+                   (Constant_Value (RTE (RE_Default_Secondary_Stack_Size))));\n          end if;\n \n          Sec_Stack_Len := Convert_To (RTE (RE_Storage_Offset), Sec_Stack_Len);"}, {"sha": "d568d364a7ac7a1ca1770bcf5b88f49a8343315c", "filename": "gcc/ada/g-os_lib.adb", "status": "modified", "additions": 55, "deletions": 52, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fg-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fg-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-os_lib.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -32,6 +32,7 @@\n ------------------------------------------------------------------------------\n \n with System.Case_Util;\n+with System.CRTL;\n with System.Soft_Links;\n with Unchecked_Conversion;\n with System; use System;\n@@ -82,8 +83,7 @@ package body GNAT.OS_Lib is\n \n    function To_Path_String_Access\n      (Path_Addr : Address;\n-      Path_Len  : Integer)\n-      return      String_Access;\n+      Path_Len  : Integer) return String_Access;\n    --  Converts a C String to an Ada String. We could do this making use of\n    --  Interfaces.C.Strings but we prefer not to import that entire package\n \n@@ -143,8 +143,7 @@ package body GNAT.OS_Lib is\n    -----------------------------\n \n    function Argument_String_To_List\n-     (Arg_String : String)\n-      return       Argument_List_Access\n+     (Arg_String : String) return Argument_List_Access\n    is\n       Max_Args : constant Integer := Arg_String'Length;\n       New_Argv : Argument_List (1 .. Max_Args);\n@@ -397,8 +396,7 @@ package body GNAT.OS_Lib is\n \n          function Copy_Attributes\n            (From, To : System.Address;\n-            Mode     : Integer)\n-            return     Integer;\n+            Mode     : Integer) return Integer;\n          pragma Import (C, Copy_Attributes, \"__gnat_copy_attribs\");\n          --  Mode = 0 - copy only time stamps.\n          --  Mode = 1 - copy time stamps and read/write/execute attributes\n@@ -558,8 +556,7 @@ package body GNAT.OS_Lib is\n \n       function Copy_Attributes\n         (From, To : System.Address;\n-         Mode     : Integer)\n-         return     Integer;\n+         Mode     : Integer) return Integer;\n       pragma Import (C, Copy_Attributes, \"__gnat_copy_attribs\");\n       --  Mode = 0 - copy only time stamps.\n       --  Mode = 1 - copy time stamps and read/write/execute attributes\n@@ -611,13 +608,11 @@ package body GNAT.OS_Lib is\n \n    function Create_File\n      (Name  : C_File_Name;\n-      Fmode : Mode)\n-      return  File_Descriptor\n+      Fmode : Mode) return File_Descriptor\n    is\n       function C_Create_File\n         (Name  : C_File_Name;\n-         Fmode : Mode)\n-         return  File_Descriptor;\n+         Fmode : Mode) return File_Descriptor;\n       pragma Import (C, C_Create_File, \"__gnat_open_create\");\n \n    begin\n@@ -626,8 +621,7 @@ package body GNAT.OS_Lib is\n \n    function Create_File\n      (Name  : String;\n-      Fmode : Mode)\n-      return  File_Descriptor\n+      Fmode : Mode) return File_Descriptor\n    is\n       C_Name : String (1 .. Name'Length + 1);\n \n@@ -643,13 +637,11 @@ package body GNAT.OS_Lib is\n \n    function Create_New_File\n      (Name  : C_File_Name;\n-      Fmode : Mode)\n-      return  File_Descriptor\n+      Fmode : Mode) return File_Descriptor\n    is\n       function C_Create_New_File\n         (Name  : C_File_Name;\n-         Fmode : Mode)\n-         return  File_Descriptor;\n+         Fmode : Mode) return File_Descriptor;\n       pragma Import (C, C_Create_New_File, \"__gnat_open_new\");\n \n    begin\n@@ -658,8 +650,7 @@ package body GNAT.OS_Lib is\n \n    function Create_New_File\n      (Name  : String;\n-      Fmode : Mode)\n-      return  File_Descriptor\n+      Fmode : Mode) return File_Descriptor\n    is\n       C_Name : String (1 .. Name'Length + 1);\n \n@@ -679,8 +670,7 @@ package body GNAT.OS_Lib is\n    is\n       function Open_New_Temp\n         (Name  : System.Address;\n-         Fmode : Mode)\n-         return  File_Descriptor;\n+         Fmode : Mode) return File_Descriptor;\n       pragma Import (C, Open_New_Temp, \"__gnat_open_new_temp\");\n \n    begin\n@@ -1225,8 +1215,7 @@ package body GNAT.OS_Lib is\n    -------------------------\n \n    function Locate_Exec_On_Path\n-     (Exec_Name : String)\n-      return      String_Access\n+     (Exec_Name : String) return String_Access\n    is\n       function Locate_Exec_On_Path (C_Exec_Name : Address) return Address;\n       pragma Import (C, Locate_Exec_On_Path, \"__gnat_locate_exec_on_path\");\n@@ -1262,8 +1251,7 @@ package body GNAT.OS_Lib is\n \n    function Locate_Regular_File\n      (File_Name : C_File_Name;\n-      Path      : C_File_Name)\n-      return      String_Access\n+      Path      : C_File_Name) return String_Access\n    is\n       function Locate_Regular_File\n         (C_File_Name, Path_Val : Address) return Address;\n@@ -1291,8 +1279,7 @@ package body GNAT.OS_Lib is\n \n    function Locate_Regular_File\n      (File_Name : String;\n-      Path      : String)\n-      return      String_Access\n+      Path      : String) return String_Access\n    is\n       C_File_Name : String (1 .. File_Name'Length + 1);\n       C_Path      : String (1 .. Path'Length + 1);\n@@ -1313,8 +1300,7 @@ package body GNAT.OS_Lib is\n \n    function Non_Blocking_Spawn\n      (Program_Name : String;\n-      Args         : Argument_List)\n-      return         Process_Id\n+      Args         : Argument_List) return Process_Id\n    is\n       Junk : Integer;\n       Pid  : Process_Id;\n@@ -1428,8 +1414,7 @@ package body GNAT.OS_Lib is\n      (Name           : String;\n       Directory      : String  := \"\";\n       Resolve_Links  : Boolean := True;\n-      Case_Sensitive : Boolean := True)\n-      return           String\n+      Case_Sensitive : Boolean := True) return String\n    is\n       Max_Path : Integer;\n       pragma Import (C, Max_Path, \"__gnat_max_path_len\");\n@@ -1465,13 +1450,11 @@ package body GNAT.OS_Lib is\n       function Readlink\n         (Path   : System.Address;\n          Buf    : System.Address;\n-         Bufsiz : Integer)\n-         return   Integer;\n+         Bufsiz : Integer) return Integer;\n       pragma Import (C, Readlink, \"__gnat_readlink\");\n \n       function To_Canonical_File_Spec\n-        (Host_File : System.Address)\n-         return      System.Address;\n+        (Host_File : System.Address) return System.Address;\n       pragma Import\n         (C, To_Canonical_File_Spec, \"__gnat_to_canonical_file_spec\");\n \n@@ -1909,13 +1892,11 @@ package body GNAT.OS_Lib is\n \n    function Open_Read\n      (Name  : C_File_Name;\n-      Fmode : Mode)\n-      return  File_Descriptor\n+      Fmode : Mode) return File_Descriptor\n    is\n       function C_Open_Read\n         (Name  : C_File_Name;\n-         Fmode : Mode)\n-         return  File_Descriptor;\n+         Fmode : Mode) return File_Descriptor;\n       pragma Import (C, C_Open_Read, \"__gnat_open_read\");\n \n    begin\n@@ -1924,8 +1905,7 @@ package body GNAT.OS_Lib is\n \n    function Open_Read\n      (Name  : String;\n-      Fmode : Mode)\n-      return  File_Descriptor\n+      Fmode : Mode) return File_Descriptor\n    is\n       C_Name : String (1 .. Name'Length + 1);\n \n@@ -1941,13 +1921,11 @@ package body GNAT.OS_Lib is\n \n    function Open_Read_Write\n      (Name  : C_File_Name;\n-      Fmode : Mode)\n-      return  File_Descriptor\n+      Fmode : Mode) return File_Descriptor\n    is\n       function C_Open_Read_Write\n         (Name  : C_File_Name;\n-         Fmode : Mode)\n-         return  File_Descriptor;\n+         Fmode : Mode) return File_Descriptor;\n       pragma Import (C, C_Open_Read_Write, \"__gnat_open_rw\");\n \n    begin\n@@ -1956,8 +1934,7 @@ package body GNAT.OS_Lib is\n \n    function Open_Read_Write\n      (Name  : String;\n-      Fmode : Mode)\n-      return  File_Descriptor\n+      Fmode : Mode) return File_Descriptor\n    is\n       C_Name : String (1 .. Name'Length + 1);\n \n@@ -1967,6 +1944,20 @@ package body GNAT.OS_Lib is\n       return Open_Read_Write (C_Name (C_Name'First)'Address, Fmode);\n    end Open_Read_Write;\n \n+   ----------\n+   -- Read --\n+   ----------\n+\n+   function Read\n+     (FD   : File_Descriptor;\n+      A    : System.Address;\n+      N    : Integer) return Integer\n+   is\n+   begin\n+      return Integer (System.CRTL.read\n+        (System.CRTL.int (FD), System.CRTL.chars (A), System.CRTL.int (N)));\n+   end Read;\n+\n    -----------------\n    -- Rename_File --\n    -----------------\n@@ -2031,8 +2022,7 @@ package body GNAT.OS_Lib is\n \n    function Spawn\n      (Program_Name : String;\n-      Args         : Argument_List)\n-      return         Integer\n+      Args         : Argument_List) return Integer\n    is\n       Junk   : Process_Id;\n       Result : Integer;\n@@ -2173,8 +2163,7 @@ package body GNAT.OS_Lib is\n \n    function To_Path_String_Access\n      (Path_Addr : Address;\n-      Path_Len  : Integer)\n-      return      String_Access\n+      Path_Len  : Integer) return String_Access\n    is\n       subtype Path_String is String (1 .. Path_Len);\n       type    Path_String_Access is access Path_String;\n@@ -2213,4 +2202,18 @@ package body GNAT.OS_Lib is\n       Success := (Status = 0);\n    end Wait_Process;\n \n+   -----------\n+   -- Write --\n+   -----------\n+\n+   function Write\n+     (FD   : File_Descriptor;\n+      A    : System.Address;\n+      N    : Integer) return Integer\n+   is\n+   begin\n+      return Integer (System.CRTL.write\n+        (System.CRTL.int (FD), System.CRTL.chars (A), System.CRTL.int (N)));\n+   end Write;\n+\n end GNAT.OS_Lib;"}, {"sha": "8b317fdc2ca2094e62f025960a8521a5d66b98b5", "filename": "gcc/ada/g-os_lib.ads", "status": "modified", "additions": 15, "deletions": 28, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fg-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fg-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-os_lib.ads?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -175,31 +175,27 @@ pragma Elaborate_Body (OS_Lib);\n \n    function Open_Read\n      (Name  : String;\n-      Fmode : Mode)\n-      return  File_Descriptor;\n+      Fmode : Mode) return File_Descriptor;\n    --  Open file Name for reading, returning file descriptor File descriptor\n    --  returned is Invalid_FD if file cannot be opened.\n \n    function Open_Read_Write\n      (Name  : String;\n-      Fmode : Mode)\n-      return  File_Descriptor;\n+      Fmode : Mode) return File_Descriptor;\n    --  Open file Name for both reading and writing, returning file\n    --  descriptor. File descriptor returned is Invalid_FD if file cannot be\n    --  opened.\n \n    function Create_File\n      (Name  : String;\n-      Fmode : Mode)\n-      return  File_Descriptor;\n+      Fmode : Mode) return File_Descriptor;\n    --  Creates new file with given name for writing, returning file descriptor\n    --  for subsequent use in Write calls. File descriptor returned is\n    --  Invalid_FD if file cannot be successfully created\n \n    function Create_New_File\n      (Name  : String;\n-      Fmode : Mode)\n-      return  File_Descriptor;\n+      Fmode : Mode) return File_Descriptor;\n    --  Create new file with given name for writing, returning file descriptor\n    --  for subsequent use in Write calls. This differs from Create_File in\n    --  that it fails if the file already exists. File descriptor returned is\n@@ -334,18 +330,14 @@ pragma Elaborate_Body (OS_Lib);\n    function Read\n      (FD   : File_Descriptor;\n       A    : System.Address;\n-      N    : Integer)\n-      return Integer;\n-   pragma Import (C, Read, \"read\");\n+      N    : Integer) return Integer;\n    --  Read N bytes to address A from file referenced by FD. Returned value\n    --  is count of bytes actually read, which can be less than N at EOF.\n \n    function Write\n      (FD   : File_Descriptor;\n       A    : System.Address;\n-      N    : Integer)\n-      return Integer;\n-   pragma Import (C, Write, \"write\");\n+      N    : Integer) return Integer;\n    --  Write N bytes from address A to file referenced by FD. The returned\n    --  value is the number of bytes written, which can be less than N if\n    --  a disk full condition was detected.\n@@ -379,8 +371,7 @@ pragma Elaborate_Body (OS_Lib);\n      (Name           : String;\n       Directory      : String  := \"\";\n       Resolve_Links  : Boolean := True;\n-      Case_Sensitive : Boolean := True)\n-      return           String;\n+      Case_Sensitive : Boolean := True) return String;\n    --  Returns a file name as an absolute path name, resolving all relative\n    --  directories, and symbolic links. The parameter Directory is a fully\n    --  resolved path name for a directory, or the empty string (the default).\n@@ -458,8 +449,7 @@ pragma Elaborate_Body (OS_Lib);\n    --  span file systems and may refer to directories.\n \n    function Locate_Exec_On_Path\n-     (Exec_Name : String)\n-      return      String_Access;\n+     (Exec_Name : String) return String_Access;\n    --  Try to locate an executable whose name is given by Exec_Name in the\n    --  directories listed in the environment Path. If the Exec_Name doesn't\n    --  have the executable suffix, it will be appended before the search.\n@@ -470,8 +460,7 @@ pragma Elaborate_Body (OS_Lib);\n \n    function Locate_Regular_File\n      (File_Name : String;\n-      Path      : String)\n-      return      String_Access;\n+      Path      : String) return String_Access;\n    --  Try to locate a regular file whose name is given by File_Name in the\n    --  directories listed in  Path. If a file is found, its full pathname is\n    --  returned; otherwise, a null pointer is returned. If the File_Name given\n@@ -511,25 +500,23 @@ pragma Elaborate_Body (OS_Lib);\n    --  This subtype is used to document that a parameter is the address\n    --  of a null-terminated string containing the name of a file.\n \n+   --  All the following functions need comments ???\n+\n    function Open_Read\n      (Name  : C_File_Name;\n-      Fmode : Mode)\n-      return  File_Descriptor;\n+      Fmode : Mode) return File_Descriptor;\n \n    function Open_Read_Write\n      (Name  : C_File_Name;\n-      Fmode : Mode)\n-      return  File_Descriptor;\n+      Fmode : Mode) return File_Descriptor;\n \n    function Create_File\n      (Name  : C_File_Name;\n-      Fmode : Mode)\n-      return  File_Descriptor;\n+      Fmode : Mode) return File_Descriptor;\n \n    function Create_New_File\n      (Name  : C_File_Name;\n-      Fmode : Mode)\n-      return  File_Descriptor;\n+      Fmode : Mode) return File_Descriptor;\n \n    procedure Delete_File (Name : C_File_Name; Success : out Boolean);\n "}, {"sha": "7384cd353a396238c0d6095bb8c336457a36768c", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -342,10 +342,10 @@ procedure Gnatchop is\n \n       if not Warning then\n          Set_Exit_Status (Failure);\n-      end if;\n \n-      if Exit_On_Error then\n-         raise Terminate_Program;\n+         if Exit_On_Error then\n+            raise Terminate_Program;\n+         end if;\n       end if;\n    end Error_Msg;\n \n@@ -1738,7 +1738,7 @@ begin\n       declare\n          Warnings_Msg : String := Warning_Count'Img & \" warning(s)\";\n       begin\n-         Error_Msg (Warnings_Msg (2 .. Warnings_Msg'Last));\n+         Error_Msg (Warnings_Msg (2 .. Warnings_Msg'Last), Warning => True);\n       end;\n    end if;\n "}, {"sha": "5d198c03144a7b787416559473576b361f4540c3", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -42,6 +42,7 @@ with Types;\n with Ada.Command_Line;     use Ada.Command_Line;\n with GNAT.OS_Lib;          use GNAT.OS_Lib;\n with Interfaces.C_Streams; use Interfaces.C_Streams;\n+with System.CRTL;\n \n procedure Gnatlink is\n    pragma Ident (Gnatvsn.Gnat_Static_Version_String);\n@@ -770,6 +771,7 @@ procedure Gnatlink is\n       ------------------------\n \n       procedure Store_File_Context is\n+         use type System.CRTL.long;\n       begin\n          RB_Next_Line := Next_Line;\n          RB_Nfirst    := Nfirst;"}, {"sha": "2c85bc937edce1ae243f720faedb946f71e25097", "filename": "gcc/ada/i-cstrea.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fi-cstrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fi-cstrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,6 +39,8 @@ with Unchecked_Conversion;\n \n package body Interfaces.C_Streams is\n \n+   use type System.CRTL.size_t;\n+\n    ------------\n    -- fread --\n    ------------"}, {"sha": "39f8af90a741937a68d0d74721b13adc4247a797", "filename": "gcc/ada/i-cstrea.ads", "status": "modified", "additions": 33, "deletions": 69, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fi-cstrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fi-cstrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.ads?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -34,38 +34,17 @@\n --  This package is a thin binding to selected functions in the C\n --  library that provide a complete interface for handling C streams.\n \n-with System.Parameters;\n+with System.CRTL;\n \n package Interfaces.C_Streams is\n    pragma Preelaborate;\n \n-   --  Note: the reason we do not use the types that are in Interfaces.C is\n-   --  that we want to avoid dragging in the code in this unit if possible.\n-\n-   subtype chars is System.Address;\n-   --  Pointer to null-terminated array of characters\n-\n-   subtype FILEs is System.Address;\n-   --  Corresponds to the C type FILE*\n-\n+   subtype chars is System.CRTL.chars;\n+   subtype FILEs is System.CRTL.FILEs;\n+   subtype int is System.CRTL.int;\n+   subtype long is System.CRTL.long;\n+   subtype size_t is System.CRTL.size_t;\n    subtype voids is System.Address;\n-   --  Corresponds to the C type void*\n-\n-   subtype int is Integer;\n-   --  Note: the above type is a subtype deliberately, and it is part of\n-   --  this spec that the above correspondence is guaranteed. This means\n-   --  that it is legitimate to, for example, use Integer instead of int.\n-   --  We provide this synonym for clarity, but in some cases it may be\n-   --  convenient to use the underlying types (for example to avoid an\n-   --  unnecessary dependency of a spec on the spec of this unit).\n-\n-   type long is range -(2 ** (System.Parameters.long_bits - 1))\n-      .. +(2 ** (System.Parameters.long_bits - 1)) - 1;\n-   --  Note: the above type also used to be a subtype, but the correspondence\n-   --  was unused so it was made into a parameterized type to avoid having\n-   --  multiple versions of this spec for systems where long /= Long_Integer.\n-\n-   type size_t is mod 2 ** Standard'Address_Size;\n \n    NULL_Stream : constant FILEs;\n    --  Value returned (NULL in C) to indicate an fdopen/fopen/tmpfile error\n@@ -106,34 +85,39 @@ package Interfaces.C_Streams is\n    --  Library Reference\" (Microsoft Press, 1990, ISBN 1-55615-225-6),\n    --  which includes useful information on system compatibility.\n \n-   procedure clearerr (stream : FILEs);\n+   procedure clearerr (stream : FILEs) renames System.CRTL.clearerr;\n \n-   function fclose (stream : FILEs) return int;\n+   function fclose (stream : FILEs) return int renames System.CRTL.fclose;\n \n-   function fdopen (handle : int; mode : chars) return FILEs;\n+   function fdopen (handle : int; mode : chars) return FILEs\n+     renames System.CRTL.fdopen;\n \n    function feof (stream : FILEs) return int;\n \n    function ferror (stream : FILEs) return int;\n \n-   function fflush (stream : FILEs) return int;\n+   function fflush (stream : FILEs) return int renames System.CRTL.fflush;\n \n-   function fgetc (stream : FILEs) return int;\n+   function fgetc (stream : FILEs) return int renames System.CRTL.fgetc;\n \n-   function fgets (strng : chars; n : int; stream : FILEs) return chars;\n+   function fgets (strng : chars; n : int; stream : FILEs) return chars\n+     renames System.CRTL.fgets;\n \n    function fileno (stream : FILEs) return int;\n \n-   function fopen (filename : chars; Mode : chars) return FILEs;\n+   function fopen (filename : chars; Mode : chars) return FILEs\n+     renames System.CRTL.fopen;\n    --  Note: to maintain target independence, use text_translation_required,\n    --  a boolean variable defined in a-sysdep.c to deal with the target\n    --  dependent text translation requirement. If this variable is set,\n    --  then b/t should be appended to the standard mode argument to set\n    --  the text translation mode off or on as required.\n \n-   function fputc (C : int; stream : FILEs) return int;\n+   function fputc (C : int; stream : FILEs) return int\n+     renames System.CRTL.fputc;\n \n-   function fputs (Strng : chars; Stream : FILEs) return int;\n+   function fputs (Strng : chars; Stream : FILEs) return int\n+     renames System.CRTL.fputs;\n \n    function fread\n      (buffer : voids;\n@@ -159,15 +143,16 @@ package Interfaces.C_Streams is\n      (filename : chars;\n       mode     : chars;\n       stream   : FILEs)\n-      return     FILEs;\n+      return     FILEs renames System.CRTL.freopen;\n \n    function fseek\n      (stream : FILEs;\n       offset : long;\n       origin : int)\n-      return   int;\n+      return   int renames System.CRTL.fseek;\n \n-   function ftell (stream : FILEs) return long;\n+   function ftell (stream : FILEs) return long\n+     renames System.CRTL.ftell;\n \n    function fwrite\n      (buffer : voids;\n@@ -176,12 +161,12 @@ package Interfaces.C_Streams is\n       stream : FILEs)\n       return   size_t;\n \n-   function isatty (handle : int) return int;\n+   function isatty (handle : int) return int renames System.CRTL.isatty;\n \n-   procedure mktemp (template : chars);\n+   procedure mktemp (template : chars) renames System.CRTL.mktemp;\n    --  The return value (which is just a pointer to template) is discarded\n \n-   procedure rewind (stream : FILEs);\n+   procedure rewind (stream : FILEs) renames System.CRTL.rewind;\n \n    function setvbuf\n      (stream : FILEs;\n@@ -190,16 +175,18 @@ package Interfaces.C_Streams is\n       size   : size_t)\n       return   int;\n \n-   procedure tmpnam (string : chars);\n+   procedure tmpnam (string : chars) renames System.CRTL.tmpnam;\n    --  The parameter must be a pointer to a string buffer of at least L_tmpnam\n    --  bytes (the call with a null parameter is not supported). The returned\n    --  value, which is just a copy of the input argument, is discarded.\n \n-   function tmpfile return FILEs;\n+   function tmpfile return FILEs renames System.CRTL.tmpfile;\n \n-   function ungetc (c : int; stream : FILEs) return int;\n+   function ungetc (c : int; stream : FILEs) return int\n+     renames System.CRTL.ungetc;\n \n-   function unlink (filename : chars) return int;\n+   function unlink (filename : chars) return int\n+     renames System.CRTL.unlink;\n \n    ---------------------\n    -- Extra functions --\n@@ -253,29 +240,6 @@ private\n    pragma Inline (fwrite);\n    pragma Inline (setvbuf);\n \n-   --  The following routines are always functions in C, and thus can be\n-   --  imported directly into Ada without any intermediate C needed\n-\n-   pragma Import (C, clearerr);\n-   pragma Import (C, fclose);\n-   pragma Import (C, fdopen);\n-   pragma Import (C, fflush);\n-   pragma Import (C, fgetc);\n-   pragma Import (C, fgets);\n-   pragma Import (C, fopen);\n-   pragma Import (C, fputc);\n-   pragma Import (C, fputs);\n-   pragma Import (C, freopen);\n-   pragma Import (C, fseek);\n-   pragma Import (C, ftell);\n-   pragma Import (C, isatty);\n-   pragma Import (C, mktemp);\n-   pragma Import (C, rewind);\n-   pragma Import (C, tmpnam);\n-   pragma Import (C, tmpfile);\n-   pragma Import (C, ungetc);\n-   pragma Import (C, unlink);\n-\n    pragma Import (C, file_exists, \"__gnat_file_exists\");\n    pragma Import (C, is_regular_file, \"__gnat_is_regular_file_fd\");\n "}, {"sha": "cabf61043e0862f8eeb3762dc969cf0f4a984f00", "filename": "gcc/ada/s-crtl.ads", "status": "added", "additions": 159, "deletions": 0, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -0,0 +1,159 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                         S Y S T E M . C R T L                            --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--           Copyright (C) 2003 Free Software Foundation, Inc.              --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides the low level interface to the C Run Time Library\n+--  on non-VMS systems.\n+\n+with System.Parameters;\n+package System.CRTL is\n+   pragma Pure (CRTL);\n+\n+   subtype chars is System.Address;\n+   --  Pointer to null-terminated array of characters\n+\n+   subtype FILEs is System.Address;\n+   --  Corresponds to the C type FILE*\n+\n+   subtype int is Integer;\n+\n+   type long is range -(2 ** (System.Parameters.long_bits - 1))\n+      .. +(2 ** (System.Parameters.long_bits - 1)) - 1;\n+\n+   subtype off_t is Long_Integer;\n+\n+   type size_t is mod 2 ** Standard'Address_Size;\n+\n+   function atoi (A : System.Address) return Integer;\n+   pragma Import (C, atoi, \"atoi\");\n+\n+   procedure clearerr (stream : FILEs);\n+   pragma Import (C, clearerr, \"clearerr\");\n+\n+   function fclose (stream : FILEs) return int;\n+   pragma Import (C, fclose, \"fclose\");\n+\n+   function fdopen (handle : int; mode : chars) return FILEs;\n+   pragma Import (C, fdopen, \"fdopen\");\n+\n+   function fflush (stream : FILEs) return int;\n+   pragma Import (C, fflush, \"fflush\");\n+\n+   function fgetc (stream : FILEs) return int;\n+   pragma Import (C, fgetc, \"fgetc\");\n+\n+   function fgets (strng : chars; n : int; stream : FILEs) return chars;\n+   pragma Import (C, fgets, \"fgets\");\n+\n+   function fopen (filename : chars; Mode : chars) return FILEs;\n+   pragma Import (C, fopen, \"fopen\");\n+\n+   function fputc (C : int; stream : FILEs) return int;\n+   pragma Import (C, fputc, \"fputc\");\n+\n+   function fputs (Strng : chars; Stream : FILEs) return int;\n+   pragma Import (C, fputs, \"fputs\");\n+\n+   procedure free (Ptr : System.Address);\n+   pragma Import (C, free, \"free\");\n+\n+   function freopen\n+     (filename : chars;\n+      mode     : chars;\n+      stream   : FILEs)\n+      return     FILEs;\n+   pragma Import (C, freopen, \"freopen\");\n+\n+   function fseek\n+     (stream : FILEs;\n+      offset : long;\n+      origin : int)\n+      return   int;\n+   pragma Import (C, fseek, \"fseek\");\n+\n+   function ftell (stream : FILEs) return long;\n+   pragma Import (C, ftell, \"ftell\");\n+\n+   function getenv (S : String) return System.Address;\n+   pragma Import (C, getenv, \"getenv\");\n+\n+   function isatty (handle : int) return int;\n+   pragma Import (C, isatty, \"isatty\");\n+\n+   function lseek (fd : int; offset : off_t; direction : int) return off_t;\n+   pragma Import (C, lseek, \"lseek\");\n+\n+   function malloc (Size : size_t) return System.Address;\n+   pragma Import (C, malloc, \"malloc\");\n+\n+   procedure memcpy (S1 : System.Address; S2 : System.Address; N : size_t);\n+   pragma Import (C, memcpy, \"memcpy\");\n+\n+   procedure memmove (S1 : System.Address; S2 : System.Address; N : size_t);\n+   pragma Import (C, memmove, \"memmove\");\n+\n+   procedure mktemp (template : chars);\n+   pragma Import (C, mktemp, \"mktemp\");\n+\n+   function read (fd : int; buffer : chars; nbytes : int) return int;\n+   pragma Import (C, read, \"read\");\n+\n+   function realloc\n+     (Ptr : System.Address; Size : size_t) return System.Address;\n+   pragma Import (C, realloc, \"realloc\");\n+\n+   procedure rewind (stream : FILEs);\n+   pragma Import (C, rewind, \"rewind\");\n+\n+   function setvbuf\n+     (stream : FILEs;\n+      buffer : chars;\n+      mode   : int;\n+      size   : size_t)\n+      return   int;\n+   pragma Import (C, setvbuf, \"setvbuf\");\n+\n+   procedure tmpnam (string : chars);\n+   pragma Import (C, tmpnam, \"tmpnam\");\n+\n+   function tmpfile return FILEs;\n+   pragma Import (C, tmpfile, \"tmpfile\");\n+\n+   function ungetc (c : int; stream : FILEs) return int;\n+   pragma Import (C, ungetc, \"ungetc\");\n+\n+   function unlink (filename : chars) return int;\n+   pragma Import (C, unlink, \"unlink\");\n+\n+   function write (fd : int; buffer : chars; nbytes : int) return int;\n+   pragma Import (C, write, \"write\");\n+end System.CRTL;"}, {"sha": "a05461f81a3c627c84597287b3c5e49d7216fcf0", "filename": "gcc/ada/s-direio.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-direio.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,6 +34,7 @@\n with Ada.IO_Exceptions;         use Ada.IO_Exceptions;\n with Interfaces.C_Streams;      use Interfaces.C_Streams;\n with System;                    use System;\n+with System.CRTL;\n with System.File_IO;\n with System.Soft_Links;\n with Unchecked_Deallocation;\n@@ -46,6 +47,9 @@ package body System.Direct_IO is\n    subtype AP is FCB.AFCB_Ptr;\n    use type FCB.Shared_Status_Type;\n \n+   use type System.CRTL.long;\n+   use type System.CRTL.size_t;\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------"}, {"sha": "cf29b2495333c05f4b9e861751e725339aa4aa87", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -34,6 +34,7 @@\n with Ada.Finalization;            use Ada.Finalization;\n with Ada.IO_Exceptions;           use Ada.IO_Exceptions;\n with Interfaces.C_Streams;        use Interfaces.C_Streams;\n+with System.CRTL;\n with System.Soft_Links;\n with Unchecked_Deallocation;\n \n@@ -43,6 +44,8 @@ package body System.File_IO is\n \n    package SSL renames System.Soft_Links;\n \n+   use type System.CRTL.size_t;\n+\n    ----------------------\n    -- Global Variables --\n    ----------------------"}, {"sha": "f4d945487be4a08e37a216ce0ff2283082c830aa", "filename": "gcc/ada/s-memcop.ads", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-memcop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-memcop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-memcop.ads?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,33 +35,34 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides general block copy mechanisms analgous to those\n+--  This package provides general block copy mechanisms analogous to those\n --  provided by the C routines memcpy and memmove allowing for copies with\n---  and without possible overflow.\n+--  and without possible overlap of the operands.\n+\n+--  The idea is to allow a configurable run-time to provide this capability\n+--  for use by the compiler without dragging in C-run time routines.\n+\n+with System.CRTL;\n+--  The above with is contrary to the intent ???\n \n package System.Memory_Copy is\n pragma Preelaborate;\n \n-   type size_t is mod 2 ** Standard'Address_Size;\n-   --  Note: the reason we redefine this here instead of using the\n-   --  definition in Interfaces.C is that we do not want to drag in\n-   --  all of Interfaces.C just because System.Memory_Copy is used.\n-\n-   procedure memcpy (S1 : Address; S2 : Address; N : size_t);\n+   procedure memcpy (S1 : Address; S2 : Address; N : System.CRTL.size_t)\n+     renames System.CRTL.memcpy;\n    --  Copies N storage units from area starting at S2 to area starting\n    --  at S1 without any check for buffer overflow. The memory areas\n    --  must not overlap, or the result of this call is undefined.\n \n-   procedure memmove (S1 : Address; S2 : Address; N : size_t);\n+   procedure memmove (S1 : Address; S2 : Address; N : System.CRTL.size_t)\n+      renames System.CRTL.memmove;\n    --  Copies N storage units from area starting at S2 to area starting\n    --  at S1 without any check for buffer overflow. The difference between\n    --  this memmove and memcpy is that with memmove, the storage areas may\n    --  overlap (forwards or backwards) and the result is correct (i.e. it\n    --  is as if S2 is first moved to a temporary area, and then this area\n    --  is copied to S1 in a separate step).\n \n-private\n-\n    --  In the standard library, these are just interfaced to the C routines.\n    --  But in the HI-E (high integrity version) they may be reprogrammed to\n    --  meet certification requirements (and marked High_Integrity).\n@@ -70,7 +71,4 @@ private\n    --  available, and the HI-E compiler will as a result generate implicit\n    --  loops (which will violate the restriction No_Implicit_Loops).\n \n-   pragma Import (C, memcpy, \"memcpy\");\n-   pragma Import (C, memmove, \"memmove\");\n-\n end System.Memory_Copy;"}, {"sha": "66637c7291b6a2a07d8a10207149e15299d95d50", "filename": "gcc/ada/s-memory.adb", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-memory.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-memory.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-memory.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -46,21 +46,22 @@\n with Ada.Exceptions;\n with System.Soft_Links;\n with System.Parameters;\n+with System.CRTL;\n \n package body System.Memory is\n \n    use Ada.Exceptions;\n    use System.Soft_Links;\n \n-   function c_malloc (Size : size_t) return System.Address;\n-   pragma Import (C, c_malloc, \"malloc\");\n+   function c_malloc (Size : System.CRTL.size_t) return System.Address\n+    renames System.CRTL.malloc;\n \n-   procedure c_free (Ptr : System.Address);\n-   pragma Import (C, c_free, \"free\");\n+   procedure c_free (Ptr : System.Address)\n+     renames System.CRTL.free;\n \n    function c_realloc\n-     (Ptr : System.Address; Size : size_t) return System.Address;\n-   pragma Import (C, c_realloc, \"realloc\");\n+     (Ptr : System.Address; Size : System.CRTL.size_t) return System.Address\n+     renames System.CRTL.realloc;\n \n    -----------\n    -- Alloc --\n@@ -85,10 +86,10 @@ package body System.Memory is\n       end if;\n \n       if Parameters.No_Abort then\n-         Result := c_malloc (Actual_Size);\n+         Result := c_malloc (System.CRTL.size_t (Actual_Size));\n       else\n          Abort_Defer.all;\n-         Result := c_malloc (Actual_Size);\n+         Result := c_malloc (System.CRTL.size_t (Actual_Size));\n          Abort_Undefer.all;\n       end if;\n \n@@ -132,10 +133,10 @@ package body System.Memory is\n       end if;\n \n       if Parameters.No_Abort then\n-         Result := c_realloc (Ptr, Actual_Size);\n+         Result := c_realloc (Ptr, System.CRTL.size_t (Actual_Size));\n       else\n          Abort_Defer.all;\n-         Result := c_realloc (Ptr, Actual_Size);\n+         Result := c_realloc (Ptr, System.CRTL.size_t (Actual_Size));\n          Abort_Undefer.all;\n       end if;\n "}, {"sha": "aa403c3f9882ececadf74d2bcf206fe8842351b3", "filename": "gcc/ada/s-stache.adb", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-stache.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-stache.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stache.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1999-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,7 @@ with Ada.Exceptions;\n with System.Storage_Elements; use System.Storage_Elements;\n with System.Parameters; use System.Parameters;\n with System.Soft_Links;\n+with System.CRTL;\n \n package body System.Stack_Checking is\n \n@@ -72,7 +73,6 @@ package body System.Stack_Checking is\n \n    procedure Invalidate_Stack_Cache (Any_Stack : Stack_Access) is\n       pragma Warnings (Off, Any_Stack);\n-\n    begin\n       Cache := Null_Stack;\n    end Invalidate_Stack_Cache;\n@@ -82,8 +82,7 @@ package body System.Stack_Checking is\n    --------------------\n \n    function Set_Stack_Info\n-     (Stack : access Stack_Access)\n-      return Stack_Access\n+     (Stack : access Stack_Access) return Stack_Access\n    is\n       type Frame_Mark is null record;\n       Frame_Location : Frame_Mark;\n@@ -93,12 +92,6 @@ package body System.Stack_Checking is\n       Limit_Chars : System.Address;\n       Limit       : Integer;\n \n-      function getenv (S : String) return System.Address;\n-      pragma Import (C, getenv, External_Name => \"getenv\");\n-\n-      function atoi (A : System.Address) return Integer;\n-      pragma Import (C, atoi);\n-\n    begin\n       --  The order of steps 1 .. 3 is important, see specification.\n \n@@ -113,16 +106,16 @@ package body System.Stack_Checking is\n          --  the current frame address.\n \n          if My_Stack.Size = 0 then\n-\n             My_Stack.Size := Storage_Offset (Default_Env_Stack_Size);\n \n             --  When the environment variable GNAT_STACK_LIMIT is set,\n             --  set Environment_Stack_Size to that number of kB.\n \n-            Limit_Chars := getenv (\"GNAT_STACK_LIMIT\" & ASCII.NUL);\n+            Limit_Chars := System.CRTL.getenv (\"GNAT_STACK_LIMIT\" & ASCII.NUL);\n \n             if Limit_Chars /= Null_Address then\n-               Limit := atoi (Limit_Chars);\n+               Limit := System.CRTL.atoi (Limit_Chars);\n+\n                if Limit >= 0 then\n                   My_Stack.Size := Storage_Offset (Limit) * Kilobyte;\n                end if;\n@@ -192,8 +185,7 @@ package body System.Stack_Checking is\n    -----------------\n \n    function Stack_Check\n-     (Stack_Address : System.Address)\n-      return Stack_Access\n+     (Stack_Address : System.Address) return Stack_Access\n    is\n       type Frame_Marker is null record;\n       Marker        : Frame_Marker;\n@@ -227,7 +219,6 @@ package body System.Stack_Checking is\n          --  it is essential to use our local copy of Stack!\n \n       begin\n-\n          if (Stack_Grows_Down and then\n                (not (Frame_Address <= My_Stack.Base)))\n            or else"}, {"sha": "baca96162dba6c1ab2a2663f05e73b597e173a3e", "filename": "gcc/ada/s-tasdeb.adb", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-tasdeb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/209db2bf05a5830792bc1a2f06c8fedf21285304/gcc%2Fada%2Fs-tasdeb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasdeb.adb?ref=209db2bf05a5830792bc1a2f06c8fedf21285304", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1997-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1997-2003 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,14 +39,12 @@\n --  Do not add any dependency to GNARL packages since this package is used\n --  in both normal and restricted (ravenscar) environments.\n \n-with Interfaces.C;\n+with System.CRTL;\n with System.Task_Primitives.Operations;\n with Unchecked_Conversion;\n \n package body System.Tasking.Debug is\n \n-   use Interfaces.C;\n-\n    package STPO renames System.Task_Primitives.Operations;\n \n    function To_Integer is new\n@@ -60,8 +58,7 @@ package body System.Tasking.Debug is\n    -- Local Subprograms --\n    -----------------------\n \n-   procedure write (Fd : Integer; S : String; Count : size_t);\n-   pragma Import (C, write);\n+   procedure Write (Fd : Integer; S : String; Count : Integer);\n \n    procedure Put (S : String);\n    --  Display S on standard output.\n@@ -177,7 +174,7 @@ package body System.Tasking.Debug is\n \n    procedure Put (S : String) is\n    begin\n-      write (2, S, S'Length);\n+      Write (2, S, S'Length);\n    end Put;\n \n    --------------\n@@ -186,7 +183,7 @@ package body System.Tasking.Debug is\n \n    procedure Put_Line (S : String := \"\") is\n    begin\n-      write (2, S & ASCII.LF, S'Length + 1);\n+      Write (2, S & ASCII.LF, S'Length + 1);\n    end Put_Line;\n \n    ----------------------\n@@ -297,4 +294,11 @@ package body System.Tasking.Debug is\n       end if;\n    end Trace;\n \n+   procedure Write (Fd : Integer; S : String; Count : Integer) is\n+\n+      Num : Integer;\n+   begin\n+      Num := System.CRTL.write (Fd, S (S'First)'Address, Count);\n+   end Write;\n+\n end System.Tasking.Debug;"}]}