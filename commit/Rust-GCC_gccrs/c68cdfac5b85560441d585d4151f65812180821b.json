{"sha": "c68cdfac5b85560441d585d4151f65812180821b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4Y2RmYWM1Yjg1NTYwNDQxZDU4NWQ0MTUxZjY1ODEyMTgwODIxYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-05-26T20:19:55Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-05-26T20:19:55Z"}, "message": "trans.c (Attribute_to_gnu): Do not apply extra-precision trick to literals.\n\n\t* gcc-interface/trans.c (Attribute_to_gnu) <Attr_Machine>: Do not apply\n\textra-precision trick to literals.  Build SAVE_EXPR manually.\n\n\t* gcc-interface/misc.c (enumerate_modes): Add bypass for x86/x86-64.\n\nFrom-SVN: r223715", "tree": {"sha": "296159a0889b88fc3421b965557c6fc40d9370e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/296159a0889b88fc3421b965557c6fc40d9370e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c68cdfac5b85560441d585d4151f65812180821b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68cdfac5b85560441d585d4151f65812180821b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68cdfac5b85560441d585d4151f65812180821b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68cdfac5b85560441d585d4151f65812180821b/comments", "author": null, "committer": null, "parents": [{"sha": "241125b2a1e4d1a694cd54c20ce2d7d5304448b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241125b2a1e4d1a694cd54c20ce2d7d5304448b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/241125b2a1e4d1a694cd54c20ce2d7d5304448b3"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "d6d7af5defa1e37b9084795ed999784796ebf75f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68cdfac5b85560441d585d4151f65812180821b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68cdfac5b85560441d585d4151f65812180821b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c68cdfac5b85560441d585d4151f65812180821b", "patch": "@@ -1,3 +1,10 @@\n+2015-05-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Attribute_to_gnu) <Attr_Machine>: Do not apply\n+\textra-precision trick to literals.  Build SAVE_EXPR manually.\n+\n+\t* gcc-interface/misc.c (enumerate_modes): Add bypass for x86/x86-64.\n+\n 2015-05-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (DECL_GLOBAL_NONCONSTANT_RENAMING_P): Delete"}, {"sha": "9f931dc8aa63bc99d73c1fa81cad985fc0b191f8", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68cdfac5b85560441d585d4151f65812180821b/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68cdfac5b85560441d585d4151f65812180821b/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=c68cdfac5b85560441d585d4151f65812180821b", "patch": "@@ -847,7 +847,12 @@ enumerate_modes (void (*f) (const char *, int, int, int, int, int, int, int))\n \t      || fmt == &ieee_extended_intel_96_format\n \t      || fmt == &ieee_extended_intel_96_round_53_format\n \t      || fmt == &ieee_extended_intel_128_format)\n-\t    fp_arith_may_widen = true;\n+\t    {\n+#ifdef TARGET_FPMATH_DEFAULT\n+\t      if (TARGET_FPMATH_DEFAULT == FPMATH_387)\n+#endif\n+\t\tfp_arith_may_widen = true;\n+\t    }\n \n \t  if (fmt->b == 2)\n \t    digs = (fmt->p - 1) * 1233 / 4096; /* scale by log (2) */"}, {"sha": "b1c15516bc6e884dd102d6dd032a511aa288a343", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c68cdfac5b85560441d585d4151f65812180821b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c68cdfac5b85560441d585d4151f65812180821b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=c68cdfac5b85560441d585d4151f65812180821b", "patch": "@@ -2428,7 +2428,8 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n       gnu_result_type = get_unpadded_type (Etype (gnat_node));\n       gnu_result = convert (gnu_result_type, gnu_expr);\n \n-      if (fp_arith_may_widen\n+      if (TREE_CODE (gnu_result) != REAL_CST\n+\t  && fp_arith_may_widen\n \t  && TYPE_PRECISION (gnu_result_type)\n \t     < TYPE_PRECISION (longest_float_type_node))\n \t{\n@@ -2441,7 +2442,7 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n \t  finish_record_type (rec_type, field, 0, false);\n \n \t  rec_val = build_constructor_single (rec_type, field, gnu_result);\n-\t  rec_val = save_expr (rec_val);\n+\t  rec_val = build1 (SAVE_EXPR, rec_type, rec_val);\n \n \t  asm_expr\n \t    = build5 (ASM_EXPR, void_type_node,"}]}