{"sha": "293267bcdf1f32f624606b0087fa97731f1d08f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkzMjY3YmNkZjFmMzJmNjI0NjA2YjAwODdmYTk3NzMxZjFkMDhmNw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-12-12T21:02:41Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-12-12T21:02:41Z"}, "message": "extend.texi (attribute copy): Fix typos.\n\ngcc/ChangeLog:\n\n\t* doc/extend.texi (attribute copy): Fix typos.\n\nFrom-SVN: r267065", "tree": {"sha": "43dd7fbcc01ecd8f910cc2e0e5da3f28392773c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43dd7fbcc01ecd8f910cc2e0e5da3f28392773c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/293267bcdf1f32f624606b0087fa97731f1d08f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/293267bcdf1f32f624606b0087fa97731f1d08f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/293267bcdf1f32f624606b0087fa97731f1d08f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/293267bcdf1f32f624606b0087fa97731f1d08f7/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "348846ff361ca51d0251ec70d0b2eec8c786aad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/348846ff361ca51d0251ec70d0b2eec8c786aad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/348846ff361ca51d0251ec70d0b2eec8c786aad3"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "02be9cfe908b0fe8928d91310045367ab1e186e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293267bcdf1f32f624606b0087fa97731f1d08f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293267bcdf1f32f624606b0087fa97731f1d08f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=293267bcdf1f32f624606b0087fa97731f1d08f7", "patch": "@@ -1,3 +1,7 @@\n+2018-12-12  Martin Sebor  <msebor@redhat.com>\n+\n+\t* doc/extend.texi (attribute copy): Fix typos.\n+\n 2018-12-12  Martin Sebor  <msebor@redhat.com>\n \n \t* doc/extend.texi (Function Attributes): Clarify C++ aspects."}, {"sha": "4fc72d751a59ff3b887ee8a80da0e6e6f84010eb", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/293267bcdf1f32f624606b0087fa97731f1d08f7/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/293267bcdf1f32f624606b0087fa97731f1d08f7/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=293267bcdf1f32f624606b0087fa97731f1d08f7", "patch": "@@ -2658,15 +2658,15 @@ to specify the same set of attributes as their targets.  The @code{copy}\n attribute can be used with functions, variables, or types.  However,\n the kind of symbol to which the attribute is applied (either function\n or variable) must match the kind of symbol to which the argument refers.\n-The @code{copy} attribute copies only syntaxtic and semantic attributes\n-but attributes that affect a symbol's linkage or visibility such as\n+The @code{copy} attribute copies only syntactic and semantic attributes\n+but not attributes that affect a symbol's linkage or visibility such as\n @code{alias}, @code{visibility}, or @code{weak}.  The @code{deprecated}\n attribute is also not copied.  @xref{Common Type Attributes}.\n @xref{Common Variable Attributes}.\n \n For example, the @var{StrongAlias} macro below makes use of the @code{alias}\n and @code{copy} attributes to define an alias named @var{alloc} for function\n-@var{allocate} declated with attributes @var{alloc_size}, @var{malloc}, and\n+@var{allocate} declared with attributes @var{alloc_size}, @var{malloc}, and\n @var{nothrow}.  Thanks to the @code{__typeof__} operator the alias has\n the same type as the target function.  As a result of the @code{copy}\n attribute the alias also shares the same attributes as the target.\n@@ -6338,8 +6338,8 @@ set of attributes as the aliased symbols.  The @code{copy} attribute\n can be used with variables, functions or types.  However, the kind\n of symbol to which the attribute is applied (either varible or\n function) must match the kind of symbol to which the argument refers.\n-The @code{copy} attribute copies only syntaxtic and semantic attributes\n-but attributes that affect a symbol's linkage or visibility such as\n+The @code{copy} attribute copies only syntactic and semantic attributes\n+but not attributes that affect a symbol's linkage or visibility such as\n @code{alias}, @code{visibility}, or @code{weak}.  The @code{deprecated}\n attribute is also not copied.  @xref{Common Function Attributes}.\n @xref{Common Type Attributes}.\n@@ -7295,14 +7295,14 @@ The @code{copy} attribute can be used with types, variables, or\n functions.  However, the kind of symbol to which the attribute is\n applied (either varible or function) must match the kind of symbol\n to which the argument refers.\n-The @code{copy} attribute copies only syntaxtic and semantic attributes\n-but attributes that affect a symbol's linkage or visibility such as\n+The @code{copy} attribute copies only syntactic and semantic attributes\n+but not attributes that affect a symbol's linkage or visibility such as\n @code{alias}, @code{visibility}, or @code{weak}.  The @code{deprecated}\n attribute is also not copied.  @xref{Common Function Attributes}.\n @xref{Common Variable Attributes}.\n \n For example, suppose @code{struct A} below is defined in some third\n-partly library header to have the alignment requirement @code{N} and\n+party library header to have the alignment requirement @code{N} and\n to force a warning whenever a variable of the type is not so aligned\n due to attribute @code{packed}.  Specifying the @code{copy} attribute\n on the definition on the unrelated @code{struct B} has the effect of"}]}