{"sha": "61025d1b3652cc50dfc80f09f708140db8ab96aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEwMjVkMWIzNjUyY2M1MGRmYzgwZjA5ZjcwODE0MGRiOGFiOTZhYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-07-28T02:57:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-07-28T02:57:25Z"}, "message": "gimplify.c (maybe_with_size_expr): If already have WITH_SIZE_EXPR, don't make another one.\n\n\t* gimplify.c (maybe_with_size_expr): If already have WITH_SIZE_EXPR,\n\tdon't make another one.\n\nFrom-SVN: r85249", "tree": {"sha": "432043fe02c6f21c03f14c1b57a23835a373a7d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/432043fe02c6f21c03f14c1b57a23835a373a7d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61025d1b3652cc50dfc80f09f708140db8ab96aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61025d1b3652cc50dfc80f09f708140db8ab96aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61025d1b3652cc50dfc80f09f708140db8ab96aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61025d1b3652cc50dfc80f09f708140db8ab96aa/comments", "author": null, "committer": null, "parents": [{"sha": "ce961468b70fa2bcbb593b6b1a3345250f24e0aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce961468b70fa2bcbb593b6b1a3345250f24e0aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce961468b70fa2bcbb593b6b1a3345250f24e0aa"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "60411fac08e6436d6a341a8e04bbc20e5ccc7859", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61025d1b3652cc50dfc80f09f708140db8ab96aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61025d1b3652cc50dfc80f09f708140db8ab96aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61025d1b3652cc50dfc80f09f708140db8ab96aa", "patch": "@@ -1,5 +1,8 @@\n 2004-07-27  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* gimplify.c (maybe_with_size_expr): If already have WITH_SIZE_EXPR,\n+\tdon't make another one.\n+\n \tPR optimization/15077\n \t* function.h (struct function): Add field saved_static_chain_decl.\n \tFix comment for static_chain_decl."}, {"sha": "304a20b108259c4aac8fb939d61f875cff6b8edd", "filename": "gcc/gimplify.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61025d1b3652cc50dfc80f09f708140db8ab96aa/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61025d1b3652cc50dfc80f09f708140db8ab96aa/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=61025d1b3652cc50dfc80f09f708140db8ab96aa", "patch": "@@ -1746,20 +1746,25 @@ gimplify_self_mod_expr (tree *expr_p, tree *pre_p, tree *post_p,\n static void\n maybe_with_size_expr (tree *expr_p)\n {\n-  tree expr, type, size;\n+  tree expr = *expr_p;\n+  tree type = TREE_TYPE (expr);\n+  tree size;\n \n-  expr = *expr_p;\n-  type = TREE_TYPE (expr);\n-  if (type == error_mark_node)\n+  /* If we've already wrapped this or the type is error_mark_node, we can't do\n+     anything.  */\n+  if (TREE_CODE (expr) == WITH_SIZE_EXPR\n+      || type == error_mark_node)\n     return;\n \n+  /* If the size isn't known or is a constant, we have nothing to do.  */\n   size = TYPE_SIZE_UNIT (type);\n-  if (size && TREE_CODE (size) != INTEGER_CST)\n-    {\n-      size = unshare_expr (size);\n-      size = SUBSTITUTE_PLACEHOLDER_IN_EXPR (size, expr);\n-      *expr_p = build2 (WITH_SIZE_EXPR, type, expr, size);\n-    }\n+  if (!size || TREE_CODE (size) == INTEGER_CST)\n+    return;\n+\n+  /* Otherwise, make a WITH_SIZE_EXPR.  */\n+  size = unshare_expr (size);\n+  size = SUBSTITUTE_PLACEHOLDER_IN_EXPR (size, expr);\n+  *expr_p = build2 (WITH_SIZE_EXPR, type, expr, size);\n }\n \n /* Subroutine of gimplify_call_expr:  Gimplify a single argument.  */"}]}