{"sha": "1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNhOWRlNTEyNjViMGM1MWQ0NGE0YjkzODVmM2E0NmEwNWRlNGNjYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-10-02T23:43:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-10-02T23:43:17Z"}, "message": "Fix testsuite failures with --disable-wchar_t\n\n\t* testsuite/21_strings/basic_string/literals/types.cc: Guard use of\n\twchar_t with _GLIBCXX_USE_WCHAR_T.\n\t* testsuite/21_strings/basic_string/literals/values.cc: Likewise.\n\t* testsuite/21_strings/basic_string/requirements/citerators.cc:\n\tLikewise.\n\t* testsuite/22_locale/messages/13631.cc: Likewise.\n\t* testsuite/experimental/string_view/literals/types.cc: Likewise.\n\t* testsuite/experimental/string_view/literals/values.cc: Likewise.\n\nFrom-SVN: r228439", "tree": {"sha": "c94649acd1641d836cbd9cf9d8713b319726ee7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c94649acd1641d836cbd9cf9d8713b319726ee7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b75621078b42aa4cc41110a3388bdf65205056a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b75621078b42aa4cc41110a3388bdf65205056a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b75621078b42aa4cc41110a3388bdf65205056a"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "e973c62824df16a0a03ed96b273b034e54c162c1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "patch": "@@ -1,5 +1,14 @@\n 2015-10-03  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/21_strings/basic_string/literals/types.cc: Guard use of\n+\twchar_t with _GLIBCXX_USE_WCHAR_T.\n+\t* testsuite/21_strings/basic_string/literals/values.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/requirements/citerators.cc:\n+\tLikewise.\n+\t* testsuite/22_locale/messages/13631.cc: Likewise.\n+\t* testsuite/experimental/string_view/literals/types.cc: Likewise.\n+\t* testsuite/experimental/string_view/literals/values.cc: Likewise.\n+\n \t* src/filesystem/Makefile.am: Add cxx11_abi_sources.\n \t* src/filesystem/Makefile.in: Regenerate.\n \t* src/filesystem/cow-dir.cc: New."}, {"sha": "8922bf26010ebcba4717a0ba9100b9fd55fcab00", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/literals/types.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fliterals%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fliterals%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fliterals%2Ftypes.cc?ref=1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "patch": "@@ -32,8 +32,10 @@ test01()\n   static_assert(std::is_same<decltype(u8\"Hello\"s), std::string>::value,\n \t\t\"u8\\\"Hello\\\"s is std::string\");\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   static_assert(std::is_same<decltype(L\"Hello\"s), std::wstring>::value,\n \t\t\"L\\\"Hello\\\"s is std::wstring\");\n+#endif\n \n   static_assert(std::is_same<decltype(u\"Hello\"s), std::u16string>::value,\n \t\t\"u\\\"Hello\\\"s is std::u16string\");"}, {"sha": "bf60b9ea92c17ca5476ead0439bc04d6e6b923e3", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/literals/values.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fliterals%2Fvalues.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fliterals%2Fvalues.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fliterals%2Fvalues.cc?ref=1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "patch": "@@ -27,15 +27,19 @@ test01()\n   using namespace std::literals::string_literals;\n \n   std::string planet = \"Mercury\"s;\n+#ifdef _GLIBCXX_USE_WCHAR_T\n   std::wstring wplanet = L\"Venus\"s;\n+#endif\n   std::string u8planet = u8\"Mars\"s;\n-  std::u16string u16planet = u\"Juiter\"s;\n+  std::u16string u16planet = u\"Jupiter\"s;\n   std::u32string u32planet = U\"Saturn\"s;\n \n   VERIFY( planet == std::string(\"Mercury\") );\n+#ifdef _GLIBCXX_USE_WCHAR_T\n   VERIFY( wplanet == std::wstring(L\"Venus\") );\n+#endif\n   VERIFY( u8planet == std::string(u8\"Mars\") );\n-  VERIFY( u16planet == std::u16string(u\"Juiter\") );\n+  VERIFY( u16planet == std::u16string(u\"Jupiter\") );\n   VERIFY( u32planet == std::u32string(U\"Saturn\") );\n }\n "}, {"sha": "533b3a666e85307d8276c2f527e75a7f8a86843c", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/citerators.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fciterators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fciterators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fciterators.cc?ref=1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "patch": "@@ -24,6 +24,8 @@\n int main()\n {\n   __gnu_test::citerator<std::string> test1;\n+#ifdef _GLIBCXX_USE_WCHAR_T\n   __gnu_test::citerator<std::wstring> test2;\n+#endif\n   return 0;\n }"}, {"sha": "fb93c000f4c2f4c23878da8b648dbdd41acda2b7", "filename": "libstdc++-v3/testsuite/22_locale/messages/13631.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmessages%2F13631.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmessages%2F13631.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmessages%2F13631.cc?ref=1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "patch": "@@ -57,6 +57,7 @@ void test01()\n \n void test02()\n {\n+#ifdef _GLIBCXX_USE_WCHAR_T\n   bool test __attribute__((unused)) = true;\n \n   // This is defined through CXXFLAGS in scripts/testsuite_flags[.in].\n@@ -89,6 +90,7 @@ void test02()\n   msgs_facet.close(msgs);\n \n   VERIFY( translation1 == translation2 );\n+#endif\n }\n \n int main()"}, {"sha": "bc2b2fc0a0709ce3b0b16166427c3d6d1b7b623f", "filename": "libstdc++-v3/testsuite/experimental/string_view/literals/types.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fliterals%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fliterals%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fliterals%2Ftypes.cc?ref=1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "patch": "@@ -32,8 +32,10 @@ test01()\n   static_assert(std::is_same<decltype(u8\"Hello\"sv), std::experimental::string_view>::value,\n \t\t\"u8\\\"Hello\\\"s is std::string_view\");\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n   static_assert(std::is_same<decltype(L\"Hello\"sv), std::experimental::wstring_view>::value,\n \t\t\"L\\\"Hello\\\"s is std::wstring_view\");\n+#endif\n \n   static_assert(std::is_same<decltype(u\"Hello\"sv), std::experimental::u16string_view>::value,\n \t\t\"u\\\"Hello\\\"s is std::u16string_view\");"}, {"sha": "3dd6b78a9fcee823be6554b3e407ef446ed6adf8", "filename": "libstdc++-v3/testsuite/experimental/string_view/literals/values.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fliterals%2Fvalues.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ca9de51265b0c51d44a4b9385f3a46a05de4ccb/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fliterals%2Fvalues.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fstring_view%2Fliterals%2Fvalues.cc?ref=1ca9de51265b0c51d44a4b9385f3a46a05de4ccb", "patch": "@@ -27,15 +27,19 @@ test01()\n   using namespace std::experimental::literals::string_view_literals;\n \n   std::experimental::string_view planet = \"Mercury\"sv;\n+#ifdef _GLIBCXX_USE_WCHAR_T\n   std::experimental::wstring_view wplanet = L\"Venus\"sv;\n+#endif\n   std::experimental::string_view u8planet = u8\"Mars\"sv;\n-  std::experimental::u16string_view u16planet = u\"Juiter\"sv;\n+  std::experimental::u16string_view u16planet = u\"Jupiter\"sv;\n   std::experimental::u32string_view u32planet = U\"Saturn\"sv;\n \n   VERIFY( planet == std::experimental::string_view(\"Mercury\") );\n+#ifdef _GLIBCXX_USE_WCHAR_T\n   VERIFY( wplanet == std::experimental::wstring_view(L\"Venus\") );\n+#endif\n   VERIFY( u8planet == std::experimental::string_view(u8\"Mars\") );\n-  VERIFY( u16planet == std::experimental::u16string_view(u\"Juiter\") );\n+  VERIFY( u16planet == std::experimental::u16string_view(u\"Jupiter\") );\n   VERIFY( u32planet == std::experimental::u32string_view(U\"Saturn\") );\n }\n "}]}