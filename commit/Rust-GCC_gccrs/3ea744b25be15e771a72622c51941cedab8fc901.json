{"sha": "3ea744b25be15e771a72622c51941cedab8fc901", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VhNzQ0YjI1YmUxNWU3NzFhNzI2MjJjNTE5NDFjZWRhYjhmYzkwMQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-07-12T17:25:20Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-07-12T17:25:20Z"}, "message": "* expr.c (expand_expr): Fix thinko in last change.\n\nFrom-SVN: r28069", "tree": {"sha": "1f732275417d4cf1948d2526bc70ded9582896b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f732275417d4cf1948d2526bc70ded9582896b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ea744b25be15e771a72622c51941cedab8fc901", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea744b25be15e771a72622c51941cedab8fc901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea744b25be15e771a72622c51941cedab8fc901", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea744b25be15e771a72622c51941cedab8fc901/comments", "author": null, "committer": null, "parents": [{"sha": "ae2591ab41e0e307c677283d739abd30bfec1d69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2591ab41e0e307c677283d739abd30bfec1d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae2591ab41e0e307c677283d739abd30bfec1d69"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e8c0eb82457597b9357178c72b982f34ec217241", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea744b25be15e771a72622c51941cedab8fc901/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea744b25be15e771a72622c51941cedab8fc901/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3ea744b25be15e771a72622c51941cedab8fc901", "patch": "@@ -6984,7 +6984,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t= immed_double_const (TREE_INT_CST_LOW (TREE_OPERAND (exp, 0)),\n \t\t\t\t      (HOST_WIDE_INT) 0,\n \t\t\t\t      GET_MODE (op1));\n-\t      op1 = plus_constant (op1, XINT (constant_part, 0));\n+\t      op1 = plus_constant (op1, INTVAL (constant_part, 0));\n \t      if (modifier != EXPAND_SUM && modifier != EXPAND_INITIALIZER)\n \t\top1 = force_operand (op1, target);\n \t      return op1;\n@@ -7016,7 +7016,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t= immed_double_const (TREE_INT_CST_LOW (TREE_OPERAND (exp, 1)),\n \t\t\t\t      (HOST_WIDE_INT) 0,\n \t\t\t\t      GET_MODE (op0));\n-\t      op0 = plus_constant (op0, XINT (constant_part, 0));\n+\t      op0 = plus_constant (op0, INTVAL (constant_part, 0));\n \t      if (modifier != EXPAND_SUM && modifier != EXPAND_INITIALIZER)\n \t\top0 = force_operand (op0, target);\n \t      return op0;"}]}