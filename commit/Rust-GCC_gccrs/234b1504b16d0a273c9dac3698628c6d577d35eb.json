{"sha": "234b1504b16d0a273c9dac3698628c6d577d35eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM0YjE1MDRiMTZkMGEyNzNjOWRhYzM2OTg2MjhjNmQ1NzdkMzVlYg==", "commit": {"author": {"name": "Adam Butcher", "email": "adam@jessamine.co.uk", "date": "2014-03-01T21:28:18Z"}, "committer": {"name": "Adam Butcher", "email": "abutcher@gcc.gnu.org", "date": "2014-03-01T21:28:18Z"}, "message": "re PR c++/60377 ([c++1y] ICE with invalid function parameter in conjunction with auto parameter)\n\nFix PR c++/60377.\n\n\tPR c++/60377\n\t* parser.c (cp_parser_parameter_declaration_clause): Unwind generic\n\tfunction scope on parse error in function parameter list.\n\n\tPR c++/60377\n\t* g++.dg/cpp1y/pr60377.C: New testcase.\n\nFrom-SVN: r208250", "tree": {"sha": "200bbc94d476d144195fcc8be93ea9eaa2826ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/200bbc94d476d144195fcc8be93ea9eaa2826ecd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/234b1504b16d0a273c9dac3698628c6d577d35eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234b1504b16d0a273c9dac3698628c6d577d35eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/234b1504b16d0a273c9dac3698628c6d577d35eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234b1504b16d0a273c9dac3698628c6d577d35eb/comments", "author": {"login": "abutcher-gh", "id": 10379705, "node_id": "MDQ6VXNlcjEwMzc5NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/10379705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abutcher-gh", "html_url": "https://github.com/abutcher-gh", "followers_url": "https://api.github.com/users/abutcher-gh/followers", "following_url": "https://api.github.com/users/abutcher-gh/following{/other_user}", "gists_url": "https://api.github.com/users/abutcher-gh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abutcher-gh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abutcher-gh/subscriptions", "organizations_url": "https://api.github.com/users/abutcher-gh/orgs", "repos_url": "https://api.github.com/users/abutcher-gh/repos", "events_url": "https://api.github.com/users/abutcher-gh/events{/privacy}", "received_events_url": "https://api.github.com/users/abutcher-gh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ce298900287e37c7442a413f658608c8ae22833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ce298900287e37c7442a413f658608c8ae22833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ce298900287e37c7442a413f658608c8ae22833"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "2d8364b6c4f230a07dd71648a2c7e113255c8343", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234b1504b16d0a273c9dac3698628c6d577d35eb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234b1504b16d0a273c9dac3698628c6d577d35eb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=234b1504b16d0a273c9dac3698628c6d577d35eb", "patch": "@@ -1,3 +1,9 @@\n+2014-03-01  Adam Butcher  <adam@jessamine.co.uk>\n+\n+\tPR c++/60377\n+\t* parser.c (cp_parser_parameter_declaration_clause): Unwind generic\n+\tfunction scope on parse error in function parameter list.\n+\n 2014-03-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* method.c (implicitly_declare_fn): Remove redundant"}, {"sha": "8c7826244b3ff52d6d8e5b51ff6d6eb86af635b0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234b1504b16d0a273c9dac3698628c6d577d35eb/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234b1504b16d0a273c9dac3698628c6d577d35eb/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=234b1504b16d0a273c9dac3698628c6d577d35eb", "patch": "@@ -18208,7 +18208,12 @@ cp_parser_parameter_declaration_clause (cp_parser* parser)\n      parameter-declaration-list, then the entire\n      parameter-declaration-clause is erroneous.  */\n   if (is_error)\n-    return NULL;\n+    {\n+      /* Unwind generic function template scope if necessary.  */\n+      if (parser->fully_implicit_function_template_p)\n+\tfinish_fully_implicit_template (parser, /*member_decl_opt=*/0);\n+      return NULL;\n+    }\n \n   /* Peek at the next token.  */\n   token = cp_lexer_peek_token (parser->lexer);"}, {"sha": "2f0563835959e6a40520d5401d869b28c2623b6b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234b1504b16d0a273c9dac3698628c6d577d35eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234b1504b16d0a273c9dac3698628c6d577d35eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=234b1504b16d0a273c9dac3698628c6d577d35eb", "patch": "@@ -1,3 +1,8 @@\n+2014-03-01  Adam Butcher  <adam@jessamine.co.uk>\n+\n+\tPR c++/60377\n+\t* g++.dg/cpp1y/pr60377.C: New testcase.\n+\n 2014-03-01  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/60341"}, {"sha": "4f6497c5e05227a92c4cdcdcc87638a70f600f5c", "filename": "gcc/testsuite/g++.dg/cpp1y/pr60377.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234b1504b16d0a273c9dac3698628c6d577d35eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60377.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234b1504b16d0a273c9dac3698628c6d577d35eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60377.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60377.C?ref=234b1504b16d0a273c9dac3698628c6d577d35eb", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/60377\n+// { dg-options -std=c++1y }\n+\n+void foo(auto, void (f*)()); // { dg-error \"expected\" }\n+\n+struct A\n+{\n+  int i;\n+};"}]}