{"sha": "bea0c13139d48294d26f0a72401d6e3fb6a48d77", "node_id": "C_kwDOANBUbNoAKGJlYTBjMTMxMzlkNDgyOTRkMjZmMGE3MjQwMWQ2ZTNmYjZhNDhkNzc", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-22T15:17:42Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-03-30T14:48:26Z"}, "message": "ast: Add Tokenstream visitors for loop expressions\n\nAdd the implementation of tokenstream dump for multiple loop\nexpressions.\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-ast-tokenstream.cc (TokenStream::visit): Add\n\tvisitors.\n\t(TokenStream::visit_loop_common): Merge common loop code.\n\t* ast/rust-ast-tokenstream.h: Add function prototypes.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "f80064e37b2136b0c27321acc510f697f0409386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f80064e37b2136b0c27321acc510f697f0409386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bea0c13139d48294d26f0a72401d6e3fb6a48d77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bea0c13139d48294d26f0a72401d6e3fb6a48d77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bea0c13139d48294d26f0a72401d6e3fb6a48d77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bea0c13139d48294d26f0a72401d6e3fb6a48d77/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9fcd37d055c8e46aaecfa4a5af91e0108670c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9fcd37d055c8e46aaecfa4a5af91e0108670c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9fcd37d055c8e46aaecfa4a5af91e0108670c17"}], "stats": {"total": 76, "additions": 64, "deletions": 12}, "files": [{"sha": "c93c24c3fa83fd3e0a32c4077ddaa47486d9a6a1", "filename": "gcc/rust/ast/rust-ast-tokenstream.cc", "status": "modified", "additions": 61, "deletions": 12, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bea0c13139d48294d26f0a72401d6e3fb6a48d77/gcc%2Frust%2Fast%2Frust-ast-tokenstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bea0c13139d48294d26f0a72401d6e3fb6a48d77/gcc%2Frust%2Fast%2Frust-ast-tokenstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-tokenstream.cc?ref=bea0c13139d48294d26f0a72401d6e3fb6a48d77", "patch": "@@ -1179,28 +1179,77 @@ TokenStream::visit (RangeToInclExpr &expr)\n }\n \n void\n-TokenStream::visit (ReturnExpr &)\n-{}\n+TokenStream::visit (ReturnExpr &expr)\n+{\n+  tokens.push_back (Rust::Token::make (RETURN_TOK, expr.get_locus ()));\n+  if (expr.has_returned_expr ())\n+    visit (expr.get_returned_expr ());\n+}\n \n void\n-TokenStream::visit (UnsafeBlockExpr &)\n-{}\n+TokenStream::visit (UnsafeBlockExpr &expr)\n+{\n+  tokens.push_back (Rust::Token::make (UNSAFE, expr.get_locus ()));\n+  visit (expr.get_block_expr ());\n+}\n \n void\n-TokenStream::visit (LoopExpr &)\n-{}\n+TokenStream::visit (LoopLabel &label)\n+{\n+  visit (label.get_lifetime ());\n+  tokens.push_back (Rust::Token::make (COLON, label.get_locus ()));\n+}\n \n void\n-TokenStream::visit (WhileLoopExpr &)\n-{}\n+TokenStream::visit_loop_common (BaseLoopExpr &expr)\n+{\n+  if (expr.has_loop_label ())\n+    visit (expr.get_loop_label ());\n+}\n \n void\n-TokenStream::visit (WhileLetLoopExpr &)\n-{}\n+TokenStream::visit (LoopExpr &expr)\n+{\n+  visit_loop_common (expr);\n+  tokens.push_back (Rust::Token::make (LOOP, expr.get_locus ()));\n+  visit (expr.get_loop_block ());\n+}\n \n void\n-TokenStream::visit (ForLoopExpr &)\n-{}\n+TokenStream::visit (WhileLoopExpr &expr)\n+{\n+  visit_loop_common (expr);\n+  tokens.push_back (Rust::Token::make (WHILE, expr.get_locus ()));\n+  visit (expr.get_predicate_expr ());\n+  visit (expr.get_loop_block ());\n+}\n+\n+void\n+TokenStream::visit (WhileLetLoopExpr &expr)\n+{\n+  visit_loop_common (expr);\n+  tokens.push_back (Rust::Token::make (WHILE, expr.get_locus ()));\n+  tokens.push_back (Rust::Token::make (LET, Location ()));\n+  // TODO: The reference mention only one Pattern\n+  for (auto &item : expr.get_patterns ())\n+    {\n+      visit (item);\n+    }\n+  tokens.push_back (Rust::Token::make (EQUAL, Location ()));\n+  visit (expr.get_scrutinee_expr ());\n+  visit (expr.get_loop_block ());\n+}\n+\n+void\n+TokenStream::visit (ForLoopExpr &expr)\n+{\n+  visit_loop_common (expr);\n+  tokens.push_back (Rust::Token::make (FOR, expr.get_locus ()));\n+  visit (expr.get_pattern ());\n+  tokens.push_back (Rust::Token::make (IN, Location ()));\n+  visit (expr.get_iterator_expr ());\n+  visit (expr.get_loop_block ());\n+}\n \n void\n TokenStream::visit (IfExpr &expr)"}, {"sha": "c8a69829d900cfd9dfc3c9c5f6ce9ff801a1e7ef", "filename": "gcc/rust/ast/rust-ast-tokenstream.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bea0c13139d48294d26f0a72401d6e3fb6a48d77/gcc%2Frust%2Fast%2Frust-ast-tokenstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bea0c13139d48294d26f0a72401d6e3fb6a48d77/gcc%2Frust%2Fast%2Frust-ast-tokenstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-tokenstream.h?ref=bea0c13139d48294d26f0a72401d6e3fb6a48d77", "patch": "@@ -94,6 +94,9 @@ class TokenStream : public ASTVisitor\n   void visit_function_common (std::unique_ptr<Type> &return_type,\n \t\t\t      std::unique_ptr<BlockExpr> &block);\n \n+  void visit_loop_common (BaseLoopExpr &expr);\n+  void visit (LoopLabel &label);\n+\n   void visit (Literal &lit, Location locus = {});\n \n   void visit (FunctionParam &param);"}]}