{"sha": "dab73e731721556b70d7c71d8253e089aa2dd303", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFiNzNlNzMxNzIxNTU2YjcwZDdjNzFkODI1M2UwODlhYTJkZDMwMw==", "commit": {"author": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2016-02-24T08:19:12Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2016-02-24T08:19:12Z"}, "message": "arm-c.c (arm_option_override): Initialize target_option_current_node.\n\n2016-02-24  Christian Bruel  <christian.bruel@st.com>\n\n\t* config/arm/arm-c.c (arm_option_override): Initialize\n\ttarget_option_current_node.\n\t* config/arm/arm.c (arm_pragma_target_parse): Replace\n\tbuild_target_option_node call by target_option_current_node.\n\tSet target_option_current_node.\n\tFix comments.\n\nFrom-SVN: r233654", "tree": {"sha": "af57654dff86396668ddefa8bb93c0c306fa78dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af57654dff86396668ddefa8bb93c0c306fa78dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dab73e731721556b70d7c71d8253e089aa2dd303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dab73e731721556b70d7c71d8253e089aa2dd303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dab73e731721556b70d7c71d8253e089aa2dd303", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dab73e731721556b70d7c71d8253e089aa2dd303/comments", "author": null, "committer": null, "parents": [{"sha": "641487910a29254574b1316e131e3148f3343b0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/641487910a29254574b1316e131e3148f3343b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/641487910a29254574b1316e131e3148f3343b0c"}], "stats": {"total": 68, "additions": 62, "deletions": 6}, "files": [{"sha": "405796963771cc24ed53c05ed0763ed3eabeab3b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dab73e731721556b70d7c71d8253e089aa2dd303", "patch": "@@ -1,3 +1,12 @@\n+2016-02-24  Christian Bruel  <christian.bruel@st.com>\n+\n+\t* config/arm/arm-c.c (arm_option_override): Initialize\n+\ttarget_option_current_node.\n+\t* config/arm/arm.c (arm_pragma_target_parse): Replace\n+\tbuild_target_option_node call by target_option_current_node.\n+\tSet target_option_current_node.\n+\tFix comments.\n+\n 2016-02-23  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR target/69810"}, {"sha": "4fbdfc50d03507380e4fb59883923a81d9367489", "filename": "gcc/config/arm/arm-c.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2Fconfig%2Farm%2Farm-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2Fconfig%2Farm%2Farm-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.c?ref=dab73e731721556b70d7c71d8253e089aa2dd303", "patch": "@@ -199,7 +199,7 @@ arm_cpu_cpp_builtins (struct cpp_reader * pfile)\n static bool\n arm_pragma_target_parse (tree args, tree pop_target)\n {\n-  tree prev_tree = build_target_option_node (&global_options);\n+  tree prev_tree = target_option_current_node;\n   tree cur_tree;\n   struct cl_target_option *prev_opt;\n   struct cl_target_option *cur_opt;\n@@ -220,11 +220,16 @@ arm_pragma_target_parse (tree args, tree pop_target)\n \t\t\t\t    TREE_TARGET_OPTION (prev_tree));\n \t  return false;\n \t}\n+\n+      /* handle_pragma_pop_options and handle_pragma_reset_options will set\n+       target_option_current_node, but not handle_pragma_target.  */\n+      target_option_current_node = cur_tree;\n     }\n \n-  /* Figure out the previous mode.  */\n-  prev_opt  = TREE_TARGET_OPTION (prev_tree);\n-  cur_opt   = TREE_TARGET_OPTION (cur_tree);\n+  /* Update macros if target_node changes. The global state will be restored\n+     by arm_set_current_function.  */\n+  prev_opt = TREE_TARGET_OPTION (prev_tree);\n+  cur_opt  = TREE_TARGET_OPTION (cur_tree);\n \n   gcc_assert (prev_opt);\n   gcc_assert (cur_opt);"}, {"sha": "948934390150fbeac5905878c2471b62c434d59b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=dab73e731721556b70d7c71d8253e089aa2dd303", "patch": "@@ -3453,8 +3453,9 @@ arm_option_override (void)\n   arm_add_gc_roots ();\n \n   /* Save the initial options in case the user does function specific\n-     options.  */\n-  target_option_default_node = build_target_option_node (&global_options);\n+     options or #pragma target.  */\n+  target_option_default_node = target_option_current_node\n+    = build_target_option_node (&global_options);\n \n   /* Init initial mode for testing.  */\n   thumb_flipper = TARGET_THUMB;"}, {"sha": "beb802600078f76346ef099fcec1afe135005204", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dab73e731721556b70d7c71d8253e089aa2dd303", "patch": "@@ -1,3 +1,7 @@\n+2016-02-24  Christian Bruel  <christian.bruel@st.com>\n+\n+\t* gcc.target/arm/pragma_cpp_fma.c: New test.\n+\n 2016-02-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/61156\n@@ -89,6 +93,7 @@\n \tPR c/69900\n \t* gcc.dg/pr69900.c: New test.\n \n+>>>>>>> .r233653\n 2016-02-23  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/69666"}, {"sha": "be63256b84c6f791859ec836fd6bfbc3a79d87ab", "filename": "gcc/testsuite/gcc.target/arm/pragma_cpp_fma.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_cpp_fma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dab73e731721556b70d7c71d8253e089aa2dd303/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_cpp_fma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_cpp_fma.c?ref=dab73e731721556b70d7c71d8253e089aa2dd303", "patch": "@@ -0,0 +1,36 @@\n+/* Test that FMA macro is correctly undef.  */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"Default no fma\" { *-*-* } { \"-mfpu=*vfpv4*\" \"-mfpu=*armv8\"} } */\n+/* { dg-require-effective-target arm_fp_ok } */\n+/* { dg-add-options arm_fp } */\n+\n+#pragma GCC push_options\n+#pragma GCC target (\"fpu=crypto-neon-fp-armv8\")\n+\n+#ifndef __ARM_FEATURE_FMA\n+#error \"__ARM_FEATURE_FMA is not defined but should be\"\n+#endif\n+\n+#ifndef __ARM_FEATURE_CRYPTO\n+#error \"__ARM_FEATURE_CRYPTO is not defined but should be\"\n+#endif\n+\n+#if __ARM_NEON_FP != 6\n+#error \"__ARM_NEON_FP\"\n+#endif\n+\n+#if __ARM_FP != 14\n+#error \"__ARM_FP\"\n+#endif\n+\n+#pragma GCC pop_options\n+\n+#pragma GCC push_options\n+#pragma GCC target (\"fpu=neon-vfpv4\")\n+#pragma GCC pop_options\n+\n+#ifdef __ARM_FEATURE_FMA\n+#error \"__ARM_FEATURE_FMA is defined but should not be\"\n+#endif\n+\n+"}]}