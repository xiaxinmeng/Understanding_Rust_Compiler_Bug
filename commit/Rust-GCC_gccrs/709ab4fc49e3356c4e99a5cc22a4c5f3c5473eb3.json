{"sha": "709ab4fc49e3356c4e99a5cc22a4c5f3c5473eb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA5YWI0ZmM0OWUzMzU2YzRlOTlhNWNjMjJhNGM1ZjNjNTQ3M2ViMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-01T16:55:51Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-01T16:55:51Z"}, "message": "(simplify_binary_operation): Reject CCmode in  A & (~A) -> 0.\n\nAlso fix typos in previous change.\n\nFrom-SVN: r4295", "tree": {"sha": "1c3e0d3d78bd465ae5ab0c7d70812ddf87ab6162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c3e0d3d78bd465ae5ab0c7d70812ddf87ab6162"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/709ab4fc49e3356c4e99a5cc22a4c5f3c5473eb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709ab4fc49e3356c4e99a5cc22a4c5f3c5473eb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/709ab4fc49e3356c4e99a5cc22a4c5f3c5473eb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709ab4fc49e3356c4e99a5cc22a4c5f3c5473eb3/comments", "author": null, "committer": null, "parents": [{"sha": "a878dab7efe69318fa71d9c7249eaaf4e150b6c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a878dab7efe69318fa71d9c7249eaaf4e150b6c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a878dab7efe69318fa71d9c7249eaaf4e150b6c8"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "2cb9e55ff4af9d943531abf6216f08601af7fdd7", "filename": "gcc/cse.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/709ab4fc49e3356c4e99a5cc22a4c5f3c5473eb3/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/709ab4fc49e3356c4e99a5cc22a4c5f3c5473eb3/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=709ab4fc49e3356c4e99a5cc22a4c5f3c5473eb3", "patch": "@@ -3599,7 +3599,7 @@ simplify_binary_operation (code, mode, op0, op1)\n \t  if (((GET_CODE (op0) == NOT && rtx_equal_p (XEXP (op0, 0), op1))\n \t       || (GET_CODE (op1) == NOT && rtx_equal_p (XEXP (op1, 0), op0)))\n \t      && ! side_effects_p (op0)\n-\t      && mode == CCmode)\n+\t      && mode != CCmode)\n \t    return constm1_rtx;\n \t  break;\n \n@@ -3610,7 +3610,7 @@ simplify_binary_operation (code, mode, op0, op1)\n \t      && (INTVAL (op1) & GET_MODE_MASK (mode)) == GET_MODE_MASK (mode))\n \t    return gen_rtx (NOT, mode, op0);\n \t  if (op0 == op1 && ! side_effects_p (op0)\n-\t      && mode == CCmode)\n+\t      && mode != CCmode)\n \t    return const0_rtx;\n \t  break;\n \n@@ -3621,12 +3621,13 @@ simplify_binary_operation (code, mode, op0, op1)\n \t      && (INTVAL (op1) & GET_MODE_MASK (mode)) == GET_MODE_MASK (mode))\n \t    return op0;\n \t  if (op0 == op1 && ! side_effects_p (op0)\n-\t      && mode == CCmode)\n+\t      && mode != CCmode)\n \t    return op0;\n \t  /* A & (~A) -> 0 */\n \t  if (((GET_CODE (op0) == NOT && rtx_equal_p (XEXP (op0, 0), op1))\n \t       || (GET_CODE (op1) == NOT && rtx_equal_p (XEXP (op1, 0), op0)))\n-\t      && ! side_effects_p (op0))\n+\t      && ! side_effects_p (op0)\n+\t      && mode != CCmode)\n \t    return const0_rtx;\n \t  break;\n "}]}