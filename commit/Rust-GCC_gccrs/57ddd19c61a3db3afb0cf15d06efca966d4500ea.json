{"sha": "57ddd19c61a3db3afb0cf15d06efca966d4500ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdkZGQxOWM2MWEzZGIzYWZiMGNmMTVkMDZlZmNhOTY2ZDQ1MDBlYQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-06-27T01:03:24Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-06-27T01:03:24Z"}, "message": "lex.c (java_init_lex): Avoid incorrect hardcoded constant 11.\n\n\t* lex.c (java_init_lex): Avoid incorrect hardcoded constant 11.\n\t* parse.y (mark_parser_ctxt): Likewise.\n\nFrom-SVN: r55016", "tree": {"sha": "15978f910469556840d5209778de2abcf1a1200b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15978f910469556840d5209778de2abcf1a1200b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57ddd19c61a3db3afb0cf15d06efca966d4500ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57ddd19c61a3db3afb0cf15d06efca966d4500ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57ddd19c61a3db3afb0cf15d06efca966d4500ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57ddd19c61a3db3afb0cf15d06efca966d4500ea/comments", "author": null, "committer": null, "parents": [{"sha": "bd466c7bdea800a8147cd197528a09ab113efb0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd466c7bdea800a8147cd197528a09ab113efb0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd466c7bdea800a8147cd197528a09ab113efb0b"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "fe89b75b5918a14e69fae400b036d74e5832b9f7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57ddd19c61a3db3afb0cf15d06efca966d4500ea/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57ddd19c61a3db3afb0cf15d06efca966d4500ea/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=57ddd19c61a3db3afb0cf15d06efca966d4500ea", "patch": "@@ -1,5 +1,8 @@\n 2002-06-26  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* lex.c (java_init_lex): Avoid incorrect hardcoded constant 11.\n+\t* parse.y (mark_parser_ctxt): Likewise.\n+\n \t* lex.c (java_read_char): Avoid \"comparison is always true\"\n \twarning.\n "}, {"sha": "d350e99907a7701acf815ff683c521fd2ef98b08", "filename": "gcc/java/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57ddd19c61a3db3afb0cf15d06efca966d4500ea/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57ddd19c61a3db3afb0cf15d06efca966d4500ea/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=57ddd19c61a3db3afb0cf15d06efca966d4500ea", "patch": "@@ -128,7 +128,7 @@ java_init_lex (finput, encoding)\n   CPC_INITIALIZER_LIST (ctxp) = CPC_STATIC_INITIALIZER_LIST (ctxp) =\n     CPC_INSTANCE_INITIALIZER_LIST (ctxp) = NULL_TREE;\n \n-  memset ((PTR) ctxp->modifier_ctx, 0, 11*sizeof (ctxp->modifier_ctx[0]));\n+  memset ((PTR) ctxp->modifier_ctx, 0, sizeof (ctxp->modifier_ctx));\n   memset ((PTR) current_jcf, 0, sizeof (JCF));\n   ctxp->current_parsed_class = NULL;\n   ctxp->package = NULL_TREE;"}, {"sha": "f0647821ee13caff67a0b7b0b847225d05a9332d", "filename": "gcc/java/parse.y", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57ddd19c61a3db3afb0cf15d06efca966d4500ea/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57ddd19c61a3db3afb0cf15d06efca966d4500ea/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=57ddd19c61a3db3afb0cf15d06efca966d4500ea", "patch": "@@ -16148,13 +16148,15 @@ mark_parser_ctxt (p)\n      void *p;\n {\n   struct parser_ctxt *pc = *((struct parser_ctxt **) p);\n-  int i;\n+#ifndef JC1_LITE\n+  size_t i;\n+#endif\n \n   if (!pc)\n     return;\n \n #ifndef JC1_LITE\n-  for (i = 0; i < 11; ++i)\n+  for (i = 0; i < ARRAY_SIZE (pc->modifier_ctx); ++i)\n     ggc_mark_tree (pc->modifier_ctx[i]);\n   ggc_mark_tree (pc->class_type);\n   ggc_mark_tree (pc->function_decl);"}]}