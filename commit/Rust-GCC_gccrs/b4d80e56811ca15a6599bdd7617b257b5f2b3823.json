{"sha": "b4d80e56811ca15a6599bdd7617b257b5f2b3823", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkODBlNTY4MTFjYTE1YTY1OTliZGQ3NjE3YjI1N2I1ZjJiMzgyMw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2011-07-13T19:07:25Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2011-07-13T19:07:25Z"}, "message": "spu.c (TARGET_ASM_FILE_START): Do not define.\n\n\t* config/spu/spu.c (TARGET_ASM_FILE_START): Do not define.\n\t(asm_file_start): Remove.\n\t(spu_machine_dependent_reorg): Call compute_bb_for_insn and\n\tfree_bb_for_insn around code that modifies insns before\n\trestarting df analysis.\n\nFrom-SVN: r176247", "tree": {"sha": "93eaca12340d54fc8241ca50c60375e3a96e8e5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93eaca12340d54fc8241ca50c60375e3a96e8e5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4d80e56811ca15a6599bdd7617b257b5f2b3823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d80e56811ca15a6599bdd7617b257b5f2b3823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d80e56811ca15a6599bdd7617b257b5f2b3823", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d80e56811ca15a6599bdd7617b257b5f2b3823/comments", "author": null, "committer": null, "parents": [{"sha": "5f54710465b16155cffaa7934e29533cd2d21292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f54710465b16155cffaa7934e29533cd2d21292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f54710465b16155cffaa7934e29533cd2d21292"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "d61d7065471ed0665046acbd9bd03a1551a75d8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d80e56811ca15a6599bdd7617b257b5f2b3823/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d80e56811ca15a6599bdd7617b257b5f2b3823/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4d80e56811ca15a6599bdd7617b257b5f2b3823", "patch": "@@ -1,3 +1,11 @@\n+2011-07-13  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/spu/spu.c (TARGET_ASM_FILE_START): Do not define.\n+\t(asm_file_start): Remove.\n+\t(spu_machine_dependent_reorg): Call compute_bb_for_insn and\n+\tfree_bb_for_insn around code that modifies insns before\n+\trestarting df analysis.\n+\n 2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR target/49541"}, {"sha": "6d168faff359d29d5608f925ed15d938dcc32220", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d80e56811ca15a6599bdd7617b257b5f2b3823/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d80e56811ca15a6599bdd7617b257b5f2b3823/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=b4d80e56811ca15a6599bdd7617b257b5f2b3823", "patch": "@@ -224,7 +224,6 @@ static enum machine_mode spu_addr_space_address_mode (addr_space_t);\n static bool spu_addr_space_subset_p (addr_space_t, addr_space_t);\n static rtx spu_addr_space_convert (rtx, tree, tree);\n static int spu_sms_res_mii (struct ddg *g);\n-static void asm_file_start (void);\n static unsigned int spu_section_type_flags (tree, const char *, int);\n static section *spu_select_section (tree, int, unsigned HOST_WIDE_INT);\n static void spu_unique_section (tree, int);\n@@ -462,9 +461,6 @@ static void spu_setup_incoming_varargs (cumulative_args_t cum,\n #undef TARGET_SCHED_SMS_RES_MII\n #define TARGET_SCHED_SMS_RES_MII spu_sms_res_mii\n \n-#undef TARGET_ASM_FILE_START\n-#define TARGET_ASM_FILE_START asm_file_start\n-\n #undef TARGET_SECTION_TYPE_FLAGS\n #define TARGET_SECTION_TYPE_FLAGS spu_section_type_flags\n \n@@ -2703,9 +2699,11 @@ spu_machine_dependent_reorg (void)\n     {\n       /* We still do it for unoptimized code because an external\n          function might have hinted a call or return. */\n+      compute_bb_for_insn ();\n       insert_hbrp ();\n       pad_bb ();\n       spu_var_tracking ();\n+      free_bb_for_insn ();\n       return;\n     }\n \n@@ -7039,14 +7037,6 @@ spu_libgcc_shift_count_mode (void)\n   return SImode;\n }\n \n-/* An early place to adjust some flags after GCC has finished processing\n- * them. */\n-static void\n-asm_file_start (void)\n-{\n-  default_file_start ();\n-}\n-\n /* Implement targetm.section_type_flags.  */\n static unsigned int\n spu_section_type_flags (tree decl, const char *name, int reloc)"}]}