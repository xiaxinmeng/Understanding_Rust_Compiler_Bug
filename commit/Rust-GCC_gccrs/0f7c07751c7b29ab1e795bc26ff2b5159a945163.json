{"sha": "0f7c07751c7b29ab1e795bc26ff2b5159a945163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY3YzA3NzUxYzdiMjlhYjFlNzk1YmMyNmZmMmI1MTU5YTk0NTE2Mw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebpop@gmail.com", "date": "2007-06-19T18:35:39Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2007-06-19T18:35:39Z"}, "message": "re PR tree-optimization/32367 (internal compiler error: in build_polynomial_chrec, at tree-chrec.h:113)\n\n\tPR tree-optimization/32367\n\t* tree-chrec.h (build_polynomial_chrec): Verify that the left hand side \n\tof the chrec has no evolution in that loop.\n\t* testsuite/gcc.dg/tree-ssa/pr32367.c: New.\n\nFrom-SVN: r125855", "tree": {"sha": "59590f3ac54b838633a0d96f69aa69f1d2b3fe2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59590f3ac54b838633a0d96f69aa69f1d2b3fe2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f7c07751c7b29ab1e795bc26ff2b5159a945163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f7c07751c7b29ab1e795bc26ff2b5159a945163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f7c07751c7b29ab1e795bc26ff2b5159a945163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f7c07751c7b29ab1e795bc26ff2b5159a945163/comments", "author": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e70312d4996ba059653d899eabf16fc6b551fbbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e70312d4996ba059653d899eabf16fc6b551fbbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e70312d4996ba059653d899eabf16fc6b551fbbc"}], "stats": {"total": 70, "additions": 51, "deletions": 19}, "files": [{"sha": "7fcbe6c51af2d9c36c3bcf6dd799c40b18812031", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7c07751c7b29ab1e795bc26ff2b5159a945163/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7c07751c7b29ab1e795bc26ff2b5159a945163/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f7c07751c7b29ab1e795bc26ff2b5159a945163", "patch": "@@ -1,3 +1,10 @@\n+2007-04-11  Sebastian Pop  <sebpop@gmail.com>\n+\n+\tPR tree-optimization/32367\n+\t* tree-chrec.h (build_polynomial_chrec): Verify that the left hand side \n+\tof the chrec has no evolution in that loop.\n+\t* testsuite/gcc.dg/tree-ssa/pr32367.c: New.\n+\n 2007-06-19  Bob Wilson  <bob.wilson@acm.org>\n \n \t* config/xtensa/xtensa.c: Include \"df.h\"."}, {"sha": "1b153b65e91dd0d9464cfe7e6ff94dc4904ce94e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr32367.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7c07751c7b29ab1e795bc26ff2b5159a945163/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr32367.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7c07751c7b29ab1e795bc26ff2b5159a945163/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr32367.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr32367.c?ref=0f7c07751c7b29ab1e795bc26ff2b5159a945163", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int BinomialCoefficientsInited = 0;\n+int BinomialCoefficients[17 * 35];\n+double Evaluate_TPat (void)\n+{\n+        unsigned short n, k;\n+        if (BinomialCoefficientsInited == 0)\n+        {\n+                int *ptr = BinomialCoefficients;\n+                for (n = 1; n <= 33; ++n)\n+                {\n+                        for (k = 1; k < n; ++k)\n+                                ++ptr;\n+                        *ptr = 1;\n+                }\n+        }\n+}\n+"}, {"sha": "5e9038ce4e6f97d2269d883e9f76213ad8e29e1a", "filename": "gcc/tree-chrec.h", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f7c07751c7b29ab1e795bc26ff2b5159a945163/gcc%2Ftree-chrec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f7c07751c7b29ab1e795bc26ff2b5159a945163/gcc%2Ftree-chrec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.h?ref=0f7c07751c7b29ab1e795bc26ff2b5159a945163", "patch": "@@ -83,6 +83,7 @@ extern bool tree_contains_chrecs (tree, int *);\n extern bool evolution_function_is_affine_multivariate_p (tree, int);\n extern bool evolution_function_is_univariate_p (tree);\n extern unsigned nb_vars_in_chrec (tree);\n+extern bool evolution_function_is_invariant_p (tree, int);\n \n /* Determines whether CHREC is equal to zero.  */\n \n@@ -98,17 +99,40 @@ chrec_zerop (tree chrec)\n   return false;\n }\n \n+/* Determines whether CHREC is a loop invariant with respect to LOOP_NUM.  \n+   Set the result in RES and return true when the property can be computed.  */\n+\n+static inline bool\n+no_evolution_in_loop_p (tree chrec, unsigned loop_num, bool *res)\n+{\n+  tree scev;\n+  \n+  if (chrec == chrec_not_analyzed_yet\n+      || chrec == chrec_dont_know\n+      || chrec_contains_symbols_defined_in_loop (chrec, loop_num))\n+    return false;\n+\n+  scev = hide_evolution_in_other_loops_than_loop (chrec, loop_num);\n+  *res = !tree_is_chrec (scev);\n+  return true;\n+}\n+\n /* Build a polynomial chain of recurrence.  */\n \n static inline tree \n build_polynomial_chrec (unsigned loop_num, \n \t\t\ttree left, \n \t\t\ttree right)\n {\n+  bool val;\n+\n   if (left == chrec_dont_know\n       || right == chrec_dont_know)\n     return chrec_dont_know;\n \n+  if (no_evolution_in_loop_p (left, loop_num, &val) && !val)\n+    return chrec_dont_know;\n+\n   if (POINTER_TYPE_P (TREE_TYPE (left)))\n     gcc_assert (sizetype == TREE_TYPE (right));\n   else\n@@ -140,7 +164,6 @@ evolution_function_is_constant_p (tree chrec)\n     }\n }\n \n-extern bool evolution_function_is_invariant_p (tree, int);\n /* Determine whether the given tree is an affine evolution function or not.  */\n \n static inline bool \n@@ -183,24 +206,6 @@ tree_does_not_contain_chrecs (tree expr)\n   return !tree_contains_chrecs (expr, NULL);\n }\n \n-/* Determines whether CHREC is a loop invariant with respect to LOOP_NUM.  \n-   Set the result in RES and return true when the property can be computed.  */\n-\n-static inline bool\n-no_evolution_in_loop_p (tree chrec, unsigned loop_num, bool *res)\n-{\n-  tree scev;\n-  \n-  if (chrec == chrec_not_analyzed_yet\n-      || chrec == chrec_dont_know\n-      || chrec_contains_symbols_defined_in_loop (chrec, loop_num))\n-    return false;\n-\n-  scev = hide_evolution_in_other_loops_than_loop (chrec, loop_num);\n-  *res = !tree_is_chrec (scev);\n-  return true;\n-}\n-\n /* Returns the type of the chrec.  */\n \n static inline tree"}]}