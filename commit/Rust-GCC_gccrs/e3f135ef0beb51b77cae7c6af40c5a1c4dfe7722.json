{"sha": "e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722", "node_id": "C_kwDOANBUbNoAKGUzZjEzNWVmMGJlYjUxYjc3Y2FlN2M2YWY0MGM1YTFjNGRmZTc3MjI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-08T14:08:08Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-15T11:01:38Z"}, "message": "Add new interface to mappings class crate_num_to_nodeid and node_is_crate\n\nIn order to load and resolve extern crates we need to support detection\nof node_id is a crate in order to support paths outside of the current\ncrate.", "tree": {"sha": "a61253ca546547316530bbc77ea4cc303d00419d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a61253ca546547316530bbc77ea4cc303d00419d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f51284b598863eb0cbeb2984fd1499a672f2191d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51284b598863eb0cbeb2984fd1499a672f2191d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f51284b598863eb0cbeb2984fd1499a672f2191d"}], "stats": {"total": 101, "additions": 75, "deletions": 26}, "files": [{"sha": "27f32aa37ffbe4ee119442c78fe744ea025415e5", "filename": "gcc/rust/resolve/rust-ast-resolve-path.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722/gcc%2Frust%2Fresolve%2Frust-ast-resolve-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722/gcc%2Frust%2Fresolve%2Frust-ast-resolve-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-path.cc?ref=e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722", "patch": "@@ -199,7 +199,8 @@ ResolvePath::resolve_path (AST::PathInExpression *expr)\n       bool did_resolve_segment = resolved_node_id != UNKNOWN_NODEID;\n       if (did_resolve_segment)\n \t{\n-\t  if (mappings->node_is_module (resolved_node_id))\n+\t  if (mappings->node_is_module (resolved_node_id)\n+\t      || mappings->node_is_crate (resolved_node_id))\n \t    {\n \t      module_scope_id = resolved_node_id;\n \t    }"}, {"sha": "04183a4bc61fcd8f30f15be5c3ba679ab298d89b", "filename": "gcc/rust/resolve/rust-ast-resolve-type.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc?ref=e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722", "patch": "@@ -220,7 +220,8 @@ ResolveRelativeTypePath::go (AST::TypePath &path, NodeId &resolved_node_id)\n       bool did_resolve_segment = resolved_node_id != UNKNOWN_NODEID;\n       if (did_resolve_segment)\n \t{\n-\t  if (mappings->node_is_module (resolved_node_id))\n+\t  if (mappings->node_is_module (resolved_node_id)\n+\t      || mappings->node_is_crate (resolved_node_id))\n \t    {\n \t      module_scope_id = resolved_node_id;\n \t    }"}, {"sha": "7d2371702c585c9e0e45829a89b399dbeeddd995", "filename": "gcc/rust/util/rust-hir-map.cc", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722/gcc%2Frust%2Futil%2Frust-hir-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722/gcc%2Frust%2Futil%2Frust-hir-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.cc?ref=e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722", "patch": "@@ -130,6 +130,70 @@ Mappings::get_current_crate () const\n   return currentCrateNum;\n }\n \n+bool\n+Mappings::get_crate_name (CrateNum crate_num, std::string &name) const\n+{\n+  auto it = crate_names.find (crate_num);\n+  if (it == crate_names.end ())\n+    return false;\n+\n+  name.assign (it->second);\n+  return true;\n+}\n+\n+void\n+Mappings::set_crate_name (CrateNum crate_num, const std::string &name)\n+{\n+  crate_names[crate_num] = name;\n+}\n+\n+std::string\n+Mappings::get_current_crate_name () const\n+{\n+  std::string name;\n+  bool ok = get_crate_name (get_current_crate (), name);\n+  rust_assert (ok);\n+  return name;\n+}\n+\n+bool\n+Mappings::lookup_crate_name (const std::string &crate_name,\n+\t\t\t     CrateNum &resolved_crate_num) const\n+{\n+  for (const auto &it : crate_names)\n+    {\n+      if (it.second.compare (crate_name) == 0)\n+\t{\n+\t  resolved_crate_num = it.first;\n+\t  return true;\n+\t}\n+    }\n+  return false;\n+}\n+\n+bool\n+Mappings::crate_num_to_nodeid (const CrateNum &crate_num, NodeId &node_id) const\n+{\n+  auto it = ast_crate_mappings.find (crate_num);\n+  if (it == ast_crate_mappings.end ())\n+    return false;\n+\n+  node_id = it->second->get_node_id ();\n+  return true;\n+}\n+\n+bool\n+Mappings::node_is_crate (NodeId node_id) const\n+{\n+  for (const auto &it : ast_crate_mappings)\n+    {\n+      NodeId crate_node_id = it.second->get_node_id ();\n+      if (crate_node_id == node_id)\n+\treturn true;\n+    }\n+  return false;\n+}\n+\n NodeId\n Mappings::get_next_node_id ()\n {"}, {"sha": "c8cebefcd040c44929e376a3ed81c73224cf768d", "filename": "gcc/rust/util/rust-hir-map.h", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722/gcc%2Frust%2Futil%2Frust-hir-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722/gcc%2Frust%2Futil%2Frust-hir-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.h?ref=e3f135ef0beb51b77cae7c6af40c5a1c4dfe7722", "patch": "@@ -77,30 +77,13 @@ class Mappings\n   CrateNum get_next_crate_num (const std::string &name);\n   void set_current_crate (CrateNum crateNum);\n   CrateNum get_current_crate () const;\n-\n-  bool get_crate_name (CrateNum crate_num, std::string &name) const\n-  {\n-    auto it = crate_names.find (crate_num);\n-    if (it == crate_names.end ())\n-      return false;\n-\n-    name.assign (it->second);\n-    return true;\n-  }\n-\n-  // set crate name mid-compilation\n-  void set_crate_name (CrateNum crate_num, const std::string &name)\n-  {\n-    crate_names[crate_num] = name;\n-  }\n-\n-  std::string get_current_crate_name () const\n-  {\n-    std::string name;\n-    bool ok = get_crate_name (get_current_crate (), name);\n-    rust_assert (ok);\n-    return name;\n-  }\n+  bool get_crate_name (CrateNum crate_num, std::string &name) const;\n+  void set_crate_name (CrateNum crate_num, const std::string &name);\n+  std::string get_current_crate_name () const;\n+  bool lookup_crate_name (const std::string &crate_name,\n+\t\t\t  CrateNum &resolved_crate_num) const;\n+  bool crate_num_to_nodeid (const CrateNum &crate_num, NodeId &node_id) const;\n+  bool node_is_crate (NodeId node_id) const;\n \n   NodeId get_next_node_id ();\n   HirId get_next_hir_id () { return get_next_hir_id (get_current_crate ()); }"}]}