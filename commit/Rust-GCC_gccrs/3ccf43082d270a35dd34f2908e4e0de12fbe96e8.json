{"sha": "3ccf43082d270a35dd34f2908e4e0de12fbe96e8", "node_id": "C_kwDOANBUbNoAKDNjY2Y0MzA4MmQyNzBhMzVkZDM0ZjI5MDhlNGUwZGUxMmZiZTk2ZTg", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-04T15:38:54Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-08T13:47:23Z"}, "message": "remove unused go code", "tree": {"sha": "028a6498894134d78b3c50c099606c552d907da0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/028a6498894134d78b3c50c099606c552d907da0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ccf43082d270a35dd34f2908e4e0de12fbe96e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ccf43082d270a35dd34f2908e4e0de12fbe96e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ccf43082d270a35dd34f2908e4e0de12fbe96e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ccf43082d270a35dd34f2908e4e0de12fbe96e8/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1293ae35777427e1c87659ae21f9bca5f6395d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1293ae35777427e1c87659ae21f9bca5f6395d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1293ae35777427e1c87659ae21f9bca5f6395d6"}], "stats": {"total": 14, "additions": 0, "deletions": 14}, "files": [{"sha": "0707b7999baa49fcd04dd8501890ff5bff5c9517", "filename": "gcc/rust/rust-object-export.cc", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ccf43082d270a35dd34f2908e4e0de12fbe96e8/gcc%2Frust%2Frust-object-export.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ccf43082d270a35dd34f2908e4e0de12fbe96e8/gcc%2Frust%2Frust-object-export.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-object-export.cc?ref=3ccf43082d270a35dd34f2908e4e0de12fbe96e8", "patch": "@@ -86,20 +86,6 @@ rust_field_alignment (tree t)\n   return v / BITS_PER_UNIT;\n }\n \n-/* This is called by the Rust frontend proper if the unsafe package was\n-   imported.  When that happens we cannot do type-based alias\n-   analysis.  */\n-// TODO: this should be removed, as it only pertains to Go, not Rust\n-void\n-rust_imported_unsafe (void)\n-{\n-  flag_strict_aliasing = false;\n-  TREE_OPTIMIZATION (optimization_default_node)->x_flag_strict_aliasing = false;\n-\n-  /* Let the backend know that the options have changed.  */\n-  targetm.override_options_after_change ();\n-}\n-\n /* This is called by the Rust frontend proper to add data to the\n    section containing Rust export data.  */\n "}]}