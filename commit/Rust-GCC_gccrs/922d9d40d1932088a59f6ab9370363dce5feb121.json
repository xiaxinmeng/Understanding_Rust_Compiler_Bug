{"sha": "922d9d40d1932088a59f6ab9370363dce5feb121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIyZDlkNDBkMTkzMjA4OGE1OWY2YWI5MzcwMzYzZGNlNWZlYjEyMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-12T01:40:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-12T01:40:32Z"}, "message": "(eliminate_regs_in_insn): Don't use a later elimination than\neliminate_regs would use.\n\nFrom-SVN: r4663", "tree": {"sha": "34936721c59694b6afee507088c30b6fffb72ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34936721c59694b6afee507088c30b6fffb72ef6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/922d9d40d1932088a59f6ab9370363dce5feb121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922d9d40d1932088a59f6ab9370363dce5feb121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922d9d40d1932088a59f6ab9370363dce5feb121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922d9d40d1932088a59f6ab9370363dce5feb121/comments", "author": null, "committer": null, "parents": [{"sha": "eda115ddc4abcc6e577078351dd60c03ee11c06d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda115ddc4abcc6e577078351dd60c03ee11c06d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda115ddc4abcc6e577078351dd60c03ee11c06d"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "87076c8a011a21eb7af1bdba60da18852b9661e5", "filename": "gcc/reload1.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922d9d40d1932088a59f6ab9370363dce5feb121/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922d9d40d1932088a59f6ab9370363dce5feb121/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=922d9d40d1932088a59f6ab9370363dce5feb121", "patch": "@@ -3107,14 +3107,22 @@ eliminate_regs_in_insn (insn, replace)\n \tfor (ep = reg_eliminate; ep < &reg_eliminate[NUM_ELIMINABLE_REGS];\n \t     ep++)\n \t  if (ep->from_rtx == XEXP (SET_SRC (old_body), 0)\n-\t      && ep->can_eliminate\n-\t      && ep->offset == - INTVAL (XEXP (SET_SRC (old_body), 1)))\n+\t      && ep->can_eliminate)\n \t    {\n-\t      PATTERN (insn) = gen_rtx (SET, VOIDmode,\n-\t\t\t\t\tSET_DEST (old_body), ep->to_rtx);\n-\t      INSN_CODE (insn) = -1;\n-\t      val = 1;\n-\t      goto done;\n+\t      /* We must stop at the first elimination that will be used.\n+\t\t If this one would replace the PLUS with a REG, do it\n+\t\t now.  Otherwise, quit the loop and let eliminate_regs\n+\t\t do its normal replacement.  */\n+\t      if (ep->offset == - INTVAL (XEXP (SET_SRC (old_body), 1)))\n+\t\t{\n+\t\t  PATTERN (insn) = gen_rtx (SET, VOIDmode,\n+\t\t\t\t\t    SET_DEST (old_body), ep->to_rtx);\n+\t\t  INSN_CODE (insn) = -1;\n+\t\t  val = 1;\n+\t\t  goto done;\n+\t\t}\n+\n+\t      break;\n \t    }\n     }\n "}]}