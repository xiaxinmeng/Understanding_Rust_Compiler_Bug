{"sha": "e10f6dd1a93a1d0a4db8406e9537e9e31efacff1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEwZjZkZDFhOTNhMWQwYTRkYjg0MDZlOTUzN2U5ZTMxZWZhY2ZmMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-21T17:48:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-21T17:48:04Z"}, "message": "(expand_divmod): Create RESULT in proper mode when trying\nquotient-and-remainder insn.\n\nFrom-SVN: r5862", "tree": {"sha": "1929637bb688775c844ca3a83248fcc83a49a7fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1929637bb688775c844ca3a83248fcc83a49a7fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e10f6dd1a93a1d0a4db8406e9537e9e31efacff1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e10f6dd1a93a1d0a4db8406e9537e9e31efacff1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e10f6dd1a93a1d0a4db8406e9537e9e31efacff1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e10f6dd1a93a1d0a4db8406e9537e9e31efacff1/comments", "author": null, "committer": null, "parents": [{"sha": "939f89e1931e5171b231e9f77215bcfe997597a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/939f89e1931e5171b231e9f77215bcfe997597a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/939f89e1931e5171b231e9f77215bcfe997597a9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "16c2500a0832ee6eea03b5ede137eb10f97297e3", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e10f6dd1a93a1d0a4db8406e9537e9e31efacff1/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e10f6dd1a93a1d0a4db8406e9537e9e31efacff1/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=e10f6dd1a93a1d0a4db8406e9537e9e31efacff1", "patch": "@@ -2597,7 +2597,7 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t{\n \t  /* No luck there.  Try a quotient-and-remainder insn,\n \t     keeping the quotient alone.  */\n-\t  result = gen_reg_rtx (mode);\n+\t  result = gen_reg_rtx (compute_mode);\n \t  if (! expand_twoval_binop (unsignedp ? udivmod_optab : sdivmod_optab,\n \t\t\t\t     adjusted_op0, op1,\n \t\t\t\t     result, NULL_RTX, unsignedp))"}]}