{"sha": "79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzljNGQ0YjdhOGQ1ZmQ3MTc5MTYwOWNiOWYwZDNkODg2YTI2MmFjOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-17T23:01:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-17T23:01:39Z"}, "message": "decl.c (grokfndecl): Set DECL_CONTEXT to namespace if appropriate.\n\n\t* decl.c (grokfndecl): Set DECL_CONTEXT to namespace if appropriate.\n\t(grokvardecl): Likewise.\n\nFrom-SVN: r23157", "tree": {"sha": "052db8fec597fc538db6606b34437b799069c5ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/052db8fec597fc538db6606b34437b799069c5ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9/comments", "author": null, "committer": null, "parents": [{"sha": "1ddb2906ccd0c06c8164e781859485e8d0b3a2a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ddb2906ccd0c06c8164e781859485e8d0b3a2a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ddb2906ccd0c06c8164e781859485e8d0b3a2a7"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "c5bfc5366d25edaebffa0e8d4a507f472ad8ecd6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9", "patch": "@@ -1,3 +1,8 @@\n+1998-10-17  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (grokfndecl): Set DECL_CONTEXT to namespace if appropriate.\n+\t(grokvardecl): Likewise.\n+\n Sat Oct 17 23:27:20 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* class.c (make_method_vec): Cast 1st argument of `bzero' to (PTR)."}, {"sha": "40a04e40a4037a0c9fc8f38f26a9424c534780d7", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=79c4d4b7a8d5fd71791609cb9f0d3d886a262ac9", "patch": "@@ -8042,9 +8042,11 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n   if (TYPE_VOLATILE (type))\n     TREE_THIS_VOLATILE (decl) = 1;\n \n-  /* This decl is not from the current namespace. */\n+  /* If this decl has namespace scope, set that up.  */\n   if (in_namespace)\n     set_decl_namespace (decl, in_namespace);\n+  else if (publicp && ! ctype)\n+    DECL_CONTEXT (decl) = FROB_CONTEXT (current_namespace);\n \n   /* `main' and builtins have implicit 'C' linkage.  */\n   if ((MAIN_NAME_P (declarator)\n@@ -8053,11 +8055,9 @@ grokfndecl (ctype, type, declarator, orig_declarator, virtualp, flags, quals,\n \t   && IDENTIFIER_POINTER (declarator)[1] == '_'\n \t   && strncmp (IDENTIFIER_POINTER (declarator)+2, \"builtin_\", 8) == 0))\n       && current_lang_name == lang_name_cplusplus\n-      /* context == 0 could mean global scope or not set yet; either is fine\n-\t for us here, as we check current_namespace.  */\n-      && DECL_CONTEXT (decl) == NULL_TREE\n       && ctype == NULL_TREE\n-      && current_namespace == global_namespace)\n+      /* NULL_TREE means global namespace.  */\n+      && DECL_CONTEXT (decl) == NULL_TREE)\n     DECL_LANGUAGE (decl) = lang_c;\n \n   /* Should probably propagate const out from type to decl I bet (mrs).  */\n@@ -8305,12 +8305,21 @@ grokvardecl (type, declarator, specbits_in, initialized, constp, in_namespace)\n     }\n   else\n     {\n-      tree context = in_namespace ? in_namespace : current_namespace;\n+      tree context;\n+\n+      if (in_namespace)\n+\tcontext = in_namespace;\n+      else if (namespace_bindings_p () || RIDBIT_SETP (RID_EXTERN, specbits))\n+\tcontext = current_namespace;\n+\n       decl = build_decl (VAR_DECL, declarator, complete_type (type));\n-      if (declarator && context != global_namespace && namespace_bindings_p ()\n-\t  && current_lang_name != lang_name_c)\n-\tDECL_ASSEMBLER_NAME (decl) =  build_static_name (context,\n-\t\t\t\t\t\t\t declarator);\n+\n+      if (context)\n+\tset_decl_namespace (decl, context);\n+\n+      context = DECL_CONTEXT (decl);\n+      if (declarator && context && current_lang_name != lang_name_c)\n+\tDECL_ASSEMBLER_NAME (decl) = build_static_name (context, declarator);\n     }\n \n   if (in_namespace)"}]}