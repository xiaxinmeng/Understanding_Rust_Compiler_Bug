{"sha": "5ddecff9f260138d286332bb0114f3781d66c38a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRkZWNmZjlmMjYwMTM4ZDI4NjMzMmJiMDExNGYzNzgxZDY2YzM4YQ==", "commit": {"author": {"name": "Sriraman Tallam", "email": "tmsriram@google.com", "date": "2012-04-26T00:52:09Z"}, "committer": {"name": "Sriraman Tallam", "email": "tmsriram@gcc.gnu.org", "date": "2012-04-26T00:52:09Z"}, "message": "i386-cpuinfo.c (FEATURE_AVX2): New enum value.\n\n2012-04-25  Sriraman Tallam  <tmsriram@google.com>\n\n\t* config/i386/i386-cpuinfo.c (FEATURE_AVX2): New enum value.\n\t(get_available_features): New argument. Check for AVX2.\n\t(__cpu_indicator_init): Modify call to get_available_features.\n\n\t* doc/extend.texi: Document avx2 support.\n\t* config/i386/i386.c (fold_builtin_cpu): Add avx2.\n\n\t* testsuite/gcc.target/i386/builtin_target.c: Check avx2.\n\nFrom-SVN: r186855", "tree": {"sha": "bc87408432ea357dc78b6eee443172032550af77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc87408432ea357dc78b6eee443172032550af77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ddecff9f260138d286332bb0114f3781d66c38a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddecff9f260138d286332bb0114f3781d66c38a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ddecff9f260138d286332bb0114f3781d66c38a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddecff9f260138d286332bb0114f3781d66c38a/comments", "author": {"login": "tmsri", "id": 38991943, "node_id": "MDQ6VXNlcjM4OTkxOTQz", "avatar_url": "https://avatars.githubusercontent.com/u/38991943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmsri", "html_url": "https://github.com/tmsri", "followers_url": "https://api.github.com/users/tmsri/followers", "following_url": "https://api.github.com/users/tmsri/following{/other_user}", "gists_url": "https://api.github.com/users/tmsri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmsri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmsri/subscriptions", "organizations_url": "https://api.github.com/users/tmsri/orgs", "repos_url": "https://api.github.com/users/tmsri/repos", "events_url": "https://api.github.com/users/tmsri/events{/privacy}", "received_events_url": "https://api.github.com/users/tmsri/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c2ad8e1c4034fba37e9c7ed0efbb521b0c7d37ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ad8e1c4034fba37e9c7ed0efbb521b0c7d37ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2ad8e1c4034fba37e9c7ed0efbb521b0c7d37ca"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "ef6fc511086f319d78a6cdd6db3d63888b33cd45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ddecff9f260138d286332bb0114f3781d66c38a", "patch": "@@ -1,3 +1,8 @@\n+2012-04-25  Sriraman Tallam  <tmsriram@google.com>\n+\n+\t* doc/extend.texi: Document avx2 support.\n+\t* config/i386/i386.c (fold_builtin_cpu): Add avx2.\n+\n 2012-04-26  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/53120"}, {"sha": "a34c68c418e7e69628cb54a39b91a60876cd8da1", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5ddecff9f260138d286332bb0114f3781d66c38a", "patch": "@@ -27763,6 +27763,7 @@ fold_builtin_cpu (tree fndecl, tree *args)\n     F_SSE4_1,\n     F_SSE4_2,\n     F_AVX,\n+    F_AVX2,\n     F_MAX\n   };\n \n@@ -27830,7 +27831,8 @@ fold_builtin_cpu (tree fndecl, tree *args)\n       {\"ssse3\",  F_SSSE3},\n       {\"sse4.1\", F_SSE4_1},\n       {\"sse4.2\", F_SSE4_2},\n-      {\"avx\",    F_AVX}\n+      {\"avx\",    F_AVX},\n+      {\"avx2\",   F_AVX2}\n     };\n \n   static tree __processor_model_type = NULL_TREE;"}, {"sha": "473339ec736c15daa57b3a5a88d972af874d96c5", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=5ddecff9f260138d286332bb0114f3781d66c38a", "patch": "@@ -9541,6 +9541,8 @@ SSE4.1 instructions.\n SSE4.2 instructions.\n @item avx\n AVX instructions.\n+@item avx2\n+AVX2 instructions.\n @end table\n \n Here is an example:"}, {"sha": "a566f6a7e1bbe3816e89396ea748b1e14dc4d497", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ddecff9f260138d286332bb0114f3781d66c38a", "patch": "@@ -1,3 +1,7 @@\n+2012-04-25  Sriraman Tallam  <tmsriram@google.com>\n+\n+\t* testsuite/gcc.target/i386/builtin_target.c: Check avx2.\n+\n 2012-04-26  Alan Modra  <amodra@gmail.com>\n \n \t* gcc.target/powerpc/savres.c: New test."}, {"sha": "770531585ecec4f375f8034ed1c48afe2bc3593a", "filename": "gcc/testsuite/gcc.target/i386/builtin_target.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin_target.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddecff9f260138d286332bb0114f3781d66c38a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin_target.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin_target.c?ref=5ddecff9f260138d286332bb0114f3781d66c38a", "patch": "@@ -29,6 +29,8 @@ fn1 ()\n \n   assert (__builtin_cpu_supports (\"avx\") >= 0);\n \n+  assert (__builtin_cpu_supports (\"avx2\") >= 0);\n+\n   /* Check CPU type.  */\n   assert (__builtin_cpu_is (\"amd\") >= 0);\n "}, {"sha": "16fb55318c167e0f2159c97e56eae9299b6d4df8", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddecff9f260138d286332bb0114f3781d66c38a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddecff9f260138d286332bb0114f3781d66c38a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=5ddecff9f260138d286332bb0114f3781d66c38a", "patch": "@@ -1,3 +1,9 @@\n+2012-04-25  Sriraman Tallam  <tmsriram@google.com>\n+\n+\t* config/i386/i386-cpuinfo.c (FEATURE_AVX2): New enum value.\n+\t(get_available_features): New argument. Check for AVX2.\n+\t(__cpu_indicator_init): Modify call to get_available_features.\n+\n 2012-04-25  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/crtsavevr.S: New file."}, {"sha": "6934778c0fcff6b11d48718a731a6163fdf1383c", "filename": "libgcc/config/i386/i386-cpuinfo.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ddecff9f260138d286332bb0114f3781d66c38a/libgcc%2Fconfig%2Fi386%2Fi386-cpuinfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ddecff9f260138d286332bb0114f3781d66c38a/libgcc%2Fconfig%2Fi386%2Fi386-cpuinfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fi386-cpuinfo.c?ref=5ddecff9f260138d286332bb0114f3781d66c38a", "patch": "@@ -75,7 +75,8 @@ enum processor_features\n   FEATURE_SSSE3,\n   FEATURE_SSE4_1,\n   FEATURE_SSE4_2,\n-  FEATURE_AVX\n+  FEATURE_AVX,\n+  FEATURE_AVX2\n };\n \n struct __processor_model\n@@ -191,8 +192,11 @@ get_intel_cpu (unsigned int family, unsigned int model, unsigned int brand_id)\n     }\n }\t             \t\n \n+/* ECX and EDX are output of CPUID at level one.  MAX_CPUID_LEVEL is\n+   the max possible level of CPUID insn.  */\n static void\n-get_available_features (unsigned int ecx, unsigned int edx)\n+get_available_features (unsigned int ecx, unsigned int edx,\n+\t\t\tint max_cpuid_level)\n {\n   unsigned int features = 0;\n \n@@ -217,6 +221,15 @@ get_available_features (unsigned int ecx, unsigned int edx)\n   if (ecx & bit_AVX)\n     features |= (1 << FEATURE_AVX);\n \n+  /* Get Advanced Features at level 7 (eax = 7, ecx = 0). */\n+  if (max_cpuid_level >= 7)\n+    {\n+      unsigned int eax, ebx, ecx, edx;\n+      __cpuid_count (7, 0, eax, ebx, ecx, edx);\n+      if (ebx & bit_AVX2)\n+\tfeatures |= (1 << FEATURE_AVX2);\n+    }\n+\n   __cpu_model.__cpu_features[0] = features;\n }\n \n@@ -296,7 +309,7 @@ __cpu_indicator_init (void)\n       /* Get CPU type.  */\n       get_intel_cpu (family, model, brand_id);\n       /* Find available features. */\n-      get_available_features (ecx, edx);\n+      get_available_features (ecx, edx, max_level);\n       __cpu_model.__cpu_vendor = VENDOR_INTEL;\n     }\n   else if (vendor == SIG_AMD)\n@@ -311,7 +324,7 @@ __cpu_indicator_init (void)\n       /* Get CPU type.  */\n       get_amd_cpu (family, model);\n       /* Find available features. */\n-      get_available_features (ecx, edx);\n+      get_available_features (ecx, edx, max_level);\n       __cpu_model.__cpu_vendor = VENDOR_AMD;\n     }\n   else"}]}