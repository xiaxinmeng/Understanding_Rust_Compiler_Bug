{"sha": "5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZiNzBkMmVhNGQ4ZTJmZmI0MGRiYjEwMzY5MTU5ZTJhYWUxYmNkMQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-07-12T20:04:59Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-07-12T20:04:59Z"}, "message": "re PR fortran/32634 (renamed, use associated generic interface rejected)\n\n2007-07-12  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/32634\n\tPR fortran/32727\n\t* module.c (write_generic): Restore patch of 2007-07-10 and use\n\tsymbol name if there are no use names. \n\n2007-07-12  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/32727\n\t* gfortran.dg/interface_17.f90: New test.\n\nFrom-SVN: r126600", "tree": {"sha": "b323764db6e1598e994144a93cbef6971e5887bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b323764db6e1598e994144a93cbef6971e5887bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1/comments", "author": null, "committer": null, "parents": [{"sha": "aa5e22f00044aff47df0997d9f5d794e91cba2dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5e22f00044aff47df0997d9f5d794e91cba2dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5e22f00044aff47df0997d9f5d794e91cba2dd"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "79f646df95596ef81b19ae04200c3b22fafe967a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1", "patch": "@@ -1,3 +1,10 @@\n+2007-07-12  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/32634\n+\tPR fortran/32727\n+\t* module.c (write_generic): Restore patch of 2007-07-10 and use\n+\tsymbol name if there are no use names. \n+\n 2007-07-12  Christopher D. Rickett  <crickett@lanl.gov>\n \n \tPR fortran/32599"}, {"sha": "31b7c9bbf3ffbd40cf7e29b050887d27284d29fd", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1", "patch": "@@ -3947,14 +3947,31 @@ write_operator (gfc_user_op *uop)\n static void\n write_generic (gfc_symbol *sym)\n {\n+  const char *p;\n+  int nuse, j;\n+\n   if (sym->generic == NULL\n       || !gfc_check_access (sym->attr.access, sym->ns->default_access))\n     return;\n \n   if (sym->module == NULL)\n     sym->module = gfc_get_string (module_name);\n \n-  mio_symbol_interface (&sym->name, &sym->module, &sym->generic);\n+  /* See how many use names there are.  If none, use the symbol name.  */\n+  nuse = number_use_names (sym->name);\n+  if (nuse == 0)\n+    {\n+      mio_symbol_interface (&sym->name, &sym->module, &sym->generic);\n+      return;\n+    }\n+\n+  for (j = 1; j <= nuse; j++)\n+    {\n+      /* Get the jth local name for this symbol.  */\n+      p = find_use_name_n (sym->name, &j);\n+\n+      mio_symbol_interface (&p, &sym->module, &sym->generic);\n+    }\n }\n \n "}, {"sha": "a4f28b5e94fbbeb8e26242affff2ce018e0e50b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1", "patch": "@@ -1,3 +1,8 @@\n+2007-07-12  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/32727\n+\t* gfortran.dg/interface_17.f90: New test.\n+\n 2007-07-12  Christopher D. Rickett  <crickett@lanl.gov>\n \n \tPR fortran/32599"}, {"sha": "44b8a46159724917e28a0eee24548d34598afba2", "filename": "gcc/testsuite/gfortran.dg/interface_17.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_17.f90?ref=5fb70d2ea4d8e2ffb40dbb10369159e2aae1bcd1", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+! Tests the fix for PR32727, which was a regression caused\n+! by the fix for PR32634\n+!\n+! Contributed by Joost VandeVondele <jv244@cam.ac.uk>\n+!\n+MODULE kinds\n+  INTEGER, PARAMETER :: dp = SELECTED_REAL_KIND ( 14, 200 )\n+END MODULE kinds\n+\n+MODULE util\n+  USE kinds,                           ONLY: dp\n+  INTERFACE sort\n+     MODULE PROCEDURE sort2\n+  END INTERFACE\n+CONTAINS\n+  SUBROUTINE sort2 ( )\n+  END SUBROUTINE sort2\n+END MODULE util\n+\n+MODULE graphcon\n+  USE util,                            ONLY: sort\n+END MODULE graphcon\n+! { dg-final { cleanup-modules \"kinds util graphcon\" } }"}]}