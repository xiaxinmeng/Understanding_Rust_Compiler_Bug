{"sha": "05e9e0a570f2a0d9f1d683b4cb543ba556d6a1a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVlOWUwYTU3MGYyYTBkOWYxZDY4M2I0Y2I1NDNiYTU1NmQ2YTFhNg==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2003-02-19T02:06:11Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2003-02-19T02:06:11Z"}, "message": "Sort the fixes by fix name\n\nFrom-SVN: r63081", "tree": {"sha": "fac2e8629b4fb6a2b4b9f0f6301469dd3134ed1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fac2e8629b4fb6a2b4b9f0f6301469dd3134ed1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05e9e0a570f2a0d9f1d683b4cb543ba556d6a1a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05e9e0a570f2a0d9f1d683b4cb543ba556d6a1a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05e9e0a570f2a0d9f1d683b4cb543ba556d6a1a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05e9e0a570f2a0d9f1d683b4cb543ba556d6a1a6/comments", "author": null, "committer": null, "parents": [{"sha": "62e1dfcf2f4ba9568194e08ebccdd1b1c1db78f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62e1dfcf2f4ba9568194e08ebccdd1b1c1db78f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62e1dfcf2f4ba9568194e08ebccdd1b1c1db78f3"}], "stats": {"total": 192, "additions": 96, "deletions": 96}, "files": [{"sha": "64a479a19d9452d301c502677d8593f3db16a5fa", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05e9e0a570f2a0d9f1d683b4cb543ba556d6a1a6/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05e9e0a570f2a0d9f1d683b4cb543ba556d6a1a6/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=05e9e0a570f2a0d9f1d683b4cb543ba556d6a1a6", "patch": "@@ -1001,6 +1001,69 @@ fix = {\n };\n \n \n+/*\n+ *  Fix hpux 10.X missing ctype declarations 1\n+ */\n+fix = {\n+    hackname = hpux10_ctype_declarations1;\n+    files    = ctype.h;\n+    select   = \"^#[ \\t]*define _toupper\\\\(__c\\\\)[ \\t]*__toupper\\\\(__c\\\\)\";\n+    bypass   = \"^[ \\t]*extern[ \\t]*int[ \\t]*__tolower[ \\t]*\\\\(\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifdef _PROTOTYPES\\n\"\n+\t\t\"extern int __tolower(int);\\n\"\n+\t\t\"extern int __toupper(int);\\n\"\n+\t\t\"#else /* NOT _PROTOTYPES */\\n\"\n+\t\t\"extern int __tolower();\\n\"\n+\t\t\"extern int __toupper();\\n\"\n+\t\t\"#endif /* _PROTOTYPES */\\n\\n\"\n+\t\t\"%0\\n\";\n+\n+    test_text = \"#  define _toupper(__c)         __toupper(__c)\\n\";\n+};\n+\n+\n+/*\n+ *  Fix hpux 10.X missing ctype declarations 2\n+ */\n+fix = {\n+    hackname = hpux10_ctype_declarations2;\n+    files    = ctype.h;\n+    select   = \"^#  if defined\\\\(_SB_CTYPE_MACROS\\\\) && \\\\!defined\\\\(__lint\\\\)\";\n+    bypass   = \"^[ \\t]*extern[ \\t]*int[ \\t]*_isalnum[ \\t]*\\\\(\";\n+    c_fix     = format;\n+    c_fix_arg = \"%0\\n\\n\"\n+\t\t\"#ifdef _PROTOTYPES\\n\"\n+\t\t\"     extern int _isalnum(int);\\n\"\n+\t\t\"     extern int _isalpha(int);\\n\"\n+\t\t\"     extern int _iscntrl(int);\\n\"\n+\t\t\"     extern int _isdigit(int);\\n\"\n+\t\t\"     extern int _isgraph(int);\\n\"\n+\t\t\"     extern int _islower(int);\\n\"\n+\t\t\"     extern int _isprint(int);\\n\"\n+\t\t\"     extern int _ispunct(int);\\n\"\n+\t\t\"     extern int _isspace(int);\\n\"\n+\t\t\"     extern int _isupper(int);\\n\"\n+\t\t\"     extern int _isxdigit(int);\\n\"\n+\t\t\"#  else /* not _PROTOTYPES */\\n\"\n+\t\t\"     extern int _isalnum();\\n\"\n+\t\t\"     extern int _isalpha();\\n\"\n+\t\t\"     extern int _iscntrl();\\n\"\n+\t\t\"     extern int _isdigit();\\n\"\n+\t\t\"     extern int _isgraph();\\n\"\n+\t\t\"     extern int _islower();\\n\"\n+\t\t\"     extern int _isprint();\\n\"\n+\t\t\"     extern int _ispunct();\\n\"\n+\t\t\"     extern int _isspace();\\n\"\n+\t\t\"     extern int _isupper();\\n\"\n+\t\t\"     extern int _isxdigit();\\n\"\n+\t\t\"#endif /* _PROTOTYPES */\\n\";\n+\n+    test_text = \"#  if defined(_SB_CTYPE_MACROS) && !defined(__lint)\\n\"\n+\t\t\"     extern unsigned int *__SB_masks;\\n\";\n+};\n+\n+\n /*\n  *  Make sure hpux defines abs in header.\n  */\n@@ -1016,27 +1079,6 @@ fix = {\n };\n \n \n-/*\n- * HP-UX long_double\n- */\n-fix = {\n-    hackname  = hpux_long_double;\n-    files     = stdlib.h;\n-    select    = \"extern[ \\t]long_double[ \\t]strtold\";\n-    bypass    = \"long_double_t\";\n-    sed       = \"/^#[ \\t]*ifndef _LONG_DOUBLE/,/\\\\/\\\\* _LONG_DOUBLE \\\\*\\\\//D\";\n-    sed       = \"s/long_double/long double/g\";\n-\n-    test_text = \"#  ifndef _LONG_DOUBLE\\n\"\n-\t\t\"#    define _LONG_DOUBLE\\n\"\n-\t\t\"     typedef struct {\\n\"\n-\t\t\"       unsigned int word1, word2, word3, word4;\\n\"\n-\t\t\"     } long_double;\\n\"\n-\t\t\"#  endif /* _LONG_DOUBLE */\\n\"\n-\t\t\"extern long_double strtold(const char *, char **);\\n\";\n-};\n-\n-\n /*\n  *  Keep HP-UX 11 from stomping on C++ math namespace\n  *  with defines for fabsf.\n@@ -1104,65 +1146,35 @@ fix = {\n \n \n /*\n- *  Fix hpux 10.X missing ctype declarations 1\n+ *  Fix hpux 11.00 broken vsnprintf declaration\n  */\n fix = {\n-    hackname = hpux10_ctype_declarations1;\n-    files    = ctype.h;\n-    select   = \"^#[ \\t]*define _toupper\\\\(__c\\\\)[ \\t]*__toupper\\\\(__c\\\\)\";\n-    bypass   = \"^[ \\t]*extern[ \\t]*int[ \\t]*__tolower[ \\t]*\\\\(\";\n+    hackname = hpux11_vsnprintf;\n+    files    = stdio.h;\n+    select   = '(extern int vsnprintf\\(char \\*, _[hpux]*_size_t, '\n+                                     'const char \\*,) __va__list\\);';\n     c_fix     = format;\n-    c_fix_arg = \"#ifdef _PROTOTYPES\\n\"\n-\t\t\"extern int __tolower(int);\\n\"\n-\t\t\"extern int __toupper(int);\\n\"\n-\t\t\"#else /* NOT _PROTOTYPES */\\n\"\n-\t\t\"extern int __tolower();\\n\"\n-\t\t\"extern int __toupper();\\n\"\n-\t\t\"#endif /* _PROTOTYPES */\\n\\n\"\n-\t\t\"%0\\n\";\n+    c_fix_arg = \"%1 __va_list);\";\n \n-    test_text = \"#  define _toupper(__c)         __toupper(__c)\\n\";\n+    test_text = 'extern int vsnprintf(char *, _hpux_size_t, const char *,'\n+                                     ' __va__list);';\n };\n \n \n /*\n- *  Fix hpux 10.X missing ctype declarations 2\n+ *  get rid of bogus inline definitions in HP-UX 8.0\n  */\n fix = {\n-    hackname = hpux10_ctype_declarations2;\n-    files    = ctype.h;\n-    select   = \"^#  if defined\\\\(_SB_CTYPE_MACROS\\\\) && \\\\!defined\\\\(__lint\\\\)\";\n-    bypass   = \"^[ \\t]*extern[ \\t]*int[ \\t]*_isalnum[ \\t]*\\\\(\";\n-    c_fix     = format;\n-    c_fix_arg = \"%0\\n\\n\"\n-\t\t\"#ifdef _PROTOTYPES\\n\"\n-\t\t\"     extern int _isalnum(int);\\n\"\n-\t\t\"     extern int _isalpha(int);\\n\"\n-\t\t\"     extern int _iscntrl(int);\\n\"\n-\t\t\"     extern int _isdigit(int);\\n\"\n-\t\t\"     extern int _isgraph(int);\\n\"\n-\t\t\"     extern int _islower(int);\\n\"\n-\t\t\"     extern int _isprint(int);\\n\"\n-\t\t\"     extern int _ispunct(int);\\n\"\n-\t\t\"     extern int _isspace(int);\\n\"\n-\t\t\"     extern int _isupper(int);\\n\"\n-\t\t\"     extern int _isxdigit(int);\\n\"\n-\t\t\"#  else /* not _PROTOTYPES */\\n\"\n-\t\t\"     extern int _isalnum();\\n\"\n-\t\t\"     extern int _isalpha();\\n\"\n-\t\t\"     extern int _iscntrl();\\n\"\n-\t\t\"     extern int _isdigit();\\n\"\n-\t\t\"     extern int _isgraph();\\n\"\n-\t\t\"     extern int _islower();\\n\"\n-\t\t\"     extern int _isprint();\\n\"\n-\t\t\"     extern int _ispunct();\\n\"\n-\t\t\"     extern int _isspace();\\n\"\n-\t\t\"     extern int _isupper();\\n\"\n-\t\t\"     extern int _isxdigit();\\n\"\n-\t\t\"#endif /* _PROTOTYPES */\\n\";\n-\n-    test_text = \"#  if defined(_SB_CTYPE_MACROS) && !defined(__lint)\\n\"\n-\t\t\"     extern unsigned int *__SB_masks;\\n\";\n+    hackname = hpux8_bogus_inlines;\n+    files    = math.h;\n+    select   = inline;\n+    sed = \"s@inline int abs(int [a-z][a-z]*) {.*}\"\n+           \"@extern \\\"C\\\" int abs(int);@\";\n+    sed = \"s@inline double abs(double [a-z][a-z]*) {.*}@@\";\n+    sed = \"s@inline int sqr(int [a-z][a-z]*) {.*}@@\";\n+    sed = \"s@inline double sqr(double [a-z][a-z]*) {.*}@@\";\n+    test_text = \"inline int abs(int v) { return (v>=0)?v:-v; }\\n\"\n+                \"inline double sqr(double v) { return v**0.5; }\";\n };\n \n \n@@ -1183,35 +1195,23 @@ fix = {\n \n \n /*\n- *  Fix hpux 11.00 broken vsnprintf declaration\n+ * HP-UX long_double\n  */\n fix = {\n-    hackname = hpux11_vsnprintf;\n-    files    = stdio.h;\n-    select   = '(extern int vsnprintf\\(char \\*, _[hpux]*_size_t, '\n-                                     'const char \\*,) __va__list\\);';\n-    c_fix     = format;\n-    c_fix_arg = \"%1 __va_list);\";\n-\n-    test_text = 'extern int vsnprintf(char *, _hpux_size_t, const char *,'\n-                                     ' __va__list);';\n-};\n-\n+    hackname  = hpux_long_double;\n+    files     = stdlib.h;\n+    select    = \"extern[ \\t]long_double[ \\t]strtold\";\n+    bypass    = \"long_double_t\";\n+    sed       = \"/^#[ \\t]*ifndef _LONG_DOUBLE/,/\\\\/\\\\* _LONG_DOUBLE \\\\*\\\\//D\";\n+    sed       = \"s/long_double/long double/g\";\n \n-/*\n- *  get rid of bogus inline definitions in HP-UX 8.0\n- */\n-fix = {\n-    hackname = hpux8_bogus_inlines;\n-    files    = math.h;\n-    select   = inline;\n-    sed = \"s@inline int abs(int [a-z][a-z]*) {.*}\"\n-           \"@extern \\\"C\\\" int abs(int);@\";\n-    sed = \"s@inline double abs(double [a-z][a-z]*) {.*}@@\";\n-    sed = \"s@inline int sqr(int [a-z][a-z]*) {.*}@@\";\n-    sed = \"s@inline double sqr(double [a-z][a-z]*) {.*}@@\";\n-    test_text = \"inline int abs(int v) { return (v>=0)?v:-v; }\\n\"\n-                \"inline double sqr(double v) { return v**0.5; }\";\n+    test_text = \"#  ifndef _LONG_DOUBLE\\n\"\n+\t\t\"#    define _LONG_DOUBLE\\n\"\n+\t\t\"     typedef struct {\\n\"\n+\t\t\"       unsigned int word1, word2, word3, word4;\\n\"\n+\t\t\"     } long_double;\\n\"\n+\t\t\"#  endif /* _LONG_DOUBLE */\\n\"\n+\t\t\"extern long_double strtold(const char *, char **);\\n\";\n };\n \n "}]}