{"sha": "d0a859e621fad9894d5d29b8afd639d777c0626a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBhODU5ZTYyMWZhZDk4OTRkNWQyOWI4YWZkNjM5ZDc3N2MwNjI2YQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2016-02-19T10:34:12Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-02-19T10:34:12Z"}, "message": "S/390: z13 fix mode in vcond expansion\n\nFor floating point vector compares the target mode is an integer mode\nwhich accidently was used as register mode when forcing the compare\noperands into regs.\n\ngcc/ChangeLog:\n\n\t* config/s390/s390.c (s390_expand_vcond): Use the compare operand\n\tmode.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/s390/vector/vec-vcond-1.c: New test.\n\nFrom-SVN: r233552", "tree": {"sha": "dde2741f8e23153d07cb53d29cbbdc1540978313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dde2741f8e23153d07cb53d29cbbdc1540978313"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0a859e621fad9894d5d29b8afd639d777c0626a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a859e621fad9894d5d29b8afd639d777c0626a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a859e621fad9894d5d29b8afd639d777c0626a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a859e621fad9894d5d29b8afd639d777c0626a/comments", "author": null, "committer": null, "parents": [{"sha": "9e4eb6439435259b7cf5c7e2ea39d402f8028c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4eb6439435259b7cf5c7e2ea39d402f8028c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e4eb6439435259b7cf5c7e2ea39d402f8028c7c"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "1378f5bc78459e6f96b6cadeb95ce4836de6c554", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a859e621fad9894d5d29b8afd639d777c0626a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a859e621fad9894d5d29b8afd639d777c0626a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0a859e621fad9894d5d29b8afd639d777c0626a", "patch": "@@ -1,3 +1,8 @@\n+2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.c (s390_expand_vcond): Use the compare operand\n+\tmode.\n+\n 2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390-protos.h: Add s390_expand_vec_movstr prototype."}, {"sha": "cd53b15f112219b51cbb90fa99ea8c6055565a82", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a859e621fad9894d5d29b8afd639d777c0626a/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a859e621fad9894d5d29b8afd639d777c0626a/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=d0a859e621fad9894d5d29b8afd639d777c0626a", "patch": "@@ -6329,10 +6329,10 @@ s390_expand_vcond (rtx target, rtx then, rtx els,\n      can be handled by the optimization above but not by the\n      following code.  Hence, force them into registers here.  */\n   if (!REG_P (cmp_op1))\n-    cmp_op1 = force_reg (target_mode, cmp_op1);\n+    cmp_op1 = force_reg (GET_MODE (cmp_op1), cmp_op1);\n \n   if (!REG_P (cmp_op2))\n-    cmp_op2 = force_reg (target_mode, cmp_op2);\n+    cmp_op2 = force_reg (GET_MODE (cmp_op2), cmp_op2);\n \n   s390_expand_vec_compare (result_target, cond,\n \t\t\t   cmp_op1, cmp_op2);"}, {"sha": "abb2ed6ad3e96c8beb2eb8d0877c9a8f70b44423", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a859e621fad9894d5d29b8afd639d777c0626a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a859e621fad9894d5d29b8afd639d777c0626a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0a859e621fad9894d5d29b8afd639d777c0626a", "patch": "@@ -1,3 +1,7 @@\n+2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/vector/vec-vcond-1.c: New test.\n+\n 2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/md/movstr-1.c: Allow also the z13 strings"}, {"sha": "ec65c6fbba40f8021ced99695644ac611b973316", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-vcond-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a859e621fad9894d5d29b8afd639d777c0626a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-vcond-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a859e621fad9894d5d29b8afd639d777c0626a/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-vcond-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-vcond-1.c?ref=d0a859e621fad9894d5d29b8afd639d777c0626a", "patch": "@@ -0,0 +1,23 @@\n+/* A const vector operand is forced into a register in\n+   s390_expand_vcond.\n+   This testcase once failed because the target mode (v2di) was picked\n+   for the reg instead of the mode of the other comparison\n+   operand.  */\n+\n+/* { dg-do compile { target { s390*-*-* } } } */\n+/* { dg-options \"-O3 -mzarch -march=z13\" } */\n+\n+typedef __attribute__((vector_size(16))) long   v2di;\n+typedef __attribute__((vector_size(16))) double v2df;\n+\n+v2di\n+foo (v2df a)\n+{\n+  return a == (v2df){ 0.0, 0.0 };\n+}\n+\n+v2di\n+bar (v2df a)\n+{\n+  return (v2df){ 1.0, 1.0 } == (v2df){ 0.0, 0.0 };\n+}"}]}