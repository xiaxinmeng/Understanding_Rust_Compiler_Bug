{"sha": "3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JiM2Y2ZDZlMGU0NzlkZmJkYmQ4MzhkODY1OWZiZmM3NjNlYWYwOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-01-25T14:21:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-01-25T14:21:16Z"}, "message": "[multiple changes]\n\n2010-01-25  Florian Villoing  <villoing@adacore.com>\n\n\t* gnat_ugn.texi: Fix typo.\n\n2010-01-25  Thomas Quinot  <quinot@adacore.com>\n\n\t* scos.ads: Update specification.\n\n2010-01-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Process_PPCs): If a postcondition is present and the\n\tenclosing subprogram has no previous spec, attach postcondition\n\tprocedure to the defining entity for the body.\n\n2010-01-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_aggr.adb (Build_Record_Aggr_Code); Do not generate call to\n\tinitialization procedure of the ancestor part of an extension aggregate\n\tif it is an interface type.\n\n2010-01-25  Vincent Celier  <celier@adacore.com>\n\n\t* gnatlink.adb (Process_Binder_File): The directory for the shared\n\tversion of libgcc in the run path options is found in the subdirectory\n\tindicated by __gnat_default_libgcc_subdir.\n\t* link.c: Declare new const char * __gnat_default_libgcc_subdir for\n\teach platform.\n\n2010-01-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb: More flexible pragma Annotate.\n\nFrom-SVN: r156209", "tree": {"sha": "54850037d6cfdb1cf7eb673529bc194fb29790cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54850037d6cfdb1cf7eb673529bc194fb29790cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/comments", "author": null, "committer": null, "parents": [{"sha": "00f88f071eb35d2cbc91823a192b054c3232d0ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00f88f071eb35d2cbc91823a192b054c3232d0ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00f88f071eb35d2cbc91823a192b054c3232d0ee"}], "stats": {"total": 406, "additions": 262, "deletions": 144}, "files": [{"sha": "4b1df4b8b2c9a3d27abbced4bf7901953a189ca8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "patch": "@@ -1,3 +1,35 @@\n+2010-01-25  Florian Villoing  <villoing@adacore.com>\n+\n+\t* gnat_ugn.texi: Fix typo.\n+\n+2010-01-25  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* scos.ads: Update specification.\n+\n+2010-01-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Process_PPCs): If a postcondition is present and the\n+\tenclosing subprogram has no previous spec, attach postcondition\n+\tprocedure to the defining entity for the body.\n+\n+2010-01-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb (Build_Record_Aggr_Code); Do not generate call to\n+\tinitialization procedure of the ancestor part of an extension aggregate\n+\tif it is an interface type.\n+\n+2010-01-25  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatlink.adb (Process_Binder_File): The directory for the shared\n+\tversion of libgcc in the run path options is found in the subdirectory\n+\tindicated by __gnat_default_libgcc_subdir.\n+\t* link.c: Declare new const char * __gnat_default_libgcc_subdir for\n+\teach platform.\n+\n+2010-01-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb: More flexible pragma Annotate.\n+\n 2010-01-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* system-linux-armel.ads (Stack_Check_Probes): Set to True."}, {"sha": "49e681b9ed980cd025934a5f336732a44e7deb0d", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "patch": "@@ -2578,19 +2578,21 @@ package body Exp_Aggr is\n                Ref := Convert_To (Init_Typ, New_Copy_Tree (Target));\n                Set_Assignment_OK (Ref);\n \n-               Append_List_To (L,\n-                 Build_Initialization_Call (Loc,\n-                   Id_Ref            => Ref,\n-                   Typ               => Init_Typ,\n-                   In_Init_Proc      => Within_Init_Proc,\n-                   With_Default_Init => Has_Default_Init_Comps (N)\n-                                          or else\n-                                        Has_Task (Base_Type (Init_Typ))));\n-\n-               if Is_Constrained (Entity (A))\n-                 and then Has_Discriminants (Entity (A))\n-               then\n-                  Check_Ancestor_Discriminants (Entity (A));\n+               if not Is_Abstract_Type (Init_Typ) then\n+                  Append_List_To (L,\n+                    Build_Initialization_Call (Loc,\n+                      Id_Ref            => Ref,\n+                      Typ               => Init_Typ,\n+                      In_Init_Proc      => Within_Init_Proc,\n+                      With_Default_Init => Has_Default_Init_Comps (N)\n+                                             or else\n+                                           Has_Task (Base_Type (Init_Typ))));\n+\n+                  if Is_Constrained (Entity (A))\n+                    and then Has_Discriminants (Entity (A))\n+                  then\n+                     Check_Ancestor_Discriminants (Entity (A));\n+                  end if;\n                end if;\n \n             --  Handle calls to C++ constructors"}, {"sha": "42e3b91fdb49b57c3c1bf22d67f06d7427c6ee22", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "patch": "@@ -1,4 +1,4 @@\n-f\\input texinfo   @c -*-texinfo-*-\n+\\input texinfo   @c -*-texinfo-*-\n @c %**start of header\n \n @c oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo"}, {"sha": "54dbadf0ac5367d2e4bc5f632de16c5daebb149f", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 134, "deletions": 104, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "patch": "@@ -733,6 +733,11 @@ procedure Gnatlink is\n       --  specifies the path where the dynamic loader should find shared\n       --  libraries. Equal to null string if this system doesn't support it.\n \n+      Libgcc_Subdir_Ptr : Interfaces.C.Strings.chars_ptr;\n+      pragma Import (C, Libgcc_Subdir_Ptr, \"__gnat_default_libgcc_subdir\");\n+      --  Pointer to string indicating the installation subdirectory where\n+      --  a default shared libgcc might be found.\n+\n       Object_Library_Ext_Ptr : Interfaces.C.Strings.chars_ptr;\n       pragma Import\n         (C, Object_Library_Ext_Ptr, \"__gnat_object_library_extension\");\n@@ -1210,143 +1215,168 @@ procedure Gnatlink is\n                                  --  Also add path to find libgcc_s.so, if\n                                  --  relevant.\n \n+                                 declare\n+                                    Path : String (1 .. File_Path'Length + 15);\n+                                    Path_Last : constant Natural :=\n+                                                  File_Path'Length;\n+\n+                                 begin\n+                                    Path (1 .. File_Path'Length) :=\n+                                      File_Path.all;\n+\n                                  --  To find the location of the shared version\n                                  --  of libgcc, we look for \"gcc-lib\" in the\n                                  --  path of the library. However, this\n                                  --  subdirectory is no longer present in\n-                                 --  in recent version of GCC. So, we look for\n+                                 --  recent versions of GCC. So, we look for\n                                  --  the last subdirectory \"lib\" in the path.\n \n-                                 GCC_Index :=\n-                                   Index (File_Path.all, \"gcc-lib\");\n-\n-                                 if GCC_Index /= 0 then\n-                                    --  The shared version of libgcc is\n-                                    --  located in the parent directory.\n+                                    GCC_Index :=\n+                                      Index (Path (1 .. Path_Last), \"gcc-lib\");\n \n-                                    GCC_Index := GCC_Index - 1;\n+                                    if GCC_Index /= 0 then\n+                                       --  The shared version of libgcc is\n+                                       --  located in the parent directory.\n \n-                                 else\n-                                    GCC_Index :=\n-                                      Index (File_Path.all, \"/lib/\");\n+                                       GCC_Index := GCC_Index - 1;\n \n-                                    if GCC_Index = 0 then\n+                                    else\n                                        GCC_Index :=\n-                                         Index (File_Path.all,\n-                                                Directory_Separator &\n-                                                \"lib\" &\n-                                                Directory_Separator);\n-                                    end if;\n-\n-                                    --  We have found a subdirectory \"lib\",\n-                                    --  this is where the shared version of\n-                                    --  libgcc should be located.\n+                                         Index\n+                                           (Path (1 .. Path_Last),\n+                                            \"/lib/\");\n+\n+                                       if GCC_Index = 0 then\n+                                          GCC_Index :=\n+                                            Index (Path (1 .. Path_Last),\n+                                                   Directory_Separator &\n+                                                   \"lib\" &\n+                                                   Directory_Separator);\n+                                       end if;\n \n-                                    if GCC_Index /= 0 then\n-                                       GCC_Index := GCC_Index + 3;\n+                                       --  If we have found a \"lib\" subdir in\n+                                       --  the path to libgnat, the possible\n+                                       --  shared libgcc of interest by default\n+                                       --  is in libgcc_subdir at the same\n+                                       --  level.\n+\n+                                       if GCC_Index /= 0 then\n+                                          declare\n+                                             Subdir : constant String :=\n+                                               Value (Libgcc_Subdir_Ptr);\n+                                          begin\n+                                             Path\n+                                               (GCC_Index + 1 ..\n+                                                GCC_Index + Subdir'Length) :=\n+                                               Subdir;\n+                                             GCC_Index :=\n+                                               GCC_Index + Subdir'Length;\n+                                          end;\n+                                       end if;\n                                     end if;\n-                                 end if;\n \n                                  --  Look for an eventual run_path_option in\n                                  --  the linker switches.\n \n-                                 if Separate_Run_Path_Options then\n-                                    Linker_Options.Increment_Last;\n-                                    Linker_Options.Table\n-                                      (Linker_Options.Last) :=\n-                                      new String'\n-                                        (Run_Path_Opt\n-                                         & File_Path\n-                                           (1 .. File_Path'Length\n-                                            - File_Name'Length));\n-\n-                                    if GCC_Index /= 0 then\n+                                    if Separate_Run_Path_Options then\n                                        Linker_Options.Increment_Last;\n                                        Linker_Options.Table\n                                          (Linker_Options.Last) :=\n                                          new String'\n                                            (Run_Path_Opt\n-                                            & File_Path (1 .. GCC_Index));\n-                                    end if;\n-                                 else\n-                                    for J in reverse\n-                                      1 .. Linker_Options.Last\n-                                    loop\n-                                       if Linker_Options.Table (J) /= null\n-                                         and then\n-                                           Linker_Options.Table (J)'Length\n-                                           > Run_Path_Opt'Length\n-                                         and then\n-                                           Linker_Options.Table (J)\n-                                           (1 .. Run_Path_Opt'Length) =\n-                                           Run_Path_Opt\n-                                       then\n-                                          --  We have found a already specified\n-                                          --  run_path_option: we will add to\n-                                          --  this switch, because only one\n-                                          --  run_path_option should be\n-                                          --  specified.\n-\n-                                          Run_Path_Opt_Index := J;\n-                                          exit;\n-                                       end if;\n-                                    end loop;\n+                                            & File_Path\n+                                              (1 .. File_Path'Length\n+                                               - File_Name'Length));\n \n-                                    --  If there is no run_path_option, we need\n-                                    --  to add one.\n-\n-                                    if Run_Path_Opt_Index = 0 then\n-                                       Linker_Options.Increment_Last;\n-                                    end if;\n-\n-                                    if GCC_Index = 0 then\n-                                       if Run_Path_Opt_Index = 0 then\n+                                       if GCC_Index /= 0 then\n+                                          Linker_Options.Increment_Last;\n                                           Linker_Options.Table\n                                             (Linker_Options.Last) :=\n                                             new String'\n                                               (Run_Path_Opt\n-                                               & File_Path\n-                                                 (1 .. File_Path'Length\n-                                                  - File_Name'Length));\n-\n-                                       else\n-                                          Linker_Options.Table\n-                                            (Run_Path_Opt_Index) :=\n-                                            new String'\n-                                              (Linker_Options.Table\n-                                                   (Run_Path_Opt_Index).all\n-                                               & Path_Separator\n-                                               & File_Path\n-                                                 (1 .. File_Path'Length\n-                                                  - File_Name'Length));\n+                                               & Path (1 .. GCC_Index));\n                                        end if;\n-\n                                     else\n+                                       for J in reverse\n+                                         1 .. Linker_Options.Last\n+                                       loop\n+                                          if Linker_Options.Table (J) /= null\n+                                            and then\n+                                              Linker_Options.Table (J)'Length\n+                                              > Run_Path_Opt'Length\n+                                            and then\n+                                              Linker_Options.Table (J)\n+                                              (1 .. Run_Path_Opt'Length) =\n+                                              Run_Path_Opt\n+                                          then\n+                                             --  We have found a already\n+                                             --  specified run_path_option: we\n+                                             --  will add to this switch,\n+                                             --  because only one\n+                                             --  run_path_option should be\n+                                             --  specified.\n+\n+                                             Run_Path_Opt_Index := J;\n+                                             exit;\n+                                          end if;\n+                                       end loop;\n+\n+                                       --  If there is no run_path_option, we\n+                                       --  need to add one.\n+\n                                        if Run_Path_Opt_Index = 0 then\n-                                          Linker_Options.Table\n-                                            (Linker_Options.Last) :=\n-                                            new String'(Run_Path_Opt\n-                                              & File_Path\n-                                                (1 .. File_Path'Length\n-                                                 - File_Name'Length)\n-                                              & Path_Separator\n-                                              & File_Path (1 .. GCC_Index));\n+                                          Linker_Options.Increment_Last;\n+                                       end if;\n+\n+                                       if GCC_Index = 0 then\n+                                          if Run_Path_Opt_Index = 0 then\n+                                             Linker_Options.Table\n+                                               (Linker_Options.Last) :=\n+                                               new String'\n+                                                 (Run_Path_Opt\n+                                                  & File_Path\n+                                                    (1 .. File_Path'Length\n+                                                     - File_Name'Length));\n+\n+                                          else\n+                                             Linker_Options.Table\n+                                               (Run_Path_Opt_Index) :=\n+                                               new String'\n+                                                 (Linker_Options.Table\n+                                                      (Run_Path_Opt_Index).all\n+                                                  & Path_Separator\n+                                                  & File_Path\n+                                                    (1 .. File_Path'Length\n+                                                     - File_Name'Length));\n+                                          end if;\n \n                                        else\n-                                          Linker_Options.Table\n-                                            (Run_Path_Opt_Index) :=\n-                                            new String'\n-                                              (Linker_Options.Table\n-                                                   (Run_Path_Opt_Index).all\n-                                               & Path_Separator\n-                                               & File_Path\n-                                                 (1 .. File_Path'Length\n-                                                  - File_Name'Length)\n-                                               & Path_Separator\n-                                               & File_Path (1 .. GCC_Index));\n+                                          if Run_Path_Opt_Index = 0 then\n+                                             Linker_Options.Table\n+                                               (Linker_Options.Last) :=\n+                                               new String'(Run_Path_Opt\n+                                                 & File_Path\n+                                                   (1 .. File_Path'Length\n+                                                    - File_Name'Length)\n+                                                 & Path_Separator\n+                                                 & Path (1 .. GCC_Index));\n+\n+                                          else\n+                                             Linker_Options.Table\n+                                               (Run_Path_Opt_Index) :=\n+                                               new String'\n+                                                 (Linker_Options.Table\n+                                                      (Run_Path_Opt_Index).all\n+                                                  & Path_Separator\n+                                                  & File_Path\n+                                                    (1 .. File_Path'Length\n+                                                     - File_Name'Length)\n+                                                  & Path_Separator\n+                                                  & Path (1 .. GCC_Index));\n+                                          end if;\n                                        end if;\n                                     end if;\n-                                 end if;\n+                                 end;\n                               end if;\n                            end if;\n "}, {"sha": "1cf6cfd85d7ce6aefba40ef41baa2c415a19f5d1", "filename": "gcc/ada/link.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "patch": "@@ -71,6 +71,9 @@\n /*  separate_run_path_options is set to 1 when separate \"rpath\" arguments   */\n /*  must be passed to the linker for each directory in the rpath.           */\n \n+/*  default_libgcc_subdir is the subdirectory name (from the installation   */\n+/*  root) where we may find a shared libgcc to use by default.              */\n+\n /*  RESPONSE FILE & GNU LINKER                                              */\n /*  --------------------------                                              */\n /*  objlist_file_supported and using_gnu_link used together tell gnatlink   */\n@@ -96,6 +99,7 @@ char __gnat_shared_libgcc_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n \n #elif defined (sgi)\n const char *__gnat_object_file_option = \"-Wl,-objectlist,\";\n@@ -108,6 +112,15 @@ unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n \n+/* The libgcc_s locations have changed in GCC 4.  The n32 version used\n+   to be in \"lib\", it moved to \"lib32\" and \"lib\" became the home of\n+   the o32 version.  We are targetting n32 by default, so ... */\n+#if __GNUC__ < 4\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n+#else\n+const char *__gnat_default_libgcc_subdir = \"lib32\";\n+#endif\n+\n #elif defined (__WIN32)\n const char *__gnat_object_file_option = \"\";\n const char *__gnat_run_path_option = \"\";\n@@ -118,6 +131,7 @@ char __gnat_shared_libgcc_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n \n #elif defined (__hpux__)\n const char *__gnat_object_file_option = \"-Wl,-c,\";\n@@ -129,6 +143,7 @@ char __gnat_shared_libgcc_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n \n #elif defined (_AIX)\n const char *__gnat_object_file_option = \"-Wl,-f,\";\n@@ -140,6 +155,7 @@ char __gnat_shared_libgcc_default = STATIC;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n \n #elif defined (VMS)\n const char *__gnat_object_file_option = \"\";\n@@ -151,6 +167,7 @@ unsigned char __gnat_objlist_file_supported = 0;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".olb\";\n unsigned char __gnat_separate_run_path_options = 0;\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n \n #elif defined (sun)\n const char *__gnat_object_file_option = \"\";\n@@ -162,6 +179,13 @@ unsigned char __gnat_objlist_file_supported = 0;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n+#if defined (__sparc_v9__) || defined (__sparcv9)\n+const char *__gnat_default_libgcc_subdir = \"lib/sparcv9\";\n+#elif defined (__x86_64)\n+const char *__gnat_default_libgcc_subdir = \"lib/amd64\";\n+#else\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n+#endif\n \n #elif defined (__FreeBSD__)\n const char *__gnat_object_file_option = \"\";\n@@ -173,6 +197,7 @@ unsigned char __gnat_objlist_file_supported = 1;\n unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n \n #elif defined (__APPLE__)\n const char *__gnat_object_file_option = \"-Wl,-filelist,\";\n@@ -184,6 +209,7 @@ unsigned char __gnat_objlist_file_supported = 1;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 1;\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n \n #elif defined (linux) || defined(__GLIBC__)\n const char *__gnat_object_file_option = \"\";\n@@ -195,6 +221,11 @@ unsigned char __gnat_objlist_file_supported = 1;\n unsigned char __gnat_using_gnu_linker = 1;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n+#if defined (__x86_64)\n+const char *__gnat_default_libgcc_subdir = \"lib64\";\n+#else\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n+#endif\n \n #elif defined (__svr4__) && defined (i386)\n const char *__gnat_object_file_option = \"\";\n@@ -206,6 +237,7 @@ unsigned char __gnat_objlist_file_supported = 0;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n \n #else\n \n@@ -220,4 +252,5 @@ unsigned char __gnat_objlist_file_supported = 0;\n unsigned char __gnat_using_gnu_linker = 0;\n const char *__gnat_object_library_extension = \".a\";\n unsigned char __gnat_separate_run_path_options = 0;\n+const char *__gnat_default_libgcc_subdir = \"lib\";\n #endif"}, {"sha": "a72687426d9f85f84576ae7af19c9eb72dfc0ab5", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "patch": "@@ -115,6 +115,9 @@ package SCOs is\n    --        expression (if present) or to the return_subtype_indication (if\n    --        no expression)\n \n+   --    and any pragma that occurs at a place where a statement or declaration\n+   --    is allowed.\n+\n    --  Statement lines\n \n    --    These lines correspond to one or more successive statements (in the\n@@ -123,7 +126,9 @@ package SCOs is\n \n    --    Entry points to such sequences are:\n \n-   --      the first statement of any sequence_of_statements\n+   --      the first declaration of any declarative_part\n+   --      the first statement of any sequence_of_statements that is not in a\n+   --        body or block statement that has a non-empty declarative part\n    --      the first statement after a compound statement\n    --      the first statement after an EXIT, RAISE or GOTO statement\n    --      any statement with a label\n@@ -147,21 +152,23 @@ package SCOs is\n    --      i  generic instantiation\n    --      C  CASE statement\n    --      F  FOR loop statement\n+   --      P  PRAGMA\n    --      R  extended RETURN statement\n \n    --    and is omitted for all other cases.\n \n    --  Decisions\n \n-   --    Note: in the following description, logical operator includes the\n-   --    short circuited forms (so can be any of AND, OR, XOR, NOT, AND THEN,\n-   --    or OR ELSE).\n+   --    Note: in the following description, logical operator includes only the\n+   --    short circuited forms (so can be only of NOT, AND THEN, or OR ELSE).\n \n    --    Decisions are either simple or complex. A simple decision is a boolean\n    --    expresssion that occurs in the context of a control structure in the\n-   --    source program, including WHILE, IF, EXIT WHEN. Note that a boolean\n-   --    expression in any other context, for example, on the right side of an\n-   --    assignment, is not considered to be a simple decision.\n+   --    source program, including WHILE, IF, EXIT WHEN, or in an Assert,\n+   --    Check, Pre_Condition or Post_Condition pragma. For pragmas, decision\n+   --    SCOs are generated only if the corresponding pragma is enabled. Note\n+   --    that a boolean expression in any other context, for example as right\n+   --    hand side of an assignment, is not considered to be a simple decision.\n \n    --    A complex decision is an occurrence of a logical operator which is not\n    --    itself an operand of some other logical operator. If any operand of\n@@ -191,11 +198,12 @@ package SCOs is\n \n    --      I  decision in IF statement or conditional expression\n    --      E  decision in EXIT WHEN statement\n+   --      P  decision in pragma Assert/Check/Pre_Condition/Post_Condition\n    --      W  decision in WHILE iteration scheme\n    --      X  decision appearing in some other expression context\n \n-   --    For I, E, W, sloc is the source location of the IF, EXIT or WHILE\n-   --    token.\n+   --    For I, E, P, W, sloc is the source location of the IF, EXIT, PRAGMA or\n+   --    WHILE token.\n \n    --    For X, sloc is omitted.\n \n@@ -206,7 +214,6 @@ package SCOs is\n    --      expression ::= term             (if expr is not logical operator)\n    --      expression ::= &sloc term term  (if expr is AND or AND THEN)\n    --      expression ::= |sloc term term  (if expr is OR or OR ELSE)\n-   --      expression ::= ^sloc term term  (if expr is XOR)\n    --      expression ::= !sloc term       (if expr is NOT)\n \n    --      In the last four cases, sloc is the source location of the AND, OR,\n@@ -226,19 +233,15 @@ package SCOs is\n    --      where t/f are used to mark a condition that has been recognized by\n    --      the compiler as always being true or false.\n \n-   --    & indicates either AND or AND THEN connecting two conditions. In the\n-   --    context of Couverture we only permit AND THEN in the source in any\n-   --    case, so & can always be understood to be AND THEN.\n-\n-   --    | indicates either OR or OR ELSE connection two conditions. In the\n-   --    context of Couverture we only permit OR ELSE in the source in any\n-   --    case, so | can always be understood to be OR ELSE.\n+   --    & indicates AND THEN connecting two conditions.\n \n-   --    ^ indicates XOR connecting two conditions. In the context of\n-   --    Couverture, we do not permit XOR, so this will never appear.\n+   --    | indicates OR ELSE connecting two conditions.\n \n    --    ! indicates NOT applied to the expression.\n \n+   --    In the context of Couverture, the No_Direct_Boolean_Opeartors\n+   --    restriction is assumed, and no other operator can appear.\n+\n    ---------------------------------------------------------------------\n    -- Internal table used to store Source Coverage Obligations (SCOs) --\n    ---------------------------------------------------------------------\n@@ -269,8 +272,9 @@ package SCOs is\n \n    --    Statements\n    --      C1   = 'S' for entry point, 's' otherwise\n-   --      C2   = 't', 's', 'o', 'r', 'i', 'C', 'F', 'R', ' '\n-   --             (type/subtype/object/renaming/instantiation/CASE/FOR/RETURN)\n+   --      C2   = 't', 's', 'o', 'r', 'i', 'C', 'F', 'P', 'R', ' '\n+   --             (type/subtype/object/renaming/instantiation/\n+   --              CASE/FOR/PRAGMA/RETURN/other)\n    --      From = starting source location\n    --      To   = ending source location\n    --      Last = False for all but the last entry, True for last entry\n@@ -282,9 +286,10 @@ package SCOs is\n    --    statements on a single CS line.\n \n    --    Decision\n-   --      C1   = 'I', 'E', 'W', 'X' (if/exit/while/expression)\n+   --      C1   = 'I', 'E', 'P', 'W', 'X' (if/exit/pragma/while/expression)\n    --      C2   = ' '\n-   --      From = location of IF/EXIT/WHILE token, No_Source_Location for X\n+   --      From = location of IF/EXIT/PRAGMA/WHILE token,\n+   --             No_Source_Location for X\n    --      To   = No_Source_Location\n    --      Last = unused\n "}, {"sha": "0746ea99b80e42d8515e32280e95cf9cd9d648eb", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "patch": "@@ -8352,10 +8352,15 @@ package body Sem_Ch6 is\n                   Make_Handled_Sequence_Of_Statements (Loc,\n                     Statements => Plist)));\n \n-            --  If this is a procedure, set the Postcondition_Proc attribute\n+            --  If this is a procedure, set the Postcondition_Proc attribute on\n+            --  the proper defining entity for the subprogram.\n \n             if Etype (Subp) = Standard_Void_Type then\n-               Set_Postcondition_Proc (Spec_Id, Post_Proc);\n+               if Present (Spec_Id) then\n+                  Set_Postcondition_Proc (Spec_Id, Post_Proc);\n+               else\n+                  Set_Postcondition_Proc (Body_Id, Post_Proc);\n+               end if;\n             end if;\n          end;\n "}, {"sha": "1e742e588b8abf00b9b5aecd0ac32a311e22595e", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=3bb3f6d6e0e479dfbdbd838d8659fbfc763eaf09", "patch": "@@ -5265,8 +5265,19 @@ package body Sem_Prag is\n                      if Is_Entity_Name (Exp) then\n                         null;\n \n+                     --  Determine the string type from the presence\n+                     --  Wide (_Wide) characters.\n+\n                      elsif Nkind (Exp) = N_String_Literal then\n-                        Resolve (Exp, Standard_String);\n+                        if Has_Wide_Wide_Character (Exp) then\n+                           Resolve (Exp, Standard_Wide_Wide_String);\n+\n+                        elsif Has_Wide_Character (Exp) then\n+                           Resolve (Exp, Standard_Wide_String);\n+\n+                        else\n+                           Resolve (Exp, Standard_String);\n+                        end if;\n \n                      elsif Is_Overloaded (Exp) then\n                            Error_Pragma_Arg"}]}