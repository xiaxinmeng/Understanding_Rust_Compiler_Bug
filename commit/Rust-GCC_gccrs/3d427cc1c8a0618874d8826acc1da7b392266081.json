{"sha": "3d427cc1c8a0618874d8826acc1da7b392266081", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q0MjdjYzFjOGEwNjE4ODc0ZDg4MjZhY2MxZGE3YjM5MjI2NjA4MQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2012-01-26T10:04:43Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2012-01-26T10:04:43Z"}, "message": "s390.h: Make BRANCH_COST an option.\n\n2012-01-26  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.h: Make BRANCH_COST an option.\n\t* config/s390/s390.opt: New option -mbranch-cost.\n\n2012-01-26  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* gcc.dg/pr46309.c: Set branch-cost to 2 for s390 and s390x.\n\t* gcc.dg/pr44194-1.c: Disable since s390 returns structs always in\n\tmemory.\n\t* gfortran.dg/reassoc_4.f: Force max-completely-peeled-insns to\n\tthe default value for s390 and s390x.\n\nFrom-SVN: r183555", "tree": {"sha": "3845fc40ddfc591db5e9a6054579c807a2ac7c89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3845fc40ddfc591db5e9a6054579c807a2ac7c89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d427cc1c8a0618874d8826acc1da7b392266081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d427cc1c8a0618874d8826acc1da7b392266081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d427cc1c8a0618874d8826acc1da7b392266081", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d427cc1c8a0618874d8826acc1da7b392266081/comments", "author": null, "committer": null, "parents": [{"sha": "2887732181ebf03ccc8d04521207b38437183cd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2887732181ebf03ccc8d04521207b38437183cd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2887732181ebf03ccc8d04521207b38437183cd9"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "e9b140e069a2035d07ec62e2e008db19054142f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d427cc1c8a0618874d8826acc1da7b392266081", "patch": "@@ -1,3 +1,8 @@\n+2012-01-26  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.h: Make BRANCH_COST an option.\n+\t* config/s390/s390.opt: New option -mbranch-cost.\n+\n 2012-01-26  Richard Henderson  <rth@redhat.com>\n \n \tRevert 2012-01-24 change:"}, {"sha": "edc6399789e6d9e62efcaa659572b0cb123e03d1", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=3d427cc1c8a0618874d8826acc1da7b392266081", "patch": "@@ -722,7 +722,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* A C expression for the cost of a branch instruction.  A value of 1\n    is the default; other values are interpreted relative to that.  */\n-#define BRANCH_COST(speed_p, predictable_p) 1\n+#define BRANCH_COST(speed_p, predictable_p) s390_branch_cost\n \n /* Nonzero if access to memory by bytes is slow and undesirable.  */\n #define SLOW_BYTE_ACCESS 1"}, {"sha": "51b395ee99d19a282f5eed070af2ca2dc4975dbf", "filename": "gcc/config/s390/s390.opt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Fconfig%2Fs390%2Fs390.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Fconfig%2Fs390%2Fs390.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.opt?ref=3d427cc1c8a0618874d8826acc1da7b392266081", "patch": "@@ -140,3 +140,9 @@ Warn if a single function's framesize exceeds the given framesize\n mzarch\n Target Report RejectNegative Negative(mesa) Mask(ZARCH)\n z/Architecture\n+\n+mbranch-cost=\n+Target Report Joined RejectNegative UInteger Var(s390_branch_cost) Init(1)\n+Set the branch costs for conditional branch instructions.  Reasonable\n+values are small, non-negative integers.  The default branch cost is\n+1."}, {"sha": "0905ff1e5f705a1801e785a49f18a5ec8c100552", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d427cc1c8a0618874d8826acc1da7b392266081", "patch": "@@ -1,3 +1,11 @@\n+2012-01-26  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* gcc.dg/pr46309.c: Set branch-cost to 2 for s390 and s390x.\n+\t* gcc.dg/pr44194-1.c: Disable since s390 returns structs always in\n+\tmemory.\n+\t* gfortran.dg/reassoc_4.f: Force max-completely-peeled-insns to\n+\tthe default value for s390 and s390x.\n+\n 2012-01-25  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR lto/51698"}, {"sha": "df042cd8d53867f12a18bc9eb855f6e0131c9959", "filename": "gcc/testsuite/gcc.dg/pr44194-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44194-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44194-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44194-1.c?ref=3d427cc1c8a0618874d8826acc1da7b392266081", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { { i?86-*-* x86_64-*-* } && x32 } || lp64 } } } */\n+/* { dg-do compile { target { { { { i?86-*-* x86_64-*-* } && x32 } || lp64 } && { ! s390*-*-* } } } } */\n /* { dg-options \"-O2 -fdump-rtl-dse1\" } */\n /* Restricting to 64-bit targets since 32-bit targets return\n    structures in memory.  */"}, {"sha": "68a344a1bdc2d169723dd604ff52adee8967fa33", "filename": "gcc/testsuite/gcc.dg/pr46309.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46309.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46309.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46309.c?ref=3d427cc1c8a0618874d8826acc1da7b392266081", "patch": "@@ -4,7 +4,7 @@\n /* The transformation depends on BRANCH_COST being greater than 1\n    (see the notes in the PR), so try to force that.  */\n /* { dg-additional-options \"-mtune=octeon2\" { target mips*-*-* } } */\n-/* { dg-additional-options \"-mbranch-cost=2\" { target avr*-*-* } } */\n+/* { dg-additional-options \"-mbranch-cost=2\" { target avr*-*-* s390*-*-* } } */\n \n int\n f1 (int a)"}, {"sha": "8ed7e19f79346f767c5287dab7beac7408c792a3", "filename": "gcc/testsuite/gfortran.dg/reassoc_4.f", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Ftestsuite%2Fgfortran.dg%2Freassoc_4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d427cc1c8a0618874d8826acc1da7b392266081/gcc%2Ftestsuite%2Fgfortran.dg%2Freassoc_4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freassoc_4.f?ref=3d427cc1c8a0618874d8826acc1da7b392266081", "patch": "@@ -1,6 +1,7 @@\n ! { dg-do compile }\n ! { dg-options \"-O3 -ffast-math -fdump-tree-reassoc1\" }\n ! { dg-options \"-O3 -ffast-math -fdump-tree-reassoc1 --param max-completely-peel-times=16\" { target spu-*-* } }\n+! { dg-options \"-O3 -ffast-math -fdump-tree-reassoc1 --param max-completely-peeled-insns=400\" { target s390*-*-* } }\n       subroutine anisonl(w,vo,anisox,s,ii1,jj1,weight)\n       integer ii1,jj1,i1,iii1,j1,jjj1,k1,l1,m1,n1\n       real*8 w(3,3),vo(3,3),anisox(3,3,3,3),s(60,60),weight"}]}