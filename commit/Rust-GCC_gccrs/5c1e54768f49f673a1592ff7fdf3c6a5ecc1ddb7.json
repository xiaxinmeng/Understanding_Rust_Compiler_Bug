{"sha": "5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMxZTU0NzY4ZjQ5ZjY3M2ExNTkyZmY3ZmRmM2M2YTVlY2MxZGRiNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-08-11T14:09:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-08-11T14:09:15Z"}, "message": "cp-tree.h (resolve_scope_to_name): Remove unused prototype.\n\n\t* cp-tree.h (resolve_scope_to_name): Remove unused prototype.\n\t(lookup_nested_tag): Likewise.\n\n\t* decl2.c (grokfield): Fix comment to reflect many types of _DECLs\n\tcan be produced.\n\nFrom-SVN: r35634", "tree": {"sha": "8a00be42a904b7a6049c77ec6a6c634382d4ee1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a00be42a904b7a6049c77ec6a6c634382d4ee1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7/comments", "author": null, "committer": null, "parents": [{"sha": "5426aa7fafc067ebf2561df10ac5293723c41043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5426aa7fafc067ebf2561df10ac5293723c41043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5426aa7fafc067ebf2561df10ac5293723c41043"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "2ce3f448605bea835dbd8179a8deb1d343f6923d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7", "patch": "@@ -1,3 +1,11 @@\n+2000-08-11  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cp-tree.h (resolve_scope_to_name): Remove unused prototype.\n+\t(lookup_nested_tag): Likewise.\n+\t\n+\t* decl2.c (grokfield): Fix comment to reflect many types of _DECLs\n+\tcan be produced.\n+\n 2000-08-11  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* parse.y (named_complex_class_head_sans_basetype): Remove"}, {"sha": "e4b4feba719c0a122319d327d2d8c7afbd0c579f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7", "patch": "@@ -3777,7 +3777,6 @@ extern int check_dtor_name\t\t\tPARAMS ((tree, tree));\n extern int get_arglist_len_in_bytes\t\tPARAMS ((tree));\n \n extern tree build_vfield_ref\t\t\tPARAMS ((tree, tree));\n-extern tree resolve_scope_to_name\t\tPARAMS ((tree, tree));\n extern tree build_scoped_method_call\t\tPARAMS ((tree, tree, tree, tree));\n extern tree build_addr_func\t\t\tPARAMS ((tree));\n extern tree build_call\t\t\t\tPARAMS ((tree, tree));\n@@ -4313,7 +4312,6 @@ extern tree lookup_field\t\t\tPARAMS ((tree, tree, int, int));\n extern int lookup_fnfields_1                    PARAMS ((tree, tree));\n extern tree lookup_fnfields\t\t\tPARAMS ((tree, tree, int));\n extern tree lookup_member\t\t\tPARAMS ((tree, tree, int, int));\n-extern tree lookup_nested_tag\t\t\tPARAMS ((tree, tree));\n extern tree get_matching_virtual\t\tPARAMS ((tree, tree, int));\n extern void get_pure_virtuals\t\t        PARAMS ((tree));\n extern tree init_vbase_pointers\t\t\tPARAMS ((tree, tree));"}, {"sha": "7422be17761039ea4fa8328c331cfca3ca257141", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5c1e54768f49f673a1592ff7fdf3c6a5ecc1ddb7", "patch": "@@ -1615,16 +1615,14 @@ finish_static_data_member_decl (decl, init, asmspec_tree, flags)\n }\n \n /* Process the specs, declarator (NULL if omitted) and width (NULL if omitted)\n-   of a structure component, returning a FIELD_DECL node.\n+   of a structure component, returning a _DECL node.\n    QUALS is a list of type qualifiers for this decl (such as for declaring\n    const member functions).\n \n    This is done during the parsing of the struct declaration.\n-   The FIELD_DECL nodes are chained together and the lot of them\n+   The _DECL nodes are chained together and the lot of them\n    are ultimately passed to `build_struct' to make the RECORD_TYPE node.\n \n-   C++:\n-\n    If class A defines that certain functions in class B are friends, then\n    the way I have set things up, it is B who is interested in permission\n    granted by A.  However, it is in A's context that these declarations"}]}