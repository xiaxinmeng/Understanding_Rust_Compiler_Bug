{"sha": "ccd63d90d14a15e87224d8fba54870ab78167a25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NkNjNkOTBkMTRhMTVlODcyMjRkOGZiYTU0ODcwYWI3ODE2N2EyNQ==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-04-26T19:05:06Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-04-26T19:05:06Z"}, "message": "* config/c4x/c4x.md (*cmpqf, *cmpqf_noov, *cmpqi_test,\n\n\t*cmpqi_test_noov): Remove ? modifier from constraints list.\n\t(*smulqi3_highpart_clobber, *umulqi3_highpart_clobber): Swap\n\toutput strings to match new constraint ordering.\n\nFrom-SVN: r26660", "tree": {"sha": "879eefe6f3b086ddb8449bb5f64a5cdab6ec9c6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/879eefe6f3b086ddb8449bb5f64a5cdab6ec9c6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccd63d90d14a15e87224d8fba54870ab78167a25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd63d90d14a15e87224d8fba54870ab78167a25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccd63d90d14a15e87224d8fba54870ab78167a25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd63d90d14a15e87224d8fba54870ab78167a25/comments", "author": null, "committer": null, "parents": [{"sha": "3caee4a8ee44a285efab9a80cf765c05f3209eb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3caee4a8ee44a285efab9a80cf765c05f3209eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3caee4a8ee44a285efab9a80cf765c05f3209eb5"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "ccb0196c2d8c122ca949044b8da77507233adaa8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd63d90d14a15e87224d8fba54870ab78167a25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd63d90d14a15e87224d8fba54870ab78167a25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccd63d90d14a15e87224d8fba54870ab78167a25", "patch": "@@ -1,3 +1,10 @@\n+Tue Apr 27 13:58:23 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.md (*cmpqf, *cmpqf_noov, *cmpqi_test, \n+\t*cmpqi_test_noov): Remove ? modifier from constraints list.\n+\t(*smulqi3_highpart_clobber, *umulqi3_highpart_clobber): Swap\n+\toutput strings to match new constraint ordering.\n+\n 1999-04-26 19:16 -0400  Zack Weinberg  <zack@rabi.columbia.edu>\n \n \t* cpphash.c (dump_definition): New function."}, {"sha": "a4cb7b0900af9652a1f203dd17076143630af8bb", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd63d90d14a15e87224d8fba54870ab78167a25/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd63d90d14a15e87224d8fba54870ab78167a25/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=ccd63d90d14a15e87224d8fba54870ab78167a25", "patch": "@@ -2106,12 +2106,12 @@\n    (clobber (reg:CC_NOOV 21))]\n   \"! TARGET_C3X && valid_operands (MULT, operands, QImode)\"\n   \"@\n+   mpyshi\\\\t%2,%0\n    mpyshi3\\\\t%2,%1,%0\n    mpyshi3\\\\t%2,%1,%0\n    mpyshi\\\\t%2,%0\n    mpyshi3\\\\t%2,%1,%0\n-   mpyshi3\\\\t%2,%1,%0\n-   mpyshi\\\\t%2,%0\"\n+   mpyshi3\\\\t%2,%1,%0\"\n   [(set_attr \"type\" \"binarycc,binarycc,binarycc,binary,binary,binary\")\n    (set_attr \"data\" \"int16,int16,int16,int16,int16,int16\")])\n \n@@ -2147,12 +2147,12 @@\n    (clobber (reg:CC_NOOV 21))]\n   \"! TARGET_C3X && valid_operands (MULT, operands, QImode)\"\n   \"@\n+   mpyuhi\\\\t%2,%0\n    mpyuhi3\\\\t%2,%1,%0\n    mpyuhi3\\\\t%2,%1,%0\n    mpyuhi\\\\t%2,%0\n    mpyuhi3\\\\t%2,%1,%0\n-   mpyuhi3\\\\t%2,%1,%0\n-   mpyuhi\\\\t%2,%0\"\n+   mpyuhi3\\\\t%2,%1,%0\"\n   [(set_attr \"type\" \"binarycc,binarycc,binarycc,binary,binary,binary\")\n    (set_attr \"data\" \"uint16,uint16,uint16,uint16,uint16,uint16\")])\n \n@@ -2711,24 +2711,24 @@\n \n (define_insn \"*cmpqi_test\"\n   [(set (reg:CC 21)\n-        (compare:CC (match_operand:QI 0 \"src_operand\" \"rR,?rS<>,r\")\n-                    (match_operand:QI 1 \"src_operand\" \"JR,rS<>,rIm\")))]\n+        (compare:CC (match_operand:QI 0 \"src_operand\" \"r,rR,rS<>\")\n+                    (match_operand:QI 1 \"src_operand\" \"rIm,JR,rS<>\")))]\n   \"valid_operands (COMPARE, operands, QImode)\"\n   \"@\n+   cmpi\\\\t%1,%0\n    cmpi3\\\\t%1,%0\n-   cmpi3\\\\t%1,%0\n-   cmpi\\\\t%1,%0\"\n+   cmpi3\\\\t%1,%0\"\n   [(set_attr \"type\" \"compare,compare,compare\")])\n \n (define_insn \"*cmpqi_test_noov\"\n   [(set (reg:CC_NOOV 21)\n-        (compare:CC_NOOV (match_operand:QI 0 \"src_operand\" \"rR,?rS<>,r\")\n-                         (match_operand:QI 1 \"src_operand\" \"JR,rS<>,rIm\")))]\n+        (compare:CC_NOOV (match_operand:QI 0 \"src_operand\" \"r,rR,rS<>\")\n+                         (match_operand:QI 1 \"src_operand\" \"rIm,JR,rS<>\")))]\n   \"valid_operands (COMPARE, operands, QImode)\"\n   \"@\n+   cmpi\\\\t%1,%0\n    cmpi3\\\\t%1,%0\n-   cmpi3\\\\t%1,%0\n-   cmpi\\\\t%1,%0\"\n+   cmpi3\\\\t%1,%0\"\n   [(set_attr \"type\" \"compare,compare,compare\")])\n \n (define_expand \"udivqi3\"\n@@ -3689,7 +3689,7 @@\n \n (define_insn \"*cmpqf\"\n   [(set (reg:CC 21)\n-        (compare:CC (match_operand:QF 0 \"src_operand\" \"fR,?fS<>,f\")\n+        (compare:CC (match_operand:QF 0 \"src_operand\" \"f,fR,fS<>\")\n                     (match_operand:QF 1 \"src_operand\" \"fHm,R,fS<>\")))]\n   \"valid_operands (COMPARE, operands, QFmode)\"\n   \"@\n@@ -3700,7 +3700,7 @@\n \n (define_insn \"*cmpqf_noov\"\n   [(set (reg:CC_NOOV 21)\n-        (compare:CC_NOOV (match_operand:QF 0 \"src_operand\" \"fR,?fS<>,f\")\n+        (compare:CC_NOOV (match_operand:QF 0 \"src_operand\" \"f,fR,fS<>\")\n                          (match_operand:QF 1 \"src_operand\" \"fHm,R,fS<>\")))]\n   \"valid_operands (COMPARE, operands, QFmode)\"\n   \"@"}]}