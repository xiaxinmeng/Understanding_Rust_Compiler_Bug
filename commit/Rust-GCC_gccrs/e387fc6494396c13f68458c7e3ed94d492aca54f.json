{"sha": "e387fc6494396c13f68458c7e3ed94d492aca54f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM4N2ZjNjQ5NDM5NmMxM2Y2ODQ1OGM3ZTNlZDk0ZDQ5MmFjYTU0Zg==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2016-04-14T13:44:17Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2016-04-14T13:44:17Z"}, "message": "re PR middle-end/70643 (broken openacc reduction inside a fortran module)\n\n\tPR middle-end/70643\n\n\tgcc/\n\t* omp-low.c (lower_oacc_reductions): Check for TREE_CONSTANT\n\twhen building a mem ref for the incoming reduction variable.\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-fortran/pr70643.f90: New test.\n\nFrom-SVN: r234973", "tree": {"sha": "fd4a4a91473cffc90c7a2d4498805190de428f88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd4a4a91473cffc90c7a2d4498805190de428f88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e387fc6494396c13f68458c7e3ed94d492aca54f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e387fc6494396c13f68458c7e3ed94d492aca54f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e387fc6494396c13f68458c7e3ed94d492aca54f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e387fc6494396c13f68458c7e3ed94d492aca54f/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e21401b6b11f87986ee08499619b861c6964286c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e21401b6b11f87986ee08499619b861c6964286c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e21401b6b11f87986ee08499619b861c6964286c"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "ca2a9a746008c5a19f71cc3d51ffee8430b4d801", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e387fc6494396c13f68458c7e3ed94d492aca54f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e387fc6494396c13f68458c7e3ed94d492aca54f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e387fc6494396c13f68458c7e3ed94d492aca54f", "patch": "@@ -1,3 +1,9 @@\n+2016-04-14  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR middle-end/70643\n+\t* omp-low.c (lower_oacc_reductions): Check for TREE_CONSTANT\n+\twhen building a mem ref for the incoming reduction variable.\n+\n 2016-04-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70614"}, {"sha": "aa3721edc9da9adc4a3bf609224c796bf2426376", "filename": "gcc/omp-low.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e387fc6494396c13f68458c7e3ed94d492aca54f/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e387fc6494396c13f68458c7e3ed94d492aca54f/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=e387fc6494396c13f68458c7e3ed94d492aca54f", "patch": "@@ -5691,7 +5691,7 @@ lower_oacc_reductions (location_t loc, tree clauses, tree level, bool inner,\n \t    v3 = build_simple_mem_ref (v3);\n \t    outgoing = build_simple_mem_ref (outgoing);\n \n-\t    if (TREE_CODE (incoming) != INTEGER_CST)\n+\t    if (!TREE_CONSTANT (incoming))\n \t      incoming = build_simple_mem_ref (incoming);\n \t  }\n \telse"}, {"sha": "89ee866ac4c7f1ae07df0b79c64f3bd67514979a", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e387fc6494396c13f68458c7e3ed94d492aca54f/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e387fc6494396c13f68458c7e3ed94d492aca54f/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e387fc6494396c13f68458c7e3ed94d492aca54f", "patch": "@@ -1,3 +1,8 @@\n+2016-04-14  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR middle-end/70643\n+\t* testsuite/libgomp.oacc-fortran/pr70643.f90: New test.\n+\n 2016-04-13  Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR testsuite/68242"}, {"sha": "7c2e5eef90477c5e0be7ab4b46c169e9946aa513", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pr70643.f90", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e387fc6494396c13f68458c7e3ed94d492aca54f/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr70643.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e387fc6494396c13f68458c7e3ed94d492aca54f/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr70643.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr70643.f90?ref=e387fc6494396c13f68458c7e3ed94d492aca54f", "patch": "@@ -0,0 +1,51 @@\n+MODULE reduction_test\n+\n+CONTAINS\n+\n+SUBROUTINE reduction_kernel(x_min,x_max,y_min,y_max,arr,sum)\n+\n+  IMPLICIT NONE\n+\n+  INTEGER      :: x_min,x_max,y_min,y_max\n+  REAL(KIND=8), DIMENSION(x_min-2:x_max+2,y_min-2:y_max+2) :: arr\n+  REAL(KIND=8) :: sum\n+\n+  INTEGER      :: j,k\n+\n+!$ACC DATA PRESENT(arr) COPY(sum)\n+!$ACC PARALLEL LOOP REDUCTION(+ : sum)\n+  DO k=y_min,y_max\n+    DO j=x_min,x_max\n+      sum=sum+arr(j,k)\n+    ENDDO\n+  ENDDO\n+!$ACC END PARALLEL LOOP\n+!$ACC END DATA\n+END SUBROUTINE reduction_kernel\n+\n+END MODULE reduction_test\n+\n+program main\n+    use reduction_test\n+\n+    integer :: x_min,x_max,y_min,y_max\n+    real(kind=8), dimension(1:10,1:10) :: arr\n+    real(kind=8) :: sum\n+\n+    x_min = 1\n+    x_max = 2\n+    y_min = 1\n+    y_max = 2\n+\n+    arr(:,:) = 1.0\n+\n+    sum = 0.0\n+\n+    !$acc data copy(arr)\n+\n+    call reduction_kernel(x_min,x_max,y_min,y_max,arr,sum)\n+\n+    !$acc end data\n+\n+    if (sum .ne. 4.0) call abort\n+end program"}]}