{"sha": "848e0190fb94ea253031af77f52842117522f79b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ4ZTAxOTBmYjk0ZWEyNTMwMzFhZjc3ZjUyODQyMTE3NTIyZjc5Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-02-13T20:17:45Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-02-13T20:17:45Z"}, "message": "cse.c (cse_main): Converts ifdefs on PIC_OFFSET_TABLE_REGNUM to conditionals.\n\n\t* cse.c (cse_main): Converts ifdefs on PIC_OFFSET_TABLE_REGNUM to\n\tconditionals.\n\t* defaults.h (PIC_OFFSET_TABLE_REGNUM): Default to INVALID_REGNUM.\n\t* emit-rtl.c (init_emit_once): Convert ifdefs to conditionals.\n\t* flow.c (mark_regs_live_at_end): Likewise.\n\t(calculate_global_regs_live): Likewise.\n\t* gcse.c (compute_hash_table): Likewise.\n\t(compute_kill_rd): Likewise.\n\t* resource.c (mark_target_live_regs): Likewise.\n\t* rtl.h (INVALID_REGNUM): New macro.\n\nFrom-SVN: r39643", "tree": {"sha": "c39d29448a716750181bae4b37680fbdc9397d5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c39d29448a716750181bae4b37680fbdc9397d5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/848e0190fb94ea253031af77f52842117522f79b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848e0190fb94ea253031af77f52842117522f79b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/848e0190fb94ea253031af77f52842117522f79b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848e0190fb94ea253031af77f52842117522f79b/comments", "author": null, "committer": null, "parents": [{"sha": "b1675dbd664a6f1ac664bb902f8f7a5779761a1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1675dbd664a6f1ac664bb902f8f7a5779761a1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1675dbd664a6f1ac664bb902f8f7a5779761a1b"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "f48ac5403e6ef4d707f44c816c6786f16ba9420f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848e0190fb94ea253031af77f52842117522f79b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848e0190fb94ea253031af77f52842117522f79b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=848e0190fb94ea253031af77f52842117522f79b", "patch": "@@ -1,3 +1,16 @@\n+Tue Feb 13 21:09:11 CET 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cse.c (cse_main): Converts ifdefs on PIC_OFFSET_TABLE_REGNUM to\n+\tconditionals.\n+\t* defaults.h (PIC_OFFSET_TABLE_REGNUM): Default to INVALID_REGNUM.\n+\t* emit-rtl.c (init_emit_once): Convert ifdefs to conditionals.\n+\t* flow.c (mark_regs_live_at_end): Likewise.\n+\t(calculate_global_regs_live): Likewise.\n+\t* gcse.c (compute_hash_table): Likewise.\n+\t(compute_kill_rd): Likewise.\n+\t* resource.c (mark_target_live_regs): Likewise.\n+\t* rtl.h (INVALID_REGNUM): New macro.\n+\n Tue Feb 13 20:59:22 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (fixsfsi2, fixdfdi2): Fix previous patch."}, {"sha": "aacc7750fb64960bf2869cafbd430f173fa87bab", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=848e0190fb94ea253031af77f52842117522f79b", "patch": "@@ -7119,7 +7119,7 @@ cse_main (f, nregs, after_loop, file)\n #if ARG_POINTER_REGNUM != FRAME_POINTER_REGNUM\n \t && ! (i == ARG_POINTER_REGNUM && fixed_regs[i])\n #endif\n-#if defined (PIC_OFFSET_TABLE_REGNUM) && !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n+#if !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n \t && ! (i == PIC_OFFSET_TABLE_REGNUM && flag_pic)\n #endif\n \t )"}, {"sha": "098beae440a2c5543eb9391c5c5e74ae7656f03b", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=848e0190fb94ea253031af77f52842117522f79b", "patch": "@@ -296,6 +296,10 @@ do {\t\t\t\t\t\t\t\t\\\n #define BUILD_VA_LIST_TYPE(X) ((X) = ptr_type_node)\n #endif\n \n+#ifndef PIC_OFFSET_TABLE_REGNUM\n+#define PIC_OFFSET_TABLE_REGNUM INVALID_REGNUM\n+#endif\n+\n /* By default, the preprocessor should be invoked the same way in C++\n    as in C.  */\n #ifndef CPLUSPLUS_CPP_SPEC"}, {"sha": "96fea2ccf27e2fa4e05e6d10e8eb19554e8a45d3", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848e0190fb94ea253031af77f52842117522f79b/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848e0190fb94ea253031af77f52842117522f79b/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=848e0190fb94ea253031af77f52842117522f79b", "patch": "@@ -4197,9 +4197,8 @@ init_emit_once (line_numbers)\n #endif\n #endif\n \n-#ifdef PIC_OFFSET_TABLE_REGNUM\n-  pic_offset_table_rtx = gen_rtx_REG (Pmode, PIC_OFFSET_TABLE_REGNUM);\n-#endif\n+  if (PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM)\n+    pic_offset_table_rtx = gen_rtx_REG (Pmode, PIC_OFFSET_TABLE_REGNUM);\n \n   ggc_add_rtx_root (&pic_offset_table_rtx, 1);\n   ggc_add_rtx_root (&struct_value_rtx, 1);"}, {"sha": "d22540e28010504c5be4b822a3b072da50e7b801", "filename": "gcc/flow.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=848e0190fb94ea253031af77f52842117522f79b", "patch": "@@ -3345,14 +3345,13 @@ mark_regs_live_at_end (set)\n #endif\n     }\n \n-#ifdef PIC_OFFSET_TABLE_REGNUM\n #ifndef PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n   /* Many architectures have a GP register even without flag_pic.\n      Assume the pic register is not in use, or will be handled by\n      other means, if it is not fixed.  */\n-  if (fixed_regs[PIC_OFFSET_TABLE_REGNUM])\n+  if (PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM\n+      && fixed_regs[PIC_OFFSET_TABLE_REGNUM])\n     SET_REGNO_REG_SET (set, PIC_OFFSET_TABLE_REGNUM);\n-#endif\n #endif\n \n   /* Mark all global registers, and all registers used by the epilogue\n@@ -3484,12 +3483,11 @@ calculate_global_regs_live (blocks_in, blocks_out, flags)\n \t    SET_REGNO_REG_SET (new_live_at_end, ARG_POINTER_REGNUM);\n #endif\n \n-#ifdef PIC_OFFSET_TABLE_REGNUM\n \t  /* Any constant, or pseudo with constant equivalences, may\n \t     require reloading from memory using the pic register.  */\n-\t  if (fixed_regs[PIC_OFFSET_TABLE_REGNUM])\n+\t  if (PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM\n+\t      && fixed_regs[PIC_OFFSET_TABLE_REGNUM])\n \t    SET_REGNO_REG_SET (new_live_at_end, PIC_OFFSET_TABLE_REGNUM);\n-#endif\n \t}\n \n       /* Regs used in phi nodes are not included in"}, {"sha": "a0eece4ae7ac5d2c1fc2de2e463df53b02720f05", "filename": "gcc/gcse.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=848e0190fb94ea253031af77f52842117522f79b", "patch": "@@ -2208,7 +2208,7 @@ compute_hash_table (set_p)\n #if ARG_POINTER_REGNUM != FRAME_POINTER_REGNUM\n \t\t     && ! (regno == ARG_POINTER_REGNUM && fixed_regs[regno])\n #endif\n-#if defined (PIC_OFFSET_TABLE_REGNUM) && !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n+#if !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n \t\t     && ! (regno == PIC_OFFSET_TABLE_REGNUM && flag_pic)\n #endif\n \n@@ -2641,7 +2641,7 @@ compute_kill_rd ()\n \t\t       && ! (regno == ARG_POINTER_REGNUM\n \t\t\t     && fixed_regs[regno])\n #endif\n-#if defined (PIC_OFFSET_TABLE_REGNUM) && !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n+#if !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n \t\t       && ! (regno == PIC_OFFSET_TABLE_REGNUM && flag_pic)\n #endif\n \t\t       && regno != FRAME_POINTER_REGNUM)"}, {"sha": "772dad765f523fde5e7374af6a06db14aacc17fc", "filename": "gcc/resource.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848e0190fb94ea253031af77f52842117522f79b/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=848e0190fb94ea253031af77f52842117522f79b", "patch": "@@ -1029,7 +1029,7 @@ mark_target_live_regs (insns, target, res)\n #if ARG_POINTER_REGNUM != FRAME_POINTER_REGNUM\n \t\t    && ! (i == ARG_POINTER_REGNUM && fixed_regs[i])\n #endif\n-#if defined (PIC_OFFSET_TABLE_REGNUM) && !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n+#if !defined (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED)\n \t\t    && ! (i == PIC_OFFSET_TABLE_REGNUM && flag_pic)\n #endif\n \t\t    )"}, {"sha": "003e92dc31664867d26ce9bc2de3baebf61f60b5", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848e0190fb94ea253031af77f52842117522f79b/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848e0190fb94ea253031af77f52842117522f79b/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=848e0190fb94ea253031af77f52842117522f79b", "patch": "@@ -1606,6 +1606,9 @@ extern rtx gen_rtx_MEM PARAMS ((enum machine_mode, rtx));\n \n #define LAST_VIRTUAL_REGISTER\t\t((FIRST_VIRTUAL_REGISTER) + 4)\n \n+/* REGNUM never really appearing in the INSN stream.  */\n+#define INVALID_REGNUM\t\t\t(~(unsigned int)0)\n+\n extern rtx find_next_ref\t\tPARAMS ((rtx, rtx));\n extern rtx *find_single_use\t\tPARAMS ((rtx, rtx, rtx *));\n "}]}