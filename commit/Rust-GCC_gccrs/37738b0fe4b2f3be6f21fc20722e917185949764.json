{"sha": "37738b0fe4b2f3be6f21fc20722e917185949764", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3MzhiMGZlNGIyZjNiZTZmMjFmYzIwNzIyZTkxNzE4NTk0OTc2NA==", "commit": {"author": {"name": "Roman Gareev", "email": "gareevroman@gmail.com", "date": "2014-07-17T15:09:40Z"}, "committer": {"name": "Roman Gareev", "email": "romangareev@gcc.gnu.org", "date": "2014-07-17T15:09:40Z"}, "message": "configure.ac: Don't accept isl 0.11.\n\n\n\t* configure.ac: Don't accept isl 0.11.\n\t* configure: Regenerate.\n\nFrom-SVN: r212758", "tree": {"sha": "3f1a80b246e7dc31afa5eb67531b7a7fad16ea12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f1a80b246e7dc31afa5eb67531b7a7fad16ea12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37738b0fe4b2f3be6f21fc20722e917185949764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37738b0fe4b2f3be6f21fc20722e917185949764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37738b0fe4b2f3be6f21fc20722e917185949764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37738b0fe4b2f3be6f21fc20722e917185949764/comments", "author": {"login": "gareevroman", "id": 6114710, "node_id": "MDQ6VXNlcjYxMTQ3MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6114710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gareevroman", "html_url": "https://github.com/gareevroman", "followers_url": "https://api.github.com/users/gareevroman/followers", "following_url": "https://api.github.com/users/gareevroman/following{/other_user}", "gists_url": "https://api.github.com/users/gareevroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gareevroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gareevroman/subscriptions", "organizations_url": "https://api.github.com/users/gareevroman/orgs", "repos_url": "https://api.github.com/users/gareevroman/repos", "events_url": "https://api.github.com/users/gareevroman/events{/privacy}", "received_events_url": "https://api.github.com/users/gareevroman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f960cedea937548f27436999084f0b9d4c63d72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f960cedea937548f27436999084f0b9d4c63d72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f960cedea937548f27436999084f0b9d4c63d72"}], "stats": {"total": 59, "additions": 6, "deletions": 53}, "files": [{"sha": "2c66272b88888a35cc198e28c4c36d34a22bdd58", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37738b0fe4b2f3be6f21fc20722e917185949764/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37738b0fe4b2f3be6f21fc20722e917185949764/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=37738b0fe4b2f3be6f21fc20722e917185949764", "patch": "@@ -1,3 +1,8 @@\n+2014-07-17  Roman Gareev  <gareevroman@gmail.com>\n+\n+\t* configure.ac: Don't accept isl 0.11.\n+\t* configure: Regenerate.\n+\n 2014-07-16  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "592f352e63d31e262338fc99bfddedd56c7e9d9f", "filename": "configure", "status": "modified", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37738b0fe4b2f3be6f21fc20722e917185949764/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37738b0fe4b2f3be6f21fc20722e917185949764/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=37738b0fe4b2f3be6f21fc20722e917185949764", "patch": "@@ -5889,54 +5889,6 @@ $as_echo \"$as_me: WARNING: using in-tree ISL, disabling version check\" >&2;}\n \n \n \n-  if test \"${ENABLE_ISL_CHECK}\" = yes ; then\n-    _isl_saved_CFLAGS=$CFLAGS\n-    _isl_saved_LDFLAGS=$LDFLAGS\n-    _isl_saved_LIBS=$LIBS\n-\n-    CFLAGS=\"${_isl_saved_CFLAGS} ${islinc} ${gmpinc}\"\n-    LDFLAGS=\"${_isl_saved_LDFLAGS} ${isllibs}\"\n-    LIBS=\"${_isl_saved_LIBS} -lisl\"\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for version 0.11 of ISL\" >&5\n-$as_echo_n \"checking for version 0.11 of ISL... \" >&6; }\n-    if test \"$cross_compiling\" = yes; then :\n-  gcc_cv_isl=yes\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <isl/version.h>\n-   #include <string.h>\n-int\n-main ()\n-{\n-if (strncmp (isl_version (), \"isl-0.11\", strlen (\"isl-0.11\")) != 0)\n-     return 1;\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_run \"$LINENO\"; then :\n-  gcc_cv_isl=yes\n-else\n-  gcc_cv_isl=no\n-fi\n-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n-  conftest.$ac_objext conftest.beam conftest.$ac_ext\n-fi\n-\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_isl\" >&5\n-$as_echo \"$gcc_cv_isl\" >&6; }\n-\n-    CFLAGS=$_isl_saved_CFLAGS\n-    LDFLAGS=$_isl_saved_LDFLAGS\n-    LIBS=$_isl_saved_LIBS\n-  fi\n-\n-\n-  if test \"${gcc_cv_isl}\" = no ; then\n-\n   if test \"${ENABLE_ISL_CHECK}\" = yes ; then\n     _isl_saved_CFLAGS=$CFLAGS\n     _isl_saved_LDFLAGS=$LDFLAGS\n@@ -5983,7 +5935,6 @@ $as_echo \"$gcc_cv_isl\" >&6; }\n   fi\n \n \n-  fi\n \n \n "}, {"sha": "6c7b4df2f409df8a8b75469653795d837954366e", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37738b0fe4b2f3be6f21fc20722e917185949764/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37738b0fe4b2f3be6f21fc20722e917185949764/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=37738b0fe4b2f3be6f21fc20722e917185949764", "patch": "@@ -1650,10 +1650,7 @@ if test \"x$with_isl\" != \"xno\" &&\n   dnl with user input.\n   ISL_INIT_FLAGS\n   dnl The versions of ISL that work for Graphite\n-  ISL_CHECK_VERSION(0,11)\n-  if test \"${gcc_cv_isl}\" = no ; then\n-    ISL_CHECK_VERSION(0,12)\n-  fi\n+  ISL_CHECK_VERSION(0,12)\n   dnl Only execute fail-action, if ISL has been requested.\n   ISL_IF_FAILED([\n     AC_MSG_ERROR([Unable to find a usable ISL.  See config.log for details.])])"}]}