{"sha": "3569f81f2ddc25b1ea22c99230c3e35032bd4752", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU2OWY4MWYyZGRjMjViMWVhMjJjOTkyMzBjM2UzNTAzMmJkNDc1Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-10T03:34:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-10T03:34:23Z"}, "message": "PR c++/84752 - ICE with capture of constexpr array.\n\n\t* call.c (standard_conversion): Set rvaluedness_matches_p on the\n\tidentity conversion under ck_lvalue.\n\nFrom-SVN: r258406", "tree": {"sha": "52b84fcf9cf6268ab61e222de824edb12e39b095", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52b84fcf9cf6268ab61e222de824edb12e39b095"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3569f81f2ddc25b1ea22c99230c3e35032bd4752", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3569f81f2ddc25b1ea22c99230c3e35032bd4752", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3569f81f2ddc25b1ea22c99230c3e35032bd4752", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3569f81f2ddc25b1ea22c99230c3e35032bd4752/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a72e8ba830a57d2737280f627ef4ba5e2f3c1b59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a72e8ba830a57d2737280f627ef4ba5e2f3c1b59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a72e8ba830a57d2737280f627ef4ba5e2f3c1b59"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "05cfb768bc684ff565ba1a911c07afba5ad81f10", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3569f81f2ddc25b1ea22c99230c3e35032bd4752/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3569f81f2ddc25b1ea22c99230c3e35032bd4752/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3569f81f2ddc25b1ea22c99230c3e35032bd4752", "patch": "@@ -1,3 +1,9 @@\n+2018-03-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/84752 - ICE with capture of constexpr array.\n+\t* call.c (standard_conversion): Set rvaluedness_matches_p on the\n+\tidentity conversion under ck_lvalue.\n+\n 2018-03-09  Jason Merrill  <jason@redhat.com>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "45c22aaa312c96b4e8eb326cd7310a4b17b9ce48", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3569f81f2ddc25b1ea22c99230c3e35032bd4752/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3569f81f2ddc25b1ea22c99230c3e35032bd4752/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3569f81f2ddc25b1ea22c99230c3e35032bd4752", "patch": "@@ -103,7 +103,7 @@ struct conversion {\n      being bound to an rvalue expression.  If KIND is ck_rvalue,\n      true when we are treating an lvalue as an rvalue (12.8p33).  If\n      KIND is ck_base, always false.  If ck_identity, we will be\n-     binding a reference directly.  */\n+     binding a reference directly or decaying to a pointer.  */\n   BOOL_BITFIELD rvaluedness_matches_p: 1;\n   BOOL_BITFIELD check_narrowing: 1;\n   /* The type of the expression resulting from the conversion.  */\n@@ -1139,6 +1139,8 @@ standard_conversion (tree to, tree from, tree expr, bool c_cast_p,\n     {\n       from = type_decays_to (from);\n       fcode = TREE_CODE (from);\n+      /* Tell convert_like_real that we're using the address.  */\n+      conv->rvaluedness_matches_p = true;\n       conv = build_conv (ck_lvalue, from, conv);\n     }\n   /* Wrapping a ck_rvalue around a class prvalue (as a result of using"}, {"sha": "097110335113b075faa864e9cd3550e461857bcd", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-array3.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3569f81f2ddc25b1ea22c99230c3e35032bd4752/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-array3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3569f81f2ddc25b1ea22c99230c3e35032bd4752/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-array3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-array3.C?ref=3569f81f2ddc25b1ea22c99230c3e35032bd4752", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/84752\n+// { dg-do compile { target c++11 } }\n+\n+void foo()\n+{\n+  constexpr int x[1] = {};\n+  [&x]{ return (bool)x; };\n+}\n+\t"}]}