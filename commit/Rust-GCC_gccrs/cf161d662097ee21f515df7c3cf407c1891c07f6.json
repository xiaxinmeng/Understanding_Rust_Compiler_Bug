{"sha": "cf161d662097ee21f515df7c3cf407c1891c07f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YxNjFkNjYyMDk3ZWUyMWY1MTVkZjdjM2NmNDA3YzE4OTFjMDdmNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:30:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T08:30:02Z"}, "message": "[multiple changes]\n\n2011-08-29  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch3.adb (Array_Type_Declaration): Insert a subtype declaration\n\tfor every index type and component type that is not a subtype_mark.\n\t(Process_Subtype): Set Etype of subtype.\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* a-cbmutr.adb, a-cimutr.adb, a-comutr.adb, prj-nmsc.adb: Minor code\n\treorganization.  Minor reformatting.\n\nFrom-SVN: r178159", "tree": {"sha": "b37f561a1d65381b07d1712d305ec591111c2673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b37f561a1d65381b07d1712d305ec591111c2673"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf161d662097ee21f515df7c3cf407c1891c07f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf161d662097ee21f515df7c3cf407c1891c07f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf161d662097ee21f515df7c3cf407c1891c07f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf161d662097ee21f515df7c3cf407c1891c07f6/comments", "author": null, "committer": null, "parents": [{"sha": "7cc83cd8a5c38ed353c5f54cea9888727a77d14e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc83cd8a5c38ed353c5f54cea9888727a77d14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc83cd8a5c38ed353c5f54cea9888727a77d14e"}], "stats": {"total": 3038, "additions": 1548, "deletions": 1490}, "files": [{"sha": "65e36ed2c849a10d091638353d6e22cade47163b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cf161d662097ee21f515df7c3cf407c1891c07f6", "patch": "@@ -1,3 +1,14 @@\n+2011-08-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch3.adb (Array_Type_Declaration): Insert a subtype declaration\n+\tfor every index type and component type that is not a subtype_mark.\n+\t(Process_Subtype): Set Etype of subtype.\n+\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-cbmutr.adb, a-cimutr.adb, a-comutr.adb, prj-nmsc.adb: Minor code\n+\treorganization.  Minor reformatting.\n+\n 2011-08-29  Steve Baird  <baird@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Op_Expon): Suppress N_Op_Expon node expansion"}, {"sha": "738097ff4683869d625037ffaed29d360f6ce17e", "filename": "gcc/ada/a-cbmutr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fa-cbmutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fa-cbmutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbmutr.adb?ref=cf161d662097ee21f515df7c3cf407c1891c07f6", "patch": "@@ -435,14 +435,14 @@ package body Ada.Containers.Bounded_Multiway_Trees is\n    begin\n       if Parent = No_Element then\n          return 0;\n-      end if;\n \n-      if Parent.Container.Count = 0 then\n+      elsif Parent.Container.Count = 0 then\n          pragma Assert (Is_Root (Parent));\n          return 0;\n-      end if;\n \n-      return Child_Count (Parent.Container.all, Parent.Node);\n+      else\n+         return Child_Count (Parent.Container.all, Parent.Node);\n+      end if;\n    end Child_Count;\n \n    function Child_Count"}, {"sha": "8f310a3102619ddba85b435af86b3e955b26f4b3", "filename": "gcc/ada/a-cimutr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fa-cimutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fa-cimutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cimutr.adb?ref=cf161d662097ee21f515df7c3cf407c1891c07f6", "patch": "@@ -303,9 +303,9 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n    begin\n       if Parent = No_Element then\n          return 0;\n+      else\n+         return Child_Count (Parent.Node.Children);\n       end if;\n-\n-      return Child_Count (Parent.Node.Children);\n    end Child_Count;\n \n    function Child_Count (Children : Children_Type) return Count_Type is"}, {"sha": "f718eb8d31cb06db8e6c881b824b9b9707d04b77", "filename": "gcc/ada/a-comutr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fa-comutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fa-comutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comutr.adb?ref=cf161d662097ee21f515df7c3cf407c1891c07f6", "patch": "@@ -299,9 +299,9 @@ package body Ada.Containers.Multiway_Trees is\n    begin\n       if Parent = No_Element then\n          return 0;\n+      else\n+         return Child_Count (Parent.Node.Children);\n       end if;\n-\n-      return Child_Count (Parent.Node.Children);\n    end Child_Count;\n \n    function Child_Count (Children : Children_Type) return Count_Type is"}, {"sha": "41121476fd85c08e2122f36b9b4a69f5fcaaabf3", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 1458, "deletions": 1481, "changes": 2939, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=cf161d662097ee21f515df7c3cf407c1891c07f6"}, {"sha": "15f89ef894595b30dcf8adbb1141eec61ec2f139", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 71, "deletions": 1, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf161d662097ee21f515df7c3cf407c1891c07f6/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=cf161d662097ee21f515df7c3cf407c1891c07f6", "patch": "@@ -4741,6 +4741,47 @@ package body Sem_Ch3 is\n \n          Make_Index (Index, P, Related_Id, Nb_Index);\n \n+         --  In formal verification mode, create an explicit subtype for every\n+         --  index if not already a subtype_mark, and replace the existing type\n+         --  of index by this new type. Why are we doing this ???\n+\n+         if ALFA_Mode\n+           and then not Nkind_In (Index, N_Identifier, N_Expanded_Name)\n+         then\n+            declare\n+               Loc     : constant Source_Ptr := Sloc (Def);\n+               New_E   : Entity_Id;\n+               Decl    : Entity_Id;\n+               Sub_Ind : Node_Id;\n+\n+            begin\n+               New_E :=\n+                 New_External_Entity\n+                   (E_Void, Current_Scope, Sloc (P), Related_Id, 'D',\n+                    Nb_Index, 'T');\n+\n+               if Nkind (Index) = N_Subtype_Indication then\n+                  Sub_Ind := Relocate_Node (Index);\n+               else\n+                  Sub_Ind :=\n+                    Make_Subtype_Indication (Loc,\n+                      Subtype_Mark =>\n+                        New_Occurrence_Of (Base_Type (Etype (Index)), Loc),\n+                      Constraint =>\n+                        Make_Range_Constraint (Loc,\n+                          Range_Expression => Relocate_Node (Index)));\n+               end if;\n+\n+               Decl :=\n+                 Make_Subtype_Declaration (Loc,\n+                   Defining_Identifier => New_E,\n+                   Subtype_Indication  => Sub_Ind);\n+\n+               Insert_Action (Parent (Def), Decl);\n+               Set_Etype (Index, New_E);\n+            end;\n+         end if;\n+\n          --  Check error of subtype with predicate for index type\n \n          Bad_Predicated_Subtype_Use\n@@ -4756,7 +4797,36 @@ package body Sem_Ch3 is\n       --  Process subtype indication if one is present\n \n       if Present (Component_Typ) then\n-         Element_Type := Process_Subtype (Component_Typ, P, Related_Id, 'C');\n+\n+         --  In formal verification mode, create an explicit subtype for the\n+         --  component type if not already a subtype_mark. Why do this ???\n+\n+         if ALFA_Mode\n+           and then Nkind (Component_Typ) = N_Subtype_Indication\n+         then\n+            declare\n+               Loc  : constant Source_Ptr := Sloc (Def);\n+               Decl : Entity_Id;\n+\n+            begin\n+               Element_Type :=\n+                 New_External_Entity\n+                   (E_Void, Current_Scope, Sloc (P), Related_Id, 'C', 0, 'T');\n+\n+               Decl :=\n+                 Make_Subtype_Declaration (Loc,\n+                   Defining_Identifier => Element_Type,\n+                   Subtype_Indication  => Relocate_Node (Component_Typ));\n+\n+               Insert_Action (Parent (Def), Decl);\n+            end;\n+\n+         else\n+            Element_Type :=\n+              Process_Subtype (Component_Typ, P, Related_Id, 'C');\n+         end if;\n+\n+         Set_Etype (Component_Typ, Element_Type);\n \n          if not Nkind_In (Component_Typ, N_Identifier, N_Expanded_Name) then\n             Check_SPARK_Restriction (\"subtype mark required\", Component_Typ);"}]}