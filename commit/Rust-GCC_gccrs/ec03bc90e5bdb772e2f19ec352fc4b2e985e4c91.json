{"sha": "ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMwM2JjOTBlNWJkYjc3MmUyZjE5ZWMzNTJmYzRiMmU5ODVlNGM5MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-07-04T21:41:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-07-04T21:41:49Z"}, "message": "re PR middle-end/78884 ([7/8] ICE when gimplifying VLA in OpenMP SIMD region)\n\n\tPR middle-end/78884\n\t* gimplify.c (struct gimplify_omp_ctx): Add add_safelen1 member.\n\t(gimplify_bind_expr): If seeing TREE_ADDRESSABLE VLA inside of simd\n\tloop body, set ctx->add_safelen1 instead of making it GOVD_PRIVATE.\n\t(gimplify_adjust_omp_clauses): Add safelen (1) clause if\n\tctx->add_safelen1 is set.\n\n\t* gcc.dg/gomp/pr78884.c: New test.\n\nFrom-SVN: r273096", "tree": {"sha": "c7a12300601b050ad3e64d33de63243d7f4b7f90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7a12300601b050ad3e64d33de63243d7f4b7f90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f03073ff24bbb005d52db7e2b7a5ea32bb01140", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f03073ff24bbb005d52db7e2b7a5ea32bb01140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f03073ff24bbb005d52db7e2b7a5ea32bb01140"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "5145487d3b7dee8c5da4649c2bfae0c446b0d5e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91", "patch": "@@ -1,5 +1,12 @@\n 2019-07-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/78884\n+\t* gimplify.c (struct gimplify_omp_ctx): Add add_safelen1 member.\n+\t(gimplify_bind_expr): If seeing TREE_ADDRESSABLE VLA inside of simd\n+\tloop body, set ctx->add_safelen1 instead of making it GOVD_PRIVATE.\n+\t(gimplify_adjust_omp_clauses): Add safelen (1) clause if\n+\tctx->add_safelen1 is set.\n+\n \t* omp-expand.c (expand_omp_for_static_nochunk): Don't emit\n \tGOMP_loop_start at the start of second worksharing loop in a scan.\n \tFor nowait, don't emit GOMP_loop_end_nowait at the end of first"}, {"sha": "239988b56acb977b5ad08c0c5301242a530f0b32", "filename": "gcc/gimplify.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91", "patch": "@@ -221,6 +221,7 @@ struct gimplify_omp_ctx\n   bool combined_loop;\n   bool distribute;\n   bool target_firstprivatize_array_bases;\n+  bool add_safelen1;\n   int defaultmap[4];\n };\n \n@@ -1331,12 +1332,17 @@ gimplify_bind_expr (tree *expr_p, gimple_seq *pre_p)\n \t\t  || splay_tree_lookup (ctx->variables,\n \t\t\t\t\t(splay_tree_key) t) == NULL)\n \t\t{\n+\t\t  int flag = GOVD_LOCAL;\n \t\t  if (ctx->region_type == ORT_SIMD\n \t\t      && TREE_ADDRESSABLE (t)\n \t\t      && !TREE_STATIC (t))\n-\t\t    omp_add_variable (ctx, t, GOVD_PRIVATE | GOVD_SEEN);\n-\t\t  else\n-\t\t    omp_add_variable (ctx, t, GOVD_LOCAL | GOVD_SEEN);\n+\t\t    {\n+\t\t      if (TREE_CODE (DECL_SIZE_UNIT (t)) != INTEGER_CST)\n+\t\t\tctx->add_safelen1 = true;\n+\t\t      else\n+\t\t\tflag = GOVD_PRIVATE;\n+\t\t    }\n+\t\t  omp_add_variable (ctx, t, flag | GOVD_SEEN);\n \t\t}\n \t      /* Static locals inside of target construct or offloaded\n \t\t routines need to be \"omp declare target\".  */\n@@ -9801,6 +9807,18 @@ gimplify_adjust_omp_clauses (gimple_seq *pre_p, gimple_seq body, tree *list_p,\n \t}\n     }\n \n+  if (ctx->add_safelen1)\n+    {\n+      /* If there are VLAs in the body of simd loop, prevent\n+\t vectorization.  */\n+      gcc_assert (ctx->region_type == ORT_SIMD);\n+      c = build_omp_clause (UNKNOWN_LOCATION, OMP_CLAUSE_SAFELEN);\n+      OMP_CLAUSE_SAFELEN_EXPR (c) = integer_one_node;\n+      OMP_CLAUSE_CHAIN (c) = *list_p;\n+      *list_p = c;\n+      list_p = &OMP_CLAUSE_CHAIN (c);\n+    }\n+\n   if (ctx->region_type == ORT_WORKSHARE\n       && ctx->outer_context\n       && ctx->outer_context->region_type == ORT_COMBINED_PARALLEL)"}, {"sha": "30b2d1fb2dbfc94d366fdf83c55fd0fa6d8a16a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91", "patch": "@@ -1,3 +1,8 @@\n+2019-07-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/78884\n+\t* gcc.dg/gomp/pr78884.c: New test.\n+\n 2019-07-04  Andrea Corallo <andrea.corallo@arm.com>\n \n \t* jit.dg/test-error-gcc_jit_context_new_binary_op-bad-res-type.c:"}, {"sha": "3e03df5586709887f372f6dfc8ebafca2e710165", "filename": "gcc/testsuite/gcc.dg/gomp/pr78884.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr78884.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr78884.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr78884.c?ref=ec03bc90e5bdb772e2f19ec352fc4b2e985e4c91", "patch": "@@ -0,0 +1,16 @@\n+/* PR middle-end/78884 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fopenmp\" } */\n+\n+void bar (int *);\n+\n+void\n+foo (int n)\n+{\n+#pragma omp simd\n+  for (int i = 0; i < 1024; i++)\n+    {\n+      int vla[n];\n+      bar (vla);\n+    }\n+}"}]}