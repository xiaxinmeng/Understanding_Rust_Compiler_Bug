{"sha": "722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIyYmE1ZWVhY2FlYWYyYzkxM2Q3NGY1ZDE3YjVlOGFiOWYwNGQzNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-05-30T13:46:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-05-30T13:46:25Z"}, "message": "re PR tree-optimization/31769 (ICE with OpenMP and exceptions)\n\n\tPR tree-optimization/31769\n\t* except.c (duplicate_eh_regions): Clear prev_try if\n\tERT_MUST_NOT_THROW region is inside of ERT_TRY region.\n\n\t* g++.dg/gomp/pr31769.C: New test.\n\nFrom-SVN: r125183", "tree": {"sha": "bdd58629392eea9ed231c4409541624029fefcce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdd58629392eea9ed231c4409541624029fefcce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cc1244e762b1cab9245e54a3061e12950c3b8f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc1244e762b1cab9245e54a3061e12950c3b8f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cc1244e762b1cab9245e54a3061e12950c3b8f1"}], "stats": {"total": 78, "additions": 77, "deletions": 1}, "files": [{"sha": "9229ee17656b7a514d73956bd04934eead6aefeb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37", "patch": "@@ -1,3 +1,9 @@\n+2007-05-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/31769\n+\t* except.c (duplicate_eh_regions): Clear prev_try if\n+\tERT_MUST_NOT_THROW region is inside of ERT_TRY region.\n+\n 2007-05-30  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-scalar-evolution.c (scev_const_prop): Do not create labels."}, {"sha": "b360ae4ad1da7f63ed76ac99b5a76a3efe1dc6fd", "filename": "gcc/except.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37", "patch": "@@ -1005,7 +1005,11 @@ duplicate_eh_regions (struct function *ifun, duplicate_eh_regions_map map,\n     for (prev_try = VEC_index (eh_region, cfun->eh->region_array, outer_region);\n          prev_try && prev_try->type != ERT_TRY;\n \t prev_try = prev_try->outer)\n-      ;\n+      if (prev_try->type == ERT_MUST_NOT_THROW)\n+\t{\n+\t  prev_try = NULL;\n+\t  break;\n+\t}\n \n   /* Remap all of the internal catch and cleanup linkages.  Since we \n      duplicate entire subtrees, all of the referenced regions will have"}, {"sha": "84d379a380a90301e93e23770ff0fbc62a2cd54b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37", "patch": "@@ -1,3 +1,8 @@\n+2007-05-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/31769\n+\t* g++.dg/gomp/pr31769.C: New test.\n+\n 2007-05-29  Hui-May Chang  <hm.chang@apple.com>\n \n \t* gcc.target/i386/stack-realign.c: New."}, {"sha": "54945f94efa7d4813607e3416122dc4f19a07225", "filename": "gcc/testsuite/g++.dg/gomp/pr31769.C", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr31769.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr31769.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr31769.C?ref=722ba5eeacaeaf2c913d74f5d17b5e8ab9f04d37", "patch": "@@ -0,0 +1,61 @@\n+// PR tree-optimization/31769\n+// { dg-options \"-O2 -fopenmp\" }\n+// { dg-do compile }\n+\n+struct B\n+{\n+  B () {}\n+  virtual ~B () {}\n+};\n+struct C\n+{\n+  C (int x, int y) {}\n+};\n+template<typename T, int U>\n+struct D\n+{\n+  D () {}\n+  ~D () {}\n+};\n+struct E\n+{\n+  E () {}\n+  ~E () {}\n+  D<int, 1> e;\n+};\n+struct A\n+{\n+  B *b;\n+  A () { b = __null; }\n+  ~A () { if (b != __null) delete b; }\n+};\n+struct F : public A\n+{\n+  explicit F (int x) { foo (0); }\n+  F (const F &x) {}\n+  F (F &x, C y) {}\n+  F operator () (C x) const\n+  {\n+    return F (const_cast<F &>(*this), x);\n+  }\n+  template <typename U> F & operator+= (const U &);\n+  void foo (int);\n+  E f;\n+};\n+\n+int\n+main ()\n+{\n+  try\n+  {\n+    F f (10);\n+    F g (10);\n+    C h (0, 9);\n+#pragma omp parallel for\n+    for (int i = 0; i < 2; ++i)\n+      g += f (h);\n+  }\n+  catch (int &e)\n+  {\n+  }\n+}"}]}