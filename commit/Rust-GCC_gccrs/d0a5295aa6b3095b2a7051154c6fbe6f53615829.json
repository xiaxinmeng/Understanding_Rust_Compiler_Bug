{"sha": "d0a5295aa6b3095b2a7051154c6fbe6f53615829", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBhNTI5NWFhNmIzMDk1YjJhNzA1MTE1NGM2ZmJlNmY1MzYxNTgyOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-02-11T19:44:46Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-02-11T19:44:46Z"}, "message": "i386.c (ix86_expand_movstr): Fail if esi or edi appropriated as globals.\n\n        * config/i386/i386.c (ix86_expand_movstr): Fail if esi or edi\n        appropriated as globals.\n        (ix86_expand_clrstr): Similarly.\n        * config/i386/i386.md (cmpstrsi): Similarly.\n\nFrom-SVN: r62710", "tree": {"sha": "15c128598d110523e650af312fce74e4fa10381c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15c128598d110523e650af312fce74e4fa10381c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0a5295aa6b3095b2a7051154c6fbe6f53615829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a5295aa6b3095b2a7051154c6fbe6f53615829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a5295aa6b3095b2a7051154c6fbe6f53615829", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a5295aa6b3095b2a7051154c6fbe6f53615829/comments", "author": null, "committer": null, "parents": [{"sha": "9672132ffd55072c56aec4bffcce572bb4557c05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9672132ffd55072c56aec4bffcce572bb4557c05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9672132ffd55072c56aec4bffcce572bb4557c05"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "614a9b8cced4644de092950f42cf2ebfb03e1ecc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a5295aa6b3095b2a7051154c6fbe6f53615829/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a5295aa6b3095b2a7051154c6fbe6f53615829/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0a5295aa6b3095b2a7051154c6fbe6f53615829", "patch": "@@ -1,3 +1,10 @@\n+2003-02-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_expand_movstr): Fail if esi or edi\n+\tappropriated as globals.\n+\t(ix86_expand_clrstr): Similarly.\n+\t* config/i386/i386.md (cmpstrsi): Similarly.\n+\n 2003-02-11  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (a peephole2): Add a case of 255."}, {"sha": "c54397a755cf38e9e388a00f84308584aeba3c66", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a5295aa6b3095b2a7051154c6fbe6f53615829/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a5295aa6b3095b2a7051154c6fbe6f53615829/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d0a5295aa6b3095b2a7051154c6fbe6f53615829", "patch": "@@ -10767,10 +10767,13 @@ ix86_expand_movstr (dst, src, count_exp, align_exp)\n   unsigned HOST_WIDE_INT count = 0;\n   rtx insns;\n \n-\n   if (GET_CODE (align_exp) == CONST_INT)\n     align = INTVAL (align_exp);\n \n+  /* Can't use any of this if the user has appropriated esi or edi.  */\n+  if (global_regs[4] || global_regs[5])\n+    return 0;\n+\n   /* This simple hack avoids all inlining code and simplifies code below.  */\n   if (!TARGET_ALIGN_STRINGOPS)\n     align = 64;\n@@ -11005,6 +11008,10 @@ ix86_expand_clrstr (src, count_exp, align_exp)\n   if (GET_CODE (align_exp) == CONST_INT)\n     align = INTVAL (align_exp);\n \n+  /* Can't use any of this if the user has appropriated esi.  */\n+  if (global_regs[4])\n+    return 0;\n+\n   /* This simple hack avoids all inlining code and simplifies code below.  */\n   if (!TARGET_ALIGN_STRINGOPS)\n     align = 32;"}, {"sha": "9a7173bf7039e8fd058e6d392fc3e57341c59dd3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a5295aa6b3095b2a7051154c6fbe6f53615829/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a5295aa6b3095b2a7051154c6fbe6f53615829/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d0a5295aa6b3095b2a7051154c6fbe6f53615829", "patch": "@@ -16222,6 +16222,10 @@\n {\n   rtx addr1, addr2, out, outlow, count, countreg, align;\n \n+  /* Can't use this if the user has appropriated esi or edi.  */\n+  if (global_regs[4] || global_regs[5])\n+    FAIL;\n+\n   out = operands[0];\n   if (GET_CODE (out) != REG)\n     out = gen_reg_rtx (SImode);"}]}