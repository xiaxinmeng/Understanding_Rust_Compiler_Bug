{"sha": "0ab503d34f2a8c22262ceefea6c882ae2ff75230", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFiNTAzZDM0ZjJhOGMyMjI2MmNlZWZlYTZjODgyYWUyZmY3NTIzMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-03T09:42:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-03T09:42:34Z"}, "message": "explow: Fix ICE caused by plus_constant [PR94002]\n\nThe following testcase ICEs in cross to riscv64-linux.  The problem is\nthat we have a DImode integral constant (that doesn't fit into SImode),\nwhich is pushed into a constant pool and later access just the first half of\nit using a MEM.  When plus_constant is called on such a MEM, if the constant\nhas mode, we verify the mode, but if it doesn't, we don't and ICE later on\nwhen we think the CONST_INT is a valid SImode constant.\n\n2020-03-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/94002\n\t* explow.c (plus_constant): Punt if cst has VOIDmode and\n\tget_pool_mode is different from mode.\n\n\t* gcc.dg/pr94002.c: New test.", "tree": {"sha": "6acca675299dafaf4c74ae6ebe92130898c90edf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6acca675299dafaf4c74ae6ebe92130898c90edf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ab503d34f2a8c22262ceefea6c882ae2ff75230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ab503d34f2a8c22262ceefea6c882ae2ff75230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ab503d34f2a8c22262ceefea6c882ae2ff75230", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ab503d34f2a8c22262ceefea6c882ae2ff75230/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02ae0e08a93f41022d1584054cf6111548c0d954", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ae0e08a93f41022d1584054cf6111548c0d954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ae0e08a93f41022d1584054cf6111548c0d954"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "124a06a960a5ca0b52a9e04bbc05dd03b800e2c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab503d34f2a8c22262ceefea6c882ae2ff75230/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab503d34f2a8c22262ceefea6c882ae2ff75230/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ab503d34f2a8c22262ceefea6c882ae2ff75230", "patch": "@@ -1,3 +1,9 @@\n+2020-03-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/94002\n+\t* explow.c (plus_constant): Punt if cst has VOIDmode and\n+\tget_pool_mode is different from mode.\n+\n 2020-03-03  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.c (leigitimate_small_data_address_p): Check if an"}, {"sha": "b838f03587083c8fca23d47dd710ed84f7a98115", "filename": "gcc/explow.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab503d34f2a8c22262ceefea6c882ae2ff75230/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab503d34f2a8c22262ceefea6c882ae2ff75230/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=0ab503d34f2a8c22262ceefea6c882ae2ff75230", "patch": "@@ -128,6 +128,9 @@ plus_constant (machine_mode mode, rtx x, poly_int64 c, bool inplace)\n \t      cst = gen_lowpart (mode, cst);\n \t      gcc_assert (cst);\n \t    }\n+\t  else if (GET_MODE (cst) == VOIDmode\n+\t\t   && get_pool_mode (XEXP (x, 0)) != mode)\n+\t    break;\n \t  if (GET_MODE (cst) == VOIDmode || GET_MODE (cst) == mode)\n \t    {\n \t      tem = plus_constant (mode, cst, c);"}, {"sha": "c4aa9102460bb258d60a66a7061984f7a8bde75f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab503d34f2a8c22262ceefea6c882ae2ff75230/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab503d34f2a8c22262ceefea6c882ae2ff75230/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ab503d34f2a8c22262ceefea6c882ae2ff75230", "patch": "@@ -1,5 +1,8 @@\n 2020-03-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/94002\n+\t* gcc.dg/pr94002.c: New test.\n+\n \tPR tree-optimization/93927\n \t* gcc.c-torture/compile/pr93927-1.c: New test.\n \t* gcc.c-torture/compile/pr93927-2.c: New test."}, {"sha": "05a02f3f15bf6315e9ed380e23b617a25f1eb3b1", "filename": "gcc/testsuite/gcc.dg/pr94002.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab503d34f2a8c22262ceefea6c882ae2ff75230/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94002.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab503d34f2a8c22262ceefea6c882ae2ff75230/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94002.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94002.c?ref=0ab503d34f2a8c22262ceefea6c882ae2ff75230", "patch": "@@ -0,0 +1,13 @@\n+/* PR rtl-optimization/94002 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fno-tree-dce -fno-tree-reassoc\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+\n+unsigned a, b;\n+\n+void\n+foo (void)\n+{\n+  __builtin_sub_overflow (b, 44852956282LL, &a);\n+  a += ~b;\n+}"}]}