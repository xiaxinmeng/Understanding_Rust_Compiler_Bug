{"sha": "440b6d590a8565358b3d603e27af8bd7db3fa27a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQwYjZkNTkwYTg1NjUzNThiM2Q2MDNlMjdhZjhiZDdkYjNmYTI3YQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2012-07-17T12:48:36Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2012-07-17T12:48:36Z"}, "message": "double-int.h (double_int_popcount): New inline function.\n\n2012-07-17  Tom de Vries  <tom@codesourcery.com>\n\n\t* double-int.h (double_int_popcount): New inline function.\n\t* hwint.c (popcount_hwi): New function.\n\t* hwint.h (popcount_hwi): Declare function.  New inline function.\n\nFrom-SVN: r189575", "tree": {"sha": "95b0113f480da4289ca38b07f1d29157bae7e038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95b0113f480da4289ca38b07f1d29157bae7e038"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/440b6d590a8565358b3d603e27af8bd7db3fa27a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/440b6d590a8565358b3d603e27af8bd7db3fa27a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/440b6d590a8565358b3d603e27af8bd7db3fa27a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/440b6d590a8565358b3d603e27af8bd7db3fa27a/comments", "author": null, "committer": null, "parents": [{"sha": "a86ec59783d1630f46d758b27faf5c5fe061ecfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86ec59783d1630f46d758b27faf5c5fe061ecfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a86ec59783d1630f46d758b27faf5c5fe061ecfe"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "f9f3f5f148b9321993a01fa7f050884017c29dc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440b6d590a8565358b3d603e27af8bd7db3fa27a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440b6d590a8565358b3d603e27af8bd7db3fa27a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=440b6d590a8565358b3d603e27af8bd7db3fa27a", "patch": "@@ -1,3 +1,9 @@\n+2012-07-17  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* double-int.h (double_int_popcount): New inline function.\n+\t* hwint.c (popcount_hwi): New function.\n+\t* hwint.h (popcount_hwi): Declare function.  New inline function.\n+\n 2012-07-17  Richard Henderson  <rth@redhat.com>\n \n \t* tree-vect-stmts.c (supportable_widening_operation): Remove decl"}, {"sha": "eab9c3c14a642e7dbe8f7e7a36f6ad8b1862ba23", "filename": "gcc/double-int.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440b6d590a8565358b3d603e27af8bd7db3fa27a/gcc%2Fdouble-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440b6d590a8565358b3d603e27af8bd7db3fa27a/gcc%2Fdouble-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdouble-int.h?ref=440b6d590a8565358b3d603e27af8bd7db3fa27a", "patch": "@@ -284,6 +284,14 @@ double_int_equal_p (double_int cst1, double_int cst2)\n   return cst1.low == cst2.low && cst1.high == cst2.high;\n }\n \n+/* Return number of set bits of CST.  */\n+\n+static inline int\n+double_int_popcount (double_int cst)\n+{\n+  return popcount_hwi (cst.high) + popcount_hwi (cst.low);\n+}\n+\n \n /* Legacy interface with decomposed high/low parts.  */\n "}, {"sha": "024fb7e36e3690f91849dab6b7775864977e880b", "filename": "gcc/hwint.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440b6d590a8565358b3d603e27af8bd7db3fa27a/gcc%2Fhwint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440b6d590a8565358b3d603e27af8bd7db3fa27a/gcc%2Fhwint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.c?ref=440b6d590a8565358b3d603e27af8bd7db3fa27a", "patch": "@@ -107,6 +107,22 @@ ffs_hwi (unsigned HOST_WIDE_INT x)\n   return 1 + floor_log2 (x & -x);\n }\n \n+/* Return the number of set bits in X.  */\n+\n+int\n+popcount_hwi (unsigned HOST_WIDE_INT x)\n+{\n+  int i, ret = 0;\n+\n+  for (i = 0; i < sizeof (x); i += 1)\n+    {\n+      ret += x & 1;\n+      x >>= 1;\n+    }\n+\n+  return ret;\n+}\n+\n #endif /* GCC_VERSION < 3004 */\n \n /* Compute the absolute value of X.  */"}, {"sha": "ca471486c63dfc7c00facda3c7642f4202597365", "filename": "gcc/hwint.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/440b6d590a8565358b3d603e27af8bd7db3fa27a/gcc%2Fhwint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/440b6d590a8565358b3d603e27af8bd7db3fa27a/gcc%2Fhwint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.h?ref=440b6d590a8565358b3d603e27af8bd7db3fa27a", "patch": "@@ -179,6 +179,9 @@ extern int clz_hwi (unsigned HOST_WIDE_INT x);\n extern int ctz_hwi (unsigned HOST_WIDE_INT x);\n extern int ffs_hwi (unsigned HOST_WIDE_INT x);\n \n+/* Return the number of set bits in X.  */\n+extern int popcount_hwi (unsigned HOST_WIDE_INT x);\n+\n /* Return log2, or -1 if not exact.  */\n extern int exact_log2                  (unsigned HOST_WIDE_INT);\n \n@@ -231,6 +234,18 @@ ffs_hwi (unsigned HOST_WIDE_INT x)\n # endif\n }\n \n+static inline int\n+popcount_hwi (unsigned HOST_WIDE_INT x)\n+{\n+# if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n+  return __builtin_popcountl (x);\n+# elif HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONGLONG\n+  return __builtin_popcountll (x);\n+# else\n+  return __builtin_popcount (x);\n+# endif\n+}\n+\n static inline int\n floor_log2 (unsigned HOST_WIDE_INT x)\n {"}]}