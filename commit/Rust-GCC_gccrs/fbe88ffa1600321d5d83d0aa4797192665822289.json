{"sha": "fbe88ffa1600321d5d83d0aa4797192665822289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJlODhmZmExNjAwMzIxZDVkODNkMGFhNDc5NzE5MjY2NTgyMjI4OQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-04-06T15:38:33Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-04-06T15:38:33Z"}, "message": "io.c (check_io_constraints): Add constrains.\n\n2008-04-06  Tobias Burnus  <burnus@net-b.de>\n\n        * io.c (check_io_constraints): Add constrains. ID= requires\n        asynchronous= and asynchronous= must be init expression.\n\n2008-04-06  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/f2003_io_1.f03: Make standard conform.\n        * gfortran.dg/f2003_io_8.f03: New.\n\nFrom-SVN: r133962", "tree": {"sha": "5d9316399c02854d9363b957e9feb4a84931a3a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d9316399c02854d9363b957e9feb4a84931a3a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbe88ffa1600321d5d83d0aa4797192665822289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe88ffa1600321d5d83d0aa4797192665822289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe88ffa1600321d5d83d0aa4797192665822289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe88ffa1600321d5d83d0aa4797192665822289/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d091b12a0466d34d78d696bed390f3792ffe9fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d091b12a0466d34d78d696bed390f3792ffe9fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d091b12a0466d34d78d696bed390f3792ffe9fa"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "49c8a0c32d37d738177b1afff8d565f71b57ded9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=fbe88ffa1600321d5d83d0aa4797192665822289", "patch": "@@ -1,3 +1,8 @@\n+2008-04-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* io.c (check_io_constraints): Add constrains. ID= requires\n+\tasynchronous= and asynchronous= must be init expression.\n+\n 2008-04-06  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* f95-lang.c: Set LANG_HOOKS_NAME to \"GNU Fortran\"."}, {"sha": "034039f87e094beb7d424d9f4897fe59c8cd874e", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=fbe88ffa1600321d5d83d0aa4797192665822289", "patch": "@@ -2866,10 +2866,17 @@ if (condition) \\\n \t\t     &dt->eor_where);\n     }\n \n-  if (dt->asynchronous && dt->asynchronous->expr_type == EXPR_CONSTANT)\n+  if (dt->asynchronous) \n     {\n       static const char * asynchronous[] = { \"YES\", \"NO\", NULL };\n \n+      if (dt->asynchronous->expr_type != EXPR_CONSTANT)\n+\t{\n+\t  gfc_error (\"ASYNCHRONOUS= specifier at %L must be an initialization \"\n+\t\t     \"expression\", &dt->asynchronous->where);\n+\t  return MATCH_ERROR;\n+\t}\n+\n       if (!compare_to_allowed_values\n \t\t(\"ASYNCHRONOUS\", asynchronous, NULL, NULL,\n \t\t dt->asynchronous->value.character.string,\n@@ -2879,8 +2886,8 @@ if (condition) \\\n \n   if (dt->id)\n     {\n-      io_constraint (dt->asynchronous\n-\t\t     && strcmp (dt->asynchronous->value.character.string,\n+      io_constraint (!dt->asynchronous\n+\t\t     || strcmp (dt->asynchronous->value.character.string,\n \t\t\t\t \"yes\"),\n \t\t     \"ID=specifier at %L must be with ASYNCHRONOUS='yes' \"\n \t\t     \"specifier\", &dt->id->where);"}, {"sha": "528bafabc02d8c8d6188d666efe8bfa279f4e790", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbe88ffa1600321d5d83d0aa4797192665822289", "patch": "@@ -1,3 +1,8 @@\n+2008-04-06  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/f2003_io_1.f03: Make standard conform.\n+\t* gfortran.dg/f2003_io_8.f03: New.\n+\n 2008-04-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/pack5.adb: New test."}, {"sha": "6ec14aa053fd5ae88d5bd0e483136dae3933f56b", "filename": "gcc/testsuite/gfortran.dg/f2003_io_1.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03?ref=fbe88ffa1600321d5d83d0aa4797192665822289", "patch": "@@ -10,7 +10,7 @@\n b = 0.0\n open(10, file='mydata', asynchronous=\"yes\", blank=\"null\")\n \n-write(10,'(10f8.3)',  decimal=\"comma\", id=j) a\n+write(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"comma\", id=j) a\n rewind(10)\n read(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"comma\", blank=\"zero\") b\n if (any(b.ne.23.45)) call abort"}, {"sha": "2362697c6bb6562e80b3f0c136c9fa3fe937d7c8", "filename": "gcc/testsuite/gfortran.dg/f2003_io_8.f03", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_8.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe88ffa1600321d5d83d0aa4797192665822289/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_8.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_8.f03?ref=fbe88ffa1600321d5d83d0aa4797192665822289", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! { dg-options \"-std=gnu\" }\n+!\n+real :: a(4), b(4)\n+real :: c\n+integer :: istat, j\n+character(25) :: msg\n+\n+open(10, file='mydata', asynchronous=\"yes\", blank=\"null\")\n+write(10,'(10f8.3)', asynchronous='no', decimal=\"comma\", id=j) a ! { dg-error \"must be with ASYNCHRONOUS=\" }\n+read(10,'(10f8.3)', id=j, decimal=\"comma\", blank=\"zero\") b ! { dg-error \"must be with ASYNCHRONOUS=\" }\n+read(10,'(10f8.3)', asynchronous=msg, decimal=\"comma\", blank=\"zero\") b ! { dg-error \"must be an initialization expression\" }\n+end"}]}