{"sha": "1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4OGZiMzFmNmY3YjQ2NTMyY2ExOGEzY2MyY2I4ZTliZDI1YzcxZQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2009-12-15T18:33:16Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2009-12-15T18:33:16Z"}, "message": "Fix @itemx vs. @itemx\n\ngcc/:\n\t* doc/c-tree.texi (Expression trees): Use @itemx for all but\n\tthe first item for merged items.\n\t* doc/extend.texi (Variable Attributes): Likewise.\n\t* doc/install.texi (Configuration): Likewise.\n\t* doc/invoke.texi (RS/6000 and PowerPC Options, RX Options):\n\tLikewise.\n\nFrom-SVN: r155263", "tree": {"sha": "ad34821f8a36e7eae09d237ca6bf11e26b57d115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad34821f8a36e7eae09d237ca6bf11e26b57d115"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/comments", "author": null, "committer": null, "parents": [{"sha": "ec903a9c42e640af51c771cb3a844283acdc566b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec903a9c42e640af51c771cb3a844283acdc566b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec903a9c42e640af51c771cb3a844283acdc566b"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "3f424e66460e59955362bba23d52db5c6a786cbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e", "patch": "@@ -1,3 +1,12 @@\n+2009-12-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* doc/c-tree.texi (Expression trees): Use @itemx for all but\n+\tthe first item for merged items.\n+\t* doc/extend.texi (Variable Attributes): Likewise.\n+\t* doc/install.texi (Configuration): Likewise.\n+\t* doc/invoke.texi (RS/6000 and PowerPC Options, RX Options):\n+\tLikewise.\n+\n 2009-12-15  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.c (free_lang_data_in_binfo): Do not free BINFO_OFFSET"}, {"sha": "b53f758828b9dac7844e90d84fb0c395ef963538", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e", "patch": "@@ -2871,15 +2871,15 @@ chained together.  This facilitates adding new clauses during\n compilation.\n \n @item VEC_LSHIFT_EXPR\n-@item VEC_RSHIFT_EXPR\n+@itemx VEC_RSHIFT_EXPR\n These nodes represent whole vector left and right shifts, respectively.  \n The first operand is the vector to shift; it will always be of vector type.  \n The second operand is an expression for the number of bits by which to\n shift.  Note that the result is undefined if the second operand is larger\n than or equal to the first operand's type size.\n \n @item VEC_WIDEN_MULT_HI_EXPR\n-@item VEC_WIDEN_MULT_LO_EXPR\n+@itemx VEC_WIDEN_MULT_LO_EXPR\n These nodes represent widening vector multiplication of the high and low\n parts of the two input vectors, respectively.  Their operands are vectors \n that contain the same number of elements (@code{N}) of the same integral type.  \n@@ -2891,7 +2891,7 @@ low @code{N/2} elements of the two vector are multiplied to produce the\n vector of @code{N/2} products.\n \n @item VEC_UNPACK_HI_EXPR\n-@item VEC_UNPACK_LO_EXPR\n+@itemx VEC_UNPACK_LO_EXPR\n These nodes represent unpacking of the high and low parts of the input vector,\n respectively.  The single operand is a vector that contains @code{N} elements \n of the same integral or floating point type.  The result is a vector\n@@ -2902,7 +2902,7 @@ In the case of @code{VEC_UNPACK_LO_EXPR} the low @code{N/2} elements of the\n vector are extracted and widened (promoted).\n \n @item VEC_UNPACK_FLOAT_HI_EXPR\n-@item VEC_UNPACK_FLOAT_LO_EXPR\n+@itemx VEC_UNPACK_FLOAT_LO_EXPR\n These nodes represent unpacking of the high and low parts of the input vector,\n where the values are converted from fixed point to floating point.  The\n single operand is a vector that contains @code{N} elements of the same\n@@ -2938,13 +2938,13 @@ elements of the two vectors are merged (concatenated) to form the output\n vector.\n \n @item VEC_EXTRACT_EVEN_EXPR\n-@item VEC_EXTRACT_ODD_EXPR\n+@itemx VEC_EXTRACT_ODD_EXPR\n These nodes represent extracting of the even/odd elements of the two input \n vectors, respectively. Their operands and result are vectors that contain the \n same number of elements of the same type.\n \n @item VEC_INTERLEAVE_HIGH_EXPR\n-@item VEC_INTERLEAVE_LOW_EXPR\n+@itemx VEC_INTERLEAVE_LOW_EXPR\n These nodes represent merging and interleaving of the high/low elements of the\n two input vectors, respectively. The operands and the result are vectors that \n contain the same number of elements (@code{N}) of the same type."}, {"sha": "148185ade23a432a7c89e68ce1dbdab160755884", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e", "patch": "@@ -4235,8 +4235,8 @@ Three attributes are currently defined for the Blackfin.\n \n @table @code\n @item l1_data\n-@item l1_data_A\n-@item l1_data_B\n+@itemx l1_data_A\n+@itemx l1_data_B\n @cindex @code{l1_data} variable attribute\n @cindex @code{l1_data_A} variable attribute\n @cindex @code{l1_data_B} variable attribute\n@@ -4308,7 +4308,7 @@ allows modules to make no assumptions about where variables might be\n stored.\n \n @item io\n-@item io (@var{addr})\n+@itemx io (@var{addr})\n Variables with the @code{io} attribute are used to address\n memory-mapped peripherals.  If an address is specified, the variable\n is assigned that address, else it is not assigned an address (it is\n@@ -4319,7 +4319,7 @@ int timer_count __attribute__((io(0x123)));\n @end example\n \n @item cb\n-@item cb (@var{addr})\n+@itemx cb (@var{addr})\n Variables with the @code{cb} attribute are used to access the control\n bus, using special instructions.  @code{addr} indicates the control bus\n address.  Example:"}, {"sha": "b5bf1fd1af459f967aabb861ccfd4ce28d6bdd50", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e", "patch": "@@ -1432,7 +1432,7 @@ increase the risk of undetected internal errors causing wrong code to be\n generated.\n \n @item --disable-stage1-checking\n-@item --enable-stage1-checking\n+@itemx --enable-stage1-checking\n @itemx --enable-stage1-checking=@var{list}\n If no @option{--enable-checking} option is specified the stage1\n compiler will be built with @samp{yes} checking enabled, otherwise"}, {"sha": "5cfd378e8a46041c18c962ca800b782f667cd30f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1588fb31f6f7b46532ca18a3cc2cb8e9bd25c71e", "patch": "@@ -15072,7 +15072,7 @@ stored, which means code that walks the stack frame across interrupts or\n signals may get corrupted data.\n \n @item -mavoid-indexed-addresses\n-@item -mno-avoid-indexed-addresses\n+@itemx -mno-avoid-indexed-addresses\n @opindex mavoid-indexed-addresses\n @opindex mno-avoid-indexed-addresses\n Generate code that tries to avoid (not avoid) the use of indexed load\n@@ -15543,14 +15543,14 @@ experiment and discover whether this feature is of benefit to their\n program.\n \n @item -msim\n-@item -mno-sim\n+@itemx -mno-sim\n @opindex msim\n @opindex mno-sim\n Use the simulator runtime.  The default is to use the libgloss board\n specific runtime.\n \n @item -mas100-syntax\n-@item -mno-as100-syntax\n+@itemx -mno-as100-syntax\n @opindex mas100-syntax\n @opindex mno-as100-syntax\n When generating assembler output use a syntax that is compatible with"}]}