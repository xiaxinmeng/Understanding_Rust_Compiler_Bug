{"sha": "de824c8b5dff45cd3ecd63b393d15f98a4f28e57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU4MjRjOGI1ZGZmNDVjZDNlY2Q2M2IzOTNkMTVmOThhNGYyOGU1Nw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-07-09T02:50:14Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-07-09T02:50:14Z"}, "message": "use #if for HARD_FRAME_POINTER_IS_FRAME_POINTER less\n\ngcc/ChangeLog:\n\n2015-07-08  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* combine.c (can_combine_def_p): Don't check the value of\n\tHARD_FRAME_POINTER_IS_FRAME_POINTER with the preprocessor.\n\t(combinable_i3pat): Likewise.\n\t(mark_used_regs_combine): Likewise.\n\t* regrename.c (rename_chains): Likewise.\n\t* reload.c (find_reloads_address): Likewise.\n\t* sel-sched.c (mark_unavailable_hard_regs): Likewise.\n\nFrom-SVN: r225594", "tree": {"sha": "48a331cf9403c1c96cb4cfd93dffe535dee4cf18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48a331cf9403c1c96cb4cfd93dffe535dee4cf18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de824c8b5dff45cd3ecd63b393d15f98a4f28e57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de824c8b5dff45cd3ecd63b393d15f98a4f28e57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de824c8b5dff45cd3ecd63b393d15f98a4f28e57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/comments", "author": null, "committer": null, "parents": [{"sha": "58f2ae18ff4d776b9e682e59d99391fbc515d351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58f2ae18ff4d776b9e682e59d99391fbc515d351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58f2ae18ff4d776b9e682e59d99391fbc515d351"}], "stats": {"total": 49, "additions": 26, "deletions": 23}, "files": [{"sha": "62ca364299d86eb665db06d75fa48cdfba0a5ff6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de824c8b5dff45cd3ecd63b393d15f98a4f28e57", "patch": "@@ -1,3 +1,13 @@\n+2015-07-08  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* combine.c (can_combine_def_p): Don't check the value of\n+\tHARD_FRAME_POINTER_IS_FRAME_POINTER with the preprocessor.\n+\t(combinable_i3pat): Likewise.\n+\t(mark_used_regs_combine): Likewise.\n+\t* regrename.c (rename_chains): Likewise.\n+\t* reload.c (find_reloads_address): Likewise.\n+\t* sel-sched.c (mark_unavailable_hard_regs): Likewise.\n+\n 2015-07-08  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* combine.c (update_rsp_from_reg_equal): Don't check if"}, {"sha": "2188926090ecb2ce3ab0f5533026b39fee7bc766", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=de824c8b5dff45cd3ecd63b393d15f98a4f28e57", "patch": "@@ -1004,10 +1004,9 @@ can_combine_def_p (df_ref def)\n   /* Do not combine frame pointer adjustments.  */\n   if ((regno == FRAME_POINTER_REGNUM\n        && (!reload_completed || frame_pointer_needed))\n-#if !HARD_FRAME_POINTER_IS_FRAME_POINTER\n-      || (regno == HARD_FRAME_POINTER_REGNUM\n+      || (!HARD_FRAME_POINTER_IS_FRAME_POINTER\n+\t  && regno == HARD_FRAME_POINTER_REGNUM\n \t  && (!reload_completed || frame_pointer_needed))\n-#endif\n       || (FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n \t  && regno == ARG_POINTER_REGNUM && fixed_regs[regno]))\n     return false;\n@@ -2221,9 +2220,8 @@ combinable_i3pat (rtx_insn *i3, rtx *loc, rtx i2dest, rtx i1dest, rtx i0dest,\n \t  && REG_P (subdest)\n \t  && reg_referenced_p (subdest, PATTERN (i3))\n \t  && REGNO (subdest) != FRAME_POINTER_REGNUM\n-#if !HARD_FRAME_POINTER_IS_FRAME_POINTER\n-\t  && REGNO (subdest) != HARD_FRAME_POINTER_REGNUM\n-#endif\n+\t  && (HARD_FRAME_POINTER_IS_FRAME_POINTER\n+\t      || REGNO (subdest) != HARD_FRAME_POINTER_REGNUM)\n \t  && (FRAME_POINTER_REGNUM == ARG_POINTER_REGNUM\n \t      || (REGNO (subdest) != ARG_POINTER_REGNUM\n \t\t  || ! fixed_regs [REGNO (subdest)]))\n@@ -13322,9 +13320,8 @@ mark_used_regs_combine (rtx x)\n \t{\n \t  /* None of this applies to the stack, frame or arg pointers.  */\n \t  if (regno == STACK_POINTER_REGNUM\n-#if !HARD_FRAME_POINTER_IS_FRAME_POINTER\n-\t      || regno == HARD_FRAME_POINTER_REGNUM\n-#endif\n+\t      || (!HARD_FRAME_POINTER_IS_FRAME_POINTER\n+\t\t  && regno == HARD_FRAME_POINTER_REGNUM)\n \t      || (FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n \t\t  && regno == ARG_POINTER_REGNUM && fixed_regs[regno])\n \t      || regno == FRAME_POINTER_REGNUM)"}, {"sha": "e5248a54f62864e64f98ed02f63787a5356d77a7", "filename": "gcc/regrename.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=de824c8b5dff45cd3ecd63b393d15f98a4f28e57", "patch": "@@ -442,12 +442,10 @@ rename_chains (void)\n \tcontinue;\n \n       if (fixed_regs[reg] || global_regs[reg]\n-#if !HARD_FRAME_POINTER_IS_FRAME_POINTER\n-\t  || (frame_pointer_needed && reg == HARD_FRAME_POINTER_REGNUM)\n-#else\n-\t  || (frame_pointer_needed && reg == FRAME_POINTER_REGNUM)\n-#endif\n-\t  )\n+\t  || (!HARD_FRAME_POINTER_IS_FRAME_POINTER && frame_pointer_needed\n+\t      && reg == HARD_FRAME_POINTER_REGNUM)\n+\t  || (HARD_FRAME_POINTER_REGNUM && frame_pointer_needed\n+\t      && reg == FRAME_POINTER_REGNUM))\n \tcontinue;\n \n       COPY_HARD_REG_SET (this_unavailable, unavailable);"}, {"sha": "771f9b46bf3d758ac5186e7eb21006c16de95d3e", "filename": "gcc/reload.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=de824c8b5dff45cd3ecd63b393d15f98a4f28e57", "patch": "@@ -5169,9 +5169,8 @@ find_reloads_address (machine_mode mode, rtx *memrefloc, rtx ad,\n       if ((regno_ok_for_base_p (REGNO (operand), mode, as, inner_code,\n \t\t\t\tGET_CODE (addend))\n \t   || operand == frame_pointer_rtx\n-#if !HARD_FRAME_POINTER_IS_FRAME_POINTER\n-\t   || operand == hard_frame_pointer_rtx\n-#endif\n+\t   || (!HARD_FRAME_POINTER_IS_FRAME_POINTER\n+\t       && operand == hard_frame_pointer_rtx)\n \t   || (FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n \t       && operand == arg_pointer_rtx)\n \t   || operand == stack_pointer_rtx)"}, {"sha": "ec2ab05c3b320a702dc68eef94267045ab53b9f6", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de824c8b5dff45cd3ecd63b393d15f98a4f28e57/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=de824c8b5dff45cd3ecd63b393d15f98a4f28e57", "patch": "@@ -1191,11 +1191,10 @@ mark_unavailable_hard_regs (def_t def, struct reg_rename *reg_rename_p,\n      frame pointer, or we could not discover its class.  */\n   if (fixed_regs[regno]\n       || global_regs[regno]\n-#if !HARD_FRAME_POINTER_IS_FRAME_POINTER\n-      || (frame_pointer_needed && regno == HARD_FRAME_POINTER_REGNUM)\n-#else\n-      || (frame_pointer_needed && regno == FRAME_POINTER_REGNUM)\n-#endif\n+      || (!HARD_FRAME_POINTER_IS_FRAME_POINTER && frame_pointer_needed\n+\t  && regno == HARD_FRAME_POINTER_REGNUM)\n+      || (HARD_FRAME_POINTER_REGNUM && frame_pointer_needed\n+\t  && regno == FRAME_POINTER_REGNUM)\n       || (reload_completed && cl == NO_REGS))\n     {\n       SET_HARD_REG_SET (reg_rename_p->unavailable_hard_regs);"}]}