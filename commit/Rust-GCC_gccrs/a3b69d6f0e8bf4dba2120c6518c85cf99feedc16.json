{"sha": "a3b69d6f0e8bf4dba2120c6518c85cf99feedc16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNiNjlkNmYwZThiZjRkYmEyMTIwYzY1MThjODVjZjk5ZmVlZGMxNg==", "commit": {"author": {"name": "Yaakov Selkowitz", "email": "yselkowi@redhat.com", "date": "2014-08-19T14:59:19Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2014-08-19T14:59:19Z"}, "message": "cygwin-stdint.h: Throughout, make type definitions dependent on target architecture, not host.\n\n2014-08-19  Yaakov Selkowitz  <yselkowi@redhat.com>\n\n        * config/i386/cygwin-stdint.h: Throughout, make type\n        definitions dependent on target architecture, not host.\n\nFrom-SVN: r214156", "tree": {"sha": "ee22b8abd9022922fe97625bf3797b98175a08f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee22b8abd9022922fe97625bf3797b98175a08f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3b69d6f0e8bf4dba2120c6518c85cf99feedc16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b69d6f0e8bf4dba2120c6518c85cf99feedc16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b69d6f0e8bf4dba2120c6518c85cf99feedc16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b69d6f0e8bf4dba2120c6518c85cf99feedc16/comments", "author": {"login": "yselkowitz", "id": 13408495, "node_id": "MDQ6VXNlcjEzNDA4NDk1", "avatar_url": "https://avatars.githubusercontent.com/u/13408495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yselkowitz", "html_url": "https://github.com/yselkowitz", "followers_url": "https://api.github.com/users/yselkowitz/followers", "following_url": "https://api.github.com/users/yselkowitz/following{/other_user}", "gists_url": "https://api.github.com/users/yselkowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yselkowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yselkowitz/subscriptions", "organizations_url": "https://api.github.com/users/yselkowitz/orgs", "repos_url": "https://api.github.com/users/yselkowitz/repos", "events_url": "https://api.github.com/users/yselkowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/yselkowitz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fe8c024aaebab2bce6c2e4636a6d2cb7cafff5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fe8c024aaebab2bce6c2e4636a6d2cb7cafff5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fe8c024aaebab2bce6c2e4636a6d2cb7cafff5f"}], "stats": {"total": 62, "additions": 17, "deletions": 45}, "files": [{"sha": "f7a84c0b74cdf3c542c92193c2f1061fba919114", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b69d6f0e8bf4dba2120c6518c85cf99feedc16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b69d6f0e8bf4dba2120c6518c85cf99feedc16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3b69d6f0e8bf4dba2120c6518c85cf99feedc16", "patch": "@@ -1,3 +1,8 @@\n+2014-08-19  Yaakov Selkowitz  <yselkowi@redhat.com>\n+\n+\t* config/i386/cygwin-stdint.h: Throughout, make type\n+\tdefinitions dependent on target architecture, not host.\n+\n 2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtl.h (PREV_INSN): Convert to an inline function.  Strengthen"}, {"sha": "9ec27ddb7e3abddad0965d439b9e6eb6eb7d45ec", "filename": "gcc/config/i386/cygwin-stdint.h", "status": "modified", "additions": 12, "deletions": 45, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b69d6f0e8bf4dba2120c6518c85cf99feedc16/gcc%2Fconfig%2Fi386%2Fcygwin-stdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b69d6f0e8bf4dba2120c6518c85cf99feedc16/gcc%2Fconfig%2Fi386%2Fcygwin-stdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin-stdint.h?ref=a3b69d6f0e8bf4dba2120c6518c85cf99feedc16", "patch": "@@ -24,71 +24,38 @@ along with GCC; see the file COPYING3.  If not see\n #define INT8_TYPE \"signed char\"\n #define INT16_TYPE \"short int\"\n #define INT32_TYPE \"int\"\n-#ifdef __x86_64__\n-#define INT64_TYPE \"long int\"\n-#else\n-#define INT64_TYPE \"long long int\"\n-#endif\n+#define INT64_TYPE (TARGET_64BIT ? \"long int\" : \"long long int\")\n \n #define UINT8_TYPE \"unsigned char\"\n #define UINT16_TYPE \"short unsigned int\"\n #define UINT32_TYPE \"unsigned int\"\n-#ifdef __x86_64__\n-#define UINT64_TYPE \"long unsigned int\"\n-#else\n-#define UINT64_TYPE \"long long unsigned int\"\n-#endif\n+#define UINT64_TYPE (TARGET_64BIT ? \"long unsigned int\" : \"long long unsigned int\")\n \n /* Minimum-width integer types */\n \n #define INT_LEAST8_TYPE \"signed char\"\n #define INT_LEAST16_TYPE \"short int\"\n #define INT_LEAST32_TYPE \"int\"\n-#ifdef __x86_64__\n-#define INT_LEAST64_TYPE \"long int\"\n-#else\n-#define INT_LEAST64_TYPE \"long long int\"\n-#endif\n+#define INT_LEAST64_TYPE (TARGET_64BIT ? \"long int\" : \"long long int\")\n \n #define UINT_LEAST8_TYPE \"unsigned char\"\n #define UINT_LEAST16_TYPE \"short unsigned int\"\n #define UINT_LEAST32_TYPE \"unsigned int\"\n-#ifdef __x86_64__\n-#define UINT_LEAST64_TYPE \"long unsigned int\"\n-#else\n-#define UINT_LEAST64_TYPE \"long long unsigned int\"\n-#endif\n+#define UINT_LEAST64_TYPE (TARGET_64BIT ? \"long unsigned int\" : \"long long unsigned int\")\n \n /* Fastest minimum-width integer types */\n \n #define INT_FAST8_TYPE \"signed char\"\n-#ifdef __x86_64__\n-#define INT_FAST16_TYPE \"long int\"\n-#define INT_FAST32_TYPE \"long int\"\n-#define INT_FAST64_TYPE \"long int\"\n-#else\n-#define INT_FAST16_TYPE \"int\"\n-#define INT_FAST32_TYPE \"int\"\n-#define INT_FAST64_TYPE \"long long int\"\n-#endif\n+#define INT_FAST16_TYPE (TARGET_64BIT ? \"long int\" : \"int\")\n+#define INT_FAST32_TYPE (TARGET_64BIT ? \"long int\" : \"int\")\n+#define INT_FAST64_TYPE (TARGET_64BIT ? \"long int\" : \"long long int\")\n \n #define UINT_FAST8_TYPE \"unsigned char\"\n-#ifdef __x86_64__\n-#define UINT_FAST16_TYPE \"long unsigned int\"\n-#define UINT_FAST32_TYPE \"long unsigned int\"\n-#define UINT_FAST64_TYPE \"long unsigned int\"\n-#else\n-#define UINT_FAST16_TYPE \"unsigned int\"\n-#define UINT_FAST32_TYPE \"unsigned int\"\n-#define UINT_FAST64_TYPE \"long long unsigned int\"\n-#endif\n+#define UINT_FAST16_TYPE (TARGET_64BIT ? \"long unsigned int\" : \"unsigned int\")\n+#define UINT_FAST32_TYPE (TARGET_64BIT ? \"long unsigned int\" : \"unsigned int\")\n+#define UINT_FAST64_TYPE (TARGET_64BIT ? \"long unsigned int\" : \"long long unsigned int\")\n \n /* Integer types capable of holding object pointers */\n \n-#ifdef __x86_64__\n-#define INTPTR_TYPE \"long int\"\n-#define UINTPTR_TYPE \"long unsigned int\"\n-#else\n-#define INTPTR_TYPE \"int\"\n-#define UINTPTR_TYPE \"unsigned int\"\n-#endif\n+#define INTPTR_TYPE (TARGET_64BIT ? \"long int\" : \"int\")\n+#define UINTPTR_TYPE (TARGET_64BIT ? \"long unsigned int\" : \"unsigned int\")"}]}