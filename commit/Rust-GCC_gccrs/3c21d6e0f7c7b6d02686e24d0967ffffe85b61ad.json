{"sha": "3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyMWQ2ZTBmN2M3YjZkMDI2ODZlMjRkMDk2N2ZmZmZlODViNjFhZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-10-22T21:53:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-22T21:53:21Z"}, "message": "locale_facets.tcc (__int_to_char): Remove the const int parameter.\n\n2003-10-22  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (__int_to_char): Remove\n\tthe const int parameter.\n\t(_M_insert_int): Update caller.\n\t* src/locale-inst.cc (__int_to_char): Update instantiations.\n\nFrom-SVN: r72825", "tree": {"sha": "18e37683ec6748f897e3159bed0332c45b06a592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18e37683ec6748f897e3159bed0332c45b06a592"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad/comments", "author": null, "committer": null, "parents": [{"sha": "25412599b4618a042ef23c2de92d423391679ad8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25412599b4618a042ef23c2de92d423391679ad8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25412599b4618a042ef23c2de92d423391679ad8"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "218ce7a9047c3078e13eb6eadf82c195140e3a89", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad", "patch": "@@ -1,3 +1,10 @@\n+2003-10-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (__int_to_char): Remove\n+\tthe const int parameter.\n+\t(_M_insert_int): Update caller.\n+\t* src/locale-inst.cc (__int_to_char): Update instantiations.\t\n+\n 2003-10-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.h: Correct byname facets for \"C\""}, {"sha": "0f8d2b5d23204c269e6187afce534c2d642f81a9", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad", "patch": "@@ -666,8 +666,8 @@ namespace std\n   // Forwarding functions to peel signed from unsigned integer types.\n   template<typename _CharT>\n     inline int\n-    __int_to_char(_CharT* __out, const int __size, long __v,\n-\t\t  const _CharT* __lit, ios_base::fmtflags __flags)\n+    __int_to_char(_CharT* __bufend, long __v, const _CharT* __lit,\n+\t\t  ios_base::fmtflags __flags)\n     {\n       unsigned long __ul = static_cast<unsigned long>(__v);\n       bool __neg = false;\n@@ -676,20 +676,20 @@ namespace std\n \t  __ul = -__ul;\n \t  __neg = true;\n \t}\n-      return __int_to_char(__out, __size, __ul, __lit, __flags, __neg); \n+      return __int_to_char(__bufend, __ul, __lit, __flags, __neg); \n     }\n \n   template<typename _CharT>\n     inline int\n-    __int_to_char(_CharT* __out, const int __size, unsigned long __v,\n-\t\t  const _CharT* __lit, ios_base::fmtflags __flags)\n-    { return __int_to_char(__out, __size, __v, __lit, __flags, false); }\n+    __int_to_char(_CharT* __bufend, unsigned long __v, const _CharT* __lit,\n+\t\t  ios_base::fmtflags __flags)\n+    { return __int_to_char(__bufend, __v, __lit, __flags, false); }\n \n #ifdef _GLIBCXX_USE_LONG_LONG\n   template<typename _CharT>\n     inline int\n-    __int_to_char(_CharT* __out, const int __size, long long __v,\n-\t\t  const _CharT* __lit, ios_base::fmtflags __flags)\n+    __int_to_char(_CharT* __bufend, long long __v, const _CharT* __lit,\n+\t\t  ios_base::fmtflags __flags)\n     { \n       unsigned long long __ull = static_cast<unsigned long long>(__v);\n       bool __neg = false;\n@@ -698,25 +698,24 @@ namespace std\n \t  __ull = -__ull;\n \t  __neg = true;\n \t}\n-      return __int_to_char(__out, __size, __ull, __lit, __flags, __neg); \n+      return __int_to_char(__bufend, __ull, __lit, __flags, __neg); \n     }\n \n   template<typename _CharT>\n     inline int\n-    __int_to_char(_CharT* __out, const int __size, unsigned long long __v,\n-\t\t  const _CharT* __lit, ios_base::fmtflags __flags)\n-    { return __int_to_char(__out, __size, __v, __lit, __flags, false); }\n+    __int_to_char(_CharT* __bufend, unsigned long long __v, const _CharT* __lit,\n+\t\t  ios_base::fmtflags __flags)\n+    { return __int_to_char(__bufend, __v, __lit, __flags, false); }\n #endif\n       \n   template<typename _CharT, typename _ValueT>\n     int\n-    __int_to_char(_CharT* __out, const int __size, _ValueT __v,\n-\t\t  const _CharT* __lit, ios_base::fmtflags __flags, bool __neg)\n+    __int_to_char(_CharT* __bufend, _ValueT __v, const _CharT* __lit,\n+\t\t  ios_base::fmtflags __flags, bool __neg)\n     {\n       // Don't write base if already 0.\n       const bool __showbase = (__flags & ios_base::showbase) && __v;\n       const ios_base::fmtflags __basefield = __flags & ios_base::basefield;\n-      _CharT* const __bufend = __out + __size;\n       _CharT* __buf = __bufend - 1;\n \n       if (__builtin_expect(__basefield != ios_base::oct &&\n@@ -823,7 +822,7 @@ namespace std\n \t// [22.2.2.2.2] Stage 1, numeric conversion to character.\n \t// Result is returned right-justified in the buffer.\n \tint __len;\n-\t__len = __int_to_char(&__cs[0], __ilen, __v, __lit, __io.flags());\n+\t__len = __int_to_char(__cs + __ilen, __v, __lit, __io.flags());\n \t__cs += __ilen - __len;\n \t\n \t// Add grouping, if necessary. "}, {"sha": "35140ea70945e11d5ba4e90e7ca79cd149c1f32a", "filename": "libstdc++-v3/src/locale-inst.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc?ref=3c21d6e0f7c7b6d02686e24d0967ffffe85b61ad", "patch": "@@ -239,13 +239,13 @@ namespace std\n \n   template\n     int\n-    __int_to_char(C*, const int, unsigned long, const C*, \n+    __int_to_char(C*, unsigned long, const C*,\n \t\t  ios_base::fmtflags, bool);\n \n #ifdef _GLIBCXX_USE_LONG_LONG\n   template\n     int\n-    __int_to_char(C*, const int, unsigned long long, const C*, \n+    __int_to_char(C*, unsigned long long, const C*, \n \t\t  ios_base::fmtflags, bool);\n #endif\n } // namespace std"}]}