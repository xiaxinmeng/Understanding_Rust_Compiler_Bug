{"sha": "0d9564747f44c5d650c3dad74097c063f9a12ad3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ5NTY0NzQ3ZjQ0YzVkNjUwYzNkYWQ3NDA5N2MwNjNmOWExMmFkMw==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-01-15T01:39:58Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-01-15T01:39:58Z"}, "message": "re PR c++/8856 (g++ accepts invalid conversion-function-id)\n\n\tPR c++/8856\n\t* parser.c (cp_parser_template_name): Don't try to parse a\n\tconversion-function-id, as it cannot be a template-name.\n\t(cp_parser_simple_type_specifier): Check for invalid template-ids\n\teven after a built-in type.\n\nFrom-SVN: r75897", "tree": {"sha": "ea278fe76b46ba3f98ccb5652e3cfb5a9713bd49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea278fe76b46ba3f98ccb5652e3cfb5a9713bd49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d9564747f44c5d650c3dad74097c063f9a12ad3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9564747f44c5d650c3dad74097c063f9a12ad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d9564747f44c5d650c3dad74097c063f9a12ad3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d9564747f44c5d650c3dad74097c063f9a12ad3/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38bdcc805a4d2d85df84faa09b466ecff7cb832b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38bdcc805a4d2d85df84faa09b466ecff7cb832b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38bdcc805a4d2d85df84faa09b466ecff7cb832b"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "97f60f298ba943b78053552e360df437af78d7af", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d9564747f44c5d650c3dad74097c063f9a12ad3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d9564747f44c5d650c3dad74097c063f9a12ad3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0d9564747f44c5d650c3dad74097c063f9a12ad3", "patch": "@@ -1,3 +1,11 @@\n+2004-01-15  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/8856\n+\t* parser.c (cp_parser_template_name): Don't try to parse a \n+\tconversion-function-id, as it cannot be a template-name.\n+\t(cp_parser_simple_type_specifier): Check for invalid template-ids\n+\teven after a built-in type.\n+\n 2004-01-14  Jan Hubicka  <jh@suse.cz>\n \n \tPR c++/12850"}, {"sha": "31c327ad415ace803b418a874350d4f6e47671d0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d9564747f44c5d650c3dad74097c063f9a12ad3/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d9564747f44c5d650c3dad74097c063f9a12ad3/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=0d9564747f44c5d650c3dad74097c063f9a12ad3", "patch": "@@ -7882,10 +7882,19 @@ cp_parser_template_id (cp_parser *parser,\n    template-name:\n      identifier\n      operator-function-id\n-     conversion-function-id\n \n    A defect report has been filed about this issue.\n \n+   A conversion-function-id cannot be a template name because they cannot\n+   be part of a template-id. In fact, looking at this code:\n+\n+   a.operator K<int>()\n+\n+   the conversion-function-id is \"operator K<int>\", and K<int> is a type-id.\n+   It is impossible to call a templated conversion-function-id with an \n+   explicit argument list, since the only allowed template parameter is\n+   the type to which it is converting.\n+\n    If TEMPLATE_KEYWORD_P is true, then we have just seen the\n    `template' keyword, in a construction like:\n \n@@ -7922,7 +7931,10 @@ cp_parser_template_name (cp_parser* parser,\n       identifier = cp_parser_operator_function_id (parser);\n       /* If that didn't work, try a conversion-function-id.  */\n       if (!cp_parser_parse_definitely (parser))\n-\tidentifier = cp_parser_conversion_function_id (parser);\n+        {\n+\t  cp_parser_error (parser, \"expected template-name\");\n+\t  return error_mark_node;\n+        }\n     }\n   /* Look for the identifier.  */\n   else\n@@ -8705,6 +8717,12 @@ cp_parser_simple_type_specifier (cp_parser* parser, cp_parser_flags flags,\n \n       /* Consume the token.  */\n       id = cp_lexer_consume_token (parser->lexer)->value;\n+\n+      /* There is no valid C++ program where a non-template type is\n+\t followed by a \"<\".  That usually indicates that the user thought\n+\t that the type was a template.  */\n+      cp_parser_check_for_invalid_template_id (parser, type);\n+\n       return identifier_p ? id : TYPE_NAME (type);\n     }\n "}]}