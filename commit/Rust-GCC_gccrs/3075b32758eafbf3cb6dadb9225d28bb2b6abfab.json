{"sha": "3075b32758eafbf3cb6dadb9225d28bb2b6abfab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA3NWIzMjc1OGVhZmJmM2NiNmRhZGI5MjI1ZDI4YmIyYjZhYmZhYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-12-12T14:48:31Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-12-12T14:48:31Z"}, "message": "PR c++/13114, c++/13115\n\n\tPR c++/13114, c++/13115\n\t* class.c (layout_empty_base): Propagate the move of an empty base\n\tto offset zero.\n\nFrom-SVN: r74573", "tree": {"sha": "873f492ce2abcc2b7a5dd9aa0caaad6cdcccb74b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/873f492ce2abcc2b7a5dd9aa0caaad6cdcccb74b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3075b32758eafbf3cb6dadb9225d28bb2b6abfab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3075b32758eafbf3cb6dadb9225d28bb2b6abfab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3075b32758eafbf3cb6dadb9225d28bb2b6abfab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3075b32758eafbf3cb6dadb9225d28bb2b6abfab/comments", "author": null, "committer": null, "parents": [{"sha": "77fec971c15551081d6eccb41275dd1c4e10e73c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77fec971c15551081d6eccb41275dd1c4e10e73c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77fec971c15551081d6eccb41275dd1c4e10e73c"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "6b57a9137bc57c32311dd7a45d13ef5f20261622", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3075b32758eafbf3cb6dadb9225d28bb2b6abfab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3075b32758eafbf3cb6dadb9225d28bb2b6abfab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3075b32758eafbf3cb6dadb9225d28bb2b6abfab", "patch": "@@ -1,5 +1,9 @@\n 2003-12-12  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/13114, c++/13115\n+\t* class.c (layout_empty_base): Propagate the move of an empty base\n+\tto offset zero.\n+\n \tPR c++/12881\n \t* method.c (make_thunk): Deal with thunk aliases when searching\n \tfor a thunk. Robustify assertion."}, {"sha": "bc4445241a3668e934f24967649dd84228612ab1", "filename": "gcc/cp/class.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3075b32758eafbf3cb6dadb9225d28bb2b6abfab/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3075b32758eafbf3cb6dadb9225d28bb2b6abfab/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=3075b32758eafbf3cb6dadb9225d28bb2b6abfab", "patch": "@@ -3576,14 +3576,18 @@ layout_empty_base (tree binfo, tree eoc, splay_tree offsets)\n   /* This routine should only be used for empty classes.  */\n   my_friendly_assert (is_empty_class (basetype), 20000321);\n   alignment = ssize_int (CLASSTYPE_ALIGN_UNIT (basetype));\n-  \n-  if (abi_version_at_least (2))\n-    BINFO_OFFSET (binfo) = size_zero_node;\n-  if (warn_abi && !integer_zerop (BINFO_OFFSET (binfo)))\n-    warning (\"offset of empty base `%T' may not be ABI-compliant and may\"\n-\t     \"change in a future version of GCC\",\n-\t     BINFO_TYPE (binfo));\n \n+  if (!integer_zerop (BINFO_OFFSET (binfo)))\n+    {\n+      if (abi_version_at_least (2))\n+\tpropagate_binfo_offsets\n+\t  (binfo, size_diffop (size_zero_node, BINFO_OFFSET (binfo)));\n+      else if (warn_abi)\n+\twarning (\"offset of empty base `%T' may not be ABI-compliant and may\"\n+\t\t \"change in a future version of GCC\",\n+\t\t BINFO_TYPE (binfo));\n+    }\n+  \n   /* This is an empty base class.  We first try to put it at offset\n      zero.  */\n   if (layout_conflict_p (binfo,"}, {"sha": "87eb2a2708c7ff0dc7b3951917b2d953ed6bd4a5", "filename": "gcc/testsuite/g++.dg/abi/covariant2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3075b32758eafbf3cb6dadb9225d28bb2b6abfab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fcovariant2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3075b32758eafbf3cb6dadb9225d28bb2b6abfab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fcovariant2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fcovariant2.C?ref=3075b32758eafbf3cb6dadb9225d28bb2b6abfab", "patch": "@@ -2,7 +2,7 @@\n \n // Copyright (C) 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 12 Dec 2003 <nathan@codesourcery.com>\n-// Origin: Volker Reichelt <reichelt@igpm.rwth-aachen.de>\n+// Origin: grigory@stl.sarov.ru\n \n // PR c++/12881. ICE in thunk generation\n "}]}