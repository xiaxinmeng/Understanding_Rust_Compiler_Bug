{"sha": "60c4429c7e517425d5e43c688b720516a5338648", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBjNDQyOWM3ZTUxNzQyNWQ1ZTQzYzY4OGI3MjA1MTZhNTMzODY0OA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2007-05-21T22:48:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-05-21T22:48:38Z"}, "message": "c-cppbuiltin.c (c_cpp_builtins): Define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1...\n\n2007-05-21  Paolo Bonzini  <bonzini@gnu.org>\n            Paolo Carlini  <pcarlini@suse.de>\n\t    Uros Bizjak  <ubizjak@gmail.com>\n\n\t* c-cppbuiltin.c (c_cpp_builtins): Define\n\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1, __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2,\n\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4, __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8,\n\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16, if appropriate.\n\t* doc/cpp.texi ([Standard Predefined Macros]): Document.\n\n2007-05-21  Paolo Bonzini  <bonzini@gnu.org>\n            Paolo Carlini  <pcarlini@suse.de>\n\t    Uros Bizjak  <ubizjak@gmail.com>\n\n\t* gcc.dg/gcc-have-sync-compare-and-swap.c,\n\tgcc.target/i386/gcc-have-sync-compare-and-swap-1.c,\n\tgcc.target/i386/gcc-have-sync-compare-and-swap-2.c,\n\tgcc.target/i386/gcc-have-sync-compare-and-swap-3.c,\n\tgcc.target/i386/gcc-have-sync-compare-and-swap-4.c,\n\tNew testcases.\n\nCo-Authored-By: Paolo Carlini <pcarlini@suse.de>\nCo-Authored-By: Uros Bizjak <ubizjak@gmail.com>\n\nFrom-SVN: r124926", "tree": {"sha": "4f20e8ac3ee34a06b520c092b3071efa0f505105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f20e8ac3ee34a06b520c092b3071efa0f505105"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60c4429c7e517425d5e43c688b720516a5338648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c4429c7e517425d5e43c688b720516a5338648", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60c4429c7e517425d5e43c688b720516a5338648", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c4429c7e517425d5e43c688b720516a5338648/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b35264faba71c070736b4e5ac148b0ea5c910c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b35264faba71c070736b4e5ac148b0ea5c910c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b35264faba71c070736b4e5ac148b0ea5c910c0"}], "stats": {"total": 201, "additions": 201, "deletions": 0}, "files": [{"sha": "4dc3cd52536aabdff1f24c5f0b621ce78e815dc0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c4429c7e517425d5e43c688b720516a5338648/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c4429c7e517425d5e43c688b720516a5338648/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60c4429c7e517425d5e43c688b720516a5338648", "patch": "@@ -1,3 +1,13 @@\n+2007-05-21  Paolo Bonzini  <bonzini@gnu.org>\n+            Paolo Carlini  <pcarlini@suse.de>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins): Define\n+\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1, __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2,\n+\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4, __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8,\n+\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16, if appropriate.\n+\t* doc/cpp.texi ([Standard Predefined Macros]): Document.\n+\n 2007-05-21  Mike Stump  <mrs@apple.com>\n \n \t* config/darwin.h (LINK_COMMAND_SPEC): Add .cxx for dsymutil"}, {"sha": "1b52da0297558e7e5e3d999338e3102be1b8752d", "filename": "gcc/c-cppbuiltin.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-cppbuiltin.c?ref=60c4429c7e517425d5e43c688b720516a5338648", "patch": "@@ -547,6 +547,33 @@ c_cpp_builtins (cpp_reader *pfile)\n   if (c_dialect_cxx () && TYPE_UNSIGNED (wchar_type_node))\n     cpp_define (pfile, \"__WCHAR_UNSIGNED__\");\n \n+  /* Tell source code if the compiler makes sync_compare_and_swap\n+     builtins available.  */\n+#ifdef HAVE_sync_compare_and_swapqi\n+  if (HAVE_sync_compare_and_swapqi)\n+    cpp_define (pfile, \"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\");\n+#endif\n+\n+#ifdef HAVE_sync_compare_and_swaphi\n+  if (HAVE_sync_compare_and_swaphi)\n+    cpp_define (pfile, \"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\");\n+#endif\n+\n+#ifdef HAVE_sync_compare_and_swapsi\n+  if (HAVE_sync_compare_and_swapsi)\n+    cpp_define (pfile, \"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\");\n+#endif\n+\n+#ifdef HAVE_sync_compare_and_swapdi\n+  if (HAVE_sync_compare_and_swapdi)\n+    cpp_define (pfile, \"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\");\n+#endif\n+\n+#ifdef HAVE_sync_compare_and_swapti\n+  if (HAVE_sync_compare_and_swapti)\n+    cpp_define (pfile, \"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\");\n+#endif\n+\n   /* Make the choice of ObjC runtime visible to source code.  */\n   if (c_dialect_objc () && flag_next_runtime)\n     cpp_define (pfile, \"__NEXT_RUNTIME__\");"}, {"sha": "e6786cf81023f1796eeecd4ff4d081ade2ee5a96", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=60c4429c7e517425d5e43c688b720516a5338648", "patch": "@@ -2179,6 +2179,14 @@ If GCC cannot determine the current date, it will emit a warning message\n (once per compilation) and @code{__TIMESTAMP__} will expand to\n @code{@w{\"??? ??? ?? ??:??:?? ????\"}}.\n \n+@item __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n+@itemx __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n+@itemx __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+@itemx __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+@itemx __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+These macros are defined when the target processor supports atomic compare\n+and swap operations on operands 1, 2, 4, 8 or 16 bytes in length, respectively.\n+\n @end table\n \n @node System-specific Predefined Macros"}, {"sha": "af3830f51119d54e35c9499bf414566224865720", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60c4429c7e517425d5e43c688b720516a5338648", "patch": "@@ -1,3 +1,14 @@\n+2007-05-21  Paolo Bonzini  <bonzini@gnu.org>\n+            Paolo Carlini  <pcarlini@suse.de>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.dg/gcc-have-sync-compare-and-swap.c,\n+\tgcc.target/i386/gcc-have-sync-compare-and-swap-1.c,\n+\tgcc.target/i386/gcc-have-sync-compare-and-swap-2.c,\n+\tgcc.target/i386/gcc-have-sync-compare-and-swap-3.c,\n+\tgcc.target/i386/gcc-have-sync-compare-and-swap-4.c,\n+\tNew testcases.\n+\n 2005-05-21  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/32002"}, {"sha": "89527f6c3612e3c1d3203403344c38541a4f40e5", "filename": "gcc/testsuite/gcc.dg/gcc-have-sync-compare-and-swap.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.dg%2Fgcc-have-sync-compare-and-swap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.dg%2Fgcc-have-sync-compare-and-swap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgcc-have-sync-compare-and-swap.c?ref=60c4429c7e517425d5e43c688b720516a5338648", "patch": "@@ -0,0 +1,56 @@\n+/* { dg-do link } */\n+\n+void f1()\n+{\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n+  typedef int __attribute__  ((__mode__ (__QI__))) qi_int_type;\n+  qi_int_type qi_int;\n+  __sync_bool_compare_and_swap (&qi_int, (qi_int_type)0, (qi_int_type)1);\n+#endif\n+}\n+\n+void f2()\n+{\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n+  typedef int __attribute__ ((__mode__ (__HI__))) hi_int_type;\n+  hi_int_type hi_int;\n+  __sync_bool_compare_and_swap (&hi_int, (hi_int_type)0, (hi_int_type)1);\n+#endif\n+}\n+\n+void f4()\n+{\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+  typedef int __attribute__ ((__mode__ (__SI__))) si_int_type;\n+  si_int_type si_int;\n+  __sync_bool_compare_and_swap (&si_int, (si_int_type)0, (si_int_type)1);\n+#endif\n+}\n+\n+void f8()\n+{\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+  typedef int __attribute__ ((__mode__ (__DI__))) di_int_type;\n+  di_int_type di_int;\n+  __sync_bool_compare_and_swap (&di_int, (di_int_type)0, (di_int_type)1);\n+#endif\n+}\n+\n+void f16()\n+{\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+  typedef int __attribute__ ((__mode__ (__TI__))) ti_int_type;\n+  ti_int_type ti_int;\n+  __sync_bool_compare_and_swap (&ti_int, (ti_int_type)0, (ti_int_type)1);\n+#endif\n+}\n+\n+int main()\n+{\n+  f1();\n+  f2();\n+  f4();\n+  f8();\n+  f16();  \n+  return 0;\n+}"}, {"sha": "10e83233854043617d31930ce3c4ca8d4e41cd55", "filename": "gcc/testsuite/gcc.target/i386/gcc-have-sync-compare-and-swap-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-1.c?ref=60c4429c7e517425d5e43c688b720516a5338648", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do preprocess { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i386\" } */\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#error nonono\n+#endif"}, {"sha": "9ec0088c25916eb81c87284f0deaef2cbb2e17c4", "filename": "gcc/testsuite/gcc.target/i386/gcc-have-sync-compare-and-swap-2.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-2.c?ref=60c4429c7e517425d5e43c688b720516a5338648", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do preprocess { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i486\" } */\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#error nonono\n+#endif\n+"}, {"sha": "8d1889cb7e5cb0c47ae7ea07051a8ae2fa147277", "filename": "gcc/testsuite/gcc.target/i386/gcc-have-sync-compare-and-swap-3.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-3.c?ref=60c4429c7e517425d5e43c688b720516a5338648", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do preprocess { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-march=i586\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+#error nonono\n+#endif\n+\n+#ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#error nonono\n+#endif"}, {"sha": "558483bf49e9f442790e014ce551a6fe0af0d1a5", "filename": "gcc/testsuite/gcc.target/i386/gcc-have-sync-compare-and-swap-4.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c4429c7e517425d5e43c688b720516a5338648/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-4.c?ref=60c4429c7e517425d5e43c688b720516a5338648", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do preprocess { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n+/* { dg-options \"-mcx16\" } */\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+#error nonono\n+#endif\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#error nonono\n+#endif"}]}