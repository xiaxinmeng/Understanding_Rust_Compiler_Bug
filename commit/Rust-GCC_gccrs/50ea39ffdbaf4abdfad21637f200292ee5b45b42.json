{"sha": "50ea39ffdbaf4abdfad21637f200292ee5b45b42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBlYTM5ZmZkYmFmNGFiZGZhZDIxNjM3ZjIwMDI5MmVlNWI0NWI0Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-07-24T16:02:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-07-24T16:02:14Z"}, "message": "Core issue 702\n\n\tCore issue 702\n\t* call.c (compare_ics): Give list-initialization of std::init_list\n\tpriority over conversion to scalar, too.\n\nFrom-SVN: r150059", "tree": {"sha": "c7c67975df7d7912177f9f97794ed0ea560ea005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7c67975df7d7912177f9f97794ed0ea560ea005"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50ea39ffdbaf4abdfad21637f200292ee5b45b42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ea39ffdbaf4abdfad21637f200292ee5b45b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ea39ffdbaf4abdfad21637f200292ee5b45b42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ea39ffdbaf4abdfad21637f200292ee5b45b42/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a22fb74c2266c2eb002f9464d13d09b08425fa59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22fb74c2266c2eb002f9464d13d09b08425fa59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a22fb74c2266c2eb002f9464d13d09b08425fa59"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "6bb4a57561b17e752fe2e432465bdee63c3c66a0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea39ffdbaf4abdfad21637f200292ee5b45b42/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea39ffdbaf4abdfad21637f200292ee5b45b42/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50ea39ffdbaf4abdfad21637f200292ee5b45b42", "patch": "@@ -1,3 +1,9 @@\n+2009-07-24  Jason Merrill  <jason@redhat.com>\n+\n+\tCore issue 702\n+\t* call.c (compare_ics): Give list-initialization of std::init_list\n+\tpriority over conversion to scalar, too.\n+\n 2009-07-22  Jason Merrill  <jason@redhat.com>\n \n \t* mangle.c (mangle_type_string_for_rtti): Rename to be clearer."}, {"sha": "d396aff12fd48b18f8e40ab6f2dcefd5555e4c4d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea39ffdbaf4abdfad21637f200292ee5b45b42/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea39ffdbaf4abdfad21637f200292ee5b45b42/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=50ea39ffdbaf4abdfad21637f200292ee5b45b42", "patch": "@@ -6493,6 +6493,14 @@ compare_ics (conversion *ics1, conversion *ics2)\n   ref_conv1 = maybe_handle_ref_bind (&ics1);\n   ref_conv2 = maybe_handle_ref_bind (&ics2);\n \n+  /* List-initialization sequence L1 is a better conversion sequence than\n+     list-initialization sequence L2 if L1 converts to\n+     std::initializer_list<X> for some X and L2 does not.  */\n+  if (ics1->kind == ck_list && ics2->kind != ck_list)\n+    return 1;\n+  if (ics2->kind == ck_list && ics1->kind != ck_list)\n+    return -1;\n+\n   /* [over.ics.rank]\n \n      When  comparing  the  basic forms of implicit conversion sequences (as\n@@ -6543,26 +6551,13 @@ compare_ics (conversion *ics1, conversion *ics2)\n       conversion *t1;\n       conversion *t2;\n \n-      for (t1 = ics1; t1->kind != ck_user && t1->kind != ck_list; t1 = t1->u.next)\n+      for (t1 = ics1; t1->kind != ck_user; t1 = t1->u.next)\n \tif (t1->kind == ck_ambig || t1->kind == ck_aggr)\n \t  return 0;\n-      for (t2 = ics2; t2->kind != ck_user && t2->kind != ck_list; t2 = t2->u.next)\n+      for (t2 = ics2; t2->kind != ck_user; t2 = t2->u.next)\n \tif (t2->kind == ck_ambig || t2->kind == ck_aggr)\n \t  return 0;\n \n-      /* Conversion to std::initializer_list is better than other\n-\t user-defined conversions.  */\n-      if (t1->kind == ck_list\n-\t  || t2->kind == ck_list)\n-\t{\n-\t  if (t2->kind != ck_list)\n-\t    return 1;\n-\t  else if (t1->kind != ck_list)\n-\t    return -1;\n-\t  else\n-\t    return 0;\n-\t}\n-\n       if (t1->cand->fn != t2->cand->fn)\n \treturn 0;\n "}, {"sha": "ea7a034092c01404f050454c053eeef21ec26984", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea39ffdbaf4abdfad21637f200292ee5b45b42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea39ffdbaf4abdfad21637f200292ee5b45b42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50ea39ffdbaf4abdfad21637f200292ee5b45b42", "patch": "@@ -1,3 +1,7 @@\n+2009-07-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/initlist23.C: New.\n+\n 2009-07-24  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/40822"}, {"sha": "48a997fca205b2370feb22f98c9ee238149595d4", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist23.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50ea39ffdbaf4abdfad21637f200292ee5b45b42/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50ea39ffdbaf4abdfad21637f200292ee5b45b42/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist23.C?ref=50ea39ffdbaf4abdfad21637f200292ee5b45b42", "patch": "@@ -0,0 +1,15 @@\n+// { dg-options \"-std=c++0x\" }\n+\n+#include <initializer_list>\n+\n+struct A\n+{\n+  A& operator=(int i);\n+  A& operator=(std::initializer_list<int> l) { return *this; }\n+};\n+\n+int main()\n+{\n+  A a;\n+  a = { };\n+}"}]}