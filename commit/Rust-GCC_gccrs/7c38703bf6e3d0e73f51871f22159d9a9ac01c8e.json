{"sha": "7c38703bf6e3d0e73f51871f22159d9a9ac01c8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzODcwM2JmNmUzZDBlNzNmNTE4NzFmMjIxNTlkOWE5YWMwMWM4ZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-08-02T18:56:48Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-08-02T18:56:48Z"}, "message": "Fix typo\n\nFrom-SVN: r55995", "tree": {"sha": "49e485a5fa6da52eac1a86a72bcacf46b9f79feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49e485a5fa6da52eac1a86a72bcacf46b9f79feb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c38703bf6e3d0e73f51871f22159d9a9ac01c8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c38703bf6e3d0e73f51871f22159d9a9ac01c8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c38703bf6e3d0e73f51871f22159d9a9ac01c8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c38703bf6e3d0e73f51871f22159d9a9ac01c8e/comments", "author": null, "committer": null, "parents": [{"sha": "4a34e0e8cf793442874c3fa4d7edafa96b9da5ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a34e0e8cf793442874c3fa4d7edafa96b9da5ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a34e0e8cf793442874c3fa4d7edafa96b9da5ba"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6dea0ddd52de157a1671d418d034d4ba9ec15428", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c38703bf6e3d0e73f51871f22159d9a9ac01c8e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c38703bf6e3d0e73f51871f22159d9a9ac01c8e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=7c38703bf6e3d0e73f51871f22159d9a9ac01c8e", "patch": "@@ -551,7 +551,7 @@ build_method_call (instance, name, parms, basetype_path, flags)\n   \n   if (fn && TREE_CODE (fn) == TREE_LIST && !BASELINK_P (fn))\n     {\n-      error (\"request for member `%D' is ambiguos\", name);\n+      error (\"request for member `%D' is ambiguous\", name);\n       print_candidates (fn);\n       return error_mark_node;\n     }"}]}