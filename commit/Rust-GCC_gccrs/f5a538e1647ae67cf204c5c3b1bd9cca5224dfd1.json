{"sha": "f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1", "node_id": "C_kwDOANBUbNoAKGY1YTUzOGUxNjQ3YWU2N2NmMjA0YzVjM2IxYmQ5Y2NhNTIyNGRmZDE", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-10-12T08:54:18Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-10-12T08:54:18Z"}, "message": "Fortran version of libgomp.c-c++-common/icv-{3,4}.c\n\nThis adds the Fortran testsuite coverage of\nomp_{get_max,set_num}_threads and omp_{s,g}et_teams_thread_limit\n\nlibgomp/\n\t* testsuite/libgomp.fortran/icv-3.f90: New.\n\t* testsuite/libgomp.fortran/icv-4.f90: New.", "tree": {"sha": "366f289c75d37d2e15bfb9c7d6d6fceaa699dc32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/366f289c75d37d2e15bfb9c7d6d6fceaa699dc32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb92cd57a1ebe7cd7589bdbec34d9ae337752ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb92cd57a1ebe7cd7589bdbec34d9ae337752ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb92cd57a1ebe7cd7589bdbec34d9ae337752ead"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "b2ccd776223f1cbbf80c1b9807f8cb2f621cdf0e", "filename": "libgomp/testsuite/libgomp.fortran/icv-3.f90", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ficv-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ficv-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ficv-3.f90?ref=f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1", "patch": "@@ -0,0 +1,60 @@\n+use omp_lib\n+implicit none (type, external)\n+  if (.not. env_exists (\"OMP_NUM_TEAMS\") &\n+      .and. omp_get_max_teams () /= 0) &\n+    error stop 1\n+  call omp_set_num_teams (7)\n+  if (omp_get_max_teams () /= 7) &\n+    error stop 2\n+  if (.not. env_exists (\"OMP_TEAMS_THREAD_LIMIT\") &\n+      .and. omp_get_teams_thread_limit () /= 0) &\n+    error stop 3\n+  call omp_set_teams_thread_limit (15)\n+  if (omp_get_teams_thread_limit () /= 15) &\n+    error stop 4\n+  !$omp teams\n+    if (omp_get_max_teams () /= 7 &\n+        .or. omp_get_teams_thread_limit () /= 15 &\n+        .or. omp_get_num_teams () < 1 &\n+        .or. omp_get_num_teams () > 7 &\n+        .or. omp_get_team_num () < 0 &\n+        .or. omp_get_team_num () >= omp_get_num_teams () &\n+        .or. omp_get_thread_limit () < 1 &\n+        .or. omp_get_thread_limit () > 15) &\n+      error stop 5\n+  !$omp end teams\n+  !$omp teams num_teams(5) thread_limit (13)\n+    if (omp_get_max_teams () /= 7 &\n+        .or. omp_get_teams_thread_limit () /= 15 &\n+        .or. omp_get_num_teams () /= 5 &\n+        .or. omp_get_team_num () < 0 &\n+        .or. omp_get_team_num () >= omp_get_num_teams () &\n+        .or. omp_get_thread_limit () < 1 &\n+        .or. omp_get_thread_limit () > 13) &\n+      error stop 6\n+  !$omp end teams\n+  !$omp teams num_teams(8) thread_limit (16)\n+    if (omp_get_max_teams () /= 7 &\n+        .or. omp_get_teams_thread_limit () /= 15 &\n+        .or. omp_get_num_teams () /= 8 &\n+        .or. omp_get_team_num () < 0 &\n+        .or. omp_get_team_num () >= omp_get_num_teams () &\n+        .or. omp_get_thread_limit () < 1 &\n+        .or. omp_get_thread_limit () > 16) &\n+      error stop 7\n+  !$omp end teams\n+contains\n+  logical function env_exists (name)\n+    character(len=*) :: name\n+    character(len=40) :: val\n+    integer :: stat\n+    call get_environment_variable (name, val, status=stat)\n+    if (stat == 0) then\n+      env_exists = .true.\n+    else if (stat == 1) then\n+      env_exists = .false.\n+    else\n+      error stop 10\n+    endif\n+  end\n+end"}, {"sha": "f76c96d7d0d814d1ff56f1681d7c8d44aa6b99ed", "filename": "libgomp/testsuite/libgomp.fortran/icv-4.f90", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ficv-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ficv-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ficv-4.f90?ref=f5a538e1647ae67cf204c5c3b1bd9cca5224dfd1", "patch": "@@ -0,0 +1,45 @@\n+! { dg-set-target-env-var OMP_NUM_TEAMS \"6\" }\n+! { dg-set-target-env-var OMP_TEAMS_THREAD_LIMIT \"12\" }\n+\n+use omp_lib\n+implicit none (type, external)\n+  if (env_is_set (\"OMP_NUM_TEAMS\", \"6\")) then\n+    if (omp_get_max_teams () /= 6) &\n+      error stop 1\n+  else\n+    call omp_set_num_teams (6)\n+  end if\n+  if (env_is_set (\"OMP_TEAMS_THREAD_LIMIT\", \"12\")) then\n+    if (omp_get_teams_thread_limit () /= 12) &\n+      error stop 2\n+  else\n+    call omp_set_teams_thread_limit (12)\n+  end if\n+  !$omp teams\n+    if (omp_get_max_teams () /= 6 &\n+        .or. omp_get_teams_thread_limit () /= 12 &\n+        .or. omp_get_num_teams () < 1 &\n+        .or. omp_get_num_teams () > 6 &\n+        .or. omp_get_team_num () < 0 &\n+        .or. omp_get_team_num () >= omp_get_num_teams () &\n+        .or. omp_get_thread_limit () < 1 &\n+        .or. omp_get_thread_limit () > 12) &\n+      error stop 3\n+  !$omp end teams\n+contains\n+  logical function env_is_set (name, val)\n+    character(len=*) :: name, val\n+    character(len=40) :: val2\n+    integer :: stat\n+    call get_environment_variable (name, val2, status=stat)\n+    if (stat == 0) then\n+      if (val == val2) then\n+        env_is_set = .true.\n+        return\n+      end if\n+    else if (stat /= 1) then\n+      error stop 10\n+    endif\n+    env_is_set = .false.\n+  end\n+end"}]}