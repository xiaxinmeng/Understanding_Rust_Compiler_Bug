{"sha": "d13835b668ac64ae062fa0c765476d229b6b2c22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEzODM1YjY2OGFjNjRhZTA2MmZhMGM3NjU0NzZkMjI5YjZiMmMyMg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-07-08T20:29:12Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-07-08T20:29:12Z"}, "message": "re PR rtl-optimization/71621 (ICE in assign_by_spills, at lra-assigns.c:1417 (error: unable to find a register to spill) w/ -O2 -mavx2 -ftree-vectorize)\n\n2016-07-08  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/71621\n\t* lra-constraints.c (process_alt_operands): Check combination of\n\treg class and mode.\n\n2016-07-08  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/71621\n\t* gcc.target/i386/pr71621-1.c: New.\n\t* gcc.target/i386/pr71621-2.c: New.\n\nFrom-SVN: r238178", "tree": {"sha": "551ccc60f40d8af6047c0898eeac69b17fcdf3b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/551ccc60f40d8af6047c0898eeac69b17fcdf3b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d13835b668ac64ae062fa0c765476d229b6b2c22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d13835b668ac64ae062fa0c765476d229b6b2c22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d13835b668ac64ae062fa0c765476d229b6b2c22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d13835b668ac64ae062fa0c765476d229b6b2c22/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65a550b46e5d9759fae0e5af17a494e1f9f5d821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65a550b46e5d9759fae0e5af17a494e1f9f5d821", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65a550b46e5d9759fae0e5af17a494e1f9f5d821"}], "stats": {"total": 117, "additions": 117, "deletions": 0}, "files": [{"sha": "9cdfd1a86e9e93216b1ec0f13718fc6bea4a0a75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d13835b668ac64ae062fa0c765476d229b6b2c22", "patch": "@@ -1,3 +1,9 @@\n+2016-07-08  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/71621\n+\t* lra-constraints.c (process_alt_operands): Check combination of\n+\treg class and mode.\n+\n 2016-06-25  Jason Merrill  <jason@redhat.com>\n \t    Richard Biener  <rguenther@suse.de>\n "}, {"sha": "a1119ac70fdabc4afbec04cc9140de6ac69c0564", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=d13835b668ac64ae062fa0c765476d229b6b2c22", "patch": "@@ -2261,6 +2261,41 @@ process_alt_operands (int only_alternative)\n \t\t  goto fail;\n \t\t}\n \n+\t      if (this_alternative != NO_REGS)\n+\t\t{\n+\t\t  HARD_REG_SET available_regs;\n+\t\t  \n+\t\t  COPY_HARD_REG_SET (available_regs,\n+\t\t\t\t     reg_class_contents[this_alternative]);\n+\t\t  AND_COMPL_HARD_REG_SET\n+\t\t    (available_regs,\n+\t\t     ira_prohibited_class_mode_regs[this_alternative][mode]);\n+\t\t  AND_COMPL_HARD_REG_SET (available_regs, lra_no_alloc_regs);\n+\t\t  if (hard_reg_set_empty_p (available_regs))\n+\t\t    {\n+\t\t      /* There are no hard regs holding a value of given\n+\t\t\t mode.  */\n+\t\t      if (offmemok)\n+\t\t\t{\n+\t\t\t  this_alternative = NO_REGS;\n+\t\t\t  if (lra_dump_file != NULL)\n+\t\t\t    fprintf (lra_dump_file,\n+\t\t\t\t     \"            %d Using memory because of\"\n+\t\t\t\t     \" a bad mode: reject+=2\\n\",\n+\t\t\t\t     nop);\n+\t\t\t  reject += 2;\n+\t\t\t}\n+\t\t      else\n+\t\t\t{\n+\t\t\t  if (lra_dump_file != NULL)\n+\t\t\t    fprintf (lra_dump_file,\n+\t\t\t\t     \"            alt=%d: Wrong mode -- refuse\\n\",\n+\t\t\t\t     nalt);\n+\t\t\t  goto fail;\n+\t\t\t}\n+\t\t    }\n+\t\t}\n+\n \t      /* If not assigned pseudo has a class which a subset of\n \t\t required reg class, it is a less costly alternative\n \t\t as the pseudo still can get a hard reg of necessary"}, {"sha": "1d835813da8ce79647dee561f7ef4e85ed830740", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d13835b668ac64ae062fa0c765476d229b6b2c22", "patch": "@@ -1,3 +1,9 @@\n+2016-07-08  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/71621\n+\t* gcc.target/i386/pr71621-1.c: New.\n+\t* gcc.target/i386/pr71621-2.c: New.\n+\n 2016-07-08  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* gfortran.dg/goacc/pr71704.f90: New test."}, {"sha": "43df5a8f0ae5dfac839f2ca4aeaf1d6aab87176f", "filename": "gcc/testsuite/gcc.target/i386/pr71621-1.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71621-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71621-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71621-1.c?ref=d13835b668ac64ae062fa0c765476d229b6b2c22", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -w -ftree-vectorize -mavx2\" } */\n+\n+int cn;\n+int *li;\n+\n+void\n+y8 (void)\n+{\n+  int gv;\n+  int *be = &gv;\n+  short int v4 = 2;\n+\n+  while (*li != 0)\n+    {\n+      int sy;\n+      for (sy = 0; sy < 5; ++sy)\n+\t{\n+\t  int **t6 = &be;\n+\t  gv |= sy ? 0 : v4;\n+\t  if (gv != 0)\n+\t    ++gv;\n+\t  t6 = &cn;\n+\t  if (gv != 0)\n+\t    *t6 = 0;\n+\t}\n+      for (gv = 0; gv < 24; ++gv)\n+\tv4 |= 1 <= 1 % 0;\n+      ++(*li);\n+    }\n+}"}, {"sha": "175b7d2f9310220720bc694e81cf17a86612500b", "filename": "gcc/testsuite/gcc.target/i386/pr71621-2.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71621-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13835b668ac64ae062fa0c765476d229b6b2c22/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71621-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71621-2.c?ref=d13835b668ac64ae062fa0c765476d229b6b2c22", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx2\" } */\n+\n+int hf, sv, zz, aj;\n+\n+void\n+dn (int xb, int bl)\n+{\n+  while (zz < 1)\n+    {\n+      if (xb == 0)\n+\tgoto mr;\n+\n+      while (bl < 3)\n+\t{\n+\t  int d3;\n+\t  unsigned char vh;\n+\t  unsigned char *fj = &vh;\n+\n+\tmr:\n+\t  while (bl < 1)\n+\t    {\n+\t      hf += vh;\n+\t      ++bl;\n+\t    }\n+\t  if (xb == 0)\n+\t    zz = bl;\n+\t  if (d3 == 0)\n+\t    return;\n+\t  while (sv < 1)\n+\t    {\n+\t      --vh;\n+\t      aj += vh;\n+\t      ++sv;\n+\t    }\n+\t}\n+      sv = 0;\n+    }\n+}"}]}