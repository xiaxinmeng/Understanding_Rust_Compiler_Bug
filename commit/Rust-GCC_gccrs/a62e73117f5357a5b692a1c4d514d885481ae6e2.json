{"sha": "a62e73117f5357a5b692a1c4d514d885481ae6e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYyZTczMTE3ZjUzNTdhNWI2OTJhMWM0ZDUxNGQ4ODU0ODFhZTZlMg==", "commit": {"author": {"name": "Petur Runolfsson", "email": "peturr02@ru.is", "date": "2003-10-12T20:03:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-12T20:03:18Z"}, "message": "re PR libstdc++/11460 (Incorrect use of int_type in strstreambuf::pbackfail)\n\n2003-10-12  Petur Runolfsson  <peturr02@ru.is>\n\t    Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/11460\n\t* src/strstream.cc (pbackfail): Fix to use to_int_type.\n\t* testsuite/backward/11460.cc: New, from the PR.\n\nCo-Authored-By: Paolo Carlini <pcarlini@unitus.it>\n\nFrom-SVN: r72405", "tree": {"sha": "2c3a6312f527c2fbcbcca65934217fbda93abf99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c3a6312f527c2fbcbcca65934217fbda93abf99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a62e73117f5357a5b692a1c4d514d885481ae6e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62e73117f5357a5b692a1c4d514d885481ae6e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a62e73117f5357a5b692a1c4d514d885481ae6e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62e73117f5357a5b692a1c4d514d885481ae6e2/comments", "author": null, "committer": null, "parents": [{"sha": "cc956bfdf4d022d4d189bd995c2fdfdd4c203491", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc956bfdf4d022d4d189bd995c2fdfdd4c203491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc956bfdf4d022d4d189bd995c2fdfdd4c203491"}], "stats": {"total": 82, "additions": 81, "deletions": 1}, "files": [{"sha": "58111229429b442c6469e7bd28068592253c4756", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62e73117f5357a5b692a1c4d514d885481ae6e2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62e73117f5357a5b692a1c4d514d885481ae6e2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a62e73117f5357a5b692a1c4d514d885481ae6e2", "patch": "@@ -1,3 +1,10 @@\n+2003-10-12  Petur Runolfsson  <peturr02@ru.is>\n+\t    Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/11460\n+\t* src/strstream.cc (pbackfail): Fix to use to_int_type.\n+\t* testsuite/backward/11460.cc: New, from the PR.\n+\n 2003-10-12  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* config/locale/ieee_1003.1-2001/codecvt_specializations.h:"}, {"sha": "832a19c461cac275a14561aac0a5d3c7084bbc2f", "filename": "libstdc++-v3/src/strstream.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62e73117f5357a5b692a1c4d514d885481ae6e2/libstdc%2B%2B-v3%2Fsrc%2Fstrstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62e73117f5357a5b692a1c4d514d885481ae6e2/libstdc%2B%2B-v3%2Fsrc%2Fstrstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstrstream.cc?ref=a62e73117f5357a5b692a1c4d514d885481ae6e2", "patch": "@@ -194,7 +194,7 @@ namespace std\n \t  gbump(-1);\n \t  return _Traits::not_eof(c);\n \t}\n-      else if (c == static_cast<int_type>(gptr()[-1])) \n+      else if (c == _Traits::to_int_type(gptr()[-1])) \n \t{  // KLUDGE\n \t  gbump(-1);\n \t  return c;"}, {"sha": "087ba0f529ab7db1d937e3679122c732eafbd097", "filename": "libstdc++-v3/testsuite/backward/11460.cc", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a62e73117f5357a5b692a1c4d514d885481ae6e2/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2F11460.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a62e73117f5357a5b692a1c4d514d885481ae6e2/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2F11460.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fbackward%2F11460.cc?ref=a62e73117f5357a5b692a1c4d514d885481ae6e2", "patch": "@@ -0,0 +1,73 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+#include <strstream>\n+#include <testsuite_hooks.h>\n+\n+// { dg-options \"-Wno-deprecated\" }\n+\n+class Buf : public std::strstreambuf\n+{\n+public:\n+  Buf(const char* p, std::streamsize n)\n+  : std::strstreambuf(p, n)\n+  { }\n+\n+  int_type pub_pbackfail(int_type c = traits_type::eof())\n+  {\n+    return pbackfail(c);\n+  }\n+};\n+\n+// libstdc++/11460\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef std::strstreambuf::traits_type Traits;\n+  const char str[] = \"a\\xff\";\n+  \n+  Buf buf(str, 2);\n+  \n+  Traits::int_type a = Traits::to_int_type('a');\n+  VERIFY( buf.sbumpc() == a );\n+  VERIFY( buf.sungetc() == a );\n+  VERIFY( buf.sbumpc() == a );\n+  VERIFY( buf.sputbackc('a') == a );\n+  VERIFY( buf.sbumpc() == a );\n+  VERIFY( buf.pub_pbackfail() != Traits::eof() );\n+  VERIFY( buf.sbumpc() == a );\n+  VERIFY( buf.pub_pbackfail(a) == a );\n+  buf.sbumpc();\n+  \n+  Traits::int_type xff = Traits::to_int_type('\\xff');\n+  VERIFY( buf.sbumpc() == xff );\n+  VERIFY( buf.sungetc() == xff );\n+  VERIFY( buf.sbumpc() == xff );\n+  VERIFY( buf.sputbackc('\\xff') == xff );\n+  VERIFY( buf.sbumpc() == xff );\n+  VERIFY( buf.pub_pbackfail() != Traits::eof() );\n+  VERIFY( buf.sbumpc() == xff );\n+  VERIFY( buf.pub_pbackfail(xff) == xff );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}