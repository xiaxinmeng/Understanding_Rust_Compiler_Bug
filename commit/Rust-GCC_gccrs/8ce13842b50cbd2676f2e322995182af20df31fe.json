{"sha": "8ce13842b50cbd2676f2e322995182af20df31fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNlMTM4NDJiNTBjYmQyNjc2ZjJlMzIyOTk1MTgyYWYyMGRmMzFmZQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-26T13:38:06Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-26T15:24:00Z"}, "message": "libstdc++: Fix use of inaccessible private member in split_view (PR93936)\n\nWe are calling _OuterIter::__current from _InnerIter::operator==, but the former\nis private within this non-member friend.  Fix this by calling\n_OuterIter::operator== instead, which does the right thing here.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/93936\n\t* include/std/ranges (split_view::_InnerIter::operator==): Compare\n\tthe operands' _M_i rather than their _M_i.current().\n\t* testsuite/std/ranges/adaptors/split.cc: Augment test.", "tree": {"sha": "9b4562ea19b57365554d59dc9d0df45721634730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b4562ea19b57365554d59dc9d0df45721634730"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ce13842b50cbd2676f2e322995182af20df31fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce13842b50cbd2676f2e322995182af20df31fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ce13842b50cbd2676f2e322995182af20df31fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ce13842b50cbd2676f2e322995182af20df31fe/comments", "author": null, "committer": null, "parents": [{"sha": "fd335985582cbb9de3a08e071e652bb38960b493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd335985582cbb9de3a08e071e652bb38960b493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd335985582cbb9de3a08e071e652bb38960b493"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "49f2b59e3ae3214294a8396dae71169978a5f987", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce13842b50cbd2676f2e322995182af20df31fe/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce13842b50cbd2676f2e322995182af20df31fe/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8ce13842b50cbd2676f2e322995182af20df31fe", "patch": "@@ -1,5 +1,10 @@\n 2020-02-26  Patrick Palka  <ppalka@redhat.com>\n \n+\tPR libstdc++/93936\n+\t* include/std/ranges (split_view::_InnerIter::operator==): Compare\n+\tthe operands' _M_i rather than their _M_i.current().\n+\t* testsuite/std/ranges/adaptors/split.cc: Augment test.\n+\n \tP1645R1 constexpr for <numeric> algorithms\n \t* include/bits/stl_numeric.h (iota, accumulate, inner_product,\n \tpartial_sum, adjacent_difference): Make conditionally constexpr for"}, {"sha": "bad89c5b8b06a6bdec1d05361b6ffcd445167295", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce13842b50cbd2676f2e322995182af20df31fe/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce13842b50cbd2676f2e322995182af20df31fe/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=8ce13842b50cbd2676f2e322995182af20df31fe", "patch": "@@ -2841,7 +2841,7 @@ namespace views\n \t  friend constexpr bool\n \t  operator==(const _InnerIter& __x, const _InnerIter& __y)\n \t    requires forward_range<_Base>\n-\t  { return __x._M_i.__current() == __y._M_i.__current(); }\n+\t  { return __x._M_i == __y._M_i; }\n \n \t  friend constexpr bool\n \t  operator==(const _InnerIter& __x, default_sentinel_t)"}, {"sha": "52b015cf0c67a46918b99a9ee1a76cecb251101c", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/split.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ce13842b50cbd2676f2e322995182af20df31fe/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fsplit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ce13842b50cbd2676f2e322995182af20df31fe/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fsplit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fsplit.cc?ref=8ce13842b50cbd2676f2e322995182af20df31fe", "patch": "@@ -91,11 +91,29 @@ test04()\n   VERIFY( i == v.end() );\n }\n \n+void\n+test05()\n+{\n+  auto as_string = [](ranges::view auto rng) {\n+    auto in = rng | views::common;\n+    return std::string(in.begin(), in.end());\n+  };\n+  std::string str\n+    = \"Now is the time for all good men to come to the aid of their county.\";\n+  auto rng\n+    = str | views::split(' ') | views::transform(as_string) | views::common;\n+  std::vector<std::string> words(rng.begin(), rng.end());\n+  auto not_space_p = [](char c) { return c != ' '; };\n+  VERIFY( ranges::equal(words | views::join,\n+\t\t\tstr | views::filter(not_space_p)) );\n+}\n+\n int\n main()\n {\n   test01();\n   test02();\n   test03();\n   test04();\n+  test05();\n }"}]}