{"sha": "43b7a577806ab9c11580e9034869dd5a8ba2e5fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiN2E1Nzc4MDZhYjljMTE1ODBlOTAzNDg2OWRkNWE4YmEyZTVmYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-08-22T08:25:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-08-22T08:25:30Z"}, "message": "tree-ssa-forwprop.c (pass_forwprop::execute): Use RPO order.\n\n2016-08-22  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-forwprop.c (pass_forwprop::execute): Use RPO order.\n\nFrom-SVN: r239653", "tree": {"sha": "32b1d4e034874be1fc5d7735e7419b6f81631fb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32b1d4e034874be1fc5d7735e7419b6f81631fb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43b7a577806ab9c11580e9034869dd5a8ba2e5fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b7a577806ab9c11580e9034869dd5a8ba2e5fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43b7a577806ab9c11580e9034869dd5a8ba2e5fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b7a577806ab9c11580e9034869dd5a8ba2e5fb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9d7c8234d8a02045ff8dca4454bb973f959e7ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9d7c8234d8a02045ff8dca4454bb973f959e7ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9d7c8234d8a02045ff8dca4454bb973f959e7ca"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "77300dcdd48827472d73ba9bf26eb6b2389eaf94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b7a577806ab9c11580e9034869dd5a8ba2e5fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b7a577806ab9c11580e9034869dd5a8ba2e5fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43b7a577806ab9c11580e9034869dd5a8ba2e5fb", "patch": "@@ -1,3 +1,7 @@\n+2016-08-22  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-forwprop.c (pass_forwprop::execute): Use RPO order.\n+\n 2016-08-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/77270"}, {"sha": "5d7739b5bb33346e1341143843af74f1b1c36164", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b7a577806ab9c11580e9034869dd5a8ba2e5fb/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b7a577806ab9c11580e9034869dd5a8ba2e5fb/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=43b7a577806ab9c11580e9034869dd5a8ba2e5fb", "patch": "@@ -2099,7 +2099,8 @@ pass_forwprop::execute (function *fun)\n   lattice.create (num_ssa_names);\n   lattice.quick_grow_cleared (num_ssa_names);\n   int *postorder = XNEWVEC (int, n_basic_blocks_for_fn (fun));\n-  int postorder_num = inverted_post_order_compute (postorder);\n+  int postorder_num = pre_and_rev_post_order_compute_fn (cfun, NULL,\n+\t\t\t\t\t\t\t postorder, false);\n   auto_vec<gimple *, 4> to_fixup;\n   to_purge = BITMAP_ALLOC (NULL);\n   for (int i = 0; i < postorder_num; ++i)"}]}