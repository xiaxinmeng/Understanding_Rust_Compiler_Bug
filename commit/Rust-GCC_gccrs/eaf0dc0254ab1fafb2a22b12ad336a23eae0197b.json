{"sha": "eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFmMGRjMDI1NGFiMWZhZmIyYTIyYjEyYWQzMzZhMjNlYWUwMTk3Yg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-14T04:08:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-14T04:08:11Z"}, "message": "tree-cfg.c, [...]: Replace TREE_CHAIN with PHI_CHAIN where appropriate.\n\n\t* tree-cfg.c, tree-if-conv.c, tree-ssa-loop-ivopts.c,\n\ttree-ssa-loop-manip.c, tree-vectorizer.c: Replace TREE_CHAIN\n\twith PHI_CHAIN where appropriate.\n\nFrom-SVN: r90611", "tree": {"sha": "0b05f9e1f23ff7604d5d82dfc8eb337458812e25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b05f9e1f23ff7604d5d82dfc8eb337458812e25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/comments", "author": null, "committer": null, "parents": [{"sha": "88957e792d57fc9fdb3afbe2093cca7936f9fcf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88957e792d57fc9fdb3afbe2093cca7936f9fcf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88957e792d57fc9fdb3afbe2093cca7936f9fcf7"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "de89cb014687f69c1c5389da797c4eb58b0fc55a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "patch": "@@ -1,12 +1,18 @@\n+2004-11-14  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-cfg.c, tree-if-conv.c, tree-ssa-loop-ivopts.c,\n+\ttree-ssa-loop-manip.c, tree-vectorizer.c: Replace TREE_CHAIN\n+\twith PHI_CHAIN where appropriate.\n+\n 2004-11-13  Dale Johannesen  <dalej@apple.com>\n \n-\t* tree-flow.h (bsi_commit_one_edge_insert):  Remove name from prototype.\n-\t(tree_block_label):  Ditto.\n-\t(flush_pending_stmts):  Ditto.\n-\t(insert_edge_copies):  Ditto.\n-\t(expr_invariant_in_loop_p):  Ditto.\n-\t(TDF_USE_OPS):  Parenthesize definition.\n-\t(TDF_USE_VOPS):  Ditto.\n+\t* tree-flow.h (bsi_commit_one_edge_insert): Remove name from prototype.\n+\t(tree_block_label): Ditto.\n+\t(flush_pending_stmts): Ditto.\n+\t(insert_edge_copies): Ditto.\n+\t(expr_invariant_in_loop_p): Ditto.\n+\t(TDF_USE_OPS): Parenthesize definition.\n+\t(TDF_USE_VOPS): Ditto.\n \n 2004-11-13  David Edelsohn  <edelsohn@gnu.org>\n "}, {"sha": "b27f872b42742aaec8f383fce8da3be393a2f830", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "patch": "@@ -4515,9 +4515,9 @@ add_phi_args_after_copy_bb (basic_block bb_copy)\n \n       for (phi = phi_nodes (e->dest), phi_copy = phi_nodes (e_copy->dest);\n \t   phi;\n-\t   phi = phi_next, phi_copy = TREE_CHAIN (phi_copy))\n+\t   phi = phi_next, phi_copy = PHI_CHAIN (phi_copy))\n \t{\n-\t  phi_next = TREE_CHAIN (phi);\n+\t  phi_next = PHI_CHAIN (phi);\n \n \t  gcc_assert (PHI_RESULT (phi) == PHI_RESULT (phi_copy));\n \t  def = PHI_ARG_DEF_FROM_EDGE (phi, e);"}, {"sha": "ce07166c6ae9e24da4e86770503f4a6e0c38d648", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "patch": "@@ -824,7 +824,7 @@ process_phi_nodes (struct loop *loop)\n \n       while (phi)\n \t{\n-\t  tree next = TREE_CHAIN (phi);\n+\t  tree next = PHI_CHAIN (phi);\n \t  replace_phi_with_cond_modify_expr (phi, cond, true_bb, &bsi);\n \t  release_phi_node (phi);\n \t  phi = next;"}, {"sha": "867f72d06686327a71bb4162997730f9103e261b", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "patch": "@@ -4659,7 +4659,7 @@ compute_phi_arg_on_exit (edge exit, tree stmts, tree op)\n \n   for (phi = phi_nodes (exit->dest); phi; phi = next)\n     {\n-      next = TREE_CHAIN (phi);\n+      next = PHI_CHAIN (phi);\n \n       if (PHI_ARG_DEF_FROM_EDGE (phi, exit) == op)\n \t{"}, {"sha": "43499560e5495cfaa05fb7bb5e0c7e72d9b3e00c", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "patch": "@@ -665,7 +665,7 @@ lv_adjust_loop_header_phi (basic_block first, basic_block second,\n \n   for (phi2 = phi_nodes (second), phi1 = phi_nodes (first); \n        phi2 && phi1; \n-       phi2 = TREE_CHAIN (phi2),  phi1 = TREE_CHAIN (phi1))\n+       phi2 = PHI_CHAIN (phi2),  phi1 = PHI_CHAIN (phi1))\n     {\n       int i;\n       for (i = 0; i < PHI_NUM_ARGS (phi2); i++)"}, {"sha": "e1095f579be1caab5bf2f0c6255cb8db15ebad87", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf0dc0254ab1fafb2a22b12ad336a23eae0197b/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=eaf0dc0254ab1fafb2a22b12ad336a23eae0197b", "patch": "@@ -482,7 +482,7 @@ update_phis_for_duplicate_loop (struct loop *loop,\n   for (phi_new = phi_nodes (new_loop->header),\n        phi_old = phi_nodes (loop->header);\n        phi_new && phi_old;\n-       phi_new = TREE_CHAIN (phi_new), phi_old = TREE_CHAIN (phi_old))\n+       phi_new = PHI_CHAIN (phi_new), phi_old = PHI_CHAIN (phi_old))\n     {\n       def = PHI_ARG_DEF_FROM_EDGE (phi_old, old_latch);\n \n@@ -577,7 +577,7 @@ update_phi_nodes_for_guard (edge guard_true_edge, struct loop * loop)\n \t/* Update all phi nodes at the loop exit successor.  */\n \tfor (phi1 = phi_nodes (EDGE_SUCC (bb, 0)->dest); \n \t     phi1; \n-\t     phi1 = TREE_CHAIN (phi1))\n+\t     phi1 = PHI_CHAIN (phi1))\n \t  {\n \t    tree old_arg = PHI_ARG_DEF_FROM_EDGE (phi1, EDGE_SUCC (bb, 0));\n \t    if (old_arg == phi_arg)"}]}