{"sha": "cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NlZWI5YTk3OGZlZmQzNGRkNmMzY2MwZGZjNTk0ZTllZWYxZTE0YQ==", "commit": {"author": {"name": "Matthew Leach", "email": "matthew.leach@arm.com", "date": "2013-11-28T10:59:38Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2013-11-28T10:59:38Z"}, "message": "linux-unwind.h (aarch64_fallback_frame_state): Check for correct opcodes on BE.\n\n2013-11-26  Matthew Leach  <matthew.leach@arm.com>\n\n\t* config/aarch64/linux-unwind.h (aarch64_fallback_frame_state):\tCheck\n\tfor correct opcodes on BE.\n\nFrom-SVN: r205479", "tree": {"sha": "85f01629835f234fd552da8db3b4e653d414b57e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85f01629835f234fd552da8db3b4e653d414b57e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a/comments", "author": null, "committer": null, "parents": [{"sha": "506cb36189212c2237b9c2e617a57edda3ecd736", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506cb36189212c2237b9c2e617a57edda3ecd736", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506cb36189212c2237b9c2e617a57edda3ecd736"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "0107350d914ddac6e5685823a702c01c263dc8a9", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a", "patch": "@@ -1,3 +1,8 @@\n+2013-11-26  Matthew Leach  <matthew.leach@arm.com>\n+\n+\t* config/aarch64/linux-unwind.h (aarch64_fallback_frame_state):\tCheck\n+\tfor correct opcodes on BE.\n+\n 2013-11-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* soft-fp/op-4.h: Update from glibc."}, {"sha": "8b0d7fe39e10044fb01ffdc29cb6bed7d32ff30e", "filename": "libgcc/config/aarch64/linux-unwind.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a/libgcc%2Fconfig%2Faarch64%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a/libgcc%2Fconfig%2Faarch64%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Faarch64%2Flinux-unwind.h?ref=cceeb9a978fefd34dd6c3cc0dfc594e9eef1e14a", "patch": "@@ -25,6 +25,19 @@\n #include <signal.h>\n #include <sys/ucontext.h>\n \n+\n+/* Since insns are always stored LE, on a BE system the opcodes will\n+   be loaded byte-reversed.  Therefore, define two sets of opcodes,\n+   one for LE and one for BE.  */\n+\n+#if __AARCH64EB__\n+#define MOVZ_X8_8B\t0x681180d2\n+#define SVC_0\t\t0x010000d4\n+#else\n+#define MOVZ_X8_8B\t0xd2801168\n+#define SVC_0\t\t0xd4000001\n+#endif\n+\n #define MD_FALLBACK_FRAME_STATE_FOR aarch64_fallback_frame_state\n \n static _Unwind_Reason_Code\n@@ -55,7 +68,7 @@ aarch64_fallback_frame_state (struct _Unwind_Context *context,\n      0xd2801168         movz x8, #0x8b\n      0xd4000001         svc  0x0\n    */\n-  if (pc[0] != 0xd2801168 || pc[1] != 0xd4000001)\n+  if (pc[0] != MOVZ_X8_8B || pc[1] != SVC_0)\n     {\n       return _URC_END_OF_STACK;\n     }"}]}