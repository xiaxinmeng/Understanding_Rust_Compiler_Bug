{"sha": "980bd53780025944008dbcd89caeed8d6e782715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgwYmQ1Mzc4MDAyNTk0NDAwOGRiY2Q4OWNhZWVkOGQ2ZTc4MjcxNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-08-15T09:51:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-08-15T09:51:44Z"}, "message": "dwarf2.def (DW_AT_string_length_bit_size, [...]): New attributes.\n\n\t* dwarf2.def (DW_AT_string_length_bit_size,\n\tDW_AT_string_length_byte_size): New attributes.\n\n\t* dwarf2out.c (struct checksum_attributes): Add\n\tat_string_length_bit_size and at_string_length_byte_size fields.\n\t(collect_checksum_attributes): Handle DW_AT_string_length_bit_size\n\tand DW_AT_string_length_byte_size.\n\t(die_checksum_ordered): Handle at_string_length_bit_size and\n\tat_string_length_byte_size.\n\t(gen_array_type_die): For dwarf_version >= 5 emit\n\tDW_AT_string_length_byte_size instead of DW_AT_byte_size.\n\t(adjust_string_types): For dwarf_version >= 5 remove\n\tDW_AT_string_length_byte_size instead of DW_AT_byte_size.\n\t(resolve_addr): Likewise.\n\nFrom-SVN: r239470", "tree": {"sha": "b1fa4a5a5e19172509214241f32cd3bd5e08242a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1fa4a5a5e19172509214241f32cd3bd5e08242a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/980bd53780025944008dbcd89caeed8d6e782715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980bd53780025944008dbcd89caeed8d6e782715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/980bd53780025944008dbcd89caeed8d6e782715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980bd53780025944008dbcd89caeed8d6e782715/comments", "author": null, "committer": null, "parents": [{"sha": "8ae261c007a5cdb70d1115d0195c32659561115f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae261c007a5cdb70d1115d0195c32659561115f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ae261c007a5cdb70d1115d0195c32659561115f"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "32e9439d0d40fb496708f34ef7120d46e030f03f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980bd53780025944008dbcd89caeed8d6e782715/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980bd53780025944008dbcd89caeed8d6e782715/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=980bd53780025944008dbcd89caeed8d6e782715", "patch": "@@ -1,5 +1,17 @@\n 2016-08-15  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* dwarf2out.c (struct checksum_attributes): Add\n+\tat_string_length_bit_size and at_string_length_byte_size fields.\n+\t(collect_checksum_attributes): Handle DW_AT_string_length_bit_size\n+\tand DW_AT_string_length_byte_size.\n+\t(die_checksum_ordered): Handle at_string_length_bit_size and\n+\tat_string_length_byte_size.\n+\t(gen_array_type_die): For dwarf_version >= 5 emit\n+\tDW_AT_string_length_byte_size instead of DW_AT_byte_size.\n+\t(adjust_string_types): For dwarf_version >= 5 remove\n+\tDW_AT_string_length_byte_size instead of DW_AT_byte_size.\n+\t(resolve_addr): Likewise.\n+\n \tPR debug/71906\n \t* dwarf2out.c (string_types): New variable.\n \t(gen_array_type_die): Change early_dwarf handling of"}, {"sha": "0fdab9a31985fc3c220554a9c980e9ba040a42cd", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980bd53780025944008dbcd89caeed8d6e782715/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980bd53780025944008dbcd89caeed8d6e782715/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=980bd53780025944008dbcd89caeed8d6e782715", "patch": "@@ -6363,6 +6363,8 @@ struct checksum_attributes\n   dw_attr_node *at_small;\n   dw_attr_node *at_segment;\n   dw_attr_node *at_string_length;\n+  dw_attr_node *at_string_length_bit_size;\n+  dw_attr_node *at_string_length_byte_size;\n   dw_attr_node *at_threads_scaled;\n   dw_attr_node *at_upper_bound;\n   dw_attr_node *at_use_location;\n@@ -6502,6 +6504,12 @@ collect_checksum_attributes (struct checksum_attributes *attrs, dw_die_ref die)\n         case DW_AT_string_length:\n           attrs->at_string_length = a;\n           break;\n+\tcase DW_AT_string_length_bit_size:\n+\t  attrs->at_string_length_bit_size = a;\n+\t  break;\n+\tcase DW_AT_string_length_byte_size:\n+\t  attrs->at_string_length_byte_size = a;\n+\t  break;\n         case DW_AT_threads_scaled:\n           attrs->at_threads_scaled = a;\n           break;\n@@ -6588,6 +6596,8 @@ die_checksum_ordered (dw_die_ref die, struct md5_ctx *ctx, int *mark)\n   CHECKSUM_ATTR (attrs.at_small);\n   CHECKSUM_ATTR (attrs.at_segment);\n   CHECKSUM_ATTR (attrs.at_string_length);\n+  CHECKSUM_ATTR (attrs.at_string_length_bit_size);\n+  CHECKSUM_ATTR (attrs.at_string_length_byte_size);\n   CHECKSUM_ATTR (attrs.at_threads_scaled);\n   CHECKSUM_ATTR (attrs.at_upper_bound);\n   CHECKSUM_ATTR (attrs.at_use_location);\n@@ -19355,7 +19365,9 @@ gen_array_type_die (tree type, dw_die_ref context_die)\n \t\t  add_AT_location_description (array_die, DW_AT_string_length,\n \t\t\t\t\t       loc);\n \t\t  if (size != DWARF2_ADDR_SIZE)\n-\t\t    add_AT_unsigned (array_die, DW_AT_byte_size, size);\n+\t\t    add_AT_unsigned (array_die, dwarf_version >= 5\n+\t\t\t\t\t\t? DW_AT_string_length_byte_size\n+\t\t\t\t\t\t: DW_AT_byte_size, size);\n \t\t}\n \t    }\n \t}\n@@ -19448,7 +19460,9 @@ adjust_string_types (void)\n       else\n \t{\n \t  remove_AT (array_die, DW_AT_string_length);\n-\t  remove_AT (array_die, DW_AT_byte_size);\n+\t  remove_AT (array_die, dwarf_version >= 5\n+\t\t\t\t? DW_AT_string_length_byte_size\n+\t\t\t\t: DW_AT_byte_size);\n \t}\n     }\n }\n@@ -26909,8 +26923,8 @@ copy_deref_exprloc (dw_loc_descr_ref expr, dw_loc_descr_ref deref)\n \n /* For DW_AT_string_length attribute with DW_OP_call4 reference to a variable\n    or argument, adjust it if needed and return:\n-   -1 if the DW_AT_string_length attribute and DW_AT_byte_size attribute\n-      if present should be removed\n+   -1 if the DW_AT_string_length attribute and DW_AT_{string_length_,}byte_size\n+      attribute if present should be removed\n    0 keep the attribute as is if the referenced var or argument has\n      only DWARF expression that covers all ranges\n    1 if the attribute has been successfully adjusted.  */\n@@ -27083,8 +27097,8 @@ resolve_addr (dw_die_ref die)\n \t\tcase -1:\n \t\t  remove_AT (die, a->dw_attr);\n \t\t  ix--;\n-\t\t  /* For DWARF4 and earlier, if we drop DW_AT_string_length,\n-\t\t     we need to drop also DW_AT_byte_size.  */\n+\t\t  /* If we drop DW_AT_string_length, we need to drop also\n+\t\t     DW_AT_{string_length_,}byte_size.  */\n \t\t  remove_AT_byte_size = true;\n \t\t  continue;\n \t\tdefault:\n@@ -27181,7 +27195,9 @@ resolve_addr (dw_die_ref die)\n       }\n \n   if (remove_AT_byte_size)\n-    remove_AT (die, DW_AT_byte_size);\n+    remove_AT (die, dwarf_version >= 5\n+\t\t    ? DW_AT_string_length_byte_size\n+\t\t    : DW_AT_byte_size);\n \n   FOR_EACH_CHILD (die, c, resolve_addr (c));\n }"}, {"sha": "a37976855b5f5ca84ec0ad6a4cfa5a6c47fdc94d", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980bd53780025944008dbcd89caeed8d6e782715/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980bd53780025944008dbcd89caeed8d6e782715/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=980bd53780025944008dbcd89caeed8d6e782715", "patch": "@@ -1,8 +1,13 @@\n+2016-08-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2.def (DW_AT_string_length_bit_size,\n+\tDW_AT_string_length_byte_size): New attributes.\n+\n 2016-08-12  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR debug/63240\n \t* dwarf2.def (DW_AT_deleted, DW_AT_defaulted): New.\n-\t* dwarf2.h (enu dwarf_defaulted_attribute): New.\n+\t* dwarf2.h (enum dwarf_defaulted_attribute): New.\n \n 2016-07-29  Aldy Hernandez  <aldyh@redhat.com>\n "}, {"sha": "5241fe8615e0e3b288fee80c08a67723686ef411", "filename": "include/dwarf2.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980bd53780025944008dbcd89caeed8d6e782715/include%2Fdwarf2.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980bd53780025944008dbcd89caeed8d6e782715/include%2Fdwarf2.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.def?ref=980bd53780025944008dbcd89caeed8d6e782715", "patch": "@@ -309,6 +309,8 @@ DW_AT (DW_AT_const_expr, 0x6c)\n DW_AT (DW_AT_enum_class, 0x6d)\n DW_AT (DW_AT_linkage_name, 0x6e)\n /* DWARF 5.  */\n+DW_AT (DW_AT_string_length_bit_size, 0x6f)\n+DW_AT (DW_AT_string_length_byte_size, 0x70)\n DW_AT (DW_AT_noreturn, 0x87)\n DW_AT (DW_AT_deleted, 0x8a)\n DW_AT (DW_AT_defaulted, 0x8b)"}]}