{"sha": "a0546e1a169954bb412debeab777f9108950bc8d", "node_id": "C_kwDOANBUbNoAKGEwNTQ2ZTFhMTY5OTU0YmI0MTJkZWJlYWI3NzdmOTEwODk1MGJjOGQ", "commit": {"author": {"name": "Etienne Servais", "email": "servais@adacore.com", "date": "2021-10-29T14:42:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-11-10T08:57:39Z"}, "message": "[Ada] Fix Constraint error on rexgexp close bracket find algorithm\n\ngcc/ada/\n\n\t* libgnat/s-regexp.adb (Check_Well_Formed_Pattern): Fix\n\tConstraint_Error on missing close bracket.", "tree": {"sha": "142db32019241fbf759fce20e9ea83576ddfe5b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/142db32019241fbf759fce20e9ea83576ddfe5b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0546e1a169954bb412debeab777f9108950bc8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0546e1a169954bb412debeab777f9108950bc8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0546e1a169954bb412debeab777f9108950bc8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0546e1a169954bb412debeab777f9108950bc8d/comments", "author": {"login": "vser1", "id": 8308457, "node_id": "MDQ6VXNlcjgzMDg0NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8308457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vser1", "html_url": "https://github.com/vser1", "followers_url": "https://api.github.com/users/vser1/followers", "following_url": "https://api.github.com/users/vser1/following{/other_user}", "gists_url": "https://api.github.com/users/vser1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vser1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vser1/subscriptions", "organizations_url": "https://api.github.com/users/vser1/orgs", "repos_url": "https://api.github.com/users/vser1/repos", "events_url": "https://api.github.com/users/vser1/events{/privacy}", "received_events_url": "https://api.github.com/users/vser1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eafa54f120e3ddfc1140f159a8d10fe338f9399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eafa54f120e3ddfc1140f159a8d10fe338f9399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eafa54f120e3ddfc1140f159a8d10fe338f9399"}], "stats": {"total": 107, "additions": 59, "deletions": 48}, "files": [{"sha": "8f1940a854456e83fdf84b12125fceb0531b5fa4", "filename": "gcc/ada/libgnat/s-regexp.adb", "status": "modified", "additions": 59, "deletions": 48, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0546e1a169954bb412debeab777f9108950bc8d/gcc%2Fada%2Flibgnat%2Fs-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0546e1a169954bb412debeab777f9108950bc8d/gcc%2Fada%2Flibgnat%2Fs-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-regexp.adb?ref=a0546e1a169954bb412debeab777f9108950bc8d", "patch": "@@ -122,7 +122,7 @@ package body System.Regexp is\n    is\n       S : String := Pattern;\n       --  The pattern which is really compiled (when the pattern is case\n-      --  insensitive, we convert this string to lower-cases\n+      --  insensitive, we convert this string to lower-cases).\n \n       Map : Mapping := (others => 0);\n       --  Mapping between characters and columns in the tables\n@@ -209,8 +209,59 @@ package body System.Regexp is\n          --  The last occurrence of an opening parenthesis, if Glob=False,\n          --  or the last occurrence of an opening curly brace, if Glob=True.\n \n+         procedure Find_Close_Bracket;\n+         --  Go through the pattern to find a closing bracket. Raise an\n+         --  exception if none is found.\n+\n          procedure Raise_Exception_If_No_More_Chars (K : Integer := 0);\n-         --  If S(J + 1 .. S'Last)'Length < K then call Raise_Exception\n+         --  If J + K > S'Last then call Raise_Exception\n+\n+         ------------------------\n+         -- Find_Close_Bracket --\n+         ------------------------\n+\n+         procedure Find_Close_Bracket is\n+            Possible_Range_Start : Boolean := True;\n+            --  Set True everywhere a range character '-' can occur\n+\n+         begin\n+            loop\n+               exit when S (J) = Close_Bracket;\n+\n+               Raise_Exception_If_No_More_Chars (1);\n+               --  The current character is not a close_bracket, thus it should\n+               --  be followed by at least one more char. If not, no close\n+               --  bracket is present and the pattern is ill-formed.\n+\n+               if S (J) = '-' and then S (J + 1) /= Close_Bracket then\n+                  if not Possible_Range_Start then\n+                     Raise_Exception\n+                        (\"No mix of ranges is allowed in \"\n+                        & \"regular expression\", J);\n+                  end if;\n+\n+                  J := J + 1;\n+                  Raise_Exception_If_No_More_Chars (1);\n+\n+                  Possible_Range_Start := False;\n+                  --  Range cannot be followed by '-' character,\n+                  --  except as last character in the set.\n+\n+               else\n+                  Possible_Range_Start := True;\n+               end if;\n+\n+               if S (J) = '\\' then\n+                  J := J + 1;\n+                  Raise_Exception_If_No_More_Chars (1);\n+                  --  We ignore the next character and need to check we have\n+                  --  one more available character. This is necessary for\n+                  --  the erroneous [\\] pattern which stands for [\\]] or [\\\\].\n+               end if;\n+\n+               J := J + 1;\n+            end loop;\n+         end Find_Close_Bracket;\n \n          --------------------------------------\n          -- Raise_Exception_If_No_More_Chars --\n@@ -240,63 +291,23 @@ package body System.Regexp is\n                      end if;\n                   end if;\n \n-                  --  The first character never has a special meaning\n-\n+                  --  Characters ']' and '-' are meant as literals when first\n+                  --  in the list.  As such, they have no special meaning and\n+                  --  we pass them.\n                   if S (J) = ']' or else S (J) = '-' then\n                      J := J + 1;\n                      Raise_Exception_If_No_More_Chars;\n                   end if;\n \n-                  --  The set of characters cannot be empty\n-\n                   if S (J) = ']' then\n+                     --  ??? This message is misleading since the check forbids\n+                     --  the sets []] and [-] but not the empty set [].\n                      Raise_Exception\n                        (\"Set of characters cannot be empty in regular \"\n                           & \"expression\", J);\n                   end if;\n \n-                  declare\n-                     Possible_Range_Start : Boolean := True;\n-                     --  Set True everywhere a range character '-' can occur\n-\n-                  begin\n-                     loop\n-                        exit when S (J) = Close_Bracket;\n-\n-                        --  The current character should be followed by a\n-                        --  closing bracket.\n-\n-                        Raise_Exception_If_No_More_Chars (1);\n-\n-                        if S (J) = '-'\n-                          and then S (J + 1) /= Close_Bracket\n-                        then\n-                           if not Possible_Range_Start then\n-                              Raise_Exception\n-                                (\"No mix of ranges is allowed in \"\n-                                   & \"regular expression\", J);\n-                           end if;\n-\n-                           J := J + 1;\n-                           Raise_Exception_If_No_More_Chars;\n-\n-                           --  Range cannot be followed by '-' character,\n-                           --  except as last character in the set.\n-\n-                           Possible_Range_Start := False;\n-\n-                        else\n-                           Possible_Range_Start := True;\n-                        end if;\n-\n-                        if S (J) = '\\' then\n-                           J := J + 1;\n-                           Raise_Exception_If_No_More_Chars;\n-                        end if;\n-\n-                        J := J + 1;\n-                     end loop;\n-                  end;\n+                  Find_Close_Bracket;\n \n                   --  A closing bracket can end an elmt or term\n "}]}