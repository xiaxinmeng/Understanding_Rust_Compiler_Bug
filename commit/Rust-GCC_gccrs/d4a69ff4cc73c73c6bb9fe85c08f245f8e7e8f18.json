{"sha": "d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRhNjlmZjRjYzczYzczYzZiYjlmZTg1YzA4ZjI0NWY4ZTdlOGYxOA==", "commit": {"author": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2014-04-04T08:03:19Z"}, "committer": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2014-04-04T08:03:19Z"}, "message": "decl.c (duplicate_decls): Check for the return of permerror before emitting a note.\n\n2014-04-04  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n\n\t* decl.c (duplicate_decls): Check for the return of permerror\n\tbefore emitting a note.\n\n\n2014-04-04  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n\n\t* g++.old-deja/g++.robertl/eb121.C: Adjust.\n\t* g++.old-deja/g++.jason/overload21.C: Likewise.\n\t* g++.old-deja/g++.law/init5.C: Likewise.\n\nFrom-SVN: r209071", "tree": {"sha": "1f45f582301ad9b8c2cd02fe14457df7325c5526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f45f582301ad9b8c2cd02fe14457df7325c5526"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/comments", "author": null, "committer": null, "parents": [{"sha": "2d18d29532a35c3eb0fafa54fec9f654974c9b5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d18d29532a35c3eb0fafa54fec9f654974c9b5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d18d29532a35c3eb0fafa54fec9f654974c9b5c"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "a57565416966df335ed7f55009b2528a96675bf5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "patch": "@@ -1,3 +1,8 @@\n+2014-04-04  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n+\n+\t* decl.c (duplicate_decls): Check for the return of permerror\n+\tbefore emitting a note.\n+\n 2014-04-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* class.c (accessible_nvdtor_p): New.\n@@ -66,9 +71,9 @@\n 2014-03-26  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n \n \tPR c++/52369\n-\t* cp/method.c (walk_field_subobs): Improve the diagnostic\n+\t* method.c (walk_field_subobs): Improve the diagnostic\n \tlocations for both REFERENCE_TYPEs and non-static const members.\n-\t* cp/init.c (diagnose_uninitialized_cst_or_ref_member): Use %q#D\n+\t* init.c (diagnose_uninitialized_cst_or_ref_member): Use %q#D\n \tinstead of %qD to be consistent with the c++11 diagnostic.\n \n 2014-03-25  Jason Merrill  <jason@redhat.com>"}, {"sha": "f1743dd74dc3ce8efbdf3f2b5e0506e7e17c7c4c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "patch": "@@ -1737,9 +1737,9 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n \t\t\tif (permerror (input_location,\n \t\t\t\t       \"default argument given for parameter \"\n \t\t\t\t       \"%d of %q#D\", i, newdecl))\n-\t\t\t  permerror (DECL_SOURCE_LOCATION (olddecl),\n-\t\t\t\t     \"previous specification in %q#D here\",\n-\t\t\t\t     olddecl);\n+\t\t\t  inform (DECL_SOURCE_LOCATION (olddecl),\n+\t\t\t\t  \"previous specification in %q#D here\",\n+\t\t\t\t  olddecl);\n \t\t      }\n \t\t    else\n \t\t      {"}, {"sha": "0446485dfb88436715f2ca4c0677798c5e4d21dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "patch": "@@ -1,3 +1,9 @@\n+2014-04-04  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n+\n+\t* g++.old-deja/g++.robertl/eb121.C: Adjust.\n+\t* g++.old-deja/g++.jason/overload21.C: Likewise.\n+\t* g++.old-deja/g++.law/init5.C: Likewise.\n+\n 2014-04-03  Cong Hou  <congh@google.com>\n \n \tPR tree-optimization/60505\n@@ -22,7 +28,7 @@\n \n \tPR ipa/60659\n \t* testsuite/g++.dg/torture/pr60659.C: New testcase.\n-\t\n+\n 2014-04-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/60733"}, {"sha": "125aee0dbfc64c062ebada4f07cf4ecbe6715471", "filename": "gcc/testsuite/g++.old-deja/g++.jason/overload21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload21.C?ref=d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n struct X {\n-  void f (int = 4, char = 'r');\t// { dg-error \"previous specification\" } \n+  void f (int = 4, char = 'r');\t// { dg-message \"previous specification\" } \n   void g (int = 4, char = 'r');\t// { dg-message \"previous specification\" } \n };\n "}, {"sha": "7ed89e21924a3c8ea5a872df825930c1a0daa78d", "filename": "gcc/testsuite/g++.old-deja/g++.law/init5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Finit5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Finit5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Finit5.C?ref=d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "patch": "@@ -11,8 +11,8 @@ extern int fred( int);\n \n class X {\n       public :\n-      void f( int = fred( 0) ) ; // { dg-error \"\" } previous spec\n+      void f( int = fred( 0) ) ; // { dg-message \"previous spec\" }\n } ;\n \n-void X::f( int x = fred( 0) ) {// { dg-error \"\" } .*\n+void X::f( int x = fred( 0) ) { // { dg-error \"default argument\" }\n }"}, {"sha": "036c8d5152afa22307cc3ac1f87bf6476197612f", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb121.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb121.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb121.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb121.C?ref=d4a69ff4cc73c73c6bb9fe85c08f245f8e7e8f18", "patch": "@@ -3,7 +3,7 @@ class A {\n private:\n   int i1_;\n public:\n-  void f(int const i1 = 1); // { dg-error \"previous specification\" }\n+  void f(int const i1 = 1); // { dg-message \"previous specification\" }\n };\n \n void"}]}