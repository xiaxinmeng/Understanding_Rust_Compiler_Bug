{"sha": "677e29e167fb205d5bee619c68ba057d5211cf73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc3ZTI5ZTE2N2ZiMjA1ZDViZWU2MTljNjhiYTA1N2Q1MjExY2Y3Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-04-29T16:06:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-04-29T16:06:09Z"}, "message": "localefwd.h: Remove redundant inline qualifiers.\n\n2007-04-29  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/localefwd.h: Remove redundant inline qualifiers.\n\t(__check_facet): Move...\n\t* include/bits/basic_ios.h: ... here.\n\t(widen(char), narrow(char_type, char)): Define inline.\n\t* include/bits/basic_ios.tcc (widen(char), narrow(char_type, char)):\n\tRemove.\n\nFrom-SVN: r124282", "tree": {"sha": "a3ce936a8860504e3cf9103c8474d6750b496b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3ce936a8860504e3cf9103c8474d6750b496b66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/677e29e167fb205d5bee619c68ba057d5211cf73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677e29e167fb205d5bee619c68ba057d5211cf73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677e29e167fb205d5bee619c68ba057d5211cf73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677e29e167fb205d5bee619c68ba057d5211cf73/comments", "author": null, "committer": null, "parents": [{"sha": "fc9f54d5b517c077b32bc592e4b4b2cad8fd8c5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc9f54d5b517c077b32bc592e4b4b2cad8fd8c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc9f54d5b517c077b32bc592e4b4b2cad8fd8c5d"}], "stats": {"total": 104, "additions": 53, "deletions": 51}, "files": [{"sha": "49432131ab0bdf9b4998e59cf7f3ab017938ce60", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677e29e167fb205d5bee619c68ba057d5211cf73/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677e29e167fb205d5bee619c68ba057d5211cf73/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=677e29e167fb205d5bee619c68ba057d5211cf73", "patch": "@@ -1,3 +1,12 @@\n+2007-04-29  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/localefwd.h: Remove redundant inline qualifiers.\n+\t(__check_facet): Move...\n+\t* include/bits/basic_ios.h: ... here.\n+\t(widen(char), narrow(char_type, char)): Define inline.\n+\t* include/bits/basic_ios.tcc (widen(char), narrow(char_type, char)):\n+\tRemove.\n+\n 2007-04-27  Paolo Carlini  <pcarlini@suse.de>\n \n \tDR 438, [DR]."}, {"sha": "ea9c0dc6565661661c86f59de010fd5302fb9262", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677e29e167fb205d5bee619c68ba057d5211cf73/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677e29e167fb205d5bee619c68ba057d5211cf73/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=677e29e167fb205d5bee619c68ba057d5211cf73", "patch": "@@ -1,6 +1,7 @@\n // Iostreams base classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -38,13 +39,22 @@\n \n #pragma GCC system_header\n \n-#include <bits/streambuf_iterator.h>\n #include <bits/localefwd.h>\n #include <bits/locale_classes.h>\n #include <bits/locale_facets.h>\n+#include <bits/streambuf_iterator.h>\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n \n+  template<typename _Facet>\n+    inline const _Facet&\n+    __check_facet(const _Facet* __f)\n+    {\n+      if (!__f)\n+\t__throw_bad_cast();\n+      return *__f;\n+    }\n+\n   // 27.4.5  Template class basic_ios\n   /**\n    *  @brief  Virtual base class for all stream classes.\n@@ -255,7 +265,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       explicit\n       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)\n       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),\n-      _M_ctype(0), _M_num_put(0), _M_num_get(0)\n+\t_M_ctype(0), _M_num_put(0), _M_num_get(0)\n       { this->init(__sb); }\n \n       /**\n@@ -413,7 +423,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  http://gcc.gnu.org/onlinedocs/libstdc++/22_locale/howto.html\n       */\n       char\n-      narrow(char_type __c, char __dfault) const;\n+      narrow(char_type __c, char __dfault) const\n+      { return __check_facet(_M_ctype).narrow(__c, __dfault); }\n \n       /**\n        *  @brief  Widens characters.\n@@ -431,7 +442,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *  http://gcc.gnu.org/onlinedocs/libstdc++/22_locale/howto.html\n       */\n       char_type\n-      widen(char __c) const;\n+      widen(char __c) const\n+      { return __check_facet(_M_ctype).widen(__c); }\n \n     protected:\n       // 27.4.5.1  basic_ios constructors\n@@ -443,7 +455,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       */\n       basic_ios()\n       : ios_base(), _M_tie(0), _M_fill(char_type()), _M_fill_init(false), \n-      _M_streambuf(0), _M_ctype(0), _M_num_put(0), _M_num_get(0)\n+\t_M_streambuf(0), _M_ctype(0), _M_num_put(0), _M_num_get(0)\n       { }\n \n       /**"}, {"sha": "399e93ae7371ae572a8e339798069f5966e9d5cf", "filename": "libstdc++-v3/include/bits/basic_ios.tcc", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677e29e167fb205d5bee619c68ba057d5211cf73/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677e29e167fb205d5bee619c68ba057d5211cf73/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc?ref=677e29e167fb205d5bee619c68ba057d5211cf73", "patch": "@@ -1,6 +1,6 @@\n // basic_ios member functions -*- C++ -*-\n \n-// Copyright (C) 1999, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -112,16 +112,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       return *this;\n     }\n \n-  template<typename _CharT, typename _Traits>\n-    char\n-    basic_ios<_CharT, _Traits>::narrow(char_type __c, char __dfault) const\n-    { return __check_facet(_M_ctype).narrow(__c, __dfault); }\n-\n-  template<typename _CharT, typename _Traits>\n-    _CharT\n-    basic_ios<_CharT, _Traits>::widen(char __c) const\n-    { return __check_facet(_M_ctype).widen(__c); }\n-\n   // Locales:\n   template<typename _CharT, typename _Traits>\n     locale"}, {"sha": "94a73639cbbd089729a613e646d7ae52f4e0b23a", "filename": "libstdc++-v3/include/bits/localefwd.h", "status": "modified", "additions": 25, "deletions": 34, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677e29e167fb205d5bee619c68ba057d5211cf73/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677e29e167fb205d5bee619c68ba057d5211cf73/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h?ref=677e29e167fb205d5bee619c68ba057d5211cf73", "patch": "@@ -1,6 +1,7 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005, 2006, 2007\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -43,67 +44,74 @@\n #pragma GCC system_header\n \n #include <bits/c++config.h>\n-#include <bits/c++locale.h>     // Defines __c_locale, config-specific includes\n-#include <iosfwd>\t\t// For ostreambuf_iterator, istreambuf_iterator\n+#include <bits/c++locale.h>  // Defines __c_locale, config-specific include\n+#include <iosfwd>            // For ostreambuf_iterator, istreambuf_iterator\n #include <cctype>\n-#include <bits/functexcept.h>\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   // 22.1.1 Locale\n   class locale;\n \n+  template<typename _Facet>\n+    bool\n+    has_facet(const locale&) throw();\n+\n+  template<typename _Facet>\n+    const _Facet&\n+    use_facet(const locale&);\n+\n   // 22.1.3 Convenience interfaces\n   template<typename _CharT>\n-    inline bool\n+    bool\n     isspace(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     isprint(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     iscntrl(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     isupper(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     islower(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     isalpha(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     isdigit(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     ispunct(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     isxdigit(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     isalnum(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline bool\n+    bool\n     isgraph(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline _CharT\n+    _CharT\n     toupper(_CharT, const locale&);\n \n   template<typename _CharT>\n-    inline _CharT\n+    _CharT\n     tolower(_CharT, const locale&);\n \n   // 22.2.1 and 22.2.1.3 ctype\n@@ -175,23 +183,6 @@ _GLIBCXX_END_LDBL_NAMESPACE\n   template<typename _CharT>\n     class messages_byname;\n \n-  template<typename _Facet>\n-    bool\n-    has_facet(const locale& __loc) throw();\n-\n-  template<typename _Facet>\n-    const _Facet&\n-    use_facet(const locale& __loc);\n-\n-  template<typename _Facet>\n-    inline const _Facet&\n-    __check_facet(const _Facet* __f)\n-    {\n-      if (!__f)\n-\t__throw_bad_cast();\n-      return *__f;\n-    }\n-\n _GLIBCXX_END_NAMESPACE\n \n #endif"}]}