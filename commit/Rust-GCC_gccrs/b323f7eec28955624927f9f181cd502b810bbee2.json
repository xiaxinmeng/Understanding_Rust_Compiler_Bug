{"sha": "b323f7eec28955624927f9f181cd502b810bbee2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMyM2Y3ZWVjMjg5NTU2MjQ5MjdmOWYxODFjZDUwMmI4MTBiYmVlMg==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-01-08T12:45:52Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-01-08T12:45:52Z"}, "message": "Initial revision\n\nFrom-SVN: r174", "tree": {"sha": "e20822bc3cc63097845ffbce95ef1b600998b394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e20822bc3cc63097845ffbce95ef1b600998b394"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b323f7eec28955624927f9f181cd502b810bbee2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b323f7eec28955624927f9f181cd502b810bbee2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b323f7eec28955624927f9f181cd502b810bbee2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b323f7eec28955624927f9f181cd502b810bbee2/comments", "author": null, "committer": null, "parents": [{"sha": "647daf35445bc6597fb183f0af4dedcfd696aa92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647daf35445bc6597fb183f0af4dedcfd696aa92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/647daf35445bc6597fb183f0af4dedcfd696aa92"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "e9e01f9716226bff9101258a2c40d4a4ec29b825", "filename": "gcc/config/m88k/sysv3.h", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b323f7eec28955624927f9f181cd502b810bbee2/gcc%2Fconfig%2Fm88k%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b323f7eec28955624927f9f181cd502b810bbee2/gcc%2Fconfig%2Fm88k%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fsysv3.h?ref=b323f7eec28955624927f9f181cd502b810bbee2", "patch": "@@ -0,0 +1,60 @@\n+/* Definitions of target machine for GNU compiler.\n+   Motorola m88100 running the AT&T/Unisoft/Motorla V.3 reference port.\n+   Copyright (C) 1990, 1991 Free Software Foundation, Inc.\n+   Contributed by Ray Essick (ressick@mot.com)\n+   Currently supported by Tom Wood (wood@dg-rtp.dg.com)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"m88k.h\"\n+\n+/* Default switches */\n+#undef\tTARGET_DEFAULT\n+#define TARGET_DEFAULT\t(MASK_CHECK_ZERO_DIV\t| \\\n+\t\t\t MASK_OCS_DEBUG_INFO\t| \\\n+\t\t\t MASK_OCS_FRAME_POSITION)\n+\n+/* Macros to be automatically defined.  */\n+#undef\tCPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dm88000 -Dm88k -DsysV88 -D__CLASSIFY_TYPE__=2\"\n+\n+/* Override svr3.h to link with ?crt0.o instead of ?crt1.o and ?crtn.o.\n+   From arul@sdsu.edu.  */\n+#undef\tSTARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+   \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\"\n+\n+/* Profiled libraries live in a different directory but keep the same\n+   names other than that.  arul@sdsu.edu says -lg is always needed.  */\n+#undef\tLIB_SPEC\n+#define LIB_SPEC \"%{p:-L/lib/libp}%{pg:%{!p:-L/lib/libp}} -lg -lc\"\n+\n+/* Hot version of the profiler that uses r10 to pass the address of\n+   the counter.  the _gcc_mcount routine knows not to screw with\n+   the parameter registers.\n+\n+   DG/UX does this; i wrote a gnu-c/88k specific version and put it\n+   in libgcc2.c -- RBE; this macro knows about the leading underscore\n+   convention.  */\n+#undef\tFUNCTION_PROFILER\n+#define FUNCTION_PROFILER(FILE, LABELNO) \\\n+  output_function_profiler (FILE, LABELNO, \"_gcc_mcount\", 0)\n+\n+/* Various other changes that we want to have in place without\n+   too many changes to the m88k.h file.  */\n+#undef\tUSE_LIBG\n+#define\tUSE_LIBG"}]}