{"sha": "47027bf3985b99614a97efc76b49ec87339e3722", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcwMjdiZjM5ODViOTk2MTRhOTdlZmM3NmI0OWVjODczMzllMzcyMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-27T22:08:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-27T22:08:41Z"}, "message": "re PR bootstrap/44255 (gcc-4.6-20100522 bootstrap comparison failure on sparc64 and arm)\n\n\tPR bootstrap/44255\n\t* combine.c (struct rtx_subst_pair): Define unconditionally.\n\t(propagate_for_debug_subst): Likewise.  If not AUTO_INC_DEC,\n\tcopy_rtx pair->to instead of cleanup_auto_inc_dec it.\n\tCall make_compound_operation on pair->to.\n\t(propagate_for_debug): Don't call make_compound_operation here.\n\tAlways use simplify_replace_fn_rtx.\n\nFrom-SVN: r159952", "tree": {"sha": "59406d9e109638aa1e6297ea4de9539e8753b7b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59406d9e109638aa1e6297ea4de9539e8753b7b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47027bf3985b99614a97efc76b49ec87339e3722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47027bf3985b99614a97efc76b49ec87339e3722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47027bf3985b99614a97efc76b49ec87339e3722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47027bf3985b99614a97efc76b49ec87339e3722/comments", "author": null, "committer": null, "parents": [{"sha": "1b408ba139d671e02b69aa5447e24f0801097442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b408ba139d671e02b69aa5447e24f0801097442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b408ba139d671e02b69aa5447e24f0801097442"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "0638a80e784a9b6ac38990f82dc3dd22dc923be4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47027bf3985b99614a97efc76b49ec87339e3722/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47027bf3985b99614a97efc76b49ec87339e3722/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47027bf3985b99614a97efc76b49ec87339e3722", "patch": "@@ -1,4 +1,14 @@\n-2010-05-27 Sterling Augustine <sterling@tensilica.com>\n+2010-05-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/44255\n+\t* combine.c (struct rtx_subst_pair): Define unconditionally.\n+\t(propagate_for_debug_subst): Likewise.  If not AUTO_INC_DEC,\n+\tcopy_rtx pair->to instead of cleanup_auto_inc_dec it.\n+\tCall make_compound_operation on pair->to.\n+\t(propagate_for_debug): Don't call make_compound_operation here.\n+\tAlways use simplify_replace_fn_rtx.\n+\n+2010-05-27  Sterling Augustine  <sterling@tensilica.com>\n \n \t* doc/invoke.texi (xtensa options): Add -mforce-no-pic.\n \t* config/xtensa/xtensa.c (override_options): Check"}, {"sha": "1bee2c7f4222e02514ce010f8ae714a4a417ca2b", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47027bf3985b99614a97efc76b49ec87339e3722/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47027bf3985b99614a97efc76b49ec87339e3722/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=47027bf3985b99614a97efc76b49ec87339e3722", "patch": "@@ -2271,6 +2271,7 @@ cleanup_auto_inc_dec (rtx src, bool after, enum machine_mode mem_mode)\n \n   return x;\n }\n+#endif\n \n /* Auxiliary data structure for propagate_for_debug_stmt.  */\n \n@@ -2294,12 +2295,16 @@ propagate_for_debug_subst (rtx from, const_rtx old_rtx, void *data)\n   if (!pair->adjusted)\n     {\n       pair->adjusted = true;\n+#ifdef AUTO_INC_DEC\n       pair->to = cleanup_auto_inc_dec (pair->to, pair->after, VOIDmode);\n+#else\n+      pair->to = copy_rtx (pair->to);\n+#endif\n+      pair->to = make_compound_operation (pair->to, SET);\n       return pair->to;\n     }\n   return copy_rtx (pair->to);\n }\n-#endif\n \n /* Replace occurrences of DEST with SRC in DEBUG_INSNs between INSN\n    and LAST.  If MOVE holds, debug insns must also be moved past\n@@ -2309,34 +2314,21 @@ static void\n propagate_for_debug (rtx insn, rtx last, rtx dest, rtx src, bool move)\n {\n   rtx next, move_pos = move ? last : NULL_RTX, loc;\n-  bool first_p;\n \n-#ifdef AUTO_INC_DEC\n   struct rtx_subst_pair p;\n   p.to = src;\n   p.adjusted = false;\n   p.after = move;\n-#endif\n \n-  first_p = true;\n   next = NEXT_INSN (insn);\n   while (next != last)\n     {\n       insn = next;\n       next = NEXT_INSN (insn);\n       if (DEBUG_INSN_P (insn))\n \t{\n-\t  if (first_p)\n-\t    {\n-\t      src = make_compound_operation (src, SET);\n-\t      first_p = false;\n-\t    }\n-#ifdef AUTO_INC_DEC\n \t  loc = simplify_replace_fn_rtx (INSN_VAR_LOCATION_LOC (insn),\n \t\t\t\t\t dest, propagate_for_debug_subst, &p);\n-#else\n-\t  loc = simplify_replace_rtx (INSN_VAR_LOCATION_LOC (insn), dest, src);\n-#endif\n \t  if (loc == INSN_VAR_LOCATION_LOC (insn))\n \t    continue;\n \t  INSN_VAR_LOCATION_LOC (insn) = loc;"}]}