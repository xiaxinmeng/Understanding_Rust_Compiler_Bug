{"sha": "23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjMWRhN2EzN2IzZWNjMjFiMDhkOGUwODE3YzVhYTQ1MThhM2VlOQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-09-22T09:02:48Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-09-22T09:02:48Z"}, "message": "gimple-fold.c (fold_gimple_call): New parameter inplace, do not fold builtins if it is true.\n\n2010-09-22  Martin Jambor  <mjambor@suse.cz>\n\n\t* gimple-fold.c (fold_gimple_call): New parameter inplace, do not fold\n\tbuiltins if it is true.\n\t(fold_stmt_1): Call, fold_gimple_call always, pass inplace as a\n\tparameter.\n\nFrom-SVN: r164517", "tree": {"sha": "2ea764041949a2f4043cbec62d6f434cbe999a89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ea764041949a2f4043cbec62d6f434cbe999a89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbaee6884c50803d33995317c3e7531c70383552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbaee6884c50803d33995317c3e7531c70383552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbaee6884c50803d33995317c3e7531c70383552"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "b4111eb5c1733c0e2f21975f87bfce6e8b32d152", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9", "patch": "@@ -1,3 +1,10 @@\n+2010-09-22  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* gimple-fold.c (fold_gimple_call): New parameter inplace, do not fold\n+\tbuiltins if it is true.\n+\t(fold_stmt_1): Call, fold_gimple_call always, pass inplace as a\n+\tparameter.\n+\n 2010-09-22  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-sra.c (struct access): New field grp_no_warning."}, {"sha": "8bad08d567a8efdfb6fc23ed577fd94c667c1cbe", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=23c1da7a37b3ecc21b08d8e0817c5aa4518a3ee9", "patch": "@@ -1486,15 +1486,15 @@ gimple_fold_obj_type_ref (tree ref, tree known_type)\n    It is assumed that the operands have been previously folded.  */\n \n static bool\n-fold_gimple_call (gimple_stmt_iterator *gsi)\n+fold_gimple_call (gimple_stmt_iterator *gsi, bool inplace)\n {\n   gimple stmt = gsi_stmt (*gsi);\n \n   tree callee = gimple_call_fndecl (stmt);\n \n   /* Check for builtins that CCP can handle using information not\n      available in the generic fold routines.  */\n-  if (callee && DECL_BUILT_IN (callee))\n+  if (!inplace && callee && DECL_BUILT_IN (callee))\n     {\n       tree result = gimple_fold_builtin (stmt);\n \n@@ -1511,7 +1511,6 @@ fold_gimple_call (gimple_stmt_iterator *gsi)\n          there requires that we create a new CALL_EXPR, and that requires\n          copying EH region info to the new node.  Easier to just do it\n          here where we can just smash the call operand.  */\n-      /* ??? Is there a good reason not to do this in fold_stmt_inplace?  */\n       callee = gimple_call_fn (stmt);\n       if (TREE_CODE (callee) == OBJ_TYPE_REF\n           && TREE_CODE (OBJ_TYPE_REF_OBJECT (callee)) == ADDR_EXPR)\n@@ -1578,9 +1577,7 @@ fold_stmt_1 (gimple_stmt_iterator *gsi, bool inplace)\n \t\tchanged = true;\n \t      }\n \t  }\n-      /* The entire statement may be replaced in this case.  */\n-      if (!inplace)\n-\tchanged |= fold_gimple_call (gsi);\n+      changed |= fold_gimple_call (gsi, inplace);\n       break;\n \n     case GIMPLE_ASM:"}]}