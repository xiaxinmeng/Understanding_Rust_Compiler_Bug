{"sha": "a78bdb3850ecf3e7df69c293d2827bbf8097967b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc4YmRiMzg1MGVjZjNlN2RmNjljMjkzZDI4MjdiYmY4MDk3OTY3Yg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-12T17:45:57Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-12T17:45:57Z"}, "message": "(thread_prologue_and_epilogue_insns): For the\nepilogue, put USE insns immediately before the return insn.\n\nFrom-SVN: r5142", "tree": {"sha": "c3c451471105dd449514406c6ef9b466199ceb17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3c451471105dd449514406c6ef9b466199ceb17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a78bdb3850ecf3e7df69c293d2827bbf8097967b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78bdb3850ecf3e7df69c293d2827bbf8097967b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a78bdb3850ecf3e7df69c293d2827bbf8097967b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78bdb3850ecf3e7df69c293d2827bbf8097967b/comments", "author": null, "committer": null, "parents": [{"sha": "46aea93218b08e77f247b597c3dc779e294b77cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46aea93218b08e77f247b597c3dc779e294b77cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46aea93218b08e77f247b597c3dc779e294b77cb"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "21d58f03a8a82e718e0ea4e8345e1c2b87b336ff", "filename": "gcc/function.c", "status": "modified", "additions": 31, "deletions": 9, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a78bdb3850ecf3e7df69c293d2827bbf8097967b/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a78bdb3850ecf3e7df69c293d2827bbf8097967b/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=a78bdb3850ecf3e7df69c293d2827bbf8097967b", "patch": "@@ -4846,26 +4846,48 @@ thread_prologue_and_epilogue_insns (f)\n       /* If we end with a BARRIER, we don't need an epilogue.  */\n       if (! (prev && GET_CODE (prev) == BARRIER))\n \t{\n-\t  rtx tail, seq;\n+\t  rtx tail, seq, tem;\n+\t  rtx first_use = 0;\n+\t  rtx last_use = 0;\n \n-\t  /* The last basic block ends with a NOTE_INSN_EPILOGUE_BEG,\n-\t     the epilogue insns (this must include the jump insn that\n-\t     returns), USE insns ad the end of a function, and a BARRIER.  */\n+\t  /* The last basic block ends with a NOTE_INSN_EPILOGUE_BEG, the\n+\t     epilogue insns, the USE insns at the end of a function,\n+\t     the jump insn that returns, and then a BARRIER.  */\n \n-\t  emit_barrier_after (insn);\n-\n-\t  /* Place the epilogue before the USE insns at the end of a\n-\t     function.  */\n+\t  /* Move the USE insns at the end of a function onto a list.  */\n \t  while (prev\n \t\t && GET_CODE (prev) == INSN\n \t\t && GET_CODE (PATTERN (prev)) == USE)\n \t    {\n-\t      insn = PREV_INSN (prev);\n+\t      tem = prev;\n \t      prev = prev_nonnote_insn (prev);\n+\n+\t      NEXT_INSN (PREV_INSN (tem)) = NEXT_INSN (tem);\n+\t      PREV_INSN (NEXT_INSN (tem)) = PREV_INSN (tem);\n+\t      if (! first_use)\n+\t\tfirst_use = tem;\n+\t      if (last_use)\n+\t\tNEXT_INSN (last_use) = tem;\n+\t      else\n+\t\tlast_use = tem;\n \t    }\n \n+\t  emit_barrier_after (insn);\n+\n \t  seq = gen_epilogue ();\n \t  tail = emit_jump_insn_after (seq, insn);\n+\n+\t  /* Insert the USE insns immediately before the return insn, which\n+\t     must be the first instruction before the final barrier.  */\n+\t  if (first_use)\n+\t    {\n+\t      tem = prev_nonnote_insn (get_last_insn ());\n+\t      NEXT_INSN (PREV_INSN (tem)) = first_use;\n+\t      PREV_INSN (first_use) = PREV_INSN (tem);\n+\t      PREV_INSN (tem) = last_use;\n+\t      NEXT_INSN (last_use) = tem;\n+\t    }\n+\n \t  emit_note_after (NOTE_INSN_EPILOGUE_BEG, insn);\n \n \t  /* Include the new epilogue insns in the last block.  Ignore"}]}