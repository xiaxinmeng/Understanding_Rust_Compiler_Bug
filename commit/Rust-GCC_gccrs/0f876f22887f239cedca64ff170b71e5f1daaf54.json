{"sha": "0f876f22887f239cedca64ff170b71e5f1daaf54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4NzZmMjI4ODdmMjM5Y2VkY2E2NGZmMTcwYjcxZTVmMWRhYWY1NA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mjw@redhat.com", "date": "2015-09-14T09:49:47Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2015-09-14T09:49:47Z"}, "message": "PR28901 -Wunused-variable ignores unused const initialised variables in C\n\n12 years ago it was decided that -Wunused-variable shouldn't warn about\nstatic const variables because some code used const static char rcsid[]\nstrings which were never used but wanted in the code anyway. But as the\nbug points out this hides some real bugs. These days the usage of rcsids\nis not very popular anymore. So this patch changes the default to warn\nabout unused static const variables in C with -Wunused-variable. And it\nadds a new option -Wno-unused-const-variable to turn this warning off.\nFor C++ this new warning is off by default, since const variables can be\nused as #defines in C++. New testcases for the new defaults in C and C++\nare included testing the new warning and suppressing it with an unused\nattribute or using -Wno-unused-const-variable.\n\ngcc/ChangeLog\n\n       PR c/28901\n       * toplev.c (check_global_declaration): Check and use\n       warn_unused_const_variable.\n       * doc/invoke.texi (Warning Options): Add -Wunused-const-variable.\n       (-Wunused-variable): Remove non-constant. For C implies\n       -Wunused-const-variable.\n       (-Wunused-const-variable): New.\n\ngcc/c-family/ChangeLog\n\n       PR c/28901\n       * c.opt (Wunused-variable): Option from common.opt.\n       (Wunused-const-variable): New option.\n\ngcc/cp/ChangeLog\n\n       PR c/28901\n       * cp-objcp-common.c (cxx_warn_unused_global_decl): Remove hard-coded\n       VAR_P TREE_READONLY override.\n\ngcc/testsuite/ChangeLog\n\n       PR c/28901\n       * g++.dg/warn/unused-variable-1.C: New test.\n       * g++.dg/warn/unused-variable-2.C: Likewise.\n       * gcc.dg/unused-4.c: Adjust warning for static const.\n       * gcc.dg/unused-variable-1.c: New test.\n       * gcc.dg/unused-variable-2.c: Likewise.\n\nFrom-SVN: r227742", "tree": {"sha": "69691ab92ba1ad50826f35684fac28f7495db523", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69691ab92ba1ad50826f35684fac28f7495db523"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f876f22887f239cedca64ff170b71e5f1daaf54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f876f22887f239cedca64ff170b71e5f1daaf54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f876f22887f239cedca64ff170b71e5f1daaf54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f876f22887f239cedca64ff170b71e5f1daaf54/comments", "author": null, "committer": null, "parents": [{"sha": "cc099b03c01f74b2b8ddf87f93890bdbde2305f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc099b03c01f74b2b8ddf87f93890bdbde2305f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc099b03c01f74b2b8ddf87f93890bdbde2305f9"}], "stats": {"total": 102, "additions": 89, "deletions": 13}, "files": [{"sha": "0aa46d0515068fdd4b5626e8bc3ec626ce0787ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -1,3 +1,13 @@\n+2015-09-11  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR c/28901\n+\t* toplev.c (check_global_declaration): Check and use\n+\twarn_unused_const_variable.\n+\t* doc/invoke.texi (Warning Options): Add -Wunused-const-variable.\n+\t(-Wunused-variable): Remove non-constant. For C implies\n+\t-Wunused-const-variable.\n+\t(-Wunused-const-variable): New.\n+\n 2015-09-14  Richard Biener  <rguenther@suse.de>\n \n \t* doc/match-and-simplify.texi: Update for changed syntax"}, {"sha": "0163b1593dd629a347938cd2e78e7934e0b444e4", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -1,3 +1,9 @@\n+2015-09-11  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR c/28901\n+\t* c.opt (Wunused-variable): Option from common.opt.\n+\t(Wunused-const-variable): New option.\n+\n 2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/53184"}, {"sha": "47ba0704da8d5256d741d5677d1d845308b4a708", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -912,6 +912,14 @@ Wunused-result\n C ObjC C++ ObjC++ Var(warn_unused_result) Init(1) Warning\n Warn if a caller of a function, marked with attribute warn_unused_result, does not use its return value\n \n+Wunused-variable\n+C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wunused)\n+; documented in common.opt\n+\n+Wunused-const-variable\n+C ObjC C++ ObjC++ Var(warn_unused_const_variable) Warning LangEnabledBy(C ObjC,Wunused-variable)\n+Warn when a const variable is unused\n+\n Wvariadic-macros\n C ObjC C++ ObjC++ CPP(warn_variadic_macros) CppReason(CPP_W_VARIADIC_MACROS) Var(cpp_warn_variadic_macros) Init(0) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic || Wtraditional)\n Warn about using variadic macros"}, {"sha": "4101a2e123efc4aead8c3c9ff80231f6f9fcec07", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -1,3 +1,9 @@\n+2015-09-11  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR c/28901\n+\t* cp-objcp-common.c (cxx_warn_unused_global_decl): Remove hard-coded\n+\tVAR_P TREE_READONLY override.\n+\n 2015-09-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/67318"}, {"sha": "808defdb986fa99a01b9baa305044105c5d7ceac", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -62,10 +62,6 @@ cxx_warn_unused_global_decl (const_tree decl)\n   if (DECL_IN_SYSTEM_HEADER (decl))\n     return false;\n \n-  /* Const variables take the place of #defines in C++.  */\n-  if (VAR_P (decl) && TREE_READONLY (decl))\n-    return false;\n-\n   return true;\n }\n "}, {"sha": "7b5e44e088109d34689e2a24eaa48e490d5a2456", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -290,6 +290,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wunsuffixed-float-constants  -Wunused  -Wunused-function @gol\n -Wunused-label  -Wunused-local-typedefs -Wunused-parameter @gol\n -Wno-unused-result -Wunused-value @gol -Wunused-variable @gol\n+-Wunused-const-variable @gol\n -Wunused-but-set-parameter -Wunused-but-set-variable @gol\n -Wuseless-cast -Wvariadic-macros -Wvector-operation-performance @gol\n -Wvla -Wvolatile-register-var  -Wwrite-strings @gol\n@@ -4143,9 +4144,20 @@ its return value. The default is @option{-Wunused-result}.\n @item -Wunused-variable\n @opindex Wunused-variable\n @opindex Wno-unused-variable\n-Warn whenever a local variable or non-constant static variable is unused\n-aside from its declaration.\n-This warning is enabled by @option{-Wall}.\n+Warn whenever a local or static variable is unused aside from its\n+declaration. This option implies @option{-Wunused-const-variable} for C,\n+but not for C++. This warning is enabled by @option{-Wall}.\n+\n+To suppress this warning use the @code{unused} attribute\n+(@pxref{Variable Attributes}).\n+\n+@item -Wunused-const-variable\n+@opindex Wunused-const-variable\n+@opindex Wno-unused-const-variable\n+Warn whenever a constant static variable is unused aside from its declaration.\n+This warning is enabled by @option{-Wunused-variable} for C, but not for C++.\n+In C++ this is normally not an error since const variables take the place of\n+@code{#define}s in C++.\n \n To suppress this warning use the @code{unused} attribute\n (@pxref{Variable Attributes})."}, {"sha": "a285ee22b903d4ec1444f41099718af507ed13d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -1,3 +1,12 @@\n+2015-09-11  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR c/28901\n+\t* g++.dg/warn/unused-variable-1.C: New test.\n+\t* g++.dg/warn/unused-variable-2.C: Likewise.\n+\t* gcc.dg/unused-4.c: Adjust warning for static const.\n+\t* gcc.dg/unused-variable-1.c: New test.\n+\t* gcc.dg/unused-variable-2.c: Likewise.\n+\n 2015-09-13  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gfortran.dg/private_type_3.f90: Require visibility."}, {"sha": "cf531c01f18efb3bc54407db1e1e83d6dcef67a0", "filename": "gcc/testsuite/g++.dg/warn/unused-variable-1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Funused-variable-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Funused-variable-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Funused-variable-1.C?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wunused-variable\" } */\n+\n+static int a = 0;\t  /* { dg-warning \"defined but not used\" } */\n+static const int b = 0;\t  /* Unlike C, this doesn't cause a warning in C++. */\n+static int c __attribute__ ((unused)) = 0;\n+static const char rcsid[] = \"version-string\"; /* Likewise. */"}, {"sha": "b608fbce038f598267a441024c38809e47b02ad7", "filename": "gcc/testsuite/g++.dg/warn/unused-variable-2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Funused-variable-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Funused-variable-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Funused-variable-2.C?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wunused-variable -Wunused-const-variable\" } */\n+\n+static int a = 0;\t/* { dg-warning \"defined but not used\" } */\n+static const int b = 0;\t/* { dg-warning \"defined but not used\" } */\n+static int c __attribute__ ((unused)) = 0;\n+static const char rcsid[] __attribute__ ((unused)) = \"version-string\";"}, {"sha": "53236008007ad9338d1dbc5b34a329966a440844", "filename": "gcc/testsuite/gcc.dg/unused-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fgcc.dg%2Funused-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fgcc.dg%2Funused-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funused-4.c?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wunused -O3\" } */\n \n-static const int i = 0;\n+static const int i = 0;\t\t/* { dg-warning \"defined but not used\" } */\n static void f() { }\t\t/* { dg-warning \"defined but not used\" } */\n static inline void g() { }"}, {"sha": "cb86c3bc8d26a82ef35d63ec28b7b2f81d055241", "filename": "gcc/testsuite/gcc.dg/unused-variable-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fgcc.dg%2Funused-variable-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fgcc.dg%2Funused-variable-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funused-variable-1.c?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wunused-variable\" } */\n+\n+static int a = 0;\t  /* { dg-warning \"defined but not used\" } */\n+static const int b = 0;\t  /* { dg-warning \"defined but not used\" } */\n+static int c __attribute__ ((unused)) = 0;\n+static const char rcsid[] __attribute__ ((unused)) = \"version-string\";"}, {"sha": "0496466a45f0eb8495d6fa301e3eeb22f94d070a", "filename": "gcc/testsuite/gcc.dg/unused-variable-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fgcc.dg%2Funused-variable-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftestsuite%2Fgcc.dg%2Funused-variable-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funused-variable-2.c?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wunused-variable -Wno-unused-const-variable\" } */\n+\n+static int a = 0;\t  /* { dg-warning \"defined but not used\" } */\n+static const int b = 0;\n+static int c __attribute__ ((unused)) = 0;\n+static const char rcsid[] = \"version-string\";"}, {"sha": "95e4c522e4a5558f20ffe23cd722bbf99b9639cb", "filename": "gcc/toplev.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f876f22887f239cedca64ff170b71e5f1daaf54/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=0f876f22887f239cedca64ff170b71e5f1daaf54", "patch": "@@ -497,10 +497,9 @@ check_global_declaration (tree decl)\n \n   /* Warn about static fns or vars defined but not used.  */\n   if (((warn_unused_function && TREE_CODE (decl) == FUNCTION_DECL)\n-       /* We don't warn about \"static const\" variables because the\n-\t  \"rcs_id\" idiom uses that construction.  */\n-       || (warn_unused_variable\n-\t   && TREE_CODE (decl) == VAR_DECL && ! TREE_READONLY (decl)))\n+       || (((warn_unused_variable && ! TREE_READONLY (decl))\n+\t    || (warn_unused_const_variable && TREE_READONLY (decl)))\n+\t   && TREE_CODE (decl) == VAR_DECL))\n       && ! DECL_IN_SYSTEM_HEADER (decl)\n       && ! snode->referred_to_p (/*include_self=*/false)\n       /* This TREE_USED check is needed in addition to referred_to_p\n@@ -527,7 +526,9 @@ check_global_declaration (tree decl)\n     warning_at (DECL_SOURCE_LOCATION (decl),\n \t\t(TREE_CODE (decl) == FUNCTION_DECL)\n \t\t? OPT_Wunused_function\n-\t\t: OPT_Wunused_variable,\n+\t\t: (TREE_READONLY (decl)\n+\t\t   ? OPT_Wunused_const_variable\n+\t\t   : OPT_Wunused_variable),\n \t\t\"%qD defined but not used\", decl);\n }\n "}]}