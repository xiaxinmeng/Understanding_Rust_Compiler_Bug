{"sha": "703ae70c629650dce1ca4a8383fdabbf422973bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAzYWU3MGM2Mjk2NTBkY2UxY2E0YTgzODNmZGFiYmY0MjI5NzNiYg==", "commit": {"author": {"name": "Matt Turner", "email": "mattst88@gmail.com", "date": "2012-06-26T14:59:45Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2012-06-26T14:59:45Z"}, "message": "re PR target/35294 (iwmmxt intrinsics, internal compiler error)\n\n\t* doc/extend.texi (__builtin_arm_tinsrb): Add missing second\n\tparameter.\n\t(__builtin_arm_tinsrh): Likewise.\n\t(__builtin_arm_tinsrw): Likewise.\n\t(__builtin_arm_wsadb): Add missing v2si parameter.\n\t(__builtin_arm_wsadh): Likewise.\n\t(__builtin_arm_getwcx): Delete.\n\t(__builtin_arm_setwcx): Delete.\n\t(__builtin_arm_getwcgr0): Add.\n\t(__builtin_arm_getwcgr1): Add.\n\t(__builtin_arm_getwcgr2): Add.\n\t(__builtin_arm_getwcgr3): Add.\n\t(__builtin_arm_setwcgr0): Add.\n\t(__builtin_arm_setwcgr1): Add.\n\t(__builtin_arm_setwcgr2): Add.\n\t(__builtin_arm_setwcgr3): Add.\n\n\tPR target/35294\n\t* gcc.target/arm/mmx-2.c: New.\n\nFrom-SVN: r188988", "tree": {"sha": "a67a4f5f6634218e6b1f91b4018f1ad0e37aa91a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a67a4f5f6634218e6b1f91b4018f1ad0e37aa91a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/703ae70c629650dce1ca4a8383fdabbf422973bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/703ae70c629650dce1ca4a8383fdabbf422973bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/703ae70c629650dce1ca4a8383fdabbf422973bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/703ae70c629650dce1ca4a8383fdabbf422973bb/comments", "author": {"login": "mattst88", "id": 590254, "node_id": "MDQ6VXNlcjU5MDI1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/590254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattst88", "html_url": "https://github.com/mattst88", "followers_url": "https://api.github.com/users/mattst88/followers", "following_url": "https://api.github.com/users/mattst88/following{/other_user}", "gists_url": "https://api.github.com/users/mattst88/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattst88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattst88/subscriptions", "organizations_url": "https://api.github.com/users/mattst88/orgs", "repos_url": "https://api.github.com/users/mattst88/repos", "events_url": "https://api.github.com/users/mattst88/events{/privacy}", "received_events_url": "https://api.github.com/users/mattst88/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72e732f89d05c0768caf759a8aa3ea6f7a2bba22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72e732f89d05c0768caf759a8aa3ea6f7a2bba22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72e732f89d05c0768caf759a8aa3ea6f7a2bba22"}], "stats": {"total": 210, "additions": 203, "deletions": 7}, "files": [{"sha": "ffd227c5e4f517baed22d643d819d30348b39698", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/703ae70c629650dce1ca4a8383fdabbf422973bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/703ae70c629650dce1ca4a8383fdabbf422973bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=703ae70c629650dce1ca4a8383fdabbf422973bb", "patch": "@@ -1,3 +1,22 @@\n+2012-06-26  Matt Turner  <mattst88@gmail.com>\n+\n+\t* doc/extend.texi (__builtin_arm_tinsrb): Add missing second\n+\tparameter.\n+\t(__builtin_arm_tinsrh): Likewise.\n+\t(__builtin_arm_tinsrw): Likewise.\n+\t(__builtin_arm_wsadb): Add missing v2si parameter.\n+\t(__builtin_arm_wsadh): Likewise.\n+\t(__builtin_arm_getwcx): Delete.\n+\t(__builtin_arm_setwcx): Delete.\n+\t(__builtin_arm_getwcgr0): Add.\n+\t(__builtin_arm_getwcgr1): Add.\n+\t(__builtin_arm_getwcgr2): Add.\n+\t(__builtin_arm_getwcgr3): Add.\n+\t(__builtin_arm_setwcgr0): Add.\n+\t(__builtin_arm_setwcgr1): Add.\n+\t(__builtin_arm_setwcgr2): Add.\n+\t(__builtin_arm_setwcgr3): Add.\n+\n 2012-06-26  Richard Guenther  <rguenther@suse.de>\n \n \tRevert"}, {"sha": "91e7385d87f8b15881c7ab8750c8edfe137f1006", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/703ae70c629650dce1ca4a8383fdabbf422973bb/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/703ae70c629650dce1ca4a8383fdabbf422973bb/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=703ae70c629650dce1ca4a8383fdabbf422973bb", "patch": "@@ -8714,17 +8714,23 @@ typedef int v2si __attribute__ ((vector_size (8)));\n typedef short v4hi __attribute__ ((vector_size (8)));\n typedef char v8qi __attribute__ ((vector_size (8)));\n \n-int __builtin_arm_getwcx (int)\n-void __builtin_arm_setwcx (int, int)\n+int __builtin_arm_getwcgr0 (void)\n+void __builtin_arm_setwcgr0 (int)\n+int __builtin_arm_getwcgr1 (void)\n+void __builtin_arm_setwcgr1 (int)\n+int __builtin_arm_getwcgr2 (void)\n+void __builtin_arm_setwcgr2 (int)\n+int __builtin_arm_getwcgr3 (void)\n+void __builtin_arm_setwcgr3 (int)\n int __builtin_arm_textrmsb (v8qi, int)\n int __builtin_arm_textrmsh (v4hi, int)\n int __builtin_arm_textrmsw (v2si, int)\n int __builtin_arm_textrmub (v8qi, int)\n int __builtin_arm_textrmuh (v4hi, int)\n int __builtin_arm_textrmuw (v2si, int)\n-v8qi __builtin_arm_tinsrb (v8qi, int)\n-v4hi __builtin_arm_tinsrh (v4hi, int)\n-v2si __builtin_arm_tinsrw (v2si, int)\n+v8qi __builtin_arm_tinsrb (v8qi, int, int)\n+v4hi __builtin_arm_tinsrh (v4hi, int, int)\n+v2si __builtin_arm_tinsrw (v2si, int, int)\n long long __builtin_arm_tmia (long long, int, int)\n long long __builtin_arm_tmiabb (long long, int, int)\n long long __builtin_arm_tmiabt (long long, int, int)\n@@ -8796,9 +8802,9 @@ v4hi __builtin_arm_wrorh (v4hi, long long)\n v4hi __builtin_arm_wrorhi (v4hi, int)\n v2si __builtin_arm_wrorw (v2si, long long)\n v2si __builtin_arm_wrorwi (v2si, int)\n-v2si __builtin_arm_wsadb (v8qi, v8qi)\n+v2si __builtin_arm_wsadb (v2si, v8qi, v8qi)\n v2si __builtin_arm_wsadbz (v8qi, v8qi)\n-v2si __builtin_arm_wsadh (v4hi, v4hi)\n+v2si __builtin_arm_wsadh (v2si, v4hi, v4hi)\n v2si __builtin_arm_wsadhz (v4hi, v4hi)\n v4hi __builtin_arm_wshufh (v4hi, int)\n long long __builtin_arm_wslld (long long, long long)"}, {"sha": "a0adc7c051b047c09fba22c9bb271781b51eb1b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/703ae70c629650dce1ca4a8383fdabbf422973bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/703ae70c629650dce1ca4a8383fdabbf422973bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=703ae70c629650dce1ca4a8383fdabbf422973bb", "patch": "@@ -1,3 +1,8 @@\n+2012-06-26  Matt Turner  <mattst88@gmail.com>\n+\n+\tPR target/35294\n+\t* gcc.target/arm/mmx-2.c: New.\n+\n 2012-06-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR c++/53752"}, {"sha": "d8409799a03e5b011eeca0a42e51a789a969659e", "filename": "gcc/testsuite/gcc.target/arm/mmx-2.c", "status": "added", "additions": 166, "deletions": 0, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/703ae70c629650dce1ca4a8383fdabbf422973bb/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmmx-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/703ae70c629650dce1ca4a8383fdabbf422973bb/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmmx-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmmx-2.c?ref=703ae70c629650dce1ca4a8383fdabbf422973bb", "patch": "@@ -0,0 +1,166 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-mcpu=*\" } { \"-mcpu=iwmmxt\" } } */\n+/* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-mabi=*\" } { \"-mabi=iwmmxt\" } } */\n+/* { dg-skip-if \"Test is specific to the iWMMXt\" { arm*-*-* } { \"-march=*\" } { \"-march=iwmmxt\" } } */\n+/* { dg-skip-if \"Test is specific to ARM mode\" { arm*-*-* } { \"-mthumb\" } { \"\" } } */\n+/* { dg-require-effective-target arm32 } */\n+/* { dg-require-effective-target arm_iwmmxt_ok } */\n+/* { dg-options \"-flax-vector-conversions -std=gnu99\" } */\n+\n+/* Internal data types for implementing the intrinsics.  */\n+typedef int __v2si __attribute__ ((vector_size (8)));\n+typedef short __v4hi __attribute__ ((vector_size (8)));\n+typedef signed char __v8qi __attribute__ ((vector_size (8)));\n+\n+void\n+foo(void)\n+{\n+  volatile int isink;\n+  volatile long long llsink;\n+  volatile __v8qi v8sink;\n+  volatile __v4hi v4sink;\n+  volatile __v2si v2sink;\n+\n+  isink = __builtin_arm_getwcgr0 ();\n+  __builtin_arm_setwcgr0 (isink);\n+  isink = __builtin_arm_getwcgr1 ();\n+  __builtin_arm_setwcgr1 (isink);\n+  isink = __builtin_arm_getwcgr2 ();\n+  __builtin_arm_setwcgr2 (isink);\n+  isink = __builtin_arm_getwcgr3 ();\n+  __builtin_arm_setwcgr3 (isink);\n+\n+  isink = __builtin_arm_textrmsb (v8sink, 0);\n+  isink = __builtin_arm_textrmsh (v4sink, 0);\n+  isink = __builtin_arm_textrmsw (v2sink, 0);\n+  isink = __builtin_arm_textrmub (v8sink, 0);\n+  isink = __builtin_arm_textrmuh (v4sink, 0);\n+  isink = __builtin_arm_textrmuw (v2sink, 0);\n+  v8sink = __builtin_arm_tinsrb (v8sink, isink, 0);\n+  v4sink = __builtin_arm_tinsrh (v4sink, isink, 0);\n+  v2sink = __builtin_arm_tinsrw (v2sink, isink, 0);\n+  llsink = __builtin_arm_tmia (llsink, isink, isink);\n+  llsink = __builtin_arm_tmiabb (llsink, isink, isink);\n+  llsink = __builtin_arm_tmiabt (llsink, isink, isink);\n+  llsink = __builtin_arm_tmiaph (llsink, isink, isink);\n+  llsink = __builtin_arm_tmiatb (llsink, isink, isink);\n+  llsink = __builtin_arm_tmiatt (llsink, isink, isink);\n+  isink = __builtin_arm_tmovmskb (v8sink);\n+  isink = __builtin_arm_tmovmskh (v4sink);\n+  isink = __builtin_arm_tmovmskw (v2sink);\n+  llsink = __builtin_arm_waccb (v8sink);\n+  llsink = __builtin_arm_wacch (v4sink);\n+  llsink = __builtin_arm_waccw (v2sink);\n+  v8sink = __builtin_arm_waddb (v8sink, v8sink);\n+  v8sink = __builtin_arm_waddbss (v8sink, v8sink);\n+  v8sink = __builtin_arm_waddbus (v8sink, v8sink);\n+  v4sink = __builtin_arm_waddh (v4sink, v4sink);\n+  v4sink = __builtin_arm_waddhss (v4sink, v4sink);\n+  v4sink = __builtin_arm_waddhus (v4sink, v4sink);\n+  v2sink = __builtin_arm_waddw (v2sink, v2sink);\n+  v2sink = __builtin_arm_waddwss (v2sink, v2sink);\n+  v2sink = __builtin_arm_waddwus (v2sink, v2sink);\n+  v8sink = __builtin_arm_walign (v8sink, v8sink, 0);  /* waligni: 3-bit immediate.  */\n+  v8sink = __builtin_arm_walign (v8sink, v8sink, isink); /* walignr: GP register.  */\n+  llsink = __builtin_arm_wand(llsink, llsink);\n+  llsink = __builtin_arm_wandn (llsink, llsink);\n+  v8sink = __builtin_arm_wavg2b (v8sink, v8sink);\n+  v8sink = __builtin_arm_wavg2br (v8sink, v8sink);\n+  v4sink = __builtin_arm_wavg2h (v4sink, v4sink);\n+  v4sink = __builtin_arm_wavg2hr (v4sink, v4sink);\n+  v8sink = __builtin_arm_wcmpeqb (v8sink, v8sink);\n+  v4sink = __builtin_arm_wcmpeqh (v4sink, v4sink);\n+  v2sink = __builtin_arm_wcmpeqw (v2sink, v2sink);\n+  v8sink = __builtin_arm_wcmpgtsb (v8sink, v8sink);\n+  v4sink = __builtin_arm_wcmpgtsh (v4sink, v4sink);\n+  v2sink = __builtin_arm_wcmpgtsw (v2sink, v2sink);\n+  v8sink = __builtin_arm_wcmpgtub (v8sink, v8sink);\n+  v4sink = __builtin_arm_wcmpgtuh (v4sink, v4sink);\n+  v2sink = __builtin_arm_wcmpgtuw (v2sink, v2sink);\n+  llsink = __builtin_arm_wmacs (llsink, v4sink, v4sink);\n+  llsink = __builtin_arm_wmacsz (v4sink, v4sink);\n+  llsink = __builtin_arm_wmacu (llsink, v4sink, v4sink);\n+  llsink = __builtin_arm_wmacuz (v4sink, v4sink);\n+  v4sink = __builtin_arm_wmadds (v4sink, v4sink);\n+  v4sink = __builtin_arm_wmaddu (v4sink, v4sink);\n+  v8sink = __builtin_arm_wmaxsb (v8sink, v8sink);\n+  v4sink = __builtin_arm_wmaxsh (v4sink, v4sink);\n+  v2sink = __builtin_arm_wmaxsw (v2sink, v2sink);\n+  v8sink = __builtin_arm_wmaxub (v8sink, v8sink);\n+  v4sink = __builtin_arm_wmaxuh (v4sink, v4sink);\n+  v2sink = __builtin_arm_wmaxuw (v2sink, v2sink);\n+  v8sink = __builtin_arm_wminsb (v8sink, v8sink);\n+  v4sink = __builtin_arm_wminsh (v4sink, v4sink);\n+  v2sink = __builtin_arm_wminsw (v2sink, v2sink);\n+  v8sink = __builtin_arm_wminub (v8sink, v8sink);\n+  v4sink = __builtin_arm_wminuh (v4sink, v4sink);\n+  v2sink = __builtin_arm_wminuw (v2sink, v2sink);\n+  v4sink = __builtin_arm_wmulsm (v4sink, v4sink);\n+  v4sink = __builtin_arm_wmulul (v4sink, v4sink);\n+  v4sink = __builtin_arm_wmulum (v4sink, v4sink);\n+  llsink = __builtin_arm_wor (llsink, llsink);\n+  v2sink = __builtin_arm_wpackdss (llsink, llsink);\n+  v2sink = __builtin_arm_wpackdus (llsink, llsink);\n+  v8sink = __builtin_arm_wpackhss (v4sink, v4sink);\n+  v8sink = __builtin_arm_wpackhus (v4sink, v4sink);\n+  v4sink = __builtin_arm_wpackwss (v2sink, v2sink);\n+  v4sink = __builtin_arm_wpackwus (v2sink, v2sink);\n+  llsink = __builtin_arm_wrord (llsink, llsink);\n+  llsink = __builtin_arm_wrordi (llsink, isink);\n+  v4sink = __builtin_arm_wrorh (v4sink, llsink);\n+  v4sink = __builtin_arm_wrorhi (v4sink, isink);\n+  v2sink = __builtin_arm_wrorw (v2sink, llsink);\n+  v2sink = __builtin_arm_wrorwi (v2sink, isink);\n+  v2sink = __builtin_arm_wsadb (v2sink, v8sink, v8sink);\n+  v2sink = __builtin_arm_wsadbz (v8sink, v8sink);\n+  v2sink = __builtin_arm_wsadh (v2sink, v4sink, v4sink);\n+  v2sink = __builtin_arm_wsadhz (v4sink, v4sink);\n+  v4sink = __builtin_arm_wshufh (v4sink, 0);\n+  llsink = __builtin_arm_wslld (llsink, llsink);\n+  llsink = __builtin_arm_wslldi (llsink, 0);\n+  v4sink = __builtin_arm_wsllh (v4sink, llsink);\n+  v4sink = __builtin_arm_wsllhi (v4sink, isink);\n+  v2sink = __builtin_arm_wsllw (v2sink, llsink);\n+  v2sink = __builtin_arm_wsllwi (v2sink, isink);\n+  llsink = __builtin_arm_wsrad (llsink, llsink);\n+  llsink = __builtin_arm_wsradi (llsink, isink);\n+  v4sink = __builtin_arm_wsrah (v4sink, llsink);\n+  v4sink = __builtin_arm_wsrahi (v4sink, isink);\n+  v2sink = __builtin_arm_wsraw (v2sink, llsink);\n+  v2sink = __builtin_arm_wsrawi (v2sink, isink);\n+  llsink = __builtin_arm_wsrld (llsink, llsink);\n+  llsink = __builtin_arm_wsrldi (llsink, isink);\n+  v4sink = __builtin_arm_wsrlh (v4sink, llsink);\n+  v4sink = __builtin_arm_wsrlhi (v4sink, isink);\n+  v2sink = __builtin_arm_wsrlw (v2sink, llsink);\n+  v2sink = __builtin_arm_wsrlwi (v2sink, isink);\n+  v8sink = __builtin_arm_wsubb (v8sink, v8sink);\n+  v8sink = __builtin_arm_wsubbss (v8sink, v8sink);\n+  v8sink = __builtin_arm_wsubbus (v8sink, v8sink);\n+  v4sink = __builtin_arm_wsubh (v4sink, v4sink);\n+  v4sink = __builtin_arm_wsubhss (v4sink, v4sink);\n+  v4sink = __builtin_arm_wsubhus (v4sink, v4sink);\n+  v2sink = __builtin_arm_wsubw (v2sink, v2sink);\n+  v2sink = __builtin_arm_wsubwss (v2sink, v2sink);\n+  v2sink = __builtin_arm_wsubwus (v2sink, v2sink);\n+  v4sink = __builtin_arm_wunpckehsb (v8sink);\n+  v2sink = __builtin_arm_wunpckehsh (v4sink);\n+  llsink = __builtin_arm_wunpckehsw (v2sink);\n+  v4sink = __builtin_arm_wunpckehub (v8sink);\n+  v2sink = __builtin_arm_wunpckehuh (v4sink);\n+  llsink = __builtin_arm_wunpckehuw (v2sink);\n+  v4sink = __builtin_arm_wunpckelsb (v8sink);\n+  v2sink = __builtin_arm_wunpckelsh (v4sink);\n+  llsink = __builtin_arm_wunpckelsw (v2sink);\n+  v4sink = __builtin_arm_wunpckelub (v8sink);\n+  v2sink = __builtin_arm_wunpckeluh (v4sink);\n+  llsink = __builtin_arm_wunpckeluw (v2sink);\n+  v8sink = __builtin_arm_wunpckihb (v8sink, v8sink);\n+  v4sink = __builtin_arm_wunpckihh (v4sink, v4sink);\n+  v2sink = __builtin_arm_wunpckihw (v2sink, v2sink);\n+  v8sink = __builtin_arm_wunpckilb (v8sink, v8sink);\n+  v4sink = __builtin_arm_wunpckilh (v4sink, v4sink);\n+  v2sink = __builtin_arm_wunpckilw (v2sink, v2sink);\n+  llsink = __builtin_arm_wxor (llsink, llsink);\n+  llsink = __builtin_arm_wzero ();\n+}"}]}