{"sha": "156755acc094b11f5f26644888536feb519c5036", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU2NzU1YWNjMDk0YjExZjVmMjY2NDQ4ODg1MzZmZWI1MTljNTAzNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-06-10T21:47:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-06-10T21:47:45Z"}, "message": "re PR rtl-optimization/6842 (internal compiler error using MMX intrinsics with optimization)\n\n\tPR optimization/6842\n\t* combine.c (combine_simplify_rtx) [SUBREG]: Don't ICE if VOIDmode\n\toperand subreg cannot be simplified.\n\n\t* gcc.dg/20020531-1.c: New test.\n\nFrom-SVN: r54462", "tree": {"sha": "18ee2adc18aa0ef20dd92587a364f5917f84fe87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18ee2adc18aa0ef20dd92587a364f5917f84fe87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/156755acc094b11f5f26644888536feb519c5036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156755acc094b11f5f26644888536feb519c5036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/156755acc094b11f5f26644888536feb519c5036", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156755acc094b11f5f26644888536feb519c5036/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d056e9be5ad2b652f1f76dc4e31621a16e541d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d056e9be5ad2b652f1f76dc4e31621a16e541d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d056e9be5ad2b652f1f76dc4e31621a16e541d6"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "fd4663b875fb615a9df414a6702f1791ce6ffe78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156755acc094b11f5f26644888536feb519c5036/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156755acc094b11f5f26644888536feb519c5036/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=156755acc094b11f5f26644888536feb519c5036", "patch": "@@ -1,3 +1,9 @@\n+2002-06-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR optimization/6842\n+\t* combine.c (combine_simplify_rtx) [SUBREG]: Don't ICE if VOIDmode\n+\toperand subreg cannot be simplified.\n+\n 2002-06-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* varasm.c (const_hash): Handle FDESC_EXPR like ADDR_EXPR."}, {"sha": "0005e2afd25cac5ae916c9e02780207275ea300b", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156755acc094b11f5f26644888536feb519c5036/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156755acc094b11f5f26644888536feb519c5036/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=156755acc094b11f5f26644888536feb519c5036", "patch": "@@ -3866,7 +3866,12 @@ combine_simplify_rtx (x, op0_mode, last, in_dest)\n \n       /* simplify_subreg can't use gen_lowpart_for_combine.  */\n       if (CONSTANT_P (SUBREG_REG (x))\n-\t  && subreg_lowpart_offset (mode, op0_mode) == SUBREG_BYTE (x))\n+\t  && subreg_lowpart_offset (mode, op0_mode) == SUBREG_BYTE (x)\n+\t     /* Don't call gen_lowpart_for_combine if the inner mode\n+\t\tis VOIDmode and we cannot simplify it, as SUBREG without\n+\t\tinner mode is invalid.  */\n+\t  && (GET_MODE (SUBREG_REG (x)) != VOIDmode\n+\t      || gen_lowpart_common (mode, SUBREG_REG (x))))\n \treturn gen_lowpart_for_combine (mode, SUBREG_REG (x));\n \n       if (GET_MODE_CLASS (GET_MODE (SUBREG_REG (x))) == MODE_CC)"}, {"sha": "a0a0de58aaea8d68c3e80357ab1f506f3bf6e244", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156755acc094b11f5f26644888536feb519c5036/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156755acc094b11f5f26644888536feb519c5036/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=156755acc094b11f5f26644888536feb519c5036", "patch": "@@ -4,6 +4,8 @@\n \n \t* g++.dg/opt/vt1.C: New test.\n \n+\t* gcc.dg/20020531-1.c: New test.\n+\n 2002-06-07  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.dg/20020607-2.c: New test case."}, {"sha": "397e2a20f159913bb76d2b5431a46d37624c157f", "filename": "gcc/testsuite/gcc.dg/20020531-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156755acc094b11f5f26644888536feb519c5036/gcc%2Ftestsuite%2Fgcc.dg%2F20020531-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156755acc094b11f5f26644888536feb519c5036/gcc%2Ftestsuite%2Fgcc.dg%2F20020531-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020531-1.c?ref=156755acc094b11f5f26644888536feb519c5036", "patch": "@@ -0,0 +1,21 @@\n+/* PR optimization/6842\n+   This testcase caused ICE when trying to optimize V8QI subreg of VOIDmode\n+   CONST_DOUBLE.  */\n+/* { dg-do compile { target i?86-*-* } } */\n+/* { dg-options \"-O2 -mmmx\" } */\n+\n+typedef int __v8qi __attribute__ ((__mode__ (__V8QI__)));\n+extern void abort (void);\n+extern void exit (int);\n+\n+void foo (void)\n+{\n+  unsigned long long a = 0x0102030405060708LL;\n+  unsigned long long b = 0x1020304050607080LL;\n+  unsigned long long c;\n+\n+  c = (unsigned long long) __builtin_ia32_paddusb ((__v8qi) a, (__v8qi) b);\n+  __builtin_ia32_emms ();\n+  if (c != 0x1122334455667788)\n+    abort ();\n+}"}]}