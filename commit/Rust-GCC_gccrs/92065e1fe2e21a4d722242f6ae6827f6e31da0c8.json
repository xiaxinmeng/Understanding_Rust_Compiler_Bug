{"sha": "92065e1fe2e21a4d722242f6ae6827f6e31da0c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIwNjVlMWZlMmUyMWE0ZDcyMjI0MmY2YWU2ODI3ZjZlMzFkYTBjOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-19T21:34:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-19T21:34:03Z"}, "message": "(calculate_giv_inc): Handle increment computed by ASHIFT.\n\nFrom-SVN: r10256", "tree": {"sha": "4affc847eacad9f1e5c8ffb36fda8adcc43747fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4affc847eacad9f1e5c8ffb36fda8adcc43747fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92065e1fe2e21a4d722242f6ae6827f6e31da0c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92065e1fe2e21a4d722242f6ae6827f6e31da0c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92065e1fe2e21a4d722242f6ae6827f6e31da0c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92065e1fe2e21a4d722242f6ae6827f6e31da0c8/comments", "author": null, "committer": null, "parents": [{"sha": "3c8db3f29c32dfceb1c054954b9859375f0b95da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c8db3f29c32dfceb1c054954b9859375f0b95da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c8db3f29c32dfceb1c054954b9859375f0b95da"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "c5985780a8286ba76b59f7f52fcaee8c543908f6", "filename": "gcc/unroll.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92065e1fe2e21a4d722242f6ae6827f6e31da0c8/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92065e1fe2e21a4d722242f6ae6827f6e31da0c8/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=92065e1fe2e21a4d722242f6ae6827f6e31da0c8", "patch": "@@ -1412,10 +1412,13 @@ calculate_giv_inc (pattern, src_insn, regno)\n \t one of the LO_SUM rtx.  */\n       if (GET_CODE (increment) == LO_SUM)\n \tincrement = XEXP (increment, 1);\n-      else if (GET_CODE (increment) == IOR)\n+      else if (GET_CODE (increment) == IOR\n+\t       || GET_CODE (increment) == ASHIFT)\n \t{\n-\t  /* The rs6000 port loads some constants with IOR.  */\n+\t  /* The rs6000 port loads some constants with IOR.\n+\t     The alpha port loads some constants with ASHIFT.  */\n \t  rtx second_part = XEXP (increment, 1);\n+\t  enum rtx_code code = GET_CODE (increment);\n \n \t  src_insn = PREV_INSN (src_insn);\n \t  increment = SET_SRC (PATTERN (src_insn));\n@@ -1426,7 +1429,10 @@ calculate_giv_inc (pattern, src_insn, regno)\n \t      || GET_CODE (increment) != CONST_INT)\n \t    abort ();\n \n-\t  increment = GEN_INT (INTVAL (increment) | INTVAL (second_part));\n+\t  if (code == IOR)\n+\t    increment = GEN_INT (INTVAL (increment) | INTVAL (second_part));\n+\t  else\n+\t    increment = GEN_INT (INTVAL (increment) << INTVAL (second_part));\n \t}\n \n       if (GET_CODE (increment) != CONST_INT)"}]}