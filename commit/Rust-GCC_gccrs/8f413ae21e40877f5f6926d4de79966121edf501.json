{"sha": "8f413ae21e40877f5f6926d4de79966121edf501", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY0MTNhZTIxZTQwODc3ZjVmNjkyNmQ0ZGU3OTk2NjEyMWVkZjUwMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-01-13T21:04:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-01-13T21:04:28Z"}, "message": "re PR c++/64520 (ICE with std::initializer_list)\n\n\tPR c++/64520\n\t* pt.c (unify): Don't try to deduce to std::initializer_list<T...>.\n\nFrom-SVN: r219557", "tree": {"sha": "fd1a0a2ea0b5aefb3aa9a1e237b734f7525ad71b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd1a0a2ea0b5aefb3aa9a1e237b734f7525ad71b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f413ae21e40877f5f6926d4de79966121edf501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f413ae21e40877f5f6926d4de79966121edf501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f413ae21e40877f5f6926d4de79966121edf501", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f413ae21e40877f5f6926d4de79966121edf501/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2001028ad3a44e5333333c175118837dba03c620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2001028ad3a44e5333333c175118837dba03c620", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2001028ad3a44e5333333c175118837dba03c620"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "0e94fe136a4c0194870dfa7e4b18a13013b9cb76", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f413ae21e40877f5f6926d4de79966121edf501/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f413ae21e40877f5f6926d4de79966121edf501/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8f413ae21e40877f5f6926d4de79966121edf501", "patch": "@@ -1,3 +1,8 @@\n+2015-01-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/64520\n+\t* pt.c (unify): Don't try to deduce to std::initializer_list<T...>.\n+\n 2015-01-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/64547"}, {"sha": "3ac93db948a3086574fe8f653e1790ec57f24718", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f413ae21e40877f5f6926d4de79966121edf501/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f413ae21e40877f5f6926d4de79966121edf501/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=8f413ae21e40877f5f6926d4de79966121edf501", "patch": "@@ -17854,7 +17854,13 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict,\n       if (TREE_CODE (parm) == ARRAY_TYPE)\n \telttype = TREE_TYPE (parm);\n       else\n-\telttype = TREE_VEC_ELT (CLASSTYPE_TI_ARGS (parm), 0);\n+\t{\n+\t  elttype = TREE_VEC_ELT (CLASSTYPE_TI_ARGS (parm), 0);\n+\t  /* Deduction is defined in terms of a single type, so just punt\n+\t     on the (bizarre) std::initializer_list<T...>.  */\n+\t  if (PACK_EXPANSION_P (elttype))\n+\t    return unify_success (explain_p);\n+\t}\n \n       FOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (arg), i, elt)\n \t{"}, {"sha": "1387557ab2d2f76dd848507f967e1fae5baf05dd", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist91.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f413ae21e40877f5f6926d4de79966121edf501/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist91.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f413ae21e40877f5f6926d4de79966121edf501/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist91.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist91.C?ref=8f413ae21e40877f5f6926d4de79966121edf501", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/64520\n+// { dg-do compile { target c++11 } }\n+\n+#include <initializer_list>\n+struct A {\n+  template <typename... B> A(std::initializer_list<B...>);\n+};\n+A a { 0 };\t\t\t// { dg-error \"\" }"}]}