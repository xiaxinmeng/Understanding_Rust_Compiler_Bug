{"sha": "bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNiOTdmYmRhZDE0Y2Q4ZjVkZGE3ZWJlMzYxN2ExNGRkYzU2YmIwOA==", "commit": {"author": {"name": "Po-Chun Chang", "email": "pchang9@cs.wisc.edu", "date": "2013-07-18T16:07:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-07-18T16:07:37Z"}, "message": "read-rtl.c (validate_const_int): Once an invalid character is seen, quit the loop.\n\n        * read-rtl.c (validate_const_int): Once an invalid character is\n        seen, quit the loop.\n\n        * gengtype.c (write_roots): Similarly once we find the\n        \"deletable\" or \"if_marked\" option.\n\nFrom-SVN: r201034", "tree": {"sha": "b8bdedc62caf6c90b896158130cf8d85efe139a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8bdedc62caf6c90b896158130cf8d85efe139a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08/comments", "author": null, "committer": null, "parents": [{"sha": "37cd74abd752d7580bedfe4cca9594fb5fa66beb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37cd74abd752d7580bedfe4cca9594fb5fa66beb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37cd74abd752d7580bedfe4cca9594fb5fa66beb"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "5e3fbbea600bba0d24ebeb0e3ea1412e85d627c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08", "patch": "@@ -1,3 +1,11 @@\n+2013-07-18  Chang  <pchang9@cs.wisc.edu>\n+\n+\t* read-rtl.c (validate_const_int): Once an invalid character is\n+\tseen, quit the loop.\n+\n+\t* gengtype.c (write_roots): Similarly once we find the \"deletable\"\n+\tor \"if_marked\" option.\n+\n 2013-07-18  Sofiane Naci  <sofiane.naci@arm.com>\n \n \t* config/arm/arm.md (attribute \"insn\"): Delete values \"mrs\", \"msr\","}, {"sha": "20854966facfbd975c93415a1767909212f4eb7d", "filename": "gcc/gengtype.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08", "patch": "@@ -4682,7 +4682,10 @@ write_roots (pair_p variables, bool emit_pch)\n       for (o = v->opt; o; o = o->next)\n \tif (strcmp (o->name, \"deletable\") == 0\n \t    || strcmp (o->name, \"if_marked\") == 0)\n-\t  skip_p = 1;\n+\t  {\n+\t    skip_p = 1;\n+\t    break;\n+\t  }\n \n       if (skip_p)\n \tcontinue;"}, {"sha": "10adf472a08df8c42ae0e8eabaebd8c60620f251", "filename": "gcc/read-rtl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08/gcc%2Fread-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08/gcc%2Fread-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-rtl.c?ref=bcb97fbdad14cd8f5dda7ebe3617a14ddc56bb08", "patch": "@@ -803,7 +803,10 @@ validate_const_int (const char *string)\n     valid = 0;\n   for (; *cp; cp++)\n     if (! ISDIGIT (*cp))\n-      valid = 0;\n+      {\n+        valid = 0;\n+\tbreak;\n+      }\n   if (!valid)\n     fatal_with_file_and_line (\"invalid decimal constant \\\"%s\\\"\\n\", string);\n }"}]}