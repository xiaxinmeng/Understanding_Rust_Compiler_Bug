{"sha": "1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRjNWExODRhYzY2YjFiMzI4NGY0NWJlMWY4YjhkMWM0YmU5MjcyZQ==", "commit": {"author": {"name": "Thomas Rodgers", "email": "trodgers@redhat.com", "date": "2019-04-20T23:20:03Z"}, "committer": {"name": "Thomas Rodgers", "email": "rodgertq@gcc.gnu.org", "date": "2019-04-20T23:20:03Z"}, "message": "Delegate PSTL configuration to pstl/pstl_config.h\n\n\t * include/bits/c++config: Remove explicit PSTL configuration\n\t macros and use definitions from <pstl/pstl_config.h>.\n\nFrom-SVN: r270472", "tree": {"sha": "37995d13d179d65a8049ca6acd74aad4310138cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37995d13d179d65a8049ca6acd74aad4310138cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e/comments", "author": {"login": "rodgert", "id": 120839, "node_id": "MDQ6VXNlcjEyMDgzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/120839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgert", "html_url": "https://github.com/rodgert", "followers_url": "https://api.github.com/users/rodgert/followers", "following_url": "https://api.github.com/users/rodgert/following{/other_user}", "gists_url": "https://api.github.com/users/rodgert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgert/subscriptions", "organizations_url": "https://api.github.com/users/rodgert/orgs", "repos_url": "https://api.github.com/users/rodgert/repos", "events_url": "https://api.github.com/users/rodgert/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgert/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9762ea561df659c21f8d61d52561c5977dc72521", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9762ea561df659c21f8d61d52561c5977dc72521", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9762ea561df659c21f8d61d52561c5977dc72521"}], "stats": {"total": 89, "additions": 8, "deletions": 81}, "files": [{"sha": "cd34f126fdb8d667cb8226e42e847ada14d3a6de", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e", "patch": "@@ -1,3 +1,10 @@\n+2019-04-20  Thomas Rodgers <trodgers@redhat.com>\n+\n+\tDelegate PSTL configuration to pstl/pstl_config.h\n+\n+\t* include/bits/c++config: Remove explicit PSTL configuration\n+\tmacros and use definitions from <pstl/pstl_config.h>.\n+\t\n 2019-04-20  Thomas Rodgers <trodgers@redhat.com>\n \n \tCleanup algorithm implementations"}, {"sha": "5016f4853de308e6c94d62a5ef715d91e1242f79", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 1, "deletions": 81, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=1dc5a184ac66b1b3284f45be1f8b8d1c4be9272e", "patch": "@@ -682,90 +682,10 @@ namespace std\n #  define __PSTL_USE_PAR_POLICIES 1\n # endif\n \n-# if __PSTL_USE_PAR_POLICIES\n-#  if !defined(__PSTL_PAR_BACKEND_TBB)\n-#   define __PSTL_PAR_BACKEND_TBB 1\n-#  endif\n-# else\n-#  undef __PSTL_PAR_BACKEND_TBB\n-# endif\n-\n # define __PSTL_ASSERT(_Condition) __glibcxx_assert(_Condition)\n # define __PSTL_ASSERT_MSG(_Condition, _Message) __glibcxx_assert(_Condition)\n \n-\n-# define __PSTL_PRAGMA(x) _Pragma (#x)\n-\n-# define __PSTL_STRING_AUX(x) #x\n-# define __PSTL_STRING(x) __PSTL_STRING_AUX(x)\n-# define __PSTL_STRING_CONCAT(x, y) x#y\n-\n-# define __PSTL_GCC_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + \\\n-\t\t\t     __GNUC_PATCHLEVEL__)\n-\n-// Enable SIMD for compilers that support OpenMP 4.0\n-# if (__PSTL_GCC_VERSION >= 40900)\n-#  define __PSTL_PRAGMA_SIMD __PSTL_PRAGMA(omp simd)\n-#define __PSTL_PRAGMA_DECLARE_SIMD __PSTL_PRAGMA(omp declare simd)\n-#  define __PSTL_PRAGMA_SIMD_REDUCTION(PRM) __PSTL_PRAGMA(omp simd reduction(PRM))\n-# else //no simd\n-#  define __PSTL_PRAGMA_SIMD\n-#  define __PSTL_PRAGMA_SIMD_REDUCTION(PRM)\n-# endif //Enable SIMD\n-\n-#define __PSTL_PRAGMA_SIMD_SCAN(PRM)\n-#define __PSTL_PRAGMA_SIMD_INCLUSIVE_SCAN(PRM)\n-#define __PSTL_PRAGMA_SIMD_EXCLUSIVE_SCAN(PRM)\n-\n-#define __PSTL_PRAGMA_FORCEINLINE\n-\n-// Should be defined to 1 for environments with a vendor implementation\n-// of C++17 execution policies\n-// #define __PSTL_CPP17_EXECUTION_POLICIES_PRESENT (_MSC_VER >= 1912)\n-// TODO define libstdc++ policies\n-\n-# define __PSTL_CPP14_2RANGE_MISMATCH_EQUAL_PRESENT \\\n-  (__cplusplus >= 201300L || __cpp_lib_robust_nonmodifying_seq_ops == 201304)\n-# define __PSTL_CPP14_MAKE_REVERSE_ITERATOR_PRESENT \\\n-  (__cplusplus >= 201402L || __cpp_lib_make_reverse_iterator == 201402)\n-# define __PSTL_CPP14_INTEGER_SEQUENCE_PRESENT (__cplusplus >= 201402L)\n-# define __PSTL_CPP14_VARIABLE_TEMPLATES_PRESENT (__cplusplus >= 201402L)\n-\n-# if __PSTL_MONOTONIC_PRESENT\n-#  define __PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC(PRM) \\\n-  __PSTL_PRAGMA(omp ordered simd monotonic(PRM))\n-#  define __PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS(PRM1, PRM2) \\\n-  __PSTL_PRAGMA(omp ordered simd monotonic(PRM1, PRM2))\n-# else\n-#  define __PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC(PRM)\n-#  define __PSTL_PRAGMA_SIMD_ORDERED_MONOTONIC_2ARGS(PRM1, PRM2)\n-# endif\n-\n-// Declaration of reduction functor, where\n-// NAME - the name of the functor\n-// OP - type of the callable object with the reduction operation\n-// omp_in - refers to the local partial result\n-// omp_out - refers to the final value of the combiner operator\n-// omp_priv - refers to the private copy of the initial value\n-// omp_orig - refers to the original variable to be reduced\n-#define __PSTL_PRAGMA_DECLARE_REDUCTION(NAME, OP)                                                                      \\\n-    __PSTL_PRAGMA(omp declare reduction(NAME : OP : omp_out(omp_in)) initializer(omp_priv = omp_orig))\n-\n-# define __PSTL_PRAGMA_VECTOR_UNALIGNED\n-# define __PSTL_USE_NONTEMPORAL_STORES_IF_ALLOWED\n-# define __PSTL_PRAGMA_LOCATION\n-\n-# define __PSTL_PRAGMA_MESSAGE_IMPL(x) \\\n-  __PSTL_PRAGMA(message(__PSTL_STRING_CONCAT(__PSTL_PRAGMA_LOCATION, x)))\n-# define __PSTL_PRAGMA_MESSAGE_POLICIES(x) __PSTL_PRAGMA_MESSAGE_IMPL(x)\n-\n-//Too many warnings in output, switched off\n-# define __PSTL_PRAGMA_MESSAGE(x)\n-\n-# if defined(__GLIBCXX__)\n-#  define __PSTL_CPP11_STD_ROTATE_BROKEN \\\n-  (__PSTL_GCC_VERSION < 50100) //GCC 5.1 release\n-# endif\n+#include <pstl/pstl_config.h>\n \n #endif\n // End of prewritten config; the settings discovered at configure time follow."}]}