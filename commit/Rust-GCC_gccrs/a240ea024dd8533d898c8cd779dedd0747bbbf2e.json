{"sha": "a240ea024dd8533d898c8cd779dedd0747bbbf2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI0MGVhMDI0ZGQ4NTMzZDg5OGM4Y2Q3NzlkZWRkMDc0N2JiYmYyZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-12-17T00:15:08Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-12-17T00:15:08Z"}, "message": "recog: Add an RAII class for undoing insn changes\n\nWhen using validate_change to make a group of changes, you have\nto remember to cancel them if something goes wrong.  This patch\nadds an RAII class to make that easier.  See the comments in the\npatch for details and examples.\n\ngcc/\n\t* recog.h (insn_change_watermark): New class.", "tree": {"sha": "629eeeeafd6d1c4ca7fbefe69769fe6e29b5d5b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/629eeeeafd6d1c4ca7fbefe69769fe6e29b5d5b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a240ea024dd8533d898c8cd779dedd0747bbbf2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a240ea024dd8533d898c8cd779dedd0747bbbf2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a240ea024dd8533d898c8cd779dedd0747bbbf2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a240ea024dd8533d898c8cd779dedd0747bbbf2e/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d74260a1f6704da869b87d163f4be31fd0f2b41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d74260a1f6704da869b87d163f4be31fd0f2b41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d74260a1f6704da869b87d163f4be31fd0f2b41"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "b8de43b95bb4a1eb0bdc3da45cec8e10491caa2e", "filename": "gcc/recog.h", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a240ea024dd8533d898c8cd779dedd0747bbbf2e/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a240ea024dd8533d898c8cd779dedd0747bbbf2e/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=a240ea024dd8533d898c8cd779dedd0747bbbf2e", "patch": "@@ -503,6 +503,57 @@ alternative_mask get_preferred_alternatives (rtx_insn *, basic_block);\n bool check_bool_attrs (rtx_insn *);\n \n void recog_init ();\n+\n+/* This RAII class can help to undo tentative insn changes on failure.\n+   When an object of the class goes out of scope, it undoes all group\n+   changes that have been made via the validate_change machinery and\n+   not yet confirmed via confirm_change_group.\n+\n+   For example:\n+\n+      insn_change_watermark watermark;\n+      validate_change (..., true); // A\n+      ...\n+      if (test)\n+\t// Undoes change A.\n+\treturn false;\n+      ...\n+      validate_change (..., true); // B\n+      ...\n+      if (test)\n+\t// Undoes changes A and B.\n+\treturn false;\n+      ...\n+      confirm_change_group ();\n+\n+   Code that wants to avoid this behavior can use keep ():\n+\n+      insn_change_watermark watermark;\n+      validate_change (..., true); // A\n+      ...\n+      if (test)\n+\t// Undoes change A.\n+\treturn false;\n+      ...\n+      watermark.keep ();\n+      validate_change (..., true); // B\n+      ...\n+      if (test)\n+\t// Undoes change B, but not A.\n+\treturn false;\n+      ...\n+      confirm_change_group ();  */\n+class insn_change_watermark\n+{\n+public:\n+  insn_change_watermark () : m_old_num_changes (num_validated_changes ()) {}\n+  ~insn_change_watermark () { cancel_changes (m_old_num_changes); }\n+  void keep () { m_old_num_changes = num_validated_changes (); }\n+\n+private:\n+  int m_old_num_changes;\n+};\n+\n #endif\n \n #endif /* GCC_RECOG_H */"}]}