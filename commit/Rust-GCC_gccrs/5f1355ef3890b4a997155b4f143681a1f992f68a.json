{"sha": "5f1355ef3890b4a997155b4f143681a1f992f68a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYxMzU1ZWYzODkwYjRhOTk3MTU1YjRmMTQzNjgxYTFmOTkyZjY4YQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-01-10T21:28:24Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-01-10T21:28:24Z"}, "message": "ifcvt.c (noce_try_addcc): Do not call emit_conditional_add with weird operands.\n\nFri Jan 10 22:05:35 CET 2003  Jan Hubicka  <jh@suse.cz>\n\n\t* ifcvt.c (noce_try_addcc): Do not call emit_conditional_add\n\twith weird operands.\n\nFrom-SVN: r61169", "tree": {"sha": "65a4f02cdf64046c0d61de2ad4b69a61ac81be83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65a4f02cdf64046c0d61de2ad4b69a61ac81be83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f1355ef3890b4a997155b4f143681a1f992f68a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1355ef3890b4a997155b4f143681a1f992f68a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f1355ef3890b4a997155b4f143681a1f992f68a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1355ef3890b4a997155b4f143681a1f992f68a/comments", "author": null, "committer": null, "parents": [{"sha": "6787cc15f20c6b0b464de402982702ac13de23fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6787cc15f20c6b0b464de402982702ac13de23fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6787cc15f20c6b0b464de402982702ac13de23fc"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "e1c5d64a6bb70065e2f8387859489677945dbc3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1355ef3890b4a997155b4f143681a1f992f68a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1355ef3890b4a997155b4f143681a1f992f68a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f1355ef3890b4a997155b4f143681a1f992f68a", "patch": "@@ -1,3 +1,8 @@\n+Fri Jan 10 22:05:35 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ifcvt.c (noce_try_addcc): Do not call emit_conditional_add\n+\twith weird operands.\n+\n 2003-01-10  Dale Johannesen <dalej@apple.com>\n  \n         * calls.c (load_register_parameters):  Add is_sibcall, sibcall_failure"}, {"sha": "21a7e648319f1f558c2885d16cc4491e7fd39bac", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1355ef3890b4a997155b4f143681a1f992f68a/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1355ef3890b4a997155b4f143681a1f992f68a/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=5f1355ef3890b4a997155b4f143681a1f992f68a", "patch": "@@ -882,26 +882,30 @@ noce_try_addcc (if_info)\n       enum rtx_code code = reversed_comparison_code (cond, if_info->jump);\n \n       /* First try to use addcc pattern.  */\n-      start_sequence ();\n-      target = emit_conditional_add (if_info->x, code,\n-\t\t\t\t     XEXP (cond, 0), XEXP (cond, 1),\n-\t\t\t\t     VOIDmode,\n-\t\t\t\t     if_info->b, XEXP (if_info->a, 1),\n-\t\t\t\t     GET_MODE (if_info->x),\n-\t\t\t\t     (code == LTU || code == GEU\n-\t\t\t\t      || code == LEU || code == GTU));\n-      if (target)\n+      if (general_operand (XEXP (cond, 0), VOIDmode)\n+\t  && general_operand (XEXP (cond, 1), VOIDmode))\n \t{\n-\t  if (target != if_info->x)\n-\t    noce_emit_move_insn (if_info->x, target);\n+\t  start_sequence ();\n+\t  target = emit_conditional_add (if_info->x, code,\n+\t\t\t\t\t XEXP (cond, 0), XEXP (cond, 1),\n+\t\t\t\t\t VOIDmode,\n+\t\t\t\t\t if_info->b, XEXP (if_info->a, 1),\n+\t\t\t\t\t GET_MODE (if_info->x),\n+\t\t\t\t\t (code == LTU || code == GEU\n+\t\t\t\t\t  || code == LEU || code == GTU));\n+\t  if (target)\n+\t    {\n+\t      if (target != if_info->x)\n+\t\tnoce_emit_move_insn (if_info->x, target);\n \n-\t  seq = get_insns ();\n+\t      seq = get_insns ();\n+\t      end_sequence ();\n+\t      emit_insn_before_scope (seq, if_info->jump,\n+\t\t\t\t      INSN_SCOPE (if_info->insn_a));\n+\t      return TRUE;\n+\t    }\n \t  end_sequence ();\n-\t  emit_insn_before_scope (seq, if_info->jump,\n-\t\t\t\t  INSN_SCOPE (if_info->insn_a));\n-\t  return TRUE;\n \t}\n-      end_sequence ();\n \t\n       /* If that fails, construct conditional increment or decrement using\n \t setcc.  */"}]}