{"sha": "698ea04f75337d0178da2d1aae67bc15a75de3ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk4ZWEwNGY3NTMzN2QwMTc4ZGEyZDFhYWU2N2JjMTVhNzVkZTNhZA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-22T10:00:55Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-22T10:00:55Z"}, "message": "sse.md (define_mode_iterator VI4F_BRCST32x2): New.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_mode_iterator VI4F_BRCST32x2): New.\n\t(define_mode_attr 64x2_mode): Ditto.\n\t(define_mode_attr 32x2mode): Ditto.\n\t(define_insn \"<mask_codefor>avx512dq_broadcast<mode><mask_name>\"\n\twith VI4F_BRCST32x2): Ditto.\n\t(define_insn \"<mask_codefor>avx512vl_broadcast<mode><mask_name>_1\"\n\twith V16FI mode iterator): Ditto.\n\t(define_insn \"<mask_codefor>avx512dq_broadcast<mode><mask_name>_1\"\n\twith V16FI): Ditto.\n\t(define_insn \"<mask_codefor>avx512dq_broadcast<mode><mask_name>_1\"\n\twith VI8F_BRCST64x2): Ditto.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r214309", "tree": {"sha": "0c3481ad5e5f99497a27b6f5a9839eb5a3f27a99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c3481ad5e5f99497a27b6f5a9839eb5a3f27a99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/698ea04f75337d0178da2d1aae67bc15a75de3ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/698ea04f75337d0178da2d1aae67bc15a75de3ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/698ea04f75337d0178da2d1aae67bc15a75de3ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/698ea04f75337d0178da2d1aae67bc15a75de3ad/comments", "author": null, "committer": null, "parents": [{"sha": "98725d4441cc6b7828ed18f331b7f077b4e90f6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98725d4441cc6b7828ed18f331b7f077b4e90f6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98725d4441cc6b7828ed18f331b7f077b4e90f6b"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "4023a3105cd612ffca8bd2f8612ddd2c9fe8dc2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/698ea04f75337d0178da2d1aae67bc15a75de3ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/698ea04f75337d0178da2d1aae67bc15a75de3ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=698ea04f75337d0178da2d1aae67bc15a75de3ad", "patch": "@@ -1,3 +1,25 @@\n+2014-08-22  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_mode_iterator VI4F_BRCST32x2): New.\n+\t(define_mode_attr 64x2_mode): Ditto.\n+\t(define_mode_attr 32x2mode): Ditto.\n+\t(define_insn \"<mask_codefor>avx512dq_broadcast<mode><mask_name>\"\n+\twith VI4F_BRCST32x2): Ditto.\n+\t(define_insn \"<mask_codefor>avx512vl_broadcast<mode><mask_name>_1\"\n+\twith V16FI mode iterator): Ditto.\n+\t(define_insn \"<mask_codefor>avx512dq_broadcast<mode><mask_name>_1\"\n+\twith V16FI): Ditto.\n+\t(define_insn \"<mask_codefor>avx512dq_broadcast<mode><mask_name>_1\"\n+\twith VI8F_BRCST64x2): Ditto.\n+\n 2014-08-22  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "04ed6bd7df273b1e463a8d870ce2a45d0fc8be4d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/698ea04f75337d0178da2d1aae67bc15a75de3ad/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/698ea04f75337d0178da2d1aae67bc15a75de3ad/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=698ea04f75337d0178da2d1aae67bc15a75de3ad", "patch": "@@ -14514,6 +14514,74 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+;; For broadcast[i|f]32x2.  Yes there is no v4sf version, only v4si.\n+(define_mode_iterator VI4F_BRCST32x2\n+  [V16SI (V8SI \"TARGET_AVX512VL\") (V4SI \"TARGET_AVX512VL\")\n+   V16SF (V8SF \"TARGET_AVX512VL\")])\n+\n+(define_mode_attr 64x2mode\n+  [(V8DF \"V2DF\") (V8DI \"V2DI\") (V4DI \"V2DI\") (V4DF \"V2DF\")])\n+\n+(define_mode_attr 32x2mode\n+  [(V16SF \"V2SF\") (V16SI \"V2SI\") (V8SI \"V2SI\")\n+  (V8SF \"V2SF\") (V4SI \"V2SI\")])\n+\n+(define_insn \"<mask_codefor>avx512dq_broadcast<mode><mask_name>\"\n+  [(set (match_operand:VI4F_BRCST32x2 0 \"register_operand\" \"=v\")\n+\t(vec_duplicate:VI4F_BRCST32x2\n+\t  (vec_select:<32x2mode>\n+\t    (match_operand:<ssexmmmode> 1 \"nonimmediate_operand\" \"vm\")\n+\t    (parallel [(const_int 0) (const_int 1)]))))]\n+  \"TARGET_AVX512DQ\"\n+  \"vbroadcast<shuffletype>32x2\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<mask_codefor>avx512vl_broadcast<mode><mask_name>_1\"\n+  [(set (match_operand:VI4F_256 0 \"register_operand\" \"=v,v\")\n+        (vec_duplicate:VI4F_256\n+         (match_operand:<ssexmmmode> 1 \"nonimmediate_operand\" \"v,m\")))]\n+  \"TARGET_AVX512VL\"\n+  \"@\n+   vshuf<shuffletype>32x4\\t{$0x0, %t1, %t1, %0<mask_operand2>|%0<mask_operand2>, %t1, %t1, 0x0}\n+   vbroadcast<shuffletype>32x4\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<mask_codefor>avx512dq_broadcast<mode><mask_name>_1\"\n+  [(set (match_operand:V16FI 0 \"register_operand\" \"=v,v\")\n+       (vec_duplicate:V16FI\n+         (match_operand:<ssehalfvecmode> 1 \"nonimmediate_operand\" \"v,m\")))]\n+  \"TARGET_AVX512DQ\"\n+  \"@\n+   vshuf<shuffletype>32x4\\t{$0x44, %g1, %g1, %0<mask_operand2>|%0<mask_operand2>, %g1, %g1, 0x44}\n+   vbroadcast<shuffletype>32x8\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+;; For broadcast[i|f]64x2\n+(define_mode_iterator VI8F_BRCST64x2\n+  [V8DI V8DF (V4DI \"TARGET_AVX512VL\") (V4DF \"TARGET_AVX512VL\")])\n+\n+(define_insn \"<mask_codefor>avx512dq_broadcast<mode><mask_name>_1\"\n+  [(set (match_operand:VI8F_BRCST64x2 0 \"register_operand\" \"=v,v\")\n+       (vec_duplicate:VI8F_BRCST64x2\n+         (match_operand:<64x2mode> 1 \"nonimmediate_operand\" \"v,m\")))]\n+  \"TARGET_AVX512DQ\"\n+  \"@\n+   vshuf<shuffletype>64x2\\t{$0x0, %g1, %g1, %0<mask_operand2>|%0<mask_operand2>, %g1, %g1, 0x0}\n+   vbroadcast<shuffletype>64x2\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"avx512cd_maskb_vec_dup<mode>\"\n   [(set (match_operand:VI8_AVX512VL 0 \"register_operand\" \"=v\")\n \t(vec_duplicate:VI8_AVX512VL"}]}