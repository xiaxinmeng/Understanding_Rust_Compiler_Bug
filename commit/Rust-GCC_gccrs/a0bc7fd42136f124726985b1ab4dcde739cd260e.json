{"sha": "a0bc7fd42136f124726985b1ab4dcde739cd260e", "node_id": "C_kwDOANBUbNoAKGEwYmM3ZmQ0MjEzNmYxMjQ3MjY5ODViMWFiNGRjZGU3MzljZDI2MGU", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-05-31T12:45:02Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2022-05-31T16:30:36Z"}, "message": "d: Fix D lexer sometimes fails to compile code read from stdin\n\nAs of gdc-12, the lexer expects there 4 bytes of zero padding at the end\nof the source buffer to mark the end of input.  Sometimes when reading\nfrom stdin, the data at the end of input is garbage rather than zeroes.\nFix that by explicitly calling memset past the end of the buffer.\n\n\tPR d/105544\n\ngcc/d/ChangeLog:\n\n\t* d-lang.cc (d_parse_file): Zero padding past the end of the stdin\n\tbuffer so the D lexer has a sentinel to stop parsing at.", "tree": {"sha": "6e7b814baa39505bb11052ba3d9820d9aad058c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e7b814baa39505bb11052ba3d9820d9aad058c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0bc7fd42136f124726985b1ab4dcde739cd260e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0bc7fd42136f124726985b1ab4dcde739cd260e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0bc7fd42136f124726985b1ab4dcde739cd260e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0bc7fd42136f124726985b1ab4dcde739cd260e/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67d399d509c4c802d6dfb197886a5cc62ea62c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67d399d509c4c802d6dfb197886a5cc62ea62c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67d399d509c4c802d6dfb197886a5cc62ea62c5c"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "b7c8685f779dd2753403c77ef5ce170de0dedce9", "filename": "gcc/d/d-lang.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0bc7fd42136f124726985b1ab4dcde739cd260e/gcc%2Fd%2Fd-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0bc7fd42136f124726985b1ab4dcde739cd260e/gcc%2Fd%2Fd-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-lang.cc?ref=a0bc7fd42136f124726985b1ab4dcde739cd260e", "patch": "@@ -1077,6 +1077,10 @@ d_parse_file (void)\n \t\t\t\t      global.params.dihdr.doOutput);\n \t  modules.push (m);\n \n+\t  /* Zero the padding past the end of the buffer so the D lexer has a\n+\t     sentinel.  The lexer only reads up to 4 bytes at a time.  */\n+\t  memset (buffer + len, '\\0', 16);\n+\n \t  /* Overwrite the source file for the module, the one created by\n \t     Module::create would have a forced a `.d' suffix.  */\n \t  m->src.length = len;"}]}