{"sha": "7c7202c2316c080056f3bf2dc1e3c713cceb1e85", "node_id": "C_kwDOANBUbNoAKDdjNzIwMmMyMzE2YzA4MDA1NmYzYmYyZGMxZTNjNzEzY2NlYjFlODU", "commit": {"author": {"name": "Sebastien Lacoste", "email": "dev@graphman.fr", "date": "2022-06-24T08:43:27Z"}, "committer": {"name": "Sebastien Lacoste", "email": "dev@graphman.fr", "date": "2022-06-24T16:49:59Z"}, "message": "Remove unused commented code\n\nSigned-off-by: Sebastien Lacoste <dev@graphman.fr>", "tree": {"sha": "a1303c0b3b28bdd8ac0f512b636e7fbf804868c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1303c0b3b28bdd8ac0f512b636e7fbf804868c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c7202c2316c080056f3bf2dc1e3c713cceb1e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7202c2316c080056f3bf2dc1e3c713cceb1e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c7202c2316c080056f3bf2dc1e3c713cceb1e85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c7202c2316c080056f3bf2dc1e3c713cceb1e85/comments", "author": {"login": "graphman65", "id": 1569161, "node_id": "MDQ6VXNlcjE1NjkxNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1569161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graphman65", "html_url": "https://github.com/graphman65", "followers_url": "https://api.github.com/users/graphman65/followers", "following_url": "https://api.github.com/users/graphman65/following{/other_user}", "gists_url": "https://api.github.com/users/graphman65/gists{/gist_id}", "starred_url": "https://api.github.com/users/graphman65/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graphman65/subscriptions", "organizations_url": "https://api.github.com/users/graphman65/orgs", "repos_url": "https://api.github.com/users/graphman65/repos", "events_url": "https://api.github.com/users/graphman65/events{/privacy}", "received_events_url": "https://api.github.com/users/graphman65/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graphman65", "id": 1569161, "node_id": "MDQ6VXNlcjE1NjkxNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1569161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graphman65", "html_url": "https://github.com/graphman65", "followers_url": "https://api.github.com/users/graphman65/followers", "following_url": "https://api.github.com/users/graphman65/following{/other_user}", "gists_url": "https://api.github.com/users/graphman65/gists{/gist_id}", "starred_url": "https://api.github.com/users/graphman65/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graphman65/subscriptions", "organizations_url": "https://api.github.com/users/graphman65/orgs", "repos_url": "https://api.github.com/users/graphman65/repos", "events_url": "https://api.github.com/users/graphman65/events{/privacy}", "received_events_url": "https://api.github.com/users/graphman65/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0f11672d760513256997f325da678016d13f677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f11672d760513256997f325da678016d13f677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f11672d760513256997f325da678016d13f677"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "d062f1a257fdc373afefb4c5ab2966a0a986d554", "filename": "gcc/rust/expand/rust-macro-builtins.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c7202c2316c080056f3bf2dc1e3c713cceb1e85/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c7202c2316c080056f3bf2dc1e3c713cceb1e85/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc?ref=7c7202c2316c080056f3bf2dc1e3c713cceb1e85", "patch": "@@ -164,13 +164,12 @@ MacroBuiltin::file (Location invoc_locus, AST::MacroInvocData &invoc)\n \n   return AST::ASTFragment ({file_str});\n }\n+\n AST::ASTFragment\n MacroBuiltin::column (Location invoc_locus, AST::MacroInvocData &invoc)\n {\n   auto current_column\n     = Session::get_instance ().linemap->location_to_column (invoc_locus);\n-  // auto column_no\n-  //   = AST::SingleASTNode (make_string (invoc_locus, current_column));\n \n   auto column_no = AST::SingleASTNode (std::unique_ptr<AST::Expr> (\n     new AST::LiteralExpr (std::to_string (current_column), AST::Literal::INT,"}]}