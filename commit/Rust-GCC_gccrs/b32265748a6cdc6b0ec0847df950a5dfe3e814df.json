{"sha": "b32265748a6cdc6b0ec0847df950a5dfe3e814df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMyMjY1NzQ4YTZjZGM2YjBlYzA4NDdkZjk1MGE1ZGZlM2U4MTRkZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-10-02T17:25:18Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-10-02T17:25:18Z"}, "message": "no-executables.m4 (GCC_TRY_COMPILE_OR_LINK): New function.\n\nconfig/\n\t* no-executables.m4 (GCC_TRY_COMPILE_OR_LINK): New function.\n\nlibstdc++/\n\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Temporarily add\n\t-fno-exceptions to CXXFLAGS.  Use GCC_TRY_COMPILE_OR_LINK.\n\tMake the tests assign results to volatile variables.\n\t* configure: Regenerate.\n\nFrom-SVN: r128959", "tree": {"sha": "e0496d2db1016505bf73dc8cd73cf2d885bd0b32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0496d2db1016505bf73dc8cd73cf2d885bd0b32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b32265748a6cdc6b0ec0847df950a5dfe3e814df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b32265748a6cdc6b0ec0847df950a5dfe3e814df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b32265748a6cdc6b0ec0847df950a5dfe3e814df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b32265748a6cdc6b0ec0847df950a5dfe3e814df/comments", "author": null, "committer": null, "parents": [{"sha": "506f93badbb17e744622fc38b5045226ac74dcfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506f93badbb17e744622fc38b5045226ac74dcfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506f93badbb17e744622fc38b5045226ac74dcfc"}], "stats": {"total": 665, "additions": 514, "deletions": 151}, "files": [{"sha": "67763a20ea66483a9362a1feca1f4ac468c1d10b", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32265748a6cdc6b0ec0847df950a5dfe3e814df/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32265748a6cdc6b0ec0847df950a5dfe3e814df/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=b32265748a6cdc6b0ec0847df950a5dfe3e814df", "patch": "@@ -1,3 +1,7 @@\n+2007-10-02  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* no-executables.m4 (GCC_TRY_COMPILE_OR_LINK): New function.\n+\n 2007-09-21  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* mt-sde (CFLAGS_FOR_TARGET): Replace -fno-optimize-sibling-calls"}, {"sha": "c4d0b70c3755eb8da081b47ec14c10360f1a3649", "filename": "config/no-executables.m4", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32265748a6cdc6b0ec0847df950a5dfe3e814df/config%2Fno-executables.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32265748a6cdc6b0ec0847df950a5dfe3e814df/config%2Fno-executables.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fno-executables.m4?ref=b32265748a6cdc6b0ec0847df950a5dfe3e814df", "patch": "@@ -59,3 +59,11 @@ fi)\n \n m4_divert_pop()dnl\n ])# GCC_NO_EXECUTABLES\n+\n+# Use the strongest available test out of AC_TRY_COMPILE and AC_TRY_LINK.\n+AC_DEFUN([GCC_TRY_COMPILE_OR_LINK],\n+[if test x$gcc_no_link = xyes; then\n+  AC_TRY_COMPILE([$1], [$2], [$3], [$4])\n+else\n+  AC_TRY_LINK([$1], [$2], [$3], [$4])\n+fi])"}, {"sha": "a87645a9979f6bae865c3868172450a0bf7bea86", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32265748a6cdc6b0ec0847df950a5dfe3e814df/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32265748a6cdc6b0ec0847df950a5dfe3e814df/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b32265748a6cdc6b0ec0847df950a5dfe3e814df", "patch": "@@ -1,3 +1,10 @@\n+2007-10-02  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Temporarily add\n+\t-fno-exceptions to CXXFLAGS.  Use GCC_TRY_COMPILE_OR_LINK.\n+\tMake the tests assign results to volatile variables.\n+\t* configure: Regenerate.\n+\n 2007-10-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/25_algorithms/binary_search/2.cc: Split into..."}, {"sha": "b0263ab99e5cbc73479df9bdf92e97e706fac225", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 103, "deletions": 79, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32265748a6cdc6b0ec0847df950a5dfe3e814df/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32265748a6cdc6b0ec0847df950a5dfe3e814df/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=b32265748a6cdc6b0ec0847df950a5dfe3e814df", "patch": "@@ -763,24 +763,32 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [\n   AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n \n+  # Use -fno-exceptions so that the C driver can link these tests without\n+  # hitting undefined references to personality routines.\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -fno-exceptions\"\n+\n   # Check for the existence of <math.h> functions used if C99 is enabled.\n   AC_MSG_CHECKING([for ISO C99 support in <math.h>])\n   AC_CACHE_VAL(ac_c99_math, [\n-  AC_TRY_COMPILE([#include <math.h>],\n-\t         [fpclassify(0.0);\n-\t          isfinite(0.0); \n-\t\t  isinf(0.0);\n-\t          isnan(0.0);\n-\t\t  isnormal(0.0);\n-\t  \t  signbit(0.0);\n-\t \t  isgreater(0.0,0.0);\n-\t\t  isgreaterequal(0.0,0.0);\n-\t\t  isless(0.0,0.0);\n-\t\t  islessequal(0.0,0.0);\n-\t\t  islessgreater(0.0,0.0);\n-\t\t  islessgreater(0.0,0.0);\n-\t\t  isunordered(0.0,0.0);\n-\t\t ],[ac_c99_math=yes], [ac_c99_math=no])\n+  GCC_TRY_COMPILE_OR_LINK(\n+     [#include <math.h>\n+      volatile double d1, d2;\n+      volatile int i;],\n+     [i = fpclassify(d1);\n+      i = isfinite(d1);\n+      i = isinf(d1);\n+      i = isnan(d1);\n+      i = isnormal(d1);\n+      i = signbit(d1);\n+      i = isgreater(d1, d2);\n+      i = isgreaterequal(d1, d2);\n+      i = isless(d1, d2);\n+      i = islessequal(d1, d2);\n+      i = islessgreater(d1, d2);\n+      i = islessgreater(d1, d2);\n+      i = isunordered(d1, d2);\n+     ],[ac_c99_math=yes], [ac_c99_math=no])\n   ])\n   AC_MSG_RESULT($ac_c99_math)\n   if test x\"$ac_c99_math\" = x\"yes\"; then\n@@ -798,47 +806,54 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [\n   ac_c99_complex=no;\n   if test x\"$ac_has_complex_h\" = x\"yes\"; then\n     AC_MSG_CHECKING([for ISO C99 support in <complex.h>])\n-    AC_TRY_COMPILE([#include <complex.h>],\n-\t           [typedef __complex__ float float_type; float_type tmpf;\n-\t            cabsf(tmpf);\n-\t\t    cargf(tmpf);\n-\t\t    ccosf(tmpf);\n-  \t\t    ccoshf(tmpf);\n-\t\t    cexpf(tmpf);\n-\t            clogf(tmpf);\n-\t\t    csinf(tmpf);\n-\t\t    csinhf(tmpf);\n-\t\t    csqrtf(tmpf);\n-\t\t    ctanf(tmpf);\n-\t\t    ctanhf(tmpf);\n-\t\t    cpowf(tmpf, tmpf);\n-\t\t    typedef __complex__ double double_type; double_type tmpd;\n-\t            cabs(tmpd);\n-\t\t    carg(tmpd);\n-\t\t    ccos(tmpd);\n-  \t\t    ccosh(tmpd);\n-\t\t    cexp(tmpd);\n-\t            clog(tmpd);\n-\t\t    csin(tmpd);\n-\t\t    csinh(tmpd);\n-\t\t    csqrt(tmpd);\n-\t\t    ctan(tmpd);\n-\t\t    ctanh(tmpd);\n-\t\t    cpow(tmpd, tmpd);\n-\t\t    typedef __complex__ long double ld_type; ld_type tmpld;\n-\t            cabsl(tmpld);\n-\t\t    cargl(tmpld);\n-\t\t    ccosl(tmpld);\n-  \t\t    ccoshl(tmpld);\n-\t\t    cexpl(tmpld);\n-\t            clogl(tmpld);\n-\t\t    csinl(tmpld);\n-\t\t    csinhl(tmpld);\n-\t\t    csqrtl(tmpld);\n-\t\t    ctanl(tmpld);\n-\t\t    ctanhl(tmpld);\n-\t\t    cpowl(tmpld, tmpld);\n-\t\t   ],[ac_c99_complex=yes], [ac_c99_complex=no])\n+    GCC_TRY_COMPILE_OR_LINK(\n+       [#include <complex.h>\n+\ttypedef __complex__ float float_type;\n+\ttypedef __complex__ double double_type;\n+\ttypedef __complex__ long double ld_type;\n+\tvolatile float_type tmpf;\n+\tvolatile double_type tmpd;\n+\tvolatile ld_type tmpld;\n+\tvolatile float f;\n+\tvolatile double d;\n+\tvolatile long double ld;],\n+       [f = cabsf(tmpf);\n+\tf = cargf(tmpf);\n+\ttmpf = ccosf(tmpf);\n+\ttmpf = ccoshf(tmpf);\n+\ttmpf = cexpf(tmpf);\n+\ttmpf = clogf(tmpf);\n+\ttmpf = csinf(tmpf);\n+\ttmpf = csinhf(tmpf);\n+\ttmpf = csqrtf(tmpf);\n+\ttmpf = ctanf(tmpf);\n+\ttmpf = ctanhf(tmpf);\n+\ttmpf = cpowf(tmpf, tmpf);\n+\td = cabs(tmpd);\n+\td = carg(tmpd);\n+\ttmpd = ccos(tmpd);\n+\ttmpd = ccosh(tmpd);\n+\ttmpd = cexp(tmpd);\n+\ttmpd = clog(tmpd);\n+\ttmpd = csin(tmpd);\n+\ttmpd = csinh(tmpd);\n+\ttmpd = csqrt(tmpd);\n+\ttmpd = ctan(tmpd);\n+\ttmpd = ctanh(tmpd);\n+\ttmpd = cpow(tmpd, tmpd);\n+\tld = cabsl(tmpld);\n+\tld = cargl(tmpld);\n+\ttmpld = ccosl(tmpld);\n+\ttmpld = ccoshl(tmpld);\n+\ttmpld = cexpl(tmpld);\n+\ttmpld = clogl(tmpld);\n+\ttmpld = csinl(tmpld);\n+\ttmpld = csinhl(tmpld);\n+\ttmpld = csqrtl(tmpld);\n+\ttmpld = ctanl(tmpld);\n+\ttmpld = ctanhl(tmpld);\n+\ttmpld = cpowl(tmpld, tmpld);\n+       ],[ac_c99_complex=yes], [ac_c99_complex=no])\n   fi\n   AC_MSG_RESULT($ac_c99_complex)\n   if test x\"$ac_c99_complex\" = x\"yes\"; then\n@@ -851,35 +866,43 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [\n   # Check for the existence in <stdio.h> of vscanf, et. al.\n   AC_MSG_CHECKING([for ISO C99 support in <stdio.h>])\n   AC_CACHE_VAL(ac_c99_stdio, [\n-  AC_TRY_COMPILE([#include <stdio.h>\n-\t\t  #include <stdarg.h>\n-                  void foo(char* fmt, ...)\n-                  {\n-\t            va_list args; va_start(args, fmt);\n-                    vfscanf(stderr, \"%i\", args); \n-\t\t    vscanf(\"%i\", args);\n-                    vsnprintf(fmt, 0, \"%i\", args);\n-                    vsscanf(fmt, \"%i\", args);\n-\t\t  }],\n-                 [snprintf(\"12\", 0, \"%i\");],\n-\t\t [ac_c99_stdio=yes], [ac_c99_stdio=no])\n+  GCC_TRY_COMPILE_OR_LINK(\n+     [#include <stdio.h>\n+      #include <stdarg.h>\n+      void foo(char* fmt, ...)\n+      {\n+\tva_list args; va_start(args, fmt);\n+\tvfscanf(stderr, \"%i\", args); \n+\tvscanf(\"%i\", args);\n+\tvsnprintf(fmt, 0, \"%i\", args);\n+\tvsscanf(fmt, \"%i\", args);\n+      }],\n+     [snprintf(\"12\", 0, \"%i\");],\n+     [ac_c99_stdio=yes], [ac_c99_stdio=no])\n   ])\n   AC_MSG_RESULT($ac_c99_stdio)\n \n   # Check for the existence in <stdlib.h> of lldiv_t, et. al.\n   AC_MSG_CHECKING([for ISO C99 support in <stdlib.h>])\n   AC_CACHE_VAL(ac_c99_stdlib, [\n-  AC_TRY_COMPILE([#include <stdlib.h>],\n-                 [char* tmp;\n-\t    \t  strtof(\"gnu\", &tmp);\n-\t\t  strtold(\"gnu\", &tmp);\n-\t          strtoll(\"gnu\", &tmp, 10);\n-\t          strtoull(\"gnu\", &tmp, 10);\n-\t          llabs(10);\n-\t\t  lldiv(10,1);\n-\t\t  atoll(\"10\");\n-\t\t  _Exit(0);\n-\t\t  lldiv_t mydivt;],[ac_c99_stdlib=yes], [ac_c99_stdlib=no])\n+  GCC_TRY_COMPILE_OR_LINK(\n+     [#include <stdlib.h>\n+      volatile float f;\n+      volatile long double ld;\n+      volatile unsigned long long ll;\n+      lldiv_t mydivt;],\n+     [char* tmp;\n+      f = strtof(\"gnu\", &tmp);\n+      ld = strtold(\"gnu\", &tmp);\n+      ll = strtoll(\"gnu\", &tmp, 10);\n+      ll = strtoull(\"gnu\", &tmp, 10);\n+      ll = llabs(10);\n+      mydivt = lldiv(10,1);\n+      ll = mydivt.quot;\n+      ll = mydivt.rem;\n+      ll = atoll(\"10\");\n+      _Exit(0);\n+      ],[ac_c99_stdlib=yes], [ac_c99_stdlib=no])\n   ])\n   AC_MSG_RESULT($ac_c99_stdlib)\n \n@@ -940,6 +963,7 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [\n     <complex.h>, <stdio.h>, and <stdlib.h> can be used or exposed.])\n   fi\n \n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n   AC_LANG_RESTORE\n   fi\t\n "}, {"sha": "772e6de3c7e813e08ad23ca5de67b609292d71f6", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 392, "deletions": 72, "changes": 464, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b32265748a6cdc6b0ec0847df950a5dfe3e814df/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b32265748a6cdc6b0ec0847df950a5dfe3e814df/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=b32265748a6cdc6b0ec0847df950a5dfe3e814df", "patch": "@@ -15436,36 +15436,44 @@ ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ex\n ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n \n+  # Use -fno-exceptions so that the C driver can link these tests without\n+  # hitting undefined references to personality routines.\n+  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$CXXFLAGS -fno-exceptions\"\n+\n   # Check for the existence of <math.h> functions used if C99 is enabled.\n   echo \"$as_me:$LINENO: checking for ISO C99 support in <math.h>\" >&5\n echo $ECHO_N \"checking for ISO C99 support in <math.h>... $ECHO_C\" >&6\n   if test \"${ac_c99_math+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n \n+  if test x$gcc_no_link = xyes; then\n   cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n #include <math.h>\n+      volatile double d1, d2;\n+      volatile int i;\n int\n main ()\n {\n-fpclassify(0.0);\n-\t          isfinite(0.0);\n-\t\t  isinf(0.0);\n-\t          isnan(0.0);\n-\t\t  isnormal(0.0);\n-\t  \t  signbit(0.0);\n-\t \t  isgreater(0.0,0.0);\n-\t\t  isgreaterequal(0.0,0.0);\n-\t\t  isless(0.0,0.0);\n-\t\t  islessequal(0.0,0.0);\n-\t\t  islessgreater(0.0,0.0);\n-\t\t  islessgreater(0.0,0.0);\n-\t\t  isunordered(0.0,0.0);\n+i = fpclassify(d1);\n+      i = isfinite(d1);\n+      i = isinf(d1);\n+      i = isnan(d1);\n+      i = isnormal(d1);\n+      i = signbit(d1);\n+      i = isgreater(d1, d2);\n+      i = isgreaterequal(d1, d2);\n+      i = isless(d1, d2);\n+      i = islessequal(d1, d2);\n+      i = islessgreater(d1, d2);\n+      i = islessgreater(d1, d2);\n+      i = isunordered(d1, d2);\n \n   ;\n   return 0;\n@@ -15501,6 +15509,74 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ac_c99_math=no\n fi\n rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <math.h>\n+      volatile double d1, d2;\n+      volatile int i;\n+int\n+main ()\n+{\n+i = fpclassify(d1);\n+      i = isfinite(d1);\n+      i = isinf(d1);\n+      i = isnan(d1);\n+      i = isnormal(d1);\n+      i = signbit(d1);\n+      i = isgreater(d1, d2);\n+      i = isgreaterequal(d1, d2);\n+      i = isless(d1, d2);\n+      i = islessequal(d1, d2);\n+      i = islessgreater(d1, d2);\n+      i = islessgreater(d1, d2);\n+      i = isunordered(d1, d2);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_c99_math=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_math=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+fi\n \n fi\n \n@@ -15826,55 +15902,62 @@ done\n   if test x\"$ac_has_complex_h\" = x\"yes\"; then\n     echo \"$as_me:$LINENO: checking for ISO C99 support in <complex.h>\" >&5\n echo $ECHO_N \"checking for ISO C99 support in <complex.h>... $ECHO_C\" >&6\n-    cat >conftest.$ac_ext <<_ACEOF\n+    if test x$gcc_no_link = xyes; then\n+  cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n #include <complex.h>\n+\ttypedef __complex__ float float_type;\n+\ttypedef __complex__ double double_type;\n+\ttypedef __complex__ long double ld_type;\n+\tvolatile float_type tmpf;\n+\tvolatile double_type tmpd;\n+\tvolatile ld_type tmpld;\n+\tvolatile float f;\n+\tvolatile double d;\n+\tvolatile long double ld;\n int\n main ()\n {\n-typedef __complex__ float float_type; float_type tmpf;\n-\t            cabsf(tmpf);\n-\t\t    cargf(tmpf);\n-\t\t    ccosf(tmpf);\n-  \t\t    ccoshf(tmpf);\n-\t\t    cexpf(tmpf);\n-\t            clogf(tmpf);\n-\t\t    csinf(tmpf);\n-\t\t    csinhf(tmpf);\n-\t\t    csqrtf(tmpf);\n-\t\t    ctanf(tmpf);\n-\t\t    ctanhf(tmpf);\n-\t\t    cpowf(tmpf, tmpf);\n-\t\t    typedef __complex__ double double_type; double_type tmpd;\n-\t            cabs(tmpd);\n-\t\t    carg(tmpd);\n-\t\t    ccos(tmpd);\n-  \t\t    ccosh(tmpd);\n-\t\t    cexp(tmpd);\n-\t            clog(tmpd);\n-\t\t    csin(tmpd);\n-\t\t    csinh(tmpd);\n-\t\t    csqrt(tmpd);\n-\t\t    ctan(tmpd);\n-\t\t    ctanh(tmpd);\n-\t\t    cpow(tmpd, tmpd);\n-\t\t    typedef __complex__ long double ld_type; ld_type tmpld;\n-\t            cabsl(tmpld);\n-\t\t    cargl(tmpld);\n-\t\t    ccosl(tmpld);\n-  \t\t    ccoshl(tmpld);\n-\t\t    cexpl(tmpld);\n-\t            clogl(tmpld);\n-\t\t    csinl(tmpld);\n-\t\t    csinhl(tmpld);\n-\t\t    csqrtl(tmpld);\n-\t\t    ctanl(tmpld);\n-\t\t    ctanhl(tmpld);\n-\t\t    cpowl(tmpld, tmpld);\n+f = cabsf(tmpf);\n+\tf = cargf(tmpf);\n+\ttmpf = ccosf(tmpf);\n+\ttmpf = ccoshf(tmpf);\n+\ttmpf = cexpf(tmpf);\n+\ttmpf = clogf(tmpf);\n+\ttmpf = csinf(tmpf);\n+\ttmpf = csinhf(tmpf);\n+\ttmpf = csqrtf(tmpf);\n+\ttmpf = ctanf(tmpf);\n+\ttmpf = ctanhf(tmpf);\n+\ttmpf = cpowf(tmpf, tmpf);\n+\td = cabs(tmpd);\n+\td = carg(tmpd);\n+\ttmpd = ccos(tmpd);\n+\ttmpd = ccosh(tmpd);\n+\ttmpd = cexp(tmpd);\n+\ttmpd = clog(tmpd);\n+\ttmpd = csin(tmpd);\n+\ttmpd = csinh(tmpd);\n+\ttmpd = csqrt(tmpd);\n+\ttmpd = ctan(tmpd);\n+\ttmpd = ctanh(tmpd);\n+\ttmpd = cpow(tmpd, tmpd);\n+\tld = cabsl(tmpld);\n+\tld = cargl(tmpld);\n+\ttmpld = ccosl(tmpld);\n+\ttmpld = ccoshl(tmpld);\n+\ttmpld = cexpl(tmpld);\n+\ttmpld = clogl(tmpld);\n+\ttmpld = csinl(tmpld);\n+\ttmpld = csinhl(tmpld);\n+\ttmpld = csqrtl(tmpld);\n+\ttmpld = ctanl(tmpld);\n+\ttmpld = ctanhl(tmpld);\n+\ttmpld = cpowl(tmpld, tmpld);\n \n   ;\n   return 0;\n@@ -15910,6 +15993,104 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ac_c99_complex=no\n fi\n rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <complex.h>\n+\ttypedef __complex__ float float_type;\n+\ttypedef __complex__ double double_type;\n+\ttypedef __complex__ long double ld_type;\n+\tvolatile float_type tmpf;\n+\tvolatile double_type tmpd;\n+\tvolatile ld_type tmpld;\n+\tvolatile float f;\n+\tvolatile double d;\n+\tvolatile long double ld;\n+int\n+main ()\n+{\n+f = cabsf(tmpf);\n+\tf = cargf(tmpf);\n+\ttmpf = ccosf(tmpf);\n+\ttmpf = ccoshf(tmpf);\n+\ttmpf = cexpf(tmpf);\n+\ttmpf = clogf(tmpf);\n+\ttmpf = csinf(tmpf);\n+\ttmpf = csinhf(tmpf);\n+\ttmpf = csqrtf(tmpf);\n+\ttmpf = ctanf(tmpf);\n+\ttmpf = ctanhf(tmpf);\n+\ttmpf = cpowf(tmpf, tmpf);\n+\td = cabs(tmpd);\n+\td = carg(tmpd);\n+\ttmpd = ccos(tmpd);\n+\ttmpd = ccosh(tmpd);\n+\ttmpd = cexp(tmpd);\n+\ttmpd = clog(tmpd);\n+\ttmpd = csin(tmpd);\n+\ttmpd = csinh(tmpd);\n+\ttmpd = csqrt(tmpd);\n+\ttmpd = ctan(tmpd);\n+\ttmpd = ctanh(tmpd);\n+\ttmpd = cpow(tmpd, tmpd);\n+\tld = cabsl(tmpld);\n+\tld = cargl(tmpld);\n+\ttmpld = ccosl(tmpld);\n+\ttmpld = ccoshl(tmpld);\n+\ttmpld = cexpl(tmpld);\n+\ttmpld = clogl(tmpld);\n+\ttmpld = csinl(tmpld);\n+\ttmpld = csinhl(tmpld);\n+\ttmpld = csqrtl(tmpld);\n+\ttmpld = ctanl(tmpld);\n+\ttmpld = ctanhl(tmpld);\n+\ttmpld = cpowl(tmpld, tmpld);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_c99_complex=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_complex=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+fi\n   fi\n   echo \"$as_me:$LINENO: result: $ac_c99_complex\" >&5\n echo \"${ECHO_T}$ac_c99_complex\" >&6\n@@ -15928,22 +16109,23 @@ echo $ECHO_N \"checking for ISO C99 support in <stdio.h>... $ECHO_C\" >&6\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n \n+  if test x$gcc_no_link = xyes; then\n   cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n #include <stdio.h>\n-\t\t  #include <stdarg.h>\n-                  void foo(char* fmt, ...)\n-                  {\n-\t            va_list args; va_start(args, fmt);\n-                    vfscanf(stderr, \"%i\", args);\n-\t\t    vscanf(\"%i\", args);\n-                    vsnprintf(fmt, 0, \"%i\", args);\n-                    vsscanf(fmt, \"%i\", args);\n-\t\t  }\n+      #include <stdarg.h>\n+      void foo(char* fmt, ...)\n+      {\n+\tva_list args; va_start(args, fmt);\n+\tvfscanf(stderr, \"%i\", args);\n+\tvscanf(\"%i\", args);\n+\tvsnprintf(fmt, 0, \"%i\", args);\n+\tvsscanf(fmt, \"%i\", args);\n+      }\n int\n main ()\n {\n@@ -15982,6 +16164,68 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ac_c99_stdio=no\n fi\n rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <stdio.h>\n+      #include <stdarg.h>\n+      void foo(char* fmt, ...)\n+      {\n+\tva_list args; va_start(args, fmt);\n+\tvfscanf(stderr, \"%i\", args);\n+\tvscanf(\"%i\", args);\n+\tvsnprintf(fmt, 0, \"%i\", args);\n+\tvsscanf(fmt, \"%i\", args);\n+      }\n+int\n+main ()\n+{\n+snprintf(\"12\", 0, \"%i\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_c99_stdio=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_stdio=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+fi\n \n fi\n \n@@ -15995,26 +16239,33 @@ echo $ECHO_N \"checking for ISO C99 support in <stdlib.h>... $ECHO_C\" >&6\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n \n+  if test x$gcc_no_link = xyes; then\n   cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n #include <stdlib.h>\n+      volatile float f;\n+      volatile long double ld;\n+      volatile unsigned long long ll;\n+      lldiv_t mydivt;\n int\n main ()\n {\n char* tmp;\n-\t    \t  strtof(\"gnu\", &tmp);\n-\t\t  strtold(\"gnu\", &tmp);\n-\t          strtoll(\"gnu\", &tmp, 10);\n-\t          strtoull(\"gnu\", &tmp, 10);\n-\t          llabs(10);\n-\t\t  lldiv(10,1);\n-\t\t  atoll(\"10\");\n-\t\t  _Exit(0);\n-\t\t  lldiv_t mydivt;\n+      f = strtof(\"gnu\", &tmp);\n+      ld = strtold(\"gnu\", &tmp);\n+      ll = strtoll(\"gnu\", &tmp, 10);\n+      ll = strtoull(\"gnu\", &tmp, 10);\n+      ll = llabs(10);\n+      mydivt = lldiv(10,1);\n+      ll = mydivt.quot;\n+      ll = mydivt.rem;\n+      ll = atoll(\"10\");\n+      _Exit(0);\n+\n   ;\n   return 0;\n }\n@@ -16049,6 +16300,74 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ac_c99_stdlib=no\n fi\n rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+      volatile float f;\n+      volatile long double ld;\n+      volatile unsigned long long ll;\n+      lldiv_t mydivt;\n+int\n+main ()\n+{\n+char* tmp;\n+      f = strtof(\"gnu\", &tmp);\n+      ld = strtold(\"gnu\", &tmp);\n+      ll = strtoll(\"gnu\", &tmp, 10);\n+      ll = strtoull(\"gnu\", &tmp, 10);\n+      ll = llabs(10);\n+      mydivt = lldiv(10,1);\n+      ll = mydivt.quot;\n+      ll = mydivt.rem;\n+      ll = atoll(\"10\");\n+      _Exit(0);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_cxx_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_c99_stdlib=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_c99_stdlib=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+fi\n \n fi\n \n@@ -16386,6 +16705,7 @@ _ACEOF\n \n   fi\n \n+  CXXFLAGS=\"$ac_save_CXXFLAGS\"\n   ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'\n ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n@@ -17305,7 +17625,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n   # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 17308 \"configure\"\n+#line 17628 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int."}]}