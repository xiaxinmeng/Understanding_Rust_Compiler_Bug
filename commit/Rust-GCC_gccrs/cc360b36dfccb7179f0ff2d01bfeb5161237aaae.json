{"sha": "cc360b36dfccb7179f0ff2d01bfeb5161237aaae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MzNjBiMzZkZmNjYjcxNzlmMGZmMmQwMWJmZWI1MTYxMjM3YWFhZQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-08-14T16:01:10Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-08-14T16:01:10Z"}, "message": "graphite-scop-detection.c (create_sese_edges): Compute dominance info before trying to fix loop structure.\n\n\t* graphite-scop-detection.c (create_sese_edges): Compute dominance\n\tinfo before trying to fix loop structure.\n\t* cfgloopmanip.c (fix_loop_structure): Require fast DOM queries.\n\t* tree-cfgcleanup.c (repair_loop_structures): Likewise.\n\t* cfgloop.c (verify_loop_structure): Verify loop fathers.\n\nFrom-SVN: r190390", "tree": {"sha": "4464f678351d15a2ac886efa3d2f24239ee68188", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4464f678351d15a2ac886efa3d2f24239ee68188"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc360b36dfccb7179f0ff2d01bfeb5161237aaae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc360b36dfccb7179f0ff2d01bfeb5161237aaae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc360b36dfccb7179f0ff2d01bfeb5161237aaae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/comments", "author": null, "committer": null, "parents": [{"sha": "2ba31c054ff58914b68ff5e8abe3e48d46e14658", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba31c054ff58914b68ff5e8abe3e48d46e14658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ba31c054ff58914b68ff5e8abe3e48d46e14658"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "98c83004c8980844296b176f75e30fd551ff99cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc360b36dfccb7179f0ff2d01bfeb5161237aaae", "patch": "@@ -1,5 +1,11 @@\n 2012-08-14  Steven Bosscher  <steven@gcc.gnu.org>\n \n+\t* graphite-scop-detection.c (create_sese_edges): Compute dominance\n+\tinfo before trying to fix loop structure.\n+\t* cfgloopmanip.c (fix_loop_structure): Require fast DOM queries.\n+\t* tree-cfgcleanup.c (repair_loop_structures): Likewise.\n+\t* cfgloop.c (verify_loop_structure): Verify loop fathers.\n+\n \t* dominance.c (init_dom_info): Use gcc_checking_assert, not gcc_assert.\n \t(dom_convert_dir_to_idx, compute_dom_fast_query,\n \tget_immediate_dominator, set_immediate_dominator, get_dominated_by,"}, {"sha": "44df99b8f33092509fec37aebb13b22f4239ef46", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=cc360b36dfccb7179f0ff2d01bfeb5161237aaae", "patch": "@@ -1294,6 +1294,7 @@ cancel_loop_tree (struct loop *loop)\n      -- loop header have just single entry edge and single latch edge\n      -- loop latches have only single successor that is header of their loop\n      -- irreducible loops are correctly marked\n+     -- the cached loop depth and loop father of each bb is correct\n   */\n DEBUG_FUNCTION void\n verify_loop_structure (void)\n@@ -1308,6 +1309,7 @@ verify_loop_structure (void)\n   loop_iterator li;\n   struct loop_exit *exit, *mexit;\n   bool dom_available = dom_info_available_p (CDI_DOMINATORS);\n+  sbitmap visited = sbitmap_alloc (last_basic_block);\n \n   /* We need up-to-date dominators, compute or verify them.  */\n   if (!dom_available)\n@@ -1344,11 +1346,34 @@ verify_loop_structure (void)\n \tif (!flow_bb_inside_loop_p (loop, bbs[j]))\n \t  {\n \t    error (\"bb %d do not belong to loop %d\",\n-\t\t    bbs[j]->index, loop->num);\n+\t\t   bbs[j]->index, loop->num);\n \t    err = 1;\n \t  }\n       free (bbs);\n     }\n+  sbitmap_zero (visited);\n+  FOR_EACH_LOOP (li, loop, LI_FROM_INNERMOST)\n+    {\n+      bbs = get_loop_body (loop);\n+\n+      for (j = 0; j < loop->num_nodes; j++)\n+\t{\n+\t  bb = bbs[j];\n+\n+\t  /* Ignore this block if it is in an inner loop.  */\n+\t  if (TEST_BIT (visited, bb->index))\n+\t    continue;\n+\t  SET_BIT (visited, bb->index);\n+\n+\t  if (bb->loop_father != loop)\n+\t    {\n+\t      error (\"bb %d has father loop %d, should be loop %d\",\n+\t\t     bb->index, bb->loop_father->num, loop->num);\n+\t      err = 1;\n+\t    }\n+\t}\n+      free (bbs);\n+    }\n \n   /* Check headers and latches.  */\n   FOR_EACH_LOOP (li, loop, 0)\n@@ -1556,6 +1581,7 @@ verify_loop_structure (void)\n \n   gcc_assert (!err);\n \n+  sbitmap_free (visited);\n   free (sizes);\n   if (!dom_available)\n     free_dominance_info (CDI_DOMINATORS);"}, {"sha": "d84a56de1937864c597db4e20a58b50803528825", "filename": "gcc/cfgloopmanip.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2Fcfgloopmanip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2Fcfgloopmanip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopmanip.c?ref=cc360b36dfccb7179f0ff2d01bfeb5161237aaae", "patch": "@@ -1640,6 +1640,9 @@ fix_loop_structure (bitmap changed_bbs)\n   bool record_exits = false;\n   struct loop **superloop = XNEWVEC (struct loop *, number_of_loops ());\n \n+  /* We need exact and fast dominance info to be available.  */\n+  gcc_assert (dom_info_state (CDI_DOMINATORS) == DOM_OK);\n+\n   /* Remove the old bb -> loop mapping.  Remember the depth of the blocks in\n      the loop hierarchy, so that we can recognize blocks whose loop nesting\n      relationship has changed.  */"}, {"sha": "408e6b2fb527b5adceedfd79d49b9d2fd32b576a", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=cc360b36dfccb7179f0ff2d01bfeb5161237aaae", "patch": "@@ -1029,6 +1029,7 @@ create_sese_edges (VEC (sd_region, heap) *regions)\n \n   unmark_exit_edges (regions);\n \n+  calculate_dominance_info (CDI_DOMINATORS);\n   fix_loop_structure (NULL);\n \n #ifdef ENABLE_CHECKING"}, {"sha": "45f33682e30524a88bf766f500edda59d0676948", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc360b36dfccb7179f0ff2d01bfeb5161237aaae/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=cc360b36dfccb7179f0ff2d01bfeb5161237aaae", "patch": "@@ -737,6 +737,8 @@ repair_loop_structures (void)\n {\n   bitmap changed_bbs;\n \n+  calculate_dominance_info (CDI_DOMINATORS);\n+\n   timevar_push (TV_REPAIR_LOOPS);\n   changed_bbs = BITMAP_ALLOC (NULL);\n   fix_loop_structure (changed_bbs);"}]}