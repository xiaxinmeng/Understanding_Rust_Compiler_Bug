{"sha": "d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJiYjgxOTJlZTM1ZGZlMzM4OGM4Y2FkM2ZjOGI2NmE5NGM2NzZkMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-01-25T04:39:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-01-25T04:39:52Z"}, "message": "re PR c++/51917 (g++.old-deja/g++.abi/vmihint.C FAILs)\n\n\tPR c++/51917\n\t* decl.c (xref_basetypes): Check VEC_length instead of VEC_space.\n\nFrom-SVN: r183509", "tree": {"sha": "31abb1a9df36acb1685dd67f9cfe3629d3f0721a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31abb1a9df36acb1685dd67f9cfe3629d3f0721a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d972ea6d566f299a3d8bca795a8a71b6ef27c70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d972ea6d566f299a3d8bca795a8a71b6ef27c70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d972ea6d566f299a3d8bca795a8a71b6ef27c70"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "e4a3d6f8aba21a4e927b4f18bd7397d88cd9db3d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0", "patch": "@@ -1,5 +1,8 @@\n 2012-01-24  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51917\n+\t* decl.c (xref_basetypes): Check VEC_length instead of VEC_space.\n+\n \tPR c++/51973\n \t* tree.c (called_fns_equal): Check template args.\n \t(cp_tree_equal): Call it."}, {"sha": "7fba04ab9f10a843f5afbcf782be55208c23758b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0", "patch": "@@ -11916,8 +11916,8 @@ xref_basetypes (tree ref, tree base_list)\n       BINFO_BASE_ACCESS_APPEND (binfo, access);\n     }\n \n-  if (VEC_space (tree, CLASSTYPE_VBASECLASSES (ref), 1))\n-    /* If we have space in the vbase vector, we must have shared at\n+  if (VEC_length (tree, CLASSTYPE_VBASECLASSES (ref)) < max_vbases)\n+    /* If we didn't get max_vbases vbases, we must have shared at\n        least one of them, and are therefore diamond shaped.  */\n     CLASSTYPE_DIAMOND_SHAPED_P (ref) = 1;\n "}]}