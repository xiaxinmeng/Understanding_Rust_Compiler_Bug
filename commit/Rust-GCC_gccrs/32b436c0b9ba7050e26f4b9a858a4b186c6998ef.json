{"sha": "32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJiNDM2YzBiOWJhNzA1MGUyNmY0YjlhODU4YTRiMTg2YzY5OThlZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-07-28T08:55:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-07-28T08:55:17Z"}, "message": "re PR middle-end/61734 (Regression in ABS_EXPR recognition)\n\n\tPR middle-end/61734\n\t* fold-const.c (fold_comparison): Disable X - Y CMP 0 to X CMP Y for\n\toperators other than the equality operators.\n\nFrom-SVN: r213118", "tree": {"sha": "4cbd10b26a3a22de64e5caa3f5a3068b6b4a77ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cbd10b26a3a22de64e5caa3f5a3068b6b4a77ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/comments", "author": null, "committer": null, "parents": [{"sha": "2637bd27e86c30bce73f6753e922b1b2f03ad47d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2637bd27e86c30bce73f6753e922b1b2f03ad47d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2637bd27e86c30bce73f6753e922b1b2f03ad47d"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "1db458787999e16a5c8f270276b225b0ddad67b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "patch": "@@ -1,3 +1,9 @@\n+2014-07-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/61734\n+\t* fold-const.c (fold_comparison): Disable X - Y CMP 0 to X CMP Y for\n+\toperators other than the equality operators.\n+\n 2014-07-28  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/52478"}, {"sha": "718066238efb68e62fd93041ffc651da696672ef", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "patch": "@@ -9026,9 +9026,13 @@ fold_comparison (location_t loc, enum tree_code code, tree type,\n \n   /* Transform comparisons of the form X - Y CMP 0 to X CMP Y.  */\n   if (TREE_CODE (arg0) == MINUS_EXPR\n-      && (equality_code || TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (arg0)))\n+      && equality_code\n       && integer_zerop (arg1))\n     {\n+      /* ??? The transformation is valid for the other operators if overflow\n+\t is undefined for the type, but performing it here badly interacts\n+\t with the transformation in fold_cond_expr_with_comparison which\n+\t attempts to synthetize ABS_EXPR.  */\n       if (!equality_code)\n \tfold_overflow_warning (\"assuming signed overflow does not occur \"\n \t\t\t       \"when changing X - Y cmp 0 to X cmp Y\","}, {"sha": "ac3bd472a8f1fb924c7744918355919c3d651198", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "patch": "@@ -1,3 +1,9 @@\n+2014-07-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/fold-abs-5.c: New test.\n+\t* gcc.dg/Wstrict-overflow-25.c: XFAIL everywhere.\n+\t* gcc.dg/fold-compare-8.c: Likewise.\n+\n 2014-07-28  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/52478"}, {"sha": "774474d112352fe932d128f94a11a50b54d124aa", "filename": "gcc/testsuite/gcc.dg/Wstrict-overflow-25.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-overflow-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-overflow-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-overflow-25.c?ref=32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "patch": "@@ -7,5 +7,5 @@\n int\n foo (int x, int y)\n {\n-  return x - y < 0; /* { dg-warning \"assuming signed overflow does not occur\" \"correct warning\" } */\n+  return x - y < 0; /* { dg-warning \"assuming signed overflow does not occur\" \"correct warning\" { xfail *-*-* } } */\n }"}, {"sha": "dba4e4bf89a17ee88bafbd08cbfce85836865f95", "filename": "gcc/testsuite/gcc.dg/fold-abs-5.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-abs-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-abs-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-abs-5.c?ref=32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-original\" } */\n+\n+int test (int a, int b, int sum)\n+{\n+  sum += ((a - b) > 0 ? (a - b) : -(a - b));\n+  return sum;\n+}\n+\n+/* { dg-final { scan-tree-dump \"ABS\" \"original\" } } */\n+/* { dg-final { cleanup-tree-dump \"original\" } } */"}, {"sha": "2fb5fe9d1d4be9d0b5e662e26e1e03fd3690d4d0", "filename": "gcc/testsuite/gcc.dg/fold-compare-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32b436c0b9ba7050e26f4b9a858a4b186c6998ef/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-8.c?ref=32b436c0b9ba7050e26f4b9a858a4b186c6998ef", "patch": "@@ -7,5 +7,5 @@ foo (int x, int y)\n   return x - y < 0;\n }\n \n-/* { dg-final { scan-tree-dump \"x < y\" \"original\" } } */\n+/* { dg-final { scan-tree-dump \"x < y\" \"original\"  { xfail *-*-* } } } */\n /* { dg-final { cleanup-tree-dump \"original\" } } */"}]}