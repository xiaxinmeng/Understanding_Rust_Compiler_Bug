{"sha": "4acc3f420cff369d281f61038c4bcdde6c68b8a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjYzNmNDIwY2ZmMzY5ZDI4MWY2MTAzOGM0YmNkZGU2YzY4YjhhMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-03-26T13:08:08Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-03-26T13:08:08Z"}, "message": "sse-13.c: Include <mm_malloc.h> before redefinitions of extern and __inline.\n\n        * gcc.target/i386/sse-13.c: Include <mm_malloc.h>\n        before redefinitions of extern and __inline.\n        * gcc.target/i386/sse-13.c: Ditto.\n\nFrom-SVN: r133602", "tree": {"sha": "92d57a094d38a432f19668b80f82bf7204e78877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92d57a094d38a432f19668b80f82bf7204e78877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4acc3f420cff369d281f61038c4bcdde6c68b8a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4acc3f420cff369d281f61038c4bcdde6c68b8a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4acc3f420cff369d281f61038c4bcdde6c68b8a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4acc3f420cff369d281f61038c4bcdde6c68b8a0/comments", "author": null, "committer": null, "parents": [{"sha": "07874f1f63c1b1d1686e5b8e0cb9e42515beca21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07874f1f63c1b1d1686e5b8e0cb9e42515beca21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07874f1f63c1b1d1686e5b8e0cb9e42515beca21"}], "stats": {"total": 81, "additions": 42, "deletions": 39}, "files": [{"sha": "fc1bb0477c99417c0267b71503dd79e7ed789ba7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acc3f420cff369d281f61038c4bcdde6c68b8a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acc3f420cff369d281f61038c4bcdde6c68b8a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4acc3f420cff369d281f61038c4bcdde6c68b8a0", "patch": "@@ -98,8 +98,7 @@\n \t* config/v850/t-v850 (v850-c.o): Update.\n \t* config/t-vxworks (vxworks.o): Update.\n \t* config/t-sol2 (sol2-c.o, sol2.o): Update.\n-\t* config/t-darwin (darwin.o, darwin-c.o, darwin-driver.o):\n-\tUpdate.\n+\t* config/t-darwin (darwin.o, darwin-c.o, darwin-driver.o): Update.\n \t* config/spu/t-spu-elf (spu-c.o): Update.\n \t(spu.o): Remove.\n \t* config/sh/t-symbian (sh-c.o): Update.\n@@ -174,21 +173,17 @@\n \t(collect2.o, c-opts.o, gcc.o, gccspec.o, gcc-options.o,\n \tcppdefault.o, protoize.o, unprotoize.o, intl.o, version.o,\n \tprefix.o, toplev.o): Reduce to variable setting.\n-\t(libbackend.o): Use COMPILE.  Remove most dependencies.  Move\n-\tlater.\n+\t(libbackend.o): Use COMPILE.  Remove most dependencies.  Move later.\n \t($(out_object_file), gcc-options.o): New targets.\n-\t($(ALL_HOST_OBJS)): New target.\n-\tInclude dependency files.\n+\t($(ALL_HOST_OBJS)): New target.  Include dependency files.\n \t* configure: Rebuilt.\n-\t* configure.ac: Call ZW_CREATE_DEPDIR,\n-\tZW_PROG_COMPILER_DEPENDENCIES.\n-\t* doc/sourcebuild.texi (Front End Directory): Document new\n-\tvariable.\n+\t* configure.ac: Call ZW_CREATE_DEPDIR, ZW_PROG_COMPILER_DEPENDENCIES.\n+\t* doc/sourcebuild.texi (Front End Directory): Document new variable.\n \n 2008-03-25  Douglas Gregor  <doug.gregor@gmail.com>\n \n-       * c-common.c (c_sizeof_or_alignof_type): If we're not allowed to\n-       complain when we hit an error, return ERROR_MARK_NODE.\n+\t* c-common.c (c_sizeof_or_alignof_type): If we're not allowed to\n+\tcomplain when we hit an error, return ERROR_MARK_NODE.\n \n 2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n \n@@ -198,8 +193,7 @@\n \n 2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n \n-\t* config/sh/sh.c (sh_expand_t_scc): Emit movrt for SH2A if\n-\tpossible.\n+\t* config/sh/sh.c (sh_expand_t_scc): Emit movrt for SH2A if possible.\n \t* config/sh/sh.md (xorsi3_movrt, movrt): New insns.\n \n 2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n@@ -212,8 +206,7 @@\n \n \t* config/sh/constraints.md (I28): New constraint.\n \t* config/sh/sh.c (broken_move): Add support for movi20s.\n-\t* config/sh/sh.md (movsi_ie): Add the alternative for\n-\tmovi20s.\n+\t* config/sh/sh.md (movsi_ie): Add the alternative for movi20s.\n \n 2008-03-25  Anil Paranjape  <anil.paranjape@kpitcummins.com>\n \t    Jayant Sonar  <Jayant.sonar@kpitcummins.com>"}, {"sha": "a8f5511bb8ed42a9e2eb143e96125b61a4121c51", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 29, "deletions": 23, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acc3f420cff369d281f61038c4bcdde6c68b8a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acc3f420cff369d281f61038c4bcdde6c68b8a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4acc3f420cff369d281f61038c4bcdde6c68b8a0", "patch": "@@ -1,3 +1,9 @@\n+2008-03-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/sse-13.c: Include <mm_malloc.h>\n+\tbefore redefinitions of extern and __inline.\n+\t* gcc.target/i386/sse-13.c: Ditto.\n+\n 2008-03-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/35332\n@@ -19,15 +25,15 @@\n \n 2008-03-26  Douglas Gregor  <doug.gregor@gmail.com>\n \n-       * g++.dg/cpp0x/variadic84.C: Update to reflect the change in\n-       variadic template template parameter binding semantics.\n-       * g++.dg/cpp0x/variadic85.C: Ditto.\n-       * g++.dg/cpp0x/variadic88.C: New.\n-       * g++.dg/cpp0x/variadic89.C: New.\n-       * g++.dg/cpp0x/variadic90.C: New.\n-       * g++.dg/cpp0x/variadic-ex14.C: Update to reflect the change in\n-       variadic template template parameter binding semantics.\n-       * g++.dg/cpp0x/variadic-lambda.C: New.\n+\t* g++.dg/cpp0x/variadic84.C: Update to reflect the change in\n+\tvariadic template template parameter binding semantics.\n+\t* g++.dg/cpp0x/variadic85.C: Ditto.\n+\t* g++.dg/cpp0x/variadic88.C: New.\n+\t* g++.dg/cpp0x/variadic89.C: New.\n+\t* g++.dg/cpp0x/variadic90.C: New.\n+\t* g++.dg/cpp0x/variadic-ex14.C: Update to reflect the change in\n+\tvariadic template template parameter binding semantics.\n+\t* g++.dg/cpp0x/variadic-lambda.C: New.\n \n 2008-03-25  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n@@ -46,18 +52,18 @@\n \n 2008-03-25  Douglas Gregor  <doug.gregor@gmail.com>\n \n-       * g++.dg/template/sfinae4.C: New.\n-       * g++.dg/template/sfinae5.C: New.\n-       * g++.dg/template/sfinae6.C: New.\n-       * g++.dg/template/sfinae6_neg.C: New.\n-       * g++.dg/template/sfinae7.C: New.\n-       * g++.dg/template/sfinae8.C: New.\n-       * g++.dg/template/sfinae9.C: New.\n-       * g++.dg/template/sfinae10.C: New.\n-       * g++.dg/template/sfinae11.C: New.\n-       * g++.dg/template/sfinae12.C: New.\n-       * g++.dg/template/sfinae13.C: New.\n-       * g++.dg/template/sfinae14C: New.\n+\t* g++.dg/template/sfinae4.C: New.\n+\t* g++.dg/template/sfinae5.C: New.\n+\t* g++.dg/template/sfinae6.C: New.\n+\t* g++.dg/template/sfinae6_neg.C: New.\n+\t* g++.dg/template/sfinae7.C: New.\n+\t* g++.dg/template/sfinae8.C: New.\n+\t* g++.dg/template/sfinae9.C: New.\n+\t* g++.dg/template/sfinae10.C: New.\n+\t* g++.dg/template/sfinae11.C: New.\n+\t* g++.dg/template/sfinae12.C: New.\n+\t* g++.dg/template/sfinae13.C: New.\n+\t* g++.dg/template/sfinae14C: New.\n \n 2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n \n@@ -140,8 +146,8 @@\n \n \t* gcc.dg/tree-ssa/ssa-ccp-17.c: New testcase.\n \n-2008-03-20 Victor Kaplansky  <victork@gcc.gnu.org>\n-\t   Uros Bizjak  <ubizjak@gmail.com>\n+2008-03-20  Victor Kaplansky  <victork@gcc.gnu.org>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR testsuite/34168\n \t* lib/target-supports.exp (check_sse2_hw_available): New procedure."}, {"sha": "3a444bf90aa3e46e9bc6b29b6754595e29cacfb3", "filename": "gcc/testsuite/gcc.target/i386/sse-13.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acc3f420cff369d281f61038c4bcdde6c68b8a0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acc3f420cff369d281f61038c4bcdde6c68b8a0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c?ref=4acc3f420cff369d281f61038c4bcdde6c68b8a0", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -m3dnow -msse4 -msse5\" } */\n \n+#include <mm_malloc.h>\n+\n /* Test that the intrinsics compile with optimization.  All of them are\n    defined as inline functions in {,x,e,p,t,s,a,b}mmintrin.h and mm3dnow.h\n    that reference the proper builtin functions.  Defining away \"extern\" and"}, {"sha": "286748a8594ea5c3702f25bcc86201c3bbc94a48", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acc3f420cff369d281f61038c4bcdde6c68b8a0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acc3f420cff369d281f61038c4bcdde6c68b8a0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=4acc3f420cff369d281f61038c4bcdde6c68b8a0", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -m3dnow -msse4 -msse5\" } */\n \n+#include <mm_malloc.h>\n+\n /* Test that the intrinsics compile without optimization.  All of them are\n    defined as inline functions in {,x,e,p,t,s,a,b}mmintrin.h  and mm3dnow.h\n    that reference the proper builtin functions.  Defining away \"extern\" and"}]}