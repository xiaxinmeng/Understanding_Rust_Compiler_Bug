{"sha": "6d4e0ecc0eda354158fd87a997b0450f57a52435", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ0ZTBlY2MwZWRhMzU0MTU4ZmQ4N2E5OTdiMDQ1MGY1N2E1MjQzNQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-24T03:43:59Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-24T03:43:59Z"}, "message": "cfgloop.h, [...]: Replace iv_analyse with iv_analyze.\n\n\t* cfgloop.h, loop-iv.c, loop-unswitch.c: Replace iv_analyse\n\twith iv_analyze.\n\nFrom-SVN: r78350", "tree": {"sha": "6028c13f94e8b983c31ffb146154e170d8941fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6028c13f94e8b983c31ffb146154e170d8941fa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d4e0ecc0eda354158fd87a997b0450f57a52435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d4e0ecc0eda354158fd87a997b0450f57a52435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d4e0ecc0eda354158fd87a997b0450f57a52435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d4e0ecc0eda354158fd87a997b0450f57a52435/comments", "author": null, "committer": null, "parents": [{"sha": "9e200aafa53204e1c556d82ee4ab8198ad5da48c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e200aafa53204e1c556d82ee4ab8198ad5da48c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e200aafa53204e1c556d82ee4ab8198ad5da48c"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "7fba48e5aa1ffdec53067bd7c3ed858972ae6e8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d4e0ecc0eda354158fd87a997b0450f57a52435/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d4e0ecc0eda354158fd87a997b0450f57a52435/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d4e0ecc0eda354158fd87a997b0450f57a52435", "patch": "@@ -1,3 +1,8 @@\n+2004-02-23  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cfgloop.h, loop-iv.c, loop-unswitch.c: Replace iv_analyse\n+\twith iv_analyze.\n+\n 2004-02-23  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* config/i386/i386.c: Rename pni to sse3."}, {"sha": "4226592a750fed6e03b07c2dabd670f4072f5f73", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d4e0ecc0eda354158fd87a997b0450f57a52435/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d4e0ecc0eda354158fd87a997b0450f57a52435/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=6d4e0ecc0eda354158fd87a997b0450f57a52435", "patch": "@@ -416,7 +416,7 @@ struct niter_desc\n \n extern void iv_analysis_loop_init (struct loop *);\n extern rtx iv_get_reaching_def (rtx, rtx);\n-extern bool iv_analyse (rtx, rtx, struct rtx_iv *);\n+extern bool iv_analyze (rtx, rtx, struct rtx_iv *);\n extern rtx get_iv_value (struct rtx_iv *, rtx);\n extern void find_simple_exit (struct loop *, struct niter_desc *);\n extern void iv_number_of_iterations (struct loop *, rtx, rtx,"}, {"sha": "1d4e715bab92e9acd6484dceab8d0f92fd02d30b", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d4e0ecc0eda354158fd87a997b0450f57a52435/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d4e0ecc0eda354158fd87a997b0450f57a52435/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=6d4e0ecc0eda354158fd87a997b0450f57a52435", "patch": "@@ -41,7 +41,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n    iv_analysis_loop_init (loop);\n    insn = iv_get_reaching_def (where, reg);\n-   if (iv_analyse (insn, reg, &iv))\n+   if (iv_analyze (insn, reg, &iv))\n      {\n        ...\n      }\n@@ -781,7 +781,7 @@ get_biv_step (rtx reg, rtx *inner_step, enum machine_mode *inner_mode,\n    to *IV.  */\n \n static bool\n-iv_analyse_biv (rtx def, struct rtx_iv *iv)\n+iv_analyze_biv (rtx def, struct rtx_iv *iv)\n {\n   unsigned regno;\n   rtx inner_step, outer_step;\n@@ -865,7 +865,7 @@ iv_analyse_biv (rtx def, struct rtx_iv *iv)\n /* Analyses operand OP of INSN and stores the result to *IV.  */\n \n static bool\n-iv_analyse_op (rtx insn, rtx op, struct rtx_iv *iv)\n+iv_analyze_op (rtx insn, rtx op, struct rtx_iv *iv)\n {\n   rtx def_insn;\n   unsigned regno;\n@@ -884,7 +884,7 @@ iv_analyse_op (rtx insn, rtx op, struct rtx_iv *iv)\n       if (!subreg_lowpart_p (op))\n \treturn false;\n \n-      if (!iv_analyse_op (insn, SUBREG_REG (op), iv))\n+      if (!iv_analyze_op (insn, SUBREG_REG (op), iv))\n \treturn false;\n \n       return iv_subreg (iv, GET_MODE (op));\n@@ -924,13 +924,13 @@ iv_analyse_op (rtx insn, rtx op, struct rtx_iv *iv)\n       return false;\n     }\n \n-  return iv_analyse (def_insn, op, iv);\n+  return iv_analyze (def_insn, op, iv);\n }\n \n /* Analyses iv DEF defined in INSN and stores the result to *IV.  */\n \n bool\n-iv_analyse (rtx insn, rtx def, struct rtx_iv *iv)\n+iv_analyze (rtx insn, rtx def, struct rtx_iv *iv)\n {\n   unsigned uid;\n   rtx set, rhs, mby = NULL_RTX, tmp;\n@@ -947,14 +947,14 @@ iv_analyse (rtx insn, rtx def, struct rtx_iv *iv)\n       if (!subreg_lowpart_p (def))\n \treturn false;\n \n-      if (!iv_analyse (insn, SUBREG_REG (def), iv))\n+      if (!iv_analyze (insn, SUBREG_REG (def), iv))\n \treturn false;\n \n       return iv_subreg (iv, GET_MODE (def));\n     }\n \n   if (!insn)\n-    return iv_analyse_biv (def, iv);\n+    return iv_analyze_biv (def, iv);\n \n   if (rtl_dump_file)\n     {\n@@ -1036,7 +1036,7 @@ iv_analyse (rtx insn, rtx def, struct rtx_iv *iv)\n \n   if (op0)\n     {\n-      if (!iv_analyse_op (insn, op0, &iv0))\n+      if (!iv_analyze_op (insn, op0, &iv0))\n \tgoto end;\n \t\n       if (iv0.mode == VOIDmode)\n@@ -1048,7 +1048,7 @@ iv_analyse (rtx insn, rtx def, struct rtx_iv *iv)\n \n   if (op1)\n     {\n-      if (!iv_analyse_op (insn, op1, &iv1))\n+      if (!iv_analyze_op (insn, op1, &iv1))\n \tgoto end;\n \n       if (iv1.mode == VOIDmode)\n@@ -1911,14 +1911,14 @@ iv_number_of_iterations (struct loop *loop, rtx insn, rtx condition,\n \n   op0 = XEXP (condition, 0);\n   def_insn = iv_get_reaching_def (insn, op0);\n-  if (!iv_analyse (def_insn, op0, &iv0))\n+  if (!iv_analyze (def_insn, op0, &iv0))\n     goto fail;\n   if (iv0.extend_mode == VOIDmode)\n     iv0.mode = iv0.extend_mode = mode;\n   \n   op1 = XEXP (condition, 1);\n   def_insn = iv_get_reaching_def (insn, op1);\n-  if (!iv_analyse (def_insn, op1, &iv1))\n+  if (!iv_analyze (def_insn, op1, &iv1))\n     goto fail;\n   if (iv1.extend_mode == VOIDmode)\n     iv1.mode = iv1.extend_mode = mode;"}, {"sha": "6febbed966b0f0eceb6a93daf72931d0f76e9728", "filename": "gcc/loop-unswitch.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d4e0ecc0eda354158fd87a997b0450f57a52435/gcc%2Floop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d4e0ecc0eda354158fd87a997b0450f57a52435/gcc%2Floop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unswitch.c?ref=6d4e0ecc0eda354158fd87a997b0450f57a52435", "patch": "@@ -208,7 +208,7 @@ may_unswitch_on (basic_block bb, struct loop *loop, rtx *cinsn)\n \tcontinue;\n \n       insn = iv_get_reaching_def (at, op[i]);\n-      if (!iv_analyse (insn, op[i], &iv))\n+      if (!iv_analyze (insn, op[i], &iv))\n \treturn NULL_RTX;\n       if (iv.step != const0_rtx\n \t  || iv.first_special)"}]}