{"sha": "814949ddceaef59725c84fe8ef7c6c617fb5d049", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE0OTQ5ZGRjZWFlZjU5NzI1Yzg0ZmU4ZWY3YzZjNjE3ZmI1ZDA0OQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2020-11-15T21:02:58Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2020-11-15T21:04:54Z"}, "message": "MSP430: Define function to check 16-bit hwmult support\n\ngcc/ChangeLog:\n\n\t* config/msp430/msp430.c (msp430_use_16bit_hwmult): New.\n\t(use_32bit_hwmult): Rename to..\n\t(msp430_use_32bit_hwmult): ..this.\n\t(msp430_muldiv_costs): Use msp430_use_16bit_hwmult and\n\tmsp430_use_32bit_hwmult.\n\t(msp430_expand_helper): Use msp430_use_16bit_hwmult and\n\tmsp430_use_32bit_hwmult.\n\t(msp430_output_labelref): Use msp430_use_32bit_hwmult.", "tree": {"sha": "720149b0645e859c695bdeb7c256e3f074b67a8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/720149b0645e859c695bdeb7c256e3f074b67a8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/814949ddceaef59725c84fe8ef7c6c617fb5d049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/814949ddceaef59725c84fe8ef7c6c617fb5d049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/814949ddceaef59725c84fe8ef7c6c617fb5d049", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/814949ddceaef59725c84fe8ef7c6c617fb5d049/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9243f0fba68339fa6d8bcac35b0df6e88c1ad099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9243f0fba68339fa6d8bcac35b0df6e88c1ad099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9243f0fba68339fa6d8bcac35b0df6e88c1ad099"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "38a9938255eb695c349cd8a41ed774d2d67829f3", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 39, "deletions": 12, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/814949ddceaef59725c84fe8ef7c6c617fb5d049/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/814949ddceaef59725c84fe8ef7c6c617fb5d049/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=814949ddceaef59725c84fe8ef7c6c617fb5d049", "patch": "@@ -58,7 +58,8 @@\n \f\n \n static void msp430_compute_frame_info (void);\n-static bool use_32bit_hwmult (void);\n+static bool msp430_use_16bit_hwmult (void);\n+static bool msp430_use_32bit_hwmult (void);\n static bool use_helper_for_const_shift (machine_mode mode, HOST_WIDE_INT amt);\n \n \f\n@@ -1318,9 +1319,7 @@ msp430_muldiv_costs (rtx src, rtx dst, bool speed, rtx outer_rtx,\n {\n   enum rtx_code outer_code = GET_CODE (outer_rtx);\n   const struct msp430_multlib_costs *cost_p;\n-  bool hwmult_16bit = (msp430_has_hwmult () && !(msp430_use_f5_series_hwmult ()\n-\t\t\t\t\t\t || use_32bit_hwmult ()));\n-  cost_p = (hwmult_16bit\n+  cost_p = (msp430_use_16bit_hwmult ()\n \t    ? &cycle_cost_multlib_32bit\n \t    : &cycle_cost_multlib_16bit);\n \n@@ -1346,8 +1345,9 @@ msp430_muldiv_costs (rtx src, rtx dst, bool speed, rtx outer_rtx,\n       if (outer_code != MULT)\n \t/* Division is always expensive.  */\n \tfactor = 7;\n-      else if (((hwmult_16bit && outer_mode != DImode)\n-\t\t   || use_32bit_hwmult () || msp430_use_f5_series_hwmult ()))\n+      else if (((msp430_use_16bit_hwmult () && outer_mode != DImode)\n+\t\t|| msp430_use_32bit_hwmult ()\n+\t\t|| msp430_use_f5_series_hwmult ()))\n \t/* When the hardware multiplier is available, only disparage\n \t   slightly.  */\n \tfactor = 2;\n@@ -1364,7 +1364,7 @@ msp430_muldiv_costs (rtx src, rtx dst, bool speed, rtx outer_rtx,\n      The 16-bit hardware multiply library cannot be used to produce 64-bit\n      results.  */\n   if (outer_code != MULT || !msp430_has_hwmult ()\n-      || (outer_mode == DImode && hwmult_16bit))\n+      || (outer_mode == DImode && msp430_use_16bit_hwmult ()))\n     {\n       factor = (outer_code == MULT ? 50 : 70);\n       return factor * mode_factor * msp430_costs (src, dst, speed, outer_rtx);\n@@ -3379,7 +3379,7 @@ msp430_expand_helper (rtx *operands, const char *helper_name,\n       if (msp430_use_f5_series_hwmult ())\n \tfsym = gen_rtx_SYMBOL_REF (VOIDmode, concat (helper_name,\n \t\t\t\t\t\t     \"_f5hw\", NULL));\n-      else if (use_32bit_hwmult ())\n+      else if (msp430_use_32bit_hwmult ())\n \t{\n \t  /* When the arguments are 16-bits, the 16-bit hardware multiplier is\n \t     used.  */\n@@ -3390,8 +3390,7 @@ msp430_expand_helper (rtx *operands, const char *helper_name,\n \t    fsym = gen_rtx_SYMBOL_REF (VOIDmode, concat (helper_name,\n \t\t\t\t\t\t\t \"_hw32\", NULL));\n \t}\n-      /* 16-bit hardware multiply.  */\n-      else if (msp430_has_hwmult ())\n+      else if (msp430_use_16bit_hwmult ())\n \tfsym = gen_rtx_SYMBOL_REF (VOIDmode, concat (helper_name,\n \t\t\t\t\t\t     \"_hw\", NULL));\n       else\n@@ -3932,7 +3931,7 @@ msp430_use_f5_series_hwmult (void)\n    32-bit hardware multiplier.  */\n \n static bool\n-use_32bit_hwmult (void)\n+msp430_use_32bit_hwmult (void)\n {\n   static const char * cached_match = NULL;\n   static bool cached_result;\n@@ -3955,6 +3954,34 @@ use_32bit_hwmult (void)\n   return cached_result = false;\n }\n \n+/* Returns true if the current MCU has a first generation\n+   16-bit hardware multiplier.  */\n+\n+static bool\n+msp430_use_16bit_hwmult (void)\n+{\n+  static const char * cached_match = NULL;\n+  static bool\t      cached_result;\n+\n+  if (msp430_hwmult_type == MSP430_HWMULT_SMALL)\n+    return true;\n+\n+  if (target_mcu == NULL || msp430_hwmult_type != MSP430_HWMULT_AUTO)\n+    return false;\n+\n+  if (target_mcu == cached_match)\n+    return cached_result;\n+\n+  cached_match = target_mcu;\n+\n+  msp430_extract_mcu_data (target_mcu);\n+  if (extracted_mcu_data.name != NULL)\n+    return cached_result = (extracted_mcu_data.hwmpy == 1\n+\t\t\t    || extracted_mcu_data.hwmpy == 2);\n+\n+  return cached_result = false;\n+}\n+\n /* Returns true if the current MCU does not have a\n    hardware multiplier of any kind.  */\n \n@@ -4019,7 +4046,7 @@ msp430_output_labelref (FILE *file, const char *name)\n \t{\n \t  if (msp430_use_f5_series_hwmult ())\n \t    name = \"__mulsi2_f5\";\n-\t  else if (use_32bit_hwmult ())\n+\t  else if (msp430_use_32bit_hwmult ())\n \t    name = \"__mulsi2_hw32\";\n \t  else\n \t    name = \"__mulsi2\";"}]}