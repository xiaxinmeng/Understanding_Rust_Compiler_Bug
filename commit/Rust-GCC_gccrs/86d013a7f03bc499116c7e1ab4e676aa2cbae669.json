{"sha": "86d013a7f03bc499116c7e1ab4e676aa2cbae669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZkMDEzYTdmMDNiYzQ5OTExNmM3ZTFhYjRlNjc2YWEyY2JhZTY2OQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-12T21:56:10Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-12T21:56:10Z"}, "message": "Make using DejaGNU work for libgo testing on a native system.\n\nFrom-SVN: r168729", "tree": {"sha": "ff54b74fedda94c9c95e54e96328b68548d9f190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff54b74fedda94c9c95e54e96328b68548d9f190"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86d013a7f03bc499116c7e1ab4e676aa2cbae669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d013a7f03bc499116c7e1ab4e676aa2cbae669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d013a7f03bc499116c7e1ab4e676aa2cbae669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d013a7f03bc499116c7e1ab4e676aa2cbae669/comments", "author": null, "committer": null, "parents": [{"sha": "a49b692a27b8e388bbbf7ea6e0f883505b9b65ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a49b692a27b8e388bbbf7ea6e0f883505b9b65ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a49b692a27b8e388bbbf7ea6e0f883505b9b65ff"}], "stats": {"total": 64, "additions": 42, "deletions": 22}, "files": [{"sha": "46b592460f6b0fc796eedbba2c2479990580d0fa", "filename": "libgo/Makefile.am", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=86d013a7f03bc499116c7e1ab4e676aa2cbae669", "patch": "@@ -1237,12 +1237,16 @@ CHECK = \\\n \trm -f $@-log; \\\n \tprefix=`if test \"$(@D)\" = \"regexp\"; then echo regexp-test; else dirname $(@D); fi`; \\\n \ttest \"$${prefix}\" != \".\" || prefix=\"$(@D)\"; \\\n-\tif $(srcdir)/testsuite/gotest --dejagnu=$(use_dejagnu) --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" >>$@-log 2>&1; then \\\n-\t  echo \"PASS: $(@D)\"; \\\n+\tif test \"$(use_dejagnu)\" = \"yes\"; then \\\n+\t  $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\"; \\\n \telse \\\n-\t  echo \"FAIL: $(@D)\"; \\\n-\t  cat $@-log; \\\n-\t  exit 1; \\\n+\t  if $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" >>$@-log 2>&1; then \\\n+\t    echo \"PASS: $(@D)\"; \\\n+\t  else \\\n+\t    echo \"FAIL: $(@D)\"; \\\n+\t    cat $@-log; \\\n+\t    exit 1; \\\n+\t  fi; \\\n \tfi\n \n # Build all packages before checking any."}, {"sha": "e54fad22ae72205d871ed3b25df36751377624e2", "filename": "libgo/Makefile.in", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=86d013a7f03bc499116c7e1ab4e676aa2cbae669", "patch": "@@ -1583,12 +1583,16 @@ CHECK = \\\n \trm -f $@-log; \\\n \tprefix=`if test \"$(@D)\" = \"regexp\"; then echo regexp-test; else dirname $(@D); fi`; \\\n \ttest \"$${prefix}\" != \".\" || prefix=\"$(@D)\"; \\\n-\tif $(srcdir)/testsuite/gotest --dejagnu=$(use_dejagnu) --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" >>$@-log 2>&1; then \\\n-\t  echo \"PASS: $(@D)\"; \\\n+\tif test \"$(use_dejagnu)\" = \"yes\"; then \\\n+\t  $(srcdir)/testsuite/gotest --dejagnu=yes --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\"; \\\n \telse \\\n-\t  echo \"FAIL: $(@D)\"; \\\n-\t  cat $@-log; \\\n-\t  exit 1; \\\n+\t  if $(srcdir)/testsuite/gotest --basedir=$(srcdir) --srcdir=$(srcdir)/go/$(@D) --prefix=\"libgo_$${prefix}\" --pkgfiles=\"$(go_$(subst /,_,$(@D))_files)\" >>$@-log 2>&1; then \\\n+\t    echo \"PASS: $(@D)\"; \\\n+\t  else \\\n+\t    echo \"FAIL: $(@D)\"; \\\n+\t    cat $@-log; \\\n+\t    exit 1; \\\n+\t  fi; \\\n \tfi\n \n "}, {"sha": "e8c0847a8018386a4825f864af2d0e168af149f4", "filename": "libgo/testsuite/gotest", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2Ftestsuite%2Fgotest", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2Ftestsuite%2Fgotest", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Fgotest?ref=86d013a7f03bc499116c7e1ab4e676aa2cbae669", "patch": "@@ -314,16 +314,26 @@ xno)\n \t./a.out \"$@\"\n \t;;\n xyes)\n-\t# This is the only file which is optionally made.\n-\t# All others are overwritten on copying/building,\n-\t# but this may remain and cause conflicts if not\n-\t# deleted.\n-\trm -rf ../testsuite/_xtest_.o\n-\tcp *.o _testmain.go ../testsuite\n+\trm -rf ../testsuite/*.o\n+\tfiles=`echo *`\n+\tfor f in $files; do\n+\t\tif test \"$f\" = \"_obj\" || test \"$f\" = \"_test\"; then\n+\t\t\tcontinue\n+\t\tfi\n+\t\trm -rf ../testsuite/$f\n+\t\tif test -f $f; then\n+\t\t\tcp $f ../testsuite/\n+\t\telse\n+\t\t\tln -s ../$DIR/$f ../testsuite/\n+\t\tfi\n+\tdone\n \tcd ../testsuite\n+\trm -rf _obj _test\n+\tmkdir _obj _test\n \t$MAKE check RUNTESTFLAGS=\"$RUNTESTFLAGS GOTEST_TMPDIR=$DIR\"\n \t# Useful when using make check-target-libgo\n \tcat libgo.log >> libgo-all.log\n \tcat libgo.sum >> libgo-all.sum\n+\trm -rf $files\n \t;;\n esac"}, {"sha": "29764d9244686cf823bda33def0adfb833f3053e", "filename": "libgo/testsuite/lib/libgo.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2Ftestsuite%2Flib%2Flibgo.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2Ftestsuite%2Flib%2Flibgo.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Flib%2Flibgo.exp?ref=86d013a7f03bc499116c7e1ab4e676aa2cbae669", "patch": "@@ -18,7 +18,7 @@ set gccdir [lookfor_file $tool_root_dir gcc/libgcc.a]\n if {$gccdir != \"\"} {\n     set gccdir [file dirname $gccdir]\n }\n-set GO_UNDER_TEST \"$gccdir/gccgo -B$gccdir/\"\n+set GOC_UNDER_TEST \"$gccdir/gccgo -B$gccdir/\"\n set TESTING_IN_BUILD_TREE 1\n \n proc go_maybe_build_wrapper { args } {"}, {"sha": "efdd28d91624c94a60db81078ddd87a8bc8ab772", "filename": "libgo/testsuite/libgo.testmain/testmain.exp", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2Ftestsuite%2Flibgo.testmain%2Ftestmain.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d013a7f03bc499116c7e1ab4e676aa2cbae669/libgo%2Ftestsuite%2Flibgo.testmain%2Ftestmain.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Flibgo.testmain%2Ftestmain.exp?ref=86d013a7f03bc499116c7e1ab4e676aa2cbae669", "patch": "@@ -17,7 +17,6 @@\n load_lib libgo.exp\n \n lappend options \"additional_flags=-I. -w -g\"\n-lappend ld_options \"ldflags=-lgotesting\"\n \n if [istarget \"*-*-rtems*\"] {\n     global options\n@@ -44,9 +43,9 @@ if [istarget \"*-*-rtems*\"] {\n }\n \n set object_files [glob -nocomplain \"*.o\"]\n-regsub $gluefile $object_files \"\" object_files\n-\n-lappend options $ld_options\n+if [info exists gluefile] {\n+    regsub $gluefile $object_files \"\" object_files\n+}\n \n set comp_output [go_target_compile \"$object_files _testmain.go\" \\\n \t\t\t \"./a.exe\" \"executable\" $options]\n@@ -55,4 +54,7 @@ if ![ string match \"\" $comp_output ] {\n     exit 1\n }\n \n-libgo_load \"./a.exe\" \"\" \"\"\n+set result [libgo_load \"./a.exe\" \"\" \"\"]\n+\n+set status [lindex $result 0]\n+$status go"}]}