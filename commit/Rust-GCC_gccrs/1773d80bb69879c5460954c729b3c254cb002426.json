{"sha": "1773d80bb69879c5460954c729b3c254cb002426", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc3M2Q4MGJiNjk4NzljNTQ2MDk1NGM3MjliM2MyNTRjYjAwMjQyNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:39:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:39:22Z"}, "message": "[multiple changes]\n\n2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* inline.ads, inline.adb, sem_ch10.adb: Rename Check_Body_For_Inlining\n\tto Check_Package_Body_For_Inlining, to prevent confusion with other\n\tinlining subprograms.\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* opt.ads: Minor comment update.\n\t* sem_attr.adb (Uneval_Old_Msg): Deal with case of aspect, where\n\twe want setting of Uneval_Old at time of encountering the aspect.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Capture setting\n\tof Opt.Uneval_Old.\n\t* sinfo.adb (Uneval_Old_Accept): New function (Uneval_Old_Warn):\n\tNew function (Set_Uneval_Old_Accept): New procedure.\n\t(Set_Uneval_Old_Warn): New procedure.\n\t* sinfo.ads: Uneval_Old_Accept: New flag Uneval_Old_Warn: New flag.\n\nFrom-SVN: r213181", "tree": {"sha": "0e7f3309f2d11ea3e4977088fbe9d54eac00e427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e7f3309f2d11ea3e4977088fbe9d54eac00e427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1773d80bb69879c5460954c729b3c254cb002426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1773d80bb69879c5460954c729b3c254cb002426", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1773d80bb69879c5460954c729b3c254cb002426", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1773d80bb69879c5460954c729b3c254cb002426/comments", "author": null, "committer": null, "parents": [{"sha": "3f80a182094a48e467eb5fd774c3016036980a0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f80a182094a48e467eb5fd774c3016036980a0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f80a182094a48e467eb5fd774c3016036980a0a"}], "stats": {"total": 167, "additions": 149, "deletions": 18}, "files": [{"sha": "5a21a5cc62c6d572ae68decd8bfe7a0e1c4c92a4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1773d80bb69879c5460954c729b3c254cb002426", "patch": "@@ -1,3 +1,21 @@\n+2014-07-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* inline.ads, inline.adb, sem_ch10.adb: Rename Check_Body_For_Inlining\n+\tto Check_Package_Body_For_Inlining, to prevent confusion with other\n+\tinlining subprograms.\n+\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* opt.ads: Minor comment update.\n+\t* sem_attr.adb (Uneval_Old_Msg): Deal with case of aspect, where\n+\twe want setting of Uneval_Old at time of encountering the aspect.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Capture setting\n+\tof Opt.Uneval_Old.\n+\t* sinfo.adb (Uneval_Old_Accept): New function (Uneval_Old_Warn):\n+\tNew function (Set_Uneval_Old_Accept): New procedure.\n+\t(Set_Uneval_Old_Warn): New procedure.\n+\t* sinfo.ads: Uneval_Old_Accept: New flag Uneval_Old_Warn: New flag.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* sinfo.ads, inline.adb, inline.ads, sem_ch6.adb: Minor reformatting."}, {"sha": "a27c4a2978011b1a398909aea4b6c04156c04824", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=1773d80bb69879c5460954c729b3c254cb002426", "patch": "@@ -2559,11 +2559,11 @@ package body Inline is\n       end if;\n    end Check_And_Build_Body_To_Inline;\n \n-   -----------------------------\n-   -- Check_Body_For_Inlining --\n-   -----------------------------\n+   -------------------------------------\n+   -- Check_Package_Body_For_Inlining --\n+   -------------------------------------\n \n-   procedure Check_Body_For_Inlining (N : Node_Id; P : Entity_Id) is\n+   procedure Check_Package_Body_For_Inlining (N : Node_Id; P : Entity_Id) is\n       Bname : Unit_Name_Type;\n       E     : Entity_Id;\n       OK    : Boolean;\n@@ -2667,7 +2667,7 @@ package body Inline is\n             Next_Entity (E);\n          end loop;\n       end if;\n-   end Check_Body_For_Inlining;\n+   end Check_Package_Body_For_Inlining;\n \n    --------------------\n    -- Cleanup_Scopes --"}, {"sha": "e8b1c0134de6a1043430c8221309c8d98f250f49", "filename": "gcc/ada/inline.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Finline.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Finline.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.ads?ref=1773d80bb69879c5460954c729b3c254cb002426", "patch": "@@ -162,10 +162,11 @@ package Inline is\n    --  If a subprogram has pragma Inline and inlining is active, use generic\n    --  machinery to build an unexpanded body for the subprogram. This body is\n    --  subsequently used for inline expansions at call sites. If subprogram can\n-   --  be inlined (depending on size and nature of local declarations) this\n-   --  function returns true. Otherwise subprogram body is treated normally.\n-   --  If proper warnings are enabled and the subprogram contains a construct\n-   --  that cannot be inlined, the offending construct is flagged accordingly.\n+   --  be inlined (depending on size and nature of local declarations) the\n+   --  template body is created. Otherwise subprogram body is treated normally\n+   --  and calls are not inlined in the frontend.  If proper warnings are\n+   --  enabled and the subprogram contains a construct that cannot be inlined,\n+   --  the problematic construct is flagged accordingly.\n \n    procedure Cannot_Inline\n      (Msg        : String;\n@@ -209,7 +210,7 @@ package Inline is\n    --  cases documented in Check_Body_To_Inline) then build the body-to-inline\n    --  associated with N and attach it to the declaration node of Spec_Id.\n \n-   procedure Check_Body_For_Inlining (N : Node_Id; P : Entity_Id);\n+   procedure Check_Package_Body_For_Inlining (N : Node_Id; P : Entity_Id);\n    --  If front-end inlining is enabled and a package declaration contains\n    --  inlined subprograms, load and compile the package body to collect the\n    --  bodies of these subprograms, so they are available to inline calls."}, {"sha": "d5de7980d77dae7c0f0a9b6ea5d1a95c59ded24d", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=1773d80bb69879c5460954c729b3c254cb002426", "patch": "@@ -1495,7 +1495,8 @@ package Opt is\n    Uneval_Old : Character := 'E';\n    --  GNAT\n    --  Set to 'E'/'W'/'A' for use of Error/Warn/Allow in a valid pragma\n-   --  Unevaluated_Use_Of_Old.\n+   --  Unevaluated_Use_Of_Old. Default in the absence of the pragma is 'E'\n+   --  for the RM default behavior of giving an error.\n \n    Unique_Error_Tag : Boolean := Tag_Errors;\n    --  GNAT"}, {"sha": "6c3b72df87ec9439acd02ea1d6ff145931c33b9b", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=1773d80bb69879c5460954c729b3c254cb002426", "patch": "@@ -412,7 +412,8 @@ package body Sem_Attr is\n       procedure Uneval_Old_Msg;\n       --  Called when Loop_Entry or Old is used in a potentially unevaluated\n       --  expression. Generates appropriate message or warning depending on\n-      --  the setting of Opt.Uneval_Old.\n+      --  the setting of Opt.Uneval_Old (or flags in an N_Aspect_Specification\n+      --  node in the aspect case).\n \n       procedure Unexpected_Argument (En : Node_Id);\n       --  Signal unexpected attribute argument (En is the argument)\n@@ -2275,8 +2276,40 @@ package body Sem_Attr is\n       --------------------\n \n       procedure Uneval_Old_Msg is\n+         Uneval_Old_Setting : Character := Opt.Uneval_Old;\n+         Prag               : Node_Id;\n+\n       begin\n-         case Uneval_Old is\n+         --  If from aspect, then Uneval_Old_Setting comes from flags in the\n+         --  N_Aspect_Specification node that corresponds to the attribute.\n+\n+         --  First find the pragma in which we appear (note that at this stage,\n+         --  even if we appeared originally within an aspect specification, we\n+         --  are now within the corresponding pragma).\n+\n+         Prag := N;\n+         loop\n+            Prag := Parent (Prag);\n+            exit when No (Prag) or else Nkind (Prag) = N_Pragma;\n+         end loop;\n+\n+         --  If we did not find the pragma, that's odd, just consider it a\n+         --  case where we use Opt.Uneval_Old for further processing. Perhaps\n+         --  this can come from some previous error.\n+\n+         if Present (Prag) and then From_Aspect_Specification (Prag) then\n+            if Uneval_Old_Accept (Corresponding_Aspect (Prag)) then\n+               Uneval_Old_Setting := 'A';\n+            elsif Uneval_Old_Warn (Corresponding_Aspect (Prag)) then\n+               Uneval_Old_Setting := 'W';\n+            else\n+               Uneval_Old_Setting := 'E';\n+            end if;\n+         end if;\n+\n+         --  Processing depends on the setting of Uneval_Old\n+\n+         case Uneval_Old_Setting is\n             when 'E' =>\n                Error_Attr_P\n                  (\"prefix of attribute % that is potentially \""}, {"sha": "a8e0078c1f2f7044a152ff00eb708b0bf045bc1c", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=1773d80bb69879c5460954c729b3c254cb002426", "patch": "@@ -1209,7 +1209,7 @@ package body Sem_Ch10 is\n             Save_Style_Check_Options (Options);\n             Reset_Style_Check_Options;\n             Opt.Warning_Mode := Suppress;\n-            Check_Body_For_Inlining (N, Defining_Entity (Unit_Node));\n+            Check_Package_Body_For_Inlining (N, Defining_Entity (Unit_Node));\n \n             Reset_Style_Check_Options;\n             Set_Style_Check_Options (Options);"}, {"sha": "f1a9f1004d1bb2bec52a68f533c25751a6f92904", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=1773d80bb69879c5460954c729b3c254cb002426", "patch": "@@ -1544,6 +1544,19 @@ package body Sem_Ch13 is\n             Set_Entity (Aspect, E);\n             Ent := New_Occurrence_Of (E, Sloc (Id));\n \n+            --  Capture setting of Opt.Uneval_Old\n+\n+            case Opt.Uneval_Old is\n+               when 'A' =>\n+                  Set_Uneval_Old_Accept (Aspect);\n+               when 'E' =>\n+                  null;\n+               when 'W' =>\n+                  Set_Uneval_Old_Warn (Aspect);\n+               when others =>\n+                  raise Program_Error;\n+            end case;\n+\n             --  Check for duplicate aspect. Note that the Comes_From_Source\n             --  test allows duplicate Pre/Post's that we generate internally\n             --  to escape being flagged here."}, {"sha": "aca92b390b552a169e72a961c823bcaeac9b7498", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=1773d80bb69879c5460954c729b3c254cb002426", "patch": "@@ -3164,6 +3164,22 @@ package body Sinfo is\n       return Node3 (N);\n    end Type_Definition;\n \n+   function Uneval_Old_Accept\n+     (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      return Flag13 (N);\n+   end Uneval_Old_Accept;\n+\n+   function Uneval_Old_Warn\n+     (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      return Flag18 (N);\n+   end Uneval_Old_Warn;\n+\n    function Unit\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -6347,6 +6363,22 @@ package body Sinfo is\n       Set_Elist3 (N, Val); -- semantic field, no parent set\n    end Set_TSS_Elist;\n \n+   procedure Set_Uneval_Old_Accept\n+     (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      Set_Flag13 (N, Val);\n+   end Set_Uneval_Old_Accept;\n+\n+   procedure Set_Uneval_Old_Warn\n+     (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Aspect_Specification);\n+      Set_Flag18 (N, Val);\n+   end Set_Uneval_Old_Warn;\n+\n    procedure Set_Type_Definition\n       (N : Node_Id; Val : Node_Id) is\n    begin"}, {"sha": "6f5b2a9444016713b5b03c65cdfc25af91178e29", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 37, "deletions": 4, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1773d80bb69879c5460954c729b3c254cb002426/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=1773d80bb69879c5460954c729b3c254cb002426", "patch": "@@ -2090,6 +2090,21 @@ package Sinfo is\n    --    if there are no type support subprograms for the type or if the freeze\n    --    node is not for a type.\n \n+   --  Uneval_Old_Accept (Flag13-Sem)\n+   --    Present in N_Aspect_Specification nodes. Set if Opt.Uneval_Old is set\n+   --    to 'A' (accept) at the point where the aspect specification node is\n+   --    encountered. It is this setting that is relevant, rather than the\n+   --    setting at the point where a contract is finally analyzed after the\n+   --    usual delay till the freeze point.\n+\n+   --  Uneval_Old_Warn (Flag18-Sem)\n+   --    Present in N_Aspect_Specification nodes. Set if Opt.Uneval_Old is set\n+   --    to 'W' (warn) at the point where the aspect specification node is\n+   --    encountered. It is this setting that is relevant, rather than the\n+   --    setting at the point where a contract is finally analyzed after the\n+   --    usual delay till the freeze point. If neither Uneval_Old_Accept nor\n+   --    Uneval_Old_Warn is set, then the default Error mode applies.\n+\n    --  Unreferenced_In_Spec (Flag7-Sem)\n    --    Present in N_With_Clause nodes. Set if the with clause is on the\n    --    package or subprogram spec where the main unit is the corresponding\n@@ -7113,14 +7128,16 @@ package Sinfo is\n       --  Aspect_Rep_Item (Node2-Sem)\n       --  Expression (Node3) Aspect_Definition (set to Empty if none)\n       --  Entity (Node4-Sem) entity to which the aspect applies\n-      --  Class_Present (Flag6) Set if 'Class present\n       --  Next_Rep_Item (Node5-Sem)\n-      --  Split_PPC (Flag17) Set if split pre/post attribute\n-      --  Is_Boolean_Aspect (Flag16-Sem)\n+      --  Class_Present (Flag6) Set if 'Class present\n+      --  Is_Ignored (Flag9-Sem)\n       --  Is_Checked (Flag11-Sem)\n+      --  Uneval_Old_Accept (Flag13-Sem)\n       --  Is_Delayed_Aspect (Flag14-Sem)\n       --  Is_Disabled (Flag15-Sem)\n-      --  Is_Ignored (Flag9-Sem)\n+      --  Is_Boolean_Aspect (Flag16-Sem)\n+      --  Split_PPC (Flag17) Set if split pre/post attribute\n+      --  Uneval_Old_Warn (Flag18-Sem)\n \n       --  Note: Aspect_Specification is an Ada 2012 feature\n \n@@ -9609,6 +9626,12 @@ package Sinfo is\n    function Type_Definition\n      (N : Node_Id) return Node_Id;    -- Node3\n \n+   function Uneval_Old_Accept\n+     (N : Node_Id) return Boolean;    -- Flag13\n+\n+   function Uneval_Old_Warn\n+     (N : Node_Id) return Boolean;    -- Flag18\n+\n    function Unit\n      (N : Node_Id) return Node_Id;    -- Node2\n \n@@ -10626,6 +10649,12 @@ package Sinfo is\n    procedure Set_Type_Definition\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n+   procedure Set_Uneval_Old_Accept\n+     (N : Node_Id; Val : Boolean := True);    -- Flag13\n+\n+   procedure Set_Uneval_Old_Warn\n+     (N : Node_Id; Val : Boolean := True);    -- Flag18\n+\n    procedure Set_Unit\n      (N : Node_Id; Val : Node_Id);            -- Node2\n \n@@ -12744,6 +12773,8 @@ package Sinfo is\n    pragma Inline (Treat_Fixed_As_Integer);\n    pragma Inline (TSS_Elist);\n    pragma Inline (Type_Definition);\n+   pragma Inline (Uneval_Old_Accept);\n+   pragma Inline (Uneval_Old_Warn);\n    pragma Inline (Unit);\n    pragma Inline (Uninitialized_Variable);\n    pragma Inline (Unknown_Discriminants_Present);\n@@ -13077,6 +13108,8 @@ package Sinfo is\n    pragma Inline (Set_Triggering_Alternative);\n    pragma Inline (Set_Triggering_Statement);\n    pragma Inline (Set_Type_Definition);\n+   pragma Inline (Set_Uneval_Old_Accept);\n+   pragma Inline (Set_Uneval_Old_Warn);\n    pragma Inline (Set_Unit);\n    pragma Inline (Set_Uninitialized_Variable);\n    pragma Inline (Set_Unknown_Discriminants_Present);"}]}