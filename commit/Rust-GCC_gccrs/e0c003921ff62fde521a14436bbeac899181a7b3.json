{"sha": "e0c003921ff62fde521a14436bbeac899181a7b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBjMDAzOTIxZmY2MmZkZTUyMWExNDQzNmJiZWFjODk5MTgxYTdiMw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-06-20T15:10:34Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-06-20T15:10:34Z"}, "message": "i386.c (pentium4_cost): Increase \"lea\" cost from 1 to 3.\n\n\n\t* config/i386/i386.c (pentium4_cost): Increase \"lea\" cost from 1 to 3.\n\t(ix86_rtx_costs) <ASHIFT, PLUS>: Consider ix86_cost->lea even when\n\tTARGET_DECOMPOSE_LEA.\n\nFrom-SVN: r83413", "tree": {"sha": "656ceab6687e65dd8b94a6dda37257ce017a376b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/656ceab6687e65dd8b94a6dda37257ce017a376b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0c003921ff62fde521a14436bbeac899181a7b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c003921ff62fde521a14436bbeac899181a7b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0c003921ff62fde521a14436bbeac899181a7b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c003921ff62fde521a14436bbeac899181a7b3/comments", "author": null, "committer": null, "parents": [{"sha": "ce70456bd6bebd23787157dd3f0cc65eb4ad381d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce70456bd6bebd23787157dd3f0cc65eb4ad381d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce70456bd6bebd23787157dd3f0cc65eb4ad381d"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "e1bda733447616190dd987ed1785c08da276ae0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c003921ff62fde521a14436bbeac899181a7b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c003921ff62fde521a14436bbeac899181a7b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0c003921ff62fde521a14436bbeac899181a7b3", "patch": "@@ -1,3 +1,9 @@\n+2004-06-20  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* config/i386/i386.c (pentium4_cost): Increase \"lea\" cost from 1 to 3.\n+\t(ix86_rtx_costs) <ASHIFT, PLUS>: Consider ix86_cost->lea even when\n+\tTARGET_DECOMPOSE_LEA.\n+\n 2004-06-20  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.h (add_decl_stmt): Move to cp-tree.h."}, {"sha": "83dcc9e0ee71895d2027f8a8ee26a14bc98791bf", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c003921ff62fde521a14436bbeac899181a7b3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c003921ff62fde521a14436bbeac899181a7b3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e0c003921ff62fde521a14436bbeac899181a7b3", "patch": "@@ -417,7 +417,7 @@ struct processor_costs k8_cost = {\n static const\n struct processor_costs pentium4_cost = {\n   1,\t\t\t\t\t/* cost of an add instruction */\n-  1,\t\t\t\t\t/* cost of a lea instruction */\n+  3,\t\t\t\t\t/* cost of a lea instruction */\n   4,\t\t\t\t\t/* variable shift costs */\n   4,\t\t\t\t\t/* constant shift costs */\n   {15, 15, 15, 15, 15},\t\t\t/* cost of starting a multiply */\n@@ -14904,7 +14904,6 @@ ix86_rtx_costs (rtx x, int code, int outer_code, int *total)\n \t      return false;\n \t    }\n \t  if ((value == 2 || value == 3)\n-\t      && !TARGET_DECOMPOSE_LEA\n \t      && ix86_cost->lea <= ix86_cost->shift_const)\n \t    {\n \t      *total = COSTS_N_INSNS (ix86_cost->lea);\n@@ -15007,8 +15006,7 @@ ix86_rtx_costs (rtx x, int code, int outer_code, int *total)\n     case PLUS:\n       if (FLOAT_MODE_P (mode))\n \t*total = COSTS_N_INSNS (ix86_cost->fadd);\n-      else if (!TARGET_DECOMPOSE_LEA\n-\t       && GET_MODE_CLASS (mode) == MODE_INT\n+      else if (GET_MODE_CLASS (mode) == MODE_INT\n \t       && GET_MODE_BITSIZE (mode) <= GET_MODE_BITSIZE (Pmode))\n \t{\n \t  if (GET_CODE (XEXP (x, 0)) == PLUS"}]}