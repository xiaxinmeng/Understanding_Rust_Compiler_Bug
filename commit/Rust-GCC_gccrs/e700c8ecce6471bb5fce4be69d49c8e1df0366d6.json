{"sha": "e700c8ecce6471bb5fce4be69d49c8e1df0366d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcwMGM4ZWNjZTY0NzFiYjVmY2U0YmU2OWQ0OWM4ZTFkZjAzNjZkNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-26T06:41:41Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-26T06:41:41Z"}, "message": "(push_init_level): Align here for element of record.\n\n(process_init_element): Not here (was before call to push_init_level).\n\nFrom-SVN: r5891", "tree": {"sha": "6671a0b1755598e71334724b221f8d021cd19bd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6671a0b1755598e71334724b221f8d021cd19bd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e700c8ecce6471bb5fce4be69d49c8e1df0366d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e700c8ecce6471bb5fce4be69d49c8e1df0366d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e700c8ecce6471bb5fce4be69d49c8e1df0366d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e700c8ecce6471bb5fce4be69d49c8e1df0366d6/comments", "author": null, "committer": null, "parents": [{"sha": "e174accc45d14735a11d8c7abd37c674b2f4f431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e174accc45d14735a11d8c7abd37c674b2f4f431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e174accc45d14735a11d8c7abd37c674b2f4f431"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "3c6f08bd991aaf61d6cc01da562969efadc40fe7", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e700c8ecce6471bb5fce4be69d49c8e1df0366d6/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e700c8ecce6471bb5fce4be69d49c8e1df0366d6/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=e700c8ecce6471bb5fce4be69d49c8e1df0366d6", "patch": "@@ -5018,6 +5018,24 @@ push_init_level (implicit)\n \tbreak;\n     }\n \n+  /* Structure elements may require alignment.  Do this now\n+     if necessary for the subaggregate.  */\n+  if (constructor_incremental && TREE_CODE (constructor_type) == RECORD_TYPE)\n+    {\n+      /* Advance to offset of this element.  */\n+      if (! tree_int_cst_equal (constructor_bit_index,\n+\t\t\t\tDECL_FIELD_BITPOS (constructor_fields)))\n+\t{\n+\t  int next = (TREE_INT_CST_LOW\n+\t\t      (DECL_FIELD_BITPOS (constructor_fields))\n+\t\t      / BITS_PER_UNIT);\n+\t  int here = (TREE_INT_CST_LOW (constructor_bit_index)\n+\t\t      / BITS_PER_UNIT);\n+\n+\t  assemble_zeros (next - here);\n+\t}\n+    }\n+\n   p = (struct constructor_stack *) xmalloc (sizeof (struct constructor_stack));\n   p->type = constructor_type;\n   p->fields = constructor_fields;\n@@ -5831,23 +5849,6 @@ process_init_element (value)\n \t\t   && (fieldcode == RECORD_TYPE || fieldcode == ARRAY_TYPE\n \t\t       || fieldcode == UNION_TYPE))\n \t    {\n-\t      /* Structure elements may require alignment.  Do this now\n-\t\t if necessary for the subaggregate.  */\n-\t      if (constructor_incremental)\n-\t\t{\n-\t\t  /* Advance to offset of this element.  */\n-\t\t  if (! tree_int_cst_equal (constructor_bit_index,\n-\t\t\t\t\t    DECL_FIELD_BITPOS (constructor_fields)))\n-\t\t    {\n-\t\t      int next = (TREE_INT_CST_LOW\n-\t\t\t\t  (DECL_FIELD_BITPOS (constructor_fields))\n-\t\t\t\t  / BITS_PER_UNIT);\n-\t\t      int here = (TREE_INT_CST_LOW (constructor_bit_index)\n-\t\t\t\t  / BITS_PER_UNIT);\n-\n-\t\t      assemble_zeros (next - here);\n-\t\t    }\n-\t\t}\n \t      push_init_level (1);\n \t      continue;\n \t    }"}]}