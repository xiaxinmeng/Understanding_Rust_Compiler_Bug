{"sha": "e1d818f7eabdac4b3a814866fe05e4f2a82860ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFkODE4ZjdlYWJkYWM0YjNhODE0ODY2ZmUwNWU0ZjJhODI4NjBlZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-07-22T11:35:09Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-07-22T11:35:09Z"}, "message": "re PR fortran/45019 (Aliasing of TARGET dummy argument not detected correctly)\n\n2010-07-22  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/45019\n        * dependency.c (gfc_check_dependency): Add argument alising\n        * check.\n        * symbol.c (gfc_symbols_could_alias): Add argument alising\n        * check.\n\n2010-07-22  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/45019\n        * gfortran.dg/aliasing_dummy_5.f90: New.\n\nFrom-SVN: r162410", "tree": {"sha": "1c81ae58ff59910b6d357451fdc4a5f89c2528ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c81ae58ff59910b6d357451fdc4a5f89c2528ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1d818f7eabdac4b3a814866fe05e4f2a82860ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1d818f7eabdac4b3a814866fe05e4f2a82860ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1d818f7eabdac4b3a814866fe05e4f2a82860ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/comments", "author": null, "committer": null, "parents": [{"sha": "ba3ff5c2dbb31cd2e058b4a830eaac1df668ca5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3ff5c2dbb31cd2e058b4a830eaac1df668ca5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba3ff5c2dbb31cd2e058b4a830eaac1df668ca5b"}], "stats": {"total": 92, "additions": 91, "deletions": 1}, "files": [{"sha": "de6e55f6377a7204303e35f626a3569704d8ee89", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e1d818f7eabdac4b3a814866fe05e4f2a82860ed", "patch": "@@ -1,3 +1,9 @@\n+2010-07-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/45019\n+\t* dependency.c (gfc_check_dependency): Add argument alising check.\n+\t* symbol.c (gfc_symbols_could_alias): Add argument alising check.\n+\n 2010-07-22  Daniel Kraft  <d@domob.eu>\n \n \t* trans-stmt.c (gfc_trans_return): Put back in the handling of se.post,"}, {"sha": "c21a2e43588be642f8487f9a75ca7e4e688f40e5", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=e1d818f7eabdac4b3a814866fe05e4f2a82860ed", "patch": "@@ -807,6 +807,19 @@ gfc_check_dependency (gfc_expr *expr1, gfc_expr *expr2, bool identical)\n \n \t      return 1;\n \t    }\n+\t  else\n+\t    {\n+\t      gfc_symbol *sym1 = expr1->symtree->n.sym;\n+\t      gfc_symbol *sym2 = expr2->symtree->n.sym;\n+\t      if (sym1->attr.target && sym2->attr.target\n+\t\t  && ((sym1->attr.dummy && !sym1->attr.contiguous\n+\t\t       && (!sym1->attr.dimension\n+\t\t           || sym2->as->type == AS_ASSUMED_SHAPE))\n+\t\t      || (sym2->attr.dummy && !sym2->attr.contiguous\n+\t\t\t  && (!sym2->attr.dimension\n+\t\t\t      || sym2->as->type == AS_ASSUMED_SHAPE))))\n+\t\treturn 1;\n+\t    }\n \n \t  /* Otherwise distinct symbols have no dependencies.  */\n \t  return 0;"}, {"sha": "c12ea23a05e9b76f80e66fc54c905072618e66cd", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=e1d818f7eabdac4b3a814866fe05e4f2a82860ed", "patch": "@@ -2811,6 +2811,17 @@ gfc_symbols_could_alias (gfc_symbol *lsym, gfc_symbol *rsym)\n   if (lsym->attr.allocatable && rsym->attr.pointer)\n     return 1;\n \n+  /* Special case: Argument association, cf. F90 12.4.1.6, F2003 12.4.1.7\n+     and F2008 12.5.2.13 items 3b and 4b. The pointer case (a) is already\n+     checked above.  */\n+  if (lsym->attr.target && rsym->attr.target\n+      && ((lsym->attr.dummy && !lsym->attr.contiguous\n+\t   && (!lsym->attr.dimension || lsym->as->type == AS_ASSUMED_SHAPE))\n+\t  || (rsym->attr.dummy && !rsym->attr.contiguous\n+\t      && (!rsym->attr.dimension\n+\t\t  || rsym->as->type == AS_ASSUMED_SHAPE))))\n+    return 1;\n+\n   return 0;\n }\n "}, {"sha": "7a454a94706499929f86ae8b6eb61647f1ce7d45", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e1d818f7eabdac4b3a814866fe05e4f2a82860ed", "patch": "@@ -1,3 +1,8 @@\n+2010-07-22  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/45019\n+\t* gfortran.dg/aliasing_dummy_5.f90: New.\n+\n 2010-07-22  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/43698\n@@ -6,7 +11,7 @@\n 2010-07-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/44929\n-    * Revert my commit r162325 for this PR.\n+\t* Revert my commit r162325 for this PR.\n \n 2010-07-21  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "379fbd7f8f9d3c4cf252638a229869282ad54bea", "filename": "gcc/testsuite/gfortran.dg/aliasing_dummy_5.f90", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ftestsuite%2Fgfortran.dg%2Faliasing_dummy_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1d818f7eabdac4b3a814866fe05e4f2a82860ed/gcc%2Ftestsuite%2Fgfortran.dg%2Faliasing_dummy_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Faliasing_dummy_5.f90?ref=e1d818f7eabdac4b3a814866fe05e4f2a82860ed", "patch": "@@ -0,0 +1,55 @@\n+! { dg-do run }\n+! \n+! PR fortran/45019\n+!\n+! Check that the compiler knows that\n+! \"arg\" and \"arr\" can alias.\n+!\n+MODULE m\n+  IMPLICIT NONE\n+  INTEGER, TARGET :: arr(3)\n+CONTAINS\n+  SUBROUTINE foobar (arg)\n+    INTEGER, TARGET :: arg(:)\n+    arr(2:3) = arg(1:2)\n+  END SUBROUTINE foobar\n+END MODULE m\n+\n+PROGRAM main\n+  USE m\n+  IMPLICIT NONE\n+  arr = (/ 1, 2, 3 /)\n+  CALL bar(arr)\n+  if (any (arr /= (/ 1, 1, 2 /))) call abort()\n+  CALL test()\n+contains\n+  subroutine bar(x)\n+    INTEGER, TARGET :: x(:)\n+    CALL foobar (x)\n+  end subroutine bar\n+END PROGRAM main\n+\n+MODULE m2\n+  IMPLICIT NONE\n+  INTEGER, TARGET :: arr(3)\n+CONTAINS\n+   SUBROUTINE foobar (arg)\n+    INTEGER, TARGET :: arg(:)\n+    arr(1) = 5\n+    arg(1) = 6\n+    if (arr(1) == 5) call abort()\n+  END SUBROUTINE foobar\n+END MODULE m2\n+subroutine test\n+  USE m2\n+  IMPLICIT NONE\n+  arr = (/ 1, 2, 3 /)\n+  CALL bar(arr)\n+contains\n+   subroutine bar(x)\n+    INTEGER, TARGET :: x(:)\n+    CALL foobar (x)\n+  end subroutine bar\n+END subroutine test\n+\n+! { dg-final { cleanup-modules \"m m2\" } }"}]}