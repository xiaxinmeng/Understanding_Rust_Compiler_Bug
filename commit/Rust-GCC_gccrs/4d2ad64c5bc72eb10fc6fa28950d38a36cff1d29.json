{"sha": "4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQyYWQ2NGM1YmM3MmViMTBmYzZmYTI4OTUwZDM4YTM2Y2ZmMWQyOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-07-28T20:32:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-07-28T20:32:32Z"}, "message": "re PR ada/36957 (ACATS ce3801b ICE emit_move_insn, at expr.c:3381 post tuple merge)\n\n2008-07-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/36957\n\t* tree-flow.h (tree_ssa_useless_type_conversion): Remove.\n\t(useless_type_conversion_p): Remove.\n\t(types_compatible_p): Remove.\n\t* gimple.h (tree_ssa_useless_type_conversion): Declare.\n\t(useless_type_conversion_p): Declare.\n\t(types_compatible_p): Declare.\n\t(gimple_expr_type): Return the base type only if it is\n\ttrivially convertible to the subtype.\n\nFrom-SVN: r138217", "tree": {"sha": "27bc737b856ed5e38f37234fa34ae7886bec905b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27bc737b856ed5e38f37234fa34ae7886bec905b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6e377f82ecead63e8691b1d8349aa2c7811e02f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e377f82ecead63e8691b1d8349aa2c7811e02f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6e377f82ecead63e8691b1d8349aa2c7811e02f"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "aa4d3b2d9837eaa3b647dc2745158763a6c49e2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29", "patch": "@@ -1,3 +1,15 @@\n+2008-07-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36957\n+\t* tree-flow.h (tree_ssa_useless_type_conversion): Remove.\n+\t(useless_type_conversion_p): Remove.\n+\t(types_compatible_p): Remove.\n+\t* gimple.h (tree_ssa_useless_type_conversion): Declare.\n+\t(useless_type_conversion_p): Declare.\n+\t(types_compatible_p): Declare.\n+\t(gimple_expr_type): Return the base type only if it is\n+\ttrivially convertible to the subtype.\n+\n 2008-07-28  Andreas Tobler  <a.tobler@schweiz.org>\n \n \t* configure.ac: Use the m4_do macro to concatenate the warnings into"}, {"sha": "0c11f3ebfa781be3a7b73119cccca584f8935d16", "filename": "gcc/gimple.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29", "patch": "@@ -1007,6 +1007,11 @@ extern bool validate_gimple_arglist (const_gimple, ...);\n /* In tree-ssa-operands.c  */\n extern void gimple_add_to_addresses_taken (gimple, tree);\n \n+/* In tree-ssa.c  */\n+extern bool tree_ssa_useless_type_conversion (tree);\n+extern bool useless_type_conversion_p (tree, tree);\n+extern bool types_compatible_p (tree, tree);\n+\n /* Return the code for GIMPLE statement G.  */\n \n static inline enum gimple_code\n@@ -1394,7 +1399,9 @@ gimple_expr_type (const_gimple stmt)\n \t convertible to one of its sub-types.  So always return\n \t the base type here.  */\n       if (INTEGRAL_TYPE_P (type)\n-\t  && TREE_TYPE (type))\n+\t  && TREE_TYPE (type)\n+\t  /* But only if they are trivially convertible.  */\n+\t  && useless_type_conversion_p (type, TREE_TYPE (type)))\n \ttype = TREE_TYPE (type);\n       return type;\n     }"}, {"sha": "1e94037f7376033166d223f4c2e0cb3e09e4302f", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=4d2ad64c5bc72eb10fc6fa28950d38a36cff1d29", "patch": "@@ -867,9 +867,6 @@ extern void redirect_edge_var_map_destroy (void);\n \n extern edge ssa_redirect_edge (edge, basic_block);\n extern void flush_pending_stmts (edge);\n-extern bool tree_ssa_useless_type_conversion (tree);\n-extern bool useless_type_conversion_p (tree, tree);\n-extern bool types_compatible_p (tree, tree);\n extern void verify_ssa (bool);\n extern void delete_tree_ssa (void);\n extern void walk_use_def_chains (tree, walk_use_def_chains_fn, void *, bool);"}]}