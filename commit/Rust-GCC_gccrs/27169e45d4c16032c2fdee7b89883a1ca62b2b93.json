{"sha": "27169e45d4c16032c2fdee7b89883a1ca62b2b93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcxNjllNDVkNGMxNjAzMmMyZmRlZTdiODk4ODNhMWNhNjJiMmI5Mw==", "commit": {"author": {"name": "Jiong Wang", "email": "jiong.wang@arm.com", "date": "2017-01-20T00:05:30Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2017-01-20T00:05:30Z"}, "message": "[AArch64][2/4] Generate dwarf information for -msign-return-address\n\ngcc/\n\t* reg-notes.def (CFA_TOGGLE_RA_MANGLE): New reg-note.\n\t* combine-stack-adj.c (no_unhandled_cfa): Handle\n\tREG_CFA_TOGGLE_RA_MANGLE.\n\t* dwarf2cfi.c (dwarf2out_frame_debug): Handle REG_CFA_TOGGLE_RA_MANGLE.\n\t* config/aarch64/aarch64.c (aarch64_expand_prologue): Generates DWARF\n\tinfo for return address signing.\n\t(aarch64_expand_epilogue): Likewise.\n\nFrom-SVN: r244667", "tree": {"sha": "973ab061acd52a557d12c128f6752e9cf448da42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/973ab061acd52a557d12c128f6752e9cf448da42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27169e45d4c16032c2fdee7b89883a1ca62b2b93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27169e45d4c16032c2fdee7b89883a1ca62b2b93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27169e45d4c16032c2fdee7b89883a1ca62b2b93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27169e45d4c16032c2fdee7b89883a1ca62b2b93/comments", "author": null, "committer": null, "parents": [{"sha": "db58fd8954f5dfd868dbed110f2c8a04bb4b0753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db58fd8954f5dfd868dbed110f2c8a04bb4b0753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db58fd8954f5dfd868dbed110f2c8a04bb4b0753"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "2abfea0f03e91e371a6f4a1be1d6ebca0b613bc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27169e45d4c16032c2fdee7b89883a1ca62b2b93", "patch": "@@ -1,3 +1,13 @@\n+2017-01-19  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* reg-notes.def (CFA_TOGGLE_RA_MANGLE): New reg-note.\n+\t* combine-stack-adj.c (no_unhandled_cfa): Handle\n+\tREG_CFA_TOGGLE_RA_MANGLE.\n+\t* dwarf2cfi.c (dwarf2out_frame_debug): Handle REG_CFA_TOGGLE_RA_MANGLE.\n+\t* config/aarch64/aarch64.c (aarch64_expand_prologue): Generates DWARF\n+\tinfo for return address signing.\n+\t(aarch64_expand_epilogue): Likewise.\n+\n 2017-01-19  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64-opts.h (aarch64_function_type): New enum."}, {"sha": "9ec14a3e44363f35f6419c38233ce5eebddd3458", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=27169e45d4c16032c2fdee7b89883a1ca62b2b93", "patch": "@@ -208,6 +208,7 @@ no_unhandled_cfa (rtx_insn *insn)\n       case REG_CFA_SET_VDRAP:\n       case REG_CFA_WINDOW_SAVE:\n       case REG_CFA_FLUSH_QUEUE:\n+      case REG_CFA_TOGGLE_RA_MANGLE:\n \treturn false;\n       }\n "}, {"sha": "c3992d8aceb9d7b52082f5ac8856a37ec2bc91cc", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=27169e45d4c16032c2fdee7b89883a1ca62b2b93", "patch": "@@ -3559,7 +3559,11 @@ aarch64_expand_prologue (void)\n \n   /* Sign return address for functions.  */\n   if (aarch64_return_address_signing_enabled ())\n-    emit_insn (gen_pacisp ());\n+    {\n+      insn = emit_insn (gen_pacisp ());\n+      add_reg_note (insn, REG_CFA_TOGGLE_RA_MANGLE, const0_rtx);\n+      RTX_FRAME_RELATED_P (insn) = 1;\n+    }\n \n   if (flag_stack_usage_info)\n     current_function_static_stack_size = frame_size;\n@@ -3714,7 +3718,11 @@ aarch64_expand_epilogue (bool for_sibcall)\n     */\n   if (aarch64_return_address_signing_enabled ()\n       && (for_sibcall || !TARGET_ARMV8_3 || crtl->calls_eh_return))\n-    emit_insn (gen_autisp ());\n+    {\n+      insn = emit_insn (gen_autisp ());\n+      add_reg_note (insn, REG_CFA_TOGGLE_RA_MANGLE, const0_rtx);\n+      RTX_FRAME_RELATED_P (insn) = 1;\n+    }\n \n   /* Stack adjustment for exception handler.  */\n   if (crtl->calls_eh_return)"}, {"sha": "2a527c9fecab091dccb417492e5dbb2ade244be2", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=27169e45d4c16032c2fdee7b89883a1ca62b2b93", "patch": "@@ -2098,7 +2098,9 @@ dwarf2out_frame_debug (rtx_insn *insn)\n \thandled_one = true;\n \tbreak;\n \n+      case REG_CFA_TOGGLE_RA_MANGLE:\n       case REG_CFA_WINDOW_SAVE:\n+\t/* We overload both of these operations onto the same DWARF opcode.  */\n \tdwarf2out_frame_debug_cfa_window_save ();\n \thandled_one = true;\n \tbreak;"}, {"sha": "175da119b6a534b04bd154f2c69dd087afd474ea", "filename": "gcc/reg-notes.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2Freg-notes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27169e45d4c16032c2fdee7b89883a1ca62b2b93/gcc%2Freg-notes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-notes.def?ref=27169e45d4c16032c2fdee7b89883a1ca62b2b93", "patch": "@@ -177,6 +177,11 @@ REG_NOTE (CFA_WINDOW_SAVE)\n    the rest of the compiler as a CALL_INSN.  */\n REG_NOTE (CFA_FLUSH_QUEUE)\n \n+/* Attached to insns that are RTX_FRAME_RELATED_P, toggling the mangling status\n+   of return address.  Currently it's only used by AArch64.  The argument is\n+   ignored.  */\n+REG_NOTE (CFA_TOGGLE_RA_MANGLE)\n+\n /* Indicates what exception region an INSN belongs in.  This is used\n    to indicate what region to which a call may throw.  REGION 0\n    indicates that a call cannot throw at all.  REGION -1 indicates"}]}