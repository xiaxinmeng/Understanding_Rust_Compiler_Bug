{"sha": "d84a12e2de3b034e416eba9f808be56e309bc30d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg0YTEyZTJkZTNiMDM0ZTQxNmViYTlmODA4YmU1NmUzMDliYzMwZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-17T21:50:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-17T21:50:10Z"}, "message": "New testcase for x86 XFmode problems.\n\nFrom-SVN: r18051", "tree": {"sha": "268785ac20d85e35c8250dd8494accdd79976bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/268785ac20d85e35c8250dd8494accdd79976bc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d84a12e2de3b034e416eba9f808be56e309bc30d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84a12e2de3b034e416eba9f808be56e309bc30d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d84a12e2de3b034e416eba9f808be56e309bc30d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84a12e2de3b034e416eba9f808be56e309bc30d/comments", "author": null, "committer": null, "parents": [{"sha": "979c1a1757fb266f90fb8888d6499783d81f5a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/979c1a1757fb266f90fb8888d6499783d81f5a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/979c1a1757fb266f90fb8888d6499783d81f5a2a"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "6332b7e7e3f5858e2400db61cf048ceb2a178776", "filename": "gcc/testsuite/gcc.dg/980211-1.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d84a12e2de3b034e416eba9f808be56e309bc30d/gcc%2Ftestsuite%2Fgcc.dg%2F980211-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d84a12e2de3b034e416eba9f808be56e309bc30d/gcc%2Ftestsuite%2Fgcc.dg%2F980211-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F980211-1.c?ref=d84a12e2de3b034e416eba9f808be56e309bc30d", "patch": "@@ -0,0 +1,27 @@\n+/* Test long double on x86. */\n+\n+/* { dg-do run { target i?86-*-* } } */\n+/* { dg-options -O2 } */\n+\n+__inline int\n+__signbitl (long double __x)\n+{\n+  union { long double __l; int __i[3]; } __u = { __l: __x };\n+\n+  return (__u.__i[2] & 0x8000) != 0;\n+}\n+\n+void\n+foo (long double x, long double y)\n+{\n+  long double z = x / y;\n+  if (__signbitl (x) && __signbitl (z))\n+    abort ();\n+}\n+\n+int main()\n+{\n+  if (sizeof (long double) > sizeof (double))\n+    foo (-0.0, -1.0);\n+  return 0;\n+}"}]}