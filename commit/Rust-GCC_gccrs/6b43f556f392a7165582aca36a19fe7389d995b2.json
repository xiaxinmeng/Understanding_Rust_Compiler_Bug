{"sha": "6b43f556f392a7165582aca36a19fe7389d995b2", "node_id": "C_kwDOANBUbNoAKDZiNDNmNTU2ZjM5MmE3MTY1NTgyYWNhMzZhMTlmZTczODlkOTk1YjI", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-09-12T13:25:13Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-09-12T13:25:13Z"}, "message": "nvptx/mkoffload.cc: Warn instead of error when reverse offload is not possible\n\nReverse offload requests at least -misa=sm_35; with this patch, a warning\ninstead of an error is shown, still permitting reverse offload for all\nother configured device types. This is achieved by not calling\nGOMP_offload_register_ver (and stopping generating pointless 'static const char'\nvariables, once known.)\n\nThe tool_name as progname changes adds \"nvptx \" and \"gcn \" to the\n\"mkoffload: warning/error:\" diagnostic.\n\ngcc/ChangeLog:\n\n\t* config/nvptx/mkoffload.cc (process): Replace a fatal_error by\n\ta warning + not enabling offloading if -misa=sm_30 prevents\n\treverse offload.\n\t(main): Use tool_name as progname for diagnostic.\n\t* config/gcn/mkoffload.cc (main): Likewise.\n\nlibgomp/ChangeLog:\n\n\t* libgomp.texi (Offload-Target Specifics: nvptx): Document\n\tthat reverse offload requires >= -march=sm_35.\n\t* testsuite/libgomp.c-c++-common/requires-4.c: Build for nvptx\n\twith -misa=sm_35.\n\t* testsuite/libgomp.c-c++-common/requires-5.c: Likewise.\n\t* testsuite/libgomp.c-c++-common/requires-6.c: Likewise.\n\t* testsuite/libgomp.c-c++-common/reverse-offload-1.c: Likewise.\n\t* testsuite/libgomp.fortran/reverse-offload-1.f90: Likewise.\n\t* testsuite/libgomp.c/reverse-offload-sm30.c: New test.", "tree": {"sha": "7823adb3d376ebb0d0c71a3177ee2def6f861c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7823adb3d376ebb0d0c71a3177ee2def6f861c94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b43f556f392a7165582aca36a19fe7389d995b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b43f556f392a7165582aca36a19fe7389d995b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b43f556f392a7165582aca36a19fe7389d995b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b43f556f392a7165582aca36a19fe7389d995b2/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06b30eecdd9822842a0ff21548ab92f01adb2795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06b30eecdd9822842a0ff21548ab92f01adb2795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06b30eecdd9822842a0ff21548ab92f01adb2795"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "64037806acfc1f85568a540d57a6dcebbdf0a92a", "filename": "gcc/config/gcn/mkoffload.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b43f556f392a7165582aca36a19fe7389d995b2/gcc%2Fconfig%2Fgcn%2Fmkoffload.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b43f556f392a7165582aca36a19fe7389d995b2/gcc%2Fconfig%2Fgcn%2Fmkoffload.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fmkoffload.cc?ref=6b43f556f392a7165582aca36a19fe7389d995b2", "patch": "@@ -805,7 +805,7 @@ main (int argc, char **argv)\n   FILE *cfile = stdout;\n   const char *outname = 0;\n \n-  progname = \"mkoffload\";\n+  progname = tool_name;\n   diagnostic_initialize (global_dc, 0);\n \n   obstack_init (&files_to_cleanup);"}, {"sha": "854cd72f3c74778694dc5977b9322f7e6129d8f7", "filename": "gcc/config/nvptx/mkoffload.cc", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b43f556f392a7165582aca36a19fe7389d995b2/gcc%2Fconfig%2Fnvptx%2Fmkoffload.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b43f556f392a7165582aca36a19fe7389d995b2/gcc%2Fconfig%2Fnvptx%2Fmkoffload.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fmkoffload.cc?ref=6b43f556f392a7165582aca36a19fe7389d995b2", "patch": "@@ -324,9 +324,19 @@ process (FILE *in, FILE *out, uint32_t omp_requires)\n \t{\n \t  if (sm_ver && sm_ver[0] == '3' && sm_ver[1] == '0'\n \t      && sm_ver[2] == '\\n')\n-\t    fatal_error (input_location,\n-\t\t\t \"%<omp requires reverse_offload%> requires at least \"\n-\t\t\t \"%<sm_35%> for %<-misa=%>\");\n+\t    {\n+\t      warning_at (input_location, 0,\n+\t\t\t  \"%<omp requires reverse_offload%> requires at \"\n+\t\t\t  \"least %<sm_35%> for \"\n+\t\t\t  \"%<-foffload-options=nvptx-none=-march=%> - disabling\"\n+\t\t\t  \" offload-code generation for this device type\");\n+\t      /* As now an empty file is compiled and there is no call to\n+\t\t GOMP_offload_register_ver, this device type is effectively\n+\t\t disabled.  */\n+\t      fflush (out);\n+\t      ftruncate (fileno (out), 0);\n+\t      return;\n+\t    }\n \t  sm_ver2 = sm_ver;\n \t  version2 = version;\n \t}\n@@ -526,7 +536,7 @@ main (int argc, char **argv)\n   FILE *out = stdout;\n   const char *outname = 0;\n \n-  progname = \"mkoffload\";\n+  progname = tool_name;\n   diagnostic_initialize (global_dc, 0);\n \n   if (atexit (mkoffload_cleanup) != 0)"}, {"sha": "1f402d6df7921df34203687be1f15e9a6069cfb3", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=6b43f556f392a7165582aca36a19fe7389d995b2", "patch": "@@ -4386,6 +4386,9 @@ The implementation remark:\n @item I/O within OpenMP target regions and OpenACC parallel/kernels is supported\n       using the C library @code{printf} functions and the Fortran\n       @code{print}/@code{write} statements.\n+@item Compilation OpenMP code that contains @code{requires reverse_offload}\n+      requires at least @code{-march=sm_35}, compiling for @code{-march=sm_30}\n+      is not supported.\n @end itemize\n \n "}, {"sha": "5883eff0d9398fb80369a7b4b5f78485ee167957", "filename": "libgomp/testsuite/libgomp.c-c++-common/requires-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-4.c?ref=6b43f556f392a7165582aca36a19fe7389d995b2", "patch": "@@ -1,4 +1,5 @@\n /* { dg-additional-options \"-flto\" } */\n+/* { dg-additional-options \"-foffload-options=nvptx-none=-misa=sm_35\" { target { offload_target_nvptx } } } */\n /* { dg-additional-sources requires-4-aux.c } */\n \n /* Check no diagnostic by device-compiler's or host compiler's lto1."}, {"sha": "d43d78db6fab61cdc34804a3adf38245576f5bf5", "filename": "libgomp/testsuite/libgomp.c-c++-common/requires-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-5.c?ref=6b43f556f392a7165582aca36a19fe7389d995b2", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-additional-options \"-foffload-options=nvptx-none=-misa=sm_35\" { target { offload_target_nvptx } } } */\n /* { dg-additional-sources requires-5-aux.c } */\n \n /* Depending on offload device capabilities, it may print something like the"}, {"sha": "a25b4d2dedd456898e7e477aa0e3d31a00875f89", "filename": "libgomp/testsuite/libgomp.c-c++-common/requires-6.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Frequires-6.c?ref=6b43f556f392a7165582aca36a19fe7389d995b2", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-foffload-options=nvptx-none=-misa=sm_35\" { target { offload_target_nvptx } } } */\n+\n #pragma omp requires unified_shared_memory, unified_address, reverse_offload\n \n /* The requires line is not active as there is none of:"}, {"sha": "52d828caf1cf0f4c250586116c3bbf19f59b1869", "filename": "libgomp/testsuite/libgomp.c-c++-common/reverse-offload-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Freverse-offload-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Freverse-offload-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Freverse-offload-1.c?ref=6b43f556f392a7165582aca36a19fe7389d995b2", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run }  */\n+/* { dg-additional-options \"-foffload-options=nvptx-none=-misa=sm_35\" { target { offload_target_nvptx } } } */\n /* { dg-additional-sources reverse-offload-1-aux.c } */\n \n /* Check that reverse offload works in particular:"}, {"sha": "fbfeae1fd4143d85cf69f57cfe9232da275c1d5c", "filename": "libgomp/testsuite/libgomp.c/reverse-offload-sm30.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c%2Freverse-offload-sm30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.c%2Freverse-offload-sm30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Freverse-offload-sm30.c?ref=6b43f556f392a7165582aca36a19fe7389d995b2", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do link { target { offload_target_nvptx } } } */\n+/* { dg-additional-options \"-foffload-options=nvptx-none=-march=sm_30 -foffload=-mptx=_\" } */\n+\n+#pragma omp requires reverse_offload\n+\n+int\n+main ()\n+{\n+  #pragma omp target\n+    {\n+    }\n+  return 0;\n+}\n+\n+/* { dg-warning \"'omp requires reverse_offload' requires at least 'sm_35' for '-foffload-options=nvptx-none=-march=' - disabling offload-code generation for this device type\" \"\" { target *-*-* } 0 } */"}, {"sha": "de68011f8f7f52e3966032383be1b43da30fdddc", "filename": "libgomp/testsuite/libgomp.fortran/reverse-offload-1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freverse-offload-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b43f556f392a7165582aca36a19fe7389d995b2/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freverse-offload-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Freverse-offload-1.f90?ref=6b43f556f392a7165582aca36a19fe7389d995b2", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-additional-options \"-foffload-options=nvptx-none=-misa=sm_35\" { target { offload_target_nvptx } } }\n ! { dg-additional-sources reverse-offload-1-aux.f90 }\n \n ! Check that reverse offload works in particular:"}]}