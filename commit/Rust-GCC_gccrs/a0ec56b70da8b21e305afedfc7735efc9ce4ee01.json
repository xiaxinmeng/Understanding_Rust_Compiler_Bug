{"sha": "a0ec56b70da8b21e305afedfc7735efc9ce4ee01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBlYzU2YjcwZGE4YjIxZTMwNWFmZWRmYzc3MzVlZmM5Y2U0ZWUwMQ==", "commit": {"author": {"name": "Herman A.J. ten Brugge", "email": "Haj.Ten.Brugge@net.HCC.nl", "date": "2000-02-20T06:43:00Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-02-20T06:43:00Z"}, "message": "except.c (start_dynamic_handler): Use TYPE_MODE (integer_type_node) instead of SImode.\n\n        * except.c (start_dynamic_handler) : Use TYPE_MODE (integer_type_node)\n        instead of SImode.\n        (start_catch_handler) : Same.\n\nFrom-SVN: r32074", "tree": {"sha": "71f9bc7c6b4d730419ed1f8db03c52659370d65e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71f9bc7c6b4d730419ed1f8db03c52659370d65e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0ec56b70da8b21e305afedfc7735efc9ce4ee01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0ec56b70da8b21e305afedfc7735efc9ce4ee01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0ec56b70da8b21e305afedfc7735efc9ce4ee01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0ec56b70da8b21e305afedfc7735efc9ce4ee01/comments", "author": null, "committer": null, "parents": [{"sha": "db01dcfa8b44e466785bd1d4d441c58445ea2e4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db01dcfa8b44e466785bd1d4d441c58445ea2e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db01dcfa8b44e466785bd1d4d441c58445ea2e4c"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "8479c7b404da951bc87c3657f95548c1306808b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ec56b70da8b21e305afedfc7735efc9ce4ee01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ec56b70da8b21e305afedfc7735efc9ce4ee01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0ec56b70da8b21e305afedfc7735efc9ce4ee01", "patch": "@@ -1,3 +1,9 @@\n+2000-02-19  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n+\n+\t* except.c (start_dynamic_handler) : Use TYPE_MODE (integer_type_node)\n+\tinstead of SImode.\n+\t(start_catch_handler) : Same.\n+\n 2000-02-19  Brad Lucier  (lucier@math.purdue.edu)\n \n \t* Makefile.in: Have flow.o depend on $(EXPR_H)"}, {"sha": "2b841680802b6f3f2f7317acdc05505e3e94e74f", "filename": "gcc/except.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ec56b70da8b21e305afedfc7735efc9ce4ee01/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ec56b70da8b21e305afedfc7735efc9ce4ee01/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=a0ec56b70da8b21e305afedfc7735efc9ce4ee01", "patch": "@@ -1347,7 +1347,8 @@ start_dynamic_handler ()\n   buf = plus_constant (XEXP (arg, 0), GET_MODE_SIZE (Pmode)*2);\n \n #ifdef DONT_USE_BUILTIN_SETJMP\n-  x = emit_library_call_value (setjmp_libfunc, NULL_RTX, 1, SImode, 1,\n+  x = emit_library_call_value (setjmp_libfunc, NULL_RTX, 1,\n+\t\t\t       TYPE_MODE (integer_type_node), 1,\n \t\t\t       buf, Pmode);\n   /* If we come back here for a catch, transfer control to the handler.  */\n   jumpif_rtx (x, ehstack.top->entry->exception_handler_label);\n@@ -1754,7 +1755,8 @@ start_catch_handler (rtime)\n \n       /* Now issue the call, and branch around handler if needed */\n       call_rtx = emit_library_call_value (eh_rtime_match_libfunc, NULL_RTX, \n-                                          0, SImode, 1, rtime_address, Pmode);\n+                                          0, TYPE_MODE (integer_type_node),\n+\t\t\t\t          1, rtime_address, Pmode);\n \n       /* Did the function return true? */\n       emit_cmp_and_jump_insns (call_rtx, const0_rtx, EQ, NULL_RTX,"}]}