{"sha": "09f032c22053f178c802d83a1dea49a0d47c7cc4", "node_id": "C_kwDOANBUbNoAKDA5ZjAzMmMyMjA1M2YxNzhjODAyZDgzYTFkZWE0OWEwZDQ3YzdjYzQ", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-09-30T11:05:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-09-30T11:08:16Z"}, "message": "Refine alingment peeling fix\n\nThis refines the previous fix further by reverting to the original\ncode since the API is a bit of a mess.  It also fixes the vector type\nused to query the misalignment - that was what triggered the original\nbogus change.\n\n2021-09-30  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-data-refs.c (vect_update_misalignment_for_peel):\n\tRestore and fix condition under which we apply npeel to\n\tthe DRs misalignment value.", "tree": {"sha": "98bf64d034599586da5e535e9a4cdb2193240dbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98bf64d034599586da5e535e9a4cdb2193240dbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09f032c22053f178c802d83a1dea49a0d47c7cc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f032c22053f178c802d83a1dea49a0d47c7cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09f032c22053f178c802d83a1dea49a0d47c7cc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f032c22053f178c802d83a1dea49a0d47c7cc4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2dc29c4a54b8d80c4fbd753d65b75f4313ffec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2dc29c4a54b8d80c4fbd753d65b75f4313ffec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2dc29c4a54b8d80c4fbd753d65b75f4313ffec3"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "07b5ba11f31374db63c551878364a1e0a88b9764", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09f032c22053f178c802d83a1dea49a0d47c7cc4/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09f032c22053f178c802d83a1dea49a0d47c7cc4/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=09f032c22053f178c802d83a1dea49a0d47c7cc4", "patch": "@@ -1262,10 +1262,11 @@ vect_update_misalignment_for_peel (dr_vec_info *dr_info,\n     }\n \n   unsigned HOST_WIDE_INT alignment;\n-  tree vectype = STMT_VINFO_VECTYPE (dr_info->stmt);\n   if (DR_TARGET_ALIGNMENT (dr_info).is_constant (&alignment)\n-      && known_alignment_for_access_p (dr_info, vectype)\n-      && npeel != 0)\n+      && known_alignment_for_access_p (dr_info,\n+\t\t\t\t       STMT_VINFO_VECTYPE (dr_info->stmt))\n+      && known_alignment_for_access_p (dr_peel_info,\n+\t\t\t\t       STMT_VINFO_VECTYPE (dr_peel_info->stmt)))\n     {\n       int misal = dr_info->misalignment;\n       misal += npeel * TREE_INT_CST_LOW (DR_STEP (dr_info->dr));\n@@ -1515,7 +1516,8 @@ vect_peeling_hash_get_most_frequent (_vect_peel_info **slot,\n \n /* Get the costs of peeling NPEEL iterations for LOOP_VINFO, checking\n    data access costs for all data refs.  If UNKNOWN_MISALIGNMENT is true,\n-   we assume DR0_INFO's misalignment will be zero after peeling.  */\n+   npeel is computed at runtime but DR0_INFO's misalignment will be zero\n+   after peeling.  */\n \n static void\n vect_get_peeling_costs_all_drs (loop_vec_info loop_vinfo,"}]}