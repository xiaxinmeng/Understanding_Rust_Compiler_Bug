{"sha": "523bb0bad10918404b1d0663978dbc23150fb8ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIzYmIwYmFkMTA5MTg0MDRiMWQwNjYzOTc4ZGJjMjMxNTBmYjhjYQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.cs.uni-dortmund.de", "date": "1999-01-08T02:01:01Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "1999-01-08T02:01:01Z"}, "message": "m68k.h: Declare output_function_epilogue.\n\n\t* config/m68k/m68k.h: Declare output_function_epilogue.\n\t* recog.h: Declare next_insn_tests_no_inequality.\n\nFrom-SVN: r24570", "tree": {"sha": "992624d251d279bd773f0e8bf9f3116097f29a2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/992624d251d279bd773f0e8bf9f3116097f29a2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/523bb0bad10918404b1d0663978dbc23150fb8ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/523bb0bad10918404b1d0663978dbc23150fb8ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/523bb0bad10918404b1d0663978dbc23150fb8ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/523bb0bad10918404b1d0663978dbc23150fb8ca/comments", "author": null, "committer": null, "parents": [{"sha": "b73bf65ffdc41eee7ae235d4d68f14ad8856d6c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b73bf65ffdc41eee7ae235d4d68f14ad8856d6c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b73bf65ffdc41eee7ae235d4d68f14ad8856d6c1"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "6a20a0905a769f2c0cee40fc3ae2c7144548059d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523bb0bad10918404b1d0663978dbc23150fb8ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523bb0bad10918404b1d0663978dbc23150fb8ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=523bb0bad10918404b1d0663978dbc23150fb8ca", "patch": "@@ -1,3 +1,8 @@\n+Fri Jan  8 10:51:13 1999  Andreas Schwab  <schwab@issan.cs.uni-dortmund.de>\n+\n+\t* config/m68k/m68k.h: Declare output_function_epilogue.\n+\t* recog.h: Declare next_insn_tests_no_inequality.\n+\n Fri Jan  8 01:43:53 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* toplev.c (compile_file): Move call to output_func_start_profiler"}, {"sha": "88ba2c608ca62a1b777ab0eb234e63e4f57050cc", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523bb0bad10918404b1d0663978dbc23150fb8ca/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523bb0bad10918404b1d0663978dbc23150fb8ca/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=523bb0bad10918404b1d0663978dbc23150fb8ca", "patch": "@@ -2121,6 +2121,7 @@ extern int const_int_cost ();\n extern int standard_68881_constant_p ();\n extern int standard_sun_fpa_constant_p ();\n extern void output_function_prologue ();\n+extern void output_function_epilogue ();\n extern int use_return_insn ();\n extern void print_operand_address ();\n extern void print_operand ();"}, {"sha": "8a8ee3bf015d42d64e81b6edef2a62c06d636132", "filename": "gcc/recog.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523bb0bad10918404b1d0663978dbc23150fb8ca/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523bb0bad10918404b1d0663978dbc23150fb8ca/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=523bb0bad10918404b1d0663978dbc23150fb8ca", "patch": "@@ -80,6 +80,9 @@ extern int strict_memory_address_p\tPROTO((enum machine_mode, rtx));\n extern int validate_replace_rtx\t\tPROTO((rtx, rtx, rtx));\n extern void validate_replace_rtx_group\tPROTO((rtx, rtx, rtx));\n extern int validate_replace_src\t\tPROTO((rtx, rtx, rtx));\n+#ifdef HAVE_cc0\n+extern int next_insn_tests_no_inequality PROTO ((rtx));\n+#endif\n extern int reg_fits_class_p\t\tPROTO((rtx, enum reg_class, int,\n \t\t\t\t\t       enum machine_mode));\n extern rtx *find_single_use\t\tPROTO((rtx, rtx, rtx *));"}]}