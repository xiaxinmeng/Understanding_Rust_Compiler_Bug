{"sha": "493cf07bd2acf748bda8da2a49914462b35ab01d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkzY2YwN2JkMmFjZjc0OGJkYThkYTJhNDk5MTQ0NjJiMzVhYjAxZA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@pierdol.cobaltmicro.com", "date": "1998-08-31T18:30:46Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1998-08-31T18:30:46Z"}, "message": "sparc.md (movsf_const_intreg): Kill warning.\n\n\t* config/sparc/sparc.md (movsf_const_intreg): Kill warning.\n\t(movtf_insn_sp64, movtf_no_e_insn_sp64): Reorder alternatives.\n\nFrom-SVN: r22140", "tree": {"sha": "886d69fe52141c99a8ca03687bf08092c0cff75a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/886d69fe52141c99a8ca03687bf08092c0cff75a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/493cf07bd2acf748bda8da2a49914462b35ab01d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/493cf07bd2acf748bda8da2a49914462b35ab01d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/493cf07bd2acf748bda8da2a49914462b35ab01d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/493cf07bd2acf748bda8da2a49914462b35ab01d/comments", "author": null, "committer": null, "parents": [{"sha": "9a8467e96bc7593401c4a2558fd5956f2b91bc83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a8467e96bc7593401c4a2558fd5956f2b91bc83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a8467e96bc7593401c4a2558fd5956f2b91bc83"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "1f5feae369d44dbdb4d193f826d17b9d65f3a7b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/493cf07bd2acf748bda8da2a49914462b35ab01d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/493cf07bd2acf748bda8da2a49914462b35ab01d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=493cf07bd2acf748bda8da2a49914462b35ab01d", "patch": "@@ -1,3 +1,8 @@\n+Mon Aug 31 17:25:41 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n+\n+\t* config/sparc/sparc.md (movsf_const_intreg): Kill warning.\n+\t(movtf_insn_sp64, movtf_no_e_insn_sp64): Reorder alternatives.\n+\n Mon Aug 31 13:57:55 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha/va_list.h: New file."}, {"sha": "56894588e2ff2ee77bdfe12834a5a65ef8c2441f", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/493cf07bd2acf748bda8da2a49914462b35ab01d/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/493cf07bd2acf748bda8da2a49914462b35ab01d/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=493cf07bd2acf748bda8da2a49914462b35ab01d", "patch": "@@ -2762,6 +2762,8 @@\n         return \\\"mov\\\\t%1, %0\\\";\n       else if (SPARC_SETHI_P (INTVAL (operands[1])))\n         return \\\"sethi\\\\t%%hi(%a1), %0\\\";\n+      else\n+        abort ();\n     }\n   else\n     return \\\"#\\\";\n@@ -3357,8 +3359,8 @@\n ;; Now we allow the integer register cases even when\n ;; only arch64 is true.\n (define_insn \"*movtf_insn_sp64\"\n-  [(set (match_operand:TF 0 \"general_operand\" \"=e,e,o,r,r,o\")\n-        (match_operand:TF 1 \"input_operand\"    \"e,o,e,r,o,r\"))]\n+  [(set (match_operand:TF 0 \"general_operand\" \"=e,o,r,o,e,r\")\n+        (match_operand:TF 1 \"input_operand\"    \"o,e,o,r,e,r\"))]\n   \"TARGET_FPU\n    && TARGET_ARCH64\n    && ! TARGET_HARD_QUAD\n@@ -3368,8 +3370,8 @@\n   [(set_attr \"length\" \"2\")])\n \n (define_insn \"*movtf_no_e_insn_sp64\"\n-  [(set (match_operand:TF 0 \"general_operand\" \"=r,r,o\")\n-        (match_operand:TF 1 \"input_operand\"    \"r,o,r\"))]\n+  [(set (match_operand:TF 0 \"general_operand\" \"=r,o,r\")\n+        (match_operand:TF 1 \"input_operand\"    \"o,r,r\"))]\n   \"! TARGET_FPU\n    && TARGET_ARCH64\n    && (register_operand (operands[0], TFmode)"}]}