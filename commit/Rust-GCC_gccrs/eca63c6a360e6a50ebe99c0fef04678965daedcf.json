{"sha": "eca63c6a360e6a50ebe99c0fef04678965daedcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNhNjNjNmEzNjBlNmE1MGViZTk5YzBmZWYwNDY3ODk2NWRhZWRjZg==", "commit": {"author": {"name": "Sa Liu", "email": "saliu@gcc.gnu.org", "date": "2008-05-15T12:46:54Z"}, "committer": {"name": "Sa Liu", "email": "saliu@gcc.gnu.org", "date": "2008-05-15T12:46:54Z"}, "message": "Add standard parameter to macro NAMED_INTCST.\n\nFrom-SVN: r135338", "tree": {"sha": "8e084aed97fdf0f372f162a301b252f3443d82c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e084aed97fdf0f372f162a301b252f3443d82c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eca63c6a360e6a50ebe99c0fef04678965daedcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca63c6a360e6a50ebe99c0fef04678965daedcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca63c6a360e6a50ebe99c0fef04678965daedcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca63c6a360e6a50ebe99c0fef04678965daedcf/comments", "author": null, "committer": null, "parents": [{"sha": "7306b62814c94bf5654e4a4b91ef96a8625fbb5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7306b62814c94bf5654e4a4b91ef96a8625fbb5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7306b62814c94bf5654e4a4b91ef96a8625fbb5e"}], "stats": {"total": 59, "additions": 36, "deletions": 23}, "files": [{"sha": "98c3c98226768533c86198ff56bda186f3b7e036", "filename": "gcc/fortran/iso-c-binding.def", "status": "modified", "additions": 36, "deletions": 23, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca63c6a360e6a50ebe99c0fef04678965daedcf/gcc%2Ffortran%2Fiso-c-binding.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca63c6a360e6a50ebe99c0fef04678965daedcf/gcc%2Ffortran%2Fiso-c-binding.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fiso-c-binding.def?ref=eca63c6a360e6a50ebe99c0fef04678965daedcf", "patch": "@@ -20,7 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n    Fortran 2003 ISO_C_BINDING intrinsic module.  */\n \n #ifndef NAMED_INTCST\n-# define NAMED_INTCST(a,b,c) \n+# define NAMED_INTCST(a,b,c,d) \n #endif\n \n #ifndef NAMED_REALCST\n@@ -42,44 +42,57 @@ along with GCC; see the file COPYING3.  If not see\n /* The arguments to NAMED_*CST are:\n      -- an internal name\n      -- the symbol name in the module, as seen by Fortran code\n-     -- the value it has, for use in trans-types.c  */\n+     -- the value it has, for use in trans-types.c  \n+     -- the standard that supports this type  */\n \n-NAMED_INTCST (ISOCBINDING_INT, \"c_int\", gfc_c_int_kind)\n+NAMED_INTCST (ISOCBINDING_INT, \"c_int\", gfc_c_int_kind, GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_SHORT, \"c_short\", \\\n-              get_int_kind_from_node (short_integer_type_node))\n+              get_int_kind_from_node (short_integer_type_node), GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_LONG, \"c_long\", \\\n-              get_int_kind_from_node (long_integer_type_node))\n+              get_int_kind_from_node (long_integer_type_node), GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_LONG_LONG, \"c_long_long\", \\\n-              get_int_kind_from_node (long_long_integer_type_node))\n+              get_int_kind_from_node (long_long_integer_type_node), GFC_STD_F2003)\n \n NAMED_INTCST (ISOCBINDING_INTMAX_T, \"c_intmax_t\", \\\n-              get_int_kind_from_node (intmax_type_node))\n+              get_int_kind_from_node (intmax_type_node), GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_INTPTR_T, \"c_intptr_t\", \\\n-              get_int_kind_from_node (ptr_type_node))\n+              get_int_kind_from_node (ptr_type_node), GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_SIZE_T, \"c_size_t\", \\\n-              gfc_index_integer_kind)\n+              gfc_index_integer_kind, GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_SIGNED_CHAR, \"c_signed_char\", \\\n-              get_int_kind_from_node (signed_char_type_node))\n-\n-NAMED_INTCST (ISOCBINDING_INT8_T, \"c_int8_t\", get_int_kind_from_width (8))\n-NAMED_INTCST (ISOCBINDING_INT16_T, \"c_int16_t\", get_int_kind_from_width (16))\n-NAMED_INTCST (ISOCBINDING_INT32_T, \"c_int32_t\", get_int_kind_from_width (32))\n-NAMED_INTCST (ISOCBINDING_INT64_T, \"c_int64_t\", get_int_kind_from_width (64))\n+              get_int_kind_from_node (signed_char_type_node), GFC_STD_F2003)\n+\n+NAMED_INTCST (ISOCBINDING_INT8_T, \"c_int8_t\", get_int_kind_from_width (8), \\\n+              GFC_STD_F2003)\n+NAMED_INTCST (ISOCBINDING_INT16_T, \"c_int16_t\", get_int_kind_from_width (16), \\\n+              GFC_STD_F2003)\n+NAMED_INTCST (ISOCBINDING_INT32_T, \"c_int32_t\", get_int_kind_from_width (32), \\\n+              GFC_STD_F2003)\n+NAMED_INTCST (ISOCBINDING_INT64_T, \"c_int64_t\", get_int_kind_from_width (64), \\\n+              GFC_STD_F2003)\n+/* GNU Extension.  */\n+NAMED_INTCST (ISOCBINDING_INT128_T, \"c_int128_t\", get_int_kind_from_width (128), \\\n+              GFC_STD_GNU)\n \n NAMED_INTCST (ISOCBINDING_INT_LEAST8_T, \"c_int_least8_t\", \\\n-              get_int_kind_from_minimal_width (8))\n+              get_int_kind_from_minimal_width (8), GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_INT_LEAST16_T, \"c_int_least16_t\", \\\n-              get_int_kind_from_minimal_width (16))\n+              get_int_kind_from_minimal_width (16), GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_INT_LEAST32_T, \"c_int_least32_t\", \\\n-              get_int_kind_from_minimal_width (32))\n+              get_int_kind_from_minimal_width (32), GFC_STD_F2003)\n NAMED_INTCST (ISOCBINDING_INT_LEAST64_T, \"c_int_least64_t\", \\\n-              get_int_kind_from_minimal_width (64))\n+              get_int_kind_from_minimal_width (64), GFC_STD_F2003)\n+/* GNU Extension.  */\n+NAMED_INTCST (ISOCBINDING_INT_LEAST128_T, \"c_int_least128_t\", \\\n+              get_int_kind_from_minimal_width (128), GFC_STD_GNU)\n \n /* TODO: Implement c_int_fast*_t. Depends on PR 448.  */ \n-NAMED_INTCST (ISOCBINDING_INT_FAST8_T, \"c_int_fast8_t\", -2)\n-NAMED_INTCST (ISOCBINDING_INT_FAST16_T, \"c_int_fast16_t\", -2)\n-NAMED_INTCST (ISOCBINDING_INT_FAST32_T, \"c_int_fast32_t\", -2)\n-NAMED_INTCST (ISOCBINDING_INT_FAST64_T, \"c_int_fast64_t\", -2)\n+NAMED_INTCST (ISOCBINDING_INT_FAST8_T, \"c_int_fast8_t\", -2, GFC_STD_F2003)\n+NAMED_INTCST (ISOCBINDING_INT_FAST16_T, \"c_int_fast16_t\", -2, GFC_STD_F2003)\n+NAMED_INTCST (ISOCBINDING_INT_FAST32_T, \"c_int_fast32_t\", -2, GFC_STD_F2003)\n+NAMED_INTCST (ISOCBINDING_INT_FAST64_T, \"c_int_fast64_t\", -2, GFC_STD_F2003)\n+/* GNU Extension.  */\n+NAMED_INTCST (ISOCBINDING_INT_FAST128_T, \"c_int_fast128_t\", -2, GFC_STD_GNU)\n \n NAMED_REALCST (ISOCBINDING_FLOAT, \"c_float\", \\\n                get_real_kind_from_node (float_type_node))"}]}