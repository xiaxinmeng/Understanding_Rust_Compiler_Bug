{"sha": "56b8e164db2f3c10e4c10e1dd73140de69e25464", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZiOGUxNjRkYjJmM2MxMGU0YzEwZTFkZDczMTQwZGU2OWUyNTQ2NA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-11-24T13:17:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-11-24T13:17:11Z"}, "message": "h8300.c (print_operand): Update the use of h8300_tiny_constant_address_p.\n\n\t* config/h8300/h8300.c (print_operand): Update the use of\n\th8300_tiny_constant_address_p.\n\t(h8300_adjust_insn_length): Likewise.\n\t(h8300_tiny_constant_address_p): Check if the given rtx is a\n\tvariable declared with __attribute__ ((tiny_data)).\n\nFrom-SVN: r59431", "tree": {"sha": "a2b3cf53ff64dcc5ad888aa79ec6bb451d7f82d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2b3cf53ff64dcc5ad888aa79ec6bb451d7f82d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56b8e164db2f3c10e4c10e1dd73140de69e25464", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b8e164db2f3c10e4c10e1dd73140de69e25464", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b8e164db2f3c10e4c10e1dd73140de69e25464", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b8e164db2f3c10e4c10e1dd73140de69e25464/comments", "author": null, "committer": null, "parents": [{"sha": "02ccd3c984a91fc0eb9973dc05c1043e727be823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ccd3c984a91fc0eb9973dc05c1043e727be823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ccd3c984a91fc0eb9973dc05c1043e727be823"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "17ff99220d5ceda6454825d06f3a4ee297620ec7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56b8e164db2f3c10e4c10e1dd73140de69e25464/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56b8e164db2f3c10e4c10e1dd73140de69e25464/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56b8e164db2f3c10e4c10e1dd73140de69e25464", "patch": "@@ -1,3 +1,11 @@\n+2002-11-23  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (print_operand): Update the use of\n+\th8300_tiny_constant_address_p.\n+\t(h8300_adjust_insn_length): Likewise.\n+\t(h8300_tiny_constant_address_p): Check if the given rtx is a\n+\tvariable declared with __attribute__ ((tiny_data)).\n+\n 2002-11-22  Dale Johannesen  <dalej@apple.com>\n \n         * toplev.c (rest_of_compilation):  Fix comments."}, {"sha": "9a516c4f068878aaa61354ff41002060ef497523", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56b8e164db2f3c10e4c10e1dd73140de69e25464/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56b8e164db2f3c10e4c10e1dd73140de69e25464/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=56b8e164db2f3c10e4c10e1dd73140de69e25464", "patch": "@@ -1440,9 +1440,6 @@ print_operand (file, x, code)\n \tcase MEM:\n \t  {\n \t    rtx addr = XEXP (x, 0);\n-\t    int tiny_ok = ((GET_CODE (addr) == SYMBOL_REF\n-\t\t\t    && TINY_DATA_NAME_P (XSTR (addr, 0)))\n-\t\t\t   || h8300_tiny_constant_address_p (addr));\n \n \t    fprintf (file, \"@\");\n \t    output_address (addr);\n@@ -1467,7 +1464,7 @@ print_operand (file, x, code)\n \t      case 'T':\n \t      case 'S':\n \t\t/* Used for mov.w and mov.l.  */\n-\t\tif (tiny_ok)\n+\t\tif (h8300_tiny_constant_address_p (addr))\n \t\t  fprintf (file, \":16\");\n \t\tbreak;\n \t      default:\n@@ -3763,9 +3760,7 @@ h8300_adjust_insn_length (insn, length)\n \t    return -6;\n \n \t  /* @aa:16 is 4 bytes shorter than the longest.  */\n-\t  if ((GET_CODE (addr) == SYMBOL_REF\n-\t       && TINY_DATA_NAME_P (XSTR (addr, 0)))\n-\t      || h8300_tiny_constant_address_p (addr))\n+\t  if (h8300_tiny_constant_address_p (addr))\n \t    return -4;\n \n \t  /* @aa:24 is 2 bytes shorter than the longest.  */\n@@ -3925,6 +3920,10 @@ h8300_tiny_constant_address_p (x)\n \n   unsigned HOST_WIDE_INT addr;\n \n+  /* We accept symbols declared with tiny_data.  */\n+  if (GET_CODE (x) == SYMBOL_REF && TINY_DATA_NAME_P (XSTR (x, 0)))\n+    return 1;\n+\n   if (GET_CODE (x) != CONST_INT)\n     return 0;\n "}]}