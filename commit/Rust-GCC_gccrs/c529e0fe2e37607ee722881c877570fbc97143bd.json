{"sha": "c529e0fe2e37607ee722881c877570fbc97143bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzUyOWUwZmUyZTM3NjA3ZWU3MjI4ODFjODc3NTcwZmJjOTcxNDNiZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-02-26T16:15:25Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-02-26T16:15:25Z"}, "message": "re PR tree-optimization/20188 (asm and memory operands does not add a V_MAY_DEF)\n\n2005-02-26  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/20188\n        * gcc.dg/tree-ssa/inline_asm-1.c: New test.\n        * gcc.dg/tree-ssa/inline_asm-2.c: New test.\n        * gcc.dg/asm-b.c: New test.\n\n2005-02-26  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/20188\n        * tree-ssa-alias.c (count_uses_and_derefs): If we have TREE_LIST\n        for the lhs, also walk over the tree.  Likewise for rhs.\n\nFrom-SVN: r95586", "tree": {"sha": "80a8a0c3dfeb813ac7ba11261a533b6f84055b60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80a8a0c3dfeb813ac7ba11261a533b6f84055b60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c529e0fe2e37607ee722881c877570fbc97143bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c529e0fe2e37607ee722881c877570fbc97143bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c529e0fe2e37607ee722881c877570fbc97143bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c529e0fe2e37607ee722881c877570fbc97143bd/comments", "author": null, "committer": null, "parents": [{"sha": "54ff999a487c8e91f657b0ca873965099e2b312d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ff999a487c8e91f657b0ca873965099e2b312d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ff999a487c8e91f657b0ca873965099e2b312d"}], "stats": {"total": 91, "additions": 89, "deletions": 2}, "files": [{"sha": "4b0fee53f4da528f397d38ff39d4917c6733eb7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c529e0fe2e37607ee722881c877570fbc97143bd", "patch": "@@ -1,3 +1,9 @@\n+2005-02-26  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/20188\n+\t* tree-ssa-alias.c (count_uses_and_derefs): If we have TREE_LIST\n+\tfor the lhs, also walk over the tree.  Likewise for rhs.\n+\n 2005-02-26  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-ssa-dom.c (simple_iv_increment_p): New function."}, {"sha": "9ab9ada96e92ae161b62c5a6ebfb05af2b6e9f64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c529e0fe2e37607ee722881c877570fbc97143bd", "patch": "@@ -1,3 +1,10 @@\n+2005-02-26  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/20188\n+\t* gcc.dg/tree-ssa/inline_asm-1.c: New test.\n+\t* gcc.dg/tree-ssa/inline_asm-2.c: New test.\n+\t* gcc.dg/asm-b.c: New test.\n+\n 2005-02-26  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* gcc.c-torture/execute/ieee/mul-subnormal-single-1.x: New file."}, {"sha": "ce68cabe3008cf80f89c7e70157bc94a211706d2", "filename": "gcc/testsuite/gcc.dg/asm-b.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-b.c?ref=c529e0fe2e37607ee722881c877570fbc97143bd", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do run  { target powerpc-*-* i?386-*-* x86_64-*-* } } */\n+/* { dg-options \"-O1\" } */\n+/* Test to make sure that inline-asm causes the tree optimizators get the\n+   V_MAY_DEFs and clober memory.  */\n+/* Test from Jakub Jelinek, modified by Andrew Pinski to work on all powerpc targets. */\n+extern void abort (void);\n+\n+unsigned short v = 0x0300;\n+\n+void\n+foo (unsigned short *p)\n+{\n+  *p = v;\n+}\n+\n+int\n+bar (void)\n+{\n+  unsigned short x;\n+  volatile unsigned short *z;\n+  foo (&x);\n+  const unsigned int y = x;\n+  z = &x;\n+#if defined (__powerpc__) || defined (__PPC__) || defined (__ppc__) || defined (_POWER)\n+  __asm __volatile (\"sthbrx %1,0,%2\" : \"=m\" (*z) : \"r\" (y), \"r\" (z));\n+#elif defined __i386__ || defined __x86_64__\n+  __asm __volatile (\"movb %b1,1(%2); movb %h1,(%2)\" : \"=m\" (*z) : \"r\" (y), \"r\"\n+(z));\n+#endif\n+  return (x & 1) == 0;\n+}\n+\n+int\n+main (void)\n+{\n+  if (bar ())\n+    abort ();\n+  return 0;\n+}"}, {"sha": "4b241c30ba2dccf106dd798a59dda4abd257fd39", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline_asm-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-1.c?ref=c529e0fe2e37607ee722881c877570fbc97143bd", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-optimized -fdump-tree-alias1-vops\" } */\n+/* Test to make sure that inline-asm causes a V_MAY_DEF and that we call test_function twice. */\n+\n+char test_function(void ) __attribute__((__pure__));\n+char f(char *a)\n+{\n+  char b = test_function();\n+  asm(\"\":\"=m\"(*a):\"r\"(b));\n+  b = test_function();\n+  return b;\n+}\n+\n+/* test_function should be called twice as the inline-asm changes memory. */\n+/* { dg-final { scan-tree-dump-times \"test_function\" 2 \"optimized\"} } */\n+\n+/* There should a V_MAY_DEF for the inline-asm.  */\n+/* { dg-final { scan-tree-dump-times \"V_MAY_DEF\" 1 \"alias1\"} } */"}, {"sha": "bc4039f878f9e353a07c66a2865521ed79416a7e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/inline_asm-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Finline_asm-2.c?ref=c529e0fe2e37607ee722881c877570fbc97143bd", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-alias1-vops\" } */\n+/* Test to make sure that inline-asm causes a V_MAY_DEF. */\n+\n+\n+void link_error();\n+void f(char *a)\n+{\n+  int *a1 = (int *)a;\n+  if (*a == 0)\n+   asm(\"\":\"=m\"(*a1));\n+  if (*a == 0)\n+   link_error ();\n+}\n+\n+/* There should a V_MAY_DEF for the inline-asm.  */\n+/* { dg-final { scan-tree-dump-times \"V_MAY_DEF\" 1 \"alias1\"} } */"}, {"sha": "1adcd833e914f9097a7800d1fd6bae44a9579ecb", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c529e0fe2e37607ee722881c877570fbc97143bd/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=c529e0fe2e37607ee722881c877570fbc97143bd", "patch": "@@ -446,7 +446,7 @@ count_uses_and_derefs (tree ptr, tree stmt, unsigned *num_uses_p,\n \t  rhs = stmt;\n \t}\n \n-      if (lhs && EXPR_P (lhs))\n+      if (lhs && (TREE_CODE (lhs) == TREE_LIST || EXPR_P (lhs)))\n \t{\n \t  struct count_ptr_d count;\n \t  count.ptr = ptr;\n@@ -456,7 +456,7 @@ count_uses_and_derefs (tree ptr, tree stmt, unsigned *num_uses_p,\n \t  *num_derefs_p = count.count;\n \t}\n \n-      if (rhs && EXPR_P (rhs))\n+      if (rhs && (TREE_CODE (rhs) == TREE_LIST || EXPR_P (rhs)))\n \t{\n \t  struct count_ptr_d count;\n \t  count.ptr = ptr;"}]}