{"sha": "5b9a3d2a0545f0ba118d74aca30b60689d31f387", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI5YTNkMmEwNTQ1ZjBiYTExOGQ3NGFjYTMwYjYwNjg5ZDMxZjM4Nw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-08-21T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-08-21T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "efd5f3c23e8c34cf5a84f3f5af02ae5b117169c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efd5f3c23e8c34cf5a84f3f5af02ae5b117169c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b9a3d2a0545f0ba118d74aca30b60689d31f387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9a3d2a0545f0ba118d74aca30b60689d31f387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9a3d2a0545f0ba118d74aca30b60689d31f387", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9a3d2a0545f0ba118d74aca30b60689d31f387/comments", "author": null, "committer": null, "parents": [{"sha": "15717b4784053e59121a1e239d0081ca4d2c738a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15717b4784053e59121a1e239d0081ca4d2c738a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15717b4784053e59121a1e239d0081ca4d2c738a"}], "stats": {"total": 148, "additions": 147, "deletions": 1}, "files": [{"sha": "9caafc53d32459ce23b9bdd2459ce99512d760dd", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,10 @@\n+2020-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR bootstrap/96612\n+\t* configure.ac: Run AX_CXX_COMPILE_STDCXX also for ${build} compiler,\n+\tif not the same as ${host}.\n+\t* configure: Regenerate.\n+\n 2020-08-16  Sergei Trofimovich  <slyfox@gcc.gnu.org>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "40896bcc1a506509ec810d904808c120d14f644f", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,9 @@\n+2020-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR bootstrap/96612\n+\t* ax_cxx_compile_stdcxx.m4: Add fourth argument to check also\n+\tthe CXX_FOR_BUILD compiler.\n+\n 2020-07-30  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR bootstrap/96202"}, {"sha": "2f9ecd2e70245661aac19b9eb96d09c5a03faf40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,16 @@\n+2020-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* config/vxworks.h (VXWORKS_ADDITIONAL_CPP_SPEC): Don't include\n+\tVxWorks header files if -fself-test is used.\n+\t(STARTFILE_PREFIX_SPEC): Avoid using VSB_DIR if -fself-test is used.\n+\n+2020-08-20  Joe Ramsay  <Joe.Ramsay@arm.com>\n+\n+\tPR target/96683\n+\t* config/arm/mve.md (mve_vst1q_f<mode>): Require MVE memory operand for\n+\tdestination.\n+\t(mve_vst1q_<supf><mode>): Likewise.\n+\n 2020-08-19  2020-08-19  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/rs6000-builtin.def (BU_P10V_0, BU_P10V_1,"}, {"sha": "7ead96493357530eca3a12fe4c40582427c23ff2", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1 +1 @@\n-20200820\n+20200821"}, {"sha": "d20e8c756ccb2df56453227b90d24acc98371afb", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,20 @@\n+2020-08-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96723\n+\t* region-model-manager.cc\n+\t(region_model_manager::get_field_region): Assert that field is a\n+\tFIELD_DECL.\n+\t* region.cc (region::get_subregions_for_binding): In\n+\tunion-handling, filter the TYPE_FIELDS traversal to just FIELD_DECLs.\n+\n+2020-08-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96713\n+\t* region-model.cc (region_model::get_gassign_result): For\n+\tcomparisons, only use eval_condition when the lhs has boolean\n+\ttype, and use get_or_create_constant_svalue on the boolean\n+\tconstants directly rather than via get_rvalue.\n+\n 2020-08-19  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/96643"}, {"sha": "046967693852dd50fa78c8f87dc57ab3716735e6", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,7 @@\n+2020-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd 1b5a53d01.\n+\n 2020-08-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/96301"}, {"sha": "b43e91eb66e868bc498692eabee37f3eea010a34", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,23 @@\n+2020-08-20  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/96100\n+\tPR fortran/96101\n+\t* trans-array.c (get_array_charlen): Tidy up the evaluation of\n+\tthe string length for array constructors. Avoid trailing array\n+\treferences. Ensure string lengths of deferred length components\n+\tare set. For parentheses operator apply string  length to both\n+\tthe primary expression and the enclosed expression.\n+\n+2020-08-20  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/94958\n+\t* trans-array.c (gfc_bcast_alloc_comp): Use the correct variable.\n+\n+2020-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* openmp.c (gfc_match_omp_clauses): Re-order 'if' clause pasing\n+\tto avoid creating spurious symbols.\n+\n 2020-08-18  Harald Anlauf  <anlauf@gmx.de>\n \n \t* check.c (check_rest): Reject MIN/MAX character arguments of"}, {"sha": "a369f61f89c8ccdd6396fd601be0606fdfb5decb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,55 @@\n+2020-08-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96723\n+\t* g++.dg/analyzer/pr96723.C: New test.\n+\n+2020-08-20  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/96100\n+\tPR fortran/96101\n+\t* gfortran.dg/char_length_23.f90: New test.\n+\n+2020-08-20  Joe Ramsay  <Joe.Ramsay@arm.com>\n+\n+\tPR target/96683\n+\t* gcc.target/arm/mve/intrinsics/vst1q_f16.c: New test.\n+\t* gcc.target/arm/mve/intrinsics/vst1q_s16.c: New test.\n+\t* gcc.target/arm/mve/intrinsics/vst1q_s8.c: New test.\n+\t* gcc.target/arm/mve/intrinsics/vst1q_u16.c: New test.\n+\t* gcc.target/arm/mve/intrinsics/vst1q_u8.c: New test.\n+\n+2020-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/pr67500.f90: New file.\n+\n+2020-08-20  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* lib/target-supports.exp (arm_soft_ok): Remove arm32 check.\n+\n+2020-08-20  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/pure-code/pure-code.exp: Skip for\n+\tarm*-*-uclinuxfdpiceabi. Fix missing closing bracket.\n+\n+2020-08-20  Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/96436\n+\t* gfortran.dg/pr96436_1.f90: New test.\n+\t* gfortran.dg/pr96436_2.f90: New test.\n+\t* gfortran.dg/pr96436_3.f90: New test.\n+\t* gfortran.dg/pr96436_4.f90: New test.\n+\t* gfortran.dg/pr96436_5.f90: New test.\n+\t* gfortran.dg/pr96436_6.f90: New test.\n+\t* gfortran.dg/pr96436_7.f90: New test.\n+\t* gfortran.dg/pr96436_8.f90: New test.\n+\t* gfortran.dg/pr96436_9.f90\n+\t* gfortran.dg/pr96436_10.f90\n+\n+2020-08-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96713\n+\t* gcc.dg/analyzer/pr96713.c: New test.\n+\n 2020-08-19  Jason Merrill  <jason@redhat.com>\n \n \tDR 2369"}, {"sha": "b2e7d7bf5d92f382dfe46992fc9e2c293b4b47ee", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,11 @@\n+2020-08-20  Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/96436\n+\t* io/format.c (parse_format_list):  Add new local variable\n+\t\"standard\" to hold the required standard to check. If the\n+\tformat width is zero select standard depending on descriptor.\n+\tCall notification_std using the new standard variable.\n+\n 2020-08-17  David Edelsohn  <dje.gcc@gmail.com>\n \t    Clement Chigot  <clement.chigot@atos.net>\n "}, {"sha": "f39515ff84c8653f848352afcb887066936cbb96", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,14 @@\n+2020-08-20  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* plugin/plugin-nvptx.c (nvptx_free):\n+\tChange \"GOMP_PLUGIN_acc_thread () == NULL\" test into check of\n+\tCUDA_ERROR_NOT_PERMITTED status for cuMemGetAddressRange. Adjust\n+\tcomments.\n+\n+2020-08-20  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/lastprivate-conditional-10.f90: New test.\n+\n 2020-08-13  Kwok Cheung Yeung  <kcy@codesourcery.com>\n \n \t* testsuite/libgomp.c-c++-common/reduction-16.c: New."}, {"sha": "3966e48c8e58def6a3bbbf0c877dcf938046e9dc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3d2a0545f0ba118d74aca30b60689d31f387/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3d2a0545f0ba118d74aca30b60689d31f387/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5b9a3d2a0545f0ba118d74aca30b60689d31f387", "patch": "@@ -1,3 +1,11 @@\n+2020-08-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/iterator_concepts.h [__STRICT_ANSI__]\n+\t(incrementable_traits<__int128>): Define specialization.\n+\t(incrementable_traits<unsigned __int128>): Likewise.\n+\t* testsuite/std/ranges/iota/96042.cc: Test iota_view with\n+\t__int128.\n+\n 2020-08-19  Jonathan Wakely  <jwakely@redhat.com>\n \t    Patrick Palka  <ppalka@redhat.com>\n "}]}