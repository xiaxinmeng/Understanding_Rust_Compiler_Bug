{"sha": "f813d16ec532adc9760b0d6d4574b2028034b73a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgxM2QxNmVjNTMyYWRjOTc2MGIwZDZkNDU3NGIyMDI4MDM0YjczYQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2015-10-09T12:18:24Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2015-10-09T12:18:24Z"}, "message": "[PR67828] don't unswitch on default defs of non-parms\n\nfor  gcc/ChangeLog\n\n\tPR rtl-optimizatoin/67828\n\t* tree-ssa-loop-unswitch.c: Include tree-ssa.h.\n\t(tree_may_unswitch_on): Don't unswitch on expressions\n\tinvolving undefined values.\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR rtl-optimization/67828\n\t* gcc.dg/torture/pr67828.c: New.\n\nFrom-SVN: r228650", "tree": {"sha": "204e33aa8889c3902a864e581b9a62cda9529d94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/204e33aa8889c3902a864e581b9a62cda9529d94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f813d16ec532adc9760b0d6d4574b2028034b73a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f813d16ec532adc9760b0d6d4574b2028034b73a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f813d16ec532adc9760b0d6d4574b2028034b73a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f813d16ec532adc9760b0d6d4574b2028034b73a/comments", "author": null, "committer": null, "parents": [{"sha": "6be1d686e1e87fad27be534862c68279448fb87a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be1d686e1e87fad27be534862c68279448fb87a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be1d686e1e87fad27be534862c68279448fb87a"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "e31c1800002bd48236cffd6b581690142fcbf440", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f813d16ec532adc9760b0d6d4574b2028034b73a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f813d16ec532adc9760b0d6d4574b2028034b73a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f813d16ec532adc9760b0d6d4574b2028034b73a", "patch": "@@ -1,3 +1,10 @@\n+2015-10-09  Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR rtl-optimization/67828\n+\t* tree-ssa-loop-unswitch.c: Include tree-ssa.h.\n+\t(tree_may_unswitch_on): Don't unswitch on expressions\n+\tinvolving undefined values.\n+\n 2015-10-09  Richard Biener  <rguenther@suse.de>\n \n \t* genmatch.c (print_operand): Fix formatting."}, {"sha": "e5673bd184621ad752ddab99c73e6c26937a0798", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f813d16ec532adc9760b0d6d4574b2028034b73a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f813d16ec532adc9760b0d6d4574b2028034b73a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f813d16ec532adc9760b0d6d4574b2028034b73a", "patch": "@@ -1,3 +1,8 @@\n+2015-10-09  Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR rtl-optimization/67828\n+\t* gcc.dg/torture/pr67828.c: New.\n+\n 2015-10-09  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/67366"}, {"sha": "c7b696501a52550b960fead2e8b5a42d8be35da0", "filename": "gcc/testsuite/gcc.dg/torture/pr67828.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f813d16ec532adc9760b0d6d4574b2028034b73a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67828.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f813d16ec532adc9760b0d6d4574b2028034b73a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67828.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67828.c?ref=f813d16ec532adc9760b0d6d4574b2028034b73a", "patch": "@@ -0,0 +1,43 @@\n+/* Check that we don't misoptimize the final value of d.  We used to\n+   apply loop unswitching on if(j), introducing undefined behavior\n+   that the original code wouldn't exercise, and this undefined\n+   behavior would get later passes to misoptimize the loop.  */\n+\n+/* { dg-do run } */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+int x;\n+\n+int __attribute__ ((noinline, noclone))\n+xprintf (int d) {\n+  if (d)\n+    {\n+      if (x)\n+\tprintf (\"%d\", d);\n+      abort ();\n+    }\n+}\n+\n+int a, b;\n+short c;\n+\n+int\n+main ()\n+{\n+  int j, d = 1;\n+  for (; c >= 0; c++)\n+    {\n+      a = d;\n+      d = 0;\n+      if (b)\n+\t{\n+\t  xprintf (0);\n+\t  if (j)\n+\t    xprintf (0);\n+\t}\n+    }\n+  xprintf (d);\n+  exit (0);\n+}"}, {"sha": "d6faa378ba824f4fd5035c27734aaeac77809085", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f813d16ec532adc9760b0d6d4574b2028034b73a/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f813d16ec532adc9760b0d6d4574b2028034b73a/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=f813d16ec532adc9760b0d6d4574b2028034b73a", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"internal-fn.h\"\n #include \"gimplify.h\"\n #include \"tree-cfg.h\"\n+#include \"tree-ssa.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-ssa-loop.h\"\n #include \"tree-into-ssa.h\"\n@@ -139,6 +140,10 @@ tree_may_unswitch_on (basic_block bb, struct loop *loop)\n   /* Condition must be invariant.  */\n   FOR_EACH_SSA_TREE_OPERAND (use, stmt, iter, SSA_OP_USE)\n     {\n+      /* Unswitching on undefined values would introduce undefined\n+\t behavior that the original program might never exercise.  */\n+      if (ssa_undefined_value_p (use, true))\n+\treturn NULL_TREE;\n       def = SSA_NAME_DEF_STMT (use);\n       def_bb = gimple_bb (def);\n       if (def_bb"}]}