{"sha": "8b17d27f7661cc7376c6b12be514f1bc69191ff7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIxN2QyN2Y3NjYxY2M3Mzc2YzZiMTJiZTUxNGYxYmM2OTE5MWZmNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-06-01T12:36:01Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-06-01T12:36:01Z"}, "message": "Change use to type-based pool allocator in ira-color.c.\n\n\t* ira-color.c (init_update_cost_records):Use new type-based pool allocator.\n\t(get_update_cost_record) Likewise.\n\t(free_update_cost_record_list) Likewise.\n\t(finish_update_cost_records) Likewise.\n\t(initiate_cost_update) Likewise.\n\nFrom-SVN: r223946", "tree": {"sha": "35dccfcd3b05ecfa05fc52dd43102d9d99fe745d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35dccfcd3b05ecfa05fc52dd43102d9d99fe745d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b17d27f7661cc7376c6b12be514f1bc69191ff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b17d27f7661cc7376c6b12be514f1bc69191ff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b17d27f7661cc7376c6b12be514f1bc69191ff7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b17d27f7661cc7376c6b12be514f1bc69191ff7/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f77a6072cccc1520dd609ac48cafda69a76832b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f77a6072cccc1520dd609ac48cafda69a76832b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f77a6072cccc1520dd609ac48cafda69a76832b"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "d23503d0c03e411db901f3468a9c245ba8e4ed15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b17d27f7661cc7376c6b12be514f1bc69191ff7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b17d27f7661cc7376c6b12be514f1bc69191ff7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b17d27f7661cc7376c6b12be514f1bc69191ff7", "patch": "@@ -1,3 +1,11 @@\n+2015-06-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* ira-color.c (init_update_cost_records):Use new type-based pool allocator.\n+\t(get_update_cost_record) Likewise.\n+\t(free_update_cost_record_list) Likewise.\n+\t(finish_update_cost_records) Likewise.\n+\t(initiate_cost_update) Likewise.\n+\n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n \t* lra.c (init_insn_regs): Use new type-based pool allocator."}, {"sha": "543440d919bbe62aa41709b1e9e184a6cf0c71b8", "filename": "gcc/ira-color.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b17d27f7661cc7376c6b12be514f1bc69191ff7/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b17d27f7661cc7376c6b12be514f1bc69191ff7/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=8b17d27f7661cc7376c6b12be514f1bc69191ff7", "patch": "@@ -123,6 +123,21 @@ struct update_cost_record\n   int divisor;\n   /* Next record for given allocno.  */\n   struct update_cost_record *next;\n+\n+  /* Pool allocation new operator.  */\n+  inline void *operator new (size_t)\n+  {\n+    return pool.allocate ();\n+  }\n+\n+  /* Delete operator utilizing pool allocation.  */\n+  inline void operator delete (void *ptr)\n+  {\n+    pool.remove ((update_cost_record *) ptr);\n+  }\n+\n+  /* Memory allocation pool.  */\n+  static pool_allocator<update_cost_record> pool;\n };\n \n /* To decrease footprint of ira_allocno structure we store all data\n@@ -1166,16 +1181,8 @@ setup_profitable_hard_regs (void)\n    allocnos.  */\n \n /* Pool for update cost records.  */\n-static alloc_pool update_cost_record_pool;\n-\n-/* Initiate update cost records.  */\n-static void\n-init_update_cost_records (void)\n-{\n-  update_cost_record_pool\n-    = create_alloc_pool (\"update cost records\",\n-\t\t\t sizeof (struct update_cost_record), 100);\n-}\n+static pool_allocator<update_cost_record> update_cost_record_pool\n+  (\"update cost records\", 100);\n \n /* Return new update cost record with given params.  */\n static struct update_cost_record *\n@@ -1184,7 +1191,7 @@ get_update_cost_record (int hard_regno, int divisor,\n {\n   struct update_cost_record *record;\n \n-  record = (struct update_cost_record *) pool_alloc (update_cost_record_pool);\n+  record = update_cost_record_pool.allocate ();\n   record->hard_regno = hard_regno;\n   record->divisor = divisor;\n   record->next = next;\n@@ -1200,7 +1207,7 @@ free_update_cost_record_list (struct update_cost_record *list)\n   while (list != NULL)\n     {\n       next = list->next;\n-      pool_free (update_cost_record_pool, list);\n+      update_cost_record_pool.remove (list);\n       list = next;\n     }\n }\n@@ -1209,7 +1216,7 @@ free_update_cost_record_list (struct update_cost_record *list)\n static void\n finish_update_cost_records (void)\n {\n-  free_alloc_pool (update_cost_record_pool);\n+  update_cost_record_pool.release ();\n }\n \n /* Array whose element value is TRUE if the corresponding hard\n@@ -1264,7 +1271,6 @@ initiate_cost_update (void)\n     = (struct update_cost_queue_elem *) ira_allocate (size);\n   memset (update_cost_queue_elems, 0, size);\n   update_cost_check = 0;\n-  init_update_cost_records ();\n }\n \n /* Deallocate data used by function update_costs_from_copies.  */"}]}