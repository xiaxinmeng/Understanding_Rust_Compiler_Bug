{"sha": "6d0de0058121acea1a5688c1b6b7668ce40f5663", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwZGUwMDU4MTIxYWNlYTFhNTY4OGMxYjZiNzY2OGNlNDBmNTY2Mw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-05-03T00:05:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-03T00:05:52Z"}, "message": "haifa-sched.c (schedule_insn): Print table of instructions and reservations.\n\n        * haifa-sched.c (schedule_insn): Print table of instructions and\n        reservations.\n        (sched_block): Do not print ready list at verbosity level 1.\n        * sched-vis.c (print_insn): Make global.\n        * sched-ebb.c (ebb_print_insn): Rename from...\n        (print_insn): ... this one.\n        * sched-int.h (print_insn): Declare\n\nFrom-SVN: r53073", "tree": {"sha": "48538557c882b1e8c83381b471c4d07309156a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48538557c882b1e8c83381b471c4d07309156a06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d0de0058121acea1a5688c1b6b7668ce40f5663", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0de0058121acea1a5688c1b6b7668ce40f5663", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0de0058121acea1a5688c1b6b7668ce40f5663", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0de0058121acea1a5688c1b6b7668ce40f5663/comments", "author": null, "committer": null, "parents": [{"sha": "0bfb9a691ff8561383df396da0fa0aff3e30fe43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfb9a691ff8561383df396da0fa0aff3e30fe43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bfb9a691ff8561383df396da0fa0aff3e30fe43"}], "stats": {"total": 62, "additions": 35, "deletions": 27}, "files": [{"sha": "611fbcbfca17698a45bd54354b39419d8ff26711", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d0de0058121acea1a5688c1b6b7668ce40f5663", "patch": "@@ -1,3 +1,13 @@\n+2002-05-02  Jan Hubicka  <jh@suse.cz>\n+\n+\t* haifa-sched.c (schedule_insn): Print table of instructions and\n+\treservations.\n+\t(sched_block): Do not print ready list at verbosity level 1.\n+\t* sched-vis.c (print_insn): Make global.\n+\t* sched-ebb.c (ebb_print_insn): Rename from...\n+\t(print_insn): ... this one.\n+\t* sched-int.h (print_insn): Declare\n+\n 2002-05-02  Richard Henderson  <rth@redhat.com>\n \n \t* haifa-sched.c (rank_for_schedule): Skip past last_scheduled_insn"}, {"sha": "a42165c78130a755cbca6519da036ecf5d58c2a6", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 20, "deletions": 21, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=6d0de0058121acea1a5688c1b6b7668ce40f5663", "patch": "@@ -1127,29 +1127,28 @@ schedule_insn (insn, ready, clock)\n       || !(*targetm.sched.use_dfa_pipeline_interface) ())\n     unit = insn_unit (insn);\n \n-  if (sched_verbose >= 2)\n+  if (targetm.sched.use_dfa_pipeline_interface\n+      && (*targetm.sched.use_dfa_pipeline_interface) ()\n+      && sched_verbose >= 1)\n     {\n+      char buf[2048];\n \n-      if (targetm.sched.use_dfa_pipeline_interface\n-\t  && (*targetm.sched.use_dfa_pipeline_interface) ())\n-\t{\n-\t  fprintf (sched_dump,\n-\t\t   \";;\\t\\t--> scheduling insn <<<%d>>>:reservation \",\n-\t\t   INSN_UID (insn));\n-\t  \n-\t  if (recog_memoized (insn) < 0)\n-\t    fprintf (sched_dump, \"nothing\");\n-\t  else\n-\t    print_reservation (sched_dump, insn);\n-\t}\n-      else\n-\t{\n-\t  fprintf (sched_dump, \";;\\t\\t--> scheduling insn <<<%d>>> on unit \",\n-\t\t   INSN_UID (insn));\n-\t  insn_print_units (insn);\n-\t}\n+      print_insn (buf, insn, 0);\n+      buf[40]=0;\n+      fprintf (sched_dump, \";;\\t%3i--> %-40s:\", clock, buf);\n \n-      fprintf (sched_dump, \"\\n\");\n+      if (recog_memoized (insn) < 0)\n+\tfprintf (sched_dump, \"nothing\");\n+      else\n+\tprint_reservation (sched_dump, insn);\n+      fputc ('\\n', sched_dump);\n+    }\n+  else if (sched_verbose >= 2)\n+    {\n+      fprintf (sched_dump, \";;\\t\\t--> scheduling insn <<<%d>>> on unit \",\n+\t       INSN_UID (insn));\n+      insn_print_units (insn);\n+      fputc ('\\n', sched_dump);\n     }\n \n   if (!targetm.sched.use_dfa_pipeline_interface\n@@ -2052,7 +2051,7 @@ schedule_block (b, rgn_n_insns)\n \t  rtx insn;\n \t  int cost;\n \n-\t  if (sched_verbose)\n+\t  if (sched_verbose >= 2)\n \t    {\n \t      fprintf (sched_dump, \";;\\tReady list (t =%3d):  \",\n \t\t       clock_var);"}, {"sha": "7b07d2cd3f16687967d375119379548ded3c060e", "filename": "gcc/sched-ebb.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2Fsched-ebb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2Fsched-ebb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-ebb.c?ref=6d0de0058121acea1a5688c1b6b7668ce40f5663", "patch": "@@ -49,7 +49,7 @@ static void init_ready_list PARAMS ((struct ready_list *));\n static int can_schedule_ready_p PARAMS ((rtx));\n static int new_ready PARAMS ((rtx));\n static int schedule_more_p PARAMS ((void));\n-static const char *print_insn PARAMS ((rtx, int));\n+static const char *ebb_print_insn PARAMS ((rtx, int));\n static int rank PARAMS ((rtx, rtx));\n static int contributes_to_priority PARAMS ((rtx, rtx));\n static void compute_jump_reg_dependencies PARAMS ((rtx, regset));\n@@ -128,7 +128,7 @@ new_ready (next)\n    to be formatted so that multiple output lines will line up nicely.  */\n \n static const char *\n-print_insn (insn, aligned)\n+ebb_print_insn (insn, aligned)\n      rtx insn;\n      int aligned ATTRIBUTE_UNUSED;\n {\n@@ -188,7 +188,7 @@ static struct sched_info ebb_sched_info =\n   schedule_more_p,\n   new_ready,\n   rank,\n-  print_insn,\n+  ebb_print_insn,\n   contributes_to_priority,\n   compute_jump_reg_dependencies,\n "}, {"sha": "56c200e86fb9c8671f7bf80002ab5194cfe988fc", "filename": "gcc/sched-int.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2Fsched-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2Fsched-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-int.h?ref=6d0de0058121acea1a5688c1b6b7668ce40f5663", "patch": "@@ -311,4 +311,4 @@ extern int insn_unit PARAMS ((rtx));\n extern int insn_cost PARAMS ((rtx, rtx, rtx));\n extern rtx get_unit_last_insn PARAMS ((int));\n extern int actual_hazard_this_instance PARAMS ((int, int, rtx, int, int));\n-\n+extern void print_insn PARAMS ((char *, rtx, int));"}, {"sha": "48b68542edc36f28ef6e6858f9ec5f90bd3d7baf", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0de0058121acea1a5688c1b6b7668ce40f5663/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=6d0de0058121acea1a5688c1b6b7668ce40f5663", "patch": "@@ -49,7 +49,6 @@ static int get_visual_tbl_length PARAMS ((void));\n static void print_exp PARAMS ((char *, rtx, int));\n static void print_value PARAMS ((char *, rtx, int));\n static void print_pattern PARAMS ((char *, rtx, int));\n-static void print_insn PARAMS ((char *, rtx, int));\n \n /* Print names of units on which insn can/should execute, for debugging.  */\n \n@@ -759,7 +758,7 @@ print_pattern (buf, x, verbose)\n    (Probably the last \"option\" should be extended somehow, since it\n    depends now on sched.c inner variables ...)  */\n \n-static void\n+void\n print_insn (buf, x, verbose)\n      char *buf;\n      rtx x;"}]}