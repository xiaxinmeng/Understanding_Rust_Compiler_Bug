{"sha": "27315aa68fbb97cc8cbb71da2ca54b9e8052b057", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjczMTVhYTY4ZmJiOTdjYzhjYmI3MWRhMmNhNTRiOWU4MDUyYjA1Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-07-22T11:55:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-07-22T11:55:30Z"}, "message": "re PR middle-end/45819 (unexpected unaligned access to volatile int)\n\n2011-07-22  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/45819\n\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Properly\n\tpreserve volatile and notrap flags.\n\n\t* gcc.dg/pr45819.c: New testcase.\n\nFrom-SVN: r176623", "tree": {"sha": "ca416cca45b476a17521ae6b9a7c39a71007f976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca416cca45b476a17521ae6b9a7c39a71007f976"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27315aa68fbb97cc8cbb71da2ca54b9e8052b057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27315aa68fbb97cc8cbb71da2ca54b9e8052b057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27315aa68fbb97cc8cbb71da2ca54b9e8052b057", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27315aa68fbb97cc8cbb71da2ca54b9e8052b057/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "679debeea3913242cd756be013e329ed8ab92af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679debeea3913242cd756be013e329ed8ab92af4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/679debeea3913242cd756be013e329ed8ab92af4"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "cb9c3ae8d9421ee8efd55e9c784c92dfd9e591d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27315aa68fbb97cc8cbb71da2ca54b9e8052b057/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27315aa68fbb97cc8cbb71da2ca54b9e8052b057/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27315aa68fbb97cc8cbb71da2ca54b9e8052b057", "patch": "@@ -1,3 +1,9 @@\n+2011-07-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45819\n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Properly\n+\tpreserve volatile and notrap flags.\n+\n 2011-07-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n "}, {"sha": "d4f641e486782ea5d51e4c55efa3e1db6e5e2459", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27315aa68fbb97cc8cbb71da2ca54b9e8052b057/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27315aa68fbb97cc8cbb71da2ca54b9e8052b057/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27315aa68fbb97cc8cbb71da2ca54b9e8052b057", "patch": "@@ -1,3 +1,8 @@\n+2011-07-22  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45819\n+\t* gcc.dg/pr45819.c: New testcase.\n+\n 2011-07-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* lib/target-supports.exp (check_ifunc_available): Rewrite."}, {"sha": "de968003ef2021754439eba00abe30ec3ff8b3bf", "filename": "gcc/testsuite/gcc.dg/pr45819.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27315aa68fbb97cc8cbb71da2ca54b9e8052b057/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45819.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27315aa68fbb97cc8cbb71da2ca54b9e8052b057/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45819.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45819.c?ref=27315aa68fbb97cc8cbb71da2ca54b9e8052b057", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+struct ehci_regs {\n+    char x;\n+    unsigned int port_status[0];\n+} __attribute__ ((packed));\n+\n+struct ehci_hcd {\n+    struct ehci_regs *regs;\n+};\n+\n+int ehci_hub_control (struct ehci_hcd *ehci, int wIndex)\n+{\n+  unsigned int *status_reg = &ehci->regs->port_status[wIndex];\n+  return *(volatile unsigned int *)status_reg;\n+}\n+\n+/* { dg-final { scan-tree-dump \"={v}\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "40db9285b9882a1dd838b81ae145ee9bd811d5d7", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27315aa68fbb97cc8cbb71da2ca54b9e8052b057/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27315aa68fbb97cc8cbb71da2ca54b9e8052b057/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=27315aa68fbb97cc8cbb71da2ca54b9e8052b057", "patch": "@@ -875,6 +875,8 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n \t    }\n \t  *def_rhs_basep = build2 (MEM_REF, TREE_TYPE (*def_rhs_basep),\n \t\t\t\t   new_base, new_offset);\n+\t  TREE_THIS_VOLATILE (*def_rhs_basep) = TREE_THIS_VOLATILE (lhs);\n+\t  TREE_THIS_NOTRAP (*def_rhs_basep) = TREE_THIS_NOTRAP (lhs);\n \t  gimple_assign_set_lhs (use_stmt,\n \t\t\t\t unshare_expr (TREE_OPERAND (def_rhs, 0)));\n \t  *def_rhs_basep = saved;\n@@ -927,9 +929,9 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n \t  tidy_after_forward_propagate_addr (use_stmt);\n \t  return res;\n \t}\n-      /* If the LHS is a plain dereference and the value type is the same as\n+      /* If the RHS is a plain dereference and the value type is the same as\n          that of the pointed-to type of the address we can put the\n-\t dereferenced address on the LHS preserving the original alias-type.  */\n+\t dereferenced address on the RHS preserving the original alias-type.  */\n       else if (gimple_assign_rhs1 (use_stmt) == rhs\n \t       && useless_type_conversion_p\n \t\t    (TREE_TYPE (gimple_assign_lhs (use_stmt)),\n@@ -954,6 +956,8 @@ forward_propagate_addr_expr_1 (tree name, tree def_rhs,\n \t    }\n \t  *def_rhs_basep = build2 (MEM_REF, TREE_TYPE (*def_rhs_basep),\n \t\t\t\t   new_base, new_offset);\n+\t  TREE_THIS_VOLATILE (*def_rhs_basep) = TREE_THIS_VOLATILE (rhs);\n+\t  TREE_THIS_NOTRAP (*def_rhs_basep) = TREE_THIS_NOTRAP (rhs);\n \t  gimple_assign_set_rhs1 (use_stmt,\n \t\t\t\t  unshare_expr (TREE_OPERAND (def_rhs, 0)));\n \t  *def_rhs_basep = saved;"}]}