{"sha": "d38bbb85117a9947797f10d459fe0c23ea479313", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM4YmJiODUxMTdhOTk0Nzc5N2YxMGQ0NTlmZTBjMjNlYTQ3OTMxMw==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-03-10T21:15:08Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-03-10T21:15:51Z"}, "message": "[PR99422] LRA: Don't check unknown constraint, use X for empty constraint\n\nUsing CONSTRAINT__UNKNOWN was a bad idea, although it triggered a lot\nhidden bugs.  It is better to use X instead of empty constraint.\n\ngcc/ChangeLog:\n\n\tPR target/99422\n\t* lra-constraints.c (process_address_1): Don't check unknown\n\tconstraint, use X for empty constraint.", "tree": {"sha": "756f3f77c138be4c80bb9fee630afbef560e3347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/756f3f77c138be4c80bb9fee630afbef560e3347"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d38bbb85117a9947797f10d459fe0c23ea479313", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d38bbb85117a9947797f10d459fe0c23ea479313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d38bbb85117a9947797f10d459fe0c23ea479313", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d38bbb85117a9947797f10d459fe0c23ea479313/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f316f41ce0fd90570f4d4444c29c639a322a0be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f316f41ce0fd90570f4d4444c29c639a322a0be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f316f41ce0fd90570f4d4444c29c639a322a0be"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "9205826960caf4081f78ab5f74617435c21d9438", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d38bbb85117a9947797f10d459fe0c23ea479313/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d38bbb85117a9947797f10d459fe0c23ea479313/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=d38bbb85117a9947797f10d459fe0c23ea479313", "patch": "@@ -3459,7 +3459,7 @@ process_address_1 (int nop, bool check_only_p,\n       constraint\n \t= skip_contraint_modifiers (curr_static_id->operand[dup].constraint);\n     }\n-  cn = lookup_constraint (constraint);\n+  cn = lookup_constraint (*constraint == '\\0' ? \"X\" : constraint);\n   if (insn_extra_address_constraint (cn)\n       /* When we find an asm operand with an address constraint that\n \t doesn't satisfy address_operand to begin with, we clear\n@@ -3475,9 +3475,8 @@ process_address_1 (int nop, bool check_only_p,\n      i.e. bcst_mem_operand in i386 backend.  */\n   else if (MEM_P (mem)\n \t   && !(INSN_CODE (curr_insn) < 0\n-\t\t&& ((cn == CONSTRAINT__UNKNOWN && *constraint != 'g')\n-\t\t    || (get_constraint_type (cn) == CT_FIXED_FORM\n-\t\t\t&& constraint_satisfied_p (op, cn)))))\n+\t\t&& get_constraint_type (cn) == CT_FIXED_FORM\n+\t\t&& constraint_satisfied_p (op, cn)))\n     decompose_mem_address (&ad, mem);\n   else if (GET_CODE (op) == SUBREG\n \t   && MEM_P (SUBREG_REG (op)))"}]}