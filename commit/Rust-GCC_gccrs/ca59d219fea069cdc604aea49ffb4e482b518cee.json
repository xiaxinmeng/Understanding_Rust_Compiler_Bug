{"sha": "ca59d219fea069cdc604aea49ffb4e482b518cee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E1OWQyMTlmZWEwNjljZGM2MDRhZWE0OWZmYjRlNDgyYjUxOGNlZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-15T22:29:35Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-15T22:29:35Z"}, "message": "runtime: Support broken makecontext on Solaris 8/9.\n\nFrom Rainer Orth.\n\nFrom-SVN: r184289", "tree": {"sha": "8479da6f747b3bcc95251ebeec9fd6caef172543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8479da6f747b3bcc95251ebeec9fd6caef172543"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca59d219fea069cdc604aea49ffb4e482b518cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca59d219fea069cdc604aea49ffb4e482b518cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca59d219fea069cdc604aea49ffb4e482b518cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca59d219fea069cdc604aea49ffb4e482b518cee/comments", "author": null, "committer": null, "parents": [{"sha": "a0367cc1accefe75740171915e77b6122b7c9e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0367cc1accefe75740171915e77b6122b7c9e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0367cc1accefe75740171915e77b6122b7c9e67"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "5318cf58c441310b5dbeef2dd1bde09fd6ca8fe8", "filename": "libgo/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca59d219fea069cdc604aea49ffb4e482b518cee/libgo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca59d219fea069cdc604aea49ffb4e482b518cee/libgo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig.h.in?ref=ca59d219fea069cdc604aea49ffb4e482b518cee", "patch": "@@ -182,6 +182,9 @@\n    */\n #undef LT_OBJDIR\n \n+/* Define if makecontext expects top of stack in uc_stack. */\n+#undef MAKECONTEXT_STACK_TOP\n+\n /* Name of package */\n #undef PACKAGE\n "}, {"sha": "7da2e3f7c2a0fb4a45e14acbc0e3005a1e3e76ab", "filename": "libgo/configure", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca59d219fea069cdc604aea49ffb4e482b518cee/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca59d219fea069cdc604aea49ffb4e482b518cee/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=ca59d219fea069cdc604aea49ffb4e482b518cee", "patch": "@@ -14873,6 +14873,20 @@ $as_echo \"#define HAVE_STRUCT_EXCEPTION 1\" >>confdefs.h\n \n fi\n \n+case \"$target\" in\n+  sparc*-*-solaris2.[89]*)\n+    libgo_cv_lib_makecontext_stack_top=yes\n+    ;;\n+  *)\n+    libgo_cv_lib_makecontext_stack_top=no\n+    ;;\n+esac\n+if test \"$libgo_cv_lib_makecontext_stack_top\" = \"yes\"; then\n+\n+$as_echo \"#define MAKECONTEXT_STACK_TOP 1\" >>confdefs.h\n+\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether setcontext clobbers TLS variables\" >&5\n $as_echo_n \"checking whether setcontext clobbers TLS variables... \" >&6; }\n if test \"${libgo_cv_lib_setcontext_clobbers_tls+set}\" = set; then :\n@@ -14974,6 +14988,9 @@ main ()\n     abort ();\n \n   c.uc_stack.ss_sp = stack;\n+#ifdef MAKECONTEXT_STACK_TOP\n+  c.uc_stack.ss_sp += sizeof stack;\n+#endif\n   c.uc_stack.ss_flags = 0;\n   c.uc_stack.ss_size = sizeof stack;\n   c.uc_link = NULL;"}, {"sha": "479ced0ef8a218c54a52fa4d72df522fd72cd2a5", "filename": "libgo/configure.ac", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca59d219fea069cdc604aea49ffb4e482b518cee/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca59d219fea069cdc604aea49ffb4e482b518cee/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=ca59d219fea069cdc604aea49ffb4e482b518cee", "patch": "@@ -611,6 +611,21 @@ if test \"$libgo_has_struct_exception\" = \"yes\"; then\n             [Define to 1 if <math.h> defines struct exception])\n fi\n \n+dnl Check if makecontext expects the uc_stack member of ucontext to point\n+dnl to the top of the stack.\n+case \"$target\" in\n+  sparc*-*-solaris2.[[89]]*)\n+    libgo_cv_lib_makecontext_stack_top=yes\n+    ;;\n+  *)\n+    libgo_cv_lib_makecontext_stack_top=no\n+    ;;\n+esac\n+if test \"$libgo_cv_lib_makecontext_stack_top\" = \"yes\"; then\n+  AC_DEFINE(MAKECONTEXT_STACK_TOP, 1,\n+\t    [Define if makecontext expects top of stack in uc_stack.])\n+fi\n+\n dnl See whether setcontext changes the value of TLS variables.\n AC_CACHE_CHECK([whether setcontext clobbers TLS variables],\n [libgo_cv_lib_setcontext_clobbers_tls],\n@@ -667,6 +682,9 @@ main ()\n     abort ();\n \n   c.uc_stack.ss_sp = stack;\n+#ifdef MAKECONTEXT_STACK_TOP\n+  c.uc_stack.ss_sp += sizeof stack;\n+#endif\n   c.uc_stack.ss_flags = 0;\n   c.uc_stack.ss_size = sizeof stack;\n   c.uc_link = NULL;"}, {"sha": "d7e1e5ff405b243045173303e62f02c1a85fcb45", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca59d219fea069cdc604aea49ffb4e482b518cee/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca59d219fea069cdc604aea49ffb4e482b518cee/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=ca59d219fea069cdc604aea49ffb4e482b518cee", "patch": "@@ -1316,6 +1316,9 @@ __go_go(void (*fn)(void*), void* arg)\n \n \tgetcontext(&newg->context);\n \tnewg->context.uc_stack.ss_sp = sp;\n+#ifdef MAKECONTEXT_STACK_TOP\n+\tnewg->context.uc_stack.ss_sp += spsize;\n+#endif\n \tnewg->context.uc_stack.ss_size = spsize;\n \tmakecontext(&newg->context, kickoff, 0);\n "}]}