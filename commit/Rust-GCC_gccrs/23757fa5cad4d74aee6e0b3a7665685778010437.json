{"sha": "23757fa5cad4d74aee6e0b3a7665685778010437", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM3NTdmYTVjYWQ0ZDc0YWVlNmUwYjNhNzY2NTY4NTc3ODAxMDQzNw==", "commit": {"author": {"name": "Dalibor Topic", "email": "robilad@kaffe.org", "date": "2003-12-02T17:05:40Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-12-02T17:05:40Z"}, "message": "Reported by: Jim Pick <jim@kaffe.org>\n\n2003-12-02  Dalibor Topic <robilad@kaffe.org>\n\n\tReported by: Jim Pick <jim@kaffe.org>\n\t* libraries/javalib/java/util/Hashtable.java\n\t(internalcontainsValue): New method.\n\t(contains): Delegate to internalContainsValue.\n\n\tReported by: Mark Wielaard  <mark@klomp.org>\n\t* libraries/javalib/java/util/Hashtable.java\n\t(contains): Improved comment.\n\n\tReported by: Jeroen Frijters  <jeroen@frijters.net>\n\t* libraries/javalib/java/util/Hashtable.java\n\t(containsValue): Delegate to contains(Object) to make sure older\n\tcode overwriting it continues to work.\n\nFrom-SVN: r74190", "tree": {"sha": "45b6fc81c77e398fa46926214c3805769035ed44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45b6fc81c77e398fa46926214c3805769035ed44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23757fa5cad4d74aee6e0b3a7665685778010437", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23757fa5cad4d74aee6e0b3a7665685778010437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23757fa5cad4d74aee6e0b3a7665685778010437", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23757fa5cad4d74aee6e0b3a7665685778010437/comments", "author": null, "committer": null, "parents": [{"sha": "a1045386316fccf1a884820f8ce0589ecf8dcdd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1045386316fccf1a884820f8ce0589ecf8dcdd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1045386316fccf1a884820f8ce0589ecf8dcdd9"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "d97672fa5ffb308c713406a2de1155e2c1849e70", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23757fa5cad4d74aee6e0b3a7665685778010437/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23757fa5cad4d74aee6e0b3a7665685778010437/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=23757fa5cad4d74aee6e0b3a7665685778010437", "patch": "@@ -1,3 +1,19 @@\n+2003-12-02  Dalibor Topic <robilad@kaffe.org>\n+\n+\tReported by: Jim Pick <jim@kaffe.org>\n+\t* libraries/javalib/java/util/Hashtable.java\n+\t(internalcontainsValue): New method.\n+\t(contains): Delegate to internalContainsValue.\n+\t\n+\tReported by: Mark Wielaard  <mark@klomp.org>\n+\t* libraries/javalib/java/util/Hashtable.java\n+\t(contains): Improved comment.\n+\t\n+\tReported by: Jeroen Frijters  <jeroen@frijters.net>\n+\t* libraries/javalib/java/util/Hashtable.java\n+\t(containsValue): Delegate to contains(Object) to make sure older\n+\tcode overwriting it continues to work.\n+\n 2003-12-02  Fernando Nasser  <fnasser@redhat.com>\n \n \t* gnu/java/awt/peer/gtk/GtkListPeer.java (handleEvent): New"}, {"sha": "d19b2fbbc8132fda0c7cd8ba55c3ff87fcc8ba48", "filename": "libjava/java/util/Hashtable.java", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23757fa5cad4d74aee6e0b3a7665685778010437/libjava%2Fjava%2Futil%2FHashtable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23757fa5cad4d74aee6e0b3a7665685778010437/libjava%2Fjava%2Futil%2FHashtable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FHashtable.java?ref=23757fa5cad4d74aee6e0b3a7665685778010437", "patch": "@@ -333,7 +333,11 @@ public Enumeration elements()\n    */\n   public synchronized boolean contains(Object value)\n   {\n-    return containsValue(value);\n+    /* delegate to non-overridable worker method \n+     * to avoid blowing up the stack, when called \n+     * from overridden contains[Value]() method.\n+     */\n+    return internalContainsValue(value);\n   }\n \n   /**\n@@ -349,6 +353,25 @@ public synchronized boolean contains(Object value)\n    * @since 1.2\n    */\n   public boolean containsValue(Object value)\n+  {\n+    /* delegate to older method to make sure code overwriting it \n+     * continues to work.\n+     */\n+    return contains(value);\n+  }\n+\n+  /**\n+   * Returns true if this Hashtable contains a value <code>o</code>, such that\n+   * <code>o.equals(value)</code>. This is an internal worker method\n+   * called by <code>contains()</code> and <code>containsValue()</code>.\n+   *\n+   * @param value the value to search for in this Hashtable\n+   * @return true if at least one key maps to the value\n+   * @see #contains(Object)\n+   * @see #containsKey(Object)\n+   * @throws NullPointerException if <code>value</code> is null\n+   */\n+  private boolean internalContainsValue(Object value)\n   {\n     for (int i = buckets.length - 1; i >= 0; i--)\n       {"}]}