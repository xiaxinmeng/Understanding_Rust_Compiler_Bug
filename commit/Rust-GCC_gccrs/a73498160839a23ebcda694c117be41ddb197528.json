{"sha": "a73498160839a23ebcda694c117be41ddb197528", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczNDk4MTYwODM5YTIzZWJjZGE2OTRjMTE3YmU0MWRkYjE5NzUyOA==", "commit": {"author": {"name": "Jeroen Frijters", "email": "jeroen@frijters.net", "date": "2004-11-18T15:26:45Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-11-18T15:26:45Z"}, "message": "StackTraceElement.java: Made final.\n\n2004-11-18  Jeroen Frijters  <address@bogus.example.com>\n\n\t* java/lang/StackTraceElement.java: Made final.\n\t* java/nio/channels/Channels.java: Added private constructor.\n\t* java/rmi/Naming.java: Added private constructor.\n\t* java/rmi/registry/LocateRegistry.java: Added private constructor.\n\t* java/rmi/server/RMIClassLoader.java: Added private constructor.\n\t* java/security/KeyPairGeneratorSpi.java\n\t(clone): Made protected and simplified implementation.\n\t* java/text/DateFormat.java\n\t(allFields): Made package accessible.\n\t* java/text/DecimalFormat.java\n\t(formatInternal): Made private.\n\t* java/text/Format.java\n\t(formatInternal): Made private.\n\t* java/util/logging/Handler.java: Made constructor protected.\n\t* java/util/regex/Matcher.java: Made final.\n\t* java/util/regex/Pattern.java: Made final.\n\t* javax/crypto/CipherInputStream.java\n\t(mark): Corrected mark parameter type (from long to int).\n\t* javax/crypto/ExemptionMechanism.java\n\t(finalize): Added.\n\t* javax/crypto/Mac.java\n\t(getMacLength): Made final.\n\t(clone): Made final.\n\t* javax/imageio/ImageIO.java: Added private constructor.\n\t* javax/imageio/stream/ImageInputStreamImpl.java\n\t(checkClosed): Made final.\n\t* javax/net/ssl/SSLPermission.java: Made final.\n\t* javax/print/DocFlavor.java\n\t(hostEncoding): Added work-around to prevent the field from being\n\ta compile time constant.\n\t* javax/print/attribute/AttributeSetUtilities.java: Added private\n\tconstructor.\n\t(UnmodifiableDocAttributeSet): Made private.\n\t(UnmodifiablePrintJobAttributeSet): Made private.\n\t(UnmodifiablePrintRequestAttributeSet): Made private.\n\t(UnmodifiablePrintServiceAttributeSet): Made private.\n\t(SynchronizedAttributeSet): Made private.\n\t(SynchronizedDocAttributeSet): Made private.\n\t(SynchronizedPrintJobAttributeSet): Made private.\n\t(SynchronizedPrintRequestAttributeSet): Made private.\n\t(SynchronizedPrintServiceAttributeSet): Made private.\n\t* javax/security/auth/PrivateCredentialPermission.java: Made final.\n\nFrom-SVN: r90866", "tree": {"sha": "9338ba46e1d50f05eca700161824c4a97dbb3435", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9338ba46e1d50f05eca700161824c4a97dbb3435"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a73498160839a23ebcda694c117be41ddb197528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73498160839a23ebcda694c117be41ddb197528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a73498160839a23ebcda694c117be41ddb197528", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73498160839a23ebcda694c117be41ddb197528/comments", "author": {"login": "jfrijters", "id": 2994393, "node_id": "MDQ6VXNlcjI5OTQzOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2994393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrijters", "html_url": "https://github.com/jfrijters", "followers_url": "https://api.github.com/users/jfrijters/followers", "following_url": "https://api.github.com/users/jfrijters/following{/other_user}", "gists_url": "https://api.github.com/users/jfrijters/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrijters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrijters/subscriptions", "organizations_url": "https://api.github.com/users/jfrijters/orgs", "repos_url": "https://api.github.com/users/jfrijters/repos", "events_url": "https://api.github.com/users/jfrijters/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrijters/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ef8069a0cc1e5071ca40a5685247b56be5a68d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef8069a0cc1e5071ca40a5685247b56be5a68d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef8069a0cc1e5071ca40a5685247b56be5a68d4"}], "stats": {"total": 141, "additions": 107, "deletions": 34}, "files": [{"sha": "f475b05b335cb803835d2d8b74d246fa54dfb2c2", "filename": "libjava/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -1,3 +1,48 @@\n+2004-11-18  Jeroen Frijters  <address@bogus.example.com>\n+\n+\t* java/lang/StackTraceElement.java: Made final.\n+\t* java/nio/channels/Channels.java: Added private constructor.\n+\t* java/rmi/Naming.java: Added private constructor.\n+\t* java/rmi/registry/LocateRegistry.java: Added private constructor.\n+\t* java/rmi/server/RMIClassLoader.java: Added private constructor.\n+\t* java/security/KeyPairGeneratorSpi.java\n+\t(clone): Made protected and simplified implementation.\n+\t* java/text/DateFormat.java\n+\t(allFields): Made package accessible.\n+\t* java/text/DecimalFormat.java\n+\t(formatInternal): Made private.\n+\t* java/text/Format.java\n+\t(formatInternal): Made private.\n+\t* java/util/logging/Handler.java: Made constructor protected.\n+\t* java/util/regex/Matcher.java: Made final.\n+\t* java/util/regex/Pattern.java: Made final.\n+\t* javax/crypto/CipherInputStream.java\n+\t(mark): Corrected mark parameter type (from long to int).\n+\t* javax/crypto/ExemptionMechanism.java\n+\t(finalize): Added.\n+\t* javax/crypto/Mac.java\n+\t(getMacLength): Made final.\n+\t(clone): Made final.\n+\t* javax/imageio/ImageIO.java: Added private constructor.\n+\t* javax/imageio/stream/ImageInputStreamImpl.java\n+\t(checkClosed): Made final.\n+\t* javax/net/ssl/SSLPermission.java: Made final.\n+\t* javax/print/DocFlavor.java\n+\t(hostEncoding): Added work-around to prevent the field from being\n+\ta compile time constant.\n+\t* javax/print/attribute/AttributeSetUtilities.java: Added private\n+\tconstructor.\n+\t(UnmodifiableDocAttributeSet): Made private.\n+\t(UnmodifiablePrintJobAttributeSet): Made private.\n+\t(UnmodifiablePrintRequestAttributeSet): Made private.\n+\t(UnmodifiablePrintServiceAttributeSet): Made private.\n+\t(SynchronizedAttributeSet): Made private.\n+\t(SynchronizedDocAttributeSet): Made private.\n+\t(SynchronizedPrintJobAttributeSet): Made private.\n+\t(SynchronizedPrintRequestAttributeSet): Made private.\n+\t(SynchronizedPrintServiceAttributeSet): Made private.\n+\t* javax/security/auth/PrivateCredentialPermission.java: Made final.\n+\n 2004-11-18  Craig Black  <craig.black@aonix.com>\n \n \t* gnu/java/beans/BeanInfoEmbryo.java: Use TreeMap for proper sorting."}, {"sha": "4495186e1750eaec0b9db46d1bd883379a1af42f", "filename": "libjava/java/lang/StackTraceElement.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Flang%2FStackTraceElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Flang%2FStackTraceElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FStackTraceElement.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -51,7 +51,7 @@\n  * @since 1.4\n  * @status updated to 1.4\n  */\n-public class StackTraceElement implements Serializable\n+public final class StackTraceElement implements Serializable\n {\n   /**\n    * Compatible with JDK 1.4+."}, {"sha": "3e5316efbe815a269b0da22b6c33dbd4fcaf33a0", "filename": "libjava/java/nio/channels/Channels.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -59,6 +59,11 @@\n  */\n public final class Channels\n {\n+  /**\n+   * This class isn't intended to be instantiated.\n+   */\n+  private Channels() {}\n+\n   /**\n    * Constructs a stream that reads bytes from the given channel.\n    */"}, {"sha": "4df9045214a079a2057601783a8a1a6e38e1c9bb", "filename": "libjava/java/rmi/Naming.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Frmi%2FNaming.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Frmi%2FNaming.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2FNaming.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -44,6 +44,10 @@\n import java.rmi.registry.Registry;\n \n public final class Naming {\n+  /**\n+   * This class isn't intended to be instantiated.\n+   */\n+  private Naming() {}\n \n /**\n  * Looks for the remote object that is associated with the named service."}, {"sha": "58452158c72f988bed9c83c9cce4eb09d97513aa", "filename": "libjava/java/rmi/registry/LocateRegistry.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Frmi%2Fregistry%2FLocateRegistry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Frmi%2Fregistry%2FLocateRegistry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fregistry%2FLocateRegistry.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -50,6 +50,10 @@\n import java.rmi.server.RemoteRef;\n \n public final class LocateRegistry {\n+  /**\n+   * This class isn't intended to be instantiated.\n+   */\n+  private LocateRegistry() {}\n \n public static Registry getRegistry() throws RemoteException {\n \treturn (getRegistry(\"localhost\", Registry.REGISTRY_PORT));"}, {"sha": "6add274ef3e1c8fdee47ce023cc9f2f529e61c43", "filename": "libjava/java/rmi/server/RMIClassLoader.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -55,6 +55,11 @@\n  */\n public class RMIClassLoader\n {\n+  /**\n+   * This class isn't intended to be instantiated.\n+   */\n+  private RMIClassLoader() {}\n+\n   private static class MyClassLoader extends URLClassLoader\n   {\n     // Package-private to avoid a trampoline constructor."}, {"sha": "07de178cfd5904e604aced352fe58c2726cfd59b", "filename": "libjava/java/security/KeyPairGeneratorSpi.java", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Fsecurity%2FKeyPairGeneratorSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Fsecurity%2FKeyPairGeneratorSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FKeyPairGeneratorSpi.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -92,18 +92,11 @@ public void initialize(AlgorithmParameterSpec params, SecureRandom random)\n   public abstract KeyPair generateKeyPair();\n \n   /**\n-     Returns a clone of this class.\n-\n-     If cloning is not supported, then by default the class throws a\n-     CloneNotSupportedException.  The MessageDigestSpi provider\n-     implementation has to overload this class in order to be\n-     cloneable.\n+   * We override clone here to make it accessible for use by\n+   * DummyKeyPairGenerator.\n    */\n-  public Object clone() throws CloneNotSupportedException\n+  protected Object clone() throws CloneNotSupportedException\n   {\n-    if (this instanceof Cloneable)\n-      return super.clone();\n-    else\n-      throw new CloneNotSupportedException();\n+    return super.clone();\n   }\n }"}, {"sha": "6fe4461b0301952c2674725052307602b8a541da", "filename": "libjava/java/text/DateFormat.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Ftext%2FDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Ftext%2FDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDateFormat.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -137,7 +137,7 @@ public static class Field extends Format.Field\n     public static final DateFormat.Field TIME_ZONE\n \t= new Field(\"timezone\", Calendar.ZONE_OFFSET);\n  \n-    public static final DateFormat.Field[] allFields =\n+    static final DateFormat.Field[] allFields =\n     {\n       ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY1,\n       HOUR_OF_DAY0, MINUTE, SECOND, MILLISECOND,"}, {"sha": "8b2c25cd3c3895aed872d850077057b638bb484a", "filename": "libjava/java/text/DecimalFormat.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormat.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -447,8 +447,8 @@ && equals(positiveSuffix, dup.positiveSuffix)\n \t    && useExponentialNotation == dup.useExponentialNotation);\n   }\n \n-  protected void formatInternal (double number, FormatBuffer dest,\n-\t\t\t\t FieldPosition fieldPos)\n+  private void formatInternal (double number, FormatBuffer dest,\n+\t\t\t       FieldPosition fieldPos)\n   {\n     // A very special case.\n     if (Double.isNaN(number))"}, {"sha": "2c75578243cfe00e906e085f9c3e6c4a1a58c039", "filename": "libjava/java/text/Format.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Ftext%2FFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Ftext%2FFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FFormat.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -70,7 +70,7 @@ public static class Field extends AttributedCharacterIterator.Attribute\n   {\n     static final long serialVersionUID = 276966692217360283L;\n    \n-    public Field(String name)\n+    protected Field(String name)\n     {\n       super(name);\n     }"}, {"sha": "c781f09f8557c891fea98c65c65f3ea6a58906ab", "filename": "libjava/java/util/logging/Handler.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Futil%2Flogging%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Futil%2Flogging%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FHandler.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -85,6 +85,7 @@\n    * supposed to provide a Formatter, but this is what the specification\n    * says.\n    */\n+  protected Handler()\n   {\n     level = Level.ALL;\n   }"}, {"sha": "994893ad84b5b5a090894adea32d7a629508d557", "filename": "libjava/java/util/regex/Matcher.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Futil%2Fregex%2FMatcher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Futil%2Fregex%2FMatcher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fregex%2FMatcher.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -45,7 +45,7 @@\n  *\n  * @since 1.4\n  */\n-public class Matcher\n+public final class Matcher\n {\n   private Pattern pattern;\n   private CharSequence input;"}, {"sha": "fa722cfb9b87f571e96189bb6498da3d1d8a7644", "filename": "libjava/java/util/regex/Pattern.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Futil%2Fregex%2FPattern.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjava%2Futil%2Fregex%2FPattern.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fregex%2FPattern.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -50,7 +50,7 @@\n  *\n  * @since 1.4\n  */\n-public class Pattern implements Serializable\n+public final class Pattern implements Serializable\n {\n   private static final long serialVersionUID = 5073258162644648461L;\n   "}, {"sha": "35d4956092d0271d1f9f549cbb4fb52506989359", "filename": "libjava/javax/crypto/CipherInputStream.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fcrypto%2FCipherInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fcrypto%2FCipherInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fcrypto%2FCipherInputStream.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -294,7 +294,7 @@ public boolean markSupported()\n    *\n    * @param mark Is ignored.\n    */\n-  public void mark(long mark)\n+  public void mark(int mark)\n   {\n   }\n "}, {"sha": "b00ff0d5ffe0e4b7abdb388561b5ca343dcbe4d6", "filename": "libjava/javax/crypto/ExemptionMechanism.java", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fcrypto%2FExemptionMechanism.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fcrypto%2FExemptionMechanism.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fcrypto%2FExemptionMechanism.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -222,4 +222,8 @@ public final boolean isCryptoAllowed(Key key)\n   {\n     return true;\n   }\n+\n+  protected void finalize()\n+  {\n+  }\n }"}, {"sha": "9bbd68c21d5489dbd0269f7a521f12e2b8103b41", "filename": "libjava/javax/crypto/Mac.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fcrypto%2FMac.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fcrypto%2FMac.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fcrypto%2FMac.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -290,7 +290,7 @@ public final String getAlgorithm()\n    *\n    * @return The MAC length.\n    */\n-  public int getMacLength()\n+  public final int getMacLength()\n   {\n     return macSpi.engineGetMacLength();\n   }\n@@ -404,7 +404,7 @@ public final void update(byte[] input, int offset, int length)\n    * @throws java.lang.CloneNotSupportedException If the underlying\n    *         implementation is not cloneable.\n    */\n-  public Object clone() throws CloneNotSupportedException\n+  public final Object clone() throws CloneNotSupportedException\n   {\n     Mac result = new Mac((MacSpi) macSpi.clone(), provider, algorithm);\n     result.virgin = virgin;"}, {"sha": "6aa5558919c9aa3550e10509ddffbc90c0d25f12", "filename": "libjava/javax/imageio/ImageIO.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fimageio%2FImageIO.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fimageio%2FImageIO.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fimageio%2FImageIO.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -51,6 +51,11 @@\n \n public final class ImageIO\n {\n+  /**\n+   * This class isn't intended to be instantiated.\n+   */\n+  private ImageIO() {}\n+\n   private static final class ReaderFormatFilter implements ServiceRegistry.Filter\n   {\n     private String formatName;"}, {"sha": "3a5d6dcb6d776001b897e62fc720a6a54f733d6d", "filename": "libjava/javax/imageio/stream/ImageInputStreamImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fimageio%2Fstream%2FImageInputStreamImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fimageio%2Fstream%2FImageInputStreamImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fimageio%2Fstream%2FImageInputStreamImpl.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -58,7 +58,7 @@ public ImageInputStreamImpl()\n     // Do nothing here.\n   }\n \n-  protected void checkClosed()\n+  protected final void checkClosed()\n     throws IOException\n   {\n     if (closed)"}, {"sha": "0fa4a591bd07a986cdf26ca39c8beb7be247abc0", "filename": "libjava/javax/net/ssl/SSLPermission.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fnet%2Fssl%2FSSLPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fnet%2Fssl%2FSSLPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnet%2Fssl%2FSSLPermission.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -43,7 +43,7 @@\n /**\n  * A permission used for accessing SSL classes.\n  */\n-public class SSLPermission extends BasicPermission\n+public final class SSLPermission extends BasicPermission\n {\n \n   // Constant."}, {"sha": "11cc36d1a1156b6bb037d0096e71ef9612d4d957", "filename": "libjava/javax/print/DocFlavor.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fprint%2FDocFlavor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fprint%2FDocFlavor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2FDocFlavor.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -217,7 +217,9 @@ public URL(String mimeType)\n   \n   private static final long serialVersionUID = -4512080796965449721L;\n   \n-  public static final String hostEncoding = \"US-ASCII\";\n+  // FIXME: Get the host encoding from somewhere. Note that the new String is to make\n+  // sure the field won't be a compile time constant.\n+  public static final String hostEncoding = new String(\"US-ASCII\");\n \n   private String mediaSubtype;\n   private String mediaType;"}, {"sha": "32bee51b6cb611d99d7f31518c994973f9f9e3fe", "filename": "libjava/javax/print/attribute/AttributeSetUtilities.java", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fprint%2Fattribute%2FAttributeSetUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fprint%2Fattribute%2FAttributeSetUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2FAttributeSetUtilities.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -41,6 +41,11 @@\n \n public final class AttributeSetUtilities\n {\n+  /**\n+   * This class isn't intended to be instantiated.\n+   */\n+  private AttributeSetUtilities() {}\n+\n   private static class UnmodifiableAttributeSet\n     implements AttributeSet, Serializable\n   {\n@@ -120,7 +125,7 @@ public Attribute[] toArray()\n     }\n   }\n \n-  public static class UnmodifiableDocAttributeSet\n+  private static class UnmodifiableDocAttributeSet\n     extends UnmodifiableAttributeSet\n     implements DocAttributeSet, Serializable\n   {\n@@ -130,7 +135,7 @@ public UnmodifiableDocAttributeSet(DocAttributeSet attributeSet)\n     }\n   }\n \n-  public static class UnmodifiablePrintJobAttributeSet\n+  private static class UnmodifiablePrintJobAttributeSet\n     extends UnmodifiableAttributeSet\n     implements PrintJobAttributeSet, Serializable\n   {\n@@ -140,7 +145,7 @@ public UnmodifiablePrintJobAttributeSet(PrintJobAttributeSet attributeSet)\n     }\n   }\n \n-  public static class UnmodifiablePrintRequestAttributeSet\n+  private static class UnmodifiablePrintRequestAttributeSet\n     extends UnmodifiableAttributeSet\n     implements PrintRequestAttributeSet, Serializable\n   {\n@@ -150,7 +155,7 @@ public UnmodifiablePrintRequestAttributeSet(PrintRequestAttributeSet attributeSe\n     }\n   }\n \n-  public static class UnmodifiablePrintServiceAttributeSet\n+  private static class UnmodifiablePrintServiceAttributeSet\n     extends UnmodifiableAttributeSet\n     implements PrintServiceAttributeSet, Serializable\n   {\n@@ -160,7 +165,7 @@ public UnmodifiablePrintServiceAttributeSet(PrintServiceAttributeSet attributeSe\n     }\n   }\n \n-  public static class SynchronizedAttributeSet\n+  private static class SynchronizedAttributeSet\n     implements AttributeSet, Serializable\n   {\n     private AttributeSet set;\n@@ -239,7 +244,7 @@ public synchronized Attribute[] toArray()\n     }\n   }\n \n-  public static class SynchronizedDocAttributeSet\n+  private static class SynchronizedDocAttributeSet\n     extends SynchronizedAttributeSet\n     implements DocAttributeSet, Serializable\n   {\n@@ -249,7 +254,7 @@ public SynchronizedDocAttributeSet(DocAttributeSet attributeSet)\n     }\n   }\n \n-  public static class SynchronizedPrintJobAttributeSet\n+  private static class SynchronizedPrintJobAttributeSet\n     extends SynchronizedAttributeSet\n     implements PrintJobAttributeSet, Serializable\n   {\n@@ -259,7 +264,7 @@ public SynchronizedPrintJobAttributeSet(PrintJobAttributeSet attributeSet)\n     }\n   }\n \n-  public static class SynchronizedPrintRequestAttributeSet\n+  private static class SynchronizedPrintRequestAttributeSet\n     extends SynchronizedAttributeSet\n     implements PrintRequestAttributeSet, Serializable\n   {\n@@ -269,7 +274,7 @@ public SynchronizedPrintRequestAttributeSet(PrintRequestAttributeSet attributeSe\n     }\n   }\n \n-  public static class SynchronizedPrintServiceAttributeSet\n+  private static class SynchronizedPrintServiceAttributeSet\n     extends SynchronizedAttributeSet\n     implements PrintServiceAttributeSet, Serializable\n   {"}, {"sha": "c8573f79e88c3d445267c7cd9c24341dcf6d4f01", "filename": "libjava/javax/security/auth/PrivateCredentialPermission.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fsecurity%2Fauth%2FPrivateCredentialPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73498160839a23ebcda694c117be41ddb197528/libjava%2Fjavax%2Fsecurity%2Fauth%2FPrivateCredentialPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fsecurity%2Fauth%2FPrivateCredentialPermission.java?ref=a73498160839a23ebcda694c117be41ddb197528", "patch": "@@ -63,7 +63,7 @@\n  * <i>PrincipalName</i> is a string representing the principal, or the\n  * wildcard character.</p>\n  */\n-public class PrivateCredentialPermission extends Permission\n+public final class PrivateCredentialPermission extends Permission\n   implements Serializable\n {\n   /**"}]}