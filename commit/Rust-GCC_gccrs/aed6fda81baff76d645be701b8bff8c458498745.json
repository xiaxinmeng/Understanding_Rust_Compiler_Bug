{"sha": "aed6fda81baff76d645be701b8bff8c458498745", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVkNmZkYTgxYmFmZjc2ZDY0NWJlNzAxYjhiZmY4YzQ1ODQ5ODc0NQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2009-04-17T13:39:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-17T13:39:10Z"}, "message": "re PR ada/35953 (Socket stream subprograms incorrectly handling null arrays)\n\n2009-04-17  Thomas Quinot  <quinot@adacore.com>\n\n\tPR ada/35953\n\n\t* g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.adb,\n\tg-socthi-vxworks.ads, g-socthi-mingw.adb, g-socthi-mingw.ads,\n\tg-socthi.adb, g-stsifd-sockets.adb, g-socthi.ads, g-socket.adb,\n\tg-socket.ads (GNAT.Sockets.Thin.C_Send,\n\tGNAT.Sockets.Thin.Syscall_Send): Remove unused subprograms.\n\tReplace calls to send(2) with equivalent sendto(2) calls.\n\t(GNAT.Sockets.Send_Socket): Factor common code in inlined subprogram.\n\t(GNAT.Sockets.Write): Account for the case of hyper-empty arrays, do not\n\treport an error in that case. Factor code common to the two versions\n\t(datagram and stream) in common routine Stream_Write.\n\nFrom-SVN: r146267", "tree": {"sha": "0f576309d61e6257ec752f221eca1047adf3bc41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f576309d61e6257ec752f221eca1047adf3bc41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aed6fda81baff76d645be701b8bff8c458498745", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed6fda81baff76d645be701b8bff8c458498745", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aed6fda81baff76d645be701b8bff8c458498745", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed6fda81baff76d645be701b8bff8c458498745/comments", "author": null, "committer": null, "parents": [{"sha": "c5d91669f305eb83adb2ef982b05ee19a15fbf47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d91669f305eb83adb2ef982b05ee19a15fbf47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5d91669f305eb83adb2ef982b05ee19a15fbf47"}], "stats": {"total": 321, "additions": 126, "deletions": 195}, "files": [{"sha": "e948e79877e9101529df0630dca10ed905232d2a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -1,3 +1,18 @@\n+2009-04-17  Thomas Quinot  <quinot@adacore.com>\n+\n+\tPR ada/35953\n+\n+\t* g-socthi-vms.adb, g-socthi-vms.ads, g-socthi-vxworks.adb,\n+\tg-socthi-vxworks.ads, g-socthi-mingw.adb, g-socthi-mingw.ads,\n+\tg-socthi.adb, g-stsifd-sockets.adb, g-socthi.ads, g-socket.adb,\n+\tg-socket.ads (GNAT.Sockets.Thin.C_Send,\n+\tGNAT.Sockets.Thin.Syscall_Send): Remove unused subprograms.\n+\tReplace calls to send(2) with equivalent sendto(2) calls.\n+\t(GNAT.Sockets.Send_Socket): Factor common code in inlined subprogram.\n+\t(GNAT.Sockets.Write): Account for the case of hyper-empty arrays, do not\n+\treport an error in that case. Factor code common to the two versions\n+\t(datagram and stream) in common routine Stream_Write.\n+\n 2009-04-17  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_disp.adb: Minor reformatting"}, {"sha": "1250607179fb3423599cf981105a47c6ef489bbf", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 81, "deletions": 66, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -228,6 +228,13 @@ package body GNAT.Sockets is\n      (Stream : in out Stream_Socket_Stream_Type;\n       Item   : Ada.Streams.Stream_Element_Array);\n \n+   procedure Stream_Write\n+     (Socket : Socket_Type;\n+      Item   : Ada.Streams.Stream_Element_Array;\n+      To     : access Sock_Addr_Type);\n+   --  Common implementation for the Write operation of Datagram_Socket_Stream_\n+   --  Type and Stream_Socket_Stream_Type.\n+\n    procedure Wait_On_Socket\n      (Socket    : Socket_Type;\n       For_Read  : Boolean;\n@@ -1801,21 +1808,24 @@ package body GNAT.Sockets is\n       Last   : out Ada.Streams.Stream_Element_Offset;\n       Flags  : Request_Flag_Type := No_Request_Flag)\n    is\n-      Res : C.int;\n-\n    begin\n-      Res :=\n-        C_Send\n-          (C.int (Socket),\n-           Item'Address,\n-           Item'Length,\n-           Set_Forced_Flags (To_Int (Flags)));\n+      Send_Socket (Socket, Item, Last, To => null, Flags => Flags);\n+   end Send_Socket;\n \n-      if Res = Failure then\n-         Raise_Socket_Error (Socket_Errno);\n-      end if;\n+   -----------------\n+   -- Send_Socket --\n+   -----------------\n \n-      Last := Item'First + Ada.Streams.Stream_Element_Offset (Res - 1);\n+   procedure Send_Socket\n+     (Socket : Socket_Type;\n+      Item   : Ada.Streams.Stream_Element_Array;\n+      Last   : out Ada.Streams.Stream_Element_Offset;\n+      To     : Sock_Addr_Type;\n+      Flags  : Request_Flag_Type := No_Request_Flag)\n+   is\n+   begin\n+      Send_Socket\n+        (Socket, Item, Last, To => To'Unrestricted_Access, Flags => Flags);\n    end Send_Socket;\n \n    -----------------\n@@ -1826,26 +1836,36 @@ package body GNAT.Sockets is\n      (Socket : Socket_Type;\n       Item   : Ada.Streams.Stream_Element_Array;\n       Last   : out Ada.Streams.Stream_Element_Offset;\n-      To     : Sock_Addr_Type;\n+      To     : access Sock_Addr_Type;\n       Flags  : Request_Flag_Type := No_Request_Flag)\n    is\n-      Res : C.int;\n-      Sin : aliased Sockaddr_In;\n-      Len : constant C.int := Sin'Size / 8;\n+      Res  : C.int;\n+\n+      Sin  : aliased Sockaddr_In;\n+      C_To : Sockaddr_In_Access;\n+      Len  : C.int;\n \n    begin\n-      Set_Family  (Sin.Sin_Family, To.Family);\n-      Set_Address (Sin'Unchecked_Access, To_In_Addr (To.Addr));\n-      Set_Port\n-        (Sin'Unchecked_Access,\n-         Short_To_Network (C.unsigned_short (To.Port)));\n+      if To /= null then\n+         Set_Family  (Sin.Sin_Family, To.Family);\n+         Set_Address (Sin'Unchecked_Access, To_In_Addr (To.Addr));\n+         Set_Port\n+           (Sin'Unchecked_Access,\n+            Short_To_Network (C.unsigned_short (To.Port)));\n+         C_To := Sin'Unchecked_Access;\n+         Len := Sin'Size / 8;\n+\n+      else\n+         C_To := null;\n+         Len := 0;\n+      end if;\n \n       Res := C_Sendto\n         (C.int (Socket),\n          Item'Address,\n          Item'Length,\n          Set_Forced_Flags (To_Int (Flags)),\n-         Sin'Unchecked_Access,\n+         C_To,\n          Len);\n \n       if Res = Failure then\n@@ -2094,6 +2114,43 @@ package body GNAT.Sockets is\n       return Stream_Access (S);\n    end Stream;\n \n+   ------------------\n+   -- Stream_Write --\n+   ------------------\n+\n+   procedure Stream_Write\n+     (Socket : Socket_Type;\n+      Item   : Ada.Streams.Stream_Element_Array;\n+      To     : access Sock_Addr_Type)\n+   is\n+      First : Ada.Streams.Stream_Element_Offset;\n+      Index : Ada.Streams.Stream_Element_Offset;\n+      Max   : constant Ada.Streams.Stream_Element_Offset := Item'Last;\n+\n+   begin\n+      First := Item'First;\n+      Index := First - 1;\n+      while First <= Max loop\n+         Send_Socket (Socket, Item (First .. Max), Index, To);\n+\n+         --  Exit when all or zero data sent. Zero means that the socket has\n+         --  been closed by peer.\n+\n+         exit when Index < First or else Index = Max;\n+\n+         First := Index + 1;\n+      end loop;\n+\n+      --  For an empty array, we have First > Max, and hence Index >= Max (no\n+      --  error, the loop above is never executed). After a succesful send,\n+      --  Index = Max. The only remaining case, Index < Max, is therefore\n+      --  always an actual send failure.\n+\n+      if Index < Max then\n+         Raise_Socket_Error (Socket_Errno);\n+      end if;\n+   end Stream_Write;\n+\n    ----------\n    -- To_C --\n    ----------\n@@ -2315,31 +2372,8 @@ package body GNAT.Sockets is\n      (Stream : in out Datagram_Socket_Stream_Type;\n       Item   : Ada.Streams.Stream_Element_Array)\n    is\n-      pragma Warnings (Off, Stream);\n-\n-      First : Ada.Streams.Stream_Element_Offset          := Item'First;\n-      Index : Ada.Streams.Stream_Element_Offset          := First - 1;\n-      Max   : constant Ada.Streams.Stream_Element_Offset := Item'Last;\n-\n    begin\n-      loop\n-         Send_Socket\n-           (Stream.Socket,\n-            Item (First .. Max),\n-            Index,\n-            Stream.To);\n-\n-         --  Exit when all or zero data sent. Zero means that the socket has\n-         --  been closed by peer.\n-\n-         exit when Index < First or else Index = Max;\n-\n-         First := Index + 1;\n-      end loop;\n-\n-      if Index /= Max then\n-         raise Socket_Error;\n-      end if;\n+      Stream_Write (Stream.Socket, Item, To => Stream.To'Unrestricted_Access);\n    end Write;\n \n    -----------\n@@ -2350,27 +2384,8 @@ package body GNAT.Sockets is\n      (Stream : in out Stream_Socket_Stream_Type;\n       Item   : Ada.Streams.Stream_Element_Array)\n    is\n-      pragma Warnings (Off, Stream);\n-\n-      First : Ada.Streams.Stream_Element_Offset          := Item'First;\n-      Index : Ada.Streams.Stream_Element_Offset          := First - 1;\n-      Max   : constant Ada.Streams.Stream_Element_Offset := Item'Last;\n-\n    begin\n-      loop\n-         Send_Socket (Stream.Socket, Item (First .. Max), Index);\n-\n-         --  Exit when all or zero data sent. Zero means that the socket has\n-         --  been closed by peer.\n-\n-         exit when Index < First or else Index = Max;\n-\n-         First := Index + 1;\n-      end loop;\n-\n-      if Index /= Max then\n-         raise Socket_Error;\n-      end if;\n+      Stream_Write (Stream.Socket, Item, To => null);\n    end Write;\n \n    Sockets_Library_Controller_Object : Sockets_Library_Controller;"}, {"sha": "439655f5371ffba289e343da6af93828bc13f979", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -917,8 +917,21 @@ package GNAT.Sockets is\n      (Socket : Socket_Type;\n       Item   : Ada.Streams.Stream_Element_Array;\n       Last   : out Ada.Streams.Stream_Element_Offset;\n+      To     : access Sock_Addr_Type;\n       Flags  : Request_Flag_Type := No_Request_Flag);\n-   --  Transmit a message to another socket. Note that Last is set to\n+   pragma Inline (Send_Socket);\n+   --  Transmit a message over a socket. For a datagram socket, the address is\n+   --  given by To.all. For a stream socket, To must be null. Flags\n+   --  allows to control the transmission. Raises Socket_Error on error.\n+   --  Note: this subprogram is inlined because it is also used to implement\n+   --  the two variants below.\n+\n+   procedure Send_Socket\n+     (Socket : Socket_Type;\n+      Item   : Ada.Streams.Stream_Element_Array;\n+      Last   : out Ada.Streams.Stream_Element_Offset;\n+      Flags  : Request_Flag_Type := No_Request_Flag);\n+   --  Transmit a message over a socket. Note that Last is set to\n    --  Item'First-1 when socket has been closed by peer. This is not\n    --  considered an error and no exception is raised. Flags allows to control\n    --  the transmission. Raises Socket_Error on any other error condition.\n@@ -929,8 +942,9 @@ package GNAT.Sockets is\n       Last   : out Ada.Streams.Stream_Element_Offset;\n       To     : Sock_Addr_Type;\n       Flags  : Request_Flag_Type := No_Request_Flag);\n-   --  Transmit a message to another socket. The address is given by To. Flags\n-   --  allows to control the transmission. Raises Socket_Error on error.\n+   --  Transmit a message over a datagram socket. The destination address is\n+   --  To. Flags allows to control the transmission. Raises Socket_Error on\n+   --  error.\n \n    procedure Send_Vector\n      (Socket : Socket_Type;"}, {"sha": "c3a120f32a195210599bb1fc53eaa0b23b350560", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -390,11 +390,13 @@ package body GNAT.Sockets.Thin is\n \n    begin\n       for J in Iovec'Range loop\n-         Res := C_Send\n+         Res := C_Sendto\n            (Fd,\n             Iovec (J).Base.all'Address,\n             C.int (Iovec (J).Length),\n-            0);\n+            Flags => 0,\n+            To    => null,\n+            Tolen => 0);\n \n          if Res < 0 then\n             return Res;"}, {"sha": "ab4e7b0d051c86ec6ec05bda54fa6e161bd4a00f", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -153,12 +153,6 @@ package GNAT.Sockets.Thin is\n       Exceptfds : access Fd_Set;\n       Timeout   : Timeval_Access) return C.int;\n \n-   function C_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int;\n-\n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n@@ -243,7 +237,6 @@ private\n    pragma Import (Stdcall, C_Listen, \"listen\");\n    pragma Import (Stdcall, C_Recv, \"recv\");\n    pragma Import (Stdcall, C_Recvfrom, \"recvfrom\");\n-   pragma Import (Stdcall, C_Send, \"send\");\n    pragma Import (Stdcall, C_Sendto, \"sendto\");\n    pragma Import (Stdcall, C_Setsockopt, \"setsockopt\");\n    pragma Import (Stdcall, C_Shutdown, \"shutdown\");"}, {"sha": "8a410a44c40dd425def6aa94e9a7b0281b1bd81e", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 4, "deletions": 34, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -92,13 +92,6 @@ package body GNAT.Sockets.Thin is\n       Fromlen : not null access C.int) return C.int;\n    pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n \n-   function Syscall_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int;\n-   pragma Import (C, Syscall_Send, \"send\");\n-\n    function Syscall_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n@@ -285,31 +278,6 @@ package body GNAT.Sockets.Thin is\n       return Res;\n    end C_Recvfrom;\n \n-   ------------\n-   -- C_Send --\n-   ------------\n-\n-   function C_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int\n-   is\n-      Res : C.int;\n-\n-   begin\n-      loop\n-         Res := Syscall_Send (S, Msg, Len, Flags);\n-         exit when SOSC.Thread_Blocking_IO\n-           or else Res /= Failure\n-           or else Non_Blocking_Socket (S)\n-           or else Errno /= SOSC.EWOULDBLOCK;\n-         delay Quantum;\n-      end loop;\n-\n-      return Res;\n-   end C_Send;\n-\n    --------------\n    -- C_Sendto --\n    --------------\n@@ -500,11 +468,13 @@ package body GNAT.Sockets.Thin is\n \n    begin\n       for J in Iovec'Range loop\n-         Res := C_Send\n+         Res := C_Sendto\n            (Fd,\n             Iovec (J).Base.all'Address,\n             Interfaces.C.int (Iovec (J).Length),\n-            SOSC.MSG_Forced_Flags);\n+            SOSC.MSG_Forced_Flags,\n+            To    => null,\n+            Tolen => 0);\n \n          if Res < 0 then\n             return Res;"}, {"sha": "52a9d144b05a1ac2ed1bccf18b17bec2ba59d145", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -156,12 +156,6 @@ package GNAT.Sockets.Thin is\n       Exceptfds : access Fd_Set;\n       Timeout   : Timeval_Access) return C.int;\n \n-   function C_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int;\n-\n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;"}, {"sha": "d035b61f807ee590c2291084577ffce3b87c8067", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -102,13 +102,6 @@ package body GNAT.Sockets.Thin is\n       Fromlen : not null access C.int) return C.int;\n    pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n \n-   function Syscall_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int;\n-   pragma Import (C, Syscall_Send, \"send\");\n-\n    function Syscall_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n@@ -298,31 +291,6 @@ package body GNAT.Sockets.Thin is\n       return Res;\n    end C_Recvfrom;\n \n-   ------------\n-   -- C_Send --\n-   ------------\n-\n-   function C_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int\n-   is\n-      Res : C.int;\n-\n-   begin\n-      loop\n-         Res := Syscall_Send (S, Msg, Len, Flags);\n-         exit when SOSC.Thread_Blocking_IO\n-           or else Res /= Failure\n-           or else Non_Blocking_Socket (S)\n-           or else Errno /= SOSC.EWOULDBLOCK;\n-         delay Quantum;\n-      end loop;\n-\n-      return Res;\n-   end C_Send;\n-\n    --------------\n    -- C_Sendto --\n    --------------"}, {"sha": "df987d5adc94bdd68bdb6816a6582c3717b61676", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -154,12 +154,6 @@ package GNAT.Sockets.Thin is\n       Exceptfds : access Fd_Set;\n       Timeout   : Timeval_Access) return C.int;\n \n-   function C_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int;\n-\n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;"}, {"sha": "fab5fb3ac9e768440d1d1e589a87785e70d1b2ee", "filename": "gcc/ada/g-socthi.adb", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.adb?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -98,13 +98,6 @@ package body GNAT.Sockets.Thin is\n       Fromlen : not null access C.int) return C.int;\n    pragma Import (C, Syscall_Recvfrom, \"recvfrom\");\n \n-   function Syscall_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int;\n-   pragma Import (C, Syscall_Send, \"send\");\n-\n    function Syscall_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n@@ -303,31 +296,6 @@ package body GNAT.Sockets.Thin is\n       return Res;\n    end C_Recvfrom;\n \n-   ------------\n-   -- C_Send --\n-   ------------\n-\n-   function C_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int\n-   is\n-      Res : C.int;\n-\n-   begin\n-      loop\n-         Res := Syscall_Send (S, Msg, Len, Flags);\n-         exit when SOSC.Thread_Blocking_IO\n-           or else Res /= Failure\n-           or else Non_Blocking_Socket (S)\n-           or else Errno /= SOSC.EWOULDBLOCK;\n-         delay Quantum;\n-      end loop;\n-\n-      return Res;\n-   end C_Send;\n-\n    --------------\n    -- C_Sendto --\n    --------------"}, {"sha": "65660e3ce4786e8f751fa70b74fc6366a5242ad4", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -155,12 +155,6 @@ package GNAT.Sockets.Thin is\n       Exceptfds : access Fd_Set;\n       Timeout   : Timeval_Access) return C.int;\n \n-   function C_Send\n-     (S     : C.int;\n-      Msg   : System.Address;\n-      Len   : C.int;\n-      Flags : C.int) return C.int;\n-\n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;"}, {"sha": "23fdb59af763bde8577b4990ceffa583ef12cc5a", "filename": "gcc/ada/g-stsifd-sockets.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-stsifd-sockets.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aed6fda81baff76d645be701b8bff8c458498745/gcc%2Fada%2Fg-stsifd-sockets.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-stsifd-sockets.adb?ref=aed6fda81baff76d645be701b8bff8c458498745", "patch": "@@ -226,7 +226,11 @@ package body Signalling_Fds is\n    function Write (Wsig : C.int) return C.int is\n       Buf : aliased Character := ASCII.NUL;\n    begin\n-      return C_Send (Wsig, Buf'Address, 1, SOSC.MSG_Forced_Flags);\n+      return C_Sendto\n+        (Wsig, Buf'Address, 1,\n+         Flags => SOSC.MSG_Forced_Flags,\n+         To    => null,\n+         Tolen =>  0);\n    end Write;\n \n end Signalling_Fds;"}]}