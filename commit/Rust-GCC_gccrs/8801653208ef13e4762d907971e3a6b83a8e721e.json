{"sha": "8801653208ef13e4762d907971e3a6b83a8e721e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgwMTY1MzIwOGVmMTNlNDc2MmQ5MDc5NzFlM2E2YjgzYThlNzIxZQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-06-28T02:17:40Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2017-06-28T02:17:40Z"}, "message": "re PR fortran/80164 (ICE in gfc_format_decoder at gcc/fortran/error.c:933)\n\n2017-06-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/80164\n\t* trans-stmt.c (gfc_trans_call): If no code expr, use code->loc\n\tas warning/error locus.\n\n\t* gfortran.dg/array_temporaries_4.f90: New test.\n\nFrom-SVN: r249718", "tree": {"sha": "ca58e617c6fd755c861d477ebdd092e0b97531b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca58e617c6fd755c861d477ebdd092e0b97531b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8801653208ef13e4762d907971e3a6b83a8e721e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8801653208ef13e4762d907971e3a6b83a8e721e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8801653208ef13e4762d907971e3a6b83a8e721e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8801653208ef13e4762d907971e3a6b83a8e721e/comments", "author": null, "committer": null, "parents": [{"sha": "2d4800a136d33899f4d8edc23520854777780a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4800a136d33899f4d8edc23520854777780a97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4800a136d33899f4d8edc23520854777780a97"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "fbf0b4ded408ad6f43acabf11845cc88c33bb6e6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8801653208ef13e4762d907971e3a6b83a8e721e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8801653208ef13e4762d907971e3a6b83a8e721e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8801653208ef13e4762d907971e3a6b83a8e721e", "patch": "@@ -1,3 +1,9 @@\n+2017-06-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/80164\n+\t* trans-stmt.c (gfc_trans_call): If no code expr, use code->loc\n+\tas warning/error locus.\n+\n 2017-06-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/81160"}, {"sha": "a1e1dff72e0a02b4797e0efd7870e1bd03958f35", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8801653208ef13e4762d907971e3a6b83a8e721e/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8801653208ef13e4762d907971e3a6b83a8e721e/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=8801653208ef13e4762d907971e3a6b83a8e721e", "patch": "@@ -452,7 +452,11 @@ gfc_trans_call (gfc_code * code, bool dependency_check,\n \t subscripts.  This could be prevented in the elemental case\n \t as temporaries are handled separatedly\n \t (below in gfc_conv_elemental_dependencies).  */\n-      gfc_conv_loop_setup (&loop, &code->expr1->where);\n+      if (code->expr1)\n+\tgfc_conv_loop_setup (&loop, &code->expr1->where);\n+      else\n+\tgfc_conv_loop_setup (&loop, &code->loc);\n+\n       gfc_mark_ss_chain_used (ss, 1);\n \n       /* Convert the arguments, checking for dependencies.  */"}, {"sha": "46879b7998d67181cd809944c8ef02d16f51b289", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8801653208ef13e4762d907971e3a6b83a8e721e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8801653208ef13e4762d907971e3a6b83a8e721e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8801653208ef13e4762d907971e3a6b83a8e721e", "patch": "@@ -1,3 +1,8 @@\n+2017-06-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/80164\n+\t* gfortran.dg/array_temporaries_4.f90: New test.\n+\n 2017-06-27  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.dg/tree-ssa/copy-sign-1.c: New testcase."}, {"sha": "d022ce8855739ff7ade8702985be59859262646b", "filename": "gcc/testsuite/gfortran.dg/array_temporaries_4.f90", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8801653208ef13e4762d907971e3a6b83a8e721e/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_temporaries_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8801653208ef13e4762d907971e3a6b83a8e721e/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_temporaries_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_temporaries_4.f90?ref=8801653208ef13e4762d907971e3a6b83a8e721e", "patch": "@@ -0,0 +1,59 @@\n+! { dg-do compile }\n+! { dg-options \"-Warray-temporaries\" }\n+! Tests the fix for PR80164, in which the compiler segfaulted on this\n+! when using -Warray-temporaries\n+!\n+!******************************************************************************\n+module global\n+  type :: a\n+    integer :: b\n+    character(8):: c\n+  end type a\n+  interface assignment(=)\n+    module procedure a_to_a, c_to_a, a_to_c\n+  end interface\n+  interface operator(.ne.)\n+    module procedure a_ne_a\n+  end interface\n+\n+  type(a) :: x(4), y(4)\n+  logical :: l1(4), t = .true., f= .false.\n+contains\n+!******************************************************************************\n+  elemental subroutine a_to_a (m, n)\n+    type(a), intent(in) :: n\n+    type(a), intent(out) :: m\n+    m%b = len ( trim(n%c))\n+    m%c = n%c\n+  end subroutine a_to_a\n+  elemental subroutine c_to_a (m, n)\n+    character(8), intent(in) :: n\n+    type(a), intent(out) :: m\n+    m%b = m%b + 1\n+    m%c = n\n+  end subroutine c_to_a\n+  elemental subroutine a_to_c (m, n)\n+    type(a), intent(in) :: n\n+    character(8), intent(out) :: m\n+    m = n%c\n+  end subroutine a_to_c\n+!******************************************************************************\n+  elemental logical function a_ne_a (m, n)\n+    type(a), intent(in) :: n\n+    type(a), intent(in) :: m\n+    a_ne_a = (m%b .ne. n%b) .or. (m%c .ne. n%c)\n+  end function a_ne_a\n+!******************************************************************************\n+  elemental function foo (m)\n+    type(a) :: foo\n+    type(a), intent(in) :: m\n+    foo%b = 0\n+    foo%c = m%c\n+  end function foo  \n+end module global\n+!******************************************************************************\n+program test\n+  use global\n+  x = (/a (0, \"one\"),a (0, \"two\"),a (0, \"three\"),a (0, \"four\")/) ! { dg-warning \"Creating array temporary\" }\n+  y = x\n+end program test "}]}