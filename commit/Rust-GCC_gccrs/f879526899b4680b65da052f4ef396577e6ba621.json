{"sha": "f879526899b4680b65da052f4ef396577e6ba621", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg3OTUyNjg5OWI0NjgwYjY1ZGEwNTJmNGVmMzk2NTc3ZTZiYTYyMQ==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-03-01T10:45:20Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-03-01T12:41:45Z"}, "message": "Fix bug when assembling function names with :: in the symbol\n\nWhen the assembler comes along Foo::new as a symbol name it will fail\nwe need name mangling to fix this properly.", "tree": {"sha": "0c2773c99c7cb54e38c427fc1a19165c22f52206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c2773c99c7cb54e38c427fc1a19165c22f52206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f879526899b4680b65da052f4ef396577e6ba621", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f879526899b4680b65da052f4ef396577e6ba621", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f879526899b4680b65da052f4ef396577e6ba621", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f879526899b4680b65da052f4ef396577e6ba621/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c13515af7e3f6d8a13de87d27cb2f82a5f84e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c13515af7e3f6d8a13de87d27cb2f82a5f84e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c13515af7e3f6d8a13de87d27cb2f82a5f84e43"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "76cc6081352ff376d25273ee01f27dbe3573af41", "filename": "gcc/rust/backend/rust-compile-implitem.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879526899b4680b65da052f4ef396577e6ba621/gcc%2Frust%2Fbackend%2Frust-compile-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879526899b4680b65da052f4ef396577e6ba621/gcc%2Frust%2Fbackend%2Frust-compile-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-implitem.h?ref=f879526899b4680b65da052f4ef396577e6ba621", "patch": "@@ -50,7 +50,7 @@ class CompileInherentImplItem : public HIRCompileBase\n     ::Btype *type = TyTyResolveCompile::compile (ctx, resolved_type);\n     Bexpression *value = CompileExpr::Compile (constant.get_expr (), ctx);\n \n-    std::string ident = self->get_name () + \"::\" + constant.get_identifier ();\n+    std::string ident = self->get_name () + \"_\" + constant.get_identifier ();\n     Bexpression *const_expr = ctx->get_backend ()->named_constant_expression (\n       type, constant.get_identifier (), value, constant.get_locus ());\n \n@@ -95,7 +95,7 @@ class CompileInherentImplItem : public HIRCompileBase\n \n     unsigned int flags = 0;\n     std::string fn_identifier\n-      = self->get_name () + \"::\" + function.function_name;\n+      = self->get_name () + \"_\" + function.function_name;\n \n     // if its the main fn or pub visibility mark its as DECL_PUBLIC\n     // please see https://github.com/Rust-GCC/gccrs/pull/137\n@@ -259,7 +259,7 @@ class CompileInherentImplItem : public HIRCompileBase\n \n     unsigned int flags = 0;\n     std::string fn_identifier\n-      = self->get_name () + \"::\" + method.get_method_name ();\n+      = self->get_name () + \"_\" + method.get_method_name ();\n \n     // if its the main fn or pub visibility mark its as DECL_PUBLIC\n     // please see https://github.com/Rust-GCC/gccrs/pull/137"}]}