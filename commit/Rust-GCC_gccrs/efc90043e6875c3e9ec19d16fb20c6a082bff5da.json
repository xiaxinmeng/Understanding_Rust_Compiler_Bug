{"sha": "efc90043e6875c3e9ec19d16fb20c6a082bff5da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZjOTAwNDNlNjg3NWMzZTllYzE5ZDE2ZmIyMGM2YTA4MmJmZjVkYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-01-19T15:48:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-01-19T15:48:14Z"}, "message": "re PR target/59379 (gomp_init_num_threads is compiled into an infinite loop with --with-arch=corei7  --with-cpu=slm)\n\n\tPR target/59379\n\t* config/i386/i386.md (*lea<mode>): Zero-extend return register\n\tto DImode for zero-extended addresses.\n\nFrom-SVN: r206774", "tree": {"sha": "8b99085a960212c67175aa4b01a1d3bbccfd66fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b99085a960212c67175aa4b01a1d3bbccfd66fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efc90043e6875c3e9ec19d16fb20c6a082bff5da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc90043e6875c3e9ec19d16fb20c6a082bff5da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc90043e6875c3e9ec19d16fb20c6a082bff5da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc90043e6875c3e9ec19d16fb20c6a082bff5da/comments", "author": null, "committer": null, "parents": [{"sha": "8fce217edcffa809d8f67e436444a32ea93dba77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fce217edcffa809d8f67e436444a32ea93dba77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fce217edcffa809d8f67e436444a32ea93dba77"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "abb54a8972fab8f88c4f2c7c725890cfcaad2020", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc90043e6875c3e9ec19d16fb20c6a082bff5da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc90043e6875c3e9ec19d16fb20c6a082bff5da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efc90043e6875c3e9ec19d16fb20c6a082bff5da", "patch": "@@ -1,10 +1,17 @@\n+2014-01-18  Uros Bizjak  <ubizjak@gmail.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/59379\n+\t* config/i386/i386.md (*lea<mode>): Zero-extend return register\n+\tto DImode for zero-extended addresses.\n+\n 2014-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/57763\n \t* bb-reorder.c (fix_crossing_unconditional_branches): Set JUMP_LABEL\n \ton the new indirect jump_insn and increment LABEL_NUSES (label).\n \n-2014-01-18   H.J. Lu  <hongjiu.lu@intel.com>\n+2014-01-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/59580\n \tPR bootstrap/59583"}, {"sha": "603fd8a616b1034419c43c0bdee8f299424b2b4c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efc90043e6875c3e9ec19d16fb20c6a082bff5da/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efc90043e6875c3e9ec19d16fb20c6a082bff5da/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=efc90043e6875c3e9ec19d16fb20c6a082bff5da", "patch": "@@ -5428,12 +5428,17 @@\n   operands[0] = SET_DEST (pat);\n   operands[1] = SET_SRC (pat);\n \n-  /* Emit all operations in SImode for zero-extended addresses.  Recall\n-     that x86_64 inheretly zero-extends SImode operations to DImode.  */\n+  /* Emit all operations in SImode for zero-extended addresses.  */\n   if (SImode_address_operand (operands[1], VOIDmode))\n     mode = SImode;\n \n   ix86_split_lea_for_addr (curr_insn, operands, mode);\n+\n+  /* Zero-extend return register to DImode for zero-extended addresses.  */\n+  if (mode != <MODE>mode)\n+    emit_insn (gen_zero_extendsidi2\n+    \t       (operands[0], gen_lowpart ((mode), operands[0])));\n+\n   DONE;\n }\n   [(set_attr \"type\" \"lea\")"}]}