{"sha": "0cea1d34f781ba9e08ffa82458f0410b398e9c93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlYTFkMzRmNzgxYmE5ZTA4ZmZhODI0NThmMDQxMGIzOThlOWM5Mw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-11-14T09:12:46Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-11-14T09:12:46Z"}, "message": "ipa-inline.c (compute_uninlined_call_time, [...]): always use frequencies.\n\n\n\t* ipa-inline.c (compute_uninlined_call_time, compute_inlined_call_time):\n\talways use frequencies.\n\nFrom-SVN: r254724", "tree": {"sha": "9ff52d672e62c47c156258a68c10aa635cc51fae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ff52d672e62c47c156258a68c10aa635cc51fae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cea1d34f781ba9e08ffa82458f0410b398e9c93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cea1d34f781ba9e08ffa82458f0410b398e9c93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cea1d34f781ba9e08ffa82458f0410b398e9c93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cea1d34f781ba9e08ffa82458f0410b398e9c93/comments", "author": null, "committer": null, "parents": [{"sha": "dde76623dd2b3df7e471e9b8fe058b176569560d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde76623dd2b3df7e471e9b8fe058b176569560d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dde76623dd2b3df7e471e9b8fe058b176569560d"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "9740447ab98873147c5272f848922bf4f9bc8f29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cea1d34f781ba9e08ffa82458f0410b398e9c93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cea1d34f781ba9e08ffa82458f0410b398e9c93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cea1d34f781ba9e08ffa82458f0410b398e9c93", "patch": "@@ -1,3 +1,8 @@\n+2017-11-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-inline.c (compute_uninlined_call_time, compute_inlined_call_time):\n+\talways use frequencies.\n+\n 2017-11-13  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* bb-reorder.c: Remove frequencies from comments."}, {"sha": "91bf8e67e8a228dc38d2711d2b45d8b5204abbfd", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cea1d34f781ba9e08ffa82458f0410b398e9c93/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cea1d34f781ba9e08ffa82458f0410b398e9c93/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=0cea1d34f781ba9e08ffa82458f0410b398e9c93", "patch": "@@ -640,10 +640,6 @@ compute_uninlined_call_time (struct cgraph_edge *edge,\n \t\t\t ? edge->caller->global.inlined_to\n \t\t\t : edge->caller);\n \n-  if (edge->count.ipa ().nonzero_p ()\n-      && caller->count.ipa ().nonzero_p ())\n-    uninlined_call_time *= (sreal)edge->count.ipa ().to_gcov_type ()\n-\t\t\t   / caller->count.ipa ().to_gcov_type ();\n   sreal freq = edge->sreal_frequency ();\n   if (freq != 0)\n     uninlined_call_time *= freq;\n@@ -666,9 +662,6 @@ compute_inlined_call_time (struct cgraph_edge *edge,\n \t\t\t : edge->caller);\n   sreal caller_time = ipa_fn_summaries->get (caller)->time;\n \n-  if (edge->count.ipa ().nonzero_p ()\n-      && caller->count.ipa ().nonzero_p ())\n-    time *= (sreal)edge->count.to_gcov_type () / caller->count.to_gcov_type ();\n   sreal freq = edge->sreal_frequency ();\n   if (freq != 0)\n     time *= freq;\n@@ -1954,7 +1947,7 @@ inline_small_functions (void)\n \t\t   ? gimple_lineno ((const gimple *) edge->call_stmt)\n \t\t   : -1,\n \t\t   badness.to_double (),\n-\t\t   edge->frequency () / (double)CGRAPH_FREQ_BASE);\n+\t\t   edge->sreal_frequency ().to_double ());\n \t  if (edge->count.ipa ().initialized_p ())\n \t    {\n \t      fprintf (dump_file, \" Called \");"}]}