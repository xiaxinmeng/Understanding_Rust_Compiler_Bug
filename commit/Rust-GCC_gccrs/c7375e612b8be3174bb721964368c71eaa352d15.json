{"sha": "c7375e612b8be3174bb721964368c71eaa352d15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzczNzVlNjEyYjhiZTMxNzRiYjcyMTk2NDM2OGM3MWVhYTM1MmQxNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@multimania.com", "date": "2002-07-03T17:02:39Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-07-03T17:02:39Z"}, "message": "i386.md (length_immediate attribute): Fix typo.\n\n        * i386.md (length_immediate attribute): Fix typo.\n        (length_address attribute): Likewise.\n        (modrm attribute): Set it to 0 for immediate call instructions.\n        (jcc_1 pattern): Set modrm attribute to 0.\n        (jcc_2 pattern ): Likewise.\n        (jump pattern): Likewise.\n        (doloop_end_internal pattern): Explicitly set length.\n        (leave pattern): Fix typo.\n        (leave_rex64 pattern): Likewise.\n\nCo-Authored-By: Jeff Law <law@redhat.com>\n\nFrom-SVN: r55215", "tree": {"sha": "93669ba9cc1176a03c4d483c9bc4bc2ad79d2433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93669ba9cc1176a03c4d483c9bc4bc2ad79d2433"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7375e612b8be3174bb721964368c71eaa352d15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7375e612b8be3174bb721964368c71eaa352d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7375e612b8be3174bb721964368c71eaa352d15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7375e612b8be3174bb721964368c71eaa352d15/comments", "author": null, "committer": null, "parents": [{"sha": "b2153b98f202a261b77be7be529d371bb9fd3907", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2153b98f202a261b77be7be529d371bb9fd3907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2153b98f202a261b77be7be529d371bb9fd3907"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "4000c79de8a2f887b9d6cea2fe6d795b86e5a828", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7375e612b8be3174bb721964368c71eaa352d15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7375e612b8be3174bb721964368c71eaa352d15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7375e612b8be3174bb721964368c71eaa352d15", "patch": "@@ -1,3 +1,16 @@\n+2002-07-03  Eric Botcazou  <ebotcazou@multimania.com>\n+\t    Jeff Law  <law@redhat.com>\n+\n+\t* i386.md (length_immediate attribute): Fix typo.\n+\t(length_address attribute): Likewise.\n+\t(modrm attribute): Set it to 0 for immediate call instructions.\n+\t(jcc_1 pattern): Set modrm attribute to 0.\n+\t(jcc_2 pattern ): Likewise.\n+\t(jump pattern): Likewise.\n+\t(doloop_end_internal pattern): Explicitly set length.\n+\t(leave pattern): Fix typo.\n+\t(leave_rex64 pattern): Likewise.\n+\n 2002-07-03  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.md (fix_truncdfsi2_internal): Ignore DImode"}, {"sha": "419d45c76729df23746ff409b9aa23516fafb33a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7375e612b8be3174bb721964368c71eaa352d15/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7375e612b8be3174bb721964368c71eaa352d15/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c7375e612b8be3174bb721964368c71eaa352d15", "patch": "@@ -166,7 +166,7 @@\n \n ;; The (bounding maximum) length of an instruction immediate.\n (define_attr \"length_immediate\" \"\"\n-  (cond [(eq_attr \"type\" \"incdec,setcc,icmov,ibr,str,cld,lea,other,multi,idiv\")\n+  (cond [(eq_attr \"type\" \"incdec,setcc,icmov,str,cld,lea,other,multi,idiv\")\n \t   (const_int 0)\n \t (eq_attr \"unit\" \"i387,sse,mmx\")\n \t   (const_int 0)\n@@ -199,7 +199,7 @@\n   (cond [(eq_attr \"type\" \"str,cld,other,multi,fxch\")\n \t   (const_int 0)\n \t (and (eq_attr \"type\" \"call\")\n-\t      (match_operand 1 \"constant_call_address_operand\" \"\"))\n+\t      (match_operand 0 \"constant_call_address_operand\" \"\"))\n \t     (const_int 0)\n \t (and (eq_attr \"type\" \"callv\")\n \t      (match_operand 1 \"constant_call_address_operand\" \"\"))\n@@ -251,6 +251,12 @@\n \t      (and (match_operand 0 \"register_operand\" \"\")\n \t           (match_operand 1 \"immediate_operand\" \"\")))\n \t   (const_int 0)\n+\t (and (eq_attr \"type\" \"call\")\n+\t      (match_operand 0 \"constant_call_address_operand\" \"\"))\n+\t     (const_int 0)\n+\t (and (eq_attr \"type\" \"callv\")\n+\t      (match_operand 1 \"constant_call_address_operand\" \"\"))\n+\t     (const_int 0)\n \t ]\n \t (const_int 1)))\n \n@@ -12804,6 +12810,7 @@\n   \"\"\n   \"%+j%C1\\t%l0\"\n   [(set_attr \"type\" \"ibr\")\n+   (set_attr \"modrm\" \"0\")\n    (set (attr \"prefix_0f\")\n \t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n \t\t\t\t  (const_int -128))\n@@ -12821,6 +12828,7 @@\n   \"\"\n   \"%+j%c1\\t%l0\"\n   [(set_attr \"type\" \"ibr\")\n+   (set_attr \"modrm\" \"0\")\n    (set (attr \"prefix_0f\")\n \t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n \t\t\t\t  (const_int -128))\n@@ -13087,7 +13095,8 @@\n \t(label_ref (match_operand 0 \"\" \"\")))]\n   \"\"\n   \"jmp\\t%l0\"\n-  [(set_attr \"type\" \"ibr\")])\n+  [(set_attr \"type\" \"ibr\")\n+   (set_attr \"modrm\" \"0\")])\n \n (define_expand \"indirect_jump\"\n   [(set (pc) (match_operand 0 \"nonimmediate_operand\" \"rm\"))]\n@@ -13205,6 +13214,14 @@\n     return \"dec{l}\\t%1\\;%+jne\\t%l0\";\n }\n   [(set_attr \"ppro_uops\" \"many\")\n+   (set (attr \"length\")\n+\t(if_then_else (and (eq_attr \"alternative\" \"0\")\n+\t\t\t   (and (ge (minus (match_dup 0) (pc))\n+\t\t\t            (const_int -128))\n+\t\t\t        (lt (minus (match_dup 0) (pc))\n+\t\t\t            (const_int 124))))\n+\t\t      (const_int 2)\n+\t\t      (const_int 16)))\n    (set (attr \"type\")\n \t(if_then_else (and (eq_attr \"alternative\" \"0\")\n \t\t\t   (and (ge (minus (match_dup 0) (pc))\n@@ -13620,7 +13637,6 @@\n   [(set_attr \"length_immediate\" \"0\")\n    (set_attr \"length\" \"1\")\n    (set_attr \"modrm\" \"0\")\n-   (set_attr \"modrm\" \"0\")\n    (set_attr \"athlon_decode\" \"vector\")\n    (set_attr \"ppro_uops\" \"few\")])\n \n@@ -13633,7 +13649,6 @@\n   [(set_attr \"length_immediate\" \"0\")\n    (set_attr \"length\" \"1\")\n    (set_attr \"modrm\" \"0\")\n-   (set_attr \"modrm\" \"0\")\n    (set_attr \"athlon_decode\" \"vector\")\n    (set_attr \"ppro_uops\" \"few\")])\n \f"}]}