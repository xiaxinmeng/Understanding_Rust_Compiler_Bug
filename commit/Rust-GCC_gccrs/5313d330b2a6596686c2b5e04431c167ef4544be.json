{"sha": "5313d330b2a6596686c2b5e04431c167ef4544be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMxM2QzMzBiMmE2NTk2Njg2YzJiNWUwNDQzMWMxNjdlZjQ1NDRiZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-01-11T03:04:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-01-11T03:04:49Z"}, "message": "re PR c++/51614 (ICE with ambiguous base class)\n\n\tPR c++/51614\n\t* class.c (build_base_path): Diagnose ambiguous base.\n\nFrom-SVN: r183088", "tree": {"sha": "135c49bd0c79dc64db5be66b09857cee3867e0f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/135c49bd0c79dc64db5be66b09857cee3867e0f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5313d330b2a6596686c2b5e04431c167ef4544be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5313d330b2a6596686c2b5e04431c167ef4544be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5313d330b2a6596686c2b5e04431c167ef4544be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5313d330b2a6596686c2b5e04431c167ef4544be/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bedcb19b9871fcff39e031656c377edac343e29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bedcb19b9871fcff39e031656c377edac343e29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bedcb19b9871fcff39e031656c377edac343e29"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "9b080fbaeb80226f334b6f946bd0272fbaba62c3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5313d330b2a6596686c2b5e04431c167ef4544be/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5313d330b2a6596686c2b5e04431c167ef4544be/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5313d330b2a6596686c2b5e04431c167ef4544be", "patch": "@@ -1,5 +1,8 @@\n 2012-01-10  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51614\n+\t* class.c (build_base_path): Diagnose ambiguous base.\n+\n \tPR c++/51433\n \t* semantics.c (cxx_eval_call_expression): Always retry previously\n \tnon-constant expressions."}, {"sha": "58c89d3dafaede7c434386951437e23ed0da7732", "filename": "gcc/cp/class.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5313d330b2a6596686c2b5e04431c167ef4544be/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5313d330b2a6596686c2b5e04431c167ef4544be/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=5313d330b2a6596686c2b5e04431c167ef4544be", "patch": "@@ -266,10 +266,25 @@ build_base_path (enum tree_code code,\n   if (want_pointer)\n     probe = TYPE_MAIN_VARIANT (TREE_TYPE (probe));\n \n+  if (code == PLUS_EXPR\n+      && !SAME_BINFO_TYPE_P (BINFO_TYPE (d_binfo), probe))\n+    {\n+      /* This can happen when adjust_result_of_qualified_name_lookup can't\n+\t find a unique base binfo in a call to a member function.  We\n+\t couldn't give the diagnostic then since we might have been calling\n+\t a static member function, so we do it now.  */\n+      if (complain & tf_error)\n+\t{\n+\t  tree base = lookup_base (probe, BINFO_TYPE (d_binfo),\n+\t\t\t\t   ba_unique, NULL);\n+\t  gcc_assert (base == error_mark_node);\n+\t}\n+      return error_mark_node;\n+    }\n+\n   gcc_assert ((code == MINUS_EXPR\n \t       && SAME_BINFO_TYPE_P (BINFO_TYPE (binfo), probe))\n-\t      || (code == PLUS_EXPR\n-\t\t  && SAME_BINFO_TYPE_P (BINFO_TYPE (d_binfo), probe)));\n+\t      || code == PLUS_EXPR);\n \n   if (binfo == d_binfo)\n     /* Nothing to do.  */"}, {"sha": "f41975cfa2e9b0177732f0fc5a65f1397a7bba9c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5313d330b2a6596686c2b5e04431c167ef4544be/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5313d330b2a6596686c2b5e04431c167ef4544be/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5313d330b2a6596686c2b5e04431c167ef4544be", "patch": "@@ -1,5 +1,8 @@\n 2012-01-10  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51614\n+\t* g++.dg/inherit/ambig1.C: New.\n+\n \tPR c++/51433\n \t* g++.dg/cpp0x/constexpr-cache1.C: New.\n "}, {"sha": "3596bb5983e75ac742043ed2652706e58600e859", "filename": "gcc/testsuite/g++.dg/inherit/ambig1.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5313d330b2a6596686c2b5e04431c167ef4544be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fambig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5313d330b2a6596686c2b5e04431c167ef4544be/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fambig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fambig1.C?ref=5313d330b2a6596686c2b5e04431c167ef4544be", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/51614\n+\n+struct A\n+{\n+  void foo();\n+};\n+\n+struct B : A {};\n+struct C : A {};\n+\n+struct D : B, C\n+{\n+  D() { A::foo(); }\t\t// { dg-error \"ambiguous\" }\n+};"}]}