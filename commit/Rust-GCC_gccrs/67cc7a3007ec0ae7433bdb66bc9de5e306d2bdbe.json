{"sha": "67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjYzdhMzAwN2VjMGFlNzQzM2JkYjY2YmM5ZGU1ZTMwNmQyYmRiZQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2017-11-09T15:08:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T15:08:55Z"}, "message": "exp_util.adb, freeze.adb: Minor reformatting.\n\n2017-11-09  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_util.adb, freeze.adb: Minor reformatting.\n\nFrom-SVN: r254587", "tree": {"sha": "6944f43c5de4246d6891ebf15e6cf68e4c6f879d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6944f43c5de4246d6891ebf15e6cf68e4c6f879d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b4473b6c4a706cd5d38a50d10a83c549d676ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4473b6c4a706cd5d38a50d10a83c549d676ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b4473b6c4a706cd5d38a50d10a83c549d676ca3"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "0c9332a581bf740fdae3feb3d0c00968710836a3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe", "patch": "@@ -1,3 +1,7 @@\n+2017-11-09  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_util.adb, freeze.adb: Minor reformatting.\n+\n 2017-11-09  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* gcc-interface/Makefile.in: Add rules to build aarch64-qnx runtimes."}, {"sha": "6ebcc4c9794b19746ec6139f54ecf91c313b1fd5", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe", "patch": "@@ -11011,11 +11011,11 @@ package body Exp_Util is\n \n       Scope_Suppress.Suppress := (others => True);\n \n-      --  If this is an elementary or a small not by-reference record type, and\n+      --  If this is an elementary or a small not-by-reference record type, and\n       --  we need to capture the value, just make a constant; this is cheap and\n       --  objects of both kinds of types can be bit aligned, so it might not be\n       --  possible to generate a reference to them. Likewise if this is not a\n-      --  name reference, except for a type conversion because we would enter\n+      --  name reference, except for a type conversion, because we would enter\n       --  an infinite recursion with Checks.Apply_Predicate_Check if the target\n       --  type has predicates (and type conversions need a specific treatment\n       --  anyway, see below). Also do it if we have a volatile reference and"}, {"sha": "bc7694cd1701b9b55a078cdea94382b05d4ac46a", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=67cc7a3007ec0ae7433bdb66bc9de5e306d2bdbe", "patch": "@@ -2787,7 +2787,6 @@ package body Freeze is\n                      elsif Csiz mod System_Storage_Unit = 0\n                        and then Is_Composite_Type (Ctyp)\n                      then\n-\n                         Set_Is_Packed            (Base_Type (Arr), True);\n                         Set_Has_Non_Standard_Rep (Base_Type (Arr), True);\n                         Set_Is_Bit_Packed_Array  (Base_Type (Arr), False);"}]}