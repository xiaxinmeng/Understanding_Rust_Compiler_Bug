{"sha": "b2009d46817f00372f7552c068c4a7eb9bf1389b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIwMDlkNDY4MTdmMDAzNzJmNzU1MmMwNjhjNGE3ZWI5YmYxMzg5Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-20T14:04:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-20T14:04:19Z"}, "message": "[multiple changes]\n\n2011-12-20  Bob Duff  <duff@adacore.com>\n\n\t* opt.ads (List_Inherited_Aspects): Default to False\n\t(i.e. -gnatw.L is the default).\n\t* usage.adb: Document new default for -gnatw.L.\n\t* gnat_ugn.texi: Document -gnatw.l and -gnatw.L switches.\n\t* warnsw.adb (Set_Warning_Switch): Do not include\n\tList_Inherited_Aspects in -gnatwa.\n\n2011-12-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* checks.adb (Apply_Type_Conversion_Checks): For a discrete type\n\twith predicates, indicate unconditionally that a range check\n\tis needed.\n\t* exp_ch4.adb (Expand_N_In): When the membership test is rewritten\n\tto incorporate a call to a predicate function, analyze expression\n\twith checks suppressed, to prevent infinite recursion.\n\nFrom-SVN: r182540", "tree": {"sha": "f2e044fed041fab9a9b27874f080130846d73e28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2e044fed041fab9a9b27874f080130846d73e28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2009d46817f00372f7552c068c4a7eb9bf1389b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2009d46817f00372f7552c068c4a7eb9bf1389b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2009d46817f00372f7552c068c4a7eb9bf1389b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2009d46817f00372f7552c068c4a7eb9bf1389b/comments", "author": null, "committer": null, "parents": [{"sha": "2f7b74678b21c5c104c984cec26403bbefa27b76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f7b74678b21c5c104c984cec26403bbefa27b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f7b74678b21c5c104c984cec26403bbefa27b76"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "6502681a7327dd7fc1e58f290365aea4b0896907", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b2009d46817f00372f7552c068c4a7eb9bf1389b", "patch": "@@ -1,3 +1,21 @@\n+2011-12-20  Bob Duff  <duff@adacore.com>\n+\n+\t* opt.ads (List_Inherited_Aspects): Default to False\n+\t(i.e. -gnatw.L is the default).\n+\t* usage.adb: Document new default for -gnatw.L.\n+\t* gnat_ugn.texi: Document -gnatw.l and -gnatw.L switches.\n+\t* warnsw.adb (Set_Warning_Switch): Do not include\n+\tList_Inherited_Aspects in -gnatwa.\n+\n+2011-12-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* checks.adb (Apply_Type_Conversion_Checks): For a discrete type\n+\twith predicates, indicate unconditionally that a range check\n+\tis needed.\n+\t* exp_ch4.adb (Expand_N_In): When the membership test is rewritten\n+\tto incorporate a call to a predicate function, analyze expression\n+\twith checks suppressed, to prevent infinite recursion.\n+\n 2011-12-20  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch11.adb (Find_Local_Handler): Guard the"}, {"sha": "059253fd903be9d8aa053572b868761caef8b842", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=b2009d46817f00372f7552c068c4a7eb9bf1389b", "patch": "@@ -2398,6 +2398,15 @@ package body Checks is\n                else\n                   Apply_Scalar_Range_Check\n                     (Expr, Target_Type, Fixed_Int => Conv_OK);\n+\n+                  --  If the target type has predicates, we need to indicate\n+                  --  the need for a check, even if Determine_Range finds\n+                  --  that the value is within bounds. This may be the case\n+                  --  e.g for a division with a constant denominator.\n+\n+                  if Has_Predicates (Target_Type) then\n+                     Enable_Range_Check (Expr);\n+                  end if;\n                end if;\n             end if;\n          end;"}, {"sha": "8082cb0c24148f3ab29df780b297b93123fd3df4", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=b2009d46817f00372f7552c068c4a7eb9bf1389b", "patch": "@@ -5228,10 +5228,11 @@ package body Exp_Ch4 is\n                 Right_Opnd => Make_Predicate_Call (Rtyp, Lop)));\n \n             --  Analyze new expression, mark left operand as analyzed to\n-            --  avoid infinite recursion adding predicate calls.\n+            --  avoid infinite recursion adding predicate calls. Similarly,\n+            --  suppress further range checks on the call.\n \n             Set_Analyzed (Left_Opnd (N));\n-            Analyze_And_Resolve (N, Standard_Boolean);\n+            Analyze_And_Resolve (N, Standard_Boolean, Suppress => All_Checks);\n \n             --  All done, skip attempt at compile time determination of result\n "}, {"sha": "92aba09596df4711ec235637f138fd8711534ee4", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b2009d46817f00372f7552c068c4a7eb9bf1389b", "patch": "@@ -5093,6 +5093,7 @@ switch are\n @option{-gnatwh} (hiding),\n @option{-gnatw.h} (holes (gaps) in record layouts)\n @option{-gnatwl} (elaboration warnings),\n+@option{-gnatw.l} (inherited aspects),\n @option{-gnatw.o} (warn on values set by out parameters ignored)\n and @option{-gnatwt} (tracking of deleted conditional code).\n All other optional warnings are turned on.\n@@ -5424,6 +5425,19 @@ This switch suppresses warnings on missing Elaborate and Elaborate_All pragmas.\n See the section in this guide on elaboration checking for details on\n when such pragmas should be used.\n \n+@item -gnatw.l\n+@emph{List inherited aspects.}\n+@cindex @option{-gnatw.l} (@command{gcc})\n+This switch causes the compiler to list inherited invariants,\n+preconditions, and postconditions from Invariant'Class, Pre'Class, and\n+Post'Class aspects. Also list inherited subtype predicates.\n+These messages are not automatically turned on by the use of @option{-gnatwa}.\n+\n+@item -gnatw.L\n+@emph{Suppress listing of inherited aspects.}\n+@cindex @option{-gnatw.L} (@command{gcc})\n+This switch suppresses listing of inherited aspects.\n+\n @item -gnatwm\n @emph{Activate warnings on modified but unreferenced variables.}\n @cindex @option{-gnatwm} (@command{gcc})"}, {"sha": "555283c62780434556c62915fc5eaa5860d38e39", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=b2009d46817f00372f7552c068c4a7eb9bf1389b", "patch": "@@ -801,10 +801,12 @@ package Opt is\n    --  Set to True to skip compile and bind steps (except when Bind_Only is\n    --  set to True).\n \n-   List_Inherited_Aspects : Boolean := True;\n+   List_Inherited_Aspects : Boolean := False;\n    --  GNAT\n    --  List inherited invariants, preconditions, and postconditions from\n-   --  Invariant'Class, Pre'Class, and Post'Class aspects.\n+   --  Invariant'Class, Pre'Class, and Post'Class aspects. Also list inherited\n+   --  subtype predicates. Set True by use of -gnatw.l and False by use of\n+   --  -gnatw.L.\n \n    List_Restrictions : Boolean := False;\n    --  GNATBIND"}, {"sha": "c4e7176875b7cf347c9839f147e01710fd71537f", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=b2009d46817f00372f7552c068c4a7eb9bf1389b", "patch": "@@ -453,8 +453,8 @@ begin\n                                                   \"elaboration pragma\");\n    Write_Line (\"        L*   turn off warnings for missing \" &\n                                                   \"elaboration pragma\");\n-   Write_Line (\"        .l*  turn on info messages for inherited aspects\");\n-   Write_Line (\"        .L   turn off info messages for inherited aspects\");\n+   Write_Line (\"        .l   turn on info messages for inherited aspects\");\n+   Write_Line (\"        .L*   turn off info messages for inherited aspects\");\n    Write_Line (\"        m+   turn on warnings for variable assigned \" &\n                                                   \"but not read\");\n    Write_Line (\"        M*   turn off warnings for variable assigned \" &"}, {"sha": "3c5776758ca9e8111a4d4b3c5e2585578d58212b", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2009d46817f00372f7552c068c4a7eb9bf1389b/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=b2009d46817f00372f7552c068c4a7eb9bf1389b", "patch": "@@ -251,7 +251,6 @@ package body Warnsw is\n             Constant_Condition_Warnings         := True;\n             Implementation_Unit_Warnings        := True;\n             Ineffective_Inline_Warnings         := True;\n-            List_Inherited_Aspects              := True;\n             Warn_On_Ada_2005_Compatibility      := True;\n             Warn_On_Ada_2012_Compatibility      := True;\n             Warn_On_Assertion_Failure           := True;"}]}