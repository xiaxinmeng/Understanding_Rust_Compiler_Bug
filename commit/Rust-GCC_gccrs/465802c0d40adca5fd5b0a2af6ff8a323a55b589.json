{"sha": "465802c0d40adca5fd5b0a2af6ff8a323a55b589", "node_id": "C_kwDOANBUbNoAKDQ2NTgwMmMwZDQwYWRjYTVmZDViMGEyYWY2ZmY4YTMyM2E1NWI1ODk", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-07-19T09:55:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-07-19T14:12:27Z"}, "message": "c++: Enable __has_builtin for new reference binding built-ins\n\nThe new built-ins need to be detectable using __has_builtin, and the\nlibrary should use that to check for them.\n\nThis fixes an error with Clang when C++23 is enabled.\n\ngcc/cp/ChangeLog:\n\n\t* cp-objcp-common.cc (names_builtin_p): Return true for\n\tRID_REF_CONSTRUCTS_FROM_TEMPORARY and\n\tRID_REF_CONVERTS_FROM_TEMPORARY.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/type_traits (__cpp_lib_reference_from_temporary)\n\t(reference_constructs_from_temporary)\n\t(reference_converts_from_temporary): Only define when the\n\tbuilt-ins are available.", "tree": {"sha": "84201afac23508847598e7bd7815f187543914a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84201afac23508847598e7bd7815f187543914a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/465802c0d40adca5fd5b0a2af6ff8a323a55b589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/465802c0d40adca5fd5b0a2af6ff8a323a55b589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/465802c0d40adca5fd5b0a2af6ff8a323a55b589", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/465802c0d40adca5fd5b0a2af6ff8a323a55b589/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a8aab9a23550dbf53d4640fef57c0bd6f6b0129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a8aab9a23550dbf53d4640fef57c0bd6f6b0129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a8aab9a23550dbf53d4640fef57c0bd6f6b0129"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4079a4b4aecf85a54cd714913315e2c106687499", "filename": "gcc/cp/cp-objcp-common.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465802c0d40adca5fd5b0a2af6ff8a323a55b589/gcc%2Fcp%2Fcp-objcp-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465802c0d40adca5fd5b0a2af6ff8a323a55b589/gcc%2Fcp%2Fcp-objcp-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.cc?ref=465802c0d40adca5fd5b0a2af6ff8a323a55b589", "patch": "@@ -461,6 +461,8 @@ names_builtin_p (const char *name)\n     case RID_IS_ASSIGNABLE:\n     case RID_IS_CONSTRUCTIBLE:\n     case RID_UNDERLYING_TYPE:\n+    case RID_REF_CONSTRUCTS_FROM_TEMPORARY:\n+    case RID_REF_CONVERTS_FROM_TEMPORARY:\n       return true;\n     default:\n       break;"}, {"sha": "14b029cec64402ee47756b318acbf3233a5432b7", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/465802c0d40adca5fd5b0a2af6ff8a323a55b589/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/465802c0d40adca5fd5b0a2af6ff8a323a55b589/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=465802c0d40adca5fd5b0a2af6ff8a323a55b589", "patch": "@@ -3505,6 +3505,9 @@ template<typename _Ret, typename _Fn, typename... _Args>\n   template<typename _Tp>\n     inline constexpr bool is_scoped_enum_v = is_scoped_enum<_Tp>::value;\n \n+#if __has_builtin(__reference_constructs_from_temporary) \\\n+  && __has_builtin(__reference_converts_from_temporary)\n+\n #define __cpp_lib_reference_from_temporary 202202L\n \n   /// True if _Tp is a reference type, a _Up value can be bound to _Tp in\n@@ -3544,6 +3547,7 @@ template<typename _Ret, typename _Fn, typename... _Args>\n   template<typename _Tp, typename _Up>\n     inline constexpr bool reference_converts_from_temporary_v\n       = reference_converts_from_temporary<_Tp, _Up>::value;\n+#endif // __has_builtin for reference_from_temporary\n #endif // C++23\n \n #if _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED"}]}