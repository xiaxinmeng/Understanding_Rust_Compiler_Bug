{"sha": "57e454eeb292919f4a36d9a8462676d1b9e32e39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdlNDU0ZWViMjkyOTE5ZjRhMzZkOWE4NDYyNjc2ZDFiOWUzMmUzOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-03-04T09:02:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-03-04T09:02:59Z"}, "message": "re PR tree-optimization/39339 (SRA miscompilation of vte)\n\n2009-03-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/39339\n\t* tree-sra.c (try_instantiate_multiple_fields): Make it\n\tno longer ICE on the above.\n\n\t* gcc.c-torture/execute/pr39339.c: New testcase.\n\nFrom-SVN: r144598", "tree": {"sha": "9d83061c5e3044ef5f072f26e30286a11349d55d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d83061c5e3044ef5f072f26e30286a11349d55d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57e454eeb292919f4a36d9a8462676d1b9e32e39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e454eeb292919f4a36d9a8462676d1b9e32e39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e454eeb292919f4a36d9a8462676d1b9e32e39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e454eeb292919f4a36d9a8462676d1b9e32e39/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fe9ed43e2cb62e8616dbb825172b9e9db7ed98"}], "stats": {"total": 108, "additions": 96, "deletions": 12}, "files": [{"sha": "6eb37db88f273446877b9446afb0a9fa3f5fad18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e454eeb292919f4a36d9a8462676d1b9e32e39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e454eeb292919f4a36d9a8462676d1b9e32e39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57e454eeb292919f4a36d9a8462676d1b9e32e39", "patch": "@@ -1,3 +1,9 @@\n+2009-03-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39339\n+\t* tree-sra.c (try_instantiate_multiple_fields): Make it\n+\tno longer ICE on the above.\n+\n 2009-03-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* emit-rtl.c (adjust_address_1): Reduce offset to a signed value"}, {"sha": "fc081f5ecc4b8a948dd6e58b697264c89005dc7c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e454eeb292919f4a36d9a8462676d1b9e32e39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e454eeb292919f4a36d9a8462676d1b9e32e39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57e454eeb292919f4a36d9a8462676d1b9e32e39", "patch": "@@ -1,3 +1,8 @@\n+2009-03-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39339\n+\t* gcc.c-torture/execute/pr39339.c: New testcase.\n+\n 2009-03-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.c-torture/compile/20090303-1.c,"}, {"sha": "539ac0646efe095441d9f68969bd51061d06e344", "filename": "gcc/testsuite/gcc.c-torture/execute/pr39339.c", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e454eeb292919f4a36d9a8462676d1b9e32e39/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39339.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e454eeb292919f4a36d9a8462676d1b9e32e39/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39339.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr39339.c?ref=57e454eeb292919f4a36d9a8462676d1b9e32e39", "patch": "@@ -0,0 +1,81 @@\n+struct C\n+{\n+  unsigned int c;\n+  struct D\n+  {\n+    unsigned int columns : 4;\n+    unsigned int fore : 9;\n+    unsigned int back : 9;\n+    unsigned int fragment : 1;\n+    unsigned int standout : 1;\n+    unsigned int underline : 1;\n+    unsigned int strikethrough : 1;\n+    unsigned int reverse : 1;\n+    unsigned int blink : 1;\n+    unsigned int half : 1;\n+    unsigned int bold : 1;\n+    unsigned int invisible : 1;\n+    unsigned int pad : 1;\n+  } attr;\n+};\n+\n+struct A\n+{\n+  struct C *data;\n+  unsigned int len;\n+};\n+\n+struct B\n+{\n+  struct A *cells;\n+  unsigned char soft_wrapped : 1;\n+};\n+\n+struct E\n+{\n+  long row, col;\n+  struct C defaults;\n+};\n+\n+__attribute__ ((noinline))\n+void foo (struct E *screen, unsigned int c, int columns, struct B *row)\n+{\n+  struct D attr;\n+  long col;\n+  int i;\n+  col = screen->col;\n+  attr = screen->defaults.attr;\n+  attr.columns = columns;\n+  row->cells->data[col].c = c;\n+  row->cells->data[col].attr = attr;\n+  col++;\n+  attr.fragment = 1;\n+  for (i = 1; i < columns; i++)\n+    {\n+      row->cells->data[col].c = c;\n+      row->cells->data[col].attr = attr;\n+      col++;\n+    }\n+}\n+\n+int\n+main (void)\n+{\n+  struct E e = {.row = 5,.col = 0,.defaults =\n+      {6, {-1, -1, -1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}} };\n+  struct C c[4];\n+  struct A a = { c, 4 };\n+  struct B b = { &a, 1 };\n+  struct D d;\n+  __builtin_memset (&c, 0, sizeof c);\n+  foo (&e, 65, 2, &b);\n+  d = e.defaults.attr;\n+  d.columns = 2;\n+  if (__builtin_memcmp (&d, &c[0].attr, sizeof d))\n+    __builtin_abort ();\n+  d.fragment = 1;\n+  if (__builtin_memcmp (&d, &c[1].attr, sizeof d))\n+    __builtin_abort ();\n+  return 0;\n+}\n+"}, {"sha": "6149ff551f92efe7186d7fa05bb4e73b9d0fd234", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e454eeb292919f4a36d9a8462676d1b9e32e39/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e454eeb292919f4a36d9a8462676d1b9e32e39/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=57e454eeb292919f4a36d9a8462676d1b9e32e39", "patch": "@@ -1713,16 +1713,6 @@ try_instantiate_multiple_fields (struct sra_elt *elt, tree f)\n   gcc_assert (block && block->is_scalar);\n \n   var = block->replacement;\n-\n-  if ((bit & ~alchk)\n-      || (HOST_WIDE_INT)size != tree_low_cst (DECL_SIZE (var), 1))\n-    {\n-      block->replacement = fold_build3 (BIT_FIELD_REF,\n-\t\t\t\t\tTREE_TYPE (block->element), var,\n-\t\t\t\t\tbitsize_int (size),\n-\t\t\t\t\tbitsize_int (bit & ~alchk));\n-    }\n-\n   block->in_bitfld_block = 2;\n \n   /* Add the member fields to the group, such that they access\n@@ -1736,12 +1726,14 @@ try_instantiate_multiple_fields (struct sra_elt *elt, tree f)\n       gcc_assert (fld && fld->is_scalar && !fld->replacement);\n \n       fld->replacement = fold_build3 (BIT_FIELD_REF, field_type, var,\n-\t\t\t\t      DECL_SIZE (f),\n+\t\t\t\t      bitsize_int (TYPE_PRECISION (field_type)),\n \t\t\t\t      bitsize_int\n \t\t\t\t      ((TREE_INT_CST_LOW (DECL_FIELD_OFFSET (f))\n \t\t\t\t\t* BITS_PER_UNIT\n \t\t\t\t\t+ (TREE_INT_CST_LOW\n-\t\t\t\t\t   (DECL_FIELD_BIT_OFFSET (f))))\n+\t\t\t\t\t   (DECL_FIELD_BIT_OFFSET (f)))\n+\t\t\t\t\t- (TREE_INT_CST_LOW\n+\t\t\t\t\t   (TREE_OPERAND (block->element, 2))))\n \t\t\t\t       & ~alchk));\n       fld->in_bitfld_block = 1;\n     }"}]}