{"sha": "c4d2313d3995add6368990e90a0a0a5f562c8951", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRkMjMxM2QzOTk1YWRkNjM2ODk5MGU5MGEwYTBhNWY1NjJjODk1MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-09-10T23:46:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-09-10T23:46:26Z"}, "message": "decl2.c (var_finalized_p): New.\n\n\n\t* decl2.c (var_finalized_p): New.\n\t(maybe_emit_vtables, write_out_vars, finish_file): Use it.\n\nFrom-SVN: r71284", "tree": {"sha": "22bcfe9ca78b5ac94352f8f6bf2d44214d49641a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22bcfe9ca78b5ac94352f8f6bf2d44214d49641a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4d2313d3995add6368990e90a0a0a5f562c8951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d2313d3995add6368990e90a0a0a5f562c8951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d2313d3995add6368990e90a0a0a5f562c8951", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d2313d3995add6368990e90a0a0a5f562c8951/comments", "author": null, "committer": null, "parents": [{"sha": "f08545a8f225fe7adfbfab9a652bb8c325494d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f08545a8f225fe7adfbfab9a652bb8c325494d3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f08545a8f225fe7adfbfab9a652bb8c325494d3c"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "55a1914f92cb09953cf964e239a422ed133ca5d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d2313d3995add6368990e90a0a0a5f562c8951/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d2313d3995add6368990e90a0a0a5f562c8951/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c4d2313d3995add6368990e90a0a0a5f562c8951", "patch": "@@ -1,3 +1,8 @@\n+2003-09-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* decl2.c (var_finalized_p): New.\n+\t(maybe_emit_vtables, write_out_vars, finish_file): Use it.\n+\n 2003-09-10  Richard Henderson  <rth@redhat.com>\n \n \t* decl2.c (cxx_callgraph_analyze_expr): New, from corpse of"}, {"sha": "ac428bb388c9b25e916d60a23c77541f707e7a74", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d2313d3995add6368990e90a0a0a5f562c8951/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d2313d3995add6368990e90a0a0a5f562c8951/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=c4d2313d3995add6368990e90a0a0a5f562c8951", "patch": "@@ -1621,6 +1621,17 @@ import_export_class (tree ctype)\n     }\n }\n \n+/* Return true if VAR has already been provided to the back end; in that\n+   case VAR should not be modified further by the front end.  */\n+static bool\n+var_finalized_p (tree var)\n+{\n+  if (flag_unit_at_a_time)\n+    return TREE_ASM_WRITTEN (var);\n+  else\n+    return cgraph_varpool_node (var)->finalized;\n+}\n+\n /* If necessary, write out the vtables for the dynamic class CTYPE.\n    Returns true if any vtables were emitted.  */\n \n@@ -1634,9 +1645,7 @@ maybe_emit_vtables (tree ctype)\n   /* If the vtables for this class have already been emitted there is\n      nothing more to do.  */\n   primary_vtbl = CLASSTYPE_VTABLES (ctype);\n-  if (TREE_ASM_WRITTEN (primary_vtbl)\n-      || (flag_unit_at_a_time\n-\t  && cgraph_varpool_node (primary_vtbl)->finalized))\n+  if (var_finalized_p (primary_vtbl))\n     return false;\n   /* Ignore dummy vtables made by get_vtable_decl.  */\n   if (TREE_TYPE (primary_vtbl) == void_type_node)\n@@ -2454,9 +2463,7 @@ write_out_vars (tree vars)\n   tree v;\n \n   for (v = vars; v; v = TREE_CHAIN (v))\n-    if (! TREE_ASM_WRITTEN (TREE_VALUE (v))\n-        && (!flag_unit_at_a_time\n-\t    || !cgraph_varpool_node (TREE_VALUE (v))->finalized))\n+    if (!var_finalized_p (TREE_VALUE (v)))\n       rest_of_decl_compilation (TREE_VALUE (v), 0, 1, 1);\n }\n \n@@ -2846,9 +2853,7 @@ finish_file ()\n       for (i = 0; i < pending_statics_used; ++i) \n \t{\n \t  tree decl = VARRAY_TREE (pending_statics, i);\n-\t  if (TREE_ASM_WRITTEN (decl)\n-\t      || (flag_unit_at_a_time\n-\t\t  && cgraph_varpool_node (decl)->finalized))\n+\t  if (var_finalized_p (decl))\n \t    continue;\n \t  import_export_decl (decl);\n \t  if (DECL_NOT_REALLY_EXTERN (decl) && ! DECL_IN_AGGR_P (decl))"}]}