{"sha": "44ce0063663da883cd4d1281310734d4a36e8a00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRjZTAwNjM2NjNkYTg4M2NkNGQxMjgxMzEwNzM0ZDRhMzZlOGEwMA==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2001-08-15T19:25:43Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "2001-08-15T19:25:43Z"}, "message": "rtl.h (only_sets_cc0_p): New prototype.\n\n\t* rtl.h (only_sets_cc0_p): New prototype.\n\t* jump.c (sets_cc0_p): Handle INSN.\n\t(only_sets_cc0_p): New function.\n\t* flow.c (merge_blocks_nomove): Use only_sets_cc0_p.\n\t(tidy_fallthru_edge): Likewise.\n\t* integrate.c (copy_insn_list): Likewise.\n\t* unroll.c (unroll_loop): Likewise.\n\t(copy_loop_body): Likewise.\n\nFrom-SVN: r44927", "tree": {"sha": "f447cb6b2c6dd7264add243638d8718cd3935065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f447cb6b2c6dd7264add243638d8718cd3935065"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44ce0063663da883cd4d1281310734d4a36e8a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ce0063663da883cd4d1281310734d4a36e8a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ce0063663da883cd4d1281310734d4a36e8a00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ce0063663da883cd4d1281310734d4a36e8a00/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cff27f1d82b78847d0e4dd25469f4487c9c2dae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff27f1d82b78847d0e4dd25469f4487c9c2dae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff27f1d82b78847d0e4dd25469f4487c9c2dae7"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "7bddf9729d326897c4aaee87478e4aed17283840", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44ce0063663da883cd4d1281310734d4a36e8a00", "patch": "@@ -1,3 +1,14 @@\n+Wed Aug 15 15:22:52 EDT 2001  John Wehle  (john@feith.com)\n+\n+\t* rtl.h (only_sets_cc0_p): New prototype.\n+\t* jump.c (sets_cc0_p): Handle INSN.\n+\t(only_sets_cc0_p): New function.\n+\t* flow.c (merge_blocks_nomove): Use only_sets_cc0_p.\n+\t(tidy_fallthru_edge): Likewise.\n+\t* integrate.c (copy_insn_list): Likewise.\n+\t* unroll.c (unroll_loop): Likewise.\n+\t(copy_loop_body): Likewise.\n+\n 2001-08-15  Jason Eckhardt  <jle@redhat.com>\n \n \t* config/i960/i960.md (trap): Change \"faulteq.t\" to \"faulte.t\"."}, {"sha": "1cf81d0f75308601192945c6e6af9b272bef4d4c", "filename": "gcc/flow.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=44ce0063663da883cd4d1281310734d4a36e8a00", "patch": "@@ -3008,7 +3008,7 @@ merge_blocks_nomove (a, b)\n #ifdef HAVE_cc0\n       /* If this was a conditional jump, we need to also delete\n \t the insn that set cc0.  */\n-      if (prev && sets_cc0_p (prev))\n+      if (only_sets_cc0_p (prev))\n \t{\n \t  rtx tmp = prev;\n \t  prev = prev_nonnote_insn (prev);\n@@ -4213,7 +4213,7 @@ tidy_fallthru_edge (e, b, c)\n #ifdef HAVE_cc0\n       /* If this was a conditional jump, we need to also delete\n \t the insn that set cc0.  */\n-      if (any_condjump_p (q) && sets_cc0_p (PREV_INSN (q)))\n+      if (any_condjump_p (q) && only_sets_cc0_p (PREV_INSN (q)))\n \tq = PREV_INSN (q);\n #endif\n "}, {"sha": "e0d5a6fc9374a73d65630a06fa119bd2acd4e0b1", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=44ce0063663da883cd4d1281310734d4a36e8a00", "patch": "@@ -1463,7 +1463,7 @@ copy_insn_list (insns, map, static_chain_value)\n \t    {\n #ifdef HAVE_cc0\n \t      /* If the previous insn set cc0 for us, delete it.  */\n-\t      if (sets_cc0_p (PREV_INSN (copy)))\n+\t      if (only_sets_cc0_p (PREV_INSN (copy)))\n \t\tdelete_insn (PREV_INSN (copy));\n #endif\n "}, {"sha": "806e190822de7f86daceb8d5b87cb84b22ec49ae", "filename": "gcc/jump.c", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=44ce0063663da883cd4d1281310734d4a36e8a00", "patch": "@@ -1265,15 +1265,39 @@ onlyjump_p (insn)\n \n #ifdef HAVE_cc0\n \n+/* Return non-zero if X is an RTX that only sets the condition codes\n+   and has no side effects.  */\n+\n+int\n+only_sets_cc0_p (x)\n+     rtx x;\n+{\n+\n+  if (! x)\n+    return 0;\n+\n+  if (INSN_P (x))\n+    x = PATTERN (x);\n+\n+  return sets_cc0_p (x) == 1 && ! side_effects_p (x);\n+}\n+\n /* Return 1 if X is an RTX that does nothing but set the condition codes\n    and CLOBBER or USE registers.\n    Return -1 if X does explicitly set the condition codes,\n    but also does other things.  */\n \n int\n sets_cc0_p (x)\n-     rtx x ATTRIBUTE_UNUSED;\n+     rtx x;\n {\n+\n+  if (! x)\n+    return 0;\n+\n+  if (INSN_P (x))\n+    x = PATTERN (x);\n+\n   if (GET_CODE (x) == SET && SET_DEST (x) == cc0_rtx)\n     return 1;\n   if (GET_CODE (x) == PARALLEL)"}, {"sha": "02c672e269c13b6c6412908ed715cb5d80cd0a86", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=44ce0063663da883cd4d1281310734d4a36e8a00", "patch": "@@ -1714,6 +1714,7 @@ extern rtx condjump_label\t\tPARAMS ((rtx));\n extern int simplejump_p\t\t\tPARAMS ((rtx));\n extern int returnjump_p\t\t\tPARAMS ((rtx));\n extern int onlyjump_p\t\t\tPARAMS ((rtx));\n+extern int only_sets_cc0_p\t\tPARAMS ((rtx));\n extern int sets_cc0_p\t\t\tPARAMS ((rtx));\n extern int invert_jump_1\t\tPARAMS ((rtx, rtx));\n extern int invert_jump\t\t\tPARAMS ((rtx, rtx, int));"}, {"sha": "09a07321e47ef72ad8130315ccbded2ef9b2712f", "filename": "gcc/unroll.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44ce0063663da883cd4d1281310734d4a36e8a00/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=44ce0063663da883cd4d1281310734d4a36e8a00", "patch": "@@ -379,7 +379,7 @@ unroll_loop (loop, insn_count, strength_reduce_p)\n #ifdef HAVE_cc0\n \t  /* The immediately preceding insn may be a compare which must be\n \t     deleted.  */\n-\t  if (sets_cc0_p (prev))\n+\t  if (only_sets_cc0_p (prev))\n \t    delete_insn (prev);\n #endif\n \t}\n@@ -2148,7 +2148,7 @@ copy_loop_body (loop, copy_start, copy_end, map, exit_label, last_iteration,\n \t    {\n #ifdef HAVE_cc0\n \t      /* If the previous insn set cc0 for us, delete it.  */\n-\t      if (sets_cc0_p (PREV_INSN (copy)))\n+\t      if (only_sets_cc0_p (PREV_INSN (copy)))\n \t\tdelete_insn (PREV_INSN (copy));\n #endif\n "}]}