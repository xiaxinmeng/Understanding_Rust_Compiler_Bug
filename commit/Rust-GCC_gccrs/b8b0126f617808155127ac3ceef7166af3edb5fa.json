{"sha": "b8b0126f617808155127ac3ceef7166af3edb5fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhiMDEyNmY2MTc4MDgxNTUxMjdhYzNjZWVmNzE2NmFmM2VkYjVmYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-03-25T03:28:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-03-25T03:28:05Z"}, "message": "new\n\nFrom-SVN: r25968", "tree": {"sha": "64aeb8b11d70bf4344b84c6cb9cfcbc8160ce4f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64aeb8b11d70bf4344b84c6cb9cfcbc8160ce4f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8b0126f617808155127ac3ceef7166af3edb5fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b0126f617808155127ac3ceef7166af3edb5fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b0126f617808155127ac3ceef7166af3edb5fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b0126f617808155127ac3ceef7166af3edb5fa/comments", "author": null, "committer": null, "parents": [{"sha": "5b163de4083bc0d51829489c9a08c7357a5de20c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b163de4083bc0d51829489c9a08c7357a5de20c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b163de4083bc0d51829489c9a08c7357a5de20c"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "918e69742d845d474e25458376e2e28999f39ba2", "filename": "gcc/testsuite/g++.old-deja/g++.other/conv6.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b0126f617808155127ac3ceef7166af3edb5fa/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fconv6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b0126f617808155127ac3ceef7166af3edb5fa/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fconv6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fconv6.C?ref=b8b0126f617808155127ac3ceef7166af3edb5fa", "patch": "@@ -0,0 +1,28 @@\n+// Test for composite pointer types, as defined in [expr.rel],\n+// and common pointer to member types, as defined in [expr.eq].\n+\n+struct A { int i; };\n+struct B : public A { };\n+\n+int main ()\n+{\n+  B b;\n+\n+  // The composite type is `A const *'\n+        A* ap = &b;\n+  const B* bp = &b;\n+  if (ap != bp)\t\t// gets bogus error - distinct types XFAIL *-*-*\n+    return 1;\n+\n+  // The composite type is `B const *const *'\n+  B       *const * p = 0;\n+  B const *      * q = 0;\n+  if (p != q)\t\t// gets bogus error - distinct types XFAIL *-*-*\n+    return 1;\n+\n+  // The common type is `int const B::*'\n+  const int A::*apm = &A::i;\n+        int B::*bpm = &A::i;\n+  if (apm != bpm)\t// gets bogus error - distinct types XFAIL *-*-*\n+    return 1;\n+}"}, {"sha": "61a6e91d545a1f3dd0dca65df0c13d5ebce8c869", "filename": "gcc/testsuite/g++.old-deja/g++.other/lookup11.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b0126f617808155127ac3ceef7166af3edb5fa/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b0126f617808155127ac3ceef7166af3edb5fa/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup11.C?ref=b8b0126f617808155127ac3ceef7166af3edb5fa", "patch": "@@ -0,0 +1,12 @@\n+// Build don't link:\n+\n+namespace A {\n+  int i;\n+}\n+using namespace A;\n+namespace B {\n+  int i;\n+}\n+using namespace B;\n+\n+int i;"}, {"sha": "dc378b23e6f16d83b228d0cc7b50f5adfc8b45d8", "filename": "gcc/testsuite/g++.old-deja/g++.other/ptrmem4.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8b0126f617808155127ac3ceef7166af3edb5fa/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8b0126f617808155127ac3ceef7166af3edb5fa/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem4.C?ref=b8b0126f617808155127ac3ceef7166af3edb5fa", "patch": "@@ -0,0 +1,12 @@\n+// Test to make sure g++ can handle target types that aren't identical\n+// with pointers to members.\n+\n+struct A { int i; };\n+struct B : public A { };\n+\n+int main ()\n+{\n+  int A::*p = &A::i;\n+  const int B::*q = &A::i;\n+  return p != q;\n+}"}]}