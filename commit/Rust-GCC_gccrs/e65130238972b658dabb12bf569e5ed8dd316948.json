{"sha": "e65130238972b658dabb12bf569e5ed8dd316948", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY1MTMwMjM4OTcyYjY1OGRhYmIxMmJmNTY5ZTVlZDhkZDMxNjk0OA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-09-06T18:43:35Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-09-06T18:43:35Z"}, "message": "toplev.c (display_help): Fix thinko in documentation.\n\n\t* toplev.c (display_help): Fix thinko in documentation.\n\n\t* diagnostic.h (output_buffer::indent_skip): New fields.\n\t(output_indentation): New macro.\n\n\t* diagnostic.c (output_indent): New function.\n\t(output_set_prefix, clear_diagnostic_info): Use.\n\t(output_emit_prefix): Predict future indentation.\n\nFrom-SVN: r36205", "tree": {"sha": "16f3efac73c54ac9d4bfcc86c3e390ff99b00405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16f3efac73c54ac9d4bfcc86c3e390ff99b00405"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e65130238972b658dabb12bf569e5ed8dd316948", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e65130238972b658dabb12bf569e5ed8dd316948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e65130238972b658dabb12bf569e5ed8dd316948", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e65130238972b658dabb12bf569e5ed8dd316948/comments", "author": null, "committer": null, "parents": [{"sha": "112c7aeab151b463751a3b7ea085f4080c7ce83a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112c7aeab151b463751a3b7ea085f4080c7ce83a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/112c7aeab151b463751a3b7ea085f4080c7ce83a"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "bb11b06d0d72fb467b257bab9ee55790e3e953cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e65130238972b658dabb12bf569e5ed8dd316948/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e65130238972b658dabb12bf569e5ed8dd316948/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e65130238972b658dabb12bf569e5ed8dd316948", "patch": "@@ -1,3 +1,14 @@\n+2000-09-06  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* toplev.c (display_help): Fix thinko in documentation.\n+\n+\t* diagnostic.h (output_buffer::indent_skip): New fields.\n+\t(output_indentation): New macro.\n+\n+\t* diagnostic.c (output_indent): New function.\n+\t(output_set_prefix, clear_diagnostic_info): Use.\n+\t(output_emit_prefix): Predict future indentation.\n+\n 2000-09-06  DJ Delorie  <dj@redhat.com>\n \n \t* Makefile.in (stage_*): add more dependencies to ensure parallel"}, {"sha": "afb25c1ef3b78a9a569f0765b1a45dd2195cf655", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e65130238972b658dabb12bf569e5ed8dd316948/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e65130238972b658dabb12bf569e5ed8dd316948/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=e65130238972b658dabb12bf569e5ed8dd316948", "patch": "@@ -67,6 +67,7 @@ static void output_do_verbatim PARAMS ((output_buffer *,\n                                         const char *, va_list *));\n static void output_to_stream PARAMS ((output_buffer *, FILE *));\n static void output_format PARAMS ((output_buffer *));\n+static void output_indent PARAMS ((output_buffer *));\n \n static char *vbuild_message_string PARAMS ((const char *, va_list));\n static char *build_message_string PARAMS ((const char *, ...))\n@@ -267,6 +268,7 @@ output_set_prefix (buffer, prefix)\n   output_prefix (buffer) = prefix;\n   set_real_maximum_length (buffer);\n   prefix_was_emitted_for (buffer) = 0;\n+  output_indentation (buffer) = 0;\n }\n \n /* Free BUFFER's prefix, a previously malloc'd string.  */\n@@ -301,6 +303,7 @@ clear_diagnostic_info (buffer)\n   output_buffer_text_cursor (buffer) = NULL;\n   output_buffer_ptr_to_format_args (buffer) = NULL;\n   prefix_was_emitted_for (buffer) = 0;\n+  output_indentation (buffer) = 0;\n }\n \n /* Construct an output BUFFER with PREFIX and of MAXIMUM_LENGTH\n@@ -395,8 +398,12 @@ output_emit_prefix (buffer)\n \n         case DIAGNOSTICS_SHOW_PREFIX_ONCE:\n           if (prefix_was_emitted_for (buffer))\n-            break;\n-          /* Else fall through.  */\n+            {\n+              output_indent (buffer);\n+              break;\n+            }\n+          output_indentation (buffer) += 3;          \n+          /* Fall through.  */\n \n         case DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE:\n           {\n@@ -549,6 +556,17 @@ output_append (buffer, start, end)\n   output_append_r (buffer, start, end - start);\n }\n \n+static void\n+output_indent (buffer)\n+     output_buffer *buffer;\n+{\n+  int n = output_indentation (buffer);\n+  int i;\n+\n+  for (i = 0; i < n; ++i)\n+    output_add_character (buffer, ' ');\n+}\n+\n /* Wrap a text delimited by START and END into BUFFER.  */\n \n static void"}, {"sha": "f3ebcf86a642492a2f9de0b294463297747bc606", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e65130238972b658dabb12bf569e5ed8dd316948/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e65130238972b658dabb12bf569e5ed8dd316948/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=e65130238972b658dabb12bf569e5ed8dd316948", "patch": "@@ -51,6 +51,10 @@ typedef struct\n   /* The ideal upper bound of number of characters per line, as suggested\n      by front-end. */  \n   int ideal_maximum_length;\n+\n+  /* Indentation count.  */\n+  int indent_skip;\n+\n   /* Nonzero if current PREFIX was emitted at least once.  */\n   int emitted_prefix_p;\n \n@@ -88,6 +92,7 @@ struct output_buffer\n #define output_buffer_format_args(BUFFER) *((BUFFER)->state.format_args)\n #define output_needs_newline(BUFFER) (BUFFER)->state.need_newline_p\n #define output_buffer_state(BUFFER) (BUFFER)->state\n+#define output_indentation(BUFFER) (BUFFER)->state.indent_skip\n \n /* This data structure bundles altogether any information relevent to\n    the context of a diagnostic message.  */"}, {"sha": "d657d49ba485b01a92629fcb998fb19f7144eae4", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e65130238972b658dabb12bf569e5ed8dd316948/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e65130238972b658dabb12bf569e5ed8dd316948/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e65130238972b658dabb12bf569e5ed8dd316948", "patch": "@@ -3774,7 +3774,7 @@ display_help ()\n   printf (_(\"  -fcall-saved-<register> Mark <register> as being preserved across functions\\n\"));\n   printf (_(\"  -finline-limit=<number> Limits the size of inlined functions to <number>\\n\"));\n   printf (_(\"  -fmessage-length=<number> Limits diagnostics messages lengths to <number> characters per line.  0 suppresses line-wrapping\\n\"));\n-  printf (_(\"  -fdiagnostics-show-location=[once | never] Indicates how often source location information should be emitted, as prefix, at the beginning of diagnostics when line-wrapping\\n\"));\n+  printf (_(\"  -fdiagnostics-show-location=[once | every-line] Indicates how often source location information should be emitted, as prefix, at the beginning of diagnostics when line-wrapping\\n\"));\n \n   for (i = ARRAY_SIZE (f_options); i--;)\n     {"}]}