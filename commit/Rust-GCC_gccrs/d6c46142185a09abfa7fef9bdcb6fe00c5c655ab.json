{"sha": "d6c46142185a09abfa7fef9bdcb6fe00c5c655ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZjNDYxNDIxODVhMDlhYmZhN2ZlZjliZGNiNmZlMDBjNWM2NTVhYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-18T11:25:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-18T11:25:18Z"}, "message": "(override_options): Treat -o32 as -32 and -n64 same as -64.\n\nFrom-SVN: r12299", "tree": {"sha": "b06f1659254bf2e9b7878a88afb04327f08ca609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b06f1659254bf2e9b7878a88afb04327f08ca609"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6c46142185a09abfa7fef9bdcb6fe00c5c655ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c46142185a09abfa7fef9bdcb6fe00c5c655ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6c46142185a09abfa7fef9bdcb6fe00c5c655ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c46142185a09abfa7fef9bdcb6fe00c5c655ab/comments", "author": null, "committer": null, "parents": [{"sha": "9d699bf813b9b9f192d39a9d217609ebfb6257fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d699bf813b9b9f192d39a9d217609ebfb6257fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d699bf813b9b9f192d39a9d217609ebfb6257fe"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "736e640f4ee783a97cfd645e76a46867e06210f6", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c46142185a09abfa7fef9bdcb6fe00c5c655ab/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c46142185a09abfa7fef9bdcb6fe00c5c655ab/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d6c46142185a09abfa7fef9bdcb6fe00c5c655ab", "patch": "@@ -201,7 +201,7 @@ enum mips_abi_type mips_abi;\n /* Strings to hold which cpu and instruction set architecture to use.  */\n char *mips_cpu_string;\t\t/* for -mcpu=<xxx> */\n char *mips_isa_string;\t\t/* for -mips{1,2,3,4} */\n-char *mips_abi_string;\t\t/* for -mabi={32,n32,64} */\n+char *mips_abi_string;\t\t/* for -mabi={o32,32,n32,n64,64} */\n \n /* If TRUE, we split addresses into their high and low parts in the RTL.  */\n int mips_split_addresses;\n@@ -3300,11 +3300,13 @@ override_options ()\n   /* Get the ABI to use.  Currently this code is only used for Irix 6.  */\n   if (mips_abi_string == (char *) 0)\n     mips_abi = MIPS_ABI_DEFAULT;\n-  else if (! strcmp (mips_abi_string, \"32\"))\n+  else if (! strcmp (mips_abi_string, \"32\")\n+\t   || ! strcmp (mips_abi_string, \"o32\"))\n     mips_abi = ABI_32;\n   else if (! strcmp (mips_abi_string, \"n32\"))\n     mips_abi = ABI_N32;\n-  else if (! strcmp (mips_abi_string, \"64\"))\n+  else if (! strcmp (mips_abi_string, \"64\")\n+\t   || ! strcmp (mips_abi_string, \"n64\"))\n     mips_abi = ABI_64;\n   else\n     error (\"bad value (%s) for -mabi= switch\", mips_abi_string);"}]}