{"sha": "957e47632b18edc2f802b74087e690185a8423c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU3ZTQ3NjMyYjE4ZWRjMmY4MDJiNzQwODdlNjkwMTg1YTg0MjNjOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-01-17T16:01:04Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-01-17T16:01:04Z"}, "message": "print-rtl.c: PROTO -> PARAMS.\n\n        * print-rtl.c: PROTO -> PARAMS.\n        * real.c: Likewise.\n        * reg-stack.c: Likewise.\n        * resource.c: Likewise.\n        * sdbout.h: Likewise.\n        * simplify-rtx.c: Likewise.\n        * stor-layout.c: Likewise.\n        * stupid.c: Likewise.\n        * xcoffout.c: Likewise.\n        * xcoffout.h: Likewise.\n\nFrom-SVN: r31463", "tree": {"sha": "ec493418ac7831f4cce49b0e46d96fd0218e12e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec493418ac7831f4cce49b0e46d96fd0218e12e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/957e47632b18edc2f802b74087e690185a8423c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/957e47632b18edc2f802b74087e690185a8423c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/957e47632b18edc2f802b74087e690185a8423c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/957e47632b18edc2f802b74087e690185a8423c8/comments", "author": null, "committer": null, "parents": [{"sha": "58782098af9dfb58f6fc42800748c45252965923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58782098af9dfb58f6fc42800748c45252965923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58782098af9dfb58f6fc42800748c45252965923"}], "stats": {"total": 329, "additions": 171, "deletions": 158}, "files": [{"sha": "23348418c3d7cded98c1eb00968abe4889d2056b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -1,3 +1,16 @@\n+2000-01-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* print-rtl.c: PROTO -> PARAMS.\n+\t* real.c: Likewise.\n+\t* reg-stack.c: Likewise.\n+\t* resource.c: Likewise.\n+\t* sdbout.h: Likewise.\n+\t* simplify-rtx.c: Likewise.\n+\t* stor-layout.c: Likewise.\n+\t* stupid.c: Likewise.\n+\t* xcoffout.c: Likewise.\n+\t* xcoffout.h: Likewise.\n+\n 2000-01-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* toplev.c: PROTO -> PARAMS."}, {"sha": "c498a3d4f91f242e962849cc4819c8ce4cf55aa9", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -52,7 +52,7 @@ static int sawclose = 0;\n \n static int indent;\n \n-static void print_rtx\t\tPROTO ((rtx));\n+static void print_rtx\t\tPARAMS ((rtx));\n \n /* Nonzero means suppress output of instruction numbers and line number\n    notes in debugging dumps."}, {"sha": "1fd0e8d6d8c4e9f7bfebc0b00ab8bd389e9f1140", "filename": "gcc/real.c", "status": "modified", "additions": 92, "deletions": 92, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -340,132 +340,132 @@ extern int extra_warnings;\n extern unsigned EMUSHORT ezero[], ehalf[], eone[], etwo[];\n extern unsigned EMUSHORT elog2[], esqrt2[];\n \n-static void endian\tPROTO((unsigned EMUSHORT *, long *,\n+static void endian\tPARAMS ((unsigned EMUSHORT *, long *,\n \t\t\t       enum machine_mode));\n-static void eclear\tPROTO((unsigned EMUSHORT *));\n-static void emov\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void eclear\tPARAMS ((unsigned EMUSHORT *));\n+static void emov\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n #if 0\n-static void eabs\tPROTO((unsigned EMUSHORT *));\n-#endif\n-static void eneg\tPROTO((unsigned EMUSHORT *));\n-static int eisneg\tPROTO((unsigned EMUSHORT *));\n-static int eisinf\tPROTO((unsigned EMUSHORT *));\n-static int eisnan\tPROTO((unsigned EMUSHORT *));\n-static void einfin\tPROTO((unsigned EMUSHORT *));\n-static void enan\tPROTO((unsigned EMUSHORT *, int));\n-static void emovi\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void emovo\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void ecleaz\tPROTO((unsigned EMUSHORT *));\n-static void ecleazs\tPROTO((unsigned EMUSHORT *));\n-static void emovz\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void einan\tPROTO((unsigned EMUSHORT *));\n-static int eiisnan\tPROTO((unsigned EMUSHORT *));\n-static int eiisneg\tPROTO((unsigned EMUSHORT *));\n+static void eabs\tPARAMS ((unsigned EMUSHORT *));\n+#endif\n+static void eneg\tPARAMS ((unsigned EMUSHORT *));\n+static int eisneg\tPARAMS ((unsigned EMUSHORT *));\n+static int eisinf\tPARAMS ((unsigned EMUSHORT *));\n+static int eisnan\tPARAMS ((unsigned EMUSHORT *));\n+static void einfin\tPARAMS ((unsigned EMUSHORT *));\n+static void enan\tPARAMS ((unsigned EMUSHORT *, int));\n+static void emovi\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void emovo\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void ecleaz\tPARAMS ((unsigned EMUSHORT *));\n+static void ecleazs\tPARAMS ((unsigned EMUSHORT *));\n+static void emovz\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void einan\tPARAMS ((unsigned EMUSHORT *));\n+static int eiisnan\tPARAMS ((unsigned EMUSHORT *));\n+static int eiisneg\tPARAMS ((unsigned EMUSHORT *));\n #if 0\n-static void eiinfin\tPROTO((unsigned EMUSHORT *));\n-#endif\n-static int eiisinf\tPROTO((unsigned EMUSHORT *));\n-static int ecmpm\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void eshdn1\tPROTO((unsigned EMUSHORT *));\n-static void eshup1\tPROTO((unsigned EMUSHORT *));\n-static void eshdn8\tPROTO((unsigned EMUSHORT *));\n-static void eshup8\tPROTO((unsigned EMUSHORT *));\n-static void eshup6\tPROTO((unsigned EMUSHORT *));\n-static void eshdn6\tPROTO((unsigned EMUSHORT *));\n-static void eaddm\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\f\n-static void esubm\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void m16m\tPROTO((unsigned int, unsigned short *,\n+static void eiinfin\tPARAMS ((unsigned EMUSHORT *));\n+#endif\n+static int eiisinf\tPARAMS ((unsigned EMUSHORT *));\n+static int ecmpm\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void eshdn1\tPARAMS ((unsigned EMUSHORT *));\n+static void eshup1\tPARAMS ((unsigned EMUSHORT *));\n+static void eshdn8\tPARAMS ((unsigned EMUSHORT *));\n+static void eshup8\tPARAMS ((unsigned EMUSHORT *));\n+static void eshup6\tPARAMS ((unsigned EMUSHORT *));\n+static void eshdn6\tPARAMS ((unsigned EMUSHORT *));\n+static void eaddm\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\f\n+static void esubm\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void m16m\tPARAMS ((unsigned int, unsigned short *,\n \t\t\t       unsigned short *));\n-static int edivm\tPROTO((unsigned short *, unsigned short *));\n-static int emulm\tPROTO((unsigned short *, unsigned short *));\n-static void emdnorm\tPROTO((unsigned EMUSHORT *, int, int, EMULONG, int));\n-static void esub\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static int edivm\tPARAMS ((unsigned short *, unsigned short *));\n+static int emulm\tPARAMS ((unsigned short *, unsigned short *));\n+static void emdnorm\tPARAMS ((unsigned EMUSHORT *, int, int, EMULONG, int));\n+static void esub\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n \t\t\t       unsigned EMUSHORT *));\n-static void eadd\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void eadd\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n \t\t\t       unsigned EMUSHORT *));\n-static void eadd1\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void eadd1\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n \t\t\t       unsigned EMUSHORT *));\n-static void ediv\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void ediv\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n \t\t\t       unsigned EMUSHORT *));\n-static void emul\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void emul\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n \t\t\t       unsigned EMUSHORT *));\n-static void e53toe\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void e64toe\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void e113toe\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void e24toe\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void etoe113\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void toe113\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void etoe64\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void toe64\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void etoe53\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void toe53\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void etoe24\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void toe24\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static int ecmp\t\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void e53toe\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void e64toe\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void e113toe\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void e24toe\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void etoe113\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void toe113\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void etoe64\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void toe64\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void etoe53\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void toe53\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void etoe24\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void toe24\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static int ecmp\t\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n #if 0\n-static void eround\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void eround\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n #endif\n-static void ltoe\tPROTO((HOST_WIDE_INT *, unsigned EMUSHORT *));\n-static void ultoe\tPROTO((unsigned HOST_WIDE_INT *, unsigned EMUSHORT *));\n-static void eifrac\tPROTO((unsigned EMUSHORT *, HOST_WIDE_INT *,\n+static void ltoe\tPARAMS ((HOST_WIDE_INT *, unsigned EMUSHORT *));\n+static void ultoe\tPARAMS ((unsigned HOST_WIDE_INT *, unsigned EMUSHORT *));\n+static void eifrac\tPARAMS ((unsigned EMUSHORT *, HOST_WIDE_INT *,\n \t\t\t       unsigned EMUSHORT *));\n-static void euifrac\tPROTO((unsigned EMUSHORT *, unsigned HOST_WIDE_INT *,\n+static void euifrac\tPARAMS ((unsigned EMUSHORT *, unsigned HOST_WIDE_INT *,\n \t\t\t       unsigned EMUSHORT *));\n-static int eshift\tPROTO((unsigned EMUSHORT *, int));\n-static int enormlz\tPROTO((unsigned EMUSHORT *));\n+static int eshift\tPARAMS ((unsigned EMUSHORT *, int));\n+static int enormlz\tPARAMS ((unsigned EMUSHORT *));\n #if 0\n-static void e24toasc\tPROTO((unsigned EMUSHORT *, char *, int));\n-static void e53toasc\tPROTO((unsigned EMUSHORT *, char *, int));\n-static void e64toasc\tPROTO((unsigned EMUSHORT *, char *, int));\n-static void e113toasc\tPROTO((unsigned EMUSHORT *, char *, int));\n+static void e24toasc\tPARAMS ((unsigned EMUSHORT *, char *, int));\n+static void e53toasc\tPARAMS ((unsigned EMUSHORT *, char *, int));\n+static void e64toasc\tPARAMS ((unsigned EMUSHORT *, char *, int));\n+static void e113toasc\tPARAMS ((unsigned EMUSHORT *, char *, int));\n #endif /* 0 */\n-static void etoasc\tPROTO((unsigned EMUSHORT *, char *, int));\n-static void asctoe24\tPROTO((const char *, unsigned EMUSHORT *));\n-static void asctoe53\tPROTO((const char *, unsigned EMUSHORT *));\n-static void asctoe64\tPROTO((const char *, unsigned EMUSHORT *));\n-static void asctoe113\tPROTO((const char *, unsigned EMUSHORT *));\n-static void asctoe\tPROTO((const char *, unsigned EMUSHORT *));\n-static void asctoeg\tPROTO((const char *, unsigned EMUSHORT *, int));\n-static void efloor\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void etoasc\tPARAMS ((unsigned EMUSHORT *, char *, int));\n+static void asctoe24\tPARAMS ((const char *, unsigned EMUSHORT *));\n+static void asctoe53\tPARAMS ((const char *, unsigned EMUSHORT *));\n+static void asctoe64\tPARAMS ((const char *, unsigned EMUSHORT *));\n+static void asctoe113\tPARAMS ((const char *, unsigned EMUSHORT *));\n+static void asctoe\tPARAMS ((const char *, unsigned EMUSHORT *));\n+static void asctoeg\tPARAMS ((const char *, unsigned EMUSHORT *, int));\n+static void efloor\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n #if 0\n-static void efrexp\tPROTO((unsigned EMUSHORT *, int *,\n+static void efrexp\tPARAMS ((unsigned EMUSHORT *, int *,\n \t\t\t       unsigned EMUSHORT *));\n #endif\n-static void eldexp\tPROTO((unsigned EMUSHORT *, int, unsigned EMUSHORT *));\n+static void eldexp\tPARAMS ((unsigned EMUSHORT *, int, unsigned EMUSHORT *));\n #if 0\n-static void eremain\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void eremain\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n \t\t\t       unsigned EMUSHORT *));\n #endif\n-static void eiremain\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void mtherr\tPROTO((const char *, int));\n+static void eiremain\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void mtherr\tPARAMS ((const char *, int));\n #ifdef DEC\n-static void dectoe\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void etodec\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void todec\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void dectoe\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void etodec\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void todec\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n #endif\n #ifdef IBM\n-static void ibmtoe\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void ibmtoe\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n \t\t\t       enum machine_mode));\n-static void etoibm\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void etoibm\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n \t\t\t       enum machine_mode));\n-static void toibm\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void toibm\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n \t\t\t       enum machine_mode));\n #endif\n #ifdef C4X\n-static void c4xtoe\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void c4xtoe\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n  \t\t\t       enum machine_mode));\n-static void etoc4x\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void etoc4x\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n  \t\t\t       enum machine_mode));\n-static void toc4x\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *,\n+static void toc4x\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *,\n  \t\t\t       enum machine_mode));\n #endif\n-static void make_nan\tPROTO((unsigned EMUSHORT *, int, enum machine_mode));\n+static void make_nan\tPARAMS ((unsigned EMUSHORT *, int, enum machine_mode));\n #if 0\n-static void uditoe\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void ditoe\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void etoudi\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void etodi\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n-static void esqrt\tPROTO((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void uditoe\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void ditoe\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void etoudi\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void etodi\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n+static void esqrt\tPARAMS ((unsigned EMUSHORT *, unsigned EMUSHORT *));\n #endif\n \f\n /* Copy 32-bit numbers obtained from array containing 16-bit numbers,"}, {"sha": "45ef11c5ce35a0e37b194799fe48ca074f607af5", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -229,36 +229,36 @@ static rtx nan;\n \n /* Forward declarations */\n \n-static int stack_regs_mentioned_p\tPROTO((rtx pat));\n-static void straighten_stack\t\tPROTO((rtx, stack));\n-static void pop_stack\t\t\tPROTO((stack, int));\n-static rtx *get_true_reg\t\tPROTO((rtx *));\n-\n-static int check_asm_stack_operands\tPROTO((rtx));\n-static int get_asm_operand_n_inputs\tPROTO((rtx));\n-static rtx stack_result\t\t\tPROTO((tree));\n-static void replace_reg\t\t\tPROTO((rtx *, int));\n-static void remove_regno_note\t\tPROTO((rtx, enum reg_note, int));\n-static int get_hard_regnum\t\tPROTO((stack, rtx));\n-static void delete_insn_for_stacker\tPROTO((rtx));\n-static rtx emit_pop_insn\t\tPROTO((rtx, stack, rtx,\n+static int stack_regs_mentioned_p\tPARAMS ((rtx pat));\n+static void straighten_stack\t\tPARAMS ((rtx, stack));\n+static void pop_stack\t\t\tPARAMS ((stack, int));\n+static rtx *get_true_reg\t\tPARAMS ((rtx *));\n+\n+static int check_asm_stack_operands\tPARAMS ((rtx));\n+static int get_asm_operand_n_inputs\tPARAMS ((rtx));\n+static rtx stack_result\t\t\tPARAMS ((tree));\n+static void replace_reg\t\t\tPARAMS ((rtx *, int));\n+static void remove_regno_note\t\tPARAMS ((rtx, enum reg_note, int));\n+static int get_hard_regnum\t\tPARAMS ((stack, rtx));\n+static void delete_insn_for_stacker\tPARAMS ((rtx));\n+static rtx emit_pop_insn\t\tPARAMS ((rtx, stack, rtx,\n \t\t\t\t\t       enum emit_where));\n-static void emit_swap_insn\t\tPROTO((rtx, stack, rtx));\n-static void move_for_stack_reg\t\tPROTO((rtx, stack, rtx));\n-static int swap_rtx_condition_1\t\tPROTO((rtx));\n-static int swap_rtx_condition\t\tPROTO((rtx));\n-static void compare_for_stack_reg\tPROTO((rtx, stack, rtx));\n-static void subst_stack_regs_pat\tPROTO((rtx, stack, rtx));\n-static void subst_asm_stack_regs\tPROTO((rtx, stack));\n-static void subst_stack_regs\t\tPROTO((rtx, stack));\n-static void change_stack\t\tPROTO((rtx, stack, stack,\n+static void emit_swap_insn\t\tPARAMS ((rtx, stack, rtx));\n+static void move_for_stack_reg\t\tPARAMS ((rtx, stack, rtx));\n+static int swap_rtx_condition_1\t\tPARAMS ((rtx));\n+static int swap_rtx_condition\t\tPARAMS ((rtx));\n+static void compare_for_stack_reg\tPARAMS ((rtx, stack, rtx));\n+static void subst_stack_regs_pat\tPARAMS ((rtx, stack, rtx));\n+static void subst_asm_stack_regs\tPARAMS ((rtx, stack));\n+static void subst_stack_regs\t\tPARAMS ((rtx, stack));\n+static void change_stack\t\tPARAMS ((rtx, stack, stack,\n \t\t\t\t\t       enum emit_where));\n-static int convert_regs_entry\t\tPROTO((void));\n-static void convert_regs_exit\t\tPROTO((void));\n-static int convert_regs_1\t\tPROTO((FILE *, basic_block));\n-static int convert_regs_2\t\tPROTO((FILE *, basic_block));\n-static int convert_regs\t\t\tPROTO((FILE *));\n-static void print_stack \t\tPROTO((FILE *, stack));\n+static int convert_regs_entry\t\tPARAMS ((void));\n+static void convert_regs_exit\t\tPARAMS ((void));\n+static int convert_regs_1\t\tPARAMS ((FILE *, basic_block));\n+static int convert_regs_2\t\tPARAMS ((FILE *, basic_block));\n+static int convert_regs\t\t\tPARAMS ((FILE *));\n+static void print_stack \t\tPARAMS ((FILE *, stack));\n \f\n /* Return non-zero if any stack register is mentioned somewhere within PAT.  */\n "}, {"sha": "274cb230994874abb745694a466e994b1cb179a7", "filename": "gcc/resource.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -74,10 +74,10 @@ static HARD_REG_SET current_live_regs;\n \n static HARD_REG_SET pending_dead_regs;\n \f\n-static void update_live_status\t\tPROTO ((rtx, rtx, void *));\n-static int find_basic_block\t\tPROTO ((rtx));\n-static rtx next_insn_no_annul\t\tPROTO ((rtx));\n-static rtx find_dead_or_set_registers\tPROTO ((rtx, struct resources*,\n+static void update_live_status\t\tPARAMS ((rtx, rtx, void *));\n+static int find_basic_block\t\tPARAMS ((rtx));\n+static rtx next_insn_no_annul\t\tPARAMS ((rtx));\n+static rtx find_dead_or_set_registers\tPARAMS ((rtx, struct resources*,\n \t\t\t\t\t\trtx*, int, struct resources,\n \t\t\t\t\t\tstruct resources));\n \f"}, {"sha": "9e42a6bd7d7aca78a26cd2e16f5ed728b413b0dd", "filename": "gcc/sdbout.h", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fsdbout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fsdbout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.h?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -18,22 +18,22 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-extern void sdbout_init\t\t\tPROTO ((FILE *, char*, tree));\n+extern void sdbout_init\t\t\tPARAMS ((FILE *, char*, tree));\n \n-extern void sdbout_begin_function\tPROTO ((int));\n-extern void sdbout_end_function\t\tPROTO ((int));\n+extern void sdbout_begin_function\tPARAMS ((int));\n+extern void sdbout_end_function\t\tPARAMS ((int));\n \n-extern void sdbout_begin_block\t\tPROTO ((FILE *, int, int));\n-extern void sdbout_end_block\t\tPROTO ((FILE *, int, int));\n+extern void sdbout_begin_block\t\tPARAMS ((FILE *, int, int));\n+extern void sdbout_end_block\t\tPARAMS ((FILE *, int, int));\n \n-extern void sdbout_label\t\tPROTO ((rtx));\n-extern void sdbout_symbol\t\tPROTO ((tree, int));\n-extern void sdbout_toplevel_data\tPROTO ((tree));\n-extern void sdbout_types\t\tPROTO ((tree));\n+extern void sdbout_label\t\tPARAMS ((rtx));\n+extern void sdbout_symbol\t\tPARAMS ((tree, int));\n+extern void sdbout_toplevel_data\tPARAMS ((tree));\n+extern void sdbout_types\t\tPARAMS ((tree));\n \n-extern void sdbout_end_epilogue\t\tPROTO ((void));\n+extern void sdbout_end_epilogue\t\tPARAMS ((void));\n \n-extern void sdbout_start_new_source_file \tPROTO ((char *));\n-extern void sdbout_resume_previous_source_file\tPROTO ((void));\n-extern void sdbout_mark_begin_function\tPROTO ((void));\n+extern void sdbout_start_new_source_file \tPARAMS ((char *));\n+extern void sdbout_resume_previous_source_file\tPARAMS ((void));\n+extern void sdbout_mark_begin_function\tPARAMS ((void));\n "}, {"sha": "c3e2d8c4ef8eab2291727bc0fdaaf6aa09beba78", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -89,9 +89,9 @@ Boston, MA 02111-1307, USA.  */\n    || GET_CODE (X) == ADDRESSOF)\n \n \n-static rtx simplify_plus_minus\tPROTO((enum rtx_code, enum machine_mode,\n+static rtx simplify_plus_minus\tPARAMS ((enum rtx_code, enum machine_mode,\n \t\t\t\t       rtx, rtx));\n-static void check_fold_consts\tPROTO((PTR));\n+static void check_fold_consts\tPARAMS ((PTR));\n \n /* Make a binary operation by properly ordering the operands and \n    seeing if the expression folds.  */"}, {"sha": "8ffacb749a108b619ff0844c5111950d763c26b3", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -43,8 +43,8 @@ int maximum_field_alignment;\n    May be overridden by front-ends.  */\n int set_alignment = 0;\n \n-static tree layout_record\tPROTO((tree));\n-static void layout_union\tPROTO((tree));\n+static tree layout_record\tPARAMS ((tree));\n+static void layout_union\tPARAMS ((tree));\n \f\n /* SAVE_EXPRs for sizes of types and decls, waiting to be expanded.  */\n "}, {"sha": "6e36b49922bb7e7ac9f6059f875a6b6fb0e5f5c9", "filename": "gcc/stupid.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fstupid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fstupid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstupid.c?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -125,12 +125,12 @@ static HARD_REG_SET *after_insn_hard_regs;\n #define MARK_LIVE_AFTER(INSN,REGNO)  \\\n   SET_HARD_REG_BIT (after_insn_hard_regs[INSN_SUID (INSN)], (REGNO))\n \n-static int stupid_reg_compare\tPROTO((const PTR,const PTR));\n-static int stupid_find_reg\tPROTO((int, enum reg_class, enum machine_mode,\n+static int stupid_reg_compare\tPARAMS ((const PTR,const PTR));\n+static int stupid_find_reg\tPARAMS ((int, enum reg_class, enum machine_mode,\n \t\t\t\t       int, int, int));\n-static void stupid_mark_refs\tPROTO((rtx, struct insn_chain *));\n-static void find_clobbered_regs\tPROTO((rtx, rtx, void *));\n-static void mark_hard_ref\tPROTO((rtx, int, struct insn_chain *));\n+static void stupid_mark_refs\tPARAMS ((rtx, struct insn_chain *));\n+static void find_clobbered_regs\tPARAMS ((rtx, rtx, void *));\n+static void mark_hard_ref\tPARAMS ((rtx, int, struct insn_chain *));\n \f\n /* For communication between stupid_life_analysis and find_clobbered_regs.  */\n static struct insn_chain *current_chain;"}, {"sha": "dd9cf3b5c891aa055e4574683f8dff2bf2e5c922", "filename": "gcc/xcoffout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fxcoffout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fxcoffout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.c?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -116,8 +116,8 @@ char *xcoff_lastfile;\n #define ASM_OUTPUT_LBE(FILE,LINENUM,BLOCKNUM) \\\n   fprintf (FILE, \"\\t.eb\\t%d\\n\", ABS_OR_RELATIVE_LINENO (LINENUM))\n \n-static void assign_type_number\t\tPROTO((tree, char *, int));\n-static void xcoffout_block\t\tPROTO((tree, int, tree));\n+static void assign_type_number\t\tPARAMS ((tree, char *, int));\n+static void xcoffout_block\t\tPARAMS ((tree, int, tree));\n \f\n /* Support routines for XCOFF debugging info.  */\n "}, {"sha": "7f62821e2f7f925ad21771e1adfa3d7e199ae881", "filename": "gcc/xcoffout.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fxcoffout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/957e47632b18edc2f802b74087e690185a8423c8/gcc%2Fxcoffout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.h?ref=957e47632b18edc2f802b74087e690185a8423c8", "patch": "@@ -188,24 +188,24 @@ extern char *xcoff_lastfile;\n \n /* Prototype functions in xcoffout.c. */\n \n-extern int stab_to_sclass\t\t\tPROTO ((int));\n+extern int stab_to_sclass\t\t\tPARAMS ((int));\n #ifdef BUFSIZ\n-extern void xcoffout_begin_function\t\tPROTO ((FILE *, int));\n-extern void xcoffout_begin_block\t\tPROTO ((FILE *, int, int));\n-extern void xcoffout_end_epilogue\t\tPROTO ((FILE *));\n-extern void xcoffout_end_function\t\tPROTO ((FILE *, int));\n-extern void xcoffout_end_block\t\t\tPROTO ((FILE *, int, int));\n+extern void xcoffout_begin_function\t\tPARAMS ((FILE *, int));\n+extern void xcoffout_begin_block\t\tPARAMS ((FILE *, int, int));\n+extern void xcoffout_end_epilogue\t\tPARAMS ((FILE *));\n+extern void xcoffout_end_function\t\tPARAMS ((FILE *, int));\n+extern void xcoffout_end_block\t\t\tPARAMS ((FILE *, int, int));\n #endif /* BUFSIZ */\n \n #ifdef TREE_CODE\n-extern void xcoff_output_standard_types\t\tPROTO ((tree));\n+extern void xcoff_output_standard_types\t\tPARAMS ((tree));\n #ifdef BUFSIZ\n-extern void xcoffout_declare_function\t\tPROTO ((FILE *, tree, char *));\n+extern void xcoffout_declare_function\t\tPARAMS ((FILE *, tree, char *));\n #endif /* BUFSIZ */\n #endif /* TREE_CODE */\n \n #ifdef RTX_CODE\n #ifdef BUFSIZ\n-extern void xcoffout_source_line\t\tPROTO ((FILE *, char *, rtx));\n+extern void xcoffout_source_line\t\tPARAMS ((FILE *, char *, rtx));\n #endif /* BUFSIZ */\n #endif /* RTX_CODE */"}]}