{"sha": "d2822509df584dfe94cc218a6daad0c6fcd34786", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI4MjI1MDlkZjU4NGRmZTk0Y2MyMThhNmRhYWQwYzZmY2QzNDc4Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-11T01:00:15Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-11T01:00:15Z"}, "message": "Don't use intermediate .la files building libgo.\n\nFrom-SVN: r170862", "tree": {"sha": "7c630957ebe3d2feb48e120fe729db5c22590480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c630957ebe3d2feb48e120fe729db5c22590480"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2822509df584dfe94cc218a6daad0c6fcd34786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2822509df584dfe94cc218a6daad0c6fcd34786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2822509df584dfe94cc218a6daad0c6fcd34786", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2822509df584dfe94cc218a6daad0c6fcd34786/comments", "author": null, "committer": null, "parents": [{"sha": "e6d54f3ad010cda86b40eef30340998d3ebef642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d54f3ad010cda86b40eef30340998d3ebef642", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6d54f3ad010cda86b40eef30340998d3ebef642"}], "stats": {"total": 2455, "additions": 954, "deletions": 1501}, "files": [{"sha": "e19d229a9e5876a7bb9f7d3fab7f836c936a6b0f", "filename": "libgo/Makefile.am", "status": "modified", "additions": 457, "deletions": 729, "changes": 1186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2822509df584dfe94cc218a6daad0c6fcd34786/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2822509df584dfe94cc218a6daad0c6fcd34786/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=d2822509df584dfe94cc218a6daad0c6fcd34786", "patch": "@@ -796,6 +796,8 @@ endif\n go_syslog_files = \\\n \tgo/syslog/syslog.go \\\n \t$(go_syslog_file)\n+go_syslog_c_files = \\\n+\tgo/syslog/syslog_c.c\n \n go_tabwriter_files = \\\n \tgo/tabwriter/tabwriter.go\n@@ -1253,138 +1255,142 @@ go_syscall_c_files = \\\n \tsyscalls/errno.c\n \n if LIBGO_IS_LINUX\n-# os_lib_inotify_la = os/libinotify.la\n-os_lib_inotify_la =\n+# os_lib_inotify_lo = os/inotify.lo\n+os_lib_inotify_lo =\n else\n-os_lib_inotify_la =\n+os_lib_inotify_lo =\n endif\n \n libgo_go_objs = \\\n-\tasn1/libasn1.la \\\n-\tbig/libbig.la \\\n-\tbufio/libbufio.la \\\n-\tbytes/libbytes.la \\\n-\tcmath/libcmath.la \\\n-\tebnf/libebnf.la \\\n-\texec/libexec.la \\\n-\texpvar/libexpvar.la \\\n-\tflag/libflag.la \\\n-\tfmt/libfmt.la \\\n-\tgob/libgob.la \\\n-\thash/libhash.la \\\n-\thtml/libhtml.la \\\n-\thttp/libhttp.la \\\n-\timage/libimage.la \\\n-\tio/libio.la \\\n-\tjson/libjson.la \\\n-\tlog/liblog.la \\\n-\tmath/libmath.la \\\n-\tmime/libmime.la \\\n-\tnet/libnet.la \\\n-\tnetchan/libnetchan.la \\\n-\tos/libos.la \\\n-\tpatch/libpatch.la \\\n-\tpath/libpath.la \\\n-\trand/librand.la \\\n-\treflect/libreflect.la \\\n-\tregexp/libregexp.la \\\n-\trpc/librpc.la \\\n-\truntime/libruntime.la \\\n-\tscanner/libscanner.la \\\n-\tsmtp/libsmtp.la \\\n-\tsort/libsort.la \\\n-\tstrconv/libstrconv.la \\\n-\tstrings/libstrings.la \\\n-\tsync/libsync.la \\\n-\tsyslog/libsyslog.la \\\n-\ttabwriter/libtabwriter.la \\\n-\ttemplate/libtemplate.la \\\n-\ttime/libtime.la \\\n-\ttry/libtry.la \\\n-\tunicode/libunicode.la \\\n-\tutf16/libutf16.la \\\n-\tutf8/libutf8.la \\\n-\twebsocket/libwebsocket.la \\\n-\txml/libxml.la \\\n-\tarchive/libtar.la \\\n-\tarchive/libzip.la \\\n-\tcompress/libflate.la \\\n-\tcompress/libgzip.la \\\n-\tcompress/libzlib.la \\\n-\tcontainer/libheap.la \\\n-\tcontainer/liblist.la \\\n-\tcontainer/libring.la \\\n-\tcontainer/libvector.la \\\n-\tcrypto/libaes.la \\\n-\tcrypto/libblock.la \\\n-\tcrypto/libblowfish.la \\\n-\tcrypto/libcast5.la \\\n-\tcrypto/libcipher.la \\\n-\tcrypto/libelliptic.la \\\n-\tcrypto/libhmac.la \\\n-\tcrypto/libmd4.la \\\n-\tcrypto/libmd5.la \\\n-\tcrypto/libocsp.la \\\n-\tcrypto/librand.la \\\n-\tcrypto/librc4.la \\\n-\tcrypto/libripemd160.la \\\n-\tcrypto/librsa.la \\\n-\tcrypto/libsha1.la \\\n-\tcrypto/libsha256.la \\\n-\tcrypto/libsha512.la \\\n-\tcrypto/libsubtle.la \\\n-\tcrypto/libtls.la \\\n-\tcrypto/libtwofish.la \\\n-\tcrypto/libx509.la \\\n-\tcrypto/libxtea.la \\\n-\tcrypto/openpgp/libarmor.la \\\n-\tcrypto/openpgp/liberror.la \\\n-\tcrypto/openpgp/libs2k.la \\\n-\tdebug/libdwarf.la \\\n-\tdebug/libelf.la \\\n-\tdebug/libgosym.la \\\n-\tdebug/libmacho.la \\\n-\tdebug/libpe.la \\\n-\tdebug/libproc.la \\\n-\tencoding/libascii85.la \\\n-\tencoding/libbase32.la \\\n-\tencoding/libbase64.la \\\n-\tencoding/libbinary.la \\\n-\tencoding/libgit85.la \\\n-\tencoding/libhex.la \\\n-\tencoding/libline.la \\\n-\tencoding/libpem.la \\\n-\texp/libdatafmt.la \\\n-\texp/libdraw.la \\\n-\texp/libeval.la \\\n-\tgo/libast.la \\\n-\tgo/libdoc.la \\\n-\tgo/libparser.la \\\n-\tgo/libprinter.la \\\n-\tgo/libscanner.la \\\n-\tgo/libtoken.la \\\n-\tgo/libtypechecker.la \\\n-\thash/libadler32.la \\\n-\thash/libcrc32.la \\\n-\thash/libcrc64.la \\\n-\thttp/libpprof.la \\\n-\timage/libjpeg.la \\\n-\timage/libpng.la \\\n-\tindex/libsuffixarray.la \\\n-\tio/libioutil.la \\\n-\tmime/libmultipart.la \\\n-\tnet/libdict.la \\\n-\tnet/libtextproto.la \\\n-\t$(os_lib_inotify_la) \\\n-\tos/libsignal.la \\\n-\trpc/libjsonrpc.la \\\n-\truntime/libdebug.la \\\n-\truntime/libpprof.la \\\n-\tsyscalls/libsyscall.la \\\n-\ttesting/libtesting.la \\\n-\ttesting/libiotest.la \\\n-\ttesting/libquick.la \\\n-\ttesting/libscript.la\n+\tasn1/asn1.lo \\\n+\tbig/big.lo \\\n+\tbufio/bufio.lo \\\n+\tbytes/bytes.lo \\\n+\tbytes/index.lo \\\n+\tcmath/cmath.lo \\\n+\tebnf/ebnf.lo \\\n+\texec/exec.lo \\\n+\texpvar/expvar.lo \\\n+\tflag/flag.lo \\\n+\tfmt/fmt.lo \\\n+\tgob/gob.lo \\\n+\thash/hash.lo \\\n+\thtml/html.lo \\\n+\thttp/http.lo \\\n+\timage/image.lo \\\n+\tio/io.lo \\\n+\tjson/json.lo \\\n+\tlog/log.lo \\\n+\tmath/math.lo \\\n+\tmime/mime.lo \\\n+\tnet/net.lo \\\n+\tnetchan/netchan.lo \\\n+\tos/os.lo \\\n+\tpatch/patch.lo \\\n+\tpath/path.lo \\\n+\trand/rand.lo \\\n+\treflect/reflect.lo \\\n+\tregexp/regexp.lo \\\n+\trpc/rpc.lo \\\n+\truntime/runtime.lo \\\n+\tscanner/scanner.lo \\\n+\tsmtp/smtp.lo \\\n+\tsort/sort.lo \\\n+\tstrconv/strconv.lo \\\n+\tstrings/strings.lo \\\n+\tsync/mutex.lo \\\n+\tsync/cas.lo \\\n+\tsyslog/syslog.lo \\\n+\tsyslog/syslog_c.lo \\\n+\ttabwriter/tabwriter.lo \\\n+\ttemplate/template.lo \\\n+\ttime/time.lo \\\n+\ttry/try.lo \\\n+\tunicode/unicode.lo \\\n+\tutf16/utf16.lo \\\n+\tutf8/utf8.lo \\\n+\twebsocket/websocket.lo \\\n+\txml/xml.lo \\\n+\tarchive/tar.lo \\\n+\tarchive/zip.lo \\\n+\tcompress/flate.lo \\\n+\tcompress/gzip.lo \\\n+\tcompress/zlib.lo \\\n+\tcontainer/heap.lo \\\n+\tcontainer/list.lo \\\n+\tcontainer/ring.lo \\\n+\tcontainer/vector.lo \\\n+\tcrypto/aes.lo \\\n+\tcrypto/block.lo \\\n+\tcrypto/blowfish.lo \\\n+\tcrypto/cast5.lo \\\n+\tcrypto/cipher.lo \\\n+\tcrypto/elliptic.lo \\\n+\tcrypto/hmac.lo \\\n+\tcrypto/md4.lo \\\n+\tcrypto/md5.lo \\\n+\tcrypto/ocsp.lo \\\n+\tcrypto/rand.lo \\\n+\tcrypto/rc4.lo \\\n+\tcrypto/ripemd160.lo \\\n+\tcrypto/rsa.lo \\\n+\tcrypto/sha1.lo \\\n+\tcrypto/sha256.lo \\\n+\tcrypto/sha512.lo \\\n+\tcrypto/subtle.lo \\\n+\tcrypto/tls.lo \\\n+\tcrypto/twofish.lo \\\n+\tcrypto/x509.lo \\\n+\tcrypto/xtea.lo \\\n+\tcrypto/openpgp/armor.lo \\\n+\tcrypto/openpgp/error.lo \\\n+\tcrypto/openpgp/s2k.lo \\\n+\tdebug/dwarf.lo \\\n+\tdebug/elf.lo \\\n+\tdebug/gosym.lo \\\n+\tdebug/macho.lo \\\n+\tdebug/pe.lo \\\n+\tdebug/proc.lo \\\n+\tencoding/ascii85.lo \\\n+\tencoding/base32.lo \\\n+\tencoding/base64.lo \\\n+\tencoding/binary.lo \\\n+\tencoding/git85.lo \\\n+\tencoding/hex.lo \\\n+\tencoding/line.lo \\\n+\tencoding/pem.lo \\\n+\texp/datafmt.lo \\\n+\texp/draw.lo \\\n+\texp/eval.lo \\\n+\tgo/ast.lo \\\n+\tgo/doc.lo \\\n+\tgo/parser.lo \\\n+\tgo/printer.lo \\\n+\tgo/scanner.lo \\\n+\tgo/token.lo \\\n+\tgo/typechecker.lo \\\n+\thash/adler32.lo \\\n+\thash/crc32.lo \\\n+\thash/crc64.lo \\\n+\thttp/pprof.lo \\\n+\timage/jpeg.lo \\\n+\timage/png.lo \\\n+\tindex/suffixarray.lo \\\n+\tio/ioutil.lo \\\n+\tmime/multipart.lo \\\n+\tnet/dict.lo \\\n+\tnet/textproto.lo \\\n+\t$(os_lib_inotify_lo) \\\n+\tos/signal.lo \\\n+\trpc/jsonrpc.lo \\\n+\truntime/debug.lo \\\n+\truntime/pprof.lo \\\n+\tsyscalls/syscall.lo \\\n+\tsyscalls/errno.lo \\\n+\ttesting/testing.lo \\\n+\ttesting/iotest.lo \\\n+\ttesting/quick.lo \\\n+\ttesting/script.lo\n \n libgo_la_SOURCES = $(runtime_files)\n \n@@ -1406,18 +1412,12 @@ LTGOCOMPILE = $(LIBTOOL) --tag GO --mode=compile $(GOC) $(INCLUDES) \\\n GOLINK = $(LIBTOOL) --tag GO --mode-link $(GOC) \\\n \t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_GOCFLAGS) $(LTLDFLAGS) -o $@\n \n-# Build a package.  This builds a .o and a .lo.\n+# Build the .go files for a package, generating a .lo file.\n BUILDPACKAGE = \\\n-\trm -f `echo $@ | sed -e 's|/lib|/|' -e 's/\\.a/.gox/'`; \\\n-\ttest -d $(@D) || $(MKDIR_P) $(@D); \\\n-\trm -f $@; \\\n+\t$(MKDIR_P) $(@D); \\\n \tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g'`; \\\n \t$(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_$(@D)\" -o $@ $$files\n \n-# Build a .la file from a .lo file.\n-.lo.la:\n-\t$(LINK) $<\n-\n if LIBGO_IS_RTEMS\n use_dejagnu = yes\n else\n@@ -1467,1123 +1467,867 @@ CHECK_DEPS = libgo.la libgobegin.a \\\n \t$(toolexeclibruntime_DATA) \\\n \t$(toolexeclibtesting_DATA)\n \n-asn1/libasn1.$(OBJEXT): $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox time.gox\n+asn1/asn1.lo: $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n+\t\tstrconv.gox strings.gox time.gox\n \t$(BUILDPACKAGE)\n-asn1/libasn1.lo: asn1/libasn1.$(OBJEXT)\n-asn1/libasn1.la: asn1/libasn1.lo\n asn1/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: asn1/check\n \n-big/libbig.$(OBJEXT): $(go_big_files) fmt.gox rand.gox strings.gox\n+big/big.lo: $(go_big_files) fmt.gox rand.gox strings.gox\n \t$(BUILDPACKAGE)\n-big/libbig.lo: big/libbig.$(OBJEXT)\n-big/libbig.la: big/libbig.lo\n big/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: big/check\n \n-bufio/libbufio.$(OBJEXT): $(go_bufio_files) bytes.gox io.gox os.gox \\\n-\t\tstrconv.gox utf8.gox\n+bufio/bufio.lo: $(go_bufio_files) bytes.gox io.gox os.gox strconv.gox utf8.gox\n \t$(BUILDPACKAGE)\n-bufio/libbufio.lo: bufio/libbufio.$(OBJEXT)\n-bufio/libbufio.la: bufio/libbufio.lo\n bufio/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: bufio/check\n \n-bytes/bytes.$(OBJEXT): $(go_bytes_files) $(go_bytes_c_files) io.gox os.gox \\\n-\t\tunicode.gox utf8.gox\n-\ttest -d bytes || $(MKDIR_P) bytes\n-\t$(LTGOCOMPILE) -I . -c -o bytes/bytes.$(OBJEXT) -fgo-prefix=libgo_bytes $(srcdir)/go/bytes/buffer.go $(srcdir)/go/bytes/bytes.go $(srcdir)/go/bytes/bytes_decl.go\n-bytes/index.$(OBJEXT): go/bytes/indexbyte.c bytes/bytes.$(OBJEXT)\n-\t$(LTCOMPILE) -c -o bytes/index.$(OBJEXT) $(srcdir)/go/bytes/indexbyte.c\n-bytes/libbytes.la: bytes/bytes.$(OBJEXT) bytes/index.$(OBJEXT)\n-\t$(LINK) bytes/bytes.lo bytes/index.lo\n+bytes/bytes.lo: $(go_bytes_files) io.gox os.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+bytes/index.lo: $(go_bytes_c_files) bytes/bytes.lo\n+\t$(LTCOMPILE) -c -o bytes/index.lo $(srcdir)/go/bytes/indexbyte.c\n bytes/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: bytes/check\n \n-cmath/libcmath.$(OBJEXT): $(go_cmath_files) math.gox\n+cmath/cmath.lo: $(go_cmath_files) math.gox\n \t$(BUILDPACKAGE)\n-cmath/libcmath.lo: cmath/libcmath.$(OBJEXT)\n-cmath/libcmath.la: cmath/libcmath.lo\n cmath/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: cmath/check\n \n-ebnf/libebnf.$(OBJEXT): $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n+ebnf/ebnf.lo: $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n \t\tgo/token.gox os.gox strconv.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-ebnf/libebnf.lo: ebnf/libebnf.$(OBJEXT)\n-ebnf/libebnf.la: ebnf/libebnf.lo\n ebnf/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: ebnf/check\n \n-exec/libexec.$(OBJEXT): $(go_exec_files) os.gox strings.gox\n+exec/exec.lo: $(go_exec_files) os.gox strings.gox\n \t$(BUILDPACKAGE)\n-exec/libexec.lo: exec/libexec.$(OBJEXT)\n-exec/libexec.la: exec/libexec.lo\n exec/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: exec/check\n \n-expvar/libexpvar.$(OBJEXT): $(go_expvar_files) bytes.gox fmt.gox http.gox \\\n-\t\tjson.gox log.gox os.gox runtime.gox strconv.gox sync.gox\n+expvar/expvar.lo: $(go_expvar_files) bytes.gox fmt.gox http.gox json.gox \\\n+\t\tlog.gox os.gox runtime.gox strconv.gox sync.gox\n \t$(BUILDPACKAGE)\n-expvar/libexpvar.lo: expvar/libexpvar.$(OBJEXT)\n-expvar/libexpvar.la: expvar/libexpvar.lo\n expvar/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: expvar/check\n \n-flag/libflag.$(OBJEXT): $(go_flag_files) fmt.gox os.gox strconv.gox\n+flag/flag.lo: $(go_flag_files) fmt.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-flag/libflag.lo: flag/libflag.$(OBJEXT)\n-flag/libflag.la: flag/libflag.lo\n flag/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: flag/check\n \n-fmt/libfmt.$(OBJEXT): $(go_fmt_files) bytes.gox io.gox os.gox reflect.gox \\\n-\t\tstrconv.gox strings.gox unicode.gox utf8.gox\n+fmt/fmt.lo: $(go_fmt_files) bytes.gox io.gox os.gox reflect.gox strconv.gox \\\n+\t\tstrings.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-fmt/libfmt.lo: fmt/libfmt.$(OBJEXT)\n-fmt/libfmt.la: fmt/libfmt.lo\n fmt/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: fmt/check\n \n-gob/libgob.$(OBJEXT): $(go_gob_files) bytes.gox fmt.gox io.gox math.gox \\\n-\t\tos.gox reflect.gox runtime.gox strings.gox sync.gox \\\n-\t\tunicode.gox utf8.gox\n+gob/gob.lo: $(go_gob_files) bytes.gox fmt.gox io.gox math.gox os.gox \\\n+\t\treflect.gox runtime.gox strings.gox sync.gox unicode.gox \\\n+\t\tutf8.gox\n \t$(BUILDPACKAGE)\n-gob/libgob.lo: gob/libgob.$(OBJEXT)\n-gob/libgob.la: gob/libgob.lo\n gob/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: gob/check\n \n-hash/libhash.$(OBJEXT): $(go_hash_files) io.gox\n+hash/hash.lo: $(go_hash_files) io.gox\n \t$(BUILDPACKAGE)\n-hash/libhash.lo: hash/libhash.$(OBJEXT)\n-hash/libhash.la: hash/libhash.lo\n hash/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: hash/check\n \n-html/libhtml.$(OBJEXT): $(go_html_files) bytes.gox io.gox os.gox strconv.gox \\\n-\t\tstrings.gox utf8.gox\n+html/html.lo: $(go_html_files) bytes.gox io.gox os.gox strconv.gox strings.gox \\\n+\t\tutf8.gox\n \t$(BUILDPACKAGE)\n-html/libhtml.lo: html/libhtml.$(OBJEXT)\n-html/libhtml.la: html/libhtml.lo\n html/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: html/check\n \n-http/libhttp.$(OBJEXT): $(go_http_files) bufio.gox bytes.gox \\\n-\t\tcontainer/list.gox container/vector.gox crypto/rand.gox \\\n-\t\tcrypto/tls.gox encoding/base64.gox fmt.gox io.gox \\\n-\t\tio/ioutil.gox log.gox mime.gox mime/multipart.gox net.gox \\\n-\t\tos.gox path.gox sort.gox strconv.gox strings.gox sync.gox \\\n-\t\ttime.gox utf8.gox\n+http/http.lo: $(go_http_files) bufio.gox bytes.gox container/list.gox \\\n+\t\tcontainer/vector.gox crypto/rand.gox crypto/tls.gox \\\n+\t\tencoding/base64.gox fmt.gox io.gox io/ioutil.gox log.gox \\\n+\t\tmime.gox mime/multipart.gox net.gox os.gox path.gox sort.gox \\\n+\t\tstrconv.gox strings.gox sync.gox time.gox utf8.gox\n \t$(BUILDPACKAGE)\n-http/libhttp.lo: http/libhttp.$(OBJEXT)\n-http/libhttp.la: http/libhttp.lo\n http/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: http/check\n \n-image/libimage.$(OBJEXT): $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n+image/image.lo: $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-image/libimage.lo: image/libimage.$(OBJEXT)\n-image/libimage.la: image/libimage.lo\n image/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: image/check\n \n-io/libio.$(OBJEXT): $(go_io_files) os.gox runtime.gox sync.gox\n+io/io.lo: $(go_io_files) os.gox runtime.gox sync.gox\n \t$(BUILDPACKAGE)\n-io/libio.lo: io/libio.$(OBJEXT)\n-io/libio.la: io/libio.lo\n io/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: io/check\n \n-json/libjson.$(OBJEXT): $(go_json_files) bytes.gox container/vector.gox \\\n-\t\tfmt.gox io.gox math.gox os.gox reflect.gox runtime.gox \\\n-\t\tstrconv.gox strings.gox unicode.gox utf16.gox utf8.gox\n+json/json.lo: $(go_json_files) bytes.gox container/vector.gox fmt.gox io.gox \\\n+\t\tmath.gox os.gox reflect.gox runtime.gox strconv.gox \\\n+\t\tstrings.gox unicode.gox utf16.gox utf8.gox\n \t$(BUILDPACKAGE)\n-json/libjson.lo: json/libjson.$(OBJEXT)\n-json/libjson.la: json/libjson.lo\n json/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: json/check\n \n-log/liblog.$(OBJEXT): $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox \\\n-\t\tos.gox sync.gox time.gox\n+log/log.lo: $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox os.gox \\\n+\t\tsync.gox time.gox\n \t$(BUILDPACKAGE)\n-log/liblog.lo: log/liblog.$(OBJEXT)\n-log/liblog.la: log/liblog.lo\n log/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: log/check\n \n-math/libmath.$(OBJEXT): $(go_math_files)\n+math/math.lo: $(go_math_files)\n \t$(BUILDPACKAGE)\n-math/libmath.lo: math/libmath.$(OBJEXT)\n-math/libmath.la: math/libmath.lo\n math/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: math/check\n \n-mime/libmime.$(OBJEXT): $(go_mime_files) bufio.gox bytes.gox os.gox \\\n-\t\tstrings.gox sync.gox unicode.gox\n+mime/mime.lo: $(go_mime_files) bufio.gox bytes.gox os.gox strings.gox \\\n+\t\tsync.gox unicode.gox\n \t$(BUILDPACKAGE)\n-mime/libmime.lo: mime/libmime.$(OBJEXT)\n-mime/libmime.la: mime/libmime.lo\n mime/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: mime/check\n \n-net/libnet.$(OBJEXT): $(go_net_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox sync.gox syscall.gox\n+net/net.lo: $(go_net_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n+\t\tstrconv.gox strings.gox sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n-net/libnet.lo: net/libnet.$(OBJEXT)\n-net/libnet.la: net/libnet.lo\n net/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: net/check\n \n-netchan/libnetchan.$(OBJEXT): $(go_netchan_files) gob.gox log.gox net.gox \\\n-\t\tos.gox reflect.gox strconv.gox sync.gox time.gox\n+netchan/netchan.lo: $(go_netchan_files) gob.gox log.gox net.gox os.gox \\\n+\t\treflect.gox strconv.gox sync.gox time.gox\n \t$(BUILDPACKAGE)\n-netchan/libnetchan.lo: netchan/libnetchan.$(OBJEXT)\n-netchan/libnetchan.la: netchan/libnetchan.lo\n netchan/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: netchan/check\n \n-os/libos.$(OBJEXT): $(go_os_files) sync.gox syscall.gox\n+os/os.lo: $(go_os_files) sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n-os/libos.lo: os/libos.$(OBJEXT)\n-os/libos.la: os/libos.lo\n os/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: os/check\n \n-patch/libpatch.$(OBJEXT): $(go_patch_files) bytes.gox compress/zlib.gox \\\n+patch/patch.lo: $(go_patch_files) bytes.gox compress/zlib.gox \\\n \t\tcrypto/sha1.gox encoding/git85.gox fmt.gox io.gox os.gox \\\n \t\tpath.gox strings.gox\n \t$(BUILDPACKAGE)\n-patch/libpatch.lo: patch/libpatch.$(OBJEXT)\n-patch/libpatch.la: patch/libpatch.lo\n patch/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: patch/check\n \n-path/libpath.$(OBJEXT): $(go_path_files) io/ioutil.gox os.gox sort.gox \\\n-\t\tstrings.gox utf8.gox\n+path/path.lo: $(go_path_files) io/ioutil.gox os.gox sort.gox strings.gox \\\n+\t\tutf8.gox\n \t$(BUILDPACKAGE)\n-path/libpath.lo: path/libpath.$(OBJEXT)\n-path/libpath.la: path/libpath.lo\n path/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: path/check\n \n-rand/librand.$(OBJEXT): $(go_rand_files) math.gox sync.gox\n+rand/rand.lo: $(go_rand_files) math.gox sync.gox\n \t$(BUILDPACKAGE)\n-rand/librand.lo: rand/librand.$(OBJEXT)\n-rand/librand.la: rand/librand.lo\n rand/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: rand/check\n \n-reflect/libreflect.$(OBJEXT): $(go_reflect_files) math.gox runtime.gox \\\n-\t\tstrconv.gox sync.gox\n+reflect/reflect.lo: $(go_reflect_files) math.gox runtime.gox strconv.gox \\\n+\t\tsync.gox\n \t$(BUILDPACKAGE)\n-reflect/libreflect.lo: reflect/libreflect.$(OBJEXT)\n-reflect/libreflect.la: reflect/libreflect.lo\n reflect/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: reflect/check\n \n-regexp/libregexp.$(OBJEXT): $(go_regexp_files) bytes.gox io.gox os.gox \\\n-\t\tstrings.gox utf8.gox\n+regexp/regexp.lo: $(go_regexp_files) bytes.gox io.gox os.gox strings.gox \\\n+\t\tutf8.gox\n \t$(BUILDPACKAGE)\n-regexp/libregexp.lo: regexp/libregexp.$(OBJEXT)\n-regexp/libregexp.la: regexp/libregexp.lo\n regexp/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: regexp/check\n \n-rpc/librpc.$(OBJEXT): $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox \\\n-\t\tio.gox log.gox net.gox os.gox reflect.gox sort.gox \\\n-\t\tstrings.gox strconv.gox sync.gox template.gox unicode.gox \\\n-\t\tutf8.gox\n+rpc/rpc.lo: $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox io.gox log.gox \\\n+\t\tnet.gox os.gox reflect.gox sort.gox strings.gox strconv.gox \\\n+\t\tsync.gox template.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-rpc/librpc.lo: rpc/librpc.$(OBJEXT)\n-rpc/librpc.la: rpc/librpc.lo\n rpc/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: rpc/check\n \n-runtime/libruntime.$(OBJEXT): $(go_runtime_files)\n+runtime/runtime.lo: $(go_runtime_files)\n \t$(BUILDPACKAGE)\n-runtime/libruntime.lo: runtime/libruntime.$(OBJEXT)\n-runtime/libruntime.la: runtime/libruntime.lo\n runtime/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: runtime/check\n \n-scanner/libscanner.$(OBJEXT): $(go_scanner_files) bytes.gox fmt.gox io.gox \\\n-\t\tos.gox unicode.gox utf8.gox\n+scanner/scanner.lo: $(go_scanner_files) bytes.gox fmt.gox io.gox os.gox \\\n+\t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-scanner/libscanner.lo: scanner/libscanner.$(OBJEXT)\n-scanner/libscanner.la: scanner/libscanner.lo\n scanner/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: scanner/check\n \n-smtp/libsmtp.$(OBJEXT): $(go_smtp_files) crypto/tls.gox encoding/base64.gox \\\n-\t\tio.gox net.gox net/textproto.gox os.gox strings.gox\n+smtp/smtp.lo: $(go_smtp_files) crypto/tls.gox encoding/base64.gox io.gox \\\n+\t\tnet.gox net/textproto.gox os.gox strings.gox\n \t$(BUILDPACKAGE)\n-smtp/libsmtp.lo: smtp/libsmtp.$(OBJEXT)\n-smtp/libsmtp.la: smtp/libsmtp.lo\n smtp/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: smtp/check\n \n-sort/libsort.$(OBJEXT): $(go_sort_files)\n+sort/sort.lo: $(go_sort_files)\n \t$(BUILDPACKAGE)\n-sort/libsort.lo: sort/libsort.$(OBJEXT)\n-sort/libsort.la: sort/libsort.lo\n sort/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: sort/check\n \n-strconv/libstrconv.$(OBJEXT): $(go_strconv_files) bytes.gox math.gox os.gox \\\n-\t\tstrings.gox unicode.gox utf8.gox\n+strconv/strconv.lo: $(go_strconv_files) bytes.gox math.gox os.gox strings.gox \\\n+\t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-strconv/libstrconv.lo: strconv/libstrconv.$(OBJEXT)\n-strconv/libstrconv.la: strconv/libstrconv.lo\n strconv/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: strconv/check\n \n-strings/libstrings.$(OBJEXT): $(go_strings_files) os.gox unicode.gox utf8.gox\n+strings/strings.lo: $(go_strings_files) os.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-strings/libstrings.lo: strings/libstrings.$(OBJEXT)\n-strings/libstrings.la: strings/libstrings.lo\n strings/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: strings/check\n \n-sync/mutex.$(OBJEXT): $(go_sync_files) $(go_sync_c_files) runtime.gox\n-\ttest -d sync || $(MKDIR_P) sync\n-\t$(LTGOCOMPILE) -I . -c -o sync/mutex.$(OBJEXT) -fgo-prefix=libgo_sync $(srcdir)/go/sync/mutex.go $(srcdir)/go/sync/once.go $(srcdir)/go/sync/rwmutex.go\n-sync/cas.$(OBJEXT): $(srcdir)/go/sync/cas.c sync/mutex.$(OBJEXT)\n-\t$(LTCOMPILE) -c -o sync/cas.$(OBJEXT) $(srcdir)/go/sync/cas.c\n-sync/libsync.la: sync/mutex.$(OBJEXT) sync/cas.$(OBJEXT)\n-\t$(LINK) sync/mutex.lo sync/cas.lo\n+sync/mutex.lo: $(go_sync_files) runtime.gox\n+\t$(BUILDPACKAGE)\n+sync/cas.lo: $(go_sync_c_files) sync/mutex.lo\n+\t$(LTCOMPILE) -c -o sync/cas.lo $(srcdir)/go/sync/cas.c\n sync/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: sync/check\n \n-syslog/syslog.$(OBJEXT): $(go_syslog_files) fmt.gox log.gox net.gox os.gox \\\n-\t\tsyscall.gox\n-\ttest -d syslog || $(MKDIR_P) syslog\n-\t$(LTGOCOMPILE) -I . -c -o $@ -fgo-prefix=libgo_syslog $(srcdir)/go/syslog/syslog.go $(srcdir)/$(go_syslog_file)\n-syslog/syslog_c.$(OBJEXT): $(srcdir)/go/syslog/syslog_c.c syslog/syslog.$(OBJEXT)\n+syslog/syslog.lo: $(go_syslog_files) fmt.gox log.gox net.gox os.gox syscall.gox\n+\t$(BUILDPACKAGE)\n+syslog/syslog_c.lo: $(go_syslog_c_files) syslog/syslog.lo\n \t$(LTCOMPILE) -c -o $@ $(srcdir)/go/syslog/syslog_c.c\n-syslog/libsyslog.la: syslog/syslog.$(OBJEXT) syslog/syslog_c.$(OBJEXT)\n-\t$(LINK) syslog/syslog.lo syslog/syslog_c.lo\n syslog/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: syslog/check\n \n-tabwriter/libtabwriter.$(OBJEXT): $(go_tabwriter_files) bytes.gox io.gox \\\n-\t\tos.gox utf8.gox\n+tabwriter/tabwriter.lo: $(go_tabwriter_files) bytes.gox io.gox os.gox utf8.gox\n \t$(BUILDPACKAGE)\n-tabwriter/libtabwriter.lo: tabwriter/libtabwriter.$(OBJEXT)\n-tabwriter/libtabwriter.la: tabwriter/libtabwriter.lo\n tabwriter/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: tabwriter/check\n \n-template/libtemplate.$(OBJEXT): $(go_template_files) bytes.gox fmt.gox io.gox \\\n-\t\tos.gox reflect.gox runtime.gox strings.gox container/vector.gox\n+template/template.lo: $(go_template_files) bytes.gox fmt.gox io.gox os.gox \\\n+\t\treflect.gox runtime.gox strings.gox container/vector.gox\n \t$(BUILDPACKAGE)\n-template/libtemplate.lo: template/libtemplate.$(OBJEXT)\n-template/libtemplate.la: template/libtemplate.lo\n template/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: template/check\n \n-testing/libtesting.$(OBJEXT): $(go_testing_files) flag.gox fmt.gox os.gox \\\n-\t\tregexp.gox runtime.gox time.gox\n+testing/testing.lo: $(go_testing_files) flag.gox fmt.gox os.gox regexp.gox \\\n+\t\truntime.gox time.gox\n \t$(BUILDPACKAGE)\n-testing/libtesting.lo: testing/libtesting.$(OBJEXT)\n-testing/libtesting.la: testing/libtesting.lo\n testing/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: testing/check\n \n-time/libtime.$(OBJEXT): $(go_time_files) bytes.gox container/heap.gox \\\n-\t\tio/ioutil.gox os.gox strconv.gox sync.gox syscall.gox\n+time/time.lo: $(go_time_files) bytes.gox container/heap.gox io/ioutil.gox \\\n+\t\tos.gox strconv.gox sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n-time/libtime.lo: time/libtime.$(OBJEXT)\n-time/libtime.la: time/libtime.lo\n time/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: time/check\n \n-try/libtry.$(OBJEXT): $(go_try_files) fmt.gox io.gox os.gox reflect.gox \\\n-\t\tunicode.gox\n+try/try.lo: $(go_try_files) fmt.gox io.gox os.gox reflect.gox unicode.gox\n \t$(BUILDPACKAGE)\n-try/libtry.lo: try/libtry.$(OBJEXT)\n-try/libtry.la: try/libtry.lo\n try/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: try/check\n \n-unicode/libunicode.$(OBJEXT): $(go_unicode_files)\n+unicode/unicode.lo: $(go_unicode_files)\n \t$(BUILDPACKAGE)\n-unicode/libunicode.lo: unicode/libunicode.$(OBJEXT)\n-unicode/libunicode.la: unicode/libunicode.lo\n unicode/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: unicode/check\n \n-utf16/libutf16.$(OBJEXT): $(go_utf16_files) unicode.gox\n+utf16/utf16.lo: $(go_utf16_files) unicode.gox\n \t$(BUILDPACKAGE)\n-utf16/libutf16.lo: utf16/libutf16.$(OBJEXT)\n-utf16/libutf16.la: utf16/libutf16.lo\n utf16/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: utf16/check\n \n-utf8/libutf8.$(OBJEXT): $(go_utf8_files) unicode.gox\n+utf8/utf8.lo: $(go_utf8_files) unicode.gox\n \t$(BUILDPACKAGE)\n-utf8/libutf8.lo: utf8/libutf8.$(OBJEXT)\n-utf8/libutf8.la: utf8/libutf8.lo\n utf8/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: utf8/check\n \n-websocket/libwebsocket.$(OBJEXT): $(go_websocket_files) bufio.gox bytes.gox \\\n+websocket/websocket.lo: $(go_websocket_files) bufio.gox bytes.gox \\\n \t\tcontainer/vector.gox crypto/md5.gox crypto/tls.gox \\\n \t\tencoding/binary.gox fmt.gox http.gox io.gox net.gox os.gox \\\n \t\trand.gox strings.gox\n \t$(BUILDPACKAGE)\n-websocket/libwebsocket.lo: websocket/libwebsocket.$(OBJEXT)\n-websocket/libwebsocket.la: websocket/libwebsocket.lo\n websocket/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: websocket/check\n \n-xml/libxml.$(OBJEXT): $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox \\\n-\t\tos.gox reflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n+xml/xml.lo: $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n+\t\treflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-xml/libxml.lo: xml/libxml.$(OBJEXT)\n-xml/libxml.la: xml/libxml.lo\n xml/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: xml/check\n \n-archive/libtar.$(OBJEXT): $(go_archive_tar_files) bytes.gox io.gox os.gox \\\n-\t\tstrconv.gox strings.gox\n+archive/tar.lo: $(go_archive_tar_files) bytes.gox io.gox os.gox strconv.gox \\\n+\t\tstrings.gox\n \t$(BUILDPACKAGE)\n-archive/libtar.lo: archive/libtar.$(OBJEXT)\n-archive/libtar.la: archive/libtar.lo\n archive/tar/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/tar\n \t$(CHECK)\n .PHONY: archive/tar/check\n \n-archive/libzip.$(OBJEXT): $(go_archive_zip_files) bufio.gox bytes.gox \\\n+archive/zip.lo: $(go_archive_zip_files) bufio.gox bytes.gox \\\n \t\tcompress/flate.gox hash.gox hash/crc32.gox \\\n \t\tencoding/binary.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-archive/libzip.lo: archive/libzip.$(OBJEXT)\n-archive/libzip.la: archive/libzip.lo\n archive/zip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/zip\n \t$(CHECK)\n .PHONY: archive/zip/check\n \n-compress/libflate.$(OBJEXT): $(go_compress_flate_files) bufio.gox io.gox \\\n-\t\tmath.gox os.gox sort.gox strconv.gox\n+compress/flate.lo: $(go_compress_flate_files) bufio.gox io.gox math.gox \\\n+\t\tos.gox sort.gox strconv.gox\n \t$(BUILDPACKAGE)\n-compress/libflate.lo: compress/libflate.$(OBJEXT)\n-compress/libflate.la: compress/libflate.lo\n compress/flate/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/flate\n \t$(CHECK)\n .PHONY: compress/flate/check\n \n-compress/libgzip.$(OBJEXT): $(go_compress_gzip_files) bufio.gox \\\n-\t\tcompress/flate.gox hash.gox hash/crc32.gox io.gox os.gox\n+compress/gzip.lo: $(go_compress_gzip_files) bufio.gox compress/flate.gox \\\n+\t\thash.gox hash/crc32.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-compress/libgzip.lo: compress/libgzip.$(OBJEXT)\n-compress/libgzip.la: compress/libgzip.lo\n compress/gzip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/gzip\n \t$(CHECK)\n .PHONY: compress/gzip/check\n \n-compress/libzlib.$(OBJEXT): $(go_compress_zlib_files) bufio.gox \\\n-\t\tcompress/flate.gox hash.gox hash/adler32.gox io.gox os.gox\n+compress/zlib.lo: $(go_compress_zlib_files) bufio.gox compress/flate.gox \\\n+\t\thash.gox hash/adler32.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-compress/libzlib.lo: compress/libzlib.$(OBJEXT)\n-compress/libzlib.la: compress/libzlib.lo\n compress/zlib/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/zlib\n \t$(CHECK)\n .PHONY: compress/zlib/check\n \n-container/libheap.$(OBJEXT): $(go_container_heap_files) sort.gox\n+container/heap.lo: $(go_container_heap_files) sort.gox\n \t$(BUILDPACKAGE)\n-container/libheap.lo: container/libheap.$(OBJEXT)\n-container/libheap.la: container/libheap.lo\n container/heap/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/heap\n \t$(CHECK)\n .PHONY: container/heap/check\n \n-container/liblist.$(OBJEXT): $(go_container_list_files)\n+container/list.lo: $(go_container_list_files)\n \t$(BUILDPACKAGE)\n-container/liblist.lo: container/liblist.$(OBJEXT)\n-container/liblist.la: container/liblist.lo\n container/list/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/list\n \t$(CHECK)\n .PHONY: container/list/check\n \n-container/libring.$(OBJEXT): $(go_container_ring_files)\n+container/ring.lo: $(go_container_ring_files)\n \t$(BUILDPACKAGE)\n-container/libring.lo: container/libring.$(OBJEXT)\n-container/libring.la: container/libring.lo\n container/ring/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/ring\n \t$(CHECK)\n .PHONY: container/ring/check\n \n-container/libvector.$(OBJEXT): $(go_container_vector_files)\n+container/vector.lo: $(go_container_vector_files)\n \t$(BUILDPACKAGE)\n-container/libvector.lo: container/libvector.$(OBJEXT)\n-container/libvector.la: container/libvector.lo\n container/vector/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/vector\n \t$(CHECK)\n .PHONY: container/vector/check\n \n-crypto/libaes.$(OBJEXT): $(go_crypto_aes_files) os.gox strconv.gox\n+crypto/aes.lo: $(go_crypto_aes_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libaes.lo: crypto/libaes.$(OBJEXT)\n-crypto/libaes.la: crypto/libaes.lo\n crypto/aes/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/aes\n \t$(CHECK)\n .PHONY: crypto/aes/check\n \n-crypto/libblock.$(OBJEXT): $(go_crypto_block_files) fmt.gox io.gox os.gox \\\n-\t\tstrconv.gox\n+crypto/block.lo: $(go_crypto_block_files) fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libblock.lo: crypto/libblock.$(OBJEXT)\n-crypto/libblock.la: crypto/libblock.lo\n crypto/block/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/block\n \t$(CHECK)\n .PHONY: crypto/block/check\n \n-crypto/libblowfish.$(OBJEXT): $(go_crypto_blowfish_files) os.gox strconv.gox\n+crypto/blowfish.lo: $(go_crypto_blowfish_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libblowfish.lo: crypto/libblowfish.$(OBJEXT)\n-crypto/libblowfish.la: crypto/libblowfish.lo\n crypto/blowfish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/blowfish\n \t$(CHECK)\n .PHONY: crypto/blowfish/check\n \n-crypto/libcast5.$(OBJEXT): $(go_crypto_cast5_files) os.gox\n+crypto/cast5.lo: $(go_crypto_cast5_files) os.gox\n \t$(BUILDPACKAGE)\n-crypto/libcast5.lo: crypto/libcast5.$(OBJEXT)\n-crypto/libcast5.la: crypto/libcast5.lo\n crypt/cast5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cast5\n \t$(CHECK)\n .PHONY: crypto/cast5/check\n \n-crypto/libcipher.$(OBJEXT): $(go_crypto_cipher_files) io.gox os.gox\n+crypto/cipher.lo: $(go_crypto_cipher_files) io.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libcipher.lo: crypto/libcipher.$(OBJEXT)\n-crypto/libcipher.la: crypto/libcipher.lo\n crypto/cipher/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cipher\n \t$(CHECK)\n .PHONY: crypto/cipher/check\n \n-crypto/libelliptic.$(OBJEXT): $(go_crypto_elliptic_files) big.gox io.gox \\\n-\t\tos.gox sync.gox\n+crypto/elliptic.lo: $(go_crypto_elliptic_files) big.gox io.gox os.gox sync.gox\n \t$(BUILDPACKAGE)\n-crypto/libelliptic.lo: crypto/libelliptic.$(OBJEXT)\n-crypto/libelliptic.la: crypto/libelliptic.lo\n crypto/elliptic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/elliptic\n \t$(CHECK)\n .PHONY: crypto/elliptic/check\n \n-crypto/libhmac.$(OBJEXT): $(go_crypto_hmac_files) crypto/md5.gox \\\n-\t\tcrypto/sha1.gox crypto/sha256.gox hash.gox os.gox\n+crypto/hmac.lo: $(go_crypto_hmac_files) crypto/md5.gox crypto/sha1.gox \\\n+\t\tcrypto/sha256.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libhmac.lo: crypto/libhmac.$(OBJEXT)\n-crypto/libhmac.la: crypto/libhmac.lo\n crypto/hmac/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/hmac\n \t$(CHECK)\n .PHONY: crypto/hmac/check\n \n-crypto/libmd4.$(OBJEXT): $(go_crypto_md4_files) hash.gox os.gox\n+crypto/md4.lo: $(go_crypto_md4_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libmd4.lo: crypto/libmd4.$(OBJEXT)\n-crypto/libmd4.la: crypto/libmd4.lo\n crypto/md4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md4\n \t$(CHECK)\n .PHONY: crypto/md4/check\n \n-crypto/libmd5.$(OBJEXT): $(go_crypto_md5_files) hash.gox os.gox\n+crypto/md5.lo: $(go_crypto_md5_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libmd5.lo: crypto/libmd5.$(OBJEXT)\n-crypto/libmd5.la: crypto/libmd5.lo\n crypto/md5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md5\n \t$(CHECK)\n .PHONY: crypto/md5/check\n \n-crypto/libocsp.$(OBJEXT): $(go_crypto_ocsp_files) asn1.gox crypto/rsa.gox \\\n+crypto/ocsp.lo: $(go_crypto_ocsp_files) asn1.gox crypto/rsa.gox \\\n \t\tcrypto/sha1.gox crypto/x509.gox os.gox time.gox\n \t$(BUILDPACKAGE)\n-crypto/libocsp.lo: crypto/libocsp.$(OBJEXT)\n-crypto/libocsp.la: crypto/libocsp.lo\n crypto/ocsp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ocsp\n \t$(CHECK)\n .PHONY: crypto/ocsp/check\n \n-crypto/librand.$(OBJEXT): $(go_crypto_rand_files) crypto/aes.gox io.gox os.gox \\\n-\t\tsync.gox time.gox\n+crypto/rand.lo: $(go_crypto_rand_files) crypto/aes.gox io.gox os.gox sync.gox \\\n+\t\ttime.gox\n \t$(BUILDPACKAGE)\n-crypto/librand.lo: crypto/librand.$(OBJEXT)\n-crypto/librand.la: crypto/librand.lo\n crypto/rand/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rand\n \t$(CHECK)\n .PHONY: crypto/rand/check\n \n-crypto/librc4.$(OBJEXT): $(go_crypto_rc4_files) os.gox strconv.gox\n+crypto/rc4.lo: $(go_crypto_rc4_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/librc4.lo: crypto/librc4.$(OBJEXT)\n-crypto/librc4.la: crypto/librc4.lo\n crypto/rc4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rc4\n \t$(CHECK)\n .PHONY: crypto/rc4/check\n \n-crypto/libripemd160.$(OBJEXT): $(go_crypto_ripemd160_files) hash.gox os.gox\n+crypto/ripemd160.lo: $(go_crypto_ripemd160_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libripemd160.lo: crypto/libripemd160.$(OBJEXT)\n-crypto/libripemd160.la: crypto/libripemd160.lo\n crypto/ripemd160/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ripemd160\n \t$(CHECK)\n .PHONY: crypto/ripemd160/check\n \n-crypto/librsa.$(OBJEXT): $(go_crypto_rsa_files) big.gox crypto/sha1.gox \\\n+crypto/rsa.lo: $(go_crypto_rsa_files) big.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox encoding/hex.gox hash.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/librsa.lo: crypto/librsa.$(OBJEXT)\n-crypto/librsa.la: crypto/librsa.lo\n crypto/rsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rsa\n \t$(CHECK)\n .PHONY: crypto/rsa/check\n \n-crypto/libsha1.$(OBJEXT): $(go_crypto_sha1_files) hash.gox os.gox\n+crypto/sha1.lo: $(go_crypto_sha1_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libsha1.lo: crypto/libsha1.$(OBJEXT)\n-crypto/libsha1.la: crypto/libsha1.lo\n crypto/sha1/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha1\n \t$(CHECK)\n .PHONY: crypto/sha1/check\n \n-crypto/libsha256.$(OBJEXT): $(go_crypto_sha256_files) hash.gox os.gox\n+crypto/sha256.lo: $(go_crypto_sha256_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libsha256.lo: crypto/libsha256.$(OBJEXT)\n-crypto/libsha256.la: crypto/libsha256.lo\n crypto/sha256/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha256\n \t$(CHECK)\n .PHONY: crypto/sha256/check\n \n-crypto/libsha512.$(OBJEXT): $(go_crypto_sha512_files) hash.gox os.gox\n+crypto/sha512.lo: $(go_crypto_sha512_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libsha512.lo: crypto/libsha512.$(OBJEXT)\n-crypto/libsha512.la: crypto/libsha512.lo\n crypto/sha512/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha512\n \t$(CHECK)\n .PHONY: crypto/sha512/check\n \n-crypto/libsubtle.$(OBJEXT): $(go_crypto_subtle_files)\n+crypto/subtle.lo: $(go_crypto_subtle_files)\n \t$(BUILDPACKAGE)\n-crypto/libsubtle.lo: crypto/libsubtle.$(OBJEXT)\n-crypto/libsubtle.la: crypto/libsubtle.lo\n crypto/subtle/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/subtle\n \t$(CHECK)\n .PHONY: crypto/subtle/check\n \n-crypto/libtls.$(OBJEXT): $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n+crypto/tls.lo: $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n \t\tcontainer/list.gox crypto/aes.gox crypto/cipher.gox \\\n \t\tcrypto/elliptic.gox crypto/hmac.gox crypto/md5.gox \\\n \t\tcrypto/rc4.gox crypto/rand.gox crypto/rsa.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox crypto/rsa.gox crypto/sha1.gox \\\n \t\tcrypto/x509.gox encoding/pem.gox fmt.gox hash.gox io.gox \\\n \t\tio/ioutil.gox net.gox os.gox strings.gox sync.gox time.gox\n \t$(BUILDPACKAGE)\n-crypto/libtls.lo: crypto/libtls.$(OBJEXT)\n-crypto/libtls.la: crypto/libtls.lo\n crypto/tls/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/tls\n \t$(CHECK)\n .PHONY: crypto/tls/check\n \n-crypto/libtwofish.$(OBJEXT): $(go_crypto_twofish_files) os.gox strconv.gox\n+crypto/twofish.lo: $(go_crypto_twofish_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libtwofish.lo: crypto/libtwofish.$(OBJEXT)\n-crypto/libtwofish.la: crypto/libtwofish.lo\n crypto/twofish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/twofish\n \t$(CHECK)\n .PHONY: crypto/twofish/check\n \n-crypto/libx509.$(OBJEXT): $(go_crypto_x509_files) asn1.gox big.gox \\\n-\t\tcontainer/vector.gox crypto/rsa.gox crypto/sha1.gox hash.gox \\\n-\t\tos.gox strings.gox time.gox\n+crypto/x509.lo: $(go_crypto_x509_files) asn1.gox big.gox container/vector.gox \\\n+\t\tcrypto/rsa.gox crypto/sha1.gox hash.gox os.gox strings.gox \\\n+\t\ttime.gox\n \t$(BUILDPACKAGE)\n-crypto/libx509.lo: crypto/libx509.$(OBJEXT)\n-crypto/libx509.la: crypto/libx509.lo\n crypto/x509/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509\n \t$(CHECK)\n .PHONY: crypto/x509/check\n \n-crypto/libxtea.$(OBJEXT): $(go_crypto_xtea_files) os.gox strconv.gox\n+crypto/xtea.lo: $(go_crypto_xtea_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libxtea.lo: crypto/libxtea.$(OBJEXT)\n-crypto/libxtea.la: crypto/libxtea.lo\n crypto/xtea/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/xtea\n \t$(CHECK)\n .PHONY: crypto/xtea/check\n \n-crypto/openpgp/libarmor.$(OBJEXT): $(go_crypto_openpgp_armor_files) bytes.gox \\\n+crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files) bytes.gox \\\n \t\tcrypto/openpgp/error.gox encoding/base64.gox \\\n \t\tencoding/line.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/openpgp/libarmor.lo: crypto/openpgp/libarmor.$(OBJEXT)\n-crypto/openpgp/libarmor.la: crypto/openpgp/libarmor.lo\n crypto/openpgp/armor/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/armor\n \t$(CHECK)\n .PHONY: crypto/openpgp/armor/check\n \n-crypto/openpgp/liberror.$(OBJEXT): $(go_crypto_openpgp_error_files)\n+crypto/openpgp/error.lo: $(go_crypto_openpgp_error_files)\n \t$(BUILDPACKAGE)\n-crypto/openpgp/liberror.lo: crypto/openpgp/liberror.$(OBJEXT)\n-crypto/openpgp/liberror.la: crypto/openpgp/liberror.lo\n crypto/openpgp/error/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/error\n \t$(CHECK)\n .PHONY: crypto/openpgp/error/check\n \n-crypto/openpgp/libs2k.$(OBJEXT): $(go_crypto_openpgp_s2k_files) crypto/md5.gox \\\n+crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files) crypto/md5.gox \\\n \t\tcrypto/openpgp/error.gox crypto/ripemd160.gox crypto/sha1.gox \\\n \t\tcrypto/sha256.gox crypto/sha512.gox hash.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/openpgp/libs2k.lo: crypto/openpgp/libs2k.$(OBJEXT)\n-crypto/openpgp/libs2k.la: crypto/openpgp/libs2k.lo\n crypto/openpgp/s2k/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/s2k\n \t$(CHECK)\n .PHONY: crypto/openpgp/s2k/check\n \n-debug/libdwarf.$(OBJEXT): $(go_debug_dwarf_files) encoding/binary.gox os.gox \\\n-\t\tstrconv.gox\n+debug/dwarf.lo: $(go_debug_dwarf_files) encoding/binary.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-debug/libdwarf.lo: debug/libdwarf.$(OBJEXT)\n-debug/libdwarf.la: debug/libdwarf.lo\n debug/dwarf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/dwarf\n \t$(CHECK)\n .PHONY: debug/dwarf/check\n \n-debug/libelf.$(OBJEXT): $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n+debug/elf.lo: $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-debug/libelf.lo: debug/libelf.$(OBJEXT)\n-debug/libelf.la: debug/libelf.lo\n debug/elf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/elf\n \t$(CHECK)\n .PHONY: debug/elf/check\n \n-debug/libgosym.$(OBJEXT): $(go_debug_gosym_files) encoding/binary.gox fmt.gox \\\n-\t\tos.gox strconv.gox strings.gox\n+debug/gosym.lo: $(go_debug_gosym_files) encoding/binary.gox fmt.gox os.gox \\\n+\t\tstrconv.gox strings.gox\n \t$(BUILDPACKAGE)\n-debug/libgosym.lo: debug/libgosym.$(OBJEXT)\n-debug/libgosym.la: debug/libgosym.lo\n debug/gosym/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/gosym\n \t$(CHECK)\n .PHONY: debug/gosym/check\n \n-debug/libmacho.$(OBJEXT): $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n+debug/macho.lo: $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-debug/libmacho.lo: debug/libmacho.$(OBJEXT)\n-debug/libmacho.la: debug/libmacho.lo\n debug/macho/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/macho\n \t$(CHECK)\n .PHONY: debug/macho/check\n \n-debug/libpe.$(OBJEXT): $(go_debug_pe_files) debug/dwarf.gox \\\n+debug/pe.lo: $(go_debug_pe_files) debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-debug/libpe.lo: debug/libpe.$(OBJEXT)\n-debug/libpe.la: debug/libpe.lo\n debug/pe/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/pe\n \t$(CHECK)\n .PHONY: debug/pe/check\n \n-debug/libproc.$(OBJEXT): $(go_debug_proc_files) container/vector.gox fmt.gox \\\n+debug/proc.lo: $(go_debug_proc_files) container/vector.gox fmt.gox \\\n \t\tio/ioutil.gox os.gox runtime.gox strconv.gox strings.gox \\\n \t\tsync.gox syscall.gox\n \t$(BUILDPACKAGE)\n-debug/libproc.lo: debug/libproc.$(OBJEXT)\n-debug/libproc.la: debug/libproc.lo\n debug/proc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/proc\n \t$(CHECK)\n .PHONY: debug/proc/check\n \n-encoding/libascii85.$(OBJEXT): $(go_encoding_ascii85_files) io.gox os.gox \\\n-\t\tstrconv.gox\n+encoding/ascii85.lo: $(go_encoding_ascii85_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libascii85.lo: encoding/libascii85.$(OBJEXT)\n-encoding/libascii85.la: encoding/libascii85.lo\n encoding/ascii85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/ascii85\n \t$(CHECK)\n .PHONY: encoding/ascii85/check\n \n-encoding/libbase32.$(OBJEXT): $(go_encoding_base32_files) io.gox os.gox \\\n-\t\tstrconv.gox\n+encoding/base32.lo: $(go_encoding_base32_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libbase32.lo: encoding/libbase32.$(OBJEXT)\n-encoding/libbase32.la: encoding/libbase32.lo\n encoding/base32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base32\n \t$(CHECK)\n .PHONY: encoding/base32/check\n \n-encoding/libbase64.$(OBJEXT): $(go_encoding_base64_files) io.gox os.gox \\\n-\t\tstrconv.gox\n+encoding/base64.lo: $(go_encoding_base64_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libbase64.lo: encoding/libbase64.$(OBJEXT)\n-encoding/libbase64.la: encoding/libbase64.lo\n encoding/base64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base64\n \t$(CHECK)\n .PHONY: encoding/base64/check\n \n-encoding/libbinary.$(OBJEXT): $(go_encoding_binary_files) io.gox math.gox \\\n-\t\tos.gox reflect.gox\n+encoding/binary.lo: $(go_encoding_binary_files) io.gox math.gox os.gox \\\n+\t\treflect.gox\n \t$(BUILDPACKAGE)\n-encoding/libbinary.lo: encoding/libbinary.$(OBJEXT)\n-encoding/libbinary.la: encoding/libbinary.lo\n encoding/binary/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/binary\n \t$(CHECK)\n .PHONY: encoding/binary/check\n \n-encoding/libgit85.$(OBJEXT): $(go_encoding_git85_files) bytes.gox io.gox \\\n-\t\tos.gox strconv.gox\n+encoding/git85.lo: $(go_encoding_git85_files) bytes.gox io.gox os.gox \\\n+\t\tstrconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libgit85.lo: encoding/libgit85.$(OBJEXT)\n-encoding/libgit85.la: encoding/libgit85.lo\n encoding/git85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/git85\n \t$(CHECK)\n .PHONY: encoding/git85/check\n \n-encoding/libhex.$(OBJEXT): $(go_encoding_hex_files) os.gox strconv.gox\n+encoding/hex.lo: $(go_encoding_hex_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libhex.lo: encoding/libhex.$(OBJEXT)\n-encoding/libhex.la: encoding/libhex.lo\n encoding/hex/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/hex\n \t$(CHECK)\n .PHONY: encoding/hex/check\n \n-encoding/libline.$(OBJEXT): $(go_encoding_line_files) io.gox os.gox\n+encoding/line.lo: $(go_encoding_line_files) io.gox os.gox\n \t$(BUILDPACKAGE)\n-encoding/libline.lo: encoding/libline.$(OBJEXT)\n-encoding/libline.la: encoding/libline.lo\n encoding/line/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/line\n \t$(CHECK)\n .PHONY: encoding/line/check\n \n-encoding/libpem.$(OBJEXT): $(go_encoding_pem_files) bytes.gox \\\n-\t\tencoding/base64.gox\n+encoding/pem.lo: $(go_encoding_pem_files) bytes.gox encoding/base64.gox\n \t$(BUILDPACKAGE)\n-encoding/libpem.lo: encoding/libpem.$(OBJEXT)\n-encoding/libpem.la: encoding/libpem.lo\n encoding/pem/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/pem\n \t$(CHECK)\n .PHONY: encoding/pem/check\n \n-exp/libdatafmt.$(OBJEXT): $(go_exp_datafmt_files) bytes.gox \\\n-\t\tcontainer/vector.gox fmt.gox go/scanner.gox go/token.gox \\\n-\t\tio.gox os.gox reflect.gox runtime.gox strconv.gox strings.gox\n+exp/datafmt.lo: $(go_exp_datafmt_files) bytes.gox container/vector.gox \\\n+\t\tfmt.gox go/scanner.gox go/token.gox io.gox os.gox reflect.gox \\\n+\t\truntime.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n-exp/libdatafmt.lo: exp/libdatafmt.$(OBJEXT)\n-exp/libdatafmt.la: exp/libdatafmt.lo\n exp/datafmt/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/datafmt\n \t$(CHECK)\n .PHONY: exp/datafmt/check\n \n-exp/libdraw.$(OBJEXT): $(go_exp_draw_files) image.gox os.gox\n+exp/draw.lo: $(go_exp_draw_files) image.gox os.gox\n \t$(BUILDPACKAGE)\n-exp/libdraw.lo: exp/libdraw.$(OBJEXT)\n-exp/libdraw.la: exp/libdraw.lo\n exp/draw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/draw\n \t$(CHECK)\n .PHONY: exp/draw/check\n \n-exp/libeval.$(OBJEXT): $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n+exp/eval.lo: $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n \t\tgo/scanner.gox go/token.gox fmt.gox log.gox strconv.gox \\\n \t\tstrings.gox os.gox reflect.gox runtime.gox sort.gox template.gox\n \t$(BUILDPACKAGE)\n-exp/libeval.lo: exp/libeval.$(OBJEXT)\n-exp/libeval.la: exp/libeval.lo\n exp/eval/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/eval\n \t$(CHECK)\n .PHONY: exp/eval/check\n \n-go/libast.$(OBJEXT): $(go_go_ast_files) fmt.gox go/token.gox io.gox os.gox \\\n-\t\treflect.gox unicode.gox utf8.gox\n+go/ast.lo: $(go_go_ast_files) fmt.gox go/token.gox io.gox os.gox reflect.gox \\\n+\t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-go/libast.lo: go/libast.$(OBJEXT)\n-go/libast.la: go/libast.lo\n go/ast/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/ast\n \t$(CHECK)\n .PHONY: go/ast/check\n \n-go/libdoc.$(OBJEXT): $(go_go_doc_files) go/ast.gox go/token.gox io.gox \\\n-\t\tregexp.gox sort.gox strings.gox template.gox\n+go/doc.lo: $(go_go_doc_files) go/ast.gox go/token.gox io.gox regexp.gox \\\n+\t\tsort.gox strings.gox template.gox\n \t$(BUILDPACKAGE)\n-go/libdoc.lo: go/libdoc.$(OBJEXT)\n-go/libdoc.la: go/libdoc.lo\n go/doc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/doc\n \t$(CHECK)\n .PHONY: go/doc/check\n \n-go/libparser.$(OBJEXT): $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n+go/parser.lo: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n \t\tgo/scanner.gox go/token.gox io.gox io/ioutil.gox os.gox \\\n \t\tpath.gox strings.gox\n \t$(BUILDPACKAGE)\n-go/libparser.lo: go/libparser.$(OBJEXT)\n-go/libparser.la: go/libparser.lo\n go/parser/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/parser\n \t$(CHECK)\n .PHONY: go/parser/check\n \n-go/libprinter.$(OBJEXT): $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n+go/printer.lo: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n \t\tgo/token.gox io.gox os.gox reflect.gox runtime.gox \\\n \t\tstrings.gox tabwriter.gox\n \t$(BUILDPACKAGE)\n-go/libprinter.lo: go/libprinter.$(OBJEXT)\n-go/libprinter.la: go/libprinter.lo\n go/printer/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/printer\n \t$(CHECK)\n .PHONY: go/printer/check\n \n-go/libscanner.$(OBJEXT): $(go_go_scanner_files) bytes.gox \\\n-\t\tcontainer/vector.gox fmt.gox go/token.gox io.gox os.gox \\\n-\t\tpath.gox sort.gox strconv.gox unicode.gox utf8.gox\n+go/scanner.lo: $(go_go_scanner_files) bytes.gox container/vector.gox fmt.gox \\\n+\t\tgo/token.gox io.gox os.gox path.gox sort.gox strconv.gox \\\n+\t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-go/libscanner.lo: go/libscanner.$(OBJEXT)\n-go/libscanner.la: go/libscanner.lo\n go/scanner/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/scanner\n \t$(CHECK)\n .PHONY: go/scanner/check\n \n-go/libtoken.$(OBJEXT): $(go_go_token_files) fmt.gox strconv.gox\n+go/token.lo: $(go_go_token_files) fmt.gox strconv.gox\n \t$(BUILDPACKAGE)\n-go/libtoken.lo: go/libtoken.$(OBJEXT)\n-go/libtoken.la: go/libtoken.lo\n go/token/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/token\n \t$(CHECK)\n .PHONY: go/token/check\n \n-go/libtypechecker.$(OBJEXT): $(go_go_typechecker_files) fmt.gox go/ast.gox \\\n-\t\tgo/token.gox go/scanner.gox os.gox\n+go/typechecker.lo: $(go_go_typechecker_files) fmt.gox go/ast.gox go/token.gox \\\n+\t\tgo/scanner.gox os.gox\n \t$(BUILDPACKAGE)\n-go/libtypechecker.lo: go/libtypechecker.$(OBJEXT)\n-go/libtypechecker.la: go/libtypechecker.lo\n go/typechecker/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/typechecker\n \t$(CHECK)\n .PHONY: go/typechecker/check\n \n-hash/libadler32.$(OBJEXT): $(go_hash_adler32_files) hash.gox os.gox\n+hash/adler32.lo: $(go_hash_adler32_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-hash/libadler32.lo: hash/libadler32.$(OBJEXT)\n-hash/libadler32.la: hash/libadler32.lo\n hash/adler32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/adler32\n \t$(CHECK)\n .PHONY: hash/adler32/check\n \n-hash/libcrc32.$(OBJEXT): $(go_hash_crc32_files) hash.gox os.gox\n+hash/crc32.lo: $(go_hash_crc32_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-hash/libcrc32.lo: hash/libcrc32.$(OBJEXT)\n-hash/libcrc32.la: hash/libcrc32.lo\n hash/crc32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc32\n \t$(CHECK)\n .PHONY: hash/crc32/check\n \n-hash/libcrc64.$(OBJEXT): $(go_hash_crc64_files) hash.gox os.gox\n+hash/crc64.lo: $(go_hash_crc64_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-hash/libcrc64.lo: hash/libcrc64.$(OBJEXT)\n-hash/libcrc64.la: hash/libcrc64.lo\n hash/crc64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc64\n \t$(CHECK)\n .PHONY: hash/crc64/check\n \n-http/libpprof.$(OBJEXT): $(go_http_pprof_files) bufio.gox fmt.gox http.gox \\\n-\t\tos.gox runtime.gox runtime/pprof.gox strconv.gox strings.gox\n+http/pprof.lo: $(go_http_pprof_files) bufio.gox fmt.gox http.gox os.gox \\\n+\t\truntime.gox runtime/pprof.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n-http/libpprof.lo: http/libpprof.$(OBJEXT)\n-http/libpprof.la: http/libpprof.lo\n http/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/pprof\n \t$(CHECK)\n .PHONY: http/pprof/check\n \n-image/libjpeg.$(OBJEXT): $(go_image_jpeg_files) bufio.gox image.gox io.gox \\\n-\t\tos.gox\n+image/jpeg.lo: $(go_image_jpeg_files) bufio.gox image.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-image/libjpeg.lo: image/libjpeg.$(OBJEXT)\n-image/libjpeg.la: image/libjpeg.lo\n image/jpeg/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/jpeg\n \t$(CHECK)\n .PHONY: image/jpeg/check\n \n-image/libpng.$(OBJEXT): $(go_image_png_files) bufio.gox compress/zlib.gox \\\n-\t\tfmt.gox hash.gox hash/crc32.gox image.gox io.gox os.gox \\\n-\t\tstrconv.gox\n+image/png.lo: $(go_image_png_files) bufio.gox compress/zlib.gox fmt.gox \\\n+\t\thash.gox hash/crc32.gox image.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-image/libpng.lo: image/libpng.$(OBJEXT)\n-image/libpng.la: image/libpng.lo\n image/png/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/png\n \t$(CHECK)\n .PHONY: image/png/check\n \n-index/libsuffixarray.$(OBJEXT): $(go_index_suffixarray_files) bytes.gox \\\n-\t\tregexp.gox sort.gox\n+index/suffixarray.lo: $(go_index_suffixarray_files) bytes.gox regexp.gox \\\n+\t\tsort.gox\n \t$(BUILDPACKAGE)\n-index/libsuffixarray.lo: index/libsuffixarray.$(OBJEXT)\n-index/libsuffixarray.la: index/libsuffixarray.lo\n index/suffixarray/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) index/suffixarray\n \t$(CHECK)\n .PHONY: index/suffixarray/check\n \n-io/libioutil.$(OBJEXT): $(go_io_ioutil_files) bytes.gox io.gox os.gox sort.gox \\\n+io/ioutil.lo: $(go_io_ioutil_files) bytes.gox io.gox os.gox sort.gox \\\n \t\tstrconv.gox\n \t$(BUILDPACKAGE)\n-io/libioutil.lo: io/libioutil.$(OBJEXT)\n-io/libioutil.la: io/libioutil.lo\n io/ioutil/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) io/ioutil\n \t$(CHECK)\n .PHONY: io/ioutil/check\n \n-mime/libmultipart.$(OBJEXT): $(go_mime_multipart_files) bufio.gox bytes.gox \\\n-\t\tio.gox mime.gox os.gox regexp.gox strings.gox\n+mime/multipart.lo: $(go_mime_multipart_files) bufio.gox bytes.gox io.gox \\\n+\t\tmime.gox os.gox regexp.gox strings.gox\n \t$(BUILDPACKAGE)\n-mime/libmultipart.lo: mime/libmultipart.$(OBJEXT)\n-mime/libmultipart.la: mime/libmultipart.lo\n mime/multipart/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) mime/multipart\n \t$(CHECK)\n .PHONY: mime/multipart/check\n \n-net/libdict.$(OBJEXT): $(go_net_dict_files) container/vector.gox \\\n-\t\tnet/textproto.gox os.gox strconv.gox strings.gox\n+net/dict.lo: $(go_net_dict_files) container/vector.gox net/textproto.gox \\\n+\t\tos.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n-net/libdict.lo: net/libdict.$(OBJEXT)\n-net/libdict.la: net/libdict.lo\n \n-net/libtextproto.$(OBJEXT): $(go_net_textproto_files) bufio.gox bytes.gox \\\n+net/textproto.lo: $(go_net_textproto_files) bufio.gox bytes.gox \\\n \t\tcontainer/vector.gox fmt.gox io.gox io/ioutil.gox net.gox \\\n \t\tos.gox strconv.gox sync.gox\n \t$(BUILDPACKAGE)\n-net/libtextproto.lo: net/libtextproto.$(OBJEXT)\n-net/libtextproto.la: net/libtextproto.lo\n net/textproto/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) net/textproto\n \t$(CHECK)\n .PHONY: net/textproto/check\n \n-os/libinotify.$(OBJEXT): $(go_os_inotify_files) fmt.gox os.gox strings.gox \\\n-\t\tsyscall.gox\n+os/inotify.lo: $(go_os_inotify_files) fmt.gox os.gox strings.gox syscall.gox\n \t$(BUILDPACKAGE)\n-os/libinotify.lo: os/libinotify.$(OBJEXT)\n-os/libinotify.la: os/libinotify.lo\n os/inotify/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/inotify\n \t$(CHECK)\n .PHONY: os/inotify/check\n \n-os/libsignal.$(OBJEXT): $(go_os_signal_files) runtime.gox strconv.gox\n+os/signal.lo: $(go_os_signal_files) runtime.gox strconv.gox\n \t$(BUILDPACKAGE)\n-os/libsignal.lo: os/libsignal.$(OBJEXT)\n-os/libsignal.la: os/libsignal.lo\n os/signal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/signal\n \t$(CHECK)\n@@ -2593,60 +2337,48 @@ unix.go: $(srcdir)/go/os/signal/mkunix.sh sysinfo.go\n \t$(SHELL) $(srcdir)/go/os/signal/mkunix.sh sysinfo.go > $@.tmp\n \tmv -f $@.tmp $@\n \n-rpc/libjsonrpc.$(OBJEXT): $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox \\\n-\t\tnet.gox os.gox rpc.gox sync.gox\n+rpc/jsonrpc.lo: $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox net.gox \\\n+\t\tos.gox rpc.gox sync.gox\n \t$(BUILDPACKAGE)\n-rpc/libjsonrpc.lo: rpc/libjsonrpc.$(OBJEXT)\n-rpc/libjsonrpc.la: rpc/libjsonrpc.lo\n rpc/jsonrpc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) rpc/jsonrpc\n \t$(CHECK)\n .PHONY: rpc/jsonrpc/check\n \n-runtime/libdebug.$(OBJEXT): $(go_runtime_debug_files) bytes.gox fmt.gox \\\n-\t\tio/ioutil.gox os.gox runtime.gox\n+runtime/debug.lo: $(go_runtime_debug_files) bytes.gox fmt.gox io/ioutil.gox \\\n+\t\tos.gox runtime.gox\n \t$(BUILDPACKAGE)\n-runtime/libdebug.lo: runtime/libdebug.$(OBJEXT)\n-runtime/libdebug.la: runtime/libdebug.lo\n runtime/debug/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/debug\n \t$(CHECK)\n .PHONY: runtime/debug/check\n \n-runtime/libpprof.$(OBJEXT): $(go_runtime_pprof_files) bufio.gox fmt.gox \\\n-\t\tio.gox os.gox runtime.gox\n+runtime/pprof.lo: $(go_runtime_pprof_files) bufio.gox fmt.gox io.gox os.gox \\\n+\t\truntime.gox\n \t$(BUILDPACKAGE)\n-runtime/libpprof.lo: runtime/libpprof.$(OBJEXT)\n-runtime/libpprof.la: runtime/libpprof.lo\n runtime/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/pprof\n \t$(CHECK)\n .PHONY: runtime/pprof/check\n \n-testing/libiotest.$(OBJEXT): $(go_testing_iotest_files) io.gox log.gox os.gox\n+testing/iotest.lo: $(go_testing_iotest_files) io.gox log.gox os.gox\n \t$(BUILDPACKAGE)\n-testing/libiotest.lo: testing/libiotest.$(OBJEXT)\n-testing/libiotest.la: testing/libiotest.lo\n testing/iotest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/iotest\n \t$(CHECK)\n .PHONY: testing/iotest/check\n \n-testing/libquick.$(OBJEXT): $(go_testing_quick_files) flag.gox fmt.gox \\\n-\t\tmath.gox os.gox rand.gox reflect.gox strings.gox\n+testing/quick.lo: $(go_testing_quick_files) flag.gox fmt.gox math.gox os.gox \\\n+\t\trand.gox reflect.gox strings.gox\n \t$(BUILDPACKAGE)\n-testing/libquick.lo: testing/libquick.$(OBJEXT)\n-testing/libquick.la: testing/libquick.lo\n testing/quick/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/quick\n \t$(CHECK)\n .PHONY: testing/quick/check\n \n-testing/libscript.$(OBJEXT): $(go_testing_script_files) fmt.gox os.gox \\\n-\t\trand.gox reflect.gox strings.gox\n+testing/script.lo: $(go_testing_script_files) fmt.gox os.gox rand.gox \\\n+\t\treflect.gox strings.gox\n \t$(BUILDPACKAGE)\n-testing/libscript.lo: testing/libscript.$(OBJEXT)\n-testing/libscript.la: testing/libscript.lo\n testing/script/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/script\n \t$(CHECK)\n@@ -2658,289 +2390,285 @@ s-sysinfo: $(srcdir)/mksysinfo.sh config.h\n \t$(SHELL) $(srcdir)/../move-if-change tmp-sysinfo.go sysinfo.go\n \t$(STAMP) $@\n \n-syscalls/syscall.$(OBJEXT): $(go_syscall_files) $(go_syscall_c_files) sync.gox\n-\trm -f syscall.gox syscalls/libsyscall.a\n-\ttest -d syscalls || $(MKDIR_P) syscalls\n-\tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g' -e's/[^ ]*\\.c//g'`; \\\n-\t$(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_syscalls\" -o syscalls/syscall.$(OBJEXT) $$files\n-syscalls/errno.$(OBJEXT): $(srcdir)/syscalls/errno.c syscalls/syscall.$(OBJEXT)\n-\t$(LTCOMPILE) -c -o syscalls/errno.$(OBJEXT) $(srcdir)/syscalls/errno.c\n-syscalls/libsyscall.la: syscalls/syscall.$(OBJEXT) syscalls/errno.$(OBJEXT)\n-\t$(LINK) syscalls/syscall.lo syscalls/errno.lo\n-\n-# How to build a .gox file from a .a file.\n+syscalls/syscall.lo: $(go_syscall_files) sync.gox\n+\t$(BUILDPACKAGE)\n+syscalls/errno.lo: $(go_syscall_c_files) syscalls/syscall.lo\n+\t$(LTCOMPILE) -c -o $@ $(srcdir)/syscalls/errno.c\n+\n+# How to build a .gox file from a .lo file.\n BUILDGOX = \\\n-\t$(OBJCOPY) -j .go_export $< $@.tmp && mv -f $@.tmp $@\n+\tf=`echo $< | sed -e 's/.lo$$/.o/'`; \\\n+\t$(OBJCOPY) -j .go_export $$f $@.tmp && mv -f $@.tmp $@\n \n-asn1.gox: asn1/libasn1.$(OBJEXT)\n+asn1.gox: asn1/asn1.lo\n \t$(BUILDGOX)\n-big.gox: big/libbig.$(OBJEXT)\n+big.gox: big/big.lo\n \t$(BUILDGOX)\n-bufio.gox: bufio/libbufio.$(OBJEXT)\n+bufio.gox: bufio/bufio.lo\n \t$(BUILDGOX)\n-bytes.gox: bytes/bytes.$(OBJEXT)\n+bytes.gox: bytes/bytes.lo\n \t$(BUILDGOX)\n-cmath.gox: cmath/libcmath.$(OBJEXT)\n+cmath.gox: cmath/cmath.lo\n \t$(BUILDGOX)\n-ebnf.gox: ebnf/libebnf.$(OBJEXT)\n+ebnf.gox: ebnf/ebnf.lo\n \t$(BUILDGOX)\n-exec.gox: exec/libexec.$(OBJEXT)\n+exec.gox: exec/exec.lo\n \t$(BUILDGOX)\n-expvar.gox: expvar/libexpvar.$(OBJEXT)\n+expvar.gox: expvar/expvar.lo\n \t$(BUILDGOX)\n-flag.gox: flag/libflag.$(OBJEXT)\n+flag.gox: flag/flag.lo\n \t$(BUILDGOX)\n-fmt.gox: fmt/libfmt.$(OBJEXT)\n+fmt.gox: fmt/fmt.lo\n \t$(BUILDGOX)\n-gob.gox: gob/libgob.$(OBJEXT)\n+gob.gox: gob/gob.lo\n \t$(BUILDGOX)\n-hash.gox: hash/libhash.$(OBJEXT)\n+hash.gox: hash/hash.lo\n \t$(BUILDGOX)\n-html.gox: html/libhtml.$(OBJEXT)\n+html.gox: html/html.lo\n \t$(BUILDGOX)\n-http.gox: http/libhttp.$(OBJEXT)\n+http.gox: http/http.lo\n \t$(BUILDGOX)\n-image.gox: image/libimage.$(OBJEXT)\n+image.gox: image/image.lo\n \t$(BUILDGOX)\n-io.gox: io/libio.$(OBJEXT)\n+io.gox: io/io.lo\n \t$(BUILDGOX)\n-json.gox: json/libjson.$(OBJEXT)\n+json.gox: json/json.lo\n \t$(BUILDGOX)\n-log.gox: log/liblog.$(OBJEXT)\n+log.gox: log/log.lo\n \t$(BUILDGOX)\n-math.gox: math/libmath.$(OBJEXT)\n+math.gox: math/math.lo\n \t$(BUILDGOX)\n-mime.gox: mime/libmime.$(OBJEXT)\n+mime.gox: mime/mime.lo\n \t$(BUILDGOX)\n-net.gox: net/libnet.$(OBJEXT)\n+net.gox: net/net.lo\n \t$(BUILDGOX)\n-netchan.gox: netchan/libnetchan.$(OBJEXT)\n+netchan.gox: netchan/netchan.lo\n \t$(BUILDGOX)\n-os.gox: os/libos.$(OBJEXT)\n+os.gox: os/os.lo\n \t$(BUILDGOX)\n-patch.gox: patch/libpatch.$(OBJEXT)\n+patch.gox: patch/patch.lo\n \t$(BUILDGOX)\n-path.gox: path/libpath.$(OBJEXT)\n+path.gox: path/path.lo\n \t$(BUILDGOX)\n-rand.gox: rand/librand.$(OBJEXT)\n+rand.gox: rand/rand.lo\n \t$(BUILDGOX)\n-reflect.gox: reflect/libreflect.$(OBJEXT)\n+reflect.gox: reflect/reflect.lo\n \t$(BUILDGOX)\n-regexp.gox: regexp/libregexp.$(OBJEXT)\n+regexp.gox: regexp/regexp.lo\n \t$(BUILDGOX)\n-rpc.gox: rpc/librpc.$(OBJEXT)\n+rpc.gox: rpc/rpc.lo\n \t$(BUILDGOX)\n-runtime.gox: runtime/libruntime.$(OBJEXT)\n+runtime.gox: runtime/runtime.lo\n \t$(BUILDGOX)\n-scanner.gox: scanner/libscanner.$(OBJEXT)\n+scanner.gox: scanner/scanner.lo\n \t$(BUILDGOX)\n-smtp.gox: smtp/libsmtp.$(OBJEXT)\n+smtp.gox: smtp/smtp.lo\n \t$(BUILDGOX)\n-sort.gox: sort/libsort.$(OBJEXT)\n+sort.gox: sort/sort.lo\n \t$(BUILDGOX)\n-strconv.gox: strconv/libstrconv.$(OBJEXT)\n+strconv.gox: strconv/strconv.lo\n \t$(BUILDGOX)\n-strings.gox: strings/libstrings.$(OBJEXT)\n+strings.gox: strings/strings.lo\n \t$(BUILDGOX)\n-sync.gox: sync/mutex.$(OBJEXT)\n+sync.gox: sync/mutex.lo\n \t$(BUILDGOX)\n-syslog.gox: syslog/syslog.$(OBJEXT)\n+syslog.gox: syslog/syslog.lo\n \t$(BUILDGOX)\n-syscall.gox: syscalls/syscall.$(OBJEXT)\n+syscall.gox: syscalls/syscall.lo\n \t$(BUILDGOX)\n-tabwriter.gox: tabwriter/libtabwriter.$(OBJEXT)\n+tabwriter.gox: tabwriter/tabwriter.lo\n \t$(BUILDGOX)\n-template.gox: template/libtemplate.$(OBJEXT)\n+template.gox: template/template.lo\n \t$(BUILDGOX)\n-testing.gox: testing/libtesting.$(OBJEXT)\n+testing.gox: testing/testing.lo\n \t$(BUILDGOX)\n-time.gox: time/libtime.$(OBJEXT)\n+time.gox: time/time.lo\n \t$(BUILDGOX)\n-try.gox: try/libtry.$(OBJEXT)\n+try.gox: try/try.lo\n \t$(BUILDGOX)\n-unicode.gox: unicode/libunicode.$(OBJEXT)\n+unicode.gox: unicode/unicode.lo\n \t$(BUILDGOX)\n-utf16.gox: utf16/libutf16.$(OBJEXT)\n+utf16.gox: utf16/utf16.lo\n \t$(BUILDGOX)\n-utf8.gox: utf8/libutf8.$(OBJEXT)\n+utf8.gox: utf8/utf8.lo\n \t$(BUILDGOX)\n-websocket.gox: websocket/libwebsocket.$(OBJEXT)\n+websocket.gox: websocket/websocket.lo\n \t$(BUILDGOX)\n-xml.gox: xml/libxml.$(OBJEXT)\n+xml.gox: xml/xml.lo\n \t$(BUILDGOX)\n \n-archive/tar.gox: archive/libtar.$(OBJEXT)\n+archive/tar.gox: archive/tar.lo\n \t$(BUILDGOX)\n-archive/zip.gox: archive/libzip.$(OBJEXT)\n+archive/zip.gox: archive/zip.lo\n \t$(BUILDGOX)\n \n-compress/flate.gox: compress/libflate.$(OBJEXT)\n+compress/flate.gox: compress/flate.lo\n \t$(BUILDGOX)\n-compress/gzip.gox: compress/libgzip.$(OBJEXT)\n+compress/gzip.gox: compress/gzip.lo\n \t$(BUILDGOX)\n-compress/zlib.gox: compress/libzlib.$(OBJEXT)\n+compress/zlib.gox: compress/zlib.lo\n \t$(BUILDGOX)\n \n-container/heap.gox: container/libheap.$(OBJEXT)\n+container/heap.gox: container/heap.lo\n \t$(BUILDGOX)\n-container/list.gox: container/liblist.$(OBJEXT)\n+container/list.gox: container/list.lo\n \t$(BUILDGOX)\n-container/ring.gox: container/libring.$(OBJEXT)\n+container/ring.gox: container/ring.lo\n \t$(BUILDGOX)\n-container/vector.gox: container/libvector.$(OBJEXT)\n+container/vector.gox: container/vector.lo\n \t$(BUILDGOX)\n \n-crypto/aes.gox: crypto/libaes.$(OBJEXT)\n+crypto/aes.gox: crypto/aes.lo\n \t$(BUILDGOX)\n-crypto/block.gox: crypto/libblock.$(OBJEXT)\n+crypto/block.gox: crypto/block.lo\n \t$(BUILDGOX)\n-crypto/blowfish.gox: crypto/libblowfish.$(OBJEXT)\n+crypto/blowfish.gox: crypto/blowfish.lo\n \t$(BUILDGOX)\n-crypto/cast5.gox: crypto/libcast5.$(OBJEXT)\n+crypto/cast5.gox: crypto/cast5.lo\n \t$(BUILDGOX)\n-crypto/cipher.gox: crypto/libcipher.$(OBJEXT)\n+crypto/cipher.gox: crypto/cipher.lo\n \t$(BUILDGOX)\n-crypto/elliptic.gox: crypto/libelliptic.$(OBJEXT)\n+crypto/elliptic.gox: crypto/elliptic.lo\n \t$(BUILDGOX)\n-crypto/hmac.gox: crypto/libhmac.$(OBJEXT)\n+crypto/hmac.gox: crypto/hmac.lo\n \t$(BUILDGOX)\n-crypto/md4.gox: crypto/libmd4.$(OBJEXT)\n+crypto/md4.gox: crypto/md4.lo\n \t$(BUILDGOX)\n-crypto/md5.gox: crypto/libmd5.$(OBJEXT)\n+crypto/md5.gox: crypto/md5.lo\n \t$(BUILDGOX)\n-crypto/ocsp.gox: crypto/libocsp.$(OBJEXT)\n+crypto/ocsp.gox: crypto/ocsp.lo\n \t$(BUILDGOX)\n-crypto/rand.gox: crypto/librand.$(OBJEXT)\n+crypto/rand.gox: crypto/rand.lo\n \t$(BUILDGOX)\n-crypto/rc4.gox: crypto/librc4.$(OBJEXT)\n+crypto/rc4.gox: crypto/rc4.lo\n \t$(BUILDGOX)\n-crypto/ripemd160.gox: crypto/libripemd160.$(OBJEXT)\n+crypto/ripemd160.gox: crypto/ripemd160.lo\n \t$(BUILDGOX)\n-crypto/rsa.gox: crypto/librsa.$(OBJEXT)\n+crypto/rsa.gox: crypto/rsa.lo\n \t$(BUILDGOX)\n-crypto/sha1.gox: crypto/libsha1.$(OBJEXT)\n+crypto/sha1.gox: crypto/sha1.lo\n \t$(BUILDGOX)\n-crypto/sha256.gox: crypto/libsha256.$(OBJEXT)\n+crypto/sha256.gox: crypto/sha256.lo\n \t$(BUILDGOX)\n-crypto/sha512.gox: crypto/libsha512.$(OBJEXT)\n+crypto/sha512.gox: crypto/sha512.lo\n \t$(BUILDGOX)\n-crypto/subtle.gox: crypto/libsubtle.$(OBJEXT)\n+crypto/subtle.gox: crypto/subtle.lo\n \t$(BUILDGOX)\n-crypto/tls.gox: crypto/libtls.$(OBJEXT)\n+crypto/tls.gox: crypto/tls.lo\n \t$(BUILDGOX)\n-crypto/twofish.gox: crypto/libtwofish.$(OBJEXT)\n+crypto/twofish.gox: crypto/twofish.lo\n \t$(BUILDGOX)\n-crypto/x509.gox: crypto/libx509.$(OBJEXT)\n+crypto/x509.gox: crypto/x509.lo\n \t$(BUILDGOX)\n-crypto/xtea.gox: crypto/libxtea.$(OBJEXT)\n+crypto/xtea.gox: crypto/xtea.lo\n \t$(BUILDGOX)\n \n-crypto/openpgp/armor.gox: crypto/openpgp/libarmor.$(OBJEXT)\n+crypto/openpgp/armor.gox: crypto/openpgp/armor.lo\n \t$(BUILDGOX)\n-crypto/openpgp/error.gox: crypto/openpgp/liberror.$(OBJEXT)\n+crypto/openpgp/error.gox: crypto/openpgp/error.lo\n \t$(BUILDGOX)\n-crypto/openpgp/s2k.gox: crypto/openpgp/libs2k.$(OBJEXT)\n+crypto/openpgp/s2k.gox: crypto/openpgp/s2k.lo\n \t$(BUILDGOX)\n \n-debug/dwarf.gox: debug/libdwarf.$(OBJEXT)\n+debug/dwarf.gox: debug/dwarf.lo\n \t$(BUILDGOX)\n-debug/elf.gox: debug/libelf.$(OBJEXT)\n+debug/elf.gox: debug/elf.lo\n \t$(BUILDGOX)\n-debug/gosym.gox: debug/libgosym.$(OBJEXT)\n+debug/gosym.gox: debug/gosym.lo\n \t$(BUILDGOX)\n-debug/macho.gox: debug/libmacho.$(OBJEXT)\n+debug/macho.gox: debug/macho.lo\n \t$(BUILDGOX)\n-debug/pe.gox: debug/libpe.$(OBJEXT)\n+debug/pe.gox: debug/pe.lo\n \t$(BUILDGOX)\n-debug/proc.gox: debug/libproc.$(OBJEXT)\n+debug/proc.gox: debug/proc.lo\n \t$(BUILDGOX)\n \n-encoding/ascii85.gox: encoding/libascii85.$(OBJEXT)\n+encoding/ascii85.gox: encoding/ascii85.lo\n \t$(BUILDGOX)\n-encoding/base32.gox: encoding/libbase32.$(OBJEXT)\n+encoding/base32.gox: encoding/base32.lo\n \t$(BUILDGOX)\n-encoding/base64.gox: encoding/libbase64.$(OBJEXT)\n+encoding/base64.gox: encoding/base64.lo\n \t$(BUILDGOX)\n-encoding/binary.gox: encoding/libbinary.$(OBJEXT)\n+encoding/binary.gox: encoding/binary.lo\n \t$(BUILDGOX)\n-encoding/git85.gox: encoding/libgit85.$(OBJEXT)\n+encoding/git85.gox: encoding/git85.lo\n \t$(BUILDGOX)\n-encoding/hex.gox: encoding/libhex.$(OBJEXT)\n+encoding/hex.gox: encoding/hex.lo\n \t$(BUILDGOX)\n-encoding/line.gox: encoding/libline.$(OBJEXT)\n+encoding/line.gox: encoding/line.lo\n \t$(BUILDGOX)\n-encoding/pem.gox: encoding/libpem.$(OBJEXT)\n+encoding/pem.gox: encoding/pem.lo\n \t$(BUILDGOX)\n \n-exp/datafmt.gox: exp/libdatafmt.$(OBJEXT)\n+exp/datafmt.gox: exp/datafmt.lo\n \t$(BUILDGOX)\n-exp/draw.gox: exp/libdraw.$(OBJEXT)\n+exp/draw.gox: exp/draw.lo\n \t$(BUILDGOX)\n-exp/eval.gox: exp/libeval.$(OBJEXT)\n+exp/eval.gox: exp/eval.lo\n \t$(BUILDGOX)\n \n-go/ast.gox: go/libast.$(OBJEXT)\n+go/ast.gox: go/ast.lo\n \t$(BUILDGOX)\n-go/doc.gox: go/libdoc.$(OBJEXT)\n+go/doc.gox: go/doc.lo\n \t$(BUILDGOX)\n-go/parser.gox: go/libparser.$(OBJEXT)\n+go/parser.gox: go/parser.lo\n \t$(BUILDGOX)\n-go/printer.gox: go/libprinter.$(OBJEXT)\n+go/printer.gox: go/printer.lo\n \t$(BUILDGOX)\n-go/scanner.gox: go/libscanner.$(OBJEXT)\n+go/scanner.gox: go/scanner.lo\n \t$(BUILDGOX)\n-go/token.gox: go/libtoken.$(OBJEXT)\n+go/token.gox: go/token.lo\n \t$(BUILDGOX)\n-go/typechecker.gox: go/libtypechecker.$(OBJEXT)\n+go/typechecker.gox: go/typechecker.lo\n \t$(BUILDGOX)\n \n-hash/adler32.gox: hash/libadler32.$(OBJEXT)\n+hash/adler32.gox: hash/adler32.lo\n \t$(BUILDGOX)\n-hash/crc32.gox: hash/libcrc32.$(OBJEXT)\n+hash/crc32.gox: hash/crc32.lo\n \t$(BUILDGOX)\n-hash/crc64.gox: hash/libcrc64.$(OBJEXT)\n+hash/crc64.gox: hash/crc64.lo\n \t$(BUILDGOX)\n \n-http/pprof.gox: http/libpprof.$(OBJEXT)\n+http/pprof.gox: http/pprof.lo\n \t$(BUILDGOX)\n \n-image/jpeg.gox: image/libjpeg.$(OBJEXT)\n+image/jpeg.gox: image/jpeg.lo\n \t$(BUILDGOX)\n-image/png.gox: image/libpng.$(OBJEXT)\n+image/png.gox: image/png.lo\n \t$(BUILDGOX)\n \n-index/suffixarray.gox: index/libsuffixarray.$(OBJEXT)\n+index/suffixarray.gox: index/suffixarray.lo\n \t$(BUILDGOX)\n \n-io/ioutil.gox: io/libioutil.$(OBJEXT)\n+io/ioutil.gox: io/ioutil.lo\n \t$(BUILDGOX)\n \n-mime/multipart.gox: mime/libmultipart.$(OBJEXT)\n+mime/multipart.gox: mime/multipart.lo\n \t$(BUILDGOX)\n \n-net/dict.gox: net/libdict.$(OBJEXT)\n+net/dict.gox: net/dict.lo\n \t$(BUILDGOX)\n-net/textproto.gox: net/libtextproto.$(OBJEXT)\n+net/textproto.gox: net/textproto.lo\n \t$(BUILDGOX)\n \n-os/inotify.gox: os/libinotify.$(OBJEXT)\n+os/inotify.gox: os/inotify.lo\n \t$(BUILDGOX)\n-os/signal.gox: os/libsignal.$(OBJEXT)\n+os/signal.gox: os/signal.lo\n \t$(BUILDGOX)\n \n-rpc/jsonrpc.gox: rpc/libjsonrpc.$(OBJEXT)\n+rpc/jsonrpc.gox: rpc/jsonrpc.lo\n \t$(BUILDGOX)\n \n-runtime/debug.gox: runtime/libdebug.$(OBJEXT)\n+runtime/debug.gox: runtime/debug.lo\n \t$(BUILDGOX)\n-runtime/pprof.gox: runtime/libpprof.$(OBJEXT)\n+runtime/pprof.gox: runtime/pprof.lo\n \t$(BUILDGOX)\n \n-testing/iotest.gox: testing/libiotest.$(OBJEXT)\n+testing/iotest.gox: testing/iotest.lo\n \t$(BUILDGOX)\n-testing/quick.gox: testing/libquick.$(OBJEXT)\n+testing/quick.gox: testing/quick.lo\n \t$(BUILDGOX)\n-testing/script.gox: testing/libscript.$(OBJEXT)\n+testing/script.gox: testing/script.lo\n \t$(BUILDGOX)\n \n if LIBGO_IS_LINUX"}, {"sha": "452c60857ff39efce81aead92891d6085c1b70f8", "filename": "libgo/Makefile.in", "status": "modified", "additions": 497, "deletions": 772, "changes": 1269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2822509df584dfe94cc218a6daad0c6fcd34786/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2822509df584dfe94cc218a6daad0c6fcd34786/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=d2822509df584dfe94cc218a6daad0c6fcd34786", "patch": "@@ -121,48 +121,44 @@ am_libgobegin_a_OBJECTS = go-main.$(OBJEXT)\n libgobegin_a_OBJECTS = $(am_libgobegin_a_OBJECTS)\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n-am__DEPENDENCIES_2 = asn1/libasn1.la big/libbig.la bufio/libbufio.la \\\n-\tbytes/libbytes.la cmath/libcmath.la ebnf/libebnf.la \\\n-\texec/libexec.la expvar/libexpvar.la flag/libflag.la \\\n-\tfmt/libfmt.la gob/libgob.la hash/libhash.la html/libhtml.la \\\n-\thttp/libhttp.la image/libimage.la io/libio.la json/libjson.la \\\n-\tlog/liblog.la math/libmath.la mime/libmime.la net/libnet.la \\\n-\tnetchan/libnetchan.la os/libos.la patch/libpatch.la \\\n-\tpath/libpath.la rand/librand.la reflect/libreflect.la \\\n-\tregexp/libregexp.la rpc/librpc.la runtime/libruntime.la \\\n-\tscanner/libscanner.la smtp/libsmtp.la sort/libsort.la \\\n-\tstrconv/libstrconv.la strings/libstrings.la sync/libsync.la \\\n-\tsyslog/libsyslog.la tabwriter/libtabwriter.la \\\n-\ttemplate/libtemplate.la time/libtime.la try/libtry.la \\\n-\tunicode/libunicode.la utf16/libutf16.la utf8/libutf8.la \\\n-\twebsocket/libwebsocket.la xml/libxml.la archive/libtar.la \\\n-\tarchive/libzip.la compress/libflate.la compress/libgzip.la \\\n-\tcompress/libzlib.la container/libheap.la container/liblist.la \\\n-\tcontainer/libring.la container/libvector.la crypto/libaes.la \\\n-\tcrypto/libblock.la crypto/libblowfish.la crypto/libcast5.la \\\n-\tcrypto/libcipher.la crypto/libelliptic.la crypto/libhmac.la \\\n-\tcrypto/libmd4.la crypto/libmd5.la crypto/libocsp.la \\\n-\tcrypto/librand.la crypto/librc4.la crypto/libripemd160.la \\\n-\tcrypto/librsa.la crypto/libsha1.la crypto/libsha256.la \\\n-\tcrypto/libsha512.la crypto/libsubtle.la crypto/libtls.la \\\n-\tcrypto/libtwofish.la crypto/libx509.la crypto/libxtea.la \\\n-\tcrypto/openpgp/libarmor.la crypto/openpgp/liberror.la \\\n-\tcrypto/openpgp/libs2k.la debug/libdwarf.la debug/libelf.la \\\n-\tdebug/libgosym.la debug/libmacho.la debug/libpe.la \\\n-\tdebug/libproc.la encoding/libascii85.la encoding/libbase32.la \\\n-\tencoding/libbase64.la encoding/libbinary.la \\\n-\tencoding/libgit85.la encoding/libhex.la encoding/libline.la \\\n-\tencoding/libpem.la exp/libdatafmt.la exp/libdraw.la \\\n-\texp/libeval.la go/libast.la go/libdoc.la go/libparser.la \\\n-\tgo/libprinter.la go/libscanner.la go/libtoken.la \\\n-\tgo/libtypechecker.la hash/libadler32.la hash/libcrc32.la \\\n-\thash/libcrc64.la http/libpprof.la image/libjpeg.la \\\n-\timage/libpng.la index/libsuffixarray.la io/libioutil.la \\\n-\tmime/libmultipart.la net/libdict.la net/libtextproto.la \\\n-\t$(am__DEPENDENCIES_1) os/libsignal.la rpc/libjsonrpc.la \\\n-\truntime/libdebug.la runtime/libpprof.la syscalls/libsyscall.la \\\n-\ttesting/libtesting.la testing/libiotest.la testing/libquick.la \\\n-\ttesting/libscript.la\n+am__DEPENDENCIES_2 = asn1/asn1.lo big/big.lo bufio/bufio.lo \\\n+\tbytes/bytes.lo bytes/index.lo cmath/cmath.lo ebnf/ebnf.lo \\\n+\texec/exec.lo expvar/expvar.lo flag/flag.lo fmt/fmt.lo \\\n+\tgob/gob.lo hash/hash.lo html/html.lo http/http.lo \\\n+\timage/image.lo io/io.lo json/json.lo log/log.lo math/math.lo \\\n+\tmime/mime.lo net/net.lo netchan/netchan.lo os/os.lo \\\n+\tpatch/patch.lo path/path.lo rand/rand.lo reflect/reflect.lo \\\n+\tregexp/regexp.lo rpc/rpc.lo runtime/runtime.lo \\\n+\tscanner/scanner.lo smtp/smtp.lo sort/sort.lo \\\n+\tstrconv/strconv.lo strings/strings.lo sync/mutex.lo \\\n+\tsync/cas.lo syslog/syslog.lo syslog/syslog_c.lo \\\n+\ttabwriter/tabwriter.lo template/template.lo time/time.lo \\\n+\ttry/try.lo unicode/unicode.lo utf16/utf16.lo utf8/utf8.lo \\\n+\twebsocket/websocket.lo xml/xml.lo archive/tar.lo \\\n+\tarchive/zip.lo compress/flate.lo compress/gzip.lo \\\n+\tcompress/zlib.lo container/heap.lo container/list.lo \\\n+\tcontainer/ring.lo container/vector.lo crypto/aes.lo \\\n+\tcrypto/block.lo crypto/blowfish.lo crypto/cast5.lo \\\n+\tcrypto/cipher.lo crypto/elliptic.lo crypto/hmac.lo \\\n+\tcrypto/md4.lo crypto/md5.lo crypto/ocsp.lo crypto/rand.lo \\\n+\tcrypto/rc4.lo crypto/ripemd160.lo crypto/rsa.lo crypto/sha1.lo \\\n+\tcrypto/sha256.lo crypto/sha512.lo crypto/subtle.lo \\\n+\tcrypto/tls.lo crypto/twofish.lo crypto/x509.lo crypto/xtea.lo \\\n+\tcrypto/openpgp/armor.lo crypto/openpgp/error.lo \\\n+\tcrypto/openpgp/s2k.lo debug/dwarf.lo debug/elf.lo \\\n+\tdebug/gosym.lo debug/macho.lo debug/pe.lo debug/proc.lo \\\n+\tencoding/ascii85.lo encoding/base32.lo encoding/base64.lo \\\n+\tencoding/binary.lo encoding/git85.lo encoding/hex.lo \\\n+\tencoding/line.lo encoding/pem.lo exp/datafmt.lo exp/draw.lo \\\n+\texp/eval.lo go/ast.lo go/doc.lo go/parser.lo go/printer.lo \\\n+\tgo/scanner.lo go/token.lo go/typechecker.lo hash/adler32.lo \\\n+\thash/crc32.lo hash/crc64.lo http/pprof.lo image/jpeg.lo \\\n+\timage/png.lo index/suffixarray.lo io/ioutil.lo \\\n+\tmime/multipart.lo net/dict.lo net/textproto.lo \\\n+\t$(am__DEPENDENCIES_1) os/signal.lo rpc/jsonrpc.lo \\\n+\truntime/debug.lo runtime/pprof.lo syscalls/syscall.lo \\\n+\tsyscalls/errno.lo testing/testing.lo testing/iotest.lo \\\n+\ttesting/quick.lo testing/script.lo\n libgo_la_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1) \\\n \t$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \\\n \t$(am__DEPENDENCIES_1)\n@@ -1145,6 +1141,9 @@ go_syslog_files = \\\n \tgo/syslog/syslog.go \\\n \t$(go_syslog_file)\n \n+go_syslog_c_files = \\\n+\tgo/syslog/syslog_c.c\n+\n go_tabwriter_files = \\\n \tgo/tabwriter/tabwriter.go\n \n@@ -1596,136 +1595,140 @@ go_syscall_files = \\\n go_syscall_c_files = \\\n \tsyscalls/errno.c\n \n-@LIBGO_IS_LINUX_FALSE@os_lib_inotify_la = \n+@LIBGO_IS_LINUX_FALSE@os_lib_inotify_lo = \n \n-# os_lib_inotify_la = os/libinotify.la\n-@LIBGO_IS_LINUX_TRUE@os_lib_inotify_la = \n+# os_lib_inotify_lo = os/inotify.lo\n+@LIBGO_IS_LINUX_TRUE@os_lib_inotify_lo = \n libgo_go_objs = \\\n-\tasn1/libasn1.la \\\n-\tbig/libbig.la \\\n-\tbufio/libbufio.la \\\n-\tbytes/libbytes.la \\\n-\tcmath/libcmath.la \\\n-\tebnf/libebnf.la \\\n-\texec/libexec.la \\\n-\texpvar/libexpvar.la \\\n-\tflag/libflag.la \\\n-\tfmt/libfmt.la \\\n-\tgob/libgob.la \\\n-\thash/libhash.la \\\n-\thtml/libhtml.la \\\n-\thttp/libhttp.la \\\n-\timage/libimage.la \\\n-\tio/libio.la \\\n-\tjson/libjson.la \\\n-\tlog/liblog.la \\\n-\tmath/libmath.la \\\n-\tmime/libmime.la \\\n-\tnet/libnet.la \\\n-\tnetchan/libnetchan.la \\\n-\tos/libos.la \\\n-\tpatch/libpatch.la \\\n-\tpath/libpath.la \\\n-\trand/librand.la \\\n-\treflect/libreflect.la \\\n-\tregexp/libregexp.la \\\n-\trpc/librpc.la \\\n-\truntime/libruntime.la \\\n-\tscanner/libscanner.la \\\n-\tsmtp/libsmtp.la \\\n-\tsort/libsort.la \\\n-\tstrconv/libstrconv.la \\\n-\tstrings/libstrings.la \\\n-\tsync/libsync.la \\\n-\tsyslog/libsyslog.la \\\n-\ttabwriter/libtabwriter.la \\\n-\ttemplate/libtemplate.la \\\n-\ttime/libtime.la \\\n-\ttry/libtry.la \\\n-\tunicode/libunicode.la \\\n-\tutf16/libutf16.la \\\n-\tutf8/libutf8.la \\\n-\twebsocket/libwebsocket.la \\\n-\txml/libxml.la \\\n-\tarchive/libtar.la \\\n-\tarchive/libzip.la \\\n-\tcompress/libflate.la \\\n-\tcompress/libgzip.la \\\n-\tcompress/libzlib.la \\\n-\tcontainer/libheap.la \\\n-\tcontainer/liblist.la \\\n-\tcontainer/libring.la \\\n-\tcontainer/libvector.la \\\n-\tcrypto/libaes.la \\\n-\tcrypto/libblock.la \\\n-\tcrypto/libblowfish.la \\\n-\tcrypto/libcast5.la \\\n-\tcrypto/libcipher.la \\\n-\tcrypto/libelliptic.la \\\n-\tcrypto/libhmac.la \\\n-\tcrypto/libmd4.la \\\n-\tcrypto/libmd5.la \\\n-\tcrypto/libocsp.la \\\n-\tcrypto/librand.la \\\n-\tcrypto/librc4.la \\\n-\tcrypto/libripemd160.la \\\n-\tcrypto/librsa.la \\\n-\tcrypto/libsha1.la \\\n-\tcrypto/libsha256.la \\\n-\tcrypto/libsha512.la \\\n-\tcrypto/libsubtle.la \\\n-\tcrypto/libtls.la \\\n-\tcrypto/libtwofish.la \\\n-\tcrypto/libx509.la \\\n-\tcrypto/libxtea.la \\\n-\tcrypto/openpgp/libarmor.la \\\n-\tcrypto/openpgp/liberror.la \\\n-\tcrypto/openpgp/libs2k.la \\\n-\tdebug/libdwarf.la \\\n-\tdebug/libelf.la \\\n-\tdebug/libgosym.la \\\n-\tdebug/libmacho.la \\\n-\tdebug/libpe.la \\\n-\tdebug/libproc.la \\\n-\tencoding/libascii85.la \\\n-\tencoding/libbase32.la \\\n-\tencoding/libbase64.la \\\n-\tencoding/libbinary.la \\\n-\tencoding/libgit85.la \\\n-\tencoding/libhex.la \\\n-\tencoding/libline.la \\\n-\tencoding/libpem.la \\\n-\texp/libdatafmt.la \\\n-\texp/libdraw.la \\\n-\texp/libeval.la \\\n-\tgo/libast.la \\\n-\tgo/libdoc.la \\\n-\tgo/libparser.la \\\n-\tgo/libprinter.la \\\n-\tgo/libscanner.la \\\n-\tgo/libtoken.la \\\n-\tgo/libtypechecker.la \\\n-\thash/libadler32.la \\\n-\thash/libcrc32.la \\\n-\thash/libcrc64.la \\\n-\thttp/libpprof.la \\\n-\timage/libjpeg.la \\\n-\timage/libpng.la \\\n-\tindex/libsuffixarray.la \\\n-\tio/libioutil.la \\\n-\tmime/libmultipart.la \\\n-\tnet/libdict.la \\\n-\tnet/libtextproto.la \\\n-\t$(os_lib_inotify_la) \\\n-\tos/libsignal.la \\\n-\trpc/libjsonrpc.la \\\n-\truntime/libdebug.la \\\n-\truntime/libpprof.la \\\n-\tsyscalls/libsyscall.la \\\n-\ttesting/libtesting.la \\\n-\ttesting/libiotest.la \\\n-\ttesting/libquick.la \\\n-\ttesting/libscript.la\n+\tasn1/asn1.lo \\\n+\tbig/big.lo \\\n+\tbufio/bufio.lo \\\n+\tbytes/bytes.lo \\\n+\tbytes/index.lo \\\n+\tcmath/cmath.lo \\\n+\tebnf/ebnf.lo \\\n+\texec/exec.lo \\\n+\texpvar/expvar.lo \\\n+\tflag/flag.lo \\\n+\tfmt/fmt.lo \\\n+\tgob/gob.lo \\\n+\thash/hash.lo \\\n+\thtml/html.lo \\\n+\thttp/http.lo \\\n+\timage/image.lo \\\n+\tio/io.lo \\\n+\tjson/json.lo \\\n+\tlog/log.lo \\\n+\tmath/math.lo \\\n+\tmime/mime.lo \\\n+\tnet/net.lo \\\n+\tnetchan/netchan.lo \\\n+\tos/os.lo \\\n+\tpatch/patch.lo \\\n+\tpath/path.lo \\\n+\trand/rand.lo \\\n+\treflect/reflect.lo \\\n+\tregexp/regexp.lo \\\n+\trpc/rpc.lo \\\n+\truntime/runtime.lo \\\n+\tscanner/scanner.lo \\\n+\tsmtp/smtp.lo \\\n+\tsort/sort.lo \\\n+\tstrconv/strconv.lo \\\n+\tstrings/strings.lo \\\n+\tsync/mutex.lo \\\n+\tsync/cas.lo \\\n+\tsyslog/syslog.lo \\\n+\tsyslog/syslog_c.lo \\\n+\ttabwriter/tabwriter.lo \\\n+\ttemplate/template.lo \\\n+\ttime/time.lo \\\n+\ttry/try.lo \\\n+\tunicode/unicode.lo \\\n+\tutf16/utf16.lo \\\n+\tutf8/utf8.lo \\\n+\twebsocket/websocket.lo \\\n+\txml/xml.lo \\\n+\tarchive/tar.lo \\\n+\tarchive/zip.lo \\\n+\tcompress/flate.lo \\\n+\tcompress/gzip.lo \\\n+\tcompress/zlib.lo \\\n+\tcontainer/heap.lo \\\n+\tcontainer/list.lo \\\n+\tcontainer/ring.lo \\\n+\tcontainer/vector.lo \\\n+\tcrypto/aes.lo \\\n+\tcrypto/block.lo \\\n+\tcrypto/blowfish.lo \\\n+\tcrypto/cast5.lo \\\n+\tcrypto/cipher.lo \\\n+\tcrypto/elliptic.lo \\\n+\tcrypto/hmac.lo \\\n+\tcrypto/md4.lo \\\n+\tcrypto/md5.lo \\\n+\tcrypto/ocsp.lo \\\n+\tcrypto/rand.lo \\\n+\tcrypto/rc4.lo \\\n+\tcrypto/ripemd160.lo \\\n+\tcrypto/rsa.lo \\\n+\tcrypto/sha1.lo \\\n+\tcrypto/sha256.lo \\\n+\tcrypto/sha512.lo \\\n+\tcrypto/subtle.lo \\\n+\tcrypto/tls.lo \\\n+\tcrypto/twofish.lo \\\n+\tcrypto/x509.lo \\\n+\tcrypto/xtea.lo \\\n+\tcrypto/openpgp/armor.lo \\\n+\tcrypto/openpgp/error.lo \\\n+\tcrypto/openpgp/s2k.lo \\\n+\tdebug/dwarf.lo \\\n+\tdebug/elf.lo \\\n+\tdebug/gosym.lo \\\n+\tdebug/macho.lo \\\n+\tdebug/pe.lo \\\n+\tdebug/proc.lo \\\n+\tencoding/ascii85.lo \\\n+\tencoding/base32.lo \\\n+\tencoding/base64.lo \\\n+\tencoding/binary.lo \\\n+\tencoding/git85.lo \\\n+\tencoding/hex.lo \\\n+\tencoding/line.lo \\\n+\tencoding/pem.lo \\\n+\texp/datafmt.lo \\\n+\texp/draw.lo \\\n+\texp/eval.lo \\\n+\tgo/ast.lo \\\n+\tgo/doc.lo \\\n+\tgo/parser.lo \\\n+\tgo/printer.lo \\\n+\tgo/scanner.lo \\\n+\tgo/token.lo \\\n+\tgo/typechecker.lo \\\n+\thash/adler32.lo \\\n+\thash/crc32.lo \\\n+\thash/crc64.lo \\\n+\thttp/pprof.lo \\\n+\timage/jpeg.lo \\\n+\timage/png.lo \\\n+\tindex/suffixarray.lo \\\n+\tio/ioutil.lo \\\n+\tmime/multipart.lo \\\n+\tnet/dict.lo \\\n+\tnet/textproto.lo \\\n+\t$(os_lib_inotify_lo) \\\n+\tos/signal.lo \\\n+\trpc/jsonrpc.lo \\\n+\truntime/debug.lo \\\n+\truntime/pprof.lo \\\n+\tsyscalls/syscall.lo \\\n+\tsyscalls/errno.lo \\\n+\ttesting/testing.lo \\\n+\ttesting/iotest.lo \\\n+\ttesting/quick.lo \\\n+\ttesting/script.lo\n \n libgo_la_SOURCES = $(runtime_files)\n libgo_la_LIBADD = \\\n@@ -1744,11 +1747,9 @@ GOLINK = $(LIBTOOL) --tag GO --mode-link $(GOC) \\\n \t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_GOCFLAGS) $(LTLDFLAGS) -o $@\n \n \n-# Build a package.  This builds a .o and a .lo.\n+# Build the .go files for a package, generating a .lo file.\n BUILDPACKAGE = \\\n-\trm -f `echo $@ | sed -e 's|/lib|/|' -e 's/\\.a/.gox/'`; \\\n-\ttest -d $(@D) || $(MKDIR_P) $(@D); \\\n-\trm -f $@; \\\n+\t$(MKDIR_P) $(@D); \\\n \tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g'`; \\\n \t$(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_$(@D)\" -o $@ $$files\n \n@@ -1800,9 +1801,10 @@ CHECK_DEPS = libgo.la libgobegin.a \\\n \t$(toolexeclibtesting_DATA)\n \n \n-# How to build a .gox file from a .a file.\n+# How to build a .gox file from a .lo file.\n BUILDGOX = \\\n-\t$(OBJCOPY) -j .go_export $< $@.tmp && mv -f $@.tmp $@\n+\tf=`echo $< | sed -e 's/.lo$$/.o/'`; \\\n+\t$(OBJCOPY) -j .go_export $$f $@.tmp && mv -f $@.tmp $@\n \n @LIBGO_IS_LINUX_FALSE@os_inotify_check = \n \n@@ -1925,7 +1927,7 @@ all: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n \n .SUFFIXES:\n-.SUFFIXES: .c .go .gox .o .obj .lo .a .la\n+.SUFFIXES: .c .go .gox .o .obj .lo .a\n am--refresh:\n \t@:\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)\n@@ -3837,1127 +3839,867 @@ s-syscall_arch: Makefile\n \t$(SHELL) $(srcdir)/../move-if-change syscall_arch.go.tmp syscall_arch.go\n \t$(STAMP) $@\n \n-# Build a .la file from a .lo file.\n-.lo.la:\n-\t$(LINK) $<\n-\n-asn1/libasn1.$(OBJEXT): $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox time.gox\n+asn1/asn1.lo: $(go_asn1_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n+\t\tstrconv.gox strings.gox time.gox\n \t$(BUILDPACKAGE)\n-asn1/libasn1.lo: asn1/libasn1.$(OBJEXT)\n-asn1/libasn1.la: asn1/libasn1.lo\n asn1/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: asn1/check\n \n-big/libbig.$(OBJEXT): $(go_big_files) fmt.gox rand.gox strings.gox\n+big/big.lo: $(go_big_files) fmt.gox rand.gox strings.gox\n \t$(BUILDPACKAGE)\n-big/libbig.lo: big/libbig.$(OBJEXT)\n-big/libbig.la: big/libbig.lo\n big/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: big/check\n \n-bufio/libbufio.$(OBJEXT): $(go_bufio_files) bytes.gox io.gox os.gox \\\n-\t\tstrconv.gox utf8.gox\n+bufio/bufio.lo: $(go_bufio_files) bytes.gox io.gox os.gox strconv.gox utf8.gox\n \t$(BUILDPACKAGE)\n-bufio/libbufio.lo: bufio/libbufio.$(OBJEXT)\n-bufio/libbufio.la: bufio/libbufio.lo\n bufio/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: bufio/check\n \n-bytes/bytes.$(OBJEXT): $(go_bytes_files) $(go_bytes_c_files) io.gox os.gox \\\n-\t\tunicode.gox utf8.gox\n-\ttest -d bytes || $(MKDIR_P) bytes\n-\t$(LTGOCOMPILE) -I . -c -o bytes/bytes.$(OBJEXT) -fgo-prefix=libgo_bytes $(srcdir)/go/bytes/buffer.go $(srcdir)/go/bytes/bytes.go $(srcdir)/go/bytes/bytes_decl.go\n-bytes/index.$(OBJEXT): go/bytes/indexbyte.c bytes/bytes.$(OBJEXT)\n-\t$(LTCOMPILE) -c -o bytes/index.$(OBJEXT) $(srcdir)/go/bytes/indexbyte.c\n-bytes/libbytes.la: bytes/bytes.$(OBJEXT) bytes/index.$(OBJEXT)\n-\t$(LINK) bytes/bytes.lo bytes/index.lo\n+bytes/bytes.lo: $(go_bytes_files) io.gox os.gox unicode.gox utf8.gox\n+\t$(BUILDPACKAGE)\n+bytes/index.lo: $(go_bytes_c_files) bytes/bytes.lo\n+\t$(LTCOMPILE) -c -o bytes/index.lo $(srcdir)/go/bytes/indexbyte.c\n bytes/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: bytes/check\n \n-cmath/libcmath.$(OBJEXT): $(go_cmath_files) math.gox\n+cmath/cmath.lo: $(go_cmath_files) math.gox\n \t$(BUILDPACKAGE)\n-cmath/libcmath.lo: cmath/libcmath.$(OBJEXT)\n-cmath/libcmath.la: cmath/libcmath.lo\n cmath/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: cmath/check\n \n-ebnf/libebnf.$(OBJEXT): $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n+ebnf/ebnf.lo: $(go_ebnf_files) container/vector.gox go/scanner.gox \\\n \t\tgo/token.gox os.gox strconv.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-ebnf/libebnf.lo: ebnf/libebnf.$(OBJEXT)\n-ebnf/libebnf.la: ebnf/libebnf.lo\n ebnf/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: ebnf/check\n \n-exec/libexec.$(OBJEXT): $(go_exec_files) os.gox strings.gox\n+exec/exec.lo: $(go_exec_files) os.gox strings.gox\n \t$(BUILDPACKAGE)\n-exec/libexec.lo: exec/libexec.$(OBJEXT)\n-exec/libexec.la: exec/libexec.lo\n exec/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: exec/check\n \n-expvar/libexpvar.$(OBJEXT): $(go_expvar_files) bytes.gox fmt.gox http.gox \\\n-\t\tjson.gox log.gox os.gox runtime.gox strconv.gox sync.gox\n+expvar/expvar.lo: $(go_expvar_files) bytes.gox fmt.gox http.gox json.gox \\\n+\t\tlog.gox os.gox runtime.gox strconv.gox sync.gox\n \t$(BUILDPACKAGE)\n-expvar/libexpvar.lo: expvar/libexpvar.$(OBJEXT)\n-expvar/libexpvar.la: expvar/libexpvar.lo\n expvar/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: expvar/check\n \n-flag/libflag.$(OBJEXT): $(go_flag_files) fmt.gox os.gox strconv.gox\n+flag/flag.lo: $(go_flag_files) fmt.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-flag/libflag.lo: flag/libflag.$(OBJEXT)\n-flag/libflag.la: flag/libflag.lo\n flag/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: flag/check\n \n-fmt/libfmt.$(OBJEXT): $(go_fmt_files) bytes.gox io.gox os.gox reflect.gox \\\n-\t\tstrconv.gox strings.gox unicode.gox utf8.gox\n+fmt/fmt.lo: $(go_fmt_files) bytes.gox io.gox os.gox reflect.gox strconv.gox \\\n+\t\tstrings.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-fmt/libfmt.lo: fmt/libfmt.$(OBJEXT)\n-fmt/libfmt.la: fmt/libfmt.lo\n fmt/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: fmt/check\n \n-gob/libgob.$(OBJEXT): $(go_gob_files) bytes.gox fmt.gox io.gox math.gox \\\n-\t\tos.gox reflect.gox runtime.gox strings.gox sync.gox \\\n-\t\tunicode.gox utf8.gox\n+gob/gob.lo: $(go_gob_files) bytes.gox fmt.gox io.gox math.gox os.gox \\\n+\t\treflect.gox runtime.gox strings.gox sync.gox unicode.gox \\\n+\t\tutf8.gox\n \t$(BUILDPACKAGE)\n-gob/libgob.lo: gob/libgob.$(OBJEXT)\n-gob/libgob.la: gob/libgob.lo\n gob/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: gob/check\n \n-hash/libhash.$(OBJEXT): $(go_hash_files) io.gox\n+hash/hash.lo: $(go_hash_files) io.gox\n \t$(BUILDPACKAGE)\n-hash/libhash.lo: hash/libhash.$(OBJEXT)\n-hash/libhash.la: hash/libhash.lo\n hash/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: hash/check\n \n-html/libhtml.$(OBJEXT): $(go_html_files) bytes.gox io.gox os.gox strconv.gox \\\n-\t\tstrings.gox utf8.gox\n+html/html.lo: $(go_html_files) bytes.gox io.gox os.gox strconv.gox strings.gox \\\n+\t\tutf8.gox\n \t$(BUILDPACKAGE)\n-html/libhtml.lo: html/libhtml.$(OBJEXT)\n-html/libhtml.la: html/libhtml.lo\n html/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: html/check\n \n-http/libhttp.$(OBJEXT): $(go_http_files) bufio.gox bytes.gox \\\n-\t\tcontainer/list.gox container/vector.gox crypto/rand.gox \\\n-\t\tcrypto/tls.gox encoding/base64.gox fmt.gox io.gox \\\n-\t\tio/ioutil.gox log.gox mime.gox mime/multipart.gox net.gox \\\n-\t\tos.gox path.gox sort.gox strconv.gox strings.gox sync.gox \\\n-\t\ttime.gox utf8.gox\n+http/http.lo: $(go_http_files) bufio.gox bytes.gox container/list.gox \\\n+\t\tcontainer/vector.gox crypto/rand.gox crypto/tls.gox \\\n+\t\tencoding/base64.gox fmt.gox io.gox io/ioutil.gox log.gox \\\n+\t\tmime.gox mime/multipart.gox net.gox os.gox path.gox sort.gox \\\n+\t\tstrconv.gox strings.gox sync.gox time.gox utf8.gox\n \t$(BUILDPACKAGE)\n-http/libhttp.lo: http/libhttp.$(OBJEXT)\n-http/libhttp.la: http/libhttp.lo\n http/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: http/check\n \n-image/libimage.$(OBJEXT): $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n+image/image.lo: $(go_image_files) bufio.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-image/libimage.lo: image/libimage.$(OBJEXT)\n-image/libimage.la: image/libimage.lo\n image/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: image/check\n \n-io/libio.$(OBJEXT): $(go_io_files) os.gox runtime.gox sync.gox\n+io/io.lo: $(go_io_files) os.gox runtime.gox sync.gox\n \t$(BUILDPACKAGE)\n-io/libio.lo: io/libio.$(OBJEXT)\n-io/libio.la: io/libio.lo\n io/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: io/check\n \n-json/libjson.$(OBJEXT): $(go_json_files) bytes.gox container/vector.gox \\\n-\t\tfmt.gox io.gox math.gox os.gox reflect.gox runtime.gox \\\n-\t\tstrconv.gox strings.gox unicode.gox utf16.gox utf8.gox\n+json/json.lo: $(go_json_files) bytes.gox container/vector.gox fmt.gox io.gox \\\n+\t\tmath.gox os.gox reflect.gox runtime.gox strconv.gox \\\n+\t\tstrings.gox unicode.gox utf16.gox utf8.gox\n \t$(BUILDPACKAGE)\n-json/libjson.lo: json/libjson.$(OBJEXT)\n-json/libjson.la: json/libjson.lo\n json/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: json/check\n \n-log/liblog.$(OBJEXT): $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox \\\n-\t\tos.gox sync.gox time.gox\n+log/log.lo: $(go_log_files) bytes.gox fmt.gox io.gox runtime.gox os.gox \\\n+\t\tsync.gox time.gox\n \t$(BUILDPACKAGE)\n-log/liblog.lo: log/liblog.$(OBJEXT)\n-log/liblog.la: log/liblog.lo\n log/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: log/check\n \n-math/libmath.$(OBJEXT): $(go_math_files)\n+math/math.lo: $(go_math_files)\n \t$(BUILDPACKAGE)\n-math/libmath.lo: math/libmath.$(OBJEXT)\n-math/libmath.la: math/libmath.lo\n math/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: math/check\n \n-mime/libmime.$(OBJEXT): $(go_mime_files) bufio.gox bytes.gox os.gox \\\n-\t\tstrings.gox sync.gox unicode.gox\n+mime/mime.lo: $(go_mime_files) bufio.gox bytes.gox os.gox strings.gox \\\n+\t\tsync.gox unicode.gox\n \t$(BUILDPACKAGE)\n-mime/libmime.lo: mime/libmime.$(OBJEXT)\n-mime/libmime.la: mime/libmime.lo\n mime/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: mime/check\n \n-net/libnet.$(OBJEXT): $(go_net_files) bytes.gox fmt.gox io.gox os.gox \\\n-\t\treflect.gox strconv.gox strings.gox sync.gox syscall.gox\n+net/net.lo: $(go_net_files) bytes.gox fmt.gox io.gox os.gox reflect.gox \\\n+\t\tstrconv.gox strings.gox sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n-net/libnet.lo: net/libnet.$(OBJEXT)\n-net/libnet.la: net/libnet.lo\n net/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: net/check\n \n-netchan/libnetchan.$(OBJEXT): $(go_netchan_files) gob.gox log.gox net.gox \\\n-\t\tos.gox reflect.gox strconv.gox sync.gox time.gox\n+netchan/netchan.lo: $(go_netchan_files) gob.gox log.gox net.gox os.gox \\\n+\t\treflect.gox strconv.gox sync.gox time.gox\n \t$(BUILDPACKAGE)\n-netchan/libnetchan.lo: netchan/libnetchan.$(OBJEXT)\n-netchan/libnetchan.la: netchan/libnetchan.lo\n netchan/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: netchan/check\n \n-os/libos.$(OBJEXT): $(go_os_files) sync.gox syscall.gox\n+os/os.lo: $(go_os_files) sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n-os/libos.lo: os/libos.$(OBJEXT)\n-os/libos.la: os/libos.lo\n os/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: os/check\n \n-patch/libpatch.$(OBJEXT): $(go_patch_files) bytes.gox compress/zlib.gox \\\n+patch/patch.lo: $(go_patch_files) bytes.gox compress/zlib.gox \\\n \t\tcrypto/sha1.gox encoding/git85.gox fmt.gox io.gox os.gox \\\n \t\tpath.gox strings.gox\n \t$(BUILDPACKAGE)\n-patch/libpatch.lo: patch/libpatch.$(OBJEXT)\n-patch/libpatch.la: patch/libpatch.lo\n patch/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: patch/check\n \n-path/libpath.$(OBJEXT): $(go_path_files) io/ioutil.gox os.gox sort.gox \\\n-\t\tstrings.gox utf8.gox\n+path/path.lo: $(go_path_files) io/ioutil.gox os.gox sort.gox strings.gox \\\n+\t\tutf8.gox\n \t$(BUILDPACKAGE)\n-path/libpath.lo: path/libpath.$(OBJEXT)\n-path/libpath.la: path/libpath.lo\n path/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: path/check\n \n-rand/librand.$(OBJEXT): $(go_rand_files) math.gox sync.gox\n+rand/rand.lo: $(go_rand_files) math.gox sync.gox\n \t$(BUILDPACKAGE)\n-rand/librand.lo: rand/librand.$(OBJEXT)\n-rand/librand.la: rand/librand.lo\n rand/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: rand/check\n \n-reflect/libreflect.$(OBJEXT): $(go_reflect_files) math.gox runtime.gox \\\n-\t\tstrconv.gox sync.gox\n+reflect/reflect.lo: $(go_reflect_files) math.gox runtime.gox strconv.gox \\\n+\t\tsync.gox\n \t$(BUILDPACKAGE)\n-reflect/libreflect.lo: reflect/libreflect.$(OBJEXT)\n-reflect/libreflect.la: reflect/libreflect.lo\n reflect/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: reflect/check\n \n-regexp/libregexp.$(OBJEXT): $(go_regexp_files) bytes.gox io.gox os.gox \\\n-\t\tstrings.gox utf8.gox\n+regexp/regexp.lo: $(go_regexp_files) bytes.gox io.gox os.gox strings.gox \\\n+\t\tutf8.gox\n \t$(BUILDPACKAGE)\n-regexp/libregexp.lo: regexp/libregexp.$(OBJEXT)\n-regexp/libregexp.la: regexp/libregexp.lo\n regexp/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: regexp/check\n \n-rpc/librpc.$(OBJEXT): $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox \\\n-\t\tio.gox log.gox net.gox os.gox reflect.gox sort.gox \\\n-\t\tstrings.gox strconv.gox sync.gox template.gox unicode.gox \\\n-\t\tutf8.gox\n+rpc/rpc.lo: $(go_rpc_files) bufio.gox fmt.gox gob.gox http.gox io.gox log.gox \\\n+\t\tnet.gox os.gox reflect.gox sort.gox strings.gox strconv.gox \\\n+\t\tsync.gox template.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-rpc/librpc.lo: rpc/librpc.$(OBJEXT)\n-rpc/librpc.la: rpc/librpc.lo\n rpc/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: rpc/check\n \n-runtime/libruntime.$(OBJEXT): $(go_runtime_files)\n+runtime/runtime.lo: $(go_runtime_files)\n \t$(BUILDPACKAGE)\n-runtime/libruntime.lo: runtime/libruntime.$(OBJEXT)\n-runtime/libruntime.la: runtime/libruntime.lo\n runtime/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: runtime/check\n \n-scanner/libscanner.$(OBJEXT): $(go_scanner_files) bytes.gox fmt.gox io.gox \\\n-\t\tos.gox unicode.gox utf8.gox\n+scanner/scanner.lo: $(go_scanner_files) bytes.gox fmt.gox io.gox os.gox \\\n+\t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-scanner/libscanner.lo: scanner/libscanner.$(OBJEXT)\n-scanner/libscanner.la: scanner/libscanner.lo\n scanner/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: scanner/check\n \n-smtp/libsmtp.$(OBJEXT): $(go_smtp_files) crypto/tls.gox encoding/base64.gox \\\n-\t\tio.gox net.gox net/textproto.gox os.gox strings.gox\n+smtp/smtp.lo: $(go_smtp_files) crypto/tls.gox encoding/base64.gox io.gox \\\n+\t\tnet.gox net/textproto.gox os.gox strings.gox\n \t$(BUILDPACKAGE)\n-smtp/libsmtp.lo: smtp/libsmtp.$(OBJEXT)\n-smtp/libsmtp.la: smtp/libsmtp.lo\n smtp/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: smtp/check\n \n-sort/libsort.$(OBJEXT): $(go_sort_files)\n+sort/sort.lo: $(go_sort_files)\n \t$(BUILDPACKAGE)\n-sort/libsort.lo: sort/libsort.$(OBJEXT)\n-sort/libsort.la: sort/libsort.lo\n sort/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: sort/check\n \n-strconv/libstrconv.$(OBJEXT): $(go_strconv_files) bytes.gox math.gox os.gox \\\n-\t\tstrings.gox unicode.gox utf8.gox\n+strconv/strconv.lo: $(go_strconv_files) bytes.gox math.gox os.gox strings.gox \\\n+\t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-strconv/libstrconv.lo: strconv/libstrconv.$(OBJEXT)\n-strconv/libstrconv.la: strconv/libstrconv.lo\n strconv/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: strconv/check\n \n-strings/libstrings.$(OBJEXT): $(go_strings_files) os.gox unicode.gox utf8.gox\n+strings/strings.lo: $(go_strings_files) os.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-strings/libstrings.lo: strings/libstrings.$(OBJEXT)\n-strings/libstrings.la: strings/libstrings.lo\n strings/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: strings/check\n \n-sync/mutex.$(OBJEXT): $(go_sync_files) $(go_sync_c_files) runtime.gox\n-\ttest -d sync || $(MKDIR_P) sync\n-\t$(LTGOCOMPILE) -I . -c -o sync/mutex.$(OBJEXT) -fgo-prefix=libgo_sync $(srcdir)/go/sync/mutex.go $(srcdir)/go/sync/once.go $(srcdir)/go/sync/rwmutex.go\n-sync/cas.$(OBJEXT): $(srcdir)/go/sync/cas.c sync/mutex.$(OBJEXT)\n-\t$(LTCOMPILE) -c -o sync/cas.$(OBJEXT) $(srcdir)/go/sync/cas.c\n-sync/libsync.la: sync/mutex.$(OBJEXT) sync/cas.$(OBJEXT)\n-\t$(LINK) sync/mutex.lo sync/cas.lo\n+sync/mutex.lo: $(go_sync_files) runtime.gox\n+\t$(BUILDPACKAGE)\n+sync/cas.lo: $(go_sync_c_files) sync/mutex.lo\n+\t$(LTCOMPILE) -c -o sync/cas.lo $(srcdir)/go/sync/cas.c\n sync/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: sync/check\n \n-syslog/syslog.$(OBJEXT): $(go_syslog_files) fmt.gox log.gox net.gox os.gox \\\n-\t\tsyscall.gox\n-\ttest -d syslog || $(MKDIR_P) syslog\n-\t$(LTGOCOMPILE) -I . -c -o $@ -fgo-prefix=libgo_syslog $(srcdir)/go/syslog/syslog.go $(srcdir)/$(go_syslog_file)\n-syslog/syslog_c.$(OBJEXT): $(srcdir)/go/syslog/syslog_c.c syslog/syslog.$(OBJEXT)\n+syslog/syslog.lo: $(go_syslog_files) fmt.gox log.gox net.gox os.gox syscall.gox\n+\t$(BUILDPACKAGE)\n+syslog/syslog_c.lo: $(go_syslog_c_files) syslog/syslog.lo\n \t$(LTCOMPILE) -c -o $@ $(srcdir)/go/syslog/syslog_c.c\n-syslog/libsyslog.la: syslog/syslog.$(OBJEXT) syslog/syslog_c.$(OBJEXT)\n-\t$(LINK) syslog/syslog.lo syslog/syslog_c.lo\n syslog/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: syslog/check\n \n-tabwriter/libtabwriter.$(OBJEXT): $(go_tabwriter_files) bytes.gox io.gox \\\n-\t\tos.gox utf8.gox\n+tabwriter/tabwriter.lo: $(go_tabwriter_files) bytes.gox io.gox os.gox utf8.gox\n \t$(BUILDPACKAGE)\n-tabwriter/libtabwriter.lo: tabwriter/libtabwriter.$(OBJEXT)\n-tabwriter/libtabwriter.la: tabwriter/libtabwriter.lo\n tabwriter/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: tabwriter/check\n \n-template/libtemplate.$(OBJEXT): $(go_template_files) bytes.gox fmt.gox io.gox \\\n-\t\tos.gox reflect.gox runtime.gox strings.gox container/vector.gox\n+template/template.lo: $(go_template_files) bytes.gox fmt.gox io.gox os.gox \\\n+\t\treflect.gox runtime.gox strings.gox container/vector.gox\n \t$(BUILDPACKAGE)\n-template/libtemplate.lo: template/libtemplate.$(OBJEXT)\n-template/libtemplate.la: template/libtemplate.lo\n template/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: template/check\n \n-testing/libtesting.$(OBJEXT): $(go_testing_files) flag.gox fmt.gox os.gox \\\n-\t\tregexp.gox runtime.gox time.gox\n+testing/testing.lo: $(go_testing_files) flag.gox fmt.gox os.gox regexp.gox \\\n+\t\truntime.gox time.gox\n \t$(BUILDPACKAGE)\n-testing/libtesting.lo: testing/libtesting.$(OBJEXT)\n-testing/libtesting.la: testing/libtesting.lo\n testing/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: testing/check\n \n-time/libtime.$(OBJEXT): $(go_time_files) bytes.gox container/heap.gox \\\n-\t\tio/ioutil.gox os.gox strconv.gox sync.gox syscall.gox\n+time/time.lo: $(go_time_files) bytes.gox container/heap.gox io/ioutil.gox \\\n+\t\tos.gox strconv.gox sync.gox syscall.gox\n \t$(BUILDPACKAGE)\n-time/libtime.lo: time/libtime.$(OBJEXT)\n-time/libtime.la: time/libtime.lo\n time/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: time/check\n \n-try/libtry.$(OBJEXT): $(go_try_files) fmt.gox io.gox os.gox reflect.gox \\\n-\t\tunicode.gox\n+try/try.lo: $(go_try_files) fmt.gox io.gox os.gox reflect.gox unicode.gox\n \t$(BUILDPACKAGE)\n-try/libtry.lo: try/libtry.$(OBJEXT)\n-try/libtry.la: try/libtry.lo\n try/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: try/check\n \n-unicode/libunicode.$(OBJEXT): $(go_unicode_files)\n+unicode/unicode.lo: $(go_unicode_files)\n \t$(BUILDPACKAGE)\n-unicode/libunicode.lo: unicode/libunicode.$(OBJEXT)\n-unicode/libunicode.la: unicode/libunicode.lo\n unicode/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: unicode/check\n \n-utf16/libutf16.$(OBJEXT): $(go_utf16_files) unicode.gox\n+utf16/utf16.lo: $(go_utf16_files) unicode.gox\n \t$(BUILDPACKAGE)\n-utf16/libutf16.lo: utf16/libutf16.$(OBJEXT)\n-utf16/libutf16.la: utf16/libutf16.lo\n utf16/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: utf16/check\n \n-utf8/libutf8.$(OBJEXT): $(go_utf8_files) unicode.gox\n+utf8/utf8.lo: $(go_utf8_files) unicode.gox\n \t$(BUILDPACKAGE)\n-utf8/libutf8.lo: utf8/libutf8.$(OBJEXT)\n-utf8/libutf8.la: utf8/libutf8.lo\n utf8/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: utf8/check\n \n-websocket/libwebsocket.$(OBJEXT): $(go_websocket_files) bufio.gox bytes.gox \\\n+websocket/websocket.lo: $(go_websocket_files) bufio.gox bytes.gox \\\n \t\tcontainer/vector.gox crypto/md5.gox crypto/tls.gox \\\n \t\tencoding/binary.gox fmt.gox http.gox io.gox net.gox os.gox \\\n \t\trand.gox strings.gox\n \t$(BUILDPACKAGE)\n-websocket/libwebsocket.lo: websocket/libwebsocket.$(OBJEXT)\n-websocket/libwebsocket.la: websocket/libwebsocket.lo\n websocket/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: websocket/check\n \n-xml/libxml.$(OBJEXT): $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox \\\n-\t\tos.gox reflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n+xml/xml.lo: $(go_xml_files) bufio.gox bytes.gox fmt.gox io.gox os.gox \\\n+\t\treflect.gox strconv.gox strings.gox unicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-xml/libxml.lo: xml/libxml.$(OBJEXT)\n-xml/libxml.la: xml/libxml.lo\n xml/check: $(CHECK_DEPS)\n \t$(CHECK)\n .PHONY: xml/check\n \n-archive/libtar.$(OBJEXT): $(go_archive_tar_files) bytes.gox io.gox os.gox \\\n-\t\tstrconv.gox strings.gox\n+archive/tar.lo: $(go_archive_tar_files) bytes.gox io.gox os.gox strconv.gox \\\n+\t\tstrings.gox\n \t$(BUILDPACKAGE)\n-archive/libtar.lo: archive/libtar.$(OBJEXT)\n-archive/libtar.la: archive/libtar.lo\n archive/tar/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/tar\n \t$(CHECK)\n .PHONY: archive/tar/check\n \n-archive/libzip.$(OBJEXT): $(go_archive_zip_files) bufio.gox bytes.gox \\\n+archive/zip.lo: $(go_archive_zip_files) bufio.gox bytes.gox \\\n \t\tcompress/flate.gox hash.gox hash/crc32.gox \\\n \t\tencoding/binary.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-archive/libzip.lo: archive/libzip.$(OBJEXT)\n-archive/libzip.la: archive/libzip.lo\n archive/zip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) archive/zip\n \t$(CHECK)\n .PHONY: archive/zip/check\n \n-compress/libflate.$(OBJEXT): $(go_compress_flate_files) bufio.gox io.gox \\\n-\t\tmath.gox os.gox sort.gox strconv.gox\n+compress/flate.lo: $(go_compress_flate_files) bufio.gox io.gox math.gox \\\n+\t\tos.gox sort.gox strconv.gox\n \t$(BUILDPACKAGE)\n-compress/libflate.lo: compress/libflate.$(OBJEXT)\n-compress/libflate.la: compress/libflate.lo\n compress/flate/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/flate\n \t$(CHECK)\n .PHONY: compress/flate/check\n \n-compress/libgzip.$(OBJEXT): $(go_compress_gzip_files) bufio.gox \\\n-\t\tcompress/flate.gox hash.gox hash/crc32.gox io.gox os.gox\n+compress/gzip.lo: $(go_compress_gzip_files) bufio.gox compress/flate.gox \\\n+\t\thash.gox hash/crc32.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-compress/libgzip.lo: compress/libgzip.$(OBJEXT)\n-compress/libgzip.la: compress/libgzip.lo\n compress/gzip/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/gzip\n \t$(CHECK)\n .PHONY: compress/gzip/check\n \n-compress/libzlib.$(OBJEXT): $(go_compress_zlib_files) bufio.gox \\\n-\t\tcompress/flate.gox hash.gox hash/adler32.gox io.gox os.gox\n+compress/zlib.lo: $(go_compress_zlib_files) bufio.gox compress/flate.gox \\\n+\t\thash.gox hash/adler32.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-compress/libzlib.lo: compress/libzlib.$(OBJEXT)\n-compress/libzlib.la: compress/libzlib.lo\n compress/zlib/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) compress/zlib\n \t$(CHECK)\n .PHONY: compress/zlib/check\n \n-container/libheap.$(OBJEXT): $(go_container_heap_files) sort.gox\n+container/heap.lo: $(go_container_heap_files) sort.gox\n \t$(BUILDPACKAGE)\n-container/libheap.lo: container/libheap.$(OBJEXT)\n-container/libheap.la: container/libheap.lo\n container/heap/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/heap\n \t$(CHECK)\n .PHONY: container/heap/check\n \n-container/liblist.$(OBJEXT): $(go_container_list_files)\n+container/list.lo: $(go_container_list_files)\n \t$(BUILDPACKAGE)\n-container/liblist.lo: container/liblist.$(OBJEXT)\n-container/liblist.la: container/liblist.lo\n container/list/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/list\n \t$(CHECK)\n .PHONY: container/list/check\n \n-container/libring.$(OBJEXT): $(go_container_ring_files)\n+container/ring.lo: $(go_container_ring_files)\n \t$(BUILDPACKAGE)\n-container/libring.lo: container/libring.$(OBJEXT)\n-container/libring.la: container/libring.lo\n container/ring/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/ring\n \t$(CHECK)\n .PHONY: container/ring/check\n \n-container/libvector.$(OBJEXT): $(go_container_vector_files)\n+container/vector.lo: $(go_container_vector_files)\n \t$(BUILDPACKAGE)\n-container/libvector.lo: container/libvector.$(OBJEXT)\n-container/libvector.la: container/libvector.lo\n container/vector/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) container/vector\n \t$(CHECK)\n .PHONY: container/vector/check\n \n-crypto/libaes.$(OBJEXT): $(go_crypto_aes_files) os.gox strconv.gox\n+crypto/aes.lo: $(go_crypto_aes_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libaes.lo: crypto/libaes.$(OBJEXT)\n-crypto/libaes.la: crypto/libaes.lo\n crypto/aes/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/aes\n \t$(CHECK)\n .PHONY: crypto/aes/check\n \n-crypto/libblock.$(OBJEXT): $(go_crypto_block_files) fmt.gox io.gox os.gox \\\n-\t\tstrconv.gox\n+crypto/block.lo: $(go_crypto_block_files) fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libblock.lo: crypto/libblock.$(OBJEXT)\n-crypto/libblock.la: crypto/libblock.lo\n crypto/block/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/block\n \t$(CHECK)\n .PHONY: crypto/block/check\n \n-crypto/libblowfish.$(OBJEXT): $(go_crypto_blowfish_files) os.gox strconv.gox\n+crypto/blowfish.lo: $(go_crypto_blowfish_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libblowfish.lo: crypto/libblowfish.$(OBJEXT)\n-crypto/libblowfish.la: crypto/libblowfish.lo\n crypto/blowfish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/blowfish\n \t$(CHECK)\n .PHONY: crypto/blowfish/check\n \n-crypto/libcast5.$(OBJEXT): $(go_crypto_cast5_files) os.gox\n+crypto/cast5.lo: $(go_crypto_cast5_files) os.gox\n \t$(BUILDPACKAGE)\n-crypto/libcast5.lo: crypto/libcast5.$(OBJEXT)\n-crypto/libcast5.la: crypto/libcast5.lo\n crypt/cast5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cast5\n \t$(CHECK)\n .PHONY: crypto/cast5/check\n \n-crypto/libcipher.$(OBJEXT): $(go_crypto_cipher_files) io.gox os.gox\n+crypto/cipher.lo: $(go_crypto_cipher_files) io.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libcipher.lo: crypto/libcipher.$(OBJEXT)\n-crypto/libcipher.la: crypto/libcipher.lo\n crypto/cipher/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/cipher\n \t$(CHECK)\n .PHONY: crypto/cipher/check\n \n-crypto/libelliptic.$(OBJEXT): $(go_crypto_elliptic_files) big.gox io.gox \\\n-\t\tos.gox sync.gox\n+crypto/elliptic.lo: $(go_crypto_elliptic_files) big.gox io.gox os.gox sync.gox\n \t$(BUILDPACKAGE)\n-crypto/libelliptic.lo: crypto/libelliptic.$(OBJEXT)\n-crypto/libelliptic.la: crypto/libelliptic.lo\n crypto/elliptic/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/elliptic\n \t$(CHECK)\n .PHONY: crypto/elliptic/check\n \n-crypto/libhmac.$(OBJEXT): $(go_crypto_hmac_files) crypto/md5.gox \\\n-\t\tcrypto/sha1.gox crypto/sha256.gox hash.gox os.gox\n+crypto/hmac.lo: $(go_crypto_hmac_files) crypto/md5.gox crypto/sha1.gox \\\n+\t\tcrypto/sha256.gox hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libhmac.lo: crypto/libhmac.$(OBJEXT)\n-crypto/libhmac.la: crypto/libhmac.lo\n crypto/hmac/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/hmac\n \t$(CHECK)\n .PHONY: crypto/hmac/check\n \n-crypto/libmd4.$(OBJEXT): $(go_crypto_md4_files) hash.gox os.gox\n+crypto/md4.lo: $(go_crypto_md4_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libmd4.lo: crypto/libmd4.$(OBJEXT)\n-crypto/libmd4.la: crypto/libmd4.lo\n crypto/md4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md4\n \t$(CHECK)\n .PHONY: crypto/md4/check\n \n-crypto/libmd5.$(OBJEXT): $(go_crypto_md5_files) hash.gox os.gox\n+crypto/md5.lo: $(go_crypto_md5_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libmd5.lo: crypto/libmd5.$(OBJEXT)\n-crypto/libmd5.la: crypto/libmd5.lo\n crypto/md5/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/md5\n \t$(CHECK)\n .PHONY: crypto/md5/check\n \n-crypto/libocsp.$(OBJEXT): $(go_crypto_ocsp_files) asn1.gox crypto/rsa.gox \\\n+crypto/ocsp.lo: $(go_crypto_ocsp_files) asn1.gox crypto/rsa.gox \\\n \t\tcrypto/sha1.gox crypto/x509.gox os.gox time.gox\n \t$(BUILDPACKAGE)\n-crypto/libocsp.lo: crypto/libocsp.$(OBJEXT)\n-crypto/libocsp.la: crypto/libocsp.lo\n crypto/ocsp/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ocsp\n \t$(CHECK)\n .PHONY: crypto/ocsp/check\n \n-crypto/librand.$(OBJEXT): $(go_crypto_rand_files) crypto/aes.gox io.gox os.gox \\\n-\t\tsync.gox time.gox\n+crypto/rand.lo: $(go_crypto_rand_files) crypto/aes.gox io.gox os.gox sync.gox \\\n+\t\ttime.gox\n \t$(BUILDPACKAGE)\n-crypto/librand.lo: crypto/librand.$(OBJEXT)\n-crypto/librand.la: crypto/librand.lo\n crypto/rand/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rand\n \t$(CHECK)\n .PHONY: crypto/rand/check\n \n-crypto/librc4.$(OBJEXT): $(go_crypto_rc4_files) os.gox strconv.gox\n+crypto/rc4.lo: $(go_crypto_rc4_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/librc4.lo: crypto/librc4.$(OBJEXT)\n-crypto/librc4.la: crypto/librc4.lo\n crypto/rc4/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rc4\n \t$(CHECK)\n .PHONY: crypto/rc4/check\n \n-crypto/libripemd160.$(OBJEXT): $(go_crypto_ripemd160_files) hash.gox os.gox\n+crypto/ripemd160.lo: $(go_crypto_ripemd160_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libripemd160.lo: crypto/libripemd160.$(OBJEXT)\n-crypto/libripemd160.la: crypto/libripemd160.lo\n crypto/ripemd160/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/ripemd160\n \t$(CHECK)\n .PHONY: crypto/ripemd160/check\n \n-crypto/librsa.$(OBJEXT): $(go_crypto_rsa_files) big.gox crypto/sha1.gox \\\n+crypto/rsa.lo: $(go_crypto_rsa_files) big.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox encoding/hex.gox hash.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/librsa.lo: crypto/librsa.$(OBJEXT)\n-crypto/librsa.la: crypto/librsa.lo\n crypto/rsa/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/rsa\n \t$(CHECK)\n .PHONY: crypto/rsa/check\n \n-crypto/libsha1.$(OBJEXT): $(go_crypto_sha1_files) hash.gox os.gox\n+crypto/sha1.lo: $(go_crypto_sha1_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libsha1.lo: crypto/libsha1.$(OBJEXT)\n-crypto/libsha1.la: crypto/libsha1.lo\n crypto/sha1/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha1\n \t$(CHECK)\n .PHONY: crypto/sha1/check\n \n-crypto/libsha256.$(OBJEXT): $(go_crypto_sha256_files) hash.gox os.gox\n+crypto/sha256.lo: $(go_crypto_sha256_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libsha256.lo: crypto/libsha256.$(OBJEXT)\n-crypto/libsha256.la: crypto/libsha256.lo\n crypto/sha256/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha256\n \t$(CHECK)\n .PHONY: crypto/sha256/check\n \n-crypto/libsha512.$(OBJEXT): $(go_crypto_sha512_files) hash.gox os.gox\n+crypto/sha512.lo: $(go_crypto_sha512_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/libsha512.lo: crypto/libsha512.$(OBJEXT)\n-crypto/libsha512.la: crypto/libsha512.lo\n crypto/sha512/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/sha512\n \t$(CHECK)\n .PHONY: crypto/sha512/check\n \n-crypto/libsubtle.$(OBJEXT): $(go_crypto_subtle_files)\n+crypto/subtle.lo: $(go_crypto_subtle_files)\n \t$(BUILDPACKAGE)\n-crypto/libsubtle.lo: crypto/libsubtle.$(OBJEXT)\n-crypto/libsubtle.la: crypto/libsubtle.lo\n crypto/subtle/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/subtle\n \t$(CHECK)\n .PHONY: crypto/subtle/check\n \n-crypto/libtls.$(OBJEXT): $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n+crypto/tls.lo: $(go_crypto_tls_files) big.gox bufio.gox bytes.gox \\\n \t\tcontainer/list.gox crypto/aes.gox crypto/cipher.gox \\\n \t\tcrypto/elliptic.gox crypto/hmac.gox crypto/md5.gox \\\n \t\tcrypto/rc4.gox crypto/rand.gox crypto/rsa.gox crypto/sha1.gox \\\n \t\tcrypto/subtle.gox crypto/rsa.gox crypto/sha1.gox \\\n \t\tcrypto/x509.gox encoding/pem.gox fmt.gox hash.gox io.gox \\\n \t\tio/ioutil.gox net.gox os.gox strings.gox sync.gox time.gox\n \t$(BUILDPACKAGE)\n-crypto/libtls.lo: crypto/libtls.$(OBJEXT)\n-crypto/libtls.la: crypto/libtls.lo\n crypto/tls/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/tls\n \t$(CHECK)\n .PHONY: crypto/tls/check\n \n-crypto/libtwofish.$(OBJEXT): $(go_crypto_twofish_files) os.gox strconv.gox\n+crypto/twofish.lo: $(go_crypto_twofish_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libtwofish.lo: crypto/libtwofish.$(OBJEXT)\n-crypto/libtwofish.la: crypto/libtwofish.lo\n crypto/twofish/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/twofish\n \t$(CHECK)\n .PHONY: crypto/twofish/check\n \n-crypto/libx509.$(OBJEXT): $(go_crypto_x509_files) asn1.gox big.gox \\\n-\t\tcontainer/vector.gox crypto/rsa.gox crypto/sha1.gox hash.gox \\\n-\t\tos.gox strings.gox time.gox\n+crypto/x509.lo: $(go_crypto_x509_files) asn1.gox big.gox container/vector.gox \\\n+\t\tcrypto/rsa.gox crypto/sha1.gox hash.gox os.gox strings.gox \\\n+\t\ttime.gox\n \t$(BUILDPACKAGE)\n-crypto/libx509.lo: crypto/libx509.$(OBJEXT)\n-crypto/libx509.la: crypto/libx509.lo\n crypto/x509/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/x509\n \t$(CHECK)\n .PHONY: crypto/x509/check\n \n-crypto/libxtea.$(OBJEXT): $(go_crypto_xtea_files) os.gox strconv.gox\n+crypto/xtea.lo: $(go_crypto_xtea_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-crypto/libxtea.lo: crypto/libxtea.$(OBJEXT)\n-crypto/libxtea.la: crypto/libxtea.lo\n crypto/xtea/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/xtea\n \t$(CHECK)\n .PHONY: crypto/xtea/check\n \n-crypto/openpgp/libarmor.$(OBJEXT): $(go_crypto_openpgp_armor_files) bytes.gox \\\n+crypto/openpgp/armor.lo: $(go_crypto_openpgp_armor_files) bytes.gox \\\n \t\tcrypto/openpgp/error.gox encoding/base64.gox \\\n \t\tencoding/line.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/openpgp/libarmor.lo: crypto/openpgp/libarmor.$(OBJEXT)\n-crypto/openpgp/libarmor.la: crypto/openpgp/libarmor.lo\n crypto/openpgp/armor/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/armor\n \t$(CHECK)\n .PHONY: crypto/openpgp/armor/check\n \n-crypto/openpgp/liberror.$(OBJEXT): $(go_crypto_openpgp_error_files)\n+crypto/openpgp/error.lo: $(go_crypto_openpgp_error_files)\n \t$(BUILDPACKAGE)\n-crypto/openpgp/liberror.lo: crypto/openpgp/liberror.$(OBJEXT)\n-crypto/openpgp/liberror.la: crypto/openpgp/liberror.lo\n crypto/openpgp/error/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/error\n \t$(CHECK)\n .PHONY: crypto/openpgp/error/check\n \n-crypto/openpgp/libs2k.$(OBJEXT): $(go_crypto_openpgp_s2k_files) crypto/md5.gox \\\n+crypto/openpgp/s2k.lo: $(go_crypto_openpgp_s2k_files) crypto/md5.gox \\\n \t\tcrypto/openpgp/error.gox crypto/ripemd160.gox crypto/sha1.gox \\\n \t\tcrypto/sha256.gox crypto/sha512.gox hash.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-crypto/openpgp/libs2k.lo: crypto/openpgp/libs2k.$(OBJEXT)\n-crypto/openpgp/libs2k.la: crypto/openpgp/libs2k.lo\n crypto/openpgp/s2k/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) crypto/openpgp/s2k\n \t$(CHECK)\n .PHONY: crypto/openpgp/s2k/check\n \n-debug/libdwarf.$(OBJEXT): $(go_debug_dwarf_files) encoding/binary.gox os.gox \\\n-\t\tstrconv.gox\n+debug/dwarf.lo: $(go_debug_dwarf_files) encoding/binary.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-debug/libdwarf.lo: debug/libdwarf.$(OBJEXT)\n-debug/libdwarf.la: debug/libdwarf.lo\n debug/dwarf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/dwarf\n \t$(CHECK)\n .PHONY: debug/dwarf/check\n \n-debug/libelf.$(OBJEXT): $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n+debug/elf.lo: $(go_debug_elf_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-debug/libelf.lo: debug/libelf.$(OBJEXT)\n-debug/libelf.la: debug/libelf.lo\n debug/elf/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/elf\n \t$(CHECK)\n .PHONY: debug/elf/check\n \n-debug/libgosym.$(OBJEXT): $(go_debug_gosym_files) encoding/binary.gox fmt.gox \\\n-\t\tos.gox strconv.gox strings.gox\n+debug/gosym.lo: $(go_debug_gosym_files) encoding/binary.gox fmt.gox os.gox \\\n+\t\tstrconv.gox strings.gox\n \t$(BUILDPACKAGE)\n-debug/libgosym.lo: debug/libgosym.$(OBJEXT)\n-debug/libgosym.la: debug/libgosym.lo\n debug/gosym/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/gosym\n \t$(CHECK)\n .PHONY: debug/gosym/check\n \n-debug/libmacho.$(OBJEXT): $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n+debug/macho.lo: $(go_debug_macho_files) bytes.gox debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-debug/libmacho.lo: debug/libmacho.$(OBJEXT)\n-debug/libmacho.la: debug/libmacho.lo\n debug/macho/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/macho\n \t$(CHECK)\n .PHONY: debug/macho/check\n \n-debug/libpe.$(OBJEXT): $(go_debug_pe_files) debug/dwarf.gox \\\n+debug/pe.lo: $(go_debug_pe_files) debug/dwarf.gox \\\n \t\tencoding/binary.gox fmt.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-debug/libpe.lo: debug/libpe.$(OBJEXT)\n-debug/libpe.la: debug/libpe.lo\n debug/pe/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/pe\n \t$(CHECK)\n .PHONY: debug/pe/check\n \n-debug/libproc.$(OBJEXT): $(go_debug_proc_files) container/vector.gox fmt.gox \\\n+debug/proc.lo: $(go_debug_proc_files) container/vector.gox fmt.gox \\\n \t\tio/ioutil.gox os.gox runtime.gox strconv.gox strings.gox \\\n \t\tsync.gox syscall.gox\n \t$(BUILDPACKAGE)\n-debug/libproc.lo: debug/libproc.$(OBJEXT)\n-debug/libproc.la: debug/libproc.lo\n debug/proc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) debug/proc\n \t$(CHECK)\n .PHONY: debug/proc/check\n \n-encoding/libascii85.$(OBJEXT): $(go_encoding_ascii85_files) io.gox os.gox \\\n-\t\tstrconv.gox\n+encoding/ascii85.lo: $(go_encoding_ascii85_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libascii85.lo: encoding/libascii85.$(OBJEXT)\n-encoding/libascii85.la: encoding/libascii85.lo\n encoding/ascii85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/ascii85\n \t$(CHECK)\n .PHONY: encoding/ascii85/check\n \n-encoding/libbase32.$(OBJEXT): $(go_encoding_base32_files) io.gox os.gox \\\n-\t\tstrconv.gox\n+encoding/base32.lo: $(go_encoding_base32_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libbase32.lo: encoding/libbase32.$(OBJEXT)\n-encoding/libbase32.la: encoding/libbase32.lo\n encoding/base32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base32\n \t$(CHECK)\n .PHONY: encoding/base32/check\n \n-encoding/libbase64.$(OBJEXT): $(go_encoding_base64_files) io.gox os.gox \\\n-\t\tstrconv.gox\n+encoding/base64.lo: $(go_encoding_base64_files) io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libbase64.lo: encoding/libbase64.$(OBJEXT)\n-encoding/libbase64.la: encoding/libbase64.lo\n encoding/base64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/base64\n \t$(CHECK)\n .PHONY: encoding/base64/check\n \n-encoding/libbinary.$(OBJEXT): $(go_encoding_binary_files) io.gox math.gox \\\n-\t\tos.gox reflect.gox\n+encoding/binary.lo: $(go_encoding_binary_files) io.gox math.gox os.gox \\\n+\t\treflect.gox\n \t$(BUILDPACKAGE)\n-encoding/libbinary.lo: encoding/libbinary.$(OBJEXT)\n-encoding/libbinary.la: encoding/libbinary.lo\n encoding/binary/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/binary\n \t$(CHECK)\n .PHONY: encoding/binary/check\n \n-encoding/libgit85.$(OBJEXT): $(go_encoding_git85_files) bytes.gox io.gox \\\n-\t\tos.gox strconv.gox\n+encoding/git85.lo: $(go_encoding_git85_files) bytes.gox io.gox os.gox \\\n+\t\tstrconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libgit85.lo: encoding/libgit85.$(OBJEXT)\n-encoding/libgit85.la: encoding/libgit85.lo\n encoding/git85/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/git85\n \t$(CHECK)\n .PHONY: encoding/git85/check\n \n-encoding/libhex.$(OBJEXT): $(go_encoding_hex_files) os.gox strconv.gox\n+encoding/hex.lo: $(go_encoding_hex_files) os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-encoding/libhex.lo: encoding/libhex.$(OBJEXT)\n-encoding/libhex.la: encoding/libhex.lo\n encoding/hex/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/hex\n \t$(CHECK)\n .PHONY: encoding/hex/check\n \n-encoding/libline.$(OBJEXT): $(go_encoding_line_files) io.gox os.gox\n+encoding/line.lo: $(go_encoding_line_files) io.gox os.gox\n \t$(BUILDPACKAGE)\n-encoding/libline.lo: encoding/libline.$(OBJEXT)\n-encoding/libline.la: encoding/libline.lo\n encoding/line/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/line\n \t$(CHECK)\n .PHONY: encoding/line/check\n \n-encoding/libpem.$(OBJEXT): $(go_encoding_pem_files) bytes.gox \\\n-\t\tencoding/base64.gox\n+encoding/pem.lo: $(go_encoding_pem_files) bytes.gox encoding/base64.gox\n \t$(BUILDPACKAGE)\n-encoding/libpem.lo: encoding/libpem.$(OBJEXT)\n-encoding/libpem.la: encoding/libpem.lo\n encoding/pem/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) encoding/pem\n \t$(CHECK)\n .PHONY: encoding/pem/check\n \n-exp/libdatafmt.$(OBJEXT): $(go_exp_datafmt_files) bytes.gox \\\n-\t\tcontainer/vector.gox fmt.gox go/scanner.gox go/token.gox \\\n-\t\tio.gox os.gox reflect.gox runtime.gox strconv.gox strings.gox\n+exp/datafmt.lo: $(go_exp_datafmt_files) bytes.gox container/vector.gox \\\n+\t\tfmt.gox go/scanner.gox go/token.gox io.gox os.gox reflect.gox \\\n+\t\truntime.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n-exp/libdatafmt.lo: exp/libdatafmt.$(OBJEXT)\n-exp/libdatafmt.la: exp/libdatafmt.lo\n exp/datafmt/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/datafmt\n \t$(CHECK)\n .PHONY: exp/datafmt/check\n \n-exp/libdraw.$(OBJEXT): $(go_exp_draw_files) image.gox os.gox\n+exp/draw.lo: $(go_exp_draw_files) image.gox os.gox\n \t$(BUILDPACKAGE)\n-exp/libdraw.lo: exp/libdraw.$(OBJEXT)\n-exp/libdraw.la: exp/libdraw.lo\n exp/draw/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/draw\n \t$(CHECK)\n .PHONY: exp/draw/check\n \n-exp/libeval.$(OBJEXT): $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n+exp/eval.lo: $(go_exp_eval_files) big.gox go/ast.gox go/parser.gox \\\n \t\tgo/scanner.gox go/token.gox fmt.gox log.gox strconv.gox \\\n \t\tstrings.gox os.gox reflect.gox runtime.gox sort.gox template.gox\n \t$(BUILDPACKAGE)\n-exp/libeval.lo: exp/libeval.$(OBJEXT)\n-exp/libeval.la: exp/libeval.lo\n exp/eval/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) exp/eval\n \t$(CHECK)\n .PHONY: exp/eval/check\n \n-go/libast.$(OBJEXT): $(go_go_ast_files) fmt.gox go/token.gox io.gox os.gox \\\n-\t\treflect.gox unicode.gox utf8.gox\n+go/ast.lo: $(go_go_ast_files) fmt.gox go/token.gox io.gox os.gox reflect.gox \\\n+\t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-go/libast.lo: go/libast.$(OBJEXT)\n-go/libast.la: go/libast.lo\n go/ast/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/ast\n \t$(CHECK)\n .PHONY: go/ast/check\n \n-go/libdoc.$(OBJEXT): $(go_go_doc_files) go/ast.gox go/token.gox io.gox \\\n-\t\tregexp.gox sort.gox strings.gox template.gox\n+go/doc.lo: $(go_go_doc_files) go/ast.gox go/token.gox io.gox regexp.gox \\\n+\t\tsort.gox strings.gox template.gox\n \t$(BUILDPACKAGE)\n-go/libdoc.lo: go/libdoc.$(OBJEXT)\n-go/libdoc.la: go/libdoc.lo\n go/doc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/doc\n \t$(CHECK)\n .PHONY: go/doc/check\n \n-go/libparser.$(OBJEXT): $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n+go/parser.lo: $(go_go_parser_files) bytes.gox fmt.gox go/ast.gox \\\n \t\tgo/scanner.gox go/token.gox io.gox io/ioutil.gox os.gox \\\n \t\tpath.gox strings.gox\n \t$(BUILDPACKAGE)\n-go/libparser.lo: go/libparser.$(OBJEXT)\n-go/libparser.la: go/libparser.lo\n go/parser/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/parser\n \t$(CHECK)\n .PHONY: go/parser/check\n \n-go/libprinter.$(OBJEXT): $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n+go/printer.lo: $(go_go_printer_files) bytes.gox fmt.gox go/ast.gox \\\n \t\tgo/token.gox io.gox os.gox reflect.gox runtime.gox \\\n \t\tstrings.gox tabwriter.gox\n \t$(BUILDPACKAGE)\n-go/libprinter.lo: go/libprinter.$(OBJEXT)\n-go/libprinter.la: go/libprinter.lo\n go/printer/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/printer\n \t$(CHECK)\n .PHONY: go/printer/check\n \n-go/libscanner.$(OBJEXT): $(go_go_scanner_files) bytes.gox \\\n-\t\tcontainer/vector.gox fmt.gox go/token.gox io.gox os.gox \\\n-\t\tpath.gox sort.gox strconv.gox unicode.gox utf8.gox\n+go/scanner.lo: $(go_go_scanner_files) bytes.gox container/vector.gox fmt.gox \\\n+\t\tgo/token.gox io.gox os.gox path.gox sort.gox strconv.gox \\\n+\t\tunicode.gox utf8.gox\n \t$(BUILDPACKAGE)\n-go/libscanner.lo: go/libscanner.$(OBJEXT)\n-go/libscanner.la: go/libscanner.lo\n go/scanner/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/scanner\n \t$(CHECK)\n .PHONY: go/scanner/check\n \n-go/libtoken.$(OBJEXT): $(go_go_token_files) fmt.gox strconv.gox\n+go/token.lo: $(go_go_token_files) fmt.gox strconv.gox\n \t$(BUILDPACKAGE)\n-go/libtoken.lo: go/libtoken.$(OBJEXT)\n-go/libtoken.la: go/libtoken.lo\n go/token/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/token\n \t$(CHECK)\n .PHONY: go/token/check\n \n-go/libtypechecker.$(OBJEXT): $(go_go_typechecker_files) fmt.gox go/ast.gox \\\n-\t\tgo/token.gox go/scanner.gox os.gox\n+go/typechecker.lo: $(go_go_typechecker_files) fmt.gox go/ast.gox go/token.gox \\\n+\t\tgo/scanner.gox os.gox\n \t$(BUILDPACKAGE)\n-go/libtypechecker.lo: go/libtypechecker.$(OBJEXT)\n-go/libtypechecker.la: go/libtypechecker.lo\n go/typechecker/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) go/typechecker\n \t$(CHECK)\n .PHONY: go/typechecker/check\n \n-hash/libadler32.$(OBJEXT): $(go_hash_adler32_files) hash.gox os.gox\n+hash/adler32.lo: $(go_hash_adler32_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-hash/libadler32.lo: hash/libadler32.$(OBJEXT)\n-hash/libadler32.la: hash/libadler32.lo\n hash/adler32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/adler32\n \t$(CHECK)\n .PHONY: hash/adler32/check\n \n-hash/libcrc32.$(OBJEXT): $(go_hash_crc32_files) hash.gox os.gox\n+hash/crc32.lo: $(go_hash_crc32_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-hash/libcrc32.lo: hash/libcrc32.$(OBJEXT)\n-hash/libcrc32.la: hash/libcrc32.lo\n hash/crc32/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc32\n \t$(CHECK)\n .PHONY: hash/crc32/check\n \n-hash/libcrc64.$(OBJEXT): $(go_hash_crc64_files) hash.gox os.gox\n+hash/crc64.lo: $(go_hash_crc64_files) hash.gox os.gox\n \t$(BUILDPACKAGE)\n-hash/libcrc64.lo: hash/libcrc64.$(OBJEXT)\n-hash/libcrc64.la: hash/libcrc64.lo\n hash/crc64/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) hash/crc64\n \t$(CHECK)\n .PHONY: hash/crc64/check\n \n-http/libpprof.$(OBJEXT): $(go_http_pprof_files) bufio.gox fmt.gox http.gox \\\n-\t\tos.gox runtime.gox runtime/pprof.gox strconv.gox strings.gox\n+http/pprof.lo: $(go_http_pprof_files) bufio.gox fmt.gox http.gox os.gox \\\n+\t\truntime.gox runtime/pprof.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n-http/libpprof.lo: http/libpprof.$(OBJEXT)\n-http/libpprof.la: http/libpprof.lo\n http/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) http/pprof\n \t$(CHECK)\n .PHONY: http/pprof/check\n \n-image/libjpeg.$(OBJEXT): $(go_image_jpeg_files) bufio.gox image.gox io.gox \\\n-\t\tos.gox\n+image/jpeg.lo: $(go_image_jpeg_files) bufio.gox image.gox io.gox os.gox\n \t$(BUILDPACKAGE)\n-image/libjpeg.lo: image/libjpeg.$(OBJEXT)\n-image/libjpeg.la: image/libjpeg.lo\n image/jpeg/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/jpeg\n \t$(CHECK)\n .PHONY: image/jpeg/check\n \n-image/libpng.$(OBJEXT): $(go_image_png_files) bufio.gox compress/zlib.gox \\\n-\t\tfmt.gox hash.gox hash/crc32.gox image.gox io.gox os.gox \\\n-\t\tstrconv.gox\n+image/png.lo: $(go_image_png_files) bufio.gox compress/zlib.gox fmt.gox \\\n+\t\thash.gox hash/crc32.gox image.gox io.gox os.gox strconv.gox\n \t$(BUILDPACKAGE)\n-image/libpng.lo: image/libpng.$(OBJEXT)\n-image/libpng.la: image/libpng.lo\n image/png/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) image/png\n \t$(CHECK)\n .PHONY: image/png/check\n \n-index/libsuffixarray.$(OBJEXT): $(go_index_suffixarray_files) bytes.gox \\\n-\t\tregexp.gox sort.gox\n+index/suffixarray.lo: $(go_index_suffixarray_files) bytes.gox regexp.gox \\\n+\t\tsort.gox\n \t$(BUILDPACKAGE)\n-index/libsuffixarray.lo: index/libsuffixarray.$(OBJEXT)\n-index/libsuffixarray.la: index/libsuffixarray.lo\n index/suffixarray/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) index/suffixarray\n \t$(CHECK)\n .PHONY: index/suffixarray/check\n \n-io/libioutil.$(OBJEXT): $(go_io_ioutil_files) bytes.gox io.gox os.gox sort.gox \\\n+io/ioutil.lo: $(go_io_ioutil_files) bytes.gox io.gox os.gox sort.gox \\\n \t\tstrconv.gox\n \t$(BUILDPACKAGE)\n-io/libioutil.lo: io/libioutil.$(OBJEXT)\n-io/libioutil.la: io/libioutil.lo\n io/ioutil/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) io/ioutil\n \t$(CHECK)\n .PHONY: io/ioutil/check\n \n-mime/libmultipart.$(OBJEXT): $(go_mime_multipart_files) bufio.gox bytes.gox \\\n-\t\tio.gox mime.gox os.gox regexp.gox strings.gox\n+mime/multipart.lo: $(go_mime_multipart_files) bufio.gox bytes.gox io.gox \\\n+\t\tmime.gox os.gox regexp.gox strings.gox\n \t$(BUILDPACKAGE)\n-mime/libmultipart.lo: mime/libmultipart.$(OBJEXT)\n-mime/libmultipart.la: mime/libmultipart.lo\n mime/multipart/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) mime/multipart\n \t$(CHECK)\n .PHONY: mime/multipart/check\n \n-net/libdict.$(OBJEXT): $(go_net_dict_files) container/vector.gox \\\n-\t\tnet/textproto.gox os.gox strconv.gox strings.gox\n+net/dict.lo: $(go_net_dict_files) container/vector.gox net/textproto.gox \\\n+\t\tos.gox strconv.gox strings.gox\n \t$(BUILDPACKAGE)\n-net/libdict.lo: net/libdict.$(OBJEXT)\n-net/libdict.la: net/libdict.lo\n \n-net/libtextproto.$(OBJEXT): $(go_net_textproto_files) bufio.gox bytes.gox \\\n+net/textproto.lo: $(go_net_textproto_files) bufio.gox bytes.gox \\\n \t\tcontainer/vector.gox fmt.gox io.gox io/ioutil.gox net.gox \\\n \t\tos.gox strconv.gox sync.gox\n \t$(BUILDPACKAGE)\n-net/libtextproto.lo: net/libtextproto.$(OBJEXT)\n-net/libtextproto.la: net/libtextproto.lo\n net/textproto/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) net/textproto\n \t$(CHECK)\n .PHONY: net/textproto/check\n \n-os/libinotify.$(OBJEXT): $(go_os_inotify_files) fmt.gox os.gox strings.gox \\\n-\t\tsyscall.gox\n+os/inotify.lo: $(go_os_inotify_files) fmt.gox os.gox strings.gox syscall.gox\n \t$(BUILDPACKAGE)\n-os/libinotify.lo: os/libinotify.$(OBJEXT)\n-os/libinotify.la: os/libinotify.lo\n os/inotify/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/inotify\n \t$(CHECK)\n .PHONY: os/inotify/check\n \n-os/libsignal.$(OBJEXT): $(go_os_signal_files) runtime.gox strconv.gox\n+os/signal.lo: $(go_os_signal_files) runtime.gox strconv.gox\n \t$(BUILDPACKAGE)\n-os/libsignal.lo: os/libsignal.$(OBJEXT)\n-os/libsignal.la: os/libsignal.lo\n os/signal/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) os/signal\n \t$(CHECK)\n@@ -4967,60 +4709,48 @@ unix.go: $(srcdir)/go/os/signal/mkunix.sh sysinfo.go\n \t$(SHELL) $(srcdir)/go/os/signal/mkunix.sh sysinfo.go > $@.tmp\n \tmv -f $@.tmp $@\n \n-rpc/libjsonrpc.$(OBJEXT): $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox \\\n-\t\tnet.gox os.gox rpc.gox sync.gox\n+rpc/jsonrpc.lo: $(go_rpc_jsonrpc_files) fmt.gox io.gox json.gox net.gox \\\n+\t\tos.gox rpc.gox sync.gox\n \t$(BUILDPACKAGE)\n-rpc/libjsonrpc.lo: rpc/libjsonrpc.$(OBJEXT)\n-rpc/libjsonrpc.la: rpc/libjsonrpc.lo\n rpc/jsonrpc/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) rpc/jsonrpc\n \t$(CHECK)\n .PHONY: rpc/jsonrpc/check\n \n-runtime/libdebug.$(OBJEXT): $(go_runtime_debug_files) bytes.gox fmt.gox \\\n-\t\tio/ioutil.gox os.gox runtime.gox\n+runtime/debug.lo: $(go_runtime_debug_files) bytes.gox fmt.gox io/ioutil.gox \\\n+\t\tos.gox runtime.gox\n \t$(BUILDPACKAGE)\n-runtime/libdebug.lo: runtime/libdebug.$(OBJEXT)\n-runtime/libdebug.la: runtime/libdebug.lo\n runtime/debug/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/debug\n \t$(CHECK)\n .PHONY: runtime/debug/check\n \n-runtime/libpprof.$(OBJEXT): $(go_runtime_pprof_files) bufio.gox fmt.gox \\\n-\t\tio.gox os.gox runtime.gox\n+runtime/pprof.lo: $(go_runtime_pprof_files) bufio.gox fmt.gox io.gox os.gox \\\n+\t\truntime.gox\n \t$(BUILDPACKAGE)\n-runtime/libpprof.lo: runtime/libpprof.$(OBJEXT)\n-runtime/libpprof.la: runtime/libpprof.lo\n runtime/pprof/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) runtime/pprof\n \t$(CHECK)\n .PHONY: runtime/pprof/check\n \n-testing/libiotest.$(OBJEXT): $(go_testing_iotest_files) io.gox log.gox os.gox\n+testing/iotest.lo: $(go_testing_iotest_files) io.gox log.gox os.gox\n \t$(BUILDPACKAGE)\n-testing/libiotest.lo: testing/libiotest.$(OBJEXT)\n-testing/libiotest.la: testing/libiotest.lo\n testing/iotest/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/iotest\n \t$(CHECK)\n .PHONY: testing/iotest/check\n \n-testing/libquick.$(OBJEXT): $(go_testing_quick_files) flag.gox fmt.gox \\\n-\t\tmath.gox os.gox rand.gox reflect.gox strings.gox\n+testing/quick.lo: $(go_testing_quick_files) flag.gox fmt.gox math.gox os.gox \\\n+\t\trand.gox reflect.gox strings.gox\n \t$(BUILDPACKAGE)\n-testing/libquick.lo: testing/libquick.$(OBJEXT)\n-testing/libquick.la: testing/libquick.lo\n testing/quick/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/quick\n \t$(CHECK)\n .PHONY: testing/quick/check\n \n-testing/libscript.$(OBJEXT): $(go_testing_script_files) fmt.gox os.gox \\\n-\t\trand.gox reflect.gox strings.gox\n+testing/script.lo: $(go_testing_script_files) fmt.gox os.gox rand.gox \\\n+\t\treflect.gox strings.gox\n \t$(BUILDPACKAGE)\n-testing/libscript.lo: testing/libscript.$(OBJEXT)\n-testing/libscript.la: testing/libscript.lo\n testing/script/check: $(CHECK_DEPS)\n \t@$(MKDIR_P) testing/script\n \t$(CHECK)\n@@ -5032,285 +4762,280 @@ s-sysinfo: $(srcdir)/mksysinfo.sh config.h\n \t$(SHELL) $(srcdir)/../move-if-change tmp-sysinfo.go sysinfo.go\n \t$(STAMP) $@\n \n-syscalls/syscall.$(OBJEXT): $(go_syscall_files) $(go_syscall_c_files) sync.gox\n-\trm -f syscall.gox syscalls/libsyscall.a\n-\ttest -d syscalls || $(MKDIR_P) syscalls\n-\tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g' -e's/[^ ]*\\.c//g'`; \\\n-\t$(LTGOCOMPILE) -I . -c -fgo-prefix=\"libgo_syscalls\" -o syscalls/syscall.$(OBJEXT) $$files\n-syscalls/errno.$(OBJEXT): $(srcdir)/syscalls/errno.c syscalls/syscall.$(OBJEXT)\n-\t$(LTCOMPILE) -c -o syscalls/errno.$(OBJEXT) $(srcdir)/syscalls/errno.c\n-syscalls/libsyscall.la: syscalls/syscall.$(OBJEXT) syscalls/errno.$(OBJEXT)\n-\t$(LINK) syscalls/syscall.lo syscalls/errno.lo\n-\n-asn1.gox: asn1/libasn1.$(OBJEXT)\n+syscalls/syscall.lo: $(go_syscall_files) sync.gox\n+\t$(BUILDPACKAGE)\n+syscalls/errno.lo: $(go_syscall_c_files) syscalls/syscall.lo\n+\t$(LTCOMPILE) -c -o $@ $(srcdir)/syscalls/errno.c\n+\n+asn1.gox: asn1/asn1.lo\n \t$(BUILDGOX)\n-big.gox: big/libbig.$(OBJEXT)\n+big.gox: big/big.lo\n \t$(BUILDGOX)\n-bufio.gox: bufio/libbufio.$(OBJEXT)\n+bufio.gox: bufio/bufio.lo\n \t$(BUILDGOX)\n-bytes.gox: bytes/bytes.$(OBJEXT)\n+bytes.gox: bytes/bytes.lo\n \t$(BUILDGOX)\n-cmath.gox: cmath/libcmath.$(OBJEXT)\n+cmath.gox: cmath/cmath.lo\n \t$(BUILDGOX)\n-ebnf.gox: ebnf/libebnf.$(OBJEXT)\n+ebnf.gox: ebnf/ebnf.lo\n \t$(BUILDGOX)\n-exec.gox: exec/libexec.$(OBJEXT)\n+exec.gox: exec/exec.lo\n \t$(BUILDGOX)\n-expvar.gox: expvar/libexpvar.$(OBJEXT)\n+expvar.gox: expvar/expvar.lo\n \t$(BUILDGOX)\n-flag.gox: flag/libflag.$(OBJEXT)\n+flag.gox: flag/flag.lo\n \t$(BUILDGOX)\n-fmt.gox: fmt/libfmt.$(OBJEXT)\n+fmt.gox: fmt/fmt.lo\n \t$(BUILDGOX)\n-gob.gox: gob/libgob.$(OBJEXT)\n+gob.gox: gob/gob.lo\n \t$(BUILDGOX)\n-hash.gox: hash/libhash.$(OBJEXT)\n+hash.gox: hash/hash.lo\n \t$(BUILDGOX)\n-html.gox: html/libhtml.$(OBJEXT)\n+html.gox: html/html.lo\n \t$(BUILDGOX)\n-http.gox: http/libhttp.$(OBJEXT)\n+http.gox: http/http.lo\n \t$(BUILDGOX)\n-image.gox: image/libimage.$(OBJEXT)\n+image.gox: image/image.lo\n \t$(BUILDGOX)\n-io.gox: io/libio.$(OBJEXT)\n+io.gox: io/io.lo\n \t$(BUILDGOX)\n-json.gox: json/libjson.$(OBJEXT)\n+json.gox: json/json.lo\n \t$(BUILDGOX)\n-log.gox: log/liblog.$(OBJEXT)\n+log.gox: log/log.lo\n \t$(BUILDGOX)\n-math.gox: math/libmath.$(OBJEXT)\n+math.gox: math/math.lo\n \t$(BUILDGOX)\n-mime.gox: mime/libmime.$(OBJEXT)\n+mime.gox: mime/mime.lo\n \t$(BUILDGOX)\n-net.gox: net/libnet.$(OBJEXT)\n+net.gox: net/net.lo\n \t$(BUILDGOX)\n-netchan.gox: netchan/libnetchan.$(OBJEXT)\n+netchan.gox: netchan/netchan.lo\n \t$(BUILDGOX)\n-os.gox: os/libos.$(OBJEXT)\n+os.gox: os/os.lo\n \t$(BUILDGOX)\n-patch.gox: patch/libpatch.$(OBJEXT)\n+patch.gox: patch/patch.lo\n \t$(BUILDGOX)\n-path.gox: path/libpath.$(OBJEXT)\n+path.gox: path/path.lo\n \t$(BUILDGOX)\n-rand.gox: rand/librand.$(OBJEXT)\n+rand.gox: rand/rand.lo\n \t$(BUILDGOX)\n-reflect.gox: reflect/libreflect.$(OBJEXT)\n+reflect.gox: reflect/reflect.lo\n \t$(BUILDGOX)\n-regexp.gox: regexp/libregexp.$(OBJEXT)\n+regexp.gox: regexp/regexp.lo\n \t$(BUILDGOX)\n-rpc.gox: rpc/librpc.$(OBJEXT)\n+rpc.gox: rpc/rpc.lo\n \t$(BUILDGOX)\n-runtime.gox: runtime/libruntime.$(OBJEXT)\n+runtime.gox: runtime/runtime.lo\n \t$(BUILDGOX)\n-scanner.gox: scanner/libscanner.$(OBJEXT)\n+scanner.gox: scanner/scanner.lo\n \t$(BUILDGOX)\n-smtp.gox: smtp/libsmtp.$(OBJEXT)\n+smtp.gox: smtp/smtp.lo\n \t$(BUILDGOX)\n-sort.gox: sort/libsort.$(OBJEXT)\n+sort.gox: sort/sort.lo\n \t$(BUILDGOX)\n-strconv.gox: strconv/libstrconv.$(OBJEXT)\n+strconv.gox: strconv/strconv.lo\n \t$(BUILDGOX)\n-strings.gox: strings/libstrings.$(OBJEXT)\n+strings.gox: strings/strings.lo\n \t$(BUILDGOX)\n-sync.gox: sync/mutex.$(OBJEXT)\n+sync.gox: sync/mutex.lo\n \t$(BUILDGOX)\n-syslog.gox: syslog/syslog.$(OBJEXT)\n+syslog.gox: syslog/syslog.lo\n \t$(BUILDGOX)\n-syscall.gox: syscalls/syscall.$(OBJEXT)\n+syscall.gox: syscalls/syscall.lo\n \t$(BUILDGOX)\n-tabwriter.gox: tabwriter/libtabwriter.$(OBJEXT)\n+tabwriter.gox: tabwriter/tabwriter.lo\n \t$(BUILDGOX)\n-template.gox: template/libtemplate.$(OBJEXT)\n+template.gox: template/template.lo\n \t$(BUILDGOX)\n-testing.gox: testing/libtesting.$(OBJEXT)\n+testing.gox: testing/testing.lo\n \t$(BUILDGOX)\n-time.gox: time/libtime.$(OBJEXT)\n+time.gox: time/time.lo\n \t$(BUILDGOX)\n-try.gox: try/libtry.$(OBJEXT)\n+try.gox: try/try.lo\n \t$(BUILDGOX)\n-unicode.gox: unicode/libunicode.$(OBJEXT)\n+unicode.gox: unicode/unicode.lo\n \t$(BUILDGOX)\n-utf16.gox: utf16/libutf16.$(OBJEXT)\n+utf16.gox: utf16/utf16.lo\n \t$(BUILDGOX)\n-utf8.gox: utf8/libutf8.$(OBJEXT)\n+utf8.gox: utf8/utf8.lo\n \t$(BUILDGOX)\n-websocket.gox: websocket/libwebsocket.$(OBJEXT)\n+websocket.gox: websocket/websocket.lo\n \t$(BUILDGOX)\n-xml.gox: xml/libxml.$(OBJEXT)\n+xml.gox: xml/xml.lo\n \t$(BUILDGOX)\n \n-archive/tar.gox: archive/libtar.$(OBJEXT)\n+archive/tar.gox: archive/tar.lo\n \t$(BUILDGOX)\n-archive/zip.gox: archive/libzip.$(OBJEXT)\n+archive/zip.gox: archive/zip.lo\n \t$(BUILDGOX)\n \n-compress/flate.gox: compress/libflate.$(OBJEXT)\n+compress/flate.gox: compress/flate.lo\n \t$(BUILDGOX)\n-compress/gzip.gox: compress/libgzip.$(OBJEXT)\n+compress/gzip.gox: compress/gzip.lo\n \t$(BUILDGOX)\n-compress/zlib.gox: compress/libzlib.$(OBJEXT)\n+compress/zlib.gox: compress/zlib.lo\n \t$(BUILDGOX)\n \n-container/heap.gox: container/libheap.$(OBJEXT)\n+container/heap.gox: container/heap.lo\n \t$(BUILDGOX)\n-container/list.gox: container/liblist.$(OBJEXT)\n+container/list.gox: container/list.lo\n \t$(BUILDGOX)\n-container/ring.gox: container/libring.$(OBJEXT)\n+container/ring.gox: container/ring.lo\n \t$(BUILDGOX)\n-container/vector.gox: container/libvector.$(OBJEXT)\n+container/vector.gox: container/vector.lo\n \t$(BUILDGOX)\n \n-crypto/aes.gox: crypto/libaes.$(OBJEXT)\n+crypto/aes.gox: crypto/aes.lo\n \t$(BUILDGOX)\n-crypto/block.gox: crypto/libblock.$(OBJEXT)\n+crypto/block.gox: crypto/block.lo\n \t$(BUILDGOX)\n-crypto/blowfish.gox: crypto/libblowfish.$(OBJEXT)\n+crypto/blowfish.gox: crypto/blowfish.lo\n \t$(BUILDGOX)\n-crypto/cast5.gox: crypto/libcast5.$(OBJEXT)\n+crypto/cast5.gox: crypto/cast5.lo\n \t$(BUILDGOX)\n-crypto/cipher.gox: crypto/libcipher.$(OBJEXT)\n+crypto/cipher.gox: crypto/cipher.lo\n \t$(BUILDGOX)\n-crypto/elliptic.gox: crypto/libelliptic.$(OBJEXT)\n+crypto/elliptic.gox: crypto/elliptic.lo\n \t$(BUILDGOX)\n-crypto/hmac.gox: crypto/libhmac.$(OBJEXT)\n+crypto/hmac.gox: crypto/hmac.lo\n \t$(BUILDGOX)\n-crypto/md4.gox: crypto/libmd4.$(OBJEXT)\n+crypto/md4.gox: crypto/md4.lo\n \t$(BUILDGOX)\n-crypto/md5.gox: crypto/libmd5.$(OBJEXT)\n+crypto/md5.gox: crypto/md5.lo\n \t$(BUILDGOX)\n-crypto/ocsp.gox: crypto/libocsp.$(OBJEXT)\n+crypto/ocsp.gox: crypto/ocsp.lo\n \t$(BUILDGOX)\n-crypto/rand.gox: crypto/librand.$(OBJEXT)\n+crypto/rand.gox: crypto/rand.lo\n \t$(BUILDGOX)\n-crypto/rc4.gox: crypto/librc4.$(OBJEXT)\n+crypto/rc4.gox: crypto/rc4.lo\n \t$(BUILDGOX)\n-crypto/ripemd160.gox: crypto/libripemd160.$(OBJEXT)\n+crypto/ripemd160.gox: crypto/ripemd160.lo\n \t$(BUILDGOX)\n-crypto/rsa.gox: crypto/librsa.$(OBJEXT)\n+crypto/rsa.gox: crypto/rsa.lo\n \t$(BUILDGOX)\n-crypto/sha1.gox: crypto/libsha1.$(OBJEXT)\n+crypto/sha1.gox: crypto/sha1.lo\n \t$(BUILDGOX)\n-crypto/sha256.gox: crypto/libsha256.$(OBJEXT)\n+crypto/sha256.gox: crypto/sha256.lo\n \t$(BUILDGOX)\n-crypto/sha512.gox: crypto/libsha512.$(OBJEXT)\n+crypto/sha512.gox: crypto/sha512.lo\n \t$(BUILDGOX)\n-crypto/subtle.gox: crypto/libsubtle.$(OBJEXT)\n+crypto/subtle.gox: crypto/subtle.lo\n \t$(BUILDGOX)\n-crypto/tls.gox: crypto/libtls.$(OBJEXT)\n+crypto/tls.gox: crypto/tls.lo\n \t$(BUILDGOX)\n-crypto/twofish.gox: crypto/libtwofish.$(OBJEXT)\n+crypto/twofish.gox: crypto/twofish.lo\n \t$(BUILDGOX)\n-crypto/x509.gox: crypto/libx509.$(OBJEXT)\n+crypto/x509.gox: crypto/x509.lo\n \t$(BUILDGOX)\n-crypto/xtea.gox: crypto/libxtea.$(OBJEXT)\n+crypto/xtea.gox: crypto/xtea.lo\n \t$(BUILDGOX)\n \n-crypto/openpgp/armor.gox: crypto/openpgp/libarmor.$(OBJEXT)\n+crypto/openpgp/armor.gox: crypto/openpgp/armor.lo\n \t$(BUILDGOX)\n-crypto/openpgp/error.gox: crypto/openpgp/liberror.$(OBJEXT)\n+crypto/openpgp/error.gox: crypto/openpgp/error.lo\n \t$(BUILDGOX)\n-crypto/openpgp/s2k.gox: crypto/openpgp/libs2k.$(OBJEXT)\n+crypto/openpgp/s2k.gox: crypto/openpgp/s2k.lo\n \t$(BUILDGOX)\n \n-debug/dwarf.gox: debug/libdwarf.$(OBJEXT)\n+debug/dwarf.gox: debug/dwarf.lo\n \t$(BUILDGOX)\n-debug/elf.gox: debug/libelf.$(OBJEXT)\n+debug/elf.gox: debug/elf.lo\n \t$(BUILDGOX)\n-debug/gosym.gox: debug/libgosym.$(OBJEXT)\n+debug/gosym.gox: debug/gosym.lo\n \t$(BUILDGOX)\n-debug/macho.gox: debug/libmacho.$(OBJEXT)\n+debug/macho.gox: debug/macho.lo\n \t$(BUILDGOX)\n-debug/pe.gox: debug/libpe.$(OBJEXT)\n+debug/pe.gox: debug/pe.lo\n \t$(BUILDGOX)\n-debug/proc.gox: debug/libproc.$(OBJEXT)\n+debug/proc.gox: debug/proc.lo\n \t$(BUILDGOX)\n \n-encoding/ascii85.gox: encoding/libascii85.$(OBJEXT)\n+encoding/ascii85.gox: encoding/ascii85.lo\n \t$(BUILDGOX)\n-encoding/base32.gox: encoding/libbase32.$(OBJEXT)\n+encoding/base32.gox: encoding/base32.lo\n \t$(BUILDGOX)\n-encoding/base64.gox: encoding/libbase64.$(OBJEXT)\n+encoding/base64.gox: encoding/base64.lo\n \t$(BUILDGOX)\n-encoding/binary.gox: encoding/libbinary.$(OBJEXT)\n+encoding/binary.gox: encoding/binary.lo\n \t$(BUILDGOX)\n-encoding/git85.gox: encoding/libgit85.$(OBJEXT)\n+encoding/git85.gox: encoding/git85.lo\n \t$(BUILDGOX)\n-encoding/hex.gox: encoding/libhex.$(OBJEXT)\n+encoding/hex.gox: encoding/hex.lo\n \t$(BUILDGOX)\n-encoding/line.gox: encoding/libline.$(OBJEXT)\n+encoding/line.gox: encoding/line.lo\n \t$(BUILDGOX)\n-encoding/pem.gox: encoding/libpem.$(OBJEXT)\n+encoding/pem.gox: encoding/pem.lo\n \t$(BUILDGOX)\n \n-exp/datafmt.gox: exp/libdatafmt.$(OBJEXT)\n+exp/datafmt.gox: exp/datafmt.lo\n \t$(BUILDGOX)\n-exp/draw.gox: exp/libdraw.$(OBJEXT)\n+exp/draw.gox: exp/draw.lo\n \t$(BUILDGOX)\n-exp/eval.gox: exp/libeval.$(OBJEXT)\n+exp/eval.gox: exp/eval.lo\n \t$(BUILDGOX)\n \n-go/ast.gox: go/libast.$(OBJEXT)\n+go/ast.gox: go/ast.lo\n \t$(BUILDGOX)\n-go/doc.gox: go/libdoc.$(OBJEXT)\n+go/doc.gox: go/doc.lo\n \t$(BUILDGOX)\n-go/parser.gox: go/libparser.$(OBJEXT)\n+go/parser.gox: go/parser.lo\n \t$(BUILDGOX)\n-go/printer.gox: go/libprinter.$(OBJEXT)\n+go/printer.gox: go/printer.lo\n \t$(BUILDGOX)\n-go/scanner.gox: go/libscanner.$(OBJEXT)\n+go/scanner.gox: go/scanner.lo\n \t$(BUILDGOX)\n-go/token.gox: go/libtoken.$(OBJEXT)\n+go/token.gox: go/token.lo\n \t$(BUILDGOX)\n-go/typechecker.gox: go/libtypechecker.$(OBJEXT)\n+go/typechecker.gox: go/typechecker.lo\n \t$(BUILDGOX)\n \n-hash/adler32.gox: hash/libadler32.$(OBJEXT)\n+hash/adler32.gox: hash/adler32.lo\n \t$(BUILDGOX)\n-hash/crc32.gox: hash/libcrc32.$(OBJEXT)\n+hash/crc32.gox: hash/crc32.lo\n \t$(BUILDGOX)\n-hash/crc64.gox: hash/libcrc64.$(OBJEXT)\n+hash/crc64.gox: hash/crc64.lo\n \t$(BUILDGOX)\n \n-http/pprof.gox: http/libpprof.$(OBJEXT)\n+http/pprof.gox: http/pprof.lo\n \t$(BUILDGOX)\n \n-image/jpeg.gox: image/libjpeg.$(OBJEXT)\n+image/jpeg.gox: image/jpeg.lo\n \t$(BUILDGOX)\n-image/png.gox: image/libpng.$(OBJEXT)\n+image/png.gox: image/png.lo\n \t$(BUILDGOX)\n \n-index/suffixarray.gox: index/libsuffixarray.$(OBJEXT)\n+index/suffixarray.gox: index/suffixarray.lo\n \t$(BUILDGOX)\n \n-io/ioutil.gox: io/libioutil.$(OBJEXT)\n+io/ioutil.gox: io/ioutil.lo\n \t$(BUILDGOX)\n \n-mime/multipart.gox: mime/libmultipart.$(OBJEXT)\n+mime/multipart.gox: mime/multipart.lo\n \t$(BUILDGOX)\n \n-net/dict.gox: net/libdict.$(OBJEXT)\n+net/dict.gox: net/dict.lo\n \t$(BUILDGOX)\n-net/textproto.gox: net/libtextproto.$(OBJEXT)\n+net/textproto.gox: net/textproto.lo\n \t$(BUILDGOX)\n \n-os/inotify.gox: os/libinotify.$(OBJEXT)\n+os/inotify.gox: os/inotify.lo\n \t$(BUILDGOX)\n-os/signal.gox: os/libsignal.$(OBJEXT)\n+os/signal.gox: os/signal.lo\n \t$(BUILDGOX)\n \n-rpc/jsonrpc.gox: rpc/libjsonrpc.$(OBJEXT)\n+rpc/jsonrpc.gox: rpc/jsonrpc.lo\n \t$(BUILDGOX)\n \n-runtime/debug.gox: runtime/libdebug.$(OBJEXT)\n+runtime/debug.gox: runtime/debug.lo\n \t$(BUILDGOX)\n-runtime/pprof.gox: runtime/libpprof.$(OBJEXT)\n+runtime/pprof.gox: runtime/pprof.lo\n \t$(BUILDGOX)\n \n-testing/iotest.gox: testing/libiotest.$(OBJEXT)\n+testing/iotest.gox: testing/iotest.lo\n \t$(BUILDGOX)\n-testing/quick.gox: testing/libquick.$(OBJEXT)\n+testing/quick.gox: testing/quick.lo\n \t$(BUILDGOX)\n-testing/script.gox: testing/libscript.$(OBJEXT)\n+testing/script.gox: testing/script.lo\n \t$(BUILDGOX)\n \n check-recursive: $(TEST_PACKAGES)"}]}