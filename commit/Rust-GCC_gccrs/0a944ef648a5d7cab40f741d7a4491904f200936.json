{"sha": "0a944ef648a5d7cab40f741d7a4491904f200936", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE5NDRlZjY0OGE1ZDdjYWI0MGY3NDFkN2E0NDkxOTA0ZjIwMDkzNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@act-europe.fr", "date": "2004-01-23T16:52:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-01-23T16:52:07Z"}, "message": "fold-const.c (fold_binary_op_with_conditional_arg): Only build a COMPOUND_EXPR if 'arg' is really a SAVE_EXPR.\n\n\t* fold-const.c (fold_binary_op_with_conditional_arg): Only\n\tbuild a COMPOUND_EXPR if 'arg' is really a SAVE_EXPR.\n\nCo-Authored-By: Olivier Hainque <hainque@act-europe.fr>\n\nFrom-SVN: r76434", "tree": {"sha": "b67a2d42933b08f285794356a649b4d0a065dc1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b67a2d42933b08f285794356a649b4d0a065dc1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a944ef648a5d7cab40f741d7a4491904f200936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a944ef648a5d7cab40f741d7a4491904f200936", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a944ef648a5d7cab40f741d7a4491904f200936", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a944ef648a5d7cab40f741d7a4491904f200936/comments", "author": null, "committer": null, "parents": [{"sha": "22352844c944c3d4fb2e70854484d346fffa9733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22352844c944c3d4fb2e70854484d346fffa9733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22352844c944c3d4fb2e70854484d346fffa9733"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "20e4249986d2f0299020e34fabca11f13feda2b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a944ef648a5d7cab40f741d7a4491904f200936/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a944ef648a5d7cab40f741d7a4491904f200936/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a944ef648a5d7cab40f741d7a4491904f200936", "patch": "@@ -1,3 +1,9 @@\n+2004-01-23  Eric Botcazou  <ebotcazou@act-europe.fr>\n+            Olivier Hainque  <hainque@act-europe.fr>\n+\n+\t* fold-const.c (fold_binary_op_with_conditional_arg): Only\n+\tbuild a COMPOUND_EXPR if 'arg' is really a SAVE_EXPR.\n+\n 2004-01-23  Daniel Jacobowitz  <drow@mvista.com>\n \n \t* config/arm/arm.c (arm_legitimate_address_p): Don't check the mode"}, {"sha": "de72a76f1ff6a6307eb429ef1bf12ca742e5b88b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a944ef648a5d7cab40f741d7a4491904f200936/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a944ef648a5d7cab40f741d7a4491904f200936/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=0a944ef648a5d7cab40f741d7a4491904f200936", "patch": "@@ -4749,7 +4749,7 @@ fold_binary_op_with_conditional_arg (enum tree_code code, tree type,\n \t{\n \t  arg = save_expr (arg);\n \t  lhs = rhs = 0;\n-\t  save = 1;\n+\t  save = saved_expr_p (arg);\n \t}\n     }\n \n@@ -4760,6 +4760,12 @@ fold_binary_op_with_conditional_arg (enum tree_code code, tree type,\n \n   test = fold (build (COND_EXPR, type, test, lhs, rhs));\n \n+  /* If ARG involves a SAVE_EXPR, we need to ensure it is evaluated\n+     ahead of the COND_EXPR we made.  Otherwise we would have it only\n+     evaluated in one branch, with the other branch using the result\n+     but missing the evaluation code.  Beware that the save_expr call\n+     above might not return a SAVE_EXPR, so testing the TREE_CODE\n+     of ARG is not enough to decide here. \ufffd*/\n   if (save)\n     return build (COMPOUND_EXPR, type,\n \t\t  convert (void_type_node, arg),"}]}