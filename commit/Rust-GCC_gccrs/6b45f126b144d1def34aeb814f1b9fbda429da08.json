{"sha": "6b45f126b144d1def34aeb814f1b9fbda429da08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI0NWYxMjZiMTQ0ZDFkZWYzNGFlYjgxNGYxYjlmYmRhNDI5ZGEwOA==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-08T09:35:13Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-08T09:35:13Z"}, "message": "sh.md (*prefetch_i4, [...]): Merge into ...\n\n\t* config/sh/sh.md (*prefetch_i4, prefetch_m2a): Merge into ...\n\t(*prefetch): ... this new insn.\n\n\t* gcc.target/sh/sh2a-prefetch.c: Rename to ...\n\t* gcc.target/sh/prefetch.c: ... this.  Enable test case for m4*.\n\nFrom-SVN: r186225", "tree": {"sha": "d5c3afa74ce5af5731c5b186f84525889c80be80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5c3afa74ce5af5731c5b186f84525889c80be80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b45f126b144d1def34aeb814f1b9fbda429da08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b45f126b144d1def34aeb814f1b9fbda429da08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b45f126b144d1def34aeb814f1b9fbda429da08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b45f126b144d1def34aeb814f1b9fbda429da08/comments", "author": null, "committer": null, "parents": [{"sha": "5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af6fa0b38c481617551b96f1c82bbf25f2f35c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5af6fa0b38c481617551b96f1c82bbf25f2f35c8"}], "stats": {"total": 51, "additions": 28, "deletions": 23}, "files": [{"sha": "ed9130e84766de708159df6968eca0430de86ed2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b45f126b144d1def34aeb814f1b9fbda429da08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b45f126b144d1def34aeb814f1b9fbda429da08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b45f126b144d1def34aeb814f1b9fbda429da08", "patch": "@@ -1,3 +1,8 @@\n+2012-04-08  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh.md (*prefetch_i4, prefetch_m2a): Merge into ...\n+\t(*prefetch): ... this new insn.\n+\n 2012-04-07  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh.h (high_life_started): Remove"}, {"sha": "0fe9fca2bed45ede036bb72ab7771f3117dfa01e", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b45f126b144d1def34aeb814f1b9fbda429da08/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b45f126b144d1def34aeb814f1b9fbda429da08/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=6b45f126b144d1def34aeb814f1b9fbda429da08", "patch": "@@ -909,8 +909,10 @@\n \t\t       (match_operand:DI 1 \"arith_operand\" \"r\"))\n \t       (const_int 0)))]\n   \"TARGET_SH1\"\n-  \"* return output_branchy_insn (EQ, \\\"tst\\\\t%S1,%S0\\;bf\\\\t%l9\\;tst\\\\t%R1,%R0\\\",\n-\t\t\t\t insn, operands);\"\n+{\n+  return output_branchy_insn (EQ, \"tst\\t%S1,%S0;bf\\t%l9;tst\\t%R1,%R0\",\n+\t\t\t      insn, operands);\n+}\n   [(set_attr \"length\" \"6\")\n    (set_attr \"type\" \"arith3b\")])\n \n@@ -3156,7 +3158,6 @@ label:\n \t(and:SI (match_operand:SI 1 \"logical_reg_operand\" \"\")\n \t\t(match_operand:SI 2 \"logical_operand\" \"\")))]\n   \"\"\n-  \"\n {\n   if (TARGET_SH1\n       && CONST_INT_P (operands[2]) && INTVAL (operands[2]) == 255)\n@@ -3165,7 +3166,7 @@ label:\n \t\t\t\t       gen_lowpart (QImode, operands[1])));\n       DONE;\n     }\n-}\")\n+})\n \n (define_insn_and_split \"anddi3\"\n   [(set (match_operand:DI 0 \"arith_reg_dest\" \"=r,r,r\")\n@@ -3179,14 +3180,13 @@ label:\n   \"reload_completed\n    && ! logical_operand (operands[2], DImode)\"\n   [(const_int 0)]\n-  \"\n {\n   if ((unsigned)INTVAL (operands[2]) == (unsigned) 0xffffffff)\n     emit_insn (gen_mshflo_l_di (operands[0], operands[1], CONST0_RTX (DImode)));\n   else\n     emit_insn (gen_mshfhi_l_di (operands[0], CONST0_RTX (DImode), operands[1]));\n   DONE;\n-}\"\n+}\n   [(set_attr \"type\" \"arith_media\")])\n \n (define_insn \"andcsi3\"\n@@ -5638,7 +5638,9 @@ label:\n   \"TARGET_SH1\n    && (arith_reg_operand (operands[0], DImode)\n        || arith_reg_operand (operands[1], DImode))\"\n-  \"* return output_movedouble (insn, operands, DImode);\"\n+{\n+  return output_movedouble (insn, operands, DImode);\n+}\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"pcload,move,load,store,move,pcload,move,move\")])\n \n@@ -13559,14 +13561,6 @@ label:\n }\n   [(set_attr \"type\" \"other\")])\n \n-(define_insn \"*prefetch_i4\"\n-  [(prefetch (match_operand:SI 0 \"register_operand\" \"r\")\n-             (match_operand:SI 1 \"const_int_operand\" \"n\")\n-             (match_operand:SI 2 \"const_int_operand\" \"n\"))]\n-  \"(TARGET_HARD_SH4 || TARGET_SHCOMPACT) && !TARGET_VXWORKS_RTP\"\n-  \"pref\t@%0\";\n-  [(set_attr \"type\" \"other\")])\n-\n ;; In user mode, the \"pref\" instruction will raise a RADDERR exception\n ;; for accesses to [0x80000000,0xffffffff].  This makes it an unsuitable\n ;; implementation of __builtin_prefetch for VxWorks RTPs.\n@@ -13585,12 +13579,12 @@ label:\n     operands[0] = force_reg (Pmode, operands[0]);\n })\n \n-(define_insn \"prefetch_m2a\"\n+(define_insn \"*prefetch\"\n   [(prefetch (match_operand:SI 0 \"register_operand\" \"r\")\n \t     (match_operand:SI 1 \"const_int_operand\" \"n\")\n \t     (match_operand:SI 2 \"const_int_operand\" \"n\"))]\n-  \"TARGET_SH2A\"\n-  \"pref\\\\t@%0\"\n+  \"(TARGET_SH2A || TARGET_HARD_SH4 || TARGET_SHCOMPACT) && !TARGET_VXWORKS_RTP\"\n+  \"pref\t@%0\"\n   [(set_attr \"type\" \"other\")])\n \n (define_insn \"alloco_i\""}, {"sha": "49f0eb38433f282837601d4c5be788cd997546db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b45f126b144d1def34aeb814f1b9fbda429da08/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b45f126b144d1def34aeb814f1b9fbda429da08/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b45f126b144d1def34aeb814f1b9fbda429da08", "patch": "@@ -1,3 +1,8 @@\n+2012-04-08  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* gcc.target/sh/sh2a-prefetch.c: Rename to ...\n+\t* gcc.target/sh/prefetch.c: ... this.  Enable test case for m4*.\n+\n 2012-04-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/40973\n@@ -295,9 +300,9 @@\n 2012-03-21  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/50751\n-\t* gcc/target/sh/pr50751-1.c: New.\n-\t* gcc/target/sh/pr50751-2.c: New.\n-\t* gcc/target/sh/pr50751-3.c: New.\n+\t* gcc.target/sh/pr50751-1.c: New.\n+\t* gcc.target/sh/pr50751-2.c: New.\n+\t* gcc.target/sh/pr50751-3.c: New.\n \n 2012-03-21  Oleg Endo  <olegendo@gcc.gnu.org>\n "}, {"sha": "b34b115d6b8fde66d6ae2d8c7941f329549cd6c3", "filename": "gcc/testsuite/gcc.target/sh/prefetch.c", "status": "renamed", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b45f126b144d1def34aeb814f1b9fbda429da08/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fprefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b45f126b144d1def34aeb814f1b9fbda429da08/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fprefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fprefetch.c?ref=6b45f126b144d1def34aeb814f1b9fbda429da08", "patch": "@@ -1,7 +1,8 @@\n-/* Testcase to check generation of a SH2A specific instruction PREF @Rm.  */\n+/* Testcase to check generation of a SH4 and SH2A operand cache prefetch\n+   instruction PREF @Rm.  */\n /* { dg-do assemble {target sh*-*-*}}  */\n /* { dg-options \"-O0\" }  */\n-/* { dg-skip-if \"\" { \"sh*-*-*\" } \"*\" \"-m2a -m2a-nofpu -m2a-single -m2a-single-only\" }  */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"*\" } { \"-m2a*\" \"-m4*\" } }  */\n /* { dg-final { scan-assembler \"pref\"} }  */\n \n void", "previous_filename": "gcc/testsuite/gcc.target/sh/sh2a-prefetch.c"}]}