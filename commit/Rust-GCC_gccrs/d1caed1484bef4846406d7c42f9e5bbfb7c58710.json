{"sha": "d1caed1484bef4846406d7c42f9e5bbfb7c58710", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFjYWVkMTQ4NGJlZjQ4NDY0MDZkN2M0MmY5ZTViYmZiN2M1ODcxMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-11-16T12:02:29Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-11-16T12:02:29Z"}, "message": "Define/use hardware pointer type for stack unwind\n\n\tPR other/55333\n\t* include/sanitizer/common_interface_defs.h (uhwptr): New type\n\tfor hardware pointer.\n\t* sanitizer_common/sanitizer_stacktrace.cc (StackTrace::FastUnwindStack):\n\tReplace uptr with uhwptr for stack unwind.\n\nFrom-SVN: r193557", "tree": {"sha": "c820b9a2e4796f64daf0e40ac9e60c9dc6588120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c820b9a2e4796f64daf0e40ac9e60c9dc6588120"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1caed1484bef4846406d7c42f9e5bbfb7c58710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1caed1484bef4846406d7c42f9e5bbfb7c58710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1caed1484bef4846406d7c42f9e5bbfb7c58710", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1caed1484bef4846406d7c42f9e5bbfb7c58710/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8108af84a5783a1c7e328a8be2eef8330517c224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8108af84a5783a1c7e328a8be2eef8330517c224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8108af84a5783a1c7e328a8be2eef8330517c224"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "267aa42d4845b9c73fbb8dff2cf0325c2c9a47fd", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1caed1484bef4846406d7c42f9e5bbfb7c58710/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1caed1484bef4846406d7c42f9e5bbfb7c58710/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=d1caed1484bef4846406d7c42f9e5bbfb7c58710", "patch": "@@ -1,3 +1,11 @@\n+2012-11-16  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR other/55333\n+\t* include/sanitizer/common_interface_defs.h (uhwptr): New type\n+\tfor hardware pointer.\n+\t* sanitizer_common/sanitizer_stacktrace.cc (StackTrace::FastUnwindStack):\n+\tReplace uptr with uhwptr for stack unwind.\n+\n 2012-11-16  Dodji Seketeli  <dodji@redhat.com>\n \n \t* configure.tgt: Enable build on sparc linux."}, {"sha": "d78d2802a2b8161ead1ea653ec4f5b9ccdbdc9b7", "filename": "libsanitizer/include/sanitizer/common_interface_defs.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1caed1484bef4846406d7c42f9e5bbfb7c58710/libsanitizer%2Finclude%2Fsanitizer%2Fcommon_interface_defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1caed1484bef4846406d7c42f9e5bbfb7c58710/libsanitizer%2Finclude%2Fsanitizer%2Fcommon_interface_defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finclude%2Fsanitizer%2Fcommon_interface_defs.h?ref=d1caed1484bef4846406d7c42f9e5bbfb7c58710", "patch": "@@ -46,6 +46,13 @@ typedef signed   long long sptr;  // NOLINT\n typedef unsigned long uptr;  // NOLINT\n typedef signed   long sptr;  // NOLINT\n #endif  // defined(_WIN64)\n+#if defined(__x86_64__)\n+// Since x32 uses ILP32 data model in 64-bit hardware mode,  we must use\n+// 64-bit pointer to unwind stack frame.\n+typedef unsigned long long uhwptr;  // NOLINT\n+#else\n+typedef uptr uhwptr;   // NOLINT\n+#endif\n typedef unsigned char u8;\n typedef unsigned short u16;  // NOLINT\n typedef unsigned int u32;"}, {"sha": "915c4b8050a5d0c63c460af9b0513d171b72b5f9", "filename": "libsanitizer/sanitizer_common/sanitizer_stacktrace.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1caed1484bef4846406d7c42f9e5bbfb7c58710/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1caed1484bef4846406d7c42f9e5bbfb7c58710/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.cc?ref=d1caed1484bef4846406d7c42f9e5bbfb7c58710", "patch": "@@ -120,18 +120,18 @@ void StackTrace::FastUnwindStack(uptr pc, uptr bp,\n                                  uptr stack_top, uptr stack_bottom) {\n   CHECK(size == 0 && trace[0] == pc);\n   size = 1;\n-  uptr *frame = (uptr*)bp;\n-  uptr *prev_frame = frame;\n+  uhwptr *frame = (uhwptr *)bp;\n+  uhwptr *prev_frame = frame;\n   while (frame >= prev_frame &&\n-         frame < (uptr*)stack_top - 2 &&\n-         frame > (uptr*)stack_bottom &&\n+         frame < (uhwptr *)stack_top - 2 &&\n+         frame > (uhwptr *)stack_bottom &&\n          size < max_size) {\n-    uptr pc1 = frame[1];\n+    uhwptr pc1 = frame[1];\n     if (pc1 != pc) {\n-      trace[size++] = pc1;\n+      trace[size++] = (uptr) pc1;\n     }\n     prev_frame = frame;\n-    frame = (uptr*)frame[0];\n+    frame = (uhwptr *)frame[0];\n   }\n }\n "}]}