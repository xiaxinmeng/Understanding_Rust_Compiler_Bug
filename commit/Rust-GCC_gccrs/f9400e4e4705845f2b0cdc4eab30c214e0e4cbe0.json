{"sha": "f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk0MDBlNGU0NzA1ODQ1ZjJiMGNkYzRlYWIzMGMyMTRlMGU0Y2JlMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-20T09:29:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-08-20T09:29:48Z"}, "message": "openmp: Diagnose some superfluous commas in OpenMP parsing\n\nWhile working on error directive, I've noticed a few spots in OpenMP\nparsing where we consume and don't diagnose superfluous commas at the end\n(either of depend sink arguments or at the end of requires pragma).\n\n2021-08-20  Jakub Jelinek  <jakub@redhat.com>\n\ngcc/c/\n\t* c-parser.c (c_parser_omp_clause_depend_sink): Reject spurious\n\tcomma at the end of list.\n\t(c_parser_omp_requires): Likewise.\ngcc/cp/\n\t* parser.c (cp_parser_omp_clause_depend_sink): Reject spurious\n\tcomma at the end of list.  Don't parse closing paren here...\n\t(cp_parser_omp_clause_depend): ... but here instead.\ngcc/testsuite/\n\t* c-c++-common/gomp/sink-5.c: New test.\n\t* c-c++-common/gomp/requires-3.c: Add test for spurious comma\n\tat the end of pragma line.", "tree": {"sha": "2cb83ba088c693e989434011fa757a5c52624b36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cb83ba088c693e989434011fa757a5c52624b36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b777f228b481ae881a7fbb09de367a053740932c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b777f228b481ae881a7fbb09de367a053740932c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b777f228b481ae881a7fbb09de367a053740932c"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "ab79e9c0ea82ffb1035198ac6ae7238114b1a090", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0", "patch": "@@ -15481,7 +15481,9 @@ c_parser_omp_clause_depend_sink (c_parser *parser, location_t clause_loc,\n \t    OMP_CLAUSE_DEPEND_SINK_NEGATIVE (vec) = 1;\n \t}\n \n-      if (c_parser_next_token_is_not (parser, CPP_COMMA))\n+      if (c_parser_next_token_is_not (parser, CPP_COMMA)\n+\t  || c_parser_peek_2nd_token (parser)->type != CPP_NAME\n+\t  || c_parser_peek_2nd_token (parser)->id_kind != C_ID_ID)\n \tbreak;\n \n       c_parser_consume_token (parser);\n@@ -21663,7 +21665,9 @@ c_parser_omp_requires (c_parser *parser)\n   location_t loc = c_parser_peek_token (parser)->location;\n   while (c_parser_next_token_is_not (parser, CPP_PRAGMA_EOL))\n     {\n-      if (!first && c_parser_next_token_is (parser, CPP_COMMA))\n+      if (!first\n+\t  && c_parser_next_token_is (parser, CPP_COMMA)\n+\t  && c_parser_peek_2nd_token (parser)->type == CPP_NAME)\n \tc_parser_consume_token (parser);\n \n       first = false;"}, {"sha": "d321364220cab8d84a6ed8bcf10ecf7dde7a8b84", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0", "patch": "@@ -38465,13 +38465,14 @@ cp_parser_omp_clause_depend_sink (cp_parser *parser, location_t clause_loc,\n \t    OMP_CLAUSE_DEPEND_SINK_NEGATIVE (vec) = 1;\n \t}\n \n-      if (cp_lexer_next_token_is_not (parser->lexer, CPP_COMMA))\n+      if (cp_lexer_next_token_is_not (parser->lexer, CPP_COMMA)\n+\t  || !cp_lexer_nth_token_is (parser->lexer, 2, CPP_NAME))\n \tbreak;\n \n       cp_lexer_consume_token (parser->lexer);\n     }\n \n-  if (cp_parser_require (parser, CPP_CLOSE_PAREN, RT_CLOSE_PAREN) && vec)\n+  if (vec)\n     {\n       tree u = build_omp_clause (clause_loc, OMP_CLAUSE_DEPEND);\n       OMP_CLAUSE_DEPEND_KIND (u) = OMP_CLAUSE_DEPEND_SINK;\n@@ -38791,7 +38792,13 @@ cp_parser_omp_clause_depend (cp_parser *parser, tree list, location_t loc)\n     goto resync_fail;\n \n   if (kind == OMP_CLAUSE_DEPEND_SINK)\n-    nlist = cp_parser_omp_clause_depend_sink (parser, loc, list);\n+    {\n+      nlist = cp_parser_omp_clause_depend_sink (parser, loc, list);\n+      if (!parens.require_close (parser))\n+\tcp_parser_skip_to_closing_parenthesis (parser, /*recovering=*/true,\n+\t\t\t\t\t       /*or_comma=*/false,\n+\t\t\t\t\t       /*consume_paren=*/true);\n+    }\n   else\n     {\n       nlist = cp_parser_omp_var_list_no_open (parser, OMP_CLAUSE_DEPEND,"}, {"sha": "bd2479ba8ffa59a92cd9fb09a2a938b7d9d3f4dd", "filename": "gcc/testsuite/c-c++-common/gomp/requires-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Frequires-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Frequires-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Frequires-3.c?ref=f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0", "patch": "@@ -3,3 +3,4 @@\n #pragma omp requires atomic_default_mem_order(foobar)\t/* { dg-error \"expected 'seq_cst', 'relaxed' or 'acq_rel'\" } */\n #pragma omp requires atomic_default_mem_order (\t/* { dg-error \"expected 'seq_cst', 'relaxed' or 'acq_rel'\" } */\n /* { dg-error \"expected '\\\\\\)' before end of line\" \"\" { target *-*-* } .-1 } */\n+#pragma omp requires atomic_default_mem_order(seq_cst),\t/* { dg-error \"expected end of line before ',' token\" } */"}, {"sha": "4fbaa8a03cb06aa6d7c46be23bde6e11d971b5c8", "filename": "gcc/testsuite/c-c++-common/gomp/sink-5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fsink-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fsink-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fsink-5.c?ref=f9400e4e4705845f2b0cdc4eab30c214e0e4cbe0", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+\n+void bar (int);\n+\n+void\n+foo ()\n+{\n+  int i;\n+#pragma omp parallel for ordered(1)\n+  for (i = 0; i < 100; ++i)\n+    {\n+#pragma omp ordered depend(sink:i-1,)\t/* { dg-error \"expected '\\\\\\)' before ',' token\" } */\n+      bar (i);\n+#pragma omp ordered depend(source)\n+    }\n+}"}]}