{"sha": "53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNkOGE4YWMyMmYxZGE3MDI4OGJhNDk2YTBmNjNjYTI2ZjNlNzBkZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-04-09T18:44:07Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-04-09T18:44:07Z"}, "message": "re PR fortran/13257 ([4.0 only] Error instead of warning for missing comma in format string)\n\nPR fortran/13257\n\nfortran/ChangeLog:\n\t* io.c (check_format): Allow an optional comma\n\tbetween descriptors.\n\nlibgfortran/ChangeLog:\n\t* format.c (parse_format_list): Allow an optional comma\n\tbetween descriptors.\n\ntestsuite/ChangeLog:\n\t* comma_format_extension_[1234].f: New tests.\n\nFrom-SVN: r97919", "tree": {"sha": "c994c1aa2ba0c5a038c6f170fcd097a4bd19d085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c994c1aa2ba0c5a038c6f170fcd097a4bd19d085"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/comments", "author": null, "committer": null, "parents": [{"sha": "9d30f3c190d89f886600bd4ccfe33d62d78adc51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d30f3c190d89f886600bd4ccfe33d62d78adc51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d30f3c190d89f886600bd4ccfe33d62d78adc51"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "5912cd6d1db585fa1cd5ca9200f077504297b208", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "patch": "@@ -1,3 +1,9 @@\n+2005-04-09  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR fortran/13257\n+\t* io.c (check_format): Allow an optional comma\n+\tbetween descriptors.\n+\n 2005-04-09  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* match.c (match_arithmetic_if): Remove gfc_ prefix and correct"}, {"sha": "90eb855016d772d06b5db26938bbbe2f087267dc", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "patch": "@@ -433,6 +433,7 @@ check_format (void)\n format_item:\n   /* In this state, the next thing has to be a format item.  */\n   t = format_lex ();\n+format_item_1:\n   switch (t)\n     {\n     case FMT_POSINT:\n@@ -701,8 +702,10 @@ check_format (void)\n       goto syntax;\n \n     default:\n-      error = \"Missing comma\";\n-      goto syntax;\n+      if (gfc_notify_std (GFC_STD_GNU, \"Extension: Missing comma at %C\")\n+\t  == FAILURE)\n+\treturn FAILURE;\n+      goto format_item_1;\n     }\n \n optional_comma:"}, {"sha": "63ea6a80ca415071d70831b20db110608c1efa7f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "patch": "@@ -1,3 +1,8 @@\n+2005-04-09  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR fortran/13257\n+\t* comma_format_extension_[1234].f: New tests.\n+\n 2005-04-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/tree-ssa/stdarg-1.c: New test."}, {"sha": "a3a5a98f155f858367f3153f4f5d87e2c8474dd1", "filename": "gcc/testsuite/gfortran.dg/comma_format_extension_1.f", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_1.f?ref=53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-options \"\" }\n+! test that the extension for a missing comma is accepted\n+\n+      subroutine mysub\n+      dimension ibar(5)\n+      write (3,1001) ( ibar(m), m = 1, 5 )\n+\n+ 1001 format (/5x,' ',i4' '/ )\n+      return\n+      end"}, {"sha": "7eb17b58434094de68aba864e6b7dcdfb9bd0528", "filename": "gcc/testsuite/gfortran.dg/comma_format_extension_2.f", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_2.f?ref=53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! test that the extension for a missing comma is accepted\n+\n+      subroutine mysub\n+      dimension ibar(5)\n+      write (3,1001) ( ibar(m), m = 1, 5 )\n+\n+ 1001 format (/5x,' ',i4' '/ ) ! { dg-warning \"Missing comma\" }\n+      return\n+      end"}, {"sha": "15ee18905c42e6a8dd90bcb347fd86a62fc4c66f", "filename": "gcc/testsuite/gfortran.dg/comma_format_extension_3.f", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_3.f?ref=53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "patch": "@@ -0,0 +1,16 @@\n+! PR libfortran/15332 and PR fortran/13257\n+! We used to accept this as an extension but\n+! did do the correct thing at runtime.\n+! Note the missing , before i1 in the format.\n+! { do-do run }\n+! { dg-options \"\" }\n+      character*12 c\n+\n+      write (c,100) 0, 1\n+      if (c .ne. 'i = 0, j = 1') call abort\n+      \n+      write (c,100) 0\n+      if (c .ne. 'i = 0       ') call abort\n+\n+ 100  format ('i = 'i1,:,', j = ',i1)\n+      end"}, {"sha": "5f6ecc5073b6e431bf8417eaa61aabf52aca6025", "filename": "gcc/testsuite/gfortran.dg/comma_format_extension_4.f", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomma_format_extension_4.f?ref=53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "patch": "@@ -0,0 +1,10 @@\n+! PR fortran/13257\n+! Note the missing , before i1 in the format.\n+! { do-do run }\n+! { dg-options \"\" }\n+      character*5 c\n+      write (c,1001) 1\n+      if (c .ne. '    1 ') call abort\n+\n+ 1001 format (' ',i4' ')\n+      end"}, {"sha": "9399d731fcea6a70dbd49fd06501139761ea2a3a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "patch": "@@ -1,3 +1,9 @@\n+2005-04-09  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR fortran/13257\n+\t* format.c (parse_format_list): Allow an optional comma\n+\tbetween descriptors.\n+\n 2005-04-08  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* io/backspace.c (unformatted_backspace): Do not dereference"}, {"sha": "5c2d999cbd22d2cdc47143dfd9e0875071e90c30", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d8a8ac22f1da70288ba496a0f63ca26f3e70dd/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=53d8a8ac22f1da70288ba496a0f63ca26f3e70dd", "patch": "@@ -452,6 +452,7 @@ parse_format_list (void)\n   /* Get the next format item */\n  format_item:\n   t = format_lex ();\n+ format_item_1:\n   switch (t)\n     {\n     case FMT_POSINT:\n@@ -853,8 +854,8 @@ parse_format_list (void)\n       goto finished;\n \n     default:\n-      error = \"Missing comma in format\";\n-      goto finished;\n+      /* Assume a missing comma, this is a GNU extension */\n+      goto format_item_1;\n     }\n \n   /* Optional comma is a weird between state where we've just finished"}]}