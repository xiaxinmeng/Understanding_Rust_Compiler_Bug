{"sha": "74c49505d071e2d5d81a8b9e1708f35f81eab09d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRjNDk1MDVkMDcxZTJkNWQ4MWE4YjllMTcwOGYzNWY4MWVhYjA5ZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-11-28T21:42:17Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-11-28T21:42:17Z"}, "message": "re PR fortran/52161 (Internal compiler errors with -fcheck=bounds in coarray tests)\n\n2012-11-28  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52161\n        * trans-stmt.c (gfc_trans_sync): Fix bound checking.\n\n\n2012-11-28  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52161\n        * coarray/sync_3.f90: New.\n\nFrom-SVN: r193908", "tree": {"sha": "c54635fb4a56ad48342b35f88e7c39076ad69adf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c54635fb4a56ad48342b35f88e7c39076ad69adf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74c49505d071e2d5d81a8b9e1708f35f81eab09d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c49505d071e2d5d81a8b9e1708f35f81eab09d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74c49505d071e2d5d81a8b9e1708f35f81eab09d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c49505d071e2d5d81a8b9e1708f35f81eab09d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4919e4a824372c70af64a80e16db4de995bdc3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4919e4a824372c70af64a80e16db4de995bdc3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4919e4a824372c70af64a80e16db4de995bdc3c"}], "stats": {"total": 80, "additions": 79, "deletions": 1}, "files": [{"sha": "cc996fe2d55cd18c2fcc4cc86872efb82f5e883b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c49505d071e2d5d81a8b9e1708f35f81eab09d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c49505d071e2d5d81a8b9e1708f35f81eab09d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=74c49505d071e2d5d81a8b9e1708f35f81eab09d", "patch": "@@ -1,3 +1,8 @@\n+2012-11-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52161\n+\t* trans-stmt.c (gfc_trans_sync): Fix bound checking.\n+\n 2012-11-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/55476"}, {"sha": "0c88c4aeda28c641d8bf61c7b67a13c15c678096", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c49505d071e2d5d81a8b9e1708f35f81eab09d/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c49505d071e2d5d81a8b9e1708f35f81eab09d/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=74c49505d071e2d5d81a8b9e1708f35f81eab09d", "patch": "@@ -795,7 +795,7 @@ gfc_trans_sync (gfc_code *code, gfc_exec_op type)\n       gfc_trans_runtime_check (true, false, cond, &se.pre,\n \t\t\t       &code->expr1->where, \"Invalid image number \"\n \t\t\t       \"%d in SYNC IMAGES\",\n-\t\t\t       fold_convert (integer_type_node, se.expr));\n+\t\t\t       fold_convert (integer_type_node, images));\n     }\n \n    /* Per F2008, 8.5.1, a SYNC MEMORY is implied by calling the"}, {"sha": "76ce7ff09bbfc871aa3e0b40602da4a30e5afa08", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c49505d071e2d5d81a8b9e1708f35f81eab09d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c49505d071e2d5d81a8b9e1708f35f81eab09d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74c49505d071e2d5d81a8b9e1708f35f81eab09d", "patch": "@@ -1,3 +1,8 @@\n+2012-11-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52161\n+\t* coarray/sync_3.f90: New.\n+\n 2012-11-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/pr55458.c: Require ia32 target instead of ilp32."}, {"sha": "ef5aa6c229b7fb57d216715d449cc731877a7edc", "filename": "gcc/testsuite/gfortran.dg/coarray/sync_3.f90", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74c49505d071e2d5d81a8b9e1708f35f81eab09d/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fsync_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74c49505d071e2d5d81a8b9e1708f35f81eab09d/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fsync_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fsync_3.f90?ref=74c49505d071e2d5d81a8b9e1708f35f81eab09d", "patch": "@@ -0,0 +1,68 @@\n+! { dg-do run }\n+! { dg-options \"-fcheck=all\" }\n+!\n+! As sync_1, but with bounds checking enabled.\n+! PR fortran/52161\n+!\n+! Coarray support\n+! PR fortran/18918\n+\n+implicit none\n+integer :: n\n+character(len=30) :: str\n+critical\n+end critical\n+myCr: critical\n+end critical myCr\n+\n+!\n+! Test SYNC ALL\n+!\n+sync all\n+sync all ( )\n+sync all (errmsg=str)\n+\n+n = 5\n+sync all (stat=n)\n+if (n /= 0) call abort()\n+\n+n = 5\n+sync all (stat=n,errmsg=str)\n+if (n /= 0) call abort()\n+\n+\n+!\n+! Test SYNC MEMORY\n+!\n+sync memory\n+sync memory ( )\n+sync memory (errmsg=str)\n+\n+n = 5\n+sync memory (stat=n)\n+if (n /= 0) call abort()\n+\n+n = 5\n+sync memory (errmsg=str,stat=n)\n+if (n /= 0) call abort()\n+\n+\n+!\n+! Test SYNC IMAGES\n+!\n+sync images (*)\n+if (this_image() == 1) then\n+    sync images (1)\n+    sync images (1, errmsg=str)\n+    sync images ([1])\n+end if\n+\n+n = 5\n+sync images (*, stat=n)\n+if (n /= 0) call abort()\n+\n+n = 5\n+sync images (*,errmsg=str,stat=n)\n+if (n /= 0) call abort()\n+\n+end"}]}