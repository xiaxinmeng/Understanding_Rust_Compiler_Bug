{"sha": "9669194386f5742c28f0dca6841d74c540e62fab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY2OTE5NDM4NmY1NzQyYzI4ZjBkY2E2ODQxZDc0YzU0MGU2MmZhYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T09:28:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T09:28:33Z"}, "message": "[multiple changes]\n\n2011-09-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch8.ads: Minor reformatting\n\n2011-09-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c, g-socket.adb (GNAT.Sockets.Clear,Set,Is_Set):\n\tGuard against socket values that are not in [0;FD_SETSIZE[\n\nFrom-SVN: r178576", "tree": {"sha": "edd093c1640864e8638de2608c1a9c9f83be08d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edd093c1640864e8638de2608c1a9c9f83be08d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9669194386f5742c28f0dca6841d74c540e62fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9669194386f5742c28f0dca6841d74c540e62fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9669194386f5742c28f0dca6841d74c540e62fab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9669194386f5742c28f0dca6841d74c540e62fab/comments", "author": null, "committer": null, "parents": [{"sha": "54bf19e4587be8b7c283cd7c4ae8428f93c3eeff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54bf19e4587be8b7c283cd7c4ae8428f93c3eeff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54bf19e4587be8b7c283cd7c4ae8428f93c3eeff"}], "stats": {"total": 77, "additions": 57, "deletions": 20}, "files": [{"sha": "b5d3226fd08d34fbbf3ae9f19201d336cb23401f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9669194386f5742c28f0dca6841d74c540e62fab/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9669194386f5742c28f0dca6841d74c540e62fab/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9669194386f5742c28f0dca6841d74c540e62fab", "patch": "@@ -1,3 +1,12 @@\n+2011-09-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch8.ads: Minor reformatting\n+\n+2011-09-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c, g-socket.adb (GNAT.Sockets.Clear,Set,Is_Set):\n+\tGuard against socket values that are not in [0;FD_SETSIZE[\n+\n 2011-09-06  Robert Dewar  <dewar@adacore.com>\n \n \t* s-osinte-linux.ads, a-iteint.ads, exp_ch6.adb, s-solita.adb: Minor"}, {"sha": "0f02580016365ffa2675d442a5196cd9eb2dd379", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9669194386f5742c28f0dca6841d74c540e62fab/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9669194386f5742c28f0dca6841d74c540e62fab/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=9669194386f5742c28f0dca6841d74c540e62fab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2010, AdaCore                     --\n+--                     Copyright (C) 2001-2011, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -195,6 +195,11 @@ package body GNAT.Sockets is\n    procedure Narrow (Item : in out Socket_Set_Type);\n    --  Update Last as it may be greater than the real last socket\n \n+   procedure Check_For_Fd_Set (Fd : Socket_Type);\n+   pragma Inline (Check_For_Fd_Set);\n+   --  Raise Constraint_Error if Fd is less than 0 or greater than or equal to\n+   --  FD_SETSIZE.\n+\n    --  Types needed for Datagram_Socket_Stream_Type\n \n    type Datagram_Socket_Stream_Type is new Root_Stream_Type with record\n@@ -568,6 +573,18 @@ package body GNAT.Sockets is\n       Narrow (E_Socket_Set);\n    end Check_Selector;\n \n+   ----------------------\n+   -- Check_For_Fd_Set --\n+   ----------------------\n+\n+   procedure Check_For_Fd_Set (Fd : Socket_Type) is\n+   begin\n+      if Fd < 0 or else Fd >= SOSC.FD_SETSIZE then\n+         raise Constraint_Error with \"invalid value for socket set: \"\n+                                       & Image (Fd);\n+      end if;\n+   end Check_For_Fd_Set;\n+\n    -----------\n    -- Clear --\n    -----------\n@@ -578,6 +595,7 @@ package body GNAT.Sockets is\n    is\n       Last : aliased C.int := C.int (Item.Last);\n    begin\n+      Check_For_Fd_Set (Socket);\n       if Item.Last /= No_Socket then\n          Remove_Socket_From_Set (Item.Set'Access, C.int (Socket));\n          Last_Socket_In_Set (Item.Set'Access, Last'Unchecked_Access);\n@@ -1454,6 +1472,7 @@ package body GNAT.Sockets is\n       Socket : Socket_Type) return Boolean\n    is\n    begin\n+      Check_For_Fd_Set (Socket);\n       return Item.Last /= No_Socket\n         and then Socket <= Item.Last\n         and then Is_Socket_In_Set (Item.Set'Access, C.int (Socket)) /= 0;\n@@ -2100,6 +2119,7 @@ package body GNAT.Sockets is\n \n    procedure Set (Item : in out Socket_Set_Type; Socket : Socket_Type) is\n    begin\n+      Check_For_Fd_Set (Socket);\n       if Item.Last = No_Socket then\n \n          --  Uninitialized socket set, make sure it is properly zeroed out"}, {"sha": "051cca5456a9c18fc1033787ade4abc9cf04cb4d", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9669194386f5742c28f0dca6841d74c540e62fab/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9669194386f5742c28f0dca6841d74c540e62fab/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=9669194386f5742c28f0dca6841d74c540e62fab", "patch": "@@ -1260,6 +1260,7 @@ CND(SIZEOF_sockaddr_in6, \"struct sockaddr_in6\")\n \n #define SIZEOF_fd_set (sizeof (fd_set))\n CND(SIZEOF_fd_set, \"fd_set\");\n+CND(FD_SETSIZE, \"Max fd value\");\n \n #define SIZEOF_struct_hostent (sizeof (struct hostent))\n CND(SIZEOF_struct_hostent, \"struct hostent\");"}, {"sha": "922b282cdfa53059752fefaa97c7da0f1ad2d437", "filename": "gcc/ada/sem_ch8.ads", "status": "modified", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9669194386f5742c28f0dca6841d74c540e62fab/gcc%2Fada%2Fsem_ch8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9669194386f5742c28f0dca6841d74c540e62fab/gcc%2Fada%2Fsem_ch8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.ads?ref=9669194386f5742c28f0dca6841d74c540e62fab", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,16 +44,16 @@ package Sem_Ch8 is\n    -- Subprograms --\n    -----------------\n \n-   procedure Analyze_Exception_Renaming                 (N : Node_Id);\n-   procedure Analyze_Expanded_Name                      (N : Node_Id);\n-   procedure Analyze_Generic_Function_Renaming          (N : Node_Id);\n-   procedure Analyze_Generic_Package_Renaming           (N : Node_Id);\n-   procedure Analyze_Generic_Procedure_Renaming         (N : Node_Id);\n-   procedure Analyze_Object_Renaming                    (N : Node_Id);\n-   procedure Analyze_Package_Renaming                   (N : Node_Id);\n-   procedure Analyze_Subprogram_Renaming                (N : Node_Id);\n-   procedure Analyze_Use_Package                        (N : Node_Id);\n-   procedure Analyze_Use_Type                           (N : Node_Id);\n+   procedure Analyze_Exception_Renaming         (N : Node_Id);\n+   procedure Analyze_Expanded_Name              (N : Node_Id);\n+   procedure Analyze_Generic_Function_Renaming  (N : Node_Id);\n+   procedure Analyze_Generic_Package_Renaming   (N : Node_Id);\n+   procedure Analyze_Generic_Procedure_Renaming (N : Node_Id);\n+   procedure Analyze_Object_Renaming            (N : Node_Id);\n+   procedure Analyze_Package_Renaming           (N : Node_Id);\n+   procedure Analyze_Subprogram_Renaming        (N : Node_Id);\n+   procedure Analyze_Use_Package                (N : Node_Id);\n+   procedure Analyze_Use_Type                   (N : Node_Id);\n \n    procedure End_Scope;\n    --  Called at end of scope. On exit from blocks and bodies (subprogram,\n@@ -71,19 +71,26 @@ package Sem_Ch8 is\n \n    procedure End_Use_Package (N : Node_Id);\n    procedure End_Use_Type    (N : Node_Id);\n-   --  Subsidiaries of End_Use_Clauses.  Also called directly for use clauses\n+   --  Subsidiaries of End_Use_Clauses. Also called directly for use clauses\n    --  appearing in context clauses.\n \n    procedure Find_Direct_Name (N : Node_Id);\n    --  Given a direct name (Identifier or Operator_Symbol), this routine scans\n-   --  the homonym chain for the name searching for corresponding visible\n+   --  the homonym chain for the name, searching for corresponding visible\n    --  entities to find the referenced entity (or in the case of overloading,\n-   --  entities). On return, the Entity and Etype fields are set. In the\n-   --  non-overloaded case, these are the correct final entries. In the\n-   --  overloaded case, Is_Overloaded is set, Etype and Entity refer to an\n-   --  arbitrary element of the overloads set, and an appropriate list of\n-   --  entries has been made in the overload interpretation table (to be\n-   --  disambiguated in the resolve phase).\n+   --  one candidate interpretation). On return, the Entity and Etype fields\n+   --  are set. In the non-overloaded case, these are the correct entries.\n+   --  In the overloaded case, the flag Is_Overloaded is set, Etype and Entity\n+   --  refer to an arbitrary element of the overloads set, and the appropriate\n+   --  entries have been added to the overloads table entry for the node. The\n+   --  overloading will be disambiguated during type resolution.\n+   --\n+   --  Note, when this is called during semantic analysis in the overloaded\n+   --  case, the entity set will be the most recently declared homonym. In\n+   --  particular, the caller may follow the homonym chain checking for all\n+   --  entries in the current scope, and that will give all homonyms that are\n+   --  declared before the point of call in the current scope. This is useful\n+   --  for example in the processing for pragma Inline.\n \n    procedure Find_Selected_Component (N : Node_Id);\n    --  Resolve various cases of selected components, recognize expanded names"}]}