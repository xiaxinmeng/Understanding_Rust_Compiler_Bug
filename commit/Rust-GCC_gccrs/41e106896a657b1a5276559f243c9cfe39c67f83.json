{"sha": "41e106896a657b1a5276559f243c9cfe39c67f83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFlMTA2ODk2YTY1N2IxYTUyNzY1NTlmMjQzYzljZmUzOWM2N2Y4Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-04-26T13:13:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-04-26T13:13:36Z"}, "message": "re PR tree-optimization/57051 (Optimization regression in 4.8.0 from 4.7.2)\n\n\tPR tree-optimization/57051\n\t* fold-const.c (const_binop): Handle VEC_LSHIFT_EXPR\n\tand VEC_RSHIFT_EXPR if shift count is a multiple of element\n\tbitsize.\n\nFrom-SVN: r198339", "tree": {"sha": "3870fb7da07120a1e6c6232584678ef485acf3c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3870fb7da07120a1e6c6232584678ef485acf3c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41e106896a657b1a5276559f243c9cfe39c67f83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e106896a657b1a5276559f243c9cfe39c67f83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41e106896a657b1a5276559f243c9cfe39c67f83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41e106896a657b1a5276559f243c9cfe39c67f83/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7ed20db763473e20d1186e5e138ae00e5afc764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ed20db763473e20d1186e5e138ae00e5afc764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ed20db763473e20d1186e5e138ae00e5afc764"}], "stats": {"total": 46, "additions": 39, "deletions": 7}, "files": [{"sha": "bd5c8f1ef0b4c521c00e9187e0d670a81449a7a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41e106896a657b1a5276559f243c9cfe39c67f83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41e106896a657b1a5276559f243c9cfe39c67f83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41e106896a657b1a5276559f243c9cfe39c67f83", "patch": "@@ -1,3 +1,10 @@\n+2013-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/57051\n+\t* fold-const.c (const_binop): Handle VEC_LSHIFT_EXPR\n+\tand VEC_RSHIFT_EXPR if shift count is a multiple of element\n+\tbitsize.\n+\n 2013-04-26  Richard Biener  <rguenther@suse.de>\n \n \t* omp-low.c (finalize_task_copyfn): Do not drop PROP_loops."}, {"sha": "f93ce8a7e26f204be69335a3a1f9f18c7368ca41", "filename": "gcc/fold-const.c", "status": "modified", "additions": 32, "deletions": 7, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41e106896a657b1a5276559f243c9cfe39c67f83/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41e106896a657b1a5276559f243c9cfe39c67f83/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=41e106896a657b1a5276559f243c9cfe39c67f83", "patch": "@@ -1380,17 +1380,42 @@ const_binop (enum tree_code code, tree arg1, tree arg2)\n       int count = TYPE_VECTOR_SUBPARTS (type), i;\n       tree *elts = XALLOCAVEC (tree, count);\n \n-      for (i = 0; i < count; i++)\n+      if (code == VEC_LSHIFT_EXPR\n+\t  || code == VEC_RSHIFT_EXPR)\n \t{\n-\t  tree elem1 = VECTOR_CST_ELT (arg1, i);\n-\n-\t  elts[i] = const_binop (code, elem1, arg2);\n+\t  if (!host_integerp (arg2, 1))\n+\t    return NULL_TREE;\n \n-\t  /* It is possible that const_binop cannot handle the given\n-\t     code and return NULL_TREE */\n-\t  if (elts[i] == NULL_TREE)\n+\t  unsigned HOST_WIDE_INT shiftc = tree_low_cst (arg2, 1);\n+\t  unsigned HOST_WIDE_INT outerc = tree_low_cst (TYPE_SIZE (type), 1);\n+\t  unsigned HOST_WIDE_INT innerc\n+\t    = tree_low_cst (TYPE_SIZE (TREE_TYPE (type)), 1);\n+\t  if (shiftc >= outerc || (shiftc % innerc) != 0)\n \t    return NULL_TREE;\n+\t  int offset = shiftc / innerc;\n+\t  if (code == VEC_LSHIFT_EXPR)\n+\t    offset = -offset;\n+\t  tree zero = build_zero_cst (TREE_TYPE (type));\n+\t  for (i = 0; i < count; i++)\n+\t    {\n+\t      if (i + offset < 0 || i + offset >= count)\n+\t\telts[i] = zero;\n+\t      else\n+\t\telts[i] = VECTOR_CST_ELT (arg1, i + offset);\n+\t    }\n \t}\n+      else\n+\tfor (i = 0; i < count; i++)\n+\t  {\n+\t    tree elem1 = VECTOR_CST_ELT (arg1, i);\n+\n+\t    elts[i] = const_binop (code, elem1, arg2);\n+\n+\t    /* It is possible that const_binop cannot handle the given\n+\t       code and return NULL_TREE */\n+\t    if (elts[i] == NULL_TREE)\n+\t      return NULL_TREE;\n+\t  }\n \n       return build_vector (type, elts);\n     }"}]}