{"sha": "95a28767abe40e3b590c98275a2fca496410a59f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVhMjg3NjdhYmU0MGUzYjU5MGM5ODI3NWEyZmNhNDk2NDEwYTU5Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-10-07T18:39:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-10-07T18:39:52Z"}, "message": "dwarf2out.c (tree_add_const_value_attribute_for_decl): Don't add DW_AT_const_value if VAR_DIE already has DW_AT_abstract_origin...\n\n\t* dwarf2out.c (tree_add_const_value_attribute_for_decl): Don't add\n\tDW_AT_const_value if VAR_DIE already has DW_AT_abstract_origin\n\trefering to a DIE with DW_AT_const_value.\n\n\t* gcc.dg/debug/dwarf2/inline3.c: New test.\n\nFrom-SVN: r152535", "tree": {"sha": "8827ea13df34495bcbc78509492295cba315f504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8827ea13df34495bcbc78509492295cba315f504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95a28767abe40e3b590c98275a2fca496410a59f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95a28767abe40e3b590c98275a2fca496410a59f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95a28767abe40e3b590c98275a2fca496410a59f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95a28767abe40e3b590c98275a2fca496410a59f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c19d9b5b20707a26e1f2d36db109ae6c5acda30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c19d9b5b20707a26e1f2d36db109ae6c5acda30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c19d9b5b20707a26e1f2d36db109ae6c5acda30"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "b1a88a38d71c89052b8ae304cae039bb05c45557", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95a28767abe40e3b590c98275a2fca496410a59f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95a28767abe40e3b590c98275a2fca496410a59f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95a28767abe40e3b590c98275a2fca496410a59f", "patch": "@@ -1,3 +1,9 @@\n+2009-10-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2out.c (tree_add_const_value_attribute_for_decl): Don't add\n+\tDW_AT_const_value if VAR_DIE already has DW_AT_abstract_origin\n+\trefering to a DIE with DW_AT_const_value.\n+\n 2009-10-07  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/22072"}, {"sha": "7e0d466331e15691c188f261cdc77c836b076ee0", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95a28767abe40e3b590c98275a2fca496410a59f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95a28767abe40e3b590c98275a2fca496410a59f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=95a28767abe40e3b590c98275a2fca496410a59f", "patch": "@@ -15701,6 +15701,10 @@ tree_add_const_value_attribute_for_decl (dw_die_ref var_die, tree decl)\n     else\n       return false;\n \n+  /* Don't add DW_AT_const_value if abstract origin already has one.  */\n+  if (get_AT (var_die, DW_AT_const_value))\n+    return false;\n+\n   return tree_add_const_value_attribute (var_die, DECL_INITIAL (decl));\n }\n "}, {"sha": "ea24c57348fa479837b1ed135ae04323f1dbef06", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95a28767abe40e3b590c98275a2fca496410a59f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95a28767abe40e3b590c98275a2fca496410a59f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=95a28767abe40e3b590c98275a2fca496410a59f", "patch": "@@ -1,3 +1,7 @@\n+2009-10-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/debug/dwarf2/inline3.c: New test.\n+\n 2009-10-07  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/41615"}, {"sha": "feafb33e829d6f9f63f5d87cc08702398308c8ed", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/inline3.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95a28767abe40e3b590c98275a2fca496410a59f/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95a28767abe40e3b590c98275a2fca496410a59f/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline3.c?ref=95a28767abe40e3b590c98275a2fca496410a59f", "patch": "@@ -0,0 +1,22 @@\n+/* Verify that only one DW_AT_const_value is emitted for baz,\n+   not for baz abstract DIE and again inside of\n+   DW_TAG_inlined_subroutine.  */\n+/* { dg-options \"-O2 -g -dA\" } */\n+/* { dg-do compile } */\n+/* { dg-final { scan-assembler-times \" DW_AT_const_value\" 1 } } */\n+\n+struct A { const long i; const long j; };\n+\n+static inline long\n+foo (void)\n+{\n+  const struct A baz = { .i = 2, .j = 21 };\n+  asm volatile (\"\" : : : \"memory\");\n+  return baz.i * baz.j;\n+}\n+\n+int\n+main ()\n+{\n+  return foo () - 42;\n+}"}]}