{"sha": "8f12ce2ea3be12de4f83d3c419bdb1dc5036b202", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYxMmNlMmVhM2JlMTJkZTRmODNkM2M0MTliZGIxZGM1MDM2YjIwMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-31T10:08:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-31T10:08:15Z"}, "message": "match.pd: Add (-(X < 0) | 1) * X -> abs (X) etc. simplifications [PR94785]\n\nThe following patch adds two simplifications to recognize idioms\nfor ABS_EXPR resp. ABSU_EXPR.\n\n2020-12-31  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/94785\n\t* match.pd ((-(X < 0) | 1) * X -> abs (X)): New simplification.\n\t((-(X < 0) | 1U) * X -> absu (X)): Likewise.\n\n\t* gcc.dg/tree-ssa/pr94785.c: New test.", "tree": {"sha": "acdd88b6fe3f832de1cfc8febfc18dbf98a27043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acdd88b6fe3f832de1cfc8febfc18dbf98a27043"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f12ce2ea3be12de4f83d3c419bdb1dc5036b202", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f12ce2ea3be12de4f83d3c419bdb1dc5036b202", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f12ce2ea3be12de4f83d3c419bdb1dc5036b202", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f12ce2ea3be12de4f83d3c419bdb1dc5036b202/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e603837f7ad886df62e02ac0cd395ec17b7d587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e603837f7ad886df62e02ac0cd395ec17b7d587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e603837f7ad886df62e02ac0cd395ec17b7d587"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "1055292d2e9d68f863df32a67505694b633c3bef", "filename": "gcc/match.pd", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f12ce2ea3be12de4f83d3c419bdb1dc5036b202/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f12ce2ea3be12de4f83d3c419bdb1dc5036b202/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=8f12ce2ea3be12de4f83d3c419bdb1dc5036b202", "patch": "@@ -1374,6 +1374,22 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (absu tree_expr_nonnegative_p@0)\n  (convert @0))\n \n+/* Simplify (-(X < 0) | 1) * X into abs (X).  */\n+(simplify\n+ (mult:c (bit_ior (negate (convert? (lt @0 integer_zerop))) integer_onep) @0)\n+ (if (INTEGRAL_TYPE_P (type) && !TYPE_UNSIGNED (type))\n+  (abs @0)))\n+\n+/* Similarly (-(X < 0) | 1U) * X into absu (X).  */\n+(simplify\n+ (mult:c (bit_ior (nop_convert (negate (convert? (lt @0 integer_zerop))))\n+\t\t  integer_onep) (nop_convert @0))\n+ (if (INTEGRAL_TYPE_P (type)\n+      && TYPE_UNSIGNED (type)\n+      && INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+      && !TYPE_UNSIGNED (TREE_TYPE (@0)))\n+  (absu @0)))\n+\n /* A few cases of fold-const.c negate_expr_p predicate.  */\n (match negate_expr_p\n  INTEGER_CST"}, {"sha": "923928424c55dac76c8556127549f71ac78fcaa8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr94785.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f12ce2ea3be12de4f83d3c419bdb1dc5036b202/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr94785.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f12ce2ea3be12de4f83d3c419bdb1dc5036b202/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr94785.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr94785.c?ref=8f12ce2ea3be12de4f83d3c419bdb1dc5036b202", "patch": "@@ -0,0 +1,36 @@\n+/* PR tree-optimization/94785 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \" = ABS_EXPR <v_\\[0-9]*\\\\\\(D\\\\\\)>;\" 2 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" = ABSU_EXPR <v_\\[0-9]*\\\\\\(D\\\\\\)>;\" 2 \"optimized\" } } */\n+\n+int\n+f1 (int v)\n+{\n+  return (1 | -(v < 0)) * v;\n+}\n+\n+unsigned\n+f2 (int v)\n+{\n+  return (1U | -(v < 0)) * v;\n+}\n+\n+int\n+f3 (int v)\n+{\n+  int a = v < 0;\n+  int b = -a;\n+  int c = 1 | b;\n+  return c * v;\n+}\n+\n+unsigned\n+f4 (int v)\n+{\n+  int a = v < 0;\n+  int b = -a;\n+  unsigned c = b;\n+  unsigned d = c | 1;\n+  return d * v;\n+}"}]}