{"sha": "3df19fa0d40019eff5060e31abd6add22ac1df4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RmMTlmYTBkNDAwMTllZmY1MDYwZTMxYWJkNmFkZDIyYWMxZGY0Yg==", "commit": {"author": {"name": "Fritz O. Reese", "email": "fritzoreese@gmail.com", "date": "2016-11-02T14:56:41Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2016-11-02T14:56:41Z"}, "message": "New warning -Wargument-mismatch for function argument mismatches.\n\n\tgcc/fortran/\n\t* lang.opt, invoke.texi: New argument -Wargument-mismatch.\n\t* interface.c (compare_parameter, compare_actual_formal,\n\tgfc_check_typebound_override, argument_rank_mismatch): Control argument\n\tmismatch warnings with -Wargument-mismatch.\n\t* resolve.c (resolve_structure_cons, resolve_global_procedure): Ditto.\n\n\tgcc/testsuite/gfortran.dg/\n\t* warn_argument_mismatch_1.f90: New test.\n\nFrom-SVN: r241795", "tree": {"sha": "e2e1ae41352244251932989b8cb773e3b130c49b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2e1ae41352244251932989b8cb773e3b130c49b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3df19fa0d40019eff5060e31abd6add22ac1df4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df19fa0d40019eff5060e31abd6add22ac1df4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3df19fa0d40019eff5060e31abd6add22ac1df4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df19fa0d40019eff5060e31abd6add22ac1df4b/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eab1ee22545ddc53bbe25ab6c4140f29a8879891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab1ee22545ddc53bbe25ab6c4140f29a8879891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab1ee22545ddc53bbe25ab6c4140f29a8879891"}], "stats": {"total": 95, "additions": 81, "deletions": 14}, "files": [{"sha": "d47eeb05ffe879d948681144f061c810945d6acd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3df19fa0d40019eff5060e31abd6add22ac1df4b", "patch": "@@ -1,3 +1,11 @@\n+2016-11-02  Fritz O. Reese <fritzoreese@gmail.com>\n+\n+\t* lang.opt, invoke.texi: New argument -Wargument-mismatch.\n+\t* interface.c (compare_parameter, compare_actual_formal,\n+\tgfc_check_typebound_override, argument_rank_mismatch): Control argument\n+\tmismatch warnings with -Wargument-mismatch.\n+\t* resolve.c (resolve_structure_cons, resolve_global_procedure): Ditto.\n+\n 2016-11-02  Fritz Reese <fritzoreese@gmail.com>\n \n \t* gfortran.h (gfc_error): New declaration for gfc_error with 'opt'."}, {"sha": "4dd432ef23d21fc145432ab0cb581ab4eadbc54b", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=3df19fa0d40019eff5060e31abd6add22ac1df4b", "patch": "@@ -2139,17 +2139,17 @@ argument_rank_mismatch (const char *name, locus *where,\n     }\n   else if (rank1 == 0)\n     {\n-      gfc_error (\"Rank mismatch in argument %qs at %L \"\n+      gfc_error (OPT_Wargument_mismatch, \"Rank mismatch in argument %qs at %L \"\n \t\t \"(scalar and rank-%d)\", name, where, rank2);\n     }\n   else if (rank2 == 0)\n     {\n-      gfc_error (\"Rank mismatch in argument %qs at %L \"\n+      gfc_error (OPT_Wargument_mismatch, \"Rank mismatch in argument %qs at %L \"\n \t\t \"(rank-%d and scalar)\", name, where, rank1);\n     }\n   else\n     {\n-      gfc_error (\"Rank mismatch in argument %qs at %L \"\n+      gfc_error (OPT_Wargument_mismatch, \"Rank mismatch in argument %qs at %L \"\n \t\t \"(rank-%d and rank-%d)\", name, where, rank1, rank2);\n     }\n }\n@@ -2200,7 +2200,8 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t\t\t\t   sizeof(err), NULL, NULL))\n \t{\n \t  if (where)\n-\t    gfc_error (\"Interface mismatch in dummy procedure %qs at %L: %s\",\n+\t    gfc_error (OPT_Wargument_mismatch,\n+\t\t       \"Interface mismatch in dummy procedure %qs at %L: %s\",\n \t\t       formal->name, &actual->where, err);\n \t  return 0;\n \t}\n@@ -2227,7 +2228,8 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t\t\t\t   err, sizeof(err), NULL, NULL))\n \t{\n \t  if (where)\n-\t    gfc_error (\"Interface mismatch in dummy procedure %qs at %L: %s\",\n+\t    gfc_error (OPT_Wargument_mismatch,\n+\t\t       \"Interface mismatch in dummy procedure %qs at %L: %s\",\n \t\t       formal->name, &actual->where, err);\n \t  return 0;\n \t}\n@@ -2253,7 +2255,8 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t\t\t\t\t CLASS_DATA (actual)->ts.u.derived)))\n     {\n       if (where)\n-\tgfc_error (\"Type mismatch in argument %qs at %L; passed %s to %s\",\n+\tgfc_error (OPT_Wargument_mismatch,\n+\t\t   \"Type mismatch in argument %qs at %L; passed %s to %s\",\n \t\t   formal->name, where, gfc_typename (&actual->ts),\n \t\t   gfc_typename (&formal->ts));\n       return 0;\n@@ -2957,15 +2960,15 @@ compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n \t\t\tf->sym->ts.u.cl->length->value.integer) != 0))\n \t {\n \t   if (where && (f->sym->attr.pointer || f->sym->attr.allocatable))\n-\t     gfc_warning (0,\n+\t     gfc_warning (OPT_Wargument_mismatch,\n \t\t\t  \"Character length mismatch (%ld/%ld) between actual \"\n \t\t\t  \"argument and pointer or allocatable dummy argument \"\n \t\t\t  \"%qs at %L\",\n \t\t\t  mpz_get_si (a->expr->ts.u.cl->length->value.integer),\n \t\t\t  mpz_get_si (f->sym->ts.u.cl->length->value.integer),\n \t\t\t  f->sym->name, &a->expr->where);\n \t   else if (where)\n-\t     gfc_warning (0,\n+\t     gfc_warning (OPT_Wargument_mismatch,\n \t\t\t  \"Character length mismatch (%ld/%ld) between actual \"\n \t\t\t  \"argument and assumed-shape dummy argument %qs \"\n \t\t\t  \"at %L\",\n@@ -2997,12 +3000,14 @@ compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n \t  && f->sym->attr.flavor != FL_PROCEDURE)\n \t{\n \t  if (a->expr->ts.type == BT_CHARACTER && !f->sym->as && where)\n-\t    gfc_warning (0, \"Character length of actual argument shorter \"\n+\t    gfc_warning (OPT_Wargument_mismatch,\n+\t\t\t \"Character length of actual argument shorter \"\n \t\t\t \"than of dummy argument %qs (%lu/%lu) at %L\",\n \t\t\t f->sym->name, actual_size, formal_size,\n \t\t\t &a->expr->where);\n           else if (where)\n-\t    gfc_warning (0, \"Actual argument contains too few \"\n+\t    gfc_warning (OPT_Wargument_mismatch,\n+\t\t\t \"Actual argument contains too few \"\n \t\t\t \"elements for dummy argument %qs (%lu/%lu) at %L\",\n \t\t\t f->sym->name, actual_size, formal_size,\n \t\t\t &a->expr->where);\n@@ -4547,7 +4552,8 @@ gfc_check_typebound_override (gfc_symtree* proc, gfc_symtree* old)\n       if (!gfc_check_dummy_characteristics (proc_formal->sym, old_formal->sym,\n \t\t\t\t\tcheck_type, err, sizeof(err)))\n \t{\n-\t  gfc_error (\"Argument mismatch for the overriding procedure \"\n+\t  gfc_error (OPT_Wargument_mismatch,\n+\t\t     \"Argument mismatch for the overriding procedure \"\n \t\t     \"%qs at %L: %s\", proc->name, &where, err);\n \t  return false;\n \t}"}, {"sha": "83fdf012f92eac0865e6974883cb85ae12fc5cc6", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=3df19fa0d40019eff5060e31abd6add22ac1df4b", "patch": "@@ -141,7 +141,7 @@ by type.  Explanations are in the following sections.\n @item Error and Warning Options\n @xref{Error and Warning Options,,Options to request or suppress errors\n and warnings}.\n-@gccoptlist{-Waliasing -Wall -Wampersand -Warray-bounds\n+@gccoptlist{-Waliasing -Wall -Wampersand -Wargument-mismatch -Warray-bounds\n -Wc-binding-type -Wcharacter-truncation @gol\n -Wconversion -Wfunction-elimination -Wimplicit-interface @gol\n -Wimplicit-procedure -Wintrinsic-shadow -Wuse-without-only -Wintrinsics-std @gol\n@@ -821,6 +821,15 @@ given in a continued character constant, GNU Fortran assumes continuation\n at the first non-comment, non-whitespace character after the ampersand\n that initiated the continuation.\n \n+@item -Wargument-mismatch\n+@opindex @code{Wargument-mismatch}\n+@cindex warnings, argument mismatch\n+@cindex warnings, parameter mismatch\n+@cindex warnings, interface mismatch\n+Warn about type, rank, and other mismatches between formal parameters and actual\n+arguments to functions and subroutines.  These warnings are recommended and\n+thus enabled by default.\n+\n @item -Warray-temporaries\n @opindex @code{Warray-temporaries}\n @cindex warnings, array temporaries"}, {"sha": "e39e555792f46d2de8481a285161fef3d6e372f8", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=3df19fa0d40019eff5060e31abd6add22ac1df4b", "patch": "@@ -209,6 +209,10 @@ Warray-temporaries\n Fortran Warning Var(warn_array_temporaries)\n Warn about creation of array temporaries.\n \n+Wargument-mismatch\n+Fortran Warning Var(warn_argument_mismatch) Init(1)\n+Warn about type and rank mismatches between arguments and parameters.\n+\n Wc-binding-type\n Fortran Var(warn_c_binding_type) Warning LangEnabledBy(Fortran,Wall)\n Warn if the type of a variable might be not interoperable with C."}, {"sha": "14685d274d24b997038d51072927d8f5934cc2fc", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=3df19fa0d40019eff5060e31abd6add22ac1df4b", "patch": "@@ -1317,7 +1317,8 @@ resolve_structure_cons (gfc_expr *expr, int init)\n \t  if (s2 && !gfc_compare_interfaces (comp->ts.interface, s2, name, 0, 1,\n \t\t\t\t\t     err, sizeof (err), NULL, NULL))\n \t    {\n-\t      gfc_error (\"Interface mismatch for procedure-pointer component \"\n+\t      gfc_error (OPT_Wargument_mismatch,\n+\t\t\t \"Interface mismatch for procedure-pointer component \"\n \t\t\t \"%qs in structure constructor at %L: %s\",\n \t\t\t comp->name, &cons->expr->where, err);\n \t      return false;\n@@ -2469,7 +2470,8 @@ resolve_global_procedure (gfc_symbol *sym, locus *where,\n       if (!gfc_compare_interfaces (sym, def_sym, sym->name, 0, 1,\n \t\t\t\t   reason, sizeof(reason), NULL, NULL))\n \t{\n-\t  gfc_error (\"Interface mismatch in global procedure %qs at %L: %s \",\n+\t  gfc_error (OPT_Wargument_mismatch,\n+\t\t     \"Interface mismatch in global procedure %qs at %L: %s \",\n \t\t    sym->name, &sym->declared_at, reason);\n \t  goto done;\n \t}"}, {"sha": "e475c0e2606bda81a1d314ff0aa7ad20a5cb34f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3df19fa0d40019eff5060e31abd6add22ac1df4b", "patch": "@@ -1,3 +1,7 @@\n+2016-11-02  Fritz O. Reese <fritzoreese@gmail.com>\n+\n+\t* gfortran.dg/warn_argument_mismatch_1.f90: New test.\n+\n 2016-11-02  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.dg/debug/dwarf2/prod-options.c: XFAIL AIX."}, {"sha": "6a663e66b5f2ddf776e137b9e929fecb12826989", "filename": "gcc/testsuite/gfortran.dg/warn_argument_mismatch_1.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_argument_mismatch_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3df19fa0d40019eff5060e31abd6add22ac1df4b/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_argument_mismatch_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarn_argument_mismatch_1.f90?ref=3df19fa0d40019eff5060e31abd6add22ac1df4b", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+! { dg-options \"-Wno-argument-mismatch\" }\n+!\n+! No warnings should be output here with -Wno-argument-mismatch.\n+!\n+\n+subroutine s1(x)\n+  implicit none\n+  integer, intent(in) :: x\n+  print *, x\n+end subroutine\n+\n+subroutine s2(x)\n+  implicit none\n+  integer, intent(in) :: x(1)\n+  print *, x\n+end subroutine\n+\n+subroutine s3(x)\n+  implicit none\n+  integer, intent(in) :: x(2)\n+  print *, x\n+end subroutine\n+\n+implicit none\n+integer :: x, y(1)\n+real :: r\n+\n+call s1(r)\n+call s1(y)\n+call s2(x)\n+call s3(y)\n+\n+end"}]}