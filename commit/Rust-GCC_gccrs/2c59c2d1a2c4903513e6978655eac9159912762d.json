{"sha": "2c59c2d1a2c4903513e6978655eac9159912762d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1OWMyZDFhMmM0OTAzNTEzZTY5Nzg2NTVlYWM5MTU5OTEyNzYyZA==", "commit": {"author": {"name": "Joel Sherrill", "email": "joel.sherrill@oarcorp.com", "date": "2014-11-14T16:57:20Z"}, "committer": {"name": "Joel Sherrill", "email": "joel@gcc.gnu.org", "date": "2014-11-14T16:57:20Z"}, "message": "mt_allocator.cc: Fix assumption that sizeof(void *) is equal to sizeof(size_t).\n\n2014-11-14  Joel Sherrill <joel.sherrill@oarcorp.com>\n\n\t* src/c++98/mt_allocator.cc: Fix assumption that sizeof(void *) is\n\tequal to sizeof(size_t). The m32c breaks this assumption.\n\nFrom-SVN: r217576", "tree": {"sha": "219a0c4f39efc4c6a5815d5dd50b1b4bab3a9dd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/219a0c4f39efc4c6a5815d5dd50b1b4bab3a9dd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c59c2d1a2c4903513e6978655eac9159912762d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c59c2d1a2c4903513e6978655eac9159912762d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c59c2d1a2c4903513e6978655eac9159912762d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c59c2d1a2c4903513e6978655eac9159912762d/comments", "author": {"login": "joelsherrill", "id": 183688, "node_id": "MDQ6VXNlcjE4MzY4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/183688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelsherrill", "html_url": "https://github.com/joelsherrill", "followers_url": "https://api.github.com/users/joelsherrill/followers", "following_url": "https://api.github.com/users/joelsherrill/following{/other_user}", "gists_url": "https://api.github.com/users/joelsherrill/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelsherrill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelsherrill/subscriptions", "organizations_url": "https://api.github.com/users/joelsherrill/orgs", "repos_url": "https://api.github.com/users/joelsherrill/repos", "events_url": "https://api.github.com/users/joelsherrill/events{/privacy}", "received_events_url": "https://api.github.com/users/joelsherrill/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba86734cb3165b4dd2c0885a7a27ba89d3a9b563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba86734cb3165b4dd2c0885a7a27ba89d3a9b563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba86734cb3165b4dd2c0885a7a27ba89d3a9b563"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "c6f32e423d5be28eccadef1d915a18f2627246c3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c59c2d1a2c4903513e6978655eac9159912762d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c59c2d1a2c4903513e6978655eac9159912762d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2c59c2d1a2c4903513e6978655eac9159912762d", "patch": "@@ -1,3 +1,8 @@\n+2014-11-14  Joel Sherrill <joel.sherrill@oarcorp.com>\n+\n+\t* src/c++98/mt_allocator.cc: Fix assumption that sizeof(void *) is\n+\tequal to sizeof(size_t). The m32c breaks this assumption.\n+\n 2014-11-14  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* config/abi/pre/gnu.ver: Add new exports."}, {"sha": "51b260563b7d982578e48d2b9584fd602825bc4e", "filename": "libstdc++-v3/src/c++98/mt_allocator.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c59c2d1a2c4903513e6978655eac9159912762d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmt_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c59c2d1a2c4903513e6978655eac9159912762d/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmt_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmt_allocator.cc?ref=2c59c2d1a2c4903513e6978655eac9159912762d", "patch": "@@ -31,6 +31,11 @@\n #include <ext/mt_allocator.h>\n #include <cstring>\n \n+// The include file is needed for uintptr_t. If this file does not compile,\n+// check to make sure the target has <stdint.h> and that it provides\n+// uintptr_t.\n+#include <stdint.h>\n+\n namespace\n {\n #ifdef __GTHREADS\n@@ -74,7 +79,7 @@ namespace\n     __freelist& freelist = get_freelist();\n     {\n       __gnu_cxx::__scoped_lock sentry(get_freelist_mutex());\n-      size_t _M_id = reinterpret_cast<size_t>(__id);\n+      uintptr_t _M_id = reinterpret_cast<uintptr_t>(__id);\n       \n       typedef __gnu_cxx::__pool<true>::_Thread_record _Thread_record;\n       _Thread_record* __tr = &freelist._M_thread_freelist_array[_M_id - 1];\n@@ -627,7 +632,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       {\n \t__freelist& freelist = get_freelist();\n \tvoid* v = __gthread_getspecific(freelist._M_key);\n-\tsize_t _M_id = (size_t)v;\n+\tuintptr_t _M_id = (uintptr_t)v;\n \tif (_M_id == 0)\n \t  {\n \t    {"}]}