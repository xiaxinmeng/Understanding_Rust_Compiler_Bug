{"sha": "c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM3YzEzZTE1ZTJhOGU5ZjI3MTZjMjlmZTg5Y2MyMzAwZDQ0NTdjZQ==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2021-03-19T20:01:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-18T08:36:52Z"}, "message": "[Ada] Ada2020: AI12-0195 overriding class-wide pre/post conditions\n\ngcc/ada/\n\n\t* contracts.adb (Process_Spec_Postconditions): Add missing\n\tsupport for aliased subprograms and handle wrappers of\n\tclass-wide pre/post conditions.\n\t(Process_Inherited_Preconditions): Add missing support for\n\taliased subprograms and handle wrappers of class-wide pre/post\n\tconditions.\n\t* einfo.ads (Class_Wide_Clone): Fix typo.\n\t(Is_Class_Wide_Clone): Removed since it is not referenced.\n\t(Is_Wrapper): Documenting new flag.\n\t(LSP_Subprogram): Documenting new attribute.\n\t* exp_ch3.adb (Make_Controlling_Function_Wrappers): Decorate\n\twrapper as Is_Wrapper and adjust call to\n\tOverride_Dispatching_Operation.\n\t* freeze.adb (Build_Inherited_Condition_Pragmas): Fix typo in\n\tdocumentation.\n\t(Check_Inherited_Conditions): Handle LSP wrappers; ensure\n\tcorrect decoration of LSP wrappers.\n\t* gen_il-fields.ads (Is_Class_Wide_Clone): Removed.\n\t(Is_Wrapper): Added.\n\t(LSP_Subprogram): Added.\n\t* gen_il-gen-gen_entities.adb (Is_Class_Wide_Clone): Removed.\n\t(Is_Wrapper): Added.\n\t(LSP_Subprogram): Added.\n\t* gen_il-internals.adb (Image): Adding uppercase image of\n\tLSP_Subprogram.\n\t* sem_ch6.adb (New_Overloaded_Entity): Fix decoration of LSP\n\twrappers.\n\t* sem_disp.ads (Override_Dispatching_Operation): Remove\n\tparameter Is_Wrapper; no longer needed.\n\t* sem_disp.adb (Check_Dispatching_Operation): Adjust assertion.\n\t(Override_Dispatching_Operation): Remove parameter Is_Wrapper;\n\tno longer needed.\n\t* treepr.adb (Image): Adding uppercase image of LSP_Subprogram.", "tree": {"sha": "163e5dbe21a342598bdd5276ac9eee6a18438b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/163e5dbe21a342598bdd5276ac9eee6a18438b90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4edcee5b2bf6ca2c0f7dcf5edcbe6daf715fc26a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4edcee5b2bf6ca2c0f7dcf5edcbe6daf715fc26a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4edcee5b2bf6ca2c0f7dcf5edcbe6daf715fc26a"}], "stats": {"total": 175, "additions": 144, "deletions": 31}, "files": [{"sha": "d096cbb7752d7f965793f0050ea57327808c419d", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -2610,7 +2610,21 @@ package body Contracts is\n \n             for Index in Subps'Range loop\n                Subp_Id := Subps (Index);\n-               Items   := Contract (Subp_Id);\n+\n+               if Present (Alias (Subp_Id)) then\n+                  Subp_Id := Ultimate_Alias (Subp_Id);\n+               end if;\n+\n+               --  Wrappers of class-wide pre/post conditions reference the\n+               --  parent primitive that has the inherited contract.\n+\n+               if Is_Wrapper (Subp_Id)\n+                 and then Present (LSP_Subprogram (Subp_Id))\n+               then\n+                  Subp_Id := LSP_Subprogram (Subp_Id);\n+               end if;\n+\n+               Items := Contract (Subp_Id);\n \n                if Present (Items) then\n                   Prag := Pre_Post_Conditions (Items);\n@@ -2892,7 +2906,21 @@ package body Contracts is\n \n             for Index in Subps'Range loop\n                Subp_Id := Subps (Index);\n-               Items   := Contract (Subp_Id);\n+\n+               if Present (Alias (Subp_Id)) then\n+                  Subp_Id := Ultimate_Alias (Subp_Id);\n+               end if;\n+\n+               --  Wrappers of class-wide pre/post conditions reference the\n+               --  parent primitive that has the inherited contract.\n+\n+               if Is_Wrapper (Subp_Id)\n+                 and then Present (LSP_Subprogram (Subp_Id))\n+               then\n+                  Subp_Id := LSP_Subprogram (Subp_Id);\n+               end if;\n+\n+               Items := Contract (Subp_Id);\n \n                if Present (Items) then\n                   Prag := Pre_Post_Conditions (Items);"}, {"sha": "93ccffb699e17cb37cc0962331b9da77151c5101", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -612,7 +612,7 @@ package Einfo is\n \n --    Class_Wide_Clone\n --       Defined on subprogram entities. Set if the subprogram has a class-wide\n---       ore- or postcondition, and the expression contains calls to other\n+--       pre- or postcondition, and the expression contains calls to other\n --       primitive funtions of the type. Used to implement properly the\n --       semantics of inherited operations whose class-wide condition may\n --       be different from that of the ancestor (See AI012-0195).\n@@ -2385,12 +2385,6 @@ package Einfo is\n --       Defined in all entities. Set only for defining entities of program\n --       units that are child units (but False for subunits).\n \n---    Is_Class_Wide_Clone\n---       Defined on subprogram entities. Set for subprograms built in order\n---       to implement properly the inheritance of class-wide pre- or post-\n---       conditions when the condition contains calls to other primitives\n---       of the ancestor type. Used to implement AI12-0195.\n-\n --    Is_Class_Wide_Equivalent_Type\n --       Defined in record types and subtypes. Set to True, if the type acts\n --       as a class-wide equivalent type, i.e. the Equivalent_Type field of\n@@ -3408,6 +3402,11 @@ package Einfo is\n --       Defined in package entities. Indicates that the package has been\n --       created as a wrapper for a subprogram instantiation.\n \n+--    Is_Wrapper\n+--       Defined in subprogram entities. Indicates that it has been created as\n+--       a wrapper to handle inherited class-wide pre/post conditions that call\n+--       overridden primitives or as a wrapper of a controlling function.\n+\n --    Itype_Printed\n --       Defined in all type and subtype entities. Set in Itypes if the Itype\n --       has been printed by Sprint. This is used to avoid printing an Itype\n@@ -4715,6 +4714,12 @@ package Einfo is\n --       Defined in functions and procedures which have been classified as\n --       Is_Primitive_Wrapper. Set to the entity being wrapper.\n \n+--    LSP_Subprogram\n+--       Defined in subprogram entities. Set on wrappers created to handle\n+--       inherited class-wide pre/post conditions that call overridden\n+--       primitives. It references the parent primitive that has the\n+--       class-wide pre/post conditions.\n+\n ---------------------------\n -- Renaming and Aliasing --\n ---------------------------\n@@ -5487,6 +5492,7 @@ package Einfo is\n    --    Protection_Object                    (for concurrent kind)\n    --    Subps_Index                          (non-generic case only)\n    --    Interface_Alias\n+   --    LSP_Subprogram                       (non-generic case only)\n    --    Overridden_Operation\n    --    Wrapped_Entity                       (non-generic case only)\n    --    Extra_Formals\n@@ -5546,6 +5552,7 @@ package Einfo is\n    --    Is_Private_Primitive                 (non-generic case only)\n    --    Is_Pure\n    --    Is_Visible_Lib_Unit\n+   --    Is_Wrapper\n    --    Needs_No_Actuals\n    --    Requires_Overriding                  (non-generic case only)\n    --    Return_Present\n@@ -5687,6 +5694,7 @@ package Einfo is\n    --    Linker_Section_Pragma\n    --    Contract\n    --    Import_Pragma\n+   --    LSP_Subprogram\n    --    SPARK_Pragma\n    --    Default_Expressions_Processed\n    --    Has_Nested_Subprogram\n@@ -5697,6 +5705,7 @@ package Einfo is\n    --    Is_Machine_Code_Subprogram\n    --    Is_Primitive\n    --    Is_Pure\n+   --    Is_Wrapper\n    --    SPARK_Pragma_Inherited\n    --    Interface_Name $$$\n    --    Renamed_Entity $$$\n@@ -5841,6 +5850,7 @@ package Einfo is\n    --    Protection_Object                    (for concurrent kind)\n    --    Subps_Index                          (non-generic case only)\n    --    Interface_Alias\n+   --    LSP_Subprogram                       (non-generic case only)\n    --    Overridden_Operation                 (never for init proc)\n    --    Wrapped_Entity                       (non-generic case only)\n    --    Extra_Formals\n@@ -5899,6 +5909,7 @@ package Einfo is\n    --    Is_Private_Descendant\n    --    Is_Private_Primitive                 (non-generic case only)\n    --    Is_Pure\n+   --    Is_Wrapper\n    --    Is_Valued_Procedure\n    --    Is_Visible_Lib_Unit\n    --    Needs_No_Actuals"}, {"sha": "6a8b33073cf560f71fe0572de7c50223232540df", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -9703,10 +9703,10 @@ package body Exp_Ch3 is\n             --  to override interface primitives.\n \n             Mutate_Ekind (Defining_Unit_Name (Func_Spec), E_Function);\n+            Set_Is_Wrapper (Defining_Unit_Name (Func_Spec));\n \n             Override_Dispatching_Operation\n-              (Tag_Typ, Subp, New_Op => Defining_Unit_Name (Func_Spec),\n-               Is_Wrapper => True);\n+              (Tag_Typ, Subp, New_Op => Defining_Unit_Name (Func_Spec));\n          end if;\n \n       <<Next_Prim>>"}, {"sha": "3ea4a99b84d1679aae215b5c5e46749a2300ac63", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -1474,7 +1474,7 @@ package body Freeze is\n       --  pragmas force the creation of a wrapper for the inherited operation.\n       --  If the ancestor is being overridden, the pragmas are constructed only\n       --  to verify their legality, in case they contain calls to other\n-      --  primitives that may haven been overridden.\n+      --  primitives that may have been overridden.\n \n       ---------------------------------------\n       -- Build_Inherited_Condition_Pragmas --\n@@ -1558,6 +1558,15 @@ package body Freeze is\n          then\n             Par_Prim := Overridden_Operation (Prim);\n \n+            --  When the primitive is an LSP wrapper we climb to the parent\n+            --  primitive that has the inherited contract.\n+\n+            if Is_Wrapper (Par_Prim)\n+              and then Present (LSP_Subprogram (Par_Prim))\n+            then\n+               Par_Prim := LSP_Subprogram (Par_Prim);\n+            end if;\n+\n             --  Analyze the contract items of the overridden operation, before\n             --  they are rewritten as pragmas.\n \n@@ -1596,6 +1605,15 @@ package body Freeze is\n          if not Comes_From_Source (Prim) and then Present (Alias (Prim)) then\n             Par_Prim := Alias (Prim);\n \n+            --  When the primitive is an LSP wrapper we climb to the parent\n+            --  primitive that has the inherited contract.\n+\n+            if Is_Wrapper (Par_Prim)\n+              and then Present (LSP_Subprogram (Par_Prim))\n+            then\n+               Par_Prim := LSP_Subprogram (Par_Prim);\n+            end if;\n+\n             --  Analyze the contract items of the parent operation, and\n             --  determine whether a wrapper is needed. This is determined\n             --  when the condition is rewritten in sem_prag, using the\n@@ -1629,14 +1647,22 @@ package body Freeze is\n             --  statement with a call.\n \n             declare\n+               Alias_Id : constant Entity_Id  := Ultimate_Alias (Prim);\n                Loc      : constant Source_Ptr := Sloc (R);\n                Par_R    : constant Node_Id    := Parent (R);\n                New_Body : Node_Id;\n                New_Decl : Node_Id;\n+               New_Id   : Entity_Id;\n                New_Spec : Node_Id;\n \n             begin\n+               --  The wrapper must be analyzed in the scope of its wrapped\n+               --  primitive (to ensure its correct decoration).\n+\n+               Push_Scope (Scope (Prim));\n+\n                New_Spec := Build_Overriding_Spec (Par_Prim, R);\n+               New_Id   := Defining_Entity (New_Spec);\n                New_Decl :=\n                  Make_Subprogram_Declaration (Loc,\n                    Specification => New_Spec);\n@@ -1658,9 +1684,26 @@ package body Freeze is\n                     Build_Class_Wide_Clone_Call\n                       (Loc, Decls, Par_Prim, New_Spec);\n \n+                  --  Adding minimum decoration\n+\n+                  Mutate_Ekind (New_Id, Ekind (Par_Prim));\n+                  Set_LSP_Subprogram (New_Id, Par_Prim);\n+                  Set_Is_Wrapper (New_Id);\n+\n                   Insert_List_After_And_Analyze\n                     (Par_R, New_List (New_Decl, New_Body));\n+\n+                  --  Ensure correct decoration\n+\n+                  pragma Assert (Present (Alias (Prim)));\n+                  pragma Assert (Present (Overridden_Operation (New_Id)));\n+                  pragma Assert (Overridden_Operation (New_Id) = Alias_Id);\n                end if;\n+\n+               pragma Assert (Is_Dispatching_Operation (Prim));\n+               pragma Assert (Is_Dispatching_Operation (New_Id));\n+\n+               Pop_Scope;\n             end;\n          end if;\n "}, {"sha": "220db606544f5f269a56c1acca4c3e4ef4596daa", "filename": "gcc/ada/gen_il-fields.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fgen_il-fields.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fgen_il-fields.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-fields.ads?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -677,7 +677,6 @@ package Gen_IL.Fields is\n       Is_Character_Type,\n       Is_Checked_Ghost_Entity,\n       Is_Child_Unit,\n-      Is_Class_Wide_Clone,\n       Is_Class_Wide_Equivalent_Type,\n       Is_Compilation_Unit,\n       Is_Completely_Hidden,\n@@ -789,6 +788,7 @@ package Gen_IL.Fields is\n       Is_Volatile_Type,\n       Is_Volatile_Object,\n       Is_Volatile_Full_Access,\n+      Is_Wrapper,\n       Itype_Printed,\n       Kill_Elaboration_Checks,\n       Kill_Range_Checks,\n@@ -802,6 +802,7 @@ package Gen_IL.Fields is\n       Lit_Indexes,\n       Lit_Strings,\n       Low_Bound_Tested,\n+      LSP_Subprogram,\n       Machine_Radix_10,\n       Master_Id,\n       Materialize_Entity,"}, {"sha": "dda309bec108364e46297ed8f6c9f2ed80e805f6", "filename": "gcc/ada/gen_il-gen-gen_entities.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_entities.adb?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -126,7 +126,6 @@ begin -- Gen_IL.Gen.Gen_Entities\n         Sm (Is_Character_Type, Flag),\n         Sm (Is_Checked_Ghost_Entity, Flag),\n         Sm (Is_Child_Unit, Flag),\n-        Sm (Is_Class_Wide_Clone, Flag),\n         Sm (Is_Class_Wide_Equivalent_Type, Flag),\n         Sm (Is_Compilation_Unit, Flag),\n         Sm (Is_Concurrent_Record_Type, Flag),\n@@ -204,6 +203,7 @@ begin -- Gen_IL.Gen.Gen_Entities\n         Sm (Is_Volatile_Type, Flag),\n         Sm (Is_Volatile_Object, Flag),\n         Sm (Is_Volatile_Full_Access, Flag),\n+        Sm (Is_Wrapper, Flag),\n         Sm (Kill_Elaboration_Checks, Flag),\n         Sm (Kill_Range_Checks, Flag),\n         Sm (Low_Bound_Tested, Flag),\n@@ -1088,6 +1088,7 @@ begin -- Gen_IL.Gen.Gen_Entities\n         Sm (Is_Predicate_Function_M, Flag),\n         Sm (Is_Primitive_Wrapper, Flag),\n         Sm (Is_Private_Primitive, Flag),\n+        Sm (LSP_Subprogram, Node_Id),\n         Sm (Mechanism, Mechanism_Type),\n         Sm (Next_Inlined_Subprogram, Node_Id),\n         Sm (Original_Protected_Subprogram, Node_Id),\n@@ -1107,7 +1108,8 @@ begin -- Gen_IL.Gen.Gen_Entities\n        --  defined concatenation operator created whenever an array is declared.\n        --  We do not make normal derived operators explicit in the tree, but the\n        --  concatenation operators are made explicit.\n-       (Sm (Extra_Accessibility_Of_Result, Node_Id)));\n+       (Sm (Extra_Accessibility_Of_Result, Node_Id),\n+        Sm (LSP_Subprogram, Node_Id)));\n \n    Cc (E_Procedure, Subprogram_Kind,\n        --  A procedure, created by a procedure declaration or a procedure\n@@ -1137,6 +1139,7 @@ begin -- Gen_IL.Gen.Gen_Entities\n         Sm (Is_Primitive_Wrapper, Flag),\n         Sm (Is_Private_Primitive, Flag),\n         Sm (Is_Valued_Procedure, Flag),\n+        Sm (LSP_Subprogram, Node_Id),\n         Sm (Next_Inlined_Subprogram, Node_Id),\n         Sm (Original_Protected_Subprogram, Node_Id),\n         Sm (Postconditions_Proc, Node_Id),"}, {"sha": "d676d91e900e2025f231f3fba129eecfe7922ba8", "filename": "gcc/ada/gen_il-internals.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fgen_il-internals.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fgen_il-internals.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-internals.adb?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -317,6 +317,8 @@ package body Gen_IL.Internals is\n             return \"Is_SPARK_Mode_On_Node\";\n          when Local_Raise_Not_OK =>\n             return \"Local_Raise_Not_OK\";\n+         when LSP_Subprogram =>\n+            return \"LSP_Subprogram\";\n          when OK_To_Rename =>\n             return \"OK_To_Rename\";\n          when Referenced_As_LHS =>"}, {"sha": "05e74efab906c25857d6b93e7cd922b3c392292e", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 32, "deletions": 7, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -12080,9 +12080,22 @@ package body Sem_Ch6 is\n                   --  must check whether the target is an init_proc.\n \n                   elsif not Is_Init_Proc (S) then\n-                     Set_Overridden_Operation    (S, E);\n-                     Inherit_Subprogram_Contract (S, E);\n-                     Set_Is_Ada_2022_Only        (S, Is_Ada_2022_Only (E));\n+\n+                     --  LSP wrappers must override the ultimate alias of their\n+                     --  wrapped dispatching primitive E; required to traverse\n+                     --  the chain of ancestor primitives (c.f. Map_Primitives)\n+                     --  They don't inherit contracts.\n+\n+                     if Is_Wrapper (S)\n+                       and then Present (LSP_Subprogram (S))\n+                     then\n+                        Set_Overridden_Operation    (S, Ultimate_Alias (E));\n+                     else\n+                        Set_Overridden_Operation    (S, E);\n+                        Inherit_Subprogram_Contract (S, E);\n+                     end if;\n+\n+                     Set_Is_Ada_2022_Only (S, Is_Ada_2022_Only (E));\n                   end if;\n \n                   Check_Overriding_Indicator (S, E, Is_Primitive => True);\n@@ -12109,10 +12122,22 @@ package body Sem_Ch6 is\n                           Is_Predefined_Dispatching_Operation (Alias (E)))\n                   then\n                      if Present (Alias (E)) then\n-                        Set_Overridden_Operation    (S, Alias (E));\n-                        Inherit_Subprogram_Contract (S, Alias (E));\n-                        Set_Is_Ada_2022_Only        (S,\n-                          Is_Ada_2022_Only (Alias (E)));\n+\n+                        --  LSP wrappers must override the ultimate alias of\n+                        --  their wrapped dispatching primitive E; required to\n+                        --  traverse the chain of ancestor primitives (see\n+                        --  Map_Primitives). They don't inherit contracts.\n+\n+                        if Is_Wrapper (S)\n+                          and then Present (LSP_Subprogram (S))\n+                        then\n+                           Set_Overridden_Operation    (S, Ultimate_Alias (E));\n+                        else\n+                           Set_Overridden_Operation    (S, Alias (E));\n+                           Inherit_Subprogram_Contract (S, Alias (E));\n+                        end if;\n+\n+                        Set_Is_Ada_2022_Only (S, Is_Ada_2022_Only (Alias (E)));\n                      end if;\n                   end if;\n "}, {"sha": "15b700fa9838db29a0146dbdf4d11c9eff406977", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -1239,7 +1239,9 @@ package body Sem_Disp is\n               or else Get_TSS_Name (Subp) = TSS_Stream_Read\n               or else Get_TSS_Name (Subp) = TSS_Stream_Write\n \n-              or else Present (Contract (Overridden_Operation (Subp)))\n+              or else\n+               (Is_Wrapper (Subp)\n+                 and then Present (LSP_Subprogram (Subp)))\n \n               or else GNATprove_Mode);\n \n@@ -2646,8 +2648,7 @@ package body Sem_Disp is\n    procedure Override_Dispatching_Operation\n      (Tagged_Type : Entity_Id;\n       Prev_Op     : Entity_Id;\n-      New_Op      : Entity_Id;\n-      Is_Wrapper  : Boolean := False)\n+      New_Op      : Entity_Id)\n    is\n       Elmt : Elmt_Id;\n       Prim : Node_Id;\n@@ -2724,7 +2725,7 @@ package body Sem_Disp is\n                --  wrappers of controlling functions since (at this stage)\n                --  they are not yet decorated.\n \n-               if not Is_Wrapper then\n+               if not Is_Wrapper (New_Op) then\n                   Check_Subtype_Conformant (New_Op, Prim);\n \n                   Set_Is_Abstract_Subprogram (Prim,"}, {"sha": "7b42cf54d1294ddd7975e96f0f7607dfebd9367b", "filename": "gcc/ada/sem_disp.ads", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fsem_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Fsem_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.ads?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -167,13 +167,10 @@ package Sem_Disp is\n    procedure Override_Dispatching_Operation\n      (Tagged_Type : Entity_Id;\n       Prev_Op     : Entity_Id;\n-      New_Op      : Entity_Id;\n-      Is_Wrapper  : Boolean := False);\n+      New_Op      : Entity_Id);\n    --  Replace an implicit dispatching operation of the type Tagged_Type\n    --  with an explicit one. Prev_Op is an inherited primitive operation which\n-   --  is overridden by the explicit declaration of New_Op. Is_Wrapper is\n-   --  True when New_Op is an internally generated wrapper of a controlling\n-   --  function. The caller checks that Tagged_Type is indeed a tagged type.\n+   --  is overridden by the explicit declaration of New_Op.\n \n    procedure Propagate_Tag (Control : Node_Id; Actual : Node_Id);\n    --  If a function call given by Actual is tag-indeterminate, its controlling"}, {"sha": "519242e1d161e07a03c2ecaf77238ab9d228a200", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37c13e15e2a8e9f2716c29fe89cc2300d4457ce/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=c37c13e15e2a8e9f2716c29fe89cc2300d4457ce", "patch": "@@ -371,6 +371,8 @@ package body Treepr is\n             return \"Is_Elaboration_Warnings_OK_Id\";\n          when F_Is_RACW_Stub_Type =>\n             return \"Is_RACW_Stub_Type\";\n+         when F_LSP_Subprogram =>\n+            return \"LSP_Subprogram\";\n          when F_OK_To_Rename =>\n             return \"OK_To_Rename\";\n          when F_Referenced_As_LHS =>"}]}