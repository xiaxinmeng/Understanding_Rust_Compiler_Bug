{"sha": "8847064b3d574211c25e1ee6c88f26c83cf1508e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg0NzA2NGIzZDU3NDIxMWMyNWUxZWU2Yzg4ZjI2YzgzY2YxNTA4ZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-02-03T00:15:46Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-02-03T00:15:46Z"}, "message": "Makefile.in: Rebuilt.\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (classes.stamp): New target, broken out from\n\tlibgcj.jar target.\n\t($(all_java_class_files)): Depend on it.\n\t(libgcj-@gcc_version@.jar): Likewise.\n\t(all-recursive): Likewise.\n\t(CLEANFILES): Include classes.stamp.\n\nFrom-SVN: r94636", "tree": {"sha": "35d4e1e38e43a58316ee54cad960f3aadee5a5a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35d4e1e38e43a58316ee54cad960f3aadee5a5a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8847064b3d574211c25e1ee6c88f26c83cf1508e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8847064b3d574211c25e1ee6c88f26c83cf1508e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8847064b3d574211c25e1ee6c88f26c83cf1508e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8847064b3d574211c25e1ee6c88f26c83cf1508e/comments", "author": null, "committer": null, "parents": [{"sha": "100d337a9d06bbc8f367e37debbe69610b04e72f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100d337a9d06bbc8f367e37debbe69610b04e72f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/100d337a9d06bbc8f367e37debbe69610b04e72f"}], "stats": {"total": 136, "additions": 55, "deletions": 81}, "files": [{"sha": "b7d1c39ca93bda25def15ffdb1e9f494bfad0c83", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8847064b3d574211c25e1ee6c88f26c83cf1508e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8847064b3d574211c25e1ee6c88f26c83cf1508e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8847064b3d574211c25e1ee6c88f26c83cf1508e", "patch": "@@ -1,3 +1,13 @@\n+2005-02-02  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (classes.stamp): New target, broken out from\n+\tlibgcj.jar target.\n+\t($(all_java_class_files)): Depend on it.\n+\t(libgcj-@gcc_version@.jar): Likewise.\n+\t(all-recursive): Likewise.\n+\t(CLEANFILES): Include classes.stamp.\n+\n 2005-02-02  Hans Boehm  <Hans.Boehm@hp.com>\n \n \t* link.cc: Include <stdio.h>"}, {"sha": "3daf09bd7da3c4f43b87402d0b369ad2c65c05da", "filename": "libjava/Makefile.am", "status": "modified", "additions": 14, "deletions": 34, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8847064b3d574211c25e1ee6c88f26c83cf1508e/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8847064b3d574211c25e1ee6c88f26c83cf1508e/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=8847064b3d574211c25e1ee6c88f26c83cf1508e", "patch": "@@ -504,39 +504,16 @@ if ONESTEP\n \n # Compile all classfiles in one go.\n \n-libgcj-@gcc_version@.jar: $(all_java_source_files)\n-\t-@rm -f libgcj-@gcc_version@.jar\n+classes.stamp: $(all_java_source_files)\n \t@echo Compiling Java sourcefiles...\n \t@: $(call write_entries_to_file,$?,libgcj.sourcelist)\n \t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(BOOTCLASSPATH) -d $(here) @libgcj.sourcelist\n-## Note that we explicitly want to include directory information.\n-\t(find java gnu javax org -type d -o -type f -name '*.class'; \\\n-## Ugly code to avoid \"echo -C\".  Must separate each entry by a newline\n-## Gross but easy.\n-\tfor file in $(all_property_files); do \\\n-\t  echo \"x-C\" | sed -e 's/^.//'; \\\n-\t  echo $(srcdir); \\\n-\t  echo $$file; \\\n-\tdone) | \\\n-\t  sed -e '/\\/xlib/d' -e '/\\/\\.libs/d' -e '/\\/\\.deps/d' | \\\n-\t  $(ZIP) -cfM0E@ $@\n-## Now include the classes from external/.\n-\tfor dir in sax w3c_dom; do \\\n-\t  (cd external/$$dir; \\\n-\t  find org -type f -name '*.class' -print | while read file; do \\\n-\t    echo \"x-C\" | sed -e 's/^.//'; \\\n-\t    echo external/$$dir; \\\n-\t    echo $$file; \\\n-          done) | \\\n-\t  $(ZIP) -ufM0E@ $@; \\\n-\tdone\n \n-# This next rule seems backward, but reflects the fact\n-# that 1) all classfiles are compiled in one go when the\n-# libgcj jarfile is built and 2) anything which depends\n-# on a particular .class file must wait until the jarfile\n-# is built.\n-$(all_java_class_files): libgcj-@gcc_version@.jar\n+# This next rule seems backward, but reflects the fact that 1) all\n+# classfiles are compiled in one go when classes.stamp is built and 2)\n+# anything which depends on a particular .class file must wait until\n+# this file is built.\n+$(all_java_class_files): classes.stamp\n \n else # !ONESTEP\n \n@@ -545,7 +522,12 @@ else # !ONESTEP\n .java.class:\n \t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(BOOTCLASSPATH) -d $(here) $<\n \n-libgcj-@gcc_version@.jar: $(all_java_class_files) $(all_property_files)\n+classes.stamp: $(all_java_class_files) $(all_property_files)\n+\techo > classes.stamp\n+\n+endif\n+\n+libgcj-@gcc_version@.jar: classes.stamp\n \t-@rm -f libgcj-@gcc_version@.jar\n ## Note that we explicitly want to include directory information.\n \t(find java gnu javax org -type d -o -type f -name '*.class'; \\\n@@ -569,9 +551,7 @@ libgcj-@gcc_version@.jar: $(all_java_class_files) $(all_property_files)\n \t  $(ZIP) -ufM0E@ $@; \\\n \tdone\n \n-endif\n-\n-CLEANFILES = libgcj-@gcc_version@.jar\n+CLEANFILES = libgcj-@gcc_version@.jar classes.stamp\n \n mostlyclean-local:\n ## Use libtool rm to remove each libtool object\n@@ -3761,7 +3741,7 @@ texinfo: TexinfoDoclet.class\n ## the C++ code whenever any .java file is touched.\n ## Also force all the class files to build first. This makes them build in\n ## the right order to improve performance.\n-all-recursive: libgcj-@gcc_version@.jar $(nat_headers) $(xlib_nat_headers)\n+all-recursive: classes.stamp $(nat_headers) $(xlib_nat_headers)\n \n ## ################################################################\n "}, {"sha": "d73b69ecfaa556fca3cb12992036981752d48396", "filename": "libjava/Makefile.in", "status": "modified", "additions": 31, "deletions": 47, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8847064b3d574211c25e1ee6c88f26c83cf1508e/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8847064b3d574211c25e1ee6c88f26c83cf1508e/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=8847064b3d574211c25e1ee6c88f26c83cf1508e", "patch": "@@ -5164,7 +5164,7 @@ gnu/regexp/MessagesBundle_fr.properties \\\n org/ietf/jgss/MessagesBundle.properties\n \n propertyo_files = $(property_files:.properties=.properties.lo) \n-CLEANFILES = libgcj-@gcc_version@.jar\n+CLEANFILES = libgcj-@gcc_version@.jar classes.stamp\n SUFFIXES = .class .java .h .properties\n ordinary_nat_headers = \\\n     $(ordinary_java_source_files:.java=.h) \\\n@@ -25828,60 +25828,44 @@ $(lib_gnu_java_awt_peer_gtk_la_OBJECTS): $(lib_gnu_java_awt_peer_gtk_la_DEPENDEN\n \n # Compile all classfiles in one go.\n \n-@ONESTEP_TRUE@libgcj-@gcc_version@.jar: $(all_java_source_files)\n-@ONESTEP_TRUE@\t-@rm -f libgcj-@gcc_version@.jar\n+@ONESTEP_TRUE@classes.stamp: $(all_java_source_files)\n @ONESTEP_TRUE@\t@echo Compiling Java sourcefiles...\n @ONESTEP_TRUE@\t@: $(call write_entries_to_file,$?,libgcj.sourcelist)\n @ONESTEP_TRUE@\t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(BOOTCLASSPATH) -d $(here) @libgcj.sourcelist\n-@ONESTEP_TRUE@\t(find java gnu javax org -type d -o -type f -name '*.class'; \\\n-@ONESTEP_TRUE@\tfor file in $(all_property_files); do \\\n-@ONESTEP_TRUE@\t  echo \"x-C\" | sed -e 's/^.//'; \\\n-@ONESTEP_TRUE@\t  echo $(srcdir); \\\n-@ONESTEP_TRUE@\t  echo $$file; \\\n-@ONESTEP_TRUE@\tdone) | \\\n-@ONESTEP_TRUE@\t  sed -e '/\\/xlib/d' -e '/\\/\\.libs/d' -e '/\\/\\.deps/d' | \\\n-@ONESTEP_TRUE@\t  $(ZIP) -cfM0E@ $@\n-@ONESTEP_TRUE@\tfor dir in sax w3c_dom; do \\\n-@ONESTEP_TRUE@\t  (cd external/$$dir; \\\n-@ONESTEP_TRUE@\t  find org -type f -name '*.class' -print | while read file; do \\\n-@ONESTEP_TRUE@\t    echo \"x-C\" | sed -e 's/^.//'; \\\n-@ONESTEP_TRUE@\t    echo external/$$dir; \\\n-@ONESTEP_TRUE@\t    echo $$file; \\\n-@ONESTEP_TRUE@          done) | \\\n-@ONESTEP_TRUE@\t  $(ZIP) -ufM0E@ $@; \\\n-@ONESTEP_TRUE@\tdone\n-\n-# This next rule seems backward, but reflects the fact\n-# that 1) all classfiles are compiled in one go when the\n-# libgcj jarfile is built and 2) anything which depends\n-# on a particular .class file must wait until the jarfile\n-# is built.\n-@ONESTEP_TRUE@$(all_java_class_files): libgcj-@gcc_version@.jar\n+\n+# This next rule seems backward, but reflects the fact that 1) all\n+# classfiles are compiled in one go when classes.stamp is built and 2)\n+# anything which depends on a particular .class file must wait until\n+# this file is built.\n+@ONESTEP_TRUE@$(all_java_class_files): classes.stamp\n \n # Compile each classfile individually.\n \n @ONESTEP_FALSE@.java.class:\n @ONESTEP_FALSE@\t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(BOOTCLASSPATH) -d $(here) $<\n \n-@ONESTEP_FALSE@libgcj-@gcc_version@.jar: $(all_java_class_files) $(all_property_files)\n-@ONESTEP_FALSE@\t-@rm -f libgcj-@gcc_version@.jar\n-@ONESTEP_FALSE@\t(find java gnu javax org -type d -o -type f -name '*.class'; \\\n-@ONESTEP_FALSE@\tfor file in $(all_property_files); do \\\n-@ONESTEP_FALSE@\t  echo \"x-C\" | sed -e 's/^.//'; \\\n-@ONESTEP_FALSE@\t  echo $(srcdir); \\\n-@ONESTEP_FALSE@\t  echo $$file; \\\n-@ONESTEP_FALSE@\tdone) | \\\n-@ONESTEP_FALSE@\t  sed -e '/\\/xlib/d' -e '/\\/\\.libs/d' -e '/\\/\\.deps/d' | \\\n-@ONESTEP_FALSE@\t  $(ZIP) -cfM0E@ $@\n-@ONESTEP_FALSE@\tfor dir in sax w3c_dom; do \\\n-@ONESTEP_FALSE@\t  (cd external/$$dir; \\\n-@ONESTEP_FALSE@\t  find org -type f -name '*.class' -print | while read file; do \\\n-@ONESTEP_FALSE@\t    echo \"x-C\" | sed -e 's/^.//'; \\\n-@ONESTEP_FALSE@\t    echo external/$$dir; \\\n-@ONESTEP_FALSE@\t    echo $$file; \\\n-@ONESTEP_FALSE@          done) | \\\n-@ONESTEP_FALSE@\t  $(ZIP) -ufM0E@ $@; \\\n-@ONESTEP_FALSE@\tdone\n+@ONESTEP_FALSE@classes.stamp: $(all_java_class_files) $(all_property_files)\n+@ONESTEP_FALSE@\techo > classes.stamp\n+\n+libgcj-@gcc_version@.jar: classes.stamp\n+\t-@rm -f libgcj-@gcc_version@.jar\n+\t(find java gnu javax org -type d -o -type f -name '*.class'; \\\n+\tfor file in $(all_property_files); do \\\n+\t  echo \"x-C\" | sed -e 's/^.//'; \\\n+\t  echo $(srcdir); \\\n+\t  echo $$file; \\\n+\tdone) | \\\n+\t  sed -e '/\\/xlib/d' -e '/\\/\\.libs/d' -e '/\\/\\.deps/d' | \\\n+\t  $(ZIP) -cfM0E@ $@\n+\tfor dir in sax w3c_dom; do \\\n+\t  (cd external/$$dir; \\\n+\t  find org -type f -name '*.class' -print | while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo external/$$dir; \\\n+\t    echo $$file; \\\n+          done) | \\\n+\t  $(ZIP) -ufM0E@ $@; \\\n+\tdone\n \n mostlyclean-local:\n \tfind . -name '*.lo' -print | xargs $(LIBTOOL) rm -f\n@@ -26185,7 +26169,7 @@ texinfo: TexinfoDoclet.class\n \tjavadoc -outfile $(srcdir)/doc/java-util-jar.texi -doclet TexinfoDoclet -sourcepath .'$(CLASSPATH_SEPARATOR)'$(srcdir) $(srcdir)/java/util/jar/*.java\n \tjavadoc -outfile $(srcdir)/doc/java-util-zip.texi -doclet TexinfoDoclet -sourcepath .'$(CLASSPATH_SEPARATOR)'$(srcdir) $(srcdir)/java/util/zip/*.java\n \n-all-recursive: libgcj-@gcc_version@.jar $(nat_headers) $(xlib_nat_headers)\n+all-recursive: classes.stamp $(nat_headers) $(xlib_nat_headers)\n \n # Multilib support.\n .PHONY: all-multi mostlyclean-multi clean-multi distclean-multi \\"}]}