{"sha": "2fe02d7ee9500bb634b4cf8170cd13594c96f28e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZlMDJkN2VlOTUwMGJiNjM0YjRjZjgxNzBjZDEzNTk0Yzk2ZjI4ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-01T08:03:10Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-01T08:03:10Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r657", "tree": {"sha": "f51624589d241182dbe1536a1da330a2b3afe41f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f51624589d241182dbe1536a1da330a2b3afe41f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fe02d7ee9500bb634b4cf8170cd13594c96f28e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe02d7ee9500bb634b4cf8170cd13594c96f28e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe02d7ee9500bb634b4cf8170cd13594c96f28e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe02d7ee9500bb634b4cf8170cd13594c96f28e/comments", "author": null, "committer": null, "parents": [{"sha": "1fab8e81071db8ea8dfe62de8a6d79efd9dc4646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fab8e81071db8ea8dfe62de8a6d79efd9dc4646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fab8e81071db8ea8dfe62de8a6d79efd9dc4646"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "82160f54cd1d0428ba18329f4a904f5a62c614f7", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe02d7ee9500bb634b4cf8170cd13594c96f28e/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe02d7ee9500bb634b4cf8170cd13594c96f28e/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=2fe02d7ee9500bb634b4cf8170cd13594c96f28e", "patch": "@@ -696,7 +696,15 @@ operand_subword (op, i, validate_address, mode)\n       && GET_MODE_SIZE (mode) == 2 * UNITS_PER_WORD\n       && GET_CODE (op) == CONST_DOUBLE)\n     return gen_rtx (CONST_INT, VOIDmode,\n-\t\t    i ? CONST_DOUBLE_HIGH (op) : CONST_DOUBLE_LOW (op));\n+\t\t    i ^ (WORDS_BIG_ENDIAN !=\n+/* The constant is stored in the host's word-ordering,\n+   but we want to access it in the target's word-ordering.  */\n+#ifdef HOST_WORDS_BIG_ENDIAN\n+\t\t\t 1\n+#else\n+\t\t\t 0\n+#endif\n+\t\t\t ) ? CONST_DOUBLE_HIGH (op) : CONST_DOUBLE_LOW (op));\n \n   /* Single word float is a little harder, since single- and double-word\n      values often do not have the same high-order bits.  We have already"}]}