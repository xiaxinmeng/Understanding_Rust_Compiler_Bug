{"sha": "bd5159bdd4f26ea6e01c1411149e8e2eaec62531", "node_id": "C_kwDOANBUbNoAKGJkNTE1OWJkZDRmMjZlYTZlMDFjMTQxMTE0OWU4ZTJlYWVjNjI1MzE", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-11-13T11:58:09Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-11-15T19:28:07Z"}, "message": "testsuite, Darwin: In tsvc.h, use malloc for Darwin <= 9.\n\nEarlier Darwin versions fdo not have posix_memalign() but the\nmalloc implementation is guaranteed to produce memory suitably\naligned for the largest vector type.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/vect/tsvc/tsvc.h: Use malloc for Darwin 9 and\n\tearlier.", "tree": {"sha": "621ca4bc9a8865ab0c0176f1ca207d852bab2ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/621ca4bc9a8865ab0c0176f1ca207d852bab2ea9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd5159bdd4f26ea6e01c1411149e8e2eaec62531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5159bdd4f26ea6e01c1411149e8e2eaec62531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5159bdd4f26ea6e01c1411149e8e2eaec62531", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5159bdd4f26ea6e01c1411149e8e2eaec62531/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7f0147833a302d654bf95a9c89f77c7ba4c7148", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7f0147833a302d654bf95a9c89f77c7ba4c7148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7f0147833a302d654bf95a9c89f77c7ba4c7148"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "665ca747f8e040bdd609503f6b1acba80ccf75ad", "filename": "gcc/testsuite/gcc.dg/vect/tsvc/tsvc.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5159bdd4f26ea6e01c1411149e8e2eaec62531/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftsvc%2Ftsvc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5159bdd4f26ea6e01c1411149e8e2eaec62531/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftsvc%2Ftsvc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftsvc%2Ftsvc.h?ref=bd5159bdd4f26ea6e01c1411149e8e2eaec62531", "patch": "@@ -193,8 +193,16 @@ void init(int** ip, real_t* s1, real_t* s2){\n     xx = (real_t*) memalign(ARRAY_ALIGNMENT, LEN_1D*sizeof(real_t));\n     *ip = (int *) memalign(ARRAY_ALIGNMENT, LEN_1D*sizeof(real_t));\n #else\n+# if defined (__APPLE__) \\\n+    && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1060\n+    /* We have no aligned allocator, but malloc is guaranteed to return\n+       alignment suitable for the largest vector item.  */\n+    xx = (real_t*) malloc (LEN_1D*sizeof(real_t));\n+    *ip = (int *) malloc (LEN_1D*sizeof(real_t));\n+# else\n     posix_memalign ((void*)&xx, ARRAY_ALIGNMENT, LEN_1D*sizeof(real_t));\n     posix_memalign ((void*)ip, ARRAY_ALIGNMENT, LEN_1D*sizeof(real_t));\n+# endif\n #endif    \n \n     for (int i = 0; i < LEN_1D; i = i+5){"}]}