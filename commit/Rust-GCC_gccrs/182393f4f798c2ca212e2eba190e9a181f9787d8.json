{"sha": "182393f4f798c2ca212e2eba190e9a181f9787d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgyMzkzZjRmNzk4YzJjYTIxMmUyZWJhMTkwZTlhMTgxZjk3ODdkOA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-10-31T09:59:16Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-10-31T09:59:16Z"}, "message": "re PR fortran/33897 (Incorrect host association in module)\n\n2007-10-31  Paul Thomas  <pault@gcc.gnu.org>\n\n        PR fortran/33897\n        * decl.c (gfc_match_entry): Do not make ENTRY name\n        global for contained procedures.\n        * parse.c (gfc_fixup_sibling_symbols): Fix code for\n        determining whether a procedure is external.\n\n2007-10-31  Paul Thomas  <pault@gcc.gnu.org>\n\n        PR fortran/33897\n        * gfortran.dg/contained_3.f90: New.\n\nFrom-SVN: r129795", "tree": {"sha": "2284f5ec40ecf58838c860e9559b1e6731c7448b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2284f5ec40ecf58838c860e9559b1e6731c7448b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/182393f4f798c2ca212e2eba190e9a181f9787d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182393f4f798c2ca212e2eba190e9a181f9787d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/182393f4f798c2ca212e2eba190e9a181f9787d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182393f4f798c2ca212e2eba190e9a181f9787d8/comments", "author": null, "committer": null, "parents": [{"sha": "a3d977243dc773617c38a2d112da2c1332ac8287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3d977243dc773617c38a2d112da2c1332ac8287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3d977243dc773617c38a2d112da2c1332ac8287"}], "stats": {"total": 92, "additions": 85, "deletions": 7}, "files": [{"sha": "61c75bec6a43489be81847fde2a9b16e5bbee3fa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=182393f4f798c2ca212e2eba190e9a181f9787d8", "patch": "@@ -1,3 +1,11 @@\n+2007-10-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33897\n+\t* decl.c (gfc_match_entry): Do not make ENTRY name\n+\tglobal for contained procedures.\n+\t* parse.c (gfc_fixup_sibling_symbols): Fix code for\n+\tdetermining whether a procedure is external.\n+\n 2007-10-30  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/33596"}, {"sha": "dacfe4a318ab8745e5ed57a06a2cc57ef3f7937a", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=182393f4f798c2ca212e2eba190e9a181f9787d8", "patch": "@@ -4396,7 +4396,7 @@ gfc_match_entry (void)\n   if (state == COMP_SUBROUTINE)\n     {\n       /* An entry in a subroutine.  */\n-      if (!add_global_entry (name, 1))\n+      if (!gfc_current_ns->parent && !add_global_entry (name, 1))\n \treturn MATCH_ERROR;\n \n       m = gfc_match_formal_arglist (entry, 0, 1);\n@@ -4418,7 +4418,7 @@ gfc_match_entry (void)\n \t    ENTRY f() RESULT (r)\n \t can't be written as\n \t    ENTRY f RESULT (r).  */\n-      if (!add_global_entry (name, 0))\n+      if (!gfc_current_ns->parent && !add_global_entry (name, 0))\n \treturn MATCH_ERROR;\n \n       old_loc = gfc_current_locus;"}, {"sha": "f60ea9a0057ef5a51d91d83bf2849c86b4c7930f", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=182393f4f798c2ca212e2eba190e9a181f9787d8", "patch": "@@ -2858,11 +2858,26 @@ gfc_fixup_sibling_symbols (gfc_symbol *sym, gfc_namespace *siblings)\n \tcontinue;\n \n       old_sym = st->n.sym;\n-      if ((old_sym->attr.flavor == FL_PROCEDURE\n-\t   || old_sym->ts.type == BT_UNKNOWN)\n-\t  && old_sym->ns == ns\n-\t  && !old_sym->attr.contained\n-\t  && old_sym->attr.flavor != FL_NAMELIST)\n+      if (old_sym->ns == ns\n+\t    && !old_sym->attr.contained\n+\n+\t    /* By 14.6.1.3, host association should be excluded\n+\t       for the following.  */\n+\t    && !(old_sym->attr.external\n+\t\t  || (old_sym->ts.type != BT_UNKNOWN\n+\t\t\t&& !old_sym->attr.implicit_type)\n+\t\t  || old_sym->attr.flavor == FL_PARAMETER\n+\t\t  || old_sym->attr.in_common\n+\t\t  || old_sym->attr.in_equivalence\n+\t\t  || old_sym->attr.data\n+\t\t  || old_sym->attr.dummy\n+\t\t  || old_sym->attr.result\n+\t\t  || old_sym->attr.dimension\n+\t\t  || old_sym->attr.allocatable\n+\t\t  || old_sym->attr.intrinsic\n+\t\t  || old_sym->attr.generic\n+\t\t  || old_sym->attr.flavor == FL_NAMELIST\n+\t\t  || old_sym->attr.proc == PROC_ST_FUNCTION))\n \t{\n \t  /* Replace it with the symbol from the parent namespace.  */\n \t  st->n.sym = sym;"}, {"sha": "59ae5ef3d10fc312dc08e65dea579858dd6fdce5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=182393f4f798c2ca212e2eba190e9a181f9787d8", "patch": "@@ -1,3 +1,8 @@\n+2007-10-31  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33897\n+\t* gfortran.dg/contained_3.f90: New.\n+\n 2007-10-31  Christian Bruel  <christian.bruel@st.com>\n \n \tPR c++/19531"}, {"sha": "5ae41597c0376427631847c03e40aa1abebe0f92", "filename": "gcc/testsuite/gfortran.dg/contained_3.f90", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ftestsuite%2Fgfortran.dg%2Fcontained_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182393f4f798c2ca212e2eba190e9a181f9787d8/gcc%2Ftestsuite%2Fgfortran.dg%2Fcontained_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcontained_3.f90?ref=182393f4f798c2ca212e2eba190e9a181f9787d8", "patch": "@@ -0,0 +1,50 @@\n+! { dg-do run }\n+! Tests the fix for PR33897, in which gfortran missed that the\n+! declaration of 'setbd' in 'nxtstg2' made it external.  Also\n+! the ENTRY 'setbd' would conflict with the external 'setbd'.\n+!\n+! Contributed by Michael Richmond <michael.a.richmond@nasa.gov>\n+!\n+MODULE ksbin1_aux_mod\n+ CONTAINS\n+  SUBROUTINE nxtstg1()\n+    INTEGER :: i\n+    i = setbd()  ! available by host association.\n+    if (setbd () .ne. 99 ) call abort ()\n+  END SUBROUTINE nxtstg1\n+\n+  SUBROUTINE nxtstg2()\n+    INTEGER :: i\n+    integer :: setbd  ! makes it external.\n+    i = setbd()       ! this is the PR\n+    if (setbd () .ne. 42 ) call abort ()\n+  END SUBROUTINE nxtstg2\n+\n+  FUNCTION binden()\n+    INTEGER :: binden\n+    INTEGER :: setbd\n+    binden = 0\n+  ENTRY setbd()\n+    setbd = 99\n+  END FUNCTION binden\n+END MODULE ksbin1_aux_mod\n+\n+PROGRAM test\n+  USE ksbin1_aux_mod, only : nxtstg1, nxtstg2\n+  integer setbd ! setbd is external, since not use assoc.\n+  CALL nxtstg1()\n+  CALL nxtstg2()\n+  if (setbd () .ne. 42 ) call abort ()\n+  call foo\n+contains\n+  subroutine foo\n+    USE ksbin1_aux_mod ! module setbd is available\n+    if (setbd () .ne. 99 ) call abort ()\n+  end subroutine\n+END PROGRAM test\n+\n+INTEGER FUNCTION setbd()\n+  setbd=42\n+END FUNCTION setbd\n+\n+! { dg-final { cleanup-modules \"ksbin1_aux_mod\" } }"}]}