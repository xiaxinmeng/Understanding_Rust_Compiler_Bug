{"sha": "ce236858e339040a4814a70f62282ad5da7d9c34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UyMzY4NThlMzM5MDQwYTQ4MTRhNzBmNjIyODJhZDVkYTdkOWMzNA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-10-28T19:55:43Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-10-28T19:55:43Z"}, "message": "mn10300-protos.h (function_arg): Delete.\n\n\t* config/mn10300/mn10300-protos.h (function_arg): Delete.\n\t* config/mn10300/mn10300.h (FUNCTION_ARG): Delete.\n\t(FUNCTION_ARG_ADVANCE): Delete.\n\t* config/mn10300/mn10300.c (function_arg): Rename to...\n\t(mn10300_function_arg): ...this.  Make static.  Take a const_tree\n\tand a bool.\n\t(mn10300_function_arg_advance): New function.\n\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n\nFrom-SVN: r166036", "tree": {"sha": "0286be11b6b6942b1dff408d44d6d1e2ff131a25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0286be11b6b6942b1dff408d44d6d1e2ff131a25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce236858e339040a4814a70f62282ad5da7d9c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce236858e339040a4814a70f62282ad5da7d9c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce236858e339040a4814a70f62282ad5da7d9c34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce236858e339040a4814a70f62282ad5da7d9c34/comments", "author": null, "committer": null, "parents": [{"sha": "24ef86d7ad359cbe86946ce7cbebe151169909c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24ef86d7ad359cbe86946ce7cbebe151169909c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24ef86d7ad359cbe86946ce7cbebe151169909c1"}], "stats": {"total": 61, "additions": 30, "deletions": 31}, "files": [{"sha": "709b3644d1038804ffb7dc01ef8d3705fe62fa00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce236858e339040a4814a70f62282ad5da7d9c34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce236858e339040a4814a70f62282ad5da7d9c34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce236858e339040a4814a70f62282ad5da7d9c34", "patch": "@@ -1,3 +1,14 @@\n+2010-10-28  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/mn10300/mn10300-protos.h (function_arg): Delete.\n+\t* config/mn10300/mn10300.h (FUNCTION_ARG): Delete.\n+\t(FUNCTION_ARG_ADVANCE): Delete.\n+\t* config/mn10300/mn10300.c (function_arg): Rename to...\n+\t(mn10300_function_arg): ...this.  Make static.  Take a const_tree\n+\tand a bool.\n+\t(mn10300_function_arg_advance): New function.\n+\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n+\n 2010-10-28  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/iq2000/iq2000-protos.h (function_arg): Delete."}, {"sha": "ebf915e8e7e35c8b1200710ae442203a17b440b6", "filename": "gcc/config/mn10300/mn10300-protos.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce236858e339040a4814a70f62282ad5da7d9c34/gcc%2Fconfig%2Fmn10300%2Fmn10300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce236858e339040a4814a70f62282ad5da7d9c34/gcc%2Fconfig%2Fmn10300%2Fmn10300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300-protos.h?ref=ce236858e339040a4814a70f62282ad5da7d9c34", "patch": "@@ -43,10 +43,6 @@ extern int   mn10300_symbolic_operand (rtx, Mmode);\n extern bool  mn10300_wide_const_load_uses_clr (rtx operands[2]);\n #endif /* RTX_CODE */\n \n-#ifdef TREE_CODE\n-extern struct rtx_def * mn10300_function_arg (CUMULATIVE_ARGS *, Mmode, tree, int);\n-#endif /* TREE_CODE */\n-\n extern int   mn10300_can_use_return_insn (void);\n extern void  mn10300_expand_prologue (void);\n extern void  mn10300_expand_epilogue (void);"}, {"sha": "4599a100abc140a0ffb474c31325dc45dc0913be", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce236858e339040a4814a70f62282ad5da7d9c34/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce236858e339040a4814a70f62282ad5da7d9c34/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=ce236858e339040a4814a70f62282ad5da7d9c34", "patch": "@@ -1417,9 +1417,9 @@ mn10300_pass_by_reference (CUMULATIVE_ARGS *cum ATTRIBUTE_UNUSED,\n /* Return an RTX to represent where a value with mode MODE will be returned\n    from a function.  If the result is NULL_RTX, the argument is pushed.  */\n \n-rtx\n+static rtx\n mn10300_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n-\t\t      tree type, int named ATTRIBUTE_UNUSED)\n+\t\t      const_tree type, bool named ATTRIBUTE_UNUSED)\n {\n   rtx result = NULL_RTX;\n   int size, align;\n@@ -1464,6 +1464,19 @@ mn10300_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n   return result;\n }\n \n+/* Update the data in CUM to advance over an argument\n+   of mode MODE and data type TYPE.\n+   (TYPE is null for libcalls where that information may not be available.)  */\n+\n+static void\n+mn10300_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t\t      const_tree type, bool named ATTRIBUTE_UNUSED)\n+{\n+  cum->nbytes += (mode != BLKmode\n+\t\t  ? (GET_MODE_SIZE (mode) + 3) & ~3\n+\t\t  : (int_size_in_bytes (type) + 3) & ~3);\n+}\n+\n /* Return the number of bytes of registers to use for an argument passed\n    partially in registers and partially in memory.  */\n \n@@ -2303,6 +2316,10 @@ mn10300_select_cc_mode (rtx x)\n #define TARGET_CALLEE_COPIES hook_bool_CUMULATIVE_ARGS_mode_tree_bool_true\n #undef  TARGET_ARG_PARTIAL_BYTES\n #define TARGET_ARG_PARTIAL_BYTES mn10300_arg_partial_bytes\n+#undef  TARGET_FUNCTION_ARG\n+#define TARGET_FUNCTION_ARG mn10300_function_arg\n+#undef  TARGET_FUNCTION_ARG_ADVANCE\n+#define TARGET_FUNCTION_ARG_ADVANCE mn10300_function_arg_advance\n \n #undef  TARGET_EXPAND_BUILTIN_SAVEREGS\n #define TARGET_EXPAND_BUILTIN_SAVEREGS mn10300_builtin_saveregs"}, {"sha": "58f2719cba95155b22ac71fc860bf2a4ebad5d74", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce236858e339040a4814a70f62282ad5da7d9c34/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce236858e339040a4814a70f62282ad5da7d9c34/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=ce236858e339040a4814a70f62282ad5da7d9c34", "patch": "@@ -534,31 +534,6 @@ struct cum_arg\n #define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, INDIRECT, N_NAMED_ARGS) \\\n  ((CUM).nbytes = 0)\n \n-/* Update the data in CUM to advance over an argument\n-   of mode MODE and data type TYPE.\n-   (TYPE is null for libcalls where that information may not be available.)  */\n-\n-#define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED)\t\\\n- ((CUM).nbytes += ((MODE) != BLKmode\t\t\t\\\n-\t           ? (GET_MODE_SIZE (MODE) + 3) & ~3\t\\\n-\t           : (int_size_in_bytes (TYPE) + 3) & ~3))\n-\n-/* Define where to put the arguments to a function.\n-   Value is zero to push the argument on the stack,\n-   or a hard register in which to store the argument.\n-\n-   MODE is the argument's machine mode.\n-   TYPE is the data type of the argument (as a tree).\n-    This is null for libcalls where that information may\n-    not be available.\n-   CUM is a variable of type CUMULATIVE_ARGS which gives info about\n-    the preceding args and about the function being called.\n-   NAMED is nonzero if this argument is a named parameter\n-    (otherwise it is an extra parameter matching an ellipsis).  */\n-\n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED) \\\n-  mn10300_function_arg (&(CUM), MODE, TYPE, NAMED)\n-\n #define FUNCTION_VALUE_REGNO_P(N)  mn10300_function_value_regno_p (N)\n \n #define DEFAULT_PCC_STRUCT_RETURN 0"}]}