{"sha": "ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E3M2ExZjdmOTAxYmM2MTExZmYxM2NhOGI4ZDI5MDI3ZTcyZTdmYQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2014-06-04T18:38:18Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2014-06-04T18:38:18Z"}, "message": "re PR tree-optimization/61385 (ICE on valid code at -O2 and -O3 on x86_64-linux-gnu)\n\n2014-06-04  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/61385\ngcc/\n\t* tree-ssa-phiopt.c (value_replacement): Punt if there are PHI nodes.\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/pr61385.c: New file.\n\nFrom-SVN: r211245", "tree": {"sha": "0ffb82173ded686a7b23063eb940ee2fc979b1c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ffb82173ded686a7b23063eb940ee2fc979b1c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffb1f5ef12ce9d9994e850d87cbe4116a69d8d90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffb1f5ef12ce9d9994e850d87cbe4116a69d8d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffb1f5ef12ce9d9994e850d87cbe4116a69d8d90"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "ca574c002ef3bd2806346b798c275ddaf3b3fed1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa", "patch": "@@ -1,3 +1,8 @@\n+2014-06-04  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/61385\n+\t* tree-ssa-phiopt.c (value_replacement): Punt if there are PHI nodes.\n+\n 2014-06-04  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* lto-wrapper.c (fatal, fatal_perror): Remove functions.  All callers"}, {"sha": "e53501c7e78b1888a87dfae113b1af5291aacabc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa", "patch": "@@ -1,3 +1,8 @@\n+2014-06-04  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/61385\n+\t* gcc.dg/tree-ssa/pr61385.c: New file.\n+\n 2014-06-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/60098"}, {"sha": "f2e5a3c0ace02b0fe4d367ecfef1ba8f3ffbca26", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr61385.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61385.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61385.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61385.c?ref=ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+#define assert(x) if (!(x)) __builtin_abort ()\n+\n+int a, b, c, d, e, f, g;\n+\n+int\n+fn1 ()\n+{\n+  int *h = &c;\n+  for (; c < 1; c++)\n+    {\n+      int *i = &a, *k = &a;\n+      f = 0;\n+      if (b)\n+\treturn 0;\n+      if (*h)\n+\t{\n+\t  int **j = &i;\n+\t  *j = 0;\n+\t  d = 0;\n+\t}\n+      else\n+\tg = e = 0;\n+      if (*h)\n+\t{\n+\t  int **l = &k;\n+\t  *l = &g;\n+\t}\n+      d &= *h;\n+      assert (k == &a || k);\n+      assert (i);\n+    }\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  fn1 (); \n+  return 0;\n+}"}, {"sha": "95844f461859633524c1fa88e0af1580db7c4800", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=ca73a1f7f901bc6111ff13ca8b8d29027e72e7fa", "patch": "@@ -849,6 +849,10 @@ value_replacement (basic_block cond_bb, basic_block middle_bb,\n \t  && !POINTER_TYPE_P (TREE_TYPE (arg0))))\n     return 0;\n \n+  /* Punt if there are (degenerate) PHIs in middle_bb, there should not be.  */\n+  if (!gimple_seq_empty_p (phi_nodes (middle_bb)))\n+    return 0;\n+\n   /* Only transform if it removes the condition.  */\n   if (!single_non_singleton_phi_for_edges (phi_nodes (gimple_bb (phi)), e0, e1))\n     return 0;"}]}