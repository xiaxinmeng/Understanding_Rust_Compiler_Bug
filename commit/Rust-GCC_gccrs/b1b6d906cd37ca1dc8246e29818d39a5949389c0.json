{"sha": "b1b6d906cd37ca1dc8246e29818d39a5949389c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiNmQ5MDZjZDM3Y2ExZGM4MjQ2ZTI5ODE4ZDM5YTU5NDkzODljMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-19T15:10:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-19T15:10:40Z"}, "message": "hsa-gen.c (get_memory_order_name): Use MEMMODEL_ constants and name.\n\n2016-01-19  Richard Biener  <rguenther@suse.de>\n\n\t* hsa-gen.c (get_memory_order_name): Use MEMMODEL_ constants\n\tand name.\n\t(get_memory_order): Likewise.\n\nFrom-SVN: r232571", "tree": {"sha": "2c716deaba3fb0c7f57490b755c499630270e12b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c716deaba3fb0c7f57490b755c499630270e12b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1b6d906cd37ca1dc8246e29818d39a5949389c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b6d906cd37ca1dc8246e29818d39a5949389c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b6d906cd37ca1dc8246e29818d39a5949389c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b6d906cd37ca1dc8246e29818d39a5949389c0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38a979f288a4c7c7e62b334e99a34abd7d855b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a979f288a4c7c7e62b334e99a34abd7d855b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a979f288a4c7c7e62b334e99a34abd7d855b66"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "1e753efda90c54abb8f04265e5e4b0f046f76dd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b6d906cd37ca1dc8246e29818d39a5949389c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b6d906cd37ca1dc8246e29818d39a5949389c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1b6d906cd37ca1dc8246e29818d39a5949389c0", "patch": "@@ -1,3 +1,8 @@\n+2016-01-19  Richard Biener  <rguenther@suse.de>\n+\n+\t* hsa-gen.c (get_memory_order_name): Use MEMMODEL_ constants.\n+\t(get_memory_order): Likewise.\n+\n 2016-01-19  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* tree-vect-stmts.c (vectorizable_store): Check"}, {"sha": "e8f80daf693d95a9e6567aec775776645150a58c", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b6d906cd37ca1dc8246e29818d39a5949389c0/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b6d906cd37ca1dc8246e29818d39a5949389c0/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=b1b6d906cd37ca1dc8246e29818d39a5949389c0", "patch": "@@ -4417,17 +4417,17 @@ get_memory_order_name (unsigned memmodel)\n {\n   switch (memmodel)\n     {\n-    case __ATOMIC_RELAXED:\n+    case MEMMODEL_RELAXED:\n       return \"__ATOMIC_RELAXED\";\n-    case __ATOMIC_CONSUME:\n+    case MEMMODEL_CONSUME:\n       return \"__ATOMIC_CONSUME\";\n-    case __ATOMIC_ACQUIRE:\n+    case MEMMODEL_ACQUIRE:\n       return \"__ATOMIC_ACQUIRE\";\n-    case __ATOMIC_RELEASE:\n+    case MEMMODEL_RELEASE:\n       return \"__ATOMIC_RELEASE\";\n-    case __ATOMIC_ACQ_REL:\n+    case MEMMODEL_ACQ_REL:\n       return \"__ATOMIC_ACQ_REL\";\n-    case __ATOMIC_SEQ_CST:\n+    case MEMMODEL_SEQ_CST:\n       return \"__ATOMIC_SEQ_CST\";\n     default:\n       return NULL;\n@@ -4442,13 +4442,13 @@ get_memory_order (unsigned memmodel, location_t location)\n {\n   switch (memmodel)\n     {\n-    case __ATOMIC_RELAXED:\n+    case MEMMODEL_RELAXED:\n       return BRIG_MEMORY_ORDER_RELAXED;\n-    case __ATOMIC_ACQUIRE:\n+    case MEMMODEL_ACQUIRE:\n       return BRIG_MEMORY_ORDER_SC_ACQUIRE;\n-    case __ATOMIC_RELEASE:\n+    case MEMMODEL_RELEASE:\n       return BRIG_MEMORY_ORDER_SC_RELEASE;\n-    case __ATOMIC_ACQ_REL:\n+    case MEMMODEL_ACQ_REL:\n       return BRIG_MEMORY_ORDER_SC_ACQUIRE_RELEASE;\n     default:\n       HSA_SORRY_ATV (location,"}]}