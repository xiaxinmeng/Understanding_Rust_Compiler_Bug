{"sha": "996ce809cd29df96df27b7e7d75508fe2fe6fb93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk2Y2U4MDljZDI5ZGY5NmRmMjdiN2U3ZDc1NTA4ZmUyZmU2ZmI5Mw==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2017-01-13T11:06:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T11:06:54Z"}, "message": "sem_ch6.adb (Check_Aggregate_Accessibility): Ignore function calls in accessibility check on return statement.\n\n2017-01-13  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch6.adb (Check_Aggregate_Accessibility): Ignore function\n\tcalls in accessibility check on return statement.\n\nFrom-SVN: r244422", "tree": {"sha": "96c548a7f8b88b0e195fd5c1a0408c166d3b84bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96c548a7f8b88b0e195fd5c1a0408c166d3b84bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/996ce809cd29df96df27b7e7d75508fe2fe6fb93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996ce809cd29df96df27b7e7d75508fe2fe6fb93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/996ce809cd29df96df27b7e7d75508fe2fe6fb93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996ce809cd29df96df27b7e7d75508fe2fe6fb93/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "36be008200548cc009cff3f9855ac94708a175dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36be008200548cc009cff3f9855ac94708a175dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36be008200548cc009cff3f9855ac94708a175dd"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "37e48dba4e68ed5828f938c416b0c9cb29924715", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996ce809cd29df96df27b7e7d75508fe2fe6fb93/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996ce809cd29df96df27b7e7d75508fe2fe6fb93/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=996ce809cd29df96df27b7e7d75508fe2fe6fb93", "patch": "@@ -1,3 +1,8 @@\n+2017-01-13  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Aggregate_Accessibility): Ignore function\n+\tcalls in accessibility check on return statement.\n+\n 2017-01-13  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body_Helper):"}, {"sha": "39eecfb76f04fd24ef3ffc0d0b199f54161f0d06", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/996ce809cd29df96df27b7e7d75508fe2fe6fb93/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/996ce809cd29df96df27b7e7d75508fe2fe6fb93/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=996ce809cd29df96df27b7e7d75508fe2fe6fb93", "patch": "@@ -663,11 +663,11 @@ package body Sem_Ch6 is\n       -----------------------------------\n \n       procedure Check_Aggregate_Accessibility (Aggr : Node_Id) is\n-         Typ    : constant Entity_Id := Etype (Aggr);\n-         Assoc  : Node_Id;\n-         Discr  : Entity_Id;\n-         Expr   : Node_Id;\n-         Obj    : Node_Id;\n+         Typ   : constant Entity_Id := Etype (Aggr);\n+         Assoc : Node_Id;\n+         Discr : Entity_Id;\n+         Expr  : Node_Id;\n+         Obj   : Node_Id;\n \n       begin\n          if Is_Record_Type (Typ) and then Has_Discriminants (Typ) then\n@@ -676,6 +676,7 @@ package body Sem_Ch6 is\n             while Present (Discr) loop\n                if Ekind (Etype (Discr)) = E_Anonymous_Access_Type then\n                   Expr := Expression (Assoc);\n+\n                   if Nkind (Expr) = N_Attribute_Reference\n                     and then Attribute_Name (Expr) /= Name_Unrestricted_Access\n                   then\n@@ -686,21 +687,24 @@ package body Sem_Ch6 is\n                         Obj := Prefix (Obj);\n                      end loop;\n \n-                     --  No check needed for an aliased formal.\n-                     --  A run-time check may still be needed ???\n+                     --  Do not check aliased formals or function calls. A\n+                     --  run-time check may still be needed ???\n \n                      if Is_Entity_Name (Obj)\n-                       and then Is_Formal (Entity (Obj))\n-                       and then Is_Aliased (Entity (Obj))\n+                       and then Comes_From_Source (Obj)\n                      then\n-                        null;\n+                        if Is_Formal (Entity (Obj))\n+                           and then Is_Aliased (Entity (Obj))\n+                        then\n+                           null;\n \n-                     elsif Object_Access_Level (Obj) >\n-                             Scope_Depth (Scope (Scope_Id))\n-                     then\n-                        Error_Msg_N\n-                          (\"access discriminant in return aggregate would be \"\n-                           & \"a dangling reference\", Obj);\n+                        elsif Object_Access_Level (Obj) >\n+                                Scope_Depth (Scope (Scope_Id))\n+                        then\n+                           Error_Msg_N\n+                             (\"access discriminant in return aggregate would \"\n+                              & \"be a dangling reference\", Obj);\n+                        end if;\n                      end if;\n                   end if;\n                end if;"}]}