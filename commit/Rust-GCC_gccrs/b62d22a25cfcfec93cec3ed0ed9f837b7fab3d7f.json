{"sha": "b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYyZDIyYTI1Y2ZjZmVjOTNjZWMzZWQwZWQ5ZjgzN2I3ZmFiM2Q3Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-01-16T15:57:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-01-16T15:57:00Z"}, "message": "i386.c (fcmov_comparison_operator): Only initialize inmode after checking GET_CODE (op).\n\n\t* config/i386/i386.c (fcmov_comparison_operator): Only initialize\n\tinmode after checking GET_CODE (op).\n\nFrom-SVN: r39067", "tree": {"sha": "7a875e9ceaadb011976abbfba59ede955f7cf617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a875e9ceaadb011976abbfba59ede955f7cf617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8207e7c604e7473228ea9b846f004b141f008d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8207e7c604e7473228ea9b846f004b141f008d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8207e7c604e7473228ea9b846f004b141f008d43"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "93815bd70ad065c42a93635ca651a643878b9f9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f", "patch": "@@ -1,3 +1,8 @@\n+2001-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.c (fcmov_comparison_operator): Only initialize\n+\tinmode after checking GET_CODE (op).\n+\n 2001-01-16  Richard Henderson  <rth@redhat.com>\n \n \t* flow.c (struct propagate_block_info): Add mem_set_list_len."}, {"sha": "15e7c2e46f484657c1fbb1a179bd4ce6f58d31da", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b62d22a25cfcfec93cec3ed0ed9f837b7fab3d7f", "patch": "@@ -1331,7 +1331,7 @@ fcmov_comparison_operator (op, mode)\n     register rtx op;\n     enum machine_mode mode;\n {\n-  enum machine_mode inmode = GET_MODE (XEXP (op, 0));\n+  enum machine_mode inmode;\n   enum rtx_code code = GET_CODE (op);\n   if (mode != VOIDmode && GET_MODE (op) != mode)\n     return 0;"}]}