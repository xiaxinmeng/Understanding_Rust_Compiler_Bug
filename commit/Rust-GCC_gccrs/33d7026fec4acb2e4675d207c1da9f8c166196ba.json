{"sha": "33d7026fec4acb2e4675d207c1da9f8c166196ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNkNzAyNmZlYzRhY2IyZTQ2NzVkMjA3YzFkYTlmOGMxNjYxOTZiYQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1993-09-22T18:43:15Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1993-09-22T18:43:15Z"}, "message": "cp-class.c (finish_struct): Move special C++ only code that handles anonymous unions inside structures here.\n\n        * cp-class.c (finish_struct): Move special C++ only code that\n          handles anonymous unions inside structures here.\n        * stor-layout.c (layout_record): From here.\n\nFrom-SVN: r5403", "tree": {"sha": "315a9449796a48cb4e770df71b8f04b012924412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/315a9449796a48cb4e770df71b8f04b012924412"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33d7026fec4acb2e4675d207c1da9f8c166196ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d7026fec4acb2e4675d207c1da9f8c166196ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d7026fec4acb2e4675d207c1da9f8c166196ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d7026fec4acb2e4675d207c1da9f8c166196ba/comments", "author": null, "committer": null, "parents": [{"sha": "c02bd5d96e33018e3eae39e69442437ad05bef39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c02bd5d96e33018e3eae39e69442437ad05bef39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c02bd5d96e33018e3eae39e69442437ad05bef39"}], "stats": {"total": 26, "additions": 0, "deletions": 26}, "files": [{"sha": "0977b840d093c0971d7012fe2712c6e058c98ad3", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d7026fec4acb2e4675d207c1da9f8c166196ba/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d7026fec4acb2e4675d207c1da9f8c166196ba/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=33d7026fec4acb2e4675d207c1da9f8c166196ba", "patch": "@@ -465,32 +465,6 @@ layout_record (rec)\n       else\n \tDECL_FIELD_BITPOS (field) = size_int (const_size);\n \n-      /* If this field is an anonymous union,\n-\t give each union-member the same position as the union has.\n-\n-\t ??? This is a real kludge because it makes the structure\n-\t of the types look strange.  This feature is only used by\n-\t C++, which should have build_component_ref build two\n-\t COMPONENT_REF operations, one for the union and one for\n-\t the inner field.  We set the offset of this field to zero\n-\t so that either the old or the correct method will work.\n-\t Setting DECL_FIELD_CONTEXT is wrong unless the inner fields are\n-\t moved into the type of this field, but nothing seems to break\n-\t by doing this.  This kludge should be removed after 2.4.  */\n-\n-      if (DECL_NAME (field) == 0\n-\t  && TREE_CODE (TREE_TYPE (field)) == UNION_TYPE)\n-\t{\n-\t  tree uelt = TYPE_FIELDS (TREE_TYPE (field));\n-\t  for (; uelt; uelt = TREE_CHAIN (uelt))\n-\t    {\n-\t      DECL_FIELD_CONTEXT (uelt) = DECL_FIELD_CONTEXT (field);\n-\t      DECL_FIELD_BITPOS (uelt) = DECL_FIELD_BITPOS (field);\n-\t    }\n-\n-\t  DECL_FIELD_BITPOS (field) = integer_zero_node;\n-\t}\n-\n       /* Now add size of this field to the size of the record.  */\n \n       {"}]}