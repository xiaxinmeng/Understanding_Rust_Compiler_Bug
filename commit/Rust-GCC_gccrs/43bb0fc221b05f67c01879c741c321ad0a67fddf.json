{"sha": "43bb0fc221b05f67c01879c741c321ad0a67fddf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiYjBmYzIyMWIwNWY2N2MwMTg3OWM3NDFjMzIxYWQwYTY3ZmRkZg==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2018-07-16T10:12:32Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2018-07-16T10:12:32Z"}, "message": "[ARC] Add support for HS4x cpus.\n\ngcc/\n2017-03-10  Claudiu Zissulescu  <claziss@synopsys.com>\n\n        * config/arc/arc-arch.h (arc_tune_attr): Add new tune parameters\n        for ARCHS4x.\n        * config/arc/arc-cpus.def (hs4x): New cpu.\n        (hs4xd): Likewise.\n        * config/arc/arc-tables.opt: Regenerate.\n        * config/arc/arc.c (arc_sched_issue_rate): New function.\n        (TARGET_SCHED_ISSUE_RATE): Define.\n        (TARGET_SCHED_EXPOSED_PIPELINE): Likewise.\n        * config/arc/arc.md (attr type): Add fpu_fuse, fpu_sdiv, fpu_ddiv,\n        fpu_cvt.\n        (attr tune): Add ARCHS4x tune values.\n        (attr tune_dspmpy): Define.\n        (*tst): Correct instruction type.\n        * config/arc/arcHS.md: Don't use this automaton for ARCHS4x cpus.\n        * config/arc/arcHS4x.md: New file.\n        * config/arc/fpu.md: Update instruction type attributes.\n        * config/arc/t-multilib: Regenerate.\n\nFrom-SVN: r262688", "tree": {"sha": "0dc39249d78a561acf72ec5d4733c24bc39698dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dc39249d78a561acf72ec5d4733c24bc39698dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43bb0fc221b05f67c01879c741c321ad0a67fddf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43bb0fc221b05f67c01879c741c321ad0a67fddf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43bb0fc221b05f67c01879c741c321ad0a67fddf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43bb0fc221b05f67c01879c741c321ad0a67fddf/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c0e07e3842dd90c09fd3f4b5fe17362c5ab4077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c0e07e3842dd90c09fd3f4b5fe17362c5ab4077", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c0e07e3842dd90c09fd3f4b5fe17362c5ab4077"}], "stats": {"total": 319, "additions": 306, "deletions": 13}, "files": [{"sha": "c8a00cc0a433e0733ac4a0efbad023b00fe993d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43bb0fc221b05f67c01879c741c321ad0a67fddf", "patch": "@@ -1,3 +1,23 @@\n+2017-07-16  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc-arch.h (arc_tune_attr): Add new tune parameters\n+\tfor ARCHS4x.\n+\t* config/arc/arc-cpus.def (hs4x): New cpu.\n+\t(hs4xd): Likewise.\n+\t* config/arc/arc-tables.opt: Regenerate.\n+\t* config/arc/arc.c (arc_sched_issue_rate): New function.\n+\t(TARGET_SCHED_ISSUE_RATE): Define.\n+\t(TARGET_SCHED_EXPOSED_PIPELINE): Likewise.\n+\t* config/arc/arc.md (attr type): Add fpu_fuse, fpu_sdiv, fpu_ddiv,\n+\tfpu_cvt.\n+\t(attr tune): Add ARCHS4x tune values.\n+\t(attr tune_dspmpy): Define.\n+\t(*tst): Correct instruction type.\n+\t* config/arc/arcHS.md: Don't use this automaton for ARCHS4x cpus.\n+\t* config/arc/arcHS4x.md: New file.\n+\t* config/arc/fpu.md: Update instruction type attributes.\n+\t* config/arc/t-multilib: Regenerate.\n+\n 2018-07-16  Tom de Vries  <tdevries@suse.de>\n \n \tPR debug/86455"}, {"sha": "859af0684b8e1f62228f3f00f72f9326a6a6338d", "filename": "gcc/config/arc/arc-arch.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc-arch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc-arch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-arch.h?ref=43bb0fc221b05f67c01879c741c321ad0a67fddf", "patch": "@@ -73,7 +73,10 @@ enum arc_tune_attr\n     ARC_TUNE_ARC600,\n     ARC_TUNE_ARC700_4_2_STD,\n     ARC_TUNE_ARC700_4_2_XMAC,\n-    ARC_TUNE_CORE_3\n+    ARC_TUNE_CORE_3,\n+    ARC_TUNE_ARCHS4X,\n+    ARC_TUNE_ARCHS4XD,\n+    ARC_TUNE_ARCHS4XD_SLOW\n   };\n \n /* Extra options for a processor template to hold any CPU specific"}, {"sha": "69ac5cd7f6eb6afd9e1f2103ed54297539535a2a", "filename": "gcc/config/arc/arc-cpus.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-cpus.def?ref=43bb0fc221b05f67c01879c741c321ad0a67fddf", "patch": "@@ -62,6 +62,8 @@ ARC_CPU (archs,\t     hs, FL_MPYOPT_2|FL_DIVREM|FL_LL64, NONE, NONE)\n ARC_CPU (hs34,\t     hs, FL_MPYOPT_2, NONE, NONE)\n ARC_CPU (hs38,\t     hs, FL_MPYOPT_9|FL_DIVREM|FL_LL64, NONE, NONE)\n ARC_CPU (hs38_linux, hs, FL_MPYOPT_9|FL_DIVREM|FL_LL64|FL_FPU_FPUD_ALL, NONE, NONE)\n+ARC_CPU (hs4x,  hs, FL_MPYOPT_9|FL_DIVREM|FL_LL64, NONE, ARCHS4X)\n+ARC_CPU (hs4xd, hs, FL_MPYOPT_9|FL_DIVREM|FL_LL64, NONE, ARCHS4XD)\n \n ARC_CPU (arc600,\t  6xx, FL_BS, NONE, ARC600)\n ARC_CPU (arc600_norm,\t  6xx, FL_BS|FL_NORM, NONE, ARC600)"}, {"sha": "2afaf5bd83c14a174ecaf9bcbf5cf39a5ae10e55", "filename": "gcc/config/arc/arc-tables.opt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-tables.opt?ref=43bb0fc221b05f67c01879c741c321ad0a67fddf", "patch": "@@ -63,6 +63,12 @@ Enum(processor_type) String(hs38) Value(PROCESSOR_hs38)\n EnumValue\n Enum(processor_type) String(hs38_linux) Value(PROCESSOR_hs38_linux)\n \n+EnumValue\n+Enum(processor_type) String(hs4x) Value(PROCESSOR_hs4x)\n+\n+EnumValue\n+Enum(processor_type) String(hs4xd) Value(PROCESSOR_hs4xd)\n+\n EnumValue\n Enum(processor_type) String(arc600) Value(PROCESSOR_arc600)\n "}, {"sha": "8bb7d74c2c92d05b9decf67275252b46e6e56f4b", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=43bb0fc221b05f67c01879c741c321ad0a67fddf", "patch": "@@ -483,6 +483,22 @@ arc_autovectorize_vector_sizes (vector_sizes *sizes)\n     }\n }\n \n+\n+/* Implements target hook TARGET_SCHED_ISSUE_RATE.  */\n+static int\n+arc_sched_issue_rate (void)\n+{\n+  switch (arc_tune)\n+    {\n+    case TUNE_ARCHS4X:\n+    case TUNE_ARCHS4XD:\n+      return 3;\n+    default:\n+      break;\n+    }\n+  return 1;\n+}\n+\n /* TARGET_PRESERVE_RELOAD_P is still awaiting patch re-evaluation / review.  */\n static bool arc_preserve_reload_p (rtx in) ATTRIBUTE_UNUSED;\n static rtx arc_delegitimize_address (rtx);\n@@ -565,6 +581,9 @@ static rtx arc_legitimize_address_0 (rtx, rtx, machine_mode mode);\n #undef  TARGET_SCHED_ADJUST_PRIORITY\n #define TARGET_SCHED_ADJUST_PRIORITY arc_sched_adjust_priority\n \n+#undef TARGET_SCHED_ISSUE_RATE\n+#define TARGET_SCHED_ISSUE_RATE arc_sched_issue_rate\n+\n #undef TARGET_VECTOR_MODE_SUPPORTED_P\n #define TARGET_VECTOR_MODE_SUPPORTED_P arc_vector_mode_supported_p\n "}, {"sha": "bfadbee6d85afc7405c05e29600c259a320a0991", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=43bb0fc221b05f67c01879c741c321ad0a67fddf", "patch": "@@ -82,6 +82,7 @@\n (include (\"arc700.md\"))\n (include (\"arcEM.md\"))\n (include (\"arcHS.md\"))\n+(include (\"arcHS4x.md\"))\n \n ;; Predicates\n \n@@ -205,7 +206,7 @@\n    simd_vcompare, simd_vpermute, simd_vpack, simd_vpack_with_acc,\n    simd_valign, simd_valign_with_acc, simd_vcontrol,\n    simd_vspecial_3cycle, simd_vspecial_4cycle, simd_dma, mul16_em, div_rem,\n-   fpu, block\"\n+   fpu, fpu_fuse, fpu_sdiv, fpu_ddiv, fpu_cvt, block\"\n   (cond [(eq_attr \"is_sfunc\" \"yes\")\n \t (cond [(match_test \"!TARGET_LONG_CALLS_SET && (!TARGET_MEDIUM_CALLS || GET_CODE (PATTERN (insn)) != COND_EXEC)\") (const_string \"call\")\n \t\t(match_test \"flag_pic\") (const_string \"sfunc\")]\n@@ -599,7 +600,8 @@\n ;;   somehow modify them to become inelegible for delay slots if a decision\n ;;   is made that makes conditional execution required.\n \n-(define_attr \"tune\" \"none,arc600,arc700_4_2_std,arc700_4_2_xmac, core_3\"\n+(define_attr \"tune\" \"none,arc600,arc700_4_2_std,arc700_4_2_xmac, core_3, \\\n+archs4x, archs4xd, archs4xd_slow\"\n   (const\n    (cond [(symbol_ref \"arc_tune == TUNE_ARC600\")\n \t  (const_string \"arc600\")\n@@ -608,14 +610,28 @@\n \t  (symbol_ref \"arc_tune == TUNE_ARC700_4_2_XMAC\")\n \t  (const_string \"arc700_4_2_xmac\")\n \t  (symbol_ref \"arc_tune == ARC_TUNE_CORE_3\")\n-\t  (const_string \"core_3\")]\n+\t  (const_string \"core_3\")\n+\t  (symbol_ref \"arc_tune == TUNE_ARCHS4X\")\n+\t  (const_string \"archs4x\")\n+\t  (ior (symbol_ref \"arc_tune == TUNE_ARCHS4XD\")\n+\t       (symbol_ref \"arc_tune == TUNE_ARCHS4XD_SLOW\"))\n+\t  (const_string \"archs4xd\")]\n \t (const_string \"none\"))))\n \n (define_attr \"tune_arc700\" \"false,true\"\n   (if_then_else (eq_attr \"tune\" \"arc700_4_2_std, arc700_4_2_xmac\")\n \t\t(const_string \"true\")\n \t\t(const_string \"false\")))\n \n+(define_attr \"tune_dspmpy\" \"none, slow, fast\"\n+  (const\n+  (cond [(ior (symbol_ref \"arc_tune == TUNE_ARCHS4X\")\n+\t      (symbol_ref \"arc_tune == TUNE_ARCHS4XD\"))\n+\t (const_string \"fast\")\n+\t (symbol_ref \"arc_tune == TUNE_ARCHS4XD_SLOW\")\n+\t (const_string \"slow\")]\n+\t(const_string \"none\"))))\n+\n ;; Move instructions.\n (define_expand \"movqi\"\n   [(set (match_operand:QI 0 \"move_dest_operand\" \"\")\n@@ -966,7 +982,7 @@\n     }\n   \"\n   [(set_attr \"iscompact\" \"maybe,maybe,false,false,false,false,false,false\")\n-   (set_attr \"type\" \"compare,compare,compare,compare,compare,compare,shift,compare\")\n+   (set_attr \"type\" \"compare,compare,compare,compare,compare,compare,binary,compare\")\n    (set_attr \"length\" \"*,*,4,4,4,4,4,8\")\n    (set_attr \"predicable\" \"no,yes,no,yes,no,no,no,yes\")\n    (set_attr \"cond\" \"set_zn\")])"}, {"sha": "d49b90c4970ac405a321d99d45c7144b75fcaff4", "filename": "gcc/config/arc/arcHS.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2FarcHS.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2FarcHS.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2FarcHS.md?ref=43bb0fc221b05f67c01879c741c321ad0a67fddf", "patch": "@@ -25,32 +25,38 @@\n \n (define_insn_reservation \"hs_data_load\" 4\n   (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"none\")\n        (eq_attr \"type\" \"load\"))\n   \"hs_issue+hs_ld_st,hs_ld_st,nothing*2\")\n \n (define_insn_reservation \"hs_data_store\" 1\n   (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"none\")\n        (eq_attr \"type\" \"store\"))\n   \"hs_issue+hs_ld_st\")\n \n (define_insn_reservation \"hs_alu0\" 2\n   (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"none\")\n        (eq_attr \"type\" \"cc_arith, two_cycle_core, shift, lr, sr\"))\n   \"hs_issue+x1,x2\")\n \n (define_insn_reservation \"hs_alu1\" 4\n   (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"none\")\n        (eq_attr \"type\" \"move, cmove, unary, binary, compare, misc\"))\n   \"hs_issue+x1, nothing*3\")\n \n (define_insn_reservation \"hs_divrem\" 13\n   (and (match_test \"TARGET_HS\")\n        (match_test \"TARGET_DIVREM\")\n+       (eq_attr \"tune\" \"none\")\n        (eq_attr \"type\" \"div_rem\"))\n   \"hs_issue+divrem_hs, (divrem_hs)*12\")\n \n (define_insn_reservation \"hs_mul\" 3\n   (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"none\")\n        (eq_attr \"type\" \"mul16_em, multi, umulti\"))\n   \"hs_issue+mul_hs, nothing*3\")\n "}, {"sha": "f804b6be694531e05ebb311b111bf90bcbfe908e", "filename": "gcc/config/arc/arcHS4x.md", "status": "added", "additions": 221, "deletions": 0, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2FarcHS4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2FarcHS4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2FarcHS4x.md?ref=43bb0fc221b05f67c01879c741c321ad0a67fddf", "patch": "@@ -0,0 +1,221 @@\n+;; DFA scheduling description of the Synopsys DesignWare ARC HS4x cpu\n+;; for GNU C compiler\n+;; Copyright (C) 2017 Free Software Foundation, Inc.\n+\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+\n+;; GCC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_automaton \"ARCHS4x\")\n+\n+(define_cpu_unit \"hs4x_issue0\" \"ARCHS4x\")\n+(define_cpu_unit \"hs4x_issue1\" \"ARCHS4x\")\n+(define_cpu_unit \"hs4x_ld_st\" \"ARCHS4x\")\n+(define_cpu_unit \"hs4x_divrem\" \"ARCHS4x\")\n+(define_cpu_unit \"hs4x_mult\" \"ARCHS4x\")\n+(define_cpu_unit \"hs4x_x1, hs4x_x2\" \"ARCHS4x\")\n+(define_cpu_unit \"hs4x_y1, hs4x_y2\" \"ARCHS4x\")\n+\n+(define_insn_reservation \"hs4x_brj_op\" 1\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"call, call_no_delay_slot, uncond_branch, jump, \\\n+branch, brcc,brcc_no_delay_slot, sfunc\"))\n+  \"hs4x_issue0\")\n+\n+(define_insn_reservation \"hs4x_data_load_op\" 4\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"load\"))\n+  \"hs4x_issue1 + hs4x_ld_st,hs4x_ld_st\")\n+\n+(define_insn_reservation \"hs4x_data_store_op\" 1\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"store\"))\n+  \"hs4x_issue1 + hs4x_ld_st\")\n+\n+;; Advanced ALU\n+(define_insn_reservation \"hs4x_adv_alue_op\" 4\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"cc_arith, two_cycle_core, shift, lr, sr\"))\n+  \"(hs4x_issue0 | hs4x_issue1), hs4x_x1\")\n+\n+(define_insn_reservation \"hs4x_adv_alul_op\" 6\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4xd\")\n+       (eq_attr \"type\" \"cc_arith, two_cycle_core, shift, lr, sr\"))\n+  \"(hs4x_issue0 | hs4x_issue1), nothing*2, hs4x_x2\")\n+\n+;; Basic ALU\n+(define_insn_reservation \"hs4x_basic_alue_op\" 1\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"move, cmove, unary, binary, compare, misc\"))\n+  \"(hs4x_issue0 | hs4x_issue1) + hs4x_y1\")\n+\n+(define_insn_reservation \"hs4x_basic_alul_op\" 4\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"move, cmove, unary, binary, compare, misc\"))\n+  \"(hs4x_issue0 | hs4x_issue1), nothing*2, hs4x_y2\")\n+\n+(define_insn_reservation \"hs4x_divrem_op\" 13\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"div_rem\"))\n+  \"hs4x_issue0 + hs4x_divrem, (hs4x_divrem)*12\")\n+\n+;;Consider the DSPMPY fast here\n+(define_insn_reservation \"hs4x_mul_fast_op\" 7\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune_dspmpy\" \"fast\")\n+       (eq_attr \"type\" \"mul16_em, multi, umulti\"))\n+  \"hs4x_issue0 + hs4x_mult\")\n+\n+(define_insn_reservation \"hs4x_mul_slow_op\" 8\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune_dspmpy\" \"slow\")\n+       (eq_attr \"type\" \"mul16_em, multi, umulti\"))\n+  \"hs4x_issue0 + hs4x_mult\")\n+\n+;; FPU unit\n+(define_insn_reservation \"hs4x_fpu_op\" 8\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"fpu\"))\n+  \"hs4x_issue0\")\n+\n+;; FPU FUSE unit\n+(define_insn_reservation \"hs4x_fpu_fuse_op\" 12\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"fpu_fuse\"))\n+  \"hs4x_issue0\")\n+\n+;; FPU SP SQRT/DIV unit\n+(define_insn_reservation \"hs4x_fpu_sdiv_op\" 20\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"fpu_sdiv\"))\n+  \"hs4x_issue0\")\n+\n+;; FPU DP SQRT/DIV unit\n+(define_insn_reservation \"hs4x_fpu_ddiv_op\" 34\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"fpu_ddiv\"))\n+  \"hs4x_issue0\")\n+\n+;; FPU CVT unit\n+(define_insn_reservation \"hs4x_fpu_cvt_op\" 5\n+  (and (match_test \"TARGET_HS\")\n+       (eq_attr \"tune\" \"archs4x, archs4xd\")\n+       (eq_attr \"type\" \"fpu_cvt\"))\n+  \"hs4x_issue0\")\n+\n+;; BYPASS Advanced ALU ->\n+(define_bypass 1 \"hs4x_adv_alue_op\" \"hs4x_divrem_op\")\n+(define_bypass 1 \"hs4x_adv_alue_op\" \"hs4x_mul_*op\")\n+(define_bypass 2 \"hs4x_adv_alue_op\" \"hs4x_adv_alue_op\")\n+(define_bypass 1 \"hs4x_adv_alue_op\" \"hs4x_basic_alue_op\")\n+(define_bypass 1 \"hs4x_adv_alue_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 1 \"hs4x_adv_alue_op\" \"hs4x_data_load_op\")\n+(define_bypass 0 \"hs4x_adv_alue_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+(define_bypass 2 \"hs4x_adv_alue_op\" \"hs4x_data_store_op\")\n+(define_bypass 1 \"hs4x_adv_alue_op\" \"hs4x_fpu_*op\")\n+\n+(define_bypass 2 \"hs4x_adv_alul_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 2 \"hs4x_adv_alul_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 2 \"hs4x_adv_alul_op\" \"hs4x_mul_*op\")\n+(define_bypass 0 \"hs4x_adv_alul_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+(define_bypass 4 \"hs4x_adv_alul_op\" \"hs4x_divrem_op\")\n+(define_bypass 5 \"hs4x_adv_alul_op\" \"hs4x_fpu_*op\")\n+\n+;; BYPASS Basic ALU ->\n+(define_bypass 0 \"hs4x_basic_alue_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+\n+(define_bypass 1 \"hs4x_basic_alul_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 1 \"hs4x_basic_alul_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 0 \"hs4x_basic_alul_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+(define_bypass 1 \"hs4x_basic_alul_op\" \"hs4x_mul_*op\")\n+(define_bypass 3 \"hs4x_basic_alul_op\" \"hs4x_divrem_op\")\n+(define_bypass 3 \"hs4x_basic_alul_op\" \"hs4x_fpu_*op\")\n+\n+;; BYPASS LD ->\n+(define_bypass 1 \"hs4x_data_load_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 1 \"hs4x_data_load_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 3 \"hs4x_data_load_op\" \"hs4x_divrem_op\")\n+(define_bypass 3 \"hs4x_data_load_op\" \"hs4x_data_load_op\")\n+(define_bypass 3 \"hs4x_data_load_op\" \"hs4x_mul_*op\")\n+(define_bypass 0 \"hs4x_data_load_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+(define_bypass 3 \"hs4x_data_load_op\" \"hs4x_fpu_*op\")\n+\n+;; BYPASS FAST MPY ->\n+(define_bypass 4 \"hs4x_mul_fast_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 4 \"hs4x_mul_fast_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 4 \"hs4x_mul_fast_op\" \"hs4x_mul_fast_op\")\n+(define_bypass 6 \"hs4x_mul_fast_op\" \"hs4x_divrem_op\")\n+(define_bypass 0 \"hs4x_mul_fast_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+(define_bypass 6 \"hs4x_mul_fast_op\" \"hs4x_fpu_*op\")\n+\n+;; BYPASS SLOW MPY ->\n+(define_bypass 5 \"hs4x_mul_slow_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 5 \"hs4x_mul_slow_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 5 \"hs4x_mul_slow_op\" \"hs4x_mul_slow_op\")\n+(define_bypass 7 \"hs4x_mul_slow_op\" \"hs4x_divrem_op\")\n+(define_bypass 0 \"hs4x_mul_slow_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+(define_bypass 7 \"hs4x_mul_slow_op\" \"hs4x_fpu_*op\")\n+\n+;;BYPASS FPU ->\n+(define_bypass 5 \"hs4x_fpu_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 5 \"hs4x_fpu_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 5 \"hs4x_fpu_op\" \"hs4x_mul_*op\")\n+(define_bypass 7 \"hs4x_fpu_op\" \"hs4x_divrem_op\")\n+(define_bypass 5 \"hs4x_fpu_op\" \"hs4x_fpu_*op\")\n+(define_bypass 0 \"hs4x_fpu_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+\n+;;BYPASS FPU FUSE ->\n+(define_bypass 9  \"hs4x_fpu_fuse_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 9  \"hs4x_fpu_fuse_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 9  \"hs4x_fpu_fuse_op\" \"hs4x_mul_*op\")\n+(define_bypass 11 \"hs4x_fpu_fuse_op\" \"hs4x_divrem_op\")\n+(define_bypass 11 \"hs4x_fpu_fuse_op\" \"hs4x_fpu_*op\")\n+(define_bypass 0  \"hs4x_fpu_fuse_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+\n+;;BYPASS FPU SP DIV ->\n+(define_bypass 16 \"hs4x_fpu_sdiv_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 16 \"hs4x_fpu_sdiv_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 16 \"hs4x_fpu_sdiv_op\" \"hs4x_mul_*op\")\n+(define_bypass 19 \"hs4x_fpu_sdiv_op\" \"hs4x_divrem_op\")\n+(define_bypass 19 \"hs4x_fpu_sdiv_op\" \"hs4x_fpu_*op\")\n+(define_bypass 0  \"hs4x_fpu_sdiv_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+\n+;;BYPASS FPU DP DIV ->\n+(define_bypass 31 \"hs4x_fpu_ddiv_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 31 \"hs4x_fpu_ddiv_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 31 \"hs4x_fpu_ddiv_op\" \"hs4x_mul_*op\")\n+(define_bypass 34 \"hs4x_fpu_ddiv_op\" \"hs4x_divrem_op\")\n+(define_bypass 34 \"hs4x_fpu_ddiv_op\" \"hs4x_fpu_*op\")\n+(define_bypass 0  \"hs4x_fpu_ddiv_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")\n+\n+;;BYPASS FPU CVT ->\n+(define_bypass 1 \"hs4x_fpu_cvt_op\" \"hs4x_basic_alul_op\")\n+(define_bypass 1 \"hs4x_fpu_cvt_op\" \"hs4x_adv_alul_op\")\n+(define_bypass 1 \"hs4x_fpu_cvt_op\" \"hs4x_mul_*op\")\n+(define_bypass 4 \"hs4x_fpu_cvt_op\" \"hs4x_divrem_op\")\n+(define_bypass 4 \"hs4x_fpu_cvt_op\" \"hs4x_fpu_*op\")\n+(define_bypass 0 \"hs4x_fpu_cvt_op\" \"hs4x_data_store_op\" \"store_data_bypass_p\")"}, {"sha": "9457922667e10a6235eb571838812eed3d66aa82", "filename": "gcc/config/arc/fpu.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Ffpu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb0fc221b05f67c01879c741c321ad0a67fddf/gcc%2Fconfig%2Farc%2Ffpu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ffpu.md?ref=43bb0fc221b05f67c01879c741c321ad0a67fddf", "patch": "@@ -98,7 +98,7 @@\n    (set_attr \"predicable\" \"yes,no,yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,canuse_limm,nocond,nocond\")\n    (set_attr \"iscompact\" \"false\")\n-   (set_attr \"type\" \"fpu\")])\n+   (set_attr \"type\" \"fpu_fuse\")])\n \n (define_insn \"fnmasf4_fpu\"\n   [(set (match_operand:SF 0 \"register_operand\"                  \"=r,r,r,r,r\")\n@@ -113,7 +113,7 @@\n    (set_attr \"predicable\" \"yes,no,yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,canuse_limm,nocond,nocond\")\n    (set_attr \"iscompact\" \"false\")\n-   (set_attr \"type\" \"fpu\")])\n+   (set_attr \"type\" \"fpu_fuse\")])\n \n (define_expand \"fmadf4\"\n   [(match_operand:DF 0 \"even_register_operand\" \"\")\n@@ -183,7 +183,7 @@\n    (set_attr \"predicable\" \"yes,no\")\n    (set_attr \"cond\" \"canuse,nocond\")\n    (set_attr \"iscompact\" \"false\")\n-   (set_attr \"type\" \"fpu\")])\n+   (set_attr \"type\" \"fpu_fuse\")])\n \n (define_insn \"fnmadf4_fpu\"\n   [(set (match_operand:DF 0 \"even_register_operand\"                 \"=r,r\")\n@@ -196,7 +196,7 @@\n    (set_attr \"predicable\" \"yes,no\")\n    (set_attr \"cond\" \"canuse,nocond\")\n    (set_attr \"iscompact\" \"false\")\n-   (set_attr \"type\" \"fpu\")])\n+   (set_attr \"type\" \"fpu_fuse\")])\n \n ;; Division\n (define_insn \"*divsf3_fpu\"\n@@ -209,7 +209,7 @@\n   \"fsdiv%? %0,%1,%2\"\n   [(set_attr \"length\" \"4,4,8,8,8\")\n    (set_attr \"iscompact\" \"false\")\n-   (set_attr \"type\" \"fpu\")\n+   (set_attr \"type\" \"fpu_sdiv\")\n    (set_attr \"predicable\" \"yes,no,yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,canuse_limm,nocond,nocond\")\n    ])\n@@ -227,7 +227,7 @@\n   \"TARGET_FP_SP_SQRT\"\n   \"fssqrt %0,%1\"\n   [(set_attr \"length\" \"4,8\")\n-   (set_attr \"type\" \"fpu\")])\n+   (set_attr \"type\" \"fpu_sdiv\")])\n \n ;; Comparison\n (define_insn \"*cmpsf_fpu\"\n@@ -312,7 +312,7 @@\n   \"fddiv%? %0,%1,%2\"\n   [(set_attr \"length\" \"4,4\")\n    (set_attr \"iscompact\" \"false\")\n-   (set_attr \"type\" \"fpu\")\n+   (set_attr \"type\" \"fpu_ddiv\")\n    (set_attr \"predicable\" \"yes,no\")\n    (set_attr \"cond\" \"canuse,nocond\")\n    ])\n@@ -324,7 +324,7 @@\n   \"TARGET_FP_DP_SQRT\"\n   \"fdsqrt %0,%1\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"fpu\")])\n+   (set_attr \"type\" \"fpu_ddiv\")])\n \n ;; Comparison\n (define_insn \"*cmpdf_fpu\""}]}