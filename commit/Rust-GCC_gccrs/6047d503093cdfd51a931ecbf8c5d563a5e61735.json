{"sha": "6047d503093cdfd51a931ecbf8c5d563a5e61735", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA0N2Q1MDMwOTNjZGZkNTFhOTMxZWNiZjhjNWQ1NjNhNWU2MTczNQ==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-12-07T01:32:11Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-12-07T01:32:11Z"}, "message": "Make the fixinc/Makefile.* files more similar\n\nFrom-SVN: r38083", "tree": {"sha": "cc9b0ed4ca3b49bb27898fcf5b9ed727fdde5481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc9b0ed4ca3b49bb27898fcf5b9ed727fdde5481"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6047d503093cdfd51a931ecbf8c5d563a5e61735", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6047d503093cdfd51a931ecbf8c5d563a5e61735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6047d503093cdfd51a931ecbf8c5d563a5e61735", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6047d503093cdfd51a931ecbf8c5d563a5e61735/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "becf16479872926f68706d28a3bd1de74083e530", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/becf16479872926f68706d28a3bd1de74083e530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/becf16479872926f68706d28a3bd1de74083e530"}], "stats": {"total": 46, "additions": 25, "deletions": 21}, "files": [{"sha": "01d7ec8658028174ddcb76788bdbc806be70b784", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6047d503093cdfd51a931ecbf8c5d563a5e61735", "patch": "@@ -1,3 +1,8 @@\n+2000-12-06  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/Makefile.*: Reduce differences to (ultimately) reduce\n+\tthe number of them.\n+\n 2000-11-06  J. David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.c: Include expr.h before c-tree.h."}, {"sha": "ca68ff199d89dcc39f3f8cadeda40dc7c8a8274f", "filename": "gcc/fixinc/Makefile.BEOS", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2Ffixinc%2FMakefile.BEOS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2Ffixinc%2FMakefile.BEOS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.BEOS?ref=6047d503093cdfd51a931ecbf8c5d563a5e61735", "patch": "@@ -23,9 +23,9 @@\n # Its purpose is to build the fixincl and applyfix programs for\n # the Be port of GCC.\n \n-FIXINC_DEFS = -DIN_GCC $(CFLAGS) $(CPPFLAGS) $(INCLUDES) -DSEPARATE_FIX_PROC\n+FL_LIST = $(CFLAGS) $(CPPFLAGS) $(WARN_CFLAGS)\n+FIXINC_DEFS = -DIN_GCC $(FL_LIST) $(INCLUDES) -DSEPARATE_FIX_PROC\n \n-target=i586-pc-beos\n # Directory where sources are, from where we are.\n VPATH = $(srcdir)\n subdir = fixinc\n@@ -64,19 +64,19 @@ OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n \n HDR = server.h gnu-regex.h fixlib.h machname.h\n \n-TARGETS = fixincl applyfix\n+TARGETS = fixincl@exeext@ applyfix@exeext@\n \n all : $(TARGETS)\n gen : $(srcdir)/fixincl.x\n \n FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o\n \n-fixincl: $(FIXINCL_OBJ) $(LIBERTY)\n+fixincl@exeext@: $(FIXINCL_OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n \n APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o\n \n-applyfix: $(APPLY_OBJ) $(LIBERTY)\n+applyfix@exeext@: $(APPLY_OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n \n $(OBJ)      : $(HDR)\n@@ -100,14 +100,14 @@ $(srcdir)/fixincl.x: fixincl.tpl inclhack.def\n clean:\n \trm -f *.o $(TARGETS) machname.h *~\n \n-maintainer-clean: clean\n+maintainer-clean : clean\n \trm -f $(srcdir)/fixincl.x\n \n #  Build the executable and copy up into gcc dir.\n #  We still copy the script because we still have alternative scripts.\n #\n install-bin : $(TARGETS)\n-\t./fixincl -v\n+\t./fixincl@exeext@ -v\n \t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n \t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n \t@if [ -f ./fixincl.sh ] ; \\"}, {"sha": "450ca6b574a3bf91a36d4988316fe7dabaf41fd1", "filename": "gcc/fixinc/Makefile.DOS", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2Ffixinc%2FMakefile.DOS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2Ffixinc%2FMakefile.DOS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.DOS?ref=6047d503093cdfd51a931ecbf8c5d563a5e61735", "patch": "@@ -23,10 +23,9 @@\n # Its purpose is to build the fixincl and applyfix programs for\n # the DJGPP (aka MS-DOS) port of GCC.\n \n-FIXINC_DEFS = -DIN_GCC $(CFLAGS) $(CPPFLAGS) $(INCLUDES) \\\n- -D__MSDOS__ -DSEPARATE_FIX_PROC\n+FL_LIST = $(CFLAGS) $(CPPFLAGS) $(WARN_CFLAGS)\n+FIXINC_DEFS = -DIN_GCC $(FL_LIST) $(INCLUDES) -DSEPARATE_FIX_PROC\n \n-target=i386-pc-msdosdjgpp\n # Directory where sources are, from where we are.\n VPATH = $(srcdir)\n subdir = fixinc\n@@ -65,19 +64,19 @@ OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n \n HDR = server.h gnu-regex.h fixlib.h machname.h\n \n-TARGETS = fixincl.exe applyfix.exe\n+TARGETS = fixincl@exeext@ applyfix@exeext@\n \n all : $(TARGETS)\n gen : $(srcdir)/fixincl.x\n \n FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o\n \n-fixincl.exe: $(FIXINCL_OBJ) $(LIBERTY)\n+fixincl@exeext@: $(FIXINCL_OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n \n APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o\n \n-applyfix.exe: $(APPLY_OBJ) $(LIBERTY)\n+applyfix@exeext@: $(APPLY_OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n \n $(OBJ)      : $(HDR)\n@@ -108,7 +107,7 @@ maintainer-clean : clean\n #  We still copy the script because we still have alternative scripts.\n #\n install-bin : $(TARGETS)\n-\t./fixincl.exe -v\n+\t./fixincl@exeext@ -v\n \t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n \t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n \t@if [ -f ./fixincl.sh ] ; \\"}, {"sha": "c0d72d5eeaf7b76fbd4378336b98f22704bfbd8f", "filename": "gcc/fixinc/Makefile.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2Ffixinc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2Ffixinc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.in?ref=6047d503093cdfd51a931ecbf8c5d563a5e61735", "patch": "@@ -22,9 +22,9 @@\n # The makefile built from this file lives in the fixinc subdirectory.\n # Its purpose is to build the any-platforms fixinc.sh script.\n \n-FIXINC_DEFS = -DIN_GCC $(WARN_CFLAGS) $(CFLAGS) $(CPPFLAGS) $(INCLUDES)\n+FL_LIST = $(CFLAGS) $(CPPFLAGS) $(WARN_CFLAGS)\n+FIXINC_DEFS = -DIN_GCC $(FL_LIST) $(INCLUDES)\n \n-target=@target@\n # Directory where sources are, from where we are.\n srcdir = @srcdir@\n VPATH = $(srcdir)\n@@ -64,12 +64,12 @@ OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n \n HDR = server.h gnu-regex.h fixlib.h machname.h\n \n-TARGETS = fixincl\n+TARGETS = fixincl@exeext@\n \n all : $(TARGETS)\n gen : $(srcdir)/fixincl.x\n \n-fixincl: $(OBJ) $(LIBERTY)\n+fixincl@exeext@: $(OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(OBJ) $(LIBERTY)\n \n $(OBJ)      : $(HDR)\n@@ -100,7 +100,7 @@ maintainer-clean : clean\n #  We still copy the script because we still have alternative scripts.\n #\n install-bin : $(TARGETS)\n-\t./fixincl -v\n+\t./fixincl@exeext@ -v\n \t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n \t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n \t@if [ -f ./fixincl.sh ] ; \\\n@@ -115,7 +115,7 @@ Makefile: Makefile.in ../config.status\n \t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= \\\n \t  $(SHELL) ./config.status\n \n-check : fixincl\n+check : $(TARGETS)\n \tautogen -T $(srcdir)/check.tpl $(srcdir)/inclhack.def\n \t$(SHELL) ./check.sh $(srcdir)/tests/base\n \t@rm -f ./check.sh"}, {"sha": "206b04f405c7ca82f9526089e2a5ab612efe8ffc", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6047d503093cdfd51a931ecbf8c5d563a5e61735/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=6047d503093cdfd51a931ecbf8c5d563a5e61735", "patch": "@@ -1015,7 +1015,7 @@ fix_with_system (p_fixd, pz_fix_file, pz_file_source, pz_temp_file)\n       /*\n        *  add the file machinations.\n        */\n-#ifdef SEPARATE_FIX_PROC\n+#ifdef __MSDOS__\n       sprintf (pz_scan, z_cmd_fmt, pz_file_source, pz_temp_file );\n #else\n       sprintf (pz_scan, z_cmd_fmt, pz_file_source, pz_temp_file,"}]}