{"sha": "612137e17109d890948fe30cb997b590b5944df4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEyMTM3ZTE3MTA5ZDg5MDk0OGZlMzBjYjk5N2I1OTBiNTk0NGRmNA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2020-01-24T14:38:16Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2020-01-24T14:38:16Z"}, "message": "contrib: Change 'remote' for personal branches and add branch creation script\n\nWhilst trying to convert the add vendor branch script to work with\npersonal branches I encountered a minor issue where git would report\nambiguous refs when checking out the new branch.\n\nIt turns out that this is because git considers <me>/<topic> to be\nambiguous if both\n\n  refs/heads/<me>/<topic>\n\nand\n\n  refs/remotes/<me>/<topic>\n\nexist in the list of known branches.\n\nHaving thought about this a bit, I think the best solution is to adopt\nsomething more like the vendors space and call the remote users/<me>\n(this also works better if you want to set up remotes to track other\nusers branches as well).\n\nSo this patch has two parts.\n\n1) It updates gcc-git-customization.sh to set up the new 'remote' and\nconverts any existing remote and branches tracking that to the new\nformat\n2) It adds a new script to set up a personal branch on the gcc git repository.\n\n\t* gcc-git-customization.sh: Use users/<pfx> for the personal remote\n\trather than just <pfx>.  Convert any existing personal branches to the\n\tnew remote.\n\t* git-add-user-branch.sh: New file.", "tree": {"sha": "0c6e57ab460360b57cd4ca9881f835a02723dfcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c6e57ab460360b57cd4ca9881f835a02723dfcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/612137e17109d890948fe30cb997b590b5944df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/612137e17109d890948fe30cb997b590b5944df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/612137e17109d890948fe30cb997b590b5944df4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/612137e17109d890948fe30cb997b590b5944df4/comments", "author": null, "committer": null, "parents": [{"sha": "ba386bea11173bfa2f7c76b6368a49a43f366eea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba386bea11173bfa2f7c76b6368a49a43f366eea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba386bea11173bfa2f7c76b6368a49a43f366eea"}], "stats": {"total": 90, "additions": 83, "deletions": 7}, "files": [{"sha": "488a32ca69b75adbb8bd7782c7dc733e705560c0", "filename": "contrib/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/612137e17109d890948fe30cb997b590b5944df4/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/612137e17109d890948fe30cb997b590b5944df4/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=612137e17109d890948fe30cb997b590b5944df4", "patch": "@@ -1,3 +1,10 @@\n+2020-01-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* gcc-git-customization.sh: Use users/<pfx> for the personal remote\n+\trather than just <pfx>.  Convert existing personal branches to the\n+\tnew remote.\n+\t* git-add-user-branch.sh: New file.\n+\n 2020-01-22  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* git-add-vendor-branch.sh: New file."}, {"sha": "f3e48316ead37b27b538d294571e7b279b6392df", "filename": "contrib/gcc-git-customization.sh", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/612137e17109d890948fe30cb997b590b5944df4/contrib%2Fgcc-git-customization.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/612137e17109d890948fe30cb997b590b5944df4/contrib%2Fgcc-git-customization.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-git-customization.sh?ref=612137e17109d890948fe30cb997b590b5944df4", "patch": "@@ -128,7 +128,7 @@ url=$(git config --get \"remote.${upstream}.url\")\n pushurl=$(git config --get \"remote.${upstream}.pushurl\")\n for v in $vendors\n do\n-    echo \"Migrating vendor $v to new remote vendors/$v\"\n+    echo \"Migrating vendor \\\"$v\\\" to new remote \\\"vendors/$v\\\"\"\n     git config --unset-all \"remote.${upstream}.fetch\" \"refs/vendors/$v/\"\n     git config --unset-all \"remote.${upstream}.push\" \"refs/vendors/$v/\"\n     git config \"remote.vendors/${v}.url\" \"${url}\"\n@@ -140,15 +140,36 @@ do\n     git config --add \"remote.vendors/${v}.fetch\" \"+refs/vendors/$v/tags/*:refs/tags/vendors/${v}/*\"\n done\n \n-echo \"Setting up tracking for personal namespace $remote_id in remotes/${new_pfx}\"\n-git config \"remote.${new_pfx}.url\" \"${url}\"\n+# Convert the remote 'pfx' to users/pfx to avoid problems with ambiguous refs\n+# on user branches\n+old_remote=$(git config --get \"remote.${old_pfx}.url\")\n+if [ -n \"${old_remote}\" ]\n+then\n+    echo \"Migrating remote \\\"${old_pfx}\\\" to new remote \\\"users/${new_pfx}\\\"\"\n+    # Create a dummy fetch rule that will cause the subsequent prune to remove the old remote refs.\n+    git config --replace-all \"remote.${old_pfx}.fetch\" \"+refs/empty/*:refs/remotes/${old_pfx}/*\"\n+    # Remove any remotes\n+    git remote prune ${old_pfx}\n+    git config --remove-section \"remote.${old_pfx}\"\n+    for br in $(git branch --list \"${old_pfx}/*\")\n+    do\n+\told_remote=$(git config --get \"branch.${br}.remote\")\n+\tif [ \"${old_remote}\" = \"${old_pfx}\" ]\n+\tthen\n+\t    git config \"branch.${br}.remote\" \"users/${new_pfx}\"\n+\tfi\n+    done\n+fi\n+\n+echo \"Setting up tracking for personal namespace $remote_id in remotes/users/${new_pfx}\"\n+git config \"remote.users/${new_pfx}.url\" \"${url}\"\n if [ \"x$pushurl\" != \"x\" ]\n then\n-    git config \"remote.${new_pfx}.pushurl\" \"${pushurl}\"\n+    git config \"remote.users/${new_pfx}.pushurl\" \"${pushurl}\"\n fi\n-git config --replace-all \"remote.${new_pfx}.fetch\" \"+refs/users/${remote_id}/heads/*:refs/remotes/${new_pfx}/*\" \":refs/remotes/${old_pfx}/\"\n-git config --replace-all \"remote.${new_pfx}.fetch\" \"+refs/users/${remote_id}/tags/*:refs/tags/${new_pfx}/*\" \":refs/tags/${old_pfx}/\"\n-git config --replace-all \"remote.${new_pfx}.push\" \"refs/heads/${new_pfx}/*:refs/users/${remote_id}/heads/*\" \":refs/users/${remote_id}\"\n+git config --replace-all \"remote.users/${new_pfx}.fetch\" \"+refs/users/${remote_id}/heads/*:refs/remotes/users/${new_pfx}/*\" \"refs/users/${remote_id}/heads/\"\n+git config --replace-all \"remote.users/${new_pfx}.fetch\" \"+refs/users/${remote_id}/tags/*:refs/tags/users/${new_pfx}/*\" \"refs/users/${remote_id}/tags/\"\n+git config --replace-all \"remote.users/${new_pfx}.push\" \"refs/heads/${new_pfx}/*:refs/users/${remote_id}/heads/*\" \"refs/users/${remote_id}\"\n \n if [ \"$old_pfx\" != \"$new_pfx\" -a \"$old_pfx\" != \"${upstream}\" ]\n then\n@@ -157,3 +178,5 @@ fi\n \n git config --unset-all \"remote.${upstream}.fetch\" \"refs/users/${remote_id}/\"\n git config --unset-all \"remote.${upstream}.push\" \"refs/users/${remote_id}/\"\n+\n+git fetch \"users/${new_pfx}\""}, {"sha": "e014f7518fbcc3dd54e5cbe5c386b0b0ae069e79", "filename": "contrib/git-add-user-branch.sh", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/612137e17109d890948fe30cb997b590b5944df4/contrib%2Fgit-add-user-branch.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/612137e17109d890948fe30cb997b590b5944df4/contrib%2Fgit-add-user-branch.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-add-user-branch.sh?ref=612137e17109d890948fe30cb997b590b5944df4", "patch": "@@ -0,0 +1,46 @@\n+#! /bin/sh -e\n+\n+# Create a new upstream user branch.\n+\n+# Usage:\n+#  contrib/git-add-user-branch.sh [<personal-prefix>/]<branch-name> <base>\n+\n+usage ()\n+{\n+    echo \"Usage:\"\n+    echo \"  $0 [<personal-prefix>/]<branch-name> <start-point>\"\n+    echo\n+    echo \"personal space must already have been set up using\"\n+    echo \"contrib/gcc-git-customization.sh\"\n+    exit 1\n+}\n+\n+if [ $# != 2 ]\n+then\n+    usage\n+fi\n+\n+userpfx=$(git config --get \"gcc-config.userpfx\")\n+user=$(git config --get \"gcc-config.user\")\n+\n+if [ -z \"$userpfx\" -o -z \"$user\" ]\n+then\n+    usage\n+fi\n+\n+branch=$(echo \"$1\" | sed -r \"s:(${userpfx}/)?(.*)$:\\2:\")\n+start=$2\n+\n+# Sanity check the new branch argument.  If there is no '/', then the\n+# vendor will be the same as the entire first argument.\n+if [ -z \"$branch\" ]\n+then\n+    usage\n+fi\n+\n+git push users/${userpfx} ${start}:refs/users/${user}/heads/${branch}\n+git fetch -q users/${userpfx}\n+git branch ${userpfx}/${branch} remotes/users/${userpfx}/${branch}\n+echo \"You are now ready to check out ${userpfx}/${branch}\"\n+echo \"To push the branch upstream use:\"\n+echo \"  git push users/${userpfx} ${userpfx}/${branch}\""}]}