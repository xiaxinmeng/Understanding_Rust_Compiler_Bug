{"sha": "84355514f445ca2c7e3de1e05b8d2a2993f96cbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQzNTU1MTRmNDQ1Y2EyYzdlM2RlMWUwNWI4ZDJhMjk5M2Y5NmNiYw==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2017-03-29T14:18:07Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2017-03-29T14:18:07Z"}, "message": "re PR ada/80146 (ICE in copy_to_mode_reg, at explow.c:612)\n\n\tPR ada/80146\n\t* calls.c (prepare_call_address): Convert funexp to Pmode before\n\tcopying to temp reg.\n\nFrom-SVN: r246570", "tree": {"sha": "8e4f21eb7ac81a2802f717ea0f1acea6623b9f14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e4f21eb7ac81a2802f717ea0f1acea6623b9f14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84355514f445ca2c7e3de1e05b8d2a2993f96cbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84355514f445ca2c7e3de1e05b8d2a2993f96cbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84355514f445ca2c7e3de1e05b8d2a2993f96cbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84355514f445ca2c7e3de1e05b8d2a2993f96cbc/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8777357cb5a467b31ebeb4eaa6588a1d9fb8546e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8777357cb5a467b31ebeb4eaa6588a1d9fb8546e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8777357cb5a467b31ebeb4eaa6588a1d9fb8546e"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "bbac099a2c8cea5fc990e00e3e825c2c0f8659e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84355514f445ca2c7e3de1e05b8d2a2993f96cbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84355514f445ca2c7e3de1e05b8d2a2993f96cbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84355514f445ca2c7e3de1e05b8d2a2993f96cbc", "patch": "@@ -1,3 +1,9 @@\n+2017-03-29  Andreas Schwab  <schwab@suse.de>\n+\n+\tPR ada/80146\n+\t* calls.c (prepare_call_address): Convert funexp to Pmode before\n+\tcopying to temp reg.\n+\n 2017-03-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/80158"}, {"sha": "c92e35ea5a8d77f8bebfcaa5112c127b629c26a0", "filename": "gcc/calls.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84355514f445ca2c7e3de1e05b8d2a2993f96cbc/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84355514f445ca2c7e3de1e05b8d2a2993f96cbc/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=84355514f445ca2c7e3de1e05b8d2a2993f96cbc", "patch": "@@ -206,6 +206,9 @@ prepare_call_address (tree fndecl_or_type, rtx funexp, rtx static_chain_value,\n \t  DECL_STATIC_CHAIN (fndecl_or_type) = 1;\n \t  rtx chain = targetm.calls.static_chain (fndecl_or_type, false);\n \n+\t  if (GET_MODE (funexp) != Pmode)\n+\t    funexp = convert_memory_address (Pmode, funexp);\n+\n \t  /* Avoid long live ranges around function calls.  */\n \t  funexp = copy_to_mode_reg (Pmode, funexp);\n "}]}