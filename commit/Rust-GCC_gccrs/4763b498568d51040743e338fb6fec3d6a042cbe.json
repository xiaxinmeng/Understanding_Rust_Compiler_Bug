{"sha": "4763b498568d51040743e338fb6fec3d6a042cbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc2M2I0OTg1NjhkNTEwNDA3NDNlMzM4ZmI2ZmVjM2Q2YTA0MmNiZQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-06-18T20:47:50Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-06-18T20:47:50Z"}, "message": "(large_int): Rework, so that we don't get funny boundary conditions on systems with 64 bit integers.\n\n(large_int): Rework, so that we don't get funny boundary\nconditions on systems with 64 bit integers.\n(mips_move_1word): Just use li to load constants that can be done\nwith lui, instead of issuing the lui, since the GAS bug that\ngenerated two instructions has been fixed.\n(final_prescan_insn): Move the checking for filling the delay\nslots here from the FINAL_PRESCAN_INSN macro.\n\nFrom-SVN: r1216", "tree": {"sha": "3cdecf39332241d3a5c42c0b4571430b33a0c003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cdecf39332241d3a5c42c0b4571430b33a0c003"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4763b498568d51040743e338fb6fec3d6a042cbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4763b498568d51040743e338fb6fec3d6a042cbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4763b498568d51040743e338fb6fec3d6a042cbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4763b498568d51040743e338fb6fec3d6a042cbe/comments", "author": null, "committer": null, "parents": [{"sha": "99cbc4b07a17e60aa730c33a2fcb0021db00afd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99cbc4b07a17e60aa730c33a2fcb0021db00afd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99cbc4b07a17e60aa730c33a2fcb0021db00afd1"}], "stats": {"total": 29, "additions": 6, "deletions": 23}, "files": [{"sha": "e911ca8dd00be3a74155b1486c542091f139118f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 6, "deletions": 23, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4763b498568d51040743e338fb6fec3d6a042cbe/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4763b498568d51040743e338fb6fec3d6a042cbe/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=4763b498568d51040743e338fb6fec3d6a042cbe", "patch": "@@ -426,35 +426,18 @@ large_int (op, mode)\n     return FALSE;\n \n   value = INTVAL (op);\n-  if ((value & 0xffff0000) == 0)\t\t/* ior reg,$r0,value */\n+  if ((value & ~0x0000ffff) == 0)\t\t\t/* ior reg,$r0,value */\n     return FALSE;\n \n-  if ((value & 0xffff0000) == 0xffff0000)\t/* subu reg,$r0,value */\n+  if (((unsigned long)(value + 32768)) <= 32767)\t/* subu reg,$r0,value */\n     return FALSE;\n \n-  if ((value & 0x0000ffff) == 0)\t\t/* lui reg,value>>16 */\n+  if ((value & 0xffff0000) == value)\t\t\t/* lui reg,value>>16 */\n     return FALSE;\n \n   return TRUE;\n }\n \n-/* Return truth value of whether OP is an integer which can be loaded\n-   with an lui instruction.  */\n-\n-int\n-lui_int (op, mode)\n-     rtx op;\n-     enum machine_mode mode;\n-{\n-  if (GET_CODE (op) != CONST_INT)\n-    return FALSE;\n-\n-  if ((INTVAL (op) & 0x0000ffff) == 0)\t\t/* lui reg,value>>16 */\n-    return TRUE;\n-\n-  return FALSE;\n-}\n-\n /* Return truth value of whether OP is a register or the constant 0.  */\n \n int\n@@ -1066,7 +1049,7 @@ mips_move_1word (operands, insn, unsignedp)\n \t    }\n \n \t  else if (GP_REG_P (regno0))\n-\t    ret = \"li\\t%0,%X1\\t\\t# %1\";\n+\t    ret = (INTVAL (op1) < 0) ? \"li\\t%0,%1\\t\\t# %X1\" : \"li\\t%0,%X1\\t\\t# %1\";\n \t}\n \n       else if (code1 == CONST_DOUBLE && mode == SFmode)\n@@ -4158,10 +4141,10 @@ function_prologue (file, size)\n   if (frame_pointer_needed)\n     {\n       if (tsize <= 32767)\n-\tfprintf (file, \"\\taddu\\t%s,%s,%d\\t# set up frame pointer\\n\", fp_str, sp_str, tsize);\n+\tfprintf (file, \"\\taddu\\t%s,%s,%d\\t\\t# set up frame pointer\\n\", fp_str, sp_str, tsize);\n \n       else\n-\tfprintf (file, \"\\taddu\\t%s,%s,%s\\t# set up frame pointer\\n\", fp_str, sp_str,\n+\tfprintf (file, \"\\taddu\\t%s,%s,%s\\t\\t# set up frame pointer\\n\", fp_str, sp_str,\n \t\t reg_names[MIPS_TEMP1_REGNUM]);\n     }\n }"}]}