{"sha": "f6d9912f6b30e4880183dbafdc61cd3765269d2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZkOTkxMmY2YjMwZTQ4ODAxODNkYmFmZGM2MWNkMzc2NTI2OWQyZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-11-17T22:12:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-11-17T22:12:31Z"}, "message": "Merge branch 'rth/atomic/ppc'\n\nFrom-SVN: r181459", "tree": {"sha": "2dbb4c7640ec3c6f80e878068b5361c6d99de243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dbb4c7640ec3c6f80e878068b5361c6d99de243"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6d9912f6b30e4880183dbafdc61cd3765269d2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d9912f6b30e4880183dbafdc61cd3765269d2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6d9912f6b30e4880183dbafdc61cd3765269d2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d9912f6b30e4880183dbafdc61cd3765269d2e/comments", "author": null, "committer": null, "parents": [{"sha": "f631ae2eb17563cde864012b518c9ee5e28a64a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f631ae2eb17563cde864012b518c9ee5e28a64a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f631ae2eb17563cde864012b518c9ee5e28a64a1"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "1066aae88000fc8e040b660d55311a9ce20bcdc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d9912f6b30e4880183dbafdc61cd3765269d2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d9912f6b30e4880183dbafdc61cd3765269d2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6d9912f6b30e4880183dbafdc61cd3765269d2e", "patch": "@@ -14,6 +14,12 @@\n \t* builtins.c (expand_builtin): Remove 4th parameter representing \n \tweak/strong mode when __atomic_compare_exchange becomes a library call.\n \n+2011-11-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_atomic_compare_and_swap): Get\n+\tnew pseudo for target after convert_modes.\n+\t(rs6000_expand_atomic_exchange, rs6000_expand_atomic_op): Likewise.\n+\n 2011-11-17  Richard Henderson  <rth@redhat.com>\n \n \t* builtins.c (expand_builtin_mem_thread_fence): Remove."}, {"sha": "f01353b894233b94eb2224b53f1507235d360d84", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6d9912f6b30e4880183dbafdc61cd3765269d2e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6d9912f6b30e4880183dbafdc61cd3765269d2e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f6d9912f6b30e4880183dbafdc61cd3765269d2e", "patch": "@@ -17341,12 +17341,12 @@ rs6000_expand_atomic_compare_and_swap (rtx operands[])\n       /* Shift and mask OLDVAL into position with the word.  */\n       oldval = convert_modes (SImode, mode, oldval, 1);\n       oldval = expand_simple_binop (SImode, ASHIFT, oldval, shift,\n-\t\t\t\t    oldval, 1, OPTAB_LIB_WIDEN);\n+\t\t\t\t    NULL_RTX, 1, OPTAB_LIB_WIDEN);\n \n       /* Shift and mask NEWVAL into position within the word.  */\n       newval = convert_modes (SImode, mode, newval, 1);\n       newval = expand_simple_binop (SImode, ASHIFT, newval, shift,\n-\t\t\t\t    newval, 1, OPTAB_LIB_WIDEN);\n+\t\t\t\t    NULL_RTX, 1, OPTAB_LIB_WIDEN);\n \n       /* Prepare to adjust the return value.  */\n       retval = gen_reg_rtx (SImode);\n@@ -17434,7 +17434,7 @@ rs6000_expand_atomic_exchange (rtx operands[])\n       /* Shift and mask VAL into position with the word.  */\n       val = convert_modes (SImode, mode, val, 1);\n       val = expand_simple_binop (SImode, ASHIFT, val, shift,\n-\t\t\t\t val, 1, OPTAB_LIB_WIDEN);\n+\t\t\t\t NULL_RTX, 1, OPTAB_LIB_WIDEN);\n \n       /* Prepare to adjust the return value.  */\n       retval = gen_reg_rtx (SImode);\n@@ -17487,7 +17487,7 @@ rs6000_expand_atomic_op (enum rtx_code code, rtx mem, rtx val,\n       /* Shift and mask VAL into position with the word.  */\n       val = convert_modes (SImode, mode, val, 1);\n       val = expand_simple_binop (SImode, ASHIFT, val, shift,\n-\t\t\t\t val, 1, OPTAB_LIB_WIDEN);\n+\t\t\t\t NULL_RTX, 1, OPTAB_LIB_WIDEN);\n \n       switch (code)\n \t{"}]}