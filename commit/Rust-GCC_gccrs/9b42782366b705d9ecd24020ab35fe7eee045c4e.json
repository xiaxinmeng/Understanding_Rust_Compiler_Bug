{"sha": "9b42782366b705d9ecd24020ab35fe7eee045c4e", "node_id": "C_kwDOANBUbNoAKDliNDI3ODIzNjZiNzA1ZDllY2QyNDAyMGFiMzVmZTdlZWUwNDVjNGU", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-01-17T13:57:37Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-01-20T11:15:27Z"}, "message": "arm: Add test for AES erratum mitigation\n\nAdd a testcase for the erratum mitigation.  To improve coverage\nuse -dp on the assembler output and match the pattern names (and where\nneeded the alternative number).\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/crypto-vaese-erratum1.c: New test.", "tree": {"sha": "e277101387a18365e0f224e0f901319bf7d7c719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e277101387a18365e0f224e0f901319bf7d7c719"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b42782366b705d9ecd24020ab35fe7eee045c4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b42782366b705d9ecd24020ab35fe7eee045c4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b42782366b705d9ecd24020ab35fe7eee045c4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b42782366b705d9ecd24020ab35fe7eee045c4e/comments", "author": null, "committer": null, "parents": [{"sha": "997070498b0d713ecfb384dc12d1e68ebdbee5bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/997070498b0d713ecfb384dc12d1e68ebdbee5bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/997070498b0d713ecfb384dc12d1e68ebdbee5bd"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "3f16688a8aa2a4d31cc14ca57bf97a2b9dc29642", "filename": "gcc/testsuite/gcc.target/arm/crypto-vaese-erratum1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b42782366b705d9ecd24020ab35fe7eee045c4e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcrypto-vaese-erratum1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b42782366b705d9ecd24020ab35fe7eee045c4e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcrypto-vaese-erratum1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fcrypto-vaese-erratum1.c?ref=9b42782366b705d9ecd24020ab35fe7eee045c4e", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_crypto_ok } */\n+/* { dg-options \"-O2 -mfix-cortex-a57-aes-1742098 -dp\" } */\n+/* { dg-add-options arm_crypto } */\n+\n+#include \"arm_neon.h\"\n+\n+uint8x16_t\n+foo (uint8x16_t v)\n+{\n+  const uint8x16_t key1 = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n+\t\t\t   0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f};\n+  const uint8x16_t key2 = {0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n+\t\t\t   0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f};\n+  int i;\n+\n+  for (i = 0; i < 16; ++i)\n+    {\n+      v = vaesmcq_u8 (vaeseq_u8 (v, key1));\n+      v = vaesmcq_u8 (vaeseq_u8 (v, key2));\n+    }\n+  return v;\n+}\n+\n+/* { dg-final { scan-assembler \"aese.8\\tq\\[0-9\\]+, q\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler-times \"aes_op_protect/2\" 2} } */\n+/* { dg-final { scan-assembler-times \"aes_op_protect/0\" 1} } */\n+/* { dg-final { scan-assembler-times \"(?:aesmc|aese_fused)_protected\" 1} } */"}]}