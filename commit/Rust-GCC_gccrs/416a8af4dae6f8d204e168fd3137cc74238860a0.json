{"sha": "416a8af4dae6f8d204e168fd3137cc74238860a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE2YThhZjRkYWU2ZjhkMjA0ZTE2OGZkMzEzN2NjNzQyMzg4NjBhMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-01-08T21:21:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-01-08T21:21:29Z"}, "message": "re PR fortran/34706 (FE should reuse array temporaries, reduce temporaties and tell ME the array-size type)\n\n2008-01-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR fortran/34706\n\tPR tree-optimization/34683\n\t* trans-types.c (gfc_get_array_type_bounds): Use an array type\n\twith known size for accesses if that is known.\n\nFrom-SVN: r131404", "tree": {"sha": "50e2acad7a23791020b573a08cf21a892c8f51e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50e2acad7a23791020b573a08cf21a892c8f51e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/416a8af4dae6f8d204e168fd3137cc74238860a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/416a8af4dae6f8d204e168fd3137cc74238860a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/416a8af4dae6f8d204e168fd3137cc74238860a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/416a8af4dae6f8d204e168fd3137cc74238860a0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d86971803c8cac4ce7c4f55ce189c5710fb11a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d86971803c8cac4ce7c4f55ce189c5710fb11a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d86971803c8cac4ce7c4f55ce189c5710fb11a5"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "e96f612d2002737e9d09169f3094064cb94f2466", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/416a8af4dae6f8d204e168fd3137cc74238860a0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/416a8af4dae6f8d204e168fd3137cc74238860a0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=416a8af4dae6f8d204e168fd3137cc74238860a0", "patch": "@@ -1,3 +1,10 @@\n+2008-01-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR fortran/34706\n+\tPR tree-optimization/34683\n+\t* trans-types.c (gfc_get_array_type_bounds): Use an array type\n+\twith known size for accesses if that is known.\n+\n 2008-01-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/34476"}, {"sha": "67eaf041c23f9292f982d6b5f602cd2d5e416eac", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/416a8af4dae6f8d204e168fd3137cc74238860a0/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/416a8af4dae6f8d204e168fd3137cc74238860a0/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=416a8af4dae6f8d204e168fd3137cc74238860a0", "patch": "@@ -1436,7 +1436,7 @@ gfc_get_array_type_bounds (tree etype, int dimen, tree * lbound,\n \t\t\t   enum gfc_array_kind akind)\n {\n   char name[8 + GFC_RANK_DIGITS + GFC_MAX_SYMBOL_LEN];\n-  tree fat_type, base_type, arraytype, lower, upper, stride, tmp;\n+  tree fat_type, base_type, arraytype, lower, upper, stride, tmp, rtype;\n   const char *typename;\n   int n;\n \n@@ -1511,10 +1511,15 @@ gfc_get_array_type_bounds (tree etype, int dimen, tree * lbound,\n   /* TODO: known offsets for descriptors.  */\n   GFC_TYPE_ARRAY_OFFSET (fat_type) = NULL_TREE;\n \n-  /* We define data as an unknown size array. Much better than doing\n-     pointer arithmetic.  */\n-  arraytype =\n-    build_array_type (etype, gfc_array_range_type);\n+  /* We define data as an array with the correct size if possible.\n+     Much better than doing pointer arithmetic.  */\n+  if (stride)\n+    rtype = build_range_type (gfc_array_index_type, gfc_index_zero_node,\n+\t\t\t      int_const_binop (MINUS_EXPR, stride,\n+\t\t\t\t\t       integer_one_node, 0));\n+  else\n+    rtype = gfc_array_range_type;\n+  arraytype = build_array_type (etype, rtype);\n   arraytype = build_pointer_type (arraytype);\n   GFC_TYPE_ARRAY_DATAPTR_TYPE (fat_type) = arraytype;\n "}]}