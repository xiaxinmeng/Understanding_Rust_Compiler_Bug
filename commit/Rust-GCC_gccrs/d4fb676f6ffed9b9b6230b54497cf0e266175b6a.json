{"sha": "d4fb676f6ffed9b9b6230b54497cf0e266175b6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRmYjY3NmY2ZmZlZDliOWI2MjMwYjU0NDk3Y2YwZTI2NjE3NWI2YQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-02T11:53:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-02T11:53:16Z"}, "message": "bitmap.c (bitmap_descriptor): Add search_iter.\n\n\t* bitmap.c (bitmap_descriptor): Add search_iter.\n\t(bitmap_find_bit): Increment it.\n\t(print_statistics): Print it.\n\nFrom-SVN: r160148", "tree": {"sha": "5c522620d37262258f1f0c92bfad41d5d9f92b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c522620d37262258f1f0c92bfad41d5d9f92b4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4fb676f6ffed9b9b6230b54497cf0e266175b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4fb676f6ffed9b9b6230b54497cf0e266175b6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4fb676f6ffed9b9b6230b54497cf0e266175b6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4fb676f6ffed9b9b6230b54497cf0e266175b6a/comments", "author": null, "committer": null, "parents": [{"sha": "36c4a482b2819cae529b52c4afa1af87c7d7a2d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c4a482b2819cae529b52c4afa1af87c7d7a2d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36c4a482b2819cae529b52c4afa1af87c7d7a2d0"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "67b0078e8e24c7cb6654856cff9057378cafe208", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4fb676f6ffed9b9b6230b54497cf0e266175b6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4fb676f6ffed9b9b6230b54497cf0e266175b6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4fb676f6ffed9b9b6230b54497cf0e266175b6a", "patch": "@@ -1,3 +1,9 @@\n+2010-06-02  Jan Hubicka  <jh@suse.cz>\n+\n+\t* bitmap.c (bitmap_descriptor): Add search_iter.\n+\t(bitmap_find_bit): Increment it.\n+\t(print_statistics): Print it.\n+\n 2010-06-02  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree-vect-slp.c (vect_create_mask_and_perm): Use gimple_build_call"}, {"sha": "8f4a56606bd8f487e66d08e4fbc8c844dbd38637", "filename": "gcc/bitmap.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4fb676f6ffed9b9b6230b54497cf0e266175b6a/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4fb676f6ffed9b9b6230b54497cf0e266175b6a/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=d4fb676f6ffed9b9b6230b54497cf0e266175b6a", "patch": "@@ -42,6 +42,7 @@ struct bitmap_descriptor\n   HOST_WIDEST_INT peak;\n   HOST_WIDEST_INT current;\n   int nsearches;\n+  int search_iter;\n };\n \n /* Hashtable mapping bitmap names to descriptors.  */\n@@ -556,36 +557,48 @@ bitmap_find_bit (bitmap head, unsigned int bit)\n   bitmap_element *element;\n   unsigned int indx = bit / BITMAP_ELEMENT_ALL_BITS;\n \n-#ifdef GATHER_STATISTICS\n-  head->desc->nsearches++;\n-#endif\n   if (head->current == 0\n       || head->indx == indx)\n     return head->current;\n+#ifdef GATHER_STATISTICS\n+  head->desc->nsearches++;\n+#endif\n \n   if (head->indx < indx)\n     /* INDX is beyond head->indx.  Search from head->current\n        forward.  */\n     for (element = head->current;\n \t element->next != 0 && element->indx < indx;\n \t element = element->next)\n+#ifdef GATHER_STATISTICS\n+      head->desc->search_iter++;\n+#else\n       ;\n+#endif\n \n   else if (head->indx / 2 < indx)\n     /* INDX is less than head->indx and closer to head->indx than to\n        0.  Search from head->current backward.  */\n     for (element = head->current;\n \t element->prev != 0 && element->indx > indx;\n \t element = element->prev)\n+#ifdef GATHER_STATISTICS\n+      head->desc->search_iter++;\n+#else\n       ;\n+#endif\n \n   else\n     /* INDX is less than head->indx and closer to 0 than to\n        head->indx.  Search from head->first forward.  */\n     for (element = head->first;\n \t element->next != 0 && element->indx < indx;\n \t element = element->next)\n+#ifdef GATHER_STATISTICS\n+      head->desc->search_iter++;\n+#else\n       ;\n+#endif\n \n   /* `element' is the nearest to the one we want.  If it's not the one we\n      want, the one we want doesn't exist.  */\n@@ -2115,8 +2128,9 @@ print_statistics (void **slot, void *b)\n       sprintf (s, \"%s:%i (%s)\", s1, d->line, d->function);\n       s[41] = 0;\n       fprintf (stderr, \"%-41s %8d %15\"HOST_WIDEST_INT_PRINT\"d %15\"\n-\t       HOST_WIDEST_INT_PRINT\"d %15\"HOST_WIDEST_INT_PRINT\"d %10d\\n\",\n-\t       s, d->created, d->allocated, d->peak, d->current, d->nsearches);\n+\t       HOST_WIDEST_INT_PRINT\"d %15\"HOST_WIDEST_INT_PRINT\"d %10d %10d\\n\",\n+\t       s, d->created, d->allocated, d->peak, d->current, d->nsearches,\n+\t       d->search_iter);\n       i->size += d->allocated;\n       i->count += d->created;\n     }\n@@ -2134,8 +2148,8 @@ dump_bitmap_statistics (void)\n     return;\n \n   fprintf (stderr, \"\\nBitmap                                     Overall \"\n-\t\t   \"   Allocated        Peak           Leak   searched \"\n-\t\t   \"  per search\\n\");\n+\t\t   \"      Allocated            Peak            Leak   searched \"\n+\t\t   \"  search itr\\n\");\n   fprintf (stderr, \"---------------------------------------------------------------------------------\\n\");\n   info.count = 0;\n   info.size = 0;"}]}