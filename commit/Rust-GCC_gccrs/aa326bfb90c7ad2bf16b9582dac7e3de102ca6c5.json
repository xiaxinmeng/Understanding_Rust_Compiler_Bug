{"sha": "aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEzMjZiZmI5MGM3YWQyYmYxNmI5NTgyZGFjN2UzZGUxMDJjYTZjNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-02-13T21:56:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-02-13T21:56:13Z"}, "message": "cprop.c (cprop_jump): Add missing space in string literal.\n\n\t* cprop.c (cprop_jump): Add missing space in string literal.\n\t* tree-ssa-structalias.c (rewrite_constraints): Likewise.\n\t(get_constraint_for_component_ref): Likewise.\n\t* df-core.c (df_worklist_dataflow_doublequeue): Likewise.\n\t* tree-outof-ssa.c (insert_partition_copy_on_edge): Likewise.\n\t* lra-constraints.c (process_alt_operands): Likewise.\n\t* ipa-inline.c (inline_small_functions): Likewise.\n\t* tree-ssa-sccvn.c (visit_reference_op_store): Likewise.\n\t* cgraph.c (cgraph_edge::redirect_call_stmt_to_callee): Likewise.\n\t* trans-mem.c (diagnose_tm_1_op): Likewise.\n\t* omp-grid.c (grid_find_single_omp_among_assignments): Likewise.\n\t(grid_parallel_clauses_gridifiable): Likewise.\nc/\n\t* c-parser.c (c_parser_oacc_declare): Add missing space in\n\tdiagnostics.\nfortran/\n\t* trans-expr.c (gfc_conv_substring): Add missing space in diagnostics.\n\nFrom-SVN: r245409", "tree": {"sha": "136fa8cc59c566f2e3fee968355d8cc884994b92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/136fa8cc59c566f2e3fee968355d8cc884994b92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ae481772f5ac234fad7028586f2c8559c707cb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae481772f5ac234fad7028586f2c8559c707cb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ae481772f5ac234fad7028586f2c8559c707cb4"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "b6be5d81645ab76e7e723d974f8cd3e95d9794db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -1,5 +1,18 @@\n 2017-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* cprop.c (cprop_jump): Add missing space in string literal.\n+\t* tree-ssa-structalias.c (rewrite_constraints): Likewise.\n+\t(get_constraint_for_component_ref): Likewise.\n+\t* df-core.c (df_worklist_dataflow_doublequeue): Likewise.\n+\t* tree-outof-ssa.c (insert_partition_copy_on_edge): Likewise.\n+\t* lra-constraints.c (process_alt_operands): Likewise.\n+\t* ipa-inline.c (inline_small_functions): Likewise.\n+\t* tree-ssa-sccvn.c (visit_reference_op_store): Likewise.\n+\t* cgraph.c (cgraph_edge::redirect_call_stmt_to_callee): Likewise.\n+\t* trans-mem.c (diagnose_tm_1_op): Likewise.\n+\t* omp-grid.c (grid_find_single_omp_among_assignments): Likewise.\n+\t(grid_parallel_clauses_gridifiable): Likewise.\n+\n \t* config/nvptx/mkoffload.c (process): Add space in between\n \t, and %d.\n "}, {"sha": "3fe285e873c1346175b92ba6fe3ee865fa8c8f34", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -1,3 +1,8 @@\n+2017-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-parser.c (c_parser_oacc_declare): Add missing space in\n+\tdiagnostics.\n+\n 2017-02-13  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR c/79478"}, {"sha": "2297750fbabc0d4e7d785bb2b2f9d185162ed4b1", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -13817,7 +13817,7 @@ c_parser_oacc_declare (c_parser *parser)\n \t       || !DECL_EXTERNAL (decl)))\n \t    {\n \t      error_at (loc,\n-\t\t\t\"%qD must be a global variable in\"\n+\t\t\t\"%qD must be a global variable in \"\n \t\t\t\"%<#pragma acc declare link%>\",\n \t\t\tdecl);\n \t      error = true;"}, {"sha": "839388496ee5f02c1be76d0ea1eb6591eee25820", "filename": "gcc/cgraph.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -1314,7 +1314,7 @@ cgraph_edge::redirect_call_stmt_to_callee (void)\n \t{\n \t  if (dump_file)\n \t    fprintf (dump_file,\n-\t\t     \"Expanding speculative call of %s/%i -> %s/%i count:\"\n+\t\t     \"Expanding speculative call of %s/%i -> %s/%i count: \"\n \t\t     \"%\" PRId64\"\\n\",\n \t\t     xstrdup_for_dump (e->caller->name ()),\n \t\t     e->caller->order,"}, {"sha": "7d20c4434b670ab6ed19d1db56371c9bfc4ca818", "filename": "gcc/cprop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -972,7 +972,7 @@ cprop_jump (basic_block bb, rtx_insn *setcc, rtx_insn *jump, rtx from, rtx src)\n   if (dump_file != NULL)\n     {\n       fprintf (dump_file,\n-\t       \"GLOBAL CONST-PROP: Replacing reg %d in jump_insn %d with\"\n+\t       \"GLOBAL CONST-PROP: Replacing reg %d in jump_insn %d with \"\n \t       \"constant \", REGNO (from), INSN_UID (jump));\n       print_rtl (dump_file, src);\n       fprintf (dump_file, \"\\n\");"}, {"sha": "19f4d3dae8ccc2be37b3ce79423eae5feccf7313", "filename": "gcc/df-core.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -1064,7 +1064,7 @@ df_worklist_dataflow_doublequeue (struct dataflow *dataflow,\n   /* Dump statistics. */\n   if (dump_file)\n     fprintf (dump_file, \"df_worklist_dataflow_doublequeue:\"\n-\t     \"n_basic_blocks %d n_edges %d\"\n+\t     \" n_basic_blocks %d n_edges %d\"\n \t     \" count %d (%5.2g)\\n\",\n \t     n_basic_blocks_for_fn (cfun), n_edges_for_fn (cfun),\n \t     dcount, dcount / (float)n_basic_blocks_for_fn (cfun));"}, {"sha": "d9c269da6cfc32619beb1a6e330f831809d9b923", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -1,3 +1,7 @@\n+2017-02-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* trans-expr.c (gfc_conv_substring): Add missing space in diagnostics.\n+\n 2017-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/65542"}, {"sha": "87bf069ffb65fd71dbdce8d6c89b3de671fad9fc", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -2277,7 +2277,7 @@ gfc_conv_substring (gfc_se * se, gfc_ref * ref, int kind,\n \tmsg = xasprintf (\"Substring out of bounds: lower bound (%%ld) of '%s' \"\n \t\t\t \"is less than one\", name);\n       else\n-\tmsg = xasprintf (\"Substring out of bounds: lower bound (%%ld)\"\n+\tmsg = xasprintf (\"Substring out of bounds: lower bound (%%ld) \"\n \t\t\t \"is less than one\");\n       gfc_trans_runtime_check (true, false, fault, &se->pre, where, msg,\n \t\t\t       fold_convert (long_integer_type_node,"}, {"sha": "4843f8a2f8ef450827d823e036f1d715e67ffd93", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -2052,7 +2052,7 @@ inline_small_functions (void)\n       if (dump_file)\n \t{\n \t  fprintf (dump_file,\n-\t\t   \" Inlined into %s which now has time %i and size %i,\"\n+\t\t   \" Inlined into %s which now has time %i and size %i, \"\n \t\t   \"net change of %+i.\\n\",\n \t\t   edge->caller->name (),\n \t\t   inline_summaries->get (edge->caller)->time,"}, {"sha": "585ca841aee38891ac7861bbb157465040cc40e4", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -2848,7 +2848,7 @@ process_alt_operands (int only_alternative)\n \t      if (lra_dump_file != NULL)\n \t\tfprintf\n \t\t  (lra_dump_file,\n-\t\t   \"            %d Matched conflict early clobber reloads:\"\n+\t\t   \"            %d Matched conflict early clobber reloads: \"\n \t\t   \"reject--\\n\",\n \t\t   i);\n \t      reject--;"}, {"sha": "a7b6f60aeafbc1348770650fabaa116e5f396dd2", "filename": "gcc/omp-grid.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fomp-grid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Fomp-grid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-grid.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -232,7 +232,7 @@ grid_find_single_omp_among_assignments (gimple_seq seq, grid_prop *grid,\n       if (!ret && dump_enabled_p ())\n \tdump_printf_loc (MSG_MISSED_OPTIMIZATION, grid->target_loc,\n \t\t\t GRID_MISSED_MSG_PREFIX \"%s construct does not contain\"\n-\t\t\t \"any other OpenMP construct\\n\", name);\n+\t\t\t \" any other OpenMP construct\\n\", name);\n       return ret;\n     }\n   else\n@@ -309,7 +309,7 @@ grid_parallel_clauses_gridifiable (gomp_parallel *par, location_t tloc)\n \t  if (dump_enabled_p ())\n \t    {\n \t      dump_printf_loc (MSG_MISSED_OPTIMIZATION, tloc,\n-\t\t\t       GRID_MISSED_MSG_PREFIX \"a reduction clause\"\n+\t\t\t       GRID_MISSED_MSG_PREFIX \"a reduction clause \"\n \t\t\t       \"is present\\n \");\n \t      dump_printf_loc (MSG_NOTE, gimple_location (par),\n \t\t\t       \"Parallel construct has a reduction clause\\n\");"}, {"sha": "9f559722c39b1a2cc60c34ff9dbd0717bda6949a", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -620,7 +620,7 @@ diagnose_tm_1_op (tree *tp, int *walk_subtrees, void *data)\n \t\t  \"invalid use of volatile lvalue inside transaction\");\n       else if (d->func_flags & DIAG_TM_SAFE)\n \terror_at (gimple_location (d->stmt),\n-\t\t  \"invalid use of volatile lvalue inside %<transaction_safe%>\"\n+\t\t  \"invalid use of volatile lvalue inside %<transaction_safe%> \"\n \t\t  \"function\");\n     }\n "}, {"sha": "0ce6c155bd32d9228985028e72720bc17a4a6f28", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -242,7 +242,7 @@ insert_partition_copy_on_edge (edge e, int dest, int src, source_location locus)\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file,\n-\t       \"Inserting a partition copy on edge BB%d->BB%d :\"\n+\t       \"Inserting a partition copy on edge BB%d->BB%d : \"\n \t       \"PART.%d = PART.%d\",\n \t       e->src->index,\n \t       e->dest->index, dest, src);"}, {"sha": "7953228944312134469c0b5017983d0b600eedb8", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -3684,7 +3684,7 @@ visit_reference_op_store (tree lhs, tree op, gimple *stmt)\n \t number of the vuse it came from.  */\n \n       if (dump_file && (dump_flags & TDF_DETAILS))\n-\tfprintf (dump_file, \"Store matched earlier value,\"\n+\tfprintf (dump_file, \"Store matched earlier value, \"\n \t\t \"value numbering store vdefs to matching vuses.\\n\");\n \n       changed |= set_ssa_val_to (vdef, SSA_VAL (vuse));"}, {"sha": "390d5bba2fd8e2acfe452275edf5212d9eeee04c", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=aa326bfb90c7ad2bf16b9582dac7e3de102ca6c5", "patch": "@@ -2564,7 +2564,7 @@ rewrite_constraints (constraint_graph_t graph,\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {\n \n-\t      fprintf (dump_file, \"%s is a non-pointer variable,\"\n+\t      fprintf (dump_file, \"%s is a non-pointer variable, \"\n \t\t       \"ignoring constraint:\",\n \t\t       get_varinfo (lhs.var)->name);\n \t      dump_constraint (dump_file, c);\n@@ -2579,7 +2579,7 @@ rewrite_constraints (constraint_graph_t graph,\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    {\n \n-\t      fprintf (dump_file, \"%s is a non-pointer variable,\"\n+\t      fprintf (dump_file, \"%s is a non-pointer variable, \"\n \t\t       \"ignoring constraint:\",\n \t\t       get_varinfo (rhs.var)->name);\n \t      dump_constraint (dump_file, c);\n@@ -3295,7 +3295,7 @@ get_constraint_for_component_ref (tree t, vec<ce_s> *results,\n       else if (bitmaxsize == 0)\n \t{\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n-\t    fprintf (dump_file, \"Access to zero-sized part of variable,\"\n+\t    fprintf (dump_file, \"Access to zero-sized part of variable, \"\n \t\t     \"ignoring\\n\");\n \t}\n       else"}]}