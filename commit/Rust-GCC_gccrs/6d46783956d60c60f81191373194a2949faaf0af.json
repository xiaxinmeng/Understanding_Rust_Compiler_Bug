{"sha": "6d46783956d60c60f81191373194a2949faaf0af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ0Njc4Mzk1NmQ2MGM2MGY4MTE5MTM3MzE5NGEyOTQ5ZmFhZjBhZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2007-08-26T18:24:19Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2007-08-26T18:24:19Z"}, "message": "re PR middle-end/33181 (Revision 127766 generates bad cmov)\n\ngcc/\n\n2007-08-26  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/33181\n\t* ifcvt.c (noce_get_alt_condition): Make sure that the previous\n\tnon NOTE insn doesn't cross basic block.\n\t(noce_try_abs): Likewise.\n\t(noce_process_if_block): Likewise.\n\ngcc/testsuite/\n\n2007-08-26  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/33181\n\t* gcc.dg/ifelse-2.c: New.\n\nFrom-SVN: r127810", "tree": {"sha": "e608cbb4dca3385e3627ee2e91f2ecdf14351056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e608cbb4dca3385e3627ee2e91f2ecdf14351056"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d46783956d60c60f81191373194a2949faaf0af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d46783956d60c60f81191373194a2949faaf0af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d46783956d60c60f81191373194a2949faaf0af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d46783956d60c60f81191373194a2949faaf0af/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "75be5dc0a1ae68106d1a047d0c0c8fada4bfec8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75be5dc0a1ae68106d1a047d0c0c8fada4bfec8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75be5dc0a1ae68106d1a047d0c0c8fada4bfec8c"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "0c659f545cda08109170a86a8be1607b4b2dc8cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d46783956d60c60f81191373194a2949faaf0af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d46783956d60c60f81191373194a2949faaf0af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d46783956d60c60f81191373194a2949faaf0af", "patch": "@@ -1,3 +1,11 @@\n+2007-08-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/33181\n+\t* ifcvt.c (noce_get_alt_condition): Make sure that the previous\n+\tnon NOTE insn doesn't cross basic block.\n+\t(noce_try_abs): Likewise.\n+\t(noce_process_if_block): Likewise.\n+\n 2007-08-26  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR target/33151"}, {"sha": "644a5e1c6ed47af3ecc2f216821375a8bb49fe00", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d46783956d60c60f81191373194a2949faaf0af/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d46783956d60c60f81191373194a2949faaf0af/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=6d46783956d60c60f81191373194a2949faaf0af", "patch": "@@ -1534,6 +1534,7 @@ noce_get_alt_condition (struct noce_if_info *if_info, rtx target,\n       /* First, look to see if we put a constant in a register.  */\n       prev_insn = prev_nonnote_insn (if_info->cond_earliest);\n       if (prev_insn\n+\t  && BLOCK_NUM (prev_insn) == BLOCK_NUM (if_info->cond_earliest)\n \t  && INSN_P (prev_insn)\n \t  && GET_CODE (PATTERN (prev_insn)) == SET)\n \t{\n@@ -1772,6 +1773,7 @@ noce_try_abs (struct noce_if_info *if_info)\n     {\n       rtx set, insn = prev_nonnote_insn (earliest);\n       if (insn\n+\t  && BLOCK_NUM (insn) == BLOCK_NUM (earliest)\n \t  && (set = single_set (insn))\n \t  && rtx_equal_p (SET_DEST (set), c))\n \t{\n@@ -2198,6 +2200,7 @@ noce_process_if_block (struct noce_if_info *if_info)\n \t COND_EARLIEST to JUMP.  Make sure the relevant data is still\n \t intact.  */\n       if (! insn_b\n+\t  || BLOCK_NUM (insn_b) != BLOCK_NUM (if_info->cond_earliest)\n \t  || !NONJUMP_INSN_P (insn_b)\n \t  || (set_b = single_set (insn_b)) == NULL_RTX\n \t  || ! rtx_equal_p (x, SET_DEST (set_b))"}, {"sha": "ae2f57b62cc96eedbd264fb252a2a96616e1c2d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d46783956d60c60f81191373194a2949faaf0af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d46783956d60c60f81191373194a2949faaf0af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d46783956d60c60f81191373194a2949faaf0af", "patch": "@@ -1,3 +1,8 @@\n+2007-08-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/33181\n+\t* gcc.dg/ifelse-2.c: New.\n+\n 2007-08-26  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/32980"}, {"sha": "0210fcfa4b6c52530e8486cd0984567a1ae6be07", "filename": "gcc/testsuite/gcc.dg/ifelse-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d46783956d60c60f81191373194a2949faaf0af/gcc%2Ftestsuite%2Fgcc.dg%2Fifelse-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d46783956d60c60f81191373194a2949faaf0af/gcc%2Ftestsuite%2Fgcc.dg%2Fifelse-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fifelse-2.c?ref=6d46783956d60c60f81191373194a2949faaf0af", "patch": "@@ -0,0 +1,34 @@\n+/*\n+{ dg-do run }\n+{ dg-options \"-O2\" }\n+*/\n+\n+extern void abort (void);\n+\n+enum Status\n+{\n+  P_ON_LOWER = -4,\n+  P_ON_UPPER = -2,\n+  P_FREE = -1\n+};\n+\n+void\n+foo (enum Status *stat, double newUpper, double lower, double max)\n+{\n+  if (newUpper >= max)\n+    *stat = P_FREE;\n+  else if (newUpper == lower)\n+    *stat = P_ON_LOWER;\n+}\n+\n+int\n+main ()\n+{\n+  enum Status stat = P_ON_UPPER;\n+\n+  foo (&stat, 5.0, -10.0, 10.0);\n+\n+  if (stat != P_ON_UPPER)\n+    abort ();\n+  return 0;\n+}"}]}