{"sha": "d75e02d6431bdc368eeff1d96212279a8ca30886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc1ZTAyZDY0MzFiZGMzNjhlZWZmMWQ5NjIxMjI3OWE4Y2EzMDg4Ng==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2005-08-10T17:53:01Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2005-08-10T17:53:01Z"}, "message": "config.gcc (i[34567]86-*-linux*): Add i386/t-crtfm to tm-file.\n\n2005-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config.gcc (i[34567]86-*-linux*): Add i386/t-crtfm to tm-file.\n\t(x86_64-*-linux*): Likewise.\n\n\t* config/i386/crtfastmath.c: New file.\n\t* config/i386/t-crtfm: Likewise.\n\n\t* config/i386/linux.h (ENDFILE_SPEC): New.\n\t* config/i386/linux64.h (ENDFILE_SPEC): Likewise.\n\n\t* config/i386/t-linux64 (EXTRA_MULTILIB_PARTS): Add\n\tcrtfastmath.o.\n\nFrom-SVN: r102954", "tree": {"sha": "bc5fff1f53e3cfe22ef306e0d84c9217534d0dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc5fff1f53e3cfe22ef306e0d84c9217534d0dbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d75e02d6431bdc368eeff1d96212279a8ca30886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d75e02d6431bdc368eeff1d96212279a8ca30886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d75e02d6431bdc368eeff1d96212279a8ca30886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d75e02d6431bdc368eeff1d96212279a8ca30886/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "863c5508d3b6531c7ab0f3380e059be02e61f4db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/863c5508d3b6531c7ab0f3380e059be02e61f4db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/863c5508d3b6531c7ab0f3380e059be02e61f4db"}], "stats": {"total": 111, "additions": 108, "deletions": 3}, "files": [{"sha": "4de14deb6518d49665344dcf71797c24ee723c27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d75e02d6431bdc368eeff1d96212279a8ca30886", "patch": "@@ -1,3 +1,17 @@\n+2005-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config.gcc (i[34567]86-*-linux*): Add i386/t-crtfm to tm-file.\n+\t(x86_64-*-linux*): Likewise.\n+\n+\t* config/i386/crtfastmath.c: New file.\n+\t* config/i386/t-crtfm: Likewise.\n+\n+\t* config/i386/linux.h (ENDFILE_SPEC): New.\n+\t* config/i386/linux64.h (ENDFILE_SPEC): Likewise.\n+\n+\t* config/i386/t-linux64 (EXTRA_MULTILIB_PARTS): Add\n+\tcrtfastmath.o.\n+\n 2005-08-10  Dorit Nuzman  <dorit@il.ibm.com>\n \n \t* doc/md.texi: (reduc_smin, reduc_umin, reduc_splus, reduc_uplus):"}, {"sha": "f4f045ebce17c9f619186fd259e0da91425a8408", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d75e02d6431bdc368eeff1d96212279a8ca30886", "patch": "@@ -1019,7 +1019,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu)\n \ti[34567]86-*-knetbsd*-gnu) tm_file=\"${tm_file} knetbsd-gnu.h i386/knetbsd-gnu.h\" ;;\n \ti[34567]86-*-kfreebsd*-gnu) tm_file=\"${tm_file} kfreebsd-gnu.h i386/kfreebsd-gnu.h\" ;;\n \tesac\n-\ttmake_file=\"${tmake_file} i386/t-crtstuff\"\n+\ttmake_file=\"${tmake_file} i386/t-crtstuff i386/t-crtfm\"\n \t;;\n x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h linux.h \\\n@@ -1028,7 +1028,7 @@ x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n \tx86_64-*-kfreebsd*-gnu) tm_file=\"${tm_file} kfreebsd-gnu.h\" ;;\n \tx86_64-*-knetbsd*-gnu) tm_file=\"${tm_file} knetbsd-gnu.h\" ;;\n \tesac\n-\ttmake_file=\"${tmake_file} i386/t-linux64\"\n+\ttmake_file=\"${tmake_file} i386/t-linux64 i386/t-crtfm\"\n \t;;\n i[34567]86-*-gnu*)\n \t;;"}, {"sha": "3412d6ceda6e943cd7e95063a5c2efd1ebf2d463", "filename": "gcc/config/i386/crtfastmath.c", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Fcrtfastmath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Fcrtfastmath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcrtfastmath.c?ref=d75e02d6431bdc368eeff1d96212279a8ca30886", "patch": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright (C) 2005 Free Software Foundation, Inc.\n+ *\n+ * This file is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License as published by the\n+ * Free Software Foundation; either version 2, or (at your option) any\n+ * later version.\n+ * \n+ * In addition to the permissions in the GNU General Public License, the\n+ * Free Software Foundation gives you unlimited permission to link the\n+ * compiled version of this file with other programs, and to distribute\n+ * those programs without any restriction coming from the use of this\n+ * file.  (The General Public License restrictions do apply in other\n+ * respects; for example, they cover modification of the file, and\n+ * distribution when not linked into another program.)\n+ * \n+ * This file is distributed in the hope that it will be useful, but\n+ * WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * General Public License for more details.\n+ * \n+ * You should have received a copy of the GNU General Public License\n+ * along with this program; see the file COPYING.  If not, write to\n+ * the Free Software Foundation, 59 Temple Place - Suite 330,\n+ * Boston, MA 02111-1307, USA.\n+ * \n+ *    As a special exception, if you link this library with files\n+ *    compiled with GCC to produce an executable, this does not cause\n+ *    the resulting executable to be covered by the GNU General Public License.\n+ *    This exception does not however invalidate any other reasons why\n+ *    the executable file might be covered by the GNU General Public License.\n+ */\n+\n+#define MXCSR_DAZ (1 << 6)\t/* Enable denormals are zero mode */\n+#define MXCSR_FTZ (1 << 15)\t/* Enable flush to zero mode */\n+\n+static void __attribute__((constructor))\n+set_fast_math (void)\n+{\n+#ifndef __x86_64__\n+  /* SSE is the part of 64bit. Only need to check it for 32bit.  */\n+  unsigned int eax, ebx, ecx, edx;\n+\n+  /* See if we can use cpuid.  */\n+  asm volatile (\"pushfl; pushfl; popl %0; movl %0,%1; xorl %2,%0;\"\n+\t\t\"pushl %0; popfl; pushfl; popl %0; popfl\"\n+\t\t: \"=&r\" (eax), \"=&r\" (ebx)\n+\t\t: \"i\" (0x00200000));\n+\n+  if (((eax ^ ebx) & 0x00200000) == 0)\n+    return;\n+\n+  /* Check the highest input value for eax.  */\n+  asm volatile (\"xchgl %%ebx, %1; cpuid; xchgl %%ebx, %1\"\n+\t\t: \"=a\" (eax), \"=r\" (ebx), \"=c\" (ecx), \"=d\" (edx)\n+\t\t: \"0\" (0));\n+\n+  if (eax == 0)\n+    return;\n+\n+  asm volatile (\"xchgl %%ebx, %1; cpuid; xchgl %%ebx, %1\"\n+\t\t: \"=a\" (eax), \"=r\" (ebx), \"=c\" (ecx), \"=d\" (edx)\n+\t\t: \"0\" (1));\n+\n+  if (edx & (1 << 25))\n+#endif\n+    {\n+      unsigned int mxcsr = __builtin_ia32_stmxcsr ();\n+      mxcsr |= MXCSR_DAZ | MXCSR_FTZ;\n+      __builtin_ia32_ldmxcsr (mxcsr);\n+    }\n+}"}, {"sha": "f85a9ef6cbb1d6e30c324150034073f73921beb8", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=d75e02d6431bdc368eeff1d96212279a8ca30886", "patch": "@@ -121,6 +121,12 @@ Boston, MA 02110-1301, USA.  */\n \t%{!dynamic-linker:-dynamic-linker %(dynamic_linker)}} \\\n \t%{static:-static}}}\"\n \n+/* Similar to standard Linux, but adding -ffast-math support.  */\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC \\\n+  \"%{ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n+   %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n+\n /* A C statement (sans semicolon) to output to the stdio stream\n    FILE the assembler definition of uninitialized global DECL named\n    NAME whose size is SIZE bytes and alignment is ALIGN bytes."}, {"sha": "d3ab452db324bae2efe858cb89eac84dd6d9cc99", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=d75e02d6431bdc368eeff1d96212279a8ca30886", "patch": "@@ -64,6 +64,12 @@ Boston, MA 02110-1301, USA.  */\n       %{!m32:%{!dynamic-linker:-dynamic-linker /lib64/ld-linux-x86-64.so.2}}} \\\n     %{static:-static}}\"\n \n+/* Similar to standard Linux, but adding -ffast-math support.  */\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC \\\n+  \"%{ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n+   %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n+\n #define MULTILIB_DEFAULTS { \"m64\" }\n \n #undef NEED_INDICATE_EXEC_STACK"}, {"sha": "fc4b58784cad339b8f138e35b7975d86e7e8e066", "filename": "gcc/config/i386/t-crtfm", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Ft-crtfm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Ft-crtfm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-crtfm?ref=d75e02d6431bdc368eeff1d96212279a8ca30886", "patch": "@@ -0,0 +1,6 @@\n+EXTRA_PARTS += crtfastmath.o\n+\n+$(T)crtfastmath.o: $(srcdir)/config/i386/crtfastmath.c $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -msse -c \\\n+\t\t$(srcdir)/config/i386/crtfastmath.c \\\n+\t\t-o $(T)crtfastmath$(objext)"}, {"sha": "aac59a08e36840fa0609a419e24f097520127a1b", "filename": "gcc/config/i386/t-linux64", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d75e02d6431bdc368eeff1d96212279a8ca30886/gcc%2Fconfig%2Fi386%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-linux64?ref=d75e02d6431bdc368eeff1d96212279a8ca30886", "patch": "@@ -11,7 +11,8 @@ MULTILIB_OSDIRNAMES = ../lib64 ../lib\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n-EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\n+EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o \\\n+\t\t     crtbeginT.o crtfastmath.o\n \n # The pushl in CTOR initialization interferes with frame pointer elimination.\n # crtend*.o cannot be compiled without -fno-asynchronous-unwind-tables,"}]}