{"sha": "64af12fd4e845b6ba1efc84f6b68c5af8f287d6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRhZjEyZmQ0ZTg0NWI2YmExZWZjODRmNmI2OGM1YWY4ZjI4N2Q2Yw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-07T21:08:20Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-07T21:08:20Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1181", "tree": {"sha": "6cf200b78386423b5855cb52cd2d4449c2ce5dc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cf200b78386423b5855cb52cd2d4449c2ce5dc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64af12fd4e845b6ba1efc84f6b68c5af8f287d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64af12fd4e845b6ba1efc84f6b68c5af8f287d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64af12fd4e845b6ba1efc84f6b68c5af8f287d6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64af12fd4e845b6ba1efc84f6b68c5af8f287d6c/comments", "author": null, "committer": null, "parents": [{"sha": "c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "6af7a9132f75e113fa5f8cb60d352a115214078a", "filename": "gcc/reorg.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64af12fd4e845b6ba1efc84f6b68c5af8f287d6c/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64af12fd4e845b6ba1efc84f6b68c5af8f287d6c/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=64af12fd4e845b6ba1efc84f6b68c5af8f287d6c", "patch": "@@ -3510,8 +3510,8 @@ dbr_schedule (first, file)\n      function.  The condition code never is and memory always is.  If the\n      frame pointer is needed, it is and so is the stack pointer unless\n      EXIT_IGNORE_STACK is non-zero.  If the frame pointer is not needed, the\n-     stack pointer is.  In addition, registers used to return the function\n-     value are needed.  */\n+     stack pointer is.  Registers used to return the function value are\n+     needed.  Registers holding global variables are needed.  */\n \n   end_of_function_needs.cc = 0;\n   end_of_function_needs.memory = 1;\n@@ -3533,6 +3533,10 @@ dbr_schedule (first, file)\n     mark_referenced_resources (current_function_return_rtx,\n \t\t\t       &end_of_function_needs, 0);\n \n+  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n+    if (global_regs[i])\n+      SET_HARD_REG_BIT (end_of_function_needs.regs, i);\n+\n   /* Show we haven't computed an end-of-function label yet.  */\n   end_of_function_label = 0;\n "}]}