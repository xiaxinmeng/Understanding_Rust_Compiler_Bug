{"sha": "8fb3f5dff914cbff3d5c05af08cf5690436533c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZiM2Y1ZGZmOTE0Y2JmZjNkNWMwNWFmMDhjZjU2OTA0MzY1MzNjMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T12:22:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T12:22:53Z"}, "message": "[multiple changes]\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* make.adb: Remove debug trace.\n\n2011-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* makeutl.adb (Do_Complete): Get the absolute path name of a relative\n\tpath in canonical form, to be able to compare path names on platforms\n\tsuch as Windows or Darwin.\n\n2011-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* par_sco.adb (Traverse_Declarations_Or_Statements.Set_Statement_Entry):\n\tFor a pragma (statement with C1 = 'P'), record the sloc of the pragma.\n\t* scos.ads: Update documentation accordingly.\n\t* put_scos.adb (Output_SCO_Line): Omit statement SCOs for disabled\n\tpragmas.\n\nFrom-SVN: r177369", "tree": {"sha": "0cfbb8f59922a461f56c82052ecb8d3fa97d3fa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cfbb8f59922a461f56c82052ecb8d3fa97d3fa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fb3f5dff914cbff3d5c05af08cf5690436533c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fb3f5dff914cbff3d5c05af08cf5690436533c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fb3f5dff914cbff3d5c05af08cf5690436533c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fb3f5dff914cbff3d5c05af08cf5690436533c2/comments", "author": null, "committer": null, "parents": [{"sha": "428f80e65119aca0c7c03d5382d684dfdeaa7ac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428f80e65119aca0c7c03d5382d684dfdeaa7ac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428f80e65119aca0c7c03d5382d684dfdeaa7ac7"}], "stats": {"total": 95, "additions": 69, "deletions": 26}, "files": [{"sha": "1214985df52c3867eb279dc7156dec9864974898", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8fb3f5dff914cbff3d5c05af08cf5690436533c2", "patch": "@@ -1,3 +1,21 @@\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* make.adb: Remove debug trace.\n+\n+2011-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* makeutl.adb (Do_Complete): Get the absolute path name of a relative\n+\tpath in canonical form, to be able to compare path names on platforms\n+\tsuch as Windows or Darwin.\n+\n+2011-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* par_sco.adb (Traverse_Declarations_Or_Statements.Set_Statement_Entry):\n+\tFor a pragma (statement with C1 = 'P'), record the sloc of the pragma.\n+\t* scos.ads: Update documentation accordingly.\n+\t* put_scos.adb (Output_SCO_Line): Omit statement SCOs for disabled\n+\tpragmas.\n+\n 2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_attr.adb (Bad_Attribute_For_Predicate): flag illegal use of"}, {"sha": "b987462936dc6943247381ef3f3d10d7d4863a3f", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=8fb3f5dff914cbff3d5c05af08cf5690436533c2", "patch": "@@ -5695,9 +5695,6 @@ package body Make is\n                Info := Mains.Next_Main;\n                exit when Info = No_Main_Info;\n \n-               Debug_Output (\"MANU Got main: \", Name_Id (Info.File));\n-               Debug_Output (\"MANU    in project: \", Info.Project.Name);\n-\n                Proj := Ultimate_Extending_Project_Of (Info.Project);\n \n                if Real_Main_Project = No_Project then"}, {"sha": "242df5e1497aeec3fe251adb569f99b4a83e9d79", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=8fb3f5dff914cbff3d5c05af08cf5690436533c2", "patch": "@@ -1452,7 +1452,8 @@ package body Makeutl is\n                                            Normalize_Pathname\n                                              (Name           => Main,\n                                               Directory      => \"\",\n-                                              Resolve_Links  => False);\n+                                              Resolve_Links  => False,\n+                                              Case_Sensitive => False);\n                            begin\n                               File.File := Create_Name (Absolute);\n                               Main_Id := Create_Name (Base);"}, {"sha": "2feec9c4471ec4dc31b75650ea91cc6d3b89be50", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=8fb3f5dff914cbff3d5c05af08cf5690436533c2", "patch": "@@ -765,7 +765,10 @@ package body Par_SCO is\n \n       Index := Condition_Pragma_Hash_Table.Get (Loc);\n \n-      --  The test here for zero is to deal with possible previous errors\n+      --  The test here for zero is to deal with possible previous errors, and\n+      --  for the case of pragma statement SCOs, for which we always set the\n+      --  Pragma_Sloc even if the particular pragma cannot be specifically\n+      --  disabled.\n \n       if Index /= 0 then\n          pragma Assert (SCO_Table.Table (Index).C1 = 'P');\n@@ -1071,14 +1074,23 @@ package body Par_SCO is\n             end if;\n \n             declare\n-               SCE : SC_Entry renames SC.Table (J);\n+               SCE         : SC_Entry renames SC.Table (J);\n+               Pragma_Sloc : Source_Ptr := No_Location;\n             begin\n+               --  For the statement SCO for a pragma, set Pragma_Sloc so that\n+               --  the SCO can be omitted if the pragma is disabled.\n+\n+               if SCE.Typ = 'P' then\n+                  Pragma_Sloc := SCE.From;\n+               end if;\n+\n                Set_Table_Entry\n-                 (C1   => C1,\n-                  C2   => SCE.Typ,\n-                  From => SCE.From,\n-                  To   => SCE.To,\n-                  Last => (J = SC_Last));\n+                 (C1          => C1,\n+                  C2          => SCE.Typ,\n+                  From        => SCE.From,\n+                  To          => SCE.To,\n+                  Last        => (J = SC_Last),\n+                  Pragma_Sloc => Pragma_Sloc);\n             end;\n          end loop;\n "}, {"sha": "a1ee86ebf4f6fc417664a9e1a6e1d54971ea6a5d", "filename": "gcc/ada/put_scos.adb", "status": "modified", "additions": 27, "deletions": 13, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fput_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fput_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_scos.adb?ref=8fb3f5dff914cbff3d5c05af08cf5690436533c2", "patch": "@@ -95,42 +95,56 @@ begin\n             pragma Assert (Start <= Stop);\n \n             Output_SCO_Line : declare\n-               T : SCO_Table_Entry renames SCO_Table.Table (Start);\n+               T            : SCO_Table_Entry renames SCO_Table.Table (Start);\n+               Continuation : Boolean;\n \n             begin\n                case T.C1 is\n \n                   --  Statements\n \n                   when 'S' =>\n-                     Write_Info_Initiate ('C');\n-                     Write_Info_Char ('S');\n-\n                      Ctr := 0;\n+                     Continuation := False;\n                      loop\n+                        if SCO_Table.Table (Start).C2 = 'P'\n+                             and then SCO_Pragma_Disabled\n+                                        (SCO_Table.Table (Start).Pragma_Sloc)\n+                        then\n+                           goto Next_Statement;\n+                        end if;\n+\n+                        if Ctr = 0 then\n+                           Write_Info_Initiate ('C');\n+                           if not Continuation then\n+                              Write_Info_Char ('S');\n+                              Continuation := True;\n+                           else\n+                              Write_Info_Char ('s');\n+                           end if;\n+                        end if;\n+\n                         Write_Info_Char (' ');\n \n                         if SCO_Table.Table (Start).C2 /= ' ' then\n                            Write_Info_Char (SCO_Table.Table (Start).C2);\n                         end if;\n \n                         Output_Range (SCO_Table.Table (Start));\n-                        exit when SCO_Table.Table (Start).Last;\n \n-                        Start := Start + 1;\n-                        pragma Assert (SCO_Table.Table (Start).C1 = 's');\n+                        --  Increment entry counter (up to 6 entries per line,\n+                        --  continuation lines are marked Cs).\n \n                         Ctr := Ctr + 1;\n-\n-                        --  Up to 6 items on a line, if more than 6 items,\n-                        --  continuation lines are marked Cs.\n-\n                         if Ctr = 6 then\n                            Write_Info_Terminate;\n-                           Write_Info_Initiate ('C');\n-                           Write_Info_Char ('s');\n                            Ctr := 0;\n                         end if;\n+\n+                     <<Next_Statement>>\n+                        exit when SCO_Table.Table (Start).Last;\n+                        Start := Start + 1;\n+                        pragma Assert (SCO_Table.Table (Start).C1 = 's');\n                      end loop;\n \n                      Write_Info_Terminate;"}, {"sha": "8799fbcc2db15967c65575c364c47cf3ca924f81", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fb3f5dff914cbff3d5c05af08cf5690436533c2/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=8fb3f5dff914cbff3d5c05af08cf5690436533c2", "patch": "@@ -355,8 +355,9 @@ package SCOs is\n       Last : Boolean;\n \n       Pragma_Sloc : Source_Ptr := No_Location;\n-      --  For a SCO nested with a pragma Debug/Assert/PPC, location of pragma\n-      --  (used for control of SCO output, value not recorded in ALI file).\n+      --  For the statement SCO for a pragma, or for any expression SCO nested\n+      --  in a pragma Debug/Assert/PPC, location of PRAGMA token (used for\n+      --  control of SCO output, value not recorded in ALI file).\n    end record;\n \n    package SCO_Table is new GNAT.Table ("}]}