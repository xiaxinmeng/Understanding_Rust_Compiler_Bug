{"sha": "27128fc317039e1e62de5e70a236ec7c4eaf111e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcxMjhmYzMxNzAzOWUxZTYyZGU1ZTcwYTIzNmVjN2M0ZWFmMTExZQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2010-11-16T09:40:02Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2010-11-16T09:40:02Z"}, "message": "rx.c (rx_is_ms_bitfield_layout): Return false if the record is packed.\n\n\t* config/rx/rx.c (rx_is_ms_bitfield_layout): Return false if the\n\trecord is packed.\n\n\t* gcc.target/rx/pack.c: New test.\n\nFrom-SVN: r166793", "tree": {"sha": "d85bdb0adb88ca280445194874b38855fb59a9c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d85bdb0adb88ca280445194874b38855fb59a9c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27128fc317039e1e62de5e70a236ec7c4eaf111e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27128fc317039e1e62de5e70a236ec7c4eaf111e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27128fc317039e1e62de5e70a236ec7c4eaf111e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27128fc317039e1e62de5e70a236ec7c4eaf111e/comments", "author": null, "committer": null, "parents": [{"sha": "180ed1b2bd57ce7f8d537db11242c18703121c78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/180ed1b2bd57ce7f8d537db11242c18703121c78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/180ed1b2bd57ce7f8d537db11242c18703121c78"}], "stats": {"total": 61, "additions": 48, "deletions": 13}, "files": [{"sha": "f55283ec6bd3f859e45ce4696640c00f05035a83", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27128fc317039e1e62de5e70a236ec7c4eaf111e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27128fc317039e1e62de5e70a236ec7c4eaf111e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27128fc317039e1e62de5e70a236ec7c4eaf111e", "patch": "@@ -1,3 +1,8 @@\n+2010-11-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/rx/rx.c (rx_is_ms_bitfield_layout): Return false if the\n+\trecord is packed.\n+\n 2010-11-15  Richard Henderson  <rth@redhat.com>\n \n \t* fold-const.c (operand_equal_for_comparison_p): Handle FMA_EXPR,"}, {"sha": "771d6456a031cc16f62da3f863116f935fa1064a", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27128fc317039e1e62de5e70a236ec7c4eaf111e/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27128fc317039e1e62de5e70a236ec7c4eaf111e/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=27128fc317039e1e62de5e70a236ec7c4eaf111e", "patch": "@@ -2306,7 +2306,8 @@ rx_file_start (void)\n static bool\n rx_is_ms_bitfield_layout (const_tree record_type ATTRIBUTE_UNUSED)\n {\n-  return TRUE;\n+  /* The packed attribute overrides the MS behaviour.  */\n+  return ! TYPE_PACKED (record_type);\n }\n \n /* Try to generate code for the \"isnv\" pattern which inserts bits"}, {"sha": "ee1bcceb8e46e3a83c434a23da0b3a6689dc08f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27128fc317039e1e62de5e70a236ec7c4eaf111e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27128fc317039e1e62de5e70a236ec7c4eaf111e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27128fc317039e1e62de5e70a236ec7c4eaf111e", "patch": "@@ -1,3 +1,7 @@\n+2010-11-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* gcc.target/rx/pack.c: New test.\n+\n 2010-11-15  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/torture/builtin-math-2.c: Split out fma tests...\n@@ -90,16 +94,16 @@\n \n \t* objc.dg/property/at-property-21.m: New.\n \t* objc.dg/property/at-property-22.m: New.\n-\t* objc.dg/property/at-property-23.m: New.\t\n+\t* objc.dg/property/at-property-23.m: New.\n \t* objc.dg/property/synthesize-9.m: New.\n \t* objc.dg/property/synthesize-10.m: New.\n-\t* objc.dg/property/synthesize-11.m: New.\t\n+\t* objc.dg/property/synthesize-11.m: New.\n \t* obj-c++.dg/property/at-property-21.mm: New.\n \t* obj-c++.dg/property/at-property-22.mm: New.\n-\t* obj-c++.dg/property/at-property-23.mm: New.\t\n+\t* obj-c++.dg/property/at-property-23.mm: New.\n \t* obj-c++.dg/property/synthesize-9.mm: New.\n \t* obj-c++.dg/property/synthesize-10.mm: New.\n-\t* obj-c++.dg/property/synthesize-11.mm: New.\t\n+\t* obj-c++.dg/property/synthesize-11.mm: New.\n \n \t* objc.dg/property/at-property-4.m: Updated to match new compiler\n \twhere some errors have been converted into warnings and vice versa.\n@@ -110,14 +114,14 @@\n \t* obj-c++.dg/property/at-property-16.mm: Same change.\n \t* obj-c++.dg/property/at-property-18.mm: Same change.\n \t* obj-c++.dg/property/property-neg-5.mm: Same change.\n-\t\n+\n \t* obj-c++.dg/property/dynamic-2.mm: Enable tests that were\n \tcommented out because of testsuite problems; I found out that\n \tusing dg-warning instead of dg-message gets them to work.\n \t* obj-c++.dg/property/property-neg-3.mm: Same change.\n \t* obj-c++.dg/property/synthesize-6.mm: Same change.\n-\t* obj-c++.dg/property/at-property-5.mm: Same change.\t\n-\t* obj-c++.dg/property/at-property-14.mm: Same change.\t\n+\t* obj-c++.dg/property/at-property-5.mm: Same change.\n+\t* obj-c++.dg/property/at-property-14.mm: Same change.\n \t* obj-c++.dg/property/at-property-18.mm: Same change.\n \t* obj-c++.dg/property/at-property-16.mm: Same change (in this file,\n \tsome tests still do not work due to some other testsuite issue).\n@@ -152,8 +156,8 @@\n \tTest various valid uses of typedef with Objective-C objects and\n \tprotocols instead.\n \t* objc.dg/invalid-type-1.m: New.\n-\t* obj-c++.dg/invalid-type-1.m: New.\t\n-\t\n+\t* obj-c++.dg/invalid-type-1.m: New.\n+\n 2010-11-13  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* gcc.dg/darwin-segaddr.c: New test for multiple argument c/l switch.\n@@ -263,7 +267,7 @@\n \t    Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/46325\n-\t* gfortran.dg/char_initialiser_actual.f90: Make test case valid. \n+\t* gfortran.dg/char_initialiser_actual.f90: Make test case valid.\n \n 2010-11-11  Jan Hubicka  <jh@suse.cz>\n \n@@ -328,10 +332,10 @@\n 2010-11-11  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/property/at-property-20.m: New.\n-\t* objc.dg/property/synthesize-8.m: New.\t\n+\t* objc.dg/property/synthesize-8.m: New.\n \t* obj-c++.dg/property/at-property-20.m: New.\n \t* obj-c++.dg/property/synthesize-8.mm: New.\n-\t\n+\n 2010-11-11  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/cpp/warn-normalized-3.c: Update expected note text."}, {"sha": "97c44f05d695279ed2deb67d70cdecda4d4b7016", "filename": "gcc/testsuite/gcc.target/rx/pack.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27128fc317039e1e62de5e70a236ec7c4eaf111e/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Fpack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27128fc317039e1e62de5e70a236ec7c4eaf111e/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Fpack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Fpack.c?ref=27128fc317039e1e62de5e70a236ec7c4eaf111e", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+\n+typedef unsigned short\tINT16U;\n+\n+typedef struct tst_2\n+{\n+  INT16U\tf0;\t// [+0]\n+  INT16U *\tf1;\t// [+2]\n+  INT16U\tf2;\t// [+6]\n+  INT16U *\tf3;\t// [+8]\n+} __attribute__ ((__packed__)) t2;\n+\n+#include <stddef.h>\n+#include <stdlib.h>\n+\n+int main (void)\n+{\n+  if (offsetof (t2, f1) != 2)\n+    abort ();\n+  if (offsetof (t2, f2) != 6)\n+    abort ();\n+  if (offsetof (t2, f3) != 8)\n+    abort ();\n+  exit (0);\n+}"}]}