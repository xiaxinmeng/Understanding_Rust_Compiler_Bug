{"sha": "be674bdd11d5fa6b20d469e6d6f43c26da9e744f", "node_id": "C_kwDOANBUbNoAKGJlNjc0YmRkMTFkNWZhNmIyMGQ0NjllNmQ2ZjQzYzI2ZGE5ZTc0NGY", "commit": {"author": {"name": "Lancelot SIX", "email": "lsix@lancelotsix.com", "date": "2021-12-30T16:36:52Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2021-12-30T16:36:52Z"}, "message": "libiberty: support digits in cpp mangled clone names\n\nCurrently libiberty fails to demangle the name of cloned functions if\nthe clone-type-identifier contains numbers.\n\nThis can be observed with the following example:\n\n    $ cat > ex.cc <<EOT\n    void foo (float *, float *)\n      __attribute__((target_clones(\"avx2,avx,sse4.1,default\")));\n\n    void foo (float *, float *) {}\n    EOT\n    $ gcc -c ex.cc\n    $ nm -C ex.o | grep foo\n    0000000000000000 i foo(float*, float*)\n    0000000000000026 t foo(float*, float*) [clone .avx.1]\n    0000000000000013 t _Z3fooPfS_.avx2.0\n    0000000000000000 t foo(float*, float*) [clone .default.3]\n    0000000000000000 W foo(float*, float*) [clone .resolver]\n    0000000000000039 t _Z3fooPfS_.sse4_1.2\n\nIn this example, gcc creates clones for the FOO function, each matching\none of the specified targets.  When inspecting the binary, nm (and other\nlibiberty-based tools, including gdb) fails to demangle the symbol names\nif the clone identifier contains numbers.\n\nForm my understanding of the mangling convention[1], clone names are\npart of vendor-specific suffixes and do not have rule preventing them\nfrom containing digits.\n\nThis commit proposes to fix the demangling.  With this commit (ported to\nbinutils), nm gives the following output:\n\n    $ nm-new -C ex.o | grep foo\n    0000000000000000 i foo(float*, float*)\n    0000000000000026 t foo(float*, float*) [clone .avx.1]\n    0000000000000013 t foo(float*, float*) [clone .avx2.0]\n    0000000000000000 t foo(float*, float*) [clone .default.3]\n    0000000000000000 W foo(float*, float*) [clone .resolver]\n    0000000000000039 t foo(float*, float*) [clone .sse4_1.2]\n\nTested on x86_86-linux with 'make check-libiberty'.\n\n[1] https://itanium-cxx-abi.github.io/cxx-abi/abi.html#mangling\n\nlibiberty/ChangeLog:\n\n\t* cp-demangle.c (d_clone_suffix): Support digits in clone tag\n\tnames.\n\t* testsuite/demangle-expected: Check demangling of clone symbols\n\twith digits in name.", "tree": {"sha": "277642578bf615918d0bf059157187721d18e48a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/277642578bf615918d0bf059157187721d18e48a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be674bdd11d5fa6b20d469e6d6f43c26da9e744f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be674bdd11d5fa6b20d469e6d6f43c26da9e744f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be674bdd11d5fa6b20d469e6d6f43c26da9e744f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be674bdd11d5fa6b20d469e6d6f43c26da9e744f/comments", "author": {"login": "lsix", "id": 724339, "node_id": "MDQ6VXNlcjcyNDMzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsix", "html_url": "https://github.com/lsix", "followers_url": "https://api.github.com/users/lsix/followers", "following_url": "https://api.github.com/users/lsix/following{/other_user}", "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsix/subscriptions", "organizations_url": "https://api.github.com/users/lsix/orgs", "repos_url": "https://api.github.com/users/lsix/repos", "events_url": "https://api.github.com/users/lsix/events{/privacy}", "received_events_url": "https://api.github.com/users/lsix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52441f18db7e051c16f2e6e12f415b93cb5450c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52441f18db7e051c16f2e6e12f415b93cb5450c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52441f18db7e051c16f2e6e12f415b93cb5450c4"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "fb576cb4c9748dba6d20b89fc51a5f3f3fdd667d", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be674bdd11d5fa6b20d469e6d6f43c26da9e744f/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be674bdd11d5fa6b20d469e6d6f43c26da9e744f/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=be674bdd11d5fa6b20d469e6d6f43c26da9e744f", "patch": "@@ -3884,10 +3884,11 @@ d_clone_suffix (struct d_info *di, struct demangle_component *encoding)\n   const char *pend = suffix;\n   struct demangle_component *n;\n \n-  if (*pend == '.' && (IS_LOWER (pend[1]) || pend[1] == '_'))\n+  if (*pend == '.' && (IS_LOWER (pend[1]) || IS_DIGIT (pend[1])\n+\t\t       || pend[1] == '_'))\n     {\n       pend += 2;\n-      while (IS_LOWER (*pend) || *pend == '_')\n+      while (IS_LOWER (*pend) || IS_DIGIT (*pend) || *pend == '_')\n \t++pend;\n     }\n   while (*pend == '.' && IS_DIGIT (pend[1]))"}, {"sha": "de54ad73cc8ee3d36f3b52b3bbdeeaf77d694852", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be674bdd11d5fa6b20d469e6d6f43c26da9e744f/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be674bdd11d5fa6b20d469e6d6f43c26da9e744f/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=be674bdd11d5fa6b20d469e6d6f43c26da9e744f", "patch": "@@ -1164,6 +1164,11 @@ foo(int) [clone ._omp_cpyfn.6]\n foo\n #\n --format=gnu-v3 --no-params\n+_Z3fooPfS_S_j.sse4_1.2\n+foo(float*, float*, float*, unsigned int) [clone .sse4_1.2]\n+foo\n+#\n+--format=gnu-v3 --no-params\n _Z1fIKFvvES0_Evv\n void f<void () const, void () const>()\n f<void () const, void () const>"}]}