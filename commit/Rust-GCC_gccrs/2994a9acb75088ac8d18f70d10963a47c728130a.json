{"sha": "2994a9acb75088ac8d18f70d10963a47c728130a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk5NGE5YWNiNzUwODhhYzhkMThmNzBkMTA5NjNhNDdjNzI4MTMwYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-16T14:33:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-01-16T14:33:52Z"}, "message": "(skip_quoted_string): If pedantic and not pedantic_errors,\n\nskipped multiline strings elicit a warning, not an error.\n(rescan): Minor code reorg to keep it parallel with skip_quoted_string.\n\nFrom-SVN: r11023", "tree": {"sha": "0eba7edff8f6718dbc70cd06543570cf533ab49d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eba7edff8f6718dbc70cd06543570cf533ab49d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2994a9acb75088ac8d18f70d10963a47c728130a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2994a9acb75088ac8d18f70d10963a47c728130a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2994a9acb75088ac8d18f70d10963a47c728130a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2994a9acb75088ac8d18f70d10963a47c728130a/comments", "author": null, "committer": null, "parents": [{"sha": "e28ea75bd149315cfa085edb86d76755f2a9209d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28ea75bd149315cfa085edb86d76755f2a9209d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e28ea75bd149315cfa085edb86d76755f2a9209d"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "1c7f425e865f4583cb4936051ba89179f2a2e724", "filename": "gcc/cccp.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2994a9acb75088ac8d18f70d10963a47c728130a/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2994a9acb75088ac8d18f70d10963a47c728130a/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=2994a9acb75088ac8d18f70d10963a47c728130a", "patch": "@@ -2876,12 +2876,12 @@ do { ip = &instack[indepth];\t\t\\\n \t\t\t     \"unterminated character constant\");\n \t    goto while2end;\n \t  }\n-\t  if (pedantic && multiline_string_line == 0) {\n-\t    pedwarn_with_line (line_for_error (start_line),\n-\t\t\t       \"string constant runs past end of line\");\n-\t  }\n-\t  if (multiline_string_line == 0)\n+\t  if (multiline_string_line == 0) {\n+\t    if (pedantic)\n+\t      pedwarn_with_line (line_for_error (start_line),\n+\t\t\t\t \"string constant runs past end of line\");\n \t    multiline_string_line = ip->lineno - 1;\n+\t  }\n \t  break;\n \n \tcase '\\\\':\n@@ -7708,7 +7708,7 @@ skip_quoted_string (bp, limit, start_line, count_newlines, backslash_newlines_p,\n  \t  *eofp = 1;\n  \tbreak;\n       }\n-      if (pedantic || match == '\\'') {\n+      if (match == '\\'') {\n \terror_with_line (line_for_error (start_line),\n \t\t\t \"unterminated string or character constant\");\n \tbp--;\n@@ -7719,8 +7719,12 @@ skip_quoted_string (bp, limit, start_line, count_newlines, backslash_newlines_p,\n       /* If not traditional, then allow newlines inside strings.  */\n       if (count_newlines)\n \t++*count_newlines;\n-      if (multiline_string_line == 0)\n+      if (multiline_string_line == 0) {\n+\tif (pedantic)\n+\t  pedwarn_with_line (line_for_error (start_line),\n+\t\t\t     \"string constant runs past end of line\");\n \tmultiline_string_line = start_line;\n+      }\n     } else if (c == match)\n       break;\n   }"}]}