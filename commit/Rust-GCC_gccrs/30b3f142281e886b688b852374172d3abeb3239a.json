{"sha": "30b3f142281e886b688b852374172d3abeb3239a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBiM2YxNDIyODFlODg2YjY4OGI4NTIzNzQxNzJkM2FiZWIzMjM5YQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-21T09:18:31Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-21T09:18:31Z"}, "message": "2003-03-21  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/Action.java\n\t(ACCELERATOR_KEY): New constant.\n\t(ACTION_COMMAND_KEY): Likewise.\n\t(MNEMONIC_KEY): Likewise.\n\t* javax/swing/UnsupportedLookAndFeelException.java\n\t(UnsupportedLookAndFeelException): Must be public.\n\t* javax/swing/WindowConstants.java\n\t(EXIT_ON_CLOSE): New constant.\n\t* javax/swing/text/BadLocationException.java\n\t(offset): New member variable.\n\t(BadLocationException): New implementation, documentation added.\n\t(offsetRequested): New method.\n\t* javax/swing/text/Caret.java:\n\tReformated.\n\t* javax/swing/text/Document.java:\n\tReformated.\n\nFrom-SVN: r64656", "tree": {"sha": "d95ec68bafbb0d8912496fa08e30ed162f0c53f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d95ec68bafbb0d8912496fa08e30ed162f0c53f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30b3f142281e886b688b852374172d3abeb3239a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30b3f142281e886b688b852374172d3abeb3239a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30b3f142281e886b688b852374172d3abeb3239a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30b3f142281e886b688b852374172d3abeb3239a/comments", "author": null, "committer": null, "parents": [{"sha": "15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a"}], "stats": {"total": 153, "additions": 115, "deletions": 38}, "files": [{"sha": "aa39a61822b4a43e24d702b76490b3e3df800a33", "filename": "libjava/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b3f142281e886b688b852374172d3abeb3239a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b3f142281e886b688b852374172d3abeb3239a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=30b3f142281e886b688b852374172d3abeb3239a", "patch": "@@ -1,3 +1,22 @@\n+2003-03-21  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/Action.java\n+\t(ACCELERATOR_KEY): New constant.\n+\t(ACTION_COMMAND_KEY): Likewise.\n+\t(MNEMONIC_KEY): Likewise.\n+\t* javax/swing/UnsupportedLookAndFeelException.java\n+\t(UnsupportedLookAndFeelException): Must be public.\n+\t* javax/swing/WindowConstants.java\n+\t(EXIT_ON_CLOSE): New constant.\n+\t* javax/swing/text/BadLocationException.java\n+\t(offset): New member variable.\n+\t(BadLocationException): New implementation, documentation added.\n+\t(offsetRequested): New method.\n+\t* javax/swing/text/Caret.java:\n+\tReformated.\n+\t* javax/swing/text/Document.java:\n+\tReformated.\n+\n 2003-03-21  Michael Koch  <konqueror@gmx.de>\n \n \t* java/rmi/activation/Activatable.java"}, {"sha": "c091a261e15ab822ac8595c2b29c8369ece51827", "filename": "libjava/javax/swing/Action.java", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2FAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2FAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAction.java?ref=30b3f142281e886b688b852374172d3abeb3239a", "patch": "@@ -78,6 +78,21 @@ public interface Action extends ActionListener {\n \t */\n \tpublic static final\tString\tSMALL_ICON\t\t\t= \"SmallIcon\";\n \n+\t/**\n+\t * ACCELERATOR_KEY\n+\t */\n+\tpublic static final String ACCELERATOR_KEY = \"AcceleratorKey\";\n+\n+\t/**\n+\t * ACTION_COMMAND_KEY\n+\t */\n+\tpublic static final String ACTION_COMMAND_KEY = \"ActionCommandKey\";\n+\n+\t/**\n+\t * MNEMONIC_KEY\n+\t */\n+\tpublic static final String MNEMONIC_KEY = \"MnemonicKey\";\n+\n \n \t//-------------------------------------------------------------\n \t// Interface: Action ------------------------------------------"}, {"sha": "2e032cd94fc45a31e196e806a1f39685075a5699", "filename": "libjava/javax/swing/UnsupportedLookAndFeelException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2FUnsupportedLookAndFeelException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2FUnsupportedLookAndFeelException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUnsupportedLookAndFeelException.java?ref=30b3f142281e886b688b852374172d3abeb3239a", "patch": "@@ -40,7 +40,7 @@\n \n public class UnsupportedLookAndFeelException extends Exception\n {\n-    UnsupportedLookAndFeelException(String a)\n+    public UnsupportedLookAndFeelException(String a)\n     {\n \tsuper(a);\n     }"}, {"sha": "1eec7f6bb0f23d22b44edb0c9e39e3aab6d907f2", "filename": "libjava/javax/swing/WindowConstants.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2FWindowConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2FWindowConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FWindowConstants.java?ref=30b3f142281e886b688b852374172d3abeb3239a", "patch": "@@ -63,5 +63,10 @@ public interface WindowConstants {\n \t */\n \tpublic static final int DISPOSE_ON_CLOSE = 2;\n \n+\t/**\n+\t * EXIT_ON_CLOSE\n+\t */\n+\tpublic static final int EXIT_ON_CLOSE =3;\n+\n \n } // WindowConstants"}, {"sha": "d62ad5465f903bc5ed0cf3ca1cadec0a84efd7ba", "filename": "libjava/javax/swing/text/BadLocationException.java", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2Ftext%2FBadLocationException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2Ftext%2FBadLocationException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FBadLocationException.java?ref=30b3f142281e886b688b852374172d3abeb3239a", "patch": "@@ -40,7 +40,25 @@\n \n public class BadLocationException extends Exception\n {    \n-    BadLocationException()\n-    {\n-    }\n+  int offset;\n+  \n+  /**\n+   * Constructs a <code>BadLocationException</code>\n+   *\n+   * @param str A string indicating what was wrong with the arguments\n+   * @param offset Offset within the document that was requested &gt;= 0\n+   */\n+  public BadLocationException (String str, int offset)\n+  {\n+    super (str);\n+    this.offset = offset;\n+  }\n+\n+  /**\n+   * Returns the offset into the document that was not legal\n+   */\n+  public int offsetRequested ()\n+  {\n+    return offset;\n+  }\n }"}, {"sha": "f78f24edf1de9bbfbdfd77cd6bf2ebb37a568b7b", "filename": "libjava/javax/swing/text/Caret.java", "status": "modified", "additions": 33, "deletions": 17, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2Ftext%2FCaret.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2Ftext%2FCaret.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FCaret.java?ref=30b3f142281e886b688b852374172d3abeb3239a", "patch": "@@ -42,21 +42,37 @@\n \n public interface Caret\n {\n-    void addChangeListener(ChangeListener l);\n-    void deinstall(JTextComponent c);\n-    int getBlinkRate();\n-    int getDot();\n-    Point getMagicCaretPosition();\n-    int getMark();\n-    void install(JTextComponent c);\n-    boolean isSelectionVisible();\n-    boolean isVisible();\n-    void moveDot(int dot);\n-    void paint(Graphics g);\n-    void removeChangeListener(ChangeListener l);\n-    void setBlinkRate(int rate);\n-    void setDot(int dot);\n-    void setMagicCaretPosition(Point p);\n-    void setSelectionVisible(boolean v);\n-    void setVisible(boolean v);\n+  void addChangeListener(ChangeListener l);\n+  \n+  void deinstall(JTextComponent c);\n+  \n+  int getBlinkRate();\n+  \n+  int getDot();\n+  \n+  Point getMagicCaretPosition();\n+  \n+  int getMark();\n+  \n+  void install(JTextComponent c);\n+  \n+  boolean isSelectionVisible();\n+  \n+  boolean isVisible();\n+  \n+  void moveDot(int dot);\n+  \n+  void paint(Graphics g);\n+  \n+  void removeChangeListener(ChangeListener l);\n+  \n+  void setBlinkRate(int rate);\n+  \n+  void setDot(int dot);\n+  \n+  void setMagicCaretPosition(Point p);\n+  \n+  void setSelectionVisible(boolean v);\n+  \n+  void setVisible(boolean v);\n }"}, {"sha": "fa7b1ce281705c00548cb2ca78e0c482a0003877", "filename": "libjava/javax/swing/text/Document.java", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2Ftext%2FDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30b3f142281e886b688b852374172d3abeb3239a/libjava%2Fjavax%2Fswing%2Ftext%2FDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FDocument.java?ref=30b3f142281e886b688b852374172d3abeb3239a", "patch": "@@ -42,21 +42,25 @@\n \n public interface Document\n { \n-    void addDocumentListener(DocumentListener listener);\n-    void addUndoableEditListener(UndoableEditListener listener);\n-    Position createPosition(int offs);\n-    Element getDefaultRootElement();\n-    Position getEndPosition();\n-    int getLength();\n-    Object getProperty(Object key);\n-    Element[] getRootElements();\n-    Position getStartPosition();\n-    String getText(int offset, int length);\n-    void getText(int offset, int length, Segment txt);\n-    void insertString(int offset, String str, AttributeSet a);\n-    void putProperty(Object key, Object value);\n-    void remove(int offs, int len);\n-    void removeDocumentListener(DocumentListener listener);\n-    void removeUndoableEditListener(UndoableEditListener listener);\n-    void render(Runnable r);\n+  public static final String StreamDescriptionProperty = \"stream\";\n+  \n+  public static final String TitleProperty = \"text\";\n+\n+  void addDocumentListener(DocumentListener listener);\n+  void addUndoableEditListener(UndoableEditListener listener);\n+  Position createPosition(int offs);\n+  Element getDefaultRootElement();\n+  Position getEndPosition();\n+  int getLength();\n+  Object getProperty(Object key);\n+  Element[] getRootElements();\n+  Position getStartPosition();\n+  String getText(int offset, int length);\n+  void getText(int offset, int length, Segment txt);\n+  void insertString(int offset, String str, AttributeSet a);\n+  void putProperty(Object key, Object value);\n+  void remove(int offs, int len);\n+  void removeDocumentListener(DocumentListener listener);\n+  void removeUndoableEditListener(UndoableEditListener listener);\n+  void render(Runnable r);\n }"}]}