{"sha": "6ff7fb95722130e00e6ac16d45b53c3618ea9c7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZmN2ZiOTU3MjIxMzBlMDBlNmFjMTZkNDViNTNjMzYxOGVhOWM3Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "1999-12-15T09:37:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-12-15T09:37:48Z"}, "message": "tree.c (decl_function_context): Handle virtual functions.\n\n        * tree.c (decl_function_context): Handle virtual functions.\n\n        * tlink.c (scan_linker_output): Don't look in demangled name when\n        looking for linker output keywords.\n\n        * dwarfout.c (output_type): We can defer namespace-scope classes.\n\nFrom-SVN: r30950", "tree": {"sha": "0129450039d065d3547631c7a0b4550174dfdcd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0129450039d065d3547631c7a0b4550174dfdcd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c/comments", "author": null, "committer": null, "parents": [{"sha": "04a2ecf7808fe3c8e79141f7dca30eaacc085a8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "b300d613c6d1a98c5afdc70f9dd1f8c2d47ff2a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ff7fb95722130e00e6ac16d45b53c3618ea9c7c", "patch": "@@ -1,3 +1,12 @@\n+1999-12-15  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* tree.c (decl_function_context): Handle virtual functions.\n+\n+\t* tlink.c (scan_linker_output): Don't look in demangled name when\n+\tlooking for linker output keywords.\n+\n+\t* dwarfout.c (output_type): We can defer namespace-scope classes.\n+\n Wed Dec 15 01:23:29 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* regclass.c (record_reg_classes): Update comment for merging"}, {"sha": "cb9e77ff144fe4adc4ecf3e69bfcb11614b84177", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=6ff7fb95722130e00e6ac16d45b53c3618ea9c7c", "patch": "@@ -4448,9 +4448,8 @@ output_type (type, containing_scope)\n \n \tif (TYPE_SIZE (type) == 0\n \t    && (TYPE_CONTEXT (type) == NULL\n-\t\t|| (TREE_CODE_CLASS (TREE_CODE (TYPE_CONTEXT (type))) == 't'\n-\t\t    && TREE_CODE (TYPE_CONTEXT (type)) != FUNCTION_TYPE\n-\t\t    && TREE_CODE (TYPE_CONTEXT (type)) != METHOD_TYPE))\n+\t\t|| AGGREGATE_TYPE_P (TYPE_CONTEXT (type))\n+\t\t|| TREE_CODE (TYPE_CONTEXT (type)) == NAMESPACE_DECL)\n \t    && !finalizing)\n \t  {\n \t    /* We can't do this for function-local types, and we don't need"}, {"sha": "a6130a14c29f502e46fd2c3ed8eadbf2687022f2", "filename": "gcc/tlink.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=6ff7fb95722130e00e6ac16d45b53c3618ea9c7c", "patch": "@@ -638,6 +638,11 @@ scan_linker_output (fname)\n \t  else if (p = index (oldq, '\"'), p)\n \t    p++, q = index (p, '\"');\n \n+\t  /* Don't let the strstr's below see the demangled name; we\n+\t     might get spurious matches.  */\n+\t  if (p)\n+\t    p[-1] = '\\0';\n+\n \t  /* We need to check for certain error keywords here, or we would\n \t     mistakenly use GNU ld's \"In function `foo':\" message.  */\n \t  if (q && (strstr (oldq, \"ndefined\")"}, {"sha": "78ea4cf976a7a9d3d5cedafca27adf9ab6a98a46", "filename": "gcc/tree.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff7fb95722130e00e6ac16d45b53c3618ea9c7c/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6ff7fb95722130e00e6ac16d45b53c3618ea9c7c", "patch": "@@ -4802,6 +4802,15 @@ decl_function_context (decl)\n \n   if (TREE_CODE (decl) == SAVE_EXPR)\n     context = SAVE_EXPR_CONTEXT (decl);\n+  /* C++ virtual functions use DECL_CONTEXT for the class of the vtable\n+     where we look up the function at runtime.  Such functions always take\n+     a first argument of type 'pointer to real context'.\n+\n+     C++ should really be fixed to use DECL_CONTEXT for the real context,\n+     and use something else for the \"virtual context\".  */\n+  else if (TREE_CODE (decl) == FUNCTION_DECL && DECL_VINDEX (decl))\n+    context = TYPE_MAIN_VARIANT\n+      (TREE_TYPE (TREE_VALUE (TYPE_ARG_TYPES (TREE_TYPE (decl)))));\n   else\n     context = DECL_CONTEXT (decl);\n "}]}