{"sha": "a6a5091a56a6f7e7d98643cc14c59313eebf8e6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZhNTA5MWE1NmE2ZjdlN2Q5ODY0M2NjMTRjNTkzMTNlZWJmOGU2Zg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-10-10T14:48:34Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-10-10T14:48:34Z"}, "message": "[C++ PATCH] set_global_binding tweak\n\nhttps://gcc.gnu.org/ml/gcc-patches/2017-10/msg00592.html\n\t* name-lookup.c (set_global_binding): Don't deal with STAT_HACK.\n\nFrom-SVN: r253587", "tree": {"sha": "61c6d1773f8c26315268fd9e5db043f8db60a089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61c6d1773f8c26315268fd9e5db043f8db60a089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2fe1a1b888e204fd0ccc4e9c96b7065344e879aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe1a1b888e204fd0ccc4e9c96b7065344e879aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe1a1b888e204fd0ccc4e9c96b7065344e879aa"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "082327ed48d97ab99fb9ad6d3c9185679486bebe", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a6a5091a56a6f7e7d98643cc14c59313eebf8e6f", "patch": "@@ -1,3 +1,7 @@\n+2017-10-10  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* name-lookup.c (set_global_binding): Don't deal with STAT_HACK.\n+\n 2017-10-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/47791"}, {"sha": "ae30cf96b9118d3de6395621ebd8232e03ec6f1a", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6a5091a56a6f7e7d98643cc14c59313eebf8e6f/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=a6a5091a56a6f7e7d98643cc14c59313eebf8e6f", "patch": "@@ -4858,22 +4858,13 @@ set_global_binding (tree decl)\n   bool subtime = timevar_cond_start (TV_NAME_LOOKUP);\n \n   tree *slot = find_namespace_slot (global_namespace, DECL_NAME (decl), true);\n-  tree old = MAYBE_STAT_DECL (*slot);\n \n-  if (!old)\n-    *slot = decl;\n-  else if (old == decl)\n-    ;\n-  else if (!STAT_HACK_P (*slot)\n-\t   && TREE_CODE (decl) == TYPE_DECL && DECL_ARTIFICIAL (decl))\n-    *slot = stat_hack (old, decl);\n-  else if (!STAT_HACK_P (*slot)\n-\t   && TREE_CODE (old) == TYPE_DECL && DECL_ARTIFICIAL (old))\n-    *slot = stat_hack (decl, old);\n-  else\n-    /* The user's placed something in the implementor's\n-       namespace.  */\n-    diagnose_name_conflict (decl, old);\n+  if (*slot)\n+    /* The user's placed something in the implementor's namespace.  */\n+    diagnose_name_conflict (decl, MAYBE_STAT_DECL (*slot));\n+\n+  /* Force the binding, so compiler internals continue to work.  */\n+  *slot = decl;\n \n   timevar_cond_stop (TV_NAME_LOOKUP, subtime);\n }"}]}