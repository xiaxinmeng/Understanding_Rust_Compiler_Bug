{"sha": "8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRmM2VlOGY3ZDg1ZDA3MDhmM2MzY2E5NmI1NWM5MjMwYzJhZTlmMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-19T11:29:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-19T12:21:42Z"}, "message": "tree-optimization/101505 - properly determine stmt precision for PHIs\n\nLoop vectorization pattern recog fails to walk PHIs when determining\nstmt precisions.  This fails to recognize non-mask uses for bools\nin PHIs and outer loop vectorization.\n\n2021-07-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/101505\n\t* tree-vect-patterns.c (vect_determine_precisions): Walk\n\tPHIs also for loop vectorization.\n\n\t* gcc.dg/vect/pr101505.c: New testcase.", "tree": {"sha": "f00c8a35a0c22853e651aacd0b5128dadd0fd31b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f00c8a35a0c22853e651aacd0b5128dadd0fd31b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f2bc5077debef2b046b6c10d38591ac324ad8b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f2bc5077debef2b046b6c10d38591ac324ad8b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f2bc5077debef2b046b6c10d38591ac324ad8b5"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "e2b8945a5ccf7c535df5c8bfa57df2ecc37fa0dd", "filename": "gcc/testsuite/gcc.dg/vect/pr101505.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr101505.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr101505.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr101505.c?ref=8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O1\" } */\n+\n+int n2;\n+\n+__attribute__ ((simd)) char\n+w7 (void)\n+{\n+  short int xb = n2;\n+  int qp;\n+\n+  for (qp = 0; qp < 2; ++qp)\n+    xb = xb < 1;\n+\n+  return xb;\n+}"}, {"sha": "44f6c9b2bd6efa4777c35bb900d68f2a5c7860cc", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0", "patch": "@@ -5355,6 +5355,13 @@ vect_determine_precisions (vec_info *vinfo)\n       for (unsigned int i = 0; i < nbbs; i++)\n \t{\n \t  basic_block bb = bbs[i];\n+\t  for (auto gsi = gsi_start_phis (bb);\n+\t       !gsi_end_p (gsi); gsi_next (&gsi))\n+\t    {\n+\t      stmt_vec_info stmt_info = vinfo->lookup_stmt (gsi.phi ());\n+\t      if (stmt_info)\n+\t\tvect_determine_mask_precision (vinfo, stmt_info);\n+\t    }\n \t  for (auto si = gsi_start_bb (bb); !gsi_end_p (si); gsi_next (&si))\n \t    if (!is_gimple_debug (gsi_stmt (si)))\n \t      vect_determine_mask_precision\n@@ -5368,6 +5375,13 @@ vect_determine_precisions (vec_info *vinfo)\n \t    if (!is_gimple_debug (gsi_stmt (si)))\n \t      vect_determine_stmt_precisions\n \t\t(vinfo, vinfo->lookup_stmt (gsi_stmt (si)));\n+\t  for (auto gsi = gsi_start_phis (bb);\n+\t       !gsi_end_p (gsi); gsi_next (&gsi))\n+\t    {\n+\t      stmt_vec_info stmt_info = vinfo->lookup_stmt (gsi.phi ());\n+\t      if (stmt_info)\n+\t\tvect_determine_stmt_precisions (vinfo, stmt_info);\n+\t    }\n \t}\n     }\n   else"}]}