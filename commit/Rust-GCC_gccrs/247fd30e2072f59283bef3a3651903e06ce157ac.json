{"sha": "247fd30e2072f59283bef3a3651903e06ce157ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3ZmQzMGUyMDcyZjU5MjgzYmVmM2EzNjUxOTAzZTA2Y2UxNTdhYw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-12-01T17:24:37Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-12-01T17:24:37Z"}, "message": "Add a stride parameter to scop_do_strip_mine.\n\n2010-10-20  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-blocking.c (lst_do_strip_mine_loop): Extra parameter\n\tfor the stride.\n\t(lst_do_strip_mine): Same.\n\t(scop_do_strip_mine): Same.\n\t* graphite-poly.c (apply_poly_transforms): Update call to\n\tscop_do_strip_mine.\n\t* graphite-poly.h (scop_do_strip_mine): Update declaration.\n\nFrom-SVN: r167345", "tree": {"sha": "57e555480f703d40e0f6c9b6a7218f9dfe2b7eba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57e555480f703d40e0f6c9b6a7218f9dfe2b7eba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/247fd30e2072f59283bef3a3651903e06ce157ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247fd30e2072f59283bef3a3651903e06ce157ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247fd30e2072f59283bef3a3651903e06ce157ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247fd30e2072f59283bef3a3651903e06ce157ac/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2254c5d78494bdbeb40e0c955aa8e0cb5d5ab84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2254c5d78494bdbeb40e0c955aa8e0cb5d5ab84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2254c5d78494bdbeb40e0c955aa8e0cb5d5ab84"}], "stats": {"total": 66, "additions": 50, "deletions": 16}, "files": [{"sha": "8e76b893dc4a77d1274f67ecf5b9d7db081c9eb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=247fd30e2072f59283bef3a3651903e06ce157ac", "patch": "@@ -1,3 +1,13 @@\n+2010-12-01  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-blocking.c (lst_do_strip_mine_loop): Extra parameter\n+\tfor the stride.\n+\t(lst_do_strip_mine): Same.\n+\t(scop_do_strip_mine): Same.\n+\t* graphite-poly.c (apply_poly_transforms): Update call to\n+\tscop_do_strip_mine.\n+\t* graphite-poly.h (scop_do_strip_mine): Update declaration.\n+\n 2010-12-01  Jan Hubicka  <jh@suse.cz>\n \n \t* tree.c (build_common_builtin_nodes): Do not initialize"}, {"sha": "a205928e4a2a159838e49cd6f36559666f663be7", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=247fd30e2072f59283bef3a3651903e06ce157ac", "patch": "@@ -1,3 +1,13 @@\n+2010-10-20  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-blocking.c (lst_do_strip_mine_loop): Extra parameter\n+\tfor the stride.\n+\t(lst_do_strip_mine): Same.\n+\t(scop_do_strip_mine): Same.\n+\t* graphite-poly.c (apply_poly_transforms): Update call to\n+\tscop_do_strip_mine.\n+\t* graphite-poly.h (scop_do_strip_mine): Update declaration.\n+\n 2010-09-24  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/45758"}, {"sha": "f263cdee37dc98d724a19ef2b829a4d700c85937", "filename": "gcc/graphite-blocking.c", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2Fgraphite-blocking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2Fgraphite-blocking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-blocking.c?ref=247fd30e2072f59283bef3a3651903e06ce157ac", "patch": "@@ -193,15 +193,14 @@ lst_strip_mine_profitable_p (lst_p lst, int stride)\n   return res;\n }\n \n-/* Strip-mines all the loops of LST that are considered profitable to\n-   strip-mine.  Return true if it did strip-mined some loops.  */\n+/* Strip-mines all the loops of LST with STRIDE.  Return true if it\n+   did strip-mined some loops.  */\n \n static bool\n-lst_do_strip_mine_loop (lst_p lst, int depth)\n+lst_do_strip_mine_loop (lst_p lst, int depth, int stride)\n {\n   int i;\n   lst_p l;\n-  int stride = PARAM_VALUE (PARAM_LOOP_BLOCK_TILE_SIZE);\n   poly_bb_p pbb;\n \n   if (!lst)\n@@ -212,7 +211,7 @@ lst_do_strip_mine_loop (lst_p lst, int depth)\n       bool res = false;\n \n       FOR_EACH_VEC_ELT (lst_p, LST_SEQ (lst), i, l)\n-\tres |= lst_do_strip_mine_loop (l, depth);\n+\tres |= lst_do_strip_mine_loop (l, depth, stride);\n \n       return res;\n     }\n@@ -222,30 +221,45 @@ lst_do_strip_mine_loop (lst_p lst, int depth)\n \t\t\t\t    stride);\n }\n \n-/* Strip-mines all the loops of LST that are considered profitable to\n-   strip-mine.  Return true if it did strip-mined some loops.  */\n+/* Strip-mines all the loops of LST with STRIDE.  When STRIDE is zero,\n+   read the stride from the PARAM_LOOP_BLOCK_TILE_SIZE.  Return true\n+   if it did strip-mined some loops.\n+\n+   Strip mining transforms a loop\n+\n+   | for (i = 0; i < N; i++)\n+   |   S (i);\n+\n+   into the following loop nest:\n+\n+   | for (k = 0; k < N; k += STRIDE)\n+   |   for (j = 0; j < STRIDE; j++)\n+   |     S (i = k + j);\n+*/\n \n static bool\n-lst_do_strip_mine (lst_p lst)\n+lst_do_strip_mine (lst_p lst, int stride)\n {\n   int i;\n   lst_p l;\n   bool res = false;\n-  int stride = PARAM_VALUE (PARAM_LOOP_BLOCK_TILE_SIZE);\n   int depth;\n \n+  if (!stride)\n+    stride = PARAM_VALUE (PARAM_LOOP_BLOCK_TILE_SIZE);\n+\n   if (!lst\n       || !LST_LOOP_P (lst))\n     return false;\n \n   FOR_EACH_VEC_ELT (lst_p, LST_SEQ (lst), i, l)\n-    res |= lst_do_strip_mine (l);\n+    res |= lst_do_strip_mine (l, stride);\n \n   depth = lst_depth (lst);\n   if (depth >= 0\n       && lst_strip_mine_profitable_p (lst, stride))\n     {\n-      res |= lst_do_strip_mine_loop (lst, lst_depth (lst));\n+      res |= lst_do_strip_mine_loop (lst, lst_depth (lst), stride);\n       lst_add_loop_under_loop (lst);\n     }\n \n@@ -256,9 +270,9 @@ lst_do_strip_mine (lst_p lst)\n    have been strip-mined.  */\n \n bool\n-scop_do_strip_mine (scop_p scop)\n+scop_do_strip_mine (scop_p scop, int stride)\n {\n-  return lst_do_strip_mine (SCOP_TRANSFORMED_SCHEDULE (scop));\n+  return lst_do_strip_mine (SCOP_TRANSFORMED_SCHEDULE (scop), stride);\n }\n \n /* Loop blocks all the loops in SCOP.  Returns true when we manage to\n@@ -272,7 +286,7 @@ scop_do_block (scop_p scop)\n \n   store_scattering (scop);\n \n-  strip_mined = lst_do_strip_mine (SCOP_TRANSFORMED_SCHEDULE (scop));\n+  strip_mined = lst_do_strip_mine (SCOP_TRANSFORMED_SCHEDULE (scop), 0);\n   interchanged = scop_do_interchange (scop);\n \n   /* If we don't interchange loops, the strip mine alone will not be"}, {"sha": "4f5a437dd1ed5d8a4b194c9f6ce85f880b71f7af", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=247fd30e2072f59283bef3a3651903e06ce157ac", "patch": "@@ -776,7 +776,7 @@ apply_poly_transforms (scop_p scop)\n   else\n     {\n       if (flag_loop_strip_mine)\n-\ttransform_done |= scop_do_strip_mine (scop);\n+\ttransform_done |= scop_do_strip_mine (scop, 0);\n \n       if (flag_loop_interchange)\n \ttransform_done |= scop_do_interchange (scop);"}, {"sha": "4a2f25cd2270db78b60fb2641dc3ae05fd09c840", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247fd30e2072f59283bef3a3651903e06ce157ac/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=247fd30e2072f59283bef3a3651903e06ce157ac", "patch": "@@ -412,7 +412,7 @@ extern void print_iteration_domains (FILE *, scop_p, int);\n extern void debug_iteration_domain (poly_bb_p, int);\n extern void debug_iteration_domains (scop_p, int);\n extern bool scop_do_interchange (scop_p);\n-extern bool scop_do_strip_mine (scop_p);\n+extern bool scop_do_strip_mine (scop_p, int);\n extern bool scop_do_block (scop_p);\n extern bool flatten_all_loops (scop_p);\n extern void pbb_number_of_iterations_at_time (poly_bb_p, graphite_dim_t, mpz_t);"}]}