{"sha": "c8d1534ec95645e5f2fc4d6374a36517ea996f98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkMTUzNGVjOTU2NDVlNWYyZmM0ZDYzNzRhMzY1MTdlYTk5NmY5OA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-09-21T14:17:07Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-09-21T14:17:07Z"}, "message": "dumpfile.c: fix stray dump_loc output (PR tree-optimization/87309)\n\nIn r262891 I reimplemented this call:\n  dump_printf_loc (MSG_NOTE, loc, \"=== %s ===\\n\", name);\nin dump_begin_scope to use direct calls to dump_loc:\n  if (dump_file)\n    {\n      dump_loc (MSG_NOTE, dump_file, loc.get_location_t ());\n      fprintf (dump_file, \"=== %s ===\\n\", name);\n    }\n\n  if (alt_dump_file)\n   {\n     dump_loc (MSG_NOTE, alt_dump_file, loc.get_location_t ());\n     fprintf (alt_dump_file, \"=== %s ===\\n\", name);\n   }\n\nHowever ::dump_loc doesn't filter with pflags and alt_flags.\n\nThis lead to stray output of the form:\n  test.cpp:1:6: note: test.cpp:1:11: note:\nwhen using -fopt-info with \"optimized\" or \"missed\".\n\nThis patch adds this missing filtering, eliminating the stray partial\nnote output.\n\ngcc/ChangeLog:\n\tPR tree-optimization/87309\n\t* dumpfile.c (dump_context::begin_scope): Filter the dump_loc\n\tcalls with pflags and alt_flags.\n\t(selftest::test_capture_of_dump_calls): Add test of interaction of\n\tMSG_OPTIMIZED_LOCATIONS with AUTO_DUMP_SCOPE.\n\ngcc/testsuite/ChangeLog:\n\tPR tree-optimization/87309\n\t* gcc.dg/pr87309.c: New test.\n\nFrom-SVN: r264481", "tree": {"sha": "682109c0499e9a05bfc0d1b6f5b7ab53c634e5a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/682109c0499e9a05bfc0d1b6f5b7ab53c634e5a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8d1534ec95645e5f2fc4d6374a36517ea996f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d1534ec95645e5f2fc4d6374a36517ea996f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8d1534ec95645e5f2fc4d6374a36517ea996f98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d1534ec95645e5f2fc4d6374a36517ea996f98/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52e18cdfd21c3a9868ee685f26ba95836945a928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e18cdfd21c3a9868ee685f26ba95836945a928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52e18cdfd21c3a9868ee685f26ba95836945a928"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "667ecca4ed0c32cacd27c1d4865c4f9331dcc564", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d1534ec95645e5f2fc4d6374a36517ea996f98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d1534ec95645e5f2fc4d6374a36517ea996f98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8d1534ec95645e5f2fc4d6374a36517ea996f98", "patch": "@@ -1,3 +1,11 @@\n+2018-09-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR tree-optimization/87309\n+\t* dumpfile.c (dump_context::begin_scope): Filter the dump_loc\n+\tcalls with pflags and alt_flags.\n+\t(selftest::test_capture_of_dump_calls): Add test of interaction of\n+\tMSG_OPTIMIZED_LOCATIONS with AUTO_DUMP_SCOPE.\n+\n 2018-09-21  Olivier Hainque  <hainque@adacore.com>\n \n \t* config.gcc: Factorize and comment inclusion of vxworks-dummy.h."}, {"sha": "5655e460a5ab4b47d3bada18efd26b4b2834586b", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d1534ec95645e5f2fc4d6374a36517ea996f98/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d1534ec95645e5f2fc4d6374a36517ea996f98/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=c8d1534ec95645e5f2fc4d6374a36517ea996f98", "patch": "@@ -1048,14 +1048,14 @@ dump_context::get_scope_depth () const\n void\n dump_context::begin_scope (const char *name, const dump_location_t &loc)\n {\n-  if (dump_file)\n+  if (dump_file && (MSG_NOTE & pflags))\n     ::dump_loc (MSG_NOTE, dump_file, loc.get_location_t ());\n \n-  if (alt_dump_file)\n+  if (alt_dump_file && (MSG_NOTE & alt_flags))\n     ::dump_loc (MSG_NOTE, alt_dump_file, loc.get_location_t ());\n \n   /* Support for temp_dump_context in selftests.  */\n-  if (m_test_pp)\n+  if (m_test_pp && (MSG_NOTE & m_test_pp_flags))\n     ::dump_loc (MSG_NOTE, m_test_pp, loc.get_location_t ());\n \n   pretty_printer pp;\n@@ -2304,6 +2304,29 @@ test_capture_of_dump_calls (const line_table_case &case_)\n \t\t OPTINFO_KIND_FAILURE);\n     }\n   }\n+\n+  /* Verify that MSG_* affect AUTO_DUMP_SCOPE and the dump calls.  */\n+  {\n+    temp_dump_context tmp (false, MSG_OPTIMIZED_LOCATIONS);\n+    dump_printf_loc (MSG_NOTE, stmt, \"msg 1\\n\");\n+    {\n+      AUTO_DUMP_SCOPE (\"outer scope\", stmt);\n+      dump_printf_loc (MSG_NOTE, stmt, \"msg 2\\n\");\n+      {\n+\tAUTO_DUMP_SCOPE (\"middle scope\", stmt);\n+\tdump_printf_loc (MSG_NOTE, stmt, \"msg 3\\n\");\n+\t{\n+\t  AUTO_DUMP_SCOPE (\"inner scope\", stmt);\n+\t  dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, stmt, \"msg 4\\n\");\n+\t}\n+\tdump_printf_loc (MSG_NOTE, stmt, \"msg 5\\n\");\n+      }\n+      dump_printf_loc (MSG_NOTE, stmt, \"msg 6\\n\");\n+    }\n+    dump_printf_loc (MSG_NOTE, stmt, \"msg 7\\n\");\n+\n+    ASSERT_DUMPED_TEXT_EQ (tmp, \"test.txt:5:10: note:    msg 4\\n\");\n+  }\n }\n \n /* Run all of the selftests within this file.  */"}, {"sha": "b861eabc0e812e8ef1bfcb16dab25ecd076511d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d1534ec95645e5f2fc4d6374a36517ea996f98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d1534ec95645e5f2fc4d6374a36517ea996f98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8d1534ec95645e5f2fc4d6374a36517ea996f98", "patch": "@@ -1,3 +1,8 @@\n+2018-09-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR tree-optimization/87309\n+\t* gcc.dg/pr87309.c: New test.\n+\n 2018-09-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-c++-common/dump-ada-spec-14.c: New test."}, {"sha": "8bd5a4464e05a486af08b6df62022489b253152e", "filename": "gcc/testsuite/gcc.dg/pr87309.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d1534ec95645e5f2fc4d6374a36517ea996f98/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87309.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d1534ec95645e5f2fc4d6374a36517ea996f98/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87309.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87309.c?ref=c8d1534ec95645e5f2fc4d6374a36517ea996f98", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fopt-info-vec-optimized -O3\" } */\n+\n+void a() {} /* { dg-bogus \"note\" } */"}]}